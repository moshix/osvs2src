         TITLE 'ISDAAPR0 - ALTERNATE PATH RETRY ACCUMULATOR            *00001000
                        '                                               00002000
ISDAAPR0 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'ISDAAPR0  78.044'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         ISDAGSPC R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         MVC   @PC00001(4),0(@01)                                  0001 00022000
*                                                                  0019 00023000
*   /*****************************************************************/ 00024000
*   /*                                                               */ 00025000
*   /* INITIALYZE SECTION                                            */ 00026000
*   /*                                                               */ 00027000
*   /*****************************************************************/ 00028000
*                                                                  0019 00029000
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO ISDACVT    0019 00030000
*                                                            @ZD00192*/ 00031000
         L     @07,@PC00001                                        0019 00032000
         L     CVTPTR,WORKPTR(,@07)                                0019 00033000
*   RETCODE=0;                      /* ZERO RETURN CODE      @ZD00192*/ 00034000
         SLR   RETCODE,RETCODE                                     0020 00035000
*   LPARMPTR=PARMPTR;               /* SET LOCAL PTR TO ISDAPRMS   0021 00036000
*                                                            @ZD00192*/ 00037000
         MVC   LPARMPTR(4),PARMPTR(CVTPTR)                         0021 00038000
*   LOGPTR=DATAPTR;                 /* SET LOCAL PTR TO OBRMDR     0022 00039000
*                                                            @ZD00192*/ 00040000
         L     LOGPTR,DATAPTR(,CVTPTR)                             0022 00041000
*   SENSEPTR=SDATAPTR;              /* SET LOCAL PTR TO ISDAMSCS   0023 00042000
*                                                            @ZD00192*/ 00043000
         L     SENSEPTR,SDATAPTR(,CVTPTR)                          0023 00044000
*   IF APR00PTR=0 THEN              /* ON FIRST CALL         @ZD00192*/ 00045000
*                                                                  0024 00046000
         ICM   @07,15,APR00PTR(CVTPTR)                             0024 00047000
         BNZ   @RF00024                                            0024 00048000
*     /***************************************************************/ 00049000
*     /*                                                             */ 00050000
*     /* GET CORE FOR APRWORK                                        */ 00051000
*     /*                                                             */ 00052000
*     /***************************************************************/ 00053000
*                                                                  0025 00054000
*     DO;                           /* GET CORE              @ZD00192*/ 00055000
*       APRWKPTR=0;                 /* INITIALYZE APRWKPTR   @ZD00192*/ 00056000
         SLR   APRWKPTR,APRWKPTR                                   0026 00057000
*       GET0PTR=0;                  /* INITIALYZE GET0PTR    @ZD00192*/ 00058000
         SLR   GET0PTR,GET0PTR                                     0027 00059000
*       CALL GETWORK;               /* CALL GET CORE PROC    @ZD00192*/ 00060000
         BAL   @14,GETWORK                                         0028 00061000
*     END;                          /* END GETMAIN FOR WORKAREA AND     00062000
*                                      ACCUMULATOR           @ZD00192*/ 00063000
*   ELSE                            /* ON ALL OTHER CALLS    @ZD00192*/ 00064000
*                                                                  0030 00065000
*     /***************************************************************/ 00066000
*     /*                                                             */ 00067000
*     /* NOT FIRST CALL, SET UP LOCAL POINTERS                       */ 00068000
*     /*                                                             */ 00069000
*     /***************************************************************/ 00070000
*                                                                  0030 00071000
*     APRWKPTR=APR00PTR;            /* SET ADDR TO WORKAREA  @ZD00192*/ 00072000
         B     @RC00024                                            0030 00073000
@RF00024 L     APRWKPTR,APR00PTR(,CVTPTR)                          0030 00074000
*   IF RETCODE=0 THEN               /* GOT WORKAREA          @ZD00192*/ 00075000
*                                                                  0031 00076000
@RC00024 LTR   RETCODE,RETCODE                                     0031 00077000
         BNZ   @RF00031                                            0031 00078000
*     /***************************************************************/ 00079000
*     /*                                                             */ 00080000
*     /* ANALYZE INPUT RECORD AND SET TYPE CODE                      */ 00081000
*     /*                                                             */ 00082000
*     /***************************************************************/ 00083000
*                                                                  0032 00084000
*     CALL GETCODE;                 /* ANALYZE RECORD        @ZD00192*/ 00085000
         BAL   @14,GETCODE                                         0032 00086000
*   ELSE                                                           0033 00087000
*     ;                             /* BAD RETURN FROM GETWORK     0033 00088000
*                                                            @ZD00192*/ 00089000
@RF00031 DS    0H                                                  0034 00090000
*   IF RETCODE=0 THEN               /* CONTINUE              @ZD00192*/ 00091000
*                                                                  0034 00092000
         LTR   RETCODE,RETCODE                                     0034 00093000
         BNZ   @RF00034                                            0034 00094000
*     /***************************************************************/ 00095000
*     /*                                                             */ 00096000
*     /* ADD RECORD TO ACCUMULATOR OR UPDATE IF SUU ONLY             */ 00097000
*     /*                                                             */ 00098000
*     /***************************************************************/ 00099000
*                                                                  0035 00100000
*     CALL ADDREC;                  /* YES, ADD THE RECORD   @ZD00192*/ 00101000
         BAL   @14,ADDREC                                          0035 00102000
*   ELSE                                                           0036 00103000
*     ;                             /* NO, DO NOT ADD IT     @ZD00192*/ 00104000
@RF00034 DS    0H                                                  0037 00105000
*   IF RETCODE=4 THEN               /* NO CORE SITUATION     @ZD00192*/ 00106000
*                                                                  0037 00107000
         CH    RETCODE,@CH00104                                    0037 00108000
         BNE   @RF00037                                            0037 00109000
*     /***************************************************************/ 00110000
*     /*                                                             */ 00111000
*     /* FREE ALL ACCUMULATORS AND THE WORK AREA                     */ 00112000
*     /*                                                             */ 00113000
*     /***************************************************************/ 00114000
*                                                                  0038 00115000
*     CALL FREECORE;                /* YES, FREE ALL CORE    @ZD00192*/ 00116000
         BAL   @14,FREECORE                                        0038 00117000
*   ELSE                                                           0039 00118000
*     IF RETCODE<4 THEN             /* SPECIAL INTERNAL RETCODE    0039 00119000
*                                                            @ZD00192*/ 00120000
         B     @RC00037                                            0039 00121000
@RF00037 CH    RETCODE,@CH00104                                    0039 00122000
         BNL   @RF00039                                            0039 00123000
*       RETCODE=0;                  /* YES, RESET RETCODE    @ZD00192*/ 00124000
         SLR   RETCODE,RETCODE                                     0040 00125000
*     ELSE                                                         0041 00126000
*       ;                           /* NO, MUST BE VALID BAD RETCODE    00127000
*                                                            @ZD00192*/ 00128000
@RF00039 DS    0H                                                  0042 00129000
*   RETURN CODE(RETCODE);           /* RETURN TO ISDASDA0    @ZD00192*/ 00130000
@RC00037 L     @13,4(,@13)                                         0042 00131000
         L     @00,@SIZDATD                                        0042 00132000
         LR    @01,@11                                             0042 00133000
         ISDAFSPC R,LV=(0),A=(1)                                        00134000
         LR    @15,@06                                             0042 00135000
         L     @14,12(,@13)                                        0042 00136000
         LM    @00,@12,20(@13)                                     0042 00137000
         BR    @14                                                 0042 00138000
*                                                                  0043 00139000
*   /*****************************************************************/ 00140000
*   /*                                                               */ 00141000
*   /* GETWORK - CALL ISDAGET1 FOR SMALL ISDAAPR WORK AREA           */ 00142000
*   /*                                                               */ 00143000
*   /*****************************************************************/ 00144000
*                                                                  0043 00145000
*GETWORK:                                                          0043 00146000
*   PROC OPTIONS(SAVE(14));         /* PROC TO GET WORKAREA  @ZD00192*/ 00147000
@EL00001 L     @13,4(,@13)                                         0043 00148000
@EF00001 L     @00,@SIZDATD                                        0043 00149000
         LR    @01,@11                                             0043 00150000
         ISDAFSPC R,LV=(0),A=(1)                                        00151000
@ER00001 LM    @14,@12,12(@13)                                     0043 00152000
         BR    @14                                                 0043 00153000
GETWORK  ST    @14,@SA00002                                        0043 00154000
*   CORELEN=LENGTH(APRWORK);        /* LENGTH OF APRWORK     @ZD00192*/ 00155000
         MVC   CORELEN(3,CVTPTR),@CF00451+1                        0044 00156000
*   SPNO=APRSPNO;                   /* SET MY SUBPOOL NUMBER @ZD00192*/ 00157000
         MVC   SPNO(1,CVTPTR),APRSPNO                              0045 00158000
*   RFY                                                            0046 00159000
*     R1 RSTD;                      /*                       @ZD00192*/ 00160000
*   R1=ADDR(WORKCALL);              /* R1 -> ADDR(WORKPTR)   @ZD00192*/ 00161000
         LA    R1,WORKCALL(,CVTPTR)                                0047 00162000
*   CALL ISDAGET1;                  /* GET APRWORK WITHOUT HEADER  0048 00163000
*                                                            @ZD00192*/ 00164000
         L     @15,@CV00398                                        0048 00165000
         BALR  @14,@15                                             0048 00166000
*   RFY                                                            0049 00167000
*     R15 RSTD;                     /*                       @ZD00192*/ 00168000
*   RETCODE=R15;                    /* SAVE RETURN CODE      @ZD00192*/ 00169000
         LR    RETCODE,R15                                         0050 00170000
*   RFY                                                            0051 00171000
*    (R1,                                                          0051 00172000
*     R15) UNRSTD;                  /*                       @ZD00192*/ 00173000
*   IF RETCODE=0 THEN               /* WAS GETMAIN DONE      @ZD00192*/ 00174000
         LTR   RETCODE,RETCODE                                     0052 00175000
         BNZ   @RF00052                                            0052 00176000
*     DO;                           /* YES, SET ALL ADDRESS POINTERS    00177000
*                                                            @ZD00192*/ 00178000
*       APR00PTR=COREADDR;          /* STORE WORKAREA ADDRESS IN   0054 00179000
*                                      ISDACVT               @ZD00192*/ 00180000
         L     @07,COREADDR(,CVTPTR)                               0054 00181000
         ST    @07,APR00PTR(,CVTPTR)                               0054 00182000
*       APRWKPTR=COREADDR;          /* SET ADDR TO WORKAREA  @ZD00192*/ 00183000
         LR    APRWKPTR,@07                                        0055 00184000
*       APRWORK=''B;                /* ZERO ACCUMULATOR      @ZD00192*/ 00185000
         XC    APRWORK(124,APRWKPTR),APRWORK(APRWKPTR)             0056 00186000
* /*    CALL TRACEWRK                  DUMP WORK AREA IF REQ @ZD00192*/ 00187000
*     END;                          /* END INITIALIZE APRWORK@ZD00192*/ 00188000
*   ELSE                                                           0058 00189000
*     ;                             /* BAD RETURN FROM ISDAGET1    0058 00190000
*                                                            @ZD00192*/ 00191000
@RF00052 DS    0H                                                  0059 00192000
*   END GETWORK;                    /* END GETWORK PROC      @ZD00192*/ 00193000
@EL00002 DS    0H                                                  0059 00194000
@EF00002 DS    0H                                                  0059 00195000
@ER00002 L     @14,@SA00002                                        0059 00196000
         BR    @14                                                 0059 00197000
*                                                                  0060 00198000
*   /*****************************************************************/ 00199000
*   /*                                                               */ 00200000
*   /* GETCODE - PROC TO ANALYZE INPUT RECORD AND SET TYPE CODE      */ 00201000
*   /*                                                               */ 00202000
*   /*****************************************************************/ 00203000
*                                                                  0060 00204000
*GETCODE:                                                          0060 00205000
*   PROC OPTIONS(SAVE(14));         /* PROC TO SET TYPE CODE @ZD00192*/ 00206000
GETCODE  ST    @14,12(,@13)                                        0060 00207000
*   TYPECODE=TFF;                   /* INITIALIZE TYPE CODE  @ZD00192*/ 00208000
         MVI   TYPECODE(APRWKPTR),X'FF'                            0061 00209000
*   IF INDEVTYP='S' THEN            /* MSC RECORD            @ZD00192*/ 00210000
         L     @07,SDA00PTR(,CVTPTR)                               0062 00211000
         CLI   INDEVTYP(@07),C'S'                                  0062 00212000
         BNE   @RF00062                                            0062 00213000
*     IF FORMATNO(1)='1'B THEN      /* MSC FORMAT 0          @ZD00192*/ 00214000
*                                                                  0063 00215000
         TM    FORMATNO(SENSEPTR),B'10000000'                      0063 00216000
         BNO   @RF00063                                            0063 00217000
*       /*************************************************************/ 00218000
*       /*                                                           */ 00219000
*       /* FORMAT 0                                                  */ 00220000
*       /*                                                           */ 00221000
*       /*************************************************************/ 00222000
*                                                                  0064 00223000
*       IF SUBFMTMG=T00&SSIDFLAG(2)='1'B THEN/* MSG CODE 00 WITH SUU    00224000
*                                      ON                    @ZD00192*/ 00225000
         CLI   SUBFMTMG(SENSEPTR),X'00'                            0064 00226000
         BNE   @RF00064                                            0064 00227000
         TM    SSIDFLAG(SENSEPTR),B'01000000'                      0064 00228000
         BNO   @RF00064                                            0064 00229000
*         TYPECODE=T00;             /* YES, SET CODE 00      @ZD00192*/ 00230000
         MVI   TYPECODE(APRWKPTR),X'00'                            0065 00231000
*       ELSE                        /* CHECK 0680 AND SUU    @ZA28897*/ 00232000
*         IF SUBFMTMG=T06 THEN      /* MESSAGE CODE 06       @ZA28897*/ 00233000
         B     @RC00064                                            0066 00234000
@RF00064 CLI   SUBFMTMG(SENSEPTR),X'06'                            0066 00235000
         BNE   @RF00066                                            0066 00236000
*           IF TERMCOD0='80'X THEN  /* TERM CODE 80          @ZA28897*/ 00237000
         CLI   TERMCOD0(SENSEPTR),X'80'                            0067 00238000
         BNE   @RF00067                                            0067 00239000
*             TYPECODE=T06;         /* 0680, SET CODE 06     @ZA28897*/ 00240000
         MVI   TYPECODE(APRWKPTR),X'06'                            0068 00241000
*           ELSE                    /* NOT CODE 80           @ZA28897*/ 00242000
*             IF SSIDFLAG(2)='1'B THEN /* CODE 06 WITH SUU   @ZA28897*/ 00243000
         B     @RC00067                                            0069 00244000
@RF00067 TM    SSIDFLAG(SENSEPTR),B'01000000'                      0069 00245000
         BNO   @RF00069                                            0069 00246000
*               TYPECODE=TF6;       /* SET CODE F6           @ZA28897*/ 00247000
         MVI   TYPECODE(APRWKPTR),X'F6'                            0070 00248000
*             ELSE;                 /* NOT SUU OR 0680       @ZA28897*/ 00249000
@RF00069 DS    0H                                                  0072 00250000
*         ELSE                      /* CHECK 07              @ZD00192*/ 00251000
*           IF SUBFMTMG=T07 THEN    /* MSG CODE 07           @ZD00192*/ 00252000
         B     @RC00066                                            0072 00253000
@RF00066 CLI   SUBFMTMG(SENSEPTR),X'07'                            0072 00254000
         BNE   @RF00072                                            0072 00255000
*             IF TERMCOD0='00'X THEN/* NOT MEDIA FAILURE     @ZD00192*/ 00256000
         CLI   TERMCOD0(SENSEPTR),X'00'                            0073 00257000
         BNE   @RF00073                                            0073 00258000
*               TYPECODE=T07;       /* SET END APR CODE 07   @ZD00192*/ 00259000
         MVI   TYPECODE(APRWKPTR),X'07'                            0074 00260000
*             ELSE                  /* 07 WITH TERM CODE NOT ZERO  0075 00261000
*                                                            @ZD00192*/ 00262000
*               TYPECODE=TF7;       /* SET MEDIA FAILURE CODE F7   0075 00263000
*                                                            @ZD00192*/ 00264000
         B     @RC00073                                            0075 00265000
@RF00073 MVI   TYPECODE(APRWKPTR),X'F7'                            0075 00266000
*           ELSE                    /* CHECK 09              @ZD00192*/ 00267000
*             IF SUBFMTMG=T09 THEN  /* MSG CODE 09           @ZD00192*/ 00268000
         B     @RC00072                                            0076 00269000
@RF00072 CLI   SUBFMTMG(SENSEPTR),X'09'                            0076 00270000
         BNE   @RF00076                                            0076 00271000
*               IF SSIDFLAG(2)='1'B THEN /* SUU              @ZA29141*/ 00272000
         TM    SSIDFLAG(SENSEPTR),B'01000000'                      0077 00273000
         BNO   @RF00077                                            0077 00274000
*                 TYPECODE=TF9;     /* YES, SET CODE F9      @ZA29141*/ 00275000
         MVI   TYPECODE(APRWKPTR),X'F9'                            0078 00276000
*               ELSE                /* NO, NOT SUU           @ZA29141*/ 00277000
*                 TYPECODE=T09;     /* YES, SET CODE 09      @ZA29141*/ 00278000
         B     @RC00077                                            0079 00279000
@RF00077 MVI   TYPECODE(APRWKPTR),X'09'                            0079 00280000
*             ELSE                  /* CHECK 08              @ZM31121*/ 00281000
*               IF SUBFMTMG=T08 THEN /* MSG CODE 08          @ZM31121*/ 00282000
         B     @RC00076                                            0080 00283000
@RF00076 CLI   SUBFMTMG(SENSEPTR),X'08'                            0080 00284000
         BNE   @RF00080                                            0080 00285000
*                 TYPECODE=T08;     /* YES, SET CODE 08      @ZM31121*/ 00286000
         MVI   TYPECODE(APRWKPTR),X'08'                            0081 00287000
*               ELSE                /* NOT CODE 08           @ZA28897*/ 00288000
*                 IF SUBFMTMG='0A'X THEN /* MSG CODE 0A      @ZA28897*/ 00289000
         B     @RC00080                                            0082 00290000
@RF00080 CLI   SUBFMTMG(SENSEPTR),X'0A'                            0082 00291000
         BNE   @RF00082                                            0082 00292000
*                   TYPECODE=T06;   /* SET CODE 06           @ZA28897*/ 00293000
         MVI   TYPECODE(APRWKPTR),X'06'                            0083 00294000
*                 ELSE;             /* NOT 00,06,07,08,09,0A @ZA28897*/ 00295000
@RF00082 DS    0H                                                  0085 00296000
*     ELSE                          /* CHECK FORMAT 1 AND 2  @ZD00192*/ 00297000
*       IF FORMATNO(2)='1'B|FORMATNO(3)='1'B THEN/* FORMAT 1 OR 2  0085 00298000
*                                                            @ZD00192*/ 00299000
*                                                                  0085 00300000
         B     @RC00063                                            0085 00301000
@RF00063 TM    FORMATNO(SENSEPTR),B'01100000'                      0085 00302000
         BZ    @RF00085                                            0085 00303000
*         /***********************************************************/ 00304000
*         /*                                                         */ 00305000
*         /* FORMAT 1 AND FORMAT 2                                   */ 00306000
*         /*                                                         */ 00307000
*         /***********************************************************/ 00308000
*                                                                  0086 00309000
*         IF STATUS(3)='1'B|STATUS(4)='1'B THEN/* BUS OUT OR EQC   0086 00310000
*                                      CHECK                 @ZD00192*/ 00311000
         TM    STATUS(SENSEPTR),B'00110000'                        0086 00312000
         BZ    @RF00086                                            0086 00313000
*           TYPECODE=T20;           /* YES, SET MSC UNUSABLE @ZD00192*/ 00314000
         MVI   TYPECODE(APRWKPTR),X'20'                            0087 00315000
*         ELSE                      /* NO, NOT MSC FAILURE   @ZA00694*/ 00316000
*           IF SSIDFLAG(2)='1'B THEN /* SUU BIT ON           @ZA00694*/ 00317000
         B     @RC00086                                            0088 00318000
@RF00086 TM    SSIDFLAG(SENSEPTR),B'01000000'                      0088 00319000
         BNO   @RF00088                                            0088 00320000
*             TYPECODE=T10;         /* YES, SUU ON SA OR CS  @ZA00694*/ 00321000
         MVI   TYPECODE(APRWKPTR),X'10'                            0089 00322000
*           ELSE;                   /* NOT PERM OR SUU       @ZA00694*/ 00323000
@RF00088 DS    0H                                                  0091 00324000
*       ELSE                        /* CHECK FORMAT 3        @ZD00192*/ 00325000
*         IF FORMATNO(4)='1'B THEN  /* FORMAT 3              @ZD00192*/ 00326000
*                                                                  0091 00327000
         B     @RC00085                                            0091 00328000
@RF00085 TM    FORMATNO(SENSEPTR),B'00010000'                      0091 00329000
         BNO   @RF00091                                            0091 00330000
*           /*********************************************************/ 00331000
*           /*                                                       */ 00332000
*           /* FORMAT 3                                              */ 00333000
*           /*                                                       */ 00334000
*           /*********************************************************/ 00335000
*                                                                  0092 00336000
*           IF STATUS(8)='0'B|SSIDFLAG(2)='1'B THEN/* ENVIRONMENTAL     00337000
*                              DATA OFF OR UNIT UNUSABLE ON  @ZD00192*/ 00338000
         TM    STATUS(SENSEPTR),B'00000001'                        0092 00339000
         BZ    @RT00092                                            0092 00340000
         TM    SSIDFLAG(SENSEPTR),B'01000000'                      0092 00341000
         BNO   @RF00092                                            0092 00342000
@RT00092 DS    0H                                                  0093 00343000
*             TYPECODE=T30;         /* YES, SET CS ERROR     @ZD00192*/ 00344000
         MVI   TYPECODE(APRWKPTR),X'30'                            0093 00345000
*           ELSE                    /* CHECK RECONFIGURE     @ZD00192*/ 00346000
*             IF SUBSTAT5(2)='1'B THEN/* RECONFIGURE         @ZD00192*/ 00347000
         B     @RC00092                                            0094 00348000
@RF00092 TM    SUBSTAT5(SENSEPTR),B'01000000'                      0094 00349000
         BNO   @RF00094                                            0094 00350000
*               TYPECODE=T31;       /* YES, SET CODE 31      @ZD00192*/ 00351000
         MVI   TYPECODE(APRWKPTR),X'31'                            0095 00352000
*             ELSE                                                 0096 00353000
*               ;                   /* NO, NOT PERM ERROR OR @ZD00192   00354000
*                                      RECONFIGURE           @ZD00192*/ 00355000
@RF00094 DS    0H                                                  0097 00356000
*         ELSE                      /* CHECK FORMAT 4        @ZD00192*/ 00357000
*           IF FORMATNO(5)='1'B THEN/* FORMAT 4              @ZD00192*/ 00358000
*                                                                  0097 00359000
         B     @RC00091                                            0097 00360000
@RF00091 TM    FORMATNO(SENSEPTR),B'00001000'                      0097 00361000
         BNO   @RF00097                                            0097 00362000
*             /*******************************************************/ 00363000
*             /*                                                     */ 00364000
*             /* FORMAT 4                                            */ 00365000
*             /*                                                     */ 00366000
*             /*******************************************************/ 00367000
*                                                                  0098 00368000
*             IF STATUS(8)='0'B|SSIDFLAG(2)='1'B THEN/* ENVIRONMENTAL   00369000
*                              DATA OFF OR UNIT UNUSABLE ON  @ZD00192*/ 00370000
         TM    STATUS(SENSEPTR),B'00000001'                        0098 00371000
         BZ    @RT00098                                            0098 00372000
         TM    SSIDFLAG(SENSEPTR),B'01000000'                      0098 00373000
         BNO   @RF00098                                            0098 00374000
@RT00098 DS    0H                                                  0099 00375000
*               TYPECODE=T40;       /* YES, SET UNIT UNUSABLE@ZD00192*/ 00376000
         MVI   TYPECODE(APRWKPTR),X'40'                            0099 00377000
*             ELSE                                                 0100 00378000
*               IF SARETRY(7)='1'B THEN/* FIRST APR RECORD   @ZD00192*/ 00379000
         B     @RC00098                                            0100 00380000
@RF00098 TM    SARETRY(SENSEPTR),B'00000010'                       0100 00381000
         BNO   @RF00100                                            0100 00382000
*                 TYPECODE=T41;     /* YES, SET START APR    @ZD00192*/ 00383000
         MVI   TYPECODE(APRWKPTR),X'41'                            0101 00384000
*               ELSE                                               0102 00385000
*                 IF SARETRY(1:4)^='0000'B THEN/* APR RECORD @ZD00192*/ 00386000
         B     @RC00100                                            0102 00387000
@RF00100 TM    SARETRY(SENSEPTR),B'11110000'                       0102 00388000
         BZ    @RF00102                                            0102 00389000
*                   TYPECODE=T42;   /* YES, SET IN APR SEQUENCE    0103 00390000
*                                                            @ZD00192*/ 00391000
         MVI   TYPECODE(APRWKPTR),X'42'                            0103 00392000
*                 ELSE                                             0104 00393000
*                   ;               /* NO, MUST BE SA ENVIRONMENTAL     00394000
*                                      DATA                  @ZD00192*/ 00395000
@RF00102 DS    0H                                                  0105 00396000
*           ELSE                    /* CHECK FORMAT 5        @ZD00192*/ 00397000
*             IF FORMATNO(6)='1'B THEN/* FORMAT 5            @ZD00192*/ 00398000
*                                                                  0105 00399000
         B     @RC00097                                            0105 00400000
@RF00097 TM    FORMATNO(SENSEPTR),B'00000100'                      0105 00401000
         BNO   @RF00105                                            0105 00402000
*               /*****************************************************/ 00403000
*               /*                                                   */ 00404000
*               /* FORMAT 5                                          */ 00405000
*               /*                                                   */ 00406000
*               /*****************************************************/ 00407000
*                                                                  0106 00408000
*               IF STATUS(8)='0'B|SSIDFLAG(2)='1'B THEN/*    @ZD00192   00409000
*                                      ENVIRONMENTAL DATA OFF OR UNIT   00410000
*                                      UNUSABLE ON           @ZD00192*/ 00411000
         TM    STATUS(SENSEPTR),B'00000001'                        0106 00412000
         BZ    @RT00106                                            0106 00413000
         TM    SSIDFLAG(SENSEPTR),B'01000000'                      0106 00414000
         BNO   @RF00106                                            0106 00415000
@RT00106 DS    0H                                                  0107 00416000
*                 TYPECODE=T50;     /* YES, SET 3330 UNIT UNUSABLE 0107 00417000
*                                                            @ZD00192*/ 00418000
         MVI   TYPECODE(APRWKPTR),X'50'                            0107 00419000
*               ELSE                                               0108 00420000
*                 ;                 /* NO, NOT PERM ERROR ON TABLE 0108 00421000
*                                      PACK                  @ZD00192*/ 00422000
@RF00106 DS    0H                                                  0109 00423000
*             ELSE                  /* NO, RECORD NOT VALID MSC SENSE   00424000
*                                                            @ZD00192*/ 00425000
*               RETCODE=8;          /* SET RECORD REJECT RETURN CODE    00426000
*                                                            @ZD00192*/ 00427000
*                                                                  0109 00428000
         B     @RC00105                                            0109 00429000
@RF00105 LA    RETCODE,8                                           0109 00430000
*   /*****************************************************************/ 00431000
*   /*                                                               */ 00432000
*   /* IF APR NOT REQUESTED, DO NOT SAVE CODES 07, 08, 09, 41, OR 42 */ 00433000
*   /*                                                               */ 00434000
*   /*****************************************************************/ 00435000
*                                                                  0110 00436000
*   IF CAPRSUU(8)='0'B THEN         /* APR NOT REQUESTED     @ZD00192*/ 00437000
@RC00105 DS    0H                                                  0110 00438000
@RC00097 DS    0H                                                  0110 00439000
@RC00091 DS    0H                                                  0110 00440000
@RC00085 DS    0H                                                  0110 00441000
@RC00063 DS    0H                                                  0110 00442000
@RF00062 L     @07,LPARMPTR                                        0110 00443000
         TM    CAPRSUU(@07),B'00000001'                            0110 00444000
         BNZ   @RF00110                                            0110 00445000
*     IF TYPECODE=T07|TYPECODE=T09 THEN/* NOT MEDIA FAILURE  @ZD00192*/ 00446000
         CLI   TYPECODE(APRWKPTR),X'07'                            0111 00447000
         BE    @RT00111                                            0111 00448000
         CLI   TYPECODE(APRWKPTR),X'09'                            0111 00449000
         BNE   @RF00111                                            0111 00450000
@RT00111 DS    0H                                                  0112 00451000
*       TYPECODE=TFF;               /* YES, DO NOT USE THIS RECORD 0112 00452000
*                                                            @ZD00192*/ 00453000
         MVI   TYPECODE(APRWKPTR),X'FF'                            0112 00454000
*     ELSE                                                         0113 00455000
*       IF TYPECODE=T41|TYPECODE=T42 THEN/* NOT UNIT UNUSABLE@ZD00192*/ 00456000
         B     @RC00111                                            0113 00457000
@RF00111 CLI   TYPECODE(APRWKPTR),X'41'                            0113 00458000
         BE    @RT00113                                            0113 00459000
         CLI   TYPECODE(APRWKPTR),X'42'                            0113 00460000
         BNE   @RF00113                                            0113 00461000
@RT00113 DS    0H                                                  0114 00462000
*         TYPECODE=TFF;             /* YES, DO NOT USE RECORD@ZD00192*/ 00463000
         MVI   TYPECODE(APRWKPTR),X'FF'                            0114 00464000
*       ELSE                                                       0115 00465000
*         IF TYPECODE=T08 THEN      /* 08 IS FOLLOWED BY F7  @ZM31121*/ 00466000
         B     @RC00113                                            0115 00467000
@RF00113 CLI   TYPECODE(APRWKPTR),X'08'                            0115 00468000
         BNE   @RF00115                                            0115 00469000
*           TYPECODE=TFF;           /* SO DO NOT USE IN SUU  @ZM31121*/ 00470000
         MVI   TYPECODE(APRWKPTR),X'FF'                            0116 00471000
*         ELSE;                     /* NO, USE THIS IN THE SUMMARY 0117 00472000
*                                                            @ZD00192*/ 00473000
@RF00115 DS    0H                                                  0118 00474000
*   ELSE;                           /* NO, APR REQUESTED     @ZD00192*/ 00475000
*                                                                  0118 00476000
@RF00110 DS    0H                                                  0119 00477000
*   /*****************************************************************/ 00478000
*   /*                                                               */ 00479000
*   /* INCREMENT COUNT FOR CODES T07, T09, AND T41.                  */ 00480000
*   /* STOP SAVING APR RECORDS IF THE COUNT EXCEEDS MAXCOUNT         */ 00481000
*   /* STOP SAVING LOST CART RECORDS IF THE COUNT EXCEEDS MAXCOUNT   */ 00482000
*   /*                                                               */ 00483000
*   /*****************************************************************/ 00484000
*                                                                  0119 00485000
*   IF TYPECODE=T07 THEN            /* END APR NOT MEDIA     @ZM30984*/ 00486000
@RC00110 CLI   TYPECODE(APRWKPTR),X'07'                            0119 00487000
         BNE   @RF00119                                            0119 00488000
*     T07COUNT=T07COUNT+1;          /* ADD 1 TO COUNT        @ZM30984*/ 00489000
         LA    @07,1                                               0120 00490000
         AH    @07,T07COUNT(,APRWKPTR)                             0120 00491000
         STH   @07,T07COUNT(,APRWKPTR)                             0120 00492000
*   ELSE                                                           0121 00493000
*     IF TYPECODE=T09 THEN          /* MISPLACED CARTRIDGE   @ZM30984*/ 00494000
         B     @RC00119                                            0121 00495000
@RF00119 CLI   TYPECODE(APRWKPTR),X'09'                            0121 00496000
         BNE   @RF00121                                            0121 00497000
*       T09COUNT=T09COUNT+1;        /* ADD 1 TO COUNT        @ZM30984*/ 00498000
         LA    @07,1                                               0122 00499000
         AH    @07,T09COUNT(,APRWKPTR)                             0122 00500000
         STH   @07,T09COUNT(,APRWKPTR)                             0122 00501000
*     ELSE                                                         0123 00502000
*       IF TYPECODE=T41 THEN        /* START APR             @ZM30984*/ 00503000
         B     @RC00121                                            0123 00504000
@RF00121 CLI   TYPECODE(APRWKPTR),X'41'                            0123 00505000
         BNE   @RF00123                                            0123 00506000
*         T41COUNT=T41COUNT+1;      /* ADD 1 TO COUNT        @ZM30984*/ 00507000
         LA    @07,1                                               0124 00508000
         AH    @07,T41COUNT(,APRWKPTR)                             0124 00509000
         STH   @07,T41COUNT(,APRWKPTR)                             0124 00510000
*       ELSE;                       /* NOTHING TO COUNT      @ZM30984*/ 00511000
@RF00123 DS    0H                                                  0126 00512000
*   IF T07COUNT=MAXCOUNT|T41COUNT=MAXCOUNT THEN /* AT MAX    @ZM30984*/ 00513000
@RC00121 DS    0H                                                  0126 00514000
@RC00119 LA    @07,51                                              0126 00515000
         CH    @07,T07COUNT(,APRWKPTR)                             0126 00516000
         BE    @RT00126                                            0126 00517000
         CH    @07,T41COUNT(,APRWKPTR)                             0126 00518000
         BNE   @RF00126                                            0126 00519000
@RT00126 DS    0H                                                  0127 00520000
*     APRFLAGS(3)='1'B;             /* YES, SET FLAG ON      @ZM30984*/ 00521000
         OI    APRFLAGS(APRWKPTR),B'00100000'                      0127 00522000
*   ELSE;                           /* NO, COUNT IS OK       @ZM30984*/ 00523000
@RF00126 DS    0H                                                  0129 00524000
*   IF T09COUNT=MAXCOUNT THEN       /* AT MAXIMUM COUNT      @ZM30984*/ 00525000
         CLC   T09COUNT(2,APRWKPTR),@CH00390                       0129 00526000
         BNE   @RF00129                                            0129 00527000
*     APRFLAGS(4)='1'B;             /* YES, SET FLAG ON      @ZM30984*/ 00528000
         OI    APRFLAGS(APRWKPTR),B'00010000'                      0130 00529000
*   ELSE;                           /* NO, COUNT OK          @ZM30984*/ 00530000
@RF00129 DS    0H                                                  0132 00531000
*   IF APRFLAGS(3)='1'B THEN        /* IN NO SAVE MODE       @ZM30984*/ 00532000
         TM    APRFLAGS(APRWKPTR),B'00100000'                      0132 00533000
         BNO   @RF00132                                            0132 00534000
*     IF TYPECODE=T07|TYPECODE=T41|TYPECODE=T42 THEN /* YES  @ZM30984*/ 00535000
         CLI   TYPECODE(APRWKPTR),X'07'                            0133 00536000
         BE    @RT00133                                            0133 00537000
         CLI   TYPECODE(APRWKPTR),X'41'                            0133 00538000
         BE    @RT00133                                            0133 00539000
         CLI   TYPECODE(APRWKPTR),X'42'                            0133 00540000
         BNE   @RF00133                                            0133 00541000
@RT00133 DS    0H                                                  0134 00542000
*       TYPECODE=TFF;               /* DO NOT SAVE RECORD    @ZM30984*/ 00543000
         MVI   TYPECODE(APRWKPTR),X'FF'                            0134 00544000
*     ELSE;                         /* NOT APR RECORD        @ZM30984*/ 00545000
@RF00133 DS    0H                                                  0136 00546000
*   ELSE;                           /* NOT AT MAX COUNT      @ZM30984*/ 00547000
@RF00132 DS    0H                                                  0137 00548000
*   IF APRFLAGS(4)='1'B&TYPECODE=T09 THEN /* NO SAVE MODE    @ZM30984*/ 00549000
         TM    APRFLAGS(APRWKPTR),B'00010000'                      0137 00550000
         BNO   @RF00137                                            0137 00551000
         CLI   TYPECODE(APRWKPTR),X'09'                            0137 00552000
         BNE   @RF00137                                            0137 00553000
*     TYPECODE=TFF;                 /* DO NOT SAVE RECORD    @ZM30984*/ 00554000
         MVI   TYPECODE(APRWKPTR),X'FF'                            0138 00555000
*   ELSE;                           /* NOT TOO MANY YET      @ZM30984*/ 00556000
@RF00137 DS    0H                                                  0140 00557000
*   IF TYPECODE=TFF&RETCODE=0 THEN  /* THIS RECORD NOT USED  @ZD00192*/ 00558000
         CLI   TYPECODE(APRWKPTR),X'FF'                            0140 00559000
         BNE   @RF00140                                            0140 00560000
         LTR   RETCODE,RETCODE                                     0140 00561000
         BNZ   @RF00140                                            0140 00562000
*     RETCODE=1;                    /* YES, SET INTERNAL FLAG@ZD00192*/ 00563000
         LA    RETCODE,1                                           0141 00564000
*   ELSE                            /* NO, SAVE SSID OR CUA  @ZD00192*/ 00565000
*     IF TYPECODE=T06|TYPECODE=T20 THEN/* MSC UNUSABLE OR SWITCH   0142 00566000
*                                                            @ZD00192*/ 00567000
         B     @RC00140                                            0142 00568000
@RF00140 CLI   TYPECODE(APRWKPTR),X'06'                            0142 00569000
         BE    @RT00142                                            0142 00570000
         CLI   TYPECODE(APRWKPTR),X'20'                            0142 00571000
         BNE   @RF00142                                            0142 00572000
@RT00142 DS    0H                                                  0143 00573000
*       SAVESSID=INRECCUA|'8000'X;  /* YES, SAVE CUA WITH BIT 0 = 1     00574000
*                                      FOR UNIQUENESS        @ZM31109*/ 00575000
         L     @07,SDA00PTR(,CVTPTR)                               0143 00576000
         MVC   SAVESSID(2,APRWKPTR),INRECCUA(@07)                  0143 00577000
         OC    SAVESSID(2,APRWKPTR),@CB00421                       0143 00578000
*     ELSE                                                         0144 00579000
*       DO;                         /* NO, SAVE SSID         @ZM31109*/ 00580000
         B     @RC00142                                            0144 00581000
@RF00142 DS    0H                                                  0145 00582000
*         SAVESSID=SUBSYSID&'0FFF'X;/* CLEAR BITS 1-4        @ZM31109*/ 00583000
         MVC   SAVESSID(2,APRWKPTR),SUBSYSID(SENSEPTR)             0145 00584000
         NC    SAVESSID(2,APRWKPTR),@CB00422                       0145 00585000
*         IF TYPECODE=T31 THEN      /* ACC IN GARAGE         @ZM31109*/ 00586000
         CLI   TYPECODE(APRWKPTR),X'31'                            0146 00587000
         BNE   @RF00146                                            0146 00588000
*           DO;                     /* YES, WHICH ONE        @ZM31121*/ 00589000
*             IF ISDAMSCS(9:12)^='00000000'X THEN /* RIGHT   @ZM31121*/ 00590000
         CLC   ISDAMSCS+8(4,SENSEPTR),@CB00423                     0148 00591000
         BE    @RF00148                                            0148 00592000
*               SAVESSID(3)='1'B;   /* SET RIGHT ACC BIT     @ZM31121*/ 00593000
         OI    SAVESSID(APRWKPTR),B'00100000'                      0149 00594000
*             ELSE;                 /* NOT RIGHT ACC         @ZM31121*/ 00595000
@RF00148 DS    0H                                                  0151 00596000
*             IF ISDAMSCS(13:16)^='00000000'X THEN /* LEFT   @ZM31121*/ 00597000
         CLC   ISDAMSCS+12(4,SENSEPTR),@CB00423                    0151 00598000
         BE    @RF00151                                            0151 00599000
*               SAVESSID(2)='1'B;   /* SET LEFT ACC BIT      @ZM31121*/ 00600000
         OI    SAVESSID(APRWKPTR),B'01000000'                      0152 00601000
*             ELSE;                 /* NOT LEFT ACC          @ZM31121*/ 00602000
@RF00151 DS    0H                                                  0154 00603000
*             IF SAVESSID(2:3)='00'B THEN /* BOTH ARE ZERO   @ZM31121*/ 00604000
         TM    SAVESSID(APRWKPTR),B'01100000'                      0154 00605000
         BNZ   @RF00154                                            0154 00606000
*               SAVESSID(2:3)='11'B;/* YES, TURN BOTH ON     @ZM31121*/ 00607000
         OI    SAVESSID(APRWKPTR),B'01100000'                      0155 00608000
*             ELSE;                 /* NO, FLAGS ARE OK      @ZM31121*/ 00609000
@RF00154 DS    0H                                                  0157 00610000
*           END;                    /* END SET ACCESSOR FLAG @ZM31121*/ 00611000
*         ELSE;                     /* NO, SSID IS OK        @ZM31109*/ 00612000
@RF00146 DS    0H                                                  0159 00613000
*       END;                        /* END MOVE SSID         @ZM31109*/ 00614000
*   END GETCODE;                    /* END OF GETCODE PROC   @ZD00192*/ 00615000
@EL00003 DS    0H                                                  0160 00616000
@EF00003 DS    0H                                                  0160 00617000
@ER00003 L     @14,12(,@13)                                        0160 00618000
         BR    @14                                                 0160 00619000
*                                                                  0161 00620000
*   /*****************************************************************/ 00621000
*   /*                                                               */ 00622000
*   /* ADDREC - PROC TO ADD A RECORD TO THE ACCUMULATOR              */ 00623000
*   /*                                                               */ 00624000
*   /*****************************************************************/ 00625000
*                                                                  0161 00626000
*ADDREC:                                                           0161 00627000
*   PROC OPTIONS(SAVE(14));         /* PROC TO ADD A RECORD  @ZD00192*/ 00628000
ADDREC   ST    @14,@SA00004                                        0161 00629000
*   IF CAPRSUU(8)='0'B&TOTALENT^=0 THEN/* SUU ONLY AND SOME RECORDS     00630000
*                                      ALREADY SAVED         @ZD00192*/ 00631000
*                                                                  0162 00632000
         L     @07,LPARMPTR                                        0162 00633000
         TM    CAPRSUU(@07),B'00000001'                            0162 00634000
         BNZ   @RF00162                                            0162 00635000
         ICM   @07,15,TOTALENT(APRWKPTR)                           0162 00636000
         BZ    @RF00162                                            0162 00637000
*     /***************************************************************/ 00638000
*     /*                                                             */ 00639000
*     /* UPDATEAC INCREMENTS THE COUNT IF A MATCHING SSID IS FOUND IN*/ 00640000
*     /* THE ACCUMULATOR ALREADY. IF SO, IT SETS RETCODE=2           */ 00641000
*     /*                                                             */ 00642000
*     /***************************************************************/ 00643000
*                                                                  0163 00644000
*     CALL UPDATEAC;                /* YES, LOOK FOR EXISTING RECORD    00645000
*                                                            @ZD00192*/ 00646000
         BAL   @14,UPDATEAC                                        0163 00647000
*   ELSE                                                           0164 00648000
*     ;                             /* NO                    @ZD00192*/ 00649000
@RF00162 DS    0H                                                  0165 00650000
*   IF RETCODE=0 THEN               /* STILL NEED TO ADD RECORD    0165 00651000
*                                                            @ZD00192*/ 00652000
*                                                                  0165 00653000
         LTR   RETCODE,RETCODE                                     0165 00654000
         BNZ   @RF00165                                            0165 00655000
*     /***************************************************************/ 00656000
*     /*                                                             */ 00657000
*     /* COMPUTE ENTRY LENGTH OF 32, 36, 56                          */ 00658000
*     /*                                                             */ 00659000
*     /***************************************************************/ 00660000
*                                                                  0166 00661000
*     DO;                           /* YES, COMPUTE LENGTH OF THIS 0166 00662000
*                                      UPDATE                @ZD00192*/ 00663000
*       IF TYPECODE=T07|TYPECODE=TF7|TYPECODE=T09|                 0167 00664000
*                                    TYPECODE=T08 THEN             0167 00665000
         CLI   TYPECODE(APRWKPTR),X'07'                            0167 00666000
         BE    @RT00167                                            0167 00667000
         CLI   TYPECODE(APRWKPTR),X'F7'                            0167 00668000
         BE    @RT00167                                            0167 00669000
         CLI   TYPECODE(APRWKPTR),X'09'                            0167 00670000
         BE    @RT00167                                            0167 00671000
         CLI   TYPECODE(APRWKPTR),X'08'                            0167 00672000
         BNE   @RF00167                                            0167 00673000
@RT00167 DS    0H                                                  0168 00674000
*         CURRLEN=56;               /* SET LONG LENGTH FOR 07,F7,08     00675000
*                                      AND 09                @ZM31121*/ 00676000
         MVC   CURRLEN(2,APRWKPTR),@CH00431                        0168 00677000
*       ELSE                                                       0169 00678000
*         IF TYPECODE=T06|TYPECODE=T20 THEN/* CODES 06 OR 20 @ZD00192*/ 00679000
         B     @RC00167                                            0169 00680000
@RF00167 CLI   TYPECODE(APRWKPTR),X'06'                            0169 00681000
         BE    @RT00169                                            0169 00682000
         CLI   TYPECODE(APRWKPTR),X'20'                            0169 00683000
         BNE   @RF00169                                            0169 00684000
@RT00169 DS    0H                                                  0170 00685000
*           CURRLEN=36;             /* SET LENGTH FOR MSC UNUSABLE 06   00686000
*                                      AND 20                @ZD00192*/ 00687000
         MVC   CURRLEN(2,APRWKPTR),@CH00432                        0170 00688000
*         ELSE                                                     0171 00689000
*           CURRLEN=32;             /* SET SHORT LENGTH FOR ALL    0171 00690000
*                                      OTHERS                @ZD00192*/ 00691000
         B     @RC00169                                            0171 00692000
@RF00169 MVC   CURRLEN(2,APRWKPTR),@CH00433                        0171 00693000
*       IF(CURRNEXT+CURRLEN)>ACCUMEND THEN/* WILL THIS RECORD FIT  0172 00694000
*                                      INTO THE CURRENT ACCUMULATOR     00695000
*                                      IF ANY                @ZD00192*/ 00696000
*                                                                  0172 00697000
@RC00169 DS    0H                                                  0172 00698000
@RC00167 LH    @07,CURRLEN(,APRWKPTR)                              0172 00699000
         AL    @07,CURRNEXT(,APRWKPTR)                             0172 00700000
         C     @07,ACCUMEND(,APRWKPTR)                             0172 00701000
         BNH   @RF00172                                            0172 00702000
*         /***********************************************************/ 00703000
*         /*                                                         */ 00704000
*         /* GET AN ACCUMULATOR BLOCK                                */ 00705000
*         /*                                                         */ 00706000
*         /***********************************************************/ 00707000
*                                                                  0173 00708000
*         CALL GETACCUM;            /* NO, GET AN ACCUMULATOR@ZD00192*/ 00709000
         BAL   @14,GETACCUM                                        0173 00710000
*       ELSE                                                       0174 00711000
*         ;                         /* YES, DO NOT NEED MORE SPACE 0174 00712000
*                                                            @ZD00192*/ 00713000
@RF00172 DS    0H                                                  0175 00714000
*     END;                          /* END ACCUMULATOR SETUP @ZD00192*/ 00715000
*   ELSE                                                           0176 00716000
*     ;                             /* NO, DO NOT ADD THIS RECORD  0176 00717000
*                                                            @ZD00192*/ 00718000
*                                                                  0176 00719000
@RF00165 DS    0H                                                  0177 00720000
*   /*****************************************************************/ 00721000
*   /*                                                               */ 00722000
*   /* ADD NEW ENTRY TO ACCUMULATOR                                  */ 00723000
*   /*                                                               */ 00724000
*   /*****************************************************************/ 00725000
*                                                                  0177 00726000
*   IF RETCODE=0 THEN               /* CONTINUE              @ZD00192*/ 00727000
         SLR   @07,@07                                             0177 00728000
         CR    RETCODE,@07                                         0177 00729000
         BNE   @RF00177                                            0177 00730000
*     DO;                           /* YES, UPDATE THE ACCUMULATOR 0178 00731000
*                                                            @ZD00192*/ 00732000
*       IF CURRPTR^=0 THEN          /* IS THIS FIRST ENTRY   @ZD00192*/ 00733000
         L     @04,CURRPTR(,APRWKPTR)                              0179 00734000
         CR    @04,@07                                             0179 00735000
         BE    @RF00179                                            0179 00736000
*         DO;                       /* NO, MUST SET FORWARD POINTER     00737000
*                                                            @ZD00192*/ 00738000
*           ENTRYPTR=CURRPTR;       /* SET ENTRY POINTER     @ZD00192*/ 00739000
         L     @07,CURRPTR(,APRWKPTR)                              0181 00740000
         LR    ENTRYPTR,@07                                        0181 00741000
*           NEXTENT=CURRNEXT;       /* MOVE NEXT ADDR INTO ENTRY   0182 00742000
*                                                            @ZD00192*/ 00743000
         MVC   NEXTENT(4,ENTRYPTR),CURRNEXT(APRWKPTR)              0182 00744000
*           SAVEDYTS=ENTDAYTS;      /* SAVE DATE, TIME, SEQ  @ZM31121*/ 00745000
         MVC   SAVEDYTS(9,APRWKPTR),ENTDAYTS(ENTRYPTR)             0183 00746000
*         END;                      /* END FORWARD PTR CODE  @ZD00192*/ 00747000
*       ELSE                                                       0185 00748000
*         ;                         /* NO, THIS IS FIRST ENTRY     0185 00749000
*                                                            @ZD00192*/ 00750000
*                                                                  0185 00751000
@RF00179 DS    0H                                                  0186 00752000
*       /*************************************************************/ 00753000
*       /*                                                           */ 00754000
*       /* SET UP ALL ACCUMULATOR POINTERS FOR THIS ENTRY            */ 00755000
*       /*                                                           */ 00756000
*       /*************************************************************/ 00757000
*                                                                  0186 00758000
*       CURRPTR=CURRNEXT;           /* CURRENT PTR SET TO NEXT PTR 0186 00759000
*                                                            @ZD00192*/ 00760000
         L     @07,CURRNEXT(,APRWKPTR)                             0186 00761000
         ST    @07,CURRPTR(,APRWKPTR)                              0186 00762000
*       CURRNEXT=CURRPTR+CURRLEN;   /* NEXT = THIS + LENGTH  @ZD00192*/ 00763000
         LH    @15,CURRLEN(,APRWKPTR)                              0187 00764000
         LR    @14,@07                                             0187 00765000
         ALR   @14,@15                                             0187 00766000
         ST    @14,CURRNEXT(,APRWKPTR)                             0187 00767000
*       ENTRYPTR=CURRPTR;           /* SET BASE PTR FOR ENTRY@ZD00192*/ 00768000
         LR    ENTRYPTR,@07                                        0188 00769000
*       TOTALENT=TOTALENT+1;        /* ADD 1 TO ENTRY COUNT  @ZD00192*/ 00770000
*                                                                  0189 00771000
         LA    @07,1                                               0189 00772000
         L     @14,TOTALENT(,APRWKPTR)                             0189 00773000
         ALR   @14,@07                                             0189 00774000
         ST    @14,TOTALENT(,APRWKPTR)                             0189 00775000
*       /*************************************************************/ 00776000
*       /*                                                           */ 00777000
*       /* BUILD FIXED PART OF ACCUMULATOR ENTRY                     */ 00778000
*       /*                                                           */ 00779000
*       /*************************************************************/ 00780000
*                                                                  0190 00781000
*       NEXTENT=''B;                /* ZERO PTR TO NEXT ENTRY@ZD00192*/ 00782000
         SLR   @14,@14                                             0190 00783000
         ST    @14,NEXTENT(,ENTRYPTR)                              0190 00784000
*       ENTCOUNT=1;                 /* INIT COUNTER TO 1     @ZD00192*/ 00785000
         STH   @07,ENTCOUNT(,ENTRYPTR)                             0191 00786000
*       ELENGTH=CURRLEN;            /* MOVE IN LENGTH OF THIS ENTRY     00787000
*                                                            @ZD00192*/ 00788000
         STC   @15,ELENGTH(,ENTRYPTR)                              0192 00789000
*       ETYPCODE=TYPECODE;          /* SET TYPE CODE         @ZD00192*/ 00790000
         MVC   ETYPCODE(1,ENTRYPTR),TYPECODE(APRWKPTR)             0193 00791000
*       EFMTMSG=SUBFMTMG;           /* SAVE BYTE 11          @ZD00192*/ 00792000
         MVC   EFMTMSG(1,ENTRYPTR),SUBFMTMG(SENSEPTR)              0194 00793000
*       ENTFLAG='01'X;              /* SET USE IN SUMMARY BIT@ZD00192*/ 00794000
         MVI   ENTFLAG(ENTRYPTR),X'01'                             0195 00795000
*       ENTSSID=SAVESSID;           /* MOVE SSID OR CUA      @ZD00192*/ 00796000
         MVC   ENTSSID(2,ENTRYPTR),SAVESSID(APRWKPTR)              0196 00797000
*       ENTDAYT=DATETIME;           /* MOVE DATE AND TIME    @ZD00192*/ 00798000
         MVC   ENTDAYT(8,ENTRYPTR),DATETIME(LOGPTR)                0197 00799000
*       EBYTE03=ISDAMSCS(1:4);      /* MOVE MSC BYTES 0-3    @ZD00192*/ 00800000
         MVC   EBYTE03(4,ENTRYPTR),ISDAMSCS(SENSEPTR)              0198 00801000
*       IF ENTDAYT<SAVEDAYT THEN    /* NEW DATE < OLD DATE   @ZD00192*/ 00802000
         CLC   ENTDAYT(8,ENTRYPTR),SAVEDAYT(APRWKPTR)              0199 00803000
         BNL   @RF00199                                            0199 00804000
*         APRFLAGS(1)='1'B;         /* YES, SORT REQUIRED    @ZD00192*/ 00805000
         OI    APRFLAGS(APRWKPTR),B'10000000'                      0200 00806000
*       ELSE;                       /* NO, THIS RECORD IN TIME ORDER    00807000
*                                                            @ZD00192*/ 00808000
@RF00199 DS    0H                                                  0202 00809000
*       IF ENTDAYT=SAVEDAYT THEN    /* SAME DATE AND TIME    @ZM31121*/ 00810000
         CLC   ENTDAYT(8,ENTRYPTR),SAVEDAYT(APRWKPTR)              0202 00811000
         BNE   @RF00202                                            0202 00812000
*         SAVSEQEN=SAVSEQEN+1;      /* ADD 1 TO SEQ NO.      @ZM31121*/ 00813000
         LA    @07,1                                               0203 00814000
         SLR   @15,@15                                             0203 00815000
         IC    @15,SAVSEQEN(,APRWKPTR)                             0203 00816000
         ALR   @07,@15                                             0203 00817000
         STC   @07,SAVSEQEN(,APRWKPTR)                             0203 00818000
*       ELSE                        /* DATE,TIME NOT EQUAL   @ZM31121*/ 00819000
*         SAVSEQEN=''B;             /* SET SEQ NO. TO ZERO   @ZM31121*/ 00820000
         B     @RC00202                                            0204 00821000
@RF00202 SLR   @07,@07                                             0204 00822000
         STC   @07,SAVSEQEN(,APRWKPTR)                             0204 00823000
*       ENTSEQEN=SAVSEQEN;          /* STORE SEQUENCE NUMBER @ZM31121*/ 00824000
@RC00202 MVC   ENTSEQEN(1,ENTRYPTR),SAVSEQEN(APRWKPTR)             0205 00825000
*       CALL ADDVAR;                /* BUILD VARIABLE PART   @ZD00192*/ 00826000
         BAL   @14,ADDVAR                                          0206 00827000
*     END;                          /* END ADD ENTRY CODE    @ZD00192*/ 00828000
*   ELSE                                                           0208 00829000
*     ;                             /* NO, BAD RETURN FROM GETACCUM     00830000
*                                      OR NO RECORD TO ADD   @ZD00192*/ 00831000
@RF00177 DS    0H                                                  0209 00832000
*   END ADDREC;                     /* END OF ADDREC PROC    @ZD00192*/ 00833000
@EL00004 DS    0H                                                  0209 00834000
@EF00004 DS    0H                                                  0209 00835000
@ER00004 L     @14,@SA00004                                        0209 00836000
         BR    @14                                                 0209 00837000
*                                                                  0210 00838000
*   /*****************************************************************/ 00839000
*   /*                                                               */ 00840000
*   /* UPDATEAC - PROC TO INCREMENT COUNTS FOR SUMMARY MODE IF       */ 00841000
*   /* SUU ONLY. A SEARCH FOR A MATCHING SSID OR CSN/VOLID IS        */ 00842000
*   /* DONE. IF NO EXISTING RECORD IS FOUND THEN THE RECORD IS ADDED */ 00843000
*   /* BY ADDREC. IF A MATCH IS FOUND, UPDATEAC SET RETCODE=2 TO     */ 00844000
*   /* PREVENT ADDREC FROM ADDING THE RECORD.                        */ 00845000
*   /*                                                               */ 00846000
*   /*****************************************************************/ 00847000
*                                                                  0210 00848000
*UPDATEAC:                                                         0210 00849000
*   PROC OPTIONS(SAVE(14));         /* UPDATE ACCUM PROC     @ZD00192*/ 00850000
UPDATEAC ST    @14,12(,@13)                                        0210 00851000
*   ENTRYPTR=ACCUMPTR;              /* POINT TO START OF DATA@ZD00192*/ 00852000
         L     ENTRYPTR,ACCUMPTR(,APRWKPTR)                        0211 00853000
*   DO WHILE(ENTRYPTR^=0);          /* LOOP THROUGH ACCUMULATOR    0212 00854000
*                                                            @ZD00192*/ 00855000
         B     @DE00212                                            0212 00856000
@DL00212 DS    0H                                                  0213 00857000
*     IF TYPECODE=TF7 THEN          /* LOOKING FOR MEDIA FAILURE   0213 00858000
*                                                            @ZD00192*/ 00859000
         CLI   TYPECODE(APRWKPTR),X'F7'                            0213 00860000
         BNE   @RF00213                                            0213 00861000
*       IF ETYPCODE=TF7 THEN        /* HAVE MEDIA ENTRY      @ZD00192*/ 00862000
*                                                                  0214 00863000
         CLI   ETYPCODE(ENTRYPTR),X'F7'                            0214 00864000
         BNE   @RF00214                                            0214 00865000
*         /***********************************************************/ 00866000
*         /*                                                         */ 00867000
*         /* UPDATE MEDIA FAILURE RECORDS                            */ 00868000
*         /*                                                         */ 00869000
*         /***********************************************************/ 00870000
*                                                                  0215 00871000
*         IF ENTVOLID=VOLID0&EBYTE10=TBLID0&ENTCSN=CSN0 THEN /*    0215 00872000
*                                      MATCH VOLID AND SEQ NO.     0215 00873000
*                                      AND CSN               @ZA00668*/ 00874000
         CLC   ENTVOLID(6,ENTRYPTR),VOLID0(SENSEPTR)               0215 00875000
         BNE   @RF00215                                            0215 00876000
         CLC   EBYTE10(1,ENTRYPTR),TBLID0(SENSEPTR)                0215 00877000
         BNE   @RF00215                                            0215 00878000
         CLC   ENTCSN(12,ENTRYPTR),CSN0(SENSEPTR)                  0215 00879000
         BNE   @RF00215                                            0215 00880000
*           RETCODE=2;              /* YES, FOUND MATCH      @ZA00668*/ 00881000
         LA    RETCODE,2                                           0216 00882000
*         ELSE;                     /* NO, NEW ENTRY         @ZA00668*/ 00883000
@RF00215 DS    0H                                                  0218 00884000
*       ELSE                                                       0218 00885000
*         ;                         /* NOT MEDIA RECORD      @ZD00192*/ 00886000
@RF00214 DS    0H                                                  0219 00887000
*     ELSE                          /* NOT CODE F7 = MEDIA FAILURE 0219 00888000
*                                                            @ZD00192*/ 00889000
*       IF ETYPCODE^=TF7 THEN       /* NOT MEDIA RECORD      @ZD00192*/ 00890000
*                                                                  0219 00891000
         B     @RC00213                                            0219 00892000
@RF00213 CLI   ETYPCODE(ENTRYPTR),X'F7'                            0219 00893000
         BE    @RF00219                                            0219 00894000
*         /***********************************************************/ 00895000
*         /*                                                         */ 00896000
*         /* UPDATE UNIT UNUSABLE RECORDS                            */ 00897000
*         /*                                                         */ 00898000
*         /***********************************************************/ 00899000
*                                                                  0220 00900000
*         IF SAVESSID=ENTSSID THEN  /* HAVE A SSID MATCH     @ZD00192*/ 00901000
         CLC   SAVESSID(2,APRWKPTR),ENTSSID(ENTRYPTR)              0220 00902000
         BNE   @RF00220                                            0220 00903000
*           RETCODE=2;              /* YES, SET FOUND FLAG   @ZD00192*/ 00904000
         LA    RETCODE,2                                           0221 00905000
*         ELSE                                                     0222 00906000
*           ;                       /* NO MATCH SSID YET     @ZD00192*/ 00907000
@RF00220 DS    0H                                                  0223 00908000
*       ELSE                                                       0223 00909000
*         ;                         /* MEDIA ENTRY, NOT SUU  @ZD00192*/ 00910000
@RF00219 DS    0H                                                  0224 00911000
*     IF RETCODE=2 THEN             /* FOUND A MATCH YET     @ZD00192*/ 00912000
*                                                                  0224 00913000
@RC00213 CH    RETCODE,@CH00100                                    0224 00914000
         BNE   @RF00224                                            0224 00915000
*       /*************************************************************/ 00916000
*       /*                                                           */ 00917000
*       /* UPDATE THE ACCUMULATOR AND GET OUT OF THE LOOP            */ 00918000
*       /*                                                           */ 00919000
*       /*************************************************************/ 00920000
*                                                                  0225 00921000
*       DO;                         /* YES, UPDATE THE ENTRY @ZD00192*/ 00922000
*         ENTCOUNT=ENTCOUNT+1;      /* ADD 1 TO ENTRY COUNT  @ZD00192*/ 00923000
         LA    @07,1                                               0226 00924000
         AH    @07,ENTCOUNT(,ENTRYPTR)                             0226 00925000
         STH   @07,ENTCOUNT(,ENTRYPTR)                             0226 00926000
*         APRFLAGS(1)='1'B;         /* TURN SORT FLAG ON     @ZD00192*/ 00927000
         OI    APRFLAGS(APRWKPTR),B'10000000'                      0227 00928000
*         IF ENTDAYT<DATETIME THEN  /* IS ENTRY DATE,TIME LESS     0228 00929000
*                                                            @ZD00192*/ 00930000
         CLC   ENTDAYT(8,ENTRYPTR),DATETIME(LOGPTR)                0228 00931000
         BNL   @RF00228                                            0228 00932000
*           ENTDAYT=DATETIME;       /* YES, SAVE NEW DATE,TIME     0229 00933000
*                                                            @ZD00192*/ 00934000
         MVC   ENTDAYT(8,ENTRYPTR),DATETIME(LOGPTR)                0229 00935000
*         ELSE                                                     0230 00936000
*           ;                       /* NO, DATE,TIME OK      @ZD00192*/ 00937000
@RF00228 DS    0H                                                  0231 00938000
*         ENTRYPTR=0;               /* SET TO EXIT FROM LOOP @ZD00192*/ 00939000
         SLR   ENTRYPTR,ENTRYPTR                                   0231 00940000
*       END;                        /* END UPDATE ACCUMULATOR CODE 0232 00941000
*                                                            @ZD00192*/ 00942000
*     ELSE                          /* NO, MATCH NOT FOUND YET     0233 00943000
*                                                            @ZD00192*/ 00944000
*       ENTRYPTR=NEXTENT;           /* SET PTR TO NEXT ENTRY @ZD00192*/ 00945000
         B     @RC00224                                            0233 00946000
@RF00224 L     ENTRYPTR,NEXTENT(,ENTRYPTR)                         0233 00947000
*   END;                            /* END LOOP THROUGH ACCUMULATORS    00948000
*                                                            @ZD00192*/ 00949000
@RC00224 DS    0H                                                  0234 00950000
@DE00212 LTR   ENTRYPTR,ENTRYPTR                                   0234 00951000
         BNZ   @DL00212                                            0234 00952000
*   END UPDATEAC;                   /* END UPDATE ACCUM PROC @ZD00192*/ 00953000
@EL00005 DS    0H                                                  0235 00954000
@EF00005 DS    0H                                                  0235 00955000
@ER00005 L     @14,12(,@13)                                        0235 00956000
         BR    @14                                                 0235 00957000
*                                                                  0236 00958000
*   /*****************************************************************/ 00959000
*   /*                                                               */ 00960000
*   /* ADDVAR - PROC TO BUILD THE VARIABLE PART OF THE ACCUMULATOR   */ 00961000
*   /* ENTRY. THIS PROC MOVES DIFFERENT INFORMATION INTO THE         */ 00962000
*   /* ACCUMULATOR DEPENDING ON THE TYPE OF RECORD (TYPECODE).       */ 00963000
*   /*                                                               */ 00964000
*   /*****************************************************************/ 00965000
*                                                                  0236 00966000
*ADDVAR:                                                           0236 00967000
*   PROC OPTIONS(SAVE(14));         /* ADDVAR PROC           @ZD00192*/ 00968000
*                                                                  0236 00969000
ADDVAR   ST    @14,12(,@13)                                        0236 00970000
*   /*****************************************************************/ 00971000
*   /*                                                               */ 00972000
*   /* CODE 00 AND CODE F6                                           */ 00973000
*   /*                                                               */ 00974000
*   /*****************************************************************/ 00975000
*                                                                  0237 00976000
*   IF TYPECODE=T00|TYPECODE=TF6 THEN /* CODE 00 OR 06 SUU   @ZA28897*/ 00977000
         CLI   TYPECODE(APRWKPTR),X'00'                            0237 00978000
         BE    @RT00237                                            0237 00979000
         CLI   TYPECODE(APRWKPTR),X'F6'                            0237 00980000
         BNE   @RF00237                                            0237 00981000
@RT00237 DS    0H                                                  0238 00982000
*     DO;                           /* YES                   @ZD00192*/ 00983000
*       EFLAG3='1'B;                /* SUU BIT ON            @ZD00192*/ 00984000
         OI    EFLAG3(ENTRYPTR),B'00100000'                        0239 00985000
*       EBYTE4=TBLID0;              /* MOVE BYTE 10          @ZD00192*/ 00986000
         MVC   EBYTE4(1,ENTRYPTR),TBLID0(SENSEPTR)                 0240 00987000
*       EBYTE5=TERNCOD0;            /* MOVE BYTE 12          @ZA28897*/ 00988000
         MVC   EBYTE5(1,ENTRYPTR),TERNCOD0+3                       0241 00989000
*       EBYTE67=''B;                /* NOT USED NOW          @ZD00192*/ 00990000
         XC    EBYTE67(2,ENTRYPTR),EBYTE67(ENTRYPTR)               0242 00991000
*     END;                          /* END APR SUU CODE      @ZD00192*/ 00992000
*   ELSE                            /* NOT 00                @ZD00192*/ 00993000
*                                                                  0244 00994000
*     /***************************************************************/ 00995000
*     /*                                                             */ 00996000
*     /* CODE 06                                                     */ 00997000
*     /*                                                             */ 00998000
*     /***************************************************************/ 00999000
*                                                                  0244 01000000
*     IF TYPECODE=T06 THEN          /* FORMAT 0 CODE 06      @ZD00192*/ 01001000
         B     @RC00237                                            0244 01002000
@RF00237 CLI   TYPECODE(APRWKPTR),X'06'                            0244 01003000
         BNE   @RF00244                                            0244 01004000
*       DO;                         /* YES, MSC SWITCH RECORDS     0245 01005000
*                                                            @ZD00192*/ 01006000
*         EFLAG7='1'B;              /* SET MSC SWITCH BIT    @ZD00192*/ 01007000
         OI    EFLAG7(ENTRYPTR),B'00000010'                        0246 01008000
*         ENTCPUID=CPUSERID;        /* MOVE 5 BYTE CPUID     @ZD00192*/ 01009000
         MVC   ENTCPUID(5,ENTRYPTR),CPUSERID(LOGPTR)               0247 01010000
*         EBYTE9=TERMCOD0;          /* MOVE BYTE 12          @ZD00192*/ 01011000
         MVC   EBYTE9(1,ENTRYPTR),TERMCOD0(SENSEPTR)               0248 01012000
*         EBYTE10=''B;              /* NOT USED NOW          @ZD00192*/ 01013000
         MVI   EBYTE10(ENTRYPTR),X'00'                             0249 01014000
*         EBYTE11=''B;              /* NOT USED NOW          @ZD00192*/ 01015000
         MVI   EBYTE11(ENTRYPTR),X'00'                             0250 01016000
*       END;                        /* END MSC SWITCH CODE   @ZD00192*/ 01017000
*     ELSE                          /* NO, CHECK 07,F7, OR 09@ZD00192*/ 01018000
*                                                                  0252 01019000
*       /*************************************************************/ 01020000
*       /*                                                           */ 01021000
*       /* CODE 07, F7, 08, 09, AND F9                               */ 01022000
*       /*                                                           */ 01023000
*       /*************************************************************/ 01024000
*                                                                  0252 01025000
*       IF TYPECODE=T07|TYPECODE=TF7|TYPECODE=T09|TYPECODE=T08|    0252 01026000
*                                    TYPECODE=TF9 THEN /*    @ZA29141*/ 01027000
         B     @RC00244                                            0252 01028000
@RF00244 CLI   TYPECODE(APRWKPTR),X'07'                            0252 01029000
         BE    @RT00252                                            0252 01030000
         CLI   TYPECODE(APRWKPTR),X'F7'                            0252 01031000
         BE    @RT00252                                            0252 01032000
         CLI   TYPECODE(APRWKPTR),X'09'                            0252 01033000
         BE    @RT00252                                            0252 01034000
         CLI   TYPECODE(APRWKPTR),X'08'                            0252 01035000
         BE    @RT00252                                            0252 01036000
         CLI   TYPECODE(APRWKPTR),X'F9'                            0252 01037000
         BNE   @RF00252                                            0252 01038000
@RT00252 DS    0H                                                  0253 01039000
*         DO;                       /* YES                   @ZD29141*/ 01040000
*           EBYTE431=ISDAMSC0;      /* YES, MOVE ALL 28 BYTES@ZD00192*/ 01041000
         MVC   EBYTE431(28,ENTRYPTR),ISDAMSC0(SENSEPTR)            0254 01042000
*           EFLAG8='0'B;            /* TURN SUMMARY FLAG OFF @ZM31121*/ 01043000
         NI    EFLAG8(ENTRYPTR),B'11111110'                        0255 01044000
*           IF TYPECODE=T09|TYPECODE=TF9 THEN /* 09 OR F9    @ZA29141*/ 01045000
         CLI   TYPECODE(APRWKPTR),X'09'                            0256 01046000
         BE    @RT00256                                            0256 01047000
         CLI   TYPECODE(APRWKPTR),X'F9'                            0256 01048000
         BNE   @RF00256                                            0256 01049000
@RT00256 DS    0H                                                  0257 01050000
*             DO;                   /* YES, MISPLACED CART   @ZA29141*/ 01051000
*               EFLAG6='1'B;        /* YES, SET MISPLACED CART BIT 0258 01052000
*                                                            @ZA29141*/ 01053000
         OI    EFLAG6(ENTRYPTR),B'00000100'                        0258 01054000
*               IF TYPECODE=TF9 THEN /* SUU ALSO             @ZA29141*/ 01055000
         CLI   TYPECODE(APRWKPTR),X'F9'                            0259 01056000
         BNE   @RF00259                                            0259 01057000
*                 EFLAG8='1'B;      /* PUT IN SUMMARY        @ZA29141*/ 01058000
         OI    EFLAG8(ENTRYPTR),B'00000001'                        0260 01059000
*               ELSE;               /* NOT SUU               @ZA29141*/ 01060000
@RF00259 DS    0H                                                  0262 01061000
*             END;                  /* END MISPLACED CART    @ZA29141*/ 01062000
*           ELSE                                                   0263 01063000
*             IF TYPECODE=T08 THEN  /* STAGE WITH ERROR      @ZM31121*/ 01064000
         B     @RC00256                                            0263 01065000
@RF00256 CLI   TYPECODE(APRWKPTR),X'08'                            0263 01066000
         BNE   @RF00263                                            0263 01067000
*               EFLAG3='1'B;        /* YES, SET FLAG3 BIT ON @ZM31121*/ 01068000
         OI    EFLAG3(ENTRYPTR),B'00100000'                        0264 01069000
*             ELSE                  /* MUST BE CODE 07 OR F7 @ZM31121*/ 01070000
*               EFLAG2='1'B;        /* SET MEDIA BIT         @ZD00192*/ 01071000
         B     @RC00263                                            0265 01072000
@RF00263 OI    EFLAG2(ENTRYPTR),B'01000000'                        0265 01073000
*           IF TYPECODE=TF7 THEN    /* MEDIA FAILURE         @ZM31121*/ 01074000
@RC00263 DS    0H                                                  0266 01075000
@RC00256 CLI   TYPECODE(APRWKPTR),X'F7'                            0266 01076000
         BNE   @RF00266                                            0266 01077000
*             EFLAG8='1'B;          /* SET SUMMARY BIT ON   @ZM31121*/  01078000
         OI    EFLAG8(ENTRYPTR),B'00000001'                        0267 01079000
*           ELSE;                   /* NO, LEAVE SUMMARY BIT OFF   0268 01080000
*                                                            @ZM31121*/ 01081000
@RF00266 DS    0H                                                  0269 01082000
*         END;                      /* END CODE 07,F7,09     @ZD00192*/ 01083000
*       ELSE                        /* NO, CHECK FORMAT 2    @ZD00192*/ 01084000
*                                                                  0270 01085000
*         /***********************************************************/ 01086000
*         /*                                                         */ 01087000
*         /* CODE 20                                                 */ 01088000
*         /*                                                         */ 01089000
*         /***********************************************************/ 01090000
*                                                                  0270 01091000
*         IF TYPECODE=T20 THEN      /* FORMAT 2              @ZD00192*/ 01092000
         B     @RC00252                                            0270 01093000
@RF00252 CLI   TYPECODE(APRWKPTR),X'20'                            0270 01094000
         BNE   @RF00270                                            0270 01095000
*           DO;                     /* YES                   @ZD00192*/ 01096000
*             EFLAG4='1'B;          /* SET UNIT UNUSABLE BIT @ZD00192*/ 01097000
         OI    EFLAG4(ENTRYPTR),B'00010000'                        0272 01098000
*             ENTCPUID=CPUSERID;    /* MOVE 5 BYTE CPUID     @ZD00192*/ 01099000
         MVC   ENTCPUID(5,ENTRYPTR),CPUSERID(LOGPTR)               0273 01100000
*             EBYTE9=SUBSENSE(23);  /* MOVE FSC BYTE 26      @ZD00192*/ 01101000
         MVC   EBYTE9(1,ENTRYPTR),SUBSENSE+22(SENSEPTR)            0274 01102000
*             EBYTE10=SUBSENSE(24); /* MOVE FSC BYTE 27      @ZD00192*/ 01103000
         MVC   EBYTE10(1,ENTRYPTR),SUBSENSE+23(SENSEPTR)           0275 01104000
*             EBYTE11=''B;          /* NOT USED NOW          @ZD00192*/ 01105000
         MVI   EBYTE11(ENTRYPTR),X'00'                             0276 01106000
*           END;                    /* END MSC UNIT UNUSABLE CODE  0277 01107000
*                                                            @ZD00192*/ 01108000
*         ELSE                      /* NO, CHECK FORMAT 3    @ZD00192*/ 01109000
*                                                                  0278 01110000
*           /*********************************************************/ 01111000
*           /*                                                       */ 01112000
*           /* CODE 30 AND 31                                        */ 01113000
*           /*                                                       */ 01114000
*           /*********************************************************/ 01115000
*                                                                  0278 01116000
*           IF TYPECODE=T30|TYPECODE=T31 THEN/* FORMAT 3     @ZD00192*/ 01117000
         B     @RC00270                                            0278 01118000
@RF00270 CLI   TYPECODE(APRWKPTR),X'30'                            0278 01119000
         BE    @RT00278                                            0278 01120000
         CLI   TYPECODE(APRWKPTR),X'31'                            0278 01121000
         BNE   @RF00278                                            0278 01122000
@RT00278 DS    0H                                                  0279 01123000
*             DO;                   /* YES, CS UNUSABLE OR ACCESSOR     01124000
*                                      IN GARAGE             @ZD00192*/ 01125000
*               IF TYPECODE=T30 THEN/* CODE 30               @ZD00192*/ 01126000
         CLI   TYPECODE(APRWKPTR),X'30'                            0280 01127000
         BNE   @RF00280                                            0280 01128000
*                 EFLAG4='1'B;      /* SET UNIT UNUSABLE BIT @ZD00192*/ 01129000
         OI    EFLAG4(ENTRYPTR),B'00010000'                        0281 01130000
*               ELSE                                               0282 01131000
*                 EFLAG5='1'B;      /* SET RECONFIGURE BIT   @ZD00192*/ 01132000
         B     @RC00280                                            0282 01133000
@RF00280 OI    EFLAG5(ENTRYPTR),B'00001000'                        0282 01134000
*               EBYTE4=SUBSTAT4;    /* MOVE BYTE 4           @ZD00192*/ 01135000
@RC00280 MVC   EBYTE4(1,ENTRYPTR),SUBSTAT4(SENSEPTR)               0283 01136000
*               EBYTE5=SUBSTAT5;    /* MOVE BYTE 5           @ZD00192*/ 01137000
         MVC   EBYTE5(1,ENTRYPTR),SUBSTAT5(SENSEPTR)               0284 01138000
*               EBYTE67=''B;        /* NOT USED NOW          @ZD00192*/ 01139000
         XC    EBYTE67(2,ENTRYPTR),EBYTE67(ENTRYPTR)               0285 01140000
*             END;                  /* END CS CODE           @ZD00192*/ 01141000
*           ELSE                    /* NO, CHECK FORMAT 4 OR 5 UNIT     01142000
*                                      UNUSABLE              @ZD00192*/ 01143000
*                                                                  0287 01144000
*             /*******************************************************/ 01145000
*             /*                                                     */ 01146000
*             /* CODE 10,40 AND 50                                   */ 01147000
*             /*                                                     */ 01148000
*             /*******************************************************/ 01149000
*                                                                  0287 01150000
*             IF TYPECODE=T10|TYPECODE=T40|TYPECODE=T50 THEN/*     0287 01151000
*                                      FORMAT 1,4, OR 5      @ZA00694*/ 01152000
         B     @RC00278                                            0287 01153000
@RF00278 CLI   TYPECODE(APRWKPTR),X'10'                            0287 01154000
         BE    @RT00287                                            0287 01155000
         CLI   TYPECODE(APRWKPTR),X'40'                            0287 01156000
         BE    @RT00287                                            0287 01157000
         CLI   TYPECODE(APRWKPTR),X'50'                            0287 01158000
         BNE   @RF00287                                            0287 01159000
@RT00287 DS    0H                                                  0288 01160000
*               DO;                 /* YES, CS,SA,DRD,DRC, OR 3330 0288 01161000
*                                      UNUSABLE              @ZD00192*/ 01162000
*                 EFLAG4='1'B;      /* SET UNIT UNUSABLE BIT @ZD00192*/ 01163000
         OI    EFLAG4(ENTRYPTR),B'00010000'                        0289 01164000
*                 EBYTE4=SUBSTAT4;  /* MOVE BYTE 4           @ZD00192*/ 01165000
         MVC   EBYTE4(1,ENTRYPTR),SUBSTAT4(SENSEPTR)               0290 01166000
*                 EBYTE5=SUBSTAT5;  /* MOVE BYTE 5           @ZD00192*/ 01167000
         MVC   EBYTE5(1,ENTRYPTR),SUBSTAT5(SENSEPTR)               0291 01168000
*                 EBYTE67=MSCFSC;   /* MOVE FSC BYTES 26,27  @ZD00192*/ 01169000
         MVC   EBYTE67(2,ENTRYPTR),MSCFSC(SENSEPTR)                0292 01170000
*               END;                /* END SA UNIT UNUSABLE  @ZD00192*/ 01171000
*             ELSE                  /* NO, MUST BE APR RECORDS     0294 01172000
*                                                            @ZD00192*/ 01173000
*               IF TYPECODE=T41|TYPECODE=T42 THEN/* FORMAT 4 APR   0294 01174000
*                                                            @ZD00192*/ 01175000
*                                                                  0294 01176000
         B     @RC00287                                            0294 01177000
@RF00287 CLI   TYPECODE(APRWKPTR),X'41'                            0294 01178000
         BE    @RT00294                                            0294 01179000
         CLI   TYPECODE(APRWKPTR),X'42'                            0294 01180000
         BNE   @RF00294                                            0294 01181000
@RT00294 DS    0H                                                  0295 01182000
*                 /***************************************************/ 01183000
*                 /*                                                 */ 01184000
*                 /* CODE 41 AND 42                                  */ 01185000
*                 /*                                                 */ 01186000
*                 /***************************************************/ 01187000
*                                                                  0295 01188000
*                 DO;               /* YES, CODE 41 OR 42    @ZD00192*/ 01189000
*                   EFLAG1='1'B;    /* SET IN APR BIT        @ZD00192*/ 01190000
*                   EFLAG8='0'B;    /* TURN SUMMARY BIT OFF  @ZD00192*/ 01191000
         OI    EFLAG1(ENTRYPTR),B'10000000'                        0297 01192000
         NI    EFLAG8(ENTRYPTR),B'11111110'                        0297 01193000
*                   EBYTE4=SARETRY; /* MOVE BYTE 9           @ZD00192*/ 01194000
         MVC   EBYTE4(1,ENTRYPTR),SARETRY(SENSEPTR)                0298 01195000
*                   EBYTE5=SALOWAD2;/* MOVE BYTE 10          @ZD00192*/ 01196000
         MVC   EBYTE5(1,ENTRYPTR),SALOWAD2(SENSEPTR)               0299 01197000
*                   EBYTE67=MSCFSC; /* MOVE FSC BYTES 26,27  @ZD00192*/ 01198000
         MVC   EBYTE67(2,ENTRYPTR),MSCFSC(SENSEPTR)                0300 01199000
*                 END;              /* END APR RECORDS CODE  @ZD00192*/ 01200000
*               ELSE                /* ERROR - INVALID TYPECODE    0302 01201000
*                                                            @ZD00192*/ 01202000
*                 RETCODE=20;       /* SET ERROR RETURN CODE @ZD00192*/ 01203000
         B     @RC00294                                            0302 01204000
@RF00294 LA    RETCODE,20                                          0302 01205000
*   END ADDVAR;                     /* END ADDVAR PROC       @ZD00192*/ 01206000
@EL00006 DS    0H                                                  0303 01207000
@EF00006 DS    0H                                                  0303 01208000
@ER00006 L     @14,12(,@13)                                        0303 01209000
         BR    @14                                                 0303 01210000
*                                                                  0304 01211000
*   /*****************************************************************/ 01212000
*   /*                                                               */ 01213000
*   /* GETACCUM - GET A 2K BLOCK AND CHAIN IT TO THE PREVIOUS BLOCK  */ 01214000
*   /*                                                               */ 01215000
*   /*****************************************************************/ 01216000
*                                                                  0304 01217000
*GETACCUM:                                                         0304 01218000
*   PROC OPTIONS(SAVE(14));         /* GET ACCUMULATOR CODE  @ZD00192*/ 01219000
GETACCUM ST    @14,@SA00007                                        0304 01220000
*   CORELEN=APRACCL;                /* = LENGTH OF BLOCK     @ZD00192*/ 01221000
         MVC   CORELEN(3,CVTPTR),@CF00386+1                        0305 01222000
*   SPNO=APRSPNO;                   /* SET SUBPOOL NUMBER    @ZD00192*/ 01223000
         MVC   SPNO(1,CVTPTR),APRSPNO                              0306 01224000
*   RFY                                                            0307 01225000
*     R1 RSTD;                      /*                       @ZD00192*/ 01226000
*   R1=ADDR(WORKCALL);              /* R1 -> ADDR(WORKPTR)   @ZD00192*/ 01227000
         LA    R1,WORKCALL(,CVTPTR)                                0308 01228000
*   CALL ISDAGET0;                  /* CALL ISDAGET0 TO DO GETMAIN 0309 01229000
*                                                            @ZD00192*/ 01230000
         L     @15,@CV00397                                        0309 01231000
         BALR  @14,@15                                             0309 01232000
*   RFY                                                            0310 01233000
*     R15 RSTD;                     /* RESTRICT REG 15       @ZD00192*/ 01234000
*   RETCODE=R15;                    /* SAVE RETURN CODE FROM ISDAGET0   01235000
*                                                            @ZD00192*/ 01236000
         LR    RETCODE,R15                                         0311 01237000
*   RFY                                                            0312 01238000
*    (R1,                                                          0312 01239000
*     R15) UNRSTD;                  /* RELEASE REG 1 AND 15  @ZD00192*/ 01240000
*   IF RETCODE=0 THEN                                              0313 01241000
         LTR   RETCODE,RETCODE                                     0313 01242000
         BNZ   @RF00313                                            0313 01243000
*     DO;                           /* GOT SPACE OK          @ZD00192*/ 01244000
*       GET0PTR=COREADDR;           /* SET LOCAL PTR TO CORE ADDRESS    01245000
*                                                            @ZD00192*/ 01246000
         L     GET0PTR,COREADDR(,CVTPTR)                           0315 01247000
*       ACCUMCNT=ACCUMCNT+1;        /* INC ACCUM COUNT       @ZD00192*/ 01248000
         LA    @04,1                                               0316 01249000
         LH    @15,ACCUMCNT(,APRWKPTR)                             0316 01250000
         ALR   @15,@04                                             0316 01251000
         STH   @15,ACCUMCNT(,APRWKPTR)                             0316 01252000
*       BLOCKCNT=ACCUMCNT;          /* ADD COUNT TO ISDAGHDR @ZD00192*/ 01253000
         STH   @15,BLOCKCNT(,GET0PTR)                              0317 01254000
*       BLOCKID='APR0';             /* ADD APR ID            @ZD00192*/ 01255000
         MVC   BLOCKID(4,GET0PTR),@CC00447                         0318 01256000
*       LASTPTR=ACCLAST;            /* STORE BACKWARD PTR    @ZD00192*/ 01257000
         MVC   LASTPTR(4,GET0PTR),ACCLAST(APRWKPTR)                0319 01258000
*       IF ACCUMCNT=1 THEN          /* IS THIS FIRST ACCUMULATOR   0320 01259000
*                                                            @ZD00192*/ 01260000
         CR    @15,@04                                             0320 01261000
         BNE   @RF00320                                            0320 01262000
*         DO;                       /* YES, SAVE ADDRESSES   @ZD00192*/ 01263000
*           ACCUMPTR=STARTPTR;      /* SET PTR TO START OF DATA IN 0322 01264000
*                                      FIRST ACCUMULATOR     @ZD00192*/ 01265000
         MVC   ACCUMPTR(4,APRWKPTR),STARTPTR(GET0PTR)              0322 01266000
*           ACCM0PTR=GET0PTR;       /* SET PTR TO START OF FIRST ACC    01267000
*                                      HEADER                @ZD00192*/ 01268000
         ST    GET0PTR,ACCM0PTR(,APRWKPTR)                         0323 01269000
*         END;                      /* END FIRST ACCUMULATOR CODE  0324 01270000
*                                                            @ZD00192*/ 01271000
*       ELSE                        /* NOT FIRST ACCUMULATOR @ZD00192*/ 01272000
*         DO;                       /* STORE FORWARD POINTER @ZD00192*/ 01273000
         B     @RC00320                                            0325 01274000
@RF00320 DS    0H                                                  0326 01275000
*           GET0PTR=ACCLAST;        /* PTR TO LAST BLOCK     @ZD00192*/ 01276000
         L     GET0PTR,ACCLAST(,APRWKPTR)                          0326 01277000
*           NEXTPTR=COREADDR;       /* PTR TO THIS BLOCK     @ZD00192*/ 01278000
         L     @04,COREADDR(,CVTPTR)                               0327 01279000
         ST    @04,NEXTPTR(,GET0PTR)                               0327 01280000
*           GET0PTR=COREADDR;       /* RESTORE CURRENT PTR   @ZD00192*/ 01281000
         LR    GET0PTR,@04                                         0328 01282000
*         END;                      /* END FORWARD CHAIN CODE@ZD00192*/ 01283000
*       ACCLAST=GET0PTR;            /* SAVE PTR TO LAST BLOCK@ZD00192*/ 01284000
@RC00320 ST    GET0PTR,ACCLAST(,APRWKPTR)                          0330 01285000
*       CURRNEXT=STARTPTR;          /* SET PTR TO NEXT ENTRY @ZD00192*/ 01286000
         MVC   CURRNEXT(4,APRWKPTR),STARTPTR(GET0PTR)              0331 01287000
*       ACCUMEND=ENDPTR;            /* SET PTR TO END OF APRACCUM  0332 01288000
*                                                            @ZD00192*/ 01289000
         MVC   ACCUMEND(4,APRWKPTR),ENDPTR(GET0PTR)                0332 01290000
* /*    CALL TRACEWRK                  DUMP WORK AREA IF REQ @ZD00192*/ 01291000
* /*    CALL TRACEHD                   DUMP ACC HEADER IF REQ@ZD00192*/ 01292000
*     END;                          /* END INITIALIZE HEADER @ZD00192*/ 01293000
*   ELSE;                           /* NO SPACE FOR ACCUMULATOR    0334 01294000
*                                                            @ZD00192*/ 01295000
@RF00313 DS    0H                                                  0335 01296000
*   END GETACCUM;                   /* END GET ACCUMULATOR   @ZD00192*/ 01297000
@EL00007 DS    0H                                                  0335 01298000
@EF00007 DS    0H                                                  0335 01299000
@ER00007 L     @14,@SA00007                                        0335 01300000
         BR    @14                                                 0335 01301000
*                                                                  0336 01302000
*   /*****************************************************************/ 01303000
*   /*                                                               */ 01304000
*   /* FREECORE - PROC TO FREE ALL ACCUMULATORS AND WORK AREA        */ 01305000
*   /*                                                               */ 01306000
*   /*****************************************************************/ 01307000
*                                                                  0336 01308000
*FREECORE:                                                         0336 01309000
*   PROC OPTIONS(SAVE(14));         /* PROC TO FREE CORE     @ZD00192*/ 01310000
FREECORE ST    @14,@SA00008                                        0336 01311000
*   IF APR00PTR^=0 THEN             /* HAVE WORKAREA         @ZD00192*/ 01312000
         ICM   @10,15,APR00PTR(CVTPTR)                             0337 01313000
         BZ    @RF00337                                            0337 01314000
*     DO;                           /* YES, FREE ALL CORE    @ZD00192*/ 01315000
* /*    CALL TRACEWRK                  DUMP WORK AREA IF REQ @ZD00192*/ 01316000
*       GET0PTR=ACCM0PTR;           /* SET PTR TO 1ST ACCUM  @ZD00192*/ 01317000
*                                                                  0339 01318000
         L     GET0PTR,ACCM0PTR(,APRWKPTR)                         0339 01319000
*       /*************************************************************/ 01320000
*       /*                                                           */ 01321000
*       /* FREE ACCUMULATOR BLOCKS                                   */ 01322000
*       /*                                                           */ 01323000
*       /*************************************************************/ 01324000
*                                                                  0340 01325000
*       DO WHILE(GET0PTR^=0);       /* LOOP THROUGH ACCUMULATORS   0340 01326000
*                                                            @ZD00192*/ 01327000
         B     @DE00340                                            0340 01328000
@DL00340 DS    0H                                                  0341 01329000
* /*      CALL TRACEHD                 DUMP HEADER IF REQ    @ZD00192*/ 01330000
*         ENTRYPTR=NEXTPTR;         /* SAVE NEXT ADDRESS     @ZD00192*/ 01331000
         L     ENTRYPTR,NEXTPTR(,GET0PTR)                          0341 01332000
*         SPNOLEN=GET0SPLN;         /* MOVE SPNO AND LENGTH  @ZD00192*/ 01333000
         MVC   SPNOLEN(4,CVTPTR),GET0SPLN(GET0PTR)                 0342 01334000
*         COREADDR=GET0PTR;         /* MOVE ADDRESS          @ZD00192*/ 01335000
         ST    GET0PTR,COREADDR(,CVTPTR)                           0343 01336000
*         RFY                                                      0344 01337000
*           R1 RSTD;                                       /*@ZD00192*/ 01338000
*         R1=ADDR(WORKCALL);        /* R1 -> WORKPTR         @ZD00192*/ 01339000
         LA    R1,WORKCALL(,CVTPTR)                                0345 01340000
*         CALL ISDAFREE;            /* FREE CORE             @ZD00192*/ 01341000
         L     @15,@CV00399                                        0346 01342000
         BALR  @14,@15                                             0346 01343000
*         RFY                                                      0347 01344000
*           R1 UNRSTD;                                     /*@ZD00192*/ 01345000
*         GET0PTR=ENTRYPTR;         /* SET NEXT ADDRESS      @ZD00192*/ 01346000
         LR    GET0PTR,ENTRYPTR                                    0348 01347000
*       END;                        /* END OF FREE ACCUM LOOP@ZD00192*/ 01348000
*                                                                  0349 01349000
@DE00340 LTR   GET0PTR,GET0PTR                                     0349 01350000
         BNZ   @DL00340                                            0349 01351000
*       /*************************************************************/ 01352000
*       /*                                                           */ 01353000
*       /* FREE APRWORK - APR WORK AREA                              */ 01354000
*       /*                                                           */ 01355000
*       /*************************************************************/ 01356000
*                                                                  0350 01357000
*       CORELEN=LENGTH(APRWORK);    /* SET LENGTH            @ZD00192*/ 01358000
         MVC   CORELEN(3,CVTPTR),@CF00451+1                        0350 01359000
*       SPNO=APRSPNO;               /* SET SUBPOOL NUMBER    @ZD00192*/ 01360000
         MVC   SPNO(1,CVTPTR),APRSPNO                              0351 01361000
*       COREADDR=APR00PTR;          /* SET ADDRESS           @ZD00192*/ 01362000
         MVC   COREADDR(4,CVTPTR),APR00PTR(CVTPTR)                 0352 01363000
*       RFY                                                        0353 01364000
*         R1 RSTD;                                         /*@ZD00192*/ 01365000
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @ZD00192*/ 01366000
         LA    R1,WORKCALL(,CVTPTR)                                0354 01367000
*       CALL ISDAFREE;              /* FREE WORK AREA        @ZD00192*/ 01368000
         L     @15,@CV00399                                        0355 01369000
         BALR  @14,@15                                             0355 01370000
*       RFY                                                        0356 01371000
*         R1 UNRSTD;                                       /*@ZD00192*/ 01372000
*     END;                          /* END FREE ALL CORE     @ZD00192*/ 01373000
*   ELSE;                           /* NO WORK AREA TO FREE  @ZD00192*/ 01374000
@RF00337 DS    0H                                                  0359 01375000
*   APR00PTR=0;                     /* SET APR POINTER ZERO  @ZD00192*/ 01376000
         SLR   @10,@10                                             0359 01377000
         ST    @10,APR00PTR(,CVTPTR)                               0359 01378000
*   CAPRSUU='00'X;                  /* RESET APR CALL POINTER@ZD00192*/ 01379000
         L     @10,LPARMPTR                                        0360 01380000
         MVI   CAPRSUU(@10),X'00'                                  0360 01381000
*   END FREECORE;                   /* END OF FREECORE PROC  @ZD00192*/ 01382000
@EL00008 DS    0H                                                  0361 01383000
@EF00008 DS    0H                                                  0361 01384000
@ER00008 L     @14,@SA00008                                        0361 01385000
         BR    @14                                                 0361 01386000
*   END ISDAAPR0                    /* END OF ISDAAPR0       @ZD00192*/ 01387000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01388000
*/*%INCLUDE SYSLIB  (ISDACVT )                                        * 01389000
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                        * 01390000
*/*%INCLUDE SYSLIB  (ISDAGHDR)                                        * 01391000
*/*%INCLUDE SYSLIB  (ISDASOBR)                                        * 01392000
*/*%INCLUDE SYSLIB  (ISDAMSCS)                                        * 01393000
*/*%INCLUDE SYSLIB  (ISDAWORK)                                        * 01394000
*/*%INCLUDE SYSLIB  (ISDAMSC0)                                        * 01395000
*;                                                                 0362 01396000
@DATA    DS    0H                                                       01397000
@CH00100 DC    H'2'                                                     01398000
@CH00104 DC    H'4'                                                     01399000
@CH00433 DC    H'32'                                                    01400000
@CH00432 DC    H'36'                                                    01401000
@CH00390 DC    H'51'                                                    01402000
@CH00431 DC    H'56'                                                    01403000
@DATD    DSECT                                                          01404000
         DS    0F                                                       01405000
@SA00001 DS    18F                                                      01406000
@PC00001 DS    1F                                                       01407000
@SA00004 DS    1F                                                       01408000
@SA00007 DS    0F                                                       01409000
@SA00008 DS    0F                                                       01410000
@SA00002 DS    0F                                                       01411000
         DS    1F                                                       01412000
ISDAAPR0 CSECT                                                          01413000
         DS    0F                                                       01414000
@CF00451 DC    F'124'                                                   01415000
@CF00386 DC    F'2048'                                                  01416000
@DATD    DSECT                                                          01417000
         DS    0D                                                       01418000
LPARMPTR DS    A                                                        01419000
TERNCOD0 DS    F                                                        01420000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01421000
@ENDDATD EQU   *                                                        01422000
ISDAAPR0 CSECT                                                          01423000
         NOPR  ((@ENDDATD-@DATD)/161*16)                                01424000
         DS    0F                                                       01425000
@SIZDATD DC    AL1(0)                                                   01426000
         DC    AL3(@ENDDATD-@DATD)                                      01427000
@CV00397 DC    V(ISDAGET0)                                              01428000
@CV00398 DC    V(ISDAGET1)                                              01429000
@CV00399 DC    V(ISDAFREE)                                              01430000
         DS    0D                                                       01431000
@CC00447 DC    C'APR0'                                                  01432000
@CB00423 DC    X'00000000'                                              01433000
@CB00421 DC    X'8000'                                                  01434000
@CB00422 DC    X'0FFF'                                                  01435000
APRSPNO  DC    X'01'                                                    01436000
PATCH    DC    50X'00'                                                  01437000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01438000
@01      EQU   01                                                       01439000
@02      EQU   02                                                       01440000
@03      EQU   03                                                       01441000
@04      EQU   04                                                       01442000
@05      EQU   05                                                       01443000
@06      EQU   06                                                       01444000
@07      EQU   07                                                       01445000
@08      EQU   08                                                       01446000
@09      EQU   09                                                       01447000
@10      EQU   10                                                       01448000
@11      EQU   11                                                       01449000
@12      EQU   12                                                       01450000
@13      EQU   13                                                       01451000
@14      EQU   14                                                       01452000
@15      EQU   15                                                       01453000
RETCODE  EQU   @06                                                      01454000
ENTRYPTR EQU   @04                                                      01455000
APRWKPTR EQU   @03                                                      01456000
SENSEPTR EQU   @05                                                      01457000
LOGPTR   EQU   @10                                                      01458000
GET0PTR  EQU   @07                                                      01459000
CVTPTR   EQU   @02                                                      01460000
R1       EQU   @01                                                      01461000
R15      EQU   @15                                                      01462000
ISDACVT  EQU   0                                                        01463000
CVTPTRS0 EQU   ISDACVT                                                  01464000
DATAPTR  EQU   CVTPTRS0                                                 01465000
SDATAPTR EQU   CVTPTRS0+4                                               01466000
PARMPTR  EQU   CVTPTRS0+8                                               01467000
SDA00PTR EQU   CVTPTRS0+12                                              01468000
APR00PTR EQU   CVTPTRS0+80                                              01469000
WORKCALL EQU   CVTPTRS0+96                                              01470000
GET0CALL EQU   ISDACVT+100                                              01471000
SPNOLEN  EQU   GET0CALL                                                 01472000
SPNO     EQU   SPNOLEN                                                  01473000
CORELEN  EQU   SPNOLEN+1                                                01474000
COREADDR EQU   GET0CALL+4                                               01475000
HEXPCALL EQU   ISDACVT+108                                              01476000
PRT0CALL EQU   ISDACVT+120                                              01477000
OUTLINE  EQU   PRT0CALL                                                 01478000
SDADATD  EQU   ISDACVT+256                                              01479000
PRTDATD  EQU   ISDACVT+416                                              01480000
ISDAPRMS EQU   0                                                        01481000
CINPUT   EQU   ISDAPRMS                                                 01482000
CSTART   EQU   ISDAPRMS+2                                               01483000
CEND     EQU   ISDAPRMS+6                                               01484000
CFSCONLY EQU   ISDAPRMS+13                                              01485000
CSSIDF   EQU   ISDAPRMS+17                                              01486000
CSERIAL  EQU   ISDAPRMS+21                                              01487000
CREPORTS EQU   ISDAPRMS+33                                              01488000
CAPRSUU  EQU   CREPORTS+10                                              01489000
ISDAGHDR EQU   0                                                        01490000
STARTPTR EQU   ISDAGHDR                                                 01491000
ENDPTR   EQU   ISDAGHDR+4                                               01492000
GET0SPLN EQU   ISDAGHDR+8                                               01493000
NEXTPTR  EQU   ISDAGHDR+12                                              01494000
LASTPTR  EQU   ISDAGHDR+16                                              01495000
BLOCKID  EQU   ISDAGHDR+20                                              01496000
BLOCKCNT EQU   ISDAGHDR+24                                              01497000
OBRMDR   EQU   0                                                        01498000
SCW      EQU   OBRMDR                                                   01499000
SWITCHES EQU   OBRMDR+6                                                 01500000
DATETIME EQU   OBRMDR+12                                                01501000
DATE     EQU   DATETIME                                                 01502000
TIME     EQU   DATETIME+4                                               01503000
CPUSERID EQU   OBRMDR+21                                                01504000
ISDAMSCS EQU   0                                                        01505000
STATUS   EQU   ISDAMSCS                                                 01506000
SUBSYSID EQU   ISDAMSCS+1                                               01507000
SSIDFLAG EQU   SUBSYSID                                                 01508000
SSID     EQU   SUBSYSID                                                 01509000
FORMATNO EQU   ISDAMSCS+3                                               01510000
SUBSENSE EQU   ISDAMSCS+4                                               01511000
SUBSTAT4 EQU   SUBSENSE                                                 01512000
SUBSTAT5 EQU   SUBSENSE+1                                               01513000
SARETRY  EQU   SUBSENSE+5                                               01514000
SALOWAD2 EQU   SUBSENSE+6                                               01515000
SUBFMTMG EQU   SUBSENSE+7                                               01516000
MSCFSC   EQU   SUBSENSE+22                                              01517000
ISDAWORK EQU   0                                                        01518000
INFLAGS  EQU   ISDAWORK                                                 01519000
INDEVTYP EQU   INFLAGS+2                                                01520000
INRECCUA EQU   ISDAWORK+6                                               01521000
ISDAMSC0 EQU   4                                                        01522000
VOLID0   EQU   ISDAMSC0                                                 01523000
CHR0     EQU   VOLID0                                                   01524000
TBLID0   EQU   ISDAMSC0+6                                               01525000
TERMCOD0 EQU   ISDAMSC0+8                                               01526000
CSN0     EQU   16                                                       01527000
APRWORK  EQU   0                                                        01528000
APRWORK0 EQU   APRWORK                                                  01529000
ACCM0PTR EQU   APRWORK0                                                 01530000
ACCUMPTR EQU   APRWORK0+4                                               01531000
ACCUMEND EQU   APRWORK0+8                                               01532000
CURRPTR  EQU   APRWORK0+12                                              01533000
CURRNEXT EQU   APRWORK0+16                                              01534000
ACCLAST  EQU   APRWORK0+20                                              01535000
TOTALENT EQU   APRWORK0+24                                              01536000
CURRLEN  EQU   APRWORK0+44                                              01537000
ACCUMCNT EQU   APRWORK0+46                                              01538000
T07COUNT EQU   APRWORK0+50                                              01539000
T09COUNT EQU   APRWORK0+52                                              01540000
T41COUNT EQU   APRWORK0+54                                              01541000
SAVEDYTS EQU   APRWORK0+58                                              01542000
SAVEDAYT EQU   SAVEDYTS                                                 01543000
SAVSEQEN EQU   SAVEDYTS+8                                               01544000
SAVESSID EQU   APRWORK0+68                                              01545000
APRSSIDF EQU   APRWORK0+70                                              01546000
TYPECODE EQU   APRWORK0+90                                              01547000
APRFLAGS EQU   APRWORK0+91                                              01548000
APRTEMPS EQU   APRWORK+92                                               01549000
TEMP9    EQU   APRTEMPS                                                 01550000
TEMP8    EQU   TEMP9                                                    01551000
TEMP7    EQU   TEMP8                                                    01552000
TEMP6    EQU   TEMP7                                                    01553000
TEMP5    EQU   TEMP6                                                    01554000
TEMP4    EQU   TEMP5                                                    01555000
TEMP3    EQU   TEMP4                                                    01556000
TEMP2    EQU   TEMP3                                                    01557000
TEMP20   EQU   APRTEMPS+9                                               01558000
TEMP1417 EQU   TEMP20+13                                                01559000
ACCENTRY EQU   0                                                        01560000
ENTFIXED EQU   ACCENTRY                                                 01561000
NEXTENT  EQU   ENTFIXED                                                 01562000
ENTFLAGS EQU   ENTFIXED+4                                               01563000
ENTCOUNT EQU   ENTFLAGS                                                 01564000
ELENGTH  EQU   ENTFLAGS+2                                               01565000
ETYPCODE EQU   ENTFLAGS+3                                               01566000
EFMTMSG  EQU   ENTFLAGS+4                                               01567000
ENTFLAG  EQU   ENTFLAGS+5                                               01568000
EFLAG1   EQU   ENTFLAG                                                  01569000
EFLAG2   EQU   ENTFLAG                                                  01570000
EFLAG3   EQU   ENTFLAG                                                  01571000
EFLAG4   EQU   ENTFLAG                                                  01572000
EFLAG5   EQU   ENTFLAG                                                  01573000
EFLAG6   EQU   ENTFLAG                                                  01574000
EFLAG7   EQU   ENTFLAG                                                  01575000
EFLAG8   EQU   ENTFLAG                                                  01576000
ENTSSID  EQU   ENTFLAGS+6                                               01577000
ENTDAYTS EQU   ENTFIXED+12                                              01578000
ENTDAYT  EQU   ENTDAYTS                                                 01579000
ENTSEQEN EQU   ENTDAYTS+8                                               01580000
ENTVAR   EQU   ACCENTRY+24                                              01581000
EBYTE03  EQU   ENTVAR                                                   01582000
EBYTE431 EQU   ENTVAR+4                                                 01583000
ENTVOLID EQU   EBYTE431                                                 01584000
ENTCPUID EQU   ENTVOLID                                                 01585000
EBYTE45  EQU   ENTCPUID                                                 01586000
EBYTE4   EQU   EBYTE45                                                  01587000
EBYTE5   EQU   EBYTE45+1                                                01588000
EBYTE67  EQU   ENTCPUID+2                                               01589000
EBYTE9   EQU   ENTVOLID+5                                               01590000
EBYTE10  EQU   EBYTE431+6                                               01591000
EBYTE11  EQU   EBYTE431+7                                               01592000
EBYT1215 EQU   EBYTE431+8                                               01593000
ENTCSN   EQU   EBYTE431+12                                              01594000
WORKPTR  EQU   0                                                        01595000
*                                      START UNREFERENCED COMPONENTS    01596000
EBYT3031 EQU   EBYTE431+26                                              01597000
EBYT2829 EQU   EBYTE431+24                                              01598000
EBYT1415 EQU   EBYT1215+2                                               01599000
EBYTE13  EQU   EBYT1215+1                                               01600000
EBYTE12  EQU   EBYT1215                                                 01601000
EBYTE8   EQU   ENTCPUID+4                                               01602000
EBYTE7   EQU   EBYTE67+1                                                01603000
EBYTE6   EQU   EBYTE67                                                  01604000
EBYTE3   EQU   EBYTE03+3                                                01605000
EBYTE2   EQU   EBYTE03+2                                                01606000
EBYTE1   EQU   EBYTE03+1                                                01607000
EBYTE0   EQU   EBYTE03                                                  01608000
ENTSPARE EQU   ENTFIXED+21                                              01609000
ENTTIME  EQU   ENTDAYT+4                                                01610000
ENTDATE  EQU   ENTDAYT                                                  01611000
TEMP3032 EQU   APRTEMPS+29                                              01612000
TEMP1820 EQU   TEMP20+17                                                01613000
TEMP1617 EQU   TEMP1417+2                                               01614000
TEMP1415 EQU   TEMP1417                                                 01615000
TEMP1113 EQU   TEMP20+10                                                01616000
TEMP710  EQU   TEMP20+6                                                 01617000
TEMP16   EQU   TEMP20                                                   01618000
TEMP1    EQU   TEMP2                                                    01619000
SAVESAPR EQU   APRWORK0+86                                              01620000
APRSSIDS EQU   APRSSIDF                                                 01621000
SAVSPARE EQU   APRWORK0+67                                              01622000
SAVETIME EQU   SAVEDAYT+4                                               01623000
SAVEDATE EQU   SAVEDAYT                                                 01624000
T08COUNT EQU   APRWORK0+56                                              01625000
POINTLEN EQU   APRWORK0+48                                              01626000
LINECNT  EQU   APRWORK0+40                                              01627000
STARTPNT EQU   APRWORK0+36                                              01628000
STARTAPR EQU   APRWORK0+32                                              01629000
SORTCNT  EQU   APRWORK0+28                                              01630000
LOADERR0 EQU   ISDAMSC0+26                                              01631000
RWLOADS0 EQU   ISDAMSC0+24                                              01632000
SWCHECK0 EQU   ISDAMSC0+22                                              01633000
SRCHECK0 EQU   ISDAMSC0+20                                              01634000
WUSECNT0 EQU   ISDAMSC0+16                                              01635000
RUSECNT0 EQU   ISDAMSC0+12                                              01636000
XYZL0    EQU   ISDAMSC0+10                                              01637000
@NM00008 EQU   ISDAMSC0+9                                               01638000
MSGCODE0 EQU   ISDAMSC0+7                                               01639000
SSID0    EQU   CHR0                                                     01640000
DEVPTR   EQU   ISDAWORK+16                                              01641000
NOUTREC  EQU   ISDAWORK+12                                              01642000
NINREC   EQU   ISDAWORK+8                                               01643000
CUABYTE1 EQU   INRECCUA+1                                               01644000
CUABYTE0 EQU   INRECCUA                                                 01645000
DLENGTH  EQU   ISDAWORK+4                                               01646000
SDAFLAG0 EQU   INFLAGS+3                                                01647000
INSOURCE EQU   INFLAGS+1                                                01648000
IRECTYPE EQU   INFLAGS                                                  01649000
SANOMSCD EQU   SUBSENSE+27                                              01650000
RCYLMSCD EQU   SUBSENSE+25                                              01651000
RUAMSCD  EQU   SUBSENSE+24                                              01652000
@NM00007 EQU   SUBSENSE+21                                              01653000
RUADASD  EQU   SUBSENSE+20                                              01654000
DASDFSC  EQU   SUBSENSE+18                                              01655000
@NM00006 EQU   SUBSENSE+8                                               01656000
MSGCODEN EQU   SUBFMTMG                                                 01657000
SUBFMTNO EQU   SUBFMTMG                                                 01658000
@NM00005 EQU   SUBSENSE+4                                               01659000
DASDFMTN EQU   SUBSENSE+3                                               01660000
SALOWADD EQU   SUBSENSE+2                                               01661000
SSIDDEVT EQU   SSID+1                                                   01662000
SSIDLIBN EQU   SSID+1                                                   01663000
SSIDTYPE EQU   SSID                                                     01664000
CPUID    EQU   CPUSERID+3                                               01665000
CPUSER   EQU   CPUSERID                                                 01666000
VERNO    EQU   OBRMDR+20                                                01667000
TENSHUND EQU   TIME+3                                                   01668000
SECOND   EQU   TIME+2                                                   01669000
MINUTE   EQU   TIME+1                                                   01670000
HOUR     EQU   TIME                                                     01671000
DAY      EQU   DATE+2                                                   01672000
YEAR     EQU   DATE                                                     01673000
RECENTRY EQU   OBRMDR+11                                                01674000
RCDCNT   EQU   OBRMDR+10                                                01675000
SWITCH3  EQU   SWITCHES+3                                               01676000
SWITCH2  EQU   SWITCHES+2                                               01677000
SWITCH1  EQU   SWITCHES+1                                               01678000
SWITCH0  EQU   SWITCHES                                                 01679000
SYSREL   EQU   OBRMDR+5                                                 01680000
CLASRC   EQU   OBRMDR+4                                                 01681000
@NM00004 EQU   SCW+3                                                    01682000
SCODE    EQU   SCW+2                                                    01683000
SLENGTH  EQU   SCW                                                      01684000
@NM00003 EQU   ISDAGHDR+26                                              01685000
GET0LEN  EQU   GET0SPLN+1                                               01686000
GET0SPNO EQU   GET0SPLN                                                 01687000
CTRACE   EQU   ISDAPRMS+48                                              01688000
CGEN     EQU   ISDAPRMS+47                                              01689000
CDETAIL  EQU   ISDAPRMS+46                                              01690000
CPERIOD  EQU   ISDAPRMS+45                                              01691000
CPWR     EQU   CREPORTS+11                                              01692000
CDRC     EQU   CREPORTS+9                                               01693000
CDAT     EQU   CREPORTS+8                                               01694000
CCSBCSF  EQU   CREPORTS+7                                               01695000
CDCKTLX  EQU   CREPORTS+6                                               01696000
CEQC     EQU   CREPORTS+5                                               01697000
CFSC     EQU   CREPORTS+4                                               01698000
CDHEDHU  EQU   CREPORTS+3                                               01699000
CSUM     EQU   CREPORTS+2                                               01700000
CPAD     EQU   CREPORTS+1                                               01701000
CDCS     EQU   CREPORTS                                                 01702000
CSERNO   EQU   CSERIAL+4                                                01703000
@NM00002 EQU   CSERIAL+3                                                01704000
CIBM     EQU   CSERIAL                                                  01705000
CRATIO   EQU   ISDAPRMS+19                                              01706000
CSSID    EQU   CSSIDF                                                   01707000
@NM00001 EQU   CSSIDF                                                   01708000
CFSC34   EQU   CFSCONLY+2                                               01709000
CFSC12   EQU   CFSCONLY                                                 01710000
CTYPE    EQU   ISDAPRMS+11                                              01711000
CSUMMARY EQU   ISDAPRMS+10                                              01712000
CENDDAY  EQU   CEND+2                                                   01713000
CENDYEAR EQU   CEND                                                     01714000
CSTDAY   EQU   CSTART+2                                                 01715000
CSTYEAR  EQU   CSTART                                                   01716000
CHISTIN  EQU   CINPUT+1                                                 01717000
CLOGIN   EQU   CINPUT                                                   01718000
PRTSA001 EQU   PRTDATD                                                  01719000
SDATEMPS EQU   SDADATD+136                                              01720000
SDASA002 EQU   SDADATD+76                                               01721000
SDAPC001 EQU   SDADATD+72                                               01722000
SDASA001 EQU   SDADATD                                                  01723000
SDARPTID EQU   PRT0CALL+133                                             01724000
LINE     EQU   OUTLINE+1                                                01725000
ANSI     EQU   OUTLINE                                                  01726000
DUMPIDNO EQU   HEXPCALL+8                                               01727000
DUMPLEN  EQU   HEXPCALL+4                                               01728000
DUMPADDR EQU   HEXPCALL                                                 01729000
GEN00PTR EQU   CVTPTRS0+92                                              01730000
CNFG0PTR EQU   CVTPTRS0+88                                              01731000
PWR00PTR EQU   CVTPTRS0+84                                              01732000
DRC00PTR EQU   CVTPTRS0+76                                              01733000
DAT00PTR EQU   CVTPTRS0+72                                              01734000
CSB00PTR EQU   CVTPTRS0+68                                              01735000
DCK00PTR EQU   CVTPTRS0+64                                              01736000
EQC00PTR EQU   CVTPTRS0+60                                              01737000
FSC00PTR EQU   CVTPTRS0+56                                              01738000
DHE00PTR EQU   CVTPTRS0+52                                              01739000
SUM00PTR EQU   CVTPTRS0+48                                              01740000
PAD00PTR EQU   CVTPTRS0+44                                              01741000
DCS00PTR EQU   CVTPTRS0+40                                              01742000
LOG00PTR EQU   CVTPTRS0+36                                              01743000
HIST0PTR EQU   CVTPTRS0+32                                              01744000
PRT00PTR EQU   CVTPTRS0+28                                              01745000
GET00PTR EQU   CVTPTRS0+24                                              01746000
TYPE0PTR EQU   CVTPTRS0+20                                              01747000
PARM0PTR EQU   CVTPTRS0+16                                              01748000
*                                      END UNREFERENCED COMPONENTS      01749000
@RC00080 EQU   @RC00063                                                 01750000
@RC00076 EQU   @RC00063                                                 01751000
@RC00072 EQU   @RC00063                                                 01752000
@RC00066 EQU   @RC00063                                                 01753000
@RC00064 EQU   @RC00063                                                 01754000
@RC00086 EQU   @RC00085                                                 01755000
@RC00092 EQU   @RC00091                                                 01756000
@RC00100 EQU   @RC00097                                                 01757000
@RC00098 EQU   @RC00097                                                 01758000
@RC00113 EQU   @RC00110                                                 01759000
@RC00111 EQU   @RC00110                                                 01760000
@RC00142 EQU   @EL00003                                                 01761000
@RC00140 EQU   @EL00003                                                 01762000
@RC00294 EQU   @EL00006                                                 01763000
@RC00287 EQU   @EL00006                                                 01764000
@RC00278 EQU   @EL00006                                                 01765000
@RC00270 EQU   @EL00006                                                 01766000
@RC00252 EQU   @EL00006                                                 01767000
@RC00244 EQU   @EL00006                                                 01768000
@RC00237 EQU   @EL00006                                                 01769000
@RC00067 EQU   @RC00066                                                 01770000
@RC00073 EQU   @RC00072                                                 01771000
@RC00077 EQU   @RC00076                                                 01772000
@ENDDATA EQU   *                                                        01773000
         END   ISDAAPR0,(C'PLS1748',0701,78044)                         01774000
