         TITLE 'CONFIGURATION INPUT ROUTINE                            *00001000
                        '                                               00002000
ISDACNFG CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                          01S0001 00008000
         DC    C'ISDACNFG  78.157'                              01S0001 00009000
ISDACNF1 DS    0H                                               01S0001 00010000
         USING *,@15                                            01S0001 00011000
         B     @PROLOG                                          01S0001 00012000
         DC    AL2(@EP00321-ISDACNF1)                                   00013000
         ENTRY ISDACNF1                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00016000
         BALR  @12,0                                            01S0001 00017000
@PSTART  DS    0H                                               01S0001 00018000
         USING @PSTART,@12                                      01S0001 00019000
         L     @00,@SIZDATD                                     01S0001 00020000
         GETMAIN  R,LV=(0)                                              00021000
         LR    @11,@01                                          01S0001 00022000
         USING @DATD,@11                                        01S0001 00023000
         ST    @13,@SA00001+4                                   01S0001 00024000
         LM    @15,@01,16(@13)                                  01S0001 00025000
         ST    @11,8(,@13)                                      01S0001 00026000
         LR    @13,@11                                          01S0001 00027000
         AH    @15,4(,@15)                                      01S0001 00028000
         BR    @15                                              01S0001 00029000
@EP00001 MVC   @PC00001(4),0(@01)                               01S0001 00030000
*/* %SDACVTL='LENGTH(ISDACVT)'                               @Y30LB55*/ 00031000
*/*   DCL CVTPTR PTR(31)  AND SET CVTPTR=WORKPTR             @Y30LB55*/ 00032000
*                                                               01S0017 00033000
*                                                               01S0017 00034000
*   /*****************************************************************/ 00035000
*   /*                                                               */ 00036000
*   /* THIS IS THE MAIN SEGMENT OF THE MODULE. IN OPERATION, IT      */ 00037000
*   /* LOCATES COMMAND WORDS IN THE INPUT RECORDS AND PASSES CONTROL */ 00038000
*   /* THROUGH A SET OF SUBSEGMENTS TO PROCESS THE DATA. WHEN THE END*/ 00039000
*   /* OF THE INPUT FILE IS REACHED, A FINAL SET OF CONFIGURATION    */ 00040000
*   /* TABLES ARE BUILT FROM THE DATA EXTRACTED FROM THE INPUT.      */ 00041000
*   /*                                                               */ 00042000
*   /*****************************************************************/ 00043000
*                                                               01S0017 00044000
*   TCNFGFXD=TCNFGFXD&&TCNFGFXD;    /* CLEAR TEMP CNFG AREA  @Y30LB52*/ 00045000
         XC    TCNFGFXD(14),TCNFGFXD                            01S0017 00046000
*   TLTPLIBC='FF'X;                 /* INIT FIRST LTP BYTE   @Y30LB52*/ 00047000
         XC    TLTPLIBC+1(31),TLTPLIBC+1                        01S0018 00048000
         MVI   TLTPLIBC,X'FF'                                   01S0018 00049000
*   MVC(TLTPLIBC(2:LENGTH(TLTPLIBC)),TLTPLIBC(1:LENGTH(TLTPLIBC)-1));   00050000
         MVC   TLTPLIBC+1(31),TLTPLIBC                          01S0019 00051000
*                                   /* INIT REMAINDER        @Y30LB52*/ 00052000
*   TCPUID(2)='FFFFFFFFFF'X;        /* INITIALIZE END OF LIST@Y30LB52*/ 00053000
         MVC   TCPUID+12(5),@CB00249                            01S0020 00054000
*   TCPUID(1)='0000000000'X;        /* INITIALIZE BEG OF LIST@Y30LB52*/ 00055000
         MVC   TCPUID(5),@CB00251                               01S0021 00056000
*   TFPTR(1)=2;                     /* INIT CHAIN            @Y30LB52*/ 00057000
         MVI   TFPTR,X'02'                                      01S0022 00058000
*   CNFGFLAG='00'X;                 /* INITIALIZE THE FLAGS  @Y30LB52*/ 00059000
         MVI   CNFGFLAG,X'00'                                   01S0023 00060000
*   LINEND=ADDR(ILINE(72));         /* INIT END OF SCAN      @Y30LB52*/ 00061000
         LA    LINEND,ILINE+71                                  01S0024 00062000
*   LCPTR=ADDR(ILINE);              /* INIT LINE PTR         @Y30LB52*/ 00063000
         LA    LCPTR,ILINE                                      01S0025 00064000
*   J=0;                            /* SET J FOR REG ASSIGNMENT 01S0026 00065000
*                                                            @Y30LB52*/ 00066000
         SLR   J,J                                              01S0026 00067000
*                                                               02S0027 00068000
*   /*****************************************************************/ 00069000
*   /*                                                               */ 00070000
*   /* THIS SEGMENT ATTEMPTS TO OPEN THE 'SDACONFG' DATA SET         */ 00071000
*   /* CONTAINING THE 'TABLE CREATE' CONTROL STATEMENTS. IF          */ 00072000
*   /* UNSUCCESSFUL, IT WILL RETURN AN ERROR CODE. THE FOLLOWING IS A*/ 00073000
*   /* DATA CONTROL BLOCK FOR THE DATA SET.                          */ 00074000
*   /*                                                               */ 00075000
*   /*****************************************************************/ 00076000
*                                                               02S0027 00077000
*   GENERATE DATA DEFS(SYSINDCB);                               02S0027 00078000
*   GENERATE DATA DEFS(DUMMYDCB);                               02S0028 00079000
*   DCL                                                         02S0029 00080000
*     DUMMYDCB CHAR(96) STATIC LOCAL GEND,/* STATIC DCB      @Y30LB52*/ 00081000
*     SYSINDCB CHAR(96) AUTOMATIC GEND,/* REAL DCB           @Y30LB52*/ 00082000
*     OFLAGS BIT(8) GEND;           /* OPEN FLAGS            @Y30LB52*/ 00083000
*   DCL                                                         02S0030 00084000
*     1 OPENLIST FIXED(31),         /* OPEN PARMLIST         @Y30LB52*/ 00085000
*      2 OPENEOL CHAR(1),           /* OPTION BYTE           @Y30LB52*/ 00086000
*      2 * CHAR(3);                 /* ADDRESS OF DCB        @Y30LB52*/ 00087000
*                                                               02S0030 00088000
*   /*****************************************************************/ 00089000
*   /*                                                               */ 00090000
*   /* OPEN THE DCB                                                  */ 00091000
*   /*                                                               */ 00092000
*   /*****************************************************************/ 00093000
*                                                               02S0031 00094000
*   SYSINDCB=DUMMYDCB;              /* STATIC DCB TO REAL    @Y30LB52*/ 00095000
         MVC   SYSINDCB(96),DUMMYDCB                            02S0031 00096000
*   OPENEOL='80'X;                  /* SET END OF OPEN LIST  @Y30LB52*/ 00097000
         MVI   OPENEOL,X'80'                                    02S0032 00098000
*   GEN(OPEN (SYSINDCB,INPUT),MF=(E,OPENLIST));/* OPEN THE DCB  02S0033 00099000
*                                                            @Y30LB52*/ 00100000
         OPEN (SYSINDCB,INPUT),MF=(E,OPENLIST)                          00101000
*   IF OFLAGS(4)=OFF THEN           /* DID NOT OPEN          @Y30LB52*/ 00102000
         TM    OFLAGS,B'00010000'                               02S0034 00103000
         BNZ   @RF00034                                         02S0034 00104000
*     RETURN CODE(NOINPUT);         /* RETURN ERROR          @Y30LB52*/ 00105000
         L     @13,4(,@13)                                      02S0035 00106000
         L     @00,@SIZDATD                                     02S0035 00107000
         LR    @01,@11                                          02S0035 00108000
         FREEMAIN R,LV=(0),A=(1)                                        00109000
         LA    @15,36                                           02S0035 00110000
         L     @14,12(,@13)                                     02S0035 00111000
         LM    @00,@12,20(@13)                                  02S0035 00112000
         BR    @14                                              02S0035 00113000
*   CALL READRCRD;                  /* READ FIRST RECORD     @Y30LB52*/ 00114000
*                                                               01S0036 00115000
@RF00034 BAL   @14,READRCRD                                     01S0036 00116000
*   /*****************************************************************/ 00117000
*   /*                                                               */ 00118000
*   /* THE FOLLOWING SECTION OF INCLUDED CODE READS THE 'TABLE       */ 00119000
*   /* CREATE' INPUT RECORDS AND RETAINS THE CONFIGURATION DATA      */ 00120000
*   /* TEMPORARILY UNTIL END OF FILE.                                */ 00121000
*   /*                                                               */ 00122000
*   /*****************************************************************/ 00123000
*                                                               01S0037 00124000
*                                                               02S0037 00125000
*   /*****************************************************************/ 00126000
*   /*                                                               */ 00127000
*   /* THIS SEGMENT OF CODE READS THE 'TABLE CREATE' RECORDS,        */ 00128000
*   /* DETERMINES COMMAND TYPE, AND PASSES CONTROL THROUGH THE       */ 00129000
*   /* CORRECT COMMAND STATEMENT PROCESSOR. AN ERROR CODE IS RETURNED*/ 00130000
*   /* IF THE COMMAND TYPE IS NOT RECOGNIZED.                        */ 00131000
*   /*                                                               */ 00132000
*   /*****************************************************************/ 00133000
*                                                               02S0037 00134000
*   DO WHILE(EOF=OFF);              /* LOOP THRO ALL RECORDS @Y30LB52*/ 00135000
*                                                               02S0037 00136000
         B     @DE00037                                         02S0037 00137000
@DL00037 DS    0H                                               02S0038 00138000
*     /***************************************************************/ 00139000
*     /*                                                             */ 00140000
*     /* CHECK FOR LABEL                                             */ 00141000
*     /*                                                             */ 00142000
*     /***************************************************************/ 00143000
*                                                               02S0038 00144000
*     IF LINECHAR(1)^=' ' THEN      /* IF LABEL NON-BLANK    @Y30LB52*/ 00145000
         CLI   LINECHAR(LCPTR),C' '                             02S0038 00146000
         BE    @RF00038                                         02S0038 00147000
*       DO;                         /* SKIP THE LABEL        @Y30LB52*/ 00148000
*         CALL NEXTBLNK;            /* SKIP TO NEXT BLANK    @Y30LB52*/ 00149000
         BAL   @14,NEXTBLNK                                     02S0040 00150000
*       END;                        /*                       @Y30LB52*/ 00151000
*     CALL NEXTCHAR;                /* SKIP TO COMMAND WORD  @Y30LB52*/ 00152000
@RF00038 BAL   @14,NEXTCHAR                                     02S0042 00153000
*     FIND=OFF;                     /* LABEL/COMMAND NOT FIND@OZ28372*/ 00154000
*                                                               02S0043 00155000
         NI    FIND,B'11111011'                                 02S0043 00156000
*     /***************************************************************/ 00157000
*     /*                                                             */ 00158000
*     /* LOOP THROUGH THE COMMAND WORD TABLE LOOKING FOR THE COMMAND */ 00159000
*     /* WORD ENCOUNTERED                                            */ 00160000
*     /*                                                             */ 00161000
*     /***************************************************************/ 00162000
*                                                               02S0044 00163000
*     DO I=1 TO 10 WHILE(LINECHAR(1:3)^=CMNDWORD(I));/* COMPARE FIRST   00164000
*                                      THREE CHARACTERS      @Y30LB52*/ 00165000
         LA    I,1                                              02S0044 00166000
@DL00044 LR    @10,I                                            02S0044 00167000
         MH    @10,@CH00063                                     02S0044 00168000
         LA    @07,CMNDWORD-3(@10)                              02S0044 00169000
         CLC   LINECHAR(3,LCPTR),0(@07)                         02S0044 00170000
         BE    @DC00044                                         02S0044 00171000
*     END;                          /*                       @Y30LB52*/ 00172000
*                                                               02S0045 00173000
         AH    I,@CH00060                                       02S0045 00174000
         CH    I,@CH00266                                       02S0045 00175000
         BNH   @DL00044                                         02S0045 00176000
@DC00044 DS    0H                                               02S0046 00177000
*     /***************************************************************/ 00178000
*     /*                                                             */ 00179000
*     /* DO THE CODE SUBSEGMENT FOR THE COMMAND WORD FOUND.          */ 00180000
*     /*                                                             */ 00181000
*     /***************************************************************/ 00182000
*                                                               02S0046 00183000
*     IF I<10 THEN                                              02S0046 00184000
         CH    I,@CH00266                                       02S0046 00185000
         BNL   @RF00046                                         02S0046 00186000
*       DO;                         /* VALID COMMAND FOUND   @Y30LB52*/ 00187000
*         RETCOD=0;                 /* SET FOR NO ERROR      @OZ28372*/ 00188000
         SLR   @10,@10                                          02S0048 00189000
         ST    @10,RETCOD                                       02S0048 00190000
*         DO;                       /* CASE(I)NAMES(CPUCONFG,MSFN,LOW   00191000
*                                      ERCON,UPPERCON,DASD,SKIPCMND,S   00192000
*                                      KIPCMND,SKIPCMND,SKIPCMND)    */ 00193000
*           DCL                                                 02S0050 00194000
*             CL0001@ LABEL BASED(CP0001@(I)) VALUERANGE(CPUCONFG,MSFN, 00195000
*                 LOWERCON,UPPERCON,DASD,SKIPCMND,SKIPCMND,SKIPCMND,    00196000
*                 SKIPCMND);        /* BRANCH TARGET                 */ 00197000
*           DCL                                                 02S0051 00198000
*             CP0001@(9) PTR(31) INIT(ADDR(CPUCONFG),ADDR(MSFN),ADDR(   00199000
*                 LOWERCON),ADDR(UPPERCON),ADDR(DASD),ADDR(SKIPCMND),   00200000
*                 ADDR(SKIPCMND),ADDR(SKIPCMND),ADDR(SKIPCMND));        00201000
*           GOTO CL0001@;           /* BRANCH TO SELECTED CASE  02S0052 00202000
*                                                            @Y30LB52*/ 00203000
         LR    @10,I                                            02S0052 00204000
         SLA   @10,2                                            02S0052 00205000
         L     @10,CP0001@-4(@10)                               02S0052 00206000
         BR    @10                                              02S0052 00207000
*CPUCONFG:                                                      02S0053 00208000
*           DO;                     /* SUBCASE               @Y30LB52*/ 00209000
CPUCONFG DS    0H                                               02S0054 00210000
*                                                               03S0054 00211000
*             /*******************************************************/ 00212000
*             /*                                                     */ 00213000
*             /* THIS SEGMENT PROCESSES THE CPUCONFG CONTROL         */ 00214000
*             /* STATEMENTS IN THE TABLE CREATE DECK INPUT. ON ENTRY,*/ 00215000
*             /* THE BASE POINTER IN THE INPUT RECORD IS SET TO THE  */ 00216000
*             /* FIRST POSITION. FOUR SEGMENTS ARE CALLED IN THE SCAN*/ 00217000
*             /* PROCESS: NEXTBLNK(FOR THE NEXT BLANK CHARACTER IN   */ 00218000
*             /* THE INPUT), NEXTCHAR(FOR THE NEXT CHARACTER),       */ 00219000
*             /* NEXTCMMA(FOR THE NEXT COMMA), AND HEXBYTES(CONVERT  */ 00220000
*             /* EBCDIC STRING TO HEX). THE CPUID KEYWORD IS LOCATED */ 00221000
*             /* AND THE CPU COUNT UPDATED AND THE CPUID SAVED. IF   */ 00222000
*             /* THE KEYWORD IS NOT FOUND BEFORE THE END OF THE      */ 00223000
*             /* CONTROL STATEMENT, NOTHING IS RECORDED. STEP OVER   */ 00224000
*             /* THE COMMAND WORD AND ANY FOLLOWING BLANKS TO THE    */ 00225000
*             /* FIRST OPERAND.                                      */ 00226000
*             /*                                                     */ 00227000
*             /*******************************************************/ 00228000
*                                                               03S0054 00229000
*             CALL NEXTBLNK;        /* LOCATE NEXT BLANK CHARACTER      00230000
*                                                            @Y30LB52*/ 00231000
         BAL   @14,NEXTBLNK                                     03S0054 00232000
*             CALL NEXTCHAR;        /* LOCATE NEXT NON-BLANK @Y30LB52*/ 00233000
         BAL   @14,NEXTCHAR                                     03S0055 00234000
*             FIND=OFF;             /* NOT VALID FIND        @OZ28372*/ 00235000
*                                                               03S0056 00236000
         NI    FIND,B'11111011'                                 03S0056 00237000
*             /*******************************************************/ 00238000
*             /*                                                     */ 00239000
*             /* LOCATE THE 'CPUID=' KEYWORD IN THE OPERAND STRING   */ 00240000
*             /*                                                     */ 00241000
*             /*******************************************************/ 00242000
*                                                               03S0057 00243000
*             DO WHILE(LINECHAR(1:5)^='CPUID'&EOC=OFF);/* SCAN FOR      00244000
*                                      CPUID KEYWORD         @Y30LB52*/ 00245000
         B     @DE00057                                         03S0057 00246000
@DL00057 DS    0H                                               03S0058 00247000
*               CALL NEXTCMMA;      /* NEXT COMMA IN STREAM  @Y30LB52*/ 00248000
         BAL   @14,NEXTCMMA                                     03S0058 00249000
*               CALL NEXTCHAR;      /* NEXT CHARACTER        @Y30LB52*/ 00250000
         BAL   @14,NEXTCHAR                                     03S0059 00251000
*             END;                  /*                       @Y30LB52*/ 00252000
*                                                               03S0060 00253000
@DE00057 CLC   LINECHAR(5,LCPTR),@CC00276                       03S0060 00254000
         BE    @DC00057                                         03S0060 00255000
         TM    EOC,B'10000000'                                  03S0060 00256000
         BZ    @DL00057                                         03S0060 00257000
@DC00057 DS    0H                                               03S0061 00258000
*             /*******************************************************/ 00259000
*             /*                                                     */ 00260000
*             /* IF THE 'CPUID' KEYWORD WAS FOUND, CONVERT THE EBCDIC*/ 00261000
*             /* OPERAND VALUE TO HEXADECIMAL AND STORE IN THE       */ 00262000
*             /* TEMPORARY CPUID TABLE                               */ 00263000
*             /*                                                     */ 00264000
*             /*******************************************************/ 00265000
*                                                               03S0061 00266000
*             IF EOC=OFF THEN                                   03S0061 00267000
         TM    EOC,B'10000000'                                  03S0061 00268000
         BNZ   @RF00061                                         03S0061 00269000
*               DO;                 /* CPUID KEYWORD FOUND   @Y30LB52*/ 00270000
*                 LCPTR=LCPTR+6;    /* INCREMENT OVER THE KEYWORD       00271000
*                                                            @Y30LB52*/ 00272000
         AH    LCPTR,@CH00054                                   03S0063 00273000
*                 BYTES=10;         /* INDICATE BYTES TO BE CONVERTED   00274000
*                                                            @Y30LB52*/ 00275000
         LA    BYTES,10                                         03S0064 00276000
*                 CALL HEXBYTES;    /* CALL BYTE CONVERTER   @Y30LB52*/ 00277000
         BAL   @14,HEXBYTES                                     03S0065 00278000
*                 TCPUNO=TCPUNO+1;  /* INCREMENT CPU TOTAL   @Y30LB52*/ 00279000
         LA    @10,1                                            03S0066 00280000
         AH    @10,TCPUNO                                       03S0066 00281000
         STH   @10,TCPUNO                                       03S0066 00282000
*                 TCPUSER(TCPUNO)=LINECHAR(1:5);/* STORE ID  @Y30LB52*/ 00283000
         MH    @10,@CH00056                                     03S0067 00284000
         LA    @07,TCPUSER-5(@10)                               03S0067 00285000
         MVC   0(5,@07),LINECHAR(LCPTR)                         03S0067 00286000
*                 LCPTR=LCPTR+10;   /* BUMP PTR PAST POSSIBLE X'40'S    00287000
*                                                            @ZA32464*/ 00288000
         AH    LCPTR,@CH00266                                   03S0068 00289000
*               END;                /*                       @Y30LB52*/ 00290000
*             GOTO CE0001@;         /* BRANCH TO END OF CASE         */ 00291000
         B     CE0001@                                          02S0070 00292000
*           END;                    /* END OF SUBCASE        @Y30LB52*/ 00293000
*MSFN:                                                          02S0072 00294000
*           DO;                     /* SUBCASE               @Y30LB52*/ 00295000
MSFN     DS    0H                                               02S0073 00296000
*                                                               03S0073 00297000
*             /*******************************************************/ 00298000
*             /*                                                     */ 00299000
*             /* THIS SEGMENT PROCESSES THE 'MSFN' CONTROL           */ 00300000
*             /* STATEMENTS, EXTRACTING THE SIZE OF EACH LIBRARY AND */ 00301000
*             /* THE TOTAL NUMBER OF LIBRARIES ON THE SUBSYSTEM. THE */ 00302000
*             /* 'SIZE=' KEYWORD IS LOCATED AND IT'S OPERAND SAVED IN*/ 00303000
*             /* AN ARRAY. A TOTAL COUNT OF LIBRARIES IS MAINTAINED. */ 00304000
*             /* THIS SEGMENT CALLS THE SEGMENTS: NEXTBLNK(FOR THE   */ 00305000
*             /* NEXT BLANK IN THE INPUT ), AND NEXTCMMA(FOR THE NEXT*/ 00306000
*             /* COMMA IN THE INPUT ). THE LIBRARY NUMBER IS         */ 00307000
*             /* CONVERTED TO BINARY FOR USE AS AN INDEX             */ 00308000
*             /*                                                     */ 00309000
*             /*******************************************************/ 00310000
*                                                               03S0073 00311000
*             I=(LINECHAR(4)&'0F'X)+1;/* LOAD MSFNO PLUS ONE @YM32172*/ 00312000
         LA    I,15                                             03S0073 00313000
         SLR   @10,@10                                          03S0073 00314000
         IC    @10,LINECHAR+3(,LCPTR)                           03S0073 00315000
         NR    I,@10                                            03S0073 00316000
         AH    I,@CH00060                                       03S0073 00317000
*             IF I>TMSFNO           /* IF MSFNO HIGHER THAN TOTAL       00318000
*                                      MSF'S SO FAR          @YM32172*/ 00319000
*               THEN                                            03S0074 00320000
         CH    I,TMSFNO                                         03S0074 00321000
         BNH   @RF00074                                         03S0074 00322000
*               TMSFNO=I;           /* REPLACE MSFNO TOTAL   @YM32172*/ 00323000
         STH   I,TMSFNO                                         03S0075 00324000
*             CALL NEXTBLNK;        /* PAST 'MSFN'           @Y30LB52*/ 00325000
@RF00074 BAL   @14,NEXTBLNK                                     03S0076 00326000
*             CALL NEXTCHAR;        /* TO KEYWORD            @Y30LB52*/ 00327000
         BAL   @14,NEXTCHAR                                     03S0077 00328000
*             FIND=OFF;             /* NOT VALID FIND        @OZ28372*/ 00329000
*                                                               03S0078 00330000
         NI    FIND,B'11111011'                                 03S0078 00331000
*             /*******************************************************/ 00332000
*             /*                                                     */ 00333000
*             /* SEARCH FOR THE 'SIZE=' KEYWORD IN THE INPUT         */ 00334000
*             /*                                                     */ 00335000
*             /*******************************************************/ 00336000
*                                                               03S0079 00337000
*             DO WHILE((LINECHAR(1:3)^='SIZ')&(EOC=OFF));/* SCAN FOR    00338000
*                                      SIZ KEYWORD           @Y30LB52*/ 00339000
         B     @DE00079                                         03S0079 00340000
@DL00079 DS    0H                                               03S0080 00341000
*               CALL NEXTCMMA;      /* SCAN FOR COMMA        @Y30LB52*/ 00342000
         BAL   @14,NEXTCMMA                                     03S0080 00343000
*               CALL NEXTCHAR;      /* NEXT HEYWORD          @Y30LB52*/ 00344000
         BAL   @14,NEXTCHAR                                     03S0081 00345000
*             END;                  /*                       @Y30LB52*/ 00346000
*                                                               03S0082 00347000
@DE00079 CLC   LINECHAR(3,LCPTR),@CC00280                       03S0082 00348000
         BE    @DC00079                                         03S0082 00349000
         TM    EOC,B'10000000'                                  03S0082 00350000
         BZ    @DL00079                                         03S0082 00351000
@DC00079 DS    0H                                               03S0083 00352000
*             /*******************************************************/ 00353000
*             /*                                                     */ 00354000
*             /* IF THE SIZE=' WAS LOCATED, SAVE IT                  */ 00355000
*             /*                                                     */ 00356000
*             /*******************************************************/ 00357000
*                                                               03S0083 00358000
*             IF EOC=OFF THEN                                   03S0083 00359000
         TM    EOC,B'10000000'                                  03S0083 00360000
         BNZ   @RF00083                                         03S0083 00361000
*               DO;                 /* NOT END OF COMMAND, MUST BE      00362000
*                                      KEYWORD               @Y30LB52*/ 00363000
*                 TLIB(I)=LINECHAR(6)&'0F'X;/* TURN OFF ZONE AND        00364000
*                                      STORE                 @YM32172*/ 00365000
         LA    @10,TLIB-1(I)                                    03S0085 00366000
         MVC   0(1,@10),LINECHAR+5(LCPTR)                       03S0085 00367000
         NI    0(@10),X'0F'                                     03S0085 00368000
*               END;                /*                       @Y30LB52*/ 00369000
*             GOTO CE0001@;         /* BRANCH TO END OF CASE         */ 00370000
         B     CE0001@                                          02S0087 00371000
*           END;                    /* END OF SUBCASE        @Y30LB52*/ 00372000
*LOWERCON:                                                      02S0089 00373000
*           DO;                     /* SUBCASE               @Y30LB52*/ 00374000
LOWERCON DS    0H                                               02S0090 00375000
*                                                               03S0090 00376000
*             /*******************************************************/ 00377000
*             /*                                                     */ 00378000
*             /* THIS SEGMENT PROCESSES THE INFORMATION ON THE       */ 00379000
*             /* 'LOWERCON' CONTROL STATEMENTS. FROM THOSE INPUT     */ 00380000
*             /* RECORDS, THE RELATIONSHIP OF LOGICAL 'DRC'          */ 00381000
*             /* CONNECTIONS TO A 'SA' TO PHYSICAL 'DRC' CONNECTIONS */ 00382000
*             /* IS EXTRACTED AND ENTERED INTO THE 'LCON' TABLE. WHEN*/ 00383000
*             /* THE END OF THE CONTROL STATEMENT IS REACHED, THE    */ 00384000
*             /* EQUIVALENCE IS TRANSFERRED IN TO THE PHYSICAL TO    */ 00385000
*             /* LOGICAL TABLE 'TLTPLIB'. THE SEGMENTS 'NEXTBLNK',   */ 00386000
*             /* 'NEXTCMMA', 'NEXTCHAR', AND 'HEXBYTES' ARE CALLED TO*/ 00387000
*             /* PERFORM THE RESPECTIVE FUNCTIONS. THE FOLLOWING DATA*/ 00388000
*             /* STRUCTURE IS A TEMPORARY REPOSITORY FOR THE DATA    */ 00389000
*             /* COLLECTED FROM A SINGLE CONTROL STATEMENT. THIS IS  */ 00390000
*             /* NECESSARY SINCE THE OPERANDS MAY BE ENTERED OUT OF  */ 00391000
*             /* SEQUENCE OR OMITTED. THE CONTENTS OF THIS STRUCTURE */ 00392000
*             /* IS FINALLY MERGED INTO THE FINAL STRUCTURE AT       */ 00393000
*             /* SEGMENT END.                                        */ 00394000
*             /*                                                     */ 00395000
*             /*******************************************************/ 00396000
*                                                               03S0090 00397000
*             DCL                                               03S0090 00398000
*               1 LCON CHAR(9) BDY(WORD),/* LOWER CONNECTION @Y30LB52*/ 00399000
*                2 LSA FIXED(8),    /* SA NUMBER FOR CONNECTION 03S0090 00400000
*                                                            @Y30LB52*/ 00401000
*                2 LDRC(4) CHAR(2), /* LOGICAL CU'S          @Y30LB52*/ 00402000
*                 3 MSFNN FIXED(8), /* CS NUMBER FOR DRC     @Y30LB52*/ 00403000
*                 3 PCU FIXED(8);   /* PHYSICAL DRC          @Y30LB52*/ 00404000
*                                                               03S0091 00405000
*             /*******************************************************/ 00406000
*             /*                                                     */ 00407000
*             /* THE TABLE IS INITIALIZED AND THE NEXT CHARACTER     */ 00408000
*             /* LOCATED                                             */ 00409000
*             /*                                                     */ 00410000
*             /*******************************************************/ 00411000
*                                                               03S0091 00412000
*             LCON='FF'X;           /* INITIALIZE THE LOWER  @Y30LB52   00413000
*                                      CONNECTION WORKAREA   @Y30LB52*/ 00414000
         XC    LCON+1(8),LCON+1                                 03S0091 00415000
         MVI   LCON,X'FF'                                       03S0091 00416000
*             CALL NEXTBLNK;        /* NEXT BLANK            @Y30LB52*/ 00417000
         BAL   @14,NEXTBLNK                                     03S0092 00418000
*             CALL NEXTCHAR;        /* NEXT CHARACTER        @Y30LB52*/ 00419000
         BAL   @14,NEXTCHAR                                     03S0093 00420000
*             FIND=OFF;             /* NOT VALID FIND        @OZ28372*/ 00421000
*                                                               03S0094 00422000
         NI    FIND,B'11111011'                                 03S0094 00423000
*             /*******************************************************/ 00424000
*             /*                                                     */ 00425000
*             /* LOOP THROUGH ALL KEYWORD OPERANDS IN THE CONTROL    */ 00426000
*             /* STATEMENT                                           */ 00427000
*             /*                                                     */ 00428000
*             /*******************************************************/ 00429000
*                                                               03S0095 00430000
*             DO WHILE(EOC=OFF);    /* LOOP THROUGH ENTIRE COMMAND      00431000
*                                                            @Y30LB52*/ 00432000
*                                                               03S0095 00433000
         B     @DE00095                                         03S0095 00434000
@DL00095 DS    0H                                               03S0096 00435000
*               /*****************************************************/ 00436000
*               /*                                                   */ 00437000
*               /* IF 'SA=' KEYWORD                                  */ 00438000
*               /*                                                   */ 00439000
*               /*****************************************************/ 00440000
*                                                               03S0096 00441000
*               IF LINECHAR(1:2)='SA' THEN                      03S0096 00442000
         CLC   LINECHAR(2,LCPTR),@CC00287                       03S0096 00443000
         BNE   @RF00096                                         03S0096 00444000
*                 DO;               /*                       @Y30LB52*/ 00445000
*                                                               03S0097 00446000
*                   /*************************************************/ 00447000
*                   /*                                               */ 00448000
*                   /* CONVERT TO BINARY AND STORE                   */ 00449000
*                   /*                                               */ 00450000
*                   /*************************************************/ 00451000
*                                                               03S0098 00452000
*                   LCPTR=LCPTR+3;  /* SPACE OVER 'SA='      @Y30LB52*/ 00453000
         AH    LCPTR,@CH00063                                   03S0098 00454000
*                   IF(LINECHAR(2)^=',')&(LINECHAR(2)^=' ') THEN        00455000
         CLI   LINECHAR+1(LCPTR),C','                           03S0099 00456000
         BE    @RF00099                                         03S0099 00457000
         CLI   LINECHAR+1(LCPTR),C' '                           03S0099 00458000
         BE    @RF00099                                         03S0099 00459000
*                     LINECHAR(1)=LINECHAR(2);/* MOVE SA CHARACTER      00460000
*                                                            @Y30LB52*/ 00461000
         MVC   LINECHAR(1,LCPTR),LINECHAR+1(LCPTR)              03S0100 00462000
*                   BYTES=1;        /* CONVERT COUNT         @Y30LB52*/ 00463000
@RF00099 LA    BYTES,1                                          03S0101 00464000
*                   CALL HEXBYTES;  /* CONVERT FROM EBCDIC   @Y30LB52*/ 00465000
         BAL   @14,HEXBYTES                                     03S0102 00466000
*                   LSA=LINECHAR(1);/* STORE THE RESULT      @Y30LB52*/ 00467000
         SLR   @10,@10                                          03S0103 00468000
         IC    @10,LINECHAR(,LCPTR)                             03S0103 00469000
         STC   @10,LSA                                          03S0103 00470000
*                   IF LSA+1>TSANO THEN                         03S0104 00471000
         AH    @10,@CH00060                                     03S0104 00472000
         CH    @10,TSANO                                        03S0104 00473000
         BNH   @RF00104                                         03S0104 00474000
*                     TSANO=LSA+1;  /* UPDATE TOTAL SA COUNT @Y30LB52*/ 00475000
         STH   @10,TSANO                                        03S0105 00476000
*                   LSA=LSA*16;     /* SHIFT SA NUMBER       @Y30LB52*/ 00477000
@RF00104 SLR   @10,@10                                          03S0106 00478000
         IC    @10,LSA                                          03S0106 00479000
         SLA   @10,4                                            03S0106 00480000
         STC   @10,LSA                                          03S0106 00481000
*                   LCPTR=LCPTR+1;  /* BUMP PTR PAST POSSIBLE X'40'     00482000
*                                                            @ZA32464*/ 00483000
         AH    LCPTR,@CH00060                                   03S0107 00484000
*                 END;              /*                       @Y30LB52*/ 00485000
*                                                               03S0108 00486000
*               /*****************************************************/ 00487000
*               /*                                                   */ 00488000
*               /* IF NOT 'SA=', MUST BE 'CUNN='. EXTRACT AND STORE  */ 00489000
*               /* THE PHYSICAL EQUIVALENT OF LOGICAL 'CUIDNN'.      */ 00490000
*               /*                                                   */ 00491000
*               /*****************************************************/ 00492000
*                                                               03S0109 00493000
*               ELSE                                            03S0109 00494000
*                 DO;               /*                       @Y30LB52*/ 00495000
         B     @RC00096                                         03S0109 00496000
@RF00096 DS    0H                                               03S0110 00497000
*                   IF LINECHAR(1:2)='CU' THEN                  03S0110 00498000
         CLC   LINECHAR(2,LCPTR),@CC00289                       03S0110 00499000
         BNE   @RF00110                                         03S0110 00500000
*                     DO;           /* KEYWORD FOUND         @YM32172*/ 00501000
*                       I=1;        /* INIT LOGICAL DRC      @Y30LB52*/ 00502000
*                                                               03S0112 00503000
         LA    I,1                                              03S0112 00504000
*                       /*********************************************/ 00505000
*                       /*                                           */ 00506000
*                       /* THE 'NN' OF CUIDNN' IS EXTRACTED          */ 00507000
*                       /*                                           */ 00508000
*                       /*********************************************/ 00509000
*                                                               03S0113 00510000
*                       IF LINECHAR(3)='1' THEN                 03S0113 00511000
         CLI   LINECHAR+2(LCPTR),C'1'                           03S0113 00512000
         BNE   @RF00113                                         03S0113 00513000
*                         I=I+2;    /* TWO'S BIT             @YM32172*/ 00514000
         AH    I,@CH00045                                       03S0114 00515000
*                       IF LINECHAR(4)='1' THEN                 03S0115 00516000
@RF00113 CLI   LINECHAR+3(LCPTR),C'1'                           03S0115 00517000
         BNE   @RF00115                                         03S0115 00518000
*                         I=I+1;    /* ONE'S BIT             @YM32172*/ 00519000
*                                                               03S0116 00520000
         AH    I,@CH00060                                       03S0116 00521000
*                       /*********************************************/ 00522000
*                       /*                                           */ 00523000
*                       /* SAVE THE LIBRARY NUMBER                   */ 00524000
*                       /*                                           */ 00525000
*                       /*********************************************/ 00526000
*                                                               03S0117 00527000
*                       MSFNN(I)=LINECHAR(9)&'0F'X;/* TURN OFF THE      00528000
*                                      ZONE AND STORE        @YM32172*/ 00529000
@RF00115 LR    @10,I                                            03S0117 00530000
         ALR   @10,@10                                          03S0117 00531000
         LA    @07,15                                           03S0117 00532000
         SLR   @04,@04                                          03S0117 00533000
         IC    @04,LINECHAR+8(,LCPTR)                           03S0117 00534000
         NR    @07,@04                                          03S0117 00535000
         STC   @07,MSFNN-2(@10)                                 03S0117 00536000
*                       CALL NEXTCMMA;/* TO NEXT COMMA       @Y30LB52*/ 00537000
         BAL   @14,NEXTCMMA                                     03S0118 00538000
*                       CALL NEXTCHAR;/* TO 'DRC ' KEYWORD   @Y30LB52*/ 00539000
*                                                               03S0119 00540000
         BAL   @14,NEXTCHAR                                     03S0119 00541000
*                       /*********************************************/ 00542000
*                       /*                                           */ 00543000
*                       /* SET THE PHYSICAL 'DRC' FROM THE 'BASERW'  */ 00544000
*                       /* KEYWORD                                   */ 00545000
*                       /*                                           */ 00546000
*                       /*********************************************/ 00547000
*                                                               03S0120 00548000
*                       IF LINECHAR(1:3)='DRC' THEN             03S0120 00549000
         CLC   LINECHAR(3,LCPTR),@CC00291                       03S0120 00550000
         BNE   @RF00120                                         03S0120 00551000
*                         PCU(I)=(LINECHAR(4)&'0F'X)+1;/* ZONES OFF     00552000
*                                      AND STORE             @Y30LB52*/ 00553000
         LR    @10,I                                            03S0121 00554000
         ALR   @10,@10                                          03S0121 00555000
         LA    @07,15                                           03S0121 00556000
         SLR   @04,@04                                          03S0121 00557000
         IC    @04,LINECHAR+3(,LCPTR)                           03S0121 00558000
         NR    @07,@04                                          03S0121 00559000
         AH    @07,@CH00060                                     03S0121 00560000
         STC   @07,PCU-2(@10)                                   03S0121 00561000
*                     END;          /*                       @Y30LB52*/ 00562000
@RF00120 DS    0H                                               03S0123 00563000
*                 END;              /*                       @Y30LB52*/ 00564000
*                                                               03S0123 00565000
@RF00110 DS    0H                                               03S0124 00566000
*               /*****************************************************/ 00567000
*               /*                                                   */ 00568000
*               /* STEP PAST THE NEXT COMMA TO THE NEXT KEYWORD      */ 00569000
*               /*                                                   */ 00570000
*               /*****************************************************/ 00571000
*                                                               03S0124 00572000
*               CALL NEXTCMMA;      /* NEXT COMMA            @Y30LB52*/ 00573000
@RC00096 BAL   @14,NEXTCMMA                                     03S0124 00574000
*               CALL NEXTCHAR;      /* NEXT CHARACTER        @Y30LB52*/ 00575000
         BAL   @14,NEXTCHAR                                     03S0125 00576000
*             END;                  /*                       @Y30LB52*/ 00577000
@DE00095 TM    EOC,B'10000000'                                  03S0126 00578000
         BZ    @DL00095                                         03S0126 00579000
*                                                               03S0127 00580000
*             /*******************************************************/ 00581000
*             /*                                                     */ 00582000
*             /* THIS SUBSEGMENT OF THE SEGMENT 'LOWERCON COMPLETES  */ 00583000
*             /* THE PROCESSING OF THE 'LOWERCON' CONTROL STATEMENT  */ 00584000
*             /* BY INSERTING THE LOGICAL VALUES OF PHYSICAL         */ 00585000
*             /* CONNECTIONS INTO A TABLE. AT THIS POINT, THE ENTIRE */ 00586000
*             /* CONTROL STATEMENT HAS BEEN CONDENSED INTO THE 'LCON'*/ 00587000
*             /* DATA STRUCTURE. THE FOLLOWING CODE TRANSFERS THE    */ 00588000
*             /* LOGICAL - PHYSICAL EQUIVALENTS TO THE 'TLTPLIB'     */ 00589000
*             /* TABLES.                                             */ 00590000
*             /*                                                     */ 00591000
*             /*******************************************************/ 00592000
*                                                               03S0127 00593000
*             DO I=1 TO 4;          /* LOOP THROUGH ALL LDRC'S  03S0127 00594000
*                                                            @Y30LB52*/ 00595000
*                                                               03S0127 00596000
         LA    I,1                                              03S0127 00597000
@DL00127 DS    0H                                               03S0128 00598000
*               /*****************************************************/ 00599000
*               /*                                                   */ 00600000
*               /* THE 'TLTPLIB' TABLE ADDRESSED IS DETERMINED BY THE*/ 00601000
*               /* PHYSICAL LIBRARY CONTAINING THE PHYSICAL 'DRC'    */ 00602000
*               /* CORRESPONDING TO THE LOGICAL 'DRC' CONNECTION IN  */ 00603000
*               /* EACH ITERATION OF THE LOOP                        */ 00604000
*               /*                                                   */ 00605000
*               /*****************************************************/ 00606000
*                                                               03S0128 00607000
*               LTPDRDP=ADDR(TLTPLIB(MSFNN(I)+1));/* ADDR OF LTP        00608000
*                                                            @Y30LB52*/ 00609000
*                                                               03S0128 00610000
         LR    @10,I                                            03S0128 00611000
         ALR   @10,@10                                          03S0128 00612000
         SLR   @07,@07                                          03S0128 00613000
         IC    @07,MSFNN-2(@10)                                 03S0128 00614000
         LR    LTPDRDP,@07                                      03S0128 00615000
         SLA   LTPDRDP,3                                        03S0128 00616000
         LA    LTPDRDP,TLTPLIB(LTPDRDP)                         03S0128 00617000
*               /*****************************************************/ 00618000
*               /*                                                   */ 00619000
*               /* IF A LOGICAL CONNECTION IS BEING USED, INSERT IN  */ 00620000
*               /* THE CORRESPONDING PHYSICAL TABLE.                 */ 00621000
*               /*                                                   */ 00622000
*               /*****************************************************/ 00623000
*                                                               03S0129 00624000
*               IF LSA^='FF'X THEN                              03S0129 00625000
         CLI   LSA,255                                          03S0129 00626000
         BE    @RF00129                                         03S0129 00627000
*                 DO;               /* SKIP THE UNUSED       @Y30LB52*/ 00628000
*                   IF MSFNN(I)^=0|PCU(I)^=0 THEN/* IF EITHER IS NON    00629000
*                                                            @OZ28372*/ 00630000
         SLR   @15,@15                                          03S0131 00631000
         CR    @07,@15                                          03S0131 00632000
         BNE   @RT00131                                         03S0131 00633000
         SLR   @07,@07                                          03S0131 00634000
         IC    @07,PCU-2(@10)                                   03S0131 00635000
         CR    @15,@07                                          03S0131 00636000
         BE    @RF00131                                         03S0131 00637000
@RT00131 DS    0H                                               03S0132 00638000
*                     DO;           /* ZERO, THEN SAVE       @OZ28372*/ 00639000
*                                                               03S0132 00640000
*                       /*********************************************/ 00641000
*                       /*                                           */ 00642000
*                       /* THE 'SA' AND LOGICAL 'DRC' ARE STORED IN  */ 00643000
*                       /* ONE BYTE OF THE PHYSICAL 'DRC' TABLE      */ 00644000
*                       /*                                           */ 00645000
*                       /*********************************************/ 00646000
*                                                               03S0133 00647000
*                       IF DRCL0(PCU(I))='FF'X THEN/* IF FIRST FIND     00648000
*                                                            @OZ28372*/ 00649000
         LR    @10,I                                            03S0133 00650000
         ALR   @10,@10                                          03S0133 00651000
         SLR   @07,@07                                          03S0133 00652000
         IC    @07,PCU-2(@10)                                   03S0133 00653000
         ALR   @07,@07                                          03S0133 00654000
         ST    @07,@TF00001                                     03S0133 00655000
         ALR   @07,LTPDRDP                                      03S0133 00656000
         BCTR  @07,0                                            03S0133 00657000
         BCTR  @07,0                                            03S0133 00658000
         CLI   DRCL0(@07),X'FF'                                 03S0133 00659000
         BNE   @RF00133                                         03S0133 00660000
*                         DRCL0(PCU(I))=LSA+I;/* STORE SA AND DRC       00661000
*                                                            @Y30LB52*/ 00662000
         SLR   @10,@10                                          03S0134 00663000
         IC    @10,LSA                                          03S0134 00664000
         ALR   @10,I                                            03S0134 00665000
         L     @07,@TF00001                                     03S0134 00666000
         BCTR  @07,0                                            03S0134 00667000
         BCTR  @07,0                                            03S0134 00668000
         STC   @10,DRCL0(@07,LTPDRDP)                           03S0134 00669000
*                       ELSE                                    03S0135 00670000
*                         IF DRCL1(PCU(I))='FF'X THEN/* STORE IN        00671000
*                                                            @OZ28372*/ 00672000
         B     @RC00133                                         03S0135 00673000
@RF00133 LR    @10,I                                            03S0135 00674000
         ALR   @10,@10                                          03S0135 00675000
         SLR   @07,@07                                          03S0135 00676000
         IC    @07,PCU-2(@10)                                   03S0135 00677000
         ALR   @07,@07                                          03S0135 00678000
         ST    @07,@TF00001                                     03S0135 00679000
         ALR   @07,LTPDRDP                                      03S0135 00680000
         BCTR  @07,0                                            03S0135 00681000
         CLI   DRCL1-1(@07),X'FF'                               03S0135 00682000
         BNE   @RF00135                                         03S0135 00683000
*                           DRCL1(PCU(I))=LSA+I;/* SECOND INTERFACE     00684000
*                                                            @OZ28372*/ 00685000
         SLR   @10,@10                                          03S0136 00686000
         IC    @10,LSA                                          03S0136 00687000
         ALR   @10,I                                            03S0136 00688000
         L     @07,@TF00001                                     03S0136 00689000
         BCTR  @07,0                                            03S0136 00690000
         STC   @10,DRCL1-1(@07,LTPDRDP)                         03S0136 00691000
*                         ELSE      /* IF THIRD, IS ERROR    @OZ28372*/ 00692000
*                           RETCOD=DATAERR;/* SO SET RETURN CODE        00693000
*                                                            @OZ28372*/ 00694000
         B     @RC00135                                         03S0137 00695000
@RF00135 MVC   RETCOD(4),@CF00082                               03S0137 00696000
*                     END;          /* END STORE             @OZ28372*/ 00697000
@RC00135 DS    0H                                               03S0138 00698000
@RC00133 DS    0H                                               03S0139 00699000
*                 END;              /*                       @Y30LB52*/ 00700000
@RF00131 DS    0H                                               03S0140 00701000
*             END;                  /*                       @Y30LB52*/ 00702000
@RF00129 AH    I,@CH00060                                       03S0140 00703000
         CH    I,@CH00042                                       03S0140 00704000
         BNH   @DL00127                                         03S0140 00705000
*             GOTO CE0001@;         /* BRANCH TO END OF CASE         */ 00706000
         B     CE0001@                                          02S0141 00707000
*           END;                    /* END OF SUBCASE        @Y30LB52*/ 00708000
*UPPERCON:                                                      02S0143 00709000
*           DO;                     /* SUBCASE               @Y30LB52*/ 00710000
UPPERCON DS    0H                                               02S0144 00711000
*                                                               03S0144 00712000
*             /*******************************************************/ 00713000
*             /*                                                     */ 00714000
*             /* THIS SEGMENT EXTRACTS THE CHANNEL/CONTROL UNIT -    */ 00715000
*             /* STAGING ADAPTER EQUIVALENCES FROM THE 'UPPERCON'    */ 00716000
*             /* CONTROL STATEMENTS. THE SUBSEGMENTS 'HEXBYTES',     */ 00717000
*             /* 'NEXTCHAR', AND 'NEXTCMMA' ARE CALLED WITHIN THIS   */ 00718000
*             /* SEGMENT. THE DATA EXTRACTED IS USED TO CREATE AN    */ 00719000
*             /* ENTRY IN THE TEMPORARY CPU INTERFACE TABLE          */ 00720000
*             /* 'TCPUINTF'. THE FOLLOWING TABLE IS A BRANCH TABLE   */ 00721000
*             /* DIRECTING EXECUTION THROUGH THE CASE LOGIC BASED ON */ 00722000
*             /* THE KEYWORDS FOUND.                                 */ 00723000
*             /*                                                     */ 00724000
*             /*******************************************************/ 00725000
*                                                               03S0144 00726000
*             DCL                                               03S0144 00727000
*               UCKEYS(6) CHAR(2) INIT('SA','CI','CH','CU','CP','AL');  00728000
*                                   /*                       @Y30LB52*/ 00729000
*                                                               03S0145 00730000
*             /*******************************************************/ 00731000
*             /*                                                     */ 00732000
*             /* THE FOLLOWING STRUCTURE IS A REPOSITORY OF THE      */ 00733000
*             /* KEYWORD OPERANDS LOCATED IN A SCAN OF THE CONTROL   */ 00734000
*             /* STATEMENT. THIS IS NECESSARY SINCE THE KEYWORD      */ 00735000
*             /* OPERANDS CAN BE IN ANY ORDER.                       */ 00736000
*             /*                                                     */ 00737000
*             /*******************************************************/ 00738000
*                                                               03S0145 00739000
*             DCL                                               03S0145 00740000
*               1 UC CHAR(8),       /* UPPPER CONNECTION STRUCTURE      00741000
*                                                            @Y30LB52*/ 00742000
*                2 UID CHAR(6),     /* CONNECTION ID         @Y30LB52*/ 00743000
*                 3 UCPUID CHAR(5), /* HOST ID               @Y30LB52*/ 00744000
*                 3 UCH FIXED(8),   /* CHANNEL ON HOST       @Y30LB52*/ 00745000
*                2 USA FIXED(8),    /* STAGING ADAPTER       @Y30LB52*/ 00746000
*                2 UCI CHAR(1);     /* INTERFACE ON THE SA   @Y30LB52*/ 00747000
*                                                               03S0146 00748000
*             /*******************************************************/ 00749000
*             /*                                                     */ 00750000
*             /* FIND THE FIRST OPERAND CHARACTER                    */ 00751000
*             /*                                                     */ 00752000
*             /*******************************************************/ 00753000
*                                                               03S0146 00754000
*             UC=UC&&UC;            /* CLEAR UPPERCON WA     @Y30LB52*/ 00755000
         XC    UC(8),UC                                         03S0146 00756000
*             CALL NEXTBLNK;        /* NEXT BLANK            @Y30LB52*/ 00757000
         BAL   @14,NEXTBLNK                                     03S0147 00758000
*             CALL NEXTCHAR;        /* NEXT CHARACTER        @Y30LB52*/ 00759000
         BAL   @14,NEXTCHAR                                     03S0148 00760000
*             FIND=OFF;             /* NOT VALID FIND        @OZ28372*/ 00761000
         NI    FIND,B'11111011'                                 03S0149 00762000
*             TINTFNO=TINTFNO+1;    /* TOTAL INTERFACES COUNT@Y30LB52*/ 00763000
*                                                               03S0150 00764000
         LH    @10,TINTFNO                                      03S0150 00765000
         LA    @10,1(,@10)                                      03S0150 00766000
         STH   @10,TINTFNO                                      03S0150 00767000
*             /*******************************************************/ 00768000
*             /*                                                     */ 00769000
*             /* THE STATEMENT IS SCANNED TO THE END BEFORE THE      */ 00770000
*             /* 'TCPUINTF' TABLE IS UPDATED                         */ 00771000
*             /*                                                     */ 00772000
*             /*******************************************************/ 00773000
*                                                               03S0151 00774000
*             DO WHILE(EOC=OFF);    /* SCAN WHOLE COMMAND    @Y30LB52*/ 00775000
*                                                               03S0151 00776000
         B     @DE00151                                         03S0151 00777000
@DL00151 DS    0H                                               03S0152 00778000
*               /*****************************************************/ 00779000
*               /*                                                   */ 00780000
*               /* SEARCH FOR ONE OF THE KEYWORDS IN THE TABLE(FIRST */ 00781000
*               /* TWO CHARACTERS).                                  */ 00782000
*               /*                                                   */ 00783000
*               /*****************************************************/ 00784000
*                                                               03S0152 00785000
*               DO I=1 TO 6 WHILE(LINECHAR(1:2)^=UCKEYS(I));/* SCAN     00786000
*                                      FOR KEY               @Y30LB52*/ 00787000
         LA    I,1                                              03S0152 00788000
@DL00152 LR    @10,I                                            03S0152 00789000
         ALR   @10,@10                                          03S0152 00790000
         LA    @07,UCKEYS-2(@10)                                03S0152 00791000
         CLC   LINECHAR(2,LCPTR),0(@07)                         03S0152 00792000
         BE    @DC00152                                         03S0152 00793000
*               END;                /*                       @Y30LB52*/ 00794000
*                                                               03S0153 00795000
         AH    I,@CH00060                                       03S0153 00796000
         CH    I,@CH00054                                       03S0153 00797000
         BNH   @DL00152                                         03S0153 00798000
@DC00152 DS    0H                                               03S0154 00799000
*               /*****************************************************/ 00800000
*               /*                                                   */ 00801000
*               /* SUBCASE SUBSEGMENTS ARE PROVIDED FOR EACH KEYWORD */ 00802000
*               /* POSSIBLE                                          */ 00803000
*               /*                                                   */ 00804000
*               /*****************************************************/ 00805000
*                                                               03S0154 00806000
*                                                               04S0154 00807000
*               /*****************************************************/ 00808000
*               /*                                                   */ 00809000
*               /* THIS SEGMENT CONTAINS ONE SUBSEGMENT OF CODE TO   */ 00810000
*               /* PROCESS THE KEYWORDS OF THE 'UPPERCON' COMMAND.   */ 00811000
*               /*                                                   */ 00812000
*               /*****************************************************/ 00813000
*                                                               04S0154 00814000
*               DO;                 /* CASE(I)NAMES(KSA,CI,CH,CUID,KC   00815000
*                                      PUID,ALTPATH,UPPSKIP)         */ 00816000
*                 DCL                                           04S0155 00817000
*                   CL0002@ LABEL BASED(CP0002@(I)) VALUERANGE(KSA,CI,  00818000
*                       CH,CUID,KCPUID,ALTPATH,UPPSKIP);/* BRANCH       00819000
*                                      TARGET                        */ 00820000
*                 DCL                                           04S0156 00821000
*                   CP0002@(7) PTR(31) INIT(ADDR(KSA),ADDR(CI),ADDR(CH) 00822000
*                       ,ADDR(CUID),ADDR(KCPUID),ADDR(ALTPATH),ADDR(    00823000
*                       UPPSKIP));                              04S0156 00824000
*                 GOTO CL0002@;     /* BRANCH TO SELECTED CASE  04S0157 00825000
*                                                            @Y30LB52*/ 00826000
*                                                               04S0157 00827000
         LR    @10,I                                            04S0157 00828000
         SLA   @10,2                                            04S0157 00829000
         L     @10,CP0002@-4(@10)                               04S0157 00830000
         BR    @10                                              04S0157 00831000
*                 /***************************************************/ 00832000
*                 /*                                                 */ 00833000
*                 /* THIS CODE PROCESSES THE 'SA=' KEYWORD, STORING  */ 00834000
*                 /* THE VALUE FOR LATER USE                         */ 00835000
*                 /*                                                 */ 00836000
*                 /***************************************************/ 00837000
*                                                               04S0158 00838000
*KSA:                                                           04S0158 00839000
*                 DO;               /* SUBCASE               @Y30LB52*/ 00840000
KSA      DS    0H                                               04S0159 00841000
*                   LCPTR=LCPTR+3;  /* STEP OVER KEY         @Y30LB52*/ 00842000
         AH    LCPTR,@CH00063                                   04S0159 00843000
*                   BYTES=1;        /* CONVERSION COUNT      @Y30LB52*/ 00844000
         LA    BYTES,1                                          04S0160 00845000
*                   CALL HEXBYTES;  /* TO BINARY             @Y30LB52*/ 00846000
         BAL   @14,HEXBYTES                                     04S0161 00847000
*                   USA=LINECHAR(1);/* STASH                 @Y30LB52*/ 00848000
         MVC   USA(1),LINECHAR(LCPTR)                           04S0162 00849000
*                   LCPTR=LCPTR+1;  /* BUMP PTR PAST POSSIBLE X'40'     00850000
*                                                            @ZA32464*/ 00851000
         AH    LCPTR,@CH00060                                   04S0163 00852000
*                   GOTO CE0002@;   /* BRANCH TO END OF CASE         */ 00853000
         B     CE0002@                                          04S0164 00854000
*                 END;              /* END OF SUBCASE        @Y30LB52*/ 00855000
*                                                               04S0165 00856000
*                 /***************************************************/ 00857000
*                 /*                                                 */ 00858000
*                 /* THIS CODE SAVES THE 'CI=' VALUE, THE 'SA' UPPER */ 00859000
*                 /* INTERFACE ID                                    */ 00860000
*                 /*                                                 */ 00861000
*                 /***************************************************/ 00862000
*                                                               04S0166 00863000
*CI:                                                            04S0166 00864000
*                 DO;               /* SUBCASE               @Y30LB52*/ 00865000
CI       DS    0H                                               04S0167 00866000
*                   UCI=LINECHAR(4);/* SAVE INTERFACE (B,C,D)@Y30LB52*/ 00867000
         MVC   UCI(1),LINECHAR+3(LCPTR)                         04S0167 00868000
*                   GOTO CE0002@;   /* BRANCH TO END OF CASE         */ 00869000
         B     CE0002@                                          04S0168 00870000
*                 END;              /* END OF SUBCASE        @Y30LB52*/ 00871000
*                                                               04S0169 00872000
*                 /***************************************************/ 00873000
*                 /*                                                 */ 00874000
*                 /* THIS CODE SAVES THE BINARY EQUIVALENT OF THE    */ 00875000
*                 /* CHANNEL                                         */ 00876000
*                 /*                                                 */ 00877000
*                 /***************************************************/ 00878000
*                                                               04S0170 00879000
*CH:                                                            04S0170 00880000
*                 DO;               /* SUBCASE               @Y30LB52*/ 00881000
CH       DS    0H                                               04S0171 00882000
*                   SLL(LINECHAR(4),4);/* SHIFT TO HIGH 4 BITS  04S0171 00883000
*                                                            @Y30LB52*/ 00884000
         SLR   @10,@10                                          04S0171 00885000
         IC    @10,LINECHAR+3(,LCPTR)                           04S0171 00886000
         SLL   @10,4                                            04S0171 00887000
         STC   @10,LINECHAR+3(,LCPTR)                           04S0171 00888000
*                   UCH=UCH|LINECHAR(4);/* STORE             @Y30LB52*/ 00889000
         SLR   @10,@10                                          04S0172 00890000
         IC    @10,UCH                                          04S0172 00891000
         SLR   @07,@07                                          04S0172 00892000
         IC    @07,LINECHAR+3(,LCPTR)                           04S0172 00893000
         OR    @10,@07                                          04S0172 00894000
         STC   @10,UCH                                          04S0172 00895000
*                   LCPTR=LCPTR+4;  /* BUMP PAST A POSSIBLE CONVERTED   00896000
*                                      CH=4 TO PREVENT BLANK    04S0173 00897000
*                                      DETECTION             @ZA32464*/ 00898000
         AH    LCPTR,@CH00042                                   04S0173 00899000
*                   COMMA=OFF;      /* TURN OFF COMMA        @ZA32464*/ 00900000
         NI    COMMA,B'11111101'                                04S0174 00901000
*                   GOTO CE0002@;   /* BRANCH TO END OF CASE         */ 00902000
         B     CE0002@                                          04S0175 00903000
*                 END;              /* END OF SUBCASE        @Y30LB52*/ 00904000
*                                                               04S0176 00905000
*                 /***************************************************/ 00906000
*                 /*                                                 */ 00907000
*                 /* THIS CODE SAVES THE BINARY EQUIVALENT OF THE    */ 00908000
*                 /* CONTROL UNIT ATTACHMENT.                        */ 00909000
*                 /*                                                 */ 00910000
*                 /***************************************************/ 00911000
*                                                               04S0177 00912000
*CUID:                                                          04S0177 00913000
*                 DO;               /* SUBCASE               @Y30LB52*/ 00914000
CUID     DS    0H                                               04S0178 00915000
*                   IF LINECHAR(6)='1' THEN                     04S0178 00916000
         CLI   LINECHAR+5(LCPTR),C'1'                           04S0178 00917000
         BNE   @RF00178                                         04S0178 00918000
*                     UCH=UCH+2;    /* TWO'S BIT             @Y30LB52*/ 00919000
         IC    @10,UCH                                          04S0179 00920000
         LA    @10,2(,@10)                                      04S0179 00921000
         STC   @10,UCH                                          04S0179 00922000
*                   IF LINECHAR(7)='1' THEN                     04S0180 00923000
@RF00178 CLI   LINECHAR+6(LCPTR),C'1'                           04S0180 00924000
         BNE   @RF00180                                         04S0180 00925000
*                     UCH=UCH+1;    /* ONE'S BIT             @Y30LB52*/ 00926000
         IC    @10,UCH                                          04S0181 00927000
         LA    @10,1(,@10)                                      04S0181 00928000
         STC   @10,UCH                                          04S0181 00929000
*                   GOTO CE0002@;   /* BRANCH TO END OF CASE         */ 00930000
         B     CE0002@                                          04S0182 00931000
*                 END;              /* END OF SUBCASE        @Y30LB52*/ 00932000
*                                                               04S0183 00933000
*                 /***************************************************/ 00934000
*                 /*                                                 */ 00935000
*                 /* THIS CODE CONVERTS THE 'CPUID=' VALUE TO BINARY */ 00936000
*                 /* AND STORES IT.                                  */ 00937000
*                 /*                                                 */ 00938000
*                 /***************************************************/ 00939000
*                                                               04S0184 00940000
*KCPUID:                                                        04S0184 00941000
*                 DO;               /* SUBCASE               @Y30LB52*/ 00942000
KCPUID   DS    0H                                               04S0185 00943000
*                   LCPTR=LCPTR+6;  /* PAST 'CPUID=          @Y30LB52*/ 00944000
         AH    LCPTR,@CH00054                                   04S0185 00945000
*                   BYTES=10;       /* CONVERSION COUNT      @Y30LB52*/ 00946000
         LA    BYTES,10                                         04S0186 00947000
*                   CALL HEXBYTES;  /* CONVERT TO BINARY     @Y30LB52*/ 00948000
         BAL   @14,HEXBYTES                                     04S0187 00949000
*                   UCPUID=LINECHAR(1:5);/* STORE            @Y30LB52*/ 00950000
         MVC   UCPUID(5),LINECHAR(LCPTR)                        04S0188 00951000
*                   LCPTR=LCPTR+10; /* STEP OVER VALUE       @Y30LB52*/ 00952000
         AH    LCPTR,@CH00266                                   04S0189 00953000
*                   GOTO CE0002@;   /* BRANCH TO END OF CASE         */ 00954000
         B     CE0002@                                          04S0190 00955000
*                 END;              /* END OF SUBCASE        @Y30LB52*/ 00956000
*                                                               04S0191 00957000
*                 /***************************************************/ 00958000
*                 /*                                                 */ 00959000
*                 /* THIS CODE STEPS OVER THE 'ALTPATH=' KEYWORD AND */ 00960000
*                 /* VALUE. NOTHING IS RETAINED, THIS IS NECESSARY   */ 00961000
*                 /* DUE TO THE PECULIAR SYNTAX.                     */ 00962000
*                 /*                                                 */ 00963000
*                 /***************************************************/ 00964000
*                                                               04S0192 00965000
*ALTPATH:                                                       04S0192 00966000
*                 DO;               /* SUBCASE               @Y30LB52*/ 00967000
ALTPATH  DS    0H                                               04S0193 00968000
*                   DO WHILE(LINECHAR(1)^=')'&EOC=OFF);/* SCAN FOR      00969000
*                                      END                   @Y30LB52*/ 00970000
         B     @DE00193                                         04S0193 00971000
@DL00193 DS    0H                                               04S0194 00972000
*                     LCPTR=LCPTR+1;/* INCREMENT             @Y30LB52*/ 00973000
         AH    LCPTR,@CH00060                                   04S0194 00974000
*                     CALL NEXTCHAR;/* NEXT CHARACTER        @Y30LB52*/ 00975000
         BAL   @14,NEXTCHAR                                     04S0195 00976000
*                   END;            /*                       @Y30LB52*/ 00977000
@DE00193 CLI   LINECHAR(LCPTR),C')'                             04S0196 00978000
         BE    @DC00193                                         04S0196 00979000
         TM    EOC,B'10000000'                                  04S0196 00980000
         BZ    @DL00193                                         04S0196 00981000
@DC00193 DS    0H                                               04S0197 00982000
*                   GOTO CE0002@;   /* BRANCH TO END OF CASE         */ 00983000
         B     CE0002@                                          04S0197 00984000
*                 END;              /* END OF SUBCASE        @Y30LB52*/ 00985000
*UPPSKIP:                                                       04S0199 00986000
*                 DO;               /* SUBCASE               @Y30LB52*/ 00987000
UPPSKIP  DS    0H                                               04S0200 00988000
*                   LCPTR=LCPTR+1;  /* INCREMENT POINTER     @Y30LB52*/ 00989000
         AH    LCPTR,@CH00060                                   04S0200 00990000
*                   GOTO CE0002@;   /* BRANCH TO END OF CASE         */ 00991000
         B     CE0002@                                          04S0201 00992000
*                 END;              /* END OF SUBCASE        @Y30LB52*/ 00993000
*CE0002@:                                                       04S0203 00994000
*               END;                /* END OF CASE           @Y30LB52*/ 00995000
CE0002@  DS    0H                                               04S0204 00996000
*                                                               03S0204 00997000
*               /*****************************************************/ 00998000
*               /*                                                   */ 00999000
*               /* STEP TO NEXT KEYWORD                              */ 01000000
*               /*                                                   */ 01001000
*               /*****************************************************/ 01002000
*                                                               03S0204 01003000
*               CALL NEXTCMMA;      /* NEXT COMMA            @Y30LB52*/ 01004000
         BAL   @14,NEXTCMMA                                     03S0204 01005000
*               CALL NEXTCHAR;      /* NEXT CHARACTER        @Y30LB52*/ 01006000
         BAL   @14,NEXTCHAR                                     03S0205 01007000
*             END;                  /*                       @Y30LB52   01008000
*                                                            @Y30LB52*/ 01009000
@DE00151 TM    EOC,B'10000000'                                  03S0206 01010000
         BZ    @DL00151                                         03S0206 01011000
*                                                               03S0207 01012000
*             /*******************************************************/ 01013000
*             /*                                                     */ 01014000
*             /* THIS CODE UPDATES THE 'TCPUINTF' TABLE FROM THE     */ 01015000
*             /* KEYWORD OPERANDS EXTRACTED DURING THE SCAN OF THIS  */ 01016000
*             /* STATEMENT. THE TABLE IS A GROUP OF CHAINED ENTRIES  */ 01017000
*             /* WITH BEGINNING AND END DUMMIES ANCHORING THE CHAIN. */ 01018000
*             /* THE SCAN FOR THE POSITION OF THE CURRENT ENTRY      */ 01019000
*             /* STARTS FROM THE TOP AND PROCEEDS TO THE CORRECT     */ 01020000
*             /* POSITION. THE CHAIN IS RESET WITH THE NEW ENTRY.    */ 01021000
*             /*                                                     */ 01022000
*             /*******************************************************/ 01023000
*                                                               03S0207 01024000
*             K=TINTFNO+2;          /* LOAD NEXT ENTRY INDEX @Y30LB52*/ 01025000
         LA    K,2                                              03S0207 01026000
         AH    K,TINTFNO                                        03S0207 01027000
*             TCPUINTF(K)=UC;       /* MOVE TEMPORARY UPPERCON  03S0208 01028000
*                                      STRUCTURE             @Y30LB52*/ 01029000
         LR    @10,K                                            03S0208 01030000
         MH    @10,@CH00052                                     03S0208 01031000
         LA    @07,TCPUINTF-12(@10)                             03S0208 01032000
         MVI   8(@07),C' '                                      03S0208 01033000
         MVC   9(3,@07),8(@07)                                  03S0208 01034000
         MVC   0(8,@07),UC                                      03S0208 01035000
*             I=1;                  /* INDEX STARTING POINT  @Y30LB52*/ 01036000
         LA    I,1                                              03S0209 01037000
*             DO WHILE(TCPUCHCU(K)>TCPUCHCU(I));/* CHAIN TO PROPER      01038000
*                                      POSITION              @Y30LB52*/ 01039000
         B     @DE00210                                         03S0210 01040000
@DL00210 DS    0H                                               03S0211 01041000
*               J=I;                /* SAVE THE LAST INDEX   @Y30LB52*/ 01042000
         LR    J,I                                              03S0211 01043000
*               I=TFPTR(I);         /* LOAD NEXT INDEX       @Y30LB52*/ 01044000
         LR    @10,I                                            03S0212 01045000
         MH    @10,@CH00052                                     03S0212 01046000
         SLR   @07,@07                                          03S0212 01047000
         IC    @07,TFPTR-12(@10)                                03S0212 01048000
         LR    I,@07                                            03S0212 01049000
*             END;                  /*                       @Y30LB52*/ 01050000
@DE00210 LA    @10,12                                           03S0213 01051000
         LR    @01,K                                            03S0213 01052000
         MR    @00,@10                                          03S0213 01053000
         LR    @09,I                                            03S0213 01054000
         MR    @08,@10                                          03S0213 01055000
         LA    @07,TCPUCHCU-12(@01)                             03S0213 01056000
         LA    @08,TCPUCHCU-12(@09)                             03S0213 01057000
         CLC   0(6,@07),0(@08)                                  03S0213 01058000
         BH    @DL00210                                         03S0213 01059000
*             TFPTR(K)=TFPTR(J);    /* POINT CURRENT TO NEXT @Y30LB52*/ 01060000
         LR    @09,@10                                          03S0214 01061000
         MR    @08,J                                            03S0214 01062000
         SLR   @10,@10                                          03S0214 01063000
         IC    @10,TFPTR-12(@09)                                03S0214 01064000
         STC   @10,TFPTR-12(@01)                                03S0214 01065000
*             TFPTR(J)=K;           /* POINT PREVIOUS TO CURRENT        01066000
*                                                            @Y30LB52*/ 01067000
         STC   K,TFPTR-12(@09)                                  03S0215 01068000
*             GOTO CE0001@;         /* BRANCH TO END OF CASE         */ 01069000
         B     CE0001@                                          02S0216 01070000
*           END;                    /* END OF SUBCASE        @Y30LB52*/ 01071000
*DASD:                                                          02S0218 01072000
*           DO;                     /* SUBCASE               @Y30LB52*/ 01073000
DASD     DS    0H                                               02S0219 01074000
*                                                               03S0219 01075000
*             /*******************************************************/ 01076000
*             /*                                                     */ 01077000
*             /* THIS SEGMENT PROCESSES THE 'DASD ' CONTROL          */ 01078000
*             /* STATEMENTS, EXTRACTING THE DEVN KEYWORDS, COUNTING  */ 01079000
*             /* THE NUMBER OF SPINDELS. LOCATE THE NEXT KEYWORD     */ 01080000
*             /*                                                     */ 01081000
*             /*******************************************************/ 01082000
*                                                               03S0219 01083000
*             CALL NEXTBLNK;        /* NEXT BLANK            @Y30LB52*/ 01084000
         BAL   @14,NEXTBLNK                                     03S0219 01085000
*             CALL NEXTCHAR;        /* NEXT CHARACTER        @Y30LB52*/ 01086000
         BAL   @14,NEXTCHAR                                     03S0220 01087000
*             FIND=OFF;             /* NOT VALID FIND        @OZ28372*/ 01088000
*                                                               03S0221 01089000
         NI    FIND,B'11111011'                                 03S0221 01090000
*             /*******************************************************/ 01091000
*             /*                                                     */ 01092000
*             /* SCAN THE COMPLETE STATEMENT                         */ 01093000
*             /*                                                     */ 01094000
*             /*******************************************************/ 01095000
*                                                               03S0222 01096000
*             DO WHILE(EOC=OFF);    /* SCAN TO END OF COMMAND@Y30LB52*/ 01097000
*                                                               03S0222 01098000
         B     @DE00222                                         03S0222 01099000
@DL00222 DS    0H                                               03S0223 01100000
*               /*****************************************************/ 01101000
*               /*                                                   */ 01102000
*               /* COUNT THE 'DEV=' KEYWORDS(SPINDLES)               */ 01103000
*               /*                                                   */ 01104000
*               /*****************************************************/ 01105000
*                                                               03S0223 01106000
*               IF LINECHAR(1:2)='DE'/* DEV= KEYWORD?        @Y30LB52*/ 01107000
*                 THEN                                          03S0223 01108000
         CLC   LINECHAR(2,LCPTR),@CC00326                       03S0223 01109000
         BNE   @RF00223                                         03S0223 01110000
*                 TSPINO=TSPINO+1;  /* INCREMENT THE SPINDLES COUNT     01111000
*                                                            @Y30LB52*/ 01112000
         LH    @10,TSPINO                                       03S0224 01113000
         LA    @10,1(,@10)                                      03S0224 01114000
         STH   @10,TSPINO                                       03S0224 01115000
*               LCPTR=LCPTR+1;      /* ON TO NEXT CHARACTER  @Y30LB52*/ 01116000
*                                                               03S0225 01117000
@RF00223 AH    LCPTR,@CH00060                                   03S0225 01118000
*               /*****************************************************/ 01119000
*               /*                                                   */ 01120000
*               /* STEP TO THE NEXT OPERAND                          */ 01121000
*               /*                                                   */ 01122000
*               /*****************************************************/ 01123000
*                                                               03S0226 01124000
*               CALL NEXTCMMA;      /* NEXT COMMA IN LINE    @Y30LB52*/ 01125000
         BAL   @14,NEXTCMMA                                     03S0226 01126000
*               CALL NEXTCHAR;      /* NEXT CHARACTER        @Y30LB52*/ 01127000
         BAL   @14,NEXTCHAR                                     03S0227 01128000
*             END;                  /*                       @Y30LB52*/ 01129000
@DE00222 TM    EOC,B'10000000'                                  03S0228 01130000
         BZ    @DL00222                                         03S0228 01131000
*             GOTO CE0001@;         /* BRANCH TO END OF CASE         */ 01132000
         B     CE0001@                                          02S0229 01133000
*           END;                    /* END OF SUBCASE        @Y30LB52*/ 01134000
*SKIPCMND:                                                      02S0231 01135000
*           DO;                     /* SUBCASE               @Y30LB52*/ 01136000
SKIPCMND DS    0H                                               02S0232 01137000
*                                                               03S0232 01138000
*             /*******************************************************/ 01139000
*             /*                                                     */ 01140000
*             /* THIS SEGMENT IS EXECUTED WHEN A COMMAND STATEMENT IS*/ 01141000
*             /* ENCOUNTERED THAT IS NOT PROCESSED BY 'ISDACNFG'.    */ 01142000
*             /* IT'S ONLY FUNCTION IS TO SKIP TO THE END OF THE     */ 01143000
*             /* COMMAND STATEMENT.                                  */ 01144000
*             /*                                                     */ 01145000
*             /*******************************************************/ 01146000
*                                                               03S0232 01147000
*             CALL NEXTBLNK;        /* NEXT BLANK            @ZM30730*/ 01148000
         BAL   @14,NEXTBLNK                                     03S0232 01149000
*             CALL NEXTCHAR;        /* NEXT CHARACTER        @ZM30730*/ 01150000
         BAL   @14,NEXTCHAR                                     03S0233 01151000
*             DO WHILE(EOC=OFF);    /* SCAN TO COMMAND END   @Y30LB52*/ 01152000
         B     @DE00234                                         03S0234 01153000
@DL00234 DS    0H                                               03S0235 01154000
*               LCPTR=LCPTR+1;      /* STEP TO NEXT CHARACTER@Y30LB52*/ 01155000
         AH    LCPTR,@CH00060                                   03S0235 01156000
*               CALL NEXTCMMA;      /* LOCATE NEXT COMMA     @Y30LB52*/ 01157000
         BAL   @14,NEXTCMMA                                     03S0236 01158000
*               CALL NEXTCHAR;      /* CHECK FOR COMMENT     @ZM30730*/ 01159000
         BAL   @14,NEXTCHAR                                     03S0237 01160000
*             END;                  /*                       @Y30LB52*/ 01161000
@DE00234 TM    EOC,B'10000000'                                  03S0238 01162000
         BZ    @DL00234                                         03S0238 01163000
*             GOTO CE0001@;         /* BRANCH TO END OF CASE         */ 01164000
         B     CE0001@                                          02S0239 01165000
*           END;                    /* END OF SUBCASE        @Y30LB52*/ 01166000
*CE0001@:                                                       02S0241 01167000
*         END;                      /* END OF CASE           @Y30LB52*/ 01168000
CE0001@  DS    0H                                               02S0242 01169000
*       END;                        /*                       @Y30LB52*/ 01170000
*     ELSE                                                      02S0243 01171000
*       RETCOD=DATAERR;             /* INDICATE ERROR        @OZ28372*/ 01172000
         B     @RC00046                                         02S0243 01173000
@RF00046 MVC   RETCOD(4),@CF00082                               02S0243 01174000
*     IF RETCOD^=0 THEN             /* IF INVALID COMMAND OR @OZ28372*/ 01175000
@RC00046 ICM   @10,15,RETCOD                                    02S0244 01176000
         BZ    @RF00244                                         02S0244 01177000
*       DO;                         /* INVALID PARM IN DATA  @OZ28372*/ 01178000
*         GEN(CLOSE MF=(E,OPENLIST))/* GIVES RETURN WITH     @OZ28372*/ 01179000
*         SETS(SYSINDCB,OPENLIST);  /* 28 RETURN CODE - DATA @OZ28372*/ 01180000
         CLOSE MF=(E,OPENLIST)                                          01181000
*         RETURN CODE(DATAERR);     /* ERROR                 @OZ28372*/ 01182000
         L     @13,4(,@13)                                      02S0247 01183000
         L     @00,@SIZDATD                                     02S0247 01184000
         LR    @01,@11                                          02S0247 01185000
         FREEMAIN R,LV=(0),A=(1)                                        01186000
         LA    @15,28                                           02S0247 01187000
         L     @14,12(,@13)                                     02S0247 01188000
         LM    @00,@12,20(@13)                                  02S0247 01189000
         BR    @14                                              02S0247 01190000
*       END;                        /*                       @OZ28372*/ 01191000
*     DO WHILE(EOC=OFF);            /* SKIP TO END OF CURRENT COMMAND   01192000
*                                                            @Y30LB52*/ 01193000
@RF00244 B     @DE00249                                         02S0249 01194000
@DL00249 DS    0H                                               02S0250 01195000
*       LCPTR=LCPTR+1;              /* INCREMENT BUFFER POINTER 02S0250 01196000
*                                                            @Y30LB52*/ 01197000
         AH    LCPTR,@CH00060                                   02S0250 01198000
*       CALL NEXTCMMA;              /* SCAN FOR COMMA        @Y30LB52*/ 01199000
         BAL   @14,NEXTCMMA                                     02S0251 01200000
*       CALL NEXTCHAR;              /* CHECK FOR COMMENT     @ZM30730*/ 01201000
         BAL   @14,NEXTCHAR                                     02S0252 01202000
*     END;                          /*                       @Y30LB52*/ 01203000
@DE00249 TM    EOC,B'10000000'                                  02S0253 01204000
         BZ    @DL00249                                         02S0253 01205000
*     EOC=OFF;                      /* RESET END OF COMMAND FLAG        01206000
*                                                            @Y30LB52*/ 01207000
         NI    EOC,B'01111111'                                  02S0254 01208000
*     IF EOF=OFF THEN               /* OK TO READ AGAIN      @ZA11669*/ 01209000
         TM    EOF,B'01000000'                                  02S0255 01210000
         BNZ   @RF00255                                         02S0255 01211000
*       CALL READRCRD;              /* READ NEXT RECORD      @Y30LB52*/ 01212000
         BAL   @14,READRCRD                                     02S0256 01213000
*     ELSE                          /* NO, EOF ALREADY READ  @ZA11669*/ 01214000
*       RETURN CODE(DATAERR);       /* UNEXPECTED INPUT END  @ZA11669*/ 01215000
         B     @RC00255                                         02S0257 01216000
@RF00255 L     @13,4(,@13)                                      02S0257 01217000
         L     @00,@SIZDATD                                     02S0257 01218000
         LR    @01,@11                                          02S0257 01219000
         FREEMAIN R,LV=(0),A=(1)                                        01220000
         LA    @15,28                                           02S0257 01221000
         L     @14,12(,@13)                                     02S0257 01222000
         LM    @00,@12,20(@13)                                  02S0257 01223000
         BR    @14                                              02S0257 01224000
*   END;                            /*                       @Y30LB52*/ 01225000
@RC00255 DS    0H                                               02S0258 01226000
@DE00037 TM    EOF,B'01000000'                                  02S0258 01227000
         BZ    @DL00037                                         02S0258 01228000
*                                                               01S0259 01229000
*   /*****************************************************************/ 01230000
*   /*                                                               */ 01231000
*   /* ALLOCATE THE PERMANENT CONFIGURATION DATA STRUCTURE. THE SPACE*/ 01232000
*   /* ALLOCATED IS BASED ON THE SIZE OF THE SUBSYSTEM REFLECTED IN  */ 01233000
*   /* THE TEMPORARY COUNTS.                                         */ 01234000
*   /*                                                               */ 01235000
*   /*****************************************************************/ 01236000
*                                                               01S0259 01237000
*   IF RCRD1=OFF                    /* NO RECORDS READ       @Y30LB52*/ 01238000
*     THEN                                                      01S0259 01239000
         TM    RCRD1,B'00010000'                                01S0259 01240000
         BNZ   @RF00259                                         01S0259 01241000
*     RETURN CODE(NOINPUT);         /* INDICATE NO RECORDS   @Y30LB52*/ 01242000
         L     @13,4(,@13)                                      01S0260 01243000
         L     @00,@SIZDATD                                     01S0260 01244000
         LR    @01,@11                                          01S0260 01245000
         FREEMAIN R,LV=(0),A=(1)                                        01246000
         LA    @15,36                                           01S0260 01247000
         L     @14,12(,@13)                                     01S0260 01248000
         LM    @00,@12,20(@13)                                  01S0260 01249000
         BR    @14                                              01S0260 01250000
*   IF ERROR=OFF                    /* NO I/O ERROR          @Y30LB52*/ 01251000
*     THEN                                                      01S0261 01252000
@RF00259 TM    ERROR,B'00100000'                                01S0261 01253000
         BNZ   @RF00261                                         01S0261 01254000
*     DO;                           /*                       @Y30LB52*/ 01255000
*                                                               02S0263 01256000
*       /*************************************************************/ 01257000
*       /*                                                           */ 01258000
*       /* THIS SEGMENT PRODUCES THE FINAL CONFIGURATION DATA        */ 01259000
*       /* STRUCTURE FROM THE TEMPORARY DATA ACCUMULATED FROM THE    */ 01260000
*       /* INPUT CONTROL STATEMENTS. THE STORAGE FOR THE FINAL TABLES*/ 01261000
*       /* IS ALLOCATED FROM SUBPOOL 0 AND ANCHORED TO THE 'SDACVT'  */ 01262000
*       /* AT 'CNFG0PTR'. ALLOCATE THE PERMANENT CONFIGURATION DATA  */ 01263000
*       /* STRUCTURE. THE SPACE ALLOCATED IS BASED ON THE SIZE OF THE*/ 01264000
*       /* SUBSYSTEM AS REFLECTED IN THE TEMPORARY COUNTS. THE       */ 01265000
*       /* FOLLOWING STRUCTURE MAPS THE ISDAGET0 INPUT PARAMETER LIST*/ 01266000
*       /*                                                           */ 01267000
*       /*************************************************************/ 01268000
*                                                               02S0263 01269000
*       DCL                                                     02S0263 01270000
*         CHCUPTR PTR(31),          /* CHANNEL/CU TABLE BASE @Y30LB52*/ 01271000
*         GET0PTR PTR(31) DEF(CNFG0PTR);/*                   @Y30LB52*/ 01272000
*       IF TMSFNO=0|TCPUNO=0|TSANO=0|TINTFNO=0 THEN/* FULL INPUT        01273000
*                                                            @ZA10797*/ 01274000
         SLR   @10,@10                                          02S0264 01275000
         CH    @10,TMSFNO                                       02S0264 01276000
         BE    @RT00264                                         02S0264 01277000
         CH    @10,TCPUNO                                       02S0264 01278000
         BE    @RT00264                                         02S0264 01279000
         CH    @10,TSANO                                        02S0264 01280000
         BE    @RT00264                                         02S0264 01281000
         CH    @10,TINTFNO                                      02S0264 01282000
         BNE   @RF00264                                         02S0264 01283000
@RT00264 DS    0H                                               02S0265 01284000
*         RETURN CODE(DATAERR);     /* NO, SOME FIELD ZERO   @ZA10797*/ 01285000
         L     @13,4(,@13)                                      02S0265 01286000
         L     @00,@SIZDATD                                     02S0265 01287000
         LR    @01,@11                                          02S0265 01288000
         FREEMAIN R,LV=(0),A=(1)                                        01289000
         LA    @15,28                                           02S0265 01290000
         L     @14,12(,@13)                                     02S0265 01291000
         LM    @00,@12,20(@13)                                  02S0265 01292000
         BR    @14                                              02S0265 01293000
*       ELSE                                                    02S0266 01294000
*         ;                         /* INPUT COMPLETE        @ZA10797*/ 01295000
@RF00264 DS    0H                                               02S0267 01296000
*       CORELEN=LENGTH(LTPDRDTB)*TMSFNO+LENGTH(CHCUTAB)*TINTFNO+TCPUNO* 01297000
*           LENGTH(TCPUSER)+LENGTH(PCNFG)+LENGTH(SAINTFC)*TSANO;/*      01298000
*                                      CALCULATE LENGTH OF FIXED        01299000
*                                      CONFIGURATION DATA    @Y30LB52*/ 01300000
         L     @10,@PC00001                                     02S0267 01301000
         L     @10,CVTPTR(,@10)                                 02S0267 01302000
         LH    @15,TMSFNO                                       02S0267 01303000
         SLA   @15,3                                            02S0267 01304000
         LA    @14,12                                           02S0267 01305000
         LR    @09,@14                                          02S0267 01306000
         MH    @09,TINTFNO                                      02S0267 01307000
         ALR   @15,@09                                          02S0267 01308000
         LH    @09,TCPUNO                                       02S0267 01309000
         MH    @09,@CH00056                                     02S0267 01310000
         ALR   @15,@09                                          02S0267 01311000
         AH    @15,@CH00085                                     02S0267 01312000
         MH    @14,TSANO                                        02S0267 01313000
         ALR   @15,@14                                          02S0267 01314000
         STCM  @15,7,CORELEN(@10)                               02S0267 01315000
*       SPNO=0;                     /* SUBPOOL NUMBER        @Y30LB52*/ 01316000
         MVI   SPNO(@10),X'00'                                  02S0268 01317000
*       RESPECIFY                                               02S0269 01318000
*         R1 RESTRICTED;            /*                       @Y30LB52*/ 01319000
*       R1=ADDR(WORKCALL);          /* ADDRESS PARMLIST      @Y30LB52*/ 01320000
         LA    R1,WORKCALL(,@10)                                02S0270 01321000
*       CALL ISDAGET1;              /* ALLOCATE CONFIG AREA  @Y30LB52*/ 01322000
         L     @15,@CV00119                                     02S0271 01323000
         BALR  @14,@15                                          02S0271 01324000
*       RESPECIFY                                               02S0272 01325000
*         R1 UNRESTRICTED;          /*                       @Y30LB52*/ 01326000
*       RESPECIFY                                               02S0273 01327000
*         R15 RESTRICTED;           /*                       @Y30LB52*/ 01328000
*       IF R15^=0                   /* ERROR RETURN          @Y30LB52*/ 01329000
*         THEN                                                  02S0274 01330000
         LTR   R15,R15                                          02S0274 01331000
         BZ    @RF00274                                         02S0274 01332000
*         DO;                       /*                       @Y30LB52*/ 01333000
*           GEN(CLOSE MF=(E,OPENLIST))                          02S0276 01334000
*           SETS(SYSINDCB,OPENLIST);/*                       @Y30LB52*/ 01335000
         CLOSE MF=(E,OPENLIST)                                          01336000
*           RETURN CODE(NOSPACE);   /* INDICATE NO CONFIGURATION DATA   01337000
*                                                            @Y30LB52*/ 01338000
         L     @13,4(,@13)                                      02S0277 01339000
         L     @00,@SIZDATD                                     02S0277 01340000
         LR    @01,@11                                          02S0277 01341000
         FREEMAIN R,LV=(0),A=(1)                                        01342000
         LA    @15,24                                           02S0277 01343000
         L     @14,12(,@13)                                     02S0277 01344000
         LM    @00,@12,20(@13)                                  02S0277 01345000
         BR    @14                                              02S0277 01346000
*         END;                      /*                       @Y30LB52*/ 01347000
*       ELSE                                                    02S0279 01348000
*         DO;                       /* CONFIGURATION AREA OBTAINED      01349000
*                                                            @Y30LB52*/ 01350000
@RF00274 DS    0H                                               02S0280 01351000
*           CNFG0PTR=COREADDR;      /* BASE OF CONFIG        @Y30LB52*/ 01352000
         L     @14,@PC00001                                     02S0280 01353000
         L     @14,CVTPTR(,@14)                                 02S0280 01354000
         L     @10,COREADDR(,@14)                               02S0280 01355000
         ST    @10,CNFG0PTR(,@14)                               02S0280 01356000
*           PCNFGL=CORELEN;         /* LENGTH OF TOTAL AREA  @Y30LB52*/ 01357000
         MVC   PCNFGL(2,@10),CORELEN+1(@14)                     02S0281 01358000
*           RESPECIFY                                           02S0282 01359000
*             R15 UNRESTRICTED;     /*                       @Y30LB52*/ 01360000
*                                                               02S0282 01361000
*           /*********************************************************/ 01362000
*           /*                                                       */ 01363000
*           /* SET POINTERS TO THE CHCU/SA CONVERSION TABLE AND TO   */ 01364000
*           /* THE LOGICAL TO PHYSICAL DRC/DRD TABLE                 */ 01365000
*           /*                                                       */ 01366000
*           /*********************************************************/ 01367000
*                                                               02S0283 01368000
*           RESPECIFY                                           02S0283 01369000
*             ISDAGHDR BASED(CNFG0PTR);/*                    @Y30LB52*/ 01370000
*           CHCUAD=CNFG0PTR+LENGTH(PCNFG);/* SET POINTER TO CHANNEL     01371000
*                                      TABLE                 @Y30LB52*/ 01372000
         LA    @15,36                                           02S0284 01373000
         ALR   @15,@10                                          02S0284 01374000
         ST    @15,CHCUAD(,@10)                                 02S0284 01375000
*           LTPAD=CHCUAD+LENGTH(CHCUTAB)*TINTFNO;/* SET POINTER TO      01376000
*                                      THE DRD/DRC TABLE     @Y30LB52*/ 01377000
         LH    @14,TINTFNO                                      02S0285 01378000
         LA    @09,12                                           02S0285 01379000
         LR    @01,@14                                          02S0285 01380000
         MR    @00,@09                                          02S0285 01381000
         ALR   @15,@01                                          02S0285 01382000
         ST    @15,LTPAD(,@10)                                  02S0285 01383000
*           SAINTFP=LTPAD+LENGTH(LTPDRDTB)*TMSFNO;/* SET POINTER TO     01384000
*                                      SA UPPER INTF TABLE   @Y30LB52*/ 01385000
         LH    @08,TMSFNO                                       02S0286 01386000
         SLA   @08,3                                            02S0286 01387000
         ALR   @15,@08                                          02S0286 01388000
         ST    @15,SAINTFP(,@10)                                02S0286 01389000
*           CPUSERAD=SAINTFP+LENGTH(SAINTFC)*TSANO;/* SET POINTER TO    01390000
*                                      CPU SERIALS           @Y30LB52*/ 01391000
         MH    @09,TSANO                                        02S0287 01392000
         ALR   @15,@09                                          02S0287 01393000
         ST    @15,CPUSERAD(,@10)                               02S0287 01394000
*           IF TINTFNO=0 THEN                                   02S0288 01395000
         SLR   @15,@15                                          02S0288 01396000
         CR    @14,@15                                          02S0288 01397000
         BNE   @RF00288                                         02S0288 01398000
*             CHCUAD=0;             /* IF NO UPPER INTERFACES ARE       01399000
*                                      DEFINED, INDICATE     @Y30LB52*/ 01400000
         ST    @15,CHCUAD(,@10)                                 02S0289 01401000
*           I=SAINTFP;              /* LOAD FIRST SAINTF ADDRESS        01402000
*                                                            @Y30LB52*/ 01403000
@RF00288 L     @10,@PC00001                                     02S0290 01404000
         L     @10,CVTPTR(,@10)                                 02S0290 01405000
         L     @10,CNFG0PTR(,@10)                               02S0290 01406000
         L     I,SAINTFP(,@10)                                  02S0290 01407000
*           RESPECIFY                                           02S0291 01408000
*             SAINTF BASED(I);      /*                       @Y30LB52*/ 01409000
*           DO J=1 TO TSANO;        /* LOOP THROUGH ALL SA'S @Y30LB52*/ 01410000
         LA    J,1                                              02S0292 01411000
         B     @DE00292                                         02S0292 01412000
@DL00292 DS    0H                                               02S0293 01413000
*             SAINTFC=SAINTFC&&SAINTFC;/* CLEAR FIRST SAINTF @Y30LB52*/ 01414000
         XC    SAINTFC(12,I),SAINTFC(I)                         02S0293 01415000
*             I=I+LENGTH(SAINTFC);  /* INCREMENT             @Y30LB52*/ 01416000
         AH    I,@CH00052                                       02S0294 01417000
*           END;                    /*                       @Y30LB52*/ 01418000
         AH    J,@CH00060                                       02S0295 01419000
@DE00292 CH    J,TSANO                                          02S0295 01420000
         BNH   @DL00292                                         02S0295 01421000
*                                                               03S0296 01422000
*           /*********************************************************/ 01423000
*           /*                                                       */ 01424000
*           /* THE FOLLOWING SEGMENT MOVES THE FIXED CONFIGURATION   */ 01425000
*           /* DATA AND VARIABLE DATA TO ITS PERMANENT STORAGE. MOVE */ 01426000
*           /* THE FIXED PORTION OF THE CONFIGURATION DATA TO THE    */ 01427000
*           /* PERMANENT STRUCTURE.                                  */ 01428000
*           /*                                                       */ 01429000
*           /*********************************************************/ 01430000
*                                                               03S0296 01431000
*           CNFGFXD(1:LENGTH(TCNFGFXD))=TCNFGFXD;/* FIXED CONFIG        01432000
*                                      DATA@Y30LB52                  */ 01433000
*                                                               03S0296 01434000
         L     @10,@PC00001                                     03S0296 01435000
         L     @10,CVTPTR(,@10)                                 03S0296 01436000
         L     @10,CNFG0PTR(,@10)                               03S0296 01437000
         MVC   CNFGFXD(14,@10),TCNFGFXD                         03S0296 01438000
*           /*********************************************************/ 01439000
*           /*                                                       */ 01440000
*           /* COMPUTE TOTAL OF SSID'S AND DASD                      */ 01441000
*           /*                                                       */ 01442000
*           /*********************************************************/ 01443000
*                                                               03S0297 01444000
*           CNFGTOTL=TMSFNO+TSPINO+TSANO+36;/* COMPUTE TOTAL DEVICES    01445000
*                                      IN SUBSYSTEM          @Y30LB52*/ 01446000
*                                                               03S0297 01447000
         LH    @02,TMSFNO                                       03S0297 01448000
         AH    @02,TSPINO                                       03S0297 01449000
         AH    @02,TSANO                                        03S0297 01450000
         AH    @02,@CH00085                                     03S0297 01451000
         STH   @02,CNFGTOTL(,@10)                               03S0297 01452000
*           /*********************************************************/ 01453000
*           /*                                                       */ 01454000
*           /* LOOP THROUGH AND MOVE THE CHAINED SA UPPPER INTERFACE */ 01455000
*           /* ENTRIES TO THE PERMANENT STRUCTURE. THE ENTRIES ARE   */ 01456000
*           /* STORE IN ASCENDING ORDER BY CPUID/CH/CU.              */ 01457000
*           /*                                                       */ 01458000
*           /*********************************************************/ 01459000
*                                                               03S0298 01460000
*           I=TFPTR(1);             /* STARTING ENTRY        @Y30LB52*/ 01461000
         SLR   I,I                                              03S0298 01462000
         IC    I,TFPTR                                          03S0298 01463000
*           RESPECIFY                                           03S0299 01464000
*             CHCUTAB BASED(CHCUPTR);/*                      @Y30LB52*/ 01465000
*           DO CHCUPTR=CHCUAD TO LTPAD BY LENGTH(CHCUTAB) WHILE(I^=2);  01466000
         L     CHCUPTR,CHCUAD(,@10)                             03S0300 01467000
         B     @DE00300                                         03S0300 01468000
@DL00300 CH    I,@CH00045                                       03S0300 01469000
         BE    @DC00300                                         03S0300 01470000
*                                   /* LOOP THROUGH ALL CHANNEL 03S0301 01471000
*                                      ENTRIES                       */ 01472000
*             CHCUTAB=TCPUINTF(I);  /* MOVE TEMPORARY ENTRY TO  03S0301 01473000
*                                      PERMANENT ENTRY       @Y30LB52*/ 01474000
         LA    @10,12                                           03S0301 01475000
         LR    @01,I                                            03S0301 01476000
         MR    @00,@10                                          03S0301 01477000
         LA    @07,TCPUINTF-12(@01)                             03S0301 01478000
         MVC   CHCUTAB(12,CHCUPTR),0(@07)                       03S0301 01479000
*             SPLTABP=0;            /* ACCUMULATOR PTR INIT  @Y30LB52*/ 01480000
         SLR   @07,@07                                          03S0302 01481000
         ST    @07,SPLTABP(,CHCUPTR)                            03S0302 01482000
*             J=INTF;               /* LOAD INTERFACE(B,C,D) @Y30LB52*/ 01483000
         SLR   J,J                                              03S0303 01484000
         IC    J,INTF(,CHCUPTR)                                 03S0303 01485000
*             J=J-'C1'X;            /* COMPUTE INDEX         @Y30LB52*/ 01486000
         SH    J,@CH00334                                       03S0304 01487000
*             K=SA*LENGTH(SAINTFC)+SAINTFP;/* COMPUTE POINTER TO SA     01488000
*                                      TABLE                 @Y30LB52*/ 01489000
         LR    @05,@10                                          03S0305 01490000
         SLR   @10,@10                                          03S0305 01491000
         IC    @10,SA(,CHCUPTR)                                 03S0305 01492000
         MR    K,@10                                            03S0305 01493000
         L     @10,@PC00001                                     03S0305 01494000
         L     @10,CVTPTR(,@10)                                 03S0305 01495000
         L     @10,CNFG0PTR(,@10)                               03S0305 01496000
         AL    @05,SAINTFP(,@10)                                03S0305 01497000
         LR    K,@05                                            03S0305 01498000
*             K->SAINTF(J)=CHCUPTR; /* SET ALTERNATE ACCESS POINTER     01499000
*                                      TO CHANNEL ENTRY      @Y30LB52*/ 01500000
*                                                               03S0306 01501000
         LR    @10,J                                            03S0306 01502000
         SLA   @10,2                                            03S0306 01503000
         AL    @10,@CF00382                                     03S0306 01504000
         ST    CHCUPTR,SAINTF(@10,K)                            03S0306 01505000
*             /*******************************************************/ 01506000
*             /*                                                     */ 01507000
*             /* LOAD INDEX TO NEXT ENTRY                            */ 01508000
*             /*                                                     */ 01509000
*             /*******************************************************/ 01510000
*                                                               03S0307 01511000
*             I=TFPTR(I);           /* LOAD NEXT ENTRY INDEX @Y30LB52*/ 01512000
         SLR   @10,@10                                          03S0307 01513000
         IC    @10,TFPTR-12(@01)                                03S0307 01514000
         LR    I,@10                                            03S0307 01515000
*           END;                    /*                       @Y30LB52*/ 01516000
*                                                               03S0308 01517000
         AH    CHCUPTR,@CH00052                                 03S0308 01518000
@DE00300 L     @10,@PC00001                                     03S0308 01519000
         L     @10,CVTPTR(,@10)                                 03S0308 01520000
         L     @10,CNFG0PTR(,@10)                               03S0308 01521000
         C     CHCUPTR,LTPAD(,@10)                              03S0308 01522000
         BNH   @DL00300                                         03S0308 01523000
@DC00300 DS    0H                                               03S0309 01524000
*           /*********************************************************/ 01525000
*           /*                                                       */ 01526000
*           /* MOVE THE 'DRC' LOGICAL TO PHYSICAL TABLES TO THE      */ 01527000
*           /* PERMANENT STRUCTURE.                                  */ 01528000
*           /*                                                       */ 01529000
*           /*********************************************************/ 01530000
*                                                               03S0309 01531000
*           LTPDRDP=LTPAD;          /* FIRST PERM. TABLE     @Y30LB52*/ 01532000
         L     @10,@PC00001                                     03S0309 01533000
         L     @10,CVTPTR(,@10)                                 03S0309 01534000
         L     @10,CNFG0PTR(,@10)                               03S0309 01535000
         L     LTPDRDP,LTPAD(,@10)                              03S0309 01536000
*           DO I=1 TO TMSFNO;       /* LOOP THRO ALL CS'S    @Y30LB52*/ 01537000
         LA    I,1                                              03S0310 01538000
         B     @DE00310                                         03S0310 01539000
@DL00310 DS    0H                                               03S0311 01540000
*             LTPDRDTB=TLTPLIB(I);  /* MOVE CS LTP TABLE     @Y30LB52*/ 01541000
         LR    @10,I                                            03S0311 01542000
         SLA   @10,3                                            03S0311 01543000
         LA    @05,TLTPLIB-8(@10)                               03S0311 01544000
         MVC   LTPDRDTB(8,LTPDRDP),0(@05)                       03S0311 01545000
*             LTPDRDP=LTPDRDP+LENGTH(LTPDRDTB);/* INCREMENT TO NEXT     01546000
*                                      PERMANENT LTP         @Y30LB52*/ 01547000
         AH    LTPDRDP,@CH00049                                 03S0312 01548000
*           END;                    /*                       @Y30LB52*/ 01549000
*                                                               03S0313 01550000
         AH    I,@CH00060                                       03S0313 01551000
@DE00310 CH    I,TMSFNO                                         03S0313 01552000
         BNH   @DL00310                                         03S0313 01553000
*           /*********************************************************/ 01554000
*           /*                                                       */ 01555000
*           /* MOVE CPU SERIALS TO FINAL TABLE                       */ 01556000
*           /*                                                       */ 01557000
*           /*********************************************************/ 01558000
*                                                               03S0314 01559000
*           I=5*TCPUNO;             /* COMPUTE CPU SERIALS LENGTH       01560000
*                                                            @Y30LB52*/ 01561000
         LH    I,TCPUNO                                         03S0314 01562000
         MH    I,@CH00056                                       03S0314 01563000
*           CPUSERS(1:I)=TCPUSER2(1:I);/* MOVE CPU SERIALS   @Y30LB52*/ 01564000
         L     @10,@PC00001                                     03S0315 01565000
         L     @10,CVTPTR(,@10)                                 03S0315 01566000
         L     @10,CNFG0PTR(,@10)                               03S0315 01567000
         L     @10,CPUSERAD(,@10)                               03S0315 01568000
         LR    @02,I                                            03S0315 01569000
         BCTR  @02,0                                            03S0315 01570000
         EX    @02,@SM00383                                     03S0315 01571000
*         END;                      /*                       @Y30LB52*/ 01572000
*       DCL                                                     02S0317 01573000
*         SAINTFC CHAR(12) DEF(SAINTF);/*                    @Y30LB52*/ 01574000
*       RETURN CODE(0);             /* INDICATE SUCCESSFUL RETURN       01575000
*                                                            @Y30LB52*/ 01576000
         L     @13,4(,@13)                                      01S0318 01577000
         L     @00,@SIZDATD                                     01S0318 01578000
         LR    @01,@11                                          01S0318 01579000
         FREEMAIN R,LV=(0),A=(1)                                        01580000
         SLR   @15,@15                                          01S0318 01581000
         L     @14,12(,@13)                                     01S0318 01582000
         LM    @00,@12,20(@13)                                  01S0318 01583000
         BR    @14                                              01S0318 01584000
*     END;                          /*                       @Y30LB52*/ 01585000
*   ELSE                                                        01S0320 01586000
*     RETURN CODE(IOERROR);         /* INDICATE I/O ERROR    @Y30LB52   01587000
*                                                            @Y30LB52*/ 01588000
@RF00261 L     @13,4(,@13)                                      01S0320 01589000
         L     @00,@SIZDATD                                     01S0320 01590000
         LR    @01,@11                                          01S0320 01591000
         FREEMAIN R,LV=(0),A=(1)                                        01592000
         LA    @15,32                                           01S0320 01593000
         L     @14,12(,@13)                                     01S0320 01594000
         LM    @00,@12,20(@13)                                  01S0320 01595000
         BR    @14                                              01S0320 01596000
*                                                               01S0321 01597000
*   /*****************************************************************/ 01598000
*   /*                                                               */ 01599000
*   /* THE FOLLOWING CODE IS CALLED BY ISDASDA0 TO FREE THE ALLOCATED*/ 01600000
*   /* CONFIGURATION DATA AREA.                                      */ 01601000
*   /*                                                               */ 01602000
*   /*****************************************************************/ 01603000
*                                                               01S0321 01604000
*ISDACNF1:                                                      01S0321 01605000
*   ENTRY(CVTPTR);                  /*                       @Y30LB52*/ 01606000
@EP00321 MVC   @PC00001(4),0(@01)                               01S0321 01607000
*   SPNO=0;                         /* SUBPOOL NUMBER        @Y30LB52*/ 01608000
         L     @10,@PC00001                                     01S0322 01609000
         L     @10,CVTPTR(,@10)                                 01S0322 01610000
         MVI   SPNO(@10),X'00'                                  01S0322 01611000
*   COREADDR=CNFG0PTR;              /* AREA TO BE FREED      @Y30LB52*/ 01612000
         L     @15,CNFG0PTR(,@10)                               01S0323 01613000
         ST    @15,COREADDR(,@10)                               01S0323 01614000
*   CORELEN=PCNFGL;                 /* LENGTH OF AREA        @Y30LB52*/ 01615000
         LH    @15,PCNFGL(,@15)                                 01S0324 01616000
         STCM  @15,7,CORELEN(@10)                               01S0324 01617000
*   RESPECIFY                                                   01S0325 01618000
*     R1 RESTRICTED;                /*                       @Y30LB52*/ 01619000
*   R1=ADDR(WORKCALL);              /* PARMLIST              @Y30LB52*/ 01620000
         LA    R1,WORKCALL(,@10)                                01S0326 01621000
*   CALL ISDAFREE;                  /* FREE THE AREA         @Y30LB52*/ 01622000
         L     @15,@CV00120                                     01S0327 01623000
         BALR  @14,@15                                          01S0327 01624000
*   RESPECIFY                                                   01S0328 01625000
*     R1 UNRESTRICTED;              /*                       @Y30LB52*/ 01626000
*   RETURN CODE(0);                 /* NORMAL RETURN         @Y30LB52*/ 01627000
         L     @13,4(,@13)                                      01S0329 01628000
         L     @00,@SIZDATD                                     01S0329 01629000
         LR    @01,@11                                          01S0329 01630000
         FREEMAIN R,LV=(0),A=(1)                                        01631000
         SLR   @15,@15                                          01S0329 01632000
         L     @14,12(,@13)                                     01S0329 01633000
         LM    @00,@12,20(@13)                                  01S0329 01634000
         BR    @14                                              01S0329 01635000
*NEXTCHAR:                                                      02S0330 01636000
*   PROCEDURE OPTIONS(SAVE(14));    /*                       @Y30LB52*/ 01637000
*                                                               02S0330 01638000
@EL00001 L     @13,4(,@13)                                      02S0330 01639000
@EF00001 L     @00,@SIZDATD                                     02S0330 01640000
         LR    @01,@11                                          02S0330 01641000
         FREEMAIN R,LV=(0),A=(1)                                        01642000
@ER00001 LM    @14,@12,12(@13)                                  02S0330 01643000
         BR    @14                                              02S0330 01644000
NEXTCHAR ST    @14,@SA00002                                     02S0330 01645000
*   /*****************************************************************/ 01646000
*   /*                                                               */ 01647000
*   /* THIS PROCEDURE IS USED BY THE SEGMENTS OF 'ISDACNFG' TO LOCATE*/ 01648000
*   /* THE NEXT NON-BLANK, NON-COMMA CHARACTER IN THE INPUT STREAM.  */ 01649000
*   /* NOTHING IS PASSED AS INPUT AND ONLY THE SETTING OF 'LCPTR' IS */ 01650000
*   /* RETURNED. THE 'EOC' FLAG IS USED TO SIGNAL TO THE CALLER, 'END*/ 01651000
*   /* OF LINE' AND THE 'EOF' FLAG IS USED TO SIGNAL, 'END OF FILE'. */ 01652000
*   /* THE 'READRCRD' PROCEDURE IS CALLED TO READ THE NEXT INPUT     */ 01653000
*   /* RECORD IN THE FILE.                                           */ 01654000
*   /*                                                               */ 01655000
*   /*****************************************************************/ 01656000
*                                                               02S0331 01657000
*   SCAN=ON;                        /* INIT SCAN CONTROL     @Y30LB52*/ 01658000
*                                                               02S0331 01659000
         OI    SCAN,B'00001000'                                 02S0331 01660000
*   /*****************************************************************/ 01661000
*   /*                                                               */ 01662000
*   /* LOOP TO END OF COMMAND, END OF FILE, OR UNTIL NONBLANK IS     */ 01663000
*   /* FOUND.                                                        */ 01664000
*   /*                                                               */ 01665000
*   /*****************************************************************/ 01666000
*                                                               02S0332 01667000
*   DO WHILE(EOC=OFF)&(EOF=OFF)&(SCAN=ON);/* SCAN FOR CHARACTER, END    01668000
*                                      OF LINE, OR END OF FILE  02S0332 01669000
*                                                            @Y30LB52*/ 01670000
*                                                               02S0332 01671000
         B     @DE00332                                         02S0332 01672000
@DL00332 DS    0H                                               02S0333 01673000
*     /***************************************************************/ 01674000
*     /*                                                             */ 01675000
*     /* SCAN FOR A NONBLANK OR THE END OF A RECORD.                 */ 01676000
*     /*                                                             */ 01677000
*     /***************************************************************/ 01678000
*                                                               02S0333 01679000
*     DO LCPTR=LCPTR TO LINEND WHILE(LINECHAR(1)=' '|LINECHAR(1)=',');  01680000
         B     @DE00333                                         02S0333 01681000
@DL00333 CLI   LINECHAR(LCPTR),C' '                             02S0333 01682000
         BE    @DB00333                                         02S0333 01683000
         CLI   LINECHAR(LCPTR),C','                             02S0333 01684000
         BNE   @DC00333                                         02S0333 01685000
@DB00333 DS    0H                                               02S0334 01686000
*       IF LINECHAR(1)=',' THEN     /* IF COMMA, TURN ON FLAG@Y30LB52*/ 01687000
         CLI   LINECHAR(LCPTR),C','                             02S0334 01688000
         BNE   @RF00334                                         02S0334 01689000
*         DO;                       /* CHECK FOR COMMENT     @ZM30730*/ 01690000
*           COMMA=ON;               /*                       @Y30LB52*/ 01691000
         OI    COMMA,B'00000010'                                02S0336 01692000
*           IF LINECHAR(2)=' ' THEN /* BLANK AFTER COMMA     @ZM30730*/ 01693000
         CLI   LINECHAR+1(LCPTR),C' '                           02S0337 01694000
         BNE   @RF00337                                         02S0337 01695000
*             LCPTR=LINEND;         /* YES, GET OUT OF LOOP  @ZM30730*/ 01696000
         LR    LCPTR,LINEND                                     02S0338 01697000
*           ELSE                                                02S0339 01698000
*             ;                     /* NO, OK                @ZM30730*/ 01699000
@RF00337 DS    0H                                               02S0340 01700000
*         END;                      /* END FOUND COMMA CODE  @ZM30730*/ 01701000
*       ELSE                                                    02S0341 01702000
*         ;                         /* NOT A COMMA           @ZM30730*/ 01703000
@RF00334 DS    0H                                               02S0342 01704000
*     END;                          /*                       @Y30LB52*/ 01705000
*                                                               02S0342 01706000
         AH    LCPTR,@CH00060                                   02S0342 01707000
@DE00333 CR    LCPTR,LINEND                                     02S0342 01708000
         BNH   @DL00333                                         02S0342 01709000
@DC00333 DS    0H                                               02S0343 01710000
*     /***************************************************************/ 01711000
*     /*                                                             */ 01712000
*     /* AT THE END OF THE LINE, IF THE LAST NONBLANK WAS NOT A      */ 01713000
*     /* COMMA, THIS IS THE END OF A CONTROL STATEMENT.              */ 01714000
*     /*                                                             */ 01715000
*     /***************************************************************/ 01716000
*                                                               02S0343 01717000
*     IF LCPTR>LINEND THEN                                      02S0343 01718000
         CR    LCPTR,LINEND                                     02S0343 01719000
         BNH   @RF00343                                         02S0343 01720000
*       DO;                         /* END OF LINE?          @Y30LB52*/ 01721000
*         IF COMMA=OFF THEN                                     02S0345 01722000
         TM    COMMA,B'00000010'                                02S0345 01723000
         BNZ   @RF00345                                         02S0345 01724000
*           DO;                     /* LAST CHAR NOT A COMMA @Y30LB52*/ 01725000
*             EOC=ON;               /* INDICATE END COMMAND  @Y30LB52*/ 01726000
*             SCAN=OFF;             /* END OF SCAN           @Y30LB52*/ 01727000
         OI    EOC,B'10000000'                                  02S0348 01728000
         NI    SCAN,B'11110111'                                 02S0348 01729000
*           END;                    /*                       @Y30LB52*/ 01730000
*                                                               02S0349 01731000
*         /***********************************************************/ 01732000
*         /*                                                         */ 01733000
*         /* OTHERWISE, GET THE NEXT RECORD.                         */ 01734000
*         /*                                                         */ 01735000
*         /***********************************************************/ 01736000
*                                                               02S0350 01737000
*         ELSE                      /* IF COMMA LAST CHARACTER, GET     01738000
*                                      NEXT COMMAND LINE     @Y30LB52*/ 01739000
*           CALL READRCRD;          /*                       @Y30LB52*/ 01740000
         B     @RC00345                                         02S0350 01741000
@RF00345 BAL   @14,READRCRD                                     02S0350 01742000
*       END;                        /*                       @Y30LB52*/ 01743000
*                                                               02S0351 01744000
*     /***************************************************************/ 01745000
*     /*                                                             */ 01746000
*     /* IF NOT END OF LINE, INDICATE END OF THE SCAN.               */ 01747000
*     /*                                                             */ 01748000
*     /***************************************************************/ 01749000
*                                                               02S0352 01750000
*     ELSE                                                      02S0352 01751000
*       DO;                         /* CHARACTER FOUND       @Y30LB52*/ 01752000
         B     @RC00343                                         02S0352 01753000
@RF00343 DS    0H                                               02S0353 01754000
*         COMMA=OFF;                /* REINITIALIZE FLAG     @Y30LB52*/ 01755000
*         SCAN=OFF;                 /* END OF SCAN           @Y30LB52*/ 01756000
*         FIND=ON;                  /* DATA FOUND IN RECORD  @OZ28372*/ 01757000
         OI    FIND,B'00000100'                                 02S0355 01758000
         NI    COMMA,B'11110101'                                02S0355 01759000
*       END;                        /*                       @Y30LB52*/ 01760000
*   END;                            /*                       @Y30LB52*/ 01761000
@RC00343 DS    0H                                               02S0357 01762000
@DE00332 TM    SCAN,B'00001000'                                 02S0357 01763000
         BNO   @DC00332                                         02S0357 01764000
         TM    EOC,B'11000000'                                  02S0357 01765000
         BZ    @DL00332                                         02S0357 01766000
@DC00332 DS    0H                                               02S0358 01767000
*   RETURN;                         /* RETURN TO CALLER              */ 01768000
@EL00002 DS    0H                                               02S0358 01769000
@EF00002 DS    0H                                               02S0358 01770000
@ER00002 L     @14,@SA00002                                     02S0358 01771000
         BR    @14                                              02S0358 01772000
*   END NEXTCHAR;                   /*                       @Y30LB52*/ 01773000
*NEXTBLNK:                                                      02S0360 01774000
*   PROCEDURE OPTIONS(SAVE(14));    /*                       @Y30LB52*/ 01775000
*                                                               02S0360 01776000
NEXTBLNK ST    @14,@SA00003                                     02S0360 01777000
*   /*****************************************************************/ 01778000
*   /*                                                               */ 01779000
*   /* THIS PROCEDURE IS USED BY SEGMENTS OF 'ISDACNFG' TO SCAN FOR  */ 01780000
*   /* THE NEXT BLANK CHARACTER IN THE INPUT STREAM. NOTHING IS INPUT*/ 01781000
*   /* AND THE 'LCPTR' IS SET TO ADDRESS THE CHARACTER FOUND. IF THE */ 01782000
*   /* END OF THE COMMAND IS REACHED, 'EOC' IS SET, AND IF THE END OF*/ 01783000
*   /* THE FILE IS REACHED, 'EOF' IS SET.                            */ 01784000
*   /*                                                               */ 01785000
*   /*****************************************************************/ 01786000
*                                                               02S0361 01787000
*   SCAN=ON;                        /* INITIALIZE SCAN FLAG  @Y30LB52*/ 01788000
*                                                               02S0361 01789000
         OI    SCAN,B'00001000'                                 02S0361 01790000
*   /*****************************************************************/ 01791000
*   /*                                                               */ 01792000
*   /* SCAN TO END OF COMMAND, END OF FILE, OR A BLANK IS FOUND.     */ 01793000
*   /*                                                               */ 01794000
*   /*****************************************************************/ 01795000
*                                                               02S0362 01796000
*   DO WHILE(EOC=OFF)&(EOF=OFF)&(SCAN=ON);/* SCAN TO BLANK END OF       01797000
*                                      FILE, OR END OF COMMAND       */ 01798000
*                                                               02S0362 01799000
         B     @DE00362                                         02S0362 01800000
@DL00362 DS    0H                                               02S0363 01801000
*     /***************************************************************/ 01802000
*     /*                                                             */ 01803000
*     /* SCAN TO LINE END OR TO FIRST BLANK                          */ 01804000
*     /*                                                             */ 01805000
*     /***************************************************************/ 01806000
*                                                               02S0363 01807000
*     DO LCPTR=LCPTR TO LINEND WHILE(LINECHAR(1)^=' ');/* SCAN TO       01808000
*                                      BLANK                 @Y30LB52*/ 01809000
*                                                               02S0363 01810000
         B     @DE00363                                         02S0363 01811000
@DL00363 CLI   LINECHAR(LCPTR),C' '                             02S0363 01812000
         BE    @DC00363                                         02S0363 01813000
*       /*************************************************************/ 01814000
*       /*                                                           */ 01815000
*       /* WHEN A COMMA IS ENCOUNTERED, THE 'COMMA' FLAG IS TURNED ON*/ 01816000
*       /* AND WHEN A NONBLANK OTHER THAN A COMMA IS FOUND, IT IS    */ 01817000
*       /* TURNED OFF.                                               */ 01818000
*       /*                                                           */ 01819000
*       /*************************************************************/ 01820000
*                                                               02S0364 01821000
*       IF LINECHAR(1)=',' THEN     /* IF COMMA FOUND        @Y30LB52*/ 01822000
         CLI   LINECHAR(LCPTR),C','                             02S0364 01823000
         BNE   @RF00364                                         02S0364 01824000
*         COMMA=ON;                 /* SET FLAG ON           @Y30LB52*/ 01825000
         OI    COMMA,B'00000010'                                02S0365 01826000
*       ELSE                                                    02S0366 01827000
*         COMMA=OFF;                /* IF CHARACTER, TURN OFF@Y30LB52*/ 01828000
         B     @RC00364                                         02S0366 01829000
@RF00364 NI    COMMA,B'11111101'                                02S0366 01830000
*     END;                          /*                       @Y30LB52*/ 01831000
@RC00364 AH    LCPTR,@CH00060                                   02S0367 01832000
@DE00363 CR    LCPTR,LINEND                                     02S0367 01833000
         BNH   @DL00363                                         02S0367 01834000
@DC00363 DS    0H                                               02S0368 01835000
*     IF LCPTR^>LINEND THEN         /* INSURE SKIP OVER      @OZ28372*/ 01836000
         CR    LCPTR,LINEND                                     02S0368 01837000
         BH    @RF00368                                         02S0368 01838000
*       IF FIND=ON THEN             /* COMMENTS              @OZ28372*/ 01839000
         TM    FIND,B'00000100'                                 02S0369 01840000
         BNO   @RF00369                                         02S0369 01841000
*         LCPTR=LINEND+1;           /*                       @OZ28372*/ 01842000
         LA    LCPTR,1                                          02S0370 01843000
         ALR   LCPTR,LINEND                                     02S0370 01844000
*       ELSE                                                    02S0371 01845000
*         ;                         /*                       @OZ28372*/ 01846000
@RF00369 DS    0H                                               02S0372 01847000
*     ELSE                                                      02S0372 01848000
*       ;                           /*                       @OZ28372*/ 01849000
*                                                               02S0372 01850000
@RF00368 DS    0H                                               02S0373 01851000
*     /***************************************************************/ 01852000
*     /*                                                             */ 01853000
*     /* AT THE END OF THE LINE, IF THE 'COMMA' FLAG IS OFF, THE END */ 01854000
*     /* OF COMMAND FLAG IS SET AND TE SCAN TERMINATED. OTHERWISE,   */ 01855000
*     /* THE NEXT RECORD IS READ AND THE SCAN CONTINUED.             */ 01856000
*     /*                                                             */ 01857000
*     /***************************************************************/ 01858000
*                                                               02S0373 01859000
*     IF LCPTR>LINEND THEN                                      02S0373 01860000
         CR    LCPTR,LINEND                                     02S0373 01861000
         BNH   @RF00373                                         02S0373 01862000
*       DO;                         /* END OF LINE?          @Y30LB52*/ 01863000
*         IF COMMA=OFF THEN                                     02S0375 01864000
         TM    COMMA,B'00000010'                                02S0375 01865000
         BNZ   @RF00375                                         02S0375 01866000
*           DO;                     /* NO COMMA ON LINE?     @Y30LB52*/ 01867000
*             EOC=ON;               /* END OF COMMAND        @Y30LB52*/ 01868000
*             SCAN=OFF;             /* END OF SCAN           @Y30LB52*/ 01869000
         OI    EOC,B'10000000'                                  02S0378 01870000
         NI    SCAN,B'11110111'                                 02S0378 01871000
*           END;                    /*                       @Y30LB52*/ 01872000
*         ELSE                                                  02S0380 01873000
*           CALL READRCRD;          /* COMMA LAST CHAR, GET NEXT        01874000
*                                      RECORD                @Y30LB52*/ 01875000
         B     @RC00375                                         02S0380 01876000
@RF00375 BAL   @14,READRCRD                                     02S0380 01877000
*       END;                        /*                       @Y30LB52*/ 01878000
*                                                               02S0381 01879000
*     /***************************************************************/ 01880000
*     /*                                                             */ 01881000
*     /* OTHERWISE, A BLANK HAS BEEN LOCATED AND THE SCAN IS         */ 01882000
*     /* TERMINATED.                                                 */ 01883000
*     /*                                                             */ 01884000
*     /***************************************************************/ 01885000
*                                                               02S0382 01886000
*     ELSE                                                      02S0382 01887000
*       SCAN=OFF;                   /* NOT END OF LINE, BLANK FOUND     01888000
*                                                            @Y30LB52*/ 01889000
         B     @RC00373                                         02S0382 01890000
@RF00373 NI    SCAN,B'11110111'                                 02S0382 01891000
*   END;                            /*                       @Y30LB52*/ 01892000
@RC00373 DS    0H                                               02S0383 01893000
@DE00362 TM    SCAN,B'00001000'                                 02S0383 01894000
         BNO   @DC00362                                         02S0383 01895000
         TM    EOC,B'11000000'                                  02S0383 01896000
         BZ    @DL00362                                         02S0383 01897000
@DC00362 DS    0H                                               02S0384 01898000
*   RETURN;                         /* BACK TO CALLER        @Y30LB52*/ 01899000
@EL00003 DS    0H                                               02S0384 01900000
@EF00003 DS    0H                                               02S0384 01901000
@ER00003 L     @14,@SA00003                                     02S0384 01902000
         BR    @14                                              02S0384 01903000
*   END NEXTBLNK;                   /*                       @Y30LB52*/ 01904000
*NEXTCMMA:                                                      02S0386 01905000
*   PROCEDURE OPTIONS(SAVE(14));    /*                       @Y30LB52*/ 01906000
*                                                               02S0386 01907000
NEXTCMMA ST    @14,@SA00004                                     02S0386 01908000
*   /*****************************************************************/ 01909000
*   /*                                                               */ 01910000
*   /* THIS PROCEDURE IS CALLED TO SCAN THE INPUT STREAM FOR THE NEXT*/ 01911000
*   /* COMMA. ON RETURN, THE LCPTR IS SET TO ADDRESS THE NEXT COMMA  */ 01912000
*   /* OR THE 'EOC' OR 'EOF' FLAGS ARE SET TO REFLECT END OF COMMAND */ 01913000
*   /* AND END OF FILE. ONLY THE 'READRCRD' ROUTINE IS CALLED TO READ*/ 01914000
*   /* THE NEXT INPUT RECORD.                                        */ 01915000
*   /*                                                               */ 01916000
*   /*****************************************************************/ 01917000
*                                                               02S0387 01918000
*   SCAN=ON;                        /* START SCAN            @Y30LB52*/ 01919000
*                                                               02S0387 01920000
         OI    SCAN,B'00001000'                                 02S0387 01921000
*   /*****************************************************************/ 01922000
*   /*                                                               */ 01923000
*   /* LOOP TO THE END OF THE COMMAND STATEMENT, END OF THE FILE, OR */ 01924000
*   /* UNTIL A COMMA IS FOUND.                                       */ 01925000
*   /*                                                               */ 01926000
*   /*****************************************************************/ 01927000
*                                                               02S0388 01928000
*   DO WHILE(EOC=OFF)&(EOF=OFF)&(SCAN=ON);/* SCAN FOR END OF FILE,      01929000
*                                      END OF COMMAND, OR COMMA      */ 01930000
*                                                               02S0388 01931000
         B     @DE00388                                         02S0388 01932000
@DL00388 DS    0H                                               02S0389 01933000
*     /***************************************************************/ 01934000
*     /*                                                             */ 01935000
*     /* SCAN TO END OF LINE FOR A COMMA                             */ 01936000
*     /*                                                             */ 01937000
*     /***************************************************************/ 01938000
*                                                               02S0389 01939000
*     DO LCPTR=LCPTR TO LINEND WHILE(LINECHAR(1)^=',');/* SCAN TO END   01940000
*                                      OF COMMAND, COMMA     @Y30LB52*/ 01941000
*                                                               02S0389 01942000
         B     @DE00389                                         02S0389 01943000
@DL00389 CLI   LINECHAR(LCPTR),C','                             02S0389 01944000
         BE    @DC00389                                         02S0389 01945000
*       /*************************************************************/ 01946000
*       /*                                                           */ 01947000
*       /* IF A NONBLANK IS ENCOUNTERED, TURN OFF THE COMMA FLAG.    */ 01948000
*       /*                                                           */ 01949000
*       /*************************************************************/ 01950000
*                                                               02S0390 01951000
*       IF LINECHAR(1)^=' ' THEN    /* IF CHARACTER NON-BLANK@Y30LB52*/ 01952000
         CLI   LINECHAR(LCPTR),C' '                             02S0390 01953000
         BE    @RF00390                                         02S0390 01954000
*         COMMA=OFF;                /* TURN COMMA LAST FLAG OFF 02S0391 01955000
*                                                            @Y30LB52*/ 01956000
         NI    COMMA,B'11111101'                                02S0391 01957000
*       ELSE                        /* IF BLANK AND DATA     @OZ28372*/ 01958000
*         IF FIND=ON THEN           /* HAS BEEN FOUND IN THE @OZ28372*/ 01959000
         B     @RC00390                                         02S0392 01960000
@RF00390 TM    FIND,B'00000100'                                 02S0392 01961000
         BNO   @RF00392                                         02S0392 01962000
*           DO;                     /* STATEMENT, THEN IS    @OZ28372*/ 01963000
*             LCPTR=LINEND;         /* END OF RECORD, GO TO  @OZ28372*/ 01964000
         LR    LCPTR,LINEND                                     02S0394 01965000
*             COMMA=OFF;            /* NEXT RECORD           @OZ28372*/ 01966000
         NI    COMMA,B'11111101'                                02S0395 01967000
*           END;                    /*                       @OZ28372*/ 01968000
*         ELSE                                                  02S0397 01969000
*           ;                       /* IGNORE INIT. BLANKS   @OZ28372*/ 01970000
@RF00392 DS    0H                                               02S0398 01971000
*     END;                          /*                       @Y30LB52*/ 01972000
*                                                               02S0398 01973000
@RC00390 AH    LCPTR,@CH00060                                   02S0398 01974000
@DE00389 CR    LCPTR,LINEND                                     02S0398 01975000
         BNH   @DL00389                                         02S0398 01976000
@DC00389 DS    0H                                               02S0399 01977000
*     /***************************************************************/ 01978000
*     /*                                                             */ 01979000
*     /* AT THE END OF A LINE, IF THE LAST CHARACTER WAS NOT A       */ 01980000
*     /* COMMA(COMMA FLAG OFF), SET END OF CONTROL STATEMENT AND END */ 01981000
*     /* OF SCAN.                                                    */ 01982000
*     /*                                                             */ 01983000
*     /***************************************************************/ 01984000
*                                                               02S0399 01985000
*     IF LCPTR>LINEND THEN          /* END OF LINE?          @Y30LB52*/ 01986000
         CR    LCPTR,LINEND                                     02S0399 01987000
         BNH   @RF00399                                         02S0399 01988000
*       DO;                         /* CHECK FOR END OF COMMAND 02S0400 01989000
*                                                            @Y30LB52*/ 01990000
*         IF COMMA=OFF THEN         /* LAST CHARACTER COMMA? @Y30LB52*/ 01991000
         TM    COMMA,B'00000010'                                02S0401 01992000
         BNZ   @RF00401                                         02S0401 01993000
*           DO;                     /*                       @Y30LB52*/ 01994000
*             EOC=ON;               /* SET END OF COMMAND    @Y30LB52*/ 01995000
*             SCAN=OFF;             /* SET END OF SCAN       @Y30LB52*/ 01996000
         OI    EOC,B'10000000'                                  02S0404 01997000
         NI    SCAN,B'11110111'                                 02S0404 01998000
*           END;                    /*                       @Y30LB52*/ 01999000
*         ELSE                                                  02S0406 02000000
*           CALL READRCRD;          /* READ NEXT RECORD      @Y30LB52*/ 02001000
         B     @RC00401                                         02S0406 02002000
@RF00401 BAL   @14,READRCRD                                     02S0406 02003000
*       END;                        /*                       @Y30LB52*/ 02004000
*                                                               02S0407 02005000
*     /***************************************************************/ 02006000
*     /*                                                             */ 02007000
*     /* IF NOT THE END OF THE LINE, A COMMA WAS FOUND. INDICATE     */ 02008000
*     /* THROUGH THE COMMA FLAG AND END THE SCAN.                    */ 02009000
*     /*                                                             */ 02010000
*     /***************************************************************/ 02011000
*                                                               02S0408 02012000
*     ELSE                                                      02S0408 02013000
*       DO;                         /* MUST HAVE FOUND COMMA @Y30LB52*/ 02014000
         B     @RC00399                                         02S0408 02015000
@RF00399 DS    0H                                               02S0409 02016000
*         SCAN=OFF;                 /* INDICATE COMMA LAST CHARACTER    02017000
*                                                            @Y30LB52*/ 02018000
*         COMMA=ON;                 /* LAST CHARACTER COMMA  @Y30LB52*/ 02019000
         OI    COMMA,B'00000010'                                02S0410 02020000
         NI    SCAN,B'11110111'                                 02S0410 02021000
*       END;                        /*                       @Y30LB52*/ 02022000
*   END;                            /*                       @Y30LB52*/ 02023000
@RC00399 DS    0H                                               02S0412 02024000
@DE00388 TM    SCAN,B'00001000'                                 02S0412 02025000
         BNO   @DC00388                                         02S0412 02026000
         TM    EOC,B'11000000'                                  02S0412 02027000
         BZ    @DL00388                                         02S0412 02028000
@DC00388 DS    0H                                               02S0413 02029000
*   RETURN;                         /*                       @Y30LB52*/ 02030000
@EL00004 DS    0H                                               02S0413 02031000
@EF00004 DS    0H                                               02S0413 02032000
@ER00004 L     @14,@SA00004                                     02S0413 02033000
         BR    @14                                              02S0413 02034000
*   END NEXTCMMA;                   /*                       @Y30LB52*/ 02035000
*READRCRD:                                                      02S0415 02036000
*   PROCEDURE OPTIONS(SAVE(14));    /*                       @Y30LB52*/ 02037000
*                                                               02S0415 02038000
READRCRD ST    @14,@SA00005                                     02S0415 02039000
*   /*****************************************************************/ 02040000
*   /*                                                               */ 02041000
*   /* THIS PROCEDURE READS THE NEXT SEQUENTIAL RECORD IN THE INPUT  */ 02042000
*   /* STREAM FOR THE PROCEDURES, 'NEXTCHAR', 'NEXTBLNK', AND        */ 02043000
*   /* 'NEXTCMMA'. ON RETURN, THE 'LCPTR' WILL BE SET TO THE         */ 02044000
*   /* BEGINNING OF THE NEW LINE. IF THE END OF THE FILE IS REACHED, */ 02045000
*   /* THE 'EOF' FLAG IS SET AND IF AN I/O ERROR IS ENCOUNTERED, THE */ 02046000
*   /* 'EOD' FLAG IS SET.                                            */ 02047000
*   /*                                                               */ 02048000
*   /*****************************************************************/ 02049000
*                                                               02S0416 02050000
*   RESPECIFY                                                   02S0416 02051000
*    (R0,                                                       02S0416 02052000
*     R1) RESTRICTED;               /*                       @Y30LB52*/ 02053000
*   DO UNTIL(ILINE(1)^='*');        /* SKIP COMMENT LINES    @YM32172*/ 02054000
@DL00417 DS    0H                                               02S0418 02055000
*     R1=ADDR(SYSINDCB);            /* ADDRESS OF DCB        @Y30LB52*/ 02056000
         LA    R1,SYSINDCB                                      02S0418 02057000
*     R0=ADDR(ILINE);               /* ADDRESS OF INPUT BUFFER  02S0419 02058000
*                                                            @Y30LB52*/ 02059000
         LA    R0,ILINE                                         02S0419 02060000
*     GEN(GET   SYSINDCB,ILINE)                                 02S0420 02061000
*     FLOWS(SYNAD,EODAD) SETS(SYSINDCB,ILINE);/* GET A LINE  @Y30LB52*/ 02062000
         GET   SYSINDCB,ILINE                                           02063000
*   END;                            /*                       @YM32172*/ 02064000
@DE00417 CLI   ILINE,C'*'                                       02S0421 02065000
         BE    @DL00417                                         02S0421 02066000
*   RESPECIFY                                                   02S0422 02067000
*    (R0,                                                       02S0422 02068000
*     R1) UNRESTRICTED;             /*                       @Y30LB52*/ 02069000
*   RCRD1=ON;                       /* INDICATE RECORD READ  @Y30LB52*/ 02070000
         OI    RCRD1,B'00010000'                                02S0423 02071000
*   LCPTR=ADDR(ILINE);              /* SET SCAN POINTER TO INPUT        02072000
*                                                            @Y30LB52*/ 02073000
         LA    LCPTR,ILINE                                      02S0424 02074000
*   FIND=OFF;                       /* SAY NO DATA YET FOUND @OZ28372*/ 02075000
         NI    FIND,B'11111011'                                 02S0425 02076000
*   RETURN;                         /* EXIT                  @Y30LB52*/ 02077000
*                                                               02S0426 02078000
@EL00005 DS    0H                                               02S0426 02079000
@EF00005 DS    0H                                               02S0426 02080000
@ER00005 L     @14,@SA00005                                     02S0426 02081000
         BR    @14                                              02S0426 02082000
*   /*****************************************************************/ 02083000
*   /*                                                               */ 02084000
*   /* THIS ENTRY IS TAKEN WHEN AN I/O ERROR IS ENCOUNTERED IN       */ 02085000
*   /* READING A RECORD. THE SCAN IS TERMINATED AND THE DATA SET     */ 02086000
*   /* CLOSED.                                                       */ 02087000
*   /*                                                               */ 02088000
*   /*****************************************************************/ 02089000
*                                                               02S0427 02090000
*   DCL                                                         02S0427 02091000
*     SYNAD LABEL;                  /*                       @Y30LB52*/ 02092000
*SYNAD:                             /* SYNCHRONOUS I/O ERROR EXIT       02093000
*                                                            @Y30LB52*/ 02094000
*   EOC=ON;                         /* END THE COMMAND       @Y30LB52*/ 02095000
SYNAD    DS    0H                                               02S0429 02096000
*   EOF=ON;                         /* END THE FILE          @Y30LB52*/ 02097000
*   ERROR=ON;                       /* INDICATE I/O ERROR    @Y30LB52*/ 02098000
         OI    EOC,B'11100000'                                  02S0430 02099000
*   GEN(CLOSE MF=(E,OPENLIST))                                  02S0431 02100000
*   SETS(SYSINDCB,OPENLIST);        /* CLOSE THE DS          @Y30LB52*/ 02101000
         CLOSE MF=(E,OPENLIST)                                          02102000
*   RETURN;                         /*                       @Y30LB52*/ 02103000
*                                                               02S0432 02104000
         B     @EL00005                                         02S0432 02105000
*   /*****************************************************************/ 02106000
*   /*                                                               */ 02107000
*   /* THIS EXIT IS TAKEN AT THE END OF THE FILE. THE DATA SET IS    */ 02108000
*   /* CLOSED.                                                       */ 02109000
*   /*                                                               */ 02110000
*   /*****************************************************************/ 02111000
*                                                               02S0433 02112000
*   DCL                                                         02S0433 02113000
*     EODAD LABEL;                  /*                       @Y30LB52*/ 02114000
*EODAD:                             /* END OF DS EXIT        @Y30LB52*/ 02115000
*   EOF=ON;                         /* END OF FILE           @Y30LB52*/ 02116000
EODAD    DS    0H                                               02S0435 02117000
*   EOC=ON;                         /* END OF COMMAND        @Y30LB52*/ 02118000
         OI    EOF,B'11000000'                                  02S0435 02119000
*   GEN(CLOSE MF=(E,OPENLIST))                                  02S0436 02120000
*   SETS(SYSINDCB,OPENLIST);        /* CLOSE THE DS          @Y30LB52*/ 02121000
         CLOSE MF=(E,OPENLIST)                                          02122000
*   RETURN;                         /*                       @Y30LB52*/ 02123000
         B     @EL00005                                         02S0437 02124000
*   END READRCRD;                   /*                       @Y30LB52*/ 02125000
*HEXBYTES:                                                      02S0439 02126000
*   PROCEDURE OPTIONS(SAVE(14));    /*                       @Y30LB52*/ 02127000
*                                                               02S0439 02128000
HEXBYTES ST    @14,12(,@13)                                     02S0439 02129000
*   /*****************************************************************/ 02130000
*   /*                                                               */ 02131000
*   /* THIS PROCEDURE IS CALLED BY THE PROCEDURES 'NEXTCHAR',        */ 02132000
*   /* 'NEXTCMMA', AND 'NEXTBLNK' TO CONVERT EBCDIC                  */ 02133000
*   /* STRINGS(0<LENGTH<11) TO THE HEXADECIMAL EQUIVALENTS. THIS IS  */ 02134000
*   /* DONE BY CONVERTING EACH CHARACTER INTO THE FORMAT, '0X' WHERE */ 02135000
*   /* THE 'X' IS A DIGIT 0-9, A-F. THE STRING TO BE CONVERTED IS    */ 02136000
*   /* ADDTESSED THROUGH BASED VARIABLE 'LINECHAR' AND ITS LENGTH IS */ 02137000
*   /* CONTAINED IN 'BYTES'. THE CONVERTED STRING IS RETURNED IN THE */ 02138000
*   /* FIRST HALF OF 'LINECHAR'.                                     */ 02139000
*   /*                                                               */ 02140000
*   /*****************************************************************/ 02141000
*                                                               02S0440 02142000
*   DCL                                                         02S0440 02143000
*     HEX1 CHAR(11),                /* CONVERSTION SPACE     @Y30LB52*/ 02144000
*     HEX2 CHAR(6),                 /*                       @Y30LB52*/ 02145000
*     HEXPTR PTR(31),               /* INPUT STRING POINTER  @Y30LB52*/ 02146000
*     HEXCHAR FIXED(8) BASED(HEXPTR);/* INPUT CHARACTERS     @Y30LB52*/ 02147000
*                                                               02S0440 02148000
*   /*****************************************************************/ 02149000
*   /*                                                               */ 02150000
*   /* LOOP THROUGH THE STRING AND CHANGE 'C1'-'C5' TO '0A'-'0F',    */ 02151000
*   /* 'F0'-'F9' TO '00'-'09'.                                       */ 02152000
*   /*                                                               */ 02153000
*   /*****************************************************************/ 02154000
*                                                               02S0441 02155000
*   HEXPTR=LCPTR;                   /* SET HEX STRING POINTER@Y30LB52*/ 02156000
         LR    HEXPTR,LCPTR                                     02S0441 02157000
*   DO K=1 TO BYTES;                /* LOOP THROUGH TOTAL STRING        02158000
*                                                            @Y30LB52*/ 02159000
         LA    K,1                                              02S0442 02160000
         B     @DE00442                                         02S0442 02161000
@DL00442 DS    0H                                               02S0443 02162000
*     IF HEXCHAR<199 THEN                                       02S0443 02163000
         CLI   HEXCHAR(HEXPTR),199                              02S0443 02164000
         BNL   @RF00443                                         02S0443 02165000
*       HEX1(K)=HEXCHAR-183;        /* CONVERT ALPHABETIC CHARACTERS    02166000
*                                                            @Y30LB52*/ 02167000
         SLR   @10,@10                                          02S0444 02168000
         IC    @10,HEXCHAR(,HEXPTR)                             02S0444 02169000
         SH    @10,@CH00367                                     02S0444 02170000
         STC   @10,HEX1-1(K)                                    02S0444 02171000
*     ELSE                                                      02S0445 02172000
*       HEX1(K)=HEXCHAR-240;        /* CONVERT NUMERIC CHARACTERS       02173000
*                                                            @Y30LB52*/ 02174000
         B     @RC00443                                         02S0445 02175000
@RF00443 SLR   @10,@10                                          02S0445 02176000
         IC    @10,HEXCHAR(,HEXPTR)                             02S0445 02177000
         SH    @10,@CH00368                                     02S0445 02178000
         STC   @10,HEX1-1(K)                                    02S0445 02179000
*     HEXPTR=HEXPTR+1;              /* INCREMENT TO NEXT CHARACTER      02180000
*                                                            @Y30LB52*/ 02181000
@RC00443 AH    HEXPTR,@CH00060                                  02S0446 02182000
*   END;                            /*                       @Y30LB52*/ 02183000
         AH    K,@CH00060                                       02S0447 02184000
@DE00442 CR    K,BYTES                                          02S0447 02185000
         BNH   @DL00442                                         02S0447 02186000
*   IF BYTES=1 THEN                                             02S0448 02187000
         CH    BYTES,@CH00060                                   02S0448 02188000
         BNE   @RF00448                                         02S0448 02189000
*     LINECHAR(1)=HEX1(1);          /* ONE CHAR TO CONVERT   @Y30LB52*/ 02190000
         MVC   LINECHAR(1,LCPTR),HEX1                           02S0449 02191000
*   ELSE                                                        02S0450 02192000
*     DO;                           /* IF MORE THAN ONE CHARACTER       02193000
*                                                            @Y30LB52*/ 02194000
*                                                               02S0450 02195000
         B     @RC00448                                         02S0450 02196000
@RF00448 DS    0H                                               02S0451 02197000
*       /*************************************************************/ 02198000
*       /*                                                           */ 02199000
*       /* PACK THE RESULT                                           */ 02200000
*       /*                                                           */ 02201000
*       /*************************************************************/ 02202000
*                                                               02S0451 02203000
*       PACK(HEX2,HEX1);            /* EXTRACT THE ZONES     @Y30LB52*/ 02204000
*                                                               02S0451 02205000
         PACK  HEX2(6),HEX1(11)                                 02S0451 02206000
*       /*************************************************************/ 02207000
*       /*                                                           */ 02208000
*       /* MOVE CONVERTED STRING BACK INTO THE LINE                  */ 02209000
*       /*                                                           */ 02210000
*       /*************************************************************/ 02211000
*                                                               02S0452 02212000
*       LINECHAR(1:BYTES/2)=HEX2(1:BYTES/2);/* MOVE BACK INTO INPUT     02213000
*                                                            @Y30LB52*/ 02214000
         LR    @00,BYTES                                        02S0452 02215000
         SRDA  @00,32                                           02S0452 02216000
         D     @00,@CF00045                                     02S0452 02217000
         BCTR  @01,0                                            02S0452 02218000
         EX    @01,@SM00389                                     02S0452 02219000
*     END;                          /*                       @Y30LB52*/ 02220000
*   END HEXBYTES;                   /*                       @Y30LB52*/ 02221000
@EL00006 DS    0H                                               02S0454 02222000
@EF00006 DS    0H                                               02S0454 02223000
@ER00006 L     @14,12(,@13)                                     02S0454 02224000
         BR    @14                                              02S0454 02225000
*   END ISDACNFG                    /*                       @Y30LB52*/ 02226000
*                                                               01S0455 02227000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02228000
*/*%INCLUDE SYSLIB  (ISDAGHDR)                                       */ 02229000
*/*%INCLUDE SYSLIB  (ISDAPAD5)                                       */ 02230000
*/*%INCLUDE SYSLIB  (ISDAMCFG)                                       */ 02231000
*/*%INCLUDE SYSLIB  (ISDACVT )                                       */ 02232000
*/*%INCLUDE SYSUT5  (OPENCNFG)                                       */ 02233000
*/*%INCLUDE SYSUT5  (CMNDPROC)                                       */ 02234000
*/*%INCLUDE SYSUT5  (CPUCONFG)                                       */ 02235000
*/*%INCLUDE SYSUT5  (MSFN    )                                       */ 02236000
*/*%INCLUDE SYSUT5  (LOWERCON)                                       */ 02237000
*/*%INCLUDE SYSUT5  (UPPERCON)                                       */ 02238000
*/*%INCLUDE SYSUT5  (UPPERCN1)                                       */ 02239000
*/*%INCLUDE SYSUT5  (DASD    )                                       */ 02240000
*/*%INCLUDE SYSUT5  (SKIPCMND)                                       */ 02241000
*/*%INCLUDE SYSUT5  (FINALCFG)                                       */ 02242000
*/*%INCLUDE SYSUT5  (FINALCF1)                                       */ 02243000
*/*%INCLUDE SYSUT5  (NEXTCHAR)                                       */ 02244000
*/*%INCLUDE SYSUT5  (NEXTBLNK)                                       */ 02245000
*/*%INCLUDE SYSUT5  (NEXTCMMA)                                       */ 02246000
*/*%INCLUDE SYSUT5  (READRCRD)                                       */ 02247000
*/*%INCLUDE SYSUT5  (HEXBYTES)                                       */ 02248000
*                                                               01S0455 02249000
*       ;                                                       01S0455 02250000
@DATA    DS    0H                                                       02251000
@CH00060 DC    H'1'                                                     02252000
@CH00063 DC    H'3'                                                     02253000
@CH00042 DC    H'4'                                                     02254000
@CH00056 DC    H'5'                                                     02255000
@CH00054 DC    H'6'                                                     02256000
@CH00049 DC    H'8'                                                     02257000
@CH00266 DC    H'10'                                                    02258000
@CH00052 DC    H'12'                                                    02259000
@CH00085 DC    H'36'                                                    02260000
@CH00367 DC    H'183'                                                   02261000
@CH00368 DC    H'240'                                                   02262000
@CH00334 DC    XL2'C1'                                                  02263000
@SM00383 MVC   CPUSERS(0,@10),TCPUSER2                                  02264000
@SM00389 MVC   LINECHAR(0,LCPTR),HEX2                                   02265000
@DATD    DSECT                                                          02266000
         DS    0F                                                       02267000
@SA00001 DS    18F                                                      02268000
@PC00001 DS    1F                                                       02269000
@SA00003 DS    1F                                                       02270000
@SA00002 DS    1F                                                       02271000
@SA00004 DS    1F                                                       02272000
@SA00005 DS    1F                                                       02273000
@TF00001 DS    F                                                        02274000
ISDACNFG CSECT                                                          02275000
         DS    0F                                                       02276000
@CF00045 DC    F'2'                                                     02277000
@CH00045 EQU   @CF00045+2                                               02278000
@CF00082 DC    F'28'                                                    02279000
@CF00382 DC    F'-4'                                                    02280000
@DATD    DSECT                                                          02281000
         DS    0D                                                       02282000
OPENLIST DS    FL4                                                      02283000
         ORG   OPENLIST                                                 02284000
OPENEOL  DS    CL1                                                      02285000
@NM00007 DS    CL3                                                      02286000
         ORG   OPENLIST+4                                               02287000
@NM00001 DS    CL648                                                    02288000
         ORG   @NM00001                                                 02289000
TCNFGFXD DS    CL14                                                     02290000
         ORG   TCNFGFXD                                                 02291000
TMSFNO   DS    FL2                                                      02292000
TCPUNO   DS    FL2                                                      02293000
TSPINO   DS    FL2                                                      02294000
TSANO    DS    FL2                                                      02295000
TLIB     DS    CL4                                                      02296000
TINTFNO  DS    FL2                                                      02297000
         ORG   @NM00001+14                                              02298000
@NM00002 DS    CL2                                                      02299000
TLTPLIBC DS    CL32                                                     02300000
         ORG   TLTPLIBC                                                 02301000
TLTPLIB  DS    4CL8                                                     02302000
         ORG   @NM00001+48                                              02303000
TCPUINTF DS    CL12                                                     02304000
         ORG   TCPUINTF+0                                               02305000
TCPUCHCU DS    CL6                                                      02306000
         ORG   TCPUCHCU+0                                               02307000
TCPUID   DS    CL5                                                      02308000
TCH      DS    FL1                                                      02309000
         ORG   TCPUINTF+6                                               02310000
TSA      DS    FL1                                                      02311000
TUINTF   DS    CL1                                                      02312000
TFPTR    DS    FL1                                                      02313000
@NM00003 DS    CL3                                                      02314000
         ORG   @NM00001+648                                             02315000
ILINE    DS    CL80                                                     02316000
CNFGFLAG DS    CL1                                                      02317000
         ORG   CNFGFLAG                                                 02318000
EOC      DS    BL1                                                      02319000
EOF      EQU   CNFGFLAG+0                                               02320000
ERROR    EQU   CNFGFLAG+0                                               02321000
RCRD1    EQU   CNFGFLAG+0                                               02322000
SCAN     EQU   CNFGFLAG+0                                               02323000
FIND     EQU   CNFGFLAG+0                                               02324000
COMMA    EQU   CNFGFLAG+0                                               02325000
         ORG   CNFGFLAG+1                                               02326000
         DS    CL3                                                      02327000
LCON     DS    CL9                                                      02328000
         ORG   LCON                                                     02329000
LSA      DS    FL1                                                      02330000
LDRC     DS    CL2                                                      02331000
         ORG   LDRC+0                                                   02332000
MSFNN    DS    FL1                                                      02333000
PCU      DS    FL1                                                      02334000
         ORG   LCON+9                                                   02335000
UC       DS    CL8                                                      02336000
         ORG   UC                                                       02337000
UID      DS    CL6                                                      02338000
         ORG   UID                                                      02339000
UCPUID   DS    CL5                                                      02340000
UCH      DS    FL1                                                      02341000
         ORG   UC+6                                                     02342000
USA      DS    FL1                                                      02343000
UCI      DS    CL1                                                      02344000
         ORG   UC+8                                                     02345000
HEX1     DS    CL11                                                     02346000
HEX2     DS    CL6                                                      02347000
TCPUSER  DS    16CL5                                                    02348000
ISDACNFG CSECT                                                          02349000
         DS    0F                                                       02350000
@SIZDATD DC    AL1(0)                                                   02351000
         DC    AL3(@ENDDATD-@DATD)                                      02352000
@CV00119 DC    V(ISDAGET1)                                              02353000
@CV00120 DC    V(ISDAFREE)                                              02354000
         DS    0D                                                       02355000
RETCOD   DC    F'0'                                                     02356000
@CC00276 DC    C'CPUID'                                                 02357000
@CC00280 DC    C'SIZ'                                                   02358000
@CC00291 DC    C'DRC'                                                   02359000
@CC00287 DC    C'SA'                                                    02360000
@CC00289 DC    C'CU'                                                    02361000
@CC00326 DC    C'DE'                                                    02362000
@CB00249 DC    X'FFFFFFFFFF'                                            02363000
@CB00251 DC    X'0000000000'                                            02364000
PATCH    DC    B'00000000'                                              02365000
         DC    XL49'0'                                                  02366000
CMNDWORD DC    CL3'CPU'                                                 02367000
         DC    CL3'MSF'                                                 02368000
         DC    CL3'LOW'                                                 02369000
         DC    CL3'UPP'                                                 02370000
         DC    CL3'DAS'                                                 02371000
         DC    CL3'CRE'                                                 02372000
         DC    CL3'TAB'                                                 02373000
         DC    CL3'SDG'                                                 02374000
         DC    CL3'PRI'                                                 02375000
CP0001@  DC    AL4(CPUCONFG)                                            02376000
         DC    AL4(MSFN)                                                02377000
         DC    AL4(LOWERCON)                                            02378000
         DC    AL4(UPPERCON)                                            02379000
         DC    AL4(DASD)                                                02380000
         DC    AL4(SKIPCMND)                                            02381000
         DC    AL4(SKIPCMND)                                            02382000
         DC    AL4(SKIPCMND)                                            02383000
         DC    AL4(SKIPCMND)                                            02384000
UCKEYS   DC    CL2'SA'                                                  02385000
         DC    CL2'CI'                                                  02386000
         DC    CL2'CH'                                                  02387000
         DC    CL2'CU'                                                  02388000
         DC    CL2'CP'                                                  02389000
         DC    CL2'AL'                                                  02390000
CP0002@  DC    AL4(KSA)                                                 02391000
         DC    AL4(CI)                                                  02392000
         DC    AL4(CH)                                                  02393000
         DC    AL4(CUID)                                                02394000
         DC    AL4(KCPUID)                                              02395000
         DC    AL4(ALTPATH)                                             02396000
         DC    AL4(UPPSKIP)                                             02397000
@DATD    DSECT                                                          02398000
*                                                         /*@Y30LB52*/  02399000
*                                                         /*@Y30LB52*/  02400000
*                                                         /*@Y30LB52*/  02401000
*                                /* REAL DCB AREA */        @Y30LB52    02402000
SYSINDCB DCB   DSORG=PS,MACRF=GM,DDNAME=SDACONFG,LRECL=80,            **02403000
               RECFM=FB,SYNAD=SYNAD,EODAD=EODAD                         02404000
OFLAGS   EQU   SYSINDCB+48     OPEN FLAGS                               02405000
ISDACNFG CSECT                                                          02406000
*                                                         /*@Y30LB52*/  02407000
*                                /* DUMMY STATIC DCB */     @Y30LB52    02408000
DUMMYDCB DCB   DSORG=PS,MACRF=GM,DDNAME=SDACONFG,LRECL=80,            **02409000
               RECFM=FB,SYNAD=SYNAD,EODAD=EODAD                         02410000
@DATD    DSECT                                                          02411000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02412000
@ENDDATD EQU   *                                                        02413000
ISDACNFG CSECT                                                          02414000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02415000
@01      EQU   01                                                       02416000
@02      EQU   02                                                       02417000
@03      EQU   03                                                       02418000
@04      EQU   04                                                       02419000
@05      EQU   05                                                       02420000
@06      EQU   06                                                       02421000
@07      EQU   07                                                       02422000
@08      EQU   08                                                       02423000
@09      EQU   09                                                       02424000
@10      EQU   10                                                       02425000
@11      EQU   11                                                       02426000
@12      EQU   12                                                       02427000
@13      EQU   13                                                       02428000
@14      EQU   14                                                       02429000
@15      EQU   15                                                       02430000
HEXPTR   EQU   @07                                                      02431000
CHCUPTR  EQU   @02                                                      02432000
LTPDRDP  EQU   @04                                                      02433000
K        EQU   @04                                                      02434000
J        EQU   @06                                                      02435000
I        EQU   @03                                                      02436000
BYTES    EQU   @03                                                      02437000
LCPTR    EQU   @02                                                      02438000
LINEND   EQU   @05                                                      02439000
R0       EQU   @00                                                      02440000
R1       EQU   @01                                                      02441000
R15      EQU   @15                                                      02442000
LINECHAR EQU   0                                                        02443000
ISDAGHDR EQU   0                                                        02444000
GET0SPLN EQU   ISDAGHDR+8                                               02445000
CPUSERS  EQU   0                                                        02446000
LTPDRDTB EQU   0                                                        02447000
LTPDRC   EQU   LTPDRDTB                                                 02448000
DRCL0    EQU   LTPDRC                                                   02449000
DRCL1    EQU   LTPDRC+1                                                 02450000
SADRDDSD EQU   0                                                        02451000
DRDACCTB EQU   0                                                        02452000
DRDACCS  EQU   0                                                        02453000
SAINTF   EQU   0                                                        02454000
CHCUTAB  EQU   0                                                        02455000
SA       EQU   CHCUTAB+6                                                02456000
INTF     EQU   CHCUTAB+7                                                02457000
SPLTABP  EQU   CHCUTAB+8                                                02458000
SPNDLETB EQU   0                                                        02459000
SPNDLES  EQU   0                                                        02460000
P0WORK   EQU   0                                                        02461000
MSCDRDAC EQU   P0WORK+16                                                02462000
P0WORK1  EQU   0                                                        02463000
PCNFG    EQU   0                                                        02464000
CNFGFXD  EQU   PCNFG                                                    02465000
PCNFGL   EQU   CNFGFXD+14                                               02466000
LTPAD    EQU   PCNFG+16                                                 02467000
CHCUAD   EQU   PCNFG+20                                                 02468000
CPUSERAD EQU   PCNFG+24                                                 02469000
CNFGTOTL EQU   PCNFG+28                                                 02470000
SAINTFP  EQU   PCNFG+32                                                 02471000
ISDACVT  EQU   0                                                        02472000
CVTPTRS0 EQU   ISDACVT                                                  02473000
PAD00PTR EQU   CVTPTRS0+44                                              02474000
CNFG0PTR EQU   CVTPTRS0+88                                              02475000
WORKCALL EQU   CVTPTRS0+96                                              02476000
GET0CALL EQU   ISDACVT+100                                              02477000
SPNOLEN  EQU   GET0CALL                                                 02478000
SPNO     EQU   SPNOLEN                                                  02479000
CORELEN  EQU   SPNOLEN+1                                                02480000
COREADDR EQU   GET0CALL+4                                               02481000
HEXPCALL EQU   ISDACVT+108                                              02482000
PRT0CALL EQU   ISDACVT+120                                              02483000
OUTLINE  EQU   PRT0CALL                                                 02484000
SDADATD  EQU   ISDACVT+256                                              02485000
PRTDATD  EQU   ISDACVT+416                                              02486000
CL0001@  EQU   0                                                        02487000
CL0002@  EQU   0                                                        02488000
HEXCHAR  EQU   0                                                        02489000
CVTPTR   EQU   0                                                        02490000
TCPUSER2 EQU   TCPUSER                                                  02491000
GET0PTR  EQU   CNFG0PTR                                                 02492000
SAINTFC  EQU   SAINTF                                                   02493000
CDRDACCT EQU   DRDACCTB                                                 02494000
CSADRDDS EQU   SADRDDSD                                                 02495000
CSPNDLET EQU   SPNDLETB                                                 02496000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02497000
PRTSA001 EQU   PRTDATD                                                  02498000
SDATEMPS EQU   SDADATD+136                                              02499000
SDASA002 EQU   SDADATD+76                                               02500000
SDAPC001 EQU   SDADATD+72                                               02501000
SDASA001 EQU   SDADATD                                                  02502000
SDARPTID EQU   PRT0CALL+133                                             02503000
LINE     EQU   OUTLINE+1                                                02504000
ANSI     EQU   OUTLINE                                                  02505000
DUMPIDNO EQU   HEXPCALL+8                                               02506000
DUMPLEN  EQU   HEXPCALL+4                                               02507000
DUMPADDR EQU   HEXPCALL                                                 02508000
GEN00PTR EQU   CVTPTRS0+92                                              02509000
PWR00PTR EQU   CVTPTRS0+84                                              02510000
APR00PTR EQU   CVTPTRS0+80                                              02511000
DRC00PTR EQU   CVTPTRS0+76                                              02512000
DAT00PTR EQU   CVTPTRS0+72                                              02513000
CSB00PTR EQU   CVTPTRS0+68                                              02514000
DCK00PTR EQU   CVTPTRS0+64                                              02515000
EQC00PTR EQU   CVTPTRS0+60                                              02516000
FSC00PTR EQU   CVTPTRS0+56                                              02517000
DHE00PTR EQU   CVTPTRS0+52                                              02518000
SUM00PTR EQU   CVTPTRS0+48                                              02519000
DCS00PTR EQU   CVTPTRS0+40                                              02520000
LOG00PTR EQU   CVTPTRS0+36                                              02521000
HIST0PTR EQU   CVTPTRS0+32                                              02522000
PRT00PTR EQU   CVTPTRS0+28                                              02523000
GET00PTR EQU   CVTPTRS0+24                                              02524000
TYPE0PTR EQU   CVTPTRS0+20                                              02525000
PARM0PTR EQU   CVTPTRS0+16                                              02526000
SDA00PTR EQU   CVTPTRS0+12                                              02527000
PARMPTR  EQU   CVTPTRS0+8                                               02528000
SDATAPTR EQU   CVTPTRS0+4                                               02529000
DATAPTR  EQU   CVTPTRS0                                                 02530000
@NM00006 EQU   PCNFG+30                                                 02531000
CHINTFNO EQU   CNFGFXD+12                                               02532000
LIBSIZS  EQU   CNFGFXD+8                                                02533000
SANO     EQU   CNFGFXD+6                                                02534000
SPINO    EQU   CNFGFXD+4                                                02535000
CPUNO    EQU   CNFGFXD+2                                                02536000
MSFNO    EQU   CNFGFXD                                                  02537000
PADFPTR1 EQU   P0WORK1                                                  02538000
HTOTAL   EQU   P0WORK+90                                                02539000
MSCTOTAL EQU   P0WORK+88                                                02540000
CSFTOTAL EQU   P0WORK+80                                                02541000
SATABPTR EQU   MSCDRDAC+4                                               02542000
@NM00005 EQU   MSCDRDAC+2                                               02543000
MSCINTF  EQU   MSCDRDAC                                                 02544000
ENDCORE  EQU   P0WORK+12                                                02545000
COREASG  EQU   P0WORK+8                                                 02546000
PADLASTB EQU   P0WORK+4                                                 02547000
PADFPTR  EQU   P0WORK                                                   02548000
STCTLCCK EQU   SPNDLES+4                                                02549000
STCTLCHK EQU   SPNDLES+2                                                02550000
DRVEQCHK EQU   SPNDLES                                                  02551000
CHCU     EQU   CHCUTAB+5                                                02552000
CPUIDSER EQU   CHCUTAB                                                  02553000
DRCERRS  EQU   DRDACCS+4                                                02554000
CTLIERRS EQU   DRDACCS+2                                                02555000
DRDERRS  EQU   DRDACCS                                                  02556000
SADASDAC EQU   SADRDDSD+4                                               02557000
SADRDACC EQU   SADRDDSD                                                 02558000
@NM00004 EQU   ISDAGHDR+26                                              02559000
BLOCKCNT EQU   ISDAGHDR+24                                              02560000
BLOCKID  EQU   ISDAGHDR+20                                              02561000
LASTPTR  EQU   ISDAGHDR+16                                              02562000
NEXTPTR  EQU   ISDAGHDR+12                                              02563000
GET0LEN  EQU   GET0SPLN+1                                               02564000
GET0SPNO EQU   GET0SPLN                                                 02565000
ENDPTR   EQU   ISDAGHDR+4                                               02566000
STARTPTR EQU   ISDAGHDR                                                 02567000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02568000
@RF00061 EQU   CE0001@                                                  02569000
@RF00083 EQU   CE0001@                                                  02570000
@RF00180 EQU   CE0002@                                                  02571000
@RC00345 EQU   @RC00343                                                 02572000
@RC00375 EQU   @RC00373                                                 02573000
@RC00401 EQU   @RC00399                                                 02574000
@RC00448 EQU   @EL00006                                                 02575000
@ENDDATA EQU   *                                                        02576000
         END   ISDACNFG,(C'PLS1338',0701,78157)                         02577000
