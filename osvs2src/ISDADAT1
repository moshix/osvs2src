         TITLE 'DATA HANDLING CHECKS BY DRC,DRD REPORT                 *00001000
                        '                                               00002000
ISDADAT1 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(8)                                           01S0001 00007000
         DC    C'ISDADAT1'                                      01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         ISDAGSPC R,LV=(0)                                              00015000
         LR    @11,@01                                          01S0001 00016000
         USING @DATD,@11                                        01S0001 00017000
         ST    @13,@SA00001+4                                   01S0001 00018000
         LM    @00,@01,20(@13)                                  01S0001 00019000
         ST    @11,8(,@13)                                      01S0001 00020000
         LR    @13,@11                                          01S0001 00021000
         MVC   @PC00001(4),0(@01)                               01S0001 00022000
*                                                            @ZM02889*/ 00023000
*                                                               01S0050 00024000
*   /*****************************************************************/ 00025000
*   /*                                                               */ 00026000
*   /* END OF ISDADAT1 DECLARES                              @Y30LB50*/ 00027000
*   /*                                                               */ 00028000
*   /*****************************************************************/ 00029000
*                                                               01S0051 00030000
*   CVTPTR=WORKPTR;                 /* SAVE CALLING PARAMETER-PTR TO    00031000
*                                      SDACVT                @Y30LB50*/ 00032000
         L     @15,@PC00001                                     01S0051 00033000
         L     CVTPTR,WORKPTR(,@15)                             01S0051 00034000
*   DATPTR=DAT00PTR;                /* SET LOCAL POINTER TO DAT WORK    00035000
*                                      AREA                  @Y30LB50*/ 00036000
         L     DATPTR,DAT00PTR(,CVTPTR)                         01S0052 00037000
*   RETRNREG=NODATA;                /* SET RETURN CODE FOR NO DATA      00038000
*                                      ENCOUNTERED - WILL BE RESET      00039000
*                                      WHEN DATA IS ENCOUNTERED 01S0053 00040000
*                                                            @Y30LB50*/ 00041000
         LA    RETRNREG,8                                       01S0053 00042000
*   RFY                                                         01S0054 00043000
*     OPTR RSTD;                    /*                       @Y30LB50*/ 00044000
*   OPTR=ADDR(OUTLINE);             /* POINT TO OUTPUT LINE IN SDACVT   00045000
*                                                            @Y30LB50*/ 00046000
         LA    OPTR,OUTLINE(,CVTPTR)                            01S0055 00047000
*   RFY                                                         01S0056 00048000
*     OUTPTR RSTD;                  /*                       @Y30LB50*/ 00049000
*   DO I=1 TO MAXCS;                /* PROCESS ALL CS ACCUMULATORS      00050000
*                                                            @Y30LB50*/ 00051000
         LA    @07,1                                            01S0057 00052000
         STH   @07,I(,DATPTR)                                   01S0057 00053000
@DL00057 DS    0H                                               01S0058 00054000
*     IF CSPTRS(I)^=0 THEN          /* IF ACCUMULATOR WAS OBTAINED      00055000
*                                                            @Y30LB50*/ 00056000
         SLR   @07,@07                                          01S0058 00057000
         LH    @04,I(,DATPTR)                                   01S0058 00058000
         LR    @03,@04                                          01S0058 00059000
         SLA   @03,2                                            01S0058 00060000
         AL    @03,@CF00428                                     01S0058 00061000
         L     @03,CSPTRS(@03,DATPTR)                           01S0058 00062000
         CR    @03,@07                                          01S0058 00063000
         BE    @RF00058                                         01S0058 00064000
*                                                               02S0059 00065000
*   /*****************************************************************/ 00066000
*   /*                                                               */ 00067000
*   /* DATRPPT IS USED TO FORMAT AND PRINT THE DAT CHECKS REPORT FOR */ 00068000
*   /* EACH ACCUMULATOR USED                                 @Y30LB50*/ 00069000
*   /*                                                               */ 00070000
*   /*****************************************************************/ 00071000
*                                                               02S0059 00072000
*   DO;                             /*                       @Y30LB50*/ 00073000
*     RETRNREG=0;                   /* SET RETURN CODE TO 0  @Y30LB50*/ 00074000
         LR    RETRNREG,@07                                     02S0060 00075000
*     CSPTR=CSPTRS(I);              /* INITIALIZE POINTER TO    02S0061 00076000
*                                      CARTRIDGE STORE ACCUMULATOR      00077000
*                                      BLOCK BEING PROCESSED @Y30LB50*/ 00078000
         LR    CSPTR,@03                                        02S0061 00079000
*     OUTPUT=DATHEAD;               /* SET MAIN HEADING INTO OUTPUT     00080000
*                                      LINE                  @Y30LB50*/ 00081000
         MVI   OUTPUT+129(OPTR),C' '                            02S0062 00082000
         MVC   OUTPUT+130(3,OPTR),OUTPUT+129(OPTR)              02S0062 00083000
         MVC   OUTPUT(129,OPTR),@CC00170                        02S0062 00084000
*     HOLD=I-1;                     /* SET CARTRIDGE STORE NUMBER       00085000
*                                      INTO OUTPUT LINE      @Y30LB50*/ 00086000
         BCTR  @04,0                                            02S0063 00087000
         ST    @04,HOLD(,DATPTR)                                02S0063 00088000
*     HOLD(4)=HOLD(4)|'0';          /* MAKE PRINTABLE        @Y30LB50*/ 00089000
         OI    HOLD+3(DATPTR),C'0'                              02S0064 00090000
*     CSNO=HOLD(4);                 /*                       @Y30LB50*/ 00091000
         MVC   CSNO(1,OPTR),HOLD+3(DATPTR)                      02S0065 00092000
*     RFY                                                       02S0066 00093000
*       R1 RSTD;                    /*                       @Y30LB50*/ 00094000
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/ 00095000
         LA    R1,WORKCALL(,CVTPTR)                             02S0067 00096000
*     CALL ISDAPRT0;                /* PRINT MAIN HEADING    @Y30LB50*/ 00097000
         L     @15,@CV00159                                     02S0068 00098000
         BALR  @14,@15                                          02S0068 00099000
*     OUTPUT=' ';                   /* CLEAR OUTPUT LINE     @Y30LB50*/ 00100000
         MVI   OUTPUT+1(OPTR),C' '                              02S0069 00101000
         MVC   OUTPUT+2(131,OPTR),OUTPUT+1(OPTR)                02S0069 00102000
         MVI   OUTPUT(OPTR),C' '                                02S0069 00103000
*     CNTRL=SKIP;                   /* CONTROL CHARACTER     @Y30LB50*/ 00104000
         MVI   CNTRL(OPTR),C'0'                                 02S0070 00105000
*     SSIDHD1=DRCID;                /* FIRST LINE OF SUBHEADING 02S0071 00106000
*                                                            @Y30LB50*/ 00107000
         MVC   SSIDHD1(8,OPTR),@CC00206                         02S0071 00108000
*     SSIDHD2=DRDID;                /* FIRST LINE OF SUBHEADING 02S0072 00109000
*                                                            @Y30LB50*/ 00110000
         MVC   SSIDHD2(8,OPTR),@CC00208                         02S0072 00111000
*     CALL ISDAPRT0;                /* PRINT FIRST LINE OF SUBHEADING   00112000
*                                                            @Y30LB50*/ 00113000
         L     @15,@CV00159                                     02S0073 00114000
         BALR  @14,@15                                          02S0073 00115000
*     CNTRL=SKIP1;                  /* CONTROL CHARACTER     @Y30LB50*/ 00116000
         MVI   CNTRL(OPTR),C' '                                 02S0074 00117000
*     DIVLINES=DATSUB1;             /* COLUMN HEADINGS       @Y30LB50*/ 00118000
         MVC   DIVLINES(86,OPTR),@CC00199                       02S0075 00119000
*     OUTPTR=ADDR(SSID0);           /* POINTER FOR FIRST SSID'S CS      00120000
*                                                            @Y30LB50*/ 00121000
         LA    OUTPTR,SSID0(,OPTR)                              02S0076 00122000
*     LOOPEND=MAXDRC;               /* PROCESS DRC SSIDS FIRST  02S0077 00123000
*                                                            @Y30LB50*/ 00124000
         MVC   LOOPEND(2,DATPTR),@CH00101                       02S0077 00125000
*     DO K=1 TO 2;                  /* PROCESS DRC AND DRD SEPARATELY   00126000
*                                                            @Y30LB50*/ 00127000
         LA    @07,1                                            02S0078 00128000
         STH   @07,K(,DATPTR)                                   02S0078 00129000
@DL00078 DS    0H                                               02S0079 00130000
*       DO M=1 TO LOOPEND;          /* ADD CS TO EACH SSID   @Y30LB50*/ 00131000
         LA    @07,1                                            02S0079 00132000
         B     @DE00079                                         02S0079 00133000
@DL00079 DS    0H                                               02S0080 00134000
*         SSIDCS=HOLD(4);           /*                       @Y30LB50*/ 00135000
         MVC   SSIDCS(1,OUTPTR),HOLD+3(DATPTR)                  02S0080 00136000
*         OUTPTR=OUTPTR+LENGTH(SSIDX);/*                        02S0081 00137000
*                                      SPACE FOR NEXT SSID   @Y30LB50*/ 00138000
         AH    OUTPTR,@CH00094                                  02S0081 00139000
*       END;                        /*                       @Y30LB50*/ 00140000
         LA    @07,1                                            02S0082 00141000
         AH    @07,M(,DATPTR)                                   02S0082 00142000
@DE00079 STH   @07,M(,DATPTR)                                   02S0082 00143000
         CH    @07,LOOPEND(,DATPTR)                             02S0082 00144000
         BNH   @DL00079                                         02S0082 00145000
*       OUTPTR=ADDR(SSID1);         /* POINT TO DRD SSID     @Y30LB50*/ 00146000
         LA    OUTPTR,SSID1(,OPTR)                              02S0083 00147000
*       LOOPEND=MAXDRD;             /* PROCESS DRD SSIDS     @Y30LB50*/ 00148000
         MVC   LOOPEND(2,DATPTR),@CH00070                       02S0084 00149000
*     END;                          /*                       @Y30LB50*/ 00150000
         LA    @07,1                                            02S0085 00151000
         AH    @07,K(,DATPTR)                                   02S0085 00152000
         STH   @07,K(,DATPTR)                                   02S0085 00153000
         CH    @07,@CH00122                                     02S0085 00154000
         BNH   @DL00078                                         02S0085 00155000
*     SSID0=HOLD(4);                /* ADD CARTRIDGE STORE TO SSID      00156000
*                                                            @Y30LB50*/ 00157000
         MVC   SSID0(1,OPTR),HOLD+3(DATPTR)                     02S0086 00158000
*     CALL ISDAPRT0;                /*                       @Y30LB50*/ 00159000
         L     @15,@CV00159                                     02S0087 00160000
         BALR  @14,@15                                          02S0087 00161000
*     OUTPUT=DATSUB3;               /* DIVIDING LINE FOR FIRST BYTE     00162000
*                                                            @Y30LB50*/ 00163000
         MVI   OUTPUT+123(OPTR),C' '                            02S0088 00164000
         MVC   OUTPUT+124(9,OPTR),OUTPUT+123(OPTR)              02S0088 00165000
         MVC   OUTPUT(123,OPTR),@CC00181                        02S0088 00166000
*     CALL ISDAPRT0;                /*                       @Y30LB50*/ 00167000
         L     @15,@CV00159                                     02S0089 00168000
         BALR  @14,@15                                          02S0089 00169000
*     OUTPUT=' ';                   /*                       @Y30LB50*/ 00170000
         MVI   OUTPUT+1(OPTR),C' '                              02S0090 00171000
         MVC   OUTPUT+2(131,OPTR),OUTPUT+1(OPTR)                02S0090 00172000
         MVI   OUTPUT(OPTR),C' '                                02S0090 00173000
*     RFY                                                       02S0091 00174000
*       R1 UNRSTD;                  /*                       @Y30LB50*/ 00175000
*     RFY                                                       02S0092 00176000
*       LINEPTR RSTD;               /*                       @Y30LB50*/ 00177000
*     LINEPTR=ADDR(LINETITL);       /* SET POINTER TO BIT       02S0093 00178000
*                                      DESCRIPTIONS TO BE PRINTED       00179000
*                                      WITH THE BIT COUNTS   @Y30LB50*/ 00180000
*                                                               02S0093 00181000
         LA    LINEPTR,LINETITL                                 02S0093 00182000
*   /*****************************************************************/ 00183000
*   /*                                                               */ 00184000
*   /* DATCVRT IS USED TO FORMAT AND PRINT ONE LINE OF OUTPUT FOR    */ 00185000
*   /* EACH BIT COUNT ACCUMULATED. THE OUTPUT LINE INCLUDES ONE COUNT*/ 00186000
*   /* PER EACH DRC AND DRD AND ONE TOTAL COUNT.             @Y30LB50*/ 00187000
*   /*                                                               */ 00188000
*   /*****************************************************************/ 00189000
*                                                               02S0094 00190000
*   DO K=1 TO MAXBYTE;              /* PROCESS DAT BYTES     @Y30LB50*/ 00191000
         LA    @04,1                                            02S0094 00192000
         STH   @04,K(,DATPTR)                                   02S0094 00193000
@DL00094 DS    0H                                               02S0095 00194000
*     OUTPUT=LINE0;                 /* PRINT MAIN HEADING FOR THIS      00195000
*                                      BYTE                  @Y30LB50*/ 00196000
         MVI   OUTPUT+37(OPTR),C' '                             02S0095 00197000
         MVC   OUTPUT+38(95,OPTR),OUTPUT+37(OPTR)               02S0095 00198000
         MVC   OUTPUT(37,OPTR),LINE0(LINEPTR)                   02S0095 00199000
*     DIVLINES=DATSUB4;             /* ADD DIVIDING LINES FOR COUNTS    00200000
*                                                            @Y30LB50*/ 00201000
         MVC   DIVLINES(86,OPTR),@CC00192                       02S0096 00202000
*     RFY                                                       02S0097 00203000
*       R1 RSTD;                    /*                       @Y30LB50*/ 00204000
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/ 00205000
         LA    R1,WORKCALL(,CVTPTR)                             02S0098 00206000
*     CALL ISDAPRT0;                /*                       @Y30LB50*/ 00207000
         L     @15,@CV00159                                     02S0099 00208000
         BALR  @14,@15                                          02S0099 00209000
*     RFY                                                       02S0100 00210000
*       R1 UNRSTD;                  /*                       @Y30LB50*/ 00211000
*     LINEPTR=LINEPTR+LENGTH(LINE0);/* PTR TO FIRST BIT DESCRIPTION     00212000
*                                                            @Y30LB50*/ 00213000
         AH    LINEPTR,@CH00224                                 02S0101 00214000
*     DO J=1 TO BITCNT;             /* PROCESS BITS IN ONE BYTE 02S0102 00215000
*                                                            @Y30LB50*/ 00216000
         LA    @04,1                                            02S0102 00217000
         STH   @04,J(,DATPTR)                                   02S0102 00218000
@DL00102 DS    0H                                               02S0103 00219000
*       OUTPUT=' ';                 /* PREPARE BIT DESCRIPTOR LINE OF   00220000
*                                      OUTPUT                @Y30LB50*/ 00221000
         MVI   OUTPUT+1(OPTR),C' '                              02S0103 00222000
         MVC   OUTPUT+2(131,OPTR),OUTPUT+1(OPTR)                02S0103 00223000
         MVI   OUTPUT(OPTR),C' '                                02S0103 00224000
*       BITBEG='|BIT';              /*                       @Y30LB50*/ 00225000
         MVC   BITBEG(4,OPTR),@CC00424                          02S0104 00226000
*       HOLD=J-1;                   /* ISOLATE BIT NUMBER    @Y30LB50*/ 00227000
         LH    @04,J(,DATPTR)                                   02S0105 00228000
         BCTR  @04,0                                            02S0105 00229000
         ST    @04,HOLD(,DATPTR)                                02S0105 00230000
*       BITNUMB=HOLD(4)|'0';        /*                       @Y30LB50*/ 00231000
         MVC   BITNUMB(1,OPTR),HOLD+3(DATPTR)                   02S0106 00232000
         OI    BITNUMB(OPTR),C'0'                               02S0106 00233000
*       BITDESC=LINE1;              /* BIT DESCRIPTOR        @Y30LB50*/ 00234000
         MVC   BITDESC(27,OPTR),LINE1(LINEPTR)                  02S0107 00235000
*       DIVLINES=DATSUB4;           /* ADD DIVIDING LINES    @Y30LB50*/ 00236000
         MVC   DIVLINES(86,OPTR),@CC00192                       02S0108 00237000
*       TSUM=0;                     /* SET TOTAL FOR ALL DRCS TO 0      00238000
*                                                            @Y30LB50*/ 00239000
         SLR   @04,@04                                          02S0109 00240000
         ST    @04,TSUM(,DATPTR)                                02S0109 00241000
*       OUTPTR=ADDR(CNTSECT);       /* COUNT SECTION OF OUTPUT  02S0110 00242000
*                                                            @Y30LB50*/ 00243000
*                                                               02S0110 00244000
         LA    OUTPTR,CNTSECT(,OPTR)                            02S0110 00245000
*   /*****************************************************************/ 00246000
*   /*                                                               */ 00247000
*   /* DAT1CNT IS USED TO CONVERT THE COUNTS (ONE PER EACH DRC AND   */ 00248000
*   /* EACH DRD) FOR EACH BIT , MAINTAIN THE RUNNING TOTAL FOR ALL   */ 00249000
*   /* DRCS AND DRDS FOR EACH BIT AND FORMAT THE BIT COUNTS AND THE  */ 00250000
*   /* TOTAL INTO THE OUTPUT LINE.                           @Y30LB50*/ 00251000
*   /*                                                               */ 00252000
*   /*****************************************************************/ 00253000
*                                                               02S0111 00254000
*   LOOPEND=MAXDRC;                 /* PROCESS DRC COUNTS FIRST 02S0111 00255000
*                                                            @Y30LB50*/ 00256000
         MVC   LOOPEND(2,DATPTR),@CH00101                       02S0111 00257000
*   DO M=1 TO 2;                    /* PROCESS DRC AND DRD COUNTS       00258000
*                                      SEPARATELY            @Y30LB50*/ 00259000
         LA    @04,1                                            02S0112 00260000
         STH   @04,M(,DATPTR)                                   02S0112 00261000
@DL00112 DS    0H                                               02S0113 00262000
*     DO L=1 TO LOOPEND;            /* PROCESS EACH DRC AND DRD COUNT   00263000
*                                                            @Y30LB50*/ 00264000
         LA    @04,1                                            02S0113 00265000
         B     @DE00113                                         02S0113 00266000
@DL00113 DS    0H                                               02S0114 00267000
*       WORK1(3:8)=PATT2;           /* SET EDIT PATTERN INTO OUTPUT     00268000
*                                                            @Y30LB50*/ 00269000
         MVC   WORK1+2(6,DATPTR),PATT2                          02S0114 00270000
*       CVD(BYTEBIT,HOLDDBL);       /* CONVERT COUNT         @Y30LB50*/ 00271000
         LH    @04,BYTEBIT(,CSPTR)                              02S0115 00272000
         CVD   @04,HOLDDBL(,DATPTR)                             02S0115 00273000
*       ED(WORK1(3:8),HOLD1);       /*                       @Y30LB50*/ 00274000
         ED    WORK1+2(6,DATPTR),HOLD1(DATPTR)                  02S0116 00275000
*       OCOUNT=WORK1(4:8);          /* MOVE 5 CHAR           @Y30LB55*/ 00276000
         MVC   OCOUNT(5,OUTPTR),WORK1+3(DATPTR)                 02S0117 00277000
*       TSUM=TSUM+BYTEBIT;          /* ADD TO TOTAL FOR ALL DRCS,DRDS   00278000
*                                                            @Y30LB50*/ 00279000
         AL    @04,TSUM(,DATPTR)                                02S0118 00280000
         ST    @04,TSUM(,DATPTR)                                02S0118 00281000
*       CSPTR=CSPTR+LENGTH(BYTEBIT);/* UP PTR TO NEXT DRC COUNT 02S0119 00282000
*                                                            @Y30LB50*/ 00283000
         AH    CSPTR,@CH00122                                   02S0119 00284000
*       OUTPTR=OUTPTR+LENGTH(OUTCNTS);/*                        02S0120 00285000
*                                      UP PTR IN OUTPUT FOR NEXT CNT    00286000
*                                                            @Y30LB50*/ 00287000
         AH    OUTPTR,@CH00094                                  02S0120 00288000
*     END;                          /*                       @Y30LB50*/ 00289000
         LA    @04,1                                            02S0121 00290000
         AH    @04,L(,DATPTR)                                   02S0121 00291000
@DE00113 STH   @04,L(,DATPTR)                                   02S0121 00292000
         CH    @04,LOOPEND(,DATPTR)                             02S0121 00293000
         BNH   @DL00113                                         02S0121 00294000
*     WORK1(3:8)=PATT2;             /* EDIT PATTERN FOR TOTAL COUNT     00295000
*                                                            @Y30LB50*/ 00296000
         MVC   WORK1+2(6,DATPTR),PATT2                          02S0122 00297000
*     CVD(TSUM,HOLDDBL);            /* CONVERT TOTAL FOR BIT @Y30LB50*/ 00298000
         L     @04,TSUM(,DATPTR)                                02S0123 00299000
         CVD   @04,HOLDDBL(,DATPTR)                             02S0123 00300000
*     ED(WORK1(3:8),HOLD1);         /*                       @Y30LB50*/ 00301000
         ED    WORK1+2(6,DATPTR),HOLD1(DATPTR)                  02S0124 00302000
*     TCOUNT=WORK1(4:8);            /* MOVE 5 CHAR           @Y30LB55*/ 00303000
         MVC   TCOUNT(5,OUTPTR),WORK1+3(DATPTR)                 02S0125 00304000
*     OUTPTR=OUTPTR+LENGTH(TOUTCNTS);/*                         02S0126 00305000
*                                      POINT PAST TOTAL      @Y30LB50*/ 00306000
         AH    OUTPTR,@CH00107                                  02S0126 00307000
*     LOOPEND=MAXDRD;               /* PROCESS DRD COUNTS LAST  02S0127 00308000
*                                                            @Y30LB50*/ 00309000
         MVC   LOOPEND(2,DATPTR),@CH00070                       02S0127 00310000
*     TSUM=0;                       /* CLEAR TOTAL           @Y30LB50*/ 00311000
         SLR   @04,@04                                          02S0128 00312000
         ST    @04,TSUM(,DATPTR)                                02S0128 00313000
*   END;                            /*                       @Y30LB50*/ 00314000
         LA    @04,1                                            02S0129 00315000
         AH    @04,M(,DATPTR)                                   02S0129 00316000
         STH   @04,M(,DATPTR)                                   02S0129 00317000
         CH    @04,@CH00122                                     02S0129 00318000
         BNH   @DL00112                                         02S0129 00319000
*       LINEPTR=LINEPTR+LENGTH(LINE1);/*                        02S0130 00320000
*                                      NEXT BIT DESCRIPTION  @Y30LB50*/ 00321000
         AH    LINEPTR,@CH00226                                 02S0130 00322000
*       RFY                                                     02S0131 00323000
*         R1 RSTD;                  /*                       @Y30LB50*/ 00324000
*       R1=ADDR(WORKCALL);          /*                       @Y30LB50*/ 00325000
         LA    R1,WORKCALL(,CVTPTR)                             02S0132 00326000
*       CALL ISDAPRT0;              /* PRINT BIT LINE OF OUTPUT 02S0133 00327000
*                                                            @Y30LB50*/ 00328000
         L     @15,@CV00159                                     02S0133 00329000
         BALR  @14,@15                                          02S0133 00330000
*       RFY                                                     02S0134 00331000
*         R1 UNRSTD;                /*                       @Y30LB50*/ 00332000
*     END;                          /*                       @Y30LB50*/ 00333000
         LA    @04,1                                            02S0135 00334000
         AH    @04,J(,DATPTR)                                   02S0135 00335000
         STH   @04,J(,DATPTR)                                   02S0135 00336000
         CH    @04,@CH00070                                     02S0135 00337000
         BNH   @DL00102                                         02S0135 00338000
*     OUTPUT=DATSUB3;               /* LINE TO SEPARATE OUTPUT FOR      00339000
*                                      ONE BYTE              @Y30LB50*/ 00340000
         MVI   OUTPUT+123(OPTR),C' '                            02S0136 00341000
         MVC   OUTPUT+124(9,OPTR),OUTPUT+123(OPTR)              02S0136 00342000
         MVC   OUTPUT(123,OPTR),@CC00181                        02S0136 00343000
*     RFY                                                       02S0137 00344000
*       R1 RSTD;                    /*                       @Y30LB50*/ 00345000
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/ 00346000
         LA    R1,WORKCALL(,CVTPTR)                             02S0138 00347000
*     CALL ISDAPRT0;                /*                       @Y30LB50*/ 00348000
         L     @15,@CV00159                                     02S0139 00349000
         BALR  @14,@15                                          02S0139 00350000
*     RFY                                                       02S0140 00351000
*       R1 UNRSTD;                  /*                       @Y30LB50*/ 00352000
*   END;                            /*                       @Y30LB50*/ 00353000
         LA    @04,1                                            02S0141 00354000
         AH    @04,K(,DATPTR)                                   02S0141 00355000
         STH   @04,K(,DATPTR)                                   02S0141 00356000
         CH    @04,@CH00154                                     02S0141 00357000
         BNH   @DL00094                                         02S0141 00358000
*     COREADDR=CSPTRS(I);           /* POINT TO BLOCK FOR RELEASING     00359000
*                                                            @Y30LB50*/ 00360000
         LH    @04,I(,DATPTR)                                   02S0142 00361000
         SLA   @04,2                                            02S0142 00362000
         AL    @04,@CF00428                                     02S0142 00363000
         L     @04,CSPTRS(@04,DATPTR)                           02S0142 00364000
         ST    @04,COREADDR(,CVTPTR)                            02S0142 00365000
*     SPNO=DATSPNO;                 /* SUBPOOL NUMBER        @Y30LB50*/ 00366000
         MVC   SPNO(1,CVTPTR),DATSPNO                           02S0143 00367000
*     CORELEN=LENGTH(DATACCM);      /* LENGTH TO RELEASE     @Y30LB50*/ 00368000
         MVC   CORELEN(3,CVTPTR),@CF00427+1                     02S0144 00369000
*     RFY                                                       02S0145 00370000
*       R1 RSTD;                    /*                       @Y30LB50*/ 00371000
*     R1=ADDR(WORKCALL);            /*                       @Y30LB50*/ 00372000
         LA    R1,WORKCALL(,CVTPTR)                             02S0146 00373000
*     CALL ISDAFREE;                /* FREE ACCUMULATOR BLOCK   02S0147 00374000
*                                                            @Y30LB50*/ 00375000
         L     @15,@CV00158                                     02S0147 00376000
         BALR  @14,@15                                          02S0147 00377000
*     RFY                                                       02S0148 00378000
*      (R1,                                                     02S0148 00379000
*       LINEPTR) UNRSTD;            /*                       @Y30LB50*/ 00380000
*   END;                            /*                       @Y30LB50*/ 00381000
*     ELSE                                                      01S0150 00382000
*       ;                           /*                       @Y30LB50*/ 00383000
@RF00058 DS    0H                                               01S0151 00384000
*   END;                            /*                       @Y30LB50*/ 00385000
         LA    @07,1                                            01S0151 00386000
         AH    @07,I(,DATPTR)                                   01S0151 00387000
         STH   @07,I(,DATPTR)                                   01S0151 00388000
         CH    @07,@CH00101                                     01S0151 00389000
         BNH   @DL00057                                         01S0151 00390000
*   RFY                                                         01S0152 00391000
*     R1 RSTD;                      /*                       @Y30LB50*/ 00392000
*   R1=ADDR(WORKCALL);              /*                       @Y30LB50*/ 00393000
         LA    R1,WORKCALL(,CVTPTR)                             01S0153 00394000
*   CORELEN=LENGTH(DATWORK);        /* LENGTH OF WORKAREA    @Y30LB50*/ 00395000
         MVC   CORELEN(3,CVTPTR),@CF00241+1                     01S0154 00396000
*   SPNO=DATSPNO;                   /* SUBPOOL NUMBER OF WORKAREA       00397000
*                                                            @Y30LB50*/ 00398000
         MVC   SPNO(1,CVTPTR),DATSPNO                           01S0155 00399000
*   COREADDR=DATPTR;                /* ADDRESS OF WORKAREA   @Y30LB50*/ 00400000
         ST    DATPTR,COREADDR(,CVTPTR)                         01S0156 00401000
*   CALL ISDAFREE;                  /* FREE WORKAREA         @Y30LB50*/ 00402000
         L     @15,@CV00158                                     01S0157 00403000
         BALR  @14,@15                                          01S0157 00404000
*   DAT00PTR=0;                     /* ZERO WORKAREA PTR     @Y30LB50*/ 00405000
         SLR   @07,@07                                          01S0158 00406000
         ST    @07,DAT00PTR(,CVTPTR)                            01S0158 00407000
*   RFY                                                         01S0159 00408000
*     R1 UNRSTD;                    /*                       @Y30LB50*/ 00409000
*   RETURN CODE(RETRNREG);          /*                       @Y30LB50*/ 00410000
         L     @13,4(,@13)                                      01S0160 00411000
         L     @00,@SIZDATD                                     01S0160 00412000
         LR    @01,@11                                          01S0160 00413000
         ISDAFSPC R,LV=(0),A=(1)                                        00414000
         LR    @15,@09                                          01S0160 00415000
         L     @14,12(,@13)                                     01S0160 00416000
         LM    @00,@12,20(@13)                                  01S0160 00417000
         BR    @14                                              01S0160 00418000
*   END ISDADAT1                    /*                       @Y30LB50*/ 00419000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00420000
*/*%INCLUDE SYSLIB  (ISDACVT )                                        * 00421000
*/*%INCLUDE SYSLIB  (ISDADAT5)                                        * 00422000
*/*%INCLUDE SYSUT5  (DAT1CNST)                                        * 00423000
*/*%INCLUDE SYSUT5  (DATTITLS)                                        * 00424000
*/*%INCLUDE SYSUT5  (DATFMTS )                                        * 00425000
*/*%INCLUDE SYSUT5  (DATRPPT )                                        * 00426000
*/*%INCLUDE SYSUT5  (DATCVRT )                                        * 00427000
*/*%INCLUDE SYSUT5  (DAT1CNT )                                        * 00428000
*;                                                              01S0161 00429000
@DATA    DS    0H                                                       00430000
@CH00122 DC    H'2'                                                     00431000
@CH00101 DC    H'4'                                                     00432000
@CH00154 DC    H'5'                                                     00433000
@CH00094 DC    H'6'                                                     00434000
@CH00107 DC    H'7'                                                     00435000
@CH00070 DC    H'8'                                                     00436000
@CH00226 DC    H'27'                                                    00437000
@CH00224 DC    H'37'                                                    00438000
@DATD    DSECT                                                          00439000
         DS    0F                                                       00440000
@SA00001 DS    18F                                                      00441000
@PC00001 DS    1F                                                       00442000
ISDADAT1 CSECT                                                          00443000
         DS    0F                                                       00444000
@CF00241 DC    F'48'                                                    00445000
@CF00427 DC    F'960'                                                   00446000
@CF00428 DC    F'-4'                                                    00447000
@DATD    DSECT                                                          00448000
         DS    0D                                                       00449000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00450000
@ENDDATD EQU   *                                                        00451000
ISDADAT1 CSECT                                                          00452000
         NOPR  ((@ENDDATD-@DATD)/161*16)                                00453000
         DS    0F                                                       00454000
@SIZDATD DC    AL1(0)                                                   00455000
         DC    AL3(@ENDDATD-@DATD)                                      00456000
@CV00158 DC    V(ISDAFREE)                                              00457000
@CV00159 DC    V(ISDAPRT0)                                              00458000
         DS    0D                                                       00459000
@CC00170 DC    C'1REPORT 11 - DRC AND DRD DATA HANDLING CHECK SUMMARY  C00460000
                            MSF                      (DATA FROM MSS FORC00461000
               MAT 4, SA FORMAT B)'                                     00462000
@CC00181 DC    C' |-----------------------------------|-----|-----|----C00463000
               -|-----|-----||-----|-----|-----|-----|-----|-----|-----C00464000
               |-----|-----|'                                           00465000
@CC00192 DC    C'|     |     |     |     |     ||     |     |     |    C00466000
                |     |     |     |     |     |'                        00467000
@CC00199 DC    C'|  400|  401|  402|  403|TOTAL||  200|  201|  202|  20C00468000
               3|  204|  205|  206|  207|TOTAL|'                        00469000
@CC00206 DC    C'DRC SSID'                                              00470000
@CC00208 DC    C'DRD SSID'                                              00471000
@CC00424 DC    C'|BIT'                                                  00472000
DATSPNO  DC    X'00'                                                    00473000
PATCH    DS    CL50                                                     00474000
         ORG   PATCH                                                    00475000
@NM00001 DC    50X'00'                                                  00476000
         ORG   PATCH+50                                                 00477000
PATT2    DC    X'402020202120'                                          00478000
LINETITL DS    CL1265                                                   00479000
         ORG   LINETITL                                                 00480000
LINEA    DC    CL37' |SA SENSE BYTE 0 - MSS BYTE 4       '              00481000
LINE2    DC    CL27'COMMAND REJECT             '                        00482000
LINE3    DC    CL27'INTERVENTION REQUIRED      '                        00483000
LINEB    DC    CL27'BUS OUT PARITY             '                        00484000
LINE4    DC    CL27'EQUIPMENT CHECK            '                        00485000
LINE6    DC    CL27'DATA CHECK                 '                        00486000
LINE7    DC    CL27'OVERRUN (NOT USED)         '                        00487000
LINE8    DC    CL27'NOT USED                   '                        00488000
LINE9    DC    CL27'ENVIRONMENTAL DATA         '                        00489000
LINE10   DC    CL37' |SA SENSE BYTE 1 - MSS BYTE 5       '              00490000
LINE11   DC    CL27'CE MESSAGE                 '                        00491000
LINE12   DC    CL27'MEDIA FAILURE              '                        00492000
LINE13   DC    CL27'READ                       '                        00493000
LINE14   DC    CL27'SENSE ID                   '                        00494000
LINE15   DC    CL27'NOT USED                   '                        00495000
LINE16   DC    CL27'ADT STATUS                 '                        00496000
LINE17   DC    CL27'CTL-I ADT (TE 4)           '                        00497000
LINE18   DC    CL27'BUFFERED LOG DATA          '                        00498000
LINE19   DC    CL37' |CHECK END STATUS - MSS BYTE 13     '              00499000
LINE20   DC    CL27'NOT USED                   '                        00500000
LINE21   DC    CL27'DEMARK CHECK               '                        00501000
LINE22   DC    CL27'ERASED STRIPE              '                        00502000
LINE23   DC    CL27'DR DATA CHECK              '                        00503000
LINE24   DC    CL27'DR OVERRUN                 '                        00504000
LINE25   DC    CL27'DEVICE CHECK               '                        00505000
LINE26   DC    CL27'STRIPE FORMAT CHECK        '                        00506000
LINE27   DC    CL27'STRIPES AVAILABLE 0        '                        00507000
LINE28   DC    CL37' |DRC SENSE BYTE 1 - MSS BYTE 14     '              00508000
LINE29   DC    CL27'WRITE CRC                  '                        00509000
LINE30   DC    CL27'CRC NOT 0                  '                        00510000
LINE31   DC    CL27'UNCORRECTABLE DATA         '                        00511000
LINE32   DC    CL27'AMP SENSOR CHECK           '                        00512000
LINE33   DC    CL27'SYNDROME CHECK             '                        00513000
LINE34   DC    CL27'MULTI SECTION CHECK        '                        00514000
LINE35   DC    CL27'ERASE CHECK                '                        00515000
LINE36   DC    CL27'WRITE STATUS               '                        00516000
LINE37   DC    CL37' |DRC SENSE BYTE 4 - MSS BYTE 15     '              00517000
LINE38   DC    CL27'ID COMPARE CHECK ID FIELD  '                        00518000
LINE39   DC    CL27'ID COMPARE CHECK DATA FIELD'                        00519000
LINE40   DC    CL27'ID FIELD MARK ERROR        '                        00520000
LINE41   DC    CL27'READ ID INDEX CHECK        '                        00521000
LINE42   DC    CL27'DATA FIELD MARK CHECK      '                        00522000
LINE43   DC    CL27'NO DATA FOUND              '                        00523000
LINE44   DC    CL27'DATA GATE CHECK            '                        00524000
LINE45   DC    CL27'NO ID FOUND                '                        00525000
         ORG   LINETITL+1265                                            00526000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00527000
@01      EQU   01                                                       00528000
@02      EQU   02                                                       00529000
@03      EQU   03                                                       00530000
@04      EQU   04                                                       00531000
@05      EQU   05                                                       00532000
@06      EQU   06                                                       00533000
@07      EQU   07                                                       00534000
@08      EQU   08                                                       00535000
@09      EQU   09                                                       00536000
@10      EQU   10                                                       00537000
@11      EQU   11                                                       00538000
@12      EQU   12                                                       00539000
@13      EQU   13                                                       00540000
@14      EQU   14                                                       00541000
@15      EQU   15                                                       00542000
CVTPTR   EQU   @02                                                      00543000
DATPTR   EQU   @10                                                      00544000
CSPTR    EQU   @08                                                      00545000
RETRNREG EQU   @09                                                      00546000
R1       EQU   @01                                                      00547000
OUTPTR   EQU   @05                                                      00548000
OPTR     EQU   @06                                                      00549000
LINEPTR  EQU   @07                                                      00550000
R0       EQU   @00                                                      00551000
R15      EQU   @15                                                      00552000
ISDACVT  EQU   0                                                        00553000
CVTPTRS0 EQU   ISDACVT                                                  00554000
DAT00PTR EQU   CVTPTRS0+72                                              00555000
WORKCALL EQU   CVTPTRS0+96                                              00556000
GET0CALL EQU   ISDACVT+100                                              00557000
SPNOLEN  EQU   GET0CALL                                                 00558000
SPNO     EQU   SPNOLEN                                                  00559000
CORELEN  EQU   SPNOLEN+1                                                00560000
COREADDR EQU   GET0CALL+4                                               00561000
HEXPCALL EQU   ISDACVT+108                                              00562000
PRT0CALL EQU   ISDACVT+120                                              00563000
OUTLINE  EQU   PRT0CALL                                                 00564000
SDADATD  EQU   ISDACVT+256                                              00565000
PRTDATD  EQU   ISDACVT+416                                              00566000
DATWORK  EQU   0                                                        00567000
CSPTRS   EQU   DATWORK                                                  00568000
TSUM     EQU   DATWORK+16                                               00569000
WORK1    EQU   DATWORK+20                                               00570000
WORK2    EQU   WORK1                                                    00571000
I        EQU   DATWORK+28                                               00572000
J        EQU   DATWORK+30                                               00573000
K        EQU   DATWORK+32                                               00574000
L        EQU   DATWORK+34                                               00575000
M        EQU   DATWORK+36                                               00576000
LOOPEND  EQU   DATWORK+38                                               00577000
HOLDDBL  EQU   DATWORK+40                                               00578000
HOLD     EQU   HOLDDBL+4                                                00579000
HOLD1    EQU   HOLD+1                                                   00580000
CSNUMB   EQU   HOLD1                                                    00581000
DATACCM  EQU   0                                                        00582000
BYTEBIT  EQU   DATACCM                                                  00583000
BYTE0    EQU   DATACCM+24                                               00584000
OUTCNTS  EQU   0                                                        00585000
OCOUNT   EQU   OUTCNTS                                                  00586000
TOUTCNTS EQU   0                                                        00587000
TCOUNT   EQU   TOUTCNTS                                                 00588000
OUTPUT   EQU   0                                                        00589000
CNTRL    EQU   OUTPUT                                                   00590000
HEADING  EQU   OUTPUT+1                                                 00591000
CSNO     EQU   HEADING+70                                               00592000
LINE0    EQU   0                                                        00593000
LINE1    EQU   0                                                        00594000
SSIDX    EQU   0                                                        00595000
SSIDCS   EQU   SSIDX                                                    00596000
WORKPTR  EQU   0                                                        00597000
DIVLINES EQU   OUTPUT+37                                                00598000
BITDESC  EQU   OUTPUT+9                                                 00599000
BITNUMB  EQU   OUTPUT+6                                                 00600000
BITBEG   EQU   OUTPUT+1                                                 00601000
SSID0    EQU   OUTPUT+41                                                00602000
SSID1    EQU   OUTPUT+72                                                00603000
SSIDHD1  EQU   OUTPUT+47                                                00604000
SSIDHD2  EQU   OUTPUT+90                                                00605000
CNTSECT  EQU   OUTPUT+38                                                00606000
*                                      START UNREFERENCED COMPONENTS    00607000
SSIDCSX  EQU   SSIDX+1                                                  00608000
TEXT2    EQU   HEADING+71                                               00609000
TEXT     EQU   HEADING                                                  00610000
TSLASH   EQU   TOUTCNTS+5                                               00611000
OSLASH   EQU   OUTCNTS+5                                                00612000
BYTE4    EQU   DATACCM+768                                              00613000
BYTE3    EQU   DATACCM+576                                              00614000
BYTE2    EQU   DATACCM+384                                              00615000
BYTE1    EQU   DATACCM+192                                              00616000
BITN     EQU   BYTE0+24                                                 00617000
BIT0     EQU   BYTE0                                                    00618000
BYTEBIT3 EQU   DATACCM+2                                                00619000
XXX      EQU   HOLD1+2                                                  00620000
SSIDWORK EQU   CSNUMB                                                   00621000
HOLD2    EQU   HOLD                                                     00622000
HOLD0    EQU   HOLDDBL                                                  00623000
WORK3    EQU   WORK1+1                                                  00624000
RESTBITS EQU   WORK2                                                    00625000
CURRBIT  EQU   WORK2                                                    00626000
PRTSA001 EQU   PRTDATD                                                  00627000
SDATEMPS EQU   SDADATD+136                                              00628000
SDASA002 EQU   SDADATD+76                                               00629000
SDAPC001 EQU   SDADATD+72                                               00630000
SDASA001 EQU   SDADATD                                                  00631000
SDARPTID EQU   PRT0CALL+133                                             00632000
LINE     EQU   OUTLINE+1                                                00633000
ANSI     EQU   OUTLINE                                                  00634000
DUMPIDNO EQU   HEXPCALL+8                                               00635000
DUMPLEN  EQU   HEXPCALL+4                                               00636000
DUMPADDR EQU   HEXPCALL                                                 00637000
GEN00PTR EQU   CVTPTRS0+92                                              00638000
CNFG0PTR EQU   CVTPTRS0+88                                              00639000
PWR00PTR EQU   CVTPTRS0+84                                              00640000
APR00PTR EQU   CVTPTRS0+80                                              00641000
DRC00PTR EQU   CVTPTRS0+76                                              00642000
CSB00PTR EQU   CVTPTRS0+68                                              00643000
DCK00PTR EQU   CVTPTRS0+64                                              00644000
EQC00PTR EQU   CVTPTRS0+60                                              00645000
FSC00PTR EQU   CVTPTRS0+56                                              00646000
DHE00PTR EQU   CVTPTRS0+52                                              00647000
SUM00PTR EQU   CVTPTRS0+48                                              00648000
PAD00PTR EQU   CVTPTRS0+44                                              00649000
DCS00PTR EQU   CVTPTRS0+40                                              00650000
LOG00PTR EQU   CVTPTRS0+36                                              00651000
HIST0PTR EQU   CVTPTRS0+32                                              00652000
PRT00PTR EQU   CVTPTRS0+28                                              00653000
GET00PTR EQU   CVTPTRS0+24                                              00654000
TYPE0PTR EQU   CVTPTRS0+20                                              00655000
PARM0PTR EQU   CVTPTRS0+16                                              00656000
SDA00PTR EQU   CVTPTRS0+12                                              00657000
PARMPTR  EQU   CVTPTRS0+8                                               00658000
SDATAPTR EQU   CVTPTRS0+4                                               00659000
DATAPTR  EQU   CVTPTRS0                                                 00660000
*                                      END UNREFERENCED COMPONENTS      00661000
@ENDDATA EQU   *                                                        00662000
         END   ISDADAT1,(C'PLS2229',0603,75312)                         00663000
