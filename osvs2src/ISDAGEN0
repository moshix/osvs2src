         TITLE 'FSC GENERATOR                                          *00001000
                        '                                               00002000
ISDAGEN0 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(8)                                              0001 00007000
         DC    C'ISDAGEN0'                                         0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         ISDAGSPC R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         MVC   @PC00001(4),0(@01)                                  0001 00022000
*                                                                    */ 00023000
*                                                                  0016 00024000
*   /*****************************************************************/ 00025000
*   /*                                                               */ 00026000
*   /* PROGRAM START.                                                */ 00027000
*   /*                                                               */ 00028000
*   /*****************************************************************/ 00029000
*                                                                  0016 00030000
*   CVTPTR=WORKPTR;                /* SET PTR TO SDACVT.    @Y30LB51*/  00031000
         L     @10,@PC00001                                        0016 00032000
         L     CVTPTR,WORKPTR(,@10)                                0016 00033000
*   GENRETCD=0;                     /* INITIALIZE RETURN CODE.     0017 00034000
*                                                            @Y30LB51*/ 00035000
         SLR   GENRETCD,GENRETCD                                   0017 00036000
*   LOGPTR=DATAPTR;                 /* SET PTR TO RECORD.    @Y30LB51*/ 00037000
         L     LOGPTR,DATAPTR(,CVTPTR)                             0018 00038000
*   SENSEPTR=SDATAPTR;              /* SET PTR TO SENSE AREA.      0019 00039000
*                                                            @Y30LB51*/ 00040000
         L     SENSEPTR,SDATAPTR(,CVTPTR)                          0019 00041000
*   LPARMPTR=PARMPTR;               /* SET PTR TO SDAPARMS.  @Y30LB51*/ 00042000
         L     LPARMPTR,PARMPTR(,CVTPTR)                           0020 00043000
*   CALL RECTYPE;                   /* GO CREATE THE FSC.    @Y30LB51*/ 00044000
         BAL   @14,RECTYPE                                         0021 00045000
*   IF GENRETCD=0 THEN              /* IF FSC GENERATED      @Y30LB51*/ 00046000
         LTR   GENRETCD,GENRETCD                                   0022 00047000
         BNZ   @RF00022                                            0022 00048000
*     SDAFLAG0(8)='1'B;             /* SET FSC GENERATED FLAG.     0023 00049000
*                                                            @Y30LB51*/ 00050000
         L     @10,SDA00PTR(,CVTPTR)                               0023 00051000
         OI    SDAFLAG0(@10),B'00000001'                           0023 00052000
*   ELSE                            /* FSC GENERATION FAILED.      0024 00053000
*                                                            @Y30LB51*/ 00054000
*     IF GENRETCD=REALDASD THEN     /* IF REAL DASD RECORD   @Y30LB51*/ 00055000
         B     @RC00022                                            0024 00056000
@RF00022 CH    GENRETCD,@CH00101                                   0024 00057000
         BNE   @RF00024                                            0024 00058000
*       GENRETCD=0;                 /* RESET RETURN CODE.    @Y30LB51*/ 00059000
         SLR   GENRETCD,GENRETCD                                   0025 00060000
*     ELSE                                                         0026 00061000
*       ;                           /* RECORD WAS INVALID.           */ 00062000
@RF00024 DS    0H                                                  0027 00063000
*   RETURN CODE(GENRETCD);          /*                       @Y30LB51   00064000
*                                                                    */ 00065000
@RC00022 L     @13,4(,@13)                                         0027 00066000
         L     @00,@SIZDATD                                        0027 00067000
         LR    @01,@11                                             0027 00068000
         ISDAFSPC R,LV=(0),A=(1)                                        00069000
         LR    @15,@04                                             0027 00070000
         L     @14,12(,@13)                                        0027 00071000
         LM    @00,@12,20(@13)                                     0027 00072000
         BR    @14                                                 0027 00073000
*RECTYPE:                                                          0028 00074000
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/ 00075000
*                                                                  0028 00076000
@EL00001 L     @13,4(,@13)                                         0028 00077000
@EF00001 L     @00,@SIZDATD                                        0028 00078000
         LR    @01,@11                                             0028 00079000
         ISDAFSPC R,LV=(0),A=(1)                                        00080000
@ER00001 LM    @14,@12,12(@13)                                     0028 00081000
         BR    @14                                                 0028 00082000
RECTYPE  ST    @14,@SA00002                                        0028 00083000
*   /*****************************************************************/ 00084000
*   /*                                                               */ 00085000
*   /* THIS ROUTINE WILL DETERMINE THE INPUT RECORD FORMAT.          */ 00086000
*   /* A ROUTINE TO CREATE THE FSC FOR EACH OF THE FORMATS WILL      */ 00087000
*   /* BE CALLED.                                                    */ 00088000
*   /*                                                               */ 00089000
*   /*****************************************************************/ 00090000
*                                                                  0029 00091000
*   IF INDEVTYP='S' THEN            /* IF SUBSYSTEM RECORD   @Y30LB51*/ 00092000
         L     @10,SDA00PTR(,CVTPTR)                               0029 00093000
         CLI   INDEVTYP(@10),C'S'                                  0029 00094000
         BNE   @RF00029                                            0029 00095000
*     IF FSCMSC=0 THEN              /* AND IF FSC IS ZERO    @Y30LB51*/ 00096000
         ICM   @10,3,FSCMSC(SENSEPTR)                              0030 00097000
         BNZ   @RF00030                                            0030 00098000
*       IF FORMATNO(2)='1'B THEN    /* IF FMT 1 RECORD       @Y30LB51*/ 00099000
         TM    FORMATNO(SENSEPTR),B'01000000'                      0031 00100000
         BNO   @RF00031                                            0031 00101000
*         CALL FMTONE;              /* CREATE THE FSC.       @Y30LB51*/ 00102000
         BAL   @14,FMTONE                                          0032 00103000
*       ELSE                        /* NOT FMT 1 RECORD.     @Y30LB51*/ 00104000
*         IF FORMATNO(3)='1'B THEN  /* IF FMT 2 RECORD       @Y30LB51*/ 00105000
         B     @RC00031                                            0033 00106000
@RF00031 TM    FORMATNO(SENSEPTR),B'00100000'                      0033 00107000
         BNO   @RF00033                                            0033 00108000
*           CALL FMTTWO;            /* CREATE THE FSC.       @Y30LB51*/ 00109000
         BAL   @14,FMTTWO                                          0034 00110000
*         ELSE                      /* NOT FMT 2 RECORD.     @Y30LB51*/ 00111000
*           CALL DASDFIVE;          /* MUST BE FMT 5.        @Y30LB51*/ 00112000
         B     @RC00033                                            0035 00113000
@RF00033 BAL   @14,DASDFIVE                                        0035 00114000
*     ELSE                          /* FSC NOT ZERO,         @Y30LB51*/ 00115000
*       GENRETCD=REALDASD;          /* FSC ALREADY GENERATED @ZA05080*/ 00116000
         B     @RC00030                                            0036 00117000
@RF00030 LA    GENRETCD,2                                          0036 00118000
*   ELSE                            /* NOT SUBSYSTEM RECORD. @Y30LB51*/ 00119000
*     IF INDEVTYP='R' THEN          /* IF REAL DASD RECORD   @Y30LB51*/ 00120000
         B     @RC00029                                            0037 00121000
@RF00029 L     @10,SDA00PTR(,CVTPTR)                               0037 00122000
         CLI   INDEVTYP(@10),C'R'                                  0037 00123000
         BNE   @RF00037                                            0037 00124000
*       GENRETCD=REALDASD;          /* REJECT THE RECORD.    @Y30LB51*/ 00125000
         LA    GENRETCD,2                                          0038 00126000
*     ELSE                          /* MUST BE VIRTUAL DASD, @Y30LB51*/ 00127000
*       CALL DASDFIVE;              /* GO BUILD FSC.         @Y30LB51*/ 00128000
         B     @RC00037                                            0039 00129000
@RF00037 BAL   @14,DASDFIVE                                        0039 00130000
*   END RECTYPE;                    /*                       @Y30LB51   00131000
*                                                                    */ 00132000
@EL00002 DS    0H                                                  0040 00133000
@EF00002 DS    0H                                                  0040 00134000
@ER00002 L     @14,@SA00002                                        0040 00135000
         BR    @14                                                 0040 00136000
*FMTONE:                                                           0041 00137000
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/ 00138000
*                                                                  0041 00139000
FMTONE   ST    @14,12(,@13)                                        0041 00140000
*   /*****************************************************************/ 00141000
*   /*                                                               */ 00142000
*   /* THIS ROUTINE WILL CREATE THE FSC FOR A FORMAT ONE RECORD.     */ 00143000
*   /*                                                               */ 00144000
*   /*****************************************************************/ 00145000
*                                                                  0042 00146000
*   IF CNTCHK='02'X THEN            /* IF MICROPROGRAM DETECTED ERROR   00147000
*                                      ONLY                  @Y30LB51*/ 00148000
         CLI   CNTCHK(SENSEPTR),X'02'                              0042 00149000
         BNE   @RF00042                                            0042 00150000
*     DO;                           /* CREATE FSC 23XX.      @Y30LB51*/ 00151000
*       FSCCODE='23'X;              /*                       @Y30LB51*/ 00152000
         MVI   FSCCODE,X'23'                                       0044 00153000
*       FSCBYTE=ERRBYTE;            /* XX = BYTE 23          @Y30LB51*/ 00154000
         MVC   FSCBYTE(1),ERRBYTE(SENSEPTR)                        0045 00155000
*     END;                          /*                       @Y30LB51*/ 00156000
*   ELSE                            /* NOT MICROPROGRAM DETECTED   0047 00157000
*                                      ERROR.                @Y30LB51*/ 00158000
*     IF CNTCHK='08'X THEN          /* IF CTRL INFC CHECK    @Y30LB51*/ 00159000
         B     @RC00042                                            0047 00160000
@RF00042 CLI   CNTCHK(SENSEPTR),X'08'                              0047 00161000
         BNE   @RF00047                                            0047 00162000
*       IF CHNCHK(1)='0'B THEN      /* AND IF NOT TAG ERROR  @Y30LB51*/ 00163000
         TM    CHNCHK(SENSEPTR),B'10000000'                        0048 00164000
         BNZ   @RF00048                                            0048 00165000
*         DO;                       /* CREATE FSC = 20XX.    @Y30LB51*/ 00166000
*           FSCCODE='20'X;          /*                       @Y30LB51*/ 00167000
         MVI   FSCCODE,X'20'                                       0050 00168000
*           FSCBYTE=CHNCHK;         /* XX = BYTE 20          @Y30LB51*/ 00169000
         MVC   FSCBYTE(1),CHNCHK(SENSEPTR)                         0051 00170000
*         END;                      /*                       @Y30LB51*/ 00171000
*       ELSE                        /* TAG ERROR BIT ON,     @Y30LB51*/ 00172000
*         DO;                       /* CREATE FSC = 21XX.    @Y30LB51*/ 00173000
         B     @RC00048                                            0053 00174000
@RF00048 DS    0H                                                  0054 00175000
*           FSCCODE='21'X;          /*                       @Y30LB51*/ 00176000
         MVI   FSCCODE,X'21'                                       0054 00177000
*           FSCBYTE=CHNCHK2;        /* XX = BYTE 21          @Y30LB51*/ 00178000
         MVC   FSCBYTE(1),CHNCHK2(SENSEPTR)                        0055 00179000
*         END;                      /*                       @Y30LB51*/ 00180000
*     ELSE                          /* NOT CTRL INFC CHECK.  @Y30LB51*/ 00181000
*       IF CNTCHK^='00'X THEN       /* IF CONTROL CHECK      @Y30LB51*/ 00182000
         B     @RC00047                                            0057 00183000
@RF00047 CLI   CNTCHK(SENSEPTR),X'00'                              0057 00184000
         BE    @RF00057                                            0057 00185000
*         DO;                       /* CREATE FSC = 22XX.    @Y30LB51*/ 00186000
*           FSCCODE='22'X;          /*                       @Y30LB51*/ 00187000
         MVI   FSCCODE,X'22'                                       0059 00188000
*           FSCBYTE=CNTCHK;         /* XX = BYTE 15          @Y30LB51*/ 00189000
         MVC   FSCBYTE(1),CNTCHK(SENSEPTR)                         0060 00190000
*         END;                      /*                       @Y30LB51*/ 00191000
*       ELSE                        /* NOT CONTROL CHECK.    @Y30LB51*/ 00192000
*         FSCBUILD=''B;             /* CREATE ZERO FSC.      @Y30LB51*/ 00193000
         B     @RC00057                                            0062 00194000
@RF00057 XC    FSCBUILD(2),FSCBUILD                                0062 00195000
*   FSCMSC=FSCBUILD;                /* PUT FSC IN RECORD.    @Y30LB51*/ 00196000
@RC00057 DS    0H                                                  0063 00197000
@RC00047 DS    0H                                                  0063 00198000
@RC00042 MVC   FSCMSC(2,SENSEPTR),FSCBUILD                         0063 00199000
*   END FMTONE;                     /*                       @Y30LB51   00200000
*                                                                    */ 00201000
@EL00003 DS    0H                                                  0064 00202000
@EF00003 DS    0H                                                  0064 00203000
@ER00003 L     @14,12(,@13)                                        0064 00204000
         BR    @14                                                 0064 00205000
*FMTTWO:                                                           0065 00206000
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/ 00207000
*                                                                  0065 00208000
FMTTWO   ST    @14,12(,@13)                                        0065 00209000
*   /*****************************************************************/ 00210000
*   /*                                                               */ 00211000
*   /* THIS ROUTINE WILL CREATE THE FSC FOR A FORMAT TWO RECORD.     */ 00212000
*   /*                                                               */ 00213000
*   /*****************************************************************/ 00214000
*                                                                  0066 00215000
*   IF ERRLAT1(2)='1'B THEN         /* IF CLOCK BIT ON       @Y30LB51*/ 00216000
         TM    ERRLAT1(SENSEPTR),B'01000000'                       0066 00217000
         BNO   @RF00066                                            0066 00218000
*     DO;                           /* CREATE FSC = 31XX.    @Y30LB51*/ 00219000
*       FSCCODE='31'X;              /*                       @Y30LB51*/ 00220000
         MVI   FSCCODE,X'31'                                       0068 00221000
*       FSCBYTE=ERRLAT1;            /* XX = BYTE 24          @Y30LB51*/ 00222000
         MVC   FSCBYTE(1),ERRLAT1(SENSEPTR)                        0069 00223000
*     END;                          /*                       @Y30LB51*/ 00224000
*   ELSE                            /* NOT CLOCK ERROR.      @Y30LB51*/ 00225000
*     IF ERRLAT2='00'X THEN         /* IF ERROR LATCH = ZERO @Y30LB51*/ 00226000
         B     @RC00066                                            0071 00227000
@RF00066 CLI   ERRLAT2(SENSEPTR),X'00'                             0071 00228000
         BNE   @RF00071                                            0071 00229000
*       IF(ERRLAT1='00'X)|(ERRLAT1='80'X) THEN/* IF ERROR LATCH 1 IS    00230000
*                                      '00' OR '80'          @ZA00692*/ 00231000
         CLI   ERRLAT1(SENSEPTR),X'00'                             0072 00232000
         BE    @RT00072                                            0072 00233000
         CLI   ERRLAT1(SENSEPTR),X'80'                             0072 00234000
         BNE   @RF00072                                            0072 00235000
@RT00072 DS    0H                                                  0073 00236000
*         DO;                       /* CREATE FSC = 39XX.    @Y30LB51*/ 00237000
*           FSCCODE='39'X;          /*                       @Y30LB51*/ 00238000
         MVI   FSCCODE,X'39'                                       0074 00239000
*           FSCBYTE=SUBFMTMG;       /* XX = BYTE 11          @Y30LB51*/ 00240000
         MVC   FSCBYTE(1),SUBFMTMG(SENSEPTR)                       0075 00241000
*         END;                      /*                       @Y30LB51*/ 00242000
*       ELSE                        /* ERROR LATCH 1 NOT 00 OR 08. 0077 00243000
*                                                            @Y30LB51*/ 00244000
*         IF ERRLAT1(1)='1'B THEN   /* IF ERROR LATCH 1 BIT 0 ON   0077 00245000
*                                                            @Y30LB51*/ 00246000
         B     @RC00072                                            0077 00247000
@RF00072 TM    ERRLAT1(SENSEPTR),B'10000000'                       0077 00248000
         BNO   @RF00077                                            0077 00249000
*           DO;                     /* CREATE FSC = 33XX.    @Y30LB51*/ 00250000
*             FSCCODE='33'X;        /*                       @Y30LB51*/ 00251000
         MVI   FSCCODE,X'33'                                       0079 00252000
*             FSCBYTE=ERRLAT1;      /* XX = BYTE 24          @Y30LB51*/ 00253000
         MVC   FSCBYTE(1),ERRLAT1(SENSEPTR)                        0080 00254000
*           END;                    /*                       @Y30LB51*/ 00255000
*         ELSE                      /* ERROR LATCH 1 BIT 0 OFF.    0082 00256000
*                                                            @Y30LB51*/ 00257000
*           DO;                     /* CREATE FSC = 35XX.    @Y30LB51*/ 00258000
         B     @RC00077                                            0082 00259000
@RF00077 DS    0H                                                  0083 00260000
*             FSCCODE='35'X;        /*                       @Y30LB51*/ 00261000
         MVI   FSCCODE,X'35'                                       0083 00262000
*             FSCBYTE=ERRLAT1;      /* XX = BYTE 24          @Y30LB51*/ 00263000
         MVC   FSCBYTE(1),ERRLAT1(SENSEPTR)                        0084 00264000
*           END;                    /*                       @Y30LB51*/ 00265000
*     ELSE                          /* ERROR LATCH 2 NOT ZERO.     0086 00266000
*                                                            @Y30LB51*/ 00267000
*       IF ERRLAT1(1)='1'B THEN     /* IF ERROR LATCH 1 BIT 1 ON   0086 00268000
*                                                            @Y30LB51*/ 00269000
         B     @RC00071                                            0086 00270000
@RF00071 TM    ERRLAT1(SENSEPTR),B'10000000'                       0086 00271000
         BNO   @RF00086                                            0086 00272000
*         DO;                       /* CREATE FSC = 32XX.    @Y30LB51*/ 00273000
*           FSCCODE='32'X;          /*                       @Y30LB51*/ 00274000
         MVI   FSCCODE,X'32'                                       0088 00275000
*           FSCBYTE=ERRLAT2;        /* XX = BYTE 25          @Y30LB51*/ 00276000
         MVC   FSCBYTE(1),ERRLAT2(SENSEPTR)                        0089 00277000
*         END;                      /*                       @Y30LB51*/ 00278000
*       ELSE                        /* ERROR LATCH 1 BIT 1 OFF.    0091 00279000
*                                                            @Y30LB51*/ 00280000
*         DO;                       /* CREATE FSC = 34XX.    @Y30LB51*/ 00281000
         B     @RC00086                                            0091 00282000
@RF00086 DS    0H                                                  0092 00283000
*           FSCCODE='34'X;          /*                       @Y30LB51*/ 00284000
         MVI   FSCCODE,X'34'                                       0092 00285000
*           FSCBYTE=ERRLAT2;        /* XX = BYTE 25          @Y30LB51*/ 00286000
         MVC   FSCBYTE(1),ERRLAT2(SENSEPTR)                        0093 00287000
*         END;                      /*                       @Y30LB51*/ 00288000
*   FSCMSC=FSCBUILD;                /* PUT FSC IN RECORD.    @Y30LB51*/ 00289000
@RC00086 DS    0H                                                  0095 00290000
@RC00071 DS    0H                                                  0095 00291000
@RC00066 MVC   FSCMSC(2,SENSEPTR),FSCBUILD                         0095 00292000
*   END FMTTWO;                     /*                       @Y30LB51   00293000
*                                                                    */ 00294000
@EL00004 DS    0H                                                  0096 00295000
@EF00004 DS    0H                                                  0096 00296000
@ER00004 L     @14,12(,@13)                                        0096 00297000
         BR    @14                                                 0096 00298000
*DASDFIVE:                                                         0097 00299000
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/ 00300000
*                                                                  0097 00301000
DASDFIVE ST    @14,@SA00005                                        0097 00302000
*   /*****************************************************************/ 00303000
*   /*                                                               */ 00304000
*   /* THIS ROUTINE WILL CREATE THE FSC FOR A FORMAT 5 OR HOST DASD  */ 00305000
*   /* RECORD.                                                       */ 00306000
*   /*                                                               */ 00307000
*   /*****************************************************************/ 00308000
*                                                                  0098 00309000
*   IF INDEVTYP='S' THEN            /* IF FMT 5 RECORD       @Y30LB51*/ 00310000
         L     @10,SDA00PTR(,CVTPTR)                               0098 00311000
         CLI   INDEVTYP(@10),C'S'                                  0098 00312000
         BNE   @RF00098                                            0098 00313000
*     SENSEPTR=SENSEPTR+4;          /* ADJUST POINTER.       @Y30LB51*/ 00314000
         AH    SENSEPTR,@CH00105                                   0099 00315000
*   ELSE                                                           0100 00316000
*     ;                             /* DASD RECORD.          @Y30LB51*/ 00317000
@RF00098 DS    0H                                                  0101 00318000
*   IF FSCAREA=0 THEN               /* IF FSC IS ZERO        @Y30LB51*/ 00319000
         ICM   @10,3,FSCAREA(SENSEPTR)                             0101 00320000
         BNZ   @RF00101                                            0101 00321000
*     DO;                           /* CREATE THE FSC.       @Y30LB51*/ 00322000
*       WORKBYTE=FMTMSG;            /* GET SUBFMT AND MSG CODE     0103 00323000
*                                                            @Y30LB51*/ 00324000
         MVC   WORKBYTE(1),FMTMSG(SENSEPTR)                        0103 00325000
*       WORKBYTE=WORKBYTE&FMTMASK;  /* AND ISOLATE SUBFMT.   @Y30LB51*/ 00326000
         NI    WORKBYTE,X'F0'                                      0104 00327000
*       IF WORKBYTE='00'X THEN      /* IF SUBFMT 0 RECORD    @Y30LB51*/ 00328000
         CLI   WORKBYTE,X'00'                                      0105 00329000
         BNE   @RF00105                                            0105 00330000
*         DO;                       /* CREATE FSC = 09XX.    @Y30LB51*/ 00331000
*           FSCCODE='09'X;          /*                       @Y30LB51*/ 00332000
         MVI   FSCCODE,X'09'                                       0107 00333000
*           FSCBYTE=FMTMSG;         /* XX = BYTE 7           @Y30LB51*/ 00334000
         MVC   FSCBYTE(1),FMTMSG(SENSEPTR)                         0108 00335000
*         END;                      /*                       @Y30LB51*/ 00336000
*       ELSE                        /* NOT SUBFMT 0 RECORD.  @Y30LB51*/ 00337000
*         IF WORKBYTE='20'X THEN    /* IF SUBFMT 2 RECORD    @Y30LB51*/ 00338000
         B     @RC00105                                            0110 00339000
@RF00105 CLI   WORKBYTE,X'20'                                      0110 00340000
         BNE   @RF00110                                            0110 00341000
*           CALL SUBFMT2;           /* CREATE THE FSC.       @Y30LB51*/ 00342000
         BAL   @14,SUBFMT2                                         0111 00343000
*         ELSE                      /* SUBFMT 3 RECORD,      @Y30LB51*/ 00344000
*           CALL SUBFMT3;           /* CREATE THE FSC.       @Y30LB51*/ 00345000
         B     @RC00110                                            0112 00346000
@RF00110 BAL   @14,SUBFMT3                                         0112 00347000
*       FSCAREA=FSCBUILD;           /* PUT FSC IN RECORD.    @Y30LB51*/ 00348000
@RC00110 DS    0H                                                  0113 00349000
@RC00105 MVC   FSCAREA(2,SENSEPTR),FSCBUILD                        0113 00350000
*     END;                          /*                       @Y30LB51*/ 00351000
*   ELSE                            /* FSC NOT ZERO.         @Y30LB51*/ 00352000
*     GENRETCD=REALDASD;            /* FSC ALREADY GENERATED @ZA05080*/ 00353000
         B     @RC00101                                            0115 00354000
@RF00101 LA    GENRETCD,2                                          0115 00355000
*   END DASDFIVE;                   /*                       @Y30LB51   00356000
*                                                                    */ 00357000
@EL00005 DS    0H                                                  0116 00358000
@EF00005 DS    0H                                                  0116 00359000
@ER00005 L     @14,@SA00005                                        0116 00360000
         BR    @14                                                 0116 00361000
*SUBFMT2:                                                          0117 00362000
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/ 00363000
*                                                                  0117 00364000
SUBFMT2  ST    @14,12(,@13)                                        0117 00365000
*   /*****************************************************************/ 00366000
*   /*                                                               */ 00367000
*   /* THIS ROUTINE WILL CREATE THE FSC FOR A SUBFORMAT TWO RECORD.  */ 00368000
*   /*                                                               */ 00369000
*   /*****************************************************************/ 00370000
*                                                                  0118 00371000
*   IF BYTE11='00'X THEN            /* IF BYTE 11 IS ZERO    @Y30LB51*/ 00372000
         CLI   BYTE11(SENSEPTR),X'00'                              0118 00373000
         BNE   @RF00118                                            0118 00374000
*     DO;                           /* CREATE FSC '29XX'.    @Y30LB51*/ 00375000
*       FSCCODE='29'X;              /*                       @Y30LB51*/ 00376000
         MVI   FSCCODE,X'29'                                       0120 00377000
*       FSCBYTE=FMTMSG;             /* XX = BYTE 7           @Y30LB51*/ 00378000
         MVC   FSCBYTE(1),FMTMSG(SENSEPTR)                         0121 00379000
*     END;                          /*                       @Y30LB51*/ 00380000
*   ELSE                            /* BYTE 11 IS NOT ZERO.  @Y30LB51*/ 00381000
*     IF BYTE11='08'X THEN          /* IF BYTE 11 IS '08'    @Y30LB51*/ 00382000
         B     @RC00118                                            0123 00383000
@RF00118 CLI   BYTE11(SENSEPTR),X'08'                              0123 00384000
         BNE   @RF00123                                            0123 00385000
*       DO;                         /* CREATE FSC '21XX'.    @Y30LB51*/ 00386000
*         FSCCODE='21'X;            /*                       @Y30LB51*/ 00387000
         MVI   FSCCODE,X'21'                                       0125 00388000
*         FSCBYTE=BYTE20;           /* XX = BYTE 20          @Y30LB51*/ 00389000
         MVC   FSCBYTE(1),BYTE20(SENSEPTR)                         0126 00390000
*       END;                        /*                       @Y30LB51*/ 00391000
*     ELSE                          /* BYTE 11 IS NOT ZERO.  @Y30LB51*/ 00392000
*       DO;                         /* CREATE FSC '22XX'.    @Y30LB51*/ 00393000
         B     @RC00123                                            0128 00394000
@RF00123 DS    0H                                                  0129 00395000
*         FSCCODE='22'X;            /*                       @Y30LB51*/ 00396000
         MVI   FSCCODE,X'22'                                       0129 00397000
*         FSCBYTE=BYTE11;           /* XX = BYTE 11          @Y30LB51*/ 00398000
         MVC   FSCBYTE(1),BYTE11(SENSEPTR)                         0130 00399000
*       END;                        /*                       @Y30LB51*/ 00400000
*   END SUBFMT2;                    /*                       @Y30LB51   00401000
*                                                                    */ 00402000
@EL00006 DS    0H                                                  0132 00403000
@EF00006 DS    0H                                                  0132 00404000
@ER00006 L     @14,12(,@13)                                        0132 00405000
         BR    @14                                                 0132 00406000
*SUBFMT3:                                                          0133 00407000
*   PROC OPTIONS(SAVE(14));         /*                       @Y30LB51*/ 00408000
*                                                                  0133 00409000
SUBFMT3  ST    @14,12(,@13)                                        0133 00410000
*   /*****************************************************************/ 00411000
*   /*                                                               */ 00412000
*   /* THIS ROUTINE WILL CREATE THE FSC FOR A SUBFORMAT THREE RECORD.*/ 00413000
*   /*                                                               */ 00414000
*   /*****************************************************************/ 00415000
*                                                                  0134 00416000
*   IF CLOCKERR='1'B THEN           /* IF BIT 1 BYTE 10 IS ON      0134 00417000
*                                                            @Y30LB51*/ 00418000
         TM    CLOCKERR(SENSEPTR),B'01000000'                      0134 00419000
         BNO   @RF00134                                            0134 00420000
*     DO;                           /* CREATE FSC '31XX'.    @Y30LB51*/ 00421000
*       FSCCODE='31'X;              /*                       @Y30LB51*/ 00422000
         MVI   FSCCODE,X'31'                                       0136 00423000
*       FSCBYTE=BYTE10;             /* XX = BYTE 10          @Y30LB51*/ 00424000
         MVC   FSCBYTE(1),BYTE10(SENSEPTR)                         0137 00425000
*     END;                          /*                       @Y30LB51*/ 00426000
*   ELSE                            /* BIT 1 BYTE 10 IS OFF. @Y30LB51*/ 00427000
*     IF BYTE11='00'X THEN          /* IF BYTE 11 IS ZERO    @Y30LB51*/ 00428000
         B     @RC00134                                            0139 00429000
@RF00134 CLI   BYTE11(SENSEPTR),X'00'                              0139 00430000
         BNE   @RF00139                                            0139 00431000
*       IF(BYTE10='00'X)|(BYTE10='80'X) THEN/* AND IF BYTE 10 IS ZERO   00432000
*                                      OR '80'               @Y30LB51*/ 00433000
         CLI   BYTE10(SENSEPTR),X'00'                              0140 00434000
         BE    @RT00140                                            0140 00435000
         CLI   BYTE10(SENSEPTR),X'80'                              0140 00436000
         BNE   @RF00140                                            0140 00437000
@RT00140 DS    0H                                                  0141 00438000
*         DO;                       /* CREATE FSC '39XX'.    @Y30LB51*/ 00439000
*           FSCCODE='39'X;          /*                       @Y30LB51*/ 00440000
         MVI   FSCCODE,X'39'                                       0142 00441000
*           FSCBYTE=FMTMSG;         /* XX = BYTE 7           @Y30LB51*/ 00442000
         MVC   FSCBYTE(1),FMTMSG(SENSEPTR)                         0143 00443000
*         END;                      /*                       @Y30LB51*/ 00444000
*       ELSE                        /* BYTE 10 NOT ZERO OR '08'.   0145 00445000
*                                                            @Y30LB51*/ 00446000
*         IF TIMEBIT='1'B THEN      /* IF BIT 0 BYTE 10 IS ON      0145 00447000
*                                                            @Y30LB51*/ 00448000
         B     @RC00140                                            0145 00449000
@RF00140 TM    TIMEBIT(SENSEPTR),B'10000000'                       0145 00450000
         BNO   @RF00145                                            0145 00451000
*           DO;                     /* CREATE FSC '33XX'.    @Y30LB51*/ 00452000
*             FSCCODE='33'X;        /*                       @Y30LB51*/ 00453000
         MVI   FSCCODE,X'33'                                       0147 00454000
*             FSCBYTE=BYTE10;       /* XX = BYTE 10          @Y30LB51*/ 00455000
         MVC   FSCBYTE(1),BYTE10(SENSEPTR)                         0148 00456000
*           END;                    /*                       @Y30LB51*/ 00457000
*         ELSE                      /* BIT 0, BYTE 10 IS OFF.      0150 00458000
*                                                            @Y30LB51*/ 00459000
*           DO;                     /* CREATE FSC '35XX'.    @Y30LB51*/ 00460000
         B     @RC00145                                            0150 00461000
@RF00145 DS    0H                                                  0151 00462000
*             FSCCODE='35'X;        /*                       @Y30LB51*/ 00463000
         MVI   FSCCODE,X'35'                                       0151 00464000
*             FSCBYTE=BYTE10;       /* XX = BYTE 10          @Y30LB51*/ 00465000
         MVC   FSCBYTE(1),BYTE10(SENSEPTR)                         0152 00466000
*           END;                    /*                       @Y30LB51*/ 00467000
*     ELSE                          /* BYTE 11 IS NOT ZERO.  @Y30LB51*/ 00468000
*       IF TIMEBIT='1'B THEN        /* IF BIT 0 BYTE 10 IS ON      0154 00469000
*                                                            @Y30LB51*/ 00470000
         B     @RC00139                                            0154 00471000
@RF00139 TM    TIMEBIT(SENSEPTR),B'10000000'                       0154 00472000
         BNO   @RF00154                                            0154 00473000
*         DO;                       /* CREATE FSC '32XX'.    @Y30LB51*/ 00474000
*           FSCCODE='32'X;          /*                       @Y30LB51*/ 00475000
         MVI   FSCCODE,X'32'                                       0156 00476000
*           FSCBYTE=BYTE11;         /* XX = BYTE 11          @Y30LB51*/ 00477000
         MVC   FSCBYTE(1),BYTE11(SENSEPTR)                         0157 00478000
*         END;                      /*                       @Y30LB51*/ 00479000
*       ELSE                        /* BIT 0, BYTE 10 IS OFF.      0159 00480000
*                                                            @Y30LB51*/ 00481000
*         DO;                       /* CREATE FSC '34XX'.    @Y30LB51*/ 00482000
         B     @RC00154                                            0159 00483000
@RF00154 DS    0H                                                  0160 00484000
*           FSCCODE='34'X;          /*                       @Y30LB51*/ 00485000
         MVI   FSCCODE,X'34'                                       0160 00486000
*           FSCBYTE=BYTE11;         /* XX = BYTE 11          @Y30LB51*/ 00487000
         MVC   FSCBYTE(1),BYTE11(SENSEPTR)                         0161 00488000
*         END;                      /*                       @Y30LB51*/ 00489000
*   END SUBFMT3;                    /*                       @Y30LB51   00490000
*                                                                    */ 00491000
@EL00007 DS    0H                                                  0163 00492000
@EF00007 DS    0H                                                  0163 00493000
@ER00007 L     @14,12(,@13)                                        0163 00494000
         BR    @14                                                 0163 00495000
*   END ISDAGEN0                    /*                       @Y30LB51*/ 00496000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00497000
*/*%INCLUDE SYSLIB  (ISDACVT )                                        * 00498000
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                        * 00499000
*/*%INCLUDE SYSLIB  (ISDAWORK)                                        * 00500000
*/*%INCLUDE SYSLIB  (ISDAMSCS)                                        * 00501000
*;                                                                 0164 00502000
@DATA    DS    0H                                                       00503000
@CH00101 DC    H'2'                                                     00504000
@CH00105 DC    H'4'                                                     00505000
@DATD    DSECT                                                          00506000
         DS    0F                                                       00507000
@SA00001 DS    18F                                                      00508000
@PC00001 DS    1F                                                       00509000
@SA00002 DS    1F                                                       00510000
@SA00005 DS    1F                                                       00511000
ISDAGEN0 CSECT                                                          00512000
         DS    0F                                                       00513000
@DATD    DSECT                                                          00514000
         DS    0D                                                       00515000
FSCBUILD DS    CL2                                                      00516000
         ORG   FSCBUILD                                                 00517000
FSCCODE  DS    CL1                                                      00518000
FSCBYTE  DS    CL1                                                      00519000
         ORG   FSCBUILD+2                                               00520000
WORKBYTE DS    BL1                                                      00521000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00522000
@ENDDATD EQU   *                                                        00523000
ISDAGEN0 CSECT                                                          00524000
         NOPR  ((@ENDDATD-@DATD)/161*16)                                00525000
         DS    0F                                                       00526000
@SIZDATD DC    AL1(0)                                                   00527000
         DC    AL3(@ENDDATD-@DATD)                                      00528000
@CV00160 DC    V(ISDAFREE)                                              00529000
@CV00159 DC    V(ISDAGET1)                                              00530000
         DS    0D                                                       00531000
PATCH    DS    CL50                                                     00532000
         ORG   PATCH                                                    00533000
@NM00003 DC    50X'00'                                                  00534000
         ORG   PATCH+50                                                 00535000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00536000
@01      EQU   01                                                       00537000
@02      EQU   02                                                       00538000
@03      EQU   03                                                       00539000
@04      EQU   04                                                       00540000
@05      EQU   05                                                       00541000
@06      EQU   06                                                       00542000
@07      EQU   07                                                       00543000
@08      EQU   08                                                       00544000
@09      EQU   09                                                       00545000
@10      EQU   10                                                       00546000
@11      EQU   11                                                       00547000
@12      EQU   12                                                       00548000
@13      EQU   13                                                       00549000
@14      EQU   14                                                       00550000
@15      EQU   15                                                       00551000
SENSEPTR EQU   @03                                                      00552000
LOGPTR   EQU   @03                                                      00553000
GENRETCD EQU   @04                                                      00554000
LPARMPTR EQU   @05                                                      00555000
CVTPTR   EQU   @02                                                      00556000
RF       EQU   @15                                                      00557000
ISDACVT  EQU   0                                                        00558000
CVTPTRS0 EQU   ISDACVT                                                  00559000
DATAPTR  EQU   CVTPTRS0                                                 00560000
SDATAPTR EQU   CVTPTRS0+4                                               00561000
PARMPTR  EQU   CVTPTRS0+8                                               00562000
SDA00PTR EQU   CVTPTRS0+12                                              00563000
GET0CALL EQU   ISDACVT+100                                              00564000
SPNOLEN  EQU   GET0CALL                                                 00565000
HEXPCALL EQU   ISDACVT+108                                              00566000
PRT0CALL EQU   ISDACVT+120                                              00567000
OUTLINE  EQU   PRT0CALL                                                 00568000
SDADATD  EQU   ISDACVT+256                                              00569000
PRTDATD  EQU   ISDACVT+416                                              00570000
ISDAPRMS EQU   0                                                        00571000
CINPUT   EQU   ISDAPRMS                                                 00572000
CSTART   EQU   ISDAPRMS+2                                               00573000
CEND     EQU   ISDAPRMS+6                                               00574000
CFSCONLY EQU   ISDAPRMS+13                                              00575000
CSSIDF   EQU   ISDAPRMS+17                                              00576000
CSERIAL  EQU   ISDAPRMS+21                                              00577000
CREPORTS EQU   ISDAPRMS+33                                              00578000
ISDAWORK EQU   0                                                        00579000
INFLAGS  EQU   ISDAWORK                                                 00580000
INDEVTYP EQU   INFLAGS+2                                                00581000
SDAFLAG0 EQU   INFLAGS+3                                                00582000
INRECCUA EQU   ISDAWORK+6                                               00583000
ISDAMSCS EQU   0                                                        00584000
SUBSYSID EQU   ISDAMSCS+1                                               00585000
SSID     EQU   SUBSYSID                                                 00586000
FORMATNO EQU   ISDAMSCS+3                                               00587000
SUBSENSE EQU   ISDAMSCS+4                                               00588000
SUBFMTMG EQU   SUBSENSE+7                                               00589000
MSCRECD  EQU   0                                                        00590000
CNTCHK   EQU   MSCRECD+15                                               00591000
CHNCHK   EQU   MSCRECD+20                                               00592000
CHNCHK2  EQU   MSCRECD+21                                               00593000
ERRBYTE  EQU   MSCRECD+23                                               00594000
ERRLAT1  EQU   MSCRECD+24                                               00595000
ERRLAT2  EQU   MSCRECD+25                                               00596000
FSCMSC   EQU   MSCRECD+26                                               00597000
DASDREC  EQU   0                                                        00598000
FMTMSG   EQU   DASDREC+7                                                00599000
BYTE10   EQU   DASDREC+10                                               00600000
TIMEBIT  EQU   BYTE10                                                   00601000
CLOCKERR EQU   BYTE10                                                   00602000
BYTE11   EQU   DASDREC+11                                               00603000
BYTE20   EQU   DASDREC+20                                               00604000
FSCAREA  EQU   DASDREC+22                                               00605000
WORKPTR  EQU   0                                                        00606000
*                                      START UNREFERENCED COMPONENTS    00607000
@NM00016 EQU   DASDREC+24                                               00608000
@NM00015 EQU   DASDREC+21                                               00609000
@NM00014 EQU   DASDREC+12                                               00610000
@NM00013 EQU   BYTE10                                                   00611000
@NM00012 EQU   DASDREC+8                                                00612000
MESSAGE  EQU   FMTMSG                                                   00613000
FORMAT   EQU   FMTMSG                                                   00614000
@NM00011 EQU   DASDREC                                                  00615000
@NM00010 EQU   MSCRECD+28                                               00616000
@NM00009 EQU   MSCRECD+22                                               00617000
@NM00008 EQU   MSCRECD+16                                               00618000
@NM00007 EQU   MSCRECD                                                  00619000
SANOMSCD EQU   SUBSENSE+27                                              00620000
RCYLMSCD EQU   SUBSENSE+25                                              00621000
RUAMSCD  EQU   SUBSENSE+24                                              00622000
MSCFSC   EQU   SUBSENSE+22                                              00623000
@NM00006 EQU   SUBSENSE+21                                              00624000
RUADASD  EQU   SUBSENSE+20                                              00625000
DASDFSC  EQU   SUBSENSE+18                                              00626000
@NM00005 EQU   SUBSENSE+8                                               00627000
MSGCODEN EQU   SUBFMTMG                                                 00628000
SUBFMTNO EQU   SUBFMTMG                                                 00629000
SALOWAD2 EQU   SUBSENSE+6                                               00630000
SARETRY  EQU   SUBSENSE+5                                               00631000
@NM00004 EQU   SUBSENSE+4                                               00632000
DASDFMTN EQU   SUBSENSE+3                                               00633000
SALOWADD EQU   SUBSENSE+2                                               00634000
SUBSTAT5 EQU   SUBSENSE+1                                               00635000
SUBSTAT4 EQU   SUBSENSE                                                 00636000
SSIDDEVT EQU   SSID+1                                                   00637000
SSIDLIBN EQU   SSID+1                                                   00638000
SSIDTYPE EQU   SSID                                                     00639000
SSIDFLAG EQU   SUBSYSID                                                 00640000
STATUS   EQU   ISDAMSCS                                                 00641000
DEVPTR   EQU   ISDAWORK+16                                              00642000
NOUTREC  EQU   ISDAWORK+12                                              00643000
NINREC   EQU   ISDAWORK+8                                               00644000
CUABYTE1 EQU   INRECCUA+1                                               00645000
CUABYTE0 EQU   INRECCUA                                                 00646000
DLENGTH  EQU   ISDAWORK+4                                               00647000
INSOURCE EQU   INFLAGS+1                                                00648000
IRECTYPE EQU   INFLAGS                                                  00649000
CTRACE   EQU   ISDAPRMS+48                                              00650000
CGEN     EQU   ISDAPRMS+47                                              00651000
CDETAIL  EQU   ISDAPRMS+46                                              00652000
CPERIOD  EQU   ISDAPRMS+45                                              00653000
CPWR     EQU   CREPORTS+11                                              00654000
CAPRSUU  EQU   CREPORTS+10                                              00655000
CDRC     EQU   CREPORTS+9                                               00656000
CDAT     EQU   CREPORTS+8                                               00657000
CCSBCSF  EQU   CREPORTS+7                                               00658000
CDCKTLX  EQU   CREPORTS+6                                               00659000
CEQC     EQU   CREPORTS+5                                               00660000
CFSC     EQU   CREPORTS+4                                               00661000
CDHEDHU  EQU   CREPORTS+3                                               00662000
CSUM     EQU   CREPORTS+2                                               00663000
CPAD     EQU   CREPORTS+1                                               00664000
CDCS     EQU   CREPORTS                                                 00665000
CSERNO   EQU   CSERIAL+4                                                00666000
@NM00002 EQU   CSERIAL+3                                                00667000
CIBM     EQU   CSERIAL                                                  00668000
CRATIO   EQU   ISDAPRMS+19                                              00669000
CSSID    EQU   CSSIDF                                                   00670000
@NM00001 EQU   CSSIDF                                                   00671000
CFSC34   EQU   CFSCONLY+2                                               00672000
CFSC12   EQU   CFSCONLY                                                 00673000
CTYPE    EQU   ISDAPRMS+11                                              00674000
CSUMMARY EQU   ISDAPRMS+10                                              00675000
CENDDAY  EQU   CEND+2                                                   00676000
CENDYEAR EQU   CEND                                                     00677000
CSTDAY   EQU   CSTART+2                                                 00678000
CSTYEAR  EQU   CSTART                                                   00679000
CHISTIN  EQU   CINPUT+1                                                 00680000
CLOGIN   EQU   CINPUT                                                   00681000
PRTSA001 EQU   PRTDATD                                                  00682000
SDATEMPS EQU   SDADATD+136                                              00683000
SDASA002 EQU   SDADATD+76                                               00684000
SDAPC001 EQU   SDADATD+72                                               00685000
SDASA001 EQU   SDADATD                                                  00686000
SDARPTID EQU   PRT0CALL+133                                             00687000
LINE     EQU   OUTLINE+1                                                00688000
ANSI     EQU   OUTLINE                                                  00689000
DUMPIDNO EQU   HEXPCALL+8                                               00690000
DUMPLEN  EQU   HEXPCALL+4                                               00691000
DUMPADDR EQU   HEXPCALL                                                 00692000
COREADDR EQU   GET0CALL+4                                               00693000
CORELEN  EQU   SPNOLEN+1                                                00694000
SPNO     EQU   SPNOLEN                                                  00695000
WORKCALL EQU   CVTPTRS0+96                                              00696000
GEN00PTR EQU   CVTPTRS0+92                                              00697000
CNFG0PTR EQU   CVTPTRS0+88                                              00698000
PWR00PTR EQU   CVTPTRS0+84                                              00699000
APR00PTR EQU   CVTPTRS0+80                                              00700000
DRC00PTR EQU   CVTPTRS0+76                                              00701000
DAT00PTR EQU   CVTPTRS0+72                                              00702000
CSB00PTR EQU   CVTPTRS0+68                                              00703000
DCK00PTR EQU   CVTPTRS0+64                                              00704000
EQC00PTR EQU   CVTPTRS0+60                                              00705000
FSC00PTR EQU   CVTPTRS0+56                                              00706000
DHE00PTR EQU   CVTPTRS0+52                                              00707000
SUM00PTR EQU   CVTPTRS0+48                                              00708000
PAD00PTR EQU   CVTPTRS0+44                                              00709000
DCS00PTR EQU   CVTPTRS0+40                                              00710000
LOG00PTR EQU   CVTPTRS0+36                                              00711000
HIST0PTR EQU   CVTPTRS0+32                                              00712000
PRT00PTR EQU   CVTPTRS0+28                                              00713000
GET00PTR EQU   CVTPTRS0+24                                              00714000
TYPE0PTR EQU   CVTPTRS0+20                                              00715000
PARM0PTR EQU   CVTPTRS0+16                                              00716000
*                                      END UNREFERENCED COMPONENTS      00717000
@RC00037 EQU   @EL00002                                                 00718000
@RC00029 EQU   @EL00002                                                 00719000
@RC00048 EQU   @RC00047                                                 00720000
@RC00077 EQU   @RC00071                                                 00721000
@RC00072 EQU   @RC00071                                                 00722000
@RC00101 EQU   @EL00005                                                 00723000
@RC00123 EQU   @EL00006                                                 00724000
@RC00118 EQU   @EL00006                                                 00725000
@RC00154 EQU   @EL00007                                                 00726000
@RC00139 EQU   @EL00007                                                 00727000
@RC00134 EQU   @EL00007                                                 00728000
@RC00030 EQU   @RC00029                                                 00729000
@RC00145 EQU   @RC00139                                                 00730000
@RC00140 EQU   @RC00139                                                 00731000
@RC00033 EQU   @RC00030                                                 00732000
@RC00031 EQU   @RC00030                                                 00733000
@ENDDATA EQU   *                                                        00734000
         END   ISDAGEN0,(C'PLS1839',0603,75268)                         00735000
