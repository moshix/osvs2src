         TITLE 'SDA ROUTINE TO READ SYS1.LOGREC                        *00001000
                        '                                               00002000
ISDALOG0 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(8)                                              0001 00007000
         DC    C'ISDALOG0'                                         0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         ISDAGSPC R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         MVC   @PC00001(4),0(@01)                                  0001 00022000
*/* RETCODE=0 = OPEN AND READ SUCCESSFUL                     @Y30LB55*/ 00023000
*/* RETCODE=4 = OPEN FAILED. MISSING DD CARD                 @Y30LB55*/ 00024000
*/* RETCODE=8 = END OF FILE READ IN INPUT                    @Y30LB55*/ 00025000
*/* RETCODE=12 = READ ERROR ON INPUT                         @Y30LB55*/ 00026000
*/* RETCODE=16 = NO HEADER RECORD FOUND                      @Y30LB55*/ 00027000
*/* RETCODE=20 = LAST CCHHR HAS BEEN READ                    @Y30LB55*/ 00028000
*/* RETCODE=24 = NO SPACE FOR ISDALOG0 WORKAREA              @Y30LB55*/ 00029000
*                                                                  0014 00030000
*   CVTPTR=WORKPTR;                 /* SET LOCAL CVT PTR     @Y30LB55*/ 00031000
         L     @10,@PC00001                                        0014 00032000
         L     CVTPTR,WORKPTR(,@10)                                0014 00033000
*   RETCODE=0;                      /* INITIALIZE RETURN CODE@Y30LB55*/ 00034000
         SLR   @10,@10                                             0015 00035000
         LR    RETCODE,@10                                         0015 00036000
*   /*****************************************************************/ 00037000
*   /*                                                               */ 00038000
*   /* GET CORE FOR ISDALOG0 WORKAREA                                */ 00039000
*   /*                                                               */ 00040000
*   /*****************************************************************/ 00041000
*                                                                  0016 00042000
*   IF LOG00PTR=0 THEN              /* NO WORKAREA           @Y30LB55*/ 00043000
         C     @10,LOG00PTR(,CVTPTR)                               0016 00044000
         BNE   @RF00016                                            0016 00045000
*     DO;                           /* NONE, GET IT          @Y30LB55*/ 00046000
*       CORELEN=LENGTH(LOGWORK);    /* SET AREA LENGTH       @Y30LB55*/ 00047000
         MVC   CORELEN(3,CVTPTR),@CF00192+1                        0018 00048000
*       SPNO=LOG0SPNO;              /* SET SUBPOOL NUMBER    @Y30LB55*/ 00049000
         MVC   SPNO(1,CVTPTR),LOG0SPNO                             0019 00050000
*       RFY                                                        0020 00051000
*         R1 RSTD;                                         /*@Y30LB55*/ 00052000
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @Y30LB55*/ 00053000
         LA    R1,WORKCALL(,CVTPTR)                                0021 00054000
*       CALL ISDAGET1;              /* GET CORE              @Y30LB55*/ 00055000
         L     @15,@CV00163                                        0022 00056000
         BALR  @14,@15                                             0022 00057000
*       RFY                                                        0023 00058000
*         R15 RSTD;                                        /*@Y30LB55*/ 00059000
*       RETCODE=R15;                /* SAVE GET1 RETURN CODE @Y30LB55*/ 00060000
         LR    RETCODE,R15                                         0024 00061000
*       RFY                                                        0025 00062000
*        (R1,                                                      0025 00063000
*         R15) UNRSTD;              /* RELEASE REGS          @Y30LB55*/ 00064000
*       LOG00PTR=COREADDR;          /* STORE ADDR IN ISDACVT @Y30LB55*/ 00065000
         L     @10,COREADDR(,CVTPTR)                               0026 00066000
         ST    @10,LOG00PTR(,CVTPTR)                               0026 00067000
*       LOGWKPTR=LOG00PTR;          /* SET PTR TO LOGWORK    @Y30LB55*/ 00068000
         LR    LOGWKPTR,@10                                        0027 00069000
*       IF RETCODE=0 THEN           /* GOT CORE              @Y30LB55*/ 00070000
         SLR   @10,@10                                             0028 00071000
         CR    RETCODE,@10                                         0028 00072000
         BNE   @RF00028                                            0028 00073000
*         DO;                       /* YES, INITIALIZE LOGWORK     0029 00074000
*                                                            @Y30LB55*/ 00075000
*           SDALOGIN=DCBSTAT;       /* MOVE DCB INTO WORKAREA@Y30LB55*/ 00076000
         MVC   SDALOGIN(96,LOGWKPTR),DCBSTAT                       0030 00077000
*           OPENLIST=OPENSTAT;      /* MOVE OPEN LIST INTO WORKAREA     00078000
*                                                            @Y30LB55*/ 00079000
         MVC   OPENLIST(4,LOGWKPTR),OPENSTAT                       0031 00080000
*           CLOSLIST=CLOSSTAT;      /* MOVE CLOSE LIST INTO WORKAREA    00081000
*                                                            @Y30LB55*/ 00082000
         MVC   CLOSLIST(4,LOGWKPTR),CLOSSTAT                       0032 00083000
*           READLIST=READSTAT;      /* MOVE READ LIST INTO WORKAREA     00084000
*                                                            @Y30LB55*/ 00085000
         MVC   READLIST(20,LOGWKPTR),READSTAT                      0033 00086000
*           SCW=''B;                /* ZERO SEGMENT CONTROL WORD   0034 00087000
*                                                            @Y30LB55*/ 00088000
         SLR   @08,@08                                             0034 00089000
         ST    @08,SCW(,LOGWKPTR)                                  0034 00090000
*           NREC=''B;               /* INIT RECORD COUNT     @Y30LB55*/ 00091000
         ST    @08,NREC(,LOGWKPTR)                                 0035 00092000
*           DATAPTR=0;              /* ZERO DATA POINTER     @Y30LB55*/ 00093000
         ST    @10,DATAPTR(,CVTPTR)                                0036 00094000
*         END;                      /* END INITIALIZE        @Y30LB55*/ 00095000
*       ELSE                        /* BAD RETURN FROM ISDAGET1    0038 00096000
*                                                            @Y30LB55*/ 00097000
*         RETCODE=24;               /* SET RETURN CODE TO NO CORE  0038 00098000
*                                                            @Y30LB55*/ 00099000
         B     @RC00028                                            0038 00100000
@RF00028 LA    RETCODE,24                                          0038 00101000
*     END;                          /* END GET CORE SECTION  @Y30LB55*/ 00102000
*   ELSE                            /* YES, HAVE WORKAREA    @Y30LB55*/ 00103000
*     LOGWKPTR=LOG00PTR;            /* SET LOCAL PTR TO LOGWORK    0040 00104000
*                                                            @Y30LB55*/ 00105000
         B     @RC00016                                            0040 00106000
@RF00016 L     LOGWKPTR,LOG00PTR(,CVTPTR)                          0040 00107000
*   IF RETCODE=0 THEN               /* HAVE WORKAREA         @Y30LB55*/ 00108000
@RC00016 LTR   RETCODE,RETCODE                                     0041 00109000
         BNZ   @RF00041                                            0041 00110000
*     DO;                           /* YES                   @Y30LB55*/ 00111000
*       IF OFLAGS(4)^='1'B THEN     /* IS DCB OPEN           @Y30LB55*/ 00112000
         TM    OFLAGS(LOGWKPTR),B'00010000'                        0043 00113000
         BO    @RF00043                                            0043 00114000
*         DO;                       /* NO, OPEN SDALOGIN     @Y30LB55*/ 00115000
*                                                                  0044 00116000
*           /*********************************************************/ 00117000
*           /*                                                       */ 00118000
*           /* OPEN SDALOGIN                                         */ 00119000
*           /*                                                       */ 00120000
*           /*********************************************************/ 00121000
*                                                                  0045 00122000
*           RFY                                                    0045 00123000
*            (R1,                                                  0045 00124000
*             R6) RSTD;                                    /*@Y30LB55*/ 00125000
*           R1=ADDR(OPENLIST);      /* R1 -> OPENLIST        @Y30LB55*/ 00126000
         LR    R1,LOGWKPTR                                         0046 00127000
*           R6=ADDR(SDALOGIN);      /* R6 -> DCB             @Y30LB55*/ 00128000
         LA    R6,SDALOGIN(,LOGWKPTR)                              0047 00129000
*           GEN( OPEN  ((R6),INPUT),MF=(E,(R1)));          /*@Y30LB55*/ 00130000
          OPEN  ((R6),INPUT),MF=(E,(R1))                                00131000
*           RFY                                                    0049 00132000
*            (R1,                                                  0049 00133000
*             R6) UNRSTD;                                  /*@Y30LB55*/ 00134000
*           IF OFLAGS(4)='1'B THEN  /* WAS OPEN DONE         @Y30LB55*/ 00135000
         TM    OFLAGS(LOGWKPTR),B'00010000'                        0050 00136000
         BNO   @RF00050                                            0050 00137000
*             DO;                   /* YES, GET INPUT BUFFER @Y30LB55*/ 00138000
*               RETCODE=0;          /* SET RETURN CODE       @Y30LB55*/ 00139000
*                                                                  0052 00140000
         SLR   RETCODE,RETCODE                                     0052 00141000
*               /*****************************************************/ 00142000
*               /*                                                   */ 00143000
*               /* GETMAIN SECTION                                   */ 00144000
*               /*                                                   */ 00145000
*               /*****************************************************/ 00146000
*                                                                  0053 00147000
*               CORELEN=DCBBLKSI;   /* SET LENGTH TO BLKSIZE @Y30LB55*/ 00148000
         SLR   @10,@10                                             0053 00149000
         ICM   @10,3,DCBBLKSI(LOGWKPTR)                            0053 00150000
         STCM  @10,7,CORELEN(CVTPTR)                               0053 00151000
*               SPNO=LOG0SPNO;      /* SET SUBPOOL NUMBER    @Y30LB55*/ 00152000
         MVC   SPNO(1,CVTPTR),LOG0SPNO                             0054 00153000
*               RFY                                                0055 00154000
*                 R1 RSTD;                                 /*@Y30LB55*/ 00155000
*               R1=ADDR(WORKCALL);  /* R1 -> WORKPTR         @Y30LB55*/ 00156000
         LA    R1,WORKCALL(,CVTPTR)                                0056 00157000
*               CALL ISDAGET1;      /* GET INPUT BUFFER      @Y30LB55*/ 00158000
         L     @15,@CV00163                                        0057 00159000
         BALR  @14,@15                                             0057 00160000
*               RFY                                                0058 00161000
*                 R15 RSTD;                                /*@Y30LB55*/ 00162000
*               RETCODE=R15;        /* SAVE RETURN CODE      @Y30LB55*/ 00163000
         LR    RETCODE,R15                                         0059 00164000
*               RFY                                                0060 00165000
*                (R1,                                              0060 00166000
*                 R15) UNRSTD;                             /*@Y30LB55*/ 00167000
*               IF RETCODE=0 THEN   /* GOT BUFFER            @Y30LB55*/ 00168000
         LTR   RETCODE,RETCODE                                     0061 00169000
         BNZ   @RF00061                                            0061 00170000
*                 DATAPTR=COREADDR; /* YES, MOVE ADDR TO ISDACVT   0062 00171000
*                                                            @Y30LB55*/ 00172000
         MVC   DATAPTR(4,CVTPTR),COREADDR(CVTPTR)                  0062 00173000
*               ELSE                /* NO BUFFER, NO CORE    @Y30LB55*/ 00174000
*                 RETCODE=24;       /* SET NO CORE RETURN CODE     0063 00175000
*                                                            @Y30LB55*/ 00176000
         B     @RC00061                                            0063 00177000
@RF00061 LA    RETCODE,24                                          0063 00178000
*             END;                  /* END GETMAIN SECTION   @Y30LB55*/ 00179000
*           ELSE                    /* NOT OPEN, MISSING DD CARD   0065 00180000
*                                                            @Y30LB55*/ 00181000
*             RETCODE=4;            /* SET RETURN CODE       @Y30LB55*/ 00182000
         B     @RC00050                                            0065 00183000
@RF00050 LA    RETCODE,4                                           0065 00184000
*         END;                      /* END OPEN CODE         @Y30LB55*/ 00185000
*       ELSE                        /* NOT FIRST READ, SDALOGIN OPEN    00186000
*                                                            @Y30LB55*/ 00187000
*         IF DCBFDAD(2:8)=LASTTR THEN/* READ LAST RECORD WRITTEN   0067 00188000
*                                                            @Y30LB55*/ 00189000
         B     @RC00043                                            0067 00190000
@RF00043 CLC   DCBFDAD+1(7,LOGWKPTR),LASTTR(LOGWKPTR)              0067 00191000
         BNE   @RF00067                                            0067 00192000
*           RETCODE=20;             /* YES, SET RETURN CODE  @Y30LB55*/ 00193000
         LA    RETCODE,20                                          0068 00194000
*         ELSE                                                     0069 00195000
*           RETCODE=0;              /* NO, SET RETURN CODE   @Y30LB55*/ 00196000
         B     @RC00067                                            0069 00197000
@RF00067 SLR   RETCODE,RETCODE                                     0069 00198000
*     END;                          /* END OPEN SECTION      @Y30LB55*/ 00199000
*   ELSE                                                           0071 00200000
*     ;                             /* BAD RETURN FROM ISDAGET1    0071 00201000
*                                                            @Y30LB55*/ 00202000
@RF00041 DS    0H                                                  0072 00203000
*   IF RETCODE=0 THEN               /* ANY ERRORS YET        @Y30LB55*/ 00204000
*                                                                  0072 00205000
@RC00041 LTR   RETCODE,RETCODE                                     0072 00206000
         BNZ   @RF00072                                            0072 00207000
*     /***************************************************************/ 00208000
*     /*                                                             */ 00209000
*     /* READ SYS1.LOGREC                                            */ 00210000
*     /*                                                             */ 00211000
*     /***************************************************************/ 00212000
*                                                                  0073 00213000
*     DO;                           /* NO, READ SYS1.LOGREC  @Y30LB55*/ 00214000
*       RFY                                                        0074 00215000
*        (R8,                                                      0074 00216000
*         R6,                                                      0074 00217000
*         R7) RSTD;                                        /*@Y30LB55*/ 00218000
*       R8=ADDR(SDALOGIN);          /* R8 -> DCB             @Y30LB55*/ 00219000
         LA    R8,SDALOGIN(,LOGWKPTR)                              0075 00220000
*       R7=ADDR(READLIST);          /* PTR TO READ ECB       @Y30LB55*/ 00221000
         LA    R7,READLIST(,LOGWKPTR)                              0076 00222000
*       R6=DATAPTR+4;               /* SET ADDR OF DATAIN+4  @Y30LB55*/ 00223000
         LA    R6,4                                                0077 00224000
         AL    R6,DATAPTR(,CVTPTR)                                 0077 00225000
*       GEN( READ  (R7),SF,(R8),(R6),'S',MF=E);            /*@Y30LB55*/ 00226000
          READ  (R7),SF,(R8),(R6),'S',MF=E                              00227000
*       GEN( CHECK  (R7) )                                         0079 00228000
*       FLOWS(EOF,EOD);                                    /*@Y30LB55*/ 00229000
          CHECK  (R7)                                                   00230000
*       RFY                                                        0080 00231000
*        (R8,                                                      0080 00232000
*         R6,                                                      0080 00233000
*         R7) UNRSTD;                                      /*@Y30LB55*/ 00234000
*       NREC=NREC+1;                /* INC RECORD COUNT      @Y30LB55*/ 00235000
         LA    @08,1                                               0081 00236000
         L     @15,NREC(,LOGWKPTR)                                 0081 00237000
         ALR   @15,@08                                             0081 00238000
         ST    @15,NREC(,LOGWKPTR)                                 0081 00239000
*       TEMPPTR=DCBIOBA;            /* MOVE PTR TO IOB       @Y30LB55*/ 00240000
         L     TEMPPTR,DCBIOBA(,LOGWKPTR)                          0082 00241000
*       SCWF=DCBBLKSI-RSIDUL+4;     /* COMPUTE LRECL + 4     @Y30LB55*/ 00242000
         SLR   @14,@14                                             0083 00243000
         ICM   @14,3,DCBBLKSI(LOGWKPTR)                            0083 00244000
         SH    @14,RSIDUL(,TEMPPTR)                                0083 00245000
         AH    @14,@CH00128                                        0083 00246000
         STH   @14,SCWF(,LOGWKPTR)                                 0083 00247000
*       DATAIN(1:4)=SCW;            /* BUILD VARIABLE RECORD @Y30LB55*/ 00248000
         L     @10,DATAPTR(,CVTPTR)                                0084 00249000
         MVC   DATAIN(4,@10),SCW(LOGWKPTR)                         0084 00250000
*       IF NREC=1 THEN              /* IS THIS FIRST READ    @Y30LB55*/ 00251000
         CR    @15,@08                                             0085 00252000
         BNE   @RF00085                                            0085 00253000
*         IF DATAIN(5:6)='FFFF'X THEN/* YES, IS RECORD LOGREC HEADER    00254000
*                                                            @Y30LB55*/ 00255000
         CLC   DATAIN+4(2,@10),@CB00180                            0086 00256000
         BNE   @RF00086                                            0086 00257000
*           LOGHDR=DATAIN(5:44);    /* YES, SAVE LOGREC HEADER     0087 00258000
*                                                            @Y30LB55*/ 00259000
         MVC   LOGHDR(40,LOGWKPTR),DATAIN+4(@10)                   0087 00260000
*         ELSE                      /* NO, NOT READING SYS1.LOGREC 0088 00261000
*                                                            @Y30LB55*/ 00262000
*           RETCODE=16;             /* SET RETURN CODE       @Y30LB55*/ 00263000
         B     @RC00086                                            0088 00264000
@RF00086 LA    RETCODE,16                                          0088 00265000
*       ELSE                                                       0089 00266000
*         ;                         /* NO, NOT FIRST READ    @Y30LB55*/ 00267000
@RF00085 DS    0H                                                  0090 00268000
*     END;                          /* END READ SYS1.LOGREC CODE   0090 00269000
*                                                            @Y30LB55*/ 00270000
*   ELSE                            /* YES, ERROR FOUND, RETCODE SET    00271000
*                                                            @Y30LB55*/ 00272000
*     CALL FREEBUFF;                /* FREE CORE AND CLOSE DCB     0091 00273000
*                                                            @Y30LB55*/ 00274000
         B     @RC00072                                            0091 00275000
@RF00072 BAL   @14,FREEBUFF                                        0091 00276000
*   RETURN CODE(RETCODE);           /* RETURN WITH CONDCODE  @Y30LB55*/ 00277000
@RC00072 L     @13,4(,@13)                                         0092 00278000
         L     @00,@SIZDATD                                        0092 00279000
         LR    @01,@11                                             0092 00280000
         ISDAFSPC R,LV=(0),A=(1)                                        00281000
         LR    @15,@09                                             0092 00282000
         L     @14,12(,@13)                                        0092 00283000
         LM    @00,@12,20(@13)                                     0092 00284000
         BR    @14                                                 0092 00285000
*                                                                  0093 00286000
*   /*****************************************************************/ 00287000
*   /*                                                               */ 00288000
*   /* EOF - ENTRY FOR END OF FILE READ                              */ 00289000
*   /*                                                               */ 00290000
*   /*****************************************************************/ 00291000
*                                                                  0093 00292000
*EOF:                                                              0093 00293000
*   RETCODE=8;                      /* SET END OF FILE RETURN CODE 0093 00294000
*                                                            @Y30LB55*/ 00295000
EOF      LA    RETCODE,8                                           0093 00296000
*   CALL FREEBUFF;                  /* FREE INPUT BUFFER     @Y30LB55*/ 00297000
         BAL   @14,FREEBUFF                                        0094 00298000
*   RETURN CODE(RETCODE);                                  /*@Y30LB55*/ 00299000
*                                                                  0095 00300000
         L     @13,4(,@13)                                         0095 00301000
         L     @00,@SIZDATD                                        0095 00302000
         LR    @01,@11                                             0095 00303000
         ISDAFSPC R,LV=(0),A=(1)                                        00304000
         LR    @15,@09                                             0095 00305000
         L     @14,12(,@13)                                        0095 00306000
         LM    @00,@12,20(@13)                                     0095 00307000
         BR    @14                                                 0095 00308000
*   /*****************************************************************/ 00309000
*   /*                                                               */ 00310000
*   /* EOD - ENTRY FOR READ ERROR                                    */ 00311000
*   /*                                                               */ 00312000
*   /*****************************************************************/ 00313000
*                                                                  0096 00314000
*EOD:                                                              0096 00315000
*   RETCODE=12;                     /* SET SYNAD RETURN CODE @Y30LB55*/ 00316000
EOD      LA    RETCODE,12                                          0096 00317000
*   CALL FREEBUFF;                  /* FREE INPUT BUFFER     @Y30LB55*/ 00318000
         BAL   @14,FREEBUFF                                        0097 00319000
*   RETURN CODE(RETCODE);           /* RETURN TO ISDASDA0    @Y30LB55*/ 00320000
         L     @13,4(,@13)                                         0098 00321000
         L     @00,@SIZDATD                                        0098 00322000
         LR    @01,@11                                             0098 00323000
         ISDAFSPC R,LV=(0),A=(1)                                        00324000
         LR    @15,@09                                             0098 00325000
         L     @14,12(,@13)                                        0098 00326000
         LM    @00,@12,20(@13)                                     0098 00327000
         BR    @14                                                 0098 00328000
*   /*****************************************************************/ 00329000
*   /*                                                               */ 00330000
*   /* FREEBUFF - CODE TO FREEMAIN INPUT BUFFER AND CLOSE SDALOGIN   */ 00331000
*   /*                                                               */ 00332000
*   /*****************************************************************/ 00333000
*                                                                  0099 00334000
*FREEBUFF:                                                         0099 00335000
*   PROC;                           /* FREEMAIN FOR OBRMDR   @Y30LB55*/ 00336000
FREEBUFF STM   @14,@12,@SA00002                                    0099 00337000
*   IF LOG00PTR^=0 THEN             /* HAVE WORKAREA         @Y30LB55*/ 00338000
         SLR   @10,@10                                             0100 00339000
         C     @10,LOG00PTR(,CVTPTR)                               0100 00340000
         BE    @RF00100                                            0100 00341000
*     DO;                           /* YES, CLEAN UP         @Y30LB55*/ 00342000
*      IF DATAPTR^=0 THEN           /* HAVE INPUT BUFFER     @Y30LB55*/ 00343000
         L     @15,DATAPTR(,CVTPTR)                                0102 00344000
         CR    @15,@10                                             0102 00345000
         BE    @RF00102                                            0102 00346000
*        DO;                        /* YES, FREE IT          @Y30LB55*/ 00347000
*          CORELEN=DCBBLKSI;        /* SET LENGTH TO BLKSIZE @Y30LB55*/ 00348000
         SLR   @10,@10                                             0104 00349000
         ICM   @10,3,DCBBLKSI(LOGWKPTR)                            0104 00350000
         STCM  @10,7,CORELEN(CVTPTR)                               0104 00351000
*          COREADDR=DATAPTR;        /* ADDR OF INPUT BUFFER  @Y30LB55*/ 00352000
         ST    @15,COREADDR(,CVTPTR)                               0105 00353000
*          SPNO=LOG0SPNO;           /* SET SUBPOOL NUMBER    @Y30LB55*/ 00354000
         MVC   SPNO(1,CVTPTR),LOG0SPNO                             0106 00355000
*          RFY                                                     0107 00356000
*            R1 RSTD;                                      /*@Y30LB55*/ 00357000
*          R1=ADDR(WORKCALL);       /* R1 -> WORKPTR         @Y30LB55*/ 00358000
         LA    R1,WORKCALL(,CVTPTR)                                0108 00359000
*          CALL ISDAFREE;           /* FREE INPUT BUFFER     @Y30LB55*/ 00360000
         L     @15,@CV00164                                        0109 00361000
         BALR  @14,@15                                             0109 00362000
*          RFY                                                     0110 00363000
*            R1 UNRSTD;                                    /*@Y30LB55*/ 00364000
*          DATAPTR=0;               /* ZERO DATA PTR IN ISDACVT    0111 00365000
*                                                            @Y30LB55*/ 00366000
         SLR   @10,@10                                             0111 00367000
         ST    @10,DATAPTR(,CVTPTR)                                0111 00368000
*        END;                       /* END FREE DATA AREA    @Y30LB55*/ 00369000
*      ELSE;                        /* NO DATA AREA TO FREE  @Y30LB55*/ 00370000
@RF00102 DS    0H                                                  0114 00371000
*      IF OFLAGS(4)='1'B THEN       /* DCB OPEN              @Y30LB55*/ 00372000
         TM    OFLAGS(LOGWKPTR),B'00010000'                        0114 00373000
         BNO   @RF00114                                            0114 00374000
*        DO;                        /* YES, CLOSE IT         @Y30LB55*/ 00375000
*          RFY                                                     0116 00376000
*           (R1,                                                   0116 00377000
*            R6) RSTD;                                     /*@Y30LB55*/ 00378000
*          R1=ADDR(CLOSLIST);       /* R1 -> CLOSLIST        @Y30LB55*/ 00379000
         LA    R1,CLOSLIST(,LOGWKPTR)                              0117 00380000
*          R6=ADDR(SDALOGIN);       /* R6 -> DCB             @Y30LB55*/ 00381000
         LA    R6,SDALOGIN(,LOGWKPTR)                              0118 00382000
*          GEN( CLOSE ((R6)),MF=(E,(R1)));                 /*@Y30LB55*/ 00383000
          CLOSE ((R6)),MF=(E,(R1))                                      00384000
*          RFY                                                     0120 00385000
*           (R1,                                                   0120 00386000
*            R6) UNRSTD;                                   /*@Y30LB55*/ 00387000
*        END;                       /* END CLOSE SECTION     @Y30LB55*/ 00388000
*      ELSE                                                        0122 00389000
*        ;                          /* NOT OPEN              @Y30LB55*/ 00390000
@RF00114 DS    0H                                                  0123 00391000
*       CORELEN=LENGTH(LOGWORK);    /* MOVE LENGTH OF LOGWORK@Y30LB55*/ 00392000
         MVC   CORELEN(3,CVTPTR),@CF00192+1                        0123 00393000
*       SPNO=LOG0SPNO;              /* MOVE SUBPOOL NUMBER   @Y30LB55*/ 00394000
         MVC   SPNO(1,CVTPTR),LOG0SPNO                             0124 00395000
*       COREADDR=LOG00PTR;          /* MOVE ADDRESS OF AREA  @Y30LB55*/ 00396000
         MVC   COREADDR(4,CVTPTR),LOG00PTR(CVTPTR)                 0125 00397000
*       RFY                                                        0126 00398000
*         R1 RSTD;                                         /*@Y30LB55*/ 00399000
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @Y30LB55*/ 00400000
         LA    R1,WORKCALL(,CVTPTR)                                0127 00401000
*       CALL ISDAFREE;              /* FREE LOGWORK          @Y30LB55*/ 00402000
         L     @15,@CV00164                                        0128 00403000
         BALR  @14,@15                                             0128 00404000
*       RFY                                                        0129 00405000
*         R1 UNRSTD;                                       /*@Y30LB55*/ 00406000
*       LOG00PTR=0;                 /* ZERO LOG00PTR IN ISDACVT    0130 00407000
*                                                            @Y30LB55*/ 00408000
         SLR   @10,@10                                             0130 00409000
         ST    @10,LOG00PTR(,CVTPTR)                               0130 00410000
*     END;                          /* END CLEAN UP          @Y30LB55*/ 00411000
*   ELSE                                                           0132 00412000
*     ;                             /* NO WORKAREA           @Y30LB55*/ 00413000
@RF00100 DS    0H                                                  0133 00414000
*   END FREEBUFF;                   /* END FREEMAIN SECTION  @Y30LB55*/ 00415000
@EL00002 DS    0H                                                  0133 00416000
@EF00002 DS    0H                                                  0133 00417000
@ER00002 LM    @14,@12,@SA00002                                    0133 00418000
         BR    @14                                                 0133 00419000
*                                                                  0134 00420000
*   /*****************************************************************/ 00421000
*   /*                                                               */ 00422000
*   /* GENERATE LIST FORM FOR OPEN, CLOSE, READ                      */ 00423000
*   /*                                                               */ 00424000
*   /*****************************************************************/ 00425000
*                                                                  0134 00426000
*   GENERATE DATA DEFS(DCBSTAT,OPENSTAT,CLOSSTAT);         /*@Y30LB55*/ 00427000
*   END ISDALOG0                                           /*@Y30LB55*/ 00428000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00429000
*/*%INCLUDE SYSLIB  (ISDACVT )                                        * 00430000
*;                                                                 0135 00431000
@EL00001 L     @13,4(,@13)                                         0135 00432000
@EF00001 L     @00,@SIZDATD                                        0135 00433000
         LR    @01,@11                                             0135 00434000
         ISDAFSPC R,LV=(0),A=(1)                                        00435000
@ER00001 LM    @14,@12,12(@13)                                     0135 00436000
         BR    @14                                                 0135 00437000
@DATA    DS    0H                                                       00438000
@CH00128 DC    H'4'                                                     00439000
@DATD    DSECT                                                          00440000
         DS    0F                                                       00441000
@SA00001 DS    18F                                                      00442000
@PC00001 DS    1F                                                       00443000
@SA00002 DS    15F                                                      00444000
ISDALOG0 CSECT                                                          00445000
         DS    0F                                                       00446000
@CF00192 DC    F'172'                                                   00447000
@DATD    DSECT                                                          00448000
         DS    0D                                                       00449000
ISDALOG0 CSECT                                                          00450000
         NOPR  ((@ENDDATD-@DATD)/161*16)                                00451000
         DS    0F                                                       00452000
@SIZDATD DC    AL1(0)                                                   00453000
         DC    AL3(@ENDDATD-@DATD)                                      00454000
@CV00163 DC    V(ISDAGET1)                                              00455000
@CV00164 DC    V(ISDAFREE)                                              00456000
@CV00162 DC    V(ISDAGET0)                                              00457000
         DS    0D                                                       00458000
@CB00180 DC    X'FFFF'                                                  00459000
LOG0SPNO DC    X'00'                                                    00460000
PATCH    DC    50X'00'                                                  00461000
ISDALOG0 CSECT                                                          00462000
DCBSTAT  DCB   DSORG=PS,MACRF=R,DDNAME=SDALOGIN,SYNAD=EOD,EODAD=EOF,  XX00463000
               RECFM=U,BLKSIZE=1832,LRECL=1832                          00464000
READSTAT READ  READECB,SF,MF=L                                          00465000
OPENSTAT OPEN  (0,INPUT),MF=L                                           00466000
CLOSSTAT CLOSE (0),MF=L                                                 00467000
@DATD    DSECT                                                          00468000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00469000
@ENDDATD EQU   *                                                        00470000
ISDALOG0 CSECT                                                          00471000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00472000
@01      EQU   01                                                       00473000
@02      EQU   02                                                       00474000
@03      EQU   03                                                       00475000
@04      EQU   04                                                       00476000
@05      EQU   05                                                       00477000
@06      EQU   06                                                       00478000
@07      EQU   07                                                       00479000
@08      EQU   08                                                       00480000
@09      EQU   09                                                       00481000
@10      EQU   10                                                       00482000
@11      EQU   11                                                       00483000
@12      EQU   12                                                       00484000
@13      EQU   13                                                       00485000
@14      EQU   14                                                       00486000
@15      EQU   15                                                       00487000
TEMPPTR  EQU   @10                                                      00488000
RETCODE  EQU   @09                                                      00489000
LOGWKPTR EQU   @03                                                      00490000
CVTPTR   EQU   @02                                                      00491000
R6       EQU   @06                                                      00492000
R7       EQU   @07                                                      00493000
R15      EQU   @15                                                      00494000
R8       EQU   @08                                                      00495000
R1       EQU   @01                                                      00496000
ISDACVT  EQU   0                                                        00497000
CVTPTRS0 EQU   ISDACVT                                                  00498000
DATAPTR  EQU   CVTPTRS0                                                 00499000
LOG00PTR EQU   CVTPTRS0+36                                              00500000
WORKCALL EQU   CVTPTRS0+96                                              00501000
GET0CALL EQU   ISDACVT+100                                              00502000
SPNOLEN  EQU   GET0CALL                                                 00503000
SPNO     EQU   SPNOLEN                                                  00504000
CORELEN  EQU   SPNOLEN+1                                                00505000
COREADDR EQU   GET0CALL+4                                               00506000
HEXPCALL EQU   ISDACVT+108                                              00507000
PRT0CALL EQU   ISDACVT+120                                              00508000
OUTLINE  EQU   PRT0CALL                                                 00509000
SDADATD  EQU   ISDACVT+256                                              00510000
PRTDATD  EQU   ISDACVT+416                                              00511000
LOGWORK  EQU   0                                                        00512000
OPENLIST EQU   LOGWORK                                                  00513000
CLOSLIST EQU   LOGWORK+4                                                00514000
NREC     EQU   LOGWORK+8                                                00515000
SCW      EQU   LOGWORK+12                                               00516000
SCWF     EQU   SCW                                                      00517000
READLIST EQU   LOGWORK+16                                               00518000
SDALOGIN EQU   LOGWORK+36                                               00519000
DCBFDAD  EQU   SDALOGIN+5                                               00520000
OFLAGS   EQU   SDALOGIN+48                                              00521000
DCBBLKSI EQU   SDALOGIN+62                                              00522000
DCBIOBA  EQU   SDALOGIN+68                                              00523000
LOGHDR   EQU   LOGWORK+132                                              00524000
LASTTR   EQU   LOGHDR+22                                                00525000
DATAIN   EQU   0                                                        00526000
RSIDUL   EQU   22                                                       00527000
CSW      EQU   16                                                       00528000
WORKPTR  EQU   0                                                        00529000
*                                      START UNREFERENCED COMPONENTS    00530000
SFTYBYTS EQU   LOGHDR+39                                                00531000
EWMSW    EQU   LOGHDR+38                                                00532000
EWMTRK   EQU   LOGHDR+34                                                00533000
DEVCODE  EQU   LOGHDR+33                                                00534000
EWMCNT   EQU   LOGHDR+31                                                00535000
TRKSPER  EQU   LOGHDR+29                                                00536000
TRKCAP   EQU   LOGHDR+20                                                00537000
BYTSREM  EQU   LOGHDR+18                                                00538000
RESTART  EQU   LOGHDR+11                                                00539000
@NM00013 EQU   LOGHDR+10                                                00540000
UPLIMIT  EQU   LOGHDR+6                                                 00541000
LOWLIMIT EQU   LOGHDR+2                                                 00542000
CLASRC   EQU   LOGHDR                                                   00543000
@NM00012 EQU   SDALOGIN+84                                              00544000
DCBLRECL EQU   SDALOGIN+82                                              00545000
@NM00011 EQU   SDALOGIN+72                                              00546000
@NM00010 EQU   SDALOGIN+64                                              00547000
@NM00009 EQU   SDALOGIN+49                                              00548000
@NM00008 EQU   SDALOGIN+13                                              00549000
@NM00007 EQU   SDALOGIN                                                 00550000
@NM00006 EQU   READLIST+16                                              00551000
@NM00005 EQU   READLIST+12                                              00552000
@NM00004 EQU   READLIST+8                                               00553000
@NM00003 EQU   READLIST+6                                               00554000
@NM00002 EQU   READLIST+4                                               00555000
@NM00001 EQU   READLIST                                                 00556000
SCW2     EQU   SCW+2                                                    00557000
PRTSA001 EQU   PRTDATD                                                  00558000
SDATEMPS EQU   SDADATD+136                                              00559000
SDASA002 EQU   SDADATD+76                                               00560000
SDAPC001 EQU   SDADATD+72                                               00561000
SDASA001 EQU   SDADATD                                                  00562000
SDARPTID EQU   PRT0CALL+133                                             00563000
LINE     EQU   OUTLINE+1                                                00564000
ANSI     EQU   OUTLINE                                                  00565000
DUMPIDNO EQU   HEXPCALL+8                                               00566000
DUMPLEN  EQU   HEXPCALL+4                                               00567000
DUMPADDR EQU   HEXPCALL                                                 00568000
GEN00PTR EQU   CVTPTRS0+92                                              00569000
CNFG0PTR EQU   CVTPTRS0+88                                              00570000
PWR00PTR EQU   CVTPTRS0+84                                              00571000
APR00PTR EQU   CVTPTRS0+80                                              00572000
DRC00PTR EQU   CVTPTRS0+76                                              00573000
DAT00PTR EQU   CVTPTRS0+72                                              00574000
CSB00PTR EQU   CVTPTRS0+68                                              00575000
DCK00PTR EQU   CVTPTRS0+64                                              00576000
EQC00PTR EQU   CVTPTRS0+60                                              00577000
FSC00PTR EQU   CVTPTRS0+56                                              00578000
DHE00PTR EQU   CVTPTRS0+52                                              00579000
SUM00PTR EQU   CVTPTRS0+48                                              00580000
PAD00PTR EQU   CVTPTRS0+44                                              00581000
DCS00PTR EQU   CVTPTRS0+40                                              00582000
HIST0PTR EQU   CVTPTRS0+32                                              00583000
PRT00PTR EQU   CVTPTRS0+28                                              00584000
GET00PTR EQU   CVTPTRS0+24                                              00585000
TYPE0PTR EQU   CVTPTRS0+20                                              00586000
PARM0PTR EQU   CVTPTRS0+16                                              00587000
SDA00PTR EQU   CVTPTRS0+12                                              00588000
PARMPTR  EQU   CVTPTRS0+8                                               00589000
SDATAPTR EQU   CVTPTRS0+4                                               00590000
*                                      END UNREFERENCED COMPONENTS      00591000
@RC00028 EQU   @RC00016                                                 00592000
@RC00067 EQU   @RC00041                                                 00593000
@RC00043 EQU   @RC00041                                                 00594000
@RC00085 EQU   @RC00072                                                 00595000
@RC00050 EQU   @RC00043                                                 00596000
@RC00086 EQU   @RC00085                                                 00597000
@RC00061 EQU   @RC00050                                                 00598000
@ENDDATA EQU   *                                                        00599000
         END   ISDALOG0,(C'PLS0133',0603,75313)                         00600000
