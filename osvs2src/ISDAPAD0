         TITLE 'SDA PAD ERROR ACCUMULATOR                              *00001000
                        '                                               00002000
ISDAPAD0 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'ISDAPAD0  77.354'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         ISDAGSPC R,LV=(0)                                              00015000
         LR    @11,@01                                          01S0001 00016000
         USING @DATD,@11                                        01S0001 00017000
         ST    @13,@SA00001+4                                   01S0001 00018000
         LM    @00,@01,20(@13)                                  01S0001 00019000
         ST    @11,8(,@13)                                      01S0001 00020000
         LR    @13,@11                                          01S0001 00021000
         MVC   @PC00001(4),0(@01)                               01S0001 00022000
*                                                               02S0015 00023000
         B     @PB00002                                         02S0015 00024000
P0ADDBLK ST    @14,@SA00002                                     02S0015 00025000
*   /*****************************************************************/ 00026000
*   /*                                                               */ 00027000
*   /* THIS SEGMENT IS CALLED TO ADD AN ADDITIONAL 2K BLOCK OF       */ 00028000
*   /* DYNAMIC STORAGE IS REQUIRED. IT WILL CALL 'ISDAGET1' FOR      */ 00029000
*   /* ANOTHER BLOCK AND CHAIN IT TO THE PREVIOUS.                   */ 00030000
*   /*                                                               */ 00031000
*   /*****************************************************************/ 00032000
*                                                               02S0016 00033000
*   CORELEN=2048;                   /* LOAD BLOCK LENGTH     @Y30LB52*/ 00034000
         L     @10,@PC00001                                     02S0016 00035000
         L     @10,CVTPTR(,@10)                                 02S0016 00036000
         MVC   CORELEN(3,@10),@CF00330+1                        02S0016 00037000
*   SPNO=2;                         /* LOAD SUBPOOL NUMBER   @Y30LB52*/ 00038000
         MVI   SPNO(@10),X'02'                                  02S0017 00039000
*   RESPECIFY                                                   02S0018 00040000
*     R1 RESTRICTED;                /*                       @Y30LB52*/ 00041000
*   R1=ADDR(WORKCALL);              /* LOAD PARMLIST POINTER @Y30LB52*/ 00042000
         LA    R1,WORKCALL(,@10)                                02S0019 00043000
*   RESPECIFY                                                   02S0020 00044000
*     R1 UNRESTRICTED;              /*                       @Y30LB52*/ 00045000
*   CALL ISDAGET1;                  /* GET A BLOCK           @Y30LB52*/ 00046000
*                                                               02S0021 00047000
         L     @15,@CV00054                                     02S0021 00048000
         BALR  @14,@15                                          02S0021 00049000
*   /*****************************************************************/ 00050000
*   /*                                                               */ 00051000
*   /* IF THE RETURN CODE IS NON-ZERO, CONTROL IS RETURNED TO THE    */ 00052000
*   /* CALLER. OTHERWISE, THE BLOCK IS CHAINED AND THE ASSIGNMENT    */ 00053000
*   /* POINTERS SET.                                                 */ 00054000
*   /*                                                               */ 00055000
*   /*****************************************************************/ 00056000
*                                                               02S0022 00057000
*   RESPECIFY                                                   02S0022 00058000
*     R15 RESTRICTED;               /*                       @Y30LB52*/ 00059000
*   IF R15=0 THEN                                               02S0023 00060000
         SLR   @14,@14                                          02S0023 00061000
         CR    R15,@14                                          02S0023 00062000
         BNE   @RF00023                                         02S0023 00063000
*     DO;                           /* ERROR IN BLOCK        @Y30LB52*/ 00064000
*       RESPECIFY                                               02S0025 00065000
*         R15 UNRESTRICTED;         /*                       @Y30LB52*/ 00066000
*       PADLASTB->PADFPTR1=COREADDR;/* CHAIN NEW BLOCK       @Y30LB52*/ 00067000
         L     @10,@PC00001                                     02S0026 00068000
         L     @10,CVTPTR(,@10)                                 02S0026 00069000
         L     @15,PAD00PTR(,@10)                               02S0026 00070000
         L     @01,PADLASTB(,@15)                               02S0026 00071000
         L     @10,COREADDR(,@10)                               02S0026 00072000
         ST    @10,PADFPTR1(,@01)                               02S0026 00073000
*       PADLASTB=COREADDR;          /* SET NEW LAST PTR      @Y30LB52*/ 00074000
         ST    @10,PADLASTB(,@15)                               02S0027 00075000
*       PADLASTB->PADFPTR1=0;       /* INDICATE NO FOREWORD  @Y30LB52*/ 00076000
         ST    @14,PADFPTR1(,@10)                               02S0028 00077000
*       COREASG=COREADDR+LENGTH(P0WORK1);/* LOADASSIGNED PTR @Y30LB52*/ 00078000
         LA    @09,4                                            02S0029 00079000
         ALR   @09,@10                                          02S0029 00080000
         ST    @09,COREASG(,@15)                                02S0029 00081000
*       ENDCORE=COREADDR+2048;      /* SET END OF CORE       @Y30LB52*/ 00082000
         AL    @10,@CF00330                                     02S0030 00083000
         ST    @10,ENDCORE(,@15)                                02S0030 00084000
*       RETURN CODE(0);             /* RETURN                @Y30LB52*/ 00085000
         LR    @15,@14                                          02S0031 00086000
@EL00002 DS    0H                                               02S0031 00087000
@EF00002 DS    0H                                               02S0031 00088000
@ER00002 L     @14,@SA00002                                     02S0031 00089000
         BR    @14                                              02S0031 00090000
*     END;                          /*                       @Y30LB52*/ 00091000
*   ELSE                                                        02S0033 00092000
*     DO;                           /*                       @Y30LB52*/ 00093000
@RF00023 DS    0H                                               02S0034 00094000
*       RESPECIFY                                               02S0034 00095000
*        (R1) RESTRICTED;           /*                       @Y30LB52*/ 00096000
*       RESPECIFY                                               02S0035 00097000
*         P0WORK1 BASED(COREADDR);  /*                       @Y30LB52*/ 00098000
*       COREADDR=PAD00PTR;          /* LOAD FIRST BLK ADDRESS@Y30LB52*/ 00099000
         L     @10,@PC00001                                     02S0036 00100000
         L     @10,CVTPTR(,@10)                                 02S0036 00101000
         MVC   COREADDR(4,@10),PAD00PTR(@10)                    02S0036 00102000
*       DO WHILE(COREADDR^=0);      /* FREE TO LAST BLOCK    @Y30LB52*/ 00103000
         B     @DE00037                                         02S0037 00104000
@DL00037 DS    0H                                               02S0038 00105000
*         R1=ADDR(WORKCALL);        /* LOAD PARMLIST POINTER @Y30LB52*/ 00106000
         L     @10,@PC00001                                     02S0038 00107000
         L     @10,CVTPTR(,@10)                                 02S0038 00108000
         LA    R1,WORKCALL(,@10)                                02S0038 00109000
*         I=PADFPTR1;               /* LOAD NEXT BLOCK ADDR  @Y30LB52*/ 00110000
         L     @10,COREADDR(,@10)                               02S0039 00111000
         L     I,PADFPTR1(,@10)                                 02S0039 00112000
*         CALL ISDAFREE;            /* FREE THE BLOCK        @Y30LB52*/ 00113000
         L     @15,@CV00053                                     02S0040 00114000
         BALR  @14,@15                                          02S0040 00115000
*         COREADDR=I;               /* LOAD NEXT BLOCK PTR   @Y30LB52*/ 00116000
         L     @10,@PC00001                                     02S0041 00117000
         L     @10,CVTPTR(,@10)                                 02S0041 00118000
         ST    I,COREADDR(,@10)                                 02S0041 00119000
*       END;                        /*                       @Y30LB52*/ 00120000
@DE00037 L     @10,@PC00001                                     02S0042 00121000
         L     @10,CVTPTR(,@10)                                 02S0042 00122000
         ICM   @00,15,COREADDR(@10)                             02S0042 00123000
         BNZ   @DL00037                                         02S0042 00124000
*       CPAD='00'X;                 /* TURN OFF THE PAD      @Y30LB52*/ 00125000
         L     @10,LPARMPTR(,@10)                               02S0043 00126000
         MVI   CPAD(@10),X'00'                                  02S0043 00127000
*       RETURN CODE(NOSPACE);       /* INDICATE NO SPACE     @Y30LB52*/ 00128000
         LA    @15,4                                            02S0044 00129000
         L     @14,@SA00002                                     02S0044 00130000
         BR    @14                                              02S0044 00131000
*     END;                          /*                       @Y30LB52*/ 00132000
*   END P0ADDBLK;                   /*                       @Y30LB52*/ 00133000
@PB00002 DS    0H                                               02S0047 00134000
*                                                               01S0047 00135000
*   /*****************************************************************/ 00136000
*   /*                                                               */ 00137000
*   /* 'PAD00PTR' CONTAINS THE ADDRESS OF THE PERMANENT ACCUMULATOR  */ 00138000
*   /* STORAGE.                                                      */ 00139000
*   /*                                                               */ 00140000
*   /*****************************************************************/ 00141000
*                                                               01S0047 00142000
*   I=0;                            /* CLEAR UTILITY VARIABLE@Y30LB52*/ 00143000
         SLR   I,I                                              01S0047 00144000
*   J=0;                            /*                       @Y30LB52*/ 00145000
         SLR   J,J                                              01S0048 00146000
*   K=0;                            /*                       @Y30LB52*/ 00147000
         SLR   K,K                                              01S0049 00148000
*   SATABP=0;                       /* CLEAR THE SA POINTER  @Y30LB52*/ 00149000
         SLR   SATABP,SATABP                                    01S0050 00150000
*   IF PAD00PTR=0 THEN                                          01S0051 00151000
         L     @10,@PC00001                                     01S0051 00152000
         L     @10,CVTPTR(,@10)                                 01S0051 00153000
         ICM   @05,15,PAD00PTR(@10)                             01S0051 00154000
         BNZ   @RF00051                                         01S0051 00155000
*     DO;                           /*                       @Y30LB52   00156000
*                                      FIRST ENTRY, ALLOCATE 2K      */ 00157000
*                                                               02S0053 00158000
*       /*************************************************************/ 00159000
*       /*                                                           */ 00160000
*       /* THIS SEGMENT IS ENTERED ON THE FIRST CALL TO THE MAIN     */ 00161000
*       /* SEGMENT. IT'S FUNCTION IS TO GET THE FIRST 2K OF DYNAMIC  */ 00162000
*       /* STORAGE AND SET THE FIXED WORK AREA TO XERO. IF NO SPACE  */ 00163000
*       /* IS AVAILABLE, THE REPORT TURNS ITSELF OFF AND RETURNS THAT*/ 00164000
*       /* INDICATION TO THE CONTROLLER.                             */ 00165000
*       /*                                                           */ 00166000
*       /*************************************************************/ 00167000
*                                                               02S0053 00168000
*       CORELEN=2048;               /* LENGTH OF BLOCK       @Y30LB52*/ 00169000
         MVC   CORELEN(3,@10),@CF00330+1                        02S0053 00170000
*       SPNO=2;                     /* SUBPOOL NUMBER        @Y30LB52*/ 00171000
*                                                               02S0054 00172000
         MVI   SPNO(@10),X'02'                                  02S0054 00173000
*       /*************************************************************/ 00174000
*       /*                                                           */ 00175000
*       /* SET UP CALLING SEQUENCE                                   */ 00176000
*       /*                                                           */ 00177000
*       /*************************************************************/ 00178000
*                                                               02S0055 00179000
*       RESPECIFY                                               02S0055 00180000
*         R1 RESTRICTED;            /*                       @Y30LB52*/ 00181000
*       R1=ADDR(WORKCALL);          /* ADDRESS OF PARMLIST   @Y30LB52*/ 00182000
         LA    R1,WORKCALL(,@10)                                02S0056 00183000
*       RESPECIFY                                               02S0057 00184000
*         R1 UNRESTRICTED;          /*                       @Y30LB52*/ 00185000
*       CALL ISDAGET1;              /* GET A 2K BLOCK        @Y30LB52*/ 00186000
*                                                               02S0058 00187000
         L     @15,@CV00054                                     02S0058 00188000
         BALR  @14,@15                                          02S0058 00189000
*       /*************************************************************/ 00190000
*       /*                                                           */ 00191000
*       /* IF THE RETURN CODE IS NON-XERO, RETURN TO CALLER.         */ 00192000
*       /*                                                           */ 00193000
*       /*************************************************************/ 00194000
*                                                               02S0059 00195000
*       RESPECIFY                                               02S0059 00196000
*         R15 RESTRICTED;           /*                       @Y30LB52*/ 00197000
*       IF R15^=0 THEN              /* NON-ZERO RETURN CODE  @Y30LB52*/ 00198000
         LTR   R15,R15                                          02S0060 00199000
         BZ    @RF00060                                         02S0060 00200000
*         DO;                       /* NOSPACE AVAILABLE     @Y30LB52*/ 00201000
*           CPAD='00'X;             /*                       @Y30LB52   00202000
*                                      TURN OFF THE PAD REPORT       */ 00203000
         L     @14,@PC00001                                     02S0062 00204000
         L     @14,CVTPTR(,@14)                                 02S0062 00205000
         L     @14,LPARMPTR(,@14)                               02S0062 00206000
         MVI   CPAD(@14),X'00'                                  02S0062 00207000
*           RETURN CODE(NOSPACE);   /* RETURN ERROR          @Y30LB52*/ 00208000
         L     @13,4(,@13)                                      02S0063 00209000
         L     @00,@SIZDATD                                     02S0063 00210000
         LR    @01,@11                                          02S0063 00211000
         ISDAFSPC R,LV=(0),A=(1)                                        00212000
         LA    @15,4                                            02S0063 00213000
         L     @14,12(,@13)                                     02S0063 00214000
         LM    @00,@12,20(@13)                                  02S0063 00215000
         BR    @14                                              02S0063 00216000
*         END;                      /*                       @Y30LB52*/ 00217000
*                                                               02S0064 00218000
*       /*************************************************************/ 00219000
*       /*                                                           */ 00220000
*       /* CLEAR THE GOTTEN STORAGE AND SET THE POINTERS TO IT.      */ 00221000
*       /*                                                           */ 00222000
*       /*************************************************************/ 00223000
*                                                               02S0065 00224000
*       ELSE                                                    02S0065 00225000
*         DO;                       /*                       @Y30LB52*/ 00226000
@RF00060 DS    0H                                               02S0066 00227000
*           PAD00PTR=COREADDR;      /* POINTER TO FIRST 2K   @Y30LB52*/ 00228000
         L     @14,@PC00001                                     02S0066 00229000
         L     @14,CVTPTR(,@14)                                 02S0066 00230000
         L     @10,COREADDR(,@14)                               02S0066 00231000
         ST    @10,PAD00PTR(,@14)                               02S0066 00232000
*           P0WORK=P0WORK&&P0WORK;  /* CLEAR HEADER          @Y30LB52*/ 00233000
         XC    P0WORK(92,@10),P0WORK(@10)                       02S0067 00234000
*           PADLASTB=COREADDR;      /* PTR TO LAST BLK       @Y30LB52*/ 00235000
         ST    @10,PADLASTB(,@10)                               02S0068 00236000
*           COREASG=PAD00PTR+LENGTH(P0WORK);/* SET ASSIGNED POINTER     00237000
*                                                            @Y30LB52*/ 00238000
         LA    @14,92                                           02S0069 00239000
         ALR   @14,@10                                          02S0069 00240000
         ST    @14,COREASG(,@10)                                02S0069 00241000
*           ENDCORE=COREADDR+2048;  /* SET END OF CORE ADDR  @Y30LB52*/ 00242000
         LA    @14,2048                                         02S0070 00243000
         ALR   @14,@10                                          02S0070 00244000
         ST    @14,ENDCORE(,@10)                                02S0070 00245000
*         END;                      /*                       @Y30LB52*/ 00246000
*       RESPECIFY                                               02S0072 00247000
*         R15 UNRESTRICTED;         /*                       @Y30LB52*/ 00248000
*     END;                          /*                       @Y30LB52*/ 00249000
*   ELSE                                                        01S0074 00250000
*     ;                             /* NOT FIRST ENTRY       @ZA00699*/ 00251000
*                                                               01S0074 00252000
@RF00051 DS    0H                                               01S0075 00253000
*   /*****************************************************************/ 00254000
*   /*                                                               */ 00255000
*   /* LOAD THE WORKAREA POINTER FROM THE SDACVT.                    */ 00256000
*   /*                                                               */ 00257000
*   /*****************************************************************/ 00258000
*                                                               01S0075 00259000
*   PWORKPTR=PAD00PTR;              /* SET WORKPTR           @Y30LB52*/ 00260000
         L     @10,@PC00001                                     01S0075 00261000
         L     @10,CVTPTR(,@10)                                 01S0075 00262000
         L     PWORKPTR,PAD00PTR(,@10)                          01S0075 00263000
*   RESPECIFY                                                   01S0076 00264000
*    (P0WORK) BASED(PWORKPTR);      /*                       @Y30LB52*/ 00265000
*                                                               01S0076 00266000
*   /*****************************************************************/ 00267000
*   /*                                                               */ 00268000
*   /* IF THE DEVICE TYPE IS MSC, THEN A TEST AND ALLOCATION SEGMENT */ 00269000
*   /* IS EXECUTED TO SUPPLY ACCESS TO THE 'MSC' AND 'SA' LEVELS OF  */ 00270000
*   /* THE ACCUMULATOR STRUCTURE. 'P0FMT4' IS EXECUTED TO ACCUMULATE */ 00271000
*   /* DRC/DRD ERRORS AND 'P0FMT5' IS EXECUTED TO ACCUMULATE MSC/DASD*/ 00272000
*   /* ERRORS.                                                       */ 00273000
*   /*                                                               */ 00274000
*   /*****************************************************************/ 00275000
*                                                               01S0077 00276000
*   IF INDEVTYP='S' THEN            /* INDICATES MSC RECORD  @Y30LB52*/ 00277000
         L     @05,SDA00PTR(,@10)                               01S0077 00278000
         CLI   INDEVTYP(@05),C'S'                               01S0077 00279000
         BNE   @RF00077                                         01S0077 00280000
*     DO;                           /* PROCESS MSC RECORD    @Y30LB52*/ 00281000
*                                                               02S0079 00282000
*       /*************************************************************/ 00283000
*       /*                                                           */ 00284000
*       /* THIS SEGMENT OF CODE IS EXECUTED FOR THOSE ERROR RECORDS  */ 00285000
*       /* LOGGED THROUGH THE 'MSC'. IT'S FUNCTION IS THAT OF FINDING*/ 00286000
*       /* THE 'MSC' IN THE 'MSCDRDAC' AND ALLOCATING STORAGE FOR THE*/ 00287000
*       /* NEXT LEVEL 'SA' ARRAY. A POINTER TO THE 'SA' LEVEL IS SET.*/ 00288000
*       /*                                                           */ 00289000
*       /*************************************************************/ 00290000
*                                                               02S0079 00291000
*       IF SUBSTAT4(5)='1'B THEN    /* DATA CHECK RECORD     @ZM30731*/ 00292000
         L     @10,SENSEPTR(,@10)                               02S0079 00293000
         TM    SUBSTAT4(@10),B'00001000'                        02S0079 00294000
         BNO   @RF00079                                         02S0079 00295000
*         RETURN CODE(0);           /* YES, IGNORE IT, EXIT  @ZM30731*/ 00296000
         L     @13,4(,@13)                                      02S0080 00297000
         L     @00,@SIZDATD                                     02S0080 00298000
         LR    @01,@11                                          02S0080 00299000
         ISDAFSPC R,LV=(0),A=(1)                                        00300000
         SLR   @15,@15                                          02S0080 00301000
         L     @14,12(,@13)                                     02S0080 00302000
         LM    @00,@12,20(@13)                                  02S0080 00303000
         BR    @14                                              02S0080 00304000
*       ELSE                                                    02S0081 00305000
*         ;                         /* NO, USE THIS RECORD   @ZM30731*/ 00306000
@RF00079 DS    0H                                               02S0082 00307000
*       DO I=1 TO 8 WHILE(MSCINTF(I)^=INRECCUA)&(MSCINTF(I)^='0000'X);  00308000
         LA    I,1                                              02S0082 00309000
@DL00082 LR    @10,I                                            02S0082 00310000
         SLA   @10,3                                            02S0082 00311000
         L     @15,@PC00001                                     02S0082 00312000
         L     @01,CVTPTR(,@15)                                 02S0082 00313000
         L     @01,SDA00PTR(,@01)                               02S0082 00314000
         ST    @10,@TF00001                                     02S0082 00315000
         ALR   @10,PWORKPTR                                     02S0082 00316000
         CLC   MSCINTF-8(2,@10),INRECCUA(@01)                   02S0082 00317000
         BE    @DC00082                                         02S0082 00318000
         LR    @10,PWORKPTR                                     02S0082 00319000
         AL    @10,@TF00001                                     02S0082 00320000
         CLC   MSCINTF-8(2,@10),@CB00338                        02S0082 00321000
         BE    @DC00082                                         02S0082 00322000
*                                   /* LOOP THROUGH ALL MSC'S@Y30LB52*/ 00323000
*       END;                        /*                       @Y30LB52*/ 00324000
*                                                               02S0083 00325000
         AH    I,@CH00049                                       02S0083 00326000
         CH    I,@CH00057                                       02S0083 00327000
         BNH   @DL00082                                         02S0083 00328000
@DC00082 DS    0H                                               02S0084 00329000
*       /*************************************************************/ 00330000
*       /*                                                           */ 00331000
*       /* IF A NEW MSC ADDRESS, AN ARRAY FOR THE POSSIBLE SA'S MUST */ 00332000
*       /* BE ALLOCATED.                                             */ 00333000
*       /*                                                           */ 00334000
*       /*************************************************************/ 00335000
*                                                               02S0084 00336000
*       SATABP=SATABPTR(I);         /* PTR TO SATAB          @Y30LB52*/ 00337000
         LR    @10,I                                            02S0084 00338000
         SLA   @10,3                                            02S0084 00339000
         L     SATABP,SATABPTR-8(@10,PWORKPTR)                  02S0084 00340000
*       IF SATABP=0 THEN            /* IF ZERO, ALLOCATE     @Y30LB52*/ 00341000
         LTR   SATABP,SATABP                                    02S0085 00342000
         BNZ   @RF00085                                         02S0085 00343000
*         DO;                       /*                       @Y30LB52*/ 00344000
*           MSCINTF(I)=INRECCUA;    /* SET MSC UNIT ADDRESS  @Y30LB52*/ 00345000
*                                                               02S0087 00346000
         ST    @10,@TF00001                                     02S0087 00347000
         ALR   @10,PWORKPTR                                     02S0087 00348000
         L     @15,@PC00001                                     02S0087 00349000
         L     @01,CVTPTR(,@15)                                 02S0087 00350000
         L     @01,SDA00PTR(,@01)                               02S0087 00351000
         MVC   MSCINTF-8(2,@10),INRECCUA(@01)                   02S0087 00352000
*           /*********************************************************/ 00353000
*           /*                                                       */ 00354000
*           /* THIS SUBSEGMENT ASSIGNS A BLOCK OF STORAGE ON DEMAND. */ 00355000
*           /* IF INSUFFICIENT STORAGE REMAINS IN THE LAST BLOCK, THE*/ 00356000
*           /* SEGMENT 'P0ADDBLK' IS EXECUTED TO OBTAIN ANOTHER 2K OF*/ 00357000
*           /* STORAGE AND CHAIN IT TO THE PREVIOUS BLOCK(S).        */ 00358000
*           /*                                                       */ 00359000
*           /*********************************************************/ 00360000
*                                                               02S0088 00361000
*           SATABPTR(I)=COREASG;    /* SET BLOCK ADDRESS TO NEXT        00362000
*                                      AVAILABLE             @Y30LB52*/ 00363000
         L     @10,COREASG(,PWORKPTR)                           02S0088 00364000
         L     @01,@TF00001                                     02S0088 00365000
         ST    @10,SATABPTR-8(@01,PWORKPTR)                     02S0088 00366000
*           COREASG=COREASG+LENGTH(CSADRDDS);/* INCREMENT THE NEXT      00367000
*                                      ADDRESS               @Y30LB52*/ 00368000
*                                                               02S0089 00369000
         AH    @10,@CH00074                                     02S0089 00370000
         ST    @10,COREASG(,PWORKPTR)                           02S0089 00371000
*           /*********************************************************/ 00372000
*           /*                                                       */ 00373000
*           /* IF THE CURRENT BLOCK DOESN'T CONTAIN ENOUGH SPACE, GET*/ 00374000
*           /* A NEW 2K BLOCK AND CHAIN IT IN.                       */ 00375000
*           /*                                                       */ 00376000
*           /*********************************************************/ 00377000
*                                                               02S0090 00378000
*           IF COREASG>ENDCORE THEN /* PAST END OF 2K BLOCK? @Y30LB52*/ 00379000
         C     @10,ENDCORE(,PWORKPTR)                           02S0090 00380000
         BNH   @RF00090                                         02S0090 00381000
*             DO;                   /* GET ANOTHER           @Y30LB52*/ 00382000
*               CALL P0ADDBLK;      /* INTERNAL PROCEDURE    @Y30LB52*/ 00383000
         BAL   @14,P0ADDBLK                                     02S0092 00384000
*               RESPECIFY                                       02S0093 00385000
*                 R15 RESTRICTED;   /*                       @Y30LB52*/ 00386000
*               IF R15^=0 THEN                                  02S0094 00387000
         LTR   R15,R15                                          02S0094 00388000
         BZ    @RF00094                                         02S0094 00389000
*                 DO;               /* OUT OF CORE?          @Y30LB52*/ 00390000
*                   CPAD='00'X;     /* TURN OFF THE PAD REPORT  02S0096 00391000
*                                                            @Y30LB52*/ 00392000
         L     @14,@PC00001                                     02S0096 00393000
         L     @14,CVTPTR(,@14)                                 02S0096 00394000
         L     @14,LPARMPTR(,@14)                               02S0096 00395000
         MVI   CPAD(@14),X'00'                                  02S0096 00396000
*                   RETURN CODE(NOSPACE);/* INDICATE WHAT HAPPENED      00397000
*                                                            @Y30LB52*/ 00398000
         L     @13,4(,@13)                                      02S0097 00399000
         L     @00,@SIZDATD                                     02S0097 00400000
         LR    @01,@11                                          02S0097 00401000
         ISDAFSPC R,LV=(0),A=(1)                                        00402000
         LA    @15,4                                            02S0097 00403000
         L     @14,12(,@13)                                     02S0097 00404000
         LM    @00,@12,20(@13)                                  02S0097 00405000
         BR    @14                                              02S0097 00406000
*                 END;              /*                       @Y30LB52*/ 00407000
*               ELSE                                            02S0099 00408000
*                 DO;               /* SET THE POINTERS      @Y30LB52*/ 00409000
@RF00094 DS    0H                                               02S0100 00410000
*                   SATABPTR(I)=COREASG;/* SET BLOCK ADDRESS @Y30LB52*/ 00411000
         LR    @14,I                                            02S0100 00412000
         SLA   @14,3                                            02S0100 00413000
         L     @10,COREASG(,PWORKPTR)                           02S0100 00414000
         ST    @10,SATABPTR-8(@14,PWORKPTR)                     02S0100 00415000
*                   COREASG=COREASG+LENGTH(CSADRDDS);/* INCREMENT THE   00416000
*                                      ASSIGNL               @Y30LB52*/ 00417000
         AH    @10,@CH00074                                     02S0101 00418000
         ST    @10,COREASG(,PWORKPTR)                           02S0101 00419000
*                 END;              /*                       @Y30LB52*/ 00420000
*             END;                  /*                       @Y30LB52*/ 00421000
*                                                               02S0103 00422000
*           /*********************************************************/ 00423000
*           /*                                                       */ 00424000
*           /* CLEAR THE RETURNED ARRAY                              */ 00425000
*           /*                                                       */ 00426000
*           /*********************************************************/ 00427000
*                                                               02S0104 00428000
*           SATABP=SATABPTR(I);     /* SET SATAB POINTER     @Y30LB52*/ 00429000
@RF00090 LR    @14,I                                            02S0104 00430000
         SLA   @14,3                                            02S0104 00431000
         L     SATABP,SATABPTR-8(@14,PWORKPTR)                  02S0104 00432000
*           RESPECIFY                                           02S0105 00433000
*             SADRDDSD BASED(SATABP);/*                      @Y30LB52*/ 00434000
*           CSADRDDS=CSADRDDS&&CSADRDDS;/* CLEAR             @Y30LB52*/ 00435000
         XC    CSADRDDS(128,SATABP),CSADRDDS(SATABP)            02S0106 00436000
*         END;                      /*                       @Y30LB52*/ 00437000
*     END;                          /*                       @Y30LB52*/ 00438000
*   ELSE                                                        01S0109 00439000
*     ;                             /* NOT FROM MSC          @ZA00699*/ 00440000
@RF00077 DS    0H                                               01S0110 00441000
*   IF(INDEVTYP='S'&FORMATNO(5)=ON) THEN/* FMT 4 BIT ON?     @Y30LB52*/ 00442000
@RC00077 L     @14,@PC00001                                     01S0110 00443000
         L     @14,CVTPTR(,@14)                                 01S0110 00444000
         L     @10,SDA00PTR(,@14)                               01S0110 00445000
         CLI   INDEVTYP(@10),C'S'                               01S0110 00446000
         BNE   @RF00110                                         01S0110 00447000
         L     @14,SENSEPTR(,@14)                               01S0110 00448000
         TM    FORMATNO(@14),B'00001000'                        01S0110 00449000
         BNO   @RF00110                                         01S0110 00450000
*     DO;                           /*                       @Y30LB52*/ 00451000
*                                                               02S0112 00452000
*       /*************************************************************/ 00453000
*       /*                                                           */ 00454000
*       /* THIS SEGMENT OF CODE IS ENTERED TO UPDATE THE PROPER ERROR*/ 00455000
*       /* COUNTER FOR AN ERROR REFLECTED IN A FORMAT 4 MSC OBR. THE */ 00456000
*       /* SA NUMBER IS USED TO ACCESS THAT ARRAY WHICH POINTS TO A 4*/ 00457000
*       /* BY 4 ARRAY OF ACCUMULATORS, 'DRDACCTB'. THIS ARRAY IS ALSO*/ 00458000
*       /* ALLOCATED AS NEEDED. FIRST LOCATE THE MSC ADDRESS IN THE  */ 00459000
*       /* TABLE OR THE FIRST EMPTY SLOT. COMPUTE THE SA NUMBER TO BE*/ 00460000
*       /* USED AS AN INDEX INTO THE SA ARRAY. THE SA NUMBER IS IN   */ 00461000
*       /* THE CHANNEL ADDRESS IN THE SA SENSE AND THE 'SARETRY' BYTE*/ 00462000
*       /* DETERMINES THE LOWER INTERFACE ON THE MSC.                */ 00463000
*       /*                                                           */ 00464000
*       /*************************************************************/ 00465000
*                                                               02S0112 00466000
*       IF SARETRY(8)=ON THEN       /* CHECK DSM INTF BIT    @Y30LB52*/ 00467000
         TM    SARETRY(@14),B'00000001'                         02S0112 00468000
         BNO   @RF00112                                         02S0112 00469000
*         I=SALOWAD2/32+9;          /* IF ON, SA 9-16        @YD00146*/ 00470000
         SLR   I,I                                              02S0113 00471000
         IC    I,SALOWAD2(,@14)                                 02S0113 00472000
         SRL   I,5                                              02S0113 00473000
         AH    I,@CH00341                                       02S0113 00474000
*       ELSE                                                    02S0114 00475000
*         I=SALOWAD2/32+1;          /* OTHERWISE, SA 1-8     @YD00146*/ 00476000
*                                                               02S0114 00477000
         B     @RC00112                                         02S0114 00478000
@RF00112 L     @14,@PC00001                                     02S0114 00479000
         L     @14,CVTPTR(,@14)                                 02S0114 00480000
         L     @14,SENSEPTR(,@14)                               02S0114 00481000
         SLR   I,I                                              02S0114 00482000
         IC    I,SALOWAD2(,@14)                                 02S0114 00483000
         SRL   I,5                                              02S0114 00484000
         AH    I,@CH00049                                       02S0114 00485000
*       /*************************************************************/ 00486000
*       /*                                                           */ 00487000
*       /* THE ARRAY ELEMENT SELECTED IS A POINTER TO THE            */ 00488000
*       /* ACCUMULATORS FOR THE PATH WITH THE SA AND MSC COMPUTED    */ 00489000
*       /* ABOVE. IF XERO, THE ACCUMULATOR ARRAY MUST BE ALLOCATED.  */ 00490000
*       /*                                                           */ 00491000
*       /*************************************************************/ 00492000
*                                                               02S0115 00493000
*       DRDTBPTR=SADRDACC(I);       /* LOAD ACCUMULATOR PTR  @Y30LB52*/ 00494000
@RC00112 LR    @14,I                                            02S0115 00495000
         SLA   @14,3                                            02S0115 00496000
         LR    @10,SATABP                                       02S0115 00497000
         AL    @10,@CF00378                                     02S0115 00498000
         L     DRDTBPTR,SADRDACC(@14,@10)                       02S0115 00499000
*       IF DRDTBPTR=0 THEN                                      02S0116 00500000
         LTR   DRDTBPTR,DRDTBPTR                                02S0116 00501000
         BNZ   @RF00116                                         02S0116 00502000
*         DO;                       /* IF ZERO, ALLOCATE BLK @Y30LB52*/ 00503000
*                                                               02S0117 00504000
*           /*********************************************************/ 00505000
*           /*                                                       */ 00506000
*           /* THIS SUBSEGMENT ASSIGNS A BLOCK OF STORAGE ON DEMAND. */ 00507000
*           /* IF INSUFFICIENT STORAGE REMAINS IN THE LAST BLOCK, THE*/ 00508000
*           /* SEGMENT 'P0ADDBLK' IS EXECUTED TO OBTAIN ANOTHER 2K OF*/ 00509000
*           /* STORAGE AND CHAIN IT TO THE PREVIOUS BLOCK(S).        */ 00510000
*           /*                                                       */ 00511000
*           /*********************************************************/ 00512000
*                                                               02S0118 00513000
*           SADRDACC(I)=COREASG;    /* SET BLOCK ADDRESS TO NEXT        00514000
*                                      AVAILABLE             @Y30LB52*/ 00515000
         L     @10,COREASG(,PWORKPTR)                           02S0118 00516000
         AL    @14,@CF00378                                     02S0118 00517000
         ST    @10,SADRDACC(@14,SATABP)                         02S0118 00518000
*           COREASG=COREASG+LENGTH(CDRDACCT);/* INCREMENT THE NEXT      00519000
*                                      ADDRESS               @Y30LB52*/ 00520000
*                                                               02S0119 00521000
         AH    @10,@CH00078                                     02S0119 00522000
         ST    @10,COREASG(,PWORKPTR)                           02S0119 00523000
*           /*********************************************************/ 00524000
*           /*                                                       */ 00525000
*           /* IF THE CURRENT BLOCK DOESN'T CONTAIN ENOUGH SPACE, GET*/ 00526000
*           /* A NEW 2K BLOCK AND CHAIN IT IN.                       */ 00527000
*           /*                                                       */ 00528000
*           /*********************************************************/ 00529000
*                                                               02S0120 00530000
*           IF COREASG>ENDCORE THEN /* PAST END OF 2K BLOCK? @Y30LB52*/ 00531000
         C     @10,ENDCORE(,PWORKPTR)                           02S0120 00532000
         BNH   @RF00120                                         02S0120 00533000
*             DO;                   /* GET ANOTHER           @Y30LB52*/ 00534000
*               CALL P0ADDBLK;      /* INTERNAL PROCEDURE    @Y30LB52*/ 00535000
         BAL   @14,P0ADDBLK                                     02S0122 00536000
*               RESPECIFY                                       02S0123 00537000
*                 R15 RESTRICTED;   /*                       @Y30LB52*/ 00538000
*               IF R15^=0 THEN                                  02S0124 00539000
         LTR   R15,R15                                          02S0124 00540000
         BZ    @RF00124                                         02S0124 00541000
*                 DO;               /* OUT OF CORE?          @Y30LB52*/ 00542000
*                   CPAD='00'X;     /* TURN OFF THE PAD REPORT  02S0126 00543000
*                                                            @Y30LB52*/ 00544000
         L     @14,@PC00001                                     02S0126 00545000
         L     @14,CVTPTR(,@14)                                 02S0126 00546000
         L     @14,LPARMPTR(,@14)                               02S0126 00547000
         MVI   CPAD(@14),X'00'                                  02S0126 00548000
*                   RETURN CODE(NOSPACE);/* INDICATE WHAT HAPPENED      00549000
*                                                            @Y30LB52*/ 00550000
         L     @13,4(,@13)                                      02S0127 00551000
         L     @00,@SIZDATD                                     02S0127 00552000
         LR    @01,@11                                          02S0127 00553000
         ISDAFSPC R,LV=(0),A=(1)                                        00554000
         LA    @15,4                                            02S0127 00555000
         L     @14,12(,@13)                                     02S0127 00556000
         LM    @00,@12,20(@13)                                  02S0127 00557000
         BR    @14                                              02S0127 00558000
*                 END;              /*                       @Y30LB52*/ 00559000
*               ELSE                                            02S0129 00560000
*                 DO;               /* SET THE POINTERS      @Y30LB52*/ 00561000
@RF00124 DS    0H                                               02S0130 00562000
*                   SADRDACC(I)=COREASG;/* SET BLOCK ADDRESS @Y30LB52*/ 00563000
         LR    @14,I                                            02S0130 00564000
         SLA   @14,3                                            02S0130 00565000
         L     @10,COREASG(,PWORKPTR)                           02S0130 00566000
         AL    @14,@CF00378                                     02S0130 00567000
         ST    @10,SADRDACC(@14,SATABP)                         02S0130 00568000
*                   COREASG=COREASG+LENGTH(CDRDACCT);/* INCREMENT THE   00569000
*                                      ASSIGNL               @Y30LB52*/ 00570000
         AH    @10,@CH00078                                     02S0131 00571000
         ST    @10,COREASG(,PWORKPTR)                           02S0131 00572000
*                 END;              /*                       @Y30LB52*/ 00573000
*             END;                  /*                       @Y30LB52*/ 00574000
*           DRDTBPTR=SADRDACC(I);   /* LOAD ACCUMULATOR PTR  @Y30LB52*/ 00575000
@RF00120 LR    @14,I                                            02S0134 00576000
         SLA   @14,3                                            02S0134 00577000
         AL    @14,@CF00378                                     02S0134 00578000
         L     DRDTBPTR,SADRDACC(@14,SATABP)                    02S0134 00579000
*           RESPECIFY                                           02S0135 00580000
*             DRDACCTB BASED(DRDTBPTR);/* SET BASE           @Y30LB52*/ 00581000
*           CDRDACCT=CDRDACCT&&CDRDACCT;/* CLEAR             @Y30LB52*/ 00582000
         XC    CDRDACCT(96,DRDTBPTR),CDRDACCT(DRDTBPTR)         02S0136 00583000
*         END;                      /*                       @Y30LB52*/ 00584000
*                                                               02S0137 00585000
*       /*************************************************************/ 00586000
*       /*                                                           */ 00587000
*       /* SET A POINTER TO THE ACCUMULATOR OBTAINED AND EXTRACT THE */ 00588000
*       /* LOGICAL DRD AND DRC NUMBERS FROM THE CHANNEL ADDRESS IN   */ 00589000
*       /* THE SENSE(SALOWAD2).                                      */ 00590000
*       /*                                                           */ 00591000
*       /*************************************************************/ 00592000
*                                                               02S0138 00593000
*       I=SALOWAD2(1:8)&'0F'X;      /* LOAD DRC AND DRD      @YD00146   00594000
*                                      NUMBER                @Y30LB52*/ 00595000
@RF00116 L     @14,@PC00001                                     02S0138 00596000
         L     @14,CVTPTR(,@14)                                 02S0138 00597000
         L     @14,SENSEPTR(,@14)                               02S0138 00598000
         SLR   @10,@10                                          02S0138 00599000
         IC    @10,SALOWAD2(,@14)                               02S0138 00600000
         LA    I,15                                             02S0138 00601000
         NR    I,@10                                            02S0138 00602000
*       I=I/4+1;                    /* LOAD DRC              @Y30LB52*/ 00603000
         LA    @09,1                                            02S0139 00604000
         LR    @08,I                                            02S0139 00605000
         SRL   @08,2                                            02S0139 00606000
         ALR   @08,@09                                          02S0139 00607000
         LR    I,@08                                            02S0139 00608000
*       J=SALOWAD2(1:8)&'03'X;      /* LOAD DRD NUMBER       @YD00146*/ 00609000
         N     @10,@CF00344                                     02S0140 00610000
         LR    J,@10                                            02S0140 00611000
*       J=J+1;                      /* LOAD DRD INDEX        @Y30LB52*/ 00612000
*                                                               02S0141 00613000
         ALR   J,@09                                            02S0141 00614000
*       /*************************************************************/ 00615000
*       /*                                                           */ 00616000
*       /* DEPENDING ON WHICH SUBFORMAT(9,A,B,E) IS INDICATED IN THE */ 00617000
*       /* RECORD AND THE DRD AND DRC LOGICAL ADDRESSES, THE         */ 00618000
*       /* APPROPRIATE ACCUMULATOR IS INCREMENTED.                   */ 00619000
*       /*                                                           */ 00620000
*       /*************************************************************/ 00621000
*                                                               02S0142 00622000
*       I=ADDR(DRDACCTB(I,J));      /* LOAD POINTER TO       @Y30LB52   00623000
*                                      ACCUMULATOR           @Y30LB52*/ 00624000
         LR    @10,I                                            02S0142 00625000
         SLA   @10,2                                            02S0142 00626000
         ALR   @10,J                                            02S0142 00627000
         MH    @10,@CH00076                                     02S0142 00628000
         AL    @10,@CF00379                                     02S0142 00629000
         LA    @10,DRDACCTB(@10,DRDTBPTR)                       02S0142 00630000
         LR    I,@10                                            02S0142 00631000
*       RESPECIFY                                               02S0143 00632000
*        (DRDACCS) BASED(I);        /*                       @Y30LB52*/ 00633000
*       IF SUBFMTNO='1001'B THEN    /* IF SUBFORMAT 9        @Y30LB52*/ 00634000
         TM    SUBFMTNO(@14),B'10010000'                        02S0144 00635000
         BNO   @RF00144                                         02S0144 00636000
         TM    SUBFMTNO(@14),B'01100000'                        02S0144 00637000
         BNZ   @RF00144                                         02S0144 00638000
*         DRDERRS=DRDERRS+1;        /* INCREMENT THE PTR     @Y30LB52*/ 00639000
         AH    @09,DRDERRS(,I)                                  02S0145 00640000
         STH   @09,DRDERRS(,I)                                  02S0145 00641000
*       ELSE                        /* OTHERWISE, CHECK OTHER@Y30LB52   00642000
*                                      SUBS                  @Y30LB52*/ 00643000
*         IF SUBFMTNO='1010'B THEN  /* IF SUB A,             @Y30LB52*/ 00644000
         B     @RC00144                                         02S0146 00645000
@RF00144 L     @14,@PC00001                                     02S0146 00646000
         L     @14,CVTPTR(,@14)                                 02S0146 00647000
         L     @14,SENSEPTR(,@14)                               02S0146 00648000
         TM    SUBFMTNO(@14),B'10100000'                        02S0146 00649000
         BNO   @RF00146                                         02S0146 00650000
         TM    SUBFMTNO(@14),B'01010000'                        02S0146 00651000
         BNZ   @RF00146                                         02S0146 00652000
*           CTLIERRS=CTLIERRS+1;    /* INCREMENT CTLI        @Y30LB52   00653000
*                                      ACCUMULATOR           @Y30LB52*/ 00654000
         LA    @14,1                                            02S0147 00655000
         AH    @14,CTLIERRS(,I)                                 02S0147 00656000
         STH   @14,CTLIERRS(,I)                                 02S0147 00657000
*         ELSE                      /* CHECK SUB B           @ZM30731*/ 00658000
*           IF SUBFMTNO='1011'B THEN/* SA FORMAT B           @ZM30731*/ 00659000
         B     @RC00146                                         02S0148 00660000
@RF00146 L     @14,@PC00001                                     02S0148 00661000
         L     @14,CVTPTR(,@14)                                 02S0148 00662000
         L     @14,SENSEPTR(,@14)                               02S0148 00663000
         TM    SUBFMTNO(@14),B'10110000'                        02S0148 00664000
         BNO   @RF00148                                         02S0148 00665000
         TM    SUBFMTNO(@14),B'01000000'                        02S0148 00666000
         BNZ   @RF00148                                         02S0148 00667000
*             IF SSIDTYPE='0010'B THEN/* DRD SSID            @ZM30731*/ 00668000
         TM    SSIDTYPE(@14),B'00000010'                        02S0149 00669000
         BNO   @RF00149                                         02S0149 00670000
         TM    SSIDTYPE(@14),B'00001101'                        02S0149 00671000
         BNZ   @RF00149                                         02S0149 00672000
*               DRDERRS=DRDERRS+1;  /* YES, INC DRD COUNT    @ZM30731*/ 00673000
         LA    @14,1                                            02S0150 00674000
         AH    @14,DRDERRS(,I)                                  02S0150 00675000
         STH   @14,DRDERRS(,I)                                  02S0150 00676000
*             ELSE                  /* NO, MUST BE DRC SSID  @ZM30731*/ 00677000
*               DRCERRS=DRCERRS+1;  /* INC DRC ACCUMULATOR   @ZM30731*/ 00678000
         B     @RC00149                                         02S0151 00679000
@RF00149 LA    @14,1                                            02S0151 00680000
         AH    @14,DRCERRS(,I)                                  02S0151 00681000
         STH   @14,DRCERRS(,I)                                  02S0151 00682000
*           ELSE                    /* MUST BE SA FORMAT E   @ZM30731*/ 00683000
*             DRCERRS=DRCERRS+1;    /* MUST BE ABOX ERROR    @Y30LB52*/ 00684000
         B     @RC00148                                         02S0152 00685000
@RF00148 LA    @14,1                                            02S0152 00686000
         AH    @14,DRCERRS(,I)                                  02S0152 00687000
         STH   @14,DRCERRS(,I)                                  02S0152 00688000
*       I=P0LIBN/16+1;              /* LOAD LIB INDEX        @Y30LB52*/ 00689000
@RC00148 DS    0H                                               02S0153 00690000
@RC00146 DS    0H                                               02S0153 00691000
@RC00144 LA    @14,1                                            02S0153 00692000
         L     @10,@PC00001                                     02S0153 00693000
         L     @10,CVTPTR(,@10)                                 02S0153 00694000
         L     @10,SENSEPTR(,@10)                               02S0153 00695000
         SLR   I,I                                              02S0153 00696000
         IC    I,P0LIBN(,@10)                                   02S0153 00697000
         SRL   I,4                                              02S0153 00698000
         ALR   I,@14                                            02S0153 00699000
*       CSFTOTAL(I)=CSFTOTAL(I)+1;  /* INCREMENT LIB TOTAL   @Y30LB52   00700000
*                                                            @Y30LB52*/ 00701000
         LR    @10,I                                            02S0154 00702000
         ALR   @10,@10                                          02S0154 00703000
         AH    @14,CSFTOTAL-2(@10,PWORKPTR)                     02S0154 00704000
         STH   @14,CSFTOTAL-2(@10,PWORKPTR)                     02S0154 00705000
*                                                               02S0155 00706000
*       /*************************************************************/ 00707000
*       /*                                                           */ 00708000
*       /* THIS SMALL STRUCTURE MAPS THE SSID IN THE MSC FORMAT4     */ 00709000
*       /* SENSE RECORD FOR THE PURPOSE OF EXTRACTING THE LIBRARY    */ 00710000
*       /* CARTRIDGE STORE NUMBER.                                   */ 00711000
*       /*                                                           */ 00712000
*       /*************************************************************/ 00713000
*                                                               02S0155 00714000
*       DCL                                                     02S0155 00715000
*         1 P0SSID DEF(SUBSYSID),   /* SUBSYSTEM ID          @Y30LB52*/ 00716000
*          2 * FIXED(8),            /* FIRST BYTE            @Y30LB52*/ 00717000
*          2 P0LIBN FIXED(8);       /* LIBRARY AND DRD       @Y30LB52*/ 00718000
*     END;                          /*                       @Y30LB52*/ 00719000
*   ELSE                                                        01S0157 00720000
*     DO;                           /* FMT 5 OR OBR          @Y30LB52*/ 00721000
         B     @RC00110                                         01S0157 00722000
@RF00110 DS    0H                                               01S0158 00723000
*                                                               02S0158 00724000
*       /*************************************************************/ 00725000
*       /*                                                           */ 00726000
*       /* THIS SEGMENT IS CALLED TO THE ERRORS RECORDED IN FORMAT   */ 00727000
*       /* 5(DASD) RECORDS. THE FIRST DECISION ROUTES CONTROL THROUGH*/ 00728000
*       /* ONE OF TWO SEGMENTS WHICH LOAD AND ALLOCATE IF NECESSARY  */ 00729000
*       /* THE ADDRESS OF AN ACCUMLATOR ARRAY. ONE SEGMENT(SSDASD) IS*/ 00730000
*       /* EXECUTED FOR ERRORS LOGGED DUE TO 'MSC' I/O AND THE       */ 00731000
*       /* OTHER(CHDASD), FOR HOST CHANNEL DASD ERRORS.              */ 00732000
*       /*                                                           */ 00733000
*       /*************************************************************/ 00734000
*                                                               02S0158 00735000
*       IF INDEVTYP='S' THEN                                    02S0158 00736000
         L     @14,@PC00001                                     02S0158 00737000
         L     @14,CVTPTR(,@14)                                 02S0158 00738000
         L     @10,SDA00PTR(,@14)                               02S0158 00739000
         CLI   INDEVTYP(@10),C'S'                               02S0158 00740000
         BNE   @RF00158                                         02S0158 00741000
*         DO;                       /*                       @Y30LB52*/ 00742000
*                                                               03S0160 00743000
*           /*********************************************************/ 00744000
*           /*                                                       */ 00745000
*           /* THIS SEGMENT IS EXECUTED FOR ALL MSC/DASD ERRORS      */ 00746000
*           /* ENCOUNTERED. AT THIS POINT, THE 'SADRDDASD' ARRAY HAS */ 00747000
*           /* BEEN ADDRESSED BY POINTER. THIS SEGMENT LOCATES THE   */ 00748000
*           /* PROPER ENTRY IN THIS ARRAY BY USING THE 'SA' NUMBER IN*/ 00749000
*           /* THE LAST BYRE OF THE SENSE DATA AND LOADS A POINTER TO*/ 00750000
*           /* THE ACCUMULATOR ARRAY FOR THIS 'SA' AND 'MSC'         */ 00751000
*           /* COMBINATION. IF THE ACCUMULATOR POINTER IS ZERO, THE  */ 00752000
*           /* ACCUMULATOR ARRAY MUST FIRST BE ALLOCATED.            */ 00753000
*           /*                                                       */ 00754000
*           /*********************************************************/ 00755000
*                                                               03S0160 00756000
*           I=(SANOMSCD&'0F'X)+1;   /* LOAD SA NUMBER        @ZA25718*/ 00757000
         L     @14,SENSEPTR(,@14)                               03S0160 00758000
         LA    I,15                                             03S0160 00759000
         SLR   @10,@10                                          03S0160 00760000
         IC    @10,SANOMSCD(,@14)                               03S0160 00761000
         NR    I,@10                                            03S0160 00762000
         AH    I,@CH00049                                       03S0160 00763000
*           SPTBPTR=SADASDAC(I);    /* LOAD ACCUMULATOR ADDRESS 03S0161 00764000
*                                                            @Y30LB52*/ 00765000
         LR    @14,I                                            03S0161 00766000
         SLA   @14,3                                            03S0161 00767000
         LR    @10,SATABP                                       03S0161 00768000
         AL    @10,@CF00380                                     03S0161 00769000
         L     SPTBPTR,SADASDAC-4(@14,@10)                      03S0161 00770000
*           IF SPTBPTR=0            /* NOT ALLOCATED         @Y30LB52*/ 00771000
*             THEN                                              03S0162 00772000
         LTR   SPTBPTR,SPTBPTR                                  03S0162 00773000
         BNZ   @RF00162                                         03S0162 00774000
*             DO;                   /* THEN ALLOCATE         @Y30LB52*/ 00775000
*                                                               03S0163 00776000
*               /*****************************************************/ 00777000
*               /*                                                   */ 00778000
*               /* THIS SUBSEGMENT ASSIGNS A BLOCK OF STORAGE ON     */ 00779000
*               /* DEMAND. IF INSUFFICIENT STORAGE REMAINS IN THE    */ 00780000
*               /* LAST BLOCK, THE SEGMENT 'P0ADDBLK' IS EXECUTED TO */ 00781000
*               /* OBTAIN ANOTHER 2K OF STORAGE AND CHAIN IT TO THE  */ 00782000
*               /* PREVIOUS BLOCK(S).                                */ 00783000
*               /*                                                   */ 00784000
*               /*****************************************************/ 00785000
*                                                               03S0164 00786000
*               SADASDAC(I)=COREASG;/* SET BLOCK ADDRESS TO NEXT        00787000
*                                      AVAILABLE             @Y30LB52*/ 00788000
         L     @10,COREASG(,PWORKPTR)                           03S0164 00789000
         AL    @14,@CF00380                                     03S0164 00790000
         ST    @10,SADASDAC-4(@14,SATABP)                       03S0164 00791000
*               COREASG=COREASG+LENGTH(CSPNDLET);/* INCREMENT THE       00792000
*                                      NEXT ADDRESS          @Y30LB52*/ 00793000
*                                                               03S0165 00794000
         AH    @10,@CH00096                                     03S0165 00795000
         ST    @10,COREASG(,PWORKPTR)                           03S0165 00796000
*               /*****************************************************/ 00797000
*               /*                                                   */ 00798000
*               /* IF THE CURRENT BLOCK DOESN'T CONTAIN ENOUGH SPACE,*/ 00799000
*               /* GET A NEW 2K BLOCK AND CHAIN IT IN.               */ 00800000
*               /*                                                   */ 00801000
*               /*****************************************************/ 00802000
*                                                               03S0166 00803000
*               IF COREASG>ENDCORE THEN/* PAST END OF 2K BLOCK? 03S0166 00804000
*                                                            @Y30LB52*/ 00805000
         C     @10,ENDCORE(,PWORKPTR)                           03S0166 00806000
         BNH   @RF00166                                         03S0166 00807000
*                 DO;               /* GET ANOTHER           @Y30LB52*/ 00808000
*                   CALL P0ADDBLK;  /* INTERNAL PROCEDURE    @Y30LB52*/ 00809000
         BAL   @14,P0ADDBLK                                     03S0168 00810000
*                   RESPECIFY                                   03S0169 00811000
*                     R15 RESTRICTED;/*                      @Y30LB52*/ 00812000
*                   IF R15^=0 THEN                              03S0170 00813000
         LTR   R15,R15                                          03S0170 00814000
         BZ    @RF00170                                         03S0170 00815000
*                     DO;           /* OUT OF CORE?          @Y30LB52*/ 00816000
*                       CPAD='00'X; /* TURN OFF THE PAD REPORT  03S0172 00817000
*                                                            @Y30LB52*/ 00818000
         L     @14,@PC00001                                     03S0172 00819000
         L     @14,CVTPTR(,@14)                                 03S0172 00820000
         L     @14,LPARMPTR(,@14)                               03S0172 00821000
         MVI   CPAD(@14),X'00'                                  03S0172 00822000
*                       RETURN CODE(NOSPACE);/* INDICATE WHAT   03S0173 00823000
*                                      HAPPENED              @Y30LB52*/ 00824000
         L     @13,4(,@13)                                      03S0173 00825000
         L     @00,@SIZDATD                                     03S0173 00826000
         LR    @01,@11                                          03S0173 00827000
         ISDAFSPC R,LV=(0),A=(1)                                        00828000
         LA    @15,4                                            03S0173 00829000
         L     @14,12(,@13)                                     03S0173 00830000
         LM    @00,@12,20(@13)                                  03S0173 00831000
         BR    @14                                              03S0173 00832000
*                     END;          /*                       @Y30LB52*/ 00833000
*                   ELSE                                        03S0175 00834000
*                     DO;           /* SET THE POINTERS      @Y30LB52*/ 00835000
@RF00170 DS    0H                                               03S0176 00836000
*                       SADASDAC(I)=COREASG;/* SET BLOCK ADDRESS        00837000
*                                                            @Y30LB52*/ 00838000
         LR    @14,I                                            03S0176 00839000
         SLA   @14,3                                            03S0176 00840000
         L     @10,COREASG(,PWORKPTR)                           03S0176 00841000
         AL    @14,@CF00380                                     03S0176 00842000
         ST    @10,SADASDAC-4(@14,SATABP)                       03S0176 00843000
*                       COREASG=COREASG+LENGTH(CSPNDLET);/* INCREMENT   00844000
*                                      THE ASSIGNL           @Y30LB52*/ 00845000
         AH    @10,@CH00096                                     03S0177 00846000
         ST    @10,COREASG(,PWORKPTR)                           03S0177 00847000
*                     END;          /*                       @Y30LB52*/ 00848000
*                 END;              /*                       @Y30LB52*/ 00849000
*                                                               03S0179 00850000
*               /*****************************************************/ 00851000
*               /*                                                   */ 00852000
*               /* CLEAR THE ARRAY                                   */ 00853000
*               /*                                                   */ 00854000
*               /*****************************************************/ 00855000
*                                                               03S0180 00856000
*               SPTBPTR=SADASDAC(I);/* LOAD ACCUMULATOR ADDRESS 03S0180 00857000
*                                                            @Y30LB52*/ 00858000
@RF00166 LR    @14,I                                            03S0180 00859000
         SLA   @14,3                                            03S0180 00860000
         AL    @14,@CF00380                                     03S0180 00861000
         L     SPTBPTR,SADASDAC-4(@14,SATABP)                   03S0180 00862000
*               RESPECIFY                                       03S0181 00863000
*                 SPNDLETB BASED(SPTBPTR);/*                 @Y30LB52*/ 00864000
*               CSPNDLET=CSPNDLET&&CSPNDLET;/* CLEAR ACCUMULATOR BLK    00865000
*                                                            @Y30LB52*/ 00866000
         XC    CSPNDLET(192,SPTBPTR),CSPNDLET(SPTBPTR)          03S0182 00867000
*             END;                  /*                       @Y30LB52*/ 00868000
*                                                               03S0183 00869000
*           /*********************************************************/ 00870000
*           /*                                                       */ 00871000
*           /* LOAD THE CONTROL UNIT, DRIVE ADDRESS, AND THE DASD    */ 00872000
*           /* SUBFORMAT NUMBER.                                     */ 00873000
*           /*                                                       */ 00874000
*           /*********************************************************/ 00875000
*                                                               03S0184 00876000
*           RESPECIFY                                           03S0184 00877000
*             ISDAMSC5 BASED(K);    /*                       @Y30LB52*/ 00878000
@RF00162 DS    0H                                               03S0185 00879000
*           K=SENSEPTR+4;           /* LOAD DASD SENSC ADDRESS  03S0185 00880000
*                                                            @Y30LB52*/ 00881000
         L     @14,@PC00001                                     03S0185 00882000
         L     @14,CVTPTR(,@14)                                 03S0185 00883000
         LA    K,4                                              03S0185 00884000
         AL    K,SENSEPTR(,@14)                                 03S0185 00885000
*           I=DRIVEID4;             /* LOAD THE CU AND DRIVE @Y30LB52*/ 00886000
         SLR   I,I                                              03S0186 00887000
         IC    I,DRIVEID4(,K)                                   03S0186 00888000
*           J=(I&'3F'X)/7;          /* LOAD THE DRIVE ADDRESS@Y30LB52*/ 00889000
         LA    @00,63                                           03S0187 00890000
         NR    @00,I                                            03S0187 00891000
         LR    @09,@00                                          03S0187 00892000
         SLR   @08,@08                                          03S0187 00893000
         D     @08,@CF00356                                     03S0187 00894000
         LR    J,@09                                            03S0187 00895000
*           J=ABS(J-9);             /* COMPUTE ACCUMULATOR INDEX        00896000
*                                                            @Y30LB52*/ 00897000
         LR    @14,J                                            03S0188 00898000
         SH    @14,@CH00341                                     03S0188 00899000
         LPR   @14,@14                                          03S0188 00900000
         LR    J,@14                                            03S0188 00901000
*           I=I/64+1;               /* CONTROLLER ADDRESS    @Y30LB52*/ 00902000
         LA    @14,1                                            03S0189 00903000
         LR    @10,I                                            03S0189 00904000
         SRL   @10,6                                            03S0189 00905000
         ALR   @10,@14                                          03S0189 00906000
         LR    I,@10                                            03S0189 00907000
*           K=FMTMSG5/16;           /* DASD SUBFORMAT NUMBER @Y30LB52*/ 00908000
         SLR   @10,@10                                          03S0190 00909000
         IC    @10,FMTMSG5(,K)                                  03S0190 00910000
         SRL   @10,4                                            03S0190 00911000
         LR    K,@10                                            03S0190 00912000
*           IF J<1|J>8 THEN         /* INVALID DRIVE ID      @ZA00699*/ 00913000
         CR    J,@14                                            02S0191 00914000
         BL    @RT00191                                         02S0191 00915000
         CH    J,@CH00057                                       02S0191 00916000
         BNH   @RF00191                                         02S0191 00917000
@RT00191 DS    0H                                               02S0192 00918000
*             RETURN CODE(0);       /* IGNORE BUT REC VALID  @ZA00699*/ 00919000
         L     @13,4(,@13)                                      02S0192 00920000
         L     @00,@SIZDATD                                     02S0192 00921000
         LR    @01,@11                                          02S0192 00922000
         ISDAFSPC R,LV=(0),A=(1)                                        00923000
         SLR   @15,@15                                          02S0192 00924000
         L     @14,12(,@13)                                     02S0192 00925000
         LM    @00,@12,20(@13)                                  02S0192 00926000
         BR    @14                                              02S0192 00927000
*           ELSE                    /* DRIVE ID OK           @ZA00699*/ 00928000
*             MSCTOTAL=MSCTOTAL+1;  /* INCREMENT TOTAL MSC DASD 02S0193 00929000
*                                                            @Y30LB52*/ 00930000
@RF00191 LA    @14,1                                            02S0193 00931000
         AH    @14,MSCTOTAL(,PWORKPTR)                          02S0193 00932000
         STH   @14,MSCTOTAL(,PWORKPTR)                          02S0193 00933000
*         END;                      /*                       @Y30LB52*/ 00934000
*       ELSE                                                    02S0195 00935000
*         DO;                       /*                       @Y30LB52*/ 00936000
         B     @RC00158                                         02S0195 00937000
@RF00158 DS    0H                                               02S0196 00938000
*                                                               03S0196 00939000
*           /*********************************************************/ 00940000
*           /*                                                       */ 00941000
*           /* A HOST CHANNEL INTERFACE. IT'S FUNCTION IS THAT OF    */ 00942000
*           /* LOCATING AND ALLOCATING, IF NECESSARY, THE PROPER     */ 00943000
*           /* ACCUMULATOR ARRAY FOR THE STORAGE ADAPTER INDICATED IN*/ 00944000
*           /* THE SENSE. THE PROPER 'SA' ENTRY IS LOCATED IN THE    */ 00945000
*           /* 'CHCUTAB' BY COMPARING THE CPUID/CH/CU IN THE SENSE TO*/ 00946000
*           /* THE TABLE ENTRIES. WHEN A MATCH IS FOUND, THE         */ 00947000
*           /* ACCUMULATOR BASE REGISTER IS LOADED.                  */ 00948000
*           /*                                                       */ 00949000
*           /*********************************************************/ 00950000
*                                                               03S0196 00951000
*           DCL                                                 03S0196 00952000
*             1 DCPUCHCU BDY(WORD), /* INTERFACE COMPONENTS  @Y30LB52*/ 00953000
*              2 DCPUID CHAR(5),    /* CPUID                 @Y30LB52*/ 00954000
*              2 DCHCU FIXED(8);    /* SET CHANNEL/CONTROL UNIT 03S0196 00955000
*                                                            @Y30LB52*/ 00956000
*                                                               03S0197 00957000
*           /*********************************************************/ 00958000
*           /*                                                       */ 00959000
*           /* SET UP THE CPU/CH/CU ID'S FOR THE TABLE SEARCH.       */ 00960000
*           /*                                                       */ 00961000
*           /*********************************************************/ 00962000
*                                                               03S0197 00963000
*           DCPUID(1:3)=CPUSER;     /* SET CPU SERIAL        @Y30LB52*/ 00964000
         L     @14,@PC00001                                     03S0197 00965000
         L     @14,CVTPTR(,@14)                                 03S0197 00966000
         L     @10,LOGPTR(,@14)                                 03S0197 00967000
         MVC   DCPUID(3),CPUSER(@10)                            03S0197 00968000
*           DCPUID(4:5)=CPUID;      /*                       @Y30LB52*/ 00969000
         MVC   DCPUID+3(2),CPUID(@10)                           03S0198 00970000
*           I=INRECCUA(1);          /* LOAD CHANNEL ADDRESS  @Y30LB52*/ 00971000
         L     @10,SDA00PTR(,@14)                               03S0199 00972000
         SLR   I,I                                              03S0199 00973000
         IC    I,INRECCUA(,@10)                                 03S0199 00974000
*           I=I*16;                 /* SHIFT TO HIGH ORDER 4B@Y30LB52*/ 00975000
         SLL   I,4                                              03S0200 00976000
*           J=INRECCUA(2);          /* LOAD 2ND BYTE         @Y30LB52*/ 00977000
         SLR   J,J                                              03S0201 00978000
         IC    J,INRECCUA+1(,@10)                               03S0201 00979000
*           DCHCU=(J/64)|I;         /*                       @Y30LB52   00980000
*                                      SHIFT CU ADDR AND COMBINE     */ 00981000
*                                                               03S0202 00982000
         LR    @10,J                                            03S0202 00983000
         SRL   @10,6                                            03S0202 00984000
         OR    @10,I                                            03S0202 00985000
         STC   @10,DCHCU                                        03S0202 00986000
*           /*********************************************************/ 00987000
*           /*                                                       */ 00988000
*           /* SCAN THROUGH THE 'CHCUTAB' LOOKING FOR THE            */ 00989000
*           /* CPUID/CHAN/CU IN THE SENSE RECORD.                    */ 00990000
*           /*                                                       */ 00991000
*           /*********************************************************/ 00992000
*                                                               03S0203 00993000
*           CHCUPTR=CHCUAD;         /* LOAD FIRST ENTRY ADDR @Y30LB52*/ 00994000
         L     @14,CNFG0PTR(,@14)                               03S0203 00995000
         L     CHCUPTR,CHCUAD(,@14)                             03S0203 00996000
*           RESPECIFY                                           03S0204 00997000
*             CHCUTAB BASED(CHCUPTR);/*                      @Y30LB52*/ 00998000
*           DO I=1 TO CHINTFNO      /*                       @Y30LB52   00999000
*                                      LOOP THROUGH ALL ENTRIES      */ 01000000
*                 WHILE((CPUIDSER^=DCPUID)|(CHCU^=DCHCU));/* @Y30LB52*/ 01001000
         LA    I,1                                              03S0205 01002000
         B     @DE00205                                         03S0205 01003000
@DL00205 CLC   CPUIDSER(5,CHCUPTR),DCPUID                       03S0205 01004000
         BNE   @DB00205                                         03S0205 01005000
         CLC   CHCU(1,CHCUPTR),DCHCU                            03S0205 01006000
         BE    @DC00205                                         03S0205 01007000
@DB00205 DS    0H                                               03S0206 01008000
*             CHCUPTR=CHCUPTR+LENGTH(CHCUTAB);/* INCREMENT CHCUTAB      01009000
*                                                            @Y30LB52   01010000
*                                      PTR                   @Y30LB52*/ 01011000
         AH    CHCUPTR,@CH00087                                 03S0206 01012000
*           END;                    /*                       @Y30LB52*/ 01013000
*                                                               03S0207 01014000
         AH    I,@CH00049                                       03S0207 01015000
@DE00205 L     @14,@PC00001                                     03S0207 01016000
         L     @14,CVTPTR(,@14)                                 03S0207 01017000
         L     @14,CNFG0PTR(,@14)                               03S0207 01018000
         CH    I,CHINTFNO(,@14)                                 03S0207 01019000
         BNH   @DL00205                                         03S0207 01020000
@DC00205 DS    0H                                               03S0208 01021000
*           /*********************************************************/ 01022000
*           /*                                                       */ 01023000
*           /* IF NO MATCH FOUND, MUST BE A NON-SUBSYSTEM RECORD.    */ 01024000
*           /* SKIP IT.                                              */ 01025000
*           /*                                                       */ 01026000
*           /*********************************************************/ 01027000
*                                                               03S0208 01028000
*           IF I>CHINTFNO THEN      /* NO MATCH              @Y30LB52*/ 01029000
         L     @14,@PC00001                                     03S0208 01030000
         L     @14,CVTPTR(,@14)                                 03S0208 01031000
         L     @14,CNFG0PTR(,@14)                               03S0208 01032000
         CH    I,CHINTFNO(,@14)                                 03S0208 01033000
         BNH   @RF00208                                         03S0208 01034000
*             RETURN CODE(0);       /* IGNORE                @Y30LB52*/ 01035000
*                                                               03S0209 01036000
         L     @13,4(,@13)                                      03S0209 01037000
         L     @00,@SIZDATD                                     03S0209 01038000
         LR    @01,@11                                          03S0209 01039000
         ISDAFSPC R,LV=(0),A=(1)                                        01040000
         SLR   @15,@15                                          03S0209 01041000
         L     @14,12(,@13)                                     03S0209 01042000
         LM    @00,@12,20(@13)                                  03S0209 01043000
         BR    @14                                              03S0209 01044000
*           /*********************************************************/ 01045000
*           /*                                                       */ 01046000
*           /* IF THE ACCUMULATOR POINTER IN THE ENTRY IS XERO, THE  */ 01047000
*           /* ACCUMULATOR MUST BE ALLOCATED FIRST.                  */ 01048000
*           /*                                                       */ 01049000
*           /*********************************************************/ 01050000
*                                                               03S0210 01051000
*           ELSE                                                03S0210 01052000
*             DO;                   /* MATCH FOUND           @Y30LB52*/ 01053000
@RF00208 DS    0H                                               03S0211 01054000
*               SPTBPTR=SPLTABP;    /* SET ACCUMULATOR BASE  @Y30LB52*/ 01055000
         L     @14,SPLTABP(,CHCUPTR)                            03S0211 01056000
         LR    SPTBPTR,@14                                      03S0211 01057000
*               IF SPLTABP=0 THEN   /* ID XERO               @Y30LB52*/ 01058000
         LTR   @14,@14                                          03S0212 01059000
         BNZ   @RF00212                                         03S0212 01060000
*                 DO;               /* ALLOCATE BLOCK        @Y30LB52*/ 01061000
*                                                               03S0213 01062000
*                   /*************************************************/ 01063000
*                   /*                                               */ 01064000
*                   /* THIS SUBSEGMENT ASSIGNS A BLOCK OF STORAGE ON */ 01065000
*                   /* DEMAND. IF INSUFFICIENT STORAGE REMAINS IN THE*/ 01066000
*                   /* LAST BLOCK, THE SEGMENT 'P0ADDBLK' IS EXECUTED*/ 01067000
*                   /* TO OBTAIN ANOTHER 2K OF STORAGE AND CHAIN IT  */ 01068000
*                   /* TO THE PREVIOUS BLOCK(S).                     */ 01069000
*                   /*                                               */ 01070000
*                   /*************************************************/ 01071000
*                                                               03S0214 01072000
*                   SPLTABP=COREASG;/* SET BLOCK ADDRESS TO NEXT        01073000
*                                      AVAILABLE             @Y30LB52*/ 01074000
         L     @14,COREASG(,PWORKPTR)                           03S0214 01075000
         ST    @14,SPLTABP(,CHCUPTR)                            03S0214 01076000
*                   COREASG=COREASG+LENGTH(CSPNDLET);/* INCREMENT THE   01077000
*                                      NEXT ADDRESS          @Y30LB52*/ 01078000
*                                                               03S0215 01079000
         AH    @14,@CH00096                                     03S0215 01080000
         ST    @14,COREASG(,PWORKPTR)                           03S0215 01081000
*                   /*************************************************/ 01082000
*                   /*                                               */ 01083000
*                   /* IF THE CURRENT BLOCK DOESN'T CONTAIN ENOUGH   */ 01084000
*                   /* SPACE, GET A NEW 2K BLOCK AND CHAIN IT IN.    */ 01085000
*                   /*                                               */ 01086000
*                   /*************************************************/ 01087000
*                                                               03S0216 01088000
*                   IF COREASG>ENDCORE THEN/* PAST END OF 2K BLOCK?     01089000
*                                                            @Y30LB52*/ 01090000
         C     @14,ENDCORE(,PWORKPTR)                           03S0216 01091000
         BNH   @RF00216                                         03S0216 01092000
*                     DO;           /* GET ANOTHER           @Y30LB52*/ 01093000
*                       CALL P0ADDBLK;/* INTERNAL PROCEDURE  @Y30LB52*/ 01094000
         BAL   @14,P0ADDBLK                                     03S0218 01095000
*                       RESPECIFY                               03S0219 01096000
*                         R15 RESTRICTED;/*                  @Y30LB52*/ 01097000
*                       IF R15^=0 THEN                          03S0220 01098000
         LTR   R15,R15                                          03S0220 01099000
         BZ    @RF00220                                         03S0220 01100000
*                         DO;       /* OUT OF CORE?          @Y30LB52*/ 01101000
*                           CPAD='00'X;/* TURN OFF THE PAD REPORT       01102000
*                                                            @Y30LB52*/ 01103000
         L     @14,@PC00001                                     03S0222 01104000
         L     @14,CVTPTR(,@14)                                 03S0222 01105000
         L     @14,LPARMPTR(,@14)                               03S0222 01106000
         MVI   CPAD(@14),X'00'                                  03S0222 01107000
*                           RETURN CODE(NOSPACE);/* INDICATE WHAT       01108000
*                                      HAPPENED              @Y30LB52*/ 01109000
         L     @13,4(,@13)                                      03S0223 01110000
         L     @00,@SIZDATD                                     03S0223 01111000
         LR    @01,@11                                          03S0223 01112000
         ISDAFSPC R,LV=(0),A=(1)                                        01113000
         LA    @15,4                                            03S0223 01114000
         L     @14,12(,@13)                                     03S0223 01115000
         LM    @00,@12,20(@13)                                  03S0223 01116000
         BR    @14                                              03S0223 01117000
*                         END;      /*                       @Y30LB52*/ 01118000
*                       ELSE                                    03S0225 01119000
*                         DO;       /* SET THE POINTERS      @Y30LB52*/ 01120000
@RF00220 DS    0H                                               03S0226 01121000
*                           SPLTABP=COREASG;/* SET BLOCK ADDRESS        01122000
*                                                            @Y30LB52*/ 01123000
         L     @14,COREASG(,PWORKPTR)                           03S0226 01124000
         ST    @14,SPLTABP(,CHCUPTR)                            03S0226 01125000
*                           COREASG=COREASG+LENGTH(CSPNDLET);/* 03S0227 01126000
*                                      INCREMENT THE ASSIGNL @Y30LB52*/ 01127000
         AH    @14,@CH00096                                     03S0227 01128000
         ST    @14,COREASG(,PWORKPTR)                           03S0227 01129000
*                         END;      /*                       @Y30LB52*/ 01130000
*                     END;          /*                       @Y30LB52*/ 01131000
*                   SPTBPTR=SPLTABP;/* SET NEW POINTER       @Y30LB52*/ 01132000
@RF00216 L     SPTBPTR,SPLTABP(,CHCUPTR)                        03S0230 01133000
*                   CSPNDLET=CSPNDLET&&CSPNDLET;/* CLEAR THE    03S0231 01134000
*                                      ACCUMULATOR           @Y30LB52*/ 01135000
         XC    CSPNDLET(192,SPTBPTR),CSPNDLET(SPTBPTR)          03S0231 01136000
*                 END;              /*                       @Y30LB52*/ 01137000
*             END;                  /*                       @Y30LB52*/ 01138000
*                                                               03S0233 01139000
@RF00212 DS    0H                                               03S0234 01140000
*           /*********************************************************/ 01141000
*           /*                                                       */ 01142000
*           /* LOAD THE CONTROL UNIT AND DRIVE ADDRESSES AND THE DASD*/ 01143000
*           /* SUBFORMAT NUMBER                                      */ 01144000
*           /*                                                       */ 01145000
*           /*********************************************************/ 01146000
*                                                               03S0234 01147000
*           RESPECIFY                                           03S0234 01148000
*            (ISDAMSC5) BASED(SENSEPTR);/*                   @Y30LB52*/ 01149000
*           I=DRIVEID4;             /* LOAD THE CU/DRIVE BYTE@Y30LB52   01150000
*                                                            @Y30LB52*/ 01151000
         L     @14,@PC00001                                     03S0235 01152000
         L     @14,CVTPTR(,@14)                                 03S0235 01153000
         L     @14,SENSEPTR(,@14)                               03S0235 01154000
         SLR   I,I                                              03S0235 01155000
         IC    I,DRIVEID4(,@14)                                 03S0235 01156000
*           J=(I&'3F'X)/7;          /* LOAD THE DRIVE INDEX  @Y30LB52*/ 01157000
         LA    @08,63                                           03S0236 01158000
         NR    @08,I                                            03S0236 01159000
         LR    @01,@08                                          03S0236 01160000
         SLR   @00,@00                                          03S0236 01161000
         D     @00,@CF00356                                     03S0236 01162000
         LR    J,@01                                            03S0236 01163000
*           J=ABS(J-9);             /* COMPUTE ACCUMULATOR INDEX        01164000
*                                                            @Y30LB52*/ 01165000
         LR    @10,J                                            03S0237 01166000
         SH    @10,@CH00341                                     03S0237 01167000
         LPR   @10,@10                                          03S0237 01168000
         LR    J,@10                                            03S0237 01169000
*           I=I/64+1;               /* LOAD CU ADDRESS       @Y30LB52*/ 01170000
         LA    @10,1                                            03S0238 01171000
         LR    @07,I                                            03S0238 01172000
         SRL   @07,6                                            03S0238 01173000
         ALR   @07,@10                                          03S0238 01174000
         LR    I,@07                                            03S0238 01175000
*           K=FMTMSG5/16;           /* LOAD DASD SUBFORMAT   @Y30LB52*/ 01176000
         SLR   K,K                                              03S0239 01177000
         IC    K,FMTMSG5(,@14)                                  03S0239 01178000
         SRL   K,4                                              03S0239 01179000
*           IF J<1|J>8 THEN         /* INVALID DRIVE ID      @ZA00699*/ 01180000
         CR    J,@10                                            02S0240 01181000
         BL    @RT00240                                         02S0240 01182000
         CH    J,@CH00057                                       02S0240 01183000
         BNH   @RF00240                                         02S0240 01184000
@RT00240 DS    0H                                               02S0241 01185000
*             RETURN CODE(0);       /* IGNORE BUT REC VALID  @ZA00699*/ 01186000
         L     @13,4(,@13)                                      02S0241 01187000
         L     @00,@SIZDATD                                     02S0241 01188000
         LR    @01,@11                                          02S0241 01189000
         ISDAFSPC R,LV=(0),A=(1)                                        01190000
         SLR   @15,@15                                          02S0241 01191000
         L     @14,12(,@13)                                     02S0241 01192000
         LM    @00,@12,20(@13)                                  02S0241 01193000
         BR    @14                                              02S0241 01194000
*           ELSE                    /* DRIVE ID OK           @ZA00699*/ 01195000
*             HTOTAL=HTOTAL+1;      /* INCREMENT HOST CHANNEL TOTAL     01196000
*                                                            @Y30LB52*/ 01197000
@RF00240 LA    @14,1                                            02S0242 01198000
         AH    @14,HTOTAL(,PWORKPTR)                            02S0242 01199000
         STH   @14,HTOTAL(,PWORKPTR)                            02S0242 01200000
*         END;                      /*                       @Y30LB52*/ 01201000
*                                                               02S0243 01202000
*       /*************************************************************/ 01203000
*       /*                                                           */ 01204000
*       /* THE FOLLOWING CASE LOGIC CODE INCREMENTS THE PROPER ERROR */ 01205000
*       /* COUNTER. THE ACCUMLATOR ARRAY POINTER HAS BEEN SET, 'I'   */ 01206000
*       /* CONTAINS THE LOGICAL DASD A-BOX ADDRESS, AND 'J' CONTAINS */ 01207000
*       /* THE DRIVE ADDRESS. SEPARATE ACCUMULATORS ARE MAINTAINED   */ 01208000
*       /* FOR EACH OF THE SUBFORMATS(1,2,3). THE SUBFORMAT IS USED  */ 01209000
*       /* TO CONTROL THE FLOW THROUGH THE CASE LOGIC.               */ 01210000
*       /*                                                           */ 01211000
*       /*************************************************************/ 01212000
*                                                               02S0244 01213000
*       J=ADDR(SPNDLETB(I,J));      /*                       @Y30LB52*/ 01214000
@RC00158 LR    @14,I                                            02S0244 01215000
         SLA   @14,3                                            02S0244 01216000
         ALR   @14,J                                            02S0244 01217000
         MH    @14,@CH00076                                     02S0244 01218000
         AL    @14,@CF00381                                     02S0244 01219000
         LA    @14,SPNDLETB(@14,SPTBPTR)                        02S0244 01220000
         LR    J,@14                                            02S0244 01221000
*       RESPECIFY                                               02S0245 01222000
*        (SPNDLES) BASED(J);        /*                       @Y30LB52*/ 01223000
*       DO;                         /* CASE(K)NAMES(DCHK,STCHK,STCCHK   01224000
*                                      )                             */ 01225000
*         DCL                                                   02S0247 01226000
*           CL0001@ LABEL BASED(CP0001@(K)) VALUERANGE(DCHK,STCHK,      01227000
*               STCCHK);            /* BRANCH TARGET                 */ 01228000
*         DCL                                                   02S0248 01229000
*           CP0001@(3) PTR(31) INIT(ADDR(DCHK),ADDR(STCHK),ADDR(STCCHK) 01230000
*               );                                              02S0248 01231000
*         GOTO CL0001@;             /* BRANCH TO SELECTED CASE  02S0249 01232000
*                                                            @Y30LB52*/ 01233000
         LR    @14,K                                            02S0249 01234000
         SLA   @14,2                                            02S0249 01235000
         L     @14,CP0001@-4(@14)                               02S0249 01236000
         BR    @14                                              02S0249 01237000
*DCHK:                                                          02S0250 01238000
*         DO;                       /* SUBCASE               @Y30LB52*/ 01239000
DCHK     DS    0H                                               02S0251 01240000
*           DRVEQCHK=DRVEQCHK+1;    /*                       @Y30LB52*/ 01241000
         LA    @14,1                                            02S0251 01242000
         AH    @14,DRVEQCHK(,J)                                 02S0251 01243000
         STH   @14,DRVEQCHK(,J)                                 02S0251 01244000
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */ 01245000
         B     CE0001@                                          02S0252 01246000
*         END;                      /* END OF SUBCASE                */ 01247000
*STCHK:                                                         02S0254 01248000
*         DO;                       /* SUBCASE               @Y30LB52*/ 01249000
STCHK    DS    0H                                               02S0255 01250000
*           STCTLCHK=STCTLCHK+1;    /*                       @Y30LB52*/ 01251000
         LA    @14,1                                            02S0255 01252000
         AH    @14,STCTLCHK(,J)                                 02S0255 01253000
         STH   @14,STCTLCHK(,J)                                 02S0255 01254000
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */ 01255000
         B     CE0001@                                          02S0256 01256000
*         END;                      /* END OF SUBCASE                */ 01257000
*STCCHK:                                                        02S0258 01258000
*         DO;                       /* SUBCASE               @Y30LB52*/ 01259000
STCCHK   DS    0H                                               02S0259 01260000
*           STCTLCCK=STCTLCCK+1;    /*                       @Y30LB52*/ 01261000
         LA    @14,1                                            02S0259 01262000
         AH    @14,STCTLCCK(,J)                                 02S0259 01263000
         STH   @14,STCTLCCK(,J)                                 02S0259 01264000
*           GOTO CE0001@;           /* BRANCH TO END OF CASE         */ 01265000
         B     CE0001@                                          02S0260 01266000
*         END;                      /* END OF SUBCASE                */ 01267000
*CE0001@:                                                       02S0262 01268000
*       END;                        /* END OF CASE                   */ 01269000
CE0001@  DS    0H                                               02S0263 01270000
*/*@Y30LB52                                                          */ 01271000
*                                                               02S0263 01272000
*     END;                          /*                       @Y30LB52*/ 01273000
*   RETURN CODE(0);                 /* SUCCESSFUL EXIT       @Y30LB52*/ 01274000
@RC00110 L     @13,4(,@13)                                      01S0264 01275000
         L     @00,@SIZDATD                                     01S0264 01276000
         LR    @01,@11                                          01S0264 01277000
         ISDAFSPC R,LV=(0),A=(1)                                        01278000
         SLR   @15,@15                                          01S0264 01279000
         L     @14,12(,@13)                                     01S0264 01280000
         LM    @00,@12,20(@13)                                  01S0264 01281000
         BR    @14                                              01S0264 01282000
*   END ISDAPAD0                    /*                       @Y30LB52*/ 01283000
*                                                               01S0265 01284000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01285000
*/*%INCLUDE SYSLIB  (ISDAPAD5)                                       */ 01286000
*/*%INCLUDE SYSLIB  (ISDAMCFG)                                       */ 01287000
*/*%INCLUDE SYSLIB  (ISDAWORK)                                       */ 01288000
*/*%INCLUDE SYSLIB  (ISDAMSCS)                                       */ 01289000
*/*%INCLUDE SYSLIB  (ISDAMSC5)                                       */ 01290000
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                       */ 01291000
*/*%INCLUDE SYSLIB  (ISDACVT )                                       */ 01292000
*/*%INCLUDE SYSLIB  (ISDASOBR)                                       */ 01293000
*/*%INCLUDE SYSUT5  (P0ADDBLK)                                       */ 01294000
*/*%INCLUDE SYSUT5  (P0ALLOC )                                       */ 01295000
*/*%INCLUDE SYSUT5  (P0MSCALL)                                       */ 01296000
*/*%INCLUDE SYSUT5  (P0GETBLK)                                       */ 01297000
*/*%INCLUDE SYSUT5  (P0GETBLK)                                       */ 01298000
*/*%INCLUDE SYSUT5  (P0GETBLK)                                       */ 01299000
*/*%INCLUDE SYSUT5  (P0GETBLK)                                       */ 01300000
*/*%INCLUDE SYSUT5  (P0FMT4  )                                       */ 01301000
*/*%INCLUDE SYSUT5  (P0FMT5  )                                       */ 01302000
*/*%INCLUDE SYSUT5  (P0SSDASD)                                       */ 01303000
*/*%INCLUDE SYSUT5  (P0CHDASD)                                       */ 01304000
*                                                               01S0265 01305000
*       ;                                                       01S0265 01306000
@DATA    DS    0H                                                       01307000
@CH00049 DC    H'1'                                                     01308000
@CH00076 DC    H'6'                                                     01309000
@CH00057 DC    H'8'                                                     01310000
@CH00341 DC    H'9'                                                     01311000
@CH00087 DC    H'12'                                                    01312000
@CH00078 DC    H'96'                                                    01313000
@CH00074 DC    H'128'                                                   01314000
@CH00096 DC    H'192'                                                   01315000
@DATD    DSECT                                                          01316000
         DS    0F                                                       01317000
@SA00001 DS    18F                                                      01318000
@PC00001 DS    1F                                                       01319000
@SA00002 DS    0F                                                       01320000
         DS    1F                                                       01321000
@TF00001 DS    F                                                        01322000
ISDAPAD0 CSECT                                                          01323000
         DS    0F                                                       01324000
@CF00356 DC    F'7'                                                     01325000
@CF00330 DC    F'2048'                                                  01326000
@CF00381 DC    F'-54'                                                   01327000
@CF00379 DC    F'-30'                                                   01328000
@CF00378 DC    F'-8'                                                    01329000
@CF00380 DC    F'-4'                                                    01330000
@CF00344 DC    XL4'03'                                                  01331000
@DATD    DSECT                                                          01332000
         DS    0D                                                       01333000
LTPDRDP  DS    A                                                        01334000
DCPUCHCU DS    CL6                                                      01335000
         ORG   DCPUCHCU                                                 01336000
DCPUID   DS    CL5                                                      01337000
DCHCU    DS    FL1                                                      01338000
         ORG   DCPUCHCU+6                                               01339000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01340000
@ENDDATD EQU   *                                                        01341000
ISDAPAD0 CSECT                                                          01342000
         NOPR  ((@ENDDATD-@DATD)/161*16)                                01343000
         DS    0F                                                       01344000
@SIZDATD DC    AL1(0)                                                   01345000
         DC    AL3(@ENDDATD-@DATD)                                      01346000
@CV00053 DC    V(ISDAFREE)                                              01347000
@CV00054 DC    V(ISDAGET1)                                              01348000
         DS    0D                                                       01349000
@CB00338 DC    X'0000'                                                  01350000
         DS    CL2                                                      01351000
CP0001@  DC    AL4(DCHK)                                                01352000
         DC    AL4(STCHK)                                               01353000
         DC    AL4(STCCHK)                                              01354000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01355000
@01      EQU   01                                                       01356000
@02      EQU   02                                                       01357000
@03      EQU   03                                                       01358000
@04      EQU   04                                                       01359000
@05      EQU   05                                                       01360000
@06      EQU   06                                                       01361000
@07      EQU   07                                                       01362000
@08      EQU   08                                                       01363000
@09      EQU   09                                                       01364000
@10      EQU   10                                                       01365000
@11      EQU   11                                                       01366000
@12      EQU   12                                                       01367000
@13      EQU   13                                                       01368000
@14      EQU   14                                                       01369000
@15      EQU   15                                                       01370000
SATABP   EQU   @04                                                      01371000
DRDTBPTR EQU   @05                                                      01372000
CHCUPTR  EQU   @05                                                      01373000
SPTBPTR  EQU   @06                                                      01374000
PWORKPTR EQU   @03                                                      01375000
K        EQU   @05                                                      01376000
J        EQU   @04                                                      01377000
I        EQU   @02                                                      01378000
R1       EQU   @01                                                      01379000
R15      EQU   @15                                                      01380000
LTPDRDTB EQU   0                                                        01381000
LTPDRC   EQU   LTPDRDTB                                                 01382000
SADRDDSD EQU   0                                                        01383000
SADRDACC EQU   SADRDDSD                                                 01384000
SADASDAC EQU   SADRDDSD+4                                               01385000
DRDACCTB EQU   0                                                        01386000
DRDACCS  EQU   0                                                        01387000
DRDERRS  EQU   DRDACCS                                                  01388000
CTLIERRS EQU   DRDACCS+2                                                01389000
DRCERRS  EQU   DRDACCS+4                                                01390000
CHCUTAB  EQU   0                                                        01391000
CPUIDSER EQU   CHCUTAB                                                  01392000
CHCU     EQU   CHCUTAB+5                                                01393000
SPLTABP  EQU   CHCUTAB+8                                                01394000
SPNDLETB EQU   0                                                        01395000
SPNDLES  EQU   0                                                        01396000
DRVEQCHK EQU   SPNDLES                                                  01397000
STCTLCHK EQU   SPNDLES+2                                                01398000
STCTLCCK EQU   SPNDLES+4                                                01399000
P0WORK   EQU   0                                                        01400000
PADLASTB EQU   P0WORK+4                                                 01401000
COREASG  EQU   P0WORK+8                                                 01402000
ENDCORE  EQU   P0WORK+12                                                01403000
MSCDRDAC EQU   P0WORK+16                                                01404000
MSCINTF  EQU   MSCDRDAC                                                 01405000
SATABPTR EQU   MSCDRDAC+4                                               01406000
CSFTOTAL EQU   P0WORK+80                                                01407000
MSCTOTAL EQU   P0WORK+88                                                01408000
HTOTAL   EQU   P0WORK+90                                                01409000
P0WORK1  EQU   0                                                        01410000
PADFPTR1 EQU   P0WORK1                                                  01411000
PCNFG    EQU   0                                                        01412000
CNFGFXD  EQU   PCNFG                                                    01413000
CHINTFNO EQU   CNFGFXD+12                                               01414000
CHCUAD   EQU   PCNFG+20                                                 01415000
CPUSERAD EQU   PCNFG+24                                                 01416000
ISDAWORK EQU   0                                                        01417000
INFLAGS  EQU   ISDAWORK                                                 01418000
INDEVTYP EQU   INFLAGS+2                                                01419000
INRECCUA EQU   ISDAWORK+6                                               01420000
ISDAMSCS EQU   0                                                        01421000
SUBSYSID EQU   ISDAMSCS+1                                               01422000
SSID     EQU   SUBSYSID                                                 01423000
SSIDTYPE EQU   SSID                                                     01424000
FORMATNO EQU   ISDAMSCS+3                                               01425000
SUBSENSE EQU   ISDAMSCS+4                                               01426000
SUBSTAT4 EQU   SUBSENSE                                                 01427000
SARETRY  EQU   SUBSENSE+5                                               01428000
SALOWAD2 EQU   SUBSENSE+6                                               01429000
SUBFMTMG EQU   SUBSENSE+7                                               01430000
SUBFMTNO EQU   SUBFMTMG                                                 01431000
SANOMSCD EQU   SUBSENSE+27                                              01432000
ISDAMSC5 EQU   0                                                        01433000
DRIVEID4 EQU   ISDAMSC5+4                                               01434000
FMTMSG5  EQU   ISDAMSC5+7                                               01435000
DASDSENS EQU   ISDAMSC5+8                                               01436000
ISDAPRMS EQU   0                                                        01437000
CINPUT   EQU   ISDAPRMS                                                 01438000
CSTART   EQU   ISDAPRMS+2                                               01439000
CEND     EQU   ISDAPRMS+6                                               01440000
CFSCONLY EQU   ISDAPRMS+13                                              01441000
CSSIDF   EQU   ISDAPRMS+17                                              01442000
CSERIAL  EQU   ISDAPRMS+21                                              01443000
CREPORTS EQU   ISDAPRMS+33                                              01444000
CPAD     EQU   CREPORTS+1                                               01445000
ISDACVT  EQU   0                                                        01446000
CVTPTRS0 EQU   ISDACVT                                                  01447000
DATAPTR  EQU   CVTPTRS0                                                 01448000
SDATAPTR EQU   CVTPTRS0+4                                               01449000
PARMPTR  EQU   CVTPTRS0+8                                               01450000
SDA00PTR EQU   CVTPTRS0+12                                              01451000
PAD00PTR EQU   CVTPTRS0+44                                              01452000
CNFG0PTR EQU   CVTPTRS0+88                                              01453000
WORKCALL EQU   CVTPTRS0+96                                              01454000
GET0CALL EQU   ISDACVT+100                                              01455000
SPNOLEN  EQU   GET0CALL                                                 01456000
SPNO     EQU   SPNOLEN                                                  01457000
CORELEN  EQU   SPNOLEN+1                                                01458000
COREADDR EQU   GET0CALL+4                                               01459000
HEXPCALL EQU   ISDACVT+108                                              01460000
PRT0CALL EQU   ISDACVT+120                                              01461000
OUTLINE  EQU   PRT0CALL                                                 01462000
SDADATD  EQU   ISDACVT+256                                              01463000
PRTDATD  EQU   ISDACVT+416                                              01464000
OBRMDR   EQU   0                                                        01465000
SCW      EQU   OBRMDR                                                   01466000
SWITCHES EQU   OBRMDR+6                                                 01467000
DATETIME EQU   OBRMDR+12                                                01468000
DATE     EQU   DATETIME                                                 01469000
TIME     EQU   DATETIME+4                                               01470000
CPUSERID EQU   OBRMDR+21                                                01471000
CPUSER   EQU   CPUSERID                                                 01472000
CPUID    EQU   CPUSERID+3                                               01473000
CL0001@  EQU   0                                                        01474000
CPUSERS  EQU   0                                                        01475000
SAINTF   EQU   0                                                        01476000
CVTPTR   EQU   0                                                        01477000
CSADRDDS EQU   SADRDDSD                                                 01478000
CDRDACCT EQU   DRDACCTB                                                 01479000
CSPNDLET EQU   SPNDLETB                                                 01480000
SENSEPTR EQU   SDATAPTR                                                 01481000
LPARMPTR EQU   PARMPTR                                                  01482000
LOGPTR   EQU   DATAPTR                                                  01483000
P0SSID   EQU   SUBSYSID                                                 01484000
P0LIBN   EQU   P0SSID+1                                                 01485000
*                                      START UNREFERENCED COMPONENTS    01486000
@NM00009 EQU   P0SSID                                                   01487000
VERNO    EQU   OBRMDR+20                                                01488000
TENSHUND EQU   TIME+3                                                   01489000
SECOND   EQU   TIME+2                                                   01490000
MINUTE   EQU   TIME+1                                                   01491000
HOUR     EQU   TIME                                                     01492000
DAY      EQU   DATE+2                                                   01493000
YEAR     EQU   DATE                                                     01494000
RECENTRY EQU   OBRMDR+11                                                01495000
RCDCNT   EQU   OBRMDR+10                                                01496000
SWITCH3  EQU   SWITCHES+3                                               01497000
SWITCH2  EQU   SWITCHES+2                                               01498000
SWITCH1  EQU   SWITCHES+1                                               01499000
SWITCH0  EQU   SWITCHES                                                 01500000
SYSREL   EQU   OBRMDR+5                                                 01501000
CLASRC   EQU   OBRMDR+4                                                 01502000
@NM00008 EQU   SCW+3                                                    01503000
SCODE    EQU   SCW+2                                                    01504000
SLENGTH  EQU   SCW                                                      01505000
PRTSA001 EQU   PRTDATD                                                  01506000
SDATEMPS EQU   SDADATD+136                                              01507000
SDASA002 EQU   SDADATD+76                                               01508000
SDAPC001 EQU   SDADATD+72                                               01509000
SDASA001 EQU   SDADATD                                                  01510000
SDARPTID EQU   PRT0CALL+133                                             01511000
LINE     EQU   OUTLINE+1                                                01512000
ANSI     EQU   OUTLINE                                                  01513000
DUMPIDNO EQU   HEXPCALL+8                                               01514000
DUMPLEN  EQU   HEXPCALL+4                                               01515000
DUMPADDR EQU   HEXPCALL                                                 01516000
GEN00PTR EQU   CVTPTRS0+92                                              01517000
PWR00PTR EQU   CVTPTRS0+84                                              01518000
APR00PTR EQU   CVTPTRS0+80                                              01519000
DRC00PTR EQU   CVTPTRS0+76                                              01520000
DAT00PTR EQU   CVTPTRS0+72                                              01521000
CSB00PTR EQU   CVTPTRS0+68                                              01522000
DCK00PTR EQU   CVTPTRS0+64                                              01523000
EQC00PTR EQU   CVTPTRS0+60                                              01524000
FSC00PTR EQU   CVTPTRS0+56                                              01525000
DHE00PTR EQU   CVTPTRS0+52                                              01526000
SUM00PTR EQU   CVTPTRS0+48                                              01527000
DCS00PTR EQU   CVTPTRS0+40                                              01528000
LOG00PTR EQU   CVTPTRS0+36                                              01529000
HIST0PTR EQU   CVTPTRS0+32                                              01530000
PRT00PTR EQU   CVTPTRS0+28                                              01531000
GET00PTR EQU   CVTPTRS0+24                                              01532000
TYPE0PTR EQU   CVTPTRS0+20                                              01533000
PARM0PTR EQU   CVTPTRS0+16                                              01534000
CTRACE   EQU   ISDAPRMS+48                                              01535000
CGEN     EQU   ISDAPRMS+47                                              01536000
CDETAIL  EQU   ISDAPRMS+46                                              01537000
CPERIOD  EQU   ISDAPRMS+45                                              01538000
CPWR     EQU   CREPORTS+11                                              01539000
CAPRSUU  EQU   CREPORTS+10                                              01540000
CDRC     EQU   CREPORTS+9                                               01541000
CDAT     EQU   CREPORTS+8                                               01542000
CCSBCSF  EQU   CREPORTS+7                                               01543000
CDCKTLX  EQU   CREPORTS+6                                               01544000
CEQC     EQU   CREPORTS+5                                               01545000
CFSC     EQU   CREPORTS+4                                               01546000
CDHEDHU  EQU   CREPORTS+3                                               01547000
CSUM     EQU   CREPORTS+2                                               01548000
CDCS     EQU   CREPORTS                                                 01549000
CSERNO   EQU   CSERIAL+4                                                01550000
@NM00007 EQU   CSERIAL+3                                                01551000
CIBM     EQU   CSERIAL                                                  01552000
CRATIO   EQU   ISDAPRMS+19                                              01553000
CSSID    EQU   CSSIDF                                                   01554000
@NM00006 EQU   CSSIDF                                                   01555000
CFSC34   EQU   CFSCONLY+2                                               01556000
CFSC12   EQU   CFSCONLY                                                 01557000
CTYPE    EQU   ISDAPRMS+11                                              01558000
CSUMMARY EQU   ISDAPRMS+10                                              01559000
CENDDAY  EQU   CEND+2                                                   01560000
CENDYEAR EQU   CEND                                                     01561000
CSTDAY   EQU   CSTART+2                                                 01562000
CSTYEAR  EQU   CSTART                                                   01563000
CHISTIN  EQU   CINPUT+1                                                 01564000
CLOGIN   EQU   CINPUT                                                   01565000
BYTE27F5 EQU   DASDSENS+19                                              01566000
REALCYL5 EQU   DASDSENS+17                                              01567000
RUAFMT5  EQU   DASDSENS+16                                              01568000
FSCFMT5  EQU   DASDSENS+14                                              01569000
BYTE21F5 EQU   DASDSENS+13                                              01570000
BYTE20F5 EQU   DASDSENS+12                                              01571000
BYTE19F5 EQU   DASDSENS+11                                              01572000
BYTE18F5 EQU   DASDSENS+10                                              01573000
BYTE17F5 EQU   DASDSENS+9                                               01574000
BYTE16F5 EQU   DASDSENS+8                                               01575000
BYTE15F5 EQU   DASDSENS+7                                               01576000
BYTE14F5 EQU   DASDSENS+6                                               01577000
BYTE13F5 EQU   DASDSENS+5                                               01578000
BYTE12F5 EQU   DASDSENS+4                                               01579000
BYTE11F5 EQU   DASDSENS+3                                               01580000
BYTE10F5 EQU   DASDSENS+2                                               01581000
BYTE9F5  EQU   DASDSENS+1                                               01582000
BYTE8F5  EQU   DASDSENS                                                 01583000
MSGCODE5 EQU   FMTMSG5                                                  01584000
SUBFMTN5 EQU   FMTMSG5                                                  01585000
HIGHCYL5 EQU   ISDAMSC5+6                                               01586000
LOWCYL5  EQU   ISDAMSC5+5                                               01587000
RESTART5 EQU   ISDAMSC5+3                                               01588000
STATUS35 EQU   ISDAMSC5+2                                               01589000
STATUS25 EQU   ISDAMSC5+1                                               01590000
STATUS15 EQU   ISDAMSC5                                                 01591000
RCYLMSCD EQU   SUBSENSE+25                                              01592000
RUAMSCD  EQU   SUBSENSE+24                                              01593000
MSCFSC   EQU   SUBSENSE+22                                              01594000
@NM00005 EQU   SUBSENSE+21                                              01595000
RUADASD  EQU   SUBSENSE+20                                              01596000
DASDFSC  EQU   SUBSENSE+18                                              01597000
@NM00004 EQU   SUBSENSE+8                                               01598000
MSGCODEN EQU   SUBFMTMG                                                 01599000
@NM00003 EQU   SUBSENSE+4                                               01600000
DASDFMTN EQU   SUBSENSE+3                                               01601000
SALOWADD EQU   SUBSENSE+2                                               01602000
SUBSTAT5 EQU   SUBSENSE+1                                               01603000
SSIDDEVT EQU   SSID+1                                                   01604000
SSIDLIBN EQU   SSID+1                                                   01605000
SSIDFLAG EQU   SUBSYSID                                                 01606000
STATUS   EQU   ISDAMSCS                                                 01607000
DEVPTR   EQU   ISDAWORK+16                                              01608000
NOUTREC  EQU   ISDAWORK+12                                              01609000
NINREC   EQU   ISDAWORK+8                                               01610000
CUABYTE1 EQU   INRECCUA+1                                               01611000
CUABYTE0 EQU   INRECCUA                                                 01612000
DLENGTH  EQU   ISDAWORK+4                                               01613000
SDAFLAG0 EQU   INFLAGS+3                                                01614000
INSOURCE EQU   INFLAGS+1                                                01615000
IRECTYPE EQU   INFLAGS                                                  01616000
SAINTFP  EQU   PCNFG+32                                                 01617000
@NM00002 EQU   PCNFG+30                                                 01618000
CNFGTOTL EQU   PCNFG+28                                                 01619000
LTPAD    EQU   PCNFG+16                                                 01620000
PCNFGL   EQU   CNFGFXD+14                                               01621000
LIBSIZS  EQU   CNFGFXD+8                                                01622000
SANO     EQU   CNFGFXD+6                                                01623000
SPINO    EQU   CNFGFXD+4                                                01624000
CPUNO    EQU   CNFGFXD+2                                                01625000
MSFNO    EQU   CNFGFXD                                                  01626000
@NM00001 EQU   MSCDRDAC+2                                               01627000
PADFPTR  EQU   P0WORK                                                   01628000
INTF     EQU   CHCUTAB+7                                                01629000
SA       EQU   CHCUTAB+6                                                01630000
DRCL1    EQU   LTPDRC+1                                                 01631000
DRCL0    EQU   LTPDRC                                                   01632000
*                                      END UNREFERENCED COMPONENTS      01633000
@RF00085 EQU   @RC00077                                                 01634000
@RC00149 EQU   @RC00148                                                 01635000
@ENDDATA EQU   *                                                        01636000
         END   ISDAPAD0,(C'PLS2115',0701,77354)                         01637000
