         TITLE 'ISDASUM0 - SDA SUMMARY ACCUMULATOR                     *00001000
                        '                                               00002000
ISDASUM0 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'ISDASUM0  78.164'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  LA    @12,4095(,@11)                                      0001 00012000
         USING @PSTART,@11                                         0001 00013000
         USING @PSTART+4095,@12                                    0001 00014000
         L     @00,@SIZDATD                                        0001 00015000
         ISDAGSPC R,LV=(0)                                              00016000
         LR    @10,@01                                             0001 00017000
         USING @DATD,@10                                           0001 00018000
         ST    @13,@SA00001+4                                      0001 00019000
         LM    @00,@01,20(@13)                                     0001 00020000
         ST    @10,8(,@13)                                         0001 00021000
         LR    @13,@10                                             0001 00022000
         MVC   @PC00001(4),0(@01)                                  0001 00023000
*                                                                  0033 00024000
*   /*****************************************************************/ 00025000
*   /*                                                               */ 00026000
*   /* INITIALIZE SECTION                                            */ 00027000
*   /*                                                               */ 00028000
*   /*****************************************************************/ 00029000
*                                                                  0033 00030000
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO ISDACVT    0033 00031000
*                                                            @Y30LB55*/ 00032000
         L     @06,@PC00001                                        0033 00033000
         L     CVTPTR,WORKPTR(,@06)                                0033 00034000
*   RETCODE=0;                      /* ZERO RETURN CODE      @Y30LB55*/ 00035000
         SLR   RETCODE,RETCODE                                     0034 00036000
*   LPARMPTR=PARMPTR;               /* SET LOCAL PTR TO ISDAPRMS   0035 00037000
*                                                            @Y30LB55*/ 00038000
         MVC   LPARMPTR(4),PARMPTR(CVTPTR)                         0035 00039000
*   IF SUM00PTR=0 THEN              /* ON FIRST CALL         @Y30LB55*/ 00040000
*                                                                  0036 00041000
         SLR   @06,@06                                             0036 00042000
         C     @06,SUM00PTR(,CVTPTR)                               0036 00043000
         BNE   @RF00036                                            0036 00044000
*     /***************************************************************/ 00045000
*     /*                                                             */ 00046000
*     /* GET CORE FOR SUMWORK AND SUMACCUM                           */ 00047000
*     /*                                                             */ 00048000
*     /***************************************************************/ 00049000
*                                                                  0037 00050000
*     DO;                           /* GET CORE              @Y30LB55*/ 00051000
*       SUMWKPTR=0;                 /* INITIALYZE SUMWKPTR   @Y30LB55*/ 00052000
         SLR   SUMWKPTR,SUMWKPTR                                   0038 00053000
*       GET0PTR=0;                  /* INITIALYZE GET0PTR    @Y30LB55*/ 00054000
*                                                                  0039 00055000
         ST    @06,GET0PTR                                         0039 00056000
*       /*************************************************************/ 00057000
*       /*                                                           */ 00058000
*       /* CALL ISDAGET1 FOR SMALL SUM WORK AREA                     */ 00059000
*       /*                                                           */ 00060000
*       /*************************************************************/ 00061000
*                                                                  0040 00062000
*       CORELEN=LENGTH(SUMWORK);    /* LENGTH OF SUMWORK     @Y30LB55*/ 00063000
         MVC   CORELEN(3,CVTPTR),@CF00612+1                        0040 00064000
*       SPNO=SUMSPNO;               /* SET MY SUBPOOL NUMBER @Y30LB55*/ 00065000
         MVC   SPNO(1,CVTPTR),SUMSPNO                              0041 00066000
*       RFY                                                        0042 00067000
*         R1 RSTD;                  /*                       @Y30LB55*/ 00068000
*       R1=ADDR(WORKCALL);          /* R1 -> ADDR(WORKPTR)   @Y30LB55*/ 00069000
         LA    R1,WORKCALL(,CVTPTR)                                0043 00070000
*       CALL ISDAGET1;              /* GET SUMWORK WITHOUT HEADER  0044 00071000
*                                                            @Y30LB55*/ 00072000
         L     @15,@CV00454                                        0044 00073000
         BALR  @14,@15                                             0044 00074000
*       RFY                                                        0045 00075000
*         R15 RSTD;                 /*                       @Y30LB55*/ 00076000
*       RETCODE=R15;                /* SAVE RETURN CODE      @Y30LB55*/ 00077000
         LR    RETCODE,R15                                         0046 00078000
*       RFY                                                        0047 00079000
*        (R1,                                                      0047 00080000
*         R15) UNRSTD;              /*                       @Y30LB55*/ 00081000
*       IF RETCODE=0 THEN           /* WAS GETMAIN DONE      @Y30LB55*/ 00082000
         LTR   RETCODE,RETCODE                                     0048 00083000
         BNZ   @RF00048                                            0048 00084000
*         DO;                       /* YES, SET ALL ADDRESS POINTERS    00085000
*                                                            @Y30LB55*/ 00086000
*           SUM00PTR=COREADDR;      /* STORE WORKAREA ADDRESS IN   0050 00087000
*                                      ISDACVT               @Y30LB55*/ 00088000
         L     @06,COREADDR(,CVTPTR)                               0050 00089000
         ST    @06,SUM00PTR(,CVTPTR)                               0050 00090000
*           SUMWKPTR=COREADDR;      /* SET ADDR TO WORKAREA  @Y30LB55*/ 00091000
         LR    SUMWKPTR,@06                                        0051 00092000
*           SUMWORK=''B;            /* ZERO ACCUMULATOR      @Y30LB55*/ 00093000
         XC    SUMWORK(233,SUMWKPTR),SUMWORK(SUMWKPTR)             0052 00094000
*           NCOUNTER=ISDASUM2;      /* SAVE COUNT OF ENTRIES IN    0053 00095000
*                                      DEFAULT TABLE         @Y30LB55*/ 00096000
         L     @06,@CA00406                                        0053 00097000
         L     @15,ISDASUM2-ISDASUM2(,@06)                         0053 00098000
         STH   @15,NCOUNTER(,SUMWKPTR)                             0053 00099000
*           SUM2PTR=ADDR(ISDASUM2)+4;/* SAVE ADDR OF ACTUAL DEFAULT     00100000
*                                      TABLE                 @Y30LB55*/ 00101000
         AH    @06,@CH00106                                        0054 00102000
         ST    @06,SUM2PTR(,SUMWKPTR)                              0054 00103000
*           SUMACCL=LENGTH(MCOUNTER)*NCOUNTER;/*                   0055 00104000
*                                      LENGTH EACH ENTRY*NO. ENTRIES    00105000
*                                                            @Y30LB55*/ 00106000
         MH    @15,@CH00221                                        0055 00107000
         STH   @15,SUMACCL(,SUMWKPTR)                              0055 00108000
*           NCPUCNTS=LENGTH(SUMWORK2)/LENGTH(CPUFOUND);/* SET MAX NO.   00109000
*                                                            @Y30LB55*/ 00110000
*                                                                  0056 00111000
         MVC   NCPUCNTS(2,SUMWKPTR),@CH00207                       0056 00112000
*           /*********************************************************/ 00113000
*           /*                                                       */ 00114000
*           /* GET ACCUMULATOR                                       */ 00115000
*           /*                                                       */ 00116000
*           /*********************************************************/ 00117000
*                                                                  0057 00118000
*           IF CSUM(8)='1'B THEN    /* WAS SUM REPORT REQUESTED    0057 00119000
*                                                            @Y30LB55*/ 00120000
         L     @06,LPARMPTR                                        0057 00121000
         TM    CSUM(@06),B'00000001'                               0057 00122000
         BNO   @RF00057                                            0057 00123000
*             CALL GETACCUM;        /* YES, CALL ACCUMULATOR PROC  0058 00124000
*                                                            @Y30LB55*/ 00125000
         BAL   @14,GETACCUM                                        0058 00126000
*           ELSE                                                   0059 00127000
*             ;                     /* NO, DO NOT GET CORE FOR     0059 00128000
*                                      SUMACCUM              @Y30LB55*/ 00129000
@RF00057 DS    0H                                                  0060 00130000
*           ACCM0PTR=GET0PTR;       /* SAVE ADDR OF ACCUMULATOR 0  0060 00131000
*                                                            @Y30LB55*/ 00132000
         MVC   ACCM0PTR(4,SUMWKPTR),GET0PTR                        0060 00133000
*         END;                      /* END INITIALZIE SUMWORK@ZM02889*/ 00134000
*       ELSE                                                       0062 00135000
*         ;                         /* BAD RETURN FROM ISDAGET1    0062 00136000
*                                                            @Y30LB55*/ 00137000
@RF00048 DS    0H                                                  0063 00138000
*     END;                          /* END GETMAIN FOR WORKAREA AND     00139000
*                                      ACCUMULATOR                 0063 00140000
*                                                            @Y30LB55*/ 00141000
*   ELSE                            /* ON ALL OTHER CALLS    @Y30LB55*/ 00142000
*                                                                  0064 00143000
*     /***************************************************************/ 00144000
*     /*                                                             */ 00145000
*     /* NOT FIRST CALL, SET UP LOCAL POINTERS                       */ 00146000
*     /*                                                             */ 00147000
*     /***************************************************************/ 00148000
*                                                                  0064 00149000
*     SUMWKPTR=SUM00PTR;            /* SET ADDR TO WORKAREA  @Y30LB55*/ 00150000
         B     @RC00036                                            0064 00151000
@RF00036 L     SUMWKPTR,SUM00PTR(,CVTPTR)                          0064 00152000
*                                                                  0065 00153000
*   /*****************************************************************/ 00154000
*   /*                                                               */ 00155000
*   /* ACCUMULATOR CODE                                              */ 00156000
*   /*                                                               */ 00157000
*   /*****************************************************************/ 00158000
*                                                                  0065 00159000
*   IF RETCODE=0 THEN                                              0065 00160000
@RC00036 LTR   RETCODE,RETCODE                                     0065 00161000
         BNZ   @RF00065                                            0065 00162000
*     DO;                           /* GOT ACCUMULATOR OK    @Y30LB55*/ 00163000
*       LOGPTR=DATAPTR;             /* SET LOCAL PTR TO OBRMDR     0067 00164000
*                                                            @Y30LB55*/ 00165000
         MVC   LOGPTR(4,SUMWKPTR),DATAPTR(CVTPTR)                  0067 00166000
*       SENSEPTR=SDATAPTR;          /* SET LOCAL PTR TO ISDAMSCS   0068 00167000
*                                                            @Y30LB55*/ 00168000
         MVC   SENSEPTR(4,SUMWKPTR),SDATAPTR(CVTPTR)               0068 00169000
*       IF SUMFLAGS(1)='0'B THEN    /* ACCUMULATING DATA     @ZA20267*/ 00170000
         TM    SUMFLAGS(SUMWKPTR),B'10000000'                      0069 00171000
         BNZ   @RF00069                                            0069 00172000
*         CALL SUM0CPU;             /* BUILD TABLE OF CPUIDS @Y30LB55*/ 00173000
         BAL   @14,SUM0CPU                                         0070 00174000
*       ELSE;                       /* NO, PRINT SEVERITY    @ZA20267*/ 00175000
@RF00069 DS    0H                                                  0072 00176000
*       MAINMASK=''B;               /* ZERO 3 BYTE MASK      @Y30LB55*/ 00177000
*                                                                  0072 00178000
         XC    MAINMASK(3,SUMWKPTR),MAINMASK(SUMWKPTR)             0072 00179000
*       /*************************************************************/ 00180000
*       /*                                                           */ 00181000
*       /* BUILD MASKS FOR ACCUMULATOR UPDATES                       */ 00182000
*       /*                                                           */ 00183000
*       /*************************************************************/ 00184000
*                                                                  0073 00185000
*       IF INDEVTYP='S' THEN        /* SUBSYSTEM RECORD      @Y30LB55*/ 00186000
         L     @06,SDA00PTR(,CVTPTR)                               0073 00187000
         CLI   INDEVTYP(@06),C'S'                                  0073 00188000
         BNE   @RF00073                                            0073 00189000
*         FORMATCK=FORMATNO&'FC'X;  /* SET FORMATCK=FORMATNO(1-6)  0074 00190000
*                                                            @Y30LB55*/ 00191000
         L     @06,SENSEPTR(,SUMWKPTR)                             0074 00192000
         MVC   FORMATCK(1,SUMWKPTR),FORMATNO(@06)                  0074 00193000
         NI    FORMATCK(SUMWKPTR),X'FC'                            0074 00194000
*       ELSE                        /* NO, HOST DASD RECORD  @Y30LB55*/ 00195000
*         FORMATCK='04'X;           /* SET FORMATCK SAME AS FORMAT 5    00196000
*                                                            @Y30LB55*/ 00197000
         B     @RC00073                                            0075 00198000
@RF00073 MVI   FORMATCK(SUMWKPTR),X'04'                            0075 00199000
*       IF INDEVTYP='S' THEN        /* SUBSYSTEM RECORD      @Y30LB55*/ 00200000
@RC00073 L     @06,SDA00PTR(,CVTPTR)                               0076 00201000
         CLI   INDEVTYP(@06),C'S'                                  0076 00202000
         BNE   @RF00076                                            0076 00203000
*         IF FORMATCK(1)='1'B THEN                                 0077 00204000
         TM    FORMATCK(SUMWKPTR),B'10000000'                      0077 00205000
         BNO   @RF00077                                            0077 00206000
*           CALL SUMFMT0;           /* MSC FORMAT 0          @Y30LB55*/ 00207000
         BAL   @14,SUMFMT0                                         0078 00208000
*         ELSE                                                     0079 00209000
*           IF FORMATCK(2)='1'B THEN                               0079 00210000
         B     @RC00077                                            0079 00211000
@RF00077 TM    FORMATCK(SUMWKPTR),B'01000000'                      0079 00212000
         BNO   @RF00079                                            0079 00213000
*             CALL SUMFMT1;         /* MSC FORMAT 1          @Y30LB55*/ 00214000
         BAL   @14,SUMFMT1                                         0080 00215000
*           ELSE                                                   0081 00216000
*             IF FORMATCK(3)='1'B THEN                             0081 00217000
         B     @RC00079                                            0081 00218000
@RF00079 TM    FORMATCK(SUMWKPTR),B'00100000'                      0081 00219000
         BNO   @RF00081                                            0081 00220000
*               CALL SUMFMT2;       /* MSC FORMAT 2          @Y30LB55*/ 00221000
         BAL   @14,SUMFMT2                                         0082 00222000
*             ELSE                                                 0083 00223000
*               IF FORMATCK(4)='1'B THEN                           0083 00224000
         B     @RC00081                                            0083 00225000
@RF00081 TM    FORMATCK(SUMWKPTR),B'00010000'                      0083 00226000
         BNO   @RF00083                                            0083 00227000
*                 CALL SUMFMT3;     /* MSC FORMAT 3          @Y30LB55*/ 00228000
         BAL   @14,SUMFMT3                                         0084 00229000
*               ELSE                                               0085 00230000
*                 IF FORMATCK(5)='1'B THEN                         0085 00231000
         B     @RC00083                                            0085 00232000
@RF00083 TM    FORMATCK(SUMWKPTR),B'00001000'                      0085 00233000
         BNO   @RF00085                                            0085 00234000
*                   CALL SUMFMT4;   /* MSC FORMAT 4          @Y30LB55*/ 00235000
         BAL   @14,SUMFMT4                                         0086 00236000
*                 ELSE                                             0087 00237000
*                   IF FORMATCK(6)='1'B THEN                       0087 00238000
         B     @RC00085                                            0087 00239000
@RF00085 TM    FORMATCK(SUMWKPTR),B'00000100'                      0087 00240000
         BNO   @RF00087                                            0087 00241000
*                     CALL SUMFMT5; /* MSC FORMAT 5          @Y30LB55*/ 00242000
         BAL   @14,SUMFMT5                                         0088 00243000
*                   ELSE                                           0089 00244000
*                     DO;           /* UNKNOWN FORMAT        @Y30LB55*/ 00245000
*                                                                  0089 00246000
         B     @RC00087                                            0089 00247000
@RF00087 DS    0H                                                  0090 00248000
*                     /***********************************************/ 00249000
*                     /*                                             */ 00250000
*                     /* SUMUNKN - UNKNOWN FORMAT CODE               */ 00251000
*                     /*                                             */ 00252000
*                     /***********************************************/ 00253000
*                                                                  0090 00254000
*                       RETCODE=8;  /* SET REJECT RECORD CODE@Y30LB55*/ 00255000
         LA    RETCODE,8                                           0090 00256000
*                       FORMATNC='*';/* SET FORMAT NUMBER    @Y30LB55*/ 00257000
         MVI   FORMATNC(SUMWKPTR),C'*'                             0091 00258000
*                     END;          /* END UNKNOWN FORMAT    @Y30LB55*/ 00259000
*       ELSE                                                       0093 00260000
*         CALL SUMDASD;             /* HOST DASD RECORD      @Y30LB55   00261000
*                                                            @Y30LB55*/ 00262000
         B     @RC00076                                            0093 00263000
@RF00076 BAL   @14,SUMDASD                                         0093 00264000
*       IF ACCUMPTR^=0&SUMFLAGS(1)='0'B THEN /* DO SUMMARY   @ZA20267*/ 00265000
*                                                                  0094 00266000
@RC00076 ICM   @06,15,ACCUMPTR(SUMWKPTR)                           0094 00267000
         BZ    @RF00094                                            0094 00268000
         TM    SUMFLAGS(SUMWKPTR),B'10000000'                      0094 00269000
         BNZ   @RF00094                                            0094 00270000
*         /***********************************************************/ 00271000
*         /*                                                         */ 00272000
*         /* UPDATE COUNTERS WITH HIGH-LOW DATE AND TIME AND COUNTS  */ 00273000
*         /*                                                         */ 00274000
*         /***********************************************************/ 00275000
*                                                                  0095 00276000
*         DO;                       /* YES, BUILD TABLES     @ZA20267*/ 00277000
*           CALL UPDATEAC;          /* UPDATE COUNTERS       @Y30LB55*/ 00278000
         BAL   @14,UPDATEAC                                        0096 00279000
*           IF RETCODE=0&INDEVTYP^='R' THEN /* NO ERRORS AND NOT   0097 00280000
*                                              REAL DASD     @ZA20267*/ 00281000
         LTR   RETCODE,RETCODE                                     0097 00282000
         BNZ   @RF00097                                            0097 00283000
         L     @06,SDA00PTR(,CVTPTR)                               0097 00284000
         CLI   INDEVTYP(@06),C'R'                                  0097 00285000
         BE    @RF00097                                            0097 00286000
*             CALL SEVERITY;        /* BUILD SEVERITY LIST   @ZA20267*/ 00287000
         BAL   @14,SEVERITY                                        0098 00288000
*           ELSE;                   /* DO NOT ADD TO LIST    @ZA20267*/ 00289000
@RF00097 DS    0H                                                  0100 00290000
*         END;                      /* END BUILD SUM TABLES  @ZA20267*/ 00291000
*       ELSE                                                       0101 00292000
*         ;                         /* NO COUNTERS TO UPDATE @Y30LB55*/ 00293000
*                                                                  0101 00294000
@RF00094 DS    0H                                                  0102 00295000
*       /*************************************************************/ 00296000
*       /*                                                           */ 00297000
*       /* DETAIL PRINT OF INPUT DATA                                */ 00298000
*       /*                                                           */ 00299000
*       /*************************************************************/ 00300000
*                                                                  0102 00301000
*       IF SUMFLAGS(1)='0'B THEN    /* CALL FROM SDA0        @ZA20267*/ 00302000
         TM    SUMFLAGS(SUMWKPTR),B'10000000'                      0102 00303000
         BNZ   @RF00102                                            0102 00304000
*         DO;                       /* YES, CHECK IF DETAIL  @ZA20267*/ 00305000
*           CALL CHKPARMS;          /* SETS TEMP1 IF DETAIL        0104 00306000
*                                      REQUESTED             @ZM31121*/ 00307000
         BAL   @14,CHKPARMS                                        0104 00308000
*           IF TEMP1=FORMATCK THEN  /* DETAIL(X)=FORMATNO(X) @ZM31074*/ 00309000
         CLC   TEMP1(1,SUMWKPTR),FORMATCK(SUMWKPTR)                0105 00310000
         BNE   @RF00105                                            0105 00311000
*             CALL DETAIL;          /* YES, PRINT DATA       @ZM30999*/ 00312000
         BAL   @14,DETAIL                                          0106 00313000
*           ELSE;                   /* NO, DUMP THIS FORMAT NOT    0107 00314000
*                                      REQUESTED             @Y30LB55*/ 00315000
@RF00105 DS    0H                                                  0108 00316000
*         END;                      /* END PRINT DETAIL      @ZA20267*/ 00317000
*       ELSE                        /* CALL FROM ISDASUM1    @ZA20267*/ 00318000
*         CALL DETAIL;              /* PRINT SEVERITY REPORT @ZA20267*/ 00319000
         B     @RC00102                                            0109 00320000
@RF00102 BAL   @14,DETAIL                                          0109 00321000
*       IF RETCODE=8&FORMATCK(1)='1'B THEN /* FORMAT 0 AND         0110 00322000
*                                      UNKNOWN MSG CODE      @ZA14729*/ 00323000
@RC00102 CH    RETCODE,@CH00071                                    0110 00324000
         BNE   @RF00110                                            0110 00325000
         TM    FORMATCK(SUMWKPTR),B'10000000'                      0110 00326000
         BNO   @RF00110                                            0110 00327000
*         RETCODE=0;                /* YES, DO NOT REJECT    @ZA14729*/ 00328000
         SLR   RETCODE,RETCODE                                     0111 00329000
*       ELSE;                       /* NO                    @ZA14729*/ 00330000
@RF00110 DS    0H                                                  0113 00331000
*     END;                          /* END OF ACCUMULATOR CODE     0113 00332000
*                                                            @Y30LB55*/ 00333000
*   ELSE                            /* CANNOT CONTINUE - NO SPACE  0114 00334000
*                                                            @Y30LB55*/ 00335000
*                                                                  0114 00336000
*     /***************************************************************/ 00337000
*     /*                                                             */ 00338000
*     /* BAD RETURN FOR ISDAGET, SUM CANNOT BE RUN                   */ 00339000
*     /*                                                             */ 00340000
*     /***************************************************************/ 00341000
*                                                                  0114 00342000
*     DO;                           /* CLEANUP AND RESET CONTROL   0114 00343000
*                                      FLAGS                 @Y30LB55*/ 00344000
         B     @RC00065                                            0114 00345000
@RF00065 DS    0H                                                  0115 00346000
*       IF SUMWKPTR^=0 THEN         /* WAS SUMWORK GOT       @Y30LB55*/ 00347000
         SLR   @06,@06                                             0115 00348000
         CR    SUMWKPTR,@06                                        0115 00349000
         BE    @RF00115                                            0115 00350000
*         DO;                       /* YES, MUST FREE IT     @Y30LB55*/ 00351000
*           IF GET0PTR^=0 THEN      /* HAVE ACCUMULATOR YET  @ZM31074*/ 00352000
         L     @15,GET0PTR                                         0117 00353000
         CR    @15,@06                                             0117 00354000
         BE    @RF00117                                            0117 00355000
*             DO;                   /* YES, FREE IT          @ZM31074*/ 00356000
*               SPNOLEN=GET0SPLN;   /* LENGTH + SUBPOOL      @ZM31074*/ 00357000
         MVC   SPNOLEN(4,CVTPTR),GET0SPLN(@15)                     0119 00358000
*               COREADDR=GET0PTR;   /* ADDR OF ACCUM         @ZM31074*/ 00359000
         ST    @15,COREADDR(,CVTPTR)                               0120 00360000
*               RFY R1 RSTD;                                       0121 00361000
*               R1=ADDR(WORKCALL);  /* R1 -> WORKPTR         @ZM31074*/ 00362000
         LA    R1,WORKCALL(,CVTPTR)                                0122 00363000
*               CALL ISDAFREE;      /* FREEMAIN              @ZM31074*/ 00364000
         L     @15,@CV00455                                        0123 00365000
         BALR  @14,@15                                             0123 00366000
*               RFY R1 UNRSTD;                                     0124 00367000
*             END;                  /* END FREE ACCUM        @ZM31074*/ 00368000
*           ELSE;                   /* NO ACCUMULATOR TO FREE@ZM31074*/ 00369000
@RF00117 DS    0H                                                  0127 00370000
*           IF SEVSTART^=0 THEN     /* HAVE SEVERITY LIST    @ZA20267*/ 00371000
         L     @06,SEVSTART(,SUMWKPTR)                             0127 00372000
         LTR   @06,@06                                             0127 00373000
         BZ    @RF00127                                            0127 00374000
*             DO;                   /* YES, FREE IT          @ZA20267*/ 00375000
*               SPNOLEN=SEVRLEN;    /* LENGTH + SUBPOOL      @ZA20267*/ 00376000
         MVC   SPNOLEN(4,CVTPTR),SEVRLEN(SUMWKPTR)                 0129 00377000
*               COREADDR=SEVSTART;  /* ADDR OF SEVRLIST      @ZA20267*/ 00378000
         ST    @06,COREADDR(,CVTPTR)                               0130 00379000
*               RFY R1 RSTD;                                       0131 00380000
*               R1=ADDR(WORKCALL);  /* R1 -> WORKPTR         @ZA20267*/ 00381000
         LA    R1,WORKCALL(,CVTPTR)                                0132 00382000
*               CALL ISDAFREE;      /* FREEMAIN              @ZA20267*/ 00383000
         L     @15,@CV00455                                        0133 00384000
         BALR  @14,@15                                             0133 00385000
*               RFY R1 UNRSTD;                                     0134 00386000
*             END;                  /* END FREE SEVERITY     @ZA20267*/ 00387000
*           ELSE;                   /* NO LIST TO FREE       @ZA20267*/ 00388000
*                                                                  0136 00389000
@RF00127 DS    0H                                                  0137 00390000
*           /*********************************************************/ 00391000
*           /*                                                       */ 00392000
*           /* FREE SUMWORK                                          */ 00393000
*           /*                                                       */ 00394000
*           /*********************************************************/ 00395000
*                                                                  0137 00396000
*           CORELEN=LENGTH(SUMWORK);/* LENGTH OF WORKAREA    @Y30LB55*/ 00397000
         MVC   CORELEN(3,CVTPTR),@CF00612+1                        0137 00398000
*           SPNO=SUMSPNO;           /* SET SUBPOOL NUMBER    @Y30LB55*/ 00399000
         MVC   SPNO(1,CVTPTR),SUMSPNO                              0138 00400000
*           COREADDR=SUM00PTR;      /* ADDR OF WORKAREA      @Y30LB55*/ 00401000
         MVC   COREADDR(4,CVTPTR),SUM00PTR(CVTPTR)                 0139 00402000
*           RFY                                                    0140 00403000
*             R1 RSTD;              /*                       @Y30LB55*/ 00404000
*           R1=ADDR(WORKCALL);      /* R1 -> ADDR(WORKPTR)   @Y30LB55*/ 00405000
         LA    R1,WORKCALL(,CVTPTR)                                0141 00406000
*           CALL ISDAFREE;          /* FREE SUMWORK          @Y30LB55*/ 00407000
         L     @15,@CV00455                                        0142 00408000
         BALR  @14,@15                                             0142 00409000
*           RFY                                                    0143 00410000
*             R1 UNRSTD;            /* END FREEMAIN          @Y30LB55*/ 00411000
*         END;                      /* END FREE SUMWORK      @Y30LB55*/ 00412000
*       ELSE                                                       0145 00413000
*         ;                         /* NO, GETMAIN ERROR GETTING   0145 00414000
*                                      SUMWORK               @Y30LB55*/ 00415000
@RF00115 DS    0H                                                  0146 00416000
*       SUM00PTR=0;                 /* ZERO MY PTR IN ISDACVT@Y30LB55*/ 00417000
         SLR   @06,@06                                             0146 00418000
         ST    @06,SUM00PTR(,CVTPTR)                               0146 00419000
*       CSUM='00'X;                 /* ZERO SUM CALL FLAG    @Y30LB55*/ 00420000
         L     @06,LPARMPTR                                        0147 00421000
         MVI   CSUM(@06),X'00'                                     0147 00422000
*     END;                          /* END CLEANUP SECTION   @Y30LB55*/ 00423000
*   RETURN CODE(RETCODE);           /* RETURN TO ISDASDA0    @Y30LB55*/ 00424000
@RC00065 L     @13,4(,@13)                                         0149 00425000
         L     @00,@SIZDATD                                        0149 00426000
         LR    @01,@10                                             0149 00427000
         ISDAFSPC R,LV=(0),A=(1)                                        00428000
         LR    @15,@07                                             0149 00429000
         L     @14,12(,@13)                                        0149 00430000
         LM    @00,@12,20(@13)                                     0149 00431000
         BR    @14                                                 0149 00432000
*                                                                  0150 00433000
*   /*****************************************************************/ 00434000
*   /*                                                               */ 00435000
*   /* DETAIL - PROC TO PRINT DETAIL SENSE OPTION                    */ 00436000
*   /*                                                               */ 00437000
*   /*****************************************************************/ 00438000
*                                                                  0150 00439000
*DETAIL:                                                           0150 00440000
*   PROC OPTIONS(SAVE(14));         /* PRINT SENSE DATA      @ZM30999*/ 00441000
@EL00001 L     @13,4(,@13)                                         0150 00442000
@EF00001 L     @00,@SIZDATD                                        0150 00443000
         LR    @01,@10                                             0150 00444000
         ISDAFSPC R,LV=(0),A=(1)                                        00445000
@ER00001 LM    @14,@12,12(@13)                                     0150 00446000
         BR    @14                                                 0150 00447000
DETAIL   ST    @14,@SA00002                                        0150 00448000
*   CALL BUILDM01;                  /* CALL PROC TO BUILD DETAIL   0151 00449000
*                                      OUTPUT                @Y30LB55*/ 00450000
         BAL   @14,BUILDM01                                        0151 00451000
*   IF SUMFLAGS(1)='0'B THEN        /* CALL FROM ISDASDA0    @ZA20267*/ 00452000
         TM    SUMFLAGS(SUMWKPTR),B'10000000'                      0152 00453000
         BNZ   @RF00152                                            0152 00454000
*     IF (LINECNT+4)>MAXLCNT THEN   /* NO SPACE ON PAGE      @ZM30730*/ 00455000
         L     @06,PRT00PTR(,CVTPTR)                               0153 00456000
         LA    @15,4                                               0153 00457000
         AH    @15,LINECNT(,@06)                                   0153 00458000
         CH    @15,@CH00441                                        0153 00459000
         BNH   @RF00153                                            0153 00460000
*       ANSI=PSKIP;                 /* YES, SKIP TO NEW PAGE @ZM30730*/ 00461000
         MVI   ANSI(CVTPTR),C'1'                                   0154 00462000
*     ELSE                          /* THIS PAGE OK          @ZM30730*/ 00463000
*       ANSI=LSKIP2;                /* SKIP 2 LINES          @Y30LB55*/ 00464000
         B     @RC00153                                            0155 00465000
@RF00153 MVI   ANSI(CVTPTR),C'0'                                   0155 00466000
*   ELSE                            /* CALL FROM ISDASUM1    @ZA20267*/ 00467000
*     ANSI=LSKIP1;                  /* 1 SKIP FOR SEVERITY   @ZA20267*/ 00468000
         B     @RC00152                                            0156 00469000
@RF00152 MVI   ANSI(CVTPTR),C' '                                   0156 00470000
*   DUMPADDR=ADDR(ISDAMSCS);        /* SET ADDR TO DUMP      @Y30LB55*/ 00471000
@RC00152 MVC   DUMPADDR(4,CVTPTR),SENSEPTR(SUMWKPTR)               0157 00472000
*   DUMPLEN=DLENGTH;                /* SET LENGTH TO DUMP    @Y30LB55*/ 00473000
         L     @06,SDA00PTR(,CVTPTR)                               0158 00474000
         LH    @06,DLENGTH(,@06)                                   0158 00475000
         ST    @06,DUMPLEN(,CVTPTR)                                0158 00476000
*   DUMPIDNO=0;                     /* SET DUMP ID OFF       @Y30LB55*/ 00477000
         SLR   @06,@06                                             0159 00478000
         ST    @06,DUMPIDNO(,CVTPTR)                               0159 00479000
*   RFY                                                            0160 00480000
*     R1 RSTD;                      /*                       @Y30LB55*/ 00481000
*   R1=ADDR(WORKCALL);              /* R1 -> ADDR(WORKPTR)   @Y30LB55*/ 00482000
         LA    R1,WORKCALL(,CVTPTR)                                0161 00483000
*   CALL ISDAPRT0;                  /* PRINT SUMMSG01        @Y30LB55*/ 00484000
         L     @15,@CV00457                                        0162 00485000
         BALR  @14,@15                                             0162 00486000
*   ANSI=LSKIP1;                    /* SKIP 1 LINE           @Y30LB55*/ 00487000
         MVI   ANSI(CVTPTR),C' '                                   0163 00488000
*   LINE=SUMMSG02;                  /* MOVE MSG02            @Y30LB55*/ 00489000
         MVI   LINE+115(CVTPTR),C' '                               0164 00490000
         MVC   LINE+116(16,CVTPTR),LINE+115(CVTPTR)                0164 00491000
         MVC   LINE(115,CVTPTR),SUMMSG02                           0164 00492000
*   FMTID02=FMTIDSV;                /* MOVE FORMAT ID        @Y30LB55*/ 00493000
         MVC   FMTID02(7,CVTPTR),FMTIDSV(SUMWKPTR)                 0165 00494000
*   FMTNO02=FORMATNC;               /* MOVE FORMAT NO.       @Y30LB55*/ 00495000
         MVC   FMTNO02(1,CVTPTR),FORMATNC(SUMWKPTR)                0166 00496000
*   IF FORMATCK(5:6)^='00'B THEN    /* FORMAT 4 OR 5         @Y30LB55*/ 00497000
         TM    FORMATCK(SUMWKPTR),B'00001100'                      0167 00498000
         BZ    @RF00167                                            0167 00499000
*     DO;                           /* MOVE SA FORMAT        @ZM31022*/ 00500000
*       SUBFID02=SUBFIDSV;          /* YES, MOVE SUB FMT NO. @Y30LB55*/ 00501000
         MVC   SUBFID02(1,CVTPTR),SUBFIDSV(SUMWKPTR)               0169 00502000
*       IF INDEVTYP='R' THEN        /* REAL 3330 RECORD      @ZM31022*/ 00503000
         L     @06,SDA00PTR(,CVTPTR)                               0170 00504000
         CLI   INDEVTYP(@06),C'R'                                  0170 00505000
         BNE   @RF00170                                            0170 00506000
*         SABLANK='  ';             /* YES, BLANK WORD SA    @ZM31022*/ 00507000
         MVC   SABLANK(2,CVTPTR),@CC00880                          0171 00508000
*       ELSE;                       /* NO                    @ZM31022*/ 00509000
@RF00170 DS    0H                                                  0173 00510000
*     END;                          /* END MOVE SA FORMAT    @ZM31022*/ 00511000
*   ELSE                            /* NO SA FORMAT FOR 0,1,2,3    0174 00512000
*                                                            @Y30LB55*/ 00513000
*     SUBFID12='';                  /* BLANK SA FORMAT       @Y30LB55*/ 00514000
         B     @RC00167                                            0174 00515000
@RF00167 MVI   SUBFID12(CVTPTR),C' '                               0174 00516000
         MVC   SUBFID12+1(13,CVTPTR),SUBFID12(CVTPTR)              0174 00517000
*   MSGCOD02(2)=RPAREN;             /* MOVE RIGHT PAREN      @ZM02889*/ 00518000
@RC00167 MVI   MSGCOD02+1(CVTPTR),C')'                             0175 00519000
*   IF FORMATCK(1)='1'B THEN        /* FORMAT 0              @ZM02889*/ 00520000
         TM    FORMATCK(SUMWKPTR),B'10000000'                      0176 00521000
         BNO   @RF00176                                            0176 00522000
*     DO;                           /* YES, MOVE 2 DIGITS    @ZM02889*/ 00523000
*       MSGCOD02(1)=SUBFIDSV;       /* MOVE BITS 0-3         @ZM02889*/ 00524000
         MVC   MSGCOD02(1,CVTPTR),SUBFIDSV(SUMWKPTR)               0178 00525000
*       MSGCOD02(2)=MSGCODSV;       /* MOVE BITS 4-7         @ZM02889*/ 00526000
         MVC   MSGCOD02+1(1,CVTPTR),MSGCODSV(SUMWKPTR)             0179 00527000
*       MSGCOD02(3)=RPAREN;         /* MOVE RIGHT PAREN      @ZM02889*/ 00528000
         MVI   MSGCOD02+2(CVTPTR),C')'                             0180 00529000
*     END;                          /* END FORMAT 0 MSG CODE @ZM02889*/ 00530000
*   ELSE                            /* CHECK FORMAT 4 OR 5   @ZM02889*/ 00531000
*     IF FORMATCK(5:6)^='00'B THEN  /* FORMAT 4 OR 5         @ZM02889*/ 00532000
         B     @RC00176                                            0182 00533000
@RF00176 TM    FORMATCK(SUMWKPTR),B'00001100'                      0182 00534000
         BZ    @RF00182                                            0182 00535000
*       MSGCOD02(1)=MSGCODSV;       /* MOVE MSG CODE         @ZM02889*/ 00536000
         MVC   MSGCOD02(1,CVTPTR),MSGCODSV(SUMWKPTR)               0183 00537000
*     ELSE                          /* NO MSG CODE FOR FMTS 1,2,3  0184 00538000
*                                                            @ZM02889*/ 00539000
*       MSGCOD12='';                /* BLANK MSG CODE        @ZM02889*/ 00540000
         B     @RC00182                                            0184 00541000
@RF00182 MVI   MSGCOD12(CVTPTR),C' '                               0184 00542000
         MVC   MSGCOD12+1(11,CVTPTR),MSGCOD12(CVTPTR)              0184 00543000
*   CALL ISDAPRT0;                  /* PRINT SUMMSG02        @Y30LB55*/ 00544000
@RC00182 DS    0H                                                  0185 00545000
@RC00176 L     @15,@CV00457                                        0185 00546000
         BALR  @14,@15                                             0185 00547000
*   RFY                                                            0186 00548000
*     R1 UNRSTD;                    /*                       @Y30LB55*/ 00549000
*   CALL PRINTID;                   /* PRINT SENSE DESCRIP   @ZM30999*/ 00550000
         BAL   @14,PRINTID                                         0187 00551000
*   END DETAIL;                     /* END DETAIL PRINT      @Y30LB55*/ 00552000
@EL00002 DS    0H                                                  0188 00553000
@EF00002 DS    0H                                                  0188 00554000
@ER00002 L     @14,@SA00002                                        0188 00555000
         BR    @14                                                 0188 00556000
*                                                                  0189 00557000
*   /*****************************************************************/ 00558000
*   /*                                                               */ 00559000
*   /* PRINTID - PROC TO PRINT SENSE DATA WITH ID IN DETAIL PRINT    */ 00560000
*   /*                                                               */ 00561000
*   /*****************************************************************/ 00562000
*                                                                  0189 00563000
*PRINTID:                                                          0189 00564000
*   PROC OPTIONS(SAVE(14));         /* GET SENSE DATA ID     @ZM30999*/ 00565000
PRINTID  ST    @14,@SA00003                                        0189 00566000
*   J=0;                            /* INIT J                @ZM30999*/ 00567000
         SLR   J,J                                                 0190 00568000
*   LINE='';                        /* BLANK LINE            @ZM30999*/ 00569000
         MVI   LINE(CVTPTR),C' '                                   0191 00570000
         MVC   LINE+1(131,CVTPTR),LINE(CVTPTR)                     0191 00571000
*   IF RETCODE=0 THEN               /* HAVE KNOWN FORMAT     @ZM30999*/ 00572000
         LTR   RETCODE,RETCODE                                     0192 00573000
         BNZ   @RF00192                                            0192 00574000
*     DO;                           /* YES, GET SENSE ID     @ZM30999*/ 00575000
*       DEVIDPTR=SUM2PTR;           /* GET START OF SUM2     @ZM30999*/ 00576000
         L     DEVIDPTR,SUM2PTR(,SUMWKPTR)                         0194 00577000
*       DO I=1 TO NCOUNTER WHILE(J=0); /* LOOP THROUGH SUM2  @ZM30999*/ 00578000
         LA    I,1                                                 0195 00579000
         B     @DE00195                                            0195 00580000
@DL00195 LTR   J,J                                                 0195 00581000
         BNZ   @DC00195                                            0195 00582000
*         IF MAINMASK=MDMASK THEN   /* DO WE HAVE A MATCH    @ZM30999*/ 00583000
         CLC   MAINMASK(3,SUMWKPTR),MDMASK(DEVIDPTR)               0196 00584000
         BNE   @RF00196                                            0196 00585000
*           J=1;                    /* YES, GET OUT OF LOOP  @ZM30999*/ 00586000
         LA    J,1                                                 0197 00587000
*         ELSE                      /* NO MATCH YET          @ZM30999*/ 00588000
*           DEVIDPTR=DEVIDPTR+LENGTH(MDEVIDTB);/*                  0198 00589000
*                                      INC SUM2 POINTER      @ZM30999*/ 00590000
         B     @RC00196                                            0198 00591000
@RF00196 AH    DEVIDPTR,@CH01011                                   0198 00592000
*       END;                        /* END LOOP THRU SUM2    @ZM30999*/ 00593000
@RC00196 AH    I,@CH00083                                          0199 00594000
@DE00195 SLR   @15,@15                                             0199 00595000
         ICM   @15,3,NCOUNTER(SUMWKPTR)                            0199 00596000
         CR    I,@15                                               0199 00597000
         BNH   @DL00195                                            0199 00598000
@DC00195 DS    0H                                                  0200 00599000
*       IF J=1 THEN                 /* DID WE FIND A MATCH   @ZM30999*/ 00600000
         CH    J,@CH00083                                          0200 00601000
         BNE   @RF00200                                            0200 00602000
*         SENSEID=MDMSGXXX;         /* MOVE SENSE DESCRIPTION@ZM30999*/ 00603000
         MVC   SENSEID(34,CVTPTR),MDMSGXXX(DEVIDPTR)               0201 00604000
*       ELSE;                       /* NO MATCH IN SUM2      @ZM30999*/ 00605000
@RF00200 DS    0H                                                  0203 00606000
*     END;                          /* END GET SENSE ID      @ZM30999*/ 00607000
*   ELSE;                           /* UNKNOWN FORMAT        @ZM30999*/ 00608000
@RF00192 DS    0H                                                  0205 00609000
*   RFY R1 RSTD;                    /* RESTRICT R1           @ZM30999*/ 00610000
*   R1=ADDR(WORKCALL);              /* R1 -> WORKPTR         @ZM30999*/ 00611000
         LA    R1,WORKCALL(,CVTPTR)                                0206 00612000
*   CALL ISDAHEXP;                  /* PRINT SENSE AND ID    @ZM30999*/ 00613000
         L     @15,@CV00456                                        0207 00614000
         BALR  @14,@15                                             0207 00615000
*   RFY R1 UNRSTD;                  /* RELEASE R1            @ZM30999*/ 00616000
*   END PRINTID;                    /* END PRINTID PROC      @ZM30999*/ 00617000
@EL00003 DS    0H                                                  0209 00618000
@EF00003 DS    0H                                                  0209 00619000
@ER00003 L     @14,@SA00003                                        0209 00620000
         BR    @14                                                 0209 00621000
*                                                                  0210 00622000
*   /*****************************************************************/ 00623000
*   /*                                                               */ 00624000
*   /* SUM0CPU - PROC TO BUILD TABLE OF CPUIDS - CPUFOUND            */ 00625000
*   /*                                                               */ 00626000
*   /*****************************************************************/ 00627000
*                                                                  0210 00628000
*SUM0CPU:                                                          0210 00629000
*   PROC OPTIONS(SAVE(14));         /* BUILD TABLE OF CPUIDS @Y30LB55*/ 00630000
SUM0CPU  ST    @14,12(,@13)                                        0210 00631000
*   I=1;                            /* INIT INDEX            @Y30LB55*/ 00632000
         LA    @06,1                                               0211 00633000
         LR    I,@06                                               0211 00634000
*   J=0;                            /* SET FOUND FLAG TO 0   @Y30LB55*/ 00635000
         SLR   J,J                                                 0212 00636000
*   DO I=1 TO NCPUCNTS WHILE(J=0);  /* LOOP THROUGH CPUFOUND @Y30LB55*/ 00637000
         LR    I,@06                                               0213 00638000
         B     @DE00213                                            0213 00639000
@DL00213 LTR   J,J                                                 0213 00640000
         BNZ   @DC00213                                            0213 00641000
*     IF CPUSERID=CPUFOUND(I) THEN  /* FOUND A MATCH         @Y30LB55*/ 00642000
         L     @06,LOGPTR(,SUMWKPTR)                               0214 00643000
         LR    @15,I                                               0214 00644000
         MH    @15,@CH00180                                        0214 00645000
         ALR   @15,SUMWKPTR                                        0214 00646000
         CLC   CPUSERID(5,@06),CPUFOUND-5(@15)                     0214 00647000
         BNE   @RF00214                                            0214 00648000
*       J=1;                        /* YES, GET OUT OF LOOP  @Y30LB55*/ 00649000
         LA    J,1                                                 0215 00650000
*     ELSE                          /* NOT A MATCH           @Y30LB55*/ 00651000
*       IF CPUFOUND(I)=CPUZERO THEN /* FOUND PLACE TO PUT NEW CPUID     00652000
*                                                            @Y30LB55*/ 00653000
         B     @RC00214                                            0216 00654000
@RF00214 LR    @06,I                                               0216 00655000
         MH    @06,@CH00180                                        0216 00656000
         ST    @06,@TF00001                                        0216 00657000
         ALR   @06,SUMWKPTR                                        0216 00658000
         CLC   CPUFOUND-5(5,@06),CPUZERO                           0216 00659000
         BNE   @RF00216                                            0216 00660000
*         DO;                       /* YES                   @Y30LB55*/ 00661000
*           CPUFOUND(I)=CPUSERID;   /* ADD CPUID TO TABLE    @Y30LB55*/ 00662000
         LR    @06,SUMWKPTR                                        0218 00663000
         AL    @06,@TF00001                                        0218 00664000
         L     @01,LOGPTR(,SUMWKPTR)                               0218 00665000
         MVC   CPUFOUND-5(5,@06),CPUSERID(@01)                     0218 00666000
*           NCPUUSED=I;             /* UPDATE COUNT          @Y30LB55*/ 00667000
         STH   I,NCPUUSED(,SUMWKPTR)                               0219 00668000
*           J=1;                    /* GET OUT OF LOOP       @Y30LB55*/ 00669000
         LA    J,1                                                 0220 00670000
*         END;                      /* END UPDATE TABLE CODE @Y30LB55*/ 00671000
*       ELSE                                                       0222 00672000
*         ;                         /* NOT ZERO              @Y30LB55*/ 00673000
@RF00216 DS    0H                                                  0223 00674000
*   END;                            /* END LOOP THROUGH CPUFOUND   0223 00675000
*                                                            @Y30LB55*/ 00676000
@RC00214 AH    I,@CH00083                                          0223 00677000
@DE00213 SLR   @06,@06                                             0223 00678000
         ICM   @06,3,NCPUCNTS(SUMWKPTR)                            0223 00679000
         CR    I,@06                                               0223 00680000
         BNH   @DL00213                                            0223 00681000
@DC00213 DS    0H                                                  0224 00682000
*   IF J=0 THEN                     /* TABLE OVERFLOW        @Y30LB55*/ 00683000
         LTR   J,J                                                 0224 00684000
         BNZ   @RF00224                                            0224 00685000
*     SUMFLAGS(8)='1'B;             /* SET CPUFOUND OVERFLOW BIT   0225 00686000
*                                                            @Y30LB55*/ 00687000
         OI    SUMFLAGS(SUMWKPTR),B'00000001'                      0225 00688000
*   ELSE                                                           0226 00689000
*     ;                             /* TABLE OK              @Y30LB55*/ 00690000
@RF00224 DS    0H                                                  0227 00691000
*   END SUM0CPU;                    /* END OF SUM0CPU PROC   @Y30LB55   00692000
*                                                            @Y30LB55*/ 00693000
@EL00004 DS    0H                                                  0227 00694000
@EF00004 DS    0H                                                  0227 00695000
@ER00004 L     @14,12(,@13)                                        0227 00696000
         BR    @14                                                 0227 00697000
*                                                                  0228 00698000
*   /*****************************************************************/ 00699000
*   /*                                                               */ 00700000
*   /* BUILDM01 - BUILD SUMMSG01 FOR DETAIL PRINT OF INPUT           */ 00701000
*   /*                                                               */ 00702000
*   /*****************************************************************/ 00703000
*                                                                  0228 00704000
*BUILDM01:                                                         0228 00705000
*   PROC OPTIONS(SAVE(14));         /* BUILD SUMMSG01 CODE   @Y30LB55*/ 00706000
BUILDM01 ST    @14,12(,@13)                                        0228 00707000
*   LINE=SUMMSG01;                  /* MOVE MSG01            @Y30LB55*/ 00708000
         MVI   LINE+116(CVTPTR),C' '                               0229 00709000
         MVC   LINE+117(15,CVTPTR),LINE+116(CVTPTR)                0229 00710000
         MVC   LINE(116,CVTPTR),SUMMSG01                           0229 00711000
*   CVD(NINREC,TEMP8);              /* RECORD NO.            @Y30LB55*/ 00712000
         L     @06,SDA00PTR(,CVTPTR)                               0230 00713000
         L     @06,NINREC(,@06)                                    0230 00714000
         CVD   @06,TEMP8(,SUMWKPTR)                                0230 00715000
*   REC01=EDPAT05;                  /* MOVE EDIT PATTERN     @Y30LB55*/ 00716000
         MVC   REC01(6,CVTPTR),EDPAT05                             0231 00717000
*   ED(REC01,TEMP68);               /* EDIT REC NUMBER       @Y30LB55*/ 00718000
*                                                                  0232 00719000
*                                                                  0232 00720000
         ED    REC01(6,CVTPTR),TEMP68(SUMWKPTR)                    0232 00721000
*   /*****************************************************************/ 00722000
*   /*                                                               */ 00723000
*   /* UNPACK DATE, TIME, SYSTEM ID, RECORD TYPE, AND CPUID          */ 00724000
*   /*                                                               */ 00725000
*   /*****************************************************************/ 00726000
*                                                                  0233 00727000
*                                                                  0233 00728000
*   UNPK(TEMP7,DATE);               /* DATE                  @Y30LB55*/ 00729000
         L     @06,LOGPTR(,SUMWKPTR)                               0233 00730000
         UNPK  TEMP7(7,SUMWKPTR),DATE(4,@06)                       0233 00731000
*   DAY01=TEMP7(5:7);               /* MOVE DAY              @Y30LB55*/ 00732000
         MVC   DAY01(3,CVTPTR),TEMP7+4(SUMWKPTR)                   0234 00733000
*   YEAR01=TEMP7(3:4);              /* MOVE YEAR             @Y30LB55*/ 00734000
         MVC   YEAR01(2,CVTPTR),TEMP7+2(SUMWKPTR)                  0235 00735000
*   TEMP4=TIME;                     /* MOVE TIME             @Y30LB55*/ 00736000
         MVC   TEMP4(4,SUMWKPTR),TIME(@06)                         0236 00737000
*   UNPK(TEMP9,TEMP5);              /* TIME                  @Y30LB55*/ 00738000
         UNPK  TEMP9(9,SUMWKPTR),TEMP5(5,SUMWKPTR)                 0237 00739000
*   HOUR01=TEMP9(1:2);              /* MOVE HOUR             @Y30LB55*/ 00740000
         MVC   HOUR01(2,CVTPTR),TEMP9(SUMWKPTR)                    0238 00741000
*   MIN01=TEMP9(3:4);               /* MOVE MINUTE           @Y30LB55*/ 00742000
         MVC   MIN01(2,CVTPTR),TEMP9+2(SUMWKPTR)                   0239 00743000
*   SEC01=TEMP9(5:6);               /* MOVE SECOND           @Y30LB55*/ 00744000
         MVC   SEC01(2,CVTPTR),TEMP9+4(SUMWKPTR)                   0240 00745000
*   HUN01=TEMP9(7:8);               /* MOVE TENS+HUNS        @Y30LB55*/ 00746000
         MVC   HUN01(2,CVTPTR),TEMP9+6(SUMWKPTR)                   0241 00747000
*   IF SYSREL(1:3)='010'B THEN      /* VS1                   @ZM31022*/ 00748000
         TM    SYSREL(@06),B'01000000'                             0242 00749000
         BNO   @RF00242                                            0242 00750000
         TM    SYSREL(@06),B'10100000'                             0242 00751000
         BNZ   @RF00242                                            0242 00752000
*     SYSTEMID='VS1';               /* YES                   @ZM31022*/ 00753000
         MVC   SYSTEMID(3,CVTPTR),@CC00896                         0243 00754000
*   ELSE                            /* NO                    @ZM31022*/ 00755000
*     IF SYSREL(1:3)='100'B THEN    /* VS2                   @ZM31022*/ 00756000
         B     @RC00242                                            0244 00757000
@RF00242 L     @06,LOGPTR(,SUMWKPTR)                               0244 00758000
         TM    SYSREL(@06),B'10000000'                             0244 00759000
         BNO   @RF00244                                            0244 00760000
         TM    SYSREL(@06),B'01100000'                             0244 00761000
         BNZ   @RF00244                                            0244 00762000
*       SYSTEMID='VS2';             /* YES                   @ZM31022*/ 00763000
         MVC   SYSTEMID(3,CVTPTR),@CC00898                         0245 00764000
*     ELSE                          /* NO                    @ZM31022*/ 00765000
*       IF SYSREL(1:3)='000'B THEN  /* OS                    @ZM31022*/ 00766000
         B     @RC00244                                            0246 00767000
@RF00244 L     @06,LOGPTR(,SUMWKPTR)                               0246 00768000
         TM    SYSREL(@06),B'11100000'                             0246 00769000
         BNZ   @RF00246                                            0246 00770000
*         SYSTEMID=' OS';           /* YES                   @ZM31022*/ 00771000
         MVC   SYSTEMID(3,CVTPTR),@CC00900                         0247 00772000
*       ELSE                        /* NO                    @ZM31022*/ 00773000
*         IF SYSREL(1:3)='001'B THEN /* DOS                  @ZM31022*/ 00774000
         B     @RC00246                                            0248 00775000
@RF00246 L     @06,LOGPTR(,SUMWKPTR)                               0248 00776000
         TM    SYSREL(@06),B'00100000'                             0248 00777000
         BNO   @RF00248                                            0248 00778000
         TM    SYSREL(@06),B'11000000'                             0248 00779000
         BNZ   @RF00248                                            0248 00780000
*           SYSTEMID='DOS';         /* YES                   @ZM31022*/ 00781000
         MVC   SYSTEMID(3,CVTPTR),@CC00902                         0249 00782000
*         ELSE                      /* NO                    @ZM31022*/ 00783000
*           IF SYSREL(1:3)='011'B THEN /* VM/370             @ZM31022*/ 00784000
         B     @RC00248                                            0250 00785000
@RF00248 L     @06,LOGPTR(,SUMWKPTR)                               0250 00786000
         TM    SYSREL(@06),B'01100000'                             0250 00787000
         BNO   @RF00250                                            0250 00788000
         TM    SYSREL(@06),B'10000000'                             0250 00789000
         BNZ   @RF00250                                            0250 00790000
*             SYSTEMID=' VM';       /* YES                   @ZM31022*/ 00791000
         MVC   SYSTEMID(3,CVTPTR),@CC00904                         0251 00792000
*           ELSE;                   /* UNKNOWN SYSTEM        @ZM31022*/ 00793000
@RF00250 DS    0H                                                  0253 00794000
*   IF IRECTYPE='O' THEN                                           0253 00795000
@RC00248 DS    0H                                                  0253 00796000
@RC00246 DS    0H                                                  0253 00797000
@RC00244 DS    0H                                                  0253 00798000
@RC00242 L     @06,SDA00PTR(,CVTPTR)                               0253 00799000
         CLI   IRECTYPE(@06),C'O'                                  0253 00800000
         BNE   @RF00253                                            0253 00801000
*     TYPE01='OBR';                 /* OBR                   @Y30LB55*/ 00802000
         MVC   TYPE01(3,CVTPTR),@CC00906                           0254 00803000
*   ELSE                                                           0255 00804000
*     TYPE01='MDR';                 /* MDR                   @Y30LB55*/ 00805000
         B     @RC00253                                            0255 00806000
@RF00253 MVC   TYPE01(3,CVTPTR),@CC00907                           0255 00807000
*   TEMP3=CPUSER;                   /* MOVE CPUSER           @Y30LB55*/ 00808000
@RC00253 L     @06,LOGPTR(,SUMWKPTR)                               0256 00809000
         MVC   TEMP3(3,SUMWKPTR),CPUSER(@06)                       0256 00810000
*   UNPK(TEMP9,TEMP5);              /* UNPACK                @Y30LB55*/ 00811000
         UNPK  TEMP9(9,SUMWKPTR),TEMP5(5,SUMWKPTR)                 0257 00812000
*   TEMP16=TEMP6;                   /* SAVE CPUSER           @Y30LB55*/ 00813000
         MVC   TEMP16(6,SUMWKPTR),TEMP6(SUMWKPTR)                  0258 00814000
*   TEMP2=CPUID;                    /* MOVE CPUID            @Y30LB55*/ 00815000
         MVC   TEMP2(2,SUMWKPTR),CPUID(@06)                        0259 00816000
*   UNPK(TEMP5,TEMP3);              /* UNPACK                @Y30LB55*/ 00817000
         UNPK  TEMP5(5,SUMWKPTR),TEMP3(3,SUMWKPTR)                 0260 00818000
*   TEMP710=TEMP4;                  /* SAVE CPUID            @Y30LB55*/ 00819000
*                                                                  0261 00820000
*                                                                  0261 00821000
         MVC   TEMP710(4,SUMWKPTR),TEMP4(SUMWKPTR)                 0261 00822000
*   /*****************************************************************/ 00823000
*   /*                                                               */ 00824000
*   /* RECORDS FROM THE MSC                                          */ 00825000
*   /*                                                               */ 00826000
*   /*****************************************************************/ 00827000
*                                                                  0262 00828000
*                                                                  0262 00829000
*   IF INDEVTYP='S' THEN            /* SUBSYSTEM RECORD      @Y30LB55*/ 00830000
         L     @06,SDA00PTR(,CVTPTR)                               0262 00831000
         CLI   INDEVTYP(@06),C'S'                                  0262 00832000
         BNE   @RF00262                                            0262 00833000
*     DO;                           /* YES , GET SSID        @Y30LB55*/ 00834000
*       TEMP2=SUBSYSID;             /* MOVE SSID             @Y30LB55*/ 00835000
         L     @06,SENSEPTR(,SUMWKPTR)                             0264 00836000
         MVC   TEMP2(2,SUMWKPTR),SUBSYSID(@06)                     0264 00837000
*       UNPK(TEMP5,TEMP3);          /* UNPACK                @Y30LB55*/ 00838000
         UNPK  TEMP5(5,SUMWKPTR),TEMP3(3,SUMWKPTR)                 0265 00839000
*       TEMP1113=TEMP5(2:4);        /* SAVE SSID             @Y30LB55*/ 00840000
         MVC   TEMP1113(3,SUMWKPTR),TEMP5+1(SUMWKPTR)              0266 00841000
*       IF FORMATCK(1)='0'B&FORMATCK(4)='0'B THEN/* NOT 0,3  @Y30LB55*/ 00842000
         TM    FORMATCK(SUMWKPTR),B'10010000'                      0267 00843000
         BNZ   @RF00267                                            0267 00844000
*         TEMP2=MSCFSC;             /* MOVE FSC              @Y30LB55*/ 00845000
         MVC   TEMP2(2,SUMWKPTR),MSCFSC(@06)                       0268 00846000
*       ELSE                        /* NO FSC TO MOVE        @Y30LB55*/ 00847000
*         TEMP2=''B;                /* ZERO FSC FIELD        @Y30LB55*/ 00848000
         B     @RC00267                                            0269 00849000
@RF00267 XC    TEMP2(2,SUMWKPTR),TEMP2(SUMWKPTR)                   0269 00850000
*     END;                          /* END SUBSYSTEM RECORDS @Y30LB55*/ 00851000
*   ELSE                            /* DASD RECORD           @Y30LB55*/ 00852000
*                                                                  0271 00853000
*                                                                  0271 00854000
*   /*****************************************************************/ 00855000
*   /*                                                               */ 00856000
*   /* 3330 RECORDS FROM THE SA TO THE HOST DIRECTLY                 */ 00857000
*   /*                                                               */ 00858000
*   /*****************************************************************/ 00859000
*                                                                  0271 00860000
*                                                                  0271 00861000
*     DO;                           /* 3330 RECORDS FROM SA  @ZM02889*/ 00862000
         B     @RC00262                                            0271 00863000
@RF00262 DS    0H                                                  0272 00864000
*       TEMP2=MSCFSC;               /* MOVE BYTE 26,27       @ZM02889*/ 00865000
         L     @06,SENSEPTR(,SUMWKPTR)                             0272 00866000
         MVC   TEMP2(2,SUMWKPTR),MSCFSC(@06)                       0272 00867000
*       TEMP1=''B;                  /* ZERO BYTE 26          @ZM02889*/ 00868000
         MVI   TEMP1(SUMWKPTR),X'00'                               0273 00869000
*       UNPK(TEMP5,TEMP3);          /* UNPACK SSID           @ZM02889*/ 00870000
         UNPK  TEMP5(5,SUMWKPTR),TEMP3(3,SUMWKPTR)                 0274 00871000
*       TEMP1113=TEMP5(2:4);        /* MOVE 3 CHAR SSID      @ZM02889*/ 00872000
         MVC   TEMP1113(3,SUMWKPTR),TEMP5+1(SUMWKPTR)              0275 00873000
*       TEMP2=DASDFSC;              /* MOVE 3330 FSC         @Y30LB55*/ 00874000
         MVC   TEMP2(2,SUMWKPTR),DASDFSC(@06)                      0276 00875000
*     END;                          /* END GET 3330 SSID     @ZMO2889*/ 00876000
*   UNPK(TEMP5,TEMP3);              /* UNPACK                @Y30LB55*/ 00877000
@RC00262 UNPK  TEMP5(5,SUMWKPTR),TEMP3(3,SUMWKPTR)                 0278 00878000
*   TEMP1417=TEMP4;                 /* SAVE FSC              @Y30LB55*/ 00879000
         MVC   TEMP1417(4,SUMWKPTR),TEMP4(SUMWKPTR)                0279 00880000
*   TEMP2=INRECCUA;                 /* MOVE CUA              @Y30LB55*/ 00881000
         L     @06,SDA00PTR(,CVTPTR)                               0280 00882000
         MVC   TEMP2(2,SUMWKPTR),INRECCUA(@06)                     0280 00883000
*   UNPK(TEMP5,TEMP3);              /* UNPACK                @Y30LB55*/ 00884000
         UNPK  TEMP5(5,SUMWKPTR),TEMP3(3,SUMWKPTR)                 0281 00885000
*   TEMP1820=TEMP5(2:4);            /* MOVE CUA UNPACKED     @Y30LB55*/ 00886000
         MVC   TEMP1820(3,SUMWKPTR),TEMP5+1(SUMWKPTR)              0282 00887000
*   DO I=1 TO 20;                   /* FIX HEX DIGITS        @Y30LB55*/ 00888000
         LA    I,1                                                 0283 00889000
@DL00283 DS    0H                                                  0284 00890000
*     IF TEMP20(I)>'9' THEN                                        0284 00891000
         LR    @06,SUMWKPTR                                        0284 00892000
         ALR   @06,I                                               0284 00893000
         CLI   TEMP20-1(@06),C'9'                                  0284 00894000
         BNH   @RF00284                                            0284 00895000
*       TEMP20(I)=TEMP20(I)-'39'X;  /* FIX A-F               @Y30LB55*/ 00896000
         SLR   @06,@06                                             0285 00897000
         IC    @06,TEMP20-1(I,SUMWKPTR)                            0285 00898000
         SH    @06,@CH00909                                        0285 00899000
         STC   @06,TEMP20-1(I,SUMWKPTR)                            0285 00900000
*     ELSE                                                         0286 00901000
*       ;                           /* OK 0-9                @Y30LB55*/ 00902000
@RF00284 DS    0H                                                  0287 00903000
*   END;                            /* END HEX DIGIT FIX     @Y30LB55*/ 00904000
         AH    I,@CH00083                                          0287 00905000
         CH    I,@CH00345                                          0287 00906000
         BNH   @DL00283                                            0287 00907000
*   CPUSRM01=TEMP16;                /* MOVE CONVERTED CPUSER @Y30LB55*/ 00908000
         MVC   CPUSRM01(6,CVTPTR),TEMP16(SUMWKPTR)                 0288 00909000
*   CPUIDM01=TEMP710;               /* MOVE CONVERTED CPUID  @Y30LB55*/ 00910000
         MVC   CPUIDM01(4,CVTPTR),TEMP710(SUMWKPTR)                0289 00911000
*   DEVRUA01=TEMP1820;              /* MOVE CONVERTED RUA    @ZA11668*/ 00912000
         MVC   DEVRUA01(3,CVTPTR),TEMP1820(SUMWKPTR)               0290 00913000
*   IF SDAFLAG0(8)='1'B THEN        /* WAS FSC GENERATED BY ISDAGEN0    00914000
*                                                            @Y30LB55*/ 00915000
         L     @06,SDA00PTR(,CVTPTR)                               0291 00916000
         TM    SDAFLAG0(@06),B'00000001'                           0291 00917000
         BNO   @RF00291                                            0291 00918000
*     FSCM21=SUMMSG11;              /* YES, MOVE MESSAGE     @Y30LB55*/ 00919000
         MVC   FSCM21(14,CVTPTR),SUMMSG11                          0292 00920000
*   ELSE                                                           0293 00921000
*     ;                             /* NO                    @Y30LB55*/ 00922000
@RF00291 DS    0H                                                  0294 00923000
*   IF RETCODE=8 THEN               /* WAS REC TYPE KNOWN    @Y30LB55*/ 00924000
         CH    RETCODE,@CH00071                                    0294 00925000
         BNE   @RF00294                                            0294 00926000
*     FSCM21=SUMMSG21;              /* NO, MOVE UNKNOWN MSG  @Y30LB55*/ 00927000
         MVC   FSCM21(14,CVTPTR),SUMMSG21                          0295 00928000
*   ELSE;                           /* YES, OK               @Y30LB55*/ 00929000
*                                                                  0296 00930000
*                                                                  0296 00931000
@RF00294 DS    0H                                                  0297 00932000
*   /*****************************************************************/ 00933000
*   /*                                                               */ 00934000
*   /* MSC RECORDS - MOVE FORMAT,FSC, AND SSID                       */ 00935000
*   /*                                                               */ 00936000
*   /*****************************************************************/ 00937000
*                                                                  0297 00938000
*                                                                  0297 00939000
*   IF INDEVTYP='S' THEN                                           0297 00940000
         L     @06,SDA00PTR(,CVTPTR)                               0297 00941000
         CLI   INDEVTYP(@06),C'S'                                  0297 00942000
         BNE   @RF00297                                            0297 00943000
*     DO;                           /* MSC RECORD            @Y30LB55*/ 00944000
*       DEVT01=' MSC';              /* MSC                   @Y30LB55*/ 00945000
         MVC   DEVT01(4,CVTPTR),@CC00910                           0299 00946000
*       DEVVUA11='';                /* BLANK VUA FIELD       @ZA11668*/ 00947000
         MVI   DEVVUA11(CVTPTR),C' '                               0300 00948000
         MVC   DEVVUA11+1(7,CVTPTR),DEVVUA11(CVTPTR)               0300 00949000
*       FMTIDSV='FORMAT ';          /* FORMAT                @Y30LB55*/ 00950000
         MVC   FMTIDSV(7,SUMWKPTR),@CC00911                        0301 00951000
*       IF FORMATCK(2:4)='000'B THEN/* FORMAT 0,4, OR 5      @Y30LB55*/ 00952000
         TM    FORMATCK(SUMWKPTR),B'01110000'                      0302 00953000
         BNZ   @RF00302                                            0302 00954000
*         I=SUBFMTMG;               /* LOAD SUBFMT+MSG CODE  @Y30LB55*/ 00955000
         L     @06,SENSEPTR(,SUMWKPTR)                             0303 00956000
         SLR   I,I                                                 0303 00957000
         IC    I,SUBFMTMG(,@06)                                    0303 00958000
*       ELSE                        /* FORMAT 1,2, AND 3 HAVE NO   0304 00959000
*                                      SUBFMT                @Y30LB55*/ 00960000
*         I=0;                      /* SET SUBFMT AND MSG CODE TO 0     00961000
*                                                            @Y30LB55*/ 00962000
         B     @RC00302                                            0304 00963000
@RF00302 SLR   I,I                                                 0304 00964000
*       SSIDM01=TEMP1113;           /* MOVE CONVERTED SSID   @YD00145*/ 00965000
@RC00302 MVC   SSIDM01(3,CVTPTR),TEMP1113(SUMWKPTR)                0305 00966000
*       IF FORMATCK(1)='1'B|FORMATCK(4)='1'B THEN/* 0 OR 3   @Y30LB55*/ 00967000
         TM    FORMATCK(SUMWKPTR),B'10010000'                      0306 00968000
         BZ    @RF00306                                            0306 00969000
*         FSCM11='';                /* NO FSC IN RECORD      @Y30LB55*/ 00970000
         MVI   FSCM11(CVTPTR),C' '                                 0307 00971000
         MVC   FSCM11+1(8,CVTPTR),FSCM11(CVTPTR)                   0307 00972000
*       ELSE                        /* FORMAT 1,2,4, OR 5    @Y30LB55*/ 00973000
*         IF FORMATCK(5)='1'B&SUBFMTMG>='D0'X&SUBFMTMG<'E0'X THEN  0308 00974000
         B     @RC00306                                            0308 00975000
@RF00306 TM    FORMATCK(SUMWKPTR),B'00001000'                      0308 00976000
         BNO   @RF00308                                            0308 00977000
         L     @06,SENSEPTR(,SUMWKPTR)                             0308 00978000
         CLI   SUBFMTMG(@06),X'D0'                                 0308 00979000
         BL    @RF00308                                            0308 00980000
         CLI   SUBFMTMG(@06),X'E0'                                 0308 00981000
         BNL   @RF00308                                            0308 00982000
*                                   /* SA FORMAT D           @YD00145*/ 00983000
*           FSCM11='';              /* YES, NO FSC           @YD00145*/ 00984000
         MVI   FSCM11(CVTPTR),C' '                                 0309 00985000
         MVC   FSCM11+1(8,CVTPTR),FSCM11(CVTPTR)                   0309 00986000
*         ELSE                      /* NOT 4D                @YD00145*/ 00987000
*           IF FORMATCK(6)='1'B&SUBFMTMG>='50'X THEN /* 55 OR 56   0310 00988000
*                                                            @YD00145*/ 00989000
         B     @RC00308                                            0310 00990000
@RF00308 TM    FORMATCK(SUMWKPTR),B'00000100'                      0310 00991000
         BNO   @RF00310                                            0310 00992000
         L     @06,SENSEPTR(,SUMWKPTR)                             0310 00993000
         CLI   SUBFMTMG(@06),X'50'                                 0310 00994000
         BL    @RF00310                                            0310 00995000
*             FSCM11='';            /* YES, NO FSC           @YD00145*/ 00996000
         MVI   FSCM11(CVTPTR),C' '                                 0311 00997000
         MVC   FSCM11+1(8,CVTPTR),FSCM11(CVTPTR)                   0311 00998000
*           ELSE                    /* NOT FORMAT 55 OR 56   @YD00145*/ 00999000
*             FSCM01=TEMP1417;      /* MOVE CONVERTED FSC    @Y30LB55*/ 01000000
         B     @RC00310                                            0312 01001000
@RF00310 MVC   FSCM01(4,CVTPTR),TEMP1417(SUMWKPTR)                 0312 01002000
*     END;                          /* END MSC RECORDS       @Y30LB55*/ 01003000
*   ELSE                                                           0314 01004000
*                                                                  0314 01005000
*                                                                  0314 01006000
*   /*****************************************************************/ 01007000
*   /*                                                               */ 01008000
*   /* 3330 RECORDS - MOVE S OR R, SSID FOR S, FSC, AND FORMAT       */ 01009000
*   /*                                                               */ 01010000
*   /*****************************************************************/ 01011000
*                                                                  0314 01012000
*                                                                  0314 01013000
*     DO;                           /* DASD RECORDS          @Y30LB55*/ 01014000
         B     @RC00297                                            0314 01015000
@RF00297 DS    0H                                                  0315 01016000
*       DEVT01='3330';              /* DASD                  @Y30LB55*/ 01017000
         MVC   DEVT01(4,CVTPTR),@CC00915                           0315 01018000
*       IF INDEVTYP='V' THEN                                       0316 01019000
         L     @06,SDA00PTR(,CVTPTR)                               0316 01020000
         CLI   INDEVTYP(@06),C'V'                                  0316 01021000
         BNE   @RF00316                                            0316 01022000
*         DO;                       /* HAVE RUA OR VUA       @ZA12870*/ 01023000
*           FMTIDSV='STAGING';      /* STAGING DASD          @ZM30730*/ 01024000
         MVC   FMTIDSV(7,SUMWKPTR),@CC00917                        0318 01025000
*           IF IRECTYPE='M' THEN    /* MDR RECORD            @ZA11668*/ 01026000
         CLI   IRECTYPE(@06),C'M'                                  0319 01027000
         BNE   @RF00319                                            0319 01028000
*             TEMP2=MDRCUA;         /* YES, MOVE VUA         @ZA11668*/ 01029000
         L     @06,LOGPTR(,SUMWKPTR)                               0320 01030000
         MVC   TEMP2(2,SUMWKPTR),MDRCUA(@06)                       0320 01031000
*           ELSE                    /* NO, OBR RECORD        @ZA11668*/ 01032000
*             TEMP2=SECUA(2:3);     /* MOVE VUA FROM HEADER  @ZA14729*/ 01033000
         B     @RC00319                                            0321 01034000
@RF00319 L     @06,LOGPTR(,SUMWKPTR)                               0321 01035000
         MVC   TEMP2(2,SUMWKPTR),SECUA+1(@06)                      0321 01036000
*           UNPK(TEMP5,TEMP3);      /* UNPACK VUA            @ZA11668*/ 01037000
@RC00319 UNPK  TEMP5(5,SUMWKPTR),TEMP3(3,SUMWKPTR)                 0322 01038000
*           DEVVUA01=TEMP5(2:4);    /* MOVE VUA              @ZA11668*/ 01039000
         MVC   DEVVUA01(3,CVTPTR),TEMP5+1(SUMWKPTR)                0323 01040000
*           DO J=1 TO 3;            /* FIX EBCDIC A-F        @ZA11668*/ 01041000
         LA    J,1                                                 0324 01042000
@DL00324 DS    0H                                                  0325 01043000
*             IF DEVVUA01(J)>'9' THEN/* A-F                  @ZA11668*/ 01044000
         LR    @06,CVTPTR                                          0325 01045000
         ALR   @06,J                                               0325 01046000
         CLI   DEVVUA01-1(@06),C'9'                                0325 01047000
         BNH   @RF00325                                            0325 01048000
*               DEVVUA01(J)=DEVVUA01(J)-'39'X;/* YES, FIX IT @ZA11668*/ 01049000
         SLR   @06,@06                                             0326 01050000
         IC    @06,DEVVUA01-1(J,CVTPTR)                            0326 01051000
         SH    @06,@CH00909                                        0326 01052000
         STC   @06,DEVVUA01-1(J,CVTPTR)                            0326 01053000
*             ELSE;                 /* 0-9 OK                @ZA11668*/ 01054000
@RF00325 DS    0H                                                  0328 01055000
*           END;                    /* END FIX VUA           @ZA11668*/ 01056000
         AH    J,@CH00083                                          0328 01057000
         CH    J,@CH00087                                          0328 01058000
         BNH   @DL00324                                            0328 01059000
*           IF RUADASD='FF'X THEN   /* INVALID RUA           @ZA12870*/ 01060000
         L     @06,SENSEPTR(,SUMWKPTR)                             0329 01061000
         CLI   RUADASD(@06),X'FF'                                  0329 01062000
         BNE   @RF00329                                            0329 01063000
*             DEVRUA01='???';       /* YES, DO NOT HAVE RUA  @ZA11668*/ 01064000
         MVC   DEVRUA01(3,CVTPTR),@CC00920                         0330 01065000
*           ELSE;                   /* RUA OK                @ZA12870*/ 01066000
@RF00329 DS    0H                                                  0332 01067000
*         END;                      /* END VIRTUAL DASD      @ZA12870*/ 01068000
*       ELSE                                                       0333 01069000
*         DO;                       /* REAL DASD             @ZA11668*/ 01070000
         B     @RC00316                                            0333 01071000
@RF00316 DS    0H                                                  0334 01072000
*           DEVVUA11='';            /* BLANK VUA FIELD       @ZA11668*/ 01073000
         MVI   DEVVUA11(CVTPTR),C' '                               0334 01074000
         MVC   DEVVUA11+1(7,CVTPTR),DEVVUA11(CVTPTR)               0334 01075000
*           FMTIDSV='  REAL ';      /* REAL DASD             @Y30LB55*/ 01076000
         MVC   FMTIDSV(7,SUMWKPTR),@CC00921                        0335 01077000
*         END;                      /* END REAL DASD         @ZA11668*/ 01078000
*       I=DASDFMTN;                 /* LOAD SUBFMT+MSG CODE  @Y30LB55*/ 01079000
@RC00316 L     @06,SENSEPTR(,SUMWKPTR)                             0337 01080000
         SLR   I,I                                                 0337 01081000
         IC    I,DASDFMTN(,@06)                                    0337 01082000
*       IF DASDFMTN>='50'X THEN     /* FORMAT 5 OR 6         @YD00145*/ 01083000
         CLI   DASDFMTN(@06),X'50'                                 0338 01084000
         BL    @RF00338                                            0338 01085000
*         FSCM11='';                /* YES, NO FSC           @YD00145*/ 01086000
         MVI   FSCM11(CVTPTR),C' '                                 0339 01087000
         MVC   FSCM11+1(8,CVTPTR),FSCM11(CVTPTR)                   0339 01088000
*       ELSE                        /* FORMAT 0-4            @YD00145*/ 01089000
*         FSCM01=TEMP1417;          /* MOVE CONVERTED FSC    @Y30LB55*/ 01090000
         B     @RC00338                                            0340 01091000
@RF00338 MVC   FSCM01(4,CVTPTR),TEMP1417(SUMWKPTR)                 0340 01092000
*       IF INDEVTYP='V' THEN        /* STAGING 3330          @ZM02889*/ 01093000
@RC00338 L     @06,SDA00PTR(,CVTPTR)                               0341 01094000
         CLI   INDEVTYP(@06),C'V'                                  0341 01095000
         BNE   @RF00341                                            0341 01096000
*         SSIDM01=TEMP1113;         /* YES, SSID FROM BYTE 27@ZM02889*/ 01097000
         MVC   SSIDM01(3,CVTPTR),TEMP1113(SUMWKPTR)                0342 01098000
*       ELSE                        /* NO, NO SSID FOR REAL  @ZM02889*/ 01099000
*         SSIDM11='';               /* BLANK SSID FIELD      @Y30LB55*/ 01100000
         B     @RC00341                                            0343 01101000
@RF00341 MVI   SSIDM11(CVTPTR),C' '                                0343 01102000
         MVC   SSIDM11+1(8,CVTPTR),SSIDM11(CVTPTR)                 0343 01103000
*     END;                          /* END DASD RECORD       @Y30LB55*/ 01104000
@RC00341 DS    0H                                                  0345 01105000
*   TEMP78(1)=I;                    /* GET SUBFORMAT+MSG CODE@Y30LB55*/ 01106000
@RC00297 STC   I,TEMP78(,SUMWKPTR)                                 0345 01107000
*   UNPK(TEMP3,TEMP78);             /* UNPACK                @Y30LB55*/ 01108000
         UNPK  TEMP3(3,SUMWKPTR),TEMP78(2,SUMWKPTR)                0346 01109000
*   DO J=1 TO 2;                    /* FIX HEX               @Y30LB55*/ 01110000
         LA    J,1                                                 0347 01111000
@DL00347 DS    0H                                                  0348 01112000
*     IF TEMP2(J)>'9' THEN          /* IS IT A-F             @Y30LB55*/ 01113000
         LR    @06,SUMWKPTR                                        0348 01114000
         ALR   @06,J                                               0348 01115000
         CLI   TEMP2-1(@06),C'9'                                   0348 01116000
         BNH   @RF00348                                            0348 01117000
*       TEMP2(J)=TEMP2(J)-'39'X;    /* YES, FIX IT           @Y30LB55*/ 01118000
         SLR   @06,@06                                             0349 01119000
         IC    @06,TEMP2-1(J,SUMWKPTR)                             0349 01120000
         SH    @06,@CH00909                                        0349 01121000
         STC   @06,TEMP2-1(J,SUMWKPTR)                             0349 01122000
*     ELSE                                                         0350 01123000
*       ;                           /* NO, OK                @Y30LB55*/ 01124000
@RF00348 DS    0H                                                  0351 01125000
*   END;                            /* END HEX FIX           @Y30LB55*/ 01126000
         AH    J,@CH00083                                          0351 01127000
         CH    J,@CH00102                                          0351 01128000
         BNH   @DL00347                                            0351 01129000
*   SUBFIDSV=TEMP2(1);              /* SAVE SA FORMAT        @Y30LB55*/ 01130000
         MVC   SUBFIDSV(1,SUMWKPTR),TEMP2(SUMWKPTR)                0352 01131000
*   MSGCODSV=TEMP2(2);              /* SAVE MESSAGE CODE     @Y30LB55*/ 01132000
         MVC   MSGCODSV(1,SUMWKPTR),TEMP2+1(SUMWKPTR)              0353 01133000
*   END BUILDM01;                   /*                       @Y30LB55*/ 01134000
@EL00005 DS    0H                                                  0354 01135000
@EF00005 DS    0H                                                  0354 01136000
@ER00005 L     @14,12(,@13)                                        0354 01137000
         BR    @14                                                 0354 01138000
*                                                                  0355 01139000
*   /*****************************************************************/ 01140000
*   /*                                                               */ 01141000
*   /* SUMFMT0 - MSC FORMAT 0 CODE                                   */ 01142000
*   /*                                                               */ 01143000
*   /*****************************************************************/ 01144000
*                                                                  0355 01145000
*SUMFMT0:                                                          0355 01146000
*   PROC OPTIONS(SAVE(14));         /* ACCUMULATE MSC FMT 0  @Y30LB55*/ 01147000
SUMFMT0  ST    @14,12(,@13)                                        0355 01148000
*   FORMATNC='0';                   /* SET FORMAT NUMBER     @Y30LB55*/ 01149000
         MVI   FORMATNC(SUMWKPTR),C'0'                             0356 01150000
*   CNTF0=CNTF0+1;                  /* ADD 1 TO FMT0 COUNT   @Y30LB55*/ 01151000
         LA    @06,1                                               0357 01152000
         AL    @06,CNTF0(,SUMWKPTR)                                0357 01153000
         ST    @06,CNTF0(,SUMWKPTR)                                0357 01154000
*   SUBFMASK=SUBFMTMG;              /* SAVE MESSAGE CODE     @ZM02889*/ 01155000
         L     @06,SENSEPTR(,SUMWKPTR)                             0358 01156000
         MVC   SUBFMASK(1,SUMWKPTR),SUBFMTMG(@06)                  0358 01157000
*   IF SUBFMASK='05'X THEN          /* MSG CODE 05           @Y30LB55*/ 01158000
         CLI   SUBFMASK(SUMWKPTR),X'05'                            0359 01159000
         BNE   @RF00359                                            0359 01160000
*     FLAGMASK(8)='1'B;             /* YES, SET BUFFERED LOG BIT   0360 01161000
*                                                            @Y30LB55*/ 01162000
         OI    FLAGMASK(SUMWKPTR),B'00000001'                      0360 01163000
*   ELSE                                                           0361 01164000
*     IF SUBFMASK='00'X&SSIDFLAG(2)='1'B THEN /* SUU FMT 0   @ZM30999*/ 01165000
         B     @RC00359                                            0361 01166000
@RF00359 CLI   SUBFMASK(SUMWKPTR),X'00'                            0361 01167000
         BNE   @RF00361                                            0361 01168000
         L     @06,SENSEPTR(,SUMWKPTR)                             0361 01169000
         TM    SSIDFLAG(@06),B'01000000'                           0361 01170000
         BNO   @RF00361                                            0361 01171000
*       FLAGMASK(5)='1'B;           /* SET SUU BIT           @ZM30999*/ 01172000
         OI    FLAGMASK(SUMWKPTR),B'00001000'                      0362 01173000
*     ELSE                                                         0363 01174000
*       IF SUBFMASK='07'X&SUBSENSE(9)^='00'X THEN /* MEDIA   @ZM30999*/ 01175000
         B     @RC00361                                            0363 01176000
@RF00361 CLI   SUBFMASK(SUMWKPTR),X'07'                            0363 01177000
         BNE   @RF00363                                            0363 01178000
         L     @06,SENSEPTR(,SUMWKPTR)                             0363 01179000
         CLI   SUBSENSE+8(@06),X'00'                               0363 01180000
         BE    @RF00363                                            0363 01181000
*         FLAGMASK(5)='1'B;         /* SET MEDIA FAIL BIT    @ZM30999*/ 01182000
         OI    FLAGMASK(SUMWKPTR),B'00001000'                      0364 01183000
*       ELSE;                       /* NOT 00, 07, OR 05     @ZM30999*/ 01184000
@RF00363 DS    0H                                                  0366 01185000
*   IF SUBFMASK='06'X&RCODEPTR^=0 THEN/* HAVE MSC REASON CODE      0366 01186000
*                                                            @ZM31074*/ 01187000
@RC00361 DS    0H                                                  0366 01188000
@RC00359 CLI   SUBFMASK(SUMWKPTR),X'06'                            0366 01189000
         BNE   @RF00366                                            0366 01190000
         L     @06,RCODEPTR(,SUMWKPTR)                             0366 01191000
         LTR   @06,@06                                             0366 01192000
         BZ    @RF00366                                            0366 01193000
*     DO;                           /* YES, ADD 1 TO COUNT   @ZM31074*/ 01194000
*       RCODECNT=RCODECNT+1;        /* ADD 1 TO TOTAL COUNT  @ZM31074*/ 01195000
         LA    @05,1                                               0368 01196000
         L     @15,RCODECNT(,SUMWKPTR)                             0368 01197000
         ALR   @15,@05                                             0368 01198000
         ST    @15,RCODECNT(,SUMWKPTR)                             0368 01199000
*       I=ISDAMSCS(13);             /* GET MSC BYTE 12       @ZM31074*/ 01200000
         L     @01,SENSEPTR(,SUMWKPTR)                             0369 01201000
         SLR   I,I                                                 0369 01202000
         IC    I,ISDAMSCS+12(,@01)                                 0369 01203000
*       I=I+1;                      /* ADD 1 FOR CODE 00     @ZM31074*/ 01204000
         ALR   I,@05                                               0370 01205000
*       RCODES(I)=RCODES(I)+1;      /* ADD 1 TO COUNT        @ZM31074*/ 01206000
         LR    @15,I                                               0371 01207000
         ALR   @15,@15                                             0371 01208000
         ST    @15,@TF00001                                        0371 01209000
         ALR   @15,@06                                             0371 01210000
         BCTR  @15,0                                               0371 01211000
         BCTR  @15,0                                               0371 01212000
         SLR   @14,@14                                             0371 01213000
         ICM   @14,3,RCODES(@15)                                   0371 01214000
         ALR   @05,@14                                             0371 01215000
         L     @01,@TF00001                                        0371 01216000
         BCTR  @06,0                                               0371 01217000
         BCTR  @06,0                                               0371 01218000
         STH   @05,RCODES(@01,@06)                                 0371 01219000
*     END;                          /* END RCODES UPDATE     @ZM31074*/ 01220000
*   ELSE;                           /* NOT REASON CODE REC   @ZM31074*/ 01221000
@RF00366 DS    0H                                                  0374 01222000
*   END SUMFMT0;                    /* RETURN TO MAIN LINE CODE    0374 01223000
*                                                            @Y30LB55*/ 01224000
@EL00006 DS    0H                                                  0374 01225000
@EF00006 DS    0H                                                  0374 01226000
@ER00006 L     @14,12(,@13)                                        0374 01227000
         BR    @14                                                 0374 01228000
*                                                                  0375 01229000
*   /*****************************************************************/ 01230000
*   /*                                                               */ 01231000
*   /* SUMFMT1 - MSC FORMAT 1 CODE                                   */ 01232000
*   /*                                                               */ 01233000
*   /*****************************************************************/ 01234000
*                                                                  0375 01235000
*SUMFMT1:                                                          0375 01236000
*   PROC OPTIONS(SAVE(14));         /* ACCUMULATE MSC FMT 1  @Y30LB55*/ 01237000
SUMFMT1  ST    @14,12(,@13)                                        0375 01238000
*   FORMATNC='1';                   /* SET FORMAT NUMBER     @Y30LB55*/ 01239000
         MVI   FORMATNC(SUMWKPTR),C'1'                             0376 01240000
*   CNTF1=CNTF1+1;                  /* ADD 1 TO FMT1 COUNT   @Y30LB55*/ 01241000
         LA    @06,1                                               0377 01242000
         AL    @06,CNTF1(,SUMWKPTR)                                0377 01243000
         ST    @06,CNTF1(,SUMWKPTR)                                0377 01244000
*   END SUMFMT1;                    /* RETURN TO MAIN LINE CODE    0378 01245000
*                                                            @Y30LB55*/ 01246000
*                                                                  0378 01247000
@EL00007 DS    0H                                                  0378 01248000
@EF00007 DS    0H                                                  0378 01249000
@ER00007 L     @14,12(,@13)                                        0378 01250000
         BR    @14                                                 0378 01251000
*   /*****************************************************************/ 01252000
*   /*                                                               */ 01253000
*   /* SUMFMT2 - MSC FORMAT 2 CODE                                   */ 01254000
*   /*                                                               */ 01255000
*   /*****************************************************************/ 01256000
*                                                                  0379 01257000
*SUMFMT2:                                                          0379 01258000
*   PROC OPTIONS(SAVE(14));         /* ACCUMULATE MSC FMT 2  @Y30LB55*/ 01259000
SUMFMT2  ST    @14,12(,@13)                                        0379 01260000
*   FORMATNC='2';                   /* SET FORMAT NUMBER     @Y30LB55*/ 01261000
         MVI   FORMATNC(SUMWKPTR),C'2'                             0380 01262000
*   CNTF2=CNTF2+1;                  /* ADD 1 TO FMT2 COUNT   @Y30LB55*/ 01263000
         LA    @06,1                                               0381 01264000
         AL    @06,CNTF2(,SUMWKPTR)                                0381 01265000
         ST    @06,CNTF2(,SUMWKPTR)                                0381 01266000
*   END SUMFMT2;                    /* RETURN TO MAIN LINE CODE    0382 01267000
*                                                            @Y30LB55*/ 01268000
@EL00008 DS    0H                                                  0382 01269000
@EF00008 DS    0H                                                  0382 01270000
@ER00008 L     @14,12(,@13)                                        0382 01271000
         BR    @14                                                 0382 01272000
*                                                                  0383 01273000
*   /*****************************************************************/ 01274000
*   /*                                                               */ 01275000
*   /* SUMFMT3 - MSC FORMAT 3 CODE                                   */ 01276000
*   /*                                                               */ 01277000
*   /*****************************************************************/ 01278000
*                                                                  0383 01279000
*SUMFMT3:                                                          0383 01280000
*   PROC OPTIONS(SAVE(14));         /* ACCUMULATE MSC FMT 3  @Y30LB55*/ 01281000
SUMFMT3  ST    @14,12(,@13)                                        0383 01282000
*   FORMATNC='3';                   /* SET FORMAT NUMBER     @Y30LB55*/ 01283000
         MVI   FORMATNC(SUMWKPTR),C'3'                             0384 01284000
*   CNTF3=CNTF3+1;                  /* ADD 1 TO FMT3 COUNT   @Y30LB55*/ 01285000
         LA    @06,1                                               0385 01286000
         AL    @06,CNTF3(,SUMWKPTR)                                0385 01287000
         ST    @06,CNTF3(,SUMWKPTR)                                0385 01288000
*   IF SUBSTAT5(8)='1'B THEN        /* CS BUFFERED LOG       @Y30LB55*/ 01289000
         L     @06,SENSEPTR(,SUMWKPTR)                             0386 01290000
         TM    SUBSTAT5(@06),B'00000001'                           0386 01291000
         BNO   @RF00386                                            0386 01292000
*     DO;                           /* YES                   @Y30LB55*/ 01293000
*       FLAGMASK(8)='1'B;           /* SET BUFFERED LOG BIT  @Y30LB55*/ 01294000
         OI    FLAGMASK(SUMWKPTR),B'00000001'                      0388 01295000
*       IF MOVES12(3)='1'B THEN     /* ERROR OVERFLOW        @YM32171*/ 01296000
         TM    MOVES12(@06),B'00100000'                            0389 01297000
         BNO   @RF00389                                            0389 01298000
*         FLAGMASK(7)='1'B;         /* YES, FORCE LOG MODE   @Y30LB55*/ 01299000
         OI    FLAGMASK(SUMWKPTR),B'00000010'                      0390 01300000
*       ELSE                                                       0391 01301000
*         ;                         /* NO, USAGE OVERFLOW    @Y30LB55*/ 01302000
@RF00389 DS    0H                                                  0392 01303000
*     END;                          /* END BUFFERED LOG CODE @Y30LB55*/ 01304000
*   ELSE                            /* NO                    @Y30LB55*/ 01305000
*     IF SUBSTAT5(2)='1'B THEN      /* RECONFIGURE BIT ON    @Y30LB55*/ 01306000
         B     @RC00386                                            0393 01307000
@RF00386 L     @06,SENSEPTR(,SUMWKPTR)                             0393 01308000
         TM    SUBSTAT5(@06),B'01000000'                           0393 01309000
         BNO   @RF00393                                            0393 01310000
*       FLAGMASK(6)='1'B;           /* YES, SET RECONFIGURE  @Y30LB55*/ 01311000
         OI    FLAGMASK(SUMWKPTR),B'00000100'                      0394 01312000
*     ELSE                          /* NO, CHECK ENVIRONMENTAL DATA     01313000
*                                                            @Y30LB55*/ 01314000
*       IF SUBSTAT4(8)='1'B THEN    /* ENVIRONMENTAL DATA    @Y30LB55*/ 01315000
         B     @RC00393                                            0395 01316000
@RF00393 L     @06,SENSEPTR(,SUMWKPTR)                             0395 01317000
         TM    SUBSTAT4(@06),B'00000001'                           0395 01318000
         BNO   @RF00395                                            0395 01319000
*         FLAGMASK(7)='1'B;         /* YES, SET FORCE LOG MODE     0396 01320000
*                                                            @Y30LB55*/ 01321000
         OI    FLAGMASK(SUMWKPTR),B'00000010'                      0396 01322000
*       ELSE                                                       0397 01323000
*         ;                         /* NO, NORMAL SENSE      @Y30LB55*/ 01324000
@RF00395 DS    0H                                                  0398 01325000
*   END SUMFMT3;                    /* RETURN TO MAIN LINE CODE    0398 01326000
*                                                            @Y30LB55*/ 01327000
@EL00009 DS    0H                                                  0398 01328000
@EF00009 DS    0H                                                  0398 01329000
@ER00009 L     @14,12(,@13)                                        0398 01330000
         BR    @14                                                 0398 01331000
*                                                                  0399 01332000
*   /*****************************************************************/ 01333000
*   /*                                                               */ 01334000
*   /* SUMFMT4 - MSC FORMAT 4 CODE                                   */ 01335000
*   /*                                                               */ 01336000
*   /*****************************************************************/ 01337000
*                                                                  0399 01338000
*SUMFMT4:                                                          0399 01339000
*   PROC OPTIONS(SAVE(14));         /* ACCUMULATE MSC FMT 4  @Y30LB55*/ 01340000
SUMFMT4  ST    @14,12(,@13)                                        0399 01341000
*   FORMATNC='4';                   /* SET FORMAT NUMBER     @Y30LB55*/ 01342000
         MVI   FORMATNC(SUMWKPTR),C'4'                             0400 01343000
*   CNTF4=CNTF4+1;                  /* ADD 1 TO FMT4 COUNT   @Y30LB55*/ 01344000
         LA    @06,1                                               0401 01345000
         AL    @06,CNTF4(,SUMWKPTR)                                0401 01346000
         ST    @06,CNTF4(,SUMWKPTR)                                0401 01347000
*   I=SUBFMTMG;                     /* SUBFMT                @Y30LB55*/ 01348000
         L     @06,SENSEPTR(,SUMWKPTR)                             0402 01349000
         SLR   I,I                                                 0402 01350000
         IC    I,SUBFMTMG(,@06)                                    0402 01351000
*   SUBFMASK=I&'F0'X;               /* MASK OFF MSG CODE     @Y30LB55*/ 01352000
         LA    @06,240                                             0403 01353000
         NR    @06,I                                               0403 01354000
         STC   @06,SUBFMASK(,SUMWKPTR)                             0403 01355000
*   IF SUBFMASK='D0'X THEN          /* SA FORMAT 13          @Y30LB55*/ 01356000
         CLI   SUBFMASK(SUMWKPTR),X'D0'                            0404 01357000
         BNE   @RF00404                                            0404 01358000
*     FLAGMASK(8)='1'B;             /* YES, SET BUFFERED LOG BIT   0405 01359000
*                                                            @Y30LB55*/ 01360000
         OI    FLAGMASK(SUMWKPTR),B'00000001'                      0405 01361000
*   ELSE                            /* CHECK FORMAT 9        @ZM31022*/ 01362000
*     IF SUBFMTMG>'9B'X&SUBFMTMG<'9F'X THEN /* 9C,9D,9E      @ZM31022*/ 01363000
         B     @RC00404                                            0406 01364000
@RF00404 L     @06,SENSEPTR(,SUMWKPTR)                             0406 01365000
         CLI   SUBFMTMG(@06),X'9B'                                 0406 01366000
         BNH   @RF00406                                            0406 01367000
         CLI   SUBFMTMG(@06),X'9F'                                 0406 01368000
         BNL   @RF00406                                            0406 01369000
*       FLAGMASK(1)='1'B;           /* CART UNLOAD FAILURE   @ZM31105*/ 01370000
         OI    FLAGMASK(SUMWKPTR),B'10000000'                      0407 01371000
*     ELSE;                         /* NO                    @ZM31022*/ 01372000
@RF00406 DS    0H                                                  0409 01373000
*   END SUMFMT4;                    /* RETURN TO MAIN LINE CODE    0409 01374000
*                                                            @Y30LB55*/ 01375000
@EL00010 DS    0H                                                  0409 01376000
@EF00010 DS    0H                                                  0409 01377000
@ER00010 L     @14,12(,@13)                                        0409 01378000
         BR    @14                                                 0409 01379000
*                                                                  0410 01380000
*   /*****************************************************************/ 01381000
*   /*                                                               */ 01382000
*   /* SUMFMT5 - MSC FORMAT 5 CODE                                   */ 01383000
*   /*                                                               */ 01384000
*   /*****************************************************************/ 01385000
*                                                                  0410 01386000
*SUMFMT5:                                                          0410 01387000
*   PROC OPTIONS(SAVE(14));         /* ACCUMULATE MSC FMT 5  @Y30LB55*/ 01388000
SUMFMT5  ST    @14,12(,@13)                                        0410 01389000
*   FORMATNC='5';                   /* SET FORMAT NUMBER     @Y30LB55*/ 01390000
         MVI   FORMATNC(SUMWKPTR),C'5'                             0411 01391000
*   CNTF5=CNTF5+1;                  /* ADD 1 TO FMT5 COUNT   @Y30LB55*/ 01392000
         LA    @06,1                                               0412 01393000
         AL    @06,CNTF5(,SUMWKPTR)                                0412 01394000
         ST    @06,CNTF5(,SUMWKPTR)                                0412 01395000
*   I=SUBFMTMG;                     /* SUBFMT                @Y30LB55*/ 01396000
         L     @06,SENSEPTR(,SUMWKPTR)                             0413 01397000
         SLR   I,I                                                 0413 01398000
         IC    I,SUBFMTMG(,@06)                                    0413 01399000
*   SUBFMASK=I&'F0'X;               /* MASK OFF MSG CODE     @Y30LB55*/ 01400000
         LA    @06,240                                             0414 01401000
         NR    @06,I                                               0414 01402000
         STC   @06,SUBFMASK(,SUMWKPTR)                             0414 01403000
*   IF SUBFMASK='60'X THEN          /* DASD BUFFERED LOG     @Y30LB55*/ 01404000
         CLI   SUBFMASK(SUMWKPTR),X'60'                            0415 01405000
         BNE   @RF00415                                            0415 01406000
*     FLAGMASK(8)='1'B;             /* YES, SET BUFFERED LOG BIT   0416 01407000
*                                                            @Y30LB55*/ 01408000
         OI    FLAGMASK(SUMWKPTR),B'00000001'                      0416 01409000
*   ELSE                                                           0417 01410000
*     ;                             /* NO                    @Y30LB55*/ 01411000
@RF00415 DS    0H                                                  0418 01412000
*   END SUMFMT5;                    /* RETURN TO MAIN LINE CODE    0418 01413000
*                                                            @Y30LB55*/ 01414000
*                                                                  0418 01415000
@EL00011 DS    0H                                                  0418 01416000
@EF00011 DS    0H                                                  0418 01417000
@ER00011 L     @14,12(,@13)                                        0418 01418000
         BR    @14                                                 0418 01419000
*   /*****************************************************************/ 01420000
*   /*                                                               */ 01421000
*   /* SUMDASD - HOST DASD CODE                                      */ 01422000
*   /*                                                               */ 01423000
*   /*****************************************************************/ 01424000
*                                                                  0419 01425000
*SUMDASD:                                                          0419 01426000
*   PROC OPTIONS(SAVE(14));         /* ACCUMULATE HOST DASD  @Y30LB55*/ 01427000
SUMDASD  ST    @14,12(,@13)                                        0419 01428000
*   FORMATNC=' ';                   /* BLANK FORMAT NUMBER   @Y30LB55*/ 01429000
         MVI   FORMATNC(SUMWKPTR),C' '                             0420 01430000
*   CNTFDASD=CNTFDASD+1;            /* ADD 1 TO DASD COUNT   @Y30LB55*/ 01431000
         LA    @06,1                                               0421 01432000
         AL    @06,CNTFDASD(,SUMWKPTR)                             0421 01433000
         ST    @06,CNTFDASD(,SUMWKPTR)                             0421 01434000
*   I=DASDFMTN;                     /* SUBFORMAT             @Y30LB55*/ 01435000
         L     @06,SENSEPTR(,SUMWKPTR)                             0422 01436000
         SLR   I,I                                                 0422 01437000
         IC    I,DASDFMTN(,@06)                                    0422 01438000
*   SUBFMASK=I&'F0'X;               /* MASK OFF MSG CODE     @Y30LB55*/ 01439000
         LA    @06,240                                             0423 01440000
         NR    @06,I                                               0423 01441000
         STC   @06,SUBFMASK(,SUMWKPTR)                             0423 01442000
*   IF INDEVTYP='V' THEN            /* VIRTUAL DASD          @Y30LB55*/ 01443000
         L     @06,SDA00PTR(,CVTPTR)                               0424 01444000
         CLI   INDEVTYP(@06),C'V'                                  0424 01445000
         BNE   @RF00424                                            0424 01446000
*     FLAGMASK(4)='1'B;             /* YES, SET VIRT BIT     @Y30LB55*/ 01447000
         OI    FLAGMASK(SUMWKPTR),B'00010000'                      0425 01448000
*   ELSE                            /* NO, REAL DASD         @Y30LB55*/ 01449000
*     FLAGMASK(3)='1'B;             /* SET REAL BIT          @Y30LB55*/ 01450000
         B     @RC00424                                            0426 01451000
@RF00424 OI    FLAGMASK(SUMWKPTR),B'00100000'                      0426 01452000
*   IF SUBFMASK='60'X THEN          /* DASD BUFFERED LOG     @Y30LB55*/ 01453000
@RC00424 CLI   SUBFMASK(SUMWKPTR),X'60'                            0427 01454000
         BNE   @RF00427                                            0427 01455000
*     FLAGMASK(8)='1'B;             /* YES, SET BUFFERED LOG BIT   0428 01456000
*                                                            @Y30LB55*/ 01457000
         OI    FLAGMASK(SUMWKPTR),B'00000001'                      0428 01458000
*   ELSE                                                           0429 01459000
*     ;                             /* NO                    @Y30LB55*/ 01460000
@RF00427 DS    0H                                                  0430 01461000
*   END SUMDASD;                    /* RETURN TO MAIN LINE CODE    0430 01462000
*                                                            @Y30LB55*/ 01463000
@EL00012 DS    0H                                                  0430 01464000
@EF00012 DS    0H                                                  0430 01465000
@ER00012 L     @14,12(,@13)                                        0430 01466000
         BR    @14                                                 0430 01467000
*                                                                  0431 01468000
*   /*****************************************************************/ 01469000
*   /*                                                               */ 01470000
*   /* GETACCUM                                                      */ 01471000
*   /*                                                               */ 01472000
*   /*****************************************************************/ 01473000
*                                                                  0431 01474000
*GETACCUM:                                                         0431 01475000
*   PROC OPTIONS(SAVE(14));         /* GET ACCUMULATOR CODE  @Y30LB55*/ 01476000
GETACCUM ST    @14,@SA00013                                        0431 01477000
*   CORELEN=LENGTH(ISDAGHDR)+SUMACCL;/*                            0432 01478000
*                                      = LENGTH OF BLOCK     @Y30LB55*/ 01479000
         LA    @06,28                                              0432 01480000
         SLR   @15,@15                                             0432 01481000
         ICM   @15,3,SUMACCL(SUMWKPTR)                             0432 01482000
         ALR   @06,@15                                             0432 01483000
         STCM  @06,7,CORELEN(CVTPTR)                               0432 01484000
*   SPNO=SUMSPNO;                   /* SET SUBPOOL NUMBER    @Y30LB55*/ 01485000
         MVC   SPNO(1,CVTPTR),SUMSPNO                              0433 01486000
*   RFY                                                            0434 01487000
*     R1 RSTD;                      /*                       @Y30LB55*/ 01488000
*   R1=ADDR(WORKCALL);              /* R1 -> ADDR(WORKPTR)   @Y30LB55*/ 01489000
         LA    R1,WORKCALL(,CVTPTR)                                0435 01490000
*   CALL ISDAGET0;                  /* CALL ISDAGET0 TO DO GETMAIN 0436 01491000
*                                                            @Y30LB55*/ 01492000
         L     @15,@CV00453                                        0436 01493000
         BALR  @14,@15                                             0436 01494000
*   RFY                                                            0437 01495000
*     R15 RSTD;                     /* RESTRICT REG 15       @Y30LB55*/ 01496000
*   RETCODE=R15;                    /* SAVE RETURN CODE FROM ISDAGET0   01497000
*                                                            @Y30LB55*/ 01498000
         LR    RETCODE,R15                                         0438 01499000
*   RFY                                                            0439 01500000
*    (R1,                                                          0439 01501000
*     R15) UNRSTD;                  /* RELEASE REG 1 AND 15  @Y30LB55*/ 01502000
*   IF RETCODE=0 THEN                                              0440 01503000
         LTR   RETCODE,RETCODE                                     0440 01504000
         BNZ   @RF00440                                            0440 01505000
*     DO;                           /* GOT SPACE OK          @Y30LB55*/ 01506000
*       GET0PTR=COREADDR;           /* SET LOCAL PTR TO CORE ADDRESS    01507000
*                                                            @Y30LB55*/ 01508000
         L     @07,COREADDR(,CVTPTR)                               0442 01509000
         ST    @07,GET0PTR                                         0442 01510000
*       ACCUMCNT=ACCUMCNT+1;        /* INC ACCUM COUNT       @Y30LB55*/ 01511000
         LA    @15,1                                               0443 01512000
         SLR   @14,@14                                             0443 01513000
         ICM   @14,3,ACCUMCNT(SUMWKPTR)                            0443 01514000
         ALR   @15,@14                                             0443 01515000
         STH   @15,ACCUMCNT(,SUMWKPTR)                             0443 01516000
*       BLOCKCNT=ACCUMCNT;          /* ADD COUNT TO ISDAGHDR @Y30LB55*/ 01517000
         STH   @15,BLOCKCNT(,@07)                                  0444 01518000
*       BLOCKID='SUM0';             /* ADD MY ID             @Y30LB55*/ 01519000
         MVC   BLOCKID(4,@07),@CC00957                             0445 01520000
*       ACCUMPTR=STARTPTR;          /* SET PTR TO START OF SUMACCUM     01521000
*                                                            @Y30LB55*/ 01522000
         L     @15,STARTPTR(,@07)                                  0446 01523000
         ST    @15,ACCUMPTR(,SUMWKPTR)                             0446 01524000
*       ACCM0END=ENDPTR;            /* SET PTR TO END OF SUMACCUM  0447 01525000
*                                                            @Y30LB55*/ 01526000
*                                                                  0447 01527000
         L     @07,ENDPTR(,@07)                                    0447 01528000
         ST    @07,ACCM0END(,SUMWKPTR)                             0447 01529000
*       /*************************************************************/ 01530000
*       /*                                                           */ 01531000
*       /* INITIALIZE SUMACCUM FROM ISDASUM2 DEFAULT TABLE           */ 01532000
*       /*                                                           */ 01533000
*       /*************************************************************/ 01534000
*                                                                  0448 01535000
*       COUNTPTR=ACCUMPTR;          /* START OF COUNTERS     @Y30LB55*/ 01536000
         LR    COUNTPTR,@15                                        0448 01537000
*       COUNTEND=ACCM0END;          /* END OF COUNTERS       @Y30LB55*/ 01538000
         LR    COUNTEND,@07                                        0449 01539000
*       DEVIDPTR=SUM2PTR;           /* START OF DEFAULTS     @Y30LB55*/ 01540000
         L     DEVIDPTR,SUM2PTR(,SUMWKPTR)                         0450 01541000
*       DO WHILE(COUNTPTR<COUNTEND);/* LOOP THROUGH ISDASUM2 @Y30LB55*/ 01542000
         B     @DE00451                                            0451 01543000
@DL00451 DS    0H                                                  0452 01544000
*         MCADDXXX=DEVIDPTR;        /* SAVE PTR INTO ISDASUM2@Y30LB55*/ 01545000
         ST    DEVIDPTR,MCADDXXX(,COUNTPTR)                        0452 01546000
*         MCOUNTS=''B;              /* ZERO COUNTS           @Y30LB55*/ 01547000
         XC    MCOUNTS(4,COUNTPTR),MCOUNTS(COUNTPTR)               0453 01548000
*         MCMASK=MDMASK;            /* MOVE 3 BYTE MASK      @Y30LB55*/ 01549000
         MVC   MCMASK(3,COUNTPTR),MDMASK(DEVIDPTR)                 0454 01550000
*         MLDTIME='0099999F00000000'X;/* SET LOW DATE TO 99999     0455 01551000
*                                                            @Y30LB55*/ 01552000
         MVC   MLDTIME(8,COUNTPTR),@CB00958                        0455 01553000
*         MHDTIME=''B;              /* SET HIGH DATE TO 0    @Y30LB55*/ 01554000
         XC    MHDTIME(8,COUNTPTR),MHDTIME(COUNTPTR)               0456 01555000
*         COUNTPTR=COUNTPTR+LENGTH(MCOUNTER);/*                    0457 01556000
*                                      INC COUNTPTR TO NEXT ENTRY  0457 01557000
*                                                            @Y30LB55*/ 01558000
         AH    COUNTPTR,@CH00221                                   0457 01559000
*         DEVIDPTR=DEVIDPTR+LENGTH(MDEVIDTB);/*                    0458 01560000
*                                      INC ISDASUM2 PTR TO NEXT ENTRY   01561000
*                                                            @Y30LB55*/ 01562000
         AH    DEVIDPTR,@CH01011                                   0458 01563000
*       END;                        /* END OF INITIALIZE LOOP@Y30LB55*/ 01564000
*                                                                  0459 01565000
@DE00451 CR    COUNTPTR,COUNTEND                                   0459 01566000
         BL    @DL00451                                            0459 01567000
*       /*************************************************************/ 01568000
*       /*                                                           */ 01569000
*       /* GET CORE FOR MSC REASON CODES    RCODES                   */ 01570000
*       /*                                                           */ 01571000
*       /*************************************************************/ 01572000
*                                                                  0460 01573000
*       CORELEN=RCODELEN;           /* LENGTH OF RCODES      @ZM31074*/ 01574000
         MVC   CORELEN(3,CVTPTR),@CF00410+1                        0460 01575000
*       SPNO=SUMSPNO;               /* GET SUBPOOL NUMBER    @ZM31074*/ 01576000
         MVC   SPNO(1,CVTPTR),SUMSPNO                              0461 01577000
*       RFY R1 RSTD;                                               0462 01578000
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @ZM31074*/ 01579000
         LA    R1,WORKCALL(,CVTPTR)                                0463 01580000
*       CALL ISDAGET1;              /* GET CORE NO HEADER    @ZM31074*/ 01581000
         L     @15,@CV00454                                        0464 01582000
         BALR  @14,@15                                             0464 01583000
*       RFY R15 RSTD;                                              0465 01584000
*       RETCODE=R15;                /* SAVE RETURN CODE      @ZM31074*/ 01585000
         LR    RETCODE,R15                                         0466 01586000
*       RFY (R1,R15) UNRSTD;                                       0467 01587000
*       IF RETCODE=0 THEN           /* GOT CORE OK           @ZM31074*/ 01588000
         LTR   RETCODE,RETCODE                                     0468 01589000
         BNZ   @RF00468                                            0468 01590000
*         DO;                       /* YES, INITIALIZE RCODES@ZM31074*/ 01591000
*           RCODEPTR=COREADDR;      /* SAVE ADDR OF RCODES   @ZM31074*/ 01592000
         MVC   RCODEPTR(4,SUMWKPTR),COREADDR(CVTPTR)               0470 01593000
*           DO I=1 TO 256;          /* SET EACH COUNT ZERO   @ZM31074*/ 01594000
         LA    I,1                                                 0471 01595000
@DL00471 DS    0H                                                  0472 01596000
*             RCODES(I)=''B;        /* ZERO COUNT            @ZM31074*/ 01597000
         LR    @06,I                                               0472 01598000
         ALR   @06,@06                                             0472 01599000
         L     @05,RCODEPTR(,SUMWKPTR)                             0472 01600000
         SLR   @15,@15                                             0472 01601000
         BCTR  @05,0                                               0472 01602000
         BCTR  @05,0                                               0472 01603000
         STH   @15,RCODES(@06,@05)                                 0472 01604000
*           END;                    /* END ZERO LOOP         @ZM31074*/ 01605000
         AH    I,@CH00083                                          0473 01606000
         CH    I,@CH00408                                          0473 01607000
         BNH   @DL00471                                            0473 01608000
*         END;                      /* END INITIALIZE CODE   @ZM31074*/ 01609000
*       ELSE;                       /* NO CORE AVAILABLE     @ZM31074*/ 01610000
@RF00468 DS    0H                                                  0476 01611000
*     END;                          /* END INIT ACCUMULATOR  @ZM02889*/ 01612000
*   ELSE                                                           0477 01613000
*     ;                             /* NO SPACE AVAILABLE    @Y30LB55*/ 01614000
*                                                                  0477 01615000
@RF00440 DS    0H                                                  0478 01616000
*   /*****************************************************************/ 01617000
*   /*                                                               */ 01618000
*   /* GET CORE FOR SEVERITY TABLE - SEVRLIST                        */ 01619000
*   /*                                                               */ 01620000
*   /*****************************************************************/ 01621000
*                                                                  0478 01622000
*   IF RETCODE=0 THEN               /* NO ERRORS             @ZA20267*/ 01623000
         LTR   RETCODE,RETCODE                                     0478 01624000
         BNZ   @RF00478                                            0478 01625000
*     DO;                           /* GET SEVERITY TABLE    @ZA20267*/ 01626000
*       SEVRLCNT=16;                /* NUMBER OF ENTRIES     @ZA20267*/ 01627000
         LA    @06,16                                              0480 01628000
         ST    @06,SEVRLCNT(,SUMWKPTR)                             0480 01629000
*       CORELEN=SEVRLCNT*LENGTH(SEVRLIST); /* LENGTH         @ZA20267*/ 01630000
         MH    @06,@CH01012                                        0481 01631000
         STCM  @06,7,CORELEN(CVTPTR)                               0481 01632000
*       SPNO=SUMSPNO;               /* SUBPOOL               @ZA20267*/ 01633000
         MVC   SPNO(1,CVTPTR),SUMSPNO                              0482 01634000
*       RFY                                                        0483 01635000
*         R1 RSTD;                  /*                       @ZA20267*/ 01636000
*       R1=ADDR(WORKCALL);          /* R1 -> ADDR(WORKPTR)   @ZA20267*/ 01637000
         LA    R1,WORKCALL(,CVTPTR)                                0484 01638000
*       CALL ISDAGET0;              /* CALL ISDAGET0 TO DO GETMAIN 0485 01639000
*                                                            @ZA20267*/ 01640000
         L     @15,@CV00453                                        0485 01641000
         BALR  @14,@15                                             0485 01642000
*       RFY                                                        0486 01643000
*         R15 RSTD;                 /* RESTRICT REG 15       @ZA20267*/ 01644000
*       RETCODE=R15;                /* SAVE RETURN CODE FROM ISDAGET0   01645000
*                                                            @ZA20267*/ 01646000
         LR    RETCODE,R15                                         0487 01647000
*       RFY                                                        0488 01648000
*        (R1,                                                      0488 01649000
*         R15) UNRSTD;              /* RELEASE REG 1 AND 15  @ZA20267*/ 01650000
*       IF RETCODE=0 THEN           /* GOT CORE OK           @ZA20267*/ 01651000
         LTR   RETCODE,RETCODE                                     0489 01652000
         BNZ   @RF00489                                            0489 01653000
*         DO;                       /* INITIALIZE SEVRLIST   @ZA20267*/ 01654000
*           SEVRLEN=SPNOLEN;        /* SAVE LENGTH           @ZA20267*/ 01655000
         MVC   SEVRLEN(4,SUMWKPTR),SPNOLEN(CVTPTR)                 0491 01656000
*           SEVSTART=COREADDR;      /* SAVE ADDRESS          @ZA20267*/ 01657000
         L     @15,COREADDR(,CVTPTR)                               0492 01658000
         ST    @15,SEVSTART(,SUMWKPTR)                             0492 01659000
*           SEVRPTR=SEVSTART;       /* POINT TO START        @ZA20267*/ 01660000
         LR    SEVRPTR,@15                                         0493 01661000
*           DO I=1 TO SEVRLCNT;     /* LOOP THROUGH LIST     @ZA20267*/ 01662000
         LA    I,1                                                 0494 01663000
         B     @DE00494                                            0494 01664000
@DL00494 DS    0H                                                  0495 01665000
*             SEVRLIST=''B;         /* ZERO THIS ENTRY       @ZA20267*/ 01666000
         XC    SEVRLIST(168,SEVRPTR),SEVRLIST(SEVRPTR)             0495 01667000
*             SEVRPTR=SEVRPTR+LENGTH(SEVRLIST); /* GET NEXT  @ZA20267*/ 01668000
         AL    SEVRPTR,@CF01012                                    0496 01669000
*           END;                    /* END LOOP              @ZA20267*/ 01670000
         AH    I,@CH00083                                          0497 01671000
@DE00494 CL    I,SEVRLCNT(,SUMWKPTR)                               0497 01672000
         BNH   @DL00494                                            0497 01673000
*         END;                      /* END INITIALIZE        @ZA20267*/ 01674000
*       ELSE;                       /* BAD RETURN FROM GET1  @ZA20267*/ 01675000
@RF00489 DS    0H                                                  0500 01676000
*     END;                          /* END GET SEVRLIST CORE @ZA20267*/ 01677000
*   ELSE;                           /* NO CORE AVAILABLE     @ZA20267*/ 01678000
@RF00478 DS    0H                                                  0502 01679000
*   END GETACCUM;                   /* END GET ACCUMULATOR   @Y30LB55*/ 01680000
@EL00013 DS    0H                                                  0502 01681000
@EF00013 DS    0H                                                  0502 01682000
@ER00013 L     @14,@SA00013                                        0502 01683000
         BR    @14                                                 0502 01684000
*                                                                  0503 01685000
*   /*****************************************************************/ 01686000
*   /*                                                               */ 01687000
*   /* UPDATEAC - PROC TO UPDATE COUNTERS WITH HIGH-LOW DATE AND TIME*/ 01688000
*   /* AND COUNTS                                                    */ 01689000
*   /*                                                               */ 01690000
*   /*****************************************************************/ 01691000
*                                                                  0503 01692000
*UPDATEAC:                                                         0503 01693000
*   PROC OPTIONS(SAVE(14));         /* UPDATE COUNTERS       @Y30LB55*/ 01694000
UPDATEAC ST    @14,@SA00014                                        0503 01695000
*   RETCODE=8;                      /* SET NOT FOUND         @Y30LB55*/ 01696000
         LA    RETCODE,8                                           0504 01697000
*   COUNTPTR=ACCUMPTR;              /* SET PTR TO START OF SUMACCUM     01698000
*                                                            @Y30LB55*/ 01699000
         L     COUNTPTR,ACCUMPTR(,SUMWKPTR)                        0505 01700000
*   COUNTEND=ACCM0END;              /* SET PTR TO END OF SUMACCUM  0506 01701000
*                                                            @Y30LB55*/ 01702000
         L     COUNTEND,ACCM0END(,SUMWKPTR)                        0506 01703000
*   DO WHILE(COUNTPTR<COUNTEND);    /* LOOP THROUGH SUMACCUM @Y30LB55*/ 01704000
         B     @DE00507                                            0507 01705000
@DL00507 DS    0H                                                  0508 01706000
*     IF MAINMASK=MCMASK THEN       /* FOUND MASK MATCH      @Y30LB55*/ 01707000
         CLC   MAINMASK(3,SUMWKPTR),MCMASK(COUNTPTR)               0508 01708000
         BNE   @RF00508                                            0508 01709000
*       DO;                         /* YES, UPDATE COUNTERS  @Y30LB55*/ 01710000
*         RETCODE=0;                /* RESET RETURN CODE TO 0@Y30LB55*/ 01711000
         SLR   RETCODE,RETCODE                                     0510 01712000
*         IF DATETIME<MLDTIME THEN  /* IS THIS DATE LOW      @Y30LB55*/ 01713000
         L     @06,LOGPTR(,SUMWKPTR)                               0511 01714000
         CLC   DATETIME(8,@06),MLDTIME(COUNTPTR)                   0511 01715000
         BNL   @RF00511                                            0511 01716000
*           MLDTIME=DATETIME;       /* YES, MOVE DATE        @Y30LB55*/ 01717000
         MVC   MLDTIME(8,COUNTPTR),DATETIME(@06)                   0512 01718000
*         ELSE                                                     0513 01719000
*           ;                       /* NO, DATE OK           @Y30LB55*/ 01720000
@RF00511 DS    0H                                                  0514 01721000
*         IF DATETIME>MHDTIME THEN  /* IS THIS DATE HIGH     @Y30LB55*/ 01722000
         L     @06,LOGPTR(,SUMWKPTR)                               0514 01723000
         CLC   DATETIME(8,@06),MHDTIME(COUNTPTR)                   0514 01724000
         BNH   @RF00514                                            0514 01725000
*           MHDTIME=DATETIME;       /* YES, MOVE DATE        @Y30LB55*/ 01726000
         MVC   MHDTIME(8,COUNTPTR),DATETIME(@06)                   0515 01727000
*         ELSE                                                     0516 01728000
*           ;                       /* NO, DATE OK           @Y30LB55*/ 01729000
@RF00514 DS    0H                                                  0517 01730000
*         IF MCFLAG(8)='1'B THEN    /* BUFFERED LOG RECORD   @Y30LB55*/ 01731000
         TM    MCFLAG(COUNTPTR),B'00000001'                        0517 01732000
         BNO   @RF00517                                            0517 01733000
*           DO;                     /* YES                   @Y30LB55*/ 01734000
*             CNTLOG=CNTLOG+1;      /* INC LOG COUNT BY 1    @Y30LB55*/ 01735000
         LA    @06,1                                               0519 01736000
         L     @15,CNTLOG(,SUMWKPTR)                               0519 01737000
         ALR   @15,@06                                             0519 01738000
         ST    @15,CNTLOG(,SUMWKPTR)                               0519 01739000
*             IF IRECTYPE='O' THEN  /* IS IT OBR             @Y30LB55*/ 01740000
         L     @01,SDA00PTR(,CVTPTR)                               0520 01741000
         CLI   IRECTYPE(@01),C'O'                                  0520 01742000
         BNE   @RF00520                                            0520 01743000
*               MCPXXX=MCPXXX+1;    /* YES, INC OBR COUNT    @Y30LB55*/ 01744000
         SLR   @15,@15                                             0521 01745000
         ICM   @15,3,MCPXXX(COUNTPTR)                              0521 01746000
         ALR   @06,@15                                             0521 01747000
         STH   @06,MCPXXX(,COUNTPTR)                               0521 01748000
*             ELSE                  /* NO, MUST BE MDR       @Y30LB55*/ 01749000
*               MCTXXX=MCTXXX+1;    /* INC MDR COUNT         @Y30LB55*/ 01750000
         B     @RC00520                                            0522 01751000
@RF00520 LA    @06,1                                               0522 01752000
         SLR   @15,@15                                             0522 01753000
         ICM   @15,3,MCTXXX(COUNTPTR)                              0522 01754000
         ALR   @06,@15                                             0522 01755000
         STH   @06,MCTXXX(,COUNTPTR)                               0522 01756000
*           END;                    /* END BUFFERED LOG CODE @Y30LB55*/ 01757000
*         ELSE                      /* SENSE DATA RECORD     @Y30LB55*/ 01758000
*           DO;                     /* YES                   @Y30LB55*/ 01759000
         B     @RC00517                                            0524 01760000
@RF00517 DS    0H                                                  0525 01761000
*             CNTSENSE=CNTSENSE+1;  /* INC SENSE COUNT BY 1  @Y30LB55*/ 01762000
         LA    @06,1                                               0525 01763000
         AL    @06,CNTSENSE(,SUMWKPTR)                             0525 01764000
         ST    @06,CNTSENSE(,SUMWKPTR)                             0525 01765000
*             CALL TPCHECK;         /* SET PERM OR TEMP      @ZA20267*/ 01766000
         BAL   @14,TPCHECK                                         0526 01767000
*             IF TPTFLAG='00'X THEN /* TEMP ERROR            @ZA20267*/ 01768000
         CLI   TPTFLAG(SUMWKPTR),X'00'                             0527 01769000
         BNE   @RF00527                                            0527 01770000
*               MCTXXX=MCTXXX+1;    /* YES, ADD 1 TO TEMP    @ZA20267*/ 01771000
         LA    @06,1                                               0528 01772000
         SLR   @15,@15                                             0528 01773000
         ICM   @15,3,MCTXXX(COUNTPTR)                              0528 01774000
         ALR   @06,@15                                             0528 01775000
         STH   @06,MCTXXX(,COUNTPTR)                               0528 01776000
*             ELSE                  /* NO, PERM ERROR        @ZA20267*/ 01777000
*               MCPXXX=MCPXXX+1;    /* ADD 1 TO PERM COUNT   @ZA20267*/ 01778000
         B     @RC00527                                            0529 01779000
@RF00527 LA    @06,1                                               0529 01780000
         SLR   @15,@15                                             0529 01781000
         ICM   @15,3,MCPXXX(COUNTPTR)                              0529 01782000
         ALR   @06,@15                                             0529 01783000
         STH   @06,MCPXXX(,COUNTPTR)                               0529 01784000
*           END;                    /* END SENSE DATA CODE   @Y30LB55*/ 01785000
@RC00527 DS    0H                                                  0531 01786000
*         COUNTPTR=COUNTEND;        /* SET PTR TO END OF SUMACCUM TO    01787000
*                                      STOP LOOP             @Y30LB55*/ 01788000
@RC00517 LR    COUNTPTR,COUNTEND                                   0531 01789000
*       END;                        /* END OF COUNTER UPDATE @Y30LB55*/ 01790000
*     ELSE                          /* NO MATCH YET          @Y30LB55*/ 01791000
*       COUNTPTR=COUNTPTR+LENGTH(MCOUNTER);/*                      0533 01792000
*                                      INC POINTER INTO SUMACCUM   0533 01793000
*                                                            @Y30LB55*/ 01794000
         B     @RC00508                                            0533 01795000
@RF00508 AH    COUNTPTR,@CH00221                                   0533 01796000
*   END;                            /* END OF UPDATE LOOP    @Y30LB55*/ 01797000
@RC00508 DS    0H                                                  0534 01798000
@DE00507 CR    COUNTPTR,COUNTEND                                   0534 01799000
         BL    @DL00507                                            0534 01800000
*   END UPDATEAC;                   /* END UPDATE COUNTERS PROC    0535 01801000
*                                                            @Y30LB55*/ 01802000
@EL00014 DS    0H                                                  0535 01803000
@EF00014 DS    0H                                                  0535 01804000
@ER00014 L     @14,@SA00014                                        0535 01805000
         BR    @14                                                 0535 01806000
*                                                                  0536 01807000
*   /*****************************************************************/ 01808000
*   /*                                                               */ 01809000
*   /* TPCHECK - PROC TO DETERMIN IF ERROR IS TEMPORARY OR PERMANENT */ 01810000
*   /*                                                               */ 01811000
*   /*****************************************************************/ 01812000
*                                                                  0536 01813000
*TPCHECK:                                                          0536 01814000
*   PROC OPTIONS(SAVE(14));         /* PERM OR TEMP ERROR    @ZA20267*/ 01815000
TPCHECK  ST    @14,12(,@13)                                        0536 01816000
*   IF INDEVTYP='S' THEN            /* MSS RECORD            @ZA20267*/ 01817000
         L     @06,SDA00PTR(,CVTPTR)                               0537 01818000
         CLI   INDEVTYP(@06),C'S'                                  0537 01819000
         BNE   @RF00537                                            0537 01820000
*     IF STATUS(8)='0'B|SSIDFLAG(1:2)^='00'B|FORMATNO(7)='1'B      0538 01821000
*     THEN                          /* ADD CEM AND SUU CHECK @ZA20267*/ 01822000
         L     @06,SENSEPTR(,SUMWKPTR)                             0538 01823000
         TM    STATUS(@06),B'00000001'                             0538 01824000
         BZ    @RT00538                                            0538 01825000
         TM    SSIDFLAG(@06),B'11000000'                           0538 01826000
         BNZ   @RT00538                                            0538 01827000
         TM    FORMATNO(@06),B'00000010'                           0538 01828000
         BNO   @RF00538                                            0538 01829000
@RT00538 DS    0H                                                  0539 01830000
*                                   /* MSC ENVIRONMENTAL BIT OFF OR     01831000
*                                      CE MESSAGE OR SUU BIT ON OR 0539 01832000
*                                      UNSECCESSFUL RETRY BIT ON   0539 01833000
*                                      FOR ALL FORMATS       @ZA20267*/ 01834000
*       TPTFLAG='01'X;              /* YES, SET PERM ERROR   @ZA20267*/ 01835000
         MVI   TPTFLAG(SUMWKPTR),X'01'                             0539 01836000
*     ELSE                          /* CHECK LOWER STATUS    @ZA20267*/ 01837000
*       IF FORMATNO(4:5)^='00'B&SUBSTAT4(8)='0'B THEN              0540 01838000
         B     @RC00538                                            0540 01839000
@RF00538 L     @06,SENSEPTR(,SUMWKPTR)                             0540 01840000
         TM    FORMATNO(@06),B'00011000'                           0540 01841000
         BZ    @RF00540                                            0540 01842000
         TM    SUBSTAT4(@06),B'00000001'                           0540 01843000
         BNZ   @RF00540                                            0540 01844000
*                                   /* FORMAT 3 OR 4  BYTE 4 BIT 7 0541 01845000
*                                      ENVIRONMENTAL DATA BIT OFF  0541 01846000
*                                                            @ZA20267*/ 01847000
*         TPTFLAG='01'X;             /*YES, SET PERM ERROR   @ZA20267*/ 01848000
         MVI   TPTFLAG(SUMWKPTR),X'01'                             0541 01849000
*       ELSE                        /* CHECK FORMAT 5 STATUS @ZA20267*/ 01850000
*         IF FORMATNO(6)='1'B&SALOWADD(4)='0'B THEN                0542 01851000
         B     @RC00540                                            0542 01852000
@RF00540 L     @06,SENSEPTR(,SUMWKPTR)                             0542 01853000
         TM    FORMATNO(@06),B'00000100'                           0542 01854000
         BNO   @RF00542                                            0542 01855000
         TM    SALOWADD(@06),B'00010000'                           0542 01856000
         BNZ   @RF00542                                            0542 01857000
*                                   /* FORMAT 5  BYTE 6 BIT 3      0543 01858000
*                                      ENVIRONMENTAL DATA BIT      0543 01859000
*                                      OFF                   @ZA20267*/ 01860000
*           TPTFLAG='01'X;          /* YES, SET PERM ERROR   @ZA20267*/ 01861000
         MVI   TPTFLAG(SUMWKPTR),X'01'                             0543 01862000
*         ELSE                      /* NOT PERMANENT ERROR   @ZA20267*/ 01863000
*           TPTFLAG='00'X;          /* SET TEMP ERROR        @ZA20267*/ 01864000
         B     @RC00542                                            0544 01865000
@RF00542 MVI   TPTFLAG(SUMWKPTR),X'00'                             0544 01866000
*   ELSE                            /* 3330 RECORD           @ZA20267*/ 01867000
*     IF SSIDLIBN(4)='1'B THEN      /* CHECK BYTE 2 BIT 3          0545 01868000
*                                      IS ENVIRONMENTAL BIT ON     0545 01869000
*                                                            @ZA20267*/ 01870000
         B     @RC00537                                            0545 01871000
@RF00537 L     @06,SENSEPTR(,SUMWKPTR)                             0545 01872000
         TM    SSIDLIBN(@06),B'00010000'                           0545 01873000
         BNO   @RF00545                                            0545 01874000
*       TPTFLAG='00'X;              /* YES, SET TEMP ERROR   @ZA20267*/ 01875000
         MVI   TPTFLAG(SUMWKPTR),X'00'                             0546 01876000
*     ELSE                          /* NO, PERM ERROR        @ZA20267*/ 01877000
*       TPTFLAG='01'X;              /* SET PERM ERROR        @ZA20267*/ 01878000
         B     @RC00545                                            0547 01879000
@RF00545 MVI   TPTFLAG(SUMWKPTR),X'01'                             0547 01880000
*   END TPCHECK;                    /* END PROC              @ZA20267*/ 01881000
@EL00015 DS    0H                                                  0548 01882000
@EF00015 DS    0H                                                  0548 01883000
@ER00015 L     @14,12(,@13)                                        0548 01884000
         BR    @14                                                 0548 01885000
*                                                                  0549 01886000
*   /*****************************************************************/ 01887000
*   /*                                                               */ 01888000
*   /* SEVERITY - PROC TO BUILD THE SEVERITY LIST - SEVRLIST         */ 01889000
*   /*                                                               */ 01890000
*   /*****************************************************************/ 01891000
*                                                                  0549 01892000
*SEVERITY:                                                         0549 01893000
*   PROC OPTIONS(SAVE(14));         /* BUILD SEVERITY LIST   @ZA20267*/ 01894000
SEVERITY ST    @14,@SA00016                                        0549 01895000
*   TSEVTEMP=''B;                   /* ZERO TEMPS            @ZA20267*/ 01896000
         XC    TSEVTEMP(9,SUMWKPTR),TSEVTEMP(SUMWKPTR)             0550 01897000
*   TSEVFMT=FORMATCK;               /* FORMAT                @ZA20267*/ 01898000
         MVC   TSEVFMT(1,SUMWKPTR),FORMATCK(SUMWKPTR)              0551 01899000
*   IF FORMATCK(1)='1'B THEN        /* FORMAT 0              @ZA20267*/ 01900000
         TM    FORMATCK(SUMWKPTR),B'10000000'                      0552 01901000
         BNO   @RF00552                                            0552 01902000
*     TSEVSUBF=SUBFMTMG;            /* SUBFORMAT + MSG CODE  @ZA20267*/ 01903000
         L     @01,SENSEPTR(,SUMWKPTR)                             0553 01904000
         MVC   TSEVSUBF(1,SUMWKPTR),SUBFMTMG(@01)                  0553 01905000
*   ELSE                            /* NOT 0                 @ZA20267*/ 01906000
*     IF FORMATCK(4)='1'B&FLAGMASK(8)='1'B THEN /* 3 BUF LOG @ZA20267*/ 01907000
         B     @RC00552                                            0554 01908000
@RF00552 TM    FORMATCK(SUMWKPTR),B'00010000'                      0554 01909000
         BNO   @RF00554                                            0554 01910000
         TM    FLAGMASK(SUMWKPTR),B'00000001'                      0554 01911000
         BNO   @RF00554                                            0554 01912000
*       TSEVSUBF='01'X;             /* FORCE SUBFORMAT 1     @ZA20267*/ 01913000
         MVI   TSEVSUBF(SUMWKPTR),X'01'                            0555 01914000
*     ELSE                          /* NOT 3                 @ZA20267*/ 01915000
*       IF FORMATCK(5)='1'B THEN    /* FORMAT 4              @ZA20267*/ 01916000
         B     @RC00554                                            0556 01917000
@RF00554 TM    FORMATCK(SUMWKPTR),B'00001000'                      0556 01918000
         BNO   @RF00556                                            0556 01919000
*         IF SUBFMASK='90'X|SUBFMASK='B0'X THEN /* 9 OR B    @ZA20267*/ 01920000
         CLI   SUBFMASK(SUMWKPTR),X'90'                            0557 01921000
         BE    @RT00557                                            0557 01922000
         CLI   SUBFMASK(SUMWKPTR),X'B0'                            0557 01923000
         BNE   @RF00557                                            0557 01924000
@RT00557 DS    0H                                                  0558 01925000
*           TSEVSUBF=SUBFMTMG;      /* SUBFMT AND MSG CODE   @ZA20267*/ 01926000
         L     @01,SENSEPTR(,SUMWKPTR)                             0558 01927000
         MVC   TSEVSUBF(1,SUMWKPTR),SUBFMTMG(@01)                  0558 01928000
*         ELSE                      /* NOT 9 OR B            @ZA20267*/ 01929000
*           TSEVSUBF=SUBFMASK;      /* SUBFORMAT ONLY        @ZA20267*/ 01930000
         B     @RC00557                                            0559 01931000
@RF00557 MVC   TSEVSUBF(1,SUMWKPTR),SUBFMASK(SUMWKPTR)             0559 01932000
*       ELSE                        /* NOT 4                 @ZA20267*/ 01933000
*         IF FORMATCK(6)='1'B THEN  /* FORMAT 5              @ZA20267*/ 01934000
         B     @RC00556                                            0560 01935000
@RF00556 TM    FORMATCK(SUMWKPTR),B'00000100'                      0560 01936000
         BNO   @RF00560                                            0560 01937000
*           TSEVSUBF=SUBFMASK;      /* SUBFORMAT ONLY        @ZA20267*/ 01938000
         MVC   TSEVSUBF(1,SUMWKPTR),SUBFMASK(SUMWKPTR)             0561 01939000
*         ELSE;                     /* NO SUBFORMAT          @ZA20267*/ 01940000
@RF00560 DS    0H                                                  0563 01941000
*   TSEVMASK=FLAGMASK;              /* MOVE TYPE MASK        @ZA20267*/ 01942000
*                                                                  0563 01943000
@RC00556 DS    0H                                                  0563 01944000
@RC00554 DS    0H                                                  0563 01945000
@RC00552 MVC   TSEVMASK(1,SUMWKPTR),FLAGMASK(SUMWKPTR)             0563 01946000
*   /*****************************************************************/ 01947000
*   /*                                                               */ 01948000
*   /* GET SSID, TERMCODE, PERM OR TEMP, AND SEVERITY CODE           */ 01949000
*   /*                                                               */ 01950000
*   /*****************************************************************/ 01951000
*                                                                  0564 01952000
*   IF INDEVTYP='S' THEN            /* SUBSYSTEM RECORD      @ZA20267*/ 01953000
         L     @15,SDA00PTR(,CVTPTR)                               0564 01954000
         CLI   INDEVTYP(@15),C'S'                                  0564 01955000
         BNE   @RF00564                                            0564 01956000
*     IF SSID='FFF'X THEN           /* NO SSID               @ZA20267*/ 01957000
         L     @01,SENSEPTR(,SUMWKPTR)                             0565 01958000
         MVC   @TS00001(2),SSID(@01)                               0565 01959000
         NC    @TS00001(2),@CB01022                                0565 01960000
         CLC   @TS00001(2),@CB01022                                0565 01961000
         BNE   @RF00565                                            0565 01962000
*       TSSID=INRECCUA;             /* YES, MOVE RUA         @ZA20267*/ 01963000
         MVC   TSSID(2,SUMWKPTR),INRECCUA(@15)                     0566 01964000
*     ELSE                          /* HAVE SSID */                0567 01965000
*       TSSID=SUBSYSID&'0FFF'X;     /* MOVE SSID             @ZA20267*/ 01966000
         B     @RC00565                                            0567 01967000
@RF00565 L     @01,SENSEPTR(,SUMWKPTR)                             0567 01968000
         MVC   TSSID(2,SUMWKPTR),SUBSYSID(@01)                     0567 01969000
         NC    TSSID(2,SUMWKPTR),@CB00973                          0567 01970000
*   ELSE                            /* VIRTUAL DASD          @ZA20267*/ 01971000
*     TSSID=MSCFSC&'00FF'X;         /* MOVE SSID BYTE 27     @ZA20267*/ 01972000
         B     @RC00564                                            0568 01973000
@RF00564 L     @01,SENSEPTR(,SUMWKPTR)                             0568 01974000
         MVC   TSSID(2,SUMWKPTR),MSCFSC(@01)                       0568 01975000
         NC    TSSID(2,SUMWKPTR),@CB00974                          0568 01976000
*   IF FORMATCK(1)='1'B THEN        /* FORMAT 0              @ZA20267*/ 01977000
@RC00564 TM    FORMATCK(SUMWKPTR),B'10000000'                      0569 01978000
         BNO   @RF00569                                            0569 01979000
*     TSEVECOD=ISDAMSCS(13);        /* SAVE BYTE 12          @ZA20267*/ 01980000
         L     @01,SENSEPTR(,SUMWKPTR)                             0570 01981000
         MVC   TSEVECOD(1,SUMWKPTR),ISDAMSCS+12(@01)               0570 01982000
*   ELSE                            /* NOT 0                 @ZA20267*/ 01983000
*     IF FORMATCK(5)='1'B THEN      /* FORMAT 4              @ZA20267*/ 01984000
         B     @RC00569                                            0571 01985000
@RF00569 TM    FORMATCK(SUMWKPTR),B'00001000'                      0571 01986000
         BNO   @RF00571                                            0571 01987000
*       IF SUBFMTMG='9F'X|SUBFMTMG='BF'X THEN /* 9F OR BF    @ZA20267*/ 01988000
         L     @15,SENSEPTR(,SUMWKPTR)                             0572 01989000
         CLI   SUBFMTMG(@15),X'9F'                                 0572 01990000
         BE    @RT00572                                            0572 01991000
         CLI   SUBFMTMG(@15),X'BF'                                 0572 01992000
         BNE   @RF00572                                            0572 01993000
@RT00572 DS    0H                                                  0573 01994000
*         TSEVSUBF=ISDAMSCS(28);    /* YES, MOVE BYTE 27     @ZA20267*/ 01995000
         L     @01,SENSEPTR(,SUMWKPTR)                             0573 01996000
         MVC   TSEVSUBF(1,SUMWKPTR),ISDAMSCS+27(@01)               0573 01997000
*       ELSE;                       /* NOT 9F OR BF          @ZA20267*/ 01998000
@RF00572 DS    0H                                                  0575 01999000
*     ELSE;                         /* NOTHING TO SAVE       @ZA20267*/ 02000000
@RF00571 DS    0H                                                  0576 02001000
*   IF FLAGMASK(8)='1'B THEN        /* BUFFERED LOG RECORD   @ZA20267*/ 02002000
@RC00569 TM    FLAGMASK(SUMWKPTR),B'00000001'                      0576 02003000
         BNO   @RF00576                                            0576 02004000
*     TPTFLAG='00'X;                /* SET TEMP ERROR        @ZA20267*/ 02005000
         MVI   TPTFLAG(SUMWKPTR),X'00'                             0577 02006000
*   ELSE                            /* SENSE DATA            @ZA20267*/ 02007000
*     CALL TPCHECK;                 /* SET TEMP-PERM FLAG    @ZA20267*/ 02008000
         B     @RC00576                                            0578 02009000
@RF00576 BAL   @14,TPCHECK                                         0578 02010000
*   CALL GETSCODE;                  /* SET SEVERITY CODE     @ZA20267*/ 02011000
*                                                                  0579 02012000
@RC00576 BAL   @14,GETSCODE                                        0579 02013000
*   /*****************************************************************/ 02014000
*   /*                                                               */ 02015000
*   /* BUILD THE SEVERITY LIST - SEVRLIST                            */ 02016000
*   /*                                                               */ 02017000
*   /*****************************************************************/ 02018000
*                                                                  0580 02019000
*   IF RETCODE=0 THEN               /* FOUND SEVERITY CODE   @ZA20267*/ 02020000
         LTR   RETCODE,RETCODE                                     0580 02021000
         BNZ   @RF00580                                            0580 02022000
*     DO;                           /* YES, PROCESS IT       @ZA20267*/ 02023000
*       SEVRPTR=SEVSTART;           /* SET TO START OF TABLE @ZA20267*/ 02024000
         L     SEVRPTR,SEVSTART(,SUMWKPTR)                         0582 02025000
*       MINSEVCD=SEVRCODE;          /* INITIALIZE MIN CODE   @ZA20267*/ 02026000
         MVC   MINSEVCD(2),SEVRCODE(SEVRPTR)                       0583 02027000
*       MINCDPTR=SEVRPTR;           /* INITIALIZE MIN PTR    @ZA20267*/ 02028000
         ST    SEVRPTR,MINCDPTR                                    0584 02029000
*       J=0;                        /* SET LOOP FLAG         @ZA20267*/ 02030000
         SLR   J,J                                                 0585 02031000
*       DO I=1 TO SEVRLCNT WHILE(J=0);  /* LOOP SEVRLIST     @ZA20267*/ 02032000
         LA    I,1                                                 0586 02033000
         B     @DE00586                                            0586 02034000
@DL00586 LTR   J,J                                                 0586 02035000
         BNZ   @DC00586                                            0586 02036000
*         IF SEVRCNT=0 THEN         /* ADD NEW ENTRY         @ZA20267*/ 02037000
         ICM   @15,3,SEVRCNT(SEVRPTR)                              0587 02038000
         BNZ   @RF00587                                            0587 02039000
*           DO;                     /* YES, ADD IT           @ZA20267*/ 02040000
*             J=1;                  /* GET OUT OF LOOP       @ZA20267*/ 02041000
         LA    @15,1                                               0589 02042000
         LR    J,@15                                               0589 02043000
*             SEVRCNT=1;            /* SET COUNT TO 1        @ZA20267*/ 02044000
         STH   @15,SEVRCNT(,SEVRPTR)                               0590 02045000
*             CALL SEVFILL;         /* MOVE DATA             @ZA20267*/ 02046000
         BAL   @14,SEVFILL                                         0591 02047000
*           END;                    /* END ADD NEW ENTRY     @ZA20267*/ 02048000
*         ELSE                      /* LOOK FOR DUPLICATE    @ZA20267*/ 02049000
*           IF TSEVCDID=SEVCDSID THEN /* DUPLICATE RECORD    @ZA20267*/ 02050000
         B     @RC00587                                            0593 02051000
@RF00587 CLC   TSEVCDID(4,SUMWKPTR),SEVCDSID(SEVRPTR)              0593 02052000
         BNE   @RF00593                                            0593 02053000
*             DO;                   /* YES, CHECK IT         @ZA20267*/ 02054000
*               J=1;                /* GET OUT OF LOOP       @ZA20267*/ 02055000
         LA    @15,1                                               0595 02056000
         LR    J,@15                                               0595 02057000
*               SEVRCNT=SEVRCNT+1;  /* ADD 1 TO COUNT        @ZA20267*/ 02058000
         SLR   @14,@14                                             0596 02059000
         ICM   @14,3,SEVRCNT(SEVRPTR)                              0596 02060000
         ALR   @15,@14                                             0596 02061000
         STH   @15,SEVRCNT(,SEVRPTR)                               0596 02062000
*               IF DATETIME>=SEVDATET THEN /* LATER DATE     @ZA20267*/ 02063000
         L     @01,LOGPTR(,SUMWKPTR)                               0597 02064000
         CLC   DATETIME(8,@01),SEVDATET(SEVRPTR)                   0597 02065000
         BL    @RF00597                                            0597 02066000
*                 CALL SEVFILL;     /* YES, REPLACE DATA     @ZA20267*/ 02067000
         BAL   @14,SEVFILL                                         0598 02068000
*               ELSE;               /* NO, KEEP OLD ENTRY    @ZA20267*/ 02069000
@RF00597 DS    0H                                                  0600 02070000
*             END;                  /* END FOUND DUPLICATE   @ZA20267*/ 02071000
*           ELSE                    /* NO MATCH, TABLE FULL  @ZA20267*/ 02072000
*             IF MINSEVCD>=SEVRCODE THEN /* LESSER CODE      @ZA20267*/ 02073000
         B     @RC00593                                            0601 02074000
@RF00593 CLC   MINSEVCD(2),SEVRCODE(SEVRPTR)                       0601 02075000
         BL    @RF00601                                            0601 02076000
*               DO;                 /* YES, SAVE NEW MIN     @ZA20267*/ 02077000
*                 MINSEVCD=SEVRCODE;/* SAVE SEVERITY CODE    @ZA20267*/ 02078000
         MVC   MINSEVCD(2),SEVRCODE(SEVRPTR)                       0603 02079000
*                 MINCDPTR=SEVRPTR; /* SAVE ADDRESS          @ZA20267*/ 02080000
         ST    SEVRPTR,MINCDPTR                                    0604 02081000
*               END;                /* END SAVE NEW MIN      @ZA20267*/ 02082000
*             ELSE;                 /* CURRENT MIN IS OK     @ZA20267*/ 02083000
@RF00601 DS    0H                                                  0607 02084000
*         SEVRPTR=SEVRPTR+LENGTH(SEVRLIST); /* GET NEXT      @ZA20267*/ 02085000
@RC00593 DS    0H                                                  0607 02086000
@RC00587 AL    SEVRPTR,@CF01012                                    0607 02087000
*       END;                        /* END LOOP SEVRLIST     @ZA20267*/ 02088000
         AH    I,@CH00083                                          0608 02089000
@DE00586 CL    I,SEVRLCNT(,SUMWKPTR)                               0608 02090000
         BNH   @DL00586                                            0608 02091000
@DC00586 DS    0H                                                  0609 02092000
*       IF J=0 THEN                 /* NO MATCH, TABLE FULL  @ZA20267*/ 02093000
         LTR   J,J                                                 0609 02094000
         BNZ   @RF00609                                            0609 02095000
*         IF TSEVCODE>=MINSEVCD THEN/* GREATER THAN MIN CODE @ZA20267*/ 02096000
         CLC   TSEVCODE(2,SUMWKPTR),MINSEVCD                       0610 02097000
         BL    @RF00610                                            0610 02098000
*           DO;                     /* YES, REPLACE MIN      @ZA20267*/ 02099000
*             SEVRPTR=MINCDPTR;     /* ADDR OF MIN ENTRY     @ZA20267*/ 02100000
         L     SEVRPTR,MINCDPTR                                    0612 02101000
*             SEVRCNT=1;            /* RESET COUNT TO 1      @ZA20267*/ 02102000
         MVC   SEVRCNT(2,SEVRPTR),@CH00083                         0613 02103000
*             CALL SEVFILL;         /* MOVE DATA             @ZA20267*/ 02104000
         BAL   @14,SEVFILL                                         0614 02105000
*           END;                    /* END REPLACE MIN       @ZA20267*/ 02106000
*         ELSE;                     /* DO NOT USE THIS DATA  @ZA20267*/ 02107000
@RF00610 DS    0H                                                  0617 02108000
*       ELSE;                       /* RECORD PUT IN TABLE   @ZA20267*/ 02109000
@RF00609 DS    0H                                                  0618 02110000
*     END;                          /* END PROCESS RECORD    @ZA20267*/ 02111000
*                                                                  0618 02112000
*   /*****************************************************************/ 02113000
*   /*                                                               */ 02114000
*   /* RECORD NOT FOUND IN THE SEVERITY TABLE - SEVTABG              */ 02115000
*   /*                                                               */ 02116000
*   /*****************************************************************/ 02117000
*                                                                  0619 02118000
*   ELSE                            /* REJECTED BY GETSCODE  @ZA20267*/ 02119000
*     DO;                           /* DEBUG                 @ZA20267*/ 02120000
         B     @RC00580                                            0619 02121000
@RF00580 DS    0H                                                  0620 02122000
*       IF RETCODE=8 THEN           /* NOT FOUND IN TABLES   @ZA20267*/ 02123000
         CH    RETCODE,@CH00071                                    0620 02124000
         BNE   @RF00620                                            0620 02125000
*         DO;                       /* DEBUG                 @ZA20267*/ 02126000
*           LINE='NO SEVERITY CODE COULD BE FOUND FOR THIS RECORD';     02127000
         MVI   LINE+47(CVTPTR),C' '                                0622 02128000
         MVC   LINE+48(84,CVTPTR),LINE+47(CVTPTR)                  0622 02129000
         MVC   LINE(47,CVTPTR),@CC00978                            0622 02130000
*           DUMPADDR=SDATAPTR;                                     0623 02131000
         MVC   DUMPADDR(4,CVTPTR),SDATAPTR(CVTPTR)                 0623 02132000
*           DUMPLEN=DLENGTH;                                       0624 02133000
         L     @15,SDA00PTR(,CVTPTR)                               0624 02134000
         LH    @14,DLENGTH(,@15)                                   0624 02135000
         ST    @14,DUMPLEN(,CVTPTR)                                0624 02136000
*           DUMPIDNO=NINREC;                                       0625 02137000
         MVC   DUMPIDNO(4,CVTPTR),NINREC(@15)                      0625 02138000
*           RFY                                                    0626 02139000
*             R1 RSTD;              /*                       @ZA20267*/ 02140000
*           R1=ADDR(WORKCALL);      /* R1 -> ADDR(WORKPTR)   @ZA20267*/ 02141000
         LA    R1,WORKCALL(,CVTPTR)                                0627 02142000
*           CALL ISDAHEXP;          /* DUMP THIS RECORD              */ 02143000
         L     @15,@CV00456                                        0628 02144000
         BALR  @14,@15                                             0628 02145000
*           RFY                                                    0629 02146000
*             R1 UNRSTD;            /* RELEASE REG 1         @ZA20267*/ 02147000
*         END;                                                     0630 02148000
*       ELSE;                                                      0631 02149000
@RF00620 DS    0H                                                  0632 02150000
*       RETCODE=0;                  /* IGNORE THIS RECORD    @ZA20267*/ 02151000
         SLR   RETCODE,RETCODE                                     0632 02152000
*     END;                          /* END RETCODE NOT 0     @ZA20267*/ 02153000
*   END SEVERITY;                   /* END PROC              @ZA20267*/ 02154000
@EL00016 DS    0H                                                  0634 02155000
@EF00016 DS    0H                                                  0634 02156000
@ER00016 L     @14,@SA00016                                        0634 02157000
         BR    @14                                                 0634 02158000
*                                                                  0635 02159000
*   /*****************************************************************/ 02160000
*   /*                                                               */ 02161000
*   /* GETSCODE - PROC TO SET THE SEVERITY CODE                      */ 02162000
*   /*                                                               */ 02163000
*   /*****************************************************************/ 02164000
*                                                                  0635 02165000
*GETSCODE:                                                         0635 02166000
*   PROC OPTIONS(SAVE(14));         /* SET SEVERITY CODE     @ZA20267*/ 02167000
GETSCODE ST    @14,12(,@13)                                        0635 02168000
*   RETCODE=8;                      /* SET NO FOUND FLAG     @ZA20267*/ 02169000
*                                                                  0636 02170000
         LA    RETCODE,8                                           0636 02171000
*   /*****************************************************************/ 02172000
*   /*                                                               */ 02173000
*   /* FORMAT 0 MSG CODE 06 AND 0C ONLY                              */ 02174000
*   /*                                                               */ 02175000
*   /*****************************************************************/ 02176000
*                                                                  0637 02177000
*   IF FORMATCK(1)='1'B THEN        /* FORMAT 0              @ZA20267*/ 02178000
         TM    FORMATCK(SUMWKPTR),B'10000000'                      0637 02179000
         BNO   @RF00637                                            0637 02180000
*     IF SUBFMTMG='06'X THEN        /* MESSAGE CODE 06       @ZA20267*/ 02181000
         L     @06,SENSEPTR(,SUMWKPTR)                             0638 02182000
         CLI   SUBFMTMG(@06),X'06'                                 0638 02183000
         BNE   @RF00638                                            0638 02184000
*       IF TSEVECOD(1:4)='0100'B THEN /* TERM CODE 40-4F     @ZA20267*/ 02185000
         TM    TSEVECOD(SUMWKPTR),B'01000000'                      0639 02186000
         BNO   @RF00639                                            0639 02187000
         TM    TSEVECOD(SUMWKPTR),B'10110000'                      0639 02188000
         BNZ   @RF00639                                            0639 02189000
*         DO;                       /* 40-4F ONLY            @ZA20267*/ 02190000
*           RETCODE=0;              /* IND FOUND SEVERITY    @ZA20267*/ 02191000
         SLR   RETCODE,RETCODE                                     0641 02192000
*           IF TPTFLAG='00'X THEN   /* TEMP ERROR            @ZA20267*/ 02193000
         CLI   TPTFLAG(SUMWKPTR),X'00'                             0642 02194000
         BNE   @RF00642                                            0642 02195000
*             TSEVCODE=101;         /* CODE 101              @ZA20267*/ 02196000
         MVC   TSEVCODE(2,SUMWKPTR),@CH00529                       0643 02197000
*           ELSE                    /* PERM ERROR            @ZA20267*/ 02198000
*             TSEVCODE=229;         /* CODE 229              @ZA20267*/ 02199000
         B     @RC00642                                            0644 02200000
@RF00642 MVC   TSEVCODE(2,SUMWKPTR),@CH00986                       0644 02201000
*         END;                      /* END 40-4F             @ZA20267*/ 02202000
*       ELSE                        /* NOT 40-4F             @ZA20267*/ 02203000
*         RETCODE=4;                /* IGNORE THIS RECORD    @ZA20267*/ 02204000
         B     @RC00639                                            0646 02205000
@RF00639 LA    RETCODE,4                                           0646 02206000
*     ELSE                          /* NOT MSG CODE 06       @ZA20267*/ 02207000
*       IF SUBFMTMG='0C'X THEN      /* MESSAGE CODE 0C       @ZA20267*/ 02208000
         B     @RC00638                                            0647 02209000
@RF00638 L     @06,SENSEPTR(,SUMWKPTR)                             0647 02210000
         CLI   SUBFMTMG(@06),X'0C'                                 0647 02211000
         BNE   @RF00647                                            0647 02212000
*         IF TSEVECOD='00'X|TSEVECOD='03'X THEN /* 00, 03    @ZA20267*/ 02213000
         CLI   TSEVECOD(SUMWKPTR),X'00'                            0648 02214000
         BE    @RT00648                                            0648 02215000
         CLI   TSEVECOD(SUMWKPTR),X'03'                            0648 02216000
         BNE   @RF00648                                            0648 02217000
@RT00648 DS    0H                                                  0649 02218000
*           DO;                     /* YES, TERM 00 OR 03    @ZA20267*/ 02219000
*             RETCODE=0;            /* IND FOUND SEVERITY    @ZA20267*/ 02220000
         SLR   RETCODE,RETCODE                                     0650 02221000
*             IF TPTFLAG='00'X THEN /* TEMP ERROR            @ZA20267*/ 02222000
         CLI   TPTFLAG(SUMWKPTR),X'00'                             0651 02223000
         BNE   @RF00651                                            0651 02224000
*               TSEVCODE=107;       /* CODE 107              @ZA20267*/ 02225000
         MVC   TSEVCODE(2,SUMWKPTR),@CH00989                       0652 02226000
*             ELSE                  /* PERM ERROR            @ZA20267*/ 02227000
*               TSEVCODE=235;       /* CODE 235              @ZA20267*/ 02228000
         B     @RC00651                                            0653 02229000
@RF00651 MVC   TSEVCODE(2,SUMWKPTR),@CH00990                       0653 02230000
*           END;                    /* END 0C 00 OR 03       @ZA20267*/ 02231000
*         ELSE                      /* NOT 00 OR 03          @ZA20267*/ 02232000
*             RETCODE=4;            /* IGNORE THIS RECORD    @ZA20267*/ 02233000
         B     @RC00648                                            0655 02234000
@RF00648 LA    RETCODE,4                                           0655 02235000
*       ELSE;                       /* NOT MESSAGE CODE 0C   @ZA20267*/ 02236000
@RF00647 DS    0H                                                  0657 02237000
*   ELSE;                           /* NOT FORMAT 0          @ZA20267*/ 02238000
@RF00637 DS    0H                                                  0658 02239000
*   IF RETCODE=8 THEN               /* NOT FOUND YET         @ZA20267*/ 02240000
*                                                                  0658 02241000
@RC00637 CH    RETCODE,@CH00071                                    0658 02242000
         BNE   @RF00658                                            0658 02243000
*     /***************************************************************/ 02244000
*     /*                                                             */ 02245000
*     /*   GENERAL SEARCH FOR ALL OTHER FORMATS USING SEVTABG        */ 02246000
*     /*                                                             */ 02247000
*     /***************************************************************/ 02248000
*                                                                  0659 02249000
*     DO;                           /* ALL OTHER FORMATS     @ZA20267*/ 02250000
*       TABPTR=ADDR(SEVTABG);       /* START GENERAL TABLE   @ZA20267*/ 02251000
         LA    TABPTR,SEVTABG                                      0660 02252000
*       J=ADDR(ENDTABG);            /* END GENERAL TABLE     @ZA20267*/ 02253000
         LA    J,ENDTABG                                           0661 02254000
*       DO WHILE(RETCODE=8&TABPTR<=J); /* LOOP SEVTABG       @ZA20267*/ 02255000
         B     @DE00662                                            0662 02256000
@DL00662 DS    0H                                                  0663 02257000
*         IF TSEVFMTS=TABHW THEN    /* FORMAT + SUB MATCH    @ZA20267*/ 02258000
         CLC   TSEVFMTS(2,SUMWKPTR),TABHW(TABPTR)                  0663 02259000
         BNE   @RF00663                                            0663 02260000
*           DO;                     /* YES, FOUND IT         @ZA20267*/ 02261000
*             RETCODE=0;            /* IND FOUND SEVERITY    @ZA20267*/ 02262000
         SLR   RETCODE,RETCODE                                     0665 02263000
*             IF TPTFLAG='00'X THEN /* TEMP ERROR            @ZA20267*/ 02264000
         CLI   TPTFLAG(SUMWKPTR),X'00'                             0666 02265000
         BNE   @RF00666                                            0666 02266000
*               TSEVCODE=TABLOSEV;  /* USE LOW SEVERITY      @ZA20267*/ 02267000
         MVC   TSEVCODE(2,SUMWKPTR),TABLOSEV(TABPTR)               0667 02268000
*             ELSE                  /* PERM ERROR            @ZA20267*/ 02269000
*               TSEVCODE=TABHISEV;  /* USE HIGH SEVERITY     @ZA20267*/ 02270000
         B     @RC00666                                            0668 02271000
@RF00666 MVC   TSEVCODE(2,SUMWKPTR),TABHISEV(TABPTR)               0668 02272000
*           END;                    /* END FOUND MATCH       @ZA20267*/ 02273000
*         ELSE;                     /* NO MATCH YET          @ZA20267*/ 02274000
@RF00663 DS    0H                                                  0671 02275000
*         TABPTR=TABPTR+LENGTH(TABGMOD); /* GET NEXT ENTRY   @ZA20267*/ 02276000
@RC00663 AH    TABPTR,@CH00095                                     0671 02277000
*       END;                        /* END LOOP SEVTABG      @ZA20267*/ 02278000
@DE00662 CH    RETCODE,@CH00071                                    0672 02279000
         BNE   @DC00662                                            0672 02280000
         CR    TABPTR,J                                            0672 02281000
         BNH   @DL00662                                            0672 02282000
@DC00662 DS    0H                                                  0673 02283000
*     END;                          /* END GENERAL SEARCH    @ZA20267*/ 02284000
*   ELSE;                           /* NOT RETCODE 8         @ZA20267*/ 02285000
@RF00658 DS    0H                                                  0675 02286000
*   END GETSCODE;                   /* END PROC              @ZA20267*/ 02287000
@EL00017 DS    0H                                                  0675 02288000
@EF00017 DS    0H                                                  0675 02289000
@ER00017 L     @14,12(,@13)                                        0675 02290000
         BR    @14                                                 0675 02291000
*                                                                  0676 02292000
*   /*****************************************************************/ 02293000
*   /*                                                               */ 02294000
*   /* SEVFILL - PROC TO MOVE DATA TO THE SEVERITY LIST - SEVRLIST  */  02295000
*   /*                                                               */ 02296000
*   /*****************************************************************/ 02297000
*                                                                  0676 02298000
*SEVFILL:                                                          0676 02299000
*   PROC OPTIONS(SAVE(14));         /* MOVE SEVERITY DATA    @ZA20267*/ 02300000
SEVFILL  ST    @14,12(,@13)                                        0676 02301000
*   SEVHMOVE=TSEVTEMP;              /* MOVE HEADER           @ZA20267*/ 02302000
         MVC   SEVHMOVE(9,SEVRPTR),TSEVTEMP(SUMWKPTR)              0677 02303000
*   SEVSDAWK=ISDAWORK;              /* MOVE SDA WORK AREA    @ZA20267*/ 02304000
         L     @15,SDA00PTR(,CVTPTR)                               0678 02305000
         MVC   SEVSDAWK(20,SEVRPTR),ISDAWORK(@15)                  0678 02306000
*   SEVSDPTR=SDATAPTR-DATAPTR;      /* GET OFFSET FOR SENSE  @ZA20267*/ 02307000
         L     @14,DATAPTR(,CVTPTR)                                0679 02308000
         L     @09,SDATAPTR(,CVTPTR)                               0679 02309000
         SLR   @09,@14                                             0679 02310000
         ST    @09,SEVSDPTR(,SEVRPTR)                              0679 02311000
*   SEVDEVPT=DEVPTR-DATAPTR;        /* GET OFFSET FOR DEVPTR @ZA20267*/ 02312000
         LCR   @14,@14                                             0680 02313000
         AL    @14,DEVPTR(,@15)                                    0680 02314000
         ST    @14,SEVDEVPT(,SEVRPTR)                              0680 02315000
*   SEVDATA=OBRMDR(1:SLENGTH);     /* MOVE LOG DATA          @ZA32156*/ 02316000
         MVI   SEVDATA+1(SEVRPTR),C' '                             0681 02317000
         MVC   SEVDATA+2(126,SEVRPTR),SEVDATA+1(SEVRPTR)           0681 02318000
         L     @15,LOGPTR(,SUMWKPTR)                               0681 02319000
         LH    @14,SLENGTH(,@15)                                   0681 02320000
         BCTR  @14,0                                               0681 02321000
         EX    @14,@SM01024                                        0681 02322000
*   END SEVFILL;                    /* END PROC              @ZA20267*/ 02323000
@EL00018 DS    0H                                                  0682 02324000
@EF00018 DS    0H                                                  0682 02325000
@ER00018 L     @14,12(,@13)                                        0682 02326000
         BR    @14                                                 0682 02327000
*                                                                  0683 02328000
*   /*****************************************************************/ 02329000
*   /*                                                               */ 02330000
*   /* CHKPARMS - PROC TO CHECK SSID, DEVTYPE, AND FSCODE OPTIONS    */ 02331000
*   /*            FOR SELECTIVE DETAIL PRINT OF INPUT DATA           */ 02332000
*   /*                                                               */ 02333000
*   /*****************************************************************/ 02334000
*CHKPARMS:                                                         0683 02335000
*   PROC OPTIONS(SAVE(14));         /* CHECK SDA PARMS       @ZM31121*/ 02336000
CHKPARMS ST    @14,12(,@13)                                        0683 02337000
*   IF CDETAIL='00'X THEN           /* NO DETAIL PRINT       @ZM31121*/ 02338000
         L     @06,LPARMPTR                                        0684 02339000
         CLI   CDETAIL(@06),X'00'                                  0684 02340000
         BNE   @RF00684                                            0684 02341000
*     I=2;                          /* SET NO PRINT          @ZM31121*/ 02342000
         LA    I,2                                                 0685 02343000
*   ELSE                            /* CHECK MORE PARMS      @ZM31121*/ 02344000
*     IF CTYPE='  '&CSSIDF='0000'X&CFSCONLY='00000000'X THEN/*     0686 02345000
*                                      NO PARM CHECKS        @ZM31121*/ 02346000
         B     @RC00684                                            0686 02347000
@RF00684 L     @06,LPARMPTR                                        0686 02348000
         CLC   CTYPE(2,@06),@CC00880                               0686 02349000
         BNE   @RF00686                                            0686 02350000
         CLC   CSSIDF(2,@06),@CB00997                              0686 02351000
         BNE   @RF00686                                            0686 02352000
         CLC   CFSCONLY(4,@06),@CB00998                            0686 02353000
         BNE   @RF00686                                            0686 02354000
*       I=0;                        /* PRINT DETAIL          @ZM31121*/ 02355000
         SLR   I,I                                                 0687 02356000
*     ELSE                          /* CHECK SSID            @ZM31121*/ 02357000
*       I=1;                        /* MAY PRINT             @ZM31121*/ 02358000
         B     @RC00686                                            0688 02359000
@RF00686 LA    I,1                                                 0688 02360000
*   IF I=1 THEN                     /* CHECK FURTHER         @ZM31121*/ 02361000
@RC00686 DS    0H                                                  0689 02362000
@RC00684 CH    I,@CH00083                                          0689 02363000
         BNE   @RF00689                                            0689 02364000
*     DO;                           /* YES, GET SSID,DEV,FSC @ZM31121*/ 02365000
*                                                                  0690 02366000
*       /*************************************************************/ 02367000
*       /*                                                           */ 02368000
*       /* GET SSID, FSC, AND DEVICE TYPE FOR LATER TESTING          */ 02369000
*       /*                                                           */ 02370000
*       /*************************************************************/ 02371000
*                                                                  0691 02372000
*       TEMP2=''B;                  /* ZERO SSID FIELD       @ZM31121*/ 02373000
         XC    TEMP2(2,SUMWKPTR),TEMP2(SUMWKPTR)                   0691 02374000
*       TEMP710=''B;                /* ZERO FSC FIELD        @ZM31121*/ 02375000
         XC    TEMP710(4,SUMWKPTR),TEMP710(SUMWKPTR)               0692 02376000
*       TEMP78=''B;                 /* ZERO DEVICE TYPE FIELD@ZM31121*/ 02377000
         XC    TEMP78(2,SUMWKPTR),TEMP78(SUMWKPTR)                 0693 02378000
*       IF INDEVTYP='S' THEN        /* MSC RECORD            @ZM31121*/ 02379000
         L     @06,SDA00PTR(,CVTPTR)                               0694 02380000
         CLI   INDEVTYP(@06),C'S'                                  0694 02381000
         BNE   @RF00694                                            0694 02382000
*         DO;                       /* GET MSC SSID, FSC     @ZM31121*/ 02383000
*           TEMP2=SUBSYSID&'0FFF'X; /* YES, GET SSID         @ZM31121*/ 02384000
         L     @06,SENSEPTR(,SUMWKPTR)                             0696 02385000
         MVC   TEMP2(2,SUMWKPTR),SUBSYSID(@06)                     0696 02386000
         NC    TEMP2(2,SUMWKPTR),@CB00973                          0696 02387000
*           IF CTYPE^='  ' THEN     /* WANT SPECIFIC DEVICE  @ZM31121*/ 02388000
         L     @06,LPARMPTR                                        0697 02389000
         CLC   CTYPE(2,@06),@CC00880                               0697 02390000
         BE    @RF00697                                            0697 02391000
*             IF FORMATCK(4)='1'B THEN/* FORMAT 3            @ZM31121*/ 02392000
         TM    FORMATCK(SUMWKPTR),B'00010000'                      0698 02393000
         BNO   @RF00698                                            0698 02394000
*               TEMP78='CS';        /* SET CARTRIDGE STORE   @ZM31121*/ 02395000
         MVC   TEMP78(2,SUMWKPTR),@CC00999                         0699 02396000
*             ELSE                  /* CHECK FORMAT 4        @ZM31121*/ 02397000
*               IF FORMATCK(5)='1'B THEN/* FORMAT 4          @ZM31121*/ 02398000
         B     @RC00698                                            0700 02399000
@RF00698 TM    FORMATCK(SUMWKPTR),B'00001000'                      0700 02400000
         BNO   @RF00700                                            0700 02401000
*                 IF SUBFMTNO='1001'B|SUBFMTNO='1101'B THEN/*      0701 02402000
*                                      SA FORMAT 9 OR D      @ZM31121*/ 02403000
         L     @06,SENSEPTR(,SUMWKPTR)                             0701 02404000
         TM    SUBFMTNO(@06),B'10010000'                           0701 02405000
         BNO   @GL00022                                            0701 02406000
         TM    SUBFMTNO(@06),B'01100000'                           0701 02407000
         BZ    @RT00701                                            0701 02408000
@GL00022 L     @06,SENSEPTR(,SUMWKPTR)                             0701 02409000
         TM    SUBFMTNO(@06),B'11010000'                           0701 02410000
         BNO   @RF00701                                            0701 02411000
         TM    SUBFMTNO(@06),B'00100000'                           0701 02412000
         BNZ   @RF00701                                            0701 02413000
@RT00701 DS    0H                                                  0702 02414000
*                   TEMP78='RD';    /* SET DRD               @ZM31121*/ 02415000
         MVC   TEMP78(2,SUMWKPTR),@CC01002                         0702 02416000
*                 ELSE                                             0703 02417000
*                   IF SUBFMTNO='1011'B THEN/* SA FORMAT B   @ZM31121*/ 02418000
         B     @RC00701                                            0703 02419000
@RF00701 L     @06,SENSEPTR(,SUMWKPTR)                             0703 02420000
         TM    SUBFMTNO(@06),B'10110000'                           0703 02421000
         BNO   @RF00703                                            0703 02422000
         TM    SUBFMTNO(@06),B'01000000'                           0703 02423000
         BNZ   @RF00703                                            0703 02424000
*                     IF TEMP1='02'X THEN/* DRD SSID         @ZM31121*/ 02425000
         CLI   TEMP1(SUMWKPTR),X'02'                               0704 02426000
         BNE   @RF00704                                            0704 02427000
*                       TEMP78='RD';/* SET DRD               @ZM31121*/ 02428000
         MVC   TEMP78(2,SUMWKPTR),@CC01002                         0705 02429000
*                     ELSE          /* MUST BE DRC OR SA     @ZM31121*/ 02430000
*                       TEMP78='RC';/* SET DRC               @ZM31121*/ 02431000
         B     @RC00704                                            0706 02432000
@RF00704 MVC   TEMP78(2,SUMWKPTR),@CC01005                         0706 02433000
*                   ELSE                                           0707 02434000
*                     IF SUBFMTNO='1110'B THEN/* SA FORMAT E @ZM31121*/ 02435000
         B     @RC00703                                            0707 02436000
@RF00703 L     @06,SENSEPTR(,SUMWKPTR)                             0707 02437000
         TM    SUBFMTNO(@06),B'11100000'                           0707 02438000
         BNO   @RF00707                                            0707 02439000
         TM    SUBFMTNO(@06),B'00010000'                           0707 02440000
         BNZ   @RF00707                                            0707 02441000
*                       TEMP78='RC';/* SET DRC               @ZM31121*/ 02442000
         MVC   TEMP78(2,SUMWKPTR),@CC01005                         0708 02443000
*                     ELSE          /* SA FORMAT A OR C      @ZM31121*/ 02444000
*                       TEMP78='SA';/* SET SA                @ZM31121*/ 02445000
         B     @RC00707                                            0709 02446000
@RF00707 MVC   TEMP78(2,SUMWKPTR),@CC01007                         0709 02447000
*               ELSE                /* CHECK FORMAT 5        @ZM31121*/ 02448000
*                 IF FORMATCK(6)='1'B THEN/* FORMAT 5        @ZM31121*/ 02449000
         B     @RC00700                                            0710 02450000
@RF00700 TM    FORMATCK(SUMWKPTR),B'00000100'                      0710 02451000
         BNO   @RF00710                                            0710 02452000
*                   TEMP78='DA';    /* SET DASD              @ZM31121*/ 02453000
         MVC   TEMP78(2,SUMWKPTR),@CC01008                         0711 02454000
*                 ELSE              /* NOT FORMAT 3,4, OR 5  @ZM31121*/ 02455000
*                   I=2;            /* NO PRINT FOR SURE     @ZM31121*/ 02456000
         B     @RC00710                                            0712 02457000
@RF00710 LA    I,2                                                 0712 02458000
*           ELSE;                   /* NOT LOOKING FOR DEVICE@ZM31121*/ 02459000
@RF00697 DS    0H                                                  0714 02460000
*           IF CFSCONLY^='00000000'X THEN/* WANT FSC ONLY    @ZM31121*/ 02461000
@RC00697 L     @06,LPARMPTR                                        0714 02462000
         CLC   CFSCONLY(4,@06),@CB00998                            0714 02463000
         BE    @RF00714                                            0714 02464000
*             IF FORMATCK(1)='0'B THEN/* NOT FORMAT 0        @ZM31121*/ 02465000
         TM    FORMATCK(SUMWKPTR),B'10000000'                      0715 02466000
         BNZ   @RF00715                                            0715 02467000
*               IF FORMATCK(4)='0'B THEN/* NOT FORMAT 3      @ZM31121*/ 02468000
         TM    FORMATCK(SUMWKPTR),B'00010000'                      0716 02469000
         BNZ   @RF00716                                            0716 02470000
*                 TEMP710(1:2)=MSCFSC;/* MOVE BYTES 26,27    @ZM31121*/ 02471000
         L     @06,SENSEPTR(,SUMWKPTR)                             0717 02472000
         MVC   TEMP710(2,SUMWKPTR),MSCFSC(@06)                     0717 02473000
*               ELSE                /* FORMAT 3 RECORD       @ZM31121*/ 02474000
*                 DO;               /* GET TWO FSCS          @ZM31121*/ 02475000
         B     @RC00716                                            0718 02476000
@RF00716 DS    0H                                                  0719 02477000
*                   TEMP710=FSCACC1;/* FSC FOR ACC1          @ZM31121*/ 02478000
         L     @06,SENSEPTR(,SUMWKPTR)                             0719 02479000
         MVC   TEMP710(4,SUMWKPTR),FSCACC1(@06)                    0719 02480000
*                   TEMP1417=FSCACC2;/* FSC FOR ACC2         @ZM31121*/ 02481000
         MVC   TEMP1417(4,SUMWKPTR),FSCACC2(@06)                   0720 02482000
*                 END;              /* END CS SENSE          @ZM31121*/ 02483000
*             ELSE                  /* FORMAT 0 NO FSC       @ZM31121*/ 02484000
*               I=2;                /* NO PRINT FOR SURE     @ZM31121*/ 02485000
         B     @RC00715                                            0722 02486000
@RF00715 LA    I,2                                                 0722 02487000
*           ELSE;                   /* FSC NOT REQUESTED     @ZM31121*/ 02488000
@RF00714 DS    0H                                                  0724 02489000
*         END;                      /* END MSC RECORDS       @ZM31121*/ 02490000
*       ELSE                        /* DASD RECORD           @ZM31121*/ 02491000
*         DO;                       /* SETUP FOR DASD        @ZM31121*/ 02492000
         B     @RC00694                                            0725 02493000
@RF00694 DS    0H                                                  0726 02494000
*           TEMP78='DA';            /* DEVICE TYPE           @ZM31121*/ 02495000
         MVC   TEMP78(2,SUMWKPTR),@CC01008                         0726 02496000
*           TEMP710(1:2)=DASDFSC;   /* FAULT SYMPTOM CODE    @ZM31121*/ 02497000
         L     @06,SENSEPTR(,SUMWKPTR)                             0727 02498000
         MVC   TEMP710(2,SUMWKPTR),DASDFSC(@06)                    0727 02499000
*           IF INDEVTYP='V' THEN    /* STAGING DASD          @ZM31121*/ 02500000
         L     @05,SDA00PTR(,CVTPTR)                               0728 02501000
         CLI   INDEVTYP(@05),C'V'                                  0728 02502000
         BNE   @RF00728                                            0728 02503000
*             DO;                   /* YES                   @ZM31121*/ 02504000
*               TEMP2=MSCFSC;       /* GET BYTE 26,27        @ZM31121*/ 02505000
         MVC   TEMP2(2,SUMWKPTR),MSCFSC(@06)                       0730 02506000
*               TEMP1=''B;          /* ZERO BYTE 26          @ZM31121*/ 02507000
         MVI   TEMP1(SUMWKPTR),X'00'                               0731 02508000
*             END;                  /* END STAGING SSID      @ZM31121*/ 02509000
*           ELSE                    /* REAL DASD             @ZM31121*/ 02510000
*             IF CSSIDF^='0000'X THEN/* LOOKING FOR SSID     @ZM31121*/ 02511000
         B     @RC00728                                            0733 02512000
@RF00728 L     @06,LPARMPTR                                        0733 02513000
         CLC   CSSIDF(2,@06),@CB00997                              0733 02514000
         BE    @RF00733                                            0733 02515000
*               I=2;                /* NO PRINT FOR SURE     @ZM31121*/ 02516000
         LA    I,2                                                 0734 02517000
*             ELSE;                 /* OK TO USE REAL DASD   @ZM31121*/ 02518000
@RF00733 DS    0H                                                  0736 02519000
*         END;                      /* END DASD SETUP        @ZM31121*/ 02520000
*     END;                          /* END PARM SETUP        @ZM31121*/ 02521000
*   ELSE;                           /* NO PARM SETUP NEEDED  @ZM31121*/ 02522000
*                                                                  0738 02523000
@RF00689 DS    0H                                                  0739 02524000
*   /*****************************************************************/ 02525000
*   /*                                                               */ 02526000
*   /* DO NOT PRINT REAL 3330 FORMAT 6 IF DETAIL(ALL)                */ 02527000
*   /*                                                               */ 02528000
*   /*****************************************************************/ 02529000
*                                                                  0739 02530000
*   IF INDEVTYP='R'&CDETAIL(1:6)='111111'B THEN /* REAL 3330       0739 02531000
*                                             AND DETAIL ALL @ZA11010*/ 02532000
@RC00689 L     @06,SDA00PTR(,CVTPTR)                               0739 02533000
         CLI   INDEVTYP(@06),C'R'                                  0739 02534000
         BNE   @RF00739                                            0739 02535000
         L     @06,LPARMPTR                                        0739 02536000
         TM    CDETAIL(@06),B'11111100'                            0739 02537000
         BNO   @RF00739                                            0739 02538000
*     IF SUBFMASK='60'X THEN        /* YES, FORMAT 6 RECORD  @ZA11010*/ 02539000
         CLI   SUBFMASK(SUMWKPTR),X'60'                            0740 02540000
         BNE   @RF00740                                            0740 02541000
*       I=2;                        /* YES, DO NOT PRINT IT  @ZA11010*/ 02542000
         LA    I,2                                                 0741 02543000
*     ELSE;                         /* NOT FORMAT 6          @ZA11010*/ 02544000
@RF00740 DS    0H                                                  0743 02545000
*   ELSE;                           /* NOT REAL DASD         @ZA11010*/ 02546000
@RF00739 DS    0H                                                  0744 02547000
*   IF I=1 THEN                     /* STILL CHECKING        @ZM31121*/ 02548000
*                                                                  0744 02549000
         CH    I,@CH00083                                          0744 02550000
         BNE   @RF00744                                            0744 02551000
*     /***************************************************************/ 02552000
*     /*                                                             */ 02553000
*     /* CHECK DEVICE TYPE AND SSID AND FAULT SYMPTOM CODE           */ 02554000
*     /*                                                             */ 02555000
*     /***************************************************************/ 02556000
*                                                                  0745 02557000
*     DO;                           /* CHECK EACH FIELD      @ZM31121*/ 02558000
*       IF CSSIDF^='0000'X THEN     /* WANT SPECIFIC SSID    @ZM31121*/ 02559000
         L     @06,LPARMPTR                                        0746 02560000
         CLC   CSSIDF(2,@06),@CB00997                              0746 02561000
         BE    @RF00746                                            0746 02562000
*         IF CSSIDF=TEMP2 THEN      /* HAVE SSID MATCH       @ZM31121*/ 02563000
         CLC   CSSIDF(2,@06),TEMP2(SUMWKPTR)                       0747 02564000
         BNE   @RF00747                                            0747 02565000
*           I=0;                    /* YES, PRINT IT         @ZM31121*/ 02566000
         SLR   I,I                                                 0748 02567000
*         ELSE                      /* NOT RIGHT SSID        @ZM31121*/ 02568000
*           I=2;                    /* NO PRINT FOR SURE     @ZM31121*/ 02569000
         B     @RC00747                                            0749 02570000
@RF00747 LA    I,2                                                 0749 02571000
*       ELSE;                       /* NOT LOOKING FOR SSID  @ZM31121*/ 02572000
@RF00746 DS    0H                                                  0751 02573000
*       IF CTYPE^='  '&I^=2 THEN    /* LOOKING FOR DEVICE    @ZM31121*/ 02574000
@RC00746 L     @06,LPARMPTR                                        0751 02575000
         CLC   CTYPE(2,@06),@CC00880                               0751 02576000
         BE    @RF00751                                            0751 02577000
         CH    I,@CH00102                                          0751 02578000
         BE    @RF00751                                            0751 02579000
*         IF CTYPE=TEMP78 THEN      /* YES, CHECK IT         @ZM31121*/ 02580000
         CLC   CTYPE(2,@06),TEMP78(SUMWKPTR)                       0752 02581000
         BNE   @RF00752                                            0752 02582000
*           I=0;                    /* PRINT IT              @ZM31121*/ 02583000
         SLR   I,I                                                 0753 02584000
*         ELSE                      /* WRONG DEVICE TYPE     @ZM31121*/ 02585000
*           I=2;                    /* NO PRINT FOR SURE     @ZM31121*/ 02586000
         B     @RC00752                                            0754 02587000
@RF00752 LA    I,2                                                 0754 02588000
*       ELSE;                       /* NOT LOOKING FOR DEV   @ZM31121*/ 02589000
@RF00751 DS    0H                                                  0756 02590000
*       IF CFSCONLY^='00000000'X&I^=2 THEN /* WANT FSC ONLY  @ZM31121*/ 02591000
@RC00751 L     @06,LPARMPTR                                        0756 02592000
         CLC   CFSCONLY(4,@06),@CB00998                            0756 02593000
         BE    @RF00756                                            0756 02594000
         CH    I,@CH00102                                          0756 02595000
         BE    @RF00756                                            0756 02596000
*         IF CFSCONLY=TEMP710 THEN  /* FOUND FSC MATCH       @ZM31121*/ 02597000
         CLC   CFSCONLY(4,@06),TEMP710(SUMWKPTR)                   0757 02598000
         BNE   @RF00757                                            0757 02599000
*           I=0;                    /* YES, PRINT IT         @ZM31121*/ 02600000
         SLR   I,I                                                 0758 02601000
*         ELSE                      /* CHECK ACC2 IF FMT 3   @ZM31121*/ 02602000
*           IF FORMATCK(4)='1'B&CFSCONLY=TEMP1417 THEN/* MATCH     0759 02603000
*                                      ON ACC2 FSC           @ZM31121*/ 02604000
         B     @RC00757                                            0759 02605000
@RF00757 TM    FORMATCK(SUMWKPTR),B'00010000'                      0759 02606000
         BNO   @RF00759                                            0759 02607000
         L     @06,LPARMPTR                                        0759 02608000
         CLC   CFSCONLY(4,@06),TEMP1417(SUMWKPTR)                  0759 02609000
         BNE   @RF00759                                            0759 02610000
*             I=0;                  /* YES, PRINT IT         @ZM31121*/ 02611000
         SLR   I,I                                                 0760 02612000
*           ELSE                    /* WRONG FSC             @ZM31121*/ 02613000
*             I=2;                  /* NO PRINT FOR SURE     @ZM31121*/ 02614000
         B     @RC00759                                            0761 02615000
@RF00759 LA    I,2                                                 0761 02616000
*       ELSE;                       /* NOT LOOKING FOR FSC   @ZM31121*/ 02617000
@RF00756 DS    0H                                                  0763 02618000
*     END;                          /* END ALL CHECKS        @ZM31121*/ 02619000
*   ELSE;                           /* I=2 ALREADY           @ZM31121*/ 02620000
*                                                                  0764 02621000
@RF00744 DS    0H                                                  0765 02622000
*   /*****************************************************************/ 02623000
*   /*                                                               */ 02624000
*   /* TURN DETAIL FLAG ON IF I=0                                    */ 02625000
*   /*                                                               */ 02626000
*   /*****************************************************************/ 02627000
*                                                                  0765 02628000
*   IF I=0 THEN                     /* PRINT RECORD MAYBE    @ZM31121*/ 02629000
@RC00744 LTR   I,I                                                 0765 02630000
         BNZ   @RF00765                                            0765 02631000
*     TEMP1=FORMATCK&CDETAIL;       /* USE DETAIL AS MASK AGAINST  0766 02632000
*                                      FORMATNO              @Y30LB55*/ 02633000
         MVC   TEMP1(1,SUMWKPTR),FORMATCK(SUMWKPTR)                0766 02634000
         L     @06,LPARMPTR                                        0766 02635000
         NC    TEMP1(1,SUMWKPTR),CDETAIL(@06)                      0766 02636000
*   ELSE                            /* DO NOT PRINT RECORD   @ZM31121*/ 02637000
*     TEMP1=''B;                    /* FORCE NO PRINT        @ZM31121*/ 02638000
         B     @RC00765                                            0767 02639000
@RF00765 MVI   TEMP1(SUMWKPTR),X'00'                               0767 02640000
*   END CHKPARMS;                   /* END PROC              @ZM31121*/ 02641000
@EL00019 DS    0H                                                  0768 02642000
@EF00019 DS    0H                                                  0768 02643000
@ER00019 L     @14,12(,@13)                                        0768 02644000
         BR    @14                                                 0768 02645000
*   END ISDASUM0                    /* END OF SUM0           @Y30LB55*/ 02646000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 02647000
*/*%INCLUDE SYSLIB  (ISDACVT )                                        * 02648000
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                        * 02649000
*/*%INCLUDE SYSLIB  (ISDAGHDR)                                        * 02650000
*/*%INCLUDE SYSLIB  (ISDALOBR)                                        * 02651000
*/*%INCLUDE SYSLIB  (ISDAMSCS)                                        * 02652000
*/*%INCLUDE SYSLIB  (ISDAWORK)                                        * 02653000
*/*%INCLUDE SYSLIB  (ISDAMCFG)                                        * 02654000
*/*%INCLUDE SYSLIB  (ISDAMSC3)                                        * 02655000
*/*%INCLUDE SYSLIB  (ISDASUM5)                                        * 02656000
*;                                                                 0769 02657000
@DATA    DS    0H                                                       02658000
@CH00083 DC    H'1'                                                     02659000
@CH00102 DC    H'2'                                                     02660000
@CH00087 DC    H'3'                                                     02661000
@CH00106 DC    H'4'                                                     02662000
@CH00180 DC    H'5'                                                     02663000
@CH00095 DC    H'6'                                                     02664000
@CH00071 DC    H'8'                                                     02665000
@CH00207 DC    H'16'                                                    02666000
@CH00345 DC    H'20'                                                    02667000
@CH00221 DC    H'28'                                                    02668000
@CH01011 DC    H'48'                                                    02669000
@CH00441 DC    H'59'                                                    02670000
@CH00529 DC    H'101'                                                   02671000
@CH00989 DC    H'107'                                                   02672000
@CH00986 DC    H'229'                                                   02673000
@CH00990 DC    H'235'                                                   02674000
@CH00408 DC    H'256'                                                   02675000
@CH00909 DC    XL2'39'                                                  02676000
@SM01024 MVC   SEVDATA(0,SEVRPTR),OBRMDR(@15)                           02677000
@DATD    DSECT                                                          02678000
         DS    0F                                                       02679000
@SA00001 DS    18F                                                      02680000
@PC00001 DS    1F                                                       02681000
@SA00014 DS    1F                                                       02682000
@SA00016 DS    1F                                                       02683000
@SA00002 DS    1F                                                       02684000
@SA00003 DS    0F                                                       02685000
@SA00013 DS    0F                                                       02686000
         DS    1F                                                       02687000
@TF00001 DS    F                                                        02688000
ISDASUM0 CSECT                                                          02689000
         DS    0F                                                       02690000
@CF01012 DC    F'168'                                                   02691000
@CH01012 EQU   @CF01012+2                                               02692000
@CF00612 DC    F'233'                                                   02693000
@CF00410 DC    F'1024'                                                  02694000
@DATD    DSECT                                                          02695000
         DS    0D                                                       02696000
LPARMPTR DS    A                                                        02697000
GET0PTR  DS    A                                                        02698000
MINCDPTR DS    A                                                        02699000
MINSEVCD DS    H                                                        02700000
@TS00001 DS    CL2                                                      02701000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02702000
@ENDDATD EQU   *                                                        02703000
ISDASUM0 CSECT                                                          02704000
         NOPR  ((@ENDDATD-@DATD)/161*16)                                02705000
         DS    0F                                                       02706000
@SIZDATD DC    AL1(0)                                                   02707000
         DC    AL3(@ENDDATD-@DATD)                                      02708000
@CA00406 DC    A(ISDASUM2)                                              02709000
@CV00453 DC    V(ISDAGET0)                                              02710000
@CV00454 DC    V(ISDAGET1)                                              02711000
@CV00455 DC    V(ISDAFREE)                                              02712000
@CV00456 DC    V(ISDAHEXP)                                              02713000
@CV00457 DC    V(ISDAPRT0)                                              02714000
         DS    0D                                                       02715000
@CC00978 DC    C'NO SEVERITY CODE COULD BE FOUND FOR THIS RECORD'       02716000
@CC00911 DC    C'FORMAT '                                               02717000
@CC00917 DC    C'STAGING'                                               02718000
@CC00921 DC    C'  REAL '                                               02719000
@CC00910 DC    C' MSC'                                                  02720000
@CC00915 DC    C'3330'                                                  02721000
@CC00957 DC    C'SUM0'                                                  02722000
@CC00896 DC    C'VS1'                                                   02723000
@CC00898 DC    C'VS2'                                                   02724000
@CC00900 DC    C' OS'                                                   02725000
@CC00902 DC    C'DOS'                                                   02726000
@CC00904 DC    C' VM'                                                   02727000
@CC00906 DC    C'OBR'                                                   02728000
@CC00907 DC    C'MDR'                                                   02729000
@CC00920 DC    C'???'                                                   02730000
@CC00880 EQU   @CC00921                                                 02731000
@CC00999 DC    C'CS'                                                    02732000
@CC01002 DC    C'RD'                                                    02733000
@CC01005 DC    C'RC'                                                    02734000
@CC01007 DC    C'SA'                                                    02735000
@CC01008 DC    C'DA'                                                    02736000
@CB00958 DC    X'0099999F00000000'                                      02737000
@CB00998 DC    X'00000000'                                              02738000
@CB00973 DC    X'0FFF'                                                  02739000
@CB00974 DC    X'00FF'                                                  02740000
@CB00997 EQU   @CB00998                                                 02741000
@CB01022 DC    B'0000111111111111'                                      02742000
EDPAT05  DC    X'402020202120'                                          02743000
SUMSPNO  DC    X'01'                                                    02744000
CPUZERO  DC    X'0000000000'                                            02745000
SUMMSG01 DC    CL116'RECORD 00000  DATE DDD/YY  TIME HH:MM:SS:HT     OBC02746000
               R  MSC RUA(XXX) VUA(XXX)  CPUID(XXXXXX-XXXX)  SSID(XXX) C02747000
                FSC(XXXX)'                                              02748000
SUMMSG02 DC    CL115'00..02..  04..06..  08..10..  12..14..  16..18..  C02749000
               20..22..  24..26..  28..30..  FORMAT X  SA FORMAT(X)  MSC02750000
               G CODE(X)'                                               02751000
SUMMSG11 DC    CL14'GENERATED'                                          02752000
SUMMSG21 DC    CL14'UNKNOWN FORMAT'                                     02753000
         DS    CL1                                                      02754000
SEVTABG  DS    CL336                                                    02755000
         ORG   SEVTABG                                                  02756000
@NM00013 DC    X'2000'                                                  02757000
@NM00014 DC    AL2(255)                                                 02758000
@NM00015 DC    AL2(127)                                                 02759000
@NM00016 DC    X'0430'                                                  02760000
@NM00017 DC    AL2(253)                                                 02761000
@NM00018 DC    AL2(125)                                                 02762000
@NM00019 DC    X'4000'                                                  02763000
@NM00020 DC    AL2(251)                                                 02764000
@NM00021 DC    AL2(123)                                                 02765000
@NM00022 DC    X'0420'                                                  02766000
@NM00023 DC    AL2(249)                                                 02767000
@NM00024 DC    AL2(121)                                                 02768000
@NM00025 DC    X'08A0'                                                  02769000
@NM00026 DC    AL2(247)                                                 02770000
@NM00027 DC    AL2(119)                                                 02771000
@NM00028 DC    X'1000'                                                  02772000
@NM00029 DC    AL2(245)                                                 02773000
@NM00030 DC    AL2(117)                                                 02774000
@NM00031 DC    X'08E0'                                                  02775000
@NM00032 DC    AL2(243)                                                 02776000
@NM00033 DC    AL2(115)                                                 02777000
@NM00034 DC    X'0440'                                                  02778000
@NM00035 DC    AL2(241)                                                 02779000
@NM00036 DC    AL2(113)                                                 02780000
@NM00037 DC    X'8000'                                                  02781000
@NM00038 DC    AL2(240)                                                 02782000
@NM00039 DC    AL2(112)                                                 02783000
@NM00040 DC    X'8007'                                                  02784000
@NM00041 DC    AL2(239)                                                 02785000
@NM00042 DC    AL2(111)                                                 02786000
@NM00043 DC    X'8008'                                                  02787000
@NM00044 DC    AL2(237)                                                 02788000
@NM00045 DC    AL2(109)                                                 02789000
@NM00046 DC    X'0410'                                                  02790000
@NM00047 DC    AL2(233)                                                 02791000
@NM00048 DC    AL2(105)                                                 02792000
@NM00049 DC    X'0400'                                                  02793000
@NM00050 DC    AL2(231)                                                 02794000
@NM00051 DC    AL2(103)                                                 02795000
@NM00052 DC    X'0891'                                                  02796000
@NM00053 DC    AL2(227)                                                 02797000
@NM00054 DC    AL2(99)                                                  02798000
@NM00055 DC    X'089C'                                                  02799000
@NM00056 DC    AL2(225)                                                 02800000
@NM00057 DC    AL2(97)                                                  02801000
@NM00058 DC    X'089B'                                                  02802000
@NM00059 DC    AL2(223)                                                 02803000
@NM00060 DC    AL2(95)                                                  02804000
@NM00061 DC    X'0893'                                                  02805000
@NM00062 DC    AL2(221)                                                 02806000
@NM00063 DC    AL2(93)                                                  02807000
@NM00064 DC    X'089D'                                                  02808000
@NM00065 DC    AL2(219)                                                 02809000
@NM00066 DC    AL2(91)                                                  02810000
@NM00067 DC    X'089E'                                                  02811000
@NM00068 DC    AL2(217)                                                 02812000
@NM00069 DC    AL2(89)                                                  02813000
@NM00070 DC    X'0899'                                                  02814000
@NM00071 DC    AL2(215)                                                 02815000
@NM00072 DC    AL2(87)                                                  02816000
@NM00073 DC    X'0895'                                                  02817000
@NM00074 DC    AL2(213)                                                 02818000
@NM00075 DC    AL2(85)                                                  02819000
@NM00076 DC    X'0894'                                                  02820000
@NM00077 DC    AL2(211)                                                 02821000
@NM00078 DC    AL2(83)                                                  02822000
@NM00079 DC    X'0898'                                                  02823000
@NM00080 DC    AL2(209)                                                 02824000
@NM00081 DC    AL2(81)                                                  02825000
@NM00082 DC    X'0896'                                                  02826000
@NM00083 DC    AL2(207)                                                 02827000
@NM00084 DC    AL2(79)                                                  02828000
@NM00085 DC    X'089A'                                                  02829000
@NM00086 DC    AL2(205)                                                 02830000
@NM00087 DC    AL2(77)                                                  02831000
@NM00088 DC    X'0892'                                                  02832000
@NM00089 DC    AL2(201)                                                 02833000
@NM00090 DC    AL2(73)                                                  02834000
@NM00091 DC    X'0890'                                                  02835000
@NM00092 DC    AL2(199)                                                 02836000
@NM00093 DC    AL2(71)                                                  02837000
@NM00094 DC    X'0897'                                                  02838000
@NM00095 DC    AL2(195)                                                 02839000
@NM00096 DC    AL2(67)                                                  02840000
@NM00097 DC    X'8009'                                                  02841000
@NM00098 DC    AL2(191)                                                 02842000
@NM00099 DC    AL2(63)                                                  02843000
@NM00100 DC    X'800B'                                                  02844000
@NM00101 DC    AL2(189)                                                 02845000
@NM00102 DC    AL2(61)                                                  02846000
@NM00103 DC    X'800D'                                                  02847000
@NM00104 DC    AL2(187)                                                 02848000
@NM00105 DC    AL2(59)                                                  02849000
@NM00106 DC    X'800E'                                                  02850000
@NM00107 DC    AL2(185)                                                 02851000
@NM00108 DC    AL2(57)                                                  02852000
@NM00109 DC    X'08C0'                                                  02853000
@NM00110 DC    AL2(183)                                                 02854000
@NM00111 DC    AL2(55)                                                  02855000
@NM00112 DC    X'0450'                                                  02856000
@NM00113 DC    AL2(181)                                                 02857000
@NM00114 DC    AL2(53)                                                  02858000
@NM00115 DC    X'08B5'                                                  02859000
@NM00116 DC    AL2(179)                                                 02860000
@NM00117 DC    AL2(51)                                                  02861000
@NM00118 DC    X'08B6'                                                  02862000
@NM00119 DC    AL2(177)                                                 02863000
@NM00120 DC    AL2(49)                                                  02864000
@NM00121 DC    X'08B2'                                                  02865000
@NM00122 DC    AL2(175)                                                 02866000
@NM00123 DC    AL2(47)                                                  02867000
@NM00124 DC    X'08B4'                                                  02868000
@NM00125 DC    AL2(173)                                                 02869000
@NM00126 DC    AL2(45)                                                  02870000
@NM00127 DC    X'08B1'                                                  02871000
@NM00128 DC    AL2(171)                                                 02872000
@NM00129 DC    AL2(43)                                                  02873000
@NM00130 DC    X'08BB'                                                  02874000
@NM00131 DC    AL2(169)                                                 02875000
@NM00132 DC    AL2(41)                                                  02876000
@NM00133 DC    X'08BC'                                                  02877000
@NM00134 DC    AL2(167)                                                 02878000
@NM00135 DC    AL2(39)                                                  02879000
@NM00136 DC    X'08B9'                                                  02880000
@NM00137 DC    AL2(165)                                                 02881000
@NM00138 DC    AL2(37)                                                  02882000
@NM00139 DC    X'08BA'                                                  02883000
@NM00140 DC    AL2(163)                                                 02884000
@NM00141 DC    AL2(35)                                                  02885000
@NM00142 DC    X'08B0'                                                  02886000
@NM00143 DC    AL2(161)                                                 02887000
@NM00144 DC    AL2(33)                                                  02888000
@NM00145 DC    X'08B8'                                                  02889000
@NM00146 DC    AL2(159)                                                 02890000
@NM00147 DC    AL2(31)                                                  02891000
@NM00148 DC    X'08B3'                                                  02892000
@NM00149 DC    AL2(157)                                                 02893000
@NM00150 DC    AL2(29)                                                  02894000
@NM00151 DC    X'08B7'                                                  02895000
@NM00152 DC    AL2(155)                                                 02896000
@NM00153 DC    AL2(27)                                                  02897000
@NM00154 DC    X'08BE'                                                  02898000
@NM00155 DC    AL2(153)                                                 02899000
@NM00156 DC    AL2(25)                                                  02900000
@NM00157 DC    X'08BD'                                                  02901000
@NM00158 DC    AL2(151)                                                 02902000
@NM00159 DC    AL2(23)                                                  02903000
@NM00160 DC    X'8005'                                                  02904000
@NM00161 DC    AL2(13)                                                  02905000
@NM00162 DC    AL2(13)                                                  02906000
@NM00163 DC    X'1001'                                                  02907000
@NM00164 DC    AL2(11)                                                  02908000
@NM00165 DC    AL2(11)                                                  02909000
@NM00166 DC    X'8002'                                                  02910000
@NM00167 DC    AL2(9)                                                   02911000
@NM00168 DC    AL2(9)                                                   02912000
@NM00169 DC    X'800A'                                                  02913000
@NM00170 DC    AL2(9)                                                   02914000
@NM00171 DC    AL2(9)                                                   02915000
@NM00172 DC    X'800F'                                                  02916000
@NM00173 DC    AL2(7)                                                   02917000
@NM00174 DC    AL2(7)                                                   02918000
@NM00175 DC    X'08D0'                                                  02919000
@NM00176 DC    AL2(5)                                                   02920000
@NM00177 DC    AL2(5)                                                   02921000
ENDTABG  DC    X'0460'                                                  02922000
@NM00178 DC    AL2(3)                                                   02923000
@NM00179 DC    AL2(3)                                                   02924000
         ORG   SEVTABG+336                                              02925000
PATCH    DC    50X'00'                                                  02926000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02927000
@01      EQU   01                                                       02928000
@02      EQU   02                                                       02929000
@03      EQU   03                                                       02930000
@04      EQU   04                                                       02931000
@05      EQU   05                                                       02932000
@06      EQU   06                                                       02933000
@07      EQU   07                                                       02934000
@08      EQU   08                                                       02935000
@09      EQU   09                                                       02936000
@10      EQU   10                                                       02937000
@11      EQU   11                                                       02938000
@12      EQU   12                                                       02939000
@13      EQU   13                                                       02940000
@14      EQU   14                                                       02941000
@15      EQU   15                                                       02942000
TABPTR   EQU   @04                                                      02943000
SEVRPTR  EQU   @06                                                      02944000
J        EQU   @05                                                      02945000
I        EQU   @04                                                      02946000
RETCODE  EQU   @07                                                      02947000
DEVIDPTR EQU   @06                                                      02948000
COUNTEND EQU   @05                                                      02949000
COUNTPTR EQU   @04                                                      02950000
SUMWKPTR EQU   @03                                                      02951000
CVTPTR   EQU   @02                                                      02952000
R1       EQU   @01                                                      02953000
R15      EQU   @15                                                      02954000
         EXTRN ISDASUM2                                                 02955000
ISDACVT  EQU   0                                                        02956000
CVTPTRS0 EQU   ISDACVT                                                  02957000
DATAPTR  EQU   CVTPTRS0                                                 02958000
SDATAPTR EQU   CVTPTRS0+4                                               02959000
PARMPTR  EQU   CVTPTRS0+8                                               02960000
SDA00PTR EQU   CVTPTRS0+12                                              02961000
PRT00PTR EQU   CVTPTRS0+28                                              02962000
SUM00PTR EQU   CVTPTRS0+48                                              02963000
CNFG0PTR EQU   CVTPTRS0+88                                              02964000
WORKCALL EQU   CVTPTRS0+96                                              02965000
GET0CALL EQU   ISDACVT+100                                              02966000
SPNOLEN  EQU   GET0CALL                                                 02967000
SPNO     EQU   SPNOLEN                                                  02968000
CORELEN  EQU   SPNOLEN+1                                                02969000
COREADDR EQU   GET0CALL+4                                               02970000
HEXPCALL EQU   ISDACVT+108                                              02971000
DUMPADDR EQU   HEXPCALL                                                 02972000
DUMPLEN  EQU   HEXPCALL+4                                               02973000
DUMPIDNO EQU   HEXPCALL+8                                               02974000
PRT0CALL EQU   ISDACVT+120                                              02975000
OUTLINE  EQU   PRT0CALL                                                 02976000
ANSI     EQU   OUTLINE                                                  02977000
LINE     EQU   OUTLINE+1                                                02978000
SDADATD  EQU   ISDACVT+256                                              02979000
PRTDATD  EQU   ISDACVT+416                                              02980000
ISDAPRMS EQU   0                                                        02981000
CINPUT   EQU   ISDAPRMS                                                 02982000
CSTART   EQU   ISDAPRMS+2                                               02983000
CEND     EQU   ISDAPRMS+6                                               02984000
CTYPE    EQU   ISDAPRMS+11                                              02985000
CFSCONLY EQU   ISDAPRMS+13                                              02986000
CSSIDF   EQU   ISDAPRMS+17                                              02987000
CSERIAL  EQU   ISDAPRMS+21                                              02988000
CREPORTS EQU   ISDAPRMS+33                                              02989000
CSUM     EQU   CREPORTS+2                                               02990000
CDETAIL  EQU   ISDAPRMS+46                                              02991000
ISDAGHDR EQU   0                                                        02992000
STARTPTR EQU   ISDAGHDR                                                 02993000
ENDPTR   EQU   ISDAGHDR+4                                               02994000
GET0SPLN EQU   ISDAGHDR+8                                               02995000
BLOCKID  EQU   ISDAGHDR+20                                              02996000
BLOCKCNT EQU   ISDAGHDR+24                                              02997000
OBRMDR   EQU   0                                                        02998000
SCW      EQU   OBRMDR                                                   02999000
SLENGTH  EQU   SCW                                                      03000000
SYSREL   EQU   OBRMDR+5                                                 03001000
SWITCHES EQU   OBRMDR+6                                                 03002000
DATETIME EQU   OBRMDR+12                                                03003000
DATE     EQU   DATETIME                                                 03004000
TIME     EQU   DATETIME+4                                               03005000
CPUSERID EQU   OBRMDR+21                                                03006000
CPUSER   EQU   CPUSERID                                                 03007000
CPUID    EQU   CPUSERID+3                                               03008000
DEVDEP1  EQU   OBRMDR+28                                                03009000
JOBID    EQU   DEVDEP1                                                  03010000
DEVTYPE1 EQU   JOBID                                                    03011000
MDRCUA   EQU   DEVTYPE1                                                 03012000
SDRINF   EQU   DEVDEP1+8                                                03013000
SECUA    EQU   SDRINF+17                                                03014000
DEVTYPE  EQU   0                                                        03015000
CLASTYPE EQU   DEVTYPE+2                                                03016000
ISDAMSCS EQU   0                                                        03017000
STATUS   EQU   ISDAMSCS                                                 03018000
SUBSYSID EQU   ISDAMSCS+1                                               03019000
SSIDFLAG EQU   SUBSYSID                                                 03020000
SSID     EQU   SUBSYSID                                                 03021000
SSIDLIBN EQU   SSID+1                                                   03022000
FORMATNO EQU   ISDAMSCS+3                                               03023000
SUBSENSE EQU   ISDAMSCS+4                                               03024000
SUBSTAT4 EQU   SUBSENSE                                                 03025000
SUBSTAT5 EQU   SUBSENSE+1                                               03026000
SALOWADD EQU   SUBSENSE+2                                               03027000
DASDFMTN EQU   SUBSENSE+3                                               03028000
SUBFMTMG EQU   SUBSENSE+7                                               03029000
SUBFMTNO EQU   SUBFMTMG                                                 03030000
DASDFSC  EQU   SUBSENSE+18                                              03031000
RUADASD  EQU   SUBSENSE+20                                              03032000
MSCFSC   EQU   SUBSENSE+22                                              03033000
ISDAWORK EQU   0                                                        03034000
INFLAGS  EQU   ISDAWORK                                                 03035000
IRECTYPE EQU   INFLAGS                                                  03036000
INDEVTYP EQU   INFLAGS+2                                                03037000
SDAFLAG0 EQU   INFLAGS+3                                                03038000
DLENGTH  EQU   ISDAWORK+4                                               03039000
INRECCUA EQU   ISDAWORK+6                                               03040000
NINREC   EQU   ISDAWORK+8                                               03041000
DEVPTR   EQU   ISDAWORK+16                                              03042000
PRTWORK  EQU   0                                                        03043000
LINECNT  EQU   PRTWORK+18                                               03044000
PCNFG    EQU   0                                                        03045000
CNFGFXD  EQU   PCNFG                                                    03046000
ISDAMSC3 EQU   4                                                        03047000
MOVES12  EQU   ISDAMSC3+2                                               03048000
FSCACC1  EQU   ISDAMSC3+4                                               03049000
FSCACC2  EQU   ISDAMSC3+8                                               03050000
SUMWORK  EQU   0                                                        03051000
SUMWORK1 EQU   SUMWORK                                                  03052000
ACCM0PTR EQU   SUMWORK1                                                 03053000
ACCUMPTR EQU   SUMWORK1+4                                               03054000
ACCM0END EQU   SUMWORK1+8                                               03055000
LOGPTR   EQU   SUMWORK1+12                                              03056000
SENSEPTR EQU   SUMWORK1+16                                              03057000
RCODEPTR EQU   SUMWORK1+20                                              03058000
RCODECNT EQU   SUMWORK1+24                                              03059000
SUM2PTR  EQU   SUMWORK1+28                                              03060000
SEVSTART EQU   SUMWORK1+32                                              03061000
SEVRLEN  EQU   SUMWORK1+36                                              03062000
SEVRLCNT EQU   SUMWORK1+40                                              03063000
GTOTALS  EQU   SUMWORK1+44                                              03064000
CNTF0    EQU   GTOTALS                                                  03065000
CNTF1    EQU   GTOTALS+4                                                03066000
CNTF2    EQU   GTOTALS+8                                                03067000
CNTF3    EQU   GTOTALS+12                                               03068000
CNTF4    EQU   GTOTALS+16                                               03069000
CNTF5    EQU   GTOTALS+20                                               03070000
CNTFDASD EQU   GTOTALS+24                                               03071000
CNTSENSE EQU   GTOTALS+28                                               03072000
CNTLOG   EQU   GTOTALS+32                                               03073000
ACCUMCNT EQU   SUMWORK1+88                                              03074000
SUMACCL  EQU   SUMWORK1+90                                              03075000
NCOUNTER EQU   SUMWORK1+92                                              03076000
NCPUUSED EQU   SUMWORK1+94                                              03077000
NCPUCNTS EQU   SUMWORK1+96                                              03078000
SUMWORK2 EQU   SUMWORK+98                                               03079000
CPUFOUND EQU   SUMWORK2                                                 03080000
SUMTEMPS EQU   SUMWORK+178                                              03081000
TEMP9    EQU   SUMTEMPS                                                 03082000
TEMP8    EQU   TEMP9                                                    03083000
TEMP7    EQU   TEMP8                                                    03084000
TEMP6    EQU   TEMP7                                                    03085000
TEMP5    EQU   TEMP6                                                    03086000
TEMP4    EQU   TEMP5                                                    03087000
TEMP3    EQU   TEMP4                                                    03088000
TEMP2    EQU   TEMP3                                                    03089000
TEMP1    EQU   TEMP2                                                    03090000
TEMP20   EQU   SUMTEMPS+9                                               03091000
TEMP16   EQU   TEMP20                                                   03092000
TEMP710  EQU   TEMP20+6                                                 03093000
TEMP1113 EQU   TEMP20+10                                                03094000
TEMP1417 EQU   TEMP20+13                                                03095000
TEMP1820 EQU   TEMP20+17                                                03096000
SUMWORK3 EQU   SUMWORK+210                                              03097000
SUMFLAGS EQU   SUMWORK3                                                 03098000
FORMATNC EQU   SUMWORK3+1                                               03099000
MAINMASK EQU   SUMWORK3+2                                               03100000
FORMATCK EQU   MAINMASK                                                 03101000
FLAGMASK EQU   MAINMASK+1                                               03102000
SUBFMASK EQU   MAINMASK+2                                               03103000
FMTIDSV  EQU   SUMWORK3+5                                               03104000
SUBFIDSV EQU   SUMWORK3+12                                              03105000
MSGCODSV EQU   SUMWORK3+13                                              03106000
TSEVTEMP EQU   SUMWORK3+14                                              03107000
TSEVCDID EQU   TSEVTEMP                                                 03108000
TSEVCODE EQU   TSEVCDID                                                 03109000
TSSID    EQU   TSEVCDID+2                                               03110000
TPTFLAG  EQU   TSEVTEMP+4                                               03111000
TSEVFMTS EQU   TSEVTEMP+5                                               03112000
TSEVFMT  EQU   TSEVFMTS                                                 03113000
TSEVSUBF EQU   TSEVFMTS+1                                               03114000
TSEVMASK EQU   TSEVTEMP+7                                               03115000
TSEVECOD EQU   TSEVTEMP+8                                               03116000
MDEVIDTB EQU   0                                                        03117000
MDFMTXXX EQU   MDEVIDTB                                                 03118000
MDMASK   EQU   MDFMTXXX                                                 03119000
MDIDS    EQU   MDFMTXXX+3                                               03120000
MDCSMXXX EQU   MDIDS+4                                                  03121000
MDMSGXXX EQU   MDFMTXXX+14                                              03122000
MCOUNTER EQU   0                                                        03123000
MCFMTXXX EQU   MCOUNTER                                                 03124000
MCADDXXX EQU   MCFMTXXX                                                 03125000
MCOUNTS  EQU   MCFMTXXX+4                                               03126000
MCPXXX   EQU   MCOUNTS                                                  03127000
MCTXXX   EQU   MCOUNTS+2                                                03128000
MCMASK   EQU   MCFMTXXX+8                                               03129000
MCFLAG   EQU   MCMASK+1                                                 03130000
MLDTIME  EQU   MCFMTXXX+12                                              03131000
MHDTIME  EQU   MCFMTXXX+20                                              03132000
RCODES   EQU   0                                                        03133000
SEVRLIST EQU   0                                                        03134000
SEVRCNT  EQU   SEVRLIST                                                 03135000
SEVHMOVE EQU   SEVRLIST+2                                               03136000
SEVCDSID EQU   SEVHMOVE                                                 03137000
SEVRCODE EQU   SEVCDSID                                                 03138000
SEVSDAWK EQU   SEVRLIST+12                                              03139000
SEVSDPTR EQU   SEVRLIST+32                                              03140000
SEVDEVPT EQU   SEVRLIST+36                                              03141000
SEVDATA  EQU   SEVRLIST+40                                              03142000
SEVDATET EQU   SEVDATA+12                                               03143000
TABGMOD  EQU   0                                                        03144000
TABHW    EQU   TABGMOD                                                  03145000
TABHISEV EQU   TABGMOD+2                                                03146000
TABLOSEV EQU   TABGMOD+4                                                03147000
SUMACCUM EQU   0                                                        03148000
WORKPTR  EQU   0                                                        03149000
TEMP68   EQU   TEMP8+5                                                  03150000
TEMP78   EQU   TEMP8+6                                                  03151000
REC01    EQU   LINE+6                                                   03152000
DAY01    EQU   LINE+19                                                  03153000
YEAR01   EQU   LINE+23                                                  03154000
HOUR01   EQU   LINE+32                                                  03155000
MIN01    EQU   LINE+35                                                  03156000
SEC01    EQU   LINE+38                                                  03157000
HUN01    EQU   LINE+41                                                  03158000
SYSTEMID EQU   LINE+44                                                  03159000
TYPE01   EQU   LINE+48                                                  03160000
DEVT01   EQU   LINE+52                                                  03161000
DEVRUA01 EQU   LINE+61                                                  03162000
DEVVUA11 EQU   LINE+66                                                  03163000
DEVVUA01 EQU   LINE+70                                                  03164000
CPUSRM01 EQU   LINE+82                                                  03165000
CPUIDM01 EQU   LINE+89                                                  03166000
SSIDM11  EQU   LINE+96                                                  03167000
SSIDM01  EQU   LINE+101                                                 03168000
FSCM01   EQU   LINE+111                                                 03169000
FSCM11   EQU   LINE+107                                                 03170000
FSCM21   EQU   LINE+117                                                 03171000
FMTID02  EQU   LINE+80                                                  03172000
FMTNO02  EQU   LINE+87                                                  03173000
SABLANK  EQU   LINE+90                                                  03174000
SUBFID02 EQU   LINE+100                                                 03175000
MSGCOD02 EQU   LINE+113                                                 03176000
SUBFID12 EQU   LINE+90                                                  03177000
MSGCOD12 EQU   LINE+104                                                 03178000
SENSEID  EQU   LINE+94                                                  03179000
*                                      START UNREFERENCED COMPONENTS    03180000
TABBYT27 EQU   TABHW+1                                                  03181000
TABBYT11 EQU   TABHW                                                    03182000
@NM00012 EQU   SEVDATA                                                  03183000
SEVSPARE EQU   SEVRLIST+11                                              03184000
SEVECODE EQU   SEVHMOVE+8                                               03185000
SEVFMASK EQU   SEVHMOVE+7                                               03186000
SEVSUBF  EQU   SEVHMOVE+6                                               03187000
SEVFMT   EQU   SEVHMOVE+5                                               03188000
PTFLAG   EQU   SEVHMOVE+4                                               03189000
SEVSSID  EQU   SEVCDSID+2                                               03190000
MHTIME   EQU   MHDTIME+4                                                03191000
MHDATE   EQU   MHDTIME                                                  03192000
MLTIME   EQU   MLDTIME+4                                                03193000
MLDATE   EQU   MLDTIME                                                  03194000
MCSPARE  EQU   MCFMTXXX+11                                              03195000
MCSMXXX  EQU   MCMASK+2                                                 03196000
MCFXXX   EQU   MCMASK                                                   03197000
MDIDXXX  EQU   MDIDS+6                                                  03198000
MDCMXXX  EQU   MDCSMXXX+1                                               03199000
MDCSXXX  EQU   MDCSMXXX                                                 03200000
MDCFXXX  EQU   MDIDS                                                    03201000
MDSMXXX  EQU   MDMASK+2                                                 03202000
MDFLAG   EQU   MDMASK+1                                                 03203000
MDFXXX   EQU   MDMASK                                                   03204000
TEMP3032 EQU   SUMTEMPS+29                                              03205000
TOTTEMPS EQU   SUMWORK1+84                                              03206000
TOTPERMS EQU   SUMWORK1+80                                              03207000
@NM00011 EQU   ISDAMSC3+16                                              03208000
IREGS3F3 EQU   ISDAMSC3+15                                              03209000
IREGS2F3 EQU   ISDAMSC3+14                                              03210000
IREGS1F3 EQU   ISDAMSC3+13                                              03211000
MISCF3   EQU   ISDAMSC3+12                                              03212000
SHIFT2F3 EQU   FSCACC2+3                                                03213000
PCHKACC2 EQU   FSCACC2+2                                                03214000
FAULT2F3 EQU   FSCACC2+1                                                03215000
MCHKACC2 EQU   FSCACC2                                                  03216000
SHIFT1F3 EQU   FSCACC1+3                                                03217000
PCHKACC1 EQU   FSCACC1+2                                                03218000
FAULT1F3 EQU   FSCACC1+1                                                03219000
MCHKACC1 EQU   FSCACC1                                                  03220000
QUEUE3   EQU   ISDAMSC3+3                                               03221000
RECOVER3 EQU   ISDAMSC3+1                                               03222000
STATUS3  EQU   ISDAMSC3                                                 03223000
SAINTFP  EQU   PCNFG+32                                                 03224000
@NM00010 EQU   PCNFG+30                                                 03225000
CNFGTOTL EQU   PCNFG+28                                                 03226000
CPUSERAD EQU   PCNFG+24                                                 03227000
CHCUAD   EQU   PCNFG+20                                                 03228000
LTPAD    EQU   PCNFG+16                                                 03229000
PCNFGL   EQU   CNFGFXD+14                                               03230000
CHINTFNO EQU   CNFGFXD+12                                               03231000
LIBSIZS  EQU   CNFGFXD+8                                                03232000
SANO     EQU   CNFGFXD+6                                                03233000
SPINO    EQU   CNFGFXD+4                                                03234000
CPUNO    EQU   CNFGFXD+2                                                03235000
MSFNO    EQU   CNFGFXD                                                  03236000
@NM00009 EQU   PRTWORK                                                  03237000
NOUTREC  EQU   ISDAWORK+12                                              03238000
CUABYTE1 EQU   INRECCUA+1                                               03239000
CUABYTE0 EQU   INRECCUA                                                 03240000
INSOURCE EQU   INFLAGS+1                                                03241000
SANOMSCD EQU   SUBSENSE+27                                              03242000
RCYLMSCD EQU   SUBSENSE+25                                              03243000
RUAMSCD  EQU   SUBSENSE+24                                              03244000
@NM00008 EQU   SUBSENSE+21                                              03245000
@NM00007 EQU   SUBSENSE+8                                               03246000
MSGCODEN EQU   SUBFMTMG                                                 03247000
SALOWAD2 EQU   SUBSENSE+6                                               03248000
SARETRY  EQU   SUBSENSE+5                                               03249000
@NM00006 EQU   SUBSENSE+4                                               03250000
SSIDDEVT EQU   SSID+1                                                   03251000
SSIDTYPE EQU   SSID                                                     03252000
UNITTYPE EQU   CLASTYPE+1                                               03253000
DEVCLASS EQU   CLASTYPE                                                 03254000
OPTFLAGS EQU   DEVTYPE+1                                                03255000
IOFLAGS  EQU   DEVTYPE                                                  03256000
DEVDEP2  EQU   SDRINF+32                                                03257000
SENSCNT  EQU   SDRINF+30                                                03258000
IORETRY  EQU   SDRINF+28                                                03259000
PCUA     EQU   SDRINF+25                                                03260000
SDRCNT2  EQU   SDRINF+24                                                03261000
DEVTYPE2 EQU   SDRINF+20                                                03262000
DEVDEPC  EQU   SDRINF+16                                                03263000
CSW      EQU   SDRINF+8                                                 03264000
FAILCCW  EQU   SDRINF                                                   03265000
CUA2     EQU   JOBID+5                                                  03266000
@NM00005 EQU   JOBID+4                                                  03267000
SDRCNT1  EQU   OBRMDR+26                                                03268000
VERNO    EQU   OBRMDR+20                                                03269000
TENSHUND EQU   TIME+3                                                   03270000
SECOND   EQU   TIME+2                                                   03271000
MINUTE   EQU   TIME+1                                                   03272000
HOUR     EQU   TIME                                                     03273000
DAY      EQU   DATE+2                                                   03274000
YEAR     EQU   DATE                                                     03275000
RECENTRY EQU   OBRMDR+11                                                03276000
RCDCNT   EQU   OBRMDR+10                                                03277000
SWITCH3  EQU   SWITCHES+3                                               03278000
SWITCH2  EQU   SWITCHES+2                                               03279000
SWITCH1  EQU   SWITCHES+1                                               03280000
SWITCH0  EQU   SWITCHES                                                 03281000
CLASRC   EQU   OBRMDR+4                                                 03282000
@NM00004 EQU   SCW+3                                                    03283000
SCODE    EQU   SCW+2                                                    03284000
@NM00003 EQU   ISDAGHDR+26                                              03285000
LASTPTR  EQU   ISDAGHDR+16                                              03286000
NEXTPTR  EQU   ISDAGHDR+12                                              03287000
GET0LEN  EQU   GET0SPLN+1                                               03288000
GET0SPNO EQU   GET0SPLN                                                 03289000
CTRACE   EQU   ISDAPRMS+48                                              03290000
CGEN     EQU   ISDAPRMS+47                                              03291000
CPERIOD  EQU   ISDAPRMS+45                                              03292000
CPWR     EQU   CREPORTS+11                                              03293000
CAPRSUU  EQU   CREPORTS+10                                              03294000
CDRC     EQU   CREPORTS+9                                               03295000
CDAT     EQU   CREPORTS+8                                               03296000
CCSBCSF  EQU   CREPORTS+7                                               03297000
CDCKTLX  EQU   CREPORTS+6                                               03298000
CEQC     EQU   CREPORTS+5                                               03299000
CFSC     EQU   CREPORTS+4                                               03300000
CDHEDHU  EQU   CREPORTS+3                                               03301000
CPAD     EQU   CREPORTS+1                                               03302000
CDCS     EQU   CREPORTS                                                 03303000
CSERNO   EQU   CSERIAL+4                                                03304000
@NM00002 EQU   CSERIAL+3                                                03305000
CIBM     EQU   CSERIAL                                                  03306000
CRATIO   EQU   ISDAPRMS+19                                              03307000
CSSID    EQU   CSSIDF                                                   03308000
@NM00001 EQU   CSSIDF                                                   03309000
CFSC34   EQU   CFSCONLY+2                                               03310000
CFSC12   EQU   CFSCONLY                                                 03311000
CSUMMARY EQU   ISDAPRMS+10                                              03312000
CENDDAY  EQU   CEND+2                                                   03313000
CENDYEAR EQU   CEND                                                     03314000
CSTDAY   EQU   CSTART+2                                                 03315000
CSTYEAR  EQU   CSTART                                                   03316000
CHISTIN  EQU   CINPUT+1                                                 03317000
CLOGIN   EQU   CINPUT                                                   03318000
PRTSA001 EQU   PRTDATD                                                  03319000
SDATEMPS EQU   SDADATD+136                                              03320000
SDASA002 EQU   SDADATD+76                                               03321000
SDAPC001 EQU   SDADATD+72                                               03322000
SDASA001 EQU   SDADATD                                                  03323000
SDARPTID EQU   PRT0CALL+133                                             03324000
GEN00PTR EQU   CVTPTRS0+92                                              03325000
PWR00PTR EQU   CVTPTRS0+84                                              03326000
APR00PTR EQU   CVTPTRS0+80                                              03327000
DRC00PTR EQU   CVTPTRS0+76                                              03328000
DAT00PTR EQU   CVTPTRS0+72                                              03329000
CSB00PTR EQU   CVTPTRS0+68                                              03330000
DCK00PTR EQU   CVTPTRS0+64                                              03331000
EQC00PTR EQU   CVTPTRS0+60                                              03332000
FSC00PTR EQU   CVTPTRS0+56                                              03333000
DHE00PTR EQU   CVTPTRS0+52                                              03334000
PAD00PTR EQU   CVTPTRS0+44                                              03335000
DCS00PTR EQU   CVTPTRS0+40                                              03336000
LOG00PTR EQU   CVTPTRS0+36                                              03337000
HIST0PTR EQU   CVTPTRS0+32                                              03338000
GET00PTR EQU   CVTPTRS0+24                                              03339000
TYPE0PTR EQU   CVTPTRS0+20                                              03340000
PARM0PTR EQU   CVTPTRS0+16                                              03341000
*                                      END UNREFERENCED COMPONENTS      03342000
@RC00087 EQU   @RC00076                                                 03343000
@RC00085 EQU   @RC00076                                                 03344000
@RC00083 EQU   @RC00076                                                 03345000
@RC00081 EQU   @RC00076                                                 03346000
@RC00079 EQU   @RC00076                                                 03347000
@RC00077 EQU   @RC00076                                                 03348000
@RC00153 EQU   @RC00152                                                 03349000
@RC00267 EQU   @RC00262                                                 03350000
@RC00310 EQU   @RC00297                                                 03351000
@RC00308 EQU   @RC00297                                                 03352000
@RC00306 EQU   @RC00297                                                 03353000
@RC00393 EQU   @EL00009                                                 03354000
@RC00386 EQU   @EL00009                                                 03355000
@RC00404 EQU   @EL00010                                                 03356000
@RC00520 EQU   @RC00517                                                 03357000
@RC00545 EQU   @EL00015                                                 03358000
@RC00537 EQU   @EL00015                                                 03359000
@RC00557 EQU   @RC00556                                                 03360000
@RC00565 EQU   @RC00564                                                 03361000
@RC00580 EQU   @EL00016                                                 03362000
@RC00647 EQU   @RC00637                                                 03363000
@RC00638 EQU   @RC00637                                                 03364000
@RC00666 EQU   @RC00663                                                 03365000
@RC00710 EQU   @RC00697                                                 03366000
@RC00700 EQU   @RC00697                                                 03367000
@RC00698 EQU   @RC00697                                                 03368000
@RC00694 EQU   @RC00689                                                 03369000
@RC00728 EQU   @RC00689                                                 03370000
@RC00747 EQU   @RC00746                                                 03371000
@RC00752 EQU   @RC00751                                                 03372000
@RC00756 EQU   @RC00744                                                 03373000
@RC00765 EQU   @EL00019                                                 03374000
@RC00542 EQU   @RC00537                                                 03375000
@RC00540 EQU   @RC00537                                                 03376000
@RC00538 EQU   @RC00537                                                 03377000
@RC00639 EQU   @RC00638                                                 03378000
@RC00648 EQU   @RC00647                                                 03379000
@RC00707 EQU   @RC00700                                                 03380000
@RC00703 EQU   @RC00700                                                 03381000
@RC00701 EQU   @RC00700                                                 03382000
@RC00714 EQU   @RC00694                                                 03383000
@RC00759 EQU   @RC00756                                                 03384000
@RC00757 EQU   @RC00756                                                 03385000
@RC00642 EQU   @RC00639                                                 03386000
@RC00651 EQU   @RC00648                                                 03387000
@RC00704 EQU   @RC00703                                                 03388000
@RC00715 EQU   @RC00714                                                 03389000
@RC00716 EQU   @RC00715                                                 03390000
@ENDDATA EQU   *                                                        03391000
         END   ISDASUM0,(C'PLS1749',0701,78164)                         03392000
