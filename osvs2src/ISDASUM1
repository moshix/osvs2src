         TITLE 'ISDASUM1 - SDA SUMMARY FORMAT AND PRINT ROUTINE        *00001000
                        '                                               00002000
ISDASUM1 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(8)                                              0001 00007000
         DC    C'ISDASUM1'                                         0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         ISDAGSPC R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         MVC   @PC00001(4),0(@01)                                  0001 00022000
*                                                                  0028 00023000
*   /*****************************************************************/ 00024000
*   /*                                                               */ 00025000
*   /* ISDASUM1 - OUTPUT FORMAT PROC                                 */ 00026000
*   /*                                                               */ 00027000
*   /*****************************************************************/ 00028000
*                                                                  0028 00029000
*   CVTPTR=WORKPTR;                 /* SET LOCAL PTR TO ISDACVT    0028 00030000
*                                                            @Y30LB55*/ 00031000
         L     @10,@PC00001                                        0028 00032000
         L     CVTPTR,WORKPTR(,@10)                                0028 00033000
*   LPARMPTR=PARMPTR;               /* SET LOCAL PTR TO ISDAPRMS   0029 00034000
*                                                            @Y30LB55*/ 00035000
         L     LPARMPTR,PARMPTR(,CVTPTR)                           0029 00036000
*   RETCODE=0;                      /* SET RETURN CODE TO ZERO     0030 00037000
*                                                            @Y30LB55*/ 00038000
         SLR   @10,@10                                             0030 00039000
         ST    @10,RETCODE                                         0030 00040000
*   SUMWKPTR=SUM00PTR;              /* SET LOCAL PTR TO WORKAREA   0031 00041000
*                                                            @Y30LB55*/ 00042000
         L     SUMWKPTR,SUM00PTR(,CVTPTR)                          0031 00043000
*   GET0PTR=ACCM0PTR;               /* SET PTR TO ACCUMULATOR 0    0032 00044000
*                                                            @Y30LB55*/ 00045000
         L     @05,ACCM0PTR(,SUMWKPTR)                             0032 00046000
         ST    @05,GET0PTR                                         0032 00047000
*   IF CSUM(8)='1'B&GET0PTR^=0 THEN /* WAS SUMMARY REPORT REQUESTED     00048000
*                                                            @Y30LB55*/ 00049000
         TM    CSUM(LPARMPTR),B'00000001'                          0033 00050000
         BNO   @RF00033                                            0033 00051000
         CR    @05,@10                                             0033 00052000
         BE    @RF00033                                            0033 00053000
*     DO;                           /* YES, PRODUCE REPORT   @Y30LB55*/ 00054000
*                                                                  0034 00055000
*       /*************************************************************/ 00056000
*       /*                                                           */ 00057000
*       /* OUTPUT FORMAT CODE                                        */ 00058000
*       /*                                                           */ 00059000
*       /*************************************************************/ 00060000
*                                                                  0035 00061000
*       ANSI=PSKIP;                 /* SET PAGE SKIP         @Y30LB55*/ 00062000
         MVI   ANSI(CVTPTR),C'1'                                   0035 00063000
*       LINE=SUMMSG12;              /* MOVE TOP TITLE        @Y30LB55*/ 00064000
         MVI   LINE+28(CVTPTR),C' '                                0036 00065000
         MVC   LINE+29(103,CVTPTR),LINE+28(CVTPTR)                 0036 00066000
         MVC   LINE(28,CVTPTR),SUMMSG12                            0036 00067000
*       RFY                                                        0037 00068000
*         R1 RSTD;                  /*                       @Y30LB55*/ 00069000
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @Y30LB55*/ 00070000
         LA    R1,WORKCALL(,CVTPTR)                                0038 00071000
*       CALL ISDAPRT0;              /* OUTPUT SUMMSG12       @Y30LB55*/ 00072000
         L     @15,@CV00333                                        0039 00073000
         BALR  @14,@15                                             0039 00074000
*       RFY                                                        0040 00075000
*         R1 UNRSTD;                /* RELEASE R1            @Y30LB55*/ 00076000
*       K=CNTSENSE;                 /* SET K = COUNT OF SENSE RECORDS   00077000
*                                                            @Y30LB55*/ 00078000
         L     K,CNTSENSE(,SUMWKPTR)                               0041 00079000
*       TOTPERMS=''B;               /* ZERO COUNT            @Y30LB55*/ 00080000
         SLR   @10,@10                                             0042 00081000
         ST    @10,TOTPERMS(,SUMWKPTR)                             0042 00082000
*       TOTTEMPS=''B;               /* ZERO COUNT            @Y30LB55*/ 00083000
         ST    @10,TOTTEMPS(,SUMWKPTR)                             0043 00084000
*       FLAGMASK(8)='1'B;           /* SET BUFFERED LOG SWITCH     0044 00085000
*                                                            @Y30LB55*/ 00086000
         OI    FLAGMASK(SUMWKPTR),B'00000001'                      0044 00087000
*       LINE=SUMMSG30;              /* MOVE SUMMSG30         @Y30LB55*/ 00088000
         MVI   LINE+60(CVTPTR),C' '                                0045 00089000
         MVC   LINE+61(71,CVTPTR),LINE+60(CVTPTR)                  0045 00090000
         MVC   LINE(60,CVTPTR),SUMMSG30                            0045 00091000
*       ANSI=LSKIP2;                /* SET 2 LINE SKIP       @ZM31022*/ 00092000
         MVI   ANSI(CVTPTR),C'0'                                   0046 00093000
*       CALL PUTTITLE;              /* OUTPUT TABLE TITLES   @Y30LB55*/ 00094000
         BAL   @14,PUTTITLE                                        0047 00095000
*       COUNTPTR=ACCUMPTR;          /* SET PTR TO START OF SUMACCUM     00096000
*                                                            @Y30LB55*/ 00097000
         L     COUNTPTR,ACCUMPTR(,SUMWKPTR)                        0048 00098000
*       COUNTEND=ACCM0END;          /* SET PTR TO END OF SUMACCUM  0049 00099000
*                                                            @Y30LB55*/ 00100000
         MVC   COUNTEND(4),ACCM0END(SUMWKPTR)                      0049 00101000
*       FORMATCK=MCFXXX;            /* SET FORMAT SWITCH FLAG@Y30LB55*/ 00102000
         MVC   FORMATCK(1,SUMWKPTR),MCFXXX(COUNTPTR)               0050 00103000
*       DO WHILE(COUNTPTR<COUNTEND);/* LOOP THROUGH COUNTERS @Y30LB55*/ 00104000
         B     @DE00051                                            0051 00105000
@DL00051 DS    0H                                                  0052 00106000
*         DEVIDPTR=MCADDXXX;        /* SET PTR TO ISDASUM2 TABLE   0052 00107000
*                                                            @Y30LB55*/ 00108000
         L     DEVIDPTR,MCADDXXX(,COUNTPTR)                        0052 00109000
*         IF MCFLAG(8)='1'B&FLAGMASK(8)='1'B THEN/* AT FIRST BUFFERED   00110000
*                                                            @Y30LB55*/ 00111000
         TM    MCFLAG(COUNTPTR),B'00000001'                        0053 00112000
         BNO   @RF00053                                            0053 00113000
         TM    FLAGMASK(SUMWKPTR),B'00000001'                      0053 00114000
         BNO   @RF00053                                            0053 00115000
*           DO;                     /* YES, OUTPUT NEW TITLE @Y30LB55*/ 00116000
*             CALL PUTTOTAL;        /* PRINT TOTALS          @Y30LB55*/ 00117000
         BAL   @14,PUTTOTAL                                        0055 00118000
*             ANSI=PSKIP;           /* SET PAGE SKIP         @Y30LB55*/ 00119000
         MVI   ANSI(CVTPTR),C'1'                                   0056 00120000
*             LINE=SUMMSG12;        /* MOVE SUMMSG12         @Y30LB55*/ 00121000
         MVI   LINE+28(CVTPTR),C' '                                0057 00122000
         MVC   LINE+29(103,CVTPTR),LINE+28(CVTPTR)                 0057 00123000
         MVC   LINE(28,CVTPTR),SUMMSG12                            0057 00124000
*             RFY                                                  0058 00125000
*               R1 RSTD;            /*                       @Y30LB55*/ 00126000
*             R1=ADDR(WORKCALL);    /* R1 -> WORKPTR         @Y30LB55*/ 00127000
         LA    R1,WORKCALL(,CVTPTR)                                0059 00128000
*             CALL ISDAPRT0;        /* PRINT SUMMSG12        @Y30LB55*/ 00129000
         L     @15,@CV00333                                        0060 00130000
         BALR  @14,@15                                             0060 00131000
*             RFY                                                  0061 00132000
*               R1 UNRSTD;          /*                       @Y30LB55*/ 00133000
*             CALL PRINTCPU;        /* PRINT CPU IDS         @Y30LB55*/ 00134000
         BAL   @14,PRINTCPU                                        0062 00135000
*             FLAGMASK(8)='0'B;     /* TURN OFF BUFFERED LOG SWITCH     00136000
*                                                            @Y30LB55*/ 00137000
         NI    FLAGMASK(SUMWKPTR),B'11111110'                      0063 00138000
*             LINE=SUMMSG40;        /* MOVE SUMMSG40         @Y30LB55*/ 00139000
         MVI   LINE+61(CVTPTR),C' '                                0064 00140000
         MVC   LINE+62(70,CVTPTR),LINE+61(CVTPTR)                  0064 00141000
         MVC   LINE(61,CVTPTR),SUMMSG40                            0064 00142000
*             ANSI=LSKIP3;          /* SET 3 LINE SKIP       @Y30LB55*/ 00143000
         MVI   ANSI(CVTPTR),C'-'                                   0065 00144000
*             CALL PUTTITLE;        /* OUTPUT TABLE TITLES   @Y30LB55*/ 00145000
         BAL   @14,PUTTITLE                                        0066 00146000
*             K=CNTLOG;             /* SET K = COUNT OF LOG RECORDS     00147000
*                                                            @Y30LB55*/ 00148000
         L     K,CNTLOG(,SUMWKPTR)                                 0067 00149000
*             TOTPERMS=''B;         /* ZERO COUNT            @Y30LB55*/ 00150000
         SLR   @10,@10                                             0068 00151000
         ST    @10,TOTPERMS(,SUMWKPTR)                             0068 00152000
*             TOTTEMPS=''B;         /* ZERO COUNT            @Y30LB55*/ 00153000
         ST    @10,TOTTEMPS(,SUMWKPTR)                             0069 00154000
*             FORMATCK=MCFXXX;      /* SET FORMAT SWITCH FLAG@Y30LB55*/ 00155000
         MVC   FORMATCK(1,SUMWKPTR),MCFXXX(COUNTPTR)               0070 00156000
*           END;                    /* END SWITCH TO LOG CODE@Y30LB55*/ 00157000
*         ELSE                                                     0072 00158000
*           ;                       /* NO SWITCH             @Y30LB55*/ 00159000
@RF00053 DS    0H                                                  0073 00160000
*         CALL BUILDIT;             /* BUILD AND PRINT OUTPUT LINE 0073 00161000
*                                                            @Y30LB55*/ 00162000
         BAL   @14,BUILDIT                                         0073 00163000
*         COUNTPTR=COUNTPTR+LENGTH(MCOUNTER);/*                    0074 00164000
*                                      INC PTR TO NEXT ENTRY @Y30LB55*/ 00165000
         AH    COUNTPTR,@CH00335                                   0074 00166000
*       END;                        /* END OF FORMAT OUTPUT CODE   0075 00167000
*                                                            @Y30LB55*/ 00168000
@DE00051 C     COUNTPTR,COUNTEND                                   0075 00169000
         BL    @DL00051                                            0075 00170000
*       CALL PUTTOTAL;              /* PRINT TOTALS          @Y30LB55*/ 00171000
         BAL   @14,PUTTOTAL                                        0076 00172000
*       CALL RCODESUM;              /* PRINT THE MSC REASON CODE   0077 00173000
*                                      SUMMARY               @ZM31074*/ 00174000
         BAL   @14,RCODESUM                                        0077 00175000
*     END;                          /* END FORMATOR CODE     @Y30LB55*/ 00176000
*   ELSE                            /* SUMMARY REPORT NOT REQUESTED     00177000
*                                                            @Y30LB55*/ 00178000
*     RETCODE=0;                    /* SET NO REPORT RETCODE @Y30LB55*/ 00179000
         B     @RC00033                                            0079 00180000
@RF00033 SLR   @10,@10                                             0079 00181000
         ST    @10,RETCODE                                         0079 00182000
*                                                                  0080 00183000
*   /*****************************************************************/ 00184000
*   /*                                                               */ 00185000
*   /* CLEANUP SECTION - FREE SUMACCUM                               */ 00186000
*   /*                                                               */ 00187000
*   /*****************************************************************/ 00188000
*                                                                  0080 00189000
*   IF GET0PTR^=0 THEN              /* WAS CORE FOR ACCUMULATOR GOT     00190000
*                                                            @Y30LB55*/ 00191000
@RC00033 SLR   @10,@10                                             0080 00192000
         C     @10,GET0PTR                                         0080 00193000
         BE    @RF00080                                            0080 00194000
*     DO;                           /* YES, FREE SUMACCUM    @Y30LB55*/ 00195000
*       IF RCODEPTR^=0 THEN         /* HAVE RCODES TABLE     @ZM31074*/ 00196000
         L     @15,RCODEPTR(,SUMWKPTR)                             0082 00197000
         CR    @15,@10                                             0082 00198000
         BE    @RF00082                                            0082 00199000
*         DO;                       /* YES, FREE IT          @ZM31074*/ 00200000
*           CORELEN=RCODELEN;       /* GET LENGTH            @ZM31074*/ 00201000
         MVC   CORELEN(3,CVTPTR),@CF00280+1                        0084 00202000
*           SPNO=SUMSPNO;           /* GET SUBPOOL           @ZM31074*/ 00203000
         MVC   SPNO(1,CVTPTR),SUMSPNO                              0085 00204000
*           COREADDR=RCODEPTR;      /* GET ADDRESS           @ZM31074*/ 00205000
         ST    @15,COREADDR(,CVTPTR)                               0086 00206000
*           RFY R1 RSTD;                                           0087 00207000
*           R1=ADDR(WORKCALL);      /* R1 -> WORKPTR         @ZM31074*/ 00208000
         LA    R1,WORKCALL(,CVTPTR)                                0088 00209000
*           CALL ISDAFREE;          /* FREEMAIN              @ZM31074*/ 00210000
         L     @15,@CV00331                                        0089 00211000
         BALR  @14,@15                                             0089 00212000
*           RFY R1 UNRSTD;                                         0090 00213000
*         END;                      /* END FREE OF RCODES    @ZM31074*/ 00214000
*       ELSE;                       /* NO TABLE TO FREE      @ZM31074*/ 00215000
@RF00082 DS    0H                                                  0093 00216000
*       SPNOLEN=GET0SPLN;           /* SET SUBPOOL AND LENGTH@Y30LB55*/ 00217000
         L     @10,GET0PTR                                         0093 00218000
         MVC   SPNOLEN(4,CVTPTR),GET0SPLN(@10)                     0093 00219000
*       COREADDR=GET0PTR;           /* SET ADDRESS TO FREE   @Y30LB55*/ 00220000
         ST    @10,COREADDR(,CVTPTR)                               0094 00221000
*       RFY                                                        0095 00222000
*         R1 RSTD;                  /*                       @Y30LB55*/ 00223000
*       R1=ADDR(WORKCALL);          /* R1 -> ADDR(WORKPTR)   @Y30LB55*/ 00224000
         LA    R1,WORKCALL(,CVTPTR)                                0096 00225000
*       CALL ISDAFREE;              /* FREE ACCUMULATOR      @Y30LB55*/ 00226000
         L     @15,@CV00331                                        0097 00227000
         BALR  @14,@15                                             0097 00228000
*       RFY                                                        0098 00229000
*         R1 UNRSTD;                /*                       @Y30LB55*/ 00230000
*     END;                          /* END FREE OF SUMACCUM  @Y30LB55*/ 00231000
*   ELSE                                                           0100 00232000
*     ;                             /* NO ACCUMULATOR TO FREE@Y30LB55*/ 00233000
*                                                                  0100 00234000
@RF00080 DS    0H                                                  0101 00235000
*   /*****************************************************************/ 00236000
*   /*                                                               */ 00237000
*   /* FREE SUMWORK                                                  */ 00238000
*   /*                                                               */ 00239000
*   /*****************************************************************/ 00240000
*                                                                  0101 00241000
*   CORELEN=LENGTH(SUMWORK);        /* LENGTH OF WORKAREA    @Y30LB55*/ 00242000
         MVC   CORELEN(3,CVTPTR),@CF00523+1                        0101 00243000
*   SPNO=SUMSPNO;                   /* SET SUBPOOL NUMBER    @Y30LB55*/ 00244000
         MVC   SPNO(1,CVTPTR),SUMSPNO                              0102 00245000
*   COREADDR=SUM00PTR;              /* ADDR OF WORKAREA      @Y30LB55*/ 00246000
         MVC   COREADDR(4,CVTPTR),SUM00PTR(CVTPTR)                 0103 00247000
*   RFY                                                            0104 00248000
*     R1 RSTD;                      /*                       @Y30LB55*/ 00249000
*   R1=ADDR(WORKCALL);              /* R1 -> ADDR(WORKPTR)   @Y30LB55*/ 00250000
         LA    R1,WORKCALL(,CVTPTR)                                0105 00251000
*   CALL ISDAFREE;                  /* FREE SUMWORK          @Y30LB55*/ 00252000
         L     @15,@CV00331                                        0106 00253000
         BALR  @14,@15                                             0106 00254000
*   RFY                                                            0107 00255000
*     R1 UNRSTD;                    /* END FREEMAIN          @Y30LB55*/ 00256000
*   SUM00PTR=0;                     /* SET MY CVT PTR TO ZERO@Y30LB55*/ 00257000
         SLR   @10,@10                                             0108 00258000
         ST    @10,SUM00PTR(,CVTPTR)                               0108 00259000
*   RETURN CODE(RETCODE);           /* RETURN TO ISDASDA0    @Y30LB55*/ 00260000
         L     @10,RETCODE                                         0109 00261000
         L     @13,4(,@13)                                         0109 00262000
         L     @00,@SIZDATD                                        0109 00263000
         LR    @01,@11                                             0109 00264000
         ISDAFSPC R,LV=(0),A=(1)                                        00265000
         LR    @15,@10                                             0109 00266000
         L     @14,12(,@13)                                        0109 00267000
         LM    @00,@12,20(@13)                                     0109 00268000
         BR    @14                                                 0109 00269000
*                                                                  0110 00270000
*   /*****************************************************************/ 00271000
*   /*                                                               */ 00272000
*   /* PRINTCPU - PROC TO PRINT CPUIDS USED FOR THIS RUN             */ 00273000
*   /*                                                               */ 00274000
*   /*****************************************************************/ 00275000
*                                                                  0110 00276000
*PRINTCPU:                                                         0110 00277000
*   PROC OPTIONS(SAVE(14));         /* PRINT CPUIDS PROC     @Y30LB55*/ 00278000
@EL00001 L     @13,4(,@13)                                         0110 00279000
@EF00001 L     @00,@SIZDATD                                        0110 00280000
         LR    @01,@11                                             0110 00281000
         ISDAFSPC R,LV=(0),A=(1)                                        00282000
@ER00001 LM    @14,@12,12(@13)                                     0110 00283000
         BR    @14                                                 0110 00284000
PRINTCPU ST    @14,@SA00002                                        0110 00285000
*   ANSI=LSKIP3;                    /* SET 3 LINE SKIP       @Y30LB55*/ 00286000
         MVI   ANSI(CVTPTR),C'-'                                   0111 00287000
*   LINE=SUMMSG20;                  /* MOVE SUMMSG20         @Y30LB55*/ 00288000
         MVI   LINE+35(CVTPTR),C' '                                0112 00289000
         MVC   LINE+36(96,CVTPTR),LINE+35(CVTPTR)                  0112 00290000
         MVC   LINE(35,CVTPTR),SUMMSG20                            0112 00291000
*   IF SUMFLAGS(8)='1'B THEN        /* IS OVERFLOW BIT ON    @Y30LB55*/ 00292000
         TM    SUMFLAGS(SUMWKPTR),B'00000001'                      0113 00293000
         BNO   @RF00113                                            0113 00294000
*     MSG21ID=SUMMSG21;             /* YES, MOVE SUMMSG21    @Y30LB55*/ 00295000
         MVC   MSG21ID(42,CVTPTR),SUMMSG21                         0114 00296000
*   ELSE                                                           0115 00297000
*     ;                             /* NO, OK                @Y30LB55*/ 00298000
@RF00113 DS    0H                                                  0116 00299000
*   CPUXXCNT=NCPUUSED;              /* SET CPUID COUNT       @Y30LB55*/ 00300000
         SLR   CPUXXCNT,CPUXXCNT                                   0116 00301000
         ICM   CPUXXCNT,3,NCPUUSED(SUMWKPTR)                       0116 00302000
*   CPUIDPTR=ADDR(CPUFOUND(1));     /* SET PTR TO CPUID TABLE@Y30LB55*/ 00303000
         LA    @10,CPUFOUND(,SUMWKPTR)                             0117 00304000
         ST    @10,CPUIDPTR                                        0117 00305000
*   CALL PRTCPU00;                  /* PRINT CPUID TABLE     @Y30LB55*/ 00306000
         BAL   @14,PRTCPU00                                        0118 00307000
*   IF CNFG0PTR^=0 THEN             /* CONFIGURATION TABLE BUILT   0119 00308000
*                                                            @Y30LB55*/ 00309000
         SLR   @10,@10                                             0119 00310000
         L     @09,CNFG0PTR(,CVTPTR)                               0119 00311000
         CR    @09,@10                                             0119 00312000
         BE    @RF00119                                            0119 00313000
*     DO;                           /* YES, PRINT VALID CPUIDS     0120 00314000
*                                                            @Y30LB55*/ 00315000
*       CPUXXCNT=CPUNO;             /* SET CPUID COUNT       @Y30LB55*/ 00316000
         L     @15,CNFG0PTR(,CVTPTR)                               0121 00317000
         LH    CPUXXCNT,CPUNO(,@15)                                0121 00318000
*       CPUIDPTR=CPUSERAD;          /* SET PTR TO CPUID TABLE@Y30LB55*/ 00319000
*                                                                  0122 00320000
         MVC   CPUIDPTR(4),CPUSERAD(@15)                           0122 00321000
*       /*************************************************************/ 00322000
*       /*                                                           */ 00323000
*       /* COMPARE CPUFOUND LIST WITH CONFIG TABLE TO SEE IF ANY     */ 00324000
*       /* RECORDS USED ARE FOR CPUS NOT IN THE STORAGE SYSTEM       */ 00325000
*       /*                                                           */ 00326000
*       /*************************************************************/ 00327000
*                                                                  0123 00328000
*       J=0;                        /* INIT FOUND FLAG       @Y30LB55*/ 00329000
         LR    J,@10                                               0123 00330000
*       DO I=1 TO NCPUUSED WHILE(J=0);/* LOOP THROUGH CPUIDS @Y30LB55*/ 00331000
         LA    I,1                                                 0124 00332000
         B     @DE00124                                            0124 00333000
@DL00124 LTR   J,J                                                 0124 00334000
         BNZ   @DC00124                                            0124 00335000
*         DO K=1 TO CPUXXCNT WHILE(J=0);/* LOOP THROUGH CONFIG     0125 00336000
*                                                            @Y30LB55*/ 00337000
         LA    K,1                                                 0125 00338000
         B     @DE00125                                            0125 00339000
@DL00125 LTR   J,J                                                 0125 00340000
         BNZ   @DC00125                                            0125 00341000
*           IF CPUFOUND(I)=CPUXXIDS(K) THEN/* FOUND MATCH    @Y30LB55*/ 00342000
         LA    @10,5                                               0126 00343000
         LR    @01,I                                               0126 00344000
         MR    @00,@10                                             0126 00345000
         LR    @15,@10                                             0126 00346000
         MR    @14,K                                               0126 00347000
         ALR   @01,SUMWKPTR                                        0126 00348000
         L     @10,CPUIDPTR                                        0126 00349000
         ALR   @10,@15                                             0126 00350000
         AL    @10,@CF00526                                        0126 00351000
         CLC   CPUFOUND-5(5,@01),CPUXXIDS(@10)                     0126 00352000
         BNE   @RF00126                                            0126 00353000
*             J=1;                  /* SET FOUND FLAG        @Y30LB55*/ 00354000
         LA    J,1                                                 0127 00355000
*           ELSE                                                   0128 00356000
*             ;                     /* NOT FOUND YET         @Y30LB55*/ 00357000
@RF00126 DS    0H                                                  0129 00358000
*         END;                      /* END CHECK FOR CPU(I)  @Y30LB55*/ 00359000
         AH    K,@CH00082                                          0129 00360000
@DE00125 CR    K,CPUXXCNT                                          0129 00361000
         BNH   @DL00125                                            0129 00362000
@DC00125 DS    0H                                                  0130 00363000
*         IF J=0 THEN               /* NOT FOUND             @Y30LB55*/ 00364000
         LTR   J,J                                                 0130 00365000
         BNZ   @RF00130                                            0130 00366000
*           J=1;                    /* SET FLAG AND GET OUT  @Y30LB55*/ 00367000
         LA    J,1                                                 0131 00368000
*         ELSE                      /* CPUID FOUND IN CONFIG TABLE 0132 00369000
*                                                            @Y30LB55*/ 00370000
*           J=0;                    /* RESET FOUND FLAG AND CHECK  0132 00371000
*                                      NEXT ONE              @Y30LB55*/ 00372000
         B     @RC00130                                            0132 00373000
@RF00130 SLR   J,J                                                 0132 00374000
*       END;                        /* END ALL CHECKS        @Y30LB55*/ 00375000
@RC00130 AH    I,@CH00082                                          0133 00376000
@DE00124 SLR   @10,@10                                             0133 00377000
         ICM   @10,3,NCPUUSED(SUMWKPTR)                            0133 00378000
         CR    I,@10                                               0133 00379000
         BNH   @DL00124                                            0133 00380000
@DC00124 DS    0H                                                  0134 00381000
*       IF J^=0 THEN                /* ONE CPUID NOT FOUND   @Y30LB55*/ 00382000
         LTR   J,J                                                 0134 00383000
         BZ    @RF00134                                            0134 00384000
*         DO;                       /* ISSUE WARNING MESSAGE @Y30LB55*/ 00385000
*           ANSI=LSKIP2;            /* SET 2 LINE SKIP       @Y30LB55*/ 00386000
         MVI   ANSI(CVTPTR),C'0'                                   0136 00387000
*           LINE=ISDA1001;          /* MOVE ISDA1001         @Y30LB55*/ 00388000
         MVI   LINE+83(CVTPTR),C' '                                0137 00389000
         MVC   LINE+84(48,CVTPTR),LINE+83(CVTPTR)                  0137 00390000
         MVC   LINE(83,CVTPTR),ISDA1001                            0137 00391000
*           RFY                                                    0138 00392000
*             R1 RSTD;                                     /*@Y30LB55*/ 00393000
*           R1=ADDR(WORKCALL);      /* R1 -> WORKPTR         @Y30LB55*/ 00394000
         LA    R1,WORKCALL(,CVTPTR)                                0139 00395000
*           CALL ISDAPRT0;          /* PRINT ISDA1001        @Y30LB55*/ 00396000
         L     @15,@CV00333                                        0140 00397000
         BALR  @14,@15                                             0140 00398000
*           RFY                                                    0141 00399000
*             R1 UNRSTD;            /* RELEASE R1            @Y30LB55*/ 00400000
*         END;                      /* END PRINT WARNING     @Y30LB55*/ 00401000
*       ELSE                                                       0143 00402000
*         ;                         /* OK, ALL CPUIDS FOUND IN CONFIG   00403000
*                                      TABLE                 @Y30LB55*/ 00404000
@RF00134 DS    0H                                                  0144 00405000
*       ANSI=LSKIP2;                /* SET 2 LINE SKIP       @Y30LB55*/ 00406000
         MVI   ANSI(CVTPTR),C'0'                                   0144 00407000
*       LINE=SUMMSG22;              /* MOVE SUMMSG22         @Y30LB55*/ 00408000
         MVI   LINE+42(CVTPTR),C' '                                0145 00409000
         MVC   LINE+43(89,CVTPTR),LINE+42(CVTPTR)                  0145 00410000
         MVC   LINE(42,CVTPTR),SUMMSG22                            0145 00411000
*       CALL PRTCPU00;              /* PRINT CPUID TABLE     @Y30LB55*/ 00412000
         BAL   @14,PRTCPU00                                        0146 00413000
*     END;                          /* END CONFIGURATION TABLE PRINT    00414000
*                                                            @Y30LB55*/ 00415000
*   ELSE                            /* NO CONFIGURATION TABLE@Y30LB55*/ 00416000
*     DO;                           /* PRINT CONFIG NOTE     @Y30LB55*/ 00417000
         B     @RC00119                                            0148 00418000
@RF00119 DS    0H                                                  0149 00419000
*       ANSI=LSKIP2;                /* SET 2 LINE SKIP       @Y30LB55*/ 00420000
         MVI   ANSI(CVTPTR),C'0'                                   0149 00421000
*       LINE=SUMMSG23;              /* MOVE SUMMSG23         @Y30LB55*/ 00422000
         MVI   LINE+72(CVTPTR),C' '                                0150 00423000
         MVC   LINE+73(59,CVTPTR),LINE+72(CVTPTR)                  0150 00424000
         MVC   LINE(72,CVTPTR),SUMMSG23                            0150 00425000
*       RFY R1 RSTD;                /*                       @Y30LB55*/ 00426000
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPRT         @Y30LB55*/ 00427000
         LA    R1,WORKCALL(,CVTPTR)                                0152 00428000
*       CALL ISDAPRT0;              /* PRINT SUMMSG23        @Y30LB55*/ 00429000
         L     @15,@CV00333                                        0153 00430000
         BALR  @14,@15                                             0153 00431000
*       RFY R1 UNRSTD;              /*                       @Y30LB55*/ 00432000
*     END;                          /* END NO CONFIG CODE    @Y30LB55*/ 00433000
*                                                                  0156 00434000
*   /*****************************************************************/ 00435000
*   /*                                                               */ 00436000
*   /* PRTCPU00 - INNER PROC TO PRINT CPUIDS USED FOR THIS RUN       */ 00437000
*   /*                                                               */ 00438000
*   /*****************************************************************/ 00439000
*                                                                  0156 00440000
*PRTCPU00:                                                         0156 00441000
*   PROC OPTIONS(SAVE(14));         /* INNER PROC TO OUTPUT CPUIDS 0156 00442000
*                                                            @Y30LB55*/ 00443000
         B     @PB00003                                            0156 00444000
PRTCPU00 ST    @14,@SA00003                                        0156 00445000
*   RFY                                                            0157 00446000
*     R1 RSTD;                      /*                       @Y30LB55*/ 00447000
*   R1=ADDR(WORKCALL);              /* R1 -> WORKPTR         @Y30LB55*/ 00448000
         LA    R1,WORKCALL(,CVTPTR)                                0158 00449000
*   CALL ISDAPRT0;                  /* OUTPUT MESSAGE        @Y30LB55*/ 00450000
         L     @15,@CV00333                                        0159 00451000
         BALR  @14,@15                                             0159 00452000
*   RFY                                                            0160 00453000
*     R1 UNRSTD;                    /*                       @Y30LB55*/ 00454000
*   LINE='';                        /* BLANK LINE            @Y30LB55*/ 00455000
         MVI   LINE(CVTPTR),C' '                                   0161 00456000
         MVC   LINE+1(131,CVTPTR),LINE(CVTPTR)                     0161 00457000
*   ANSI=LSKIP1;                    /* 1 LINE SKIP           @Y30LB55*/ 00458000
         MVI   ANSI(CVTPTR),C' '                                   0162 00459000
*   J=1;                            /* INIT CHARACTER POINTER@Y30LB55*/ 00460000
         LA    @10,1                                               0163 00461000
         LR    J,@10                                               0163 00462000
*   DO I=1 TO CPUXXCNT;             /* LOOP THROUGH CPUFOUND @Y30LB55*/ 00463000
         LR    I,@10                                               0164 00464000
         B     @DE00164                                            0164 00465000
@DL00164 DS    0H                                                  0165 00466000
*     TEMP5=CPUXXIDS(I);            /* MOVE TO TEMP          @Y30LB55*/ 00467000
         LR    @10,I                                               0165 00468000
         MH    @10,@CH00182                                        0165 00469000
         L     @07,CPUIDPTR                                        0165 00470000
         ALR   @07,@10                                             0165 00471000
         AL    @07,@CF00526                                        0165 00472000
         MVC   TEMP5(5,SUMWKPTR),CPUXXIDS(@07)                     0165 00473000
*     UNPK(TEMP20(1:13),TEMP7);     /* UNPACK                @Y30LB55*/ 00474000
         UNPK  TEMP20(13,SUMWKPTR),TEMP7(7,SUMWKPTR)               0166 00475000
*     DO K=1 TO 10;                 /* FIX HEX               @Y30LB55*/ 00476000
         LA    K,1                                                 0167 00477000
@DL00167 DS    0H                                                  0168 00478000
*       IF TEMP20(K)>'9' THEN       /* A-F                   @Y30LB55*/ 00479000
         LR    @10,SUMWKPTR                                        0168 00480000
         ALR   @10,K                                               0168 00481000
         CLI   TEMP20-1(@10),C'9'                                  0168 00482000
         BNH   @RF00168                                            0168 00483000
*         TEMP20(K)=TEMP20(K)-'39'X;/* YES, FIX IT           @Y30LB55*/ 00484000
         SLR   @10,@10                                             0169 00485000
         IC    @10,TEMP20-1(K,SUMWKPTR)                            0169 00486000
         SH    @10,@CH00505                                        0169 00487000
         STC   @10,TEMP20-1(K,SUMWKPTR)                            0169 00488000
*       ELSE                                                       0170 00489000
*         ;                         /* NO, OK                @Y30LB55*/ 00490000
@RF00168 DS    0H                                                  0171 00491000
*     END;                          /* END FIX               @Y30LB55*/ 00492000
         AH    K,@CH00082                                          0171 00493000
         CH    K,@CH00503                                          0171 00494000
         BNH   @DL00167                                            0171 00495000
*     LINE(J:J+5)=TEMP16;           /* MOVE CPU USER         @Y30LB55*/ 00496000
         LR    @10,CVTPTR                                          0172 00497000
         ALR   @10,J                                               0172 00498000
         MVC   LINE-1(6,@10),TEMP16(SUMWKPTR)                      0172 00499000
*     LINE(J+6)='-';                /* SET -                 @Y30LB55*/ 00500000
         LR    @10,CVTPTR                                          0173 00501000
         ALR   @10,J                                               0173 00502000
         MVI   LINE+5(@10),C'-'                                    0173 00503000
*     LINE(J+7:J+10)=TEMP710;       /* MOVE CPU ID           @Y30LB55*/ 00504000
         LR    @10,CVTPTR                                          0174 00505000
         ALR   @10,J                                               0174 00506000
         MVC   LINE+6(4,@10),TEMP710(SUMWKPTR)                     0174 00507000
*     J=J+13;                       /* INC TO NEXT FIELD     @Y30LB55*/ 00508000
         AH    J,@CH00431                                          0175 00509000
*     IF I=CPUXXCNT|J>NCPUCHAR THEN /* LINE FULL             @Y30LB55*/ 00510000
         CR    I,CPUXXCNT                                          0176 00511000
         BE    @RT00176                                            0176 00512000
         CH    J,@CH00307                                          0176 00513000
         BNH   @RF00176                                            0176 00514000
@RT00176 DS    0H                                                  0177 00515000
*       DO;                         /* YES, PRINT LINE       @Y30LB55*/ 00516000
*         RFY                                                      0178 00517000
*           R1 RSTD;                /*                       @Y30LB55*/ 00518000
*         R1=ADDR(WORKCALL);        /* R1 -> WORKPTR         @Y30LB55*/ 00519000
         LA    R1,WORKCALL(,CVTPTR)                                0179 00520000
*         CALL ISDAPRT0;            /* OUTPUT CPUID LINE     @Y30LB55*/ 00521000
         L     @15,@CV00333                                        0180 00522000
         BALR  @14,@15                                             0180 00523000
*         RFY                                                      0181 00524000
*           R1 UNRSTD;              /*                       @Y30LB55*/ 00525000
*         J=1;                      /* RESET LINE INDEX      @Y30LB55*/ 00526000
         LA    J,1                                                 0182 00527000
*         LINE='';                  /* BLANK LINE            @Y30LB55*/ 00528000
         MVI   LINE(CVTPTR),C' '                                   0183 00529000
         MVC   LINE+1(131,CVTPTR),LINE(CVTPTR)                     0183 00530000
*       END;                        /* END PRINT LINE        @Y30LB55*/ 00531000
*     ELSE                                                         0185 00532000
*       ;                           /* NO, GET NEXT CPUID    @Y30LB55*/ 00533000
@RF00176 DS    0H                                                  0186 00534000
*   END;                            /* END MOVE CPUID LOOP   @Y30LB55*/ 00535000
         AH    I,@CH00082                                          0186 00536000
@DE00164 CR    I,CPUXXCNT                                          0186 00537000
         BNH   @DL00164                                            0186 00538000
*   END PRTCPU00;                   /* END INNER PROC        @Y30LB55*/ 00539000
@EL00003 DS    0H                                                  0187 00540000
@EF00003 DS    0H                                                  0187 00541000
@ER00003 L     @14,@SA00003                                        0187 00542000
         BR    @14                                                 0187 00543000
*   END PRINTCPU;                   /* END OF PRINT CPUIDS PROC    0188 00544000
*                                                            @Y30LB55*/ 00545000
@EL00002 DS    0H                                                  0188 00546000
@EF00002 DS    0H                                                  0188 00547000
@ER00002 L     @14,@SA00002                                        0188 00548000
         BR    @14                                                 0188 00549000
*                                                                  0189 00550000
*   /*****************************************************************/ 00551000
*   /*                                                               */ 00552000
*   /* PUTTITLE - PROC TO PUTOUT TABLE TITLES                        */ 00553000
*   /*                                                               */ 00554000
*   /*****************************************************************/ 00555000
*                                                                  0189 00556000
*PUTTITLE:                                                         0189 00557000
*   PROC;                           /* OUTPUT TITLES         @Y30LB55*/ 00558000
PUTTITLE STM   @14,@12,@SA00004                                    0189 00559000
*   RFY                                                            0190 00560000
*     R1 RSTD;                      /*                       @Y30LB55*/ 00561000
*   R1=ADDR(WORKCALL);              /* R1 -> WORKPTR         @Y30LB55*/ 00562000
         LA    R1,WORKCALL(,CVTPTR)                                0191 00563000
*   CALL ISDAPRT0;                  /* OUTPUT FIRST LINE     @Y30LB55*/ 00564000
         L     @15,@CV00333                                        0192 00565000
         BALR  @14,@15                                             0192 00566000
*   LINE=SUMMSG31;                  /* MOVE NEXT LINE        @Y30LB55*/ 00567000
         MVI   LINE+86(CVTPTR),C' '                                0193 00568000
         MVC   LINE+87(45,CVTPTR),LINE+86(CVTPTR)                  0193 00569000
         MVC   LINE(86,CVTPTR),SUMMSG31                            0193 00570000
*   ANSI=LSKIP2;                    /* 2 LINE SKIP           @Y30LB55*/ 00571000
         MVI   ANSI(CVTPTR),C'0'                                   0194 00572000
*   CALL ISDAPRT0;                  /* OUTPUT 2ND LINE       @Y30LB55*/ 00573000
         L     @15,@CV00333                                        0195 00574000
         BALR  @14,@15                                             0195 00575000
*   ANSI=LSKIP1;                    /* SET 1 LINE SKIP       @Y30LB55*/ 00576000
         MVI   ANSI(CVTPTR),C' '                                   0196 00577000
*   LINE=SUMMSG32;                  /* MOVE 3RD LINE         @Y30LB55*/ 00578000
         MVI   LINE+86(CVTPTR),C' '                                0197 00579000
         MVC   LINE+87(45,CVTPTR),LINE+86(CVTPTR)                  0197 00580000
         MVC   LINE(86,CVTPTR),SUMMSG32                            0197 00581000
*   IF FLAGMASK(8)='0'B THEN        /* BUFFERED LOG          @Y30LB55*/ 00582000
         TM    FLAGMASK(SUMWKPTR),B'00000001'                      0198 00583000
         BNZ   @RF00198                                            0198 00584000
*     DO;                           /* YES, CHANGE SUMMSG32  @Y30LB55*/ 00585000
*       MSG32PC=M32OBR;             /* CHANGE TEMP TO OBR    @Y30LB55*/ 00586000
         MVC   MSG32PC(4,CVTPTR),@CC00309                          0200 00587000
*       MSG32TC=M32MDR;             /* CHANGE PERM TO MDR    @Y30LB55*/ 00588000
         MVC   MSG32TC(4,CVTPTR),@CC00311                          0201 00589000
*     END;                          /* END LOG CHANGE        @Y30LB55*/ 00590000
*   ELSE                                                           0203 00591000
*     ;                             /* SUMMSG32 OK           @Y30LB55*/ 00592000
@RF00198 DS    0H                                                  0204 00593000
*   CALL ISDAPRT0;                  /* OUTPUT 3RD LINE       @Y30LB55*/ 00594000
         L     @15,@CV00333                                        0204 00595000
         BALR  @14,@15                                             0204 00596000
*   LINE=SUMMSG33;                  /* MOVE 4TH LINE         @Y30LB55*/ 00597000
         MVI   LINE+87(CVTPTR),C' '                                0205 00598000
         MVC   LINE+88(44,CVTPTR),LINE+87(CVTPTR)                  0205 00599000
         MVC   LINE(87,CVTPTR),SUMMSG33                            0205 00600000
*   CALL ISDAPRT0;                  /* OUTPUT 4TH LINE       @Y30LB55*/ 00601000
         L     @15,@CV00333                                        0206 00602000
         BALR  @14,@15                                             0206 00603000
*   RFY                                                            0207 00604000
*     R1 UNRSTD;                    /* RELEASE REG 1         @Y30LB55*/ 00605000
*   END PUTTITLE;                   /* END PUT TITLE PROC    @Y30LB55*/ 00606000
@EL00004 DS    0H                                                  0208 00607000
@EF00004 DS    0H                                                  0208 00608000
@ER00004 LM    @14,@12,@SA00004                                    0208 00609000
         BR    @14                                                 0208 00610000
*                                                                  0209 00611000
*   /*****************************************************************/ 00612000
*   /*                                                               */ 00613000
*   /* BUILDIT - PROC TO BUILD AND PRINT TABLE OUTPUT                */ 00614000
*   /*                                                               */ 00615000
*   /*****************************************************************/ 00616000
*                                                                  0209 00617000
*BUILDIT:                                                          0209 00618000
*   PROC;                           /* BUILD AND PRINT TABLE OUTPUT     00619000
*                                                            @Y30LB55*/ 00620000
BUILDIT  STM   @14,@12,@SA00005                                    0209 00621000
*   LINE='';                        /* BLANK LINE            @Y30LB55*/ 00622000
         MVI   LINE(CVTPTR),C' '                                   0210 00623000
         MVC   LINE+1(131,CVTPTR),LINE(CVTPTR)                     0210 00624000
*   OUTFMT=MDCFXXX;                 /* MOVE FORMAT ID        @Y30LB55*/ 00625000
         MVC   OUTFMT(4,CVTPTR),MDCFXXX(DEVIDPTR)                  0211 00626000
*   IF MDFXXX(1)='1'B THEN          /* FORMAT 0              @ZM30976*/ 00627000
         TM    MDFXXX(DEVIDPTR),B'10000000'                        0212 00628000
         BNO   @RF00212                                            0212 00629000
*     OUTMSGCD=MDCSMXXX;            /* YES, MOVE MSG CODE    @ZM30976*/ 00630000
         MVC   OUTMSGCD(2,CVTPTR),MDCSMXXX(DEVIDPTR)               0213 00631000
*   ELSE                            /* NOT FORMAT 0          @ZM30976*/ 00632000
*     DO;                           /* MOVE SA FORMAT/MSG    @ZM31022*/ 00633000
         B     @RC00212                                            0214 00634000
@RF00212 DS    0H                                                  0215 00635000
*       OUTSAFMT=MDCSXXX;           /* MOVE SA FORMAT ID     @ZM30976*/ 00636000
         MVC   OUTSAFMT(1,CVTPTR),MDCSXXX(DEVIDPTR)                0215 00637000
*       IF MDCMXXX^=' ' THEN        /* IS MSG CODE BLANK     @ZM31022*/ 00638000
         CLI   MDCMXXX(DEVIDPTR),C' '                              0216 00639000
         BE    @RF00216                                            0216 00640000
*         OUT9CDE=MSG9CDE;          /* NO, MOVE SPECIAL MESSAGE CODE    00641000
*                                      FOR 9C,9D,9E          @ZM31022*/ 00642000
         MVC   OUT9CDE(3,CVTPTR),@CC00313                          0217 00643000
*       ELSE;                       /* MSG CODE IS BLANK     @ZM31022*/ 00644000
@RF00216 DS    0H                                                  0219 00645000
*     END;                          /* END MOVE FMT/MSG      @ZM31022*/ 00646000
*   OUTDEVID=MDIDXXX;               /* MOVE DEVICE ID        @Y30LB55*/ 00647000
@RC00212 MVC   OUTDEVID(5,CVTPTR),MDIDXXX(DEVIDPTR)                0220 00648000
*   OUTMSGID=MDMSGXXX;              /* MOVE FORMAT MESSAGE   @Y30LB55*/ 00649000
         MVC   OUTMSGID(34,CVTPTR),MDMSGXXX(DEVIDPTR)              0221 00650000
*   I=MCPXXX+MCTXXX;                /* TOTAL COUNT           @Y30LB55*/ 00651000
         SLR   I,I                                                 0222 00652000
         ICM   I,3,MCPXXX(COUNTPTR)                                0222 00653000
         SLR   @10,@10                                             0222 00654000
         ICM   @10,3,MCTXXX(COUNTPTR)                              0222 00655000
         ALR   I,@10                                               0222 00656000
*   CVD(I,TEMP8);                   /* CONVERT TOTAL         @Y30LB55*/ 00657000
         CVD   I,TEMP8(,SUMWKPTR)                                  0223 00658000
*   OUTTOTAL=EDPAT02;               /* MOVE EDIT PATTERN     @Y30LB55*/ 00659000
         MVC   OUTTOTAL(6,CVTPTR),EDPAT02                          0224 00660000
*   ED(OUTTOTAL,TEMP68);            /* EDIT TOTAL COUNT      @Y30LB55*/ 00661000
         ED    OUTTOTAL(6,CVTPTR),TEMP68(SUMWKPTR)                 0225 00662000
*   IF I>0 THEN                     /* ANY COUNTS FOR THIS FORMAT  0226 00663000
*                                                            @Y30LB55*/ 00664000
         LTR   I,I                                                 0226 00665000
         BNP   @RF00226                                            0226 00666000
*     DO;                           /* YES, FILL IN DATES AND PERCENT   00667000
*                                                            @Y30LB55*/ 00668000
*       TEMP2230=''B;               /* ZERO TEMP AREA        @Y30LB55*/ 00669000
         XC    TEMP2230(9,SUMWKPTR),TEMP2230(SUMWKPTR)             0228 00670000
*       TEMP2326=MLTIME;            /* MOVE LOW TIME         @Y30LB55*/ 00671000
         MVC   TEMP2326(4,SUMWKPTR),MLTIME(COUNTPTR)               0229 00672000
*       TEMP2730=MLDATE;            /* MOVE LOW DATE         @Y30LB55*/ 00673000
         MVC   TEMP2730(4,SUMWKPTR),MLDATE(COUNTPTR)               0230 00674000
*       EDREC01=EDPAT01;            /* MOVE EDIT PATTERN     @Y30LB55*/ 00675000
         MVC   EDREC01(21,SUMWKPTR),EDPAT01                        0231 00676000
*       ED(EDREC01,TEMP2230);       /* EDIT LOW DATE+TIME    @Y30LB55*/ 00677000
         ED    EDREC01(21,SUMWKPTR),TEMP2230(SUMWKPTR)             0232 00678000
*       OUTLDAY=ED01DAY;            /* MOVE EDITED LOW DAY   @Y30LB55*/ 00679000
         MVC   OUTLDAY(3,CVTPTR),ED01DAY(SUMWKPTR)                 0233 00680000
*       OUTLYEAR=ED01YEAR;          /* MOVE EDITED LOW YEAR  @Y30LB55*/ 00681000
         MVC   OUTLYEAR(3,CVTPTR),ED01YEAR(SUMWKPTR)               0234 00682000
*       OUTLTIME=ED01TIME;          /* MOVE EDITED LOW TIME  @Y30LB55*/ 00683000
         MVC   OUTLTIME(8,CVTPTR),ED01TIME(SUMWKPTR)               0235 00684000
*       TEMP2326=MHTIME;            /* MOVE HIGH TIME        @Y30LB55*/ 00685000
         MVC   TEMP2326(4,SUMWKPTR),MHTIME(COUNTPTR)               0236 00686000
*       TEMP2730=MHDATE;            /* MOVE HIGH DATE        @Y30LB55*/ 00687000
         MVC   TEMP2730(4,SUMWKPTR),MHDATE(COUNTPTR)               0237 00688000
*       EDREC01=EDPAT01;            /* MOVE EDIT PATTERN     @Y30LB55*/ 00689000
         MVC   EDREC01(21,SUMWKPTR),EDPAT01                        0238 00690000
*       ED(EDREC01,TEMP2230);       /* EDIT LOW DATE+TIME    @Y30LB55*/ 00691000
         ED    EDREC01(21,SUMWKPTR),TEMP2230(SUMWKPTR)             0239 00692000
*       OUTHDAY=ED01DAY;            /* MOVE EDITED HIGH DAY  @Y30LB55*/ 00693000
         MVC   OUTHDAY(3,CVTPTR),ED01DAY(SUMWKPTR)                 0240 00694000
*       OUTHYEAR=ED01YEAR;          /* MOVE EDITED HIGH YEAR @Y30LB55*/ 00695000
         MVC   OUTHYEAR(3,CVTPTR),ED01YEAR(SUMWKPTR)               0241 00696000
*       OUTHTIME=ED01TIME;          /* MOVE EDITED HIGH TIME @Y30LB55*/ 00697000
         MVC   OUTHTIME(8,CVTPTR),ED01TIME(SUMWKPTR)               0242 00698000
*       J=(I*1000)/K;               /* TOTAL*1000/TOTAL RECORD COUNT    00699000
*                                                            @Y30LB55*/ 00700000
         LR    @01,I                                               0243 00701000
         M     @00,@CF00514                                        0243 00702000
         DR    @00,K                                               0243 00703000
         LR    J,@01                                               0243 00704000
*       CVD(J,TEMP8);               /* CONVERT PERCENT       @Y30LB55*/ 00705000
         CVD   J,TEMP8(,SUMWKPTR)                                  0244 00706000
*       OUTPERC=EDPAT03;            /* MOVE EDIT PATTERN     @Y30LB55*/ 00707000
         MVC   OUTPERC(7,CVTPTR),EDPAT03                           0245 00708000
*       ED(OUTPERC,TEMP68);         /* EDIT PERCENT          @Y30LB55*/ 00709000
         ED    OUTPERC(7,CVTPTR),TEMP68(SUMWKPTR)                  0246 00710000
*     END;                          /* END PERCENT CODE      @Y30LB55*/ 00711000
*   ELSE                                                           0248 00712000
*     ;                             /* NO, LEAVE PERCENT BLANK     0248 00713000
*                                                            @Y30LB55*/ 00714000
@RF00226 DS    0H                                                  0249 00715000
*   CVD(MCPXXX,TEMP8);              /* CONVERT COUNT PERMS   @Y30LB55*/ 00716000
         SLR   @10,@10                                             0249 00717000
         ICM   @10,3,MCPXXX(COUNTPTR)                              0249 00718000
         CVD   @10,TEMP8(,SUMWKPTR)                                0249 00719000
*   OUTPERM=EDPAT02;                /* MOVE EDIT PATTERN     @Y30LB55*/ 00720000
         MVC   OUTPERM(6,CVTPTR),EDPAT02                           0250 00721000
*   ED(OUTPERM,TEMP68);             /* EDIT COUNT PERMS      @Y30LB55*/ 00722000
         ED    OUTPERM(6,CVTPTR),TEMP68(SUMWKPTR)                  0251 00723000
*   CVD(MCTXXX,TEMP8);              /* CONVERT COUNT TEMPS   @Y30LB55*/ 00724000
         SLR   @10,@10                                             0252 00725000
         ICM   @10,3,MCTXXX(COUNTPTR)                              0252 00726000
         CVD   @10,TEMP8(,SUMWKPTR)                                0252 00727000
*   OUTTEMP=EDPAT02;                /* MOVE EDIT PATTERN     @Y30LB55*/ 00728000
         MVC   OUTTEMP(6,CVTPTR),EDPAT02                           0253 00729000
*   ED(OUTTEMP,TEMP68);             /* EDIT COUNT TEMPS      @Y30LB55*/ 00730000
*                                                                  0254 00731000
         ED    OUTTEMP(6,CVTPTR),TEMP68(SUMWKPTR)                  0254 00732000
*   /*****************************************************************/ 00733000
*   /*                                                               */ 00734000
*   /* OUTPUT LINE                                                   */ 00735000
*   /*                                                               */ 00736000
*   /*****************************************************************/ 00737000
*                                                                  0255 00738000
*   IF FORMATCK=MCFXXX THEN         /* NEW FORMAT            @Y30LB55*/ 00739000
         CLC   FORMATCK(1,SUMWKPTR),MCFXXX(COUNTPTR)               0255 00740000
         BNE   @RF00255                                            0255 00741000
*     ANSI=LSKIP1;                  /* NO, SET 1 LINE SKIP   @Y30LB55*/ 00742000
         MVI   ANSI(CVTPTR),C' '                                   0256 00743000
*   ELSE                            /* NEW FORMAT            @Y30LB55*/ 00744000
*     ANSI=LSKIP2;                  /* YES, SET 2 LINE SKIP  @Y30LB55*/ 00745000
         B     @RC00255                                            0257 00746000
@RF00255 MVI   ANSI(CVTPTR),C'0'                                   0257 00747000
*   IF MDFXXX(3)='1'B THEN          /* CHECK EXCEPTION FMT 2 @ZM31022*/ 00748000
@RC00255 TM    MDFXXX(DEVIDPTR),B'00100000'                        0258 00749000
         BNO   @RF00258                                            0258 00750000
*     ANSI=LSKIP1;                  /* NO SKIP FROM 1 TO 2   @ZM31022*/ 00751000
         MVI   ANSI(CVTPTR),C' '                                   0259 00752000
*   ELSE                            /* CHECK OTHER EXCEPTIONS@ZM31022*/ 00753000
*     IF MDFLAG(3)='1'B&(MDSMXXX='00'X|MDSMXXX='60'X) THEN /*      0260 00754000
*                                    REAL 3330 FORMAT 0 OR 6 @ZM31022*/ 00755000
         B     @RC00258                                            0260 00756000
@RF00258 TM    MDFLAG(DEVIDPTR),B'00100000'                        0260 00757000
         BNO   @RF00260                                            0260 00758000
         CLI   MDSMXXX(DEVIDPTR),X'00'                             0260 00759000
         BE    @RT00260                                            0260 00760000
         CLI   MDSMXXX(DEVIDPTR),X'60'                             0260 00761000
         BNE   @RF00260                                            0260 00762000
@RT00260 DS    0H                                                  0261 00763000
*       ANSI=LSKIP2;                /* SKIP FROM STAG TO REAL@ZM31022*/ 00764000
         MVI   ANSI(CVTPTR),C'0'                                   0261 00765000
*     ELSE;                         /* NO MORE EXCEPTIONS    @ZM31022*/ 00766000
@RF00260 DS    0H                                                  0263 00767000
*   RFY                                                            0263 00768000
*     R1 RSTD;                      /*                       @Y30LB55*/ 00769000
@RC00258 DS    0H                                                  0264 00770000
*   R1=ADDR(WORKCALL);              /* R1 -> WORKPTR         @Y30LB55*/ 00771000
         LA    R1,WORKCALL(,CVTPTR)                                0264 00772000
*   CALL ISDAPRT0;                  /* OUTPUT TABLE LINE     @Y30LB55*/ 00773000
         L     @15,@CV00333                                        0265 00774000
         BALR  @14,@15                                             0265 00775000
*   RFY                                                            0266 00776000
*     R1 UNRSTD;                    /* RELEASE REG 1         @Y30LB55*/ 00777000
*   FORMATCK=MCFXXX;                /* SAVE CURRENT FORMAT   @Y30LB55*/ 00778000
         MVC   FORMATCK(1,SUMWKPTR),MCFXXX(COUNTPTR)               0267 00779000
*   TOTPERMS=TOTPERMS+MCPXXX;       /* INC COUNT OF PERMS    @Y30LB55*/ 00780000
         SLR   @10,@10                                             0268 00781000
         ICM   @10,3,MCPXXX(COUNTPTR)                              0268 00782000
         AL    @10,TOTPERMS(,SUMWKPTR)                             0268 00783000
         ST    @10,TOTPERMS(,SUMWKPTR)                             0268 00784000
*   TOTTEMPS=TOTTEMPS+MCTXXX;       /* INC COUNT OF TEMPS    @Y30LB55*/ 00785000
         SLR   @10,@10                                             0269 00786000
         ICM   @10,3,MCTXXX(COUNTPTR)                              0269 00787000
         AL    @10,TOTTEMPS(,SUMWKPTR)                             0269 00788000
         ST    @10,TOTTEMPS(,SUMWKPTR)                             0269 00789000
*   END BUILDIT;                    /* END PROC              @Y30LB55*/ 00790000
@EL00005 DS    0H                                                  0270 00791000
@EF00005 DS    0H                                                  0270 00792000
@ER00005 LM    @14,@12,@SA00005                                    0270 00793000
         BR    @14                                                 0270 00794000
*                                                                  0271 00795000
*   /*****************************************************************/ 00796000
*   /*                                                               */ 00797000
*   /* PUTTOTAL - PROC TO PRINT TOTALS                               */ 00798000
*   /*                                                               */ 00799000
*   /*****************************************************************/ 00800000
*                                                                  0271 00801000
*PUTTOTAL:                                                         0271 00802000
*   PROC;                           /* PROC TO PRINT TOTALS  @Y30LB55*/ 00803000
PUTTOTAL STM   @14,@12,@SA00006                                    0271 00804000
*   ANSI=LSKIP2;                    /* 2 LINE SKIP           @Y30LB55*/ 00805000
         MVI   ANSI(CVTPTR),C'0'                                   0272 00806000
*   LINE='';                        /* BLANK LINE            @Y30LB55*/ 00807000
         MVI   LINE(CVTPTR),C' '                                   0273 00808000
         MVC   LINE+1(131,CVTPTR),LINE(CVTPTR)                     0273 00809000
*   MSG37ID=SUMMSG37;               /* MOVE SUMMSG37         @Y30LB55*/ 00810000
         MVC   MSG37ID(6,CVTPTR),SUMMSG37                          0274 00811000
*   CVD(K,TEMP8);                   /* CONVERT TOTAL COUNT   @Y30LB55*/ 00812000
         CVD   K,TEMP8(,SUMWKPTR)                                  0275 00813000
*   MSG37TOT=EDPAT02;               /* MOVE EDIT PATTERN     @Y30LB55*/ 00814000
         MVC   MSG37TOT(6,CVTPTR),EDPAT02                          0276 00815000
*   ED(MSG37TOT,TEMP68);            /* EDIT TOTAL            @Y30LB55*/ 00816000
         ED    MSG37TOT(6,CVTPTR),TEMP68(SUMWKPTR)                 0277 00817000
*   CVD(TOTPERMS,TEMP8);            /* CONVERT TOTAL PERMS   @Y30LB55*/ 00818000
         L     @10,TOTPERMS(,SUMWKPTR)                             0278 00819000
         CVD   @10,TEMP8(,SUMWKPTR)                                0278 00820000
*   MSG37OBR=EDPAT02;               /* MOVE EDIT PATTERN     @Y30LB55*/ 00821000
         MVC   MSG37OBR(6,CVTPTR),EDPAT02                          0279 00822000
*   ED(MSG37OBR,TEMP68);            /* EDIT COUNT PERMS      @Y30LB55*/ 00823000
         ED    MSG37OBR(6,CVTPTR),TEMP68(SUMWKPTR)                 0280 00824000
*   CVD(TOTTEMPS,TEMP8);            /* CONVERT COUNT TEMPS   @Y30LB55*/ 00825000
         L     @10,TOTTEMPS(,SUMWKPTR)                             0281 00826000
         CVD   @10,TEMP8(,SUMWKPTR)                                0281 00827000
*   MSG37MDR=EDPAT02;               /* MOVE EDIT PATTERN     @Y30LB55*/ 00828000
         MVC   MSG37MDR(6,CVTPTR),EDPAT02                          0282 00829000
*   ED(MSG37MDR,TEMP68);            /* EDIT COUNT TEMPS      @Y30LB55*/ 00830000
         ED    MSG37MDR(6,CVTPTR),TEMP68(SUMWKPTR)                 0283 00831000
*   RFY                                                            0284 00832000
*     R1 RSTD;                      /*                       @Y30LB55*/ 00833000
*   R1=ADDR(WORKCALL);              /* R1 -> WORKPTR         @Y30LB55*/ 00834000
         LA    R1,WORKCALL(,CVTPTR)                                0285 00835000
*   CALL ISDAPRT0;                  /* PRINT SUMMSG37        @Y30LB55*/ 00836000
         L     @15,@CV00333                                        0286 00837000
         BALR  @14,@15                                             0286 00838000
*   RFY                                                            0287 00839000
*     R1 UNRSTD;                    /* RELEASE REG 1         @Y30LB55*/ 00840000
*   END PUTTOTAL;                   /* END PRINT TOTALS PROC @Y30LB55*/ 00841000
@EL00006 DS    0H                                                  0288 00842000
@EF00006 DS    0H                                                  0288 00843000
@ER00006 LM    @14,@12,@SA00006                                    0288 00844000
         BR    @14                                                 0288 00845000
*                                                                  0289 00846000
*   /*****************************************************************/ 00847000
*   /*                                                               */ 00848000
*   /*  RCODESUM - PROC TO PRINT THE COUNTS OF EACH UNIQUE OCCURRENCE*/ 00849000
*   /*             OF MSC FORMAT 0 MESSAGE CODE 06 REASON CODES FOUND*/ 00850000
*   /*             IN BYTE 12.                                       */ 00851000
*   /*                                                               */ 00852000
*   /*****************************************************************/ 00853000
*                                                                  0289 00854000
*RCODESUM:                                                         0289 00855000
*   PROC OPTIONS(SAVE(14));         /* PROC TO PRINT RCODES  @ZM31074*/ 00856000
*                                                                  0289 00857000
RCODESUM ST    @14,@SA00007                                        0289 00858000
*   /*****************************************************************/ 00859000
*   /*                                                               */ 00860000
*   /* OUTPUT FIRST 3 LINES                                          */ 00861000
*   /*                                                               */ 00862000
*   /*****************************************************************/ 00863000
*                                                                  0290 00864000
*   ANSI=LSKIP3;                    /* SET 3 LINE SKIP       @ZM31074*/ 00865000
         MVI   ANSI(CVTPTR),C'-'                                   0290 00866000
*   LINE=SUMMSG50;                  /* MOVE MSG50            @ZM31074*/ 00867000
         MVI   LINE+36(CVTPTR),C' '                                0291 00868000
         MVC   LINE+37(95,CVTPTR),LINE+36(CVTPTR)                  0291 00869000
         MVC   LINE(36,CVTPTR),SUMMSG50                            0291 00870000
*   MSG53OVL=SUMMSG51;              /* MOVE RIGHT PART       @ZM31074*/ 00871000
         MVC   MSG53OVL(52,CVTPTR),SUMMSG51                        0292 00872000
*   RFY R1 RSTD;                                                   0293 00873000
*   R1=ADDR(WORKCALL);              /* R1 -> WORKPTR         @ZM31074*/ 00874000
         LA    R1,WORKCALL(,CVTPTR)                                0294 00875000
*   CALL ISDAPRT0;                  /* PRINT IT              @ZM31074*/ 00876000
         L     @15,@CV00333                                        0295 00877000
         BALR  @14,@15                                             0295 00878000
*   RFY R1 UNRSTD;                                                 0296 00879000
*   IF RCODECNT>0 THEN              /* HAVE CODES TO PRINT   @ZM31074*/ 00880000
         ICM   @10,15,RCODECNT(SUMWKPTR)                           0297 00881000
         BNP   @RF00297                                            0297 00882000
*     DO;                           /* YES, PRINT SUMMARY    @ZM31074*/ 00883000
*       LINE='';                    /* BLANK LINE            @ZM31074*/ 00884000
         MVI   LINE(CVTPTR),C' '                                   0299 00885000
         MVC   LINE+1(131,CVTPTR),LINE(CVTPTR)                     0299 00886000
*       J=1;                        /* SET CODE INDEX        @ZM31074*/ 00887000
         LA    J,1                                                 0300 00888000
*       DO I=3 TO 108 BY 7;         /* LOOP THROUGH LINE     @ZM31074*/ 00889000
         LA    I,3                                                 0301 00890000
@DL00301 DS    0H                                                  0302 00891000
*         LINE(I)=BAR;              /* MOVE BAR              @ZM31074*/ 00892000
         LR    @10,CVTPTR                                          0302 00893000
         ALR   @10,I                                               0302 00894000
         MVI   LINE-1(@10),C'|'                                    0302 00895000
*         LINE(I+4)=CODENUMB(J);    /* MOVE HEX NUMBER       @ZM31074*/ 00896000
         LR    @10,CVTPTR                                          0303 00897000
         ALR   @10,I                                               0303 00898000
         LA    @07,CODENUMB-1(J)                                   0303 00899000
         MVC   LINE+3(1,@10),0(@07)                                0303 00900000
*         J=J+1;                    /* ADD 1 TO J            @ZM31074*/ 00901000
         AH    J,@CH00082                                          0304 00902000
*       END;                        /* END MOVE BAR          @ZM31074*/ 00903000
         AH    I,@CH00217                                          0305 00904000
         CH    I,@CH00522                                          0305 00905000
         BNH   @DL00301                                            0305 00906000
*       LINE(I)=BAR;                /* MOVE LAST BAR         @ZM31074*/ 00907000
         LR    @10,CVTPTR                                          0306 00908000
         ALR   @10,I                                               0306 00909000
         MVI   LINE-1(@10),C'|'                                    0306 00910000
*       ANSI=LSKIP2;                /* SET 2 LINE SKIP       @ZM31074*/ 00911000
         MVI   ANSI(CVTPTR),C'0'                                   0307 00912000
*       RFY R1 RSTD;                                               0308 00913000
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @ZM31074*/ 00914000
         LA    R1,WORKCALL(,CVTPTR)                                0309 00915000
*       CALL ISDAPRT0;              /* PRINT LINE 2          @ZM31074*/ 00916000
         L     @15,@CV00333                                        0310 00917000
         BALR  @14,@15                                             0310 00918000
*       LINE=DASH;                  /* MOVE DASH             @ZM31074*/ 00919000
         MVI   LINE+117(CVTPTR),C' '                               0311 00920000
         MVC   LINE+118(14,CVTPTR),LINE+117(CVTPTR)                0311 00921000
         MVC   LINE(117,CVTPTR),DASH                               0311 00922000
*       ANSI=LSKIP1;                /* SET 1 LINE SKIP       @ZM31074*/ 00923000
         MVI   ANSI(CVTPTR),C' '                                   0312 00924000
*       CALL ISDAPRT0;              /* WRITE LINE 3          @ZM31074*/ 00925000
*                                                                  0313 00926000
         L     @15,@CV00333                                        0313 00927000
         BALR  @14,@15                                             0313 00928000
*       /*************************************************************/ 00929000
*       /*                                                           */ 00930000
*       /* PRINT TERMINATION CODE COUNTS IN 16 LINES                 */ 00931000
*       /*                                                           */ 00932000
*       /*************************************************************/ 00933000
*                                                                  0314 00934000
*       DO I=1 TO 16;               /* PRINT 16 LINES        @ZM31074*/ 00935000
         LA    I,1                                                 0314 00936000
@DL00314 DS    0H                                                  0315 00937000
*         LINE='';                  /* BLANK LINE            @ZM31074*/ 00938000
         MVI   LINE(CVTPTR),C' '                                   0315 00939000
         MVC   LINE+1(131,CVTPTR),LINE(CVTPTR)                     0315 00940000
*         LINE(1)=CODENUMB(I);      /* MOVE CODE             @ZM31074*/ 00941000
         LA    @10,CODENUMB-1(I)                                   0316 00942000
         MVC   LINE(1,CVTPTR),0(@10)                               0316 00943000
*         J=((I-1)*16)+1;           /* COMPUTE RCODES INDEX  @ZM31074*/ 00944000
         LR    J,I                                                 0317 00945000
         BCTR  J,0                                                 0317 00946000
         SLA   J,4                                                 0317 00947000
         AH    J,@CH00082                                          0317 00948000
*         L=3;                      /* SET LINE INDEX        @ZM31074*/ 00949000
         LA    L,3                                                 0318 00950000
*         DO K=J TO J+15;           /* LOOP THROUGH RCODES   @ZM31074*/ 00951000
         LR    K,J                                                 0319 00952000
         B     @DE00319                                            0319 00953000
@DL00319 DS    0H                                                  0320 00954000
*           IF RCODES(K)>0 THEN     /* NON ZERO COUNT        @ZM31074*/ 00955000
         LR    @10,K                                               0320 00956000
         ALR   @10,@10                                             0320 00957000
         L     @15,RCODEPTR(,SUMWKPTR)                             0320 00958000
         ALR   @15,@10                                             0320 00959000
         AL    @15,@CF00527                                        0320 00960000
         SLR   @10,@10                                             0320 00961000
         ICM   @10,3,RCODES(@15)                                   0320 00962000
         LTR   @10,@10                                             0320 00963000
         BNP   @RF00320                                            0320 00964000
*             DO;                   /* YES, CONVERT IT       @ZM31074*/ 00965000
*               CVD(RCODES(K),TEMP8);/* CONVERT TO DEC       @ZM31074*/ 00966000
         CVD   @10,TEMP8(,SUMWKPTR)                                0322 00967000
*               LINE(L:L+5)=EDPAT02;/* MOVE EDIT PATTERN     @ZM31074*/ 00968000
         LR    @10,CVTPTR                                          0323 00969000
         ALR   @10,L                                               0323 00970000
         MVC   LINE-1(6,@10),EDPAT02                               0323 00971000
*               ED(LINE(L:L+5),TEMP68);/* EDIT COUNT         @ZM31074*/ 00972000
         LR    @10,CVTPTR                                          0324 00973000
         ALR   @10,L                                               0324 00974000
         ED    LINE-1(6,@10),TEMP68(SUMWKPTR)                      0324 00975000
*             END;                  /* END EDIT CODE         @ZM31074*/ 00976000
*           ELSE;                   /* BLANK FOR ZERO COUNT  @ZM31074*/ 00977000
@RF00320 DS    0H                                                  0327 00978000
*           LINE(L)=BAR;            /* MOVE BAR              @ZM31074*/ 00979000
         LR    @10,CVTPTR                                          0327 00980000
         ALR   @10,L                                               0327 00981000
         MVI   LINE-1(@10),C'|'                                    0327 00982000
*           L=L+7;                  /* MOVE LINE POINTER     @ZM31074*/ 00983000
         AH    L,@CH00217                                          0328 00984000
*         END;                      /* END FILL LINE CODE    @ZM31074*/ 00985000
         AH    K,@CH00082                                          0329 00986000
@DE00319 LA    @10,15                                              0329 00987000
         ALR   @10,J                                               0329 00988000
         CR    K,@10                                               0329 00989000
         BNH   @DL00319                                            0329 00990000
*         LINE(L)=BAR;              /* LAST BAR              @ZM31074*/ 00991000
         LR    @10,CVTPTR                                          0330 00992000
         ALR   @10,L                                               0330 00993000
         MVI   LINE-1(@10),C'|'                                    0330 00994000
*         LINE(L+2)=CODENUMB(I);    /* MOVE HEX NUMBER       @ZM31074*/ 00995000
         LR    @10,CVTPTR                                          0331 00996000
         ALR   @10,L                                               0331 00997000
         LA    @07,CODENUMB-1(I)                                   0331 00998000
         MVC   LINE+1(1,@10),0(@07)                                0331 00999000
*         CALL ISDAPRT0;            /* PRINT LINE            @ZM31074*/ 01000000
         L     @15,@CV00333                                        0332 01001000
         BALR  @14,@15                                             0332 01002000
*       END;                        /* END LOOP FOR 16 LINES @ZM31074*/ 01003000
         AH    I,@CH00082                                          0333 01004000
         CH    I,@CH00156                                          0333 01005000
         BNH   @DL00314                                            0333 01006000
*       LINE=DASH;                  /* MOVE DASHS            @ZM31074*/ 01007000
         MVI   LINE+117(CVTPTR),C' '                               0334 01008000
         MVC   LINE+118(14,CVTPTR),LINE+117(CVTPTR)                0334 01009000
         MVC   LINE(117,CVTPTR),DASH                               0334 01010000
*       CALL ISDAPRT0;              /* WRITE DASH LINE       @ZM31074*/ 01011000
*                                                                  0335 01012000
         L     @15,@CV00333                                        0335 01013000
         BALR  @14,@15                                             0335 01014000
*       /*************************************************************/ 01015000
*       /*                                                           */ 01016000
*       /* PRINT LAST LINE AND NOTE AT BOTTOM                        */ 01017000
*       /*                                                           */ 01018000
*       /*************************************************************/ 01019000
*                                                                  0336 01020000
*       LINE='';                    /* BLANK LINE            @ZM31074*/ 01021000
         MVI   LINE(CVTPTR),C' '                                   0336 01022000
         MVC   LINE+1(131,CVTPTR),LINE(CVTPTR)                     0336 01023000
*       J=1;                        /* SET CODE INDEX        @ZM31074*/ 01024000
         LA    J,1                                                 0337 01025000
*       DO I=3 TO 108 BY 7;         /* LOOP THROUGH LINE     @ZM31074*/ 01026000
         LA    I,3                                                 0338 01027000
@DL00338 DS    0H                                                  0339 01028000
*         LINE(I)=BAR;              /* MOVE BAR              @ZM31074*/ 01029000
         LR    @10,CVTPTR                                          0339 01030000
         ALR   @10,I                                               0339 01031000
         MVI   LINE-1(@10),C'|'                                    0339 01032000
*         LINE(I+4)=CODENUMB(J);    /* MOVE HEX NUMBER       @ZM31074*/ 01033000
         LR    @10,CVTPTR                                          0340 01034000
         ALR   @10,I                                               0340 01035000
         LA    @07,CODENUMB-1(J)                                   0340 01036000
         MVC   LINE+3(1,@10),0(@07)                                0340 01037000
*         J=J+1;                    /* ADD 1 TO J            @ZM31074*/ 01038000
         AH    J,@CH00082                                          0341 01039000
*       END;                        /* END LINE FILL         @ZM31074*/ 01040000
         AH    I,@CH00217                                          0342 01041000
         CH    I,@CH00522                                          0342 01042000
         BNH   @DL00338                                            0342 01043000
*       LINE(I)=BAR;                /* MOVE LAST BAR         @ZM31074*/ 01044000
         LR    @10,CVTPTR                                          0343 01045000
         ALR   @10,I                                               0343 01046000
         MVI   LINE-1(@10),C'|'                                    0343 01047000
*       CALL ISDAPRT0;              /* PRINT LAST LINE       @ZM31074*/ 01048000
         L     @15,@CV00333                                        0344 01049000
         BALR  @14,@15                                             0344 01050000
*       LINE=SUMMSG52;              /* MOVE MESSAGE          @ZM31074*/ 01051000
         MVI   LINE+70(CVTPTR),C' '                                0345 01052000
         MVC   LINE+71(61,CVTPTR),LINE+70(CVTPTR)                  0345 01053000
         MVC   LINE(70,CVTPTR),SUMMSG52                            0345 01054000
*       ANSI=LSKIP2;                /* SET 2 LINE SKIP       @ZM31074*/ 01055000
         MVI   ANSI(CVTPTR),C'0'                                   0346 01056000
*       CALL ISDAPRT0;              /* PRINT NOTE AT BOTTOM  @ZM31074*/ 01057000
         L     @15,@CV00333                                        0347 01058000
         BALR  @14,@15                                             0347 01059000
*       RFY R1 UNRSTD;              /* RELEASE R1            @ZM31074*/ 01060000
*     END;                          /* END PRINT SUMMARY OF REASON 0349 01061000
*                                      CODES                 @ZM31074*/ 01062000
*   ELSE                            /* NO CODES TO PRINT     @ZM31074*/ 01063000
*     DO;                           /* PRINT NONE            @ZM31074*/ 01064000
         B     @RC00297                                            0350 01065000
@RF00297 DS    0H                                                  0351 01066000
*       LINE=SUMMSG53;              /* MOVE MESSAGE          @ZM31074*/ 01067000
         MVI   LINE+13(CVTPTR),C' '                                0351 01068000
         MVC   LINE+14(118,CVTPTR),LINE+13(CVTPTR)                 0351 01069000
         MVC   LINE(13,CVTPTR),SUMMSG53                            0351 01070000
*       ANSI=LSKIP3;                /* SET 3 LINE SKIP       @ZM31074*/ 01071000
         MVI   ANSI(CVTPTR),C'-'                                   0352 01072000
*       RFY R1 RSTD;                                               0353 01073000
*       R1=ADDR(WORKCALL);          /* R1 -> WORKPTR         @ZM31074*/ 01074000
         LA    R1,WORKCALL(,CVTPTR)                                0354 01075000
*       CALL ISDAPRT0;              /* PRINT NO DATA FOUND   @ZM31074*/ 01076000
         L     @15,@CV00333                                        0355 01077000
         BALR  @14,@15                                             0355 01078000
*       RFY R1 UNRSTD;                                             0356 01079000
*     END;                          /* END OF NO INPUT CODE  @ZM31074*/ 01080000
*   END RCODESUM;                   /* END PRINT ROUTINE     @ZM31074*/ 01081000
@EL00007 DS    0H                                                  0358 01082000
@EF00007 DS    0H                                                  0358 01083000
@ER00007 L     @14,@SA00007                                        0358 01084000
         BR    @14                                                 0358 01085000
*   END ISDASUM1                    /*                       @ZM02889*/ 01086000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01087000
*/*%INCLUDE SYSLIB  (ISDACVT )                                        * 01088000
*/*%INCLUDE SYSLIB  (ISDAPRMS)                                        * 01089000
*/*%INCLUDE SYSLIB  (ISDAGHDR)                                        * 01090000
*/*%INCLUDE SYSLIB  (ISDAMCFG)                                        * 01091000
*/*%INCLUDE SYSLIB  (ISDASUM5)                                        * 01092000
*;                                                                 0359 01093000
@DATA    DS    0H                                                       01094000
@CH00082 DC    H'1'                                                     01095000
@CH00182 DC    H'5'                                                     01096000
@CH00217 DC    H'7'                                                     01097000
@CH00503 DC    H'10'                                                    01098000
@CH00431 DC    H'13'                                                    01099000
@CH00156 DC    H'16'                                                    01100000
@CH00335 DC    H'28'                                                    01101000
@CH00307 DC    H'104'                                                   01102000
@CH00522 DC    H'108'                                                   01103000
@CH00505 DC    XL2'39'                                                  01104000
@DATD    DSECT                                                          01105000
         DS    0F                                                       01106000
@SA00001 DS    18F                                                      01107000
@PC00001 DS    1F                                                       01108000
@SA00002 DS    1F                                                       01109000
@SA00003 DS    0F                                                       01110000
@SA00007 DS    0F                                                       01111000
@SA00005 DS    0F                                                       01112000
@SA00006 DS    0F                                                       01113000
@SA00004 DS    0F                                                       01114000
         DS    15F                                                      01115000
ISDASUM1 CSECT                                                          01116000
         DS    0F                                                       01117000
@CF00523 DC    F'212'                                                   01118000
@CF00514 DC    F'1000'                                                  01119000
@CF00280 DC    F'1024'                                                  01120000
@CF00526 DC    F'-5'                                                    01121000
@CF00527 DC    F'-2'                                                    01122000
@DATD    DSECT                                                          01123000
         DS    0D                                                       01124000
GET0PTR  DS    A                                                        01125000
COUNTEND DS    A                                                        01126000
RETCODE  DS    F                                                        01127000
CPUIDPTR DS    A                                                        01128000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01129000
@ENDDATD EQU   *                                                        01130000
ISDASUM1 CSECT                                                          01131000
         NOPR  ((@ENDDATD-@DATD)/161*16)                                01132000
         DS    0F                                                       01133000
@SIZDATD DC    AL1(0)                                                   01134000
         DC    AL3(@ENDDATD-@DATD)                                      01135000
@CV00331 DC    V(ISDAFREE)                                              01136000
@CV00333 DC    V(ISDAPRT0)                                              01137000
@CV00329 DC    V(ISDAGET0)                                              01138000
@CV00330 DC    V(ISDAGET1)                                              01139000
@CV00332 DC    V(ISDAHEXP)                                              01140000
@CA00276 DC    A(ISDASUM2)                                              01141000
         DS    0D                                                       01142000
@CC00309 DC    C' OBR'                                                  01143000
@CC00311 DC    C' MDR'                                                  01144000
@CC00313 DC    C'CDE'                                                   01145000
EDPAT01  DC    X'40212020207A20207A202020202020612020202020'            01146000
EDPAT02  DC    X'402020202120'                                          01147000
EDPAT03  DC    X'40202021204B20'                                        01148000
SUMSPNO  DC    X'01'                                                    01149000
SUMMSG12 DC    CL28'REPORT 2 - SDA INPUT SUMMARY'                       01150000
SUMMSG20 DC    CL35'LIST OF CPU IDS FOR THIS INPUT DATA'                01151000
SUMMSG21 DC    CL42'(NOTE: ONLY THE FIRST 16 ARE PRINTED HERE)'         01152000
SUMMSG22 DC    CL42'LIST OF CPU IDS IN THE CONFIGURATION TABLE'         01153000
SUMMSG23 DC    CL72'NOTE: CPUID VALIDITY CHECKING CANNOT BE DONE WITHOUC01154000
               T CONFIGURATION DATA.'                                   01155000
ISDA1001 DC    CL83'ISDA1001  SOME OF THE DATA USED IN THIS SDA RUN MAYC01156000
                NOT BE FROM THE STORAGE SYSTEM'                         01157000
SUMMSG30 DC    CL60'INPUT SUMMARY OF ERROR SENSE DATA FROM THE MSS AND C01158000
               HOST 3330'                                               01159000
SUMMSG31 DC    CL86'  MSS   SA    MSG          FIRST             LAST  C01160000
                            NO.   NO. TOTAL   % OF'                     01161000
SUMMSG32 DC    CL86'FORMAT FORMAT CODE DEVICE  DATE   TIME       DATE  C01162000
                TIME       PERM  TEMP COUNT  INPUT'                     01163000
SUMMSG33 DC    CL87'------|------|----|------|-----------------|-------C01164000
               ----------|-----|-----|-----|------|'                    01165000
SUMMSG37 DC    CL6'TOTALS'                                              01166000
SUMMSG40 DC    CL61'INPUT SUMMARY OF BUFFERED LOG DATA FROM THE MSS ANDC01167000
                HOST 3330'                                              01168000
CODENUMB DC    CL16'0123456789ABCDEF'                                   01169000
SUMMSG50 DC    CL36'MSS FORMAT 0 MESSAGE CODE 06 SUMMARY'               01170000
SUMMSG51 DC    CL52'NUMBER OF OCCURRENCES OF EACH UNIQUE CODE IN BYTE 1C01171000
               2'                                                       01172000
SUMMSG52 DC    CL70'VERTICAL AXIS IS BITS 0-3 AND HORIZONTAL AXIS IS BIC01173000
               TS 4-7 FROM BYTE 12'                                     01174000
SUMMSG53 DC    CL13'NO INPUT DATA'                                      01175000
DASH     DC    CL117'--|------|------|------|------|------|------|-----C01176000
               -|------|------|------|------|------|------|------|-----C01177000
               -|------|--'                                             01178000
PATCH    DC    50X'00'                                                  01179000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01180000
@01      EQU   01                                                       01181000
@02      EQU   02                                                       01182000
@03      EQU   03                                                       01183000
@04      EQU   04                                                       01184000
@05      EQU   05                                                       01185000
@06      EQU   06                                                       01186000
@07      EQU   07                                                       01187000
@08      EQU   08                                                       01188000
@09      EQU   09                                                       01189000
@10      EQU   10                                                       01190000
@11      EQU   11                                                       01191000
@12      EQU   12                                                       01192000
@13      EQU   13                                                       01193000
@14      EQU   14                                                       01194000
@15      EQU   15                                                       01195000
L        EQU   @05                                                      01196000
K        EQU   @07                                                      01197000
J        EQU   @04                                                      01198000
I        EQU   @06                                                      01199000
CPUXXCNT EQU   @09                                                      01200000
DEVIDPTR EQU   @08                                                      01201000
COUNTPTR EQU   @05                                                      01202000
SUMWKPTR EQU   @03                                                      01203000
LPARMPTR EQU   @04                                                      01204000
CVTPTR   EQU   @02                                                      01205000
R1       EQU   @01                                                      01206000
R15      EQU   @15                                                      01207000
         EXTRN ISDASUM2                                                 01208000
ISDACVT  EQU   0                                                        01209000
CVTPTRS0 EQU   ISDACVT                                                  01210000
PARMPTR  EQU   CVTPTRS0+8                                               01211000
SUM00PTR EQU   CVTPTRS0+48                                              01212000
CNFG0PTR EQU   CVTPTRS0+88                                              01213000
WORKCALL EQU   CVTPTRS0+96                                              01214000
GET0CALL EQU   ISDACVT+100                                              01215000
SPNOLEN  EQU   GET0CALL                                                 01216000
SPNO     EQU   SPNOLEN                                                  01217000
CORELEN  EQU   SPNOLEN+1                                                01218000
COREADDR EQU   GET0CALL+4                                               01219000
HEXPCALL EQU   ISDACVT+108                                              01220000
PRT0CALL EQU   ISDACVT+120                                              01221000
OUTLINE  EQU   PRT0CALL                                                 01222000
ANSI     EQU   OUTLINE                                                  01223000
LINE     EQU   OUTLINE+1                                                01224000
SDADATD  EQU   ISDACVT+256                                              01225000
PRTDATD  EQU   ISDACVT+416                                              01226000
ISDAPRMS EQU   0                                                        01227000
CINPUT   EQU   ISDAPRMS                                                 01228000
CSTART   EQU   ISDAPRMS+2                                               01229000
CEND     EQU   ISDAPRMS+6                                               01230000
CFSCONLY EQU   ISDAPRMS+13                                              01231000
CSSIDF   EQU   ISDAPRMS+17                                              01232000
CSERIAL  EQU   ISDAPRMS+21                                              01233000
CREPORTS EQU   ISDAPRMS+33                                              01234000
CSUM     EQU   CREPORTS+2                                               01235000
ISDAGHDR EQU   0                                                        01236000
GET0SPLN EQU   ISDAGHDR+8                                               01237000
PCNFG    EQU   0                                                        01238000
CNFGFXD  EQU   PCNFG                                                    01239000
CPUNO    EQU   CNFGFXD+2                                                01240000
CPUSERAD EQU   PCNFG+24                                                 01241000
CPUXXIDS EQU   0                                                        01242000
SUMWORK  EQU   0                                                        01243000
SUMWORK1 EQU   SUMWORK                                                  01244000
ACCM0PTR EQU   SUMWORK1                                                 01245000
ACCUMPTR EQU   SUMWORK1+4                                               01246000
ACCM0END EQU   SUMWORK1+8                                               01247000
RCODEPTR EQU   SUMWORK1+20                                              01248000
RCODECNT EQU   SUMWORK1+24                                              01249000
GTOTALS  EQU   SUMWORK1+32                                              01250000
CNTSENSE EQU   GTOTALS+28                                               01251000
CNTLOG   EQU   GTOTALS+32                                               01252000
TOTPERMS EQU   SUMWORK1+68                                              01253000
TOTTEMPS EQU   SUMWORK1+72                                              01254000
NCPUUSED EQU   SUMWORK1+82                                              01255000
SUMWORK2 EQU   SUMWORK+86                                               01256000
CPUFOUND EQU   SUMWORK2                                                 01257000
SUMTEMPS EQU   SUMWORK+166                                              01258000
TEMP9    EQU   SUMTEMPS                                                 01259000
TEMP8    EQU   TEMP9                                                    01260000
TEMP7    EQU   TEMP8                                                    01261000
TEMP6    EQU   TEMP7                                                    01262000
TEMP5    EQU   TEMP6                                                    01263000
TEMP4    EQU   TEMP5                                                    01264000
TEMP3    EQU   TEMP4                                                    01265000
TEMP2    EQU   TEMP3                                                    01266000
TEMP20   EQU   SUMTEMPS+9                                               01267000
TEMP16   EQU   TEMP20                                                   01268000
TEMP710  EQU   TEMP20+6                                                 01269000
SUMWORK3 EQU   SUMWORK+198                                              01270000
SUMFLAGS EQU   SUMWORK3                                                 01271000
MAINMASK EQU   SUMWORK3+2                                               01272000
FORMATCK EQU   MAINMASK                                                 01273000
FLAGMASK EQU   MAINMASK+1                                               01274000
MDEVIDTB EQU   0                                                        01275000
MDFMTXXX EQU   MDEVIDTB                                                 01276000
MDMASK   EQU   MDFMTXXX                                                 01277000
MDFXXX   EQU   MDMASK                                                   01278000
MDFLAG   EQU   MDMASK+1                                                 01279000
MDSMXXX  EQU   MDMASK+2                                                 01280000
MDIDS    EQU   MDFMTXXX+3                                               01281000
MDCFXXX  EQU   MDIDS                                                    01282000
MDCSMXXX EQU   MDIDS+4                                                  01283000
MDCSXXX  EQU   MDCSMXXX                                                 01284000
MDCMXXX  EQU   MDCSMXXX+1                                               01285000
MDIDXXX  EQU   MDIDS+6                                                  01286000
MDMSGXXX EQU   MDFMTXXX+14                                              01287000
MCOUNTER EQU   0                                                        01288000
MCFMTXXX EQU   MCOUNTER                                                 01289000
MCADDXXX EQU   MCFMTXXX                                                 01290000
MCOUNTS  EQU   MCFMTXXX+4                                               01291000
MCPXXX   EQU   MCOUNTS                                                  01292000
MCTXXX   EQU   MCOUNTS+2                                                01293000
MCMASK   EQU   MCFMTXXX+8                                               01294000
MCFXXX   EQU   MCMASK                                                   01295000
MCFLAG   EQU   MCMASK+1                                                 01296000
MLDTIME  EQU   MCFMTXXX+12                                              01297000
MLDATE   EQU   MLDTIME                                                  01298000
MLTIME   EQU   MLDTIME+4                                                01299000
MHDTIME  EQU   MCFMTXXX+20                                              01300000
MHDATE   EQU   MHDTIME                                                  01301000
MHTIME   EQU   MHDTIME+4                                                01302000
RCODES   EQU   0                                                        01303000
SUMACCUM EQU   0                                                        01304000
WORKPTR  EQU   0                                                        01305000
TEMP68   EQU   TEMP8+5                                                  01306000
EDREC01  EQU   SUMTEMPS                                                 01307000
TEMP2326 EQU   SUMTEMPS+22                                              01308000
TEMP2730 EQU   SUMTEMPS+26                                              01309000
TEMP2230 EQU   SUMTEMPS+21                                              01310000
ED01TIME EQU   EDREC01+3                                                01311000
ED01YEAR EQU   EDREC01+15                                               01312000
ED01DAY  EQU   EDREC01+18                                               01313000
MSG53OVL EQU   LINE+65                                                  01314000
MSG21ID  EQU   LINE+37                                                  01315000
MSG32PC  EQU   LINE+63                                                  01316000
MSG32TC  EQU   LINE+69                                                  01317000
MSG37ID  EQU   LINE+54                                                  01318000
MSG37OBR EQU   LINE+61                                                  01319000
MSG37MDR EQU   LINE+67                                                  01320000
MSG37TOT EQU   LINE+73                                                  01321000
OUTFMT   EQU   LINE+1                                                   01322000
OUTSAFMT EQU   LINE+8                                                   01323000
OUTMSGCD EQU   LINE+15                                                  01324000
OUT9CDE  EQU   LINE+14                                                  01325000
OUTDEVID EQU   LINE+19                                                  01326000
OUTLDAY  EQU   LINE+27                                                  01327000
OUTLYEAR EQU   LINE+30                                                  01328000
OUTLTIME EQU   LINE+34                                                  01329000
OUTHDAY  EQU   LINE+45                                                  01330000
OUTHYEAR EQU   LINE+48                                                  01331000
OUTHTIME EQU   LINE+52                                                  01332000
OUTPERM  EQU   LINE+61                                                  01333000
OUTTEMP  EQU   LINE+67                                                  01334000
OUTTOTAL EQU   LINE+73                                                  01335000
OUTPERC  EQU   LINE+79                                                  01336000
OUTMSGID EQU   LINE+88                                                  01337000
TEMP78   EQU   TEMP8+6                                                  01338000
*                                      START UNREFERENCED COMPONENTS    01339000
MCSPARE  EQU   MCFMTXXX+11                                              01340000
MCSMXXX  EQU   MCMASK+2                                                 01341000
MSGCODSV EQU   SUMWORK3+13                                              01342000
SUBFIDSV EQU   SUMWORK3+12                                              01343000
FMTIDSV  EQU   SUMWORK3+5                                               01344000
SUBFMASK EQU   MAINMASK+2                                               01345000
FORMATNC EQU   SUMWORK3+1                                               01346000
TEMP3032 EQU   SUMTEMPS+29                                              01347000
TEMP1820 EQU   TEMP20+17                                                01348000
TEMP1417 EQU   TEMP20+13                                                01349000
TEMP1113 EQU   TEMP20+10                                                01350000
TEMP1    EQU   TEMP2                                                    01351000
NCPUCNTS EQU   SUMWORK1+84                                              01352000
NCOUNTER EQU   SUMWORK1+80                                              01353000
SUMACCL  EQU   SUMWORK1+78                                              01354000
ACCUMCNT EQU   SUMWORK1+76                                              01355000
CNTFDASD EQU   GTOTALS+24                                               01356000
CNTF5    EQU   GTOTALS+20                                               01357000
CNTF4    EQU   GTOTALS+16                                               01358000
CNTF3    EQU   GTOTALS+12                                               01359000
CNTF2    EQU   GTOTALS+8                                                01360000
CNTF1    EQU   GTOTALS+4                                                01361000
CNTF0    EQU   GTOTALS                                                  01362000
SUM2PTR  EQU   SUMWORK1+28                                              01363000
SENSEPTR EQU   SUMWORK1+16                                              01364000
LOGPTR   EQU   SUMWORK1+12                                              01365000
SAINTFP  EQU   PCNFG+32                                                 01366000
@NM00004 EQU   PCNFG+30                                                 01367000
CNFGTOTL EQU   PCNFG+28                                                 01368000
CHCUAD   EQU   PCNFG+20                                                 01369000
LTPAD    EQU   PCNFG+16                                                 01370000
PCNFGL   EQU   CNFGFXD+14                                               01371000
CHINTFNO EQU   CNFGFXD+12                                               01372000
LIBSIZS  EQU   CNFGFXD+8                                                01373000
SANO     EQU   CNFGFXD+6                                                01374000
SPINO    EQU   CNFGFXD+4                                                01375000
MSFNO    EQU   CNFGFXD                                                  01376000
@NM00003 EQU   ISDAGHDR+26                                              01377000
BLOCKCNT EQU   ISDAGHDR+24                                              01378000
BLOCKID  EQU   ISDAGHDR+20                                              01379000
LASTPTR  EQU   ISDAGHDR+16                                              01380000
NEXTPTR  EQU   ISDAGHDR+12                                              01381000
GET0LEN  EQU   GET0SPLN+1                                               01382000
GET0SPNO EQU   GET0SPLN                                                 01383000
ENDPTR   EQU   ISDAGHDR+4                                               01384000
STARTPTR EQU   ISDAGHDR                                                 01385000
CTRACE   EQU   ISDAPRMS+48                                              01386000
CGEN     EQU   ISDAPRMS+47                                              01387000
CDETAIL  EQU   ISDAPRMS+46                                              01388000
CPERIOD  EQU   ISDAPRMS+45                                              01389000
CPWR     EQU   CREPORTS+11                                              01390000
CAPRSUU  EQU   CREPORTS+10                                              01391000
CDRC     EQU   CREPORTS+9                                               01392000
CDAT     EQU   CREPORTS+8                                               01393000
CCSBCSF  EQU   CREPORTS+7                                               01394000
CDCKTLX  EQU   CREPORTS+6                                               01395000
CEQC     EQU   CREPORTS+5                                               01396000
CFSC     EQU   CREPORTS+4                                               01397000
CDHEDHU  EQU   CREPORTS+3                                               01398000
CPAD     EQU   CREPORTS+1                                               01399000
CDCS     EQU   CREPORTS                                                 01400000
CSERNO   EQU   CSERIAL+4                                                01401000
@NM00002 EQU   CSERIAL+3                                                01402000
CIBM     EQU   CSERIAL                                                  01403000
CRATIO   EQU   ISDAPRMS+19                                              01404000
CSSID    EQU   CSSIDF                                                   01405000
@NM00001 EQU   CSSIDF                                                   01406000
CFSC34   EQU   CFSCONLY+2                                               01407000
CFSC12   EQU   CFSCONLY                                                 01408000
CTYPE    EQU   ISDAPRMS+11                                              01409000
CSUMMARY EQU   ISDAPRMS+10                                              01410000
CENDDAY  EQU   CEND+2                                                   01411000
CENDYEAR EQU   CEND                                                     01412000
CSTDAY   EQU   CSTART+2                                                 01413000
CSTYEAR  EQU   CSTART                                                   01414000
CHISTIN  EQU   CINPUT+1                                                 01415000
CLOGIN   EQU   CINPUT                                                   01416000
PRTSA001 EQU   PRTDATD                                                  01417000
SDATEMPS EQU   SDADATD+136                                              01418000
SDASA002 EQU   SDADATD+76                                               01419000
SDAPC001 EQU   SDADATD+72                                               01420000
SDASA001 EQU   SDADATD                                                  01421000
SDARPTID EQU   PRT0CALL+133                                             01422000
DUMPIDNO EQU   HEXPCALL+8                                               01423000
DUMPLEN  EQU   HEXPCALL+4                                               01424000
DUMPADDR EQU   HEXPCALL                                                 01425000
GEN00PTR EQU   CVTPTRS0+92                                              01426000
PWR00PTR EQU   CVTPTRS0+84                                              01427000
APR00PTR EQU   CVTPTRS0+80                                              01428000
DRC00PTR EQU   CVTPTRS0+76                                              01429000
DAT00PTR EQU   CVTPTRS0+72                                              01430000
CSB00PTR EQU   CVTPTRS0+68                                              01431000
DCK00PTR EQU   CVTPTRS0+64                                              01432000
EQC00PTR EQU   CVTPTRS0+60                                              01433000
FSC00PTR EQU   CVTPTRS0+56                                              01434000
DHE00PTR EQU   CVTPTRS0+52                                              01435000
PAD00PTR EQU   CVTPTRS0+44                                              01436000
DCS00PTR EQU   CVTPTRS0+40                                              01437000
LOG00PTR EQU   CVTPTRS0+36                                              01438000
HIST0PTR EQU   CVTPTRS0+32                                              01439000
PRT00PTR EQU   CVTPTRS0+28                                              01440000
GET00PTR EQU   CVTPTRS0+24                                              01441000
TYPE0PTR EQU   CVTPTRS0+20                                              01442000
PARM0PTR EQU   CVTPTRS0+16                                              01443000
SDA00PTR EQU   CVTPTRS0+12                                              01444000
SDATAPTR EQU   CVTPTRS0+4                                               01445000
DATAPTR  EQU   CVTPTRS0                                                 01446000
*                                      END UNREFERENCED COMPONENTS      01447000
@PB00003 EQU   @EL00002                                                 01448000
@RC00297 EQU   @EL00007                                                 01449000
@RC00119 EQU   @PB00003                                                 01450000
@ENDDATA EQU   *                                                        01451000
         END   ISDASUM1,(C'PLS1920',0603,75147)                         01452000
