         TITLE 'IEFAB423 - DETERMINE DEVICE REQUIREMENTS               *00001000
                        '                                               00002000
IEFAB423 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEFAB423  78.128'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         MODESET EXTKEY=SCHED,SAVEKEY=(2)                               00015000
         GSPACE   R,LV=(0)                                              00016000
         LR    @11,@01                                          01S0001 00017000
         USING @DATD,@11                                        01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         STC   @02,@OLDKEY                                      01S0001 00020000
         MODESET KEYADDR=(2)                                            00021000
         LM    @00,@02,20(@13)                                  01S0001 00022000
         ST    @11,8(,@13)                                      01S0001 00023000
         LR    @13,@11                                          01S0001 00024000
         MODESET EXTKEY=ZERO                                            00025000
         MVC   @PC00001(4),0(@01)                               01S0001 00026000
         MODESET EXTKEY=SCHED                                           00027000
*ERRORWD=ZERO;                                                  01S0035 00028000
         SLR   ERRORWD,ERRORWD                                  01S0035 00029000
*GLENGTH=LENGTH(VOLUNRB)*TOTREQS;      /*LENGTH FOR GETMAIN OF REQUEST  00030000
*                                        BLOCKS                      */ 00031000
         L     @10,@PC00001                                     01S0036 00032000
         L     @10,ALCWAPTR(,@10)                               01S0036 00033000
         L     @10,TOTREQS(,@10)                                01S0036 00034000
         MH    @10,@CH00673                                     01S0036 00035000
         ST    @10,GLENGTH                                      01S0036 00036000
* /* ?GETSTORG (SPID,GLENGTH,RBPTR);*/                          01S0037 00037000
*   /* DEFINITIONS OF GETMAIN PARMS */                          01S0037 00038000
*   DCL                                                         01S0037 00039000
*     GTSTR0   FIXED(31) REG(0),/*GTMN PARM REG*/               01S0037 00040000
*     GTSTR1   FIXED(31) REG(1),/*GTMN PARM REG*/               01S0037 00041000
*     GTSTR2   PTR(31)   REG(2),/*GTMN PARM REG*/               01S0037 00042000
*     GTSTR15  FIXED(31) REG(15),/*GTMN RET COD*/               01S0037 00043000
*     GTSTRTCD FIXED(31); /* GETMAIN RTN CODE  */               01S0037 00044000
*   DCL                                                         01S0038 00045000
*     GTSTR3   FIXED(31) REG(3),/* CLEARING REG*/               01S0038 00046000
*     GTSTR4   FIXED(31) REG(4),/* CLEARING REG*/               01S0038 00047000
*     GTSTR5   FIXED(31) REG(5),/* CLEARING REG*/               01S0038 00048000
*     GTSTR6   FIXED(31) REG(6),/* CLEARING REG*/               01S0038 00049000
*     GTSTR7   FIXED(31) REG(7),/* CLEARING REG*/               01S0038 00050000
*     GTSTR8   FIXED(31) REG(8),/* CLEARING REG*/               01S0038 00051000
*     GTSTZERO FIXED(31) INIT(0),                               01S0038 00052000
*     GTST253  FIXED(31) CONSTANT(253);                         01S0038 00053000
*   RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/               01S0039 00054000
*   GTSTR0 = GLENGTH; /* SET AMOUNT*/                           01S0040 00055000
         LR    GTSTR0,@10                                       01S0040 00056000
*   GTSTR2 = SPID; /* SET SUBPOOL*/                             01S0041 00057000
         LA    GTSTR2,230                                       01S0041 00058000
*   GENERATE CODE;                                              01S0042 00059000
     GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN                               00060000
*   GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/               01S0043 00061000
         ST    GTSTR15,GTSTRTCD                                 01S0043 00062000
*   RBPTR = GTSTR1; /* ADDR OF GOTN STORG*/                     01S0044 00063000
         LR    RBPTR,GTSTR1                                     01S0044 00064000
*   RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */                01S0045 00065000
*   IF GTSTRTCD = 0 THEN /*GETMAIN SUCCESSFUL? */               01S0046 00066000
         L     @10,GTSTRTCD                                     01S0046 00067000
         LTR   @10,@10                                          01S0046 00068000
         BNZ   @RF00046                                         01S0046 00069000
*     DO;               /* YES, CLEAR STORAGE.*/                01S0047 00070000
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       01S0048 00071000
*                          GTSTR7,GTSTR8) RSTD;                 01S0048 00072000
*       GTSTR4 = RBPTR; /*STORG PTR*/                           01S0049 00073000
         LR    GTSTR4,RBPTR                                     01S0049 00074000
*       GTSTR5 = GLENGTH; /*STORG AMNT*/                        01S0050 00075000
         L     GTSTR5,GLENGTH                                   01S0050 00076000
*       GTSTR7 = '00000000'X; /*PAD CHAR & LNTH*/               01S0051 00077000
         SLR   GTSTR7,GTSTR7                                    01S0051 00078000
*       IF SPID = GTST253 THEN                                  01S0052 00079000
         B     @RF00052                                         01S0052 00080000
*      GEN                                                      01S0053 00081000
*   (MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8);           01S0053 00082000
         MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8                 00083000
*       GEN REFS(GTSTR4,GTSTR6);                                01S0054 00084000
@RF00052 DS    0H                                               01S0054 00085000
          MVCL  GTSTR4,GTSTR6 CLEAR GOTTEN STORG                        00086000
*       IF SPID = GTST253 THEN                                  01S0055 00087000
         B     @RF00055                                         01S0055 00088000
*         GEN (MODESET KEYADDR=(2));                            01S0056 00089000
         MODESET KEYADDR=(2)                                            00090000
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       01S0057 00091000
*                          GTSTR7,GTSTR8) UNRSTD;               01S0057 00092000
@RF00055 DS    0H                                               01S0058 00093000
*     END;       /* STORAGE CLEARING COMPLETED */               01S0058 00094000
*   ELSE                                                        01S0059 00095000
*   RBPTR= 0;   /* CLEAR RETURN ADDR. */                        01S0059 00096000
         B     @RC00046                                         01S0059 00097000
@RF00046 SLR   RBPTR,RBPTR                                      01S0059 00098000
*   GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */               01S0060 00099000
@RC00046 L     GTSTR15,GTSTRTCD                                 01S0060 00100000
*                                      /* RESTORE LIST PRINT STATUS  */ 00101000
*       /*GET CORE FOR REQUEST BLOCKS */                        01S0061 00102000
*ERRORWD=REG15;                                                 01S0061 00103000
         LR    ERRORWD,REG15                                    01S0061 00104000
*IF ERRORWD=ZERO THEN                                           01S0062 00105000
         LTR   ERRORWD,ERRORWD                                  01S0062 00106000
         BNZ   @RF00062                                         01S0062 00107000
*  DO;                                                          01S0063 00108000
*    TRBPTR=RBPTR;                     /*SAVE ADDRESS OF REQUEST CORE*/ 00109000
         ST    RBPTR,TRBPTR                                     01S0064 00110000
*    SIOTPTR=SIOT1P;                   /*INIT. ADDR. OF FIRST SIOT   */ 00111000
         L     @10,@PC00001                                     01S0065 00112000
         L     @10,ALCWAPTR(,@10)                               01S0065 00113000
         L     SIOTPTR,SIOT1P(,@10)                             01S0065 00114000
*    DO I=ONE TO NUMREQS WHILE (ERRORWD = ZERO);                01S0066 00115000
         LA    I,1                                              01S0066 00116000
         B     @DE00066                                         01S0066 00117000
@DL00066 LTR   ERRORWD,ERRORWD                                  01S0066 00118000
         BNZ   @DC00066                                         01S0066 00119000
*                                      /*LOOP THROUGH EACH SIOT      */ 00120000
*      IF SIOTALCD = OFF THEN          /*SIOT NOT PROCESSED          */ 00121000
         TM    SIOTALCD(SIOTPTR),B'00000010'                    01S0067 00122000
         BNZ   @RF00067                                         01S0067 00123000
*        DO;                                                    01S0068 00124000
*/********************************************************************/ 00125000
*/*                                                                  */ 00126000
*/* SEGMENT NAME - BVOLUNRB                                          */ 00127000
*/*                                                                  */ 00128000
*/* DESCRIPTIVE NAME - BUILD VOLUNIT REQUEST BLOCK                   */ 00129000
*/*                                                                  */ 00130000
*/* FUNCTION -                                                       */ 00131000
*/*   THE FUNCTION OF THIS ROUTINE IS TO CONSTRUCT A VOLUNIT REQUEST */ 00132000
*/*   BLOCK(VRB) FOR A GIVEN SIOT PASSED AS INPUT. THE VRBS WILL BE  */ 00133000
*/*   USED BY BLDVOLUN TO CONSTRUCT THE VOLUNIT TABLE. INFORMATION   */ 00134000
*/*   IS EXTRACTED FROM THE SIOT AND JFCB AND CONSOLIDATED IN THE    */ 00135000
*/*   VRB.                                                           */ 00136000
*/*   THE VOLUME SEQUENCE NUMBER FROM THE JFCB (JFCBVLSQ) IS @ZA07134*/ 00137000
*/*   CHECKED FOR VALIDITY WITH RESPECT TO THE NUMBER OF     @ZA07134*/ 00138000
*/*   VOLUME SERIAL NUMBERS SPECIFIED OR IMPLIED IN THE SIOT @ZA07134*/ 00139000
*/*   (SCTVOLCT).  SCTVOLCT OF ZERO INDICATES A NON-SPECIFIC @ZA07134*/ 00140000
*/*   REQUEST.  A VOLUME SEQUENCE NUMBER OF ONE IS VALID IN  @ZA07134*/ 00141000
*/*   THIS SPECIAL CASE.                                     @ZA07134*/ 00142000
*/*   IN ADDITION THE FOLLOWING FIELDS IN THE SIOT ARE UPDATED:      */ 00143000
*/*     SIOTOTUN - IF PARALLEL MOUNTING WAS SPECIFIED, SET TO MAX    */ 00144000
*/*               (VOLUME COUNT, NUMBER OF SERIALS). IF UNIT AFFINITY*/ 00145000
*/*               SET TO SIOTOTUN FROM AFF SIOT.                     */ 00146000
*/*   THIS ROUTINE ALSO CHECKS FOR NEW, D.A., DEFER. IF              */ 00147000
*/*   FINDING THIS CONDITION IT IGNORES DEFER. THIS                  */ 00148000
*/*   ROUTINE ALSO CHECKS FOR NEW, UNIT AFF., D.A. IF                */ 00149000
*/*   FOUND THIS REQUEST IS IN ERROR AND ALLOCATION IS               */ 00150000
*/*   FAILED.  IF THE REQUEST IS ALSO ELIGIBLE FOR TAPE,             */ 00151000
*/*   A BIT IN THE SIOT IS SET (SIOTFUDA) INDICATING                 */ 00152000
*/*   D.A. IS NOT ELIGIBLE.                                          */ 00153000
*/*                                                                  */ 00154000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00155000
*/*   PURPOSE - SEE FUNCTION                                         */ 00156000
*/*                                                                  */ 00157000
*/*   INPUT -                                                        */ 00158000
*/*     SIOT                                                         */ 00159000
*/*     JFCB - POINTER TO THE VRB TO BE CONSTRUCTED                  */ 00160000
*/*                                                                  */ 00161000
*/* EXIT -                                                           */ 00162000
*/* 1 CONDITION - VRBS SUCCESSFULLY BUILT                            */ 00163000
*/*                                                                  */ 00164000
*/*   OUTPUT -                                                       */ 00165000
*/*     VOLUNIT REQUEST BLOCK (VRB) - SEE A423DATA                   */ 00166000
*/*       ALL FIELDS FILLED IN                                       */ 00167000
*/*                                                                  */ 00168000
*/*     SIOT -                                                       */ 00169000
*/*       SIOTOTUN                                                   */ 00170000
*/*       SCTUTYPE                                                   */ 00171000
*/*       SIOTFUDA                                                   */ 00172000
*/*                                                                  */ 00173000
*/*   RETURN CODE - 0                                                */ 00174000
*/*                                                                  */ 00175000
*/* 2 CONDITION - PARALLEL MOUNTING REQUEST REQUIRES OVER 59 UNITS   */ 00176000
*/*                                                                  */ 00177000
*/*   OUTPUT -                                                       */ 00178000
*/*     SIOT -                                                       */ 00179000
*/*       SIOTRSNC - 9 = TOO MANY UNITS REQUIRED                     */ 00180000
*/*                                                                  */ 00181000
*/*   RETURN CODE - 4                                                */ 00182000
*/*                                                                  */ 00183000
*/* 3 CONDITION - NEW DATA SET REQUEST FOR UNIT AFF AND D.A.         */ 00184000
*/*                                                                  */ 00185000
*/*   OUTPUT -                                                       */ 00186000
*/*     SIOT -                                                       */ 00187000
*/*       SIOTRSNC - 15 = INVALID UNIT AFF                           */ 00188000
*/*                                                                  */ 00189000
*/*   RETURN CODE - 4                                                */ 00190000
*/*                                                                  */ 00191000
*/********************************************************************/ 00192000
*JFCBPTR = SJFCBPTR;                   /* SET JFCB BASE              */ 00193000
         L     JFCBPTR,SJFCBPTR(,SIOTPTR)                       02S0069 00194000
*NXTVRB = RBPTR + LENGTH(VOLUNRB);     /* SET CHAIN POINTER          */ 00195000
         LA    @10,28                                           02S0070 00196000
         ALR   @10,RBPTR                                        02S0070 00197000
         ST    @10,NXTVRB(,RBPTR)                               02S0070 00198000
*SIOTOTUN = SCTNMBUT;                  /* INIT. TOTAL #UNITS         */ 00199000
         MVC   SIOTOTUN(1,SIOTPTR),SCTNMBUT(SIOTPTR)            02S0071 00200000
*IF SCTSNEW = ON &                     /* NEW DIRECT ACCESS DATA SETS*/ 00201000
*   SCTDEFER = ON &                    /* CANNOT BE DEFER MOUNTED    */ 00202000
*   SIO3DACC = ON THEN                                          02S0072 00203000
         TM    SCTSNEW(SIOTPTR),B'00000100'                     02S0072 00204000
         BNO   @RF00072                                         02S0072 00205000
         TM    SCTDEFER(SIOTPTR),B'00000010'                    02S0072 00206000
         BNO   @RF00072                                         02S0072 00207000
         TM    SIO3DACC(SIOTPTR),B'00100000'                    02S0072 00208000
         BNO   @RF00072                                         02S0072 00209000
*  IF SIO3TAPE ^= ON THEN              /* NOT ELIGIBLE FOR TAPE TOO  */ 00210000
         TM    SIO3TAPE(SIOTPTR),B'10000000'                    02S0073 00211000
         BO    @RF00073                                         02S0073 00212000
*     SCTDEFER = OFF;                  /* IGNORE DEFER               */ 00213000
         NI    SCTDEFER(SIOTPTR),B'11111101'                    02S0074 00214000
*  ELSE                                                         02S0075 00215000
*    SIOTFUDA = ON;                    /* MAKE IT TAPE ELIGIBLE ONLY */ 00216000
         B     @RC00073                                         02S0075 00217000
@RF00073 OI    SIOTFUDA(SIOTPTR),B'00100000'                    02S0075 00218000
*IF SCTPARLM = ON & (SCTVOLCT > ZERO | SIOTVLCT > ZERO) THEN/*PARALEL   00219000
*                                        MOUNT REQUEST               */ 00220000
@RC00073 DS    0H                                               02S0076 00221000
@RF00072 TM    SCTPARLM(SIOTPTR),B'00000100'                    02S0076 00222000
         BNO   @RF00076                                         02S0076 00223000
         CLI   SCTVOLCT(SIOTPTR),0                              02S0076 00224000
         BH    @RT00076                                         02S0076 00225000
         CLI   SIOTVLCT(SIOTPTR),0                              02S0076 00226000
         BNH   @RF00076                                         02S0076 00227000
@RT00076 DS    0H                                               02S0077 00228000
*  IF JFCBVLSQ = ZERO | SCTSNEW = ON THEN                       02S0077 00229000
         ICM   @10,3,JFCBVLSQ(JFCBPTR)                          02S0077 00230000
         BZ    @RT00077                                         02S0077 00231000
         TM    SCTSNEW(SIOTPTR),B'00000100'                     02S0077 00232000
         BNO   @RF00077                                         02S0077 00233000
@RT00077 DS    0H                                               02S0078 00234000
*    DO;                                                        02S0078 00235000
*      SIOTOTUN = MAX(SCTVOLCT,SIOTVLCT);/* SET TOTALS UNITS REQUIRED*/ 00236000
         SLR   @10,@10                                          02S0079 00237000
         IC    @10,SCTVOLCT(,SIOTPTR)                           02S0079 00238000
         SLR   @08,@08                                          02S0079 00239000
         IC    @08,SIOTVLCT(,SIOTPTR)                           02S0079 00240000
         CR    @10,@08                                          02S0079 00241000
         BNL   *+6                                                      00242000
         LR    @10,@08                                          02S0079 00243000
         STC   @10,SIOTOTUN(,SIOTPTR)                           02S0079 00244000
*      IF SIOTOTUN > MAXUNIT THEN                               02S0080 00245000
         CLI   SIOTOTUN(SIOTPTR),59                             02S0080 00246000
         BNH   @RF00080                                         02S0080 00247000
*        DO;                                                    02S0081 00248000
*          ERRORWD = BVOLFAIL;                                  02S0082 00249000
         LA    ERRORWD,4                                        02S0082 00250000
*          SIOTRSNC = OVER59U;                                  02S0083 00251000
         MVC   SIOTRSNC(2,SIOTPTR),@CH00094                     02S0083 00252000
*        END;                                                   02S0084 00253000
*    END;                                                       02S0085 00254000
@RF00080 DS    0H                                               02S0086 00255000
*IF SCTUNAFF = ON THEN                 /* UNIT AFF SPECIFIED         */ 00256000
@RF00077 DS    0H                                               02S0086 00257000
@RF00076 TM    SCTUNAFF(SIOTPTR),B'00000010'                    02S0086 00258000
         BNO   @RF00086                                         02S0086 00259000
*  DO;                                 /* COPY TOTAL UNIT COUNT      */ 00260000
*    TSIOTPTR = SIOT1P;                /* SET FIRST SIOT POINTER     */ 00261000
         L     @10,@PC00001                                     02S0088 00262000
         L     @10,ALCWAPTR(,@10)                               02S0088 00263000
         L     TSIOTPTR,SIOT1P(,@10)                            02S0088 00264000
*    DO WHILE(TSIOTPTR->SCTDDINO^=SIOTUNAF); /* FIND AFF DD          */ 00265000
         B     @DE00089                                         02S0089 00266000
@DL00089 DS    0H                                               02S0090 00267000
*      TSIOTPTR = TSIOTPTR->SIOTNPTR;  /* FIND NEXT SIOT             */ 00268000
         L     TSIOTPTR,SIOTNPTR(,TSIOTPTR)                     02S0090 00269000
*    END;                                                       02S0091 00270000
@DE00089 CLC   SCTDDINO(2,TSIOTPTR),SIOTUNAF(SIOTPTR)           02S0091 00271000
         BNE   @DL00089                                         02S0091 00272000
*    SIOTOTUN = TSIOTPTR->SIOTOTUN;    /* COPY TOTAL NO. UNITS       */ 00273000
         MVC   SIOTOTUN(1,SIOTPTR),SIOTOTUN(TSIOTPTR)           02S0092 00274000
*    IF SCTSNEW = ON THEN                                       02S0093 00275000
         TM    SCTSNEW(SIOTPTR),B'00000100'                     02S0093 00276000
         BNO   @RF00093                                         02S0093 00277000
*      IF SIO3DACC = ON & SIO3TAPE = OFF THEN /* NEW D.A. UNIT = AFF */ 00278000
         TM    SIO3DACC(SIOTPTR),B'00100000'                    02S0094 00279000
         BNO   @RF00094                                         02S0094 00280000
         TM    SIO3TAPE(SIOTPTR),B'10000000'                    02S0094 00281000
         BNZ   @RF00094                                         02S0094 00282000
*        DO;                           /* IS INVALID                 */ 00283000
*          SIOTRSNC = FUAFF;           /* FAIL UNIT AFF              */ 00284000
         MVC   SIOTRSNC(2,SIOTPTR),@CH00038                     02S0096 00285000
*          ERRORWD = BVOLFAIL;                                  02S0097 00286000
         LA    ERRORWD,4                                        02S0097 00287000
*        END;                                                   02S0098 00288000
*      ELSE                                                     02S0099 00289000
*        DO;                           /* IGNORE USING DIRECT ACCESS */ 00290000
         B     @RC00094                                         02S0099 00291000
@RF00094 DS    0H                                               02S0100 00292000
*          SIOTFUDA = ON;                                       02S0100 00293000
         OI    SIOTFUDA(SIOTPTR),B'00100000'                    02S0100 00294000
*          TSIOTPTR -> SIOTFUDA = ON;                           02S0101 00295000
         OI    SIOTFUDA(TSIOTPTR),B'00100000'                   02S0101 00296000
*        END;                                                   02S0102 00297000
*    ELSE;                                                      02S0103 00298000
@RF00093 DS    0H                                               02S0104 00299000
*  END;                                                         02S0104 00300000
@RC00093 DS    0H                                               02S0105 00301000
*IF ERRORWD = ZERO THEN                                         02S0105 00302000
@RF00086 LTR   ERRORWD,ERRORWD                                  02S0105 00303000
         BNZ   @RF00105                                         02S0105 00304000
*  DO;                                                          02S0106 00305000
*    VRBJXPTR = SIOTJFX;               /* SET PTR TO FIRST JFCBX     */ 00306000
         MVC   VRBJXPTR(4,RBPTR),SIOTJFX(SIOTPTR)               02S0107 00307000
*    VRBDDNUM = SCTDDINO;              /* SET DD NUMBER FROM SIOT    */ 00308000
         MVC   VRBDDNUM(2,RBPTR),SCTDDINO(SIOTPTR)              02S0108 00309000
*    IF SCTUNAFF = ON THEN             /* UNIT AFFINITY SPECIFIED    */ 00310000
         TM    SCTUNAFF(SIOTPTR),B'00000010'                    02S0109 00311000
         BNO   @RF00109                                         02S0109 00312000
*      VRBAFFNO = SIOTUNAF;            /* SET UNIT AFF DD NUMBER     */ 00313000
         MVC   VRBAFFNO(2,RBPTR),SIOTUNAF(SIOTPTR)              02S0110 00314000
*    IF SIOTVAFF = ON THEN             /* INTRA-STEP VOL REF         */ 00315000
@RF00109 TM    SIOTVAFF(SIOTPTR),B'00000100'                    02S0111 00316000
         BNO   @RF00111                                         02S0111 00317000
*      VRBREFNO = SIOTREFN;            /* SET REFERENCED DD NUMBER   */ 00318000
         MVC   VRBREFNO(2,RBPTR),SIOTREFN(SIOTPTR)              02S0112 00319000
*    VRBSERNO = SCTVOLCT;              /* SET NO OF VOL SERS SPECIFID*/ 00320000
@RF00111 MVC   VRBSERNO(1,RBPTR),SCTVOLCT(SIOTPTR)              02S0113 00321000
*    VRBVLCNT = SIOTVLCT;              /* SET VOLUME COUNT           */ 00322000
         MVC   VRBVLCNT(1,RBPTR),SIOTVLCT(SIOTPTR)              02S0114 00323000
*    IF SCTVOLCT = ZERO &              /* SET VOLUME         @ZA07134*/ 00324000
*      JFCBVLSQ = ONE  THEN            /* SEQUENCE NUMBER    @ZA07134*/ 00325000
         CLI   SCTVOLCT(SIOTPTR),0                              02S0115 00326000
         BNE   @RF00115                                         02S0115 00327000
         CLC   JFCBVLSQ(2,JFCBPTR),@CH00065                     02S0115 00328000
         BNE   @RF00115                                         02S0115 00329000
*      VRBVLSEQ = ZERO;                /* (SPECIAL CASE)     @ZA07134*/ 00330000
         MVI   VRBVLSEQ(RBPTR),X'00'                            02S0116 00331000
*    ELSE                              /*                    @ZA07134*/ 00332000
*      VRBVLSEQ = JFCBVLSQ;            /* (NORMAL CASE)      @ZA07134*/ 00333000
         B     @RC00115                                         02S0117 00334000
@RF00115 MVC   VRBVLSEQ(1,RBPTR),JFCBVLSQ+1(JFCBPTR)            02S0117 00335000
*    VRBUNCNT = SIOTOTUN;              /* SET TOTAL UNIT COUNT       */ 00336000
@RC00115 MVC   VRBUNCNT(1,RBPTR),SIOTOTUN(SIOTPTR)              02S0118 00337000
*    VRBSRPTR = ADDR(JFCBVOLS);        /* SET PTR. TO FIRST 5 VOLSERS*/ 00338000
         LA    @10,JFCBVOLS(,JFCBPTR)                           02S0119 00339000
         ST    @10,VRBSRPTR(,RBPTR)                             02S0119 00340000
*    VRBSIOTP = ADDR(INDMSIOT);        /* SET PTR. TO SIOT           */ 00341000
         ST    SIOTPTR,VRBSIOTP(,RBPTR)                         02S0120 00342000
*    VRBJXPTR = SIOTJFX;               /* SET PTR. TO JFCBX          */ 00343000
         MVC   VRBJXPTR(4,RBPTR),SIOTJFX(SIOTPTR)               02S0121 00344000
*    IF SIOTPRIV = ON THEN             /* PRIVATE REQUEST            */ 00345000
         TM    SIOTPRIV(SIOTPTR),B'00100000'                    02S0122 00346000
         BNO   @RF00122                                         02S0122 00347000
*      PRIVATER = ON;                  /* SET PRIVATE BIT ON         */ 00348000
         OI    PRIVATER(RBPTR),B'00100000'                      02S0123 00349000
*    IF SIOTDLET = ON THEN             /* DISP = DELETE              */ 00350000
@RF00122 TM    SIOTDLET(SIOTPTR),B'00000100'                    02S0124 00351000
         BNO   @RF00124                                         02S0124 00352000
*      DISPDELT = ON;                  /* SET DISP=DELETE ON         */ 00353000
         OI    DISPDELT(RBPTR),B'00010000'                      02S0125 00354000
*    IF SCTDEFER = ON THEN             /* DEFER MOUNT REQUEST        */ 00355000
@RF00124 TM    SCTDEFER(SIOTPTR),B'00000010'                    02S0126 00356000
         BNO   @RF00126                                         02S0126 00357000
*      DEFERMT = ON;                   /* SET DEFER MOUNT BIT        */ 00358000
         OI    DEFERMT(RBPTR),B'00001000'                       02S0127 00359000
*    IF SCTSNEW = ON THEN              /* DISP = NEW                 */ 00360000
@RF00126 TM    SCTSNEW(SIOTPTR),B'00000100'                     02S0128 00361000
         BNO   @RF00128                                         02S0128 00362000
*      DISPNEW = ON;                   /* SET DISP = NEW             */ 00363000
         OI    DISPNEW(RBPTR),B'00000100'                       02S0129 00364000
*    IF SIO3TAPE = ON THEN             /* TAPE DEVICE                */ 00365000
@RF00128 TM    SIO3TAPE(SIOTPTR),B'10000000'                    02S0130 00366000
         BNO   @RF00130                                         02S0130 00367000
*      TAPEREQ = ON;                   /* SET TAPE REQUEST ON        */ 00368000
         OI    TAPEREQ(RBPTR),B'10000000'                       02S0131 00369000
*    IF SIO3DACC = ON THEN             /* DIRECT ACCESS REQUEST      */ 00370000
@RF00130 TM    SIO3DACC(SIOTPTR),B'00100000'                    02S0132 00371000
         BNO   @RF00132                                         02S0132 00372000
*      DAREQ = ON;                     /* SET DIRECT ACCESS ON       */ 00373000
         OI    DAREQ(RBPTR),B'00010000'                         02S0133 00374000
*    IF SIO3COMM = ON THEN             /* COMMUNICATION REQUEST      */ 00375000
@RF00132 TM    SIO3COMM(SIOTPTR),B'01000000'                    02S0134 00376000
         BNO   @RF00134                                         02S0134 00377000
*      COMMREQ = ON;                   /* SET COM. REQUEST ON        */ 00378000
         OI    COMMREQ(RBPTR),B'01000000'                       02S0135 00379000
*    IF SIO3DISP = ON THEN             /* GRAPHICS REQUEST           */ 00380000
@RF00134 TM    SIO3DISP(SIOTPTR),B'00010000'                    02S0136 00381000
         BNO   @RF00136                                         02S0136 00382000
*      GRAPHREQ = ON;                  /* SET GRAPHIC REQUEST ON     */ 00383000
         OI    GRAPHREQ(RBPTR),B'00100000'                      02S0137 00384000
*    IF SIO3UREC = ON THEN             /* UNIT RECORD REQUEST        */ 00385000
@RF00136 TM    SIO3UREC(SIOTPTR),B'00001000'                    02S0138 00386000
         BNO   @RF00138                                         02S0138 00387000
*      URECREQ = ON;                   /* SET UNIT RECORD REQUEST ON */ 00388000
         OI    URECREQ(RBPTR),B'00001000'                       02S0139 00389000
* END;                                                          02S0140 00390000
@RF00138 DS    0H                                               02S0141 00391000
*RBPTR = NXTVRB;                       /* POINT TO NEXT VRB          */ 00392000
@RF00105 L     RBPTR,NXTVRB(,RBPTR)                             02S0141 00393000
*        END;                          /*END BUILDING OF ONE BLOCK   */ 00394000
*      SIOTPTR=SIOTNPTR;               /*GET NEXT SIOT               */ 00395000
@RF00067 L     SIOTPTR,SIOTNPTR(,SIOTPTR)                       01S0143 00396000
*    END;                                                       01S0144 00397000
         AH    I,@CH00065                                       01S0144 00398000
@DE00066 L     @10,@PC00001                                     01S0144 00399000
         L     @10,ALCWAPTR(,@10)                               01S0144 00400000
         C     I,NUMREQS(,@10)                                  01S0144 00401000
         BNH   @DL00066                                         01S0144 00402000
@DC00066 DS    0H                                               01S0145 00403000
*    RBPTR=RBPTR-LENGTH(VOLUNRB);      /*POINT TO LAST VRB BUILT     */ 00404000
         SH    RBPTR,@CH00673                                   01S0145 00405000
*/* NOTE:   BVOLUNRB UPDATES TO NEXT ENTRY EACH TIME                 */ 00406000
*    NXTVRB=ZERO;                      /*ZERO LAST CHAIN PTR         */ 00407000
         SLR   @10,@10                                          01S0146 00408000
         ST    @10,NXTVRB(,RBPTR)                               01S0146 00409000
*    IF ERRORWD = ZERO THEN            /*NO ERRORS                   */ 00410000
         CR    ERRORWD,@10                                      01S0147 00411000
         BNE   @RF00147                                         01S0147 00412000
*      DO;                                                      01S0148 00413000
*/********************************************************************/ 00414000
*/* SEGMENT NAME - BLDVOLUN                                          */ 00415000
*/*                                                                  */ 00416000
*/* DESCRIPTIVE NAME - BUILD VOLUNIT TABLE                           */ 00417000
*/*                                                                  */ 00418000
*/* FUNCTION -                                                       */ 00419000
*/*   THIS ROUTINE IS RESPONSIBLE FOR CONSTRUCTING THE VOLUNIT TABLE.*/ 00420000
*/*   THE SIZE OF THE VOLUNIT TABLE IS EQUAL TO THE TOTAL NUMBER     */ 00421000
*/*   OF ENTIRES REQUIRED * 16. EACH REQUEST'S NUMBER OF ENTRIES     */ 00422000
*/*   IS CALCULATED AS FOLLOWS -                                     */ 00423000
*/*          . FOR NON-SPECIFIC,NON-PRIVATE DIRECT ACCESS    @YM03990*/ 00424000
*/*            THE NUMBER OF ENTRIES EQUALS THE UNIT COUNT.          */ 00425000
*/*                                                                  */ 00426000
*/*          . FOR SPECIFIC DIRECT ACCESS REQUESTS NON-      @YM03990*/ 00427000
*/*            SPECIFIC PRIVATE REQUESTS, AND FOR TAPE, THE  @YM03990*/ 00428000
*/*            NUMBER OF ENTRIES IS EQUAL TO THE GREATER OF NUMBER   */ 00429000
*/*            OF VOLUME SERIALS (IF A VOLUME SEQUENCE COUNT IS      */ 00430000
*/*            SPECIFIED, THE NUMBER OF SERIALS IS DECREMENTED BY THE*/ 00431000
*/*            VOLUME SEQUENCE COUNT -1), VOLUME COUNT, OR UNIT COUNT*/ 00432000
*/*                                                                  */ 00433000
*/*   THE VOLUNIT TABLE IS THEN INITIALIZED AS FOLLOWS:              */ 00434000
*/*          . VOLUME SERIAL NUMBERS ARE INSERTED. SCRATCH SERIALS   */ 00435000
*/*            ARE GENERATED IF NEEDED (IN THE FORMAT X'FE00NNNNNNNN'*/ 00436000
*/*            FOR D.A. AND X'FFSVAASID' FOR TAPE WHERE SVA IS THE   */ 00437000
*/*            JFCB SVA, AND ASID IS THE ASID) IN EACH               */ 00438000
*/*            REQUESTS VOLUNIT ENTRIES. IF A VOLUME                 */ 00439000
*/*            SEQUENCE NUMBER IS LESS THAN THE NUMBER OF VOLUME     */ 00440000
*/*            SERIALS SPECIFIED, ONLY THOSE VOLUME SERIALS INDICATED*/ 00441000
*/*            BY THE VOLUME SEQUENCE NUMBER ARE INSERTED IN THE     */ 00442000
*/*            VOLUNIT TABLE. IF THE VOLUME SEQUENCE NUMBER IS       */ 00443000
*/*            GREATER THAN THE NUMBER OF SERIALS SPECIFIED AN ERROR */ 00444000
*/*            CONDITION IS SET AND PROCESSING IS TERMINATED. IF A   */ 00445000
*/*            VOLUME SEQUENCE NUMBER IS SPECIFIED FOR A NEW         */ 00446000
*/*            DATA SET IT IS IGNORED.                               */ 00447000
*/*                                                                  */ 00448000
*/*          . UNITIDS ARE GENERATED FOR EACH VOLUME SERIAL UNTIL    */ 00449000
*/*            THE UNIT COUNT IS REACHED. AT THIS POINT THE LAST     */ 00450000
*/*            UNITID IS PROPAGATED FOR THE REQUEST'S REMAINING      */ 00451000
*/*            VOLUNIT ENTRIES.                                      */ 00452000
*/*                                                                  */ 00453000
*/*          . IF UNIT AFFINITY WAS SPECIFIED THE REFERENCED         */ 00454000
*/*            REQUEST'S UNITIDS ARE COPIED ONE TO ONE WITH THE      */ 00455000
*/*            LAST UNITID PROPAGATED IF THERE ARE MORE VOLUNIT      */ 00456000
*/*            ENTRIES PRESENT IN THE REFERENCING REQUEST. FOR NON   */ 00457000
*/*            D.A., NON TAPE REQUESTS VOLIDS ARE ALSO COPIED MAKING */ 00458000
*/*            UNIT AFFINITY APPEAR AS VOLUME AFFINITY.              */ 00459000
*/*                                                                  */ 00460000
*/*          . IF INTRA-STEP VOLUME REFERENCE TO A NON-SPECIFIC      */ 00461000
*/*            VOLUME REQUEST IS SPECIFIED, THE REFERENCED           */ 00462000
*/*            REQUEST'S VOLIDS ARE COPIED ONE TO ONE UNTIL THE      */ 00463000
*/*            VOLUNIT ENTRY COUNT OF THE REFERENCING REQUEST IS     */ 00464000
*/*            REACHED. IF MORE VOLIDS ARE NEEDED, NON-SPECIFIC      */ 00465000
*/*            SERIALS ARE GENERATED (SEE ABOVE).                    */ 00466000
*/*                                                                  */ 00467000
*/*   THE VOLUNIT TABLE IS COMPLETED BY RESOLVING VOLUME AFFINITIES  */ 00468000
*/*   BY CALLING IEFAB426.                                           */ 00469000
*/*                                                                  */ 00470000
*/*   STATUS BITS MUST BE SET FOR EACH VOLUNIT ENTRY, THEY ARE       */ 00471000
*/*          . PUBLIC VOLUME REQUEST                                 */ 00472000
*/*          . PRIVATE SPECIFIED                                     */ 00473000
*/*          . SPECIFIC VOLUME REQUEST                               */ 00474000
*/*          . STORAGE REQUEST                                       */ 00475000
*/*          . VOLUME/UNIT MUST BE NON-SHAREABLE                     */ 00476000
*/*          . VOLUME MUST BE MOUNTED BY END OF ALLOCATION           */ 00477000
*/*          . ETIOT DEVICE ENTRY REQUIRED                           */ 00478000
*/*                                                                  */ 00479000
*/* ENTRY POINT - IN-LINE SEGMENT                                    */ 00480000
*/*   PURPOSE - SEE FUNCTION                                         */ 00481000
*/*                                                                  */ 00482000
*/*   INPUT -                                                        */ 00483000
*/*     TRBPTR - POINTING TO TOP OF VRB BLOCKS.                      */ 00484000
*/*                                                                  */ 00485000
*/* EXITS -                                                          */ 00486000
*/* 1 CONDITION - VOLUNIT TABLE CONSTRUCTED                          */ 00487000
*/*                                                                  */ 00488000
*/*   OUTPUT -                                                       */ 00489000
*/*     VOLUNIT TABLE CONSTRUCTED                                    */ 00490000
*/*     ALCWA CONTAINING ADDRESS AND SIZE OF VOLUNIT                 */ 00491000
*/*     SIOT CONTAINING ADDRESS AND NUMBER OF SUBJECT VOLUNIT ENTRIES*/ 00492000
*/*        AND POSSIBLY UPDATED UNIT COUNT.                          */ 00493000
*/*                                                                  */ 00494000
*/*   RETURN CODE - 0                                                */ 00495000
*/*                                                                  */ 00496000
*/* 2 CONDITION - CORE NOT AVAILABLE FOR VOLUNIT TABLE               */ 00497000
*/*                                                                  */ 00498000
*/*   OUTPUT -                                                       */ 00499000
*/*     STEP RELATED REASON CODE (STEPRSNC) -                        */ 00500000
*/*        2 = GETMAIN ERROR                                         */ 00501000
*/*                                                                  */ 00502000
*/*   RETURN CODE - 4                                                */ 00503000
*/*                                                                  */ 00504000
*/* 3 CONDITION - VOLUME SEQUENCE COUNT IS GREATER THAN              */ 00505000
*/*                THE NUMBER OF SERIALS SPECIFIED                   */ 00506000
*/*                                                                  */ 00507000
*/*   OUTPUT DATA -                                                  */ 00508000
*/*     DD RELATED REASON CODE (SIOTRSNC) -                          */ 00509000
*/*       11 = INVALID VOLUME SEQUENCE NUMBER                        */ 00510000
*/*                                                                  */ 00511000
*/*   RETURN CODE - 4                                                */ 00512000
*/*                                                                  */ 00513000
*/********************************************************************/ 00514000
*TOTNUM=ZERO;                          /*TOTAL NO OF VOLUNIT ENTRIES */ 00515000
         SLR   TOTNUM,TOTNUM                                    02S0149 00516000
*RBPTR=TRBPTR;                         /*POINT TO TOP VRB            */ 00517000
         L     RBPTR,TRBPTR                                     02S0150 00518000
*CNTENTRY=ZERO;                        /*INITIALIZE ENTRY COUNTER    */ 00519000
         SLR   CNTENTRY,CNTENTRY                                02S0151 00520000
*DO  WHILE(RBPTR ^=ZERO & ERRORWD=ZERO);/*GET SZE OF VOLUNIT THRU VRB*/ 00521000
         B     @DE00152                                         02S0152 00522000
@DL00152 DS    0H                                               02S0153 00523000
*  SERPTR=VRBSRPTR;                                             02S0153 00524000
         L     SERPTR,VRBSRPTR(,RBPTR)                          02S0153 00525000
*  IF VRBVLSEQ ^=ZERO & DISPNEW = OFF THEN  /* VOL SEQ SPECIFIED     */ 00526000
         CLI   VRBVLSEQ(RBPTR),0                                02S0154 00527000
         BE    @RF00154                                         02S0154 00528000
         TM    DISPNEW(RBPTR),B'00000100'                       02S0154 00529000
         BNZ   @RF00154                                         02S0154 00530000
*    IF VRBVLSEQ <= VRBSERNO &SERIAL(1,1) ^=TAPEGEND THEN /*VALID SEQ*/ 00531000
         CLC   VRBVLSEQ(1,RBPTR),VRBSERNO(RBPTR)                02S0155 00532000
         BH    @RF00155                                         02S0155 00533000
         CLC   SERIAL(1,SERPTR),TAPEGEND                        02S0155 00534000
         BE    @RF00155                                         02S0155 00535000
*      DO;                                                      02S0156 00536000
*        TEMSERNO = VRBSERNO - VRBVLSEQ + ONE; /* #OF SERIALS - SEQ. */ 00537000
         SLR   TEMSERNO,TEMSERNO                                02S0157 00538000
         IC    TEMSERNO,VRBSERNO(,RBPTR)                        02S0157 00539000
         SLR   @10,@10                                          02S0157 00540000
         IC    @10,VRBVLSEQ(,RBPTR)                             02S0157 00541000
         SLR   TEMSERNO,@10                                     02S0157 00542000
         LA    TEMSERNO,1(,TEMSERNO)                            02S0157 00543000
*        IF VRBSIOTP -> SCTPARLM = ON THEN  /*PARALLEL MOUNT WANTED  */ 00544000
         L     @10,VRBSIOTP(,RBPTR)                             02S0158 00545000
         TM    SCTPARLM(@10),B'00000100'                        02S0158 00546000
         BNO   @RF00158                                         02S0158 00547000
*          DO;                                                  02S0159 00548000
*            VRBUNCNT = MAX(TEMSERNO,VRBVLCNT); /*CALC. # OF UNITS   */ 00549000
         SLR   @08,@08                                          02S0160 00550000
         IC    @08,VRBVLCNT(,RBPTR)                             02S0160 00551000
         CR    @08,TEMSERNO                                     02S0160 00552000
         BNL   *+6                                                      00553000
         LR    @08,TEMSERNO                                     02S0160 00554000
         STC   @08,VRBUNCNT(,RBPTR)                             02S0160 00555000
*            VRBSIOTP -> SIOTOTUN = VRBUNCNT;  /*PROPAGATE TO SIOT   */ 00556000
         STC   @08,SIOTOTUN(,@10)                               02S0161 00557000
*            IF VRBSIOTP-> SIOTOTUN > MAXUNIT THEN              02S0162 00558000
         CLI   SIOTOTUN(@10),59                                 02S0162 00559000
         BNH   @RF00162                                         02S0162 00560000
*              DO;                                              02S0163 00561000
*                ERRORWD = BLDVFAIL;                            02S0164 00562000
         LA    ERRORWD,4                                        02S0164 00563000
*                VRBSIOTP -> SIOTRSNC = OVER59U;                02S0165 00564000
         MVC   SIOTRSNC(2,@10),@CH00094                         02S0165 00565000
*              END;                                             02S0166 00566000
*          END;                                                 02S0167 00567000
@RF00162 DS    0H                                               02S0168 00568000
*        CNTENTRY = MAX(TEMSERNO,VRBUNCNT,VRBVLCNT); /*# OF VOLUNIT     00569000
*                                        ENTRIES                     */ 00570000
@RF00158 SLR   CNTENTRY,CNTENTRY                                02S0168 00571000
         IC    CNTENTRY,VRBUNCNT(,RBPTR)                        02S0168 00572000
         CR    CNTENTRY,TEMSERNO                                02S0168 00573000
         BNL   *+6                                                      00574000
         LR    CNTENTRY,TEMSERNO                                02S0168 00575000
         SLR   @10,@10                                          02S0168 00576000
         IC    @10,VRBVLCNT(,RBPTR)                             02S0168 00577000
         CR    CNTENTRY,@10                                     02S0168 00578000
         BNL   *+6                                                      00579000
         LR    CNTENTRY,@10                                     02S0168 00580000
*      END;                                                     02S0169 00581000
*    ELSE                              /*INVALID VOL SEQ             */ 00582000
*      DO;                                                      02S0170 00583000
         B     @RC00155                                         02S0170 00584000
@RF00155 DS    0H                                               02S0171 00585000
*        ERRORWD = SEQERR;             /*INDICATE VOL SEQ ERROR      */ 00586000
         LA    ERRORWD,4                                        02S0171 00587000
*        VRBSIOTP -> SIOTRSNC =VLSEQRSN; /*VOL SEQ REASON CODE       */ 00588000
         L     @10,VRBSIOTP(,RBPTR)                             02S0172 00589000
         MVC   SIOTRSNC(2,@10),@CH00125                         02S0172 00590000
*      END;                                                     02S0173 00591000
*  ELSE                                /*NO VOL SEQ TO BE DONE       */ 00592000
*    DO;                                                        02S0174 00593000
         B     @RC00154                                         02S0174 00594000
@RF00154 DS    0H                                               02S0175 00595000
*      IF SERIAL(1,1) =NONSPEC                                  02S0175 00596000
*         & (PRIVATER=OFF &            /*NON SPECIFIC NON PRIVATE       00597000
*                                                            @YM03990*/ 00598000
*            TAPEREQ=OFF) THEN         /*NON TAPE            @YM03990*/ 00599000
         CLI   SERIAL(SERPTR),C' '                              02S0175 00600000
         BNE   @RF00175                                         02S0175 00601000
         TM    PRIVATER(RBPTR),B'00100000'                      02S0175 00602000
         BNZ   @RF00175                                         02S0175 00603000
         TM    TAPEREQ(RBPTR),B'10000000'                       02S0175 00604000
         BNZ   @RF00175                                         02S0175 00605000
*          CNTENTRY= VRBUNCNT;         /*NO. OF SERIALS OR UNIT CNT  */ 00606000
         SLR   CNTENTRY,CNTENTRY                                02S0176 00607000
         IC    CNTENTRY,VRBUNCNT(,RBPTR)                        02S0176 00608000
*      ELSE                                                     02S0177 00609000
*          IF SERIAL(1,1) = NONSPEC    /*NON-SPECIFIC        @ZA25630*/ 00610000
*             & TAPEREQ = ON THEN      /*TAPE REQUEST        @ZA25630*/ 00611000
         B     @RC00175                                         02S0177 00612000
@RF00175 CLI   SERIAL(SERPTR),C' '                              02S0177 00613000
         BNE   @RF00177                                         02S0177 00614000
         TM    TAPEREQ(RBPTR),B'10000000'                       02S0177 00615000
         BNO   @RF00177                                         02S0177 00616000
*              CNTENTRY = MAX(VRBSERNO,VRBUNCNT);  /*DONT CONSIDER      00617000
*                                        THE VOLCOUNT        @ZA25630*/ 00618000
         SLR   CNTENTRY,CNTENTRY                                02S0178 00619000
         IC    CNTENTRY,VRBSERNO(,RBPTR)                        02S0178 00620000
         SLR   @10,@10                                          02S0178 00621000
         IC    @10,VRBUNCNT(,RBPTR)                             02S0178 00622000
         CR    CNTENTRY,@10                                     02S0178 00623000
         BNL   *+6                                                      00624000
         LR    CNTENTRY,@10                                     02S0178 00625000
*          ELSE                        /*                    @ZA25630*/ 00626000
*              CNTENTRY = MAX(VRBSERNO,VRBUNCNT,VRBVLCNT); /*CONSIDER   00627000
*                                        VOLCOUNT                    */ 00628000
         B     @RC00177                                         02S0179 00629000
@RF00177 SLR   CNTENTRY,CNTENTRY                                02S0179 00630000
         IC    CNTENTRY,VRBSERNO(,RBPTR)                        02S0179 00631000
         SLR   @10,@10                                          02S0179 00632000
         IC    @10,VRBUNCNT(,RBPTR)                             02S0179 00633000
         CR    CNTENTRY,@10                                     02S0179 00634000
         BNL   *+6                                                      00635000
         LR    CNTENTRY,@10                                     02S0179 00636000
         SLR   @10,@10                                          02S0179 00637000
         IC    @10,VRBVLCNT(,RBPTR)                             02S0179 00638000
         CR    CNTENTRY,@10                                     02S0179 00639000
         BNL   *+6                                                      00640000
         LR    CNTENTRY,@10                                     02S0179 00641000
*    END;                                                       02S0180 00642000
@RC00177 DS    0H                                               02S0180 00643000
@RC00175 DS    0H                                               02S0181 00644000
*  TOTNUM=TOTNUM+CNTENTRY;             /*RUNNING TOTAL OF ENTRIES    */ 00645000
@RC00154 ALR   TOTNUM,CNTENTRY                                  02S0181 00646000
*  VRBSIOTP ->SVOLUNNO =CNTENTRY;      /*UPDATE NO. ENTRIES IN SIOT  */ 00647000
         L     @10,VRBSIOTP(,RBPTR)                             02S0182 00648000
         STH   CNTENTRY,SVOLUNNO(,@10)                          02S0182 00649000
*  RBPTR=NXTVRB;                       /*LOOP TO NEXT VRB            */ 00650000
         L     RBPTR,NXTVRB(,RBPTR)                             02S0183 00651000
*END;                                                           02S0184 00652000
@DE00152 SLR   @10,@10                                          02S0184 00653000
         CR    RBPTR,@10                                        02S0184 00654000
         BE    @DC00152                                         02S0184 00655000
         CR    ERRORWD,@10                                      02S0184 00656000
         BE    @DL00152                                         02S0184 00657000
@DC00152 DS    0H                                               02S0185 00658000
* IF ERRORWD = ZERO THEN               /*NO ERRORS                   */ 00659000
         LTR   ERRORWD,ERRORWD                                  02S0185 00660000
         BNZ   @RF00185                                         02S0185 00661000
*   DO;                                                         02S0186 00662000
*     TOTVOLUN = TOTNUM;               /*TOTAL VU'S IN ALCWA         */ 00663000
         L     @08,@PC00001                                     02S0187 00664000
         L     @08,ALCWAPTR(,@08)                               02S0187 00665000
         ST    TOTNUM,TOTVOLUN(,@08)                            02S0187 00666000
*     VUSIZE=TOTNUM*LENGTH(VOLUNTAB);  /*TOTAL SIZE OF VOLUNIT TABLE */ 00667000
         LR    VUSIZE,TOTNUM                                    02S0188 00668000
         MH    VUSIZE,@CH00673                                  02S0188 00669000
*      /* ?GETSTORG (SPID,VUSIZE,VUPTR);*/                      02S0189 00670000
*        RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/          02S0189 00671000
*        GTSTR0 = VUSIZE; /* SET AMOUNT*/                       02S0190 00672000
         LR    GTSTR0,VUSIZE                                    02S0190 00673000
*        GTSTR2 = SPID; /* SET SUBPOOL*/                        02S0191 00674000
         LA    GTSTR2,230                                       02S0191 00675000
*        GENERATE CODE;                                         02S0192 00676000
          GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN                          00677000
*        GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/          02S0193 00678000
         ST    GTSTR15,GTSTRTCD                                 02S0193 00679000
*        VUPTR = GTSTR1; /* ADDR OF GOTN STORG*/                02S0194 00680000
         LR    VUPTR,GTSTR1                                     02S0194 00681000
*        RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */           02S0195 00682000
*        IF GTSTRTCD = 0 THEN /*GETMAIN SUCCESSFUL? */          02S0196 00683000
         L     @08,GTSTRTCD                                     02S0196 00684000
         LTR   @08,@08                                          02S0196 00685000
         BNZ   @RF00196                                         02S0196 00686000
*          DO;               /* YES, CLEAR STORAGE.*/           02S0197 00687000
*            RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                  02S0198 00688000
*                               GTSTR7,GTSTR8) RSTD;            02S0198 00689000
*            GTSTR4 = VUPTR; /*STORG PTR*/                      02S0199 00690000
         LR    GTSTR4,VUPTR                                     02S0199 00691000
*            GTSTR5 = VUSIZE; /*STORG AMNT*/                    02S0200 00692000
         LR    GTSTR5,VUSIZE                                    02S0200 00693000
*            GTSTR7 = '00000000'X; /*PAD CHAR & LNTH*/          02S0201 00694000
         SLR   GTSTR7,GTSTR7                                    02S0201 00695000
*            IF SPID = GTST253 THEN                             02S0202 00696000
         B     @RF00202                                         02S0202 00697000
*           GEN                                                 02S0203 00698000
*        (MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8);      02S0203 00699000
         MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8                 00700000
*            GEN REFS(GTSTR4,GTSTR6);                           02S0204 00701000
@RF00202 DS    0H                                               02S0204 00702000
               MVCL  GTSTR4,GTSTR6 CLEAR GOTTEN STORG                   00703000
*            IF SPID = GTST253 THEN                             02S0205 00704000
         B     @RF00205                                         02S0205 00705000
*              GEN (MODESET KEYADDR=(2));                       02S0206 00706000
         MODESET KEYADDR=(2)                                            00707000
*            RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                  02S0207 00708000
*                               GTSTR7,GTSTR8) UNRSTD;          02S0207 00709000
@RF00205 DS    0H                                               02S0208 00710000
*          END;       /* STORAGE CLEARING COMPLETED */          02S0208 00711000
*        ELSE                                                   02S0209 00712000
*        VUPTR= 0;   /* CLEAR RETURN ADDR. */                   02S0209 00713000
         B     @RC00196                                         02S0209 00714000
@RF00196 SLR   VUPTR,VUPTR                                      02S0209 00715000
*        GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */          02S0210 00716000
@RC00196 L     GTSTR15,GTSTRTCD                                 02S0210 00717000
*                                      /* RESTORE LIST PRINT STATUS  */ 00718000
*   /*GET CORE FOR VOLUNIT        */                            02S0211 00719000
*     IF REG15 = ZERO THEN                                      02S0211 00720000
         SLR   @14,@14                                          02S0211 00721000
         CR    REG15,@14                                        02S0211 00722000
         BNE   @RF00211                                         02S0211 00723000
*       DO;                                                     02S0212 00724000
*         VOLUNSZE = VUSIZE;           /*VOLUNIT SIZE TO ALCWA       */ 00725000
         L     @08,@PC00001                                     02S0213 00726000
         L     @08,ALCWAPTR(,@08)                               02S0213 00727000
         ST    VUSIZE,VOLUNSZE(,@08)                            02S0213 00728000
*         NXTVOLID = ZERO;             /*PRIME SCRATCH SERIAL NUMBER */ 00729000
         ST    @14,NXTVOLID                                     02S0214 00730000
*         GENVOL = SCRSER;                                      02S0215 00731000
         MVC   GENVOL(2),@CB00120                               02S0215 00732000
*         RBPTR=TRBPTR;                /*BASE FOR FIRST VRB          */ 00733000
         L     RBPTR,TRBPTR                                     02S0216 00734000
*         GENFF = TAPEGEND;            /*X'FF' TO BUFFER             */ 00735000
         MVC   GENFF(1),TAPEGEND                                02S0217 00736000
*         VOLUNPTR=VUPTR;              /*BASE FOR START OF VOLUNIT   */ 00737000
         ST    VUPTR,VOLUNPTR(,@08)                             02S0218 00738000
*         DO WHILE(RBPTR^=ZERO);       /*LOOP THRU VRBS              */ 00739000
         B     @DE00219                                         02S0219 00740000
@DL00219 DS    0H                                               02S0220 00741000
*/********************************************************************/ 00742000
*/*                                                                  */ 00743000
*/* SEGMENT NAME - INITVOLN                                          */ 00744000
*/*                                                                  */ 00745000
*/* DESCRIPTIVE NAME - FILL IN VOLUNIT ENTRIES                       */ 00746000
*/*                                                                  */ 00747000
*/* FUNCTION -                                                       */ 00748000
*/*   THE FUNCTION OF THIS SEGMENT IS TO INITIALIZE VOLUNIT TABLE    */ 00749000
*/*   ENTRIES. THIS SEGMENT CONSTRUCTS ALL VOLUNIT ENTRIES FOR A     */ 00750000
*/*   REQUEST WHERE A REQUEST IS REPRESENTED BY A VOLUNIT            */ 00751000
*/*   REQUEST BLOCK(VRB).  THE NUMBER OF VOLUNIT ENTRIES IS GIVEN    */ 00752000
*/*   IN THE SIOT THAT IS ASSOCIATED WITH THE VRB.                   */ 00753000
*/*                                                                  */ 00754000
*/*   THE VOLUNIT TABLE ENTRIES ARE SET AS FOLLOWS:                  */ 00755000
*/*                                                                  */ 00756000
*/*   1. VOLUME SERIAL NUMBERS ARE INSERTED. IF A VOLUME SEQUENCE    */ 00757000
*/*      COUNT IS SPECIFIED FOR AN OLD DATA SET ONLY THOSE VOLUME    */ 00758000
*/*      SERIALS INDICATED BY THE VOLUME SEQUENCE COUNT ARE USED.    */ 00759000
*/*      IF ANY NON-SPECIFIC VOLUMES ARE NEEDED, THE SERIAL NUMBERS  */ 00760000
*/*      ARE GENERATED IN THE FORMAT X'FE00NNNNNNNN' WHERE           */ 00761000
*/*      NNNNNNNN IS A UNIQUE NUMBER FOR EACH GENERATED SERIAL FOR   */ 00762000
*/*      D.A. FOR TAPE THE SERIAL NUMBER BEGINS WITH AN X'FF' AND    */ 00763000
*/*      CONTAINS, JFCB SVA AND ASID.                                */ 00764000
*/*                                                                  */ 00765000
*/*   2. UNITIDS ARE GENERATED FOR EACH VOLUME SERIAL UNTIL THE      */ 00766000
*/*      TOTAL NUMBER OF UNITS REQUIRED IS REACHED. AT THIS POINT    */ 00767000
*/*      THE LAST UNITID IS PROPOGATED FOR THE REQUEST'S REMAINING   */ 00768000
*/*      VOLUNIT ENTRIES.                                            */ 00769000
*/*                                                                  */ 00770000
*/*   3. IF INTRA-STEP VOLUME REFERENCE TO A NON-SPECIFIC VOLUME     */ 00771000
*/*      REQUEST IS SPECIFIED, THE REFERENCED REQUEST'S VOLIDS ARE   */ 00772000
*/*      COPIED ONE TO ONE UNTIL THE VOLUNIT ENTRY COUNT OF THE      */ 00773000
*/*      REFERENCING REQUEST OR THE VOLUNIT ENTRY COUNT OF THE       */ 00774000
*/*      REFERENCED REQUEST IS REACHED, WHICHEVER IS SMALLER. IF MORE*/ 00775000
*/*      SERIALS ARE NEEDED, NON-SPECIFIC SERIALS ARE GENERATED.     */ 00776000
*/*                                                                  */ 00777000
*/*   4. IF UNIT AFFINITY IS SPECIFIED, THE REFERENCED REQUEST'S     */ 00778000
*/*      UNITIDS ARE COPIED ONE TO ONE WITH THE LAST UNITID          */ 00779000
*/*      PROPAGATED IF THERE ARE MORE VOLUNIT ENTRIES PRESENT.       */ 00780000
*/*      FOR NON D.A. NON TAPE REQUESTS, VOLIDS ARE ALSO COPIED      */ 00781000
*/*      FORCING VOLUME AFFINITY.                                    */ 00782000
*/*                                                                  */ 00783000
*/*   5. STATUS BITS IN THE VOLUNIT TABLE ENTRIES ARE SET.           */ 00784000
*/*                                                                  */ 00785000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00786000
*/*   PURPOSE - SEE FUNCTION                                         */ 00787000
*/*                                                                  */ 00788000
*/*   INPUT -                                                        */ 00789000
*/*     SIOT -                                                       */ 00790000
*/*       SVOLUNNO - NO. OF VOLUNIT ENTRIES FOR THIS REQUEST         */ 00791000
*/*                                                                  */ 00792000
*/*     VRB'S (VOLUNIT REQUEST BLOCKS)                               */ 00793000
*/*                                                                  */ 00794000
*/*     VOLUNIT TABLE ENTRIES                                        */ 00795000
*/*                                                                  */ 00796000
*/* EXITS -                                                          */ 00797000
*/*   CONDITION - VOLUNIT ENTRY INITIALIZED                          */ 00798000
*/*                                                                  */ 00799000
*/*   OUTPUT -                                                       */ 00800000
*/*     SIOT -                                                       */ 00801000
*/*       SVOLUNAD - PTR. TO FIRST VOLUNIT TABLE ENTRY               */ 00802000
*/*                                                                  */ 00803000
*/*     VOLUNIT ENTRY INITIALIZED                                    */ 00804000
*/*                                                                  */ 00805000
*/*   RETURN CODE - NONE                                             */ 00806000
*/*                                                                  */ 00807000
*/********************************************************************/ 00808000
*CNTUNID=ZERO;                         /*UNITID  COUNTER             */ 00809000
         SLR   @07,@07                                          03S0220 00810000
         ST    @07,CNTUNID                                      03S0220 00811000
*VRBSIOTP->SVOLUNAD=VUPTR;             /*VU ADDR TO SIOT             */ 00812000
         L     @01,VRBSIOTP(,RBPTR)                             03S0221 00813000
         ST    VUPTR,SVOLUNAD(,@01)                             03S0221 00814000
*CNTENTRY=ZERO;                        /*ENTRY COUNTER               */ 00815000
         SLR   CNTENTRY,CNTENTRY                                03S0222 00816000
*SERCNTR=ZERO;                         /*SERIAL NUMBER COUNTER       */ 00817000
         ST    @07,SERCNTR                                      03S0223 00818000
*I=ONE;                                /*INDEX VALUE                 */ 00819000
         LA    @15,1                                            03S0224 00820000
         LR    I,@15                                            03S0224 00821000
*SERCTRL=FIVE;                         /*JFCB TO JFCBX CONTROL       */ 00822000
         LA    @14,5                                            03S0225 00823000
         LR    SERCTRL,@14                                      03S0225 00824000
*SERPTR=VRBSRPTR;                      /*PTR TO FIRST VOLSER         */ 00825000
         L     SERPTR,VRBSRPTR(,RBPTR)                          03S0226 00826000
*IF VRBVLSEQ ^= ZERO & DISPNEW = OFF THEN/*VOL SEQ FOR OLD DATA SET  */ 00827000
         CLI   VRBVLSEQ(RBPTR),0                                03S0227 00828000
         BE    @RF00227                                         03S0227 00829000
         TM    DISPNEW(RBPTR),B'00000100'                       03S0227 00830000
         BNZ   @RF00227                                         03S0227 00831000
*  DO;                                 /*VOLSEQ WANTED               */ 00832000
*/********************************************************************/ 00833000
*/*                                                                  */ 00834000
*/* SEGMENT NAME - VLSEQPRC                                          */ 00835000
*/*                                                                  */ 00836000
*/* DESCRIPTIVE NAME - PROCESS VOLUME SEQUENCE NUMBER                */ 00837000
*/*                                                                  */ 00838000
*/* FUNCTION -                                                       */ 00839000
*/*   THE FUNCTION OF THIS SEGMENT IS TO SET UP COUNTERS FOR INITVOLN*/ 00840000
*/*   SO THAT ONLY THOSE VOLUMES INDICATED BY THE VOLUME SEQUENCE    */ 00841000
*/*   COUNT ARE PUT IN THE VOLUNIT TABLE. SERIAL NUMBERS PRIOR TO    */ 00842000
*/*   THE VOLUME SEQUENCE COUNT ARE IGNORED.                         */ 00843000
*/*                                                                  */ 00844000
*/*   THE FOLLOWING FUNCTIONS ARE PERFORMED:                         */ 00845000
*/*                                                                  */ 00846000
*/*   1. SET THE NUMBER OF VOLSERS ALREADY PROCESSED (SEE INPUT DATA)*/ 00847000
*/*      THE NUMBER OF VOLSERS ALREADY PROCESSED IS SET TO THE       */ 00848000
*/*      VOLUME SEQUENCE COUNT - 1.                                  */ 00849000
*/*                                                                  */ 00850000
*/*   2. SET THE POSITION OF THE VOLSER IN THE JFCB OR JFCBX THAT    */ 00851000
*/*      MUST BE PROCESSED.                                          */ 00852000
*/*                                                                  */ 00853000
*/*   3. SET THE NUMBER OF VOLUMES TO PROCESS BEFORE ANOTHER JFCBX   */ 00854000
*/*      MUST BE ACCESSED (SEE INPUT).                               */ 00855000
*/*      THIS FIELD IS INCREMENTED BY FIFTEEN FOR EACH JFCBX BYPASSED*/ 00856000
*/*      BECAUSE OF VOLUME SEQUENCE COUNT.                           */ 00857000
*/*                                                                  */ 00858000
*/*   4. SET THE BASE FOR VOLUME SERIALS                             */ 00859000
*/*      SET TO THE ADDRESS OF THE JFCBX THAT CONTAINS THE FIRST     */ 00860000
*/*      VOLUME INDICATED BY THE VOLUME SEQUENCE COUNT.              */ 00861000
*/*                                                                  */ 00862000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00863000
*/*   PURPOSE - SEE FUNCTION                                         */ 00864000
*/*                                                                  */ 00865000
*/*   INPUT -                                                        */ 00866000
*/*     VRB (VOLUNIT REQUEST BLOCK) -                                */ 00867000
*/*       VRBVLSEQ - VOLUME SEQUENCE COUNT                           */ 00868000
*/*       VRBJXPTR - JFCBX ADDRESS                                   */ 00869000
*/*                                                                  */ 00870000
*/*     SERCTRL - NUMBER OF VOLUMES TO PROCESS BEFORE A JFCBX        */ 00871000
*/*       SHOULD BE OBTAINED.                                        */ 00872000
*/*                                                                  */ 00873000
*/*     SERCNTR - NUMBER OF VOLUME SERIALS ALREADY PROCESSED         */ 00874000
*/*                                                                  */ 00875000
*/* EXITS -                                                          */ 00876000
*/*   CONDITION - VOL SEQ PROCESSING COMPLETE                        */ 00877000
*/*                                                                  */ 00878000
*/*   OUTPUT -                                                       */ 00879000
*/*     I - THE NUMBER (WITHIN THE JFCB OR JFCBX) OF THE FIRST       */ 00880000
*/*         VOLUME TO BE PROCESSED.                                  */ 00881000
*/*                                                                  */ 00882000
*/*     SERPTR - BASE ADDRESS FOR VOLUME SERIALS                     */ 00883000
*/*                                                                  */ 00884000
*/*     SERCTRL - SEE INPUT                                          */ 00885000
*/*                                                                  */ 00886000
*/*     SERCNTR - SEE INPUT                                          */ 00887000
*/*                                                                  */ 00888000
*/*   RETURN CODE - NONE                                             */ 00889000
*/*                                                                  */ 00890000
*/********************************************************************/ 00891000
*IF VRBVLSEQ >FIVE THEN                 /*MUST GO TO JFCBX           */ 00892000
         CLI   VRBVLSEQ(RBPTR),5                                04S0229 00893000
         BNH   @RF00229                                         04S0229 00894000
*  DO;                                                          04S0230 00895000
*    SERCTRL = SERCTRL + FIFTEEN;       /*ALLOW                      */ 00896000
         LA    @06,15                                           04S0231 00897000
         ALR   SERCTRL,@06                                      04S0231 00898000
*    JFXPTR = VRBJXPTR;                 /*BASE OF FIRST JFCBX        */ 00899000
         MVC   JFXPTR(4),VRBJXPTR(RBPTR)                        04S0232 00900000
*    TEMPSEQ = VRBVLSEQ - FIVE;         /*ADJUST FOR JFCBVOLS        */ 00901000
         LCR   @14,@14                                          04S0233 00902000
         SLR   TEMPSEQ,TEMPSEQ                                  04S0233 00903000
         IC    TEMPSEQ,VRBVLSEQ(,RBPTR)                         04S0233 00904000
         ALR   @14,TEMPSEQ                                      04S0233 00905000
         LR    TEMPSEQ,@14                                      04S0233 00906000
*    JFXPOS = TEMPSEQ/FIFTEEN;          /*HOW MANY JFCBXS            */ 00907000
         LR    @01,TEMPSEQ                                      04S0234 00908000
         SLR   @00,@00                                          04S0234 00909000
         DR    @00,@06                                          04S0234 00910000
         LR    JFXPOS,@01                                       04S0234 00911000
*    JFXREM = TEMPSEQ//FIFTEEN;         /*REMAINDER IN LAST JFCBX    */ 00912000
         LR    @00,TEMPSEQ                                      04S0235 00913000
         SRDA  @00,32                                           04S0235 00914000
         DR    @00,@06                                          04S0235 00915000
         LR    JFXREM,@00                                       04S0235 00916000
*    IF JFXREM > ZERO THEN              /*ADJUST FOR LAST JFCBX      */ 00917000
         CR    JFXREM,@07                                       04S0236 00918000
         BNH   @RF00236                                         04S0236 00919000
*      JFXPOS = JFXPOS + ONE;                                   04S0237 00920000
         ALR   JFXPOS,@15                                       04S0237 00921000
*    IF JFXPOS > ONE THEN               /*DON'T HAVE CORRECT JFCBX      00922000
*                                         YET                        */ 00923000
@RF00236 LA    @03,1                                            04S0238 00924000
         CR    JFXPOS,@03                                       04S0238 00925000
         BNH   @RF00238                                         04S0238 00926000
*      DO XCTR = ONE TO JFXPOS - ONE;   /*LOOP TILL CORRECT JFCBX    */ 00927000
         LA    @15,1                                            04S0239 00928000
         LR    XCTR,@15                                         04S0239 00929000
         B     @DE00239                                         04S0239 00930000
@DL00239 DS    0H                                               04S0240 00931000
*        JFXPTR = JFCBXNXT;                                     04S0240 00932000
         L     @01,JFXPTR                                       04S0240 00933000
         L     @15,JFCBXNXT(,@01)                               04S0240 00934000
         ST    @15,JFXPTR                                       04S0240 00935000
*        SERCTRL = SERCTRL + FIFTEEN;                           04S0241 00936000
         AH    SERCTRL,@CH00038                                 04S0241 00937000
*      END;                                                     04S0242 00938000
         AH    XCTR,@CH00065                                    04S0242 00939000
@DE00239 LR    @15,JFXPOS                                       04S0242 00940000
         BCTR  @15,0                                            04S0242 00941000
         CR    XCTR,@15                                         04S0242 00942000
         BNH   @DL00239                                         04S0242 00943000
*    IF JFXREM > ZERO THEN              /*MUST POSITION WITHIN JFCBX */ 00944000
@RF00238 CH    JFXREM,@CH00096                                  04S0243 00945000
         BNH   @RF00243                                         04S0243 00946000
*      DO;                                                      04S0244 00947000
*        I=JFXREM;                                              04S0245 00948000
         LR    I,JFXREM                                         04S0245 00949000
*      END;                                                     04S0246 00950000
*    ELSE                               /*MUST POSITION TO END OF EXT*/ 00951000
*      DO;                                                      04S0247 00952000
         B     @RC00243                                         04S0247 00953000
@RF00243 DS    0H                                               04S0248 00954000
*        I=FIFTEEN;                                             04S0248 00955000
         LA    I,15                                             04S0248 00956000
*      END;                                                     04S0249 00957000
*    SERPTR = ADDR(JFCBXVOL);           /*POINT TO SERIALS IN JFCBX  */ 00958000
@RC00243 L     SERPTR,JFXPTR                                    04S0250 00959000
         LA    SERPTR,JFCBXVOL(,SERPTR)                         04S0250 00960000
*  END;                                                         04S0251 00961000
*ELSE                                   /*VLSEQ WITHIN JFCB          */ 00962000
*  DO;                                                          04S0252 00963000
         B     @RC00229                                         04S0252 00964000
@RF00229 DS    0H                                               04S0253 00965000
*    I=VRBVLSEQ;                                                04S0253 00966000
         SLR   I,I                                              04S0253 00967000
         IC    I,VRBVLSEQ(,RBPTR)                               04S0253 00968000
*  END;                                                         04S0254 00969000
*SERCNTR = VRBVLSEQ -ONE;               /*ADJUST SERIAL COUNTER      */ 00970000
@RC00229 SLR   @07,@07                                          04S0255 00971000
         IC    @07,VRBVLSEQ(,RBPTR)                             04S0255 00972000
         BCTR  @07,0                                            04S0255 00973000
         ST    @07,SERCNTR                                      04S0255 00974000
*  END;                                                         03S0256 00975000
*DO WHILE (CNTENTRY <  VRBSIOTP -> SVOLUNNO); /*NO. OF VOLUN ENTRIES */ 00976000
@RF00227 B     @DE00257                                         03S0257 00977000
@DL00257 DS    0H                                               03S0258 00978000
*  IF VRBSERNO=ZERO | SERCNTR=VRBSERNO THEN   /*ALL SERIALS PROCESSED*/ 00979000
         CLI   VRBSERNO(RBPTR),0                                03S0258 00980000
         BE    @RT00258                                         03S0258 00981000
         L     @07,SERCNTR                                      03S0258 00982000
         SLR   @15,@15                                          03S0258 00983000
         IC    @15,VRBSERNO(,RBPTR)                             03S0258 00984000
         CR    @07,@15                                          03S0258 00985000
         BNE   @RF00258                                         03S0258 00986000
@RT00258 DS    0H                                               03S0259 00987000
*    DO;                               /*GENERATE NON-SPECIFIC SERIAL*/ 00988000
*      IF VRBREFNO = ZERO THEN         /*NO NON-SPECIFIC VOL AFFINITY*/ 00989000
         SLR   @05,@05                                          03S0260 00990000
         CH    @05,VRBREFNO(,RBPTR)                             03S0260 00991000
         BNE   @RF00260                                         03S0260 00992000
*        DO;                           /*GENERATE SERIAL             */ 00993000
*/********************************************************************/ 00994000
*/*                                                                  */ 00995000
*/* SEGMENT NAME - GENSERS                                           */ 00996000
*/* DESCRIPTIVE NAME - GENERATE TEMPORARY VOLUME SERIALS             */ 00997000
*/*                                                                  */ 00998000
*/*                                                                  */ 00999000
*/* FUNCTION -                                                       */ 01000000
*/*   THE FUNCTION OF THIS ROUTINE IS TO GENERATE TEMPORARY, UNIQUE, */ 01001000
*/*   VOLUME SERIAL NUMBERS FOR REQUESTS NOT SPECIFYING SERIAL       */ 01002000
*/*   NUMBERS. THESE NUMBERS ARE ALSO GENERATED TO FILL OUT A        */ 01003000
*/*   REQUESTS VOLUNIT ENTRIES WHEN MORE VOLUNIT ENTRIES THEN        */ 01004000
*/*   SPECIFIC SERIAL NUMBERS EXIST.                                 */ 01005000
*/*   THE SERIAL NUMBERS GENERATED ARE OF TWO FORMS-                 */ 01006000
*/*     1.FEOONNNNNNNN - WHERE NNNNNNNN  IS A FOUR BYTE FIELD        */ 01007000
*/*       CONTAINING A UNIQUE NUMBER BEGINNING WITH ONE. THIS TYPE   */ 01008000
*/*       OF NUMBER IS NORMALLY GENERATED, THE ONLY EXCEPTION IS     */ 01009000
*/*       DESCRIBED BELOW. NOTE - THESE NUMBERS EXIST ONLY IN THE    */ 01010000
*/*       VOLUNIT TABLE AND NEVER EXIST IN A JFCB OR UCB. THE PURPOSE*/ 01011000
*/*       OF THESE NUMBERS IS TO ALLOW FOR THE RESOLUTION OF VOLUME  */ 01012000
*/*       AFFINITIES BETWEEN NON SPECIFIC REQUESTS                   */ 01013000
*/*     2.FFSVAASID - WHERE SVA IS THE THREE BYTE SVA OF THE JFCB    */ 01014000
*/*       FOR THE REQUEST, AND ASID IS THE ASID OF THIS              */ 01015000
*/*       JOB.  THIS NUMBER IS GENERATED FOR NON SPECIFIC TAPE       */ 01016000
*/*       REQUESTS. ONLY ONE SUCH SERIAL PER TAPE REQUEST IS         */ 01017000
*/*       GENERATED. THIS SERIAL NUMBER WILL APPEAR IN THE VOLUNIT   */ 01018000
*/*       TABLE, THE JFCB AND THE UCB. THESE SERIAL NUMBERS ALLOW    */ 01019000
*/*       VOLUME AFFINITY TO BE RESOLVED AT OPEN (VIA THE JFCB SVA). */ 01020000
*/*       THEREFORE, THESE SERIAL NUMBERS ARE REPLACED IN THE JFCB   */ 01021000
*/*       AND UCB WHEN THE DATA SET IS OPENED.                       */ 01022000
*/*                                                                  */ 01023000
*/* OPERATION -                                                      */ 01024000
*/*   DESCRIBED IN FUNCTION                                          */ 01025000
*/*                                                                  */ 01026000
*/* ENTRY - INLINE SEGMENT                                           */ 01027000
*/*                                                                  */ 01028000
*/*   PURPOSE - SEE FUNCTION                                         */ 01029000
*/*                                                                  */ 01030000
*/*   INPUT -                                                        */ 01031000
*/*     VRB - VOLUNIT REQUEST BLOCK                                  */ 01032000
*/*       VRBSIOTP - POINTER TO SIOT                                 */ 01033000
*/*                                                                  */ 01034000
*/*   EXITS -                                                        */ 01035000
*/*     CONDITION - SUCCESSFUL COMPLETION                            */ 01036000
*/*                                                                  */ 01037000
*/*     OUTPUT -                                                     */ 01038000
*/*       BUFFER CONTAINING GENERATED NUMBER                         */ 01039000
*/*       JFCB CONTAINING FF NUMBER                                  */ 01040000
*/*                                                                  */ 01041000
*/*     RETURN CODE - NONE                                           */ 01042000
*/*                                                                  */ 01043000
*/********************************************************************/ 01044000
*IF CNTENTRY =ZERO &                                            04S0262 01045000
*   TAPEREQ =ON THEN                   /*FIRST TIME FOR NON-SP TAPE  */ 01046000
         CR    CNTENTRY,@05                                     04S0262 01047000
         BNE   @RF00262                                         04S0262 01048000
         TM    TAPEREQ(RBPTR),B'10000000'                       04S0262 01049000
         BNO   @RF00262                                         04S0262 01050000
*  DO;                                 /*GENERATE FF VOL SERIAL      */ 01051000
*    GENSVA = VRBSIOTP -> SCTPJFCB;    /*JFCB SVA                    */ 01052000
         L     @06,VRBSIOTP(,RBPTR)                             04S0264 01053000
         MVC   GENSVA(3),SCTPJFCB(@06)                          04S0264 01054000
*    GENASID=ALCWASID;                 /*ASID TO SERIAL #            */ 01055000
         L     @15,@PC00001                                     04S0265 01056000
         L     @01,ALCWAPTR(,@15)                               04S0265 01057000
         MVC   GENASID(2),ALCWASID(@01)                         04S0265 01058000
*    SERPTR = ADDR(TAPEBUF);           /*POINT TO TAPE BUFFER        */ 01059000
         LA    SERPTR,TAPEBUF                                   04S0266 01060000
*    JFCBPTR = VRBSIOTP ->SJFCBPTR;                             04S0267 01061000
         L     JFCBPTR,SJFCBPTR(,@06)                           04S0267 01062000
*    JFCBVOLS(1:6) = TAPEBUF;          /*FF NUMBER TO JFCB           */ 01063000
         MVC   JFCBVOLS(6,JFCBPTR),TAPEBUF                      04S0268 01064000
*    JFCBNVOL =ONE;                    /*# OF SERIALS                */ 01065000
         MVI   JFCBNVOL(JFCBPTR),X'01'                          04S0269 01066000
*  END;                                                         04S0270 01067000
*ELSE                                                           04S0271 01068000
*  DO;                                                          04S0271 01069000
         B     @RC00262                                         04S0271 01070000
@RF00262 DS    0H                                               04S0272 01071000
*    NXTVOLID = NXTVOLID + ONE;        /*GENERATE DA SERIAL          */ 01072000
         LA    @07,1                                            04S0272 01073000
         L     @15,NXTVOLID                                     04S0272 01074000
         ALR   @15,@07                                          04S0272 01075000
         ST    @15,NXTVOLID                                     04S0272 01076000
*    SERPTR = ADDR(GENVOL);                                     04S0273 01077000
         LA    SERPTR,GENVOL                                    04S0273 01078000
*    I =ONE;                           /*REL. POSITION               */ 01079000
         LR    I,@07                                            04S0274 01080000
*  END;                                                         04S0275 01081000
*          I=ONE;                      /*INDEX INTO SERIAL LIST      */ 01082000
@RC00262 LA    I,1                                              03S0276 01083000
*        END;                                                   03S0277 01084000
*      ELSE                            /*NON SPECIFIC VOL REF        */ 01085000
*        DO;                           /*COPY VOLIDS FROM REF'ED SER */ 01086000
         B     @RC00260                                         03S0278 01087000
@RF00260 DS    0H                                               03S0279 01088000
*/********************************************************************/ 01089000
*/*                                                                  */ 01090000
*/* SEGMENT NAME - VLREFPRC                                          */ 01091000
*/*                                                                  */ 01092000
*/* DESCRIPTIVE NAME - PROCESS INTRA-STEP VOLUME REFERENCE TO A      */ 01093000
*/*   NON-SPECIFIC VOLUME REQUEST                                    */ 01094000
*/*                                                                  */ 01095000
*/* FUNCTION -                                                       */ 01096000
*/*   THE FUNCTION OF THIS SEGMENT IS TO SET UP COUNTERS FOR INITVOLN*/ 01097000
*/*   SO THAT THE CORRECT SERIAL NUMBERS ARE PLACED IN THE INPUT     */ 01098000
*/*   VOLUNIT ENTRY. THE INPUT VOLUNIT ENTRY IS KNOWN TO HAVE VOLUME */ 01099000
*/*   REFERENCE TO ANOTHER VOLUNIT ENTRY IN THE TABLE. IN ADDITION,  */ 01100000
*/*   THE REFERENCED VOLUNIT ENTRY IS FOR A NON-SPECIFIC REQUEST.    */ 01101000
*/*                                                                  */ 01102000
*/*   THE FOLLOWING FUNCTIONS ARE PERFORMED:                         */ 01103000
*/*                                                                  */ 01104000
*/*   1. SET THE POSITION OF THE VOLSER WITHIN THE VOLUME SERIAL LIST*/ 01105000
*/*      THIS FIELD IS AUTOMATICALLY SET TO ONE                      */ 01106000
*/*                                                                  */ 01107000
*/*   2. SET THE BASE FOR THE VOLUME SERIAL LIST                     */ 01108000
*/*      IF ALL THE VOLUME SERIALS HAVE BEEN COPIED FROM THE         */ 01109000
*/*      REFERENCED REQUEST, A NEW NON-SPECIFIC SERIAL IS GENERATED  */ 01110000
*/*      AND THE BASE FOR THE SERIAL LIST IS SET TO POINT TO THIS    */ 01111000
*/*      SERIAL. IF ALL THE SERIALS HAVE NOT YET BEEN COPIED FROM    */ 01112000
*/*      THE REFERENCED REQUEST THE FOLLOWING IS DONE:               */ 01113000
*/*        A FIELD (CNTENTRY) WHICH CONTAINS THE NUMBER OF THE       */ 01114000
*/*        VOLUNIT ENTRY BEING PROCESSED (RESET FOR EACH SIOT AND    */ 01115000
*/*        ZERO ORIGIN) IS PASSED AS INPUT. THE BASE FOR THE VOLUME  */ 01116000
*/*        SERIAL LIST IS SET TO -                                   */ 01117000
*/*          SVOLUNAD + LENGTH(VOLUNTAB) * CNTENTRY                  */ 01118000
*/*          WHERE:                                                  */ 01119000
*/*            SVOLUNAD = ADDR. OF THE FIRST VOLUNIT ENTRY FOR THE   */ 01120000
*/*              REFERENCED REQUEST.                                 */ 01121000
*/*            LENGTH(VOLUNTAB) = LENGTH OF ONE VOLUNIT ENTRY        */ 01122000
*/*   3. IF VOLUME REFERENCE TO A NON-SPECIFIC TAPE REQUEST, @YM03977*/ 01123000
*/*      A FF VOLSER IS GENERATED WITH THE SVA OF THE        @ZA08096*/ 01124000
*/*      REFERENCED REQUESTS JFCB.                           @ZA08096*/ 01125000
*/*                                                                  */ 01126000
*/* ENTRY - IN-LINE SEGMENT                                          */ 01127000
*/*                                                                  */ 01128000
*/*   PURPOSE - SEE FUNCTION                                         */ 01129000
*/*                                                                  */ 01130000
*/*   INPUT -                                                        */ 01131000
*/*     CNTENTRY - RELATIVE NUMBER OF THE VOLUNIT ENTRY BEING        */ 01132000
*/*       PROCESSED. RESET FOR EACH SIOT AND HAS ZERO ORIGIN.        */ 01133000
*/*                                                                  */ 01134000
*/*     RBPTR - ADDR. OF VRB                                         */ 01135000
*/*       VRB - VOLUNIT REQUEST BLOCK                                */ 01136000
*/*         VRBREFNO - DD NUMBER OF REFERENCED REQUEST               */ 01137000
*/*                                                                  */ 01138000
*/*     TRBPTR - ADDR. OF FIRST VRB                                  */ 01139000
*/*       VRB - VOLUNIT REQUEST BLOCK                                */ 01140000
*/*         VRBDDNUM - DD NUMBER OF VRB                              */ 01141000
*/*         VRBSIOTP - ADDR. OF ASSOCIATED SIOT                      */ 01142000
*/*                                                                  */ 01143000
*/*       SIOT -                                                     */ 01144000
*/*         SVOLUNNO - NUMBER OF VOLUNIT ENTRIES FOR THIS SIOT       */ 01145000
*/*         SVOLUNAD - ADDR. OF FIRST VOLUNIT ENTRY FOR THIS SIOT    */ 01146000
*/*                                                                  */ 01147000
*/*       VOLUNIT ENTRY -                                            */ 01148000
*/*         VOLID - VOLUME SERIAL ID                                 */ 01149000
*/*                                                                  */ 01150000
*/*       GENVOL - AREA FOR NON-SPECIFIC SERIALS                     */ 01151000
*/*         NXTVOLID - UNIQUE NUMBER FOR GENERATED SERIALS           */ 01152000
*/*                                                                  */ 01153000
*/* EXIT -                                                           */ 01154000
*/*                                                                  */ 01155000
*/*    CONDITION - PROCESSING COMPLETE                               */ 01156000
*/*                                                                  */ 01157000
*/*    OUTPUT -                                                      */ 01158000
*/*      NXTVOLID - SEE INPUT DATA                                   */ 01159000
*/*      SERPTR - BASE FOR VOLUME SERIAL LIST                        */ 01160000
*/*      I - POSITION OF THE VOLSER CURRENTRY BEING PROCESSED IN     */ 01161000
*/*         THE VOLUME SERIAL LIST.                                  */ 01162000
*/*                                                                  */ 01163000
*/*    RETURN CODE - NONE                                            */ 01164000
*/*                                                                  */ 01165000
*/********************************************************************/ 01166000
*SAVRBPTR = RBPTR;                     /*SAVE ORIGINAL VRB POINTER   */ 01167000
         LR    SAVRBPTR,RBPTR                                   04S0279 01168000
*RBPTR = TRBPTR;                       /*POINT TO TOP OF VRB CHAIN   */ 01169000
         L     RBPTR,TRBPTR                                     04S0280 01170000
*SAVVUPTR = VUPTR;                     /*SAVE ORIGINAL VOLUNIT PTR   */ 01171000
         LR    SAVVUPTR,VUPTR                                   04S0281 01172000
*DO WHILE(SAVRBPTR -> VRBREFNO ^= VRBDDNUM); /*FIND REF VRB          */ 01173000
         B     @DE00282                                         04S0282 01174000
@DL00282 DS    0H                                               04S0283 01175000
*  RBPTR = NXTVRB;                                              04S0283 01176000
         L     RBPTR,NXTVRB(,RBPTR)                             04S0283 01177000
*END;                                                           04S0284 01178000
@DE00282 CLC   VRBREFNO(2,SAVRBPTR),VRBDDNUM(RBPTR)             04S0284 01179000
         BNE   @DL00282                                         04S0284 01180000
*VUPTR = VRBSIOTP -> SVOLUNAD;         /*POINT TO REFS VOLUNIT       */ 01181000
         L     @05,VRBSIOTP(,RBPTR)                             04S0285 01182000
         L     VUPTR,SVOLUNAD(,@05)                             04S0285 01183000
*IF CNTENTRY >= VRBSIOTP ->SVOLUNNO THEN /*GENERATE NEW VOLID        */ 01184000
         CH    CNTENTRY,SVOLUNNO(,@05)                          04S0286 01185000
         BL    @RF00286                                         04S0286 01186000
*  DO;                                                          04S0287 01187000
*    NXTVOLID = NXTVOLID + ONE;        /*GENERATE NEW VOLID          */ 01188000
         LA    @10,1                                            04S0288 01189000
         L     @09,NXTVOLID                                     04S0288 01190000
         ALR   @09,@10                                          04S0288 01191000
         ST    @09,NXTVOLID                                     04S0288 01192000
*    SERPTR = ADDR(GENVOL);                                     04S0289 01193000
         LA    SERPTR,GENVOL                                    04S0289 01194000
*    I=ONE;                                                     04S0290 01195000
         LR    I,@10                                            04S0290 01196000
*  END;                                                         04S0291 01197000
*ELSE                                  /*GET PROPER VOLUNIT ENTRY    */ 01198000
*  DO;                                                          04S0292 01199000
         B     @RC00286                                         04S0292 01200000
@RF00286 DS    0H                                               04S0293 01201000
*    VUPTR = VUPTR +LENGTH(VOLUNTAB)*CNTENTRY; /* REFD VU ENTRY      */ 01202000
         LR    @07,CNTENTRY                                     04S0293 01203000
         MH    @07,@CH00673                                     04S0293 01204000
         ALR   VUPTR,@07                                        04S0293 01205000
*    SERPTR = VUPTR;                   /*REFD SERIAL                 */ 01206000
         LR    SERPTR,VUPTR                                     04S0294 01207000
*    I = ONE;                          /*SET FIRST SERIAL IN LIST    */ 01208000
         LA    I,1                                              04S0295 01209000
*    IF CNTENTRY = ZERO &                                       04S0296 01210000
*       VOLID(1) = TAPEGEND THEN       /*MUST PUT FF NUMBER IN  04S0296 01211000
*                                        JFCB                @YM03977*/ 01212000
         LTR   CNTENTRY,CNTENTRY                                04S0296 01213000
         BNZ   @RF00296                                         04S0296 01214000
         CLC   VOLID(1,VUPTR),TAPEGEND                          04S0296 01215000
         BNE   @RF00296                                         04S0296 01216000
*      DO;                                                      04S0297 01217000
*        JFCBPTR = SAVRBPTR->VRBSIOTP->SJFCBPTR; /*GET REF'ING JFCB     01218000
*                                                  PTR       @YM03977*/ 01219000
         L     @10,VRBSIOTP(,SAVRBPTR)                          04S0298 01220000
         L     JFCBPTR,SJFCBPTR(,@10)                           04S0298 01221000
*        GENSVA = VRBSIOTP -> SCTPJFCB; /*REFERENCED JFCB    @ZA08096*/ 01222000
         L     @10,VRBSIOTP(,RBPTR)                             04S0299 01223000
         MVC   GENSVA(3),SCTPJFCB(@10)                          04S0299 01224000
*        GENASID = ALCWASID;           /*ASID TO SERIAL #    @ZA08096*/ 01225000
         L     @10,@PC00001                                     04S0300 01226000
         L     @10,ALCWAPTR(,@10)                               04S0300 01227000
         MVC   GENASID(2),ALCWASID(@10)                         04S0300 01228000
*        JFCBVOLS(1:6) = TAPEBUF;      /*MOVE VOLSER TO JFCB @ZA08096*/ 01229000
         MVC   JFCBVOLS(6,JFCBPTR),TAPEBUF                      04S0301 01230000
*        JFCBNVOL = ONE;               /*INDICATE ONE VOL    @YM03977*/ 01231000
         MVI   JFCBNVOL(JFCBPTR),X'01'                          04S0302 01232000
*      END;                                                     04S0303 01233000
*    ELSE;                                                      04S0304 01234000
@RF00296 DS    0H                                               04S0305 01235000
*  END;                                                         04S0305 01236000
*RBPTR = SAVRBPTR;                                              04S0306 01237000
@RC00286 LR    RBPTR,SAVRBPTR                                   04S0306 01238000
*VUPTR = SAVVUPTR;                                              04S0307 01239000
         LR    VUPTR,SAVVUPTR                                   04S0307 01240000
*        END;                                                   03S0308 01241000
*    END;                                                       03S0309 01242000
*  ELSE                                /*STILL WORKING ON SPECIFIC VL*/ 01243000
*    SERCNTR= SERCNTR+ ONE;            /*BUMP NUMBER OF SERIALS      */ 01244000
         B     @RC00258                                         03S0310 01245000
@RF00258 LA    @07,1                                            03S0310 01246000
         AL    @07,SERCNTR                                      03S0310 01247000
         ST    @07,SERCNTR                                      03S0310 01248000
*  VOLID=SERIAL(I);                    /*SERIAL TO VOLUNIT ENTRY     */ 01249000
@RC00258 LR    @07,I                                            03S0311 01250000
         MH    @07,@CH00109                                     03S0311 01251000
         ALR   @07,SERPTR                                       03S0311 01252000
         AL    @07,@CF00772                                     03S0311 01253000
         MVC   VOLID(6,VUPTR),SERIAL(@07)                       03S0311 01254000
*  I=I+ONE;                            /*BUMP TO NEXT SERIAL IN LIST */ 01255000
         AH    I,@CH00065                                       03S0312 01256000
*  VOLSTAT = ZERO;                     /*ZERO VOLUNIT STATUS BITS    */ 01257000
         SLR   @07,@07                                          03S0313 01258000
         ST    @07,VOLSTAT(,VUPTR)                              03S0313 01259000
*  IF VRBAFFNO ^=ZERO THEN             /*UNIT=AFF SPECIFIED          */ 01260000
         CH    @07,VRBAFFNO(,RBPTR)                             03S0314 01261000
         BE    @RF00314                                         03S0314 01262000
*    DO;                               /*PROCESS UNIT AFFINITY       */ 01263000
*/********************************************************************/ 01264000
*/*                                                                  */ 01265000
*/* SEGMENT NAME - UNAFFPRC                                          */ 01266000
*/*                                                                  */ 01267000
*/* DESCRIPTIVE NAME - PROCESS UNIT AFFINITY                         */ 01268000
*/*                                                                  */ 01269000
*/* FUNCTION -                                                       */ 01270000
*/*   THE FUNCTION OF THIS SEGMENT IS TO COPY THE UNIT ID FROM THE   */ 01271000
*/*   REFERENCED REQUEST'S VOLUNIT ENTRY TO THE REFERENCING          */ 01272000
*/*   REQUEST'S VOLUNIT ENTRY. IN ADDITION BOTH THE REFERENCED       */ 01273000
*/*   REQUEST AND THE REFERENCING REQUEST ARE MARKED NON-SHARABLE.   */ 01274000
*/*   IF ALL UNIT ID'S HAVE BEEN COPIED FROM THE REFERENCED          */ 01275000
*/*   REQUEST AND MORE UNIT ID'S ARE NEEDED, THE UNIT ID OF THE      */ 01276000
*/*   REFERENCED REQUEST'S LAST VOLUNIT ENTRY IS USED.               */ 01277000
*/*   NOTE: FOR UNIT AFFINITY BETWEEN NON D.A., NON TAPE REQUESTS THE*/ 01278000
*/*         VOLIDS ARE COPIED MAKING IT APPEAR AS VOLUME AFFINITY.   */ 01279000
*/*                                                                  */ 01280000
*/*   OPERATION -                                                    */ 01281000
*/*     THE ALGORITHM USED TO DETERMINE WHICH VOLUNIT ENTRY TO       */ 01282000
*/*     RETRIEVE THE UNIT ID FROM IS AS FOLLOWS:                     */ 01283000
*/*                                                                  */ 01284000
*/*     A FIELD (CNTENTRY, SEE INPUT) IS RECIEVED AS INPUT. IT       */ 01285000
*/*     CONTAINS THE NUMBER OF THE VOLUNIT ENTRY BEING PROCESSED.    */ 01286000
*/*     THIS FIELD IS RESET FOR EACH SIOT AND HAS ZERO ORIGIN.       */ 01287000
*/*     IF CNTENTRY IS >= THE NUMBER OF VOLUNIT ENTRIES FOR THE      */ 01288000
*/*     REFERENCED REQUEST THIS MEANS WE HAVE COPIED ALL OF THE      */ 01289000
*/*     REFERENCED REQUEST'S VOLUNIT ENTRIES BUT WE STILL NEED MORE  */ 01290000
*/*     UNIT ID'S. THIS MEANS WE MUST COPY THE UNIT ID FROM THE      */ 01291000
*/*     REFERENCED REQUEST'S LAST VOLUNIT ENTRY. THE ADDRESS OF      */ 01292000
*/*     THE REFERENCED REQUEST'S LAST VOLUNIT ENTRY IS GIVEN BY:     */ 01293000
*/*       VUAD = VUPTR + (LENGTH(VOLUNTAB) * SVOLUNNO) -             */ 01294000
*/*         LENGTH(VOLUNTAB)                                         */ 01295000
*/*       WHERE :                                                    */ 01296000
*/*         VUPTR = ADDRESS OF THE REFERENCED REQUEST'S FIRST        */ 01297000
*/*           VOLUNIT ENTRY                                          */ 01298000
*/*         LENGTH(VOLUNTAB) = LENGTH OF A VOLUNIT ENTRY             */ 01299000
*/*         SVOLUNNO = NUMBER OF VOLUNIT ENTRIES FOR THE REFERENCING */ 01300000
*/*           REQUEST                                                */ 01301000
*/*                                                                  */ 01302000
*/* ENTRY - IN-LINE SEGMENT                                          */ 01303000
*/*                                                                  */ 01304000
*/*   PURPOSE - SEE FUNCTION                                         */ 01305000
*/*                                                                  */ 01306000
*/*   INPUT -                                                        */ 01307000
*/*     TRBPTR - PTR. TO FIRST VRB                                   */ 01308000
*/*                                                                  */ 01309000
*/*     VRB -                                                        */ 01310000
*/*       VRBSIOTP - PTR. TO ASSOCIATED SIOT                         */ 01311000
*/*       NXTVRB - PTR. TO NEXT VRB                                  */ 01312000
*/*                                                                  */ 01313000
*/*     SIOT -                                                       */ 01314000
*/*       SVOLUNNO - NUMBER OF VOLUNIT ENTRIES FOR THIS SIOT         */ 01315000
*/*       SVOLUNAD - PTR. TO FIRST VOLUNIT ENTRY FOR THIS SIOT       */ 01316000
*/*                                                                  */ 01317000
*/*     VOLUNIT ENTRY -                                              */ 01318000
*/*       VOLUNTID - UNIT ID                                         */ 01319000
*/*       VDEVREQD - TIOT DEVICE ENTRY REQUIRED BIT                  */ 01320000
*/*                                                                  */ 01321000
*/*     CNTENTRY - RELATIVE NUMBER OF THE VOLUNIT ENTRY BEING        */ 01322000
*/*       PROCESSED. RESET FOR EACH SIOT AND HAS ZERO ORIGIN.        */ 01323000
*/*                                                                  */ 01324000
*/* EXITS -                                                          */ 01325000
*/*                                                                  */ 01326000
*/*   CONDITION - SUCCESSFUL COMPLETION                              */ 01327000
*/*                                                                  */ 01328000
*/*   OUTPUT -                                                       */ 01329000
*/*     VOLUNIT ENTRY -                                              */ 01330000
*/*       VOLUNTID - UNIT ID                                         */ 01331000
*/*       VDEVREQD - TIOT DEVICE ENTRY REQUIRED                      */ 01332000
*/*       VOLNSHR - NON-SHARABLE BIT                                 */ 01333000
*/*                                                                  */ 01334000
*/*   RETURN CODE - NONE                                             */ 01335000
*/*                                                                  */ 01336000
*/********************************************************************/ 01337000
*SAVRBPTR=RBPTR;                       /*SAVE ORIGNAL VRB POINTER    */ 01338000
         LR    SAVRBPTR,RBPTR                                   04S0316 01339000
*RBPTR=TRBPTR;                         /*POINT TO TOP OF VRB CHAIN   */ 01340000
         L     RBPTR,TRBPTR                                     04S0317 01341000
*SAVVUPTR=VUPTR;                       /*SAVE INPUT VOLUNIT PTR      */ 01342000
         LR    SAVVUPTR,VUPTR                                   04S0318 01343000
*DO WHILE(SAVRBPTR ->VRBAFFNO ^=VRBDDNUM); /*FIND AFF VRB            */ 01344000
         B     @DE00319                                         04S0319 01345000
@DL00319 DS    0H                                               04S0320 01346000
*  RBPTR =NXTVRB;                                               04S0320 01347000
         L     RBPTR,NXTVRB(,RBPTR)                             04S0320 01348000
*END;                                                           04S0321 01349000
@DE00319 CLC   VRBAFFNO(2,SAVRBPTR),VRBDDNUM(RBPTR)             04S0321 01350000
         BNE   @DL00319                                         04S0321 01351000
*VUPTR= VRBSIOTP ->SVOLUNAD;           /*POINT TO REFD SIOTS FIRST      01352000
*                                        VOLUNIT ENTRY               */ 01353000
         L     @07,VRBSIOTP(,RBPTR)                             04S0322 01354000
         L     VUPTR,SVOLUNAD(,@07)                             04S0322 01355000
*IF CNTENTRY >=VRBSIOTP ->SVOLUNNO THEN /*ALL OF REFERENCED VU  04S0323 01356000
*                                         ENTRIES HAVE BEEN COPIED   */ 01357000
         LH    @07,SVOLUNNO(,@07)                               04S0323 01358000
         CR    CNTENTRY,@07                                     04S0323 01359000
         BL    @RF00323                                         04S0323 01360000
*  VUPTR=VUPTR+(LENGTH(VOLUNTAB)*VRBSIOTP ->SVOLUNNO) -         04S0324 01361000
*           LENGTH(VOLUNTAB);          /*REFERENCED REQUEST LAST VU     01362000
*                                        ENTRY                       */ 01363000
         LA    @15,28                                           04S0324 01364000
         LR    @01,@07                                          04S0324 01365000
         MR    @00,@15                                          04S0324 01366000
         ALR   @01,VUPTR                                        04S0324 01367000
         SLR   @01,@15                                          04S0324 01368000
         LR    VUPTR,@01                                        04S0324 01369000
*ELSE                                  /*GET PROPER ENTRY FOR UNITID */ 01370000
*  DO;                                                          04S0325 01371000
         B     @RC00323                                         04S0325 01372000
@RF00323 DS    0H                                               04S0326 01373000
*    VUPTR=VUPTR+LENGTH(VOLUNTAB)*CNTENTRY;                     04S0326 01374000
         LR    @07,CNTENTRY                                     04S0326 01375000
         MH    @07,@CH00673                                     04S0326 01376000
         ALR   VUPTR,@07                                        04S0326 01377000
*    IF VDEVREQD = ON THEN             /*PRIMARY REQUIRES DEVICE?    */ 01378000
         TM    VDEVREQD(VUPTR),B'00100000'                      04S0327 01379000
         BNO   @RF00327                                         04S0327 01380000
*      SAVVUPTR -> VDEVREQD = ON;      /*YES SET IN SECONDARY        */ 01381000
         OI    VDEVREQD(SAVVUPTR),B'00100000'                   04S0328 01382000
*  END;                                                         04S0329 01383000
@RF00327 DS    0H                                               04S0330 01384000
*IF VRBSIOTP->SIO3DACC = OFF &         /*NON DA OR TAPE UNIT=AFF     */ 01385000
*   VRBSIOTP->SIO3TAPE=OFF THEN        /*MAKE IT VOLUME AFFINITY     */ 01386000
@RC00323 L     @07,VRBSIOTP(,RBPTR)                             04S0330 01387000
         TM    SIO3DACC(@07),B'10100000'                        04S0330 01388000
         BNZ   @RF00330                                         04S0330 01389000
*     SAVVUPTR->VOLID=VOLID;                                    04S0331 01390000
         MVC   VOLID(6,SAVVUPTR),VOLID(VUPTR)                   04S0331 01391000
*SAVVUPTR -> VOLUNTID = VOLUNTID;      /* SET UNITID                 */ 01392000
@RF00330 MVC   VOLUNTID(2,SAVVUPTR),VOLUNTID(VUPTR)             04S0332 01393000
*SAVVUPTR->VOLNSHR = ON;                                        04S0333 01394000
         OI    VOLNSHR(SAVVUPTR),B'00001000'                    04S0333 01395000
*VOLNSHR = ON;                                                  04S0334 01396000
         OI    VOLNSHR(VUPTR),B'00001000'                       04S0334 01397000
*RBPTR=SAVRBPTR;                                                04S0335 01398000
         LR    RBPTR,SAVRBPTR                                   04S0335 01399000
*VUPTR=SAVVUPTR;                                                04S0336 01400000
         LR    VUPTR,SAVVUPTR                                   04S0336 01401000
*    END;                                                       03S0337 01402000
*  ELSE                                /*NO AFFINITY                 */ 01403000
*      IF CNTUNID <  VRBUNCNT THEN     /*MORE UNITIDS NEEDED BECAUSE    01404000
*                                        UNIT COUNT NOT YET REACHED  */ 01405000
         B     @RC00314                                         03S0338 01406000
@RF00314 L     @07,CNTUNID                                      03S0338 01407000
         SLR   @15,@15                                          03S0338 01408000
         IC    @15,VRBUNCNT(,RBPTR)                             03S0338 01409000
         CR    @07,@15                                          03S0338 01410000
         BNL   @RF00338                                         03S0338 01411000
*        DO;                                                    03S0339 01412000
*          CNTUNID=CNTUNID+ONE;        /*BUMP UNIT ID CNTR FOR THIS     01413000
*                                        SIOT                        */ 01414000
         LA    @15,1                                            03S0340 01415000
         ALR   @07,@15                                          03S0340 01416000
         ST    @07,CNTUNID                                      03S0340 01417000
*          LTUNITID=LTUNITID+ONE;      /*BUMP NEXT UNIT ID TO USE    */ 01418000
         L     @07,@PC00001                                     03S0341 01419000
         L     @07,ALCWAPTR(,@07)                               03S0341 01420000
         AH    @15,LTUNITID(,@07)                               03S0341 01421000
         STH   @15,LTUNITID(,@07)                               03S0341 01422000
*          VOLUNTID = LTUNITID;        /*UNIT ID TO VOLUNIT IN ALCWA */ 01423000
         STH   @15,VOLUNTID(,VUPTR)                             03S0342 01424000
*          VDEVREQD = ON;              /*DEVICE REQ'D                */ 01425000
         OI    VDEVREQD(VUPTR),B'00100000'                      03S0343 01426000
*          IF DEFERMT=OFF THEN         /*DEFER MNTING NOT SPECIFIED  */ 01427000
         TM    DEFERMT(RBPTR),B'00001000'                       03S0344 01428000
         BNZ   @RF00344                                         03S0344 01429000
*            VOLMNTD = ON;             /*VOLUME MUST BE MOUNTED      */ 01430000
         OI    VOLMNTD(VUPTR),B'01000000'                       03S0345 01431000
*          ELSE                        /*DEFER MOUNTING SPECIFIED    */ 01432000
*            DO;                                                03S0346 01433000
         B     @RC00344                                         03S0346 01434000
@RF00344 DS    0H                                               03S0347 01435000
*              VOLDEFER = ON;          /*DEFER MNT. IN VOLUNIT       */ 01436000
*              VOLNSHR = ON;           /*MAKE NON-SHAREABLE          */ 01437000
         OI    VOLDEFER(VUPTR),B'00001001'                      03S0348 01438000
*            END;                                               03S0349 01439000
*        END;                                                   03S0350 01440000
*      ELSE                            /*UNIT COUNT REACHED          */ 01441000
*        DO;                           /*ALL OTHER VOLS ON SAME UNIT */ 01442000
         B     @RC00338                                         03S0351 01443000
@RF00338 DS    0H                                               03S0352 01444000
*          VOLNSHR = ON;               /*NON-SHARAABLE               */ 01445000
         OI    VOLNSHR(VUPTR),B'00001000'                       03S0352 01446000
*          TPTR = VUPTR-LENGTH(VOLUNTAB);/*PREVIOUS VOLUNIT ENTRY    */ 01447000
         LR    TPTR,VUPTR                                       03S0353 01448000
         SH    TPTR,@CH00673                                    03S0353 01449000
*          TPTR->VOLNSHR=ON;           /*SET NON-SHARABLE            */ 01450000
         OI    VOLNSHR(TPTR),B'00001000'                        03S0354 01451000
*          VOLUNTID = LTUNITID;        /*USE SAME UNIT ID AS PREVIOUS*/ 01452000
         L     @07,@PC00001                                     03S0355 01453000
         L     @07,ALCWAPTR(,@07)                               03S0355 01454000
         MVC   VOLUNTID(2,VUPTR),LTUNITID(@07)                  03S0355 01455000
*          IF DEFERMT=ON THEN          /*DEFER MOUNTING REQUESTED    */ 01456000
         TM    DEFERMT(RBPTR),B'00001000'                       03S0356 01457000
         BNO   @RF00356                                         03S0356 01458000
*            VOLDEFER=ON;              /*SET DEFER IN VU ENTRY       */ 01459000
         OI    VOLDEFER(VUPTR),B'00000001'                      03S0357 01460000
*        END;                                                   03S0358 01461000
@RF00356 DS    0H                                               03S0359 01462000
*  CNTENTRY=CNTENTRY+ONE;              /*BUMP CNTR OF VOLUNIT ENTRYS */ 01463000
@RC00338 DS    0H                                               03S0359 01464000
@RC00314 AH    CNTENTRY,@CH00065                                03S0359 01465000
*  VOLSIOTP=VRBSIOTP;                  /*SIOT PTR TO VOLUNIT TABLE   */ 01466000
         MVC   VOLSIOTP(4,VUPTR),VRBSIOTP(RBPTR)                03S0360 01467000
*/********************************************************************/ 01468000
*/*                                                                  */ 01469000
*/* SEGMENT NAME - SETVLBIT                                          */ 01470000
*/*                                                                  */ 01471000
*/* DESCRIPTIVE NAME - SET VOLUNIT ENTRY BITS                        */ 01472000
*/*                                                                  */ 01473000
*/* FUNCTION -                                                       */ 01474000
*/*   THE FUNCTION OF THIS SEGMENT IS TO SET STATUS BITS IN A GIVEN  */ 01475000
*/*   VOLUNIT TABLE ENTRY.                                           */ 01476000
*/*                                                                  */ 01477000
*/*   THE FOLLOWING BITS ARE SET:                                    */ 01478000
*/*                                                                  */ 01479000
*/*   . FOR DIRECT ACCESS REQUESTS -                                 */ 01480000
*/*      DIRECT ACCESS BIT SET ON                                    */ 01481000
*/*      FOR NON-SPECIFIC REQUEST WHEN DISP = DELETE, SET PUBLIC     */ 01482000
*/*        BIT ON UNLESS PRIVATE WAS SPECIFIED                       */ 01483000
*/*      FOR NON-SPECIFIC REQUEST WHEN DISP ^= DELETE, SET STORAGE   */ 01484000
*/*        BIT ON UNLESS PRIVATE WAS SPECIFIED                       */ 01485000
*/*      FOR SPECIFIC REQUEST SET SPECIFIC BIT ON                    */ 01486000
*/*      IF THIS IS THE FIRST VOLUNIT ENTRY FOR THE REQUEST AND      */ 01487000
*/*        DISP = NEW WAS SPECIFIED SET THE DADSM REQUIRED BIT ON    */ 01488000
*/*      IF PRIVATE WAS SPECIFIED, SET THE PRIVATE BIT ON.           */ 01489000
*/*                                                                  */ 01490000
*/*   . FOR A COMMUNICATIONS REQUEST                                 */ 01491000
*/*       SET THE COMMUNICATION REQUEST BIT ON                       */ 01492000
*/*                                                                  */ 01493000
*/*   . FOR A TAPE REQUEST                                           */ 01494000
*/*       TAPE BIT SET ON, PRIVATE BIT OR PUBLIC BIT SET ON          */ 01495000
*/*                                                                  */ 01496000
*/*   . FOR A UNIT RECORD REQUEST                                    */ 01497000
*/*       UNIT RECORD BIT SET ON                                     */ 01498000
*/*                                                                  */ 01499000
*/*   . FOR A GRAPHIC REQUEST                                        */ 01500000
*/*       GRAPHIC BIT SET ON                                         */ 01501000
*/*                                                                  */ 01502000
*/* ENTRY - IN-LINE SEGMENT                                          */ 01503000
*/*   PURPOSE - SEE FUNCTION                                         */ 01504000
*/*                                                                  */ 01505000
*/*   INPUT -                                                        */ 01506000
*/*     VRB (VOLUNIT REQUEST BLOCK)                                  */ 01507000
*/*                                                                  */ 01508000
*/*     VOLUNIT TABLE ENTRY                                          */ 01509000
*/*       VOLID - VOLUME SERIAL ID                                   */ 01510000
*/*                                                                  */ 01511000
*/*     CNTENTRY - IF 1, MEANS FIRST VOLUNIT ENTRY FOR REQUEST       */ 01512000
*/*                                                                  */ 01513000
*/* EXIT -                                                           */ 01514000
*/*   CONDITION - VOLUNIT BITS SET                                   */ 01515000
*/*                                                                  */ 01516000
*/*   OUTPUT -                                                       */ 01517000
*/*     VOLUNIT ENTRY -                                              */ 01518000
*/*       VOLPUB - IF ON, PUBLIC REQUEST                             */ 01519000
*/*       VOLSTG - IF ON, STORAGE REQUEST                            */ 01520000
*/*       VOLPRV - IF ON, PRIVATE REQUEST                            */ 01521000
*/*       VOLSPEC - IF ON, SPECIFIC REQUEST                          */ 01522000
*/*       VOLCOREQ - IF ON, COMMUNICATION REQUEST                    */ 01523000
*/*       VOLDAREQ - IF ON, DIRECT ACCESS REQUEST                    */ 01524000
*/*       VUDADSM - IF ON, DADSM REQUIRED                            */ 01525000
*/*       VOLTAREQ - IF ON, TAPE REQUEST                             */ 01526000
*/*       VOLURREQ - IF ON, UNIT RECORD REQUEST                      */ 01527000
*/*       VOLGRREQ - IF ON, GRAPHIC REQUEST                          */ 01528000
*/*                                                                  */ 01529000
*/*   RETURN CODE - NONE                                             */ 01530000
*/*                                                                  */ 01531000
*/********************************************************************/ 01532000
*IF DAREQ=ON THEN                     /*DIRECT ACCESS                */ 01533000
         TM    DAREQ(RBPTR),B'00010000'                         04S0361 01534000
         BNO   @RF00361                                         04S0361 01535000
*  DO;                                                          04S0362 01536000
*    VOLDAREQ=ON;                                               04S0363 01537000
         OI    VOLDAREQ(VUPTR),B'00100000'                      04S0363 01538000
*    IF  VOLID(1)=DASCR |             /*NON SPECIFIC                 */ 01539000
*        VOLID(1)=TAPEGEND THEN                                 04S0364 01540000
         CLI   VOLID(VUPTR),X'FE'                               04S0364 01541000
         BE    @RT00364                                         04S0364 01542000
         CLC   VOLID(1,VUPTR),TAPEGEND                          04S0364 01543000
         BNE   @RF00364                                         04S0364 01544000
@RT00364 DS    0H                                               04S0365 01545000
*      DO;                                                      04S0365 01546000
*        IF DISPDELT=ON THEN          /*PUBLIC REQUEST               */ 01547000
         TM    DISPDELT(RBPTR),B'00010000'                      04S0366 01548000
         BNO   @RF00366                                         04S0366 01549000
*          VOLPUB=ON;                                           04S0367 01550000
         OI    VOLPUB(VUPTR),B'10000000'                        04S0367 01551000
*        ELSE                         /*STORAGE REQUEST              */ 01552000
*          VOLSTG=ON;                                           04S0368 01553000
         B     @RC00366                                         04S0368 01554000
@RF00366 OI    VOLSTG(VUPTR),B'00010000'                        04S0368 01555000
*      END;                                                     04S0369 01556000
*    ELSE                             /*SPECIFIC REQUEST             */ 01557000
*      VOLSPEC=ON;                                              04S0370 01558000
         B     @RC00364                                         04S0370 01559000
@RF00364 OI    VOLSPEC(VUPTR),B'00100000'                       04S0370 01560000
*    IF CNTENTRY=ONE THEN             /*FIRST ENTRY FOR THIS REQ     */ 01561000
@RC00364 CH    CNTENTRY,@CH00065                                04S0371 01562000
         BNE   @RF00371                                         04S0371 01563000
*      DO;                                                      04S0372 01564000
*        IF DISPNEW=ON THEN           /*NEW DATA SET                 */ 01565000
         TM    DISPNEW(RBPTR),B'00000100'                       04S0373 01566000
         BNO   @RF00373                                         04S0373 01567000
*          VUDADSM=ON;                                          04S0374 01568000
         OI    VUDADSM(VUPTR),B'00000010'                       04S0374 01569000
*      END;                                                     04S0375 01570000
*    ELSE;                                                      04S0376 01571000
@RF00371 DS    0H                                               04S0377 01572000
*    IF PRIVATER=ON THEN              /*PRIVATE REQUEST              */ 01573000
@RC00371 TM    PRIVATER(RBPTR),B'00100000'                      04S0377 01574000
         BNO   @RF00377                                         04S0377 01575000
*      DO;                                                      04S0378 01576000
*        VOLPRV=ON;                                             04S0379 01577000
*        VOLPUB=OFF;                                            04S0380 01578000
*        VOLSTG=OFF;                                            04S0381 01579000
         OI    VOLPRV(VUPTR),B'01000000'                        04S0381 01580000
         NI    VOLPUB(VUPTR),B'01101111'                        04S0381 01581000
*      END;                                                     04S0382 01582000
*    ELSE;                                                      04S0383 01583000
@RF00377 DS    0H                                               04S0384 01584000
*  END;                                                         04S0384 01585000
*ELSE;                                                          04S0385 01586000
@RF00361 DS    0H                                               04S0386 01587000
*  IF COMMREQ = ON THEN                /*COMMUNICATION DEVICE        */ 01588000
         TM    COMMREQ(RBPTR),B'01000000'                       04S0386 01589000
         BNO   @RF00386                                         04S0386 01590000
*    VOLCOREQ = ON;                    /*COMMUNICATION BIT ON        */ 01591000
         OI    VOLCOREQ(VUPTR),B'01000000'                      04S0387 01592000
*  IF TAPEREQ = ON THEN                /*TAPE ELIGIBILITY            */ 01593000
@RF00386 TM    TAPEREQ(RBPTR),B'10000000'                       04S0388 01594000
         BNO   @RF00388                                         04S0388 01595000
*    DO;                                                        04S0389 01596000
*      VOLTAREQ=ON;                    /*TAPE ON IN VUENTRY          */ 01597000
         OI    VOLTAREQ(VUPTR),B'10000000'                      04S0390 01598000
*      IF PRIVATER = ON THEN           /*PRIVATE REQUEST             */ 01599000
         TM    PRIVATER(RBPTR),B'00100000'                      04S0391 01600000
         BNO   @RF00391                                         04S0391 01601000
*        VOLPRV = ON;                  /*PRIVATE IN VUENTRY          */ 01602000
         OI    VOLPRV(VUPTR),B'01000000'                        04S0392 01603000
*      ELSE                                                     04S0393 01604000
*        VOLPUB=ON;                    /*PUBLIC IN VUENTRY           */ 01605000
         B     @RC00391                                         04S0393 01606000
@RF00391 OI    VOLPUB(VUPTR),B'10000000'                        04S0393 01607000
*      IF VOLID(1)^=TAPEGEND                                    04S0394 01608000
*        & VOLID(1)^=DASCR THEN        /*SPECIFIC REQUEST            */ 01609000
@RC00391 CLC   VOLID(1,VUPTR),TAPEGEND                          04S0394 01610000
         BE    @RF00394                                         04S0394 01611000
         CLI   VOLID(VUPTR),X'FE'                               04S0394 01612000
         BE    @RF00394                                         04S0394 01613000
*          VOLSPEC = ON;                                        04S0395 01614000
         OI    VOLSPEC(VUPTR),B'00100000'                       04S0395 01615000
*    END;                                                       04S0396 01616000
@RF00394 DS    0H                                               04S0397 01617000
*  IF URECREQ = ON THEN                /*UNIT RECORD                 */ 01618000
@RF00388 TM    URECREQ(RBPTR),B'00001000'                       04S0397 01619000
         BNO   @RF00397                                         04S0397 01620000
*    VOLURREQ = ON;                    /*UNIT RECORD IN VUENTRY      */ 01621000
         OI    VOLURREQ(VUPTR),B'00001000'                      04S0398 01622000
*  IF GRAPHREQ = ON THEN               /*SET GRAPHICS                */ 01623000
@RF00397 TM    GRAPHREQ(RBPTR),B'00100000'                      04S0399 01624000
         BNO   @RF00399                                         04S0399 01625000
*    VOLGRREQ = ON;                                             04S0400 01626000
         OI    VOLGRREQ(VUPTR),B'00010000'                      04S0400 01627000
*  IF SERCNTR=SERCTRL THEN             /*REACHED END OF SERIAL LIST  */ 01628000
@RF00399 C     SERCTRL,SERCNTR                                  03S0401 01629000
         BNE   @RF00401                                         03S0401 01630000
*    DO;                               /*GET A JFCBX                 */ 01631000
*      IF SERCTRL=FIVE THEN            /*END OF JFCB SERIALS         */ 01632000
         CH    SERCTRL,@CH00135                                 03S0403 01633000
         BNE   @RF00403                                         03S0403 01634000
*        JFXPTR=VRBJXPTR;              /*BASE OF JFCBX               */ 01635000
         MVC   JFXPTR(4),VRBJXPTR(RBPTR)                        03S0404 01636000
*      ELSE                            /*END OF JFCBX SERIALS        */ 01637000
*        JFXPTR=JFCBXNXT;              /*BASE OF NEXT JFCBX          */ 01638000
         B     @RC00403                                         03S0405 01639000
@RF00403 L     @05,JFXPTR                                       03S0405 01640000
         L     @05,JFCBXNXT(,@05)                               03S0405 01641000
         ST    @05,JFXPTR                                       03S0405 01642000
*      SERCTRL = SERCTRL+ FIFTEEN;     /*ACCOUNT FOR JFCBX SERIALS   */ 01643000
@RC00403 AH    SERCTRL,@CH00038                                 03S0406 01644000
*      SERPTR = ADDR(JFCBXVOL);        /*JFCBX SERRORS               */ 01645000
         L     SERPTR,JFXPTR                                    03S0407 01646000
         LA    SERPTR,JFCBXVOL(,SERPTR)                         03S0407 01647000
*      I=ONE;                          /*INDEX BACK TO ONE           */ 01648000
         LA    I,1                                              03S0408 01649000
*    END;                                                       03S0409 01650000
*  ELSE;                                                        03S0410 01651000
@RF00401 DS    0H                                               03S0411 01652000
*  VUPTR=VUPTR+LENGTH(VOLUNTAB);       /*NEXT VOLUNIT ENTRY          */ 01653000
         AH    VUPTR,@CH00673                                   03S0411 01654000
*END;                                                           03S0412 01655000
@DE00257 L     @07,VRBSIOTP(,RBPTR)                             03S0412 01656000
         CH    CNTENTRY,SVOLUNNO(,@07)                          03S0412 01657000
         BL    @DL00257                                         03S0412 01658000
*           RBPTR=NXTVRB;                                       02S0413 01659000
         L     RBPTR,NXTVRB(,RBPTR)                             02S0413 01660000
*         END;                                                  02S0414 01661000
@DE00219 LTR   RBPTR,RBPTR                                      02S0414 01662000
         BNZ   @DL00219                                         02S0414 01663000
*         CALL IEFAB426(ALCWAPTR);     /*AFFINITY PROCESSING         */ 01664000
         L     @10,@PC00001                                     02S0415 01665000
         ST    @10,@AL00001                                     02S0415 01666000
         L     @15,@CV00100                                     02S0415 01667000
         LA    @01,@AL00001                                     02S0415 01668000
         BALR  @14,@15                                          02S0415 01669000
*         ERRORWD = REG15;                                      02S0416 01670000
         LR    ERRORWD,REG15                                    02S0416 01671000
*       END;                                                    02S0417 01672000
*     ELSE                                                      02S0418 01673000
*       DO;                                                     02S0418 01674000
         B     @RC00211                                         02S0418 01675000
@RF00211 DS    0H                                               02S0419 01676000
*         ERRORWD = REG15;             /*GETMAIN ERROR               */ 01677000
         LR    ERRORWD,REG15                                    02S0419 01678000
*         STEPRSNC = GETMAIN;          /*SET GETMAIN ERROR           */ 01679000
         L     @10,@PC00001                                     02S0420 01680000
         L     @10,ALCWAPTR(,@10)                               02S0420 01681000
         L     @10,FAILRSCP(,@10)                               02S0420 01682000
         MVC   STEPRSNC(2,@10),@CH00063                         02S0420 01683000
*       END;                                                    02S0421 01684000
*    END;                                                       02S0422 01685000
*ELSE;                                                          02S0423 01686000
@RF00185 DS    0H                                               02S0424 01687000
*      IF ERRORWD=ZERO THEN            /*NO ERROR                    */ 01688000
@RC00185 LTR   ERRORWD,ERRORWD                                  01S0424 01689000
         BNZ   @RF00424                                         01S0424 01690000
*        DO;                                                    01S0425 01691000
*          CALL IEFAB424(ALCWAPTR);    /*BUILD EDLS                  */ 01692000
         L     @10,@PC00001                                     01S0426 01693000
         ST    @10,@AL00001                                     01S0426 01694000
         L     @15,@CV00099                                     01S0426 01695000
         LA    @01,@AL00001                                     01S0426 01696000
         BALR  @14,@15                                          01S0426 01697000
*          ERRORWD=REG15;              /*SAVE RETURN CODE            */ 01698000
         LR    ERRORWD,REG15                                    01S0427 01699000
*        END;                                                   01S0428 01700000
*      END;                                                     01S0429 01701000
*    ELSE;                                                      01S0430 01702000
@RF00147 DS    0H                                               01S0431 01703000
*    RFY (REG0,REG1) RSTD;                                      01S0431 01704000
@RC00147 DS    0H                                               01S0432 01705000
*    REG0=GLENGTH;                                              01S0432 01706000
         L     REG0,GLENGTH                                     01S0432 01707000
*    REG0 = REG0 | SUBPL230;           /*FREE FROM SUBPOOL 230       */ 01708000
         O     REG0,@CF00091                                    01S0433 01709000
*    REG1=TRBPTR;                                               01S0434 01710000
         L     REG1,TRBPTR                                      01S0434 01711000
*    GEN (FREEMAIN R,LV=(0),A=(1));    /*FREE VOLUNIT REQUEST BLOCKS */ 01712000
         FREEMAIN R,LV=(0),A=(1)                                        01713000
*    RFY (REG0,REG1) UNRSTD;                                    01S0436 01714000
*  END;                                                         01S0437 01715000
*ELSE                                  /*ELSE FOR GETMAIN ERROR      */ 01716000
*  STEPRSNC = GETMAIN;                 /*SET ERROR REASON CODE       */ 01717000
         B     @RC00062                                         01S0438 01718000
@RF00062 L     @10,@PC00001                                     01S0438 01719000
         L     @10,ALCWAPTR(,@10)                               01S0438 01720000
         L     @10,FAILRSCP(,@10)                               01S0438 01721000
         MVC   STEPRSNC(2,@10),@CH00063                         01S0438 01722000
*RETURN CODE(ERRORWD);                 /*RETURN TO CALLER            */ 01723000
@RC00062 IC    @02,@OLDKEY                                      01S0439 01724000
         L     @13,4(,@13)                                      01S0439 01725000
         L     @00,@SIZDATD                                     01S0439 01726000
         LR    @01,@11                                          01S0439 01727000
         FSPACE   R,LV=(0),A=(1)                                        01728000
         MODESET KEYADDR=(2)                                            01729000
         LR    @15,@03                                          01S0439 01730000
         L     @14,12(,@13)                                     01S0439 01731000
         LM    @00,@12,20(@13)                                  01S0439 01732000
         BR    @14                                              01S0439 01733000
*END IEFAB423                                                   01S0440 01734000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01735000
*/*%INCLUDE SYSLIB  (A423SPEC)                                        * 01736000
*/*%INCLUDE SYSLIB  (A423DATA)                                        * 01737000
*/*%INCLUDE SYSLIB  (BLDVDATA)                                        * 01738000
*/*%INCLUDE SYSLIB  (INITDATA)                                        * 01739000
*/*%INCLUDE SYSLIB  (GENSDATA)                                        * 01740000
*/*%INCLUDE SYSLIB  (SETVDATA)                                        * 01741000
*/*%INCLUDE SYSLIB  (VLSEDATA)                                        * 01742000
*/*%INCLUDE SYSLIB  (IEFZB423)                                        * 01743000
*/*%INCLUDE SYSLIB  (BVOLDATA)                                        * 01744000
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        * 01745000
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                        * 01746000
*/*%INCLUDE SYSLIB  (IEFJFCBX)                                        * 01747000
*/*%INCLUDE SYSLIB  (IEFZB425)                                        * 01748000
*/*%INCLUDE SYSLIB  (BVOLUNRB)                                        * 01749000
*/*%INCLUDE SYSLIB  (BVOLSPEC)                                        * 01750000
*/*%INCLUDE SYSLIB  (BLDVOLUN)                                        * 01751000
*/*%INCLUDE SYSLIB  (BLDVSPEC)                                        * 01752000
*/*%INCLUDE SYSLIB  (INITVOLN)                                        * 01753000
*/*%INCLUDE SYSLIB  (INITSPEC)                                        * 01754000
*/*%INCLUDE SYSLIB  (VLSEQPRC)                                        * 01755000
*/*%INCLUDE SYSLIB  (VLSESPEC)                                        * 01756000
*/*%INCLUDE SYSLIB  (GENSERS )                                        * 01757000
*/*%INCLUDE SYSLIB  (GENSPEC )                                        * 01758000
*/*%INCLUDE SYSLIB  (VLREFPRC)                                        * 01759000
*/*%INCLUDE SYSLIB  (VLRESPEC)                                        * 01760000
*/*%INCLUDE SYSLIB  (UNAFFPRC)                                        * 01761000
*/*%INCLUDE SYSLIB  (UNAFSPEC)                                        * 01762000
*/*%INCLUDE SYSLIB  (SETVLBIT)                                        * 01763000
*/*%INCLUDE SYSLIB  (SETVSPEC)                                        * 01764000
*;                                                              01S0440 01765000
@DATA    DS    0H                                                       01766000
@CH00096 DC    H'0'                                                     01767000
@CH00065 DC    H'1'                                                     01768000
@CH00063 DC    H'2'                                                     01769000
@CH00135 DC    H'5'                                                     01770000
@CH00109 DC    H'6'                                                     01771000
@CH00094 DC    H'9'                                                     01772000
@CH00125 DC    H'11'                                                    01773000
@CH00038 DC    H'15'                                                    01774000
@CH00673 DC    H'28'                                                    01775000
@DATD    DSECT                                                          01776000
         DS    0F                                                       01777000
@SA00001 DS    18F                                                      01778000
@PC00001 DS    1F                                                       01779000
@AL00001 DS    1A                                                       01780000
IEFAB423 CSECT                                                          01781000
         DS    0F                                                       01782000
@CF00772 DC    F'-6'                                                    01783000
@CF00091 DC    XL4'E6000000'                                            01784000
@DATD    DSECT                                                          01785000
         DS    0D                                                       01786000
TRBPTR   DS    A                                                        01787000
GLENGTH  DS    F                                                        01788000
CNTUNID  DS    F                                                        01789000
JFXPTR   DS    A                                                        01790000
SERCNTR  DS    F                                                        01791000
JFCBXPTR DS    A                                                        01792000
GTSTRTCD DS    F                                                        01793000
BUFFER   DS    CL8                                                      01794000
         ORG   BUFFER                                                   01795000
@NM00005 DS    FL2                                                      01796000
GENVOL   DS    CL2                                                      01797000
NXTVOLID DS    FL4                                                      01798000
         ORG   BUFFER+8                                                 01799000
TAPEBUF  DS    CL6                                                      01800000
         ORG   TAPEBUF                                                  01801000
GENFF    DS    CL1                                                      01802000
GENSVA   DS    CL3                                                      01803000
GENASID  DS    CL2                                                      01804000
         ORG   TAPEBUF+6                                                01805000
@OLDKEY  DS    AL1                                                      01806000
IEFAB423 CSECT                                                          01807000
         DS    0F                                                       01808000
@SIZDATD DC    AL1(230)                                                 01809000
         DC    AL3(@ENDDATD-@DATD)                                      01810000
@CV00099 DC    V(IEFAB424)                                              01811000
@CV00100 DC    V(IEFAB426)                                              01812000
         DS    0D                                                       01813000
GTSTZERO DC    F'0'                                                     01814000
@CB00120 DC    X'FE00'                                                  01815000
TAPEGEND DC    X'FF'                                                    01816000
IEFAB423 CSECT                                                          01817000
         DS   0H                                                        01818000
A423PTCH DC ((@DATA-@PSTART)/20)X'00'                                   01819000
@DATD    DSECT                                                          01820000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01821000
@ENDDATD EQU   *                                                        01822000
IEFAB423 CSECT                                                          01823000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01824000
@01      EQU   01                                                       01825000
@02      EQU   02                                                       01826000
@03      EQU   03                                                       01827000
@04      EQU   04                                                       01828000
@05      EQU   05                                                       01829000
@06      EQU   06                                                       01830000
@07      EQU   07                                                       01831000
@08      EQU   08                                                       01832000
@09      EQU   09                                                       01833000
@10      EQU   10                                                       01834000
@11      EQU   11                                                       01835000
@12      EQU   12                                                       01836000
@13      EQU   13                                                       01837000
@14      EQU   14                                                       01838000
@15      EQU   15                                                       01839000
XCTR     EQU   @03                                                      01840000
TEMPSEQ  EQU   @03                                                      01841000
JFXREM   EQU   @05                                                      01842000
JFXPOS   EQU   @02                                                      01843000
SERCTRL  EQU   @08                                                      01844000
TPTR     EQU   @02                                                      01845000
SAVVUPTR EQU   @03                                                      01846000
SAVRBPTR EQU   @02                                                      01847000
VUSIZE   EQU   @09                                                      01848000
TOTNUM   EQU   @02                                                      01849000
TEMSERNO EQU   @05                                                      01850000
CNTENTRY EQU   @04                                                      01851000
VUPTR    EQU   @10                                                      01852000
SERPTR   EQU   @05                                                      01853000
I        EQU   @06                                                      01854000
ERRORWD  EQU   @03                                                      01855000
TSIOTPTR EQU   @04                                                      01856000
SIOTPTR  EQU   @02                                                      01857000
RBPTR    EQU   @09                                                      01858000
JFCBPTR  EQU   @07                                                      01859000
REG0     EQU   @00                                                      01860000
REG1     EQU   @01                                                      01861000
REG15    EQU   @15                                                      01862000
GTSTR0   EQU   @00                                                      01863000
GTSTR1   EQU   @01                                                      01864000
GTSTR2   EQU   @02                                                      01865000
GTSTR15  EQU   @15                                                      01866000
GTSTR4   EQU   @04                                                      01867000
GTSTR5   EQU   @05                                                      01868000
GTSTR6   EQU   @06                                                      01869000
GTSTR7   EQU   @07                                                      01870000
GTSTR8   EQU   @08                                                      01871000
GTSTR3   EQU   @03                                                      01872000
STEPRSNC EQU   0                                                        01873000
VOLUNRB  EQU   0                                                        01874000
NXTVRB   EQU   VOLUNRB                                                  01875000
VRBDDNUM EQU   VOLUNRB+4                                                01876000
VRBAFFNO EQU   VOLUNRB+6                                                01877000
VRBREFNO EQU   VOLUNRB+8                                                01878000
VRBSERNO EQU   VOLUNRB+10                                               01879000
VRBVLCNT EQU   VOLUNRB+11                                               01880000
VRBVLSEQ EQU   VOLUNRB+12                                               01881000
VRBUNCNT EQU   VOLUNRB+13                                               01882000
VRBIND1  EQU   VOLUNRB+14                                               01883000
PRIVATER EQU   VRBIND1                                                  01884000
DISPDELT EQU   VRBIND1                                                  01885000
DEFERMT  EQU   VRBIND1                                                  01886000
DISPNEW  EQU   VRBIND1                                                  01887000
VRBIND2  EQU   VOLUNRB+15                                               01888000
TAPEREQ  EQU   VRBIND2                                                  01889000
COMMREQ  EQU   VRBIND2                                                  01890000
GRAPHREQ EQU   VRBIND2                                                  01891000
DAREQ    EQU   VRBIND2                                                  01892000
URECREQ  EQU   VRBIND2                                                  01893000
VRBSRPTR EQU   VOLUNRB+16                                               01894000
VRBJXPTR EQU   VOLUNRB+20                                               01895000
VRBSIOTP EQU   VOLUNRB+24                                               01896000
SERIAL   EQU   0                                                        01897000
VOLUNTAB EQU   0                                                        01898000
VOLID    EQU   VOLUNTAB                                                 01899000
VOLSTAT  EQU   VOLUNTAB+6                                               01900000
VOLSTATA EQU   VOLSTAT                                                  01901000
VOLPUB   EQU   VOLSTATA                                                 01902000
VOLPRV   EQU   VOLSTATA                                                 01903000
VOLSPEC  EQU   VOLSTATA                                                 01904000
VOLSTG   EQU   VOLSTATA                                                 01905000
VOLNSHR  EQU   VOLSTATA                                                 01906000
VUDADSM  EQU   VOLSTATA                                                 01907000
VOLDEFER EQU   VOLSTATA                                                 01908000
VOLSTATB EQU   VOLSTAT+1                                                01909000
VOLMNTD  EQU   VOLSTATB                                                 01910000
VDEVREQD EQU   VOLSTATB                                                 01911000
VOLSTATC EQU   VOLSTAT+2                                                01912000
VOLTAREQ EQU   VOLSTATC                                                 01913000
VOLCOREQ EQU   VOLSTATC                                                 01914000
VOLDAREQ EQU   VOLSTATC                                                 01915000
VOLGRREQ EQU   VOLSTATC                                                 01916000
VOLURREQ EQU   VOLSTATC                                                 01917000
VOLSTATD EQU   VOLSTAT+3                                                01918000
VOLUNTID EQU   VOLUNTAB+10                                              01919000
VOLSIOTP EQU   VOLUNTAB+16                                              01920000
VUUCBP   EQU   VOLUNTAB+20                                              01921000
VUGRID   EQU   VOLUNTAB+24                                              01922000
VUPOOL   EQU   0                                                        01923000
VUGRLST  EQU   0                                                        01924000
VUGRLENT EQU   VUGRLST                                                  01925000
VUGRLFLG EQU   VUGRLENT+4                                               01926000
INDMSIOT EQU   0                                                        01927000
SCTUSADD EQU   INDMSIOT+20                                              01928000
SIOTUNAF EQU   SCTUSADD                                                 01929000
SCTPJFCB EQU   INDMSIOT+32                                              01930000
SIOTOTUN EQU   INDMSIOT+39                                              01931000
SIOTREFN EQU   INDMSIOT+40                                              01932000
SIOTBYT1 EQU   INDMSIOT+43                                              01933000
SIOTALCD EQU   SIOTBYT1                                                 01934000
SCTDDINO EQU   INDMSIOT+44                                              01935000
SIOTBYT3 EQU   INDMSIOT+46                                              01936000
SIOTTSTC EQU   INDMSIOT+47                                              01937000
SCTVOLCT EQU   INDMSIOT+49                                              01938000
SIOTBYT0 EQU   INDMSIOT+52                                              01939000
SIOTFUDA EQU   SIOTBYT0                                                 01940000
SCTNMBUT EQU   INDMSIOT+53                                              01941000
SIOTVLCT EQU   INDMSIOT+54                                              01942000
SCTSDISP EQU   INDMSIOT+55                                              01943000
SIOTPRIV EQU   SCTSDISP                                                 01944000
SIOTDLET EQU   SCTSDISP                                                 01945000
SCTSBYT1 EQU   INDMSIOT+56                                              01946000
SCTPARLM EQU   SCTSBYT1                                                 01947000
SCTUNAFF EQU   SCTSBYT1                                                 01948000
SCTSBYT2 EQU   INDMSIOT+57                                              01949000
SCTDEFER EQU   SCTSBYT2                                                 01950000
SCTSBYT3 EQU   INDMSIOT+58                                              01951000
SCTSNEW  EQU   SCTSBYT3                                                 01952000
SCTSBYT4 EQU   INDMSIOT+59                                              01953000
SIOTVAFF EQU   SCTSBYT4                                                 01954000
SCTUTYPE EQU   INDMSIOT+60                                              01955000
SIOTDEVT EQU   SCTUTYPE                                                 01956000
SIOUBYT3 EQU   SIOTDEVT+2                                               01957000
SIO3TAPE EQU   SIOUBYT3                                                 01958000
SIO3COMM EQU   SIOUBYT3                                                 01959000
SIO3DACC EQU   SIOUBYT3                                                 01960000
SIO3DISP EQU   SIOUBYT3                                                 01961000
SIO3UREC EQU   SIOUBYT3                                                 01962000
SIOTBYT4 EQU   INDMSIOT+81                                              01963000
SIOTALTD EQU   INDMSIOT+92                                              01964000
SIOTBYT2 EQU   INDMSIOT+103                                             01965000
SIOTRSNC EQU   INDMSIOT+130                                             01966000
SVOLUNAD EQU   INDMSIOT+140                                             01967000
SIOTNPTR EQU   INDMSIOT+152                                             01968000
SJFCBPTR EQU   INDMSIOT+156                                             01969000
SIOTJFX  EQU   INDMSIOT+160                                             01970000
SVOLUNNO EQU   INDMSIOT+168                                             01971000
INFMJFCB EQU   0                                                        01972000
JFCBDSNM EQU   INFMJFCB                                                 01973000
JFCBELNM EQU   INFMJFCB+44                                              01974000
JFCBTSDM EQU   INFMJFCB+52                                              01975000
JFCFCBID EQU   INFMJFCB+56                                              01976000
JFCBFRID EQU   JFCFCBID                                                 01977000
JFCBLTYP EQU   INFMJFCB+66                                              01978000
JFCBOTTR EQU   INFMJFCB+67                                              01979000
JFCBUFOF EQU   JFCBOTTR                                                 01980000
JFCBFLSQ EQU   JFCBOTTR+1                                               01981000
JFCFUNC  EQU   JFCBFLSQ                                                 01982000
JFCBVLSQ EQU   INFMJFCB+70                                              01983000
JFCBMASK EQU   INFMJFCB+72                                              01984000
JFCBFLG1 EQU   JFCBMASK+5                                               01985000
JFCOPEN  EQU   JFCBFLG1                                                 01986000
JFCBFLG2 EQU   JFCBMASK+6                                               01987000
JFCDEFER EQU   JFCBFLG2                                                 01988000
JFCBIND1 EQU   INFMJFCB+86                                              01989000
JFCBIND2 EQU   INFMJFCB+87                                              01990000
JFCAMPTR EQU   INFMJFCB+88                                              01991000
JFCBUFRQ EQU   JFCAMPTR                                                 01992000
JFCBUFNO EQU   JFCBUFRQ                                                 01993000
JFCBGNCP EQU   JFCAMPTR+1                                               01994000
JFCBHIAR EQU   JFCBGNCP                                                 01995000
JFCBFALN EQU   JFCBHIAR                                                 01996000
JFCBFTEK EQU   JFCBFALN                                                 01997000
JFCBBFTA EQU   JFCBFTEK                                                 01998000
JFCEROPT EQU   INFMJFCB+92                                              01999000
JFCTRTCH EQU   INFMJFCB+93                                              02000000
JFCBX    EQU   0                                                        02001000
JFCBXVOL EQU   JFCBX+4                                                  02002000
JFCBXNXT EQU   JFCBX+172                                                02003000
ALCWA    EQU   0                                                        02004000
SIOT1P   EQU   ALCWA+8                                                  02005000
FAILRSCP EQU   ALCWA+20                                                 02006000
CNTABLE  EQU   ALCWA+28                                                 02007000
TOTREQS  EQU   CNTABLE+36                                               02008000
NUMREQS  EQU   CNTABLE+40                                               02009000
TOTVOLUN EQU   CNTABLE+44                                               02010000
LTUNITID EQU   ALCWA+76                                                 02011000
VOLUNPTR EQU   ALCWA+80                                                 02012000
VOLUNSZE EQU   ALCWA+84                                                 02013000
INDICATE EQU   ALCWA+112                                                02014000
@NM00031 EQU   ALCWA+113                                                02015000
ALCWASID EQU   ALCWA+114                                                02016000
TIOTHDRP EQU   ALCWA+120                                                02017000
NAMES    EQU   0                                                        02018000
ALCWAPTR EQU   0                                                        02019000
JFCKEYLE EQU   JFCTRTCH                                                 02020000
JFCCODE  EQU   JFCKEYLE                                                 02021000
JFCSTACK EQU   JFCTRTCH                                                 02022000
JFCMODE  EQU   JFCSTACK                                                 02023000
JFCSPPRT EQU   JFCTRTCH                                                 02024000
JFCBABFS EQU   JFCSPPRT+2                                               02025000
JFCLIMCT EQU   JFCBABFS                                                 02026000
JFCDSORG EQU   JFCSPPRT+5                                               02027000
JFCDSRG1 EQU   JFCDSORG                                                 02028000
JFCDSRG2 EQU   JFCDSORG+1                                               02029000
JFCRECFM EQU   JFCSPPRT+7                                               02030000
JFCRCFM  EQU   JFCRECFM                                                 02031000
JFCOPTCD EQU   JFCSPPRT+8                                               02032000
JFCWVCSP EQU   JFCOPTCD                                                 02033000
JFCWVCIS EQU   JFCWVCSP                                                 02034000
JFCWVCBD EQU   JFCWVCIS                                                 02035000
JFCALLOW EQU   JFCOPTCD                                                 02036000
JFCRSV17 EQU   JFCALLOW                                                 02037000
JFCOVER  EQU   JFCRSV17                                                 02038000
JFCPCIBT EQU   JFCOPTCD                                                 02039000
JFCMAST  EQU   JFCPCIBT                                                 02040000
JFCEXT   EQU   JFCMAST                                                  02041000
JFCBCKPT EQU   JFCOPTCD                                                 02042000
JFCIND   EQU   JFCBCKPT                                                 02043000
JFCRSV18 EQU   JFCOPTCD                                                 02044000
JFCCYL   EQU   JFCRSV18                                                 02045000
JFCACT   EQU   JFCCYL                                                   02046000
JFCREDUC EQU   JFCOPTCD                                                 02047000
JFCRSV19 EQU   JFCREDUC                                                 02048000
JFCRSV20 EQU   JFCRSV19                                                 02049000
JFCRSV21 EQU   JFCOPTCD                                                 02050000
JFCDEL   EQU   JFCRSV21                                                 02051000
JFCOPTJ  EQU   JFCOPTCD                                                 02052000
JFCREORG EQU   JFCOPTJ                                                  02053000
JFCBLKSI EQU   JFCSPPRT+9                                               02054000
JFCBUFSI EQU   JFCBLKSI                                                 02055000
JFCAMSYN EQU   JFCSPPRT+11                                              02056000
JFCNCP   EQU   JFCAMSYN+2                                               02057000
JFCNTM   EQU   JFCAMSYN+3                                               02058000
JFCBFSEQ EQU   JFCNTM                                                   02059000
JFCPCI   EQU   JFCBFSEQ                                                 02060000
JFCRESRV EQU   JFCAMSYN+4                                               02061000
JFCUCSEG EQU   JFCRESRV                                                 02062000
JFCUCSOP EQU   JFCUCSEG+4                                               02063000
JFCOUTLI EQU   JFCUCSEG+5                                               02064000
JFCTHRSH EQU   JFCOUTLI                                                 02065000
JFCCPRI  EQU   JFCTHRSH                                                 02066000
JFCBNVOL EQU   JFCUCSEG+9                                               02067000
JFCBVOLS EQU   JFCUCSEG+10                                              02068000
JFCBS001 EQU   JFCBVOLS                                                 02069000
JFCBPQTY EQU   JFCBS001+34                                              02070000
JFCBCTRI EQU   JFCBS001+37                                              02071000
JFCBSQTY EQU   JFCBS001+38                                              02072000
JFCFLGS1 EQU   JFCBS001+41                                              02073000
JFCBSPNM EQU   JFCBS001+45                                              02074000
JFCBFLG3 EQU   JFCBSPNM                                                 02075000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02076000
JFCBEND  EQU   JFCBS001+58                                              02077000
JFCBSPTN EQU   JFCBS001+57                                              02078000
JFCBVLCT EQU   JFCBS001+56                                              02079000
JFCBDRLH EQU   JFCBS001+53                                              02080000
JFCBSBNM EQU   JFCBS001+50                                              02081000
JFCBABST EQU   JFCBS001+48                                              02082000
JFCBRV08 EQU   JFCBSPNM+1                                               02083000
JFCBRV07 EQU   JFCBFLG3                                                 02084000
JFCBRV06 EQU   JFCBFLG3                                                 02085000
JFCBRV05 EQU   JFCBFLG3                                                 02086000
JFCBRV04 EQU   JFCBFLG3                                                 02087000
JFCBRV03 EQU   JFCBFLG3                                                 02088000
JFCBRV02 EQU   JFCBFLG3                                                 02089000
JFCBEXP  EQU   JFCBFLG3                                                 02090000
JFCDQDSP EQU   JFCBFLG3                                                 02091000
JFCBDQTY EQU   JFCBS001+42                                              02092000
JFCBUAFF EQU   JFCFLGS1                                                 02093000
JFCRSV45 EQU   JFCFLGS1                                                 02094000
JFCVRDS  EQU   JFCFLGS1                                                 02095000
JFCBCEOV EQU   JFCFLGS1                                                 02096000
JFCRSV42 EQU   JFCFLGS1                                                 02097000
JFCBADSP EQU   JFCFLGS1                                                 02098000
JFCTOPEN EQU   JFCFLGS1                                                 02099000
JFCBDLET EQU   JFCFLGS1                                                 02100000
JFCRQID  EQU   JFCBSQTY                                                 02101000
JFCROUND EQU   JFCBCTRI                                                 02102000
JFCALX   EQU   JFCBCTRI                                                 02103000
JFCMIXG  EQU   JFCBCTRI                                                 02104000
JFCONTIG EQU   JFCBCTRI                                                 02105000
JFCRSV29 EQU   JFCBCTRI                                                 02106000
JFCBMSGP EQU   JFCBCTRI                                                 02107000
JFCBSPAC EQU   JFCBCTRI                                                 02108000
JFCRUNIT EQU   JFCBPQTY                                                 02109000
JFCBEXAD EQU   JFCBS001+31                                              02110000
JFCBEXTL EQU   JFCBS001+30                                              02111000
JFCMSVGP EQU   JFCBS001+22                                              02112000
@NM00026 EQU   JFCBS001                                                 02113000
JFCAVOLS EQU   JFCBVOLS                                                 02114000
JFCBNTCS EQU   JFCUCSEG+8                                               02115000
JFCSOWA  EQU   JFCOUTLI+1                                               02116000
JFCSEND  EQU   JFCCPRI                                                  02117000
JFCEQUAL EQU   JFCCPRI                                                  02118000
JFCRECV  EQU   JFCCPRI                                                  02119000
JFCRSV34 EQU   JFCCPRI                                                  02120000
JFCRSV33 EQU   JFCCPRI                                                  02121000
JFCRSV55 EQU   JFCCPRI                                                  02122000
JFCRSV54 EQU   JFCCPRI                                                  02123000
JFCRSV53 EQU   JFCCPRI                                                  02124000
JFCRSV27 EQU   JFCUCSOP                                                 02125000
JFCRSV26 EQU   JFCUCSOP                                                 02126000
JFCFCBVR EQU   JFCUCSOP                                                 02127000
JFCFCBAL EQU   JFCUCSOP                                                 02128000
JFCVER   EQU   JFCUCSOP                                                 02129000
JFCRSV25 EQU   JFCUCSOP                                                 02130000
JFCFOLD  EQU   JFCUCSOP                                                 02131000
JFCBEXTP EQU   JFCUCSOP                                                 02132000
JFCUCSID EQU   JFCUCSEG                                                 02133000
JFCINTVL EQU   JFCSPPRT+19                                              02134000
JFCDBUFN EQU   JFCRESRV+3                                               02135000
JFCCYLOF EQU   JFCRESRV+2                                               02136000
JFCRKP   EQU   JFCRESRV                                                 02137000
JFCPCIR2 EQU   JFCPCI                                                   02138000
JFCPCIR1 EQU   JFCPCI                                                   02139000
JFCPCIN2 EQU   JFCPCI                                                   02140000
JFCPCIN1 EQU   JFCPCI                                                   02141000
JFCPCIA2 EQU   JFCPCI                                                   02142000
JFCPCIA1 EQU   JFCPCI                                                   02143000
JFCPCIX2 EQU   JFCPCI                                                   02144000
JFCPCIX1 EQU   JFCPCI                                                   02145000
JFCBUFMX EQU   JFCNCP                                                   02146000
JFCLRECL EQU   JFCAMSYN                                                 02147000
JFCBAXBF EQU   JFCBUFSI                                                 02148000
JFCREL   EQU   JFCREORG                                                 02149000
JFCRSV22 EQU   JFCDEL                                                   02150000
JFCSRCHD EQU   JFCRSV20                                                 02151000
JFCOPTQ  EQU   JFCACT                                                   02152000
JFCFEED  EQU   JFCIND                                                   02153000
JFCCBWU  EQU   JFCEXT                                                   02154000
JFCWUMSG EQU   JFCOVER                                                  02155000
JFCSDNAM EQU   JFCWVCBD                                                 02156000
@NM00025 EQU   JFCRECFM                                                 02157000
JFCCHAR  EQU   JFCRECFM                                                 02158000
JFCRFS   EQU   JFCRECFM                                                 02159000
JFCRFB   EQU   JFCRECFM                                                 02160000
JFCRFO   EQU   JFCRCFM                                                  02161000
JFCFMREC EQU   JFCRCFM                                                  02162000
JFCRSV16 EQU   JFCDSRG2                                                 02163000
JFCRSV15 EQU   JFCDSRG2                                                 02164000
JFCORGTR EQU   JFCDSRG2                                                 02165000
JFCORGAM EQU   JFCDSRG2                                                 02166000
JFCRSV13 EQU   JFCDSRG2                                                 02167000
JFCORGTQ EQU   JFCDSRG2                                                 02168000
JFCORGTX EQU   JFCDSRG2                                                 02169000
JFCORGGS EQU   JFCDSRG2                                                 02170000
JFCORGU  EQU   JFCDSRG1                                                 02171000
JFCORGPO EQU   JFCDSRG1                                                 02172000
JFCORGMQ EQU   JFCDSRG1                                                 02173000
JFCORGCQ EQU   JFCDSRG1                                                 02174000
JFCORGCX EQU   JFCDSRG1                                                 02175000
JFCORGDA EQU   JFCDSRG1                                                 02176000
JFCORGPS EQU   JFCDSRG1                                                 02177000
JFCORGIS EQU   JFCDSRG1                                                 02178000
JFCTRKBL EQU   JFCLIMCT+1                                               02179000
@NM00024 EQU   JFCLIMCT                                                 02180000
JFCDEN   EQU   JFCSPPRT+1                                               02181000
JFCPRTSP EQU   JFCSPPRT                                                 02182000
JFCONE   EQU   JFCMODE                                                  02183000
JFCTWO   EQU   JFCMODE                                                  02184000
JFCRSV07 EQU   JFCMODE                                                  02185000
JFCRSV06 EQU   JFCMODE                                                  02186000
JFCMODER EQU   JFCMODE                                                  02187000
JFCMODEO EQU   JFCMODE                                                  02188000
JFCEBCD  EQU   JFCMODE                                                  02189000
JFCBIN   EQU   JFCMODE                                                  02190000
JFCRSV32 EQU   JFCCODE                                                  02191000
JFCTTY   EQU   JFCCODE                                                  02192000
JFCASCII EQU   JFCCODE                                                  02193000
JFCNCR   EQU   JFCCODE                                                  02194000
JFCBUR   EQU   JFCCODE                                                  02195000
JFCFRI   EQU   JFCCODE                                                  02196000
JFCBCD   EQU   JFCCODE                                                  02197000
JFCNOCON EQU   JFCCODE                                                  02198000
ALCPROCN EQU   NAMES+16                                                 02199000
ALCSTEPN EQU   NAMES+8                                                  02200000
ALCJOBN  EQU   NAMES                                                    02201000
LOJSSNMP EQU   ALCWA+164                                                02202000
SSERBLKP EQU   ALCWA+160                                                02203000
GROUPSZ  EQU   ALCWA+156                                                02204000
GRIDPTR  EQU   ALCWA+152                                                02205000
ALCNUCBS EQU   ALCWA+148                                                02206000
EXITPRMP EQU   ALCWA+144                                                02207000
CANCELP  EQU   ALCWA+140                                                02208000
WORK3MP  EQU   ALCWA+136                                                02209000
WMASK2P  EQU   ALCWA+132                                                02210000
WMASKPTR EQU   ALCWA+128                                                02211000
LGENLOCK EQU   ALCWA+124                                                02212000
TCBP     EQU   ALCWA+116                                                02213000
@NM00032 EQU   @NM00031                                                 02214000
DDRDA    EQU   @NM00031                                                 02215000
DDRTPUR  EQU   @NM00031                                                 02216000
NODEVERR EQU   @NM00031                                                 02217000
NEEDRCVY EQU   @NM00031                                                 02218000
ALCWAREC EQU   @NM00031                                                 02219000
WAITIGEN EQU   @NM00031                                                 02220000
UNITRECS EQU   @NM00031                                                 02221000
ALCWADUL EQU   INDICATE                                                 02222000
ALCWISAM EQU   INDICATE                                                 02223000
DSSUNIT  EQU   INDICATE                                                 02224000
DSSTAPE  EQU   INDICATE                                                 02225000
PRIVASUM EQU   INDICATE                                                 02226000
INDREQU  EQU   INDICATE                                                 02227000
INDRETRY EQU   INDICATE                                                 02228000
INDWAIT  EQU   INDICATE                                                 02229000
QMGRRBP  EQU   ALCWA+108                                                02230000
RIMTABCT EQU   ALCWA+104                                                02231000
RIMTABLN EQU   ALCWA+100                                                02232000
RIMTABP  EQU   ALCWA+96                                                 02233000
ALGTABSZ EQU   ALCWA+92                                                 02234000
ALGTABP  EQU   ALCWA+88                                                 02235000
@NM00030 EQU   ALCWA+78                                                 02236000
OTHEREQS EQU   CNTABLE+32                                               02237000
SUBSREQS EQU   CNTABLE+28                                               02238000
STRGREQS EQU   CNTABLE+24                                               02239000
PUBLREQS EQU   CNTABLE+20                                               02240000
PVTNREQS EQU   CNTABLE+16                                               02241000
SPECREQS EQU   CNTABLE+12                                               02242000
TPREQS   EQU   CNTABLE+8                                                02243000
VAMREQS  EQU   CNTABLE+4                                                02244000
DMYREQS  EQU   CNTABLE                                                  02245000
EDTABPTR EQU   ALCWA+24                                                 02246000
IOSLUTP  EQU   ALCWA+16                                                 02247000
JSCBPTR  EQU   ALCWA+12                                                 02248000
FMAPPTR  EQU   ALCWA+4                                                  02249000
WASIZE   EQU   ALCWA                                                    02250000
@NM00029 EQU   JFCBX+144                                                02251000
JFCBXDEV EQU   JFCBX+140                                                02252000
JFCBXNAM EQU   JFCBX+96                                                 02253000
@NM00028 EQU   JFCBX+94                                                 02254000
@NM00027 EQU   JFCBX+3                                                  02255000
JFCBXTTR EQU   JFCBX                                                    02256000
JFCRSV05 EQU   JFCEROPT                                                 02257000
JFCRSV04 EQU   JFCEROPT                                                 02258000
JFCRSV03 EQU   JFCEROPT                                                 02259000
JFCRSV02 EQU   JFCEROPT                                                 02260000
JFCTOPT  EQU   JFCEROPT                                                 02261000
JFCABN   EQU   JFCEROPT                                                 02262000
JFCSKP   EQU   JFCEROPT                                                 02263000
JFCACC   EQU   JFCEROPT                                                 02264000
JFCBUFL  EQU   JFCAMPTR+2                                               02265000
JFCFWORD EQU   JFCBFTEK                                                 02266000
JFCDWORD EQU   JFCBFTEK                                                 02267000
JFCHIER1 EQU   JFCBFTEK                                                 02268000
JFCDYN   EQU   JFCBFTEK                                                 02269000
JFCEXC   EQU   JFCBFTEK                                                 02270000
JFCBBFTR EQU   JFCBBFTA                                                 02271000
JFCSIM   EQU   JFCBBFTA                                                 02272000
JFCHIER  EQU   JFCBFTEK                                                 02273000
JFCBFOUT EQU   JFCBUFNO                                                 02274000
JFCBUFIN EQU   JFCBUFNO                                                 02275000
JFCTEMP  EQU   JFCBIND2                                                 02276000
JFCREQ   EQU   JFCBIND2                                                 02277000
JFCENT   EQU   JFCBIND2                                                 02278000
JFCSHARE EQU   JFCBIND2                                                 02279000
JFCSECUR EQU   JFCBIND2                                                 02280000
JFCDISP  EQU   JFCBIND2                                                 02281000
JFCPDS   EQU   JFCBIND1                                                 02282000
JFCGDG   EQU   JFCBIND1                                                 02283000
JFCADDED EQU   JFCBIND1                                                 02284000
JFCLOC   EQU   JFCBIND1                                                 02285000
JFCRLSE  EQU   JFCBIND1                                                 02286000
JFCBXPDT EQU   INFMJFCB+83                                              02287000
JFCBCRDT EQU   INFMJFCB+80                                              02288000
JFCBOPS2 EQU   JFCBMASK+7                                               02289000
JFCRCTLG EQU   JFCBFLG2                                                 02290000
JFCBBUFF EQU   JFCBFLG2                                                 02291000
JFCTRACE EQU   JFCBFLG2                                                 02292000
JFCSDRPS EQU   JFCBFLG2                                                 02293000
JFCMODNW EQU   JFCBFLG2                                                 02294000
JFCNRPS  EQU   JFCDEFER                                                 02295000
JFCOUTOP EQU   JFCBFLG2                                                 02296000
JFCINOP  EQU   JFCBFLG2                                                 02297000
JFCBPWBP EQU   JFCOPEN                                                  02298000
@NM00023 EQU   JFCOPEN                                                  02299000
JFCDUAL  EQU   JFCBFLG1                                                 02300000
JFCSLDES EQU   JFCBFLG1                                                 02301000
JFCSLCRE EQU   JFCBFLG1                                                 02302000
JFCSTAND EQU   JFCBFLG1                                                 02303000
JFCBOPS1 EQU   JFCBMASK                                                 02304000
JFCRSV31 EQU   JFCFUNC                                                  02305000
JFCFNCBT EQU   JFCFUNC                                                  02306000
JFCFNCBX EQU   JFCFUNC                                                  02307000
JFCFNCBD EQU   JFCFUNC                                                  02308000
JFCFNCBW EQU   JFCFUNC                                                  02309000
JFCFNCBP EQU   JFCFUNC                                                  02310000
JFCFNCBR EQU   JFCFUNC                                                  02311000
JFCFNCBI EQU   JFCFUNC                                                  02312000
JFCBFOFL EQU   JFCBUFOF                                                 02313000
JFCNL    EQU   JFCBLTYP                                                 02314000
JFCSL    EQU   JFCBLTYP                                                 02315000
JFCNSL   EQU   JFCBLTYP                                                 02316000
JFCSUL   EQU   JFCBLTYP                                                 02317000
JFCBLP   EQU   JFCBLTYP                                                 02318000
JFCBLTM  EQU   JFCBLTYP                                                 02319000
JFCBAL   EQU   JFCBLTYP                                                 02320000
JFCRSV38 EQU   JFCBLTYP                                                 02321000
JFCVINDX EQU   INFMJFCB+64                                              02322000
JFCNLREC EQU   INFMJFCB+62                                              02323000
JFCBADBF EQU   INFMJFCB+60                                              02324000
JFCAMSTR EQU   JFCBFRID+2                                               02325000
JFCAMCRO EQU   JFCBFRID                                                 02326000
JFCBDSCB EQU   INFMJFCB+53                                              02327000
JFCPAT   EQU   JFCBTSDM                                                 02328000
JFCNDCB  EQU   JFCBTSDM                                                 02329000
JFCNDSCB EQU   JFCBTSDM                                                 02330000
JFCNWRIT EQU   JFCBTSDM                                                 02331000
JFCTTR   EQU   JFCBTSDM                                                 02332000
JFCSDS   EQU   JFCBTSDM                                                 02333000
JFCVSL   EQU   JFCBTSDM                                                 02334000
JFCCAT   EQU   JFCBTSDM                                                 02335000
JFCIPLTX EQU   JFCBELNM                                                 02336000
JFCBQNAM EQU   JFCBDSNM                                                 02337000
SIODDSNL EQU   INDMSIOT+173                                             02338000
SIOVDSNL EQU   INDMSIOT+172                                             02339000
SIOVDSNT EQU   INDMSIOT+170                                             02340000
SIOTVMVP EQU   INDMSIOT+164                                             02341000
SIOTETIO EQU   INDMSIOT+148                                             02342000
SIOTATE  EQU   INDMSIOT+144                                             02343000
SIOTEDLP EQU   INDMSIOT+136                                             02344000
SIOTEDLS EQU   INDMSIOT+132                                             02345000
SCTANAME EQU   INDMSIOT+122                                             02346000
SIOTSSIC EQU   INDMSIOT+120                                             02347000
@NM00022 EQU   INDMSIOT+108                                             02348000
SIOTSSNM EQU   INDMSIOT+104                                             02349000
@NM00021 EQU   SIOTBYT2                                                 02350000
SIOTCVOL EQU   SIOTBYT2                                                 02351000
SIOTCNEW EQU   SIOTBYT2                                                 02352000
SIOTCALC EQU   SIOTBYT2                                                 02353000
SIOTGALL EQU   SIOTBYT2                                                 02354000
SIOTDSPD EQU   SIOTBYT2                                                 02355000
SIOTDMND EQU   SIOTBYT2                                                 02356000
SIOTOPUC EQU   INDMSIOT+99                                              02357000
SIOTOUTR EQU   INDMSIOT+97                                              02358000
SIOTOUTC EQU   INDMSIOT+96                                              02359000
SIOTSSWA EQU   INDMSIOT+93                                              02360000
SIOTAUNC EQU   SIOTALTD                                                 02361000
SIOTACAT EQU   SIOTALTD                                                 02362000
SIOTADEL EQU   SIOTALTD                                                 02363000
SIOTAKEP EQU   SIOTALTD                                                 02364000
SIOTNPRV EQU   SIOTALTD                                                 02365000
SIOJCATS EQU   SIOTALTD                                                 02366000
@NM00020 EQU   SIOTALTD                                                 02367000
@NM00019 EQU   SIOTALTD                                                 02368000
@NM00018 EQU   INDMSIOT+91                                              02369000
SIOTNDSB EQU   INDMSIOT+88                                              02370000
@NM00017 EQU   INDMSIOT+84                                              02371000
SIOTDPCD EQU   INDMSIOT+82                                              02372000
@NM00016 EQU   SIOTBYT4                                                 02373000
SIOTRACT EQU   SIOTBYT4                                                 02374000
SIOTRACD EQU   SIOTBYT4                                                 02375000
SIOTPROT EQU   SIOTBYT4                                                 02376000
SCTOUTPN EQU   INDMSIOT+80                                              02377000
SCTOUTNO EQU   INDMSIOT+76                                              02378000
SCTOUTNM EQU   INDMSIOT+68                                              02379000
SIOUCBAD EQU   SCTUTYPE+5                                               02380000
SIOUCNVT EQU   SCTUTYPE+4                                               02381000
SIOUBYT4 EQU   SIOTDEVT+3                                               02382000
@NM00015 EQU   SIOUBYT3                                                 02383000
SIOUBYT2 EQU   SIOTDEVT+1                                               02384000
SIOUBYT1 EQU   SIOTDEVT                                                 02385000
SIOTOMN  EQU   SCTSBYT4                                                 02386000
SIOTIPDI EQU   SCTSBYT4                                                 02387000
SIOTSTEP EQU   SCTSBYT4                                                 02388000
SIOTASCI EQU   SCTSBYT4                                                 02389000
@NM00014 EQU   SCTSBYT4                                                 02390000
SIOTGDGA EQU   SCTSBYT4                                                 02391000
SCTSGDGS EQU   SCTSBYT4                                                 02392000
SCTSOLD  EQU   SCTSBYT3                                                 02393000
SCTSMOD  EQU   SCTSBYT3                                                 02394000
SCTSYSOU EQU   SCTSBYT3                                                 02395000
SCTVREF  EQU   SCTSBYT3                                                 02396000
SCTALCHK EQU   SCTSBYT3                                                 02397000
SCTSYSNE EQU   SCTSBYT3                                                 02398000
SCTDSNRF EQU   SCTSBYT3                                                 02399000
SCTRECVD EQU   SCTSBYT2                                                 02400000
SCTLABEL EQU   SCTSBYT2                                                 02401000
SCTUNLBD EQU   SCTSBYT2                                                 02402000
SCTJOBLB EQU   SCTSBYT2                                                 02403000
SCTVOLAF EQU   SCTSBYT2                                                 02404000
SIOTCATL EQU   SCTSBYT2                                                 02405000
SIOCLUNL EQU   SCTSBYT2                                                 02406000
SIOTJSCT EQU   SCTSBYT1                                                 02407000
SIOTQDSN EQU   SCTSBYT1                                                 02408000
SIOTGDSN EQU   SCTSBYT1                                                 02409000
SIOTCCAT EQU   SCTSBYT1                                                 02410000
SCTSYSIN EQU   SCTSBYT1                                                 02411000
SCTDUMMY EQU   SCTSBYT1                                                 02412000
SIOTUNCT EQU   SCTSDISP                                                 02413000
SIOTCTLG EQU   SCTSDISP                                                 02414000
SIOTKEEP EQU   SCTSDISP                                                 02415000
SIOTPASS EQU   SCTSDISP                                                 02416000
S3400DSP EQU   SCTSDISP                                                 02417000
SIOTRETN EQU   SCTSDISP                                                 02418000
SIOTRTRY EQU   SIOTBYT0                                                 02419000
SIOTPUPV EQU   SIOTBYT0                                                 02420000
SIOTNOPV EQU   SIOTBYT0                                                 02421000
SIOTGIGN EQU   SIOTBYT0                                                 02422000
SPVTAMSG EQU   SIOTBYT0                                                 02423000
SIOTDYAL EQU   SIOTBYT0                                                 02424000
SIOTSSDS EQU   SIOTBYT0                                                 02425000
SIOTGIID EQU   INDMSIOT+50                                              02426000
SCTSPOOL EQU   INDMSIOT+48                                              02427000
SIOTQNAM EQU   SIOTTSTC                                                 02428000
SIOTDSNM EQU   SIOTTSTC                                                 02429000
SIOTTRKM EQU   SIOTTSTC                                                 02430000
SIOTSSMG EQU   SIOTTSTC                                                 02431000
SIOTSSGP EQU   SIOTTSTC                                                 02432000
@NM00013 EQU   SIOTTSTC                                                 02433000
SIOTTERM EQU   SIOTTSTC                                                 02434000
SIOTINFC EQU   SIOTTSTC                                                 02435000
@NM00012 EQU   SIOTBYT3                                                 02436000
SIOTDSID EQU   SIOTBYT3                                                 02437000
S3400OFF EQU   SIOTBYT3                                                 02438000
SIOTJES3 EQU   SIOTBYT3                                                 02439000
SIOCDEVT EQU   SIOTBYT3                                                 02440000
SIOALIAS EQU   SIOTBYT3                                                 02441000
SIOTDDNT EQU   SIOTBYT1                                                 02442000
SIODADSM EQU   SIOTBYT1                                                 02443000
SIOTDADR EQU   SIOTBYT1                                                 02444000
SIODUNAL EQU   SIOTBYT1                                                 02445000
SIOVAMDS EQU   SIOTBYT1                                                 02446000
SIOTHOLD EQU   SIOTBYT1                                                 02447000
SIOTOCKP EQU   SIOTBYT1                                                 02448000
SIOPSCNT EQU   INDMSIOT+42                                              02449000
SIOTVRSB EQU   INDMSIOT+36                                              02450000
@NM00011 EQU   INDMSIOT+35                                              02451000
@NM00010 EQU   INDMSIOT+31                                              02452000
SCTPSIOT EQU   INDMSIOT+28                                              02453000
SIOTAFID EQU   INDMSIOT+26                                              02454000
SIOTVLSP EQU   INDMSIOT+24                                              02455000
SIODSNTE EQU   INDMSIOT+22                                              02456000
SIOTDEST EQU   INDMSIOT+12                                              02457000
SCTDDNAM EQU   INDMSIOT+4                                               02458000
SIOTTYPE EQU   INDMSIOT+3                                               02459000
SIOTDSKA EQU   INDMSIOT                                                 02460000
@NM00009 EQU   VUGRLENT+5                                               02461000
@NM00008 EQU   VUGRLFLG                                                 02462000
VUGRALCD EQU   VUGRLFLG                                                 02463000
VUGRLIDS EQU   VUGRLENT                                                 02464000
VUCBS    EQU   VUPOOL+4                                                 02465000
VUPOOL#  EQU   VUPOOL                                                   02466000
VOLALGTP EQU   VOLUNTAB+12                                              02467000
VURCVYPR EQU   VOLSTATD                                                 02468000
VUVLUNIQ EQU   VOLSTATD                                                 02469000
VUDMUNIQ EQU   VOLSTATD                                                 02470000
VUUNALSW EQU   VOLSTATD                                                 02471000
VUDMNDAL EQU   VOLSTATD                                                 02472000
VUDMNDOF EQU   VOLSTATD                                                 02473000
VUREALOC EQU   VOLSTATD                                                 02474000
VUMUGDON EQU   VOLSTATD                                                 02475000
@NM00007 EQU   VOLSTATC                                                 02476000
@NM00006 EQU   VOLSTATC                                                 02477000
VURECVRY EQU   VOLSTATC                                                 02478000
VUAFFWRK EQU   VOLSTATB                                                 02479000
VUVINELG EQU   VOLSTATB                                                 02480000
VUDADSME EQU   VOLSTATB                                                 02481000
VUDNALOC EQU   VOLSTATB                                                 02482000
VUPROCED EQU   VOLSTATB                                                 02483000
VOLALOC  EQU   VOLSTATB                                                 02484000
VOLRESVE EQU   VOLSTATA                                                 02485000
@NM00004 EQU   VRBIND2                                                  02486000
@NM00003 EQU   VRBIND2                                                  02487000
@NM00002 EQU   VRBIND2                                                  02488000
@NM00001 EQU   VRBIND1                                                  02489000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02490000
@RC00094 EQU   @RC00093                                                 02491000
@RC00155 EQU   @RC00154                                                 02492000
@RC00260 EQU   @RC00258                                                 02493000
@RC00344 EQU   @RC00338                                                 02494000
@RC00366 EQU   @RC00364                                                 02495000
@RF00373 EQU   @RC00371                                                 02496000
@RC00211 EQU   @RC00185                                                 02497000
@RF00424 EQU   @RC00147                                                 02498000
@ENDDATA EQU   *                                                        02499000
         END   IEFAB423,(C'PLS1759',0701,78128)                         02500000
