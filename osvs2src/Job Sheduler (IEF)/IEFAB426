         TITLE 'IEFAB426 - VOLUNIT AFFINITY PROCESSING                 *00001000
                        '                                               00002000
IEFAB426 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEFAB426  74.166'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         MODESET EXTKEY=SCHED,SAVEKEY=(2)                               00015000
         GSPACE   R,LV=(0)                                              00016000
         LR    @11,@01                                          01S0001 00017000
         USING @DATD,@11                                        01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         STC   @02,@OLDKEY                                      01S0001 00020000
         MODESET KEYADDR=(2)                                            00021000
         LM    @00,@02,20(@13)                                  01S0001 00022000
         ST    @11,8(,@13)                                      01S0001 00023000
         LR    @13,@11                                          01S0001 00024000
         MODESET EXTKEY=ZERO                                            00025000
         MVC   @PC00001(4),0(@01)                               01S0001 00026000
         MODESET EXTKEY=SCHED                                           00027000
*                                                               01S0015 00028000
*VUPTR = VOLUNPTR;                     /* FIRST ENTRY IN VU TABLE    */ 00029000
         L     @10,@PC00001                                     01S0016 00030000
         L     @10,ALCWAPTR(,@10)                               01S0016 00031000
         L     VUPTR,VOLUNPTR(,@10)                             01S0016 00032000
*ERRORWD=ZERO;                                                  01S0017 00033000
         SLR   ERRORWD,ERRORWD                                  01S0017 00034000
*DO CNTENTRY = ONE TO TOTVOLUN-ONE     /* PROCESS ALL VU ENTRIES     */ 00035000
*    WHILE (ERRORWD = ZERO);           /* STOP ON ERROR              */ 00036000
         LA    CNTENTRY,1                                       01S0018 00037000
         B     @DE00018                                         01S0018 00038000
@DL00018 LTR   ERRORWD,ERRORWD                                  01S0018 00039000
         BNZ   @DC00018                                         01S0018 00040000
*  IF VUPROCED = OFF THEN              /* ENTRY NOT PROCESSED YET    */ 00041000
         TM    VUPROCED(VUPTR),B'00010000'                      01S0019 00042000
         BNZ   @RF00019                                         01S0019 00043000
*    DO;                               /* CHECK FOR AFFINITY         */ 00044000
*      TAPESW = OFF;                   /*INITIALIZE TAPE SWITCH      */ 00045000
*      MATCHSW = OFF;                  /* AFFINITY NOT YET FOUND     */ 00046000
*      DEFSRHSW = ON;                  /*SEARCH VUTAB FOR DEFER      */ 00047000
*      DEFERSW = ON;                   /*INITIALIZE TO DEFER FOUND   */ 00048000
*      PVTSTGSW = ON;                  /*LOOK FOR PRI & STRG         */ 00049000
*      PRIVATSW = OFF;                 /*NO PRIVATES YET             */ 00050000
*      STRGSW = OFF;                   /*NO STORAGES YET             */ 00051000
         OI    DEFSRHSW,B'11010000'                             01S0027 00052000
         NI    TAPESW,B'11010001'                               01S0027 00053000
*      TVUPTR = VUPTR + LENGTH(VOLUNTAB); /* NEXT ENTRY TO SEARCH    */ 00054000
         LA    TVUPTR,28                                        01S0028 00055000
         ALR   TVUPTR,VUPTR                                     01S0028 00056000
*      DO TVUCTR = CNTENTRY + ONE TO TOTVOLUN /* PROCESS ALL TIL END */ 00057000
*           WHILE (ERRORWD = ZERO & TAPESW = OFF);/*STOP ON ERROR       00058000
*                                        OR TAPE                     */ 00059000
         LA    @10,1                                            01S0029 00060000
         ALR   @10,CNTENTRY                                     01S0029 00061000
         B     @DE00029                                         01S0029 00062000
@DL00029 LTR   ERRORWD,ERRORWD                                  01S0029 00063000
         BNZ   @DC00029                                         01S0029 00064000
         TM    TAPESW,B'00000010'                               01S0029 00065000
         BNZ   @DC00029                                         01S0029 00066000
*        IF TVUPTR -> VOLID = VOLID THEN /* VOL AFF FOUND            */ 00067000
         CLC   VOLID(6,TVUPTR),VOLID(VUPTR)                     01S0030 00068000
         BNE   @RF00030                                         01S0030 00069000
*        IF VOLCOREQ = OFF & TVUPTR -> VOLCOREQ = OFF &         01S0031 00070000
*           VOLGRREQ = OFF & TVUPTR -> VOLGRREQ = OFF &         01S0031 00071000
*           VOLURREQ = OFF & TVUPTR -> VOLURREQ = OFF &         01S0031 00072000
*           (VOLDAREQ = OFF | VOLSIOTP -> SIOTFUDA = ON) &      01S0031 00073000
*           (TVUPTR->VOLDAREQ=OFF | TVUPTR->VOLSIOTP->SIOTFUDA=ON) THEN 00074000
         TM    VOLCOREQ(VUPTR),B'01000000'                      01S0031 00075000
         BNZ   @RF00031                                         01S0031 00076000
         TM    VOLCOREQ(TVUPTR),B'01000000'                     01S0031 00077000
         BNZ   @RF00031                                         01S0031 00078000
         TM    VOLGRREQ(VUPTR),B'00010000'                      01S0031 00079000
         BNZ   @RF00031                                         01S0031 00080000
         TM    VOLGRREQ(TVUPTR),B'00010000'                     01S0031 00081000
         BNZ   @RF00031                                         01S0031 00082000
         TM    VOLURREQ(VUPTR),B'00001000'                      01S0031 00083000
         BNZ   @RF00031                                         01S0031 00084000
         TM    VOLURREQ(TVUPTR),B'00001000'                     01S0031 00085000
         BNZ   @RF00031                                         01S0031 00086000
         TM    VOLDAREQ(VUPTR),B'00100000'                      01S0031 00087000
         BZ    @GL00002                                         01S0031 00088000
         L     @10,VOLSIOTP(,VUPTR)                             01S0031 00089000
         TM    SIOTFUDA(@10),B'00100000'                        01S0031 00090000
         BNO   @RF00031                                         01S0031 00091000
@GL00002 TM    VOLDAREQ(TVUPTR),B'00100000'                     01S0031 00092000
         BZ    @RT00031                                         01S0031 00093000
         L     @10,VOLSIOTP(,TVUPTR)                            01S0031 00094000
         TM    SIOTFUDA(@10),B'00100000'                        01S0031 00095000
         BNO   @RF00031                                         01S0031 00096000
@RT00031 DS    0H                                               01S0032 00097000
*                                        /*MUST DO TAPE AFF PROC     */ 00098000
*          DO;                                                  01S0032 00099000
*/********************************************************************/ 00100000
*/*                                                                  */ 00101000
*/* SEGMENT NAME - TAPEAFF                                           */ 00102000
*/*                                                                  */ 00103000
*/* DESCRIPTIVE NAME - PROCESS TAPE VOLUME AFFINITY                  */ 00104000
*/*                                                                  */ 00105000
*/* FUNCTION -                                                       */ 00106000
*/*   THE FUNCTION OF THIS ROUTINE IS TO PROCESS VOLUME AFFINITY     */ 00107000
*/*   BETWEEN TAPE REQUESTS. IT IS PROCESSED AS FOLLOWS-             */ 00108000
*/*     IF UNIT AFFINITY EXISTS BETWEEN THESE REQUESTS, THE          */ 00109000
*/*     UNIT AFFINITY TAKES PRECEDENCE, OTHERWISE THE VOLUME         */ 00110000
*/*     AFFINITY CAUSES A NEW UNITID TO BE GENERATED(CAUSING AN EXTRA*/ 00111000
*/*     UNIT TO BE ALLOCATED) AND PROPAGATED THROUGH ALL VOLUNIT     */ 00112000
*/*     ENTRIES WITH THE SAME VOLID. THE ACTUAL BUMPING OF THE       */ 00113000
*/*     NUMBER OF UNITS IS HANDLED IN THE SUBROUTINE VUUPDATE.       */ 00114000
*/*                                                                  */ 00115000
*/* OPERATION -  SEE FUNCTION                                        */ 00116000
*/*                                                                  */ 00117000
*/* ENTRY - INLINE SEGMENT                                           */ 00118000
*/*                                                                  */ 00119000
*/*   PURPOSE - SEE FUNCTION                                         */ 00120000
*/*                                                                  */ 00121000
*/*   INPUT -                                                        */ 00122000
*/*     VUPTR - POINTING TO SUBJECT VOLUNIT ENTRY                    */ 00123000
*/*     TVUPTR - POINTING TO AFFINITY VOLUNIT ENTRY                  */ 00124000
*/*                                                                  */ 00125000
*/*   EXITS -                                                        */ 00126000
*/*     CONDITION - SUCCESSFUL COMPLETION                            */ 00127000
*/*                                                                  */ 00128000
*/*     OUTPUT -                                                     */ 00129000
*/*       VOLUNIT ENTRIES UPDATED                                    */ 00130000
*/*       NUMBER OF UNITS UPDATED                                    */ 00131000
*/*                                                                  */ 00132000
*/*     RETURN CODE - ZERO                                           */ 00133000
*/*                                                                  */ 00134000
*/*     CONDITION - NUMBER OF UNITS WOULD EXCEED MAXIMUM             */ 00135000
*/*       THIS CONDITION IS DETERMINED BY VUUPDATE, THE              */ 00136000
*/*       APPROPRIATE RETURN CODE IS SET IN ERRORWD.                 */ 00137000
*/*                                                                  */ 00138000
*/********************************************************************/ 00139000
*IF TVUPTR-> VOLUNTID ^= VOLUNTID THEN /*MUST DO VOL AFF PROCESSING  */ 00140000
         CLC   VOLUNTID(2,TVUPTR),VOLUNTID(VUPTR)               02S0033 00141000
         BE    @RF00033                                         02S0033 00142000
*  DO;                                                          02S0034 00143000
*    SRCHSIOT = VOLSIOTP;              /*SIOT FOR VUUPDATE           */ 00144000
         L     SRCHSIOT,VOLSIOTP(,VUPTR)                        02S0035 00145000
*    SRCHVUAD = VUPTR;                 /*VOLUNIT ENTRY FOR VUUPDATE  */ 00146000
         LR    SRCHVUAD,VUPTR                                   02S0036 00147000
*    TAPESW=ON;                        /*LOOP CTRL FOR AB426         */ 00148000
         OI    TAPESW,B'00000010'                               02S0037 00149000
*    CALL VUUPDATE;                    /*UPDATE VOLUNIT ENTRIES      */ 00150000
         BAL   @14,VUUPDATE                                     02S0038 00151000
*    LTUNITID=LTUNITID + ONE;          /*NEW UNITID                  */ 00152000
         L     @10,@PC00001                                     02S0039 00153000
         L     @10,ALCWAPTR(,@10)                               02S0039 00154000
         LA    @05,1                                            02S0039 00155000
         LH    @03,LTUNITID(,@10)                               02S0039 00156000
         ALR   @03,@05                                          02S0039 00157000
         STH   @03,LTUNITID(,@10)                               02S0039 00158000
*    VOLUNTID = LTUNITID;              /*UPDATE VOLUNIT ENTRY        */ 00159000
         STH   @03,VOLUNTID(,VUPTR)                             02S0040 00160000
*    AVUPTR = VOLUNPTR;                /*START AT FIRST VU ENTRY     */ 00161000
         L     AVUPTR,VOLUNPTR(,@10)                            02S0041 00162000
*    DO AFFCTR = ONE TO TOTVOLUN                                02S0042 00163000
*          WHILE(ERRORWD = ZERO);      /*SCAN VOLUNIT FOR VOL AFF    */ 00164000
         LR    AFFCTR,@05                                       02S0042 00165000
         B     @DE00042                                         02S0042 00166000
@DL00042 LTR   ERRORWD,ERRORWD                                  02S0042 00167000
         BNZ   @DC00042                                         02S0042 00168000
*      IF AVUPTR ^= VUPTR &                                     02S0043 00169000
*         AVUPTR ->VOLID = VOLID THEN  /*VOL AFF TO HANDLE           */ 00170000
         CR    AVUPTR,VUPTR                                     02S0043 00171000
         BE    @RF00043                                         02S0043 00172000
         CLC   VOLID(6,AVUPTR),VOLID(VUPTR)                     02S0043 00173000
         BNE   @RF00043                                         02S0043 00174000
*         DO;                                                   02S0044 00175000
*           SRCHSIOT = AVUPTR -> VOLSIOTP;  /*SIOT FOR VUUPDATE      */ 00176000
         L     SRCHSIOT,VOLSIOTP(,AVUPTR)                       02S0045 00177000
*           SRCHVUAD = AVUPTR;         /*VOLUNIT ENTRY FOR VUUPDATE  */ 00178000
         LR    SRCHVUAD,AVUPTR                                  02S0046 00179000
*           CALL VUUPDATE;             /*UPDATE VOLUNIT ENTRIES      */ 00180000
         BAL   @14,VUUPDATE                                     02S0047 00181000
*           AVUPTR -> VOLUNTID = VOLUNTID; /*PROPAGATE UNIT ID       */ 00182000
         MVC   VOLUNTID(2,AVUPTR),VOLUNTID(VUPTR)               02S0048 00183000
*         END;                                                  02S0049 00184000
*      ELSE;                                                    02S0050 00185000
@RF00043 DS    0H                                               02S0051 00186000
*      AVUPTR = AVUPTR +LENGTH(VOLUNTAB); /*NEXT VOLUNIT ENTRY       */ 00187000
         AH    AVUPTR,@CH00356                                  02S0051 00188000
*    END;                                                       02S0052 00189000
         AH    AFFCTR,@CH00045                                  02S0052 00190000
@DE00042 L     @05,@PC00001                                     02S0052 00191000
         L     @05,ALCWAPTR(,@05)                               02S0052 00192000
         C     AFFCTR,TOTVOLUN(,@05)                            02S0052 00193000
         BNH   @DL00042                                         02S0052 00194000
@DC00042 DS    0H                                               02S0053 00195000
*  END;                                                         02S0053 00196000
*          END;                                                 01S0054 00197000
*        ELSE                                                   01S0055 00198000
*          DO;                         /* UPDATE VU AND SIOT         */ 00199000
         B     @RC00031                                         01S0055 00200000
@RF00031 DS    0H                                               01S0056 00201000
*            IF MATCHSW = OFF THEN     /* FIRST TIME                 */ 00202000
         TM    MATCHSW,B'00100000'                              01S0056 00203000
         BNZ   @RF00056                                         01S0056 00204000
*              DO;                     /* UPDATE PRIMARY VU AND SIOT */ 00205000
*                SRCHSIOT = VOLSIOTP;  /* INPUT TO VUUPDATE          */ 00206000
         L     SRCHSIOT,VOLSIOTP(,VUPTR)                        01S0058 00207000
*                SRCHVUAD = VUPTR;     /* INPUT TO VUUPDATE          */ 00208000
         LR    SRCHVUAD,VUPTR                                   01S0059 00209000
*                CALL VUUPDATE;        /* UPDATE VU AND SIOT         */ 00210000
         BAL   @14,VUUPDATE                                     01S0060 00211000
*                LTUNITID = LTUNITID + ONE; /* NEW UNITID            */ 00212000
         L     @10,@PC00001                                     01S0061 00213000
         L     @10,ALCWAPTR(,@10)                               01S0061 00214000
         LA    @07,1                                            01S0061 00215000
         AH    @07,LTUNITID(,@10)                               01S0061 00216000
         STH   @07,LTUNITID(,@10)                               01S0061 00217000
*                VOLUNTID = LTUNITID;  /* UPDATE VU WITH ID          */ 00218000
         STH   @07,VOLUNTID(,VUPTR)                             01S0062 00219000
*                PVTSTGSW=OFF;         /*PRIVATE SEARCH DONE         */ 00220000
*                DEFSRHSW = OFF;       /*INDICATE DEFER SEARCH DONE  */ 00221000
*                MATCHSW = ON;         /* FIRST TIME DONE            */ 00222000
         OI    MATCHSW,B'00100000'                              01S0065 00223000
         NI    PVTSTGSW,B'01101111'                             01S0065 00224000
*              END;                                             01S0066 00225000
*            ELSE;                     /* NULL ELSE                  */ 00226000
@RF00056 DS    0H                                               01S0068 00227000
*            SRCHSIOT = TVUPTR -> VOLSIOTP; /* INPUT TO VUUPDATE     */ 00228000
         L     SRCHSIOT,VOLSIOTP(,TVUPTR)                       01S0068 00229000
*            SRCHVUAD = TVUPTR;        /* INPUT TO VUUPDATE          */ 00230000
         LR    SRCHVUAD,TVUPTR                                  01S0069 00231000
*            CALL VUUPDATE;            /* UPDATE VU AND SIOT         */ 00232000
         BAL   @14,VUUPDATE                                     01S0070 00233000
*            TVUPTR -> VOLUNTID = VOLUNTID; /* PROPOGATE UNITID      */ 00234000
         MVC   VOLUNTID(2,TVUPTR),VOLUNTID(VUPTR)               01S0071 00235000
*          END;                                                 01S0072 00236000
*        TVUPTR = TVUPTR + LENGTH(VOLUNTAB); /* NEXT VU ENTRY        */ 00237000
@RC00031 DS    0H                                               01S0073 00238000
@RF00030 AH    TVUPTR,@CH00356                                  01S0073 00239000
*      END;                                                     01S0074 00240000
         LA    @10,1                                            01S0074 00241000
         AL    @10,TVUCTR                                       01S0074 00242000
@DE00029 ST    @10,TVUCTR                                       01S0074 00243000
         L     @07,@PC00001                                     01S0074 00244000
         L     @07,ALCWAPTR(,@07)                               01S0074 00245000
         C     @10,TOTVOLUN(,@07)                               01S0074 00246000
         BNH   @DL00029                                         01S0074 00247000
@DC00029 DS    0H                                               01S0075 00248000
*    END;                                                       01S0075 00249000
*  VUPTR = VUPTR + LENGTH(VOLUNTAB);   /* NEXT VU ENTRY              */ 00250000
@RF00019 AH    VUPTR,@CH00356                                   01S0076 00251000
*END;                                                           01S0077 00252000
         AH    CNTENTRY,@CH00045                                01S0077 00253000
@DE00018 L     @10,@PC00001                                     01S0077 00254000
         L     @10,ALCWAPTR(,@10)                               01S0077 00255000
         L     @10,TOTVOLUN(,@10)                               01S0077 00256000
         BCTR  @10,0                                            01S0077 00257000
         CR    CNTENTRY,@10                                     01S0077 00258000
         BNH   @DL00018                                         01S0077 00259000
@DC00018 DS    0H                                               01S0078 00260000
*RETURN CODE(ERRORWD);                                          01S0078 00261000
         IC    @02,@OLDKEY                                      01S0078 00262000
         L     @13,4(,@13)                                      01S0078 00263000
         L     @00,@SIZDATD                                     01S0078 00264000
         LR    @01,@11                                          01S0078 00265000
         FSPACE   R,LV=(0),A=(1)                                        00266000
         MODESET KEYADDR=(2)                                            00267000
         LR    @15,@06                                          01S0078 00268000
         L     @14,12(,@13)                                     01S0078 00269000
         LM    @00,@12,20(@13)                                  01S0078 00270000
         BR    @14                                              01S0078 00271000
*/********************************************************************/ 00272000
*/*                                                                  */ 00273000
*/* SEGMENT NAME - VUUPDATE                                          */ 00274000
*/*                                                                  */ 00275000
*/* DESCRIPTIVE NAME - UPDATE VOLUNIT ENTRY FOR VOLUME AFFINITY      */ 00276000
*/*                                                                  */ 00277000
*/* FUNCTION -                                                       */ 00278000
*/*   THE FUNCTION OF THIS SEGMENT IS TO TAKE A VOLUNIT ENTRY THAT   */ 00279000
*/*   HAS VOLUME AFFINITY AND UPDATE IT IN LIGHT OF THE AFFINITY.    */ 00280000
*/*                                                                  */ 00281000
*/*   THE FOLLOWING FUNCTIONS ARE PERFORMED:                         */ 00282000
*/*                                                                  */ 00283000
*/*   1. SET THE FOLLOWING BITS IN THE INPUT VOLUNIT ENTRY:          */ 00284000
*/*                                                                  */ 00285000
*/*      A. TIOT DEVICE ENTRY REQUIRED BIT SET ON                    */ 00286000
*/*      B. NON-SHARABLE BIT SET OFF                                 */ 00287000
*/*      C. VOLUME AFFINITY PROCESSED BIT SET ON                     */ 00288000
*/*                                                                  */ 00289000
*/*   2. IF DEFER MOUNTING WAS NOT SPECIFIED, SET THE VOLUME-MUST-BE-*/ 00290000
*/*      MOUNTED-BY-THE-END-OF-ALLOCATION BIT.                       */ 00291000
*/*                                                                  */ 00292000
*/*   3. IF ANY OTHER VOLUNIT ENTRIES IN THE INPUT SIOT WERE         */ 00293000
*/*      SCHEDULED TO GO ON THE SAME UNIT AS THE VOLUME THAT HAD     */ 00294000
*/*      AFFINITY, INCREMENT THE TOTAL NUMBER OF UNITS IN THE        */ 00295000
*/*      SIOT BY ONE. IF SUCH AN ENTRY IS FOUND SET THE TIOT-DEVICE- */ 00296000
*/*      ENTRY-REQUIRED BIT AND IF DEFER MOUNTING WAS NOT SPECIFIED, */ 00297000
*/*      SET THE VOLUME-MUST-BE-MOUNTED-BY-THE-END-OF-ALLOCATION BIT */ 00298000
*/*      IN THE FIRST SUCH ENTRY.                                    */ 00299000
*/*                                                                  */ 00300000
*/*   4. IF ONE AND ONLY ONE REFERENCE IN THE WHOLE VOLUNIT TABLE    */ 00301000
*/*      REMAINS TO THE UNIT THAT THE INPUT VOLUNIT ENTRY WAS        */ 00302000
*/*      SCHEDULED TO GO ON THEN IT IS MARKED SHARABLE.              */ 00303000
*/*                                                                  */ 00304000
*/*   5. IF ANY VOLUNIT ENTRIES IN THE VOLUNIT TABLE HAVE THE        */ 00305000
*/*      SAME UNITID AS THE INPUT ENTRY, THE FIRST SUCH ENTRY IS     */ 00306000
*/*      MARKED WITH THE TIOT-DEVICE-ENTRY-REQUIRED BIT AND (IF      */ 00307000
*/*      DEFER MOUNTING WAS NOT REQUESTED) BY THE VOLUME-MUST-BE-    */ 00308000
*/*      MOUNTED-BY-THE-END-OF-ALLOCATION BIT.                       */ 00309000
*/*                                                                  */ 00310000
*/*   6. IF THE SEARCH-THE-VOLUNIT-TABLE-FOR-PRIVATE-OR-STORAGE BIT  */ 00311000
*/*      (SEE INPUT DATA) IS ON A SCAN IS MADE OF THE VOLUNIT        */ 00312000
*/*      TABLE. IF ANY VOLUNIT ENTRIES HAVE THE SAME VOLID AS THE    */ 00313000
*/*      INPUT VOLUNIT ENTRY AND ALSO HAVE THE PRIVATE BIT ON,       */ 00314000
*/*      THE MARK-VOLUNIT-ENTRY-PRIVATE BIT (SEE 7)                  */ 00315000
*/*      IS SET ON. IF NO VOLUNIT ENTRIES WITH THE SAME VOLID        */ 00316000
*/*      HAVE THE PRIVATE BIT ON BUT AT LEAST ONE HAS THE STORAGE    */ 00317000
*/*      BIT ON, SET THE MARK-VOLUNIT-ENTRIES-STORAGE BIT (SEE 7) ON.*/ 00318000
*/*                                                                  */ 00319000
*/*   7. IF THE MARK-VOLUNIT-ENTRIES-PRIVATE BIT IS ON, SET THE      */ 00320000
*/*      PRIVATE BIT ON, THE STORAGE BIT OFF AND THE PUBLIC BIT      */ 00321000
*/*      OFF IN THE INPUT VOLUNIT ENTRY. IF THE MARK--PRIVATE BIT    */ 00322000
*/*      IS NOT ON BUT THE MARK-VOLUNIT-ENTRIES-STORAGE BIT IS ON,   */ 00323000
*/*      SET THE STORAGE BIT ON, THE PRIVATE BIT OFF, AND THE        */ 00324000
*/*      PUBLIC BIT OFF IN THE CURRENT VOLUNIT ENTRY.                */ 00325000
*/*                                                                  */ 00326000
*/*   8. IF SEARCH FOR DEFER BIT IS ON, SCAN VOLUNIT TABLE. IF ALL   */ 00327000
*/*      AFFINITY REQUESTS ARE NOT DEFER, INDICATE THAT NONE ARE TO  */ 00328000
*/*      BE DEFER. IF ALL ARE DEFER, TURN OFF NON-SHAREABLE BIT IN   */ 00329000
*/*      VU ENTRY.                                                   */ 00330000
*/*                                                                  */ 00331000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00332000
*/*                                                                  */ 00333000
*/*   PURPOSE - SEE FUNCTION                                         */ 00334000
*/*                                                                  */ 00335000
*/*   INPUT -                                                        */ 00336000
*/*     SRCHSIOT - PTR. TO INPUT SIOT                                */ 00337000
*/*       SIOT -                                                     */ 00338000
*/*         SVOLUNNO - NO. OF VOLUNIT ENTRIES FOR THIS SIOT          */ 00339000
*/*         SVOLUNAD - PTR. TO FIRST VOLUNIT ENTRY FOR THIS SIOT     */ 00340000
*/*         SIOTOTUN - TOTAL NUMBER OF UNITS REQUESTED.              */ 00341000
*/*                                                                  */ 00342000
*/*     SRCHVUAD - PTR. TO INPUT VOLUNIT ENTRY                       */ 00343000
*/*       VOLUNIT ENTRY -                                            */ 00344000
*/*         VOLUNTID - UNIT ID                                       */ 00345000
*/*         VOLDEFER - DEFER MOUNT SPECIFIED                         */ 00346000
*/*         VOLPRV   - PRIVATE REQUEST                               */ 00347000
*/*         VOLSTG   - STORAGE REQUEST                               */ 00348000
*/*     PRVSTGSW - SCAN THE VOLUNIT TABLE FOR PRIVATE OR STORAGE     */ 00349000
*/*     DEFSRHSW - SCAN VOLUNIT TABLE FOR DEFER                      */ 00350000
*/*     PRIVATSW - MARK THE INPUT VOLUNIT ENTRY PRIVATE              */ 00351000
*/*     STRGSW   - MARK THE INPUT VOLUNIT ENTRY STORAGE              */ 00352000
*/*     DEFERSW  - MARK THE INPUT VOLUNIT ENTRY NON-SHAREABLE IF ON  */ 00353000
*/*                MARK THE INPUT VOLUNIT ENTRY NON-DEFER IF OFF     */ 00354000
*/*                                                                  */ 00355000
*/* EXITS -                                                          */ 00356000
*/*                                                                  */ 00357000
*/* 1 CONDITION - NORMAL COMPLETION                                  */ 00358000
*/*   OUTPUT -                                                       */ 00359000
*/*     SIOT -                                                       */ 00360000
*/*       SIOTOTUN - TOTAL NO. OF UNITS REQUIRED                     */ 00361000
*/*                                                                  */ 00362000
*/*     VOLUNIT ENTRY -                                              */ 00363000
*/*       VDEVREQD - TIOT DEVICE ENTRY REQUIRED                      */ 00364000
*/*       VOLNSHR  - NON-SHARABLE BIT                                */ 00365000
*/*       VUPROCED - VOLUME AFFINITY PROCESSED BIT                   */ 00366000
*/*       VOLMNTD  - VOLUME MUST BE MOUNTED BY THE END OF ALLOCATION */ 00367000
*/*       VOLPRV   - PRIVATE REQUEST                                 */ 00368000
*/*       VOLPUB   - PUBLIC REQUEST                                  */ 00369000
*/*       VOLSTG   - STORAGE REQUEST                                 */ 00370000
*/*                                                                  */ 00371000
*/*       PRIVATSW - SEE INPUT DATA                                  */ 00372000
*/*       STRGSW   - SEE INPUT DATA                                  */ 00373000
*/*                                                                  */ 00374000
*/*   RETURN CODE - 0                                                */ 00375000
*/*                                                                  */ 00376000
*/* 2 CONDITION - VOLUME AFFINITY CAUSES REQUEST TO REQUIRE MORE     */ 00377000
*/*     THAN 59 UNITS                                                */ 00378000
*/*                                                                  */ 00379000
*/*   OUTPUT -                                                       */ 00380000
*/*     SIOT -                                                       */ 00381000
*/*       SIOTRSNC - 9 = TOO MANY UNITS REQUIRED                     */ 00382000
*/*                                                                  */ 00383000
*/*   RETURN CODE - 4                                                */ 00384000
*/*                                                                  */ 00385000
*/********************************************************************/ 00386000
*VUUPDATE:                                                      02S0079 00387000
*  PROC;                                                        02S0079 00388000
@EL00001 IC    @02,@OLDKEY                                      02S0079 00389000
         L     @13,4(,@13)                                      02S0079 00390000
@EF00001 L     @00,@SIZDATD                                     02S0079 00391000
         LR    @01,@11                                          02S0079 00392000
         FSPACE   R,LV=(0),A=(1)                                        00393000
         MODESET KEYADDR=(2)                                            00394000
@ER00001 LM    @14,@12,12(@13)                                  02S0079 00395000
         BR    @14                                              02S0079 00396000
VUUPDATE STM   @14,@05,12(@13)                                  02S0079 00397000
         STM   @07,@08,48(@13)                                  02S0079 00398000
         STM   @10,@12,60(@13)                                  02S0079 00399000
*SRCHVUAD -> VDEVREQD = ON;            /*ENTRY REQUIRES A DEVICE     */ 00400000
         OI    VDEVREQD(SRCHVUAD),B'00100000'                   02S0080 00401000
*SRCHVUAD -> VOLNSHR = OFF;            /*VOLUME MUST BE SHAREABLE    */ 00402000
         NI    VOLNSHR(SRCHVUAD),B'11110111'                    02S0081 00403000
*SRCHVUAD -> VUPROCED = ON;            /*INDICATE THAT VOL AFF DONE     00404000
*                                        FOR THIS VU                 */ 00405000
         OI    VUPROCED(SRCHVUAD),B'00010000'                   02S0082 00406000
*IF SRCHVUAD -> VOLDEFER = OFF THEN    /*DEFERED MOUNT?              */ 00407000
         TM    VOLDEFER(SRCHVUAD),B'00000001'                   02S0083 00408000
         BNZ   @RF00083                                         02S0083 00409000
*  SRCHVUAD -> VOLMNTD = ON;           /*NO, SET MUST BE MOUNTED     */ 00410000
         OI    VOLMNTD(SRCHVUAD),B'01000000'                    02S0084 00411000
*UNITIDS1 = OFF;                       /*CLEAR 'MATCH FOUND' SWITCH  */ 00412000
@RF00083 NI    UNITIDS1,B'01111111'                             02S0085 00413000
*TEMPVUAD = SRCHSIOT -> SVOLUNAD;                               02S0086 00414000
         L     TEMPVUAD,SVOLUNAD(,SRCHSIOT)                     02S0086 00415000
*DO VUCTR = ONE TO SRCHSIOT -> SVOLUNNO                         02S0087 00416000
*  WHILE (UNITIDS1 = OFF);             /*SEARCH ALL ENTRIES TILL A      00417000
*                                        MATCH IS FOUND              */ 00418000
         LA    VUCTR,1                                          02S0087 00419000
         B     @DE00087                                         02S0087 00420000
@DL00087 TM    UNITIDS1,B'10000000'                             02S0087 00421000
         BNZ   @DC00087                                         02S0087 00422000
*  IF TEMPVUAD ^= SRCHVUAD THEN        /*DON'T COMPARE INPUT ENTRY   */ 00423000
         CR    TEMPVUAD,SRCHVUAD                                02S0088 00424000
         BE    @RF00088                                         02S0088 00425000
*    DO;                                                        02S0089 00426000
*      IF TEMPVUAD -> VOLUNTID         /*SAME UNITID?                */ 00427000
*          = SRCHVUAD -> VOLUNTID THEN                          02S0090 00428000
         CLC   VOLUNTID(2,TEMPVUAD),VOLUNTID(SRCHVUAD)          02S0090 00429000
         BNE   @RF00090                                         02S0090 00430000
*        DO;                                                    02S0091 00431000
*          UNITIDS1 = ON;              /*SET EXIT CONDITION          */ 00432000
         OI    UNITIDS1,B'10000000'                             02S0092 00433000
*          SHRVUPTR = TEMPVUAD;        /*SAVE VU ENTRY               */ 00434000
         LR    SHRVUPTR,TEMPVUAD                                02S0093 00435000
*          TEMPVUAD -> VDEVREQD = ON;  /*DEVICE REQD                 */ 00436000
         OI    VDEVREQD(TEMPVUAD),B'00100000'                   02S0094 00437000
*          IF SRCHSIOT-> SIOTOTUN < MAXUNIT THEN                02S0095 00438000
         CLI   SIOTOTUN(SRCHSIOT),59                            02S0095 00439000
         BNL   @RF00095                                         02S0095 00440000
*            SRCHSIOT -> SIOTOTUN      /*UPDATE UNIT COUNT           */ 00441000
*              = SRCHSIOT -> SIOTOTUN + ONE;                    02S0096 00442000
         LA    @10,1                                            02S0096 00443000
         SLR   @08,@08                                          02S0096 00444000
         IC    @08,SIOTOTUN(,SRCHSIOT)                          02S0096 00445000
         ALR   @10,@08                                          02S0096 00446000
         STC   @10,SIOTOTUN(,SRCHSIOT)                          02S0096 00447000
*          ELSE                                                 02S0097 00448000
*            DO;                                                02S0097 00449000
         B     @RC00095                                         02S0097 00450000
@RF00095 DS    0H                                               02S0098 00451000
*              ERRORWD = VUUPFAIL;                              02S0098 00452000
         LA    ERRORWD,4                                        02S0098 00453000
*              SRCHSIOT->SIOTRSNC = OVER59U;                    02S0099 00454000
         MVC   SIOTRSNC(2,SRCHSIOT),@CH00080                    02S0099 00455000
*            END;                                               02S0100 00456000
*        END;                                                   02S0101 00457000
@RC00095 DS    0H                                               02S0102 00458000
*    END;                                                       02S0102 00459000
@RF00090 DS    0H                                               02S0103 00460000
*  IF UNITIDS1 = OFF THEN                                       02S0103 00461000
@RF00088 TM    UNITIDS1,B'10000000'                             02S0103 00462000
         BNZ   @RF00103                                         02S0103 00463000
*    TEMPVUAD = TEMPVUAD + LENGTH(VOLUNTAB);/*UPDTE PTR TO NEXT ENTRY*/ 00464000
         AH    TEMPVUAD,@CH00356                                02S0104 00465000
*END;                                                           02S0105 00466000
@RF00103 AH    VUCTR,@CH00045                                   02S0105 00467000
@DE00087 CH    VUCTR,SVOLUNNO(,SRCHSIOT)                        02S0105 00468000
         BNH   @DL00087                                         02S0105 00469000
@DC00087 DS    0H                                               02S0106 00470000
*TEMPVUAD = VOLUNPTR;                  /*FIRST VOLUNIT ENTRY         */ 00471000
         L     @10,@PC00001                                     02S0106 00472000
         L     @10,ALCWAPTR(,@10)                               02S0106 00473000
         L     TEMPVUAD,VOLUNPTR(,@10)                          02S0106 00474000
*UNITIDS1 = OFF;                       /*UNIT ID SW OFF              */ 00475000
*UNITIDS2 = OFF;                       /*MORE THAN ONE UNITID SW OFF */ 00476000
         NI    UNITIDS1,B'00111111'                             02S0108 00477000
*DO VUCTR = ONE TO VOLUNSZE/LENGTH(VOLUNTAB)                    02S0109 00478000
*  WHILE (ERRORWD = ZERO);                                      02S0109 00479000
         LA    VUCTR,1                                          02S0109 00480000
         B     @DE00109                                         02S0109 00481000
@DL00109 LTR   ERRORWD,ERRORWD                                  02S0109 00482000
         BNZ   @DC00109                                         02S0109 00483000
*                                       /*SEARCH ALL VUS UNTIL TWO      00484000
*                                        UNIT MATCHES ARE FOUND      */ 00485000
*    IF PVTSTGSW = ON THEN             /*SEARCH VU FOR PRIVATE  02S0110 00486000
*                                        OR STORAGE WITH SAME VOLID  */ 00487000
         TM    PVTSTGSW,B'00010000'                             02S0110 00488000
         BNO   @RF00110                                         02S0110 00489000
*      DO;                                                      02S0111 00490000
*        IF SRCHVUAD -> VOLID = TEMPVUAD -> VOLID THEN          02S0112 00491000
         CLC   VOLID(6,SRCHVUAD),VOLID(TEMPVUAD)                02S0112 00492000
         BNE   @RF00112                                         02S0112 00493000
*                                      /*VOLID IS THE SAME           */ 00494000
*          IF PRIVATSW = OFF THEN      /*NO PRIVATES YET             */ 00495000
         TM    PRIVATSW,B'00001000'                             02S0113 00496000
         BNZ   @RF00113                                         02S0113 00497000
*            IF TEMPVUAD -> VOLPRV = ON THEN /*PRIVATE FOUND         */ 00498000
         TM    VOLPRV(TEMPVUAD),B'01000000'                     02S0114 00499000
         BNO   @RF00114                                         02S0114 00500000
*              PRIVATSW = ON;          /*MARK VUS PRIVATE            */ 00501000
         OI    PRIVATSW,B'00001000'                             02S0115 00502000
*            ELSE                      /*VU NOT PRIVATE              */ 00503000
*              IF TEMPVUAD -> VOLSTG = ON THEN /*STORAGE REQUEST     */ 00504000
         B     @RC00114                                         02S0116 00505000
@RF00114 TM    VOLSTG(TEMPVUAD),B'00010000'                     02S0116 00506000
         BNO   @RF00116                                         02S0116 00507000
*                STRGSW = ON;          /*MARK VUS STORAGE            */ 00508000
         OI    STRGSW,B'00000100'                               02S0117 00509000
*      END;                                                     02S0118 00510000
@RF00116 DS    0H                                               02S0118 00511000
@RC00114 DS    0H                                               02S0118 00512000
@RF00113 DS    0H                                               02S0118 00513000
@RF00112 DS    0H                                               02S0119 00514000
*    IF DEFERSW = ON THEN              /*REQUEST WITH DEFER FOUND    */ 00515000
@RF00110 TM    DEFERSW,B'01000000'                              02S0119 00516000
         BNO   @RF00119                                         02S0119 00517000
*      IF DEFSRHSW = ON THEN           /*SEARCH FOR DEFER TO BE DONE */ 00518000
         TM    DEFSRHSW,B'10000000'                             02S0120 00519000
         BNO   @RF00120                                         02S0120 00520000
*        DO;                                                    02S0121 00521000
*          IF SRCHVUAD->VOLID = TEMPVUAD->VOLID THEN /*VOLID IS SAME */ 00522000
         CLC   VOLID(6,SRCHVUAD),VOLID(TEMPVUAD)                02S0122 00523000
         BNE   @RF00122                                         02S0122 00524000
*            IF TEMPVUAD->VOLDEFER = OFF THEN /*REQUEST NOT DEFER    */ 00525000
         TM    VOLDEFER(TEMPVUAD),B'00000001'                   02S0123 00526000
         BNZ   @RF00123                                         02S0123 00527000
*              DEFERSW = OFF;          /*INDICATE NON-DEFER REQUEST  */ 00528000
         NI    DEFERSW,B'10111111'                              02S0124 00529000
*            ELSE;                     /*REQUEST IS DEFER            */ 00530000
@RF00123 DS    0H                                               02S0126 00531000
*          ELSE;                       /*VOLID IS NOT THE SAME       */ 00532000
@RF00122 DS    0H                                               02S0127 00533000
*        END;                                                   02S0127 00534000
*      ELSE;                           /*DEFER SEARCH NOT TO BE DONE */ 00535000
@RF00120 DS    0H                                               02S0129 00536000
*    ELSE;                             /*NON-DEFER REQ ALREADY FOUND */ 00537000
@RF00119 DS    0H                                               02S0130 00538000
*    IF TEMPVUAD ^= SRCHVUAD THEN      /*ENTRY MUST BE CHKD          */ 00539000
         CR    TEMPVUAD,SRCHVUAD                                02S0130 00540000
         BE    @RF00130                                         02S0130 00541000
*      DO;                             /*CHECK VU FOR UNITID MATCH   */ 00542000
*        IF TEMPVUAD -> VOLUNTID = SRCHVUAD -> VOLUNTID THEN /*UNIT     00543000
*                                        IDS MATCH                   */ 00544000
         CLC   VOLUNTID(2,TEMPVUAD),VOLUNTID(SRCHVUAD)          02S0132 00545000
         BNE   @RF00132                                         02S0132 00546000
*          IF UNITIDS1 = OFF THEN      /*THIS IS FIRST MATCH         */ 00547000
         TM    UNITIDS1,B'10000000'                             02S0133 00548000
         BNZ   @RF00133                                         02S0133 00549000
*            DO;                                                02S0134 00550000
*              UNITIDS1 = ON;          /*ONE MATCH FOUND             */ 00551000
         OI    UNITIDS1,B'10000000'                             02S0135 00552000
*              SHRVUPTR = TEMPVUAD;    /*SAVE VUENTRY                */ 00553000
         LR    SHRVUPTR,TEMPVUAD                                02S0136 00554000
*              TEMPVUAD -> VDEVREQD = ON; /*NEEDS A DEVICE ENTRY    */  00555000
         OI    VDEVREQD(TEMPVUAD),B'00100000'                   02S0137 00556000
*              IF TEMPVUAD -> VOLDEFER = OFF THEN /*DEFERRED MOUNT?  */ 00557000
         TM    VOLDEFER(TEMPVUAD),B'00000001'                   02S0138 00558000
         BNZ   @RF00138                                         02S0138 00559000
*                TEMPVUAD -> VOLMNTD = ON; /*SET MUST BE MOUNTED     */ 00560000
         OI    VOLMNTD(TEMPVUAD),B'01000000'                    02S0139 00561000
*            END;                                               02S0140 00562000
*          ELSE                        /*THIS IS SECOND MATCH        */ 00563000
*            UNITIDS2 = ON;            /*SET EXIT SWITCH             */ 00564000
         B     @RC00133                                         02S0141 00565000
@RF00133 OI    UNITIDS2,B'01000000'                             02S0141 00566000
*      END;                                                     02S0142 00567000
@RC00133 DS    0H                                               02S0142 00568000
@RF00132 DS    0H                                               02S0143 00569000
*    TEMPVUAD = TEMPVUAD + LENGTH(VOLUNTAB);   /*NEXT VU ENTRY       */ 00570000
@RF00130 AH    TEMPVUAD,@CH00356                                02S0143 00571000
*END;                                                           02S0144 00572000
         AH    VUCTR,@CH00045                                   02S0144 00573000
@DE00109 L     @10,@PC00001                                     02S0144 00574000
         L     @10,ALCWAPTR(,@10)                               02S0144 00575000
         L     @00,VOLUNSZE(,@10)                               02S0144 00576000
         SRDA  @00,32                                           02S0144 00577000
         D     @00,@CF00356                                     02S0144 00578000
         CR    VUCTR,@01                                        02S0144 00579000
         BNH   @DL00109                                         02S0144 00580000
@DC00109 DS    0H                                               02S0145 00581000
*IF UNITIDS1 = ON & UNITIDS2 = OFF THEN /*ONE AND ONLY ONE MATCH     */ 00582000
         TM    UNITIDS1,B'10000000'                             02S0145 00583000
         BNO   @RF00145                                         02S0145 00584000
         TM    UNITIDS2,B'01000000'                             02S0145 00585000
         BNZ   @RF00145                                         02S0145 00586000
*  SHRVUPTR -> VOLNSHR = OFF;          /*UNIT IS NOW SHARABLE        */ 00587000
         NI    VOLNSHR(SHRVUPTR),B'11110111'                    02S0146 00588000
*IF PRIVATSW = ON THEN                 /*VU MUST BE MADE PRIVATE     */ 00589000
@RF00145 TM    PRIVATSW,B'00001000'                             02S0147 00590000
         BNO   @RF00147                                         02S0147 00591000
*  DO;                                 /*UPDATE VU STATUS BITS       */ 00592000
*    SRCHVUAD -> VOLPRV = ON;          /*MARK VU PRIVATE             */ 00593000
*    SRCHVUAD -> VOLSTG = OFF;         /*TURN OFF STORAGE            */ 00594000
*    SRCHVUAD -> VOLPUB = OFF;         /*TURN OFF PUBLIC             */ 00595000
         OI    VOLPRV(SRCHVUAD),B'01000000'                     02S0151 00596000
         NI    VOLSTG(SRCHVUAD),B'01101111'                     02S0151 00597000
*  END;                                                         02S0152 00598000
*ELSE                                                           02S0153 00599000
*  IF STRGSW = ON THEN                 /*VU MUST BE MADE STORAGE     */ 00600000
         B     @RC00147                                         02S0153 00601000
@RF00147 TM    STRGSW,B'00000100'                               02S0153 00602000
         BNO   @RF00153                                         02S0153 00603000
*    DO;                               /*UPDATE VU STATUS BITS       */ 00604000
*      SRCHVUAD -> VOLSTG = ON;        /*MARK VU STORAGE             */ 00605000
*      SRCHVUAD -> VOLPUB = OFF;       /*TURN OFF PUBLIC             */ 00606000
         OI    VOLSTG(SRCHVUAD),B'00010000'                     02S0156 00607000
         NI    VOLPUB(SRCHVUAD),B'01111111'                     02S0156 00608000
*    END;                                                       02S0157 00609000
*IF DEFERSW = OFF THEN                 /*ONE NON-DEFER REQ FOUND     */ 00610000
@RF00153 DS    0H                                               02S0158 00611000
@RC00147 TM    DEFERSW,B'01000000'                              02S0158 00612000
         BNZ   @RF00158                                         02S0158 00613000
*  DO;                                 /*MAKE THIS VOL AFF NONDEFER  */ 00614000
*    SRCHVUAD->VOLDEFER = OFF;         /*TURN OFF DEFER BIT          */ 00615000
         NI    VOLDEFER(SRCHVUAD),B'11111110'                   02S0160 00616000
*    SRCHVUAD->VOLMNTD = ON;           /*INDICATE VOL MUST BE MOUNTED*/ 00617000
         OI    VOLMNTD(SRCHVUAD),B'01000000'                    02S0161 00618000
*  END;                                                         02S0162 00619000
*ELSE                                  /*ALL AFF REQS DEFER          */ 00620000
*  SRCHVUAD->VOLNSHR = ON;             /*INDICATE VOL NOT SHAREABLE  */ 00621000
         B     @RC00158                                         02S0163 00622000
@RF00158 OI    VOLNSHR(SRCHVUAD),B'00001000'                    02S0163 00623000
*END VUUPDATE;                         /*RETURN TO CALLER            */ 00624000
@EL00002 DS    0H                                               02S0164 00625000
@EF00002 DS    0H                                               02S0164 00626000
@ER00002 LM    @14,@05,12(@13)                                  02S0164 00627000
         LM    @07,@08,48(@13)                                  02S0164 00628000
         LM    @10,@12,60(@13)                                  02S0164 00629000
         BR    @14                                              02S0164 00630000
*END IEFAB426                                                   01S0165 00631000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00632000
*/*%INCLUDE SYSLIB  (A426SPEC)                                        * 00633000
*/*%INCLUDE SYSLIB  (A426DATA)                                        * 00634000
*/*%INCLUDE SYSLIB  (VUUPDATA)                                        * 00635000
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        * 00636000
*/*%INCLUDE SYSLIB  (IEFZB423)                                        * 00637000
*/*%INCLUDE SYSLIB  (IEFZB425)                                        * 00638000
*/*%INCLUDE SYSLIB  (TAPEAFF )                                        * 00639000
*/*%INCLUDE SYSLIB  (TAFFSPEC)                                        * 00640000
*/*%INCLUDE SYSLIB  (VUUPDATE)                                        * 00641000
*/*%INCLUDE SYSLIB  (VUUPSPEC)                                        * 00642000
*;                                                              01S0165 00643000
@DATA    DS    0H                                                       00644000
@CH00045 DC    H'1'                                                     00645000
@CH00080 DC    H'9'                                                     00646000
@DATD    DSECT                                                          00647000
         DS    0F                                                       00648000
@SA00001 DS    18F                                                      00649000
@PC00001 DS    1F                                                       00650000
IEFAB426 CSECT                                                          00651000
         DS    0F                                                       00652000
@CF00356 DC    F'28'                                                    00653000
@CH00356 EQU   @CF00356+2                                               00654000
@DATD    DSECT                                                          00655000
         DS    0D                                                       00656000
TVUCTR   DS    F                                                        00657000
SIOTPTR  DS    A                                                        00658000
AVUCTR   DS    F                                                        00659000
TPTR     DS    A                                                        00660000
AFFVBITS DS    BL1                                                      00661000
         ORG   AFFVBITS                                                 00662000
DEFSRHSW DS    BL1                                                      00663000
DEFERSW  EQU   AFFVBITS+0                                               00664000
MATCHSW  EQU   AFFVBITS+0                                               00665000
PVTSTGSW EQU   AFFVBITS+0                                               00666000
PRIVATSW EQU   AFFVBITS+0                                               00667000
STRGSW   EQU   AFFVBITS+0                                               00668000
TAPESW   EQU   AFFVBITS+0                                               00669000
@NM00001 EQU   AFFVBITS+0                                               00670000
         ORG   AFFVBITS+1                                               00671000
VUUPBITS DS    BL1                                                      00672000
         ORG   VUUPBITS                                                 00673000
UNITIDS1 DS    BL1                                                      00674000
UNITIDS2 EQU   VUUPBITS+0                                               00675000
@NM00002 EQU   VUUPBITS+0                                               00676000
         ORG   VUUPBITS+1                                               00677000
@OLDKEY  DS    AL1                                                      00678000
IEFAB426 CSECT                                                          00679000
         DS    0F                                                       00680000
@SIZDATD DC    AL1(230)                                                 00681000
         DC    AL3(@ENDDATD-@DATD)                                      00682000
         DS    0D                                                       00683000
IEFAB426 CSECT                                                          00684000
         DS   0H                                                        00685000
A426PTCH DC ((@DATA-@PSTART)/20)X'00'                                   00686000
@DATD    DSECT                                                          00687000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00688000
@ENDDATD EQU   *                                                        00689000
IEFAB426 CSECT                                                          00690000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00691000
@01      EQU   01                                                       00692000
@02      EQU   02                                                       00693000
@03      EQU   03                                                       00694000
@04      EQU   04                                                       00695000
@05      EQU   05                                                       00696000
@06      EQU   06                                                       00697000
@07      EQU   07                                                       00698000
@08      EQU   08                                                       00699000
@09      EQU   09                                                       00700000
@10      EQU   10                                                       00701000
@11      EQU   11                                                       00702000
@12      EQU   12                                                       00703000
@13      EQU   13                                                       00704000
@14      EQU   14                                                       00705000
@15      EQU   15                                                       00706000
VUCTR    EQU   @04                                                      00707000
TEMPVUAD EQU   @02                                                      00708000
SHRVUPTR EQU   @09                                                      00709000
ERRORWD  EQU   @06                                                      00710000
CNTENTRY EQU   @08                                                      00711000
AFFCTR   EQU   @10                                                      00712000
VUPTR    EQU   @02                                                      00713000
TVUPTR   EQU   @04                                                      00714000
SRCHVUAD EQU   @03                                                      00715000
SRCHSIOT EQU   @05                                                      00716000
AVUPTR   EQU   @07                                                      00717000
INDMSIOT EQU   0                                                        00718000
SCTUSADD EQU   INDMSIOT+20                                              00719000
SIOTOTUN EQU   INDMSIOT+39                                              00720000
SIOTBYT1 EQU   INDMSIOT+43                                              00721000
SIOTBYT3 EQU   INDMSIOT+46                                              00722000
SIOTTSTC EQU   INDMSIOT+47                                              00723000
SIOTBYT0 EQU   INDMSIOT+52                                              00724000
SIOTFUDA EQU   SIOTBYT0                                                 00725000
SCTSDISP EQU   INDMSIOT+55                                              00726000
SCTSBYT1 EQU   INDMSIOT+56                                              00727000
SCTSBYT2 EQU   INDMSIOT+57                                              00728000
SCTSBYT3 EQU   INDMSIOT+58                                              00729000
SCTSBYT4 EQU   INDMSIOT+59                                              00730000
SCTUTYPE EQU   INDMSIOT+60                                              00731000
SIOTDEVT EQU   SCTUTYPE                                                 00732000
SIOUBYT3 EQU   SIOTDEVT+2                                               00733000
SIOTALTD EQU   INDMSIOT+92                                              00734000
SIOTBYT2 EQU   INDMSIOT+103                                             00735000
SIOTRSNC EQU   INDMSIOT+130                                             00736000
SVOLUNAD EQU   INDMSIOT+140                                             00737000
SVOLUNNO EQU   INDMSIOT+168                                             00738000
VOLUNTAB EQU   0                                                        00739000
VOLID    EQU   VOLUNTAB                                                 00740000
VOLSTAT  EQU   VOLUNTAB+6                                               00741000
VOLSTATA EQU   VOLSTAT                                                  00742000
VOLPUB   EQU   VOLSTATA                                                 00743000
VOLPRV   EQU   VOLSTATA                                                 00744000
VOLSTG   EQU   VOLSTATA                                                 00745000
VOLNSHR  EQU   VOLSTATA                                                 00746000
VOLDEFER EQU   VOLSTATA                                                 00747000
VOLSTATB EQU   VOLSTAT+1                                                00748000
VOLMNTD  EQU   VOLSTATB                                                 00749000
VDEVREQD EQU   VOLSTATB                                                 00750000
VUPROCED EQU   VOLSTATB                                                 00751000
VOLSTATC EQU   VOLSTAT+2                                                00752000
VOLCOREQ EQU   VOLSTATC                                                 00753000
VOLDAREQ EQU   VOLSTATC                                                 00754000
VOLGRREQ EQU   VOLSTATC                                                 00755000
VOLURREQ EQU   VOLSTATC                                                 00756000
VOLSTATD EQU   VOLSTAT+3                                                00757000
VOLUNTID EQU   VOLUNTAB+10                                              00758000
VOLSIOTP EQU   VOLUNTAB+16                                              00759000
ALCWA    EQU   0                                                        00760000
CNTABLE  EQU   ALCWA+28                                                 00761000
TOTVOLUN EQU   CNTABLE+44                                               00762000
LTUNITID EQU   ALCWA+76                                                 00763000
VOLUNPTR EQU   ALCWA+80                                                 00764000
VOLUNSZE EQU   ALCWA+84                                                 00765000
INDICATE EQU   ALCWA+112                                                00766000
@NM00024 EQU   ALCWA+113                                                00767000
TIOTHDRP EQU   ALCWA+120                                                00768000
NAMES    EQU   0                                                        00769000
ALCWAPTR EQU   0                                                        00770000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00771000
ALCPROCN EQU   NAMES+16                                                 00772000
ALCSTEPN EQU   NAMES+8                                                  00773000
ALCJOBN  EQU   NAMES                                                    00774000
EXITPRMP EQU   ALCWA+144                                                00775000
CANCELP  EQU   ALCWA+140                                                00776000
WORK3MP  EQU   ALCWA+136                                                00777000
WMASK2P  EQU   ALCWA+132                                                00778000
WMASKPTR EQU   ALCWA+128                                                00779000
LGENLOCK EQU   ALCWA+124                                                00780000
TCBP     EQU   ALCWA+116                                                00781000
ALCWASID EQU   ALCWA+114                                                00782000
@NM00025 EQU   @NM00024                                                 00783000
NODEVERR EQU   @NM00024                                                 00784000
NEEDRCVY EQU   @NM00024                                                 00785000
ALCWAREC EQU   @NM00024                                                 00786000
WAITIGEN EQU   @NM00024                                                 00787000
UNITRECS EQU   @NM00024                                                 00788000
ALCWADUL EQU   INDICATE                                                 00789000
ALCWISAM EQU   INDICATE                                                 00790000
DSSUNIT  EQU   INDICATE                                                 00791000
DSSTAPE  EQU   INDICATE                                                 00792000
PRIVASUM EQU   INDICATE                                                 00793000
INDREQU  EQU   INDICATE                                                 00794000
INDRETRY EQU   INDICATE                                                 00795000
INDWAIT  EQU   INDICATE                                                 00796000
QMGRRBP  EQU   ALCWA+108                                                00797000
RIMTABCT EQU   ALCWA+104                                                00798000
RIMTABLN EQU   ALCWA+100                                                00799000
RIMTABP  EQU   ALCWA+96                                                 00800000
ALGTABSZ EQU   ALCWA+92                                                 00801000
ALGTABP  EQU   ALCWA+88                                                 00802000
@NM00023 EQU   ALCWA+78                                                 00803000
NUMREQS  EQU   CNTABLE+40                                               00804000
TOTREQS  EQU   CNTABLE+36                                               00805000
OTHEREQS EQU   CNTABLE+32                                               00806000
SUBSREQS EQU   CNTABLE+28                                               00807000
STRGREQS EQU   CNTABLE+24                                               00808000
PUBLREQS EQU   CNTABLE+20                                               00809000
PVTNREQS EQU   CNTABLE+16                                               00810000
SPECREQS EQU   CNTABLE+12                                               00811000
TPREQS   EQU   CNTABLE+8                                                00812000
VAMREQS  EQU   CNTABLE+4                                                00813000
DMYREQS  EQU   CNTABLE                                                  00814000
EDTABPTR EQU   ALCWA+24                                                 00815000
FAILRSCP EQU   ALCWA+20                                                 00816000
IOSLUTP  EQU   ALCWA+16                                                 00817000
JSCBPTR  EQU   ALCWA+12                                                 00818000
SIOT1P   EQU   ALCWA+8                                                  00819000
FMAPPTR  EQU   ALCWA+4                                                  00820000
WASIZE   EQU   ALCWA                                                    00821000
VUGRID   EQU   VOLUNTAB+24                                              00822000
VUUCBP   EQU   VOLUNTAB+20                                              00823000
VOLALGTP EQU   VOLUNTAB+12                                              00824000
VURCVYPR EQU   VOLSTATD                                                 00825000
VUVLUNIQ EQU   VOLSTATD                                                 00826000
VUDMUNIQ EQU   VOLSTATD                                                 00827000
VUUNALSW EQU   VOLSTATD                                                 00828000
VUDMNDAL EQU   VOLSTATD                                                 00829000
VUDMNDOF EQU   VOLSTATD                                                 00830000
VUREALOC EQU   VOLSTATD                                                 00831000
VUMUGDON EQU   VOLSTATD                                                 00832000
@NM00022 EQU   VOLSTATC                                                 00833000
@NM00021 EQU   VOLSTATC                                                 00834000
@NM00020 EQU   VOLSTATC                                                 00835000
VOLTAREQ EQU   VOLSTATC                                                 00836000
VUAFFWRK EQU   VOLSTATB                                                 00837000
VUVINELG EQU   VOLSTATB                                                 00838000
VUDADSME EQU   VOLSTATB                                                 00839000
VUDNALOC EQU   VOLSTATB                                                 00840000
VOLALOC  EQU   VOLSTATB                                                 00841000
VUDADSM  EQU   VOLSTATA                                                 00842000
VOLRESVE EQU   VOLSTATA                                                 00843000
VOLSPEC  EQU   VOLSTATA                                                 00844000
SIODDSNL EQU   INDMSIOT+173                                             00845000
SIOVDSNL EQU   INDMSIOT+172                                             00846000
SIOVDSNT EQU   INDMSIOT+170                                             00847000
SIOTVMVP EQU   INDMSIOT+164                                             00848000
SIOTJFX  EQU   INDMSIOT+160                                             00849000
SJFCBPTR EQU   INDMSIOT+156                                             00850000
SIOTNPTR EQU   INDMSIOT+152                                             00851000
SIOTETIO EQU   INDMSIOT+148                                             00852000
SIOTATE  EQU   INDMSIOT+144                                             00853000
SIOTEDLP EQU   INDMSIOT+136                                             00854000
SIOTEDLS EQU   INDMSIOT+132                                             00855000
SCTANAME EQU   INDMSIOT+122                                             00856000
@NM00019 EQU   INDMSIOT+108                                             00857000
SIOTSSNM EQU   INDMSIOT+104                                             00858000
SIODDQCR EQU   SIOTBYT2                                                 00859000
SIOVDQCR EQU   SIOTBYT2                                                 00860000
SIOTCVOL EQU   SIOTBYT2                                                 00861000
SIOTCNEW EQU   SIOTBYT2                                                 00862000
SIOTCALC EQU   SIOTBYT2                                                 00863000
SIOTGALL EQU   SIOTBYT2                                                 00864000
SIOTDSPD EQU   SIOTBYT2                                                 00865000
SIOTDMND EQU   SIOTBYT2                                                 00866000
SIOTOPUC EQU   INDMSIOT+99                                              00867000
SIOTOUTR EQU   INDMSIOT+97                                              00868000
SIOTOUTC EQU   INDMSIOT+96                                              00869000
@NM00018 EQU   INDMSIOT+93                                              00870000
SIOTAUNC EQU   SIOTALTD                                                 00871000
SIOTACAT EQU   SIOTALTD                                                 00872000
SIOTADEL EQU   SIOTALTD                                                 00873000
SIOTAKEP EQU   SIOTALTD                                                 00874000
SIOTNPRV EQU   SIOTALTD                                                 00875000
SIOJCATS EQU   SIOTALTD                                                 00876000
@NM00017 EQU   SIOTALTD                                                 00877000
@NM00016 EQU   SIOTALTD                                                 00878000
@NM00015 EQU   INDMSIOT+91                                              00879000
SIOTNDSB EQU   INDMSIOT+88                                              00880000
@NM00014 EQU   INDMSIOT+84                                              00881000
SIOTDPCD EQU   INDMSIOT+82                                              00882000
@NM00013 EQU   INDMSIOT+81                                              00883000
SCTOUTPN EQU   INDMSIOT+80                                              00884000
SCTOUTNO EQU   INDMSIOT+76                                              00885000
SCTOUTNM EQU   INDMSIOT+68                                              00886000
SIOUCBAD EQU   SCTUTYPE+5                                               00887000
SIOUCNVT EQU   SCTUTYPE+4                                               00888000
SIOUBYT4 EQU   SIOTDEVT+3                                               00889000
@NM00012 EQU   SIOUBYT3                                                 00890000
SIO3UREC EQU   SIOUBYT3                                                 00891000
SIO3DISP EQU   SIOUBYT3                                                 00892000
SIO3DACC EQU   SIOUBYT3                                                 00893000
SIO3COMM EQU   SIOUBYT3                                                 00894000
SIO3TAPE EQU   SIOUBYT3                                                 00895000
SIOUBYT2 EQU   SIOTDEVT+1                                               00896000
SIOUBYT1 EQU   SIOTDEVT                                                 00897000
SIOTOMN  EQU   SCTSBYT4                                                 00898000
SIOTIPDI EQU   SCTSBYT4                                                 00899000
SIOTVAFF EQU   SCTSBYT4                                                 00900000
SIOTSTEP EQU   SCTSBYT4                                                 00901000
SIOTASCI EQU   SCTSBYT4                                                 00902000
@NM00011 EQU   SCTSBYT4                                                 00903000
SIOTGDGA EQU   SCTSBYT4                                                 00904000
SCTSGDGS EQU   SCTSBYT4                                                 00905000
SCTSOLD  EQU   SCTSBYT3                                                 00906000
SCTSMOD  EQU   SCTSBYT3                                                 00907000
SCTSNEW  EQU   SCTSBYT3                                                 00908000
SCTSYSOU EQU   SCTSBYT3                                                 00909000
SCTVREF  EQU   SCTSBYT3                                                 00910000
@NM00010 EQU   SCTSBYT3                                                 00911000
SCTSYSNE EQU   SCTSBYT3                                                 00912000
SCTDSNRF EQU   SCTSBYT3                                                 00913000
SCTRECVD EQU   SCTSBYT2                                                 00914000
SCTDEFER EQU   SCTSBYT2                                                 00915000
SCTLABEL EQU   SCTSBYT2                                                 00916000
SCTUNLBD EQU   SCTSBYT2                                                 00917000
SCTJOBLB EQU   SCTSBYT2                                                 00918000
SCTVOLAF EQU   SCTSBYT2                                                 00919000
SIOTCATL EQU   SCTSBYT2                                                 00920000
SIOCLUNL EQU   SCTSBYT2                                                 00921000
SIOTJSCT EQU   SCTSBYT1                                                 00922000
SCTUNAFF EQU   SCTSBYT1                                                 00923000
SCTPARLM EQU   SCTSBYT1                                                 00924000
SIOTQDSN EQU   SCTSBYT1                                                 00925000
SIOTGDSN EQU   SCTSBYT1                                                 00926000
SIOTCCAT EQU   SCTSBYT1                                                 00927000
SCTSYSIN EQU   SCTSBYT1                                                 00928000
SCTDUMMY EQU   SCTSBYT1                                                 00929000
SIOTUNCT EQU   SCTSDISP                                                 00930000
SIOTCTLG EQU   SCTSDISP                                                 00931000
SIOTDLET EQU   SCTSDISP                                                 00932000
SIOTKEEP EQU   SCTSDISP                                                 00933000
SIOTPASS EQU   SCTSDISP                                                 00934000
SIOTPRIV EQU   SCTSDISP                                                 00935000
S3400DSP EQU   SCTSDISP                                                 00936000
@NM00009 EQU   SCTSDISP                                                 00937000
SIOTVLCT EQU   INDMSIOT+54                                              00938000
SCTNMBUT EQU   INDMSIOT+53                                              00939000
SIOTRTRY EQU   SIOTBYT0                                                 00940000
SIOTPUPV EQU   SIOTBYT0                                                 00941000
SIOTNOPV EQU   SIOTBYT0                                                 00942000
SIOTGIGN EQU   SIOTBYT0                                                 00943000
SPVTAMSG EQU   SIOTBYT0                                                 00944000
SIOTDYAL EQU   SIOTBYT0                                                 00945000
SIOTSSDS EQU   SIOTBYT0                                                 00946000
SIOTGIID EQU   INDMSIOT+50                                              00947000
SCTVOLCT EQU   INDMSIOT+49                                              00948000
SCTSPOOL EQU   INDMSIOT+48                                              00949000
SIOTQNAM EQU   SIOTTSTC                                                 00950000
@NM00008 EQU   SIOTTSTC                                                 00951000
SIOTTERM EQU   SIOTTSTC                                                 00952000
@NM00007 EQU   SIOTTSTC                                                 00953000
@NM00006 EQU   SIOTBYT3                                                 00954000
SIOTJES3 EQU   SIOTBYT3                                                 00955000
SIOCDEVT EQU   SIOTBYT3                                                 00956000
SIOALIAS EQU   SIOTBYT3                                                 00957000
SCTDDINO EQU   INDMSIOT+44                                              00958000
SIOTDDNT EQU   SIOTBYT1                                                 00959000
SIOTALCD EQU   SIOTBYT1                                                 00960000
SIODADSM EQU   SIOTBYT1                                                 00961000
SIOTDADR EQU   SIOTBYT1                                                 00962000
SIODUNAL EQU   SIOTBYT1                                                 00963000
SIOVAMDS EQU   SIOTBYT1                                                 00964000
SIOTHOLD EQU   SIOTBYT1                                                 00965000
SIOTOCKP EQU   SIOTBYT1                                                 00966000
SIOPSCNT EQU   INDMSIOT+42                                              00967000
SIOTREFN EQU   INDMSIOT+40                                              00968000
SIOTVRSB EQU   INDMSIOT+36                                              00969000
@NM00005 EQU   INDMSIOT+35                                              00970000
SCTPJFCB EQU   INDMSIOT+32                                              00971000
@NM00004 EQU   INDMSIOT+31                                              00972000
SCTPSIOT EQU   INDMSIOT+28                                              00973000
SIOTAFID EQU   INDMSIOT+26                                              00974000
@NM00003 EQU   INDMSIOT+24                                              00975000
SIODSNTE EQU   INDMSIOT+22                                              00976000
SIOTUNAF EQU   SCTUSADD                                                 00977000
SIOTDEST EQU   INDMSIOT+12                                              00978000
SCTDDNAM EQU   INDMSIOT+4                                               00979000
SIOTTYPE EQU   INDMSIOT+3                                               00980000
SIOTDSKA EQU   INDMSIOT                                                 00981000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00982000
@RF00033 EQU   @RC00031                                                 00983000
@RF00138 EQU   @RC00133                                                 00984000
@RC00158 EQU   @EL00002                                                 00985000
@ENDDATA EQU   *                                                        00986000
         END   IEFAB426,(C'PLS0025',0603,74166)                         00987000
