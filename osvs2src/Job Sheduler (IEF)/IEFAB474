         TITLE 'IEFAB474 - PROCESS MULTI-UNIT/GEN REQS                 *00001000
                        '                                               00002000
IEFAB474 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(24)                                          01S0001 00007000
         DC    C'IEFAB474 76352  UZ08101 '                      01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         MODESET EXTKEY=SCHED,SAVEKEY=(2)                               00015000
         GSPACE   R,LV=(0)                                              00016000
         LR    @11,@01                                          01S0001 00017000
         USING @DATD,@11                                        01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         STC   @02,@OLDKEY                                      01S0001 00020000
         MODESET KEYADDR=(2)                                            00021000
         LM    @00,@02,20(@13)                                  01S0001 00022000
         ST    @11,8(,@13)                                      01S0001 00023000
         LR    @13,@11                                          01S0001 00024000
         MODESET EXTKEY=ZERO                                            00025000
         MVC   @PC00001(8),0(@01)                               01S0001 00026000
         MODESET EXTKEY=SCHED                                           00027000
*                                        ON ALG GROUP LIST ENTRIES   */ 00028000
*RTNCODE = SUCCESS;                    /*INITIALIZE RETURN CODE TO 0 */ 00029000
         SLR   RTNCODE,RTNCODE                                  01S0027 00030000
*SIOTPTR = SIOT1P;                     /*POINT TO THE FIRST SIOT     */ 00031000
         L     @10,@PC00001                                     01S0028 00032000
         L     @10,ALCWAPTR(,@10)                               01S0028 00033000
         L     SIOTPTR,SIOT1P(,@10)                             01S0028 00034000
*DO WHILE (SIOTPTR^=ZERO & RTNCODE=SUCCESS); /*SCAN ALL THE SIOTS    */ 00035000
         B     @DE00029                                         01S0029 00036000
@DL00029 DS    0H                                               01S0030 00037000
*  IF SIOTALCD = OFF                   /*IS SIOT UNALLOCATED, ..     */ 00038000
*      & SVOLUNAD->VUMUGDON = OFF      /*..NOT YET PROCESSED, ..     */ 00039000
*      & SIOTAFID ^= ZERO THEN         /*..AND PART OF A MULTI-U/G ? */ 00040000
         TM    SIOTALCD(SIOTPTR),B'00000010'                    01S0030 00041000
         BNZ   @RF00030                                         01S0030 00042000
         L     @10,SVOLUNAD(,SIOTPTR)                           01S0030 00043000
         TM    VUMUGDON(@10),B'10000000'                        01S0030 00044000
         BNZ   @RF00030                                         01S0030 00045000
         SLR   @10,@10                                          01S0030 00046000
         CH    @10,SIOTAFID(,SIOTPTR)                           01S0030 00047000
         BE    @RF00030                                         01S0030 00048000
*    DO;                               /*YES, PROCESS                */ 00049000
*      CANSOLVE = ON;                  /*ASSUME 1-GEN SOLUTION EXISTS*/ 00050000
*      SOLVED = ON;                    /*ASSUME 1-GEN SOLUTION FOUND */ 00051000
         OI    CANSOLVE,B'10010000'                             01S0033 00052000
*      GENIDALC = ZERO;                /*ZERO SAVE AREA FOR GEN ID   */ 00053000
         ST    @10,GENIDALC                                     01S0034 00054000
*      RFY INDMSIOT BASED(SAFIDPTR);                            01S0035 00055000
*      SAFIDPTR = SIOTPTR;             /*POINT TO SIOT BEING PROCESSD*/ 00056000
         ST    SIOTPTR,SAFIDPTR                                 01S0036 00057000
*      DO WHILE  (SAFIDPTR ^= ZERO     /*SCAN THE REST OF SIOT CHAIN */ 00058000
*          & CANSOLVE = ON);           /*AS LONG AS A SOLUTION EXISTS*/ 00059000
         B     @DE00037                                         01S0037 00060000
@DL00037 DS    0H                                               01S0038 00061000
*        IF SIOTALCD = OFF             /*IS SIOT UNALLOCATED ..      */ 00062000
*            & SIOTAFID=SIOTPTR->SIOTAFID THEN/*AND PART OF SAME MUG?*/ 00063000
         L     @10,SAFIDPTR                                     01S0038 00064000
         TM    SIOTALCD(@10),B'00000010'                        01S0038 00065000
         BNZ   @RF00038                                         01S0038 00066000
         CLC   SIOTAFID(2,@10),SIOTAFID(SIOTPTR)                01S0038 00067000
         BNE   @RF00038                                         01S0038 00068000
*          DO;                         /*YES, PROCESS                */ 00069000
*            SVOLUNAD->VUMUGDON = ON;  /*INDICATE SIOT IS PROCESSED  */ 00070000
         L     @10,SVOLUNAD(,@10)                               01S0040 00071000
         OI    VUMUGDON(@10),B'10000000'                        01S0040 00072000
*/********************************************************************/ 00073000
*/*                                                                  */ 00074000
*/* SEGMENT NAME - HOWALGC                                           */ 00075000
*/*                                                                  */ 00076000
*/* DESCRIPTIVE NAME - DETERMINE HOW THE ALG COVERED A SIOT          */ 00077000
*/*                                                                  */ 00078000
*/* FUNCTION -                                                       */ 00079000
*/*     THIS CODE DETERMINES IF THE ALGORITHM COVERED ALL THE        */ 00080000
*/*     DEVICE REQUIREMENTS FOR A SIOT EXCEPT FOR ITS SCRATCH        */ 00081000
*/*     VOLUME REQUESTS. IF ALL THE DEVICE REQUIREMENTS WERE         */ 00082000
*/*     COVERED, THIS CODE ALSO DETERMINES IF THEY WERE ALL          */ 00083000
*/*     COVERED BY THE SAME GENERIC DEVICE TYPE AND, IF SO,          */ 00084000
*/*     WHETHER THIS DEVICE TYPE MATCHES THE DEVICE TYPE OF ANY      */ 00085000
*/*     UNITS WHICH HAVE ALREADY BEEN ASSIGNED TO SIOTS WITH THE     */ 00086000
*/*     SAME SIOTAFID.                                               */ 00087000
*/*                                                                  */ 00088000
*/*   OPERATION -                                                    */ 00089000
*/*       THIS ROUTINE DETERMINES WHETHER EACH OF THE SIOT'S         */ 00090000
*/*       VOLUNIT ENTRIES WERE COVERED BY THE ALGORITHM BY SCANNING  */ 00091000
*/*       THE GROUP LIST ENTRIES ASSOCIATED WITH EACH OF THE VOLUNIT */ 00092000
*/*       ENTRIES.                                                   */ 00093000
*/*       IF A GROUP WAS PICKED BY THE ALGORITHM FOR A PARTICULAR    */ 00094000
*/*       VOLUNIT ENTRY, THE EDL IS SCANNED TO DETERMINE THE         */ 00095000
*/*       DEVICE TYPE OF THE GROUP.                                  */ 00096000
*/*                                                                  */ 00097000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00098000
*/*                                                                  */ 00099000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00100000
*/*                                                                  */ 00101000
*/*   INPUT -                                                        */ 00102000
*/*     SAFIDPTR - PTR TO THE SIOT TO BE PROCESSED                   */ 00103000
*/*     GENIDALC - THE DEVICE TYPE OF ANY OTHER GROUPS ALREADY       */ 00104000
*/*                ASSIGNED TO SIOTS WITH THE SAME SIOTAFID AS THE   */ 00105000
*/*                SIOT BEING PROCESSED. THIS FIELD WILL BE ZERO     */ 00106000
*/*                IF NO OTHER SIOTS WITH THE SAME SIOTAFID HAVE     */ 00107000
*/*                BEEN PROCESSED.                                   */ 00108000
*/*     CANSOLVE - 1                                                 */ 00109000
*/*                                                                  */ 00110000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00111000
*/*                                                                  */ 00112000
*/*   CONDITIONS - FUNCTION COMPLETED.                               */ 00113000
*/*                                                                  */ 00114000
*/*   OUTPUT -                                                       */ 00115000
*/*       GENIDALC - THE GENERIC DEVICE TYPE OF FIRST GROUP          */ 00116000
*/*                  ASSIGNED TO THESE SIOTS WITH THE SAME SIOTAFID. */ 00117000
*/*       CANSOLVE - SET TO 0 IF ALL OF THIS SIOT'S DEVICE           */ 00118000
*/*                  REQUIREMENTS, EXCEPT SCRATCH REQS, WERE NOT     */ 00119000
*/*                COVERED BY THE ALGORITHM.                         */ 00120000
*/*       SOLVED - SET TO 0 IF MORE THAN 1 GENERIC HAS BEEN ASSIGNED */ 00121000
*/*                TO ALL THE SIOTS WITH THE SAME SIOTAFID.          */ 00122000
*/*                                                                  */ 00123000
*/*   RETURN CODES - (NONE)                                          */ 00124000
*/*                                                                  */ 00125000
*/********************************************************************/ 00126000
*VUPTR = SVOLUNAD;                     /*POINT TO THE SIOTS FIRST VU */ 00127000
         LR    VUPTR,@10                                        02S0041 00128000
*DO VUCTR = ONE TO SVOLUNNO            /*SCAN ALL OF SIOTS VOLUNITS..*/ 00129000
*    WHILE CANSOLVE = ON;              /*..UNTIL REQ NOT COVERED     */ 00130000
         LA    VUCTR,1                                          02S0042 00131000
         B     @DE00042                                         02S0042 00132000
@DL00042 TM    CANSOLVE,B'10000000'                             02S0042 00133000
         BNO   @DC00042                                         02S0042 00134000
*  IF VOLALOC = OFF                    /*IS THIS AN UNALLOCATED ENTRY*/ 00135000
*      & VDEVREQD = ON                 /*..REQUIRING A DEVICE, BUT.. */ 00136000
*      & CVRDUPLI = OFF THEN           /*..NOT A DUPLICATE ALG REQ ? */ 00137000
         TM    VDEVREQD(VUPTR),B'00100000'                      02S0043 00138000
         BNO   @RF00043                                         02S0043 00139000
         TM    VOLALOC(VUPTR),B'10000000'                       02S0043 00140000
         BNZ   @RF00043                                         02S0043 00141000
         L     @10,VOLALGTP(,VUPTR)                             02S0043 00142000
         TM    CVRDUPLI(@10),B'10000000'                        02S0043 00143000
         BNZ   @RF00043                                         02S0043 00144000
*    DO;                               /*YES, PROCESS ..             */ 00145000
*      IF CVRSKFLG = OFF THEN          /*DID THE ALG CONSIDER THE REQ*/ 00146000
         TM    CVRSKFLG(@10),B'10000000'                        02S0045 00147000
         BNZ   @RF00045                                         02S0045 00148000
*        DO;                           /*YES, PROCESS ..             */ 00149000
*          CANSOLVE = OFF;             /*ASSUME ALG DID NOT COVER REQ*/ 00150000
         NI    CANSOLVE,B'01111111'                             02S0047 00151000
*          GRPENTP = CVRGRPPT;         /*POINT TO REQS 1ST GROUP LIST*/ 00152000
         L     GRPENTP,CVRGRPPT(,@10)                           02S0048 00153000
*          DO AGPCTR = ONE TO CVRNGRP  /*SCAN ALL ALG GROUP LIST ENTS*/ 00154000
*              WHILE CANSOLVE = OFF;   /*..UNTIL GROUP ALG USED      */ 00155000
         LA    AGPCTR,1                                         02S0049 00156000
         B     @DE00049                                         02S0049 00157000
@DL00049 TM    CANSOLVE,B'10000000'                             02S0049 00158000
         BNZ   @DC00049                                         02S0049 00159000
*            IF CVRGALL > ZERO THEN    /*DID THE ALG PICK THIS GROUP */ 00160000
         ICM   @10,3,CVRGALL(GRPENTP)                           02S0050 00161000
         BNP   @RF00050                                         02S0050 00162000
*              DO;                     /*YES ..                      */ 00163000
*                CANSOLVE = ON;        /*INDICATE ALG COVERED THE REQ*/ 00164000
         OI    CANSOLVE,B'10000000'                             02S0052 00165000
*                IF SOLVED = ON THEN   /*MORE THAN ONE GEN USED ?    */ 00166000
         TM    SOLVED,B'00010000'                               02S0053 00167000
         BNO   @RF00053                                         02S0053 00168000
*                  DO;                 /*NOT YET - PROCESS           */ 00169000
*                    GENFOUND = OFF;   /*GEN NOT LOCATED IN EDL YET  */ 00170000
         NI    GENFOUND,B'11011111'                             02S0055 00171000
*                    EDLPTR = EDLFGENP;/*POINT TO FIRST GEN IN EDL   */ 00172000
         L     @10,SAFIDPTR                                     02S0056 00173000
         L     @10,SIOTEDLP(,@10)                               02S0056 00174000
         L     EDLPTR,EDLFGENP(,@10)                            02S0056 00175000
*                DO EGENCTR=ONE TO EDLGENNO /*SCAN ALL GENS IN EDL ..*/ 00176000
*                    WHILE GENFOUND=OFF; /*..UNTIL GROUP ALC IS FOUND*/ 00177000
         LA    EGENCTR,1                                        02S0057 00178000
         B     @DE00057                                         02S0057 00179000
@DL00057 TM    GENFOUND,B'00100000'                             02S0057 00180000
         BNZ   @DC00057                                         02S0057 00181000
*                  IF EINDEVTP=OFF THEN /*IS THE GENERIC STILL ELIG ?*/ 00182000
         TM    EINDEVTP(EDLPTR),B'10000000'                     02S0058 00183000
         BNZ   @RF00058                                         02S0058 00184000
*                    DO;               /*YES, SCAN GENERIC FOR GROUP */ 00185000
*                      EDLGNTP=EDLGRPTR; /*POINT TO 1ST GROUP IN GEN */ 00186000
         L     EDLGNTP,EDLGRPTR(,EDLPTR)                        02S0060 00187000
*                      DO EGRPCTR=ONE TO EDLGRPNO /*SCAN GRPS IN GEN */ 00188000
*                          WHILE GENFOUND=OFF; /*UNTIL GRP ALC IS FND*/ 00189000
         LA    @15,1                                            02S0061 00190000
         B     @DE00061                                         02S0061 00191000
@DL00061 TM    GENFOUND,B'00100000'                             02S0061 00192000
         BNZ   @DC00061                                         02S0061 00193000
*                        IF EDLGRID=CVRGRPID THEN /*SAME GROUP AS ALC*/ 00194000
         L     @15,EDLGRID(,EDLGNTP)                            02S0062 00195000
         CH    @15,CVRGRPID(,GRPENTP)                           02S0062 00196000
         BNE   @RF00062                                         02S0062 00197000
*                          DO;         /*YES, ..                     */ 00198000
*                            GENFOUND=ON; /*INDICATE GEN ALLOCD FOUND*/ 00199000
         OI    GENFOUND,B'00100000'                             02S0064 00200000
*                            IF GENIDALC=ZERO THEN /*FIRST UNIT ALC'D*/ 00201000
         ICM   @15,15,GENIDALC                                  02S0065 00202000
         BNZ   @RF00065                                         02S0065 00203000
*                                GENIDALC=EDLDEVT; /*YES,SAV GEN TYPE*/ 00204000
         MVC   GENIDALC(4),EDLDEVT(EDLPTR)                      02S0066 00205000
*                            ELSE      /*NOT THE FIRST UNIT ALLOC'D..*/ 00206000
*                              DO;                              02S0067 00207000
         B     @RC00065                                         02S0067 00208000
@RF00065 DS    0H                                               02S0068 00209000
*                               IF GENIDALC^=EDLDEVT THEN /*SAME GEN?*/ 00210000
         CLC   GENIDALC(4),EDLDEVT(EDLPTR)                      02S0068 00211000
         BE    @RF00068                                         02S0068 00212000
*                                   SOLVED = OFF; /*NO, INDICATE     */ 00213000
         NI    SOLVED,B'11101111'                               02S0069 00214000
*                               ELSE;  /*YES, SAME GENERIC AS BEFORE */ 00215000
@RF00068 DS    0H                                               02S0071 00216000
*                              END;                             02S0071 00217000
*                          END;                                 02S0072 00218000
*                        ELSE;         /*NOT THE GROUP ALLOC'D       */ 00219000
@RF00062 DS    0H                                               02S0074 00220000
*                        EDLGNTP=EDLNXGRP; /*POINT TO THE NEXT GROUP */ 00221000
@RC00062 L     EDLGNTP,EDLNXGRP(,EDLGNTP)                       02S0074 00222000
*                      END;                                     02S0075 00223000
         LA    @15,1                                            02S0075 00224000
         AL    @15,EGRPCTR                                      02S0075 00225000
@DE00061 ST    @15,EGRPCTR                                      02S0075 00226000
         C     @15,EDLGRPNO(,EDLPTR)                            02S0075 00227000
         BNH   @DL00061                                         02S0075 00228000
@DC00061 DS    0H                                               02S0076 00229000
*                    END;                                       02S0076 00230000
*                  ELSE;               /*INELIGIBLE GENERIC          */ 00231000
@RF00058 DS    0H                                               02S0078 00232000
*                  EDLPTR = EDLNXTNT;  /*POINT TO THE NEXT GENERIC   */ 00233000
         L     EDLPTR,EDLNXTNT(,EDLPTR)                         02S0078 00234000
*                  END;                                         02S0079 00235000
         AH    EGENCTR,@CH00041                                 02S0079 00236000
@DE00057 L     @06,SAFIDPTR                                     02S0079 00237000
         L     @06,SIOTEDLP(,@06)                               02S0079 00238000
         C     EGENCTR,EDLGENNO(,@06)                           02S0079 00239000
         BNH   @DL00057                                         02S0079 00240000
@DC00057 DS    0H                                               02S0080 00241000
*                END;                                           02S0080 00242000
*              ELSE;                   /*MORE THAN 1 GEN ALREADY     */ 00243000
@RF00053 DS    0H                                               02S0082 00244000
*              END;                                             02S0082 00245000
*            ELSE;                     /*ALG DID NOT PICK THIS GROUP */ 00246000
@RF00050 DS    0H                                               02S0084 00247000
*            GRPENTP=GRPENTP + LENGTH(CVRGPLST); /*PT TO NEXT GRP ENT*/ 00248000
         AH    GRPENTP,@CH00277                                 02S0084 00249000
*          END;                                                 02S0085 00250000
         AH    AGPCTR,@CH00041                                  02S0085 00251000
@DE00049 L     @10,VOLALGTP(,VUPTR)                             02S0085 00252000
         CH    AGPCTR,CVRNGRP(,@10)                             02S0085 00253000
         BNH   @DL00049                                         02S0085 00254000
@DC00049 DS    0H                                               02S0086 00255000
*        END;                                                   02S0086 00256000
*      ELSE                            /*ALG DID NOT CONSIDER THE REQ*/ 00257000
*        DO;                                                    02S0087 00258000
         B     @RC00045                                         02S0087 00259000
@RF00045 DS    0H                                               02S0088 00260000
*          CANSOLVE = OFF;             /*INDICATE REQ WAS NOT COVERED*/ 00261000
         NI    CANSOLVE,B'01111111'                             02S0088 00262000
*        END;                                                   02S0089 00263000
*    END;                                                       02S0090 00264000
*  ELSE;                               /*VU ENTRY NOT TO BE COVERED  */ 00265000
@RF00043 DS    0H                                               02S0092 00266000
*  VUPTR = VUPTR + LENGTH(VOLUNTAB);   /*POINT TO THE NEXT VU ENTRY  */ 00267000
@RC00043 AH    VUPTR,@CH00457                                   02S0092 00268000
*END;                                                           02S0093 00269000
         AH    VUCTR,@CH00041                                   02S0093 00270000
@DE00042 L     @10,SAFIDPTR                                     02S0093 00271000
         CH    VUCTR,SVOLUNNO(,@10)                             02S0093 00272000
         BNH   @DL00042                                         02S0093 00273000
@DC00042 DS    0H                                               02S0094 00274000
*          END;                                                 01S0094 00275000
*        ELSE;                         /*NOT UNALLOC, SAME MUG SIOT  */ 00276000
@RF00038 DS    0H                                               01S0096 00277000
*        SAFIDPTR = SIOTNPTR;          /*POINT TO THE NEXT SIOT      */ 00278000
         L     @10,SAFIDPTR                                     01S0096 00279000
         L     @10,SIOTNPTR(,@10)                               01S0096 00280000
         ST    @10,SAFIDPTR                                     01S0096 00281000
*       END;                                                    01S0097 00282000
@DE00037 ICM   @10,15,SAFIDPTR                                  01S0097 00283000
         BZ    @DC00037                                         01S0097 00284000
         TM    CANSOLVE,B'10000000'                             01S0097 00285000
         BO    @DL00037                                         01S0097 00286000
@DC00037 DS    0H                                               01S0098 00287000
*       IF CANSOLVE = ON &             /*IF ALGORITHM COVERED@ZA15730*/ 00288000
*          GENIDALC ^= ZERO THEN       /*AND DEV TYPE NOT ZERO. SIOT    00289000
*                                        PROCESSED IF ZERO.  @ZA15730*/ 00290000
         TM    CANSOLVE,B'10000000'                             01S0098 00291000
         BNO   @RF00098                                         01S0098 00292000
         ICM   @10,15,GENIDALC                                  01S0098 00293000
         BZ    @RF00098                                         01S0098 00294000
*        DO;                           /*YES, PROCESS                */ 00295000
*          IF SOLVED = OFF THEN        /*DID ALG COVER WITH 1 GENERIC*/ 00296000
         TM    SOLVED,B'00010000'                               01S0100 00297000
         BNZ   @RF00100                                         01S0100 00298000
*            DO;                       /*NO, TRY TO PUT ONTO 1-GEN   */ 00299000
*/********************************************************************/ 00300000
*/*                                                                  */ 00301000
*/* SEGMENT NAME - FORCEGEN                                          */ 00302000
*/*                                                                  */ 00303000
*/* DESCRIPTIVE NAME - TRY TO FIND A 1-GENERIC SOLUTION              */ 00304000
*/*                                                                  */ 00305000
*/* FUNCTION -                                                       */ 00306000
*/*     THIS ROUTINE IS ENTERED WHEN THE ALGORITHM HAS COMPLETELY    */ 00307000
*/*     COVERED ALL THE SIOTS WITH THE SAME SIOTAFID BUT THE         */ 00308000
*/*     ALGORITHM USED MORE THAN ONE GENERIC DEVICE TYPE TO COVER    */ 00309000
*/*     ALL THESE REQUESTS.                                          */ 00310000
*/*     THIS ROUTINE TRIES TO FIND AN ELIGIBLE DEVICE TYPE WHICH     */ 00311000
*/*     CAN COMPLETELY COVER ALL THE REQUESTS WITH THE SAME          */ 00312000
*/*     SIOTAFID. IF REQUESTED BY THE CALLER, THE ONLY DEVICE TYPE   */ 00313000
*/*     CONSIDERED AS A POSSIBLE SOLUTION IS THE LAST GENERIC        */ 00314000
*/*     LOCKED.                                                      */ 00315000
*/*     FOR EACH GENERIC BEING CONSIDERED AS A POSSIBLE SOLUTION,    */ 00316000
*/*     SEGMENT 'FGENALOC' IS INVOKED FOR EACH SIOT WITH THE         */ 00317000
*/*     SAME SIOTAFID TO SEE IF THE SIOT CAN BE SATISFIED BY THE     */ 00318000
*/*     UNITS ALLOCATED BY THE ALGORITHM FROM THAT GENERIC OR THE    */ 00319000
*/*     EXCESS UNITS (I.E. NOT USED BY THE ALG) FOR THE GENERIC.     */ 00320000
*/*                                                                  */ 00321000
*/*   OPERATION - THE OPERATION IS DOCUMENTED BY THE CODE ITSELF.    */ 00322000
*/*                                                                  */ 00323000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00324000
*/*                                                                  */ 00325000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00326000
*/*                                                                  */ 00327000
*/*   INPUT -                                                        */ 00328000
*/*        SIOTPTR - PTR TO THE SIOT BEING PROCESSED                 */ 00329000
*/*        ONLYLGEN - FUNCTION MAP BIT                               */ 00330000
*/*                 - 1 - TRY ONLY THE LAST GENERIC LOCKED           */ 00331000
*/*                 - 0 - TRY ALL ELIGIBLE GENERICS                  */ 00332000
*/*        ALCWAPTR - PTR TO THE ALLOCATION WORK AREA                */ 00333000
*/*          LGENLOCK - GENERIC DEVICE TYPE LAST LOCKED              */ 00334000
*/*                                                                  */ 00335000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00336000
*/*                                                                  */ 00337000
*/*   CONDITIONS - FUNCTION COMPLETED.                               */ 00338000
*/*                                                                  */ 00339000
*/*   OUTPUT -                                                       */ 00340000
*/*        SOLVED - SET TO 1 IF A ONE-GENERIC SOLUTION IS FOUND.     */ 00341000
*/*        CANSOLVE - SET TO 1 IF A 1-GENERIC SOLUTION IS NOT FOUND. */ 00342000
*/*        GENIDALC - GENERIC WHICH COVERED ALL THE REQUESTS         */ 00343000
*/*                                                                  */ 00344000
*/*   RETURN CODES - (NONE)                                          */ 00345000
*/*                                                                  */ 00346000
*/********************************************************************/ 00347000
*EDLPTR = SIOTPTR->SIOTEDLP->EDLFGENP; /*POINT TO THE 1ST GEN IN EDL */ 00348000
         L     @10,SIOTEDLP(,SIOTPTR)                           02S0102 00349000
         L     EDLPTR,EDLFGENP(,@10)                            02S0102 00350000
*DO EGENCTR = ONE TO SIOTPTR -> SIOTEDLP -> EDLGENNO  /*SCAN ALL GENS*/ 00351000
*    WHILE (SOLVED = OFF               /*UNLESS A 1-GEN SOLUTION FND */ 00352000
*    & EDLGRPTR->EDLGRID<=ALGPARMP->CVRGRPLK);/*OR GROUPS NOT LOCKED */ 00353000
         LA    EGENCTR,1                                        02S0103 00354000
         B     @DE00103                                         02S0103 00355000
@DL00103 TM    SOLVED,B'00010000'                               02S0103 00356000
         BNZ   @DC00103                                         02S0103 00357000
         L     @06,EDLGRPTR(,EDLPTR)                            02S0103 00358000
         L     @15,@PC00001                                     02S0103 00359000
         L     @15,ALCWAPTR(,@15)                               02S0103 00360000
         L     @01,ALGTABP(,@15)                                02S0103 00361000
         L     @01,ALGPARMP(,@01)                               02S0103 00362000
         L     @06,EDLGRID(,@06)                                02S0103 00363000
         CH    @06,CVRGRPLK(,@01)                               02S0103 00364000
         BH    @DC00103                                         02S0103 00365000
*  IF EINDEVTP = OFF THEN              /*IS THE GENERIC ELIGIBLE ?   */ 00366000
         TM    EINDEVTP(EDLPTR),B'10000000'                     02S0104 00367000
         BNZ   @RF00104                                         02S0104 00368000
*    DO;                               /*YES, PROCESS ..             */ 00369000
*      IF (ONLYLGEN = OFF)             /*SHOULD GENERIC BE TRIED ?   */ 00370000
*          | (ONLYLGEN = ON                                     02S0106 00371000
*          & EDLDEVT = LGENLOCK) THEN                           02S0106 00372000
         L     @06,@PC00001+4                                   02S0106 00373000
         TM    ONLYLGEN(@06),B'10000000'                        02S0106 00374000
         BZ    @RT00106                                         02S0106 00375000
         TM    ONLYLGEN(@06),B'10000000'                        02S0106 00376000
         BNO   @RF00106                                         02S0106 00377000
         CLC   EDLDEVT(4,EDLPTR),LGENLOCK(@15)                  02S0106 00378000
         BNE   @RF00106                                         02S0106 00379000
@RT00106 DS    0H                                               02S0107 00380000
*        DO;                           /*YES,TRY TO SOLVE WITH GEN   */ 00381000
*          GENIDALC = EDLDEVT;         /*SAVE THE GEN DEVICE TYPE    */ 00382000
         MVC   GENIDALC(4),EDLDEVT(EDLPTR)                      02S0108 00383000
*          EDLGNTP = EDLGRPTR;         /*POINT TO 1ST GROUP IN GEN   */ 00384000
         L     EDLGNTP,EDLGRPTR(,EDLPTR)                        02S0109 00385000
*          LOWGRP = EDLGRID;           /*SAVE THIS GROUP ID          */ 00386000
         MVC   LOWGRP(2),EDLGRID+2(EDLGNTP)                     02S0110 00387000
*          DO EGRPCTR = ONE TO EDLGRPNO; /*SCAN ALL THE GROUPS IN GEN*/ 00388000
         LA    @15,1                                            02S0111 00389000
         B     @DE00111                                         02S0111 00390000
@DL00111 DS    0H                                               02S0112 00391000
*            HIGHGRP = EDLGRID;        /*SAVE GROUP ID AS LAST IN GEN*/ 00392000
         MVC   HIGHGRP(2),EDLGRID+2(EDLGNTP)                    02S0112 00393000
*            EDLGNTP = EDLNXGRP;       /*POINT TO NEXT GROUP IN GEN  */ 00394000
         L     EDLGNTP,EDLNXGRP(,EDLGNTP)                       02S0113 00395000
*          END;                                                 02S0114 00396000
         AH    @15,@CH00041                                     02S0114 00397000
@DE00111 ST    @15,EGRPCTR                                      02S0114 00398000
         C     @15,EDLGRPNO(,EDLPTR)                            02S0114 00399000
         BNH   @DL00111                                         02S0114 00400000
*          SOLVED = ON;                /*ASSUME THIS GEN WILL SOLVE  */ 00401000
         OI    SOLVED,B'00010000'                               02S0115 00402000
*          SAFIDPTR = SIOTPTR;         /*POINT TO SIOT BEING PROCESSD*/ 00403000
         ST    SIOTPTR,SAFIDPTR                                 02S0116 00404000
*          DO WHILE (SAFIDPTR ^= ZERO  /*SCAN ALL THE SIOTS UNTIL .. */ 00405000
*              & SOLVED = ON);         /*..GENERIC CANT COVER        */ 00406000
         B     @DE00117                                         02S0117 00407000
@DL00117 DS    0H                                               02S0118 00408000
*            IF SIOTALCD = OFF         /*IS SIOT UNALLOCATED AND PART*/ 00409000
*                & SIOTAFID=SIOTPTR->SIOTAFID THEN /*..OF SAME MUG ? */ 00410000
         L     @06,SAFIDPTR                                     02S0118 00411000
         TM    SIOTALCD(@06),B'00000010'                        02S0118 00412000
         BNZ   @RF00118                                         02S0118 00413000
         CLC   SIOTAFID(2,@06),SIOTAFID(SIOTPTR)                02S0118 00414000
         BNE   @RF00118                                         02S0118 00415000
*              DO;                     /*YES,TRY TO COVER WITH GEN   */ 00416000
*                CALL FGENALOC;                                 02S0120 00417000
         BAL   @14,FGENALOC                                     02S0120 00418000
*              END;                                             02S0121 00419000
*            ELSE;                     /*NOT UNALLOC'D,SAME MUG SIOT */ 00420000
@RF00118 DS    0H                                               02S0123 00421000
*            SAFIDPTR = SIOTNPTR;      /*POINT TO THE NEXT SIOT      */ 00422000
         L     @06,SAFIDPTR                                     02S0123 00423000
         L     @06,SIOTNPTR(,@06)                               02S0123 00424000
         ST    @06,SAFIDPTR                                     02S0123 00425000
*          END;                                                 02S0124 00426000
@DE00117 ICM   @06,15,SAFIDPTR                                  02S0124 00427000
         BZ    @DC00117                                         02S0124 00428000
         TM    SOLVED,B'00010000'                               02S0124 00429000
         BO    @DL00117                                         02S0124 00430000
@DC00117 DS    0H                                               02S0125 00431000
*        END;                                                   02S0125 00432000
*      ELSE;                           /*GENERIC SHOULD NOT BE TRIED */ 00433000
@RF00106 DS    0H                                               02S0127 00434000
*    END;                                                       02S0127 00435000
*  ELSE;                               /*GENERIC IS INELIGIBLE       */ 00436000
@RF00104 DS    0H                                               02S0129 00437000
*  EDLPTR = EDLNXTNT;                  /*POINT TO THE NEXT GENERIC   */ 00438000
         L     EDLPTR,EDLNXTNT(,EDLPTR)                         02S0129 00439000
*END;                                                           02S0130 00440000
         AH    EGENCTR,@CH00041                                 02S0130 00441000
@DE00103 L     @06,SIOTEDLP(,SIOTPTR)                           02S0130 00442000
         C     EGENCTR,EDLGENNO(,@06)                           02S0130 00443000
         BNH   @DL00103                                         02S0130 00444000
@DC00103 DS    0H                                               02S0131 00445000
*IF SOLVED = OFF THEN                  /*WAS A 1-GEN SOLUTION FOUND? */ 00446000
         TM    SOLVED,B'00010000'                               02S0131 00447000
         BNZ   @RF00131                                         02S0131 00448000
*  DO;                                 /*NO, INDICATE                */ 00449000
*    CANSOLVE = OFF;                                            02S0133 00450000
         NI    CANSOLVE,B'01111111'                             02S0133 00451000
*  END;                                                         02S0134 00452000
*ELSE;                                 /*1-GENERIC SOLUTION WAS FOUND*/ 00453000
@RF00131 DS    0H                                               02S0136 00454000
*            END;                                               01S0136 00455000
*          ELSE;                       /*THE ALG COVERED WITH 1 GEN  */ 00456000
@RF00100 DS    0H                                               01S0138 00457000
*          IF SOLVED = ON THEN         /*IS A 1-GEN SOLUTION FOUND ? */ 00458000
         TM    SOLVED,B'00010000'                               01S0138 00459000
         BNO   @RF00138                                         01S0138 00460000
*            DO;                       /*YES,ELIMINATE ALL OTHER GENS*/ 00461000
*/********************************************************************/ 00462000
*/*                                                                  */ 00463000
*/* SEGMENT NAME - ELIMGENS                                          */ 00464000
*/*                                                                  */ 00465000
*/* DESCRIPTIVE NAME - ELIMINATE ALL OTHER GENERICS VIA IEFAB481     */ 00466000
*/*                                                                  */ 00467000
*/* FUNCTION -                                                       */ 00468000
*/*     THIS ROUTINE INVOKES MODULE IEFAB481 FOR EACH OF THE         */ 00469000
*/*     SIOTS WITH THE SAME SIOTAFID AS THE SIOT BEING PROCESSED.    */ 00470000
*/*     MODULE IEFAB481 WILL MARKS AS INELIGIBLE,IN THE EDL AND THE  */ 00471000
*/*     ALGORITHM GROUP LIST ENTRIES, ALL THE GENERIC DEVICE TYPES   */ 00472000
*/*     EXCEPT THE ONE CHOSEN FOR THESE REQUESTS.                    */ 00473000
*/*                                                                  */ 00474000
*/*   OPERATION - THE OPERATION IS DOCUMENTED BY THE CODE ITSELF.    */ 00475000
*/*                                                                  */ 00476000
*/*                                                                  */ 00477000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00478000
*/*                                                                  */ 00479000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00480000
*/*                                                                  */ 00481000
*/*   INPUT -                                                        */ 00482000
*/*       GENIDALC - THE GENERIC DEVICE TYPE CHOSEN FOR THESE        */ 00483000
*/*                  REQUESTS.                                       */ 00484000
*/*       SIOTPTR - THE FIRST SIOT WITH THE SIOTAFID BEING PROCESSED.*/ 00485000
*/*                                                                  */ 00486000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00487000
*/*                                                                  */ 00488000
*/*   CONDITIONS - FUNCTION COMPLETED.                               */ 00489000
*/*                                                                  */ 00490000
*/*   OUTPUT - (NONE EXCEPT MODULE IEFAB481 WILL HAVE MARKED ENTRIES */ 00491000
*/*            FOR OTHER GENERICS AS INELIGIBLE IN THE EDL AND THE   */ 00492000
*/*            ALGORITHM GROUP LIST ENTRIES.)                        */ 00493000
*/*                                                                  */ 00494000
*/*   RETURN CODES - 0 IN RTNCODE                                    */ 00495000
*/*                                                                  */ 00496000
*/********************************************************************/ 00497000
*SAFIDPTR = SIOTPTR;                   /*POINT TO SIOT BEING PROCESSD*/ 00498000
         ST    SIOTPTR,SAFIDPTR                                 02S0140 00499000
*SAVEAFID = SIOTAFID;                  /*STORE THE AFID              */ 00500000
         L     @10,SAFIDPTR                                     02S0141 00501000
         LH    SAVEAFID,SIOTAFID(,@10)                          02S0141 00502000
*DO WHILE (SAFIDPTR ^= ZERO                                     02S0142 00503000
*    & RTNCODE = SUCCESS);             /*SCAN THE REST OF THE SIOTS  */ 00504000
         B     @DE00142                                         02S0142 00505000
@DL00142 DS    0H                                               02S0143 00506000
*  IF SIOTALCD = OFF                   /*IS THE SIOT UNALLOCATED ..  */ 00507000
*      & SIOTAFID = SAVEAFID THEN      /*.AND PART OF THE SAME MUG ? */ 00508000
         L     @10,SAFIDPTR                                     02S0143 00509000
         TM    SIOTALCD(@10),B'00000010'                        02S0143 00510000
         BNZ   @RF00143                                         02S0143 00511000
         CH    SAVEAFID,SIOTAFID(,@10)                          02S0143 00512000
         BNE   @RF00143                                         02S0143 00513000
*    DO;                               /*YES,ELIMINATE ALL OTHER GENS*/ 00514000
*      CALL IEFAB481 (SAFIDPTR,GENIDALC); /*UPDATE THE ALG TABLES/EDL*/ 00515000
         LA    @10,SAFIDPTR                                     02S0145 00516000
         ST    @10,@AL00001                                     02S0145 00517000
         LA    @10,GENIDALC                                     02S0145 00518000
         ST    @10,@AL00001+4                                   02S0145 00519000
         L     @15,@CV00081                                     02S0145 00520000
         LA    @01,@AL00001                                     02S0145 00521000
         BALR  @14,@15                                          02S0145 00522000
*      RTNCODE = REG15;                /*SAVE THE RETURN CODE        */ 00523000
         LR    RTNCODE,REG15                                    02S0146 00524000
*    END;                                                       02S0147 00525000
*  ELSE;                               /*NOT UNALLOC, SAME MUG SIOT  */ 00526000
@RF00143 DS    0H                                               02S0149 00527000
*  SAFIDPTR = SIOTNPTR;                /*POINT TO THE NEXT SIOT      */ 00528000
         L     @10,SAFIDPTR                                     02S0149 00529000
         L     @10,SIOTNPTR(,@10)                               02S0149 00530000
         ST    @10,SAFIDPTR                                     02S0149 00531000
*END;                                                           02S0150 00532000
@DE00142 SLR   @10,@10                                          02S0150 00533000
         C     @10,SAFIDPTR                                     02S0150 00534000
         BE    @DC00142                                         02S0150 00535000
         CR    RTNCODE,@10                                      02S0150 00536000
         BE    @DL00142                                         02S0150 00537000
@DC00142 DS    0H                                               02S0151 00538000
*            END;                                               01S0151 00539000
*          ELSE;                       /*A 1-GEN SOLUTION NOT FOUND  */ 00540000
@RF00138 DS    0H                                               01S0153 00541000
*        END;                                                   01S0153 00542000
*      ELSE;                           /*ALG DID NOT COVER EVERYTHING*/ 00543000
@RF00098 DS    0H                                               01S0155 00544000
*      IF CANSOLVE=OFF THEN            /*WAS A 1-GEN SOLUTION FOUND ?*/ 00545000
         TM    CANSOLVE,B'10000000'                             01S0155 00546000
         BNZ   @RF00155                                         01S0155 00547000
*        DO;                           /*NO,REMOVE ALG'S COVERING    */ 00548000
*/********************************************************************/ 00549000
*/*                                                                  */ 00550000
*/* SEGMENT NAME - GIVEBACK                                          */ 00551000
*/*                                                                  */ 00552000
*/* DESCRIPTIVE NAME - REMOVE THE ALGORITHM'S COVERING               */ 00553000
*/*                                                                  */ 00554000
*/* FUNCTION -                                                       */ 00555000
*/*     THIS ROUTINE GIVES BACK THE UNITS THE ALGORITHM HAS          */ 00556000
*/*     ALREADY ALLOCATED TO THESE SIOTS WITH THE SAME SIOTAFID --   */ 00557000
*/*     BECAUSE NO ONE GENERIC WAS ABLE TO COMPLETELY SATISFY ALL    */ 00558000
*/*     THESE REQUESTS AND THEREFORE THESE REQUESTS SHOULD NOT BE    */ 00559000
*/*     ALLOCATED AT ALL.                                            */ 00560000
*/*                                                                  */ 00561000
*/*   OPERATION - THE OPERATION IS DOCUMENTED BY THE CODE ITSELF.    */ 00562000
*/*                                                                  */ 00563000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00564000
*/*                                                                  */ 00565000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00566000
*/*                                                                  */ 00567000
*/*   INPUT -                                                        */ 00568000
*/*     SAFIDPTR - THE FIRST SIOT WITH THE SIOTAFID BEING PROCESSED. */ 00569000
*/*                                                                  */ 00570000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00571000
*/*                                                                  */ 00572000
*/*   CONDITIONS - FUNCTION COMPLETED.                               */ 00573000
*/*                                                                  */ 00574000
*/*   OUTPUT -                                                       */ 00575000
*/*       GRPEXCS - INCREMENTED FOR GROUPS WHICH THE ALGORITHM       */ 00576000
*/*                 HAD USED TO COVER THESE REQUESTS.                */ 00577000
*/*       CVRGALL - SET TO 0 FOR GROUPS LIST ENTRIES WHICH THE       */ 00578000
*/*                 ALGORITHM HAD USED TO COVER THESE REQUESTS.      */ 00579000
*/*                                                                  */ 00580000
*/*   RETURN CODES - (NONE)                                          */ 00581000
*/*                                                                  */ 00582000
*/********************************************************************/ 00583000
*SAFIDPTR = SIOTPTR;                   /*POINT TO SIOT BEING PROCESSD*/ 00584000
         ST    SIOTPTR,SAFIDPTR                                 02S0157 00585000
*DO WHILE (SAFIDPTR ^= ZERO);          /*SCAN THE REST OF THE SIOTS  */ 00586000
         B     @DE00158                                         02S0158 00587000
@DL00158 DS    0H                                               02S0159 00588000
*  IF SIOTALCD = OFF                   /*UNALLOCATED SIOT IN THE.....*/ 00589000
*     & SIOTAFID=SIOTPTR->SIOTAFID THEN/*...SAME MULTI-UNIT/GEN GROUP*/ 00590000
         L     @10,SAFIDPTR                                     02S0159 00591000
         TM    SIOTALCD(@10),B'00000010'                        02S0159 00592000
         BNZ   @RF00159                                         02S0159 00593000
         CLC   SIOTAFID(2,@10),SIOTAFID(SIOTPTR)                02S0159 00594000
         BNE   @RF00159                                         02S0159 00595000
*    DO;                               /*YES, PROCESS ..             */ 00596000
*      VUPTR = SVOLUNAD;               /*POINT TO SIOTS FIRST VU NTRY*/ 00597000
         L     VUPTR,SVOLUNAD(,@10)                             02S0161 00598000
*      DO VUCTR = ONE TO SVOLUNNO;     /*SCAN ALL THE VOLUNIT ENTRIES*/ 00599000
         LA    VUCTR,1                                          02S0162 00600000
         B     @DE00162                                         02S0162 00601000
@DL00162 DS    0H                                               02S0163 00602000
*        IF VOLALOC = OFF              /*IS THE VU ENTRY UNALLOCATED.*/ 00603000
*            & CVRSKFLG = OFF THEN     /*..AND CONSIDERED BY ALG ?   */ 00604000
         TM    VOLALOC(VUPTR),B'10000000'                       02S0163 00605000
         BNZ   @RF00163                                         02S0163 00606000
         L     @10,VOLALGTP(,VUPTR)                             02S0163 00607000
         TM    CVRSKFLG(@10),B'10000000'                        02S0163 00608000
         BNZ   @RF00163                                         02S0163 00609000
*          DO;                         /*YES, PROCESS ..             */ 00610000
*            COVERED = OFF;            /*GROUP ALG USED NOT YET FOUND*/ 00611000
         NI    COVERED,B'10111111'                              02S0165 00612000
*            GRPENTP = CVRGRPPT;       /*POINT TO 1ST GROUP LIST NTRY*/ 00613000
         L     GRPENTP,CVRGRPPT(,@10)                           02S0166 00614000
*            DO AGPCTR = ONE TO CVRNGRP /*SCAN ALL GROUP LIST ENTRIES*/ 00615000
*                WHILE (COVERED = OFF); /*..UNTIL GROUP ALG USED     */ 00616000
         LA    AGPCTR,1                                         02S0167 00617000
         B     @DE00167                                         02S0167 00618000
@DL00167 TM    COVERED,B'01000000'                              02S0167 00619000
         BNZ   @DC00167                                         02S0167 00620000
*              IF CVRGALL > ZERO THEN  /*DID THE ALG PICK THIS GROUP?*/ 00621000
         SLR   @10,@10                                          02S0168 00622000
         LH    @06,CVRGALL(,GRPENTP)                            02S0168 00623000
         CR    @06,@10                                          02S0168 00624000
         BNH   @RF00168                                         02S0168 00625000
*                DO;                   /*YES, GIVE BACK THE UNITS    */ 00626000
*                  COVERED = ON;       /*INDICATE GROUP ALG USED FND */ 00627000
         OI    COVERED,B'01000000'                              02S0170 00628000
*                  GRPEXCS=GRPEXCS+CVRGALL; /*INCREMENT UNITS ALG       00629000
*                                        DIDNT USE                   */ 00630000
         L     @04,CVRGCPTR(,GRPENTP)                           02S0171 00631000
         AH    @06,GRPEXCS(,@04)                                02S0171 00632000
         STH   @06,GRPEXCS(,@04)                                02S0171 00633000
*                  CVRGALL = ZERO;     /*ZERO COUNT OF UNITS ALLOC'D */ 00634000
         STH   @10,CVRGALL(,GRPENTP)                            02S0172 00635000
*                END;                                           02S0173 00636000
*              ELSE;                   /*ALG DID NOT PICK THIS GROUP */ 00637000
@RF00168 DS    0H                                               02S0175 00638000
*              GRPENTP=GRPENTP+LENGTH(CVRGPLST); /*POINT TO NEXT GRP */ 00639000
         AH    GRPENTP,@CH00277                                 02S0175 00640000
*           END;                                                02S0176 00641000
         AH    AGPCTR,@CH00041                                  02S0176 00642000
@DE00167 L     @10,VOLALGTP(,VUPTR)                             02S0176 00643000
         CH    AGPCTR,CVRNGRP(,@10)                             02S0176 00644000
         BNH   @DL00167                                         02S0176 00645000
@DC00167 DS    0H                                               02S0177 00646000
*         END;                                                  02S0177 00647000
*        ELSE;                         /*VU ENTRY NOT TO BE ALLOCATED*/ 00648000
@RF00163 DS    0H                                               02S0179 00649000
*        VUPTR=VUPTR+LENGTH(VOLUNTAB); /*POINT TO NEXT VOLUNIT ENTRY */ 00650000
         AH    VUPTR,@CH00457                                   02S0179 00651000
*      END;                                                     02S0180 00652000
         AH    VUCTR,@CH00041                                   02S0180 00653000
@DE00162 L     @10,SAFIDPTR                                     02S0180 00654000
         CH    VUCTR,SVOLUNNO(,@10)                             02S0180 00655000
         BNH   @DL00162                                         02S0180 00656000
*    END;                                                       02S0181 00657000
*  ELSE;                               /*SIOT NOT TO BE ALLOCATED    */ 00658000
@RF00159 DS    0H                                               02S0183 00659000
*  SAFIDPTR = SIOTNPTR;                /*POINT TO THE NEXT SIOT      */ 00660000
         L     @10,SAFIDPTR                                     02S0183 00661000
         L     @10,SIOTNPTR(,@10)                               02S0183 00662000
         ST    @10,SAFIDPTR                                     02S0183 00663000
*END;                                                           02S0184 00664000
@DE00158 ICM   @10,15,SAFIDPTR                                  02S0184 00665000
         BNZ   @DL00158                                         02S0184 00666000
*        END;                                                   01S0185 00667000
*      ELSE;                           /*A 1-GEN SOLUTION FOUND      */ 00668000
@RF00155 DS    0H                                               01S0187 00669000
*      RFY INDMSIOT BASED(SIOTPTR);                             01S0187 00670000
*    END;                                                       01S0188 00671000
*  ELSE;                               /*SIOT NOT TO BE PROCESSED    */ 00672000
@RF00030 DS    0H                                               01S0190 00673000
*  IF SVOLUNAD ^= ZERO THEN            /*VOL/UNIT ENTRY EXISTS?      */ 00674000
         L     @10,SVOLUNAD(,SIOTPTR)                           01S0190 00675000
         LTR   @10,@10                                          01S0190 00676000
         BZ    @RF00190                                         01S0190 00677000
*    SVOLUNAD->VUMUGDON = OFF;         /*TURN OFF 'PROCESSED' SWITCH'*/ 00678000
         NI    VUMUGDON(@10),B'01111111'                        01S0191 00679000
*  SIOTPTR = SIOTNPTR;                 /*POINT TO THE NEXT SIOT      */ 00680000
@RF00190 L     SIOTPTR,SIOTNPTR(,SIOTPTR)                       01S0192 00681000
*END;                                                           01S0193 00682000
@DE00029 SLR   @10,@10                                          01S0193 00683000
         CR    SIOTPTR,@10                                      01S0193 00684000
         BE    @DC00029                                         01S0193 00685000
         CR    RTNCODE,@10                                      01S0193 00686000
         BE    @DL00029                                         01S0193 00687000
@DC00029 DS    0H                                               01S0194 00688000
*RETURN CODE(RTNCODE);                 /*RETURN TO CALLER            */ 00689000
         IC    @02,@OLDKEY                                      01S0194 00690000
         L     @13,4(,@13)                                      01S0194 00691000
         L     @00,@SIZDATD                                     01S0194 00692000
         LR    @01,@11                                          01S0194 00693000
         FSPACE   R,LV=(0),A=(1)                                        00694000
         MODESET KEYADDR=(2)                                            00695000
         LR    @15,@07                                          01S0194 00696000
         L     @14,12(,@13)                                     01S0194 00697000
         LM    @00,@12,20(@13)                                  01S0194 00698000
         BR    @14                                              01S0194 00699000
*/********************************************************************/ 00700000
*/*                                                                  */ 00701000
*/* SEGMENT NAME - FGENALOC                                          */ 00702000
*/*                                                                  */ 00703000
*/* DESCRIPTIVE NAME - TRY TO COVER WITH A PARTICULAR GENERIC        */ 00704000
*/*                                                                  */ 00705000
*/* FUNCTION -                                                       */ 00706000
*/*     THIS ROUTINE TRIES TO COVER ALL OF THE SIOT'S UNIQUE UNIT    */ 00707000
*/*     REQUESTS, EXCEPT FOR SCRATCH VOLUME REQUESTS, WITH THE       */ 00708000
*/*     GENERIC DEVICE TYPE PICKED.                                  */ 00709000
*/*     IF THE GROUP CURRENTLY COVERING ONE OF THE SIOT'S UNIT       */ 00710000
*/*     REQUESTS IS NOT IN THE GENERIC PICKED, THEN THIS ROUTINE     */ 00711000
*/*     LOOKS FOR AN ELIGIBLE GROUP IN THE GENERIC PICKED WHICH HAS  */ 00712000
*/*     UNITS NOT USED BY THE ALGORITHM (GRPEXCS > 0). IF SUCH A     */ 00713000
*/*     GROUP IS FOUND, THE COVERING FOR THIS REQUEST IS CHANGED     */ 00714000
*/*     TO THIS GROUP.                                               */ 00715000
*/*                                                                  */ 00716000
*/*   OPERATION - THE OPERATION IS DOCUMENTED BY THE CODE ITSELF.    */ 00717000
*/*                                                                  */ 00718000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00719000
*/*                                                                  */ 00720000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00721000
*/*                                                                  */ 00722000
*/*   INPUT -                                                        */ 00723000
*/*       SAFIDPTR - PTR TO THE SIOT TO PROCESS                      */ 00724000
*/*       LOWGRP - FIRST ELIGIBLE GROUP IN THE GENERIC PICKED        */ 00725000
*/*       HIGHGRP - LAST ELIGIBLE GROUP IN THE GENERIC PICKED        */ 00726000
*/*       SOLVED - 1                                                 */ 00727000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00728000
*/*                                                                  */ 00729000
*/*   CONDITIONS - FUNCTION COMPLETED.                               */ 00730000
*/*   OUTPUT -                                                       */ 00731000
*/*       SOLVED - SET TO 0 IF THE GENERIC CANNOT COVER ALL OF THE   */ 00732000
*/*                SIOT'S REQUESTS.                                  */ 00733000
*/*       GRPEXCS - MAY BE INCREMENTED FOR GROUPS NOT IN THE         */ 00734000
*/*                 GENERIC PICKED.                                  */ 00735000
*/*               - MAY BE DECREMENTED FOR GROUPS IN THE GENERIC     */ 00736000
*/*                 PICKED.                                          */ 00737000
*/*       CVRGALL - MAY BE SET TO 0 FOR GROUPS NOT IN THE GENERIC    */ 00738000
*/*                 PICKED.                                          */ 00739000
*/*               - MAY BE INCREMENTED FOR GROUPS IN THE GENERIC     */ 00740000
*/*                 PICKED.                                          */ 00741000
*/*   RETURN CODES - (NONE)                                          */ 00742000
*/*                                                                  */ 00743000
*/********************************************************************/ 00744000
*FGENALOC: PROC;                                                02S0195 00745000
FGENALOC STM   @14,@12,12(@13)                                  02S0195 00746000
*VUPTR = SAFIDPTR->SVOLUNAD;           /*POINT TO SIOTS FIRST VU NTRY*/ 00747000
         L     @10,SAFIDPTR                                     02S0196 00748000
         L     VUPTR,SVOLUNAD(,@10)                             02S0196 00749000
*DO VUCTR = ONE TO SAFIDPTR->SVOLUNNO  /*SCAN ALL THE VOLUNIT ENTRIES*/ 00750000
*    WHILE (SOLVED = ON);              /*..UNTIL THE GEN CANT COVER  */ 00751000
         LA    VUCTR,1                                          02S0197 00752000
         B     @DE00197                                         02S0197 00753000
@DL00197 TM    SOLVED,B'00010000'                               02S0197 00754000
         BNO   @DC00197                                         02S0197 00755000
*  IF VOLALOC = OFF                    /*IS THE VU ENTRY UNALLOCATED,*/ 00756000
*      & VDEVREQD = ON                 /*..REQUIRING A DEVICE,       */ 00757000
*      & CVRSCRTH = OFF                /*..BUT NOT A SCRATCH REQ     */ 00758000
*      & CVRDUPLI = OFF THEN           /*..OR A DUPLICATE OF ANOTHER?*/ 00759000
         TM    VDEVREQD(VUPTR),B'00100000'                      02S0198 00760000
         BNO   @RF00198                                         02S0198 00761000
         TM    VOLALOC(VUPTR),B'10000000'                       02S0198 00762000
         BNZ   @RF00198                                         02S0198 00763000
         L     @10,VOLALGTP(,VUPTR)                             02S0198 00764000
         TM    CVRSCRTH(@10),B'00001000'                        02S0198 00765000
         BNZ   @RF00198                                         02S0198 00766000
         TM    CVRDUPLI(@10),B'10000000'                        02S0198 00767000
         BNZ   @RF00198                                         02S0198 00768000
*    DO;                               /*YES, PROCESS ..             */ 00769000
*      COVERED = OFF;                  /*GROUP ALG USED NOT YET FOUND*/ 00770000
         NI    COVERED,B'10111111'                              02S0200 00771000
*      GRPENTP = CVRGRPPT;             /*POINT TO 1ST GROUP LIST NTRY*/ 00772000
         L     GRPENTP,CVRGRPPT(,@10)                           02S0201 00773000
*      DO AGPCTR = ONE TO CVRNGRP      /*SCAN ALL GROUP LIST ENTRIES */ 00774000
*          WHILE (COVERED = OFF);      /*..UNTIL GROUP ALG USED FOUND*/ 00775000
         LA    AGPCTR,1                                         02S0202 00776000
         B     @DE00202                                         02S0202 00777000
@DL00202 TM    COVERED,B'01000000'                              02S0202 00778000
         BNZ   @DC00202                                         02S0202 00779000
*        IF CVRGALL > ZERO THEN        /*DID THE ALG PICK THIS GROUP?*/ 00780000
         ICM   @10,3,CVRGALL(GRPENTP)                           02S0203 00781000
         BNP   @RF00203                                         02S0203 00782000
*          DO;                         /*YES, PROCESS ..             */ 00783000
*            COVERED = ON;             /*INDICATE ALG COVERING FOUND */ 00784000
         OI    COVERED,B'01000000'                              02S0205 00785000
*            IF CVRGRPID < LOWGRP      /*IS THE GROUP PICKED IN THE..*/ 00786000
*                | CVRGRPID>HIGHGRP THEN /*..1 GEN BEING PROCESSED ? */ 00787000
         LH    @10,CVRGRPID(,GRPENTP)                           02S0206 00788000
         CH    @10,LOWGRP                                       02S0206 00789000
         BL    @RT00206                                         02S0206 00790000
         CH    @10,HIGHGRP                                      02S0206 00791000
         BNH   @RF00206                                         02S0206 00792000
@RT00206 DS    0H                                               02S0207 00793000
*              DO;                     /*NO, TRY TO CHANGE COVERING  */ 00794000
*                GPTR = GRPENTP;       /*SAVE PTR TO THIS GROUP      */ 00795000
         LR    GPTR,GRPENTP                                     02S0208 00796000
*                SOLVED = OFF;         /*1-GEN SOLUTION NOT YET FOUND*/ 00797000
         NI    SOLVED,B'11101111'                               02S0209 00798000
*                GRPENTP = CVRGRPPT;   /*POINT TO 1ST GROUP LIST NTRY*/ 00799000
         L     @10,VOLALGTP(,VUPTR)                             02S0210 00800000
         L     GRPENTP,CVRGRPPT(,@10)                           02S0210 00801000
*                DO RAGPCTR=ONE TO CVRNGRP /*SCAN ALL GROUP ENTRIES  */ 00802000
*                    WHILE (SOLVED=OFF); /*..UNTIL 1-GEN SOLUTION FND*/ 00803000
         LA    RAGPCTR,1                                        02S0211 00804000
         B     @DE00211                                         02S0211 00805000
@DL00211 TM    SOLVED,B'00010000'                               02S0211 00806000
         BNZ   @DC00211                                         02S0211 00807000
*                  IF CVRGRPID => LOWGRP /*IS THE GROUP IN THE 1 GEN */ 00808000
*                      & CVRGRPID <= HIGHGRP /*..BEING PROCESSED AND */ 00809000
*                      & GRPEXCS > ZERO   /*.HAS EXTRA UNITS @Y30QPPA*/ 00810000
*                      & CVRGSKP = OFF THEN /*AND IS ELIG.   @Y30QPPA*/ 00811000
         LH    @10,CVRGRPID(,GRPENTP)                           02S0212 00812000
         CH    @10,LOWGRP                                       02S0212 00813000
         BL    @RF00212                                         02S0212 00814000
         CH    @10,HIGHGRP                                      02S0212 00815000
         BH    @RF00212                                         02S0212 00816000
         SLR   @10,@10                                          02S0212 00817000
         L     @15,CVRGCPTR(,GRPENTP)                           02S0212 00818000
         LH    @14,GRPEXCS(,@15)                                02S0212 00819000
         CR    @14,@10                                          02S0212 00820000
         BNH   @RF00212                                         02S0212 00821000
         TM    CVRGSKP(GRPENTP),B'10000000'                     02S0212 00822000
         BNZ   @RF00212                                         02S0212 00823000
*                    DO;               /*YES, ALLOCATE TO THE REQUEST*/ 00824000
*                      SOLVED = ON;    /*INDICATE 1-GEN SOLUTION FND */ 00825000
         OI    SOLVED,B'00010000'                               02S0214 00826000
*                      GRPEXCS=GRPEXCS-ONE; /*DECREMENT EXTRA UNITS  */ 00827000
         BCTR  @14,0                                            02S0215 00828000
         STH   @14,GRPEXCS(,@15)                                02S0215 00829000
*                      CVRGALL = ONE;  /*SET COUNT OF UNITS ALLOC'D  */ 00830000
         LA    @15,1                                            02S0216 00831000
         STH   @15,CVRGALL(,GRPENTP)                            02S0216 00832000
*                      GPTR->CVRGCPTR->GRPEXCS=                 02S0217 00833000
*                      GPTR->CVRGCPTR->GRPEXCS+ONE;             02S0217 00834000
         L     @14,CVRGCPTR(,GPTR)                              02S0217 00835000
         AH    @15,GRPEXCS(,@14)                                02S0217 00836000
         STH   @15,GRPEXCS(,@14)                                02S0217 00837000
*                                      /*INCR EXCESS OF OTHER GROUP  */ 00838000
*                      GPTR->CVRGALL=ZERO;/*ZERO COUNT OF UNITS ALLOC*/ 00839000
         STH   @10,CVRGALL(,GPTR)                               02S0218 00840000
*                    END;                                       02S0219 00841000
*                  ELSE;               /*NOT THIS GEN WITH EXTRA UNIT*/ 00842000
@RF00212 DS    0H                                               02S0221 00843000
*                  GRPENTP=GRPENTP+LENGTH(CVRGPLST); /*NEXT GRP ENTRY*/ 00844000
         AH    GRPENTP,@CH00277                                 02S0221 00845000
*                END;                                           02S0222 00846000
         AH    RAGPCTR,@CH00041                                 02S0222 00847000
@DE00211 L     @10,VOLALGTP(,VUPTR)                             02S0222 00848000
         CH    RAGPCTR,CVRNGRP(,@10)                            02S0222 00849000
         BNH   @DL00211                                         02S0222 00850000
@DC00211 DS    0H                                               02S0223 00851000
*              END;                                             02S0223 00852000
*            ELSE;                     /*GROUP IN GEN BEING PROCESSED*/ 00853000
@RF00206 DS    0H                                               02S0225 00854000
*          END;                                                 02S0225 00855000
*        ELSE                          /*ALG DID NOT USED THIS GROUP */ 00856000
*            GRPENTP=GRPENTP+LENGTH(CVRGPLST); /*PT TO NEXT GROUP ENT*/ 00857000
         B     @RC00203                                         02S0226 00858000
@RF00203 AH    GRPENTP,@CH00277                                 02S0226 00859000
*      END;                                                     02S0227 00860000
@RC00203 AH    AGPCTR,@CH00041                                  02S0227 00861000
@DE00202 L     @10,VOLALGTP(,VUPTR)                             02S0227 00862000
         CH    AGPCTR,CVRNGRP(,@10)                             02S0227 00863000
         BNH   @DL00202                                         02S0227 00864000
@DC00202 DS    0H                                               02S0228 00865000
*    END;                                                       02S0228 00866000
*  ELSE;                               /*VU ENTRY NOT TO BE PROCESSED*/ 00867000
@RF00198 DS    0H                                               02S0230 00868000
*  VUPTR = VUPTR + LENGTH(VOLUNTAB);   /*POINT TO NEXT VOLUNIT ENTRY */ 00869000
         AH    VUPTR,@CH00457                                   02S0230 00870000
*END;                                                           02S0231 00871000
         AH    VUCTR,@CH00041                                   02S0231 00872000
@DE00197 L     @10,SAFIDPTR                                     02S0231 00873000
         CH    VUCTR,SVOLUNNO(,@10)                             02S0231 00874000
         BNH   @DL00197                                         02S0231 00875000
@DC00197 DS    0H                                               02S0232 00876000
*END FGENALOC;                                                  02S0232 00877000
@EL00002 DS    0H                                               02S0232 00878000
@EF00002 DS    0H                                               02S0232 00879000
@ER00002 LM    @14,@12,12(@13)                                  02S0232 00880000
         BR    @14                                              02S0232 00881000
*END IEFAB474                                                   01S0233 00882000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00883000
*/*%INCLUDE SYSLIB  (A474SPEC)                                        * 00884000
*/*%INCLUDE SYSLIB  (A474DATA)                                        * 00885000
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        * 00886000
*/*%INCLUDE SYSLIB  (IEFZB422)                                        * 00887000
*/*%INCLUDE SYSLIB  (IEFZB423)                                        * 00888000
*/*%INCLUDE SYSLIB  (IEFZB425)                                        * 00889000
*/*%INCLUDE SYSLIB  (IEFZB426)                                        * 00890000
*/*%INCLUDE SYSLIB  (HOWALGC )                                        * 00891000
*/*%INCLUDE SYSLIB  (HOWASPEC)                                        * 00892000
*/*%INCLUDE SYSLIB  (FORCEGEN)                                        * 00893000
*/*%INCLUDE SYSLIB  (FGENSPEC)                                        * 00894000
*/*%INCLUDE SYSLIB  (ELIMGENS)                                        * 00895000
*/*%INCLUDE SYSLIB  (ELIMSPEC)                                        * 00896000
*/*%INCLUDE SYSLIB  (GIVEBACK)                                        * 00897000
*/*%INCLUDE SYSLIB  (BACKSPEC)                                        * 00898000
*/*%INCLUDE SYSLIB  (FGENALOC)                                        * 00899000
*/*%INCLUDE SYSLIB  (FALCSPEC)                                        * 00900000
*;                                                              01S0233 00901000
@DATA    DS    0H                                                       00902000
@CH00041 DC    H'1'                                                     00903000
@CH00277 DC    H'16'                                                    00904000
@CH00457 DC    H'28'                                                    00905000
@DATD    DSECT                                                          00906000
         DS    0F                                                       00907000
@SA00001 DS    18F                                                      00908000
@PC00001 DS    2F                                                       00909000
@AL00001 DS    2A                                                       00910000
IEFAB474 CSECT                                                          00911000
         DS    0F                                                       00912000
@DATD    DSECT                                                          00913000
         DS    0D                                                       00914000
SAFIDPTR DS    A                                                        00915000
EGRPCTR  DS    F                                                        00916000
EDLUCBLP DS    A                                                        00917000
HIGHGRP  DS    H                                                        00918000
LOWGRP   DS    H                                                        00919000
GENIDALC DS    CL4                                                      00920000
@NM00002 DS    CL1                                                      00921000
         ORG   @NM00002                                                 00922000
CANSOLVE DS    BL1                                                      00923000
COVERED  EQU   @NM00002+0                                               00924000
GENFOUND EQU   @NM00002+0                                               00925000
SOLVED   EQU   @NM00002+0                                               00926000
@NM00003 EQU   @NM00002+0                                               00927000
         ORG   @NM00002+1                                               00928000
@OLDKEY  DS    AL1                                                      00929000
IEFAB474 CSECT                                                          00930000
         DS    0F                                                       00931000
@SIZDATD DC    AL1(230)                                                 00932000
         DC    AL3(@ENDDATD-@DATD)                                      00933000
@CV00081 DC    V(IEFAB481)                                              00934000
         DS    0D                                                       00935000
IEFAB474 CSECT                                                          00936000
         DS   0H                                                        00937000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   00938000
@DATD    DSECT                                                          00939000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00940000
@ENDDATD EQU   *                                                        00941000
IEFAB474 CSECT                                                          00942000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00943000
@01      EQU   01                                                       00944000
@02      EQU   02                                                       00945000
@03      EQU   03                                                       00946000
@04      EQU   04                                                       00947000
@05      EQU   05                                                       00948000
@06      EQU   06                                                       00949000
@07      EQU   07                                                       00950000
@08      EQU   08                                                       00951000
@09      EQU   09                                                       00952000
@10      EQU   10                                                       00953000
@11      EQU   11                                                       00954000
@12      EQU   12                                                       00955000
@13      EQU   13                                                       00956000
@14      EQU   14                                                       00957000
@15      EQU   15                                                       00958000
VUCTR    EQU   @09                                                      00959000
SAVEAFID EQU   @03                                                      00960000
RTNCODE  EQU   @07                                                      00961000
RAGPCTR  EQU   @05                                                      00962000
EGENCTR  EQU   @10                                                      00963000
AGPCTR   EQU   @08                                                      00964000
VUPTR    EQU   @02                                                      00965000
SIOTPTR  EQU   @05                                                      00966000
GRPENTP  EQU   @03                                                      00967000
GPTR     EQU   @04                                                      00968000
EDLPTR   EQU   @04                                                      00969000
EDLGNTP  EQU   @06                                                      00970000
REG15    EQU   @15                                                      00971000
INDMSIOT EQU   0                                                        00972000
SCTUSADD EQU   INDMSIOT+20                                              00973000
SIOTAFID EQU   INDMSIOT+26                                              00974000
SIOTBYT1 EQU   INDMSIOT+43                                              00975000
SIOTALCD EQU   SIOTBYT1                                                 00976000
SIOTBYT3 EQU   INDMSIOT+46                                              00977000
SIOTTSTC EQU   INDMSIOT+47                                              00978000
SIOTBYT0 EQU   INDMSIOT+52                                              00979000
SCTSDISP EQU   INDMSIOT+55                                              00980000
SCTSBYT1 EQU   INDMSIOT+56                                              00981000
SCTSBYT2 EQU   INDMSIOT+57                                              00982000
SCTSBYT3 EQU   INDMSIOT+58                                              00983000
SCTSBYT4 EQU   INDMSIOT+59                                              00984000
SCTUTYPE EQU   INDMSIOT+60                                              00985000
SIOTDEVT EQU   SCTUTYPE                                                 00986000
SIOUBYT3 EQU   SIOTDEVT+2                                               00987000
SIOTALTD EQU   INDMSIOT+92                                              00988000
SIOTBYT2 EQU   INDMSIOT+103                                             00989000
SIOTEDLP EQU   INDMSIOT+136                                             00990000
SVOLUNAD EQU   INDMSIOT+140                                             00991000
SIOTNPTR EQU   INDMSIOT+152                                             00992000
SVOLUNNO EQU   INDMSIOT+168                                             00993000
IEFEDL   EQU   0                                                        00994000
EDLHDR   EQU   IEFEDL                                                   00995000
EDLGENNO EQU   EDLHDR+4                                                 00996000
EDLFGENP EQU   EDLHDR+8                                                 00997000
EDLUVFLG EQU   EDLHDR+16                                                00998000
EDLENTRY EQU   0                                                        00999000
EDLNXTNT EQU   EDLENTRY                                                 01000000
EDLDEVT  EQU   EDLENTRY+4                                               01001000
EDLGRPNO EQU   EDLENTRY+8                                               01002000
EDLGRPTR EQU   EDLENTRY+12                                              01003000
EDLDTFLG EQU   EDLENTRY+20                                              01004000
EINDEVTP EQU   EDLDTFLG                                                 01005000
EDLGNTRY EQU   0                                                        01006000
EDLNXGRP EQU   EDLGNTRY                                                 01007000
EDLGRID  EQU   EDLGNTRY+12                                              01008000
EDLGRFLG EQU   EDLGNTRY+16                                              01009000
EDLUCBL  EQU   0                                                        01010000
EDLINDIC EQU   EDLUCBL+2                                                01011000
VOLUNTAB EQU   0                                                        01012000
VOLSTAT  EQU   VOLUNTAB+6                                               01013000
VOLSTATA EQU   VOLSTAT                                                  01014000
VOLSTATB EQU   VOLSTAT+1                                                01015000
VOLALOC  EQU   VOLSTATB                                                 01016000
VDEVREQD EQU   VOLSTATB                                                 01017000
VOLSTATC EQU   VOLSTAT+2                                                01018000
VOLSTATD EQU   VOLSTAT+3                                                01019000
VUMUGDON EQU   VOLSTATD                                                 01020000
VOLALGTP EQU   VOLUNTAB+12                                              01021000
ALCWA    EQU   0                                                        01022000
SIOT1P   EQU   ALCWA+8                                                  01023000
CNTABLE  EQU   ALCWA+28                                                 01024000
ALGTABP  EQU   ALCWA+88                                                 01025000
INDICATE EQU   ALCWA+112                                                01026000
@NM00024 EQU   ALCWA+113                                                01027000
TIOTHDRP EQU   ALCWA+120                                                01028000
LGENLOCK EQU   ALCWA+124                                                01029000
NAMES    EQU   0                                                        01030000
ALGPTRS  EQU   0                                                        01031000
ALGPARMP EQU   ALGPTRS                                                  01032000
CVRPARM  EQU   0                                                        01033000
CVRGRPLK EQU   CVRPARM+6                                                01034000
CVRFLG1  EQU   CVRPARM+8                                                01035000
CVRRQLST EQU   0                                                        01036000
CVRMIN   EQU   CVRRQLST+10                                              01037000
CVRFLG2  EQU   CVRRQLST+16                                              01038000
CVRSKFLG EQU   CVRFLG2                                                  01039000
CVRSCRTH EQU   CVRFLG2                                                  01040000
CVRDUPLI EQU   CVRFLG2+1                                                01041000
CVRNGRP  EQU   CVRRQLST+18                                              01042000
CVRGRPPT EQU   CVRRQLST+20                                              01043000
CVRGPLST EQU   0                                                        01044000
CVRGCPTR EQU   CVRGPLST                                                 01045000
CVRGRPID EQU   CVRGPLST+4                                               01046000
CVRGALL  EQU   CVRGPLST+8                                               01047000
CVRFLG3  EQU   CVRGPLST+12                                              01048000
CVRGSKP  EQU   CVRFLG3                                                  01049000
GRPCOUNT EQU   0                                                        01050000
GRPEXCS  EQU   GRPCOUNT+8                                               01051000
ALCWAPTR EQU   0                                                        01052000
FUNCMAP  EQU   0                                                        01053000
ONLYLGEN EQU   FUNCMAP                                                  01054000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01055000
@NM00001 EQU   FUNCMAP                                                  01056000
GRPWPTR  EQU   GRPCOUNT+12                                              01057000
GRPIDENT EQU   GRPCOUNT+10                                              01058000
GRPTOTAL EQU   GRPCOUNT+6                                               01059000
GRPOFFLN EQU   GRPCOUNT+4                                               01060000
GRPALLCT EQU   GRPCOUNT+2                                               01061000
GRPAVAIL EQU   GRPCOUNT                                                 01062000
@NM00031 EQU   CVRGPLST+13                                              01063000
@NM00030 EQU   CVRFLG3                                                  01064000
CVRFORCI EQU   CVRFLG3                                                  01065000
CVRBOUND EQU   CVRGPLST+10                                              01066000
CVRGRPAL EQU   CVRGPLST+6                                               01067000
@NM00029 EQU   CVRRQLST+26                                              01068000
CVRWUCBP EQU   CVRRQLST+24                                              01069000
@NM00028 EQU   CVRFLG2+1                                                01070000
CVRWMOVE EQU   CVRFLG2                                                  01071000
CVRIGNOR EQU   CVRFLG2                                                  01072000
CVRMULTI EQU   CVRFLG2                                                  01073000
CVRFULL  EQU   CVRFLG2                                                  01074000
CVRREACH EQU   CVRFLG2                                                  01075000
CVRRUSED EQU   CVRFLG2                                                  01076000
CVRGNEXT EQU   CVRRQLST+12                                              01077000
CVRPTS   EQU   CVRMIN                                                   01078000
CVRNEED  EQU   CVRRQLST+8                                               01079000
CVRALLCT EQU   CVRRQLST+6                                               01080000
CVRREQ1  EQU   CVRRQLST+4                                               01081000
CVRVUPTR EQU   CVRRQLST                                                 01082000
@NM00027 EQU   CVRPARM+9                                                01083000
@NM00026 EQU   CVRFLG1                                                  01084000
CVRFCALL EQU   CVRFLG1                                                  01085000
CVROFFLG EQU   CVRFLG1                                                  01086000
CVRALFLG EQU   CVRFLG1                                                  01087000
CVRAVFLG EQU   CVRFLG1                                                  01088000
CVRNREQ  EQU   CVRPARM+4                                                01089000
CVRRQPTR EQU   CVRPARM                                                  01090000
ALGGCNTP EQU   ALGPTRS+12                                               01091000
ALGGLSTP EQU   ALGPTRS+8                                                01092000
ALGRQLTP EQU   ALGPTRS+4                                                01093000
ALCPROCN EQU   NAMES+16                                                 01094000
ALCSTEPN EQU   NAMES+8                                                  01095000
ALCJOBN  EQU   NAMES                                                    01096000
EXITPRMP EQU   ALCWA+144                                                01097000
CANCELP  EQU   ALCWA+140                                                01098000
WORK3MP  EQU   ALCWA+136                                                01099000
WMASK2P  EQU   ALCWA+132                                                01100000
WMASKPTR EQU   ALCWA+128                                                01101000
TCBP     EQU   ALCWA+116                                                01102000
ALCWASID EQU   ALCWA+114                                                01103000
@NM00025 EQU   @NM00024                                                 01104000
NODEVERR EQU   @NM00024                                                 01105000
NEEDRCVY EQU   @NM00024                                                 01106000
ALCWAREC EQU   @NM00024                                                 01107000
WAITIGEN EQU   @NM00024                                                 01108000
UNITRECS EQU   @NM00024                                                 01109000
ALCWADUL EQU   INDICATE                                                 01110000
ALCWISAM EQU   INDICATE                                                 01111000
DSSUNIT  EQU   INDICATE                                                 01112000
DSSTAPE  EQU   INDICATE                                                 01113000
PRIVASUM EQU   INDICATE                                                 01114000
INDREQU  EQU   INDICATE                                                 01115000
INDRETRY EQU   INDICATE                                                 01116000
INDWAIT  EQU   INDICATE                                                 01117000
QMGRRBP  EQU   ALCWA+108                                                01118000
RIMTABCT EQU   ALCWA+104                                                01119000
RIMTABLN EQU   ALCWA+100                                                01120000
RIMTABP  EQU   ALCWA+96                                                 01121000
ALGTABSZ EQU   ALCWA+92                                                 01122000
VOLUNSZE EQU   ALCWA+84                                                 01123000
VOLUNPTR EQU   ALCWA+80                                                 01124000
@NM00023 EQU   ALCWA+78                                                 01125000
LTUNITID EQU   ALCWA+76                                                 01126000
TOTVOLUN EQU   CNTABLE+44                                               01127000
NUMREQS  EQU   CNTABLE+40                                               01128000
TOTREQS  EQU   CNTABLE+36                                               01129000
OTHEREQS EQU   CNTABLE+32                                               01130000
SUBSREQS EQU   CNTABLE+28                                               01131000
STRGREQS EQU   CNTABLE+24                                               01132000
PUBLREQS EQU   CNTABLE+20                                               01133000
PVTNREQS EQU   CNTABLE+16                                               01134000
SPECREQS EQU   CNTABLE+12                                               01135000
TPREQS   EQU   CNTABLE+8                                                01136000
VAMREQS  EQU   CNTABLE+4                                                01137000
DMYREQS  EQU   CNTABLE                                                  01138000
EDTABPTR EQU   ALCWA+24                                                 01139000
FAILRSCP EQU   ALCWA+20                                                 01140000
IOSLUTP  EQU   ALCWA+16                                                 01141000
JSCBPTR  EQU   ALCWA+12                                                 01142000
FMAPPTR  EQU   ALCWA+4                                                  01143000
WASIZE   EQU   ALCWA                                                    01144000
VUGRID   EQU   VOLUNTAB+24                                              01145000
VUUCBP   EQU   VOLUNTAB+20                                              01146000
VOLSIOTP EQU   VOLUNTAB+16                                              01147000
VOLUNTID EQU   VOLUNTAB+10                                              01148000
VURCVYPR EQU   VOLSTATD                                                 01149000
VUVLUNIQ EQU   VOLSTATD                                                 01150000
VUDMUNIQ EQU   VOLSTATD                                                 01151000
VUUNALSW EQU   VOLSTATD                                                 01152000
VUDMNDAL EQU   VOLSTATD                                                 01153000
VUDMNDOF EQU   VOLSTATD                                                 01154000
VUREALOC EQU   VOLSTATD                                                 01155000
@NM00022 EQU   VOLSTATC                                                 01156000
@NM00021 EQU   VOLSTATC                                                 01157000
VURECVRY EQU   VOLSTATC                                                 01158000
VOLURREQ EQU   VOLSTATC                                                 01159000
VOLGRREQ EQU   VOLSTATC                                                 01160000
VOLDAREQ EQU   VOLSTATC                                                 01161000
VOLCOREQ EQU   VOLSTATC                                                 01162000
VOLTAREQ EQU   VOLSTATC                                                 01163000
VUAFFWRK EQU   VOLSTATB                                                 01164000
VUVINELG EQU   VOLSTATB                                                 01165000
VUDADSME EQU   VOLSTATB                                                 01166000
VUDNALOC EQU   VOLSTATB                                                 01167000
VUPROCED EQU   VOLSTATB                                                 01168000
VOLMNTD  EQU   VOLSTATB                                                 01169000
VOLDEFER EQU   VOLSTATA                                                 01170000
VUDADSM  EQU   VOLSTATA                                                 01171000
VOLRESVE EQU   VOLSTATA                                                 01172000
VOLNSHR  EQU   VOLSTATA                                                 01173000
VOLSTG   EQU   VOLSTATA                                                 01174000
VOLSPEC  EQU   VOLSTATA                                                 01175000
VOLPRV   EQU   VOLSTATA                                                 01176000
VOLPUB   EQU   VOLSTATA                                                 01177000
VOLID    EQU   VOLUNTAB                                                 01178000
EDLNOJES EQU   EDLINDIC                                                 01179000
EDLVOLAF EQU   EDLINDIC                                                 01180000
EDLENQ   EQU   EDLINDIC                                                 01181000
EDLDADSM EQU   EDLINDIC                                                 01182000
EDLALCD  EQU   EDLINDIC                                                 01183000
EDLUCBAD EQU   EDLUCBL                                                  01184000
EDLJINEL EQU   EDLGRFLG                                                 01185000
EDLLISTP EQU   EDLGNTRY+8                                               01186000
EDLUCBNO EQU   EDLGNTRY+4                                               01187000
@NM00020 EQU   EDLENTRY+18                                              01188000
EDLNSCNT EQU   EDLENTRY+16                                              01189000
EDLMGENS EQU   EDLUVFLG                                                 01190000
EDLVAM   EQU   EDLUVFLG                                                 01191000
EDLGMTP  EQU   EDLHDR+12                                                01192000
EDLLUV   EQU   EDLHDR                                                   01193000
SIODDSNL EQU   INDMSIOT+173                                             01194000
SIOVDSNL EQU   INDMSIOT+172                                             01195000
SIOVDSNT EQU   INDMSIOT+170                                             01196000
SIOTVMVP EQU   INDMSIOT+164                                             01197000
SIOTJFX  EQU   INDMSIOT+160                                             01198000
SJFCBPTR EQU   INDMSIOT+156                                             01199000
SIOTETIO EQU   INDMSIOT+148                                             01200000
SIOTATE  EQU   INDMSIOT+144                                             01201000
SIOTEDLS EQU   INDMSIOT+132                                             01202000
SIOTRSNC EQU   INDMSIOT+130                                             01203000
SCTANAME EQU   INDMSIOT+122                                             01204000
@NM00019 EQU   INDMSIOT+108                                             01205000
SIOTSSNM EQU   INDMSIOT+104                                             01206000
@NM00018 EQU   SIOTBYT2                                                 01207000
@NM00017 EQU   SIOTBYT2                                                 01208000
SIOTCVOL EQU   SIOTBYT2                                                 01209000
SIOTCNEW EQU   SIOTBYT2                                                 01210000
SIOTCALC EQU   SIOTBYT2                                                 01211000
SIOTGALL EQU   SIOTBYT2                                                 01212000
SIOTDSPD EQU   SIOTBYT2                                                 01213000
SIOTDMND EQU   SIOTBYT2                                                 01214000
SIOTOPUC EQU   INDMSIOT+99                                              01215000
SIOTOUTR EQU   INDMSIOT+97                                              01216000
SIOTOUTC EQU   INDMSIOT+96                                              01217000
@NM00016 EQU   INDMSIOT+93                                              01218000
SIOTAUNC EQU   SIOTALTD                                                 01219000
SIOTACAT EQU   SIOTALTD                                                 01220000
SIOTADEL EQU   SIOTALTD                                                 01221000
SIOTAKEP EQU   SIOTALTD                                                 01222000
SIOTNPRV EQU   SIOTALTD                                                 01223000
SIOJCATS EQU   SIOTALTD                                                 01224000
@NM00015 EQU   SIOTALTD                                                 01225000
@NM00014 EQU   SIOTALTD                                                 01226000
@NM00013 EQU   INDMSIOT+91                                              01227000
SIOTNDSB EQU   INDMSIOT+88                                              01228000
@NM00012 EQU   INDMSIOT+84                                              01229000
SIOTDPCD EQU   INDMSIOT+82                                              01230000
@NM00011 EQU   INDMSIOT+81                                              01231000
SCTOUTPN EQU   INDMSIOT+80                                              01232000
SCTOUTNO EQU   INDMSIOT+76                                              01233000
SCTOUTNM EQU   INDMSIOT+68                                              01234000
SIOUCBAD EQU   SCTUTYPE+5                                               01235000
SIOUCNVT EQU   SCTUTYPE+4                                               01236000
SIOUBYT4 EQU   SIOTDEVT+3                                               01237000
@NM00010 EQU   SIOUBYT3                                                 01238000
SIO3UREC EQU   SIOUBYT3                                                 01239000
SIO3DISP EQU   SIOUBYT3                                                 01240000
SIO3DACC EQU   SIOUBYT3                                                 01241000
SIO3COMM EQU   SIOUBYT3                                                 01242000
SIO3TAPE EQU   SIOUBYT3                                                 01243000
SIOUBYT2 EQU   SIOTDEVT+1                                               01244000
SIOUBYT1 EQU   SIOTDEVT                                                 01245000
SIOTOMN  EQU   SCTSBYT4                                                 01246000
SIOTIPDI EQU   SCTSBYT4                                                 01247000
SIOTVAFF EQU   SCTSBYT4                                                 01248000
SIOTSTEP EQU   SCTSBYT4                                                 01249000
SIOTASCI EQU   SCTSBYT4                                                 01250000
SIOTAFF  EQU   SCTSBYT4                                                 01251000
SIOTGDGA EQU   SCTSBYT4                                                 01252000
SCTSGDGS EQU   SCTSBYT4                                                 01253000
SCTSOLD  EQU   SCTSBYT3                                                 01254000
SCTSMOD  EQU   SCTSBYT3                                                 01255000
SCTSNEW  EQU   SCTSBYT3                                                 01256000
SCTSYSOU EQU   SCTSBYT3                                                 01257000
SCTVREF  EQU   SCTSBYT3                                                 01258000
SCTALCHK EQU   SCTSBYT3                                                 01259000
SCTSYSNE EQU   SCTSBYT3                                                 01260000
SCTDSNRF EQU   SCTSBYT3                                                 01261000
SCTRECVD EQU   SCTSBYT2                                                 01262000
SCTDEFER EQU   SCTSBYT2                                                 01263000
SCTLABEL EQU   SCTSBYT2                                                 01264000
SCTUNLBD EQU   SCTSBYT2                                                 01265000
SCTJOBLB EQU   SCTSBYT2                                                 01266000
SCTVOLAF EQU   SCTSBYT2                                                 01267000
SIOTCATL EQU   SCTSBYT2                                                 01268000
SIOCLUNL EQU   SCTSBYT2                                                 01269000
SIOTJSCT EQU   SCTSBYT1                                                 01270000
SCTUNAFF EQU   SCTSBYT1                                                 01271000
SCTPARLM EQU   SCTSBYT1                                                 01272000
SIOTQDSN EQU   SCTSBYT1                                                 01273000
SIOTGDSN EQU   SCTSBYT1                                                 01274000
SIOTCCAT EQU   SCTSBYT1                                                 01275000
SCTSYSIN EQU   SCTSBYT1                                                 01276000
SCTDUMMY EQU   SCTSBYT1                                                 01277000
SIOTUNCT EQU   SCTSDISP                                                 01278000
SIOTCTLG EQU   SCTSDISP                                                 01279000
SIOTDLET EQU   SCTSDISP                                                 01280000
SIOTKEEP EQU   SCTSDISP                                                 01281000
SIOTPASS EQU   SCTSDISP                                                 01282000
SIOTPRIV EQU   SCTSDISP                                                 01283000
S3400DSP EQU   SCTSDISP                                                 01284000
SIOTRETN EQU   SCTSDISP                                                 01285000
SIOTVLCT EQU   INDMSIOT+54                                              01286000
SCTNMBUT EQU   INDMSIOT+53                                              01287000
SIOTRTRY EQU   SIOTBYT0                                                 01288000
SIOTPUPV EQU   SIOTBYT0                                                 01289000
SIOTNOPV EQU   SIOTBYT0                                                 01290000
SIOTGIGN EQU   SIOTBYT0                                                 01291000
SPVTAMSG EQU   SIOTBYT0                                                 01292000
SIOTFUDA EQU   SIOTBYT0                                                 01293000
SIOTDYAL EQU   SIOTBYT0                                                 01294000
SIOTSSDS EQU   SIOTBYT0                                                 01295000
SIOTGIID EQU   INDMSIOT+50                                              01296000
SCTVOLCT EQU   INDMSIOT+49                                              01297000
SCTSPOOL EQU   INDMSIOT+48                                              01298000
SIOTQNAM EQU   SIOTTSTC                                                 01299000
SIOTDSNM EQU   SIOTTSTC                                                 01300000
SIOTTRKM EQU   SIOTTSTC                                                 01301000
@NM00009 EQU   SIOTTSTC                                                 01302000
SIOTTERM EQU   SIOTTSTC                                                 01303000
@NM00008 EQU   SIOTTSTC                                                 01304000
@NM00007 EQU   SIOTBYT3                                                 01305000
S3400OFF EQU   SIOTBYT3                                                 01306000
SIOTJES3 EQU   SIOTBYT3                                                 01307000
SIOCDEVT EQU   SIOTBYT3                                                 01308000
SIOALIAS EQU   SIOTBYT3                                                 01309000
SCTDDINO EQU   INDMSIOT+44                                              01310000
SIOTDDNT EQU   SIOTBYT1                                                 01311000
SIODADSM EQU   SIOTBYT1                                                 01312000
SIOTDADR EQU   SIOTBYT1                                                 01313000
SIODUNAL EQU   SIOTBYT1                                                 01314000
SIOVAMDS EQU   SIOTBYT1                                                 01315000
SIOTHOLD EQU   SIOTBYT1                                                 01316000
SIOTOCKP EQU   SIOTBYT1                                                 01317000
SIOPSCNT EQU   INDMSIOT+42                                              01318000
SIOTREFN EQU   INDMSIOT+40                                              01319000
SIOTOTUN EQU   INDMSIOT+39                                              01320000
SIOTVRSB EQU   INDMSIOT+36                                              01321000
@NM00006 EQU   INDMSIOT+35                                              01322000
SCTPJFCB EQU   INDMSIOT+32                                              01323000
@NM00005 EQU   INDMSIOT+31                                              01324000
SCTPSIOT EQU   INDMSIOT+28                                              01325000
@NM00004 EQU   INDMSIOT+24                                              01326000
SIODSNTE EQU   INDMSIOT+22                                              01327000
SIOTUNAF EQU   SCTUSADD                                                 01328000
SIOTDEST EQU   INDMSIOT+12                                              01329000
SCTDDNAM EQU   INDMSIOT+4                                               01330000
SIOTTYPE EQU   INDMSIOT+3                                               01331000
SIOTDSKA EQU   INDMSIOT                                                 01332000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01333000
@RC00065 EQU   @RC00062                                                 01334000
@RC00045 EQU   @RC00043                                                 01335000
@ENDDATA EQU   *                                                        01336000
         END   IEFAB474,(C'PLS2001',0701,76352)                         01337000
