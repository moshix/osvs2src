         TITLE 'IEFAB480 - COVER/REDUCE                                *00001000
                        '                                               00002000
IEFAB480 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEFAB480  74.212'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         MODESET EXTKEY=SCHED,SAVEKEY=(2)                               00015000
         GSPACE   R,LV=(0)                                              00016000
         LR    @11,@01                                          01S0001 00017000
         USING @DATD,@11                                        01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         STC   @02,@OLDKEY                                      01S0001 00020000
         MODESET KEYADDR=(2)                                            00021000
         LM    @00,@02,20(@13)                                  01S0001 00022000
         ST    @11,8(,@13)                                      01S0001 00023000
         LR    @13,@11                                          01S0001 00024000
         MODESET EXTKEY=ZERO                                            00025000
         MVC   @PC00001(4),0(@01)                               01S0001 00026000
         MODESET EXTKEY=SCHED                                           00027000
*   PARMPTR=PARMPTR2;               /* COPY PARM TO LOCAL VARIABLE TO   00028000
*                                      IMPROVE PERFORMANCE           */ 00029000
*                                                               01S0049 00030000
         L     @08,@PC00001                                     01S0049 00031000
         L     PARMPTR,PARMPTR2(,@08)                           01S0049 00032000
*   /*****************************************************************/ 00033000
*   /*                                                               */ 00034000
*   /* CHECK VALIDITY OF FLAGS                                       */ 00035000
*   /*                                                               */ 00036000
*   /*****************************************************************/ 00037000
*                                                               01S0050 00038000
*   RCODE=NOERROR;                  /* INITIALIZE RCODE TO SUCCESSFUL*/ 00039000
         SLR   @04,@04                                          01S0050 00040000
         LR    RCODE,@04                                        01S0050 00041000
*                                                               02S0051 00042000
*/********************************************************************/ 00043000
*/*                                                                  */ 00044000
*/* SEGMENT NAME - CHKPARM                                           */ 00045000
*/*                                                                  */ 00046000
*/* DESCRIPTIVE NAME - VALIDATE PARAMETER                            */ 00047000
*/*                                                                  */ 00048000
*/* FUNCTION - TO CHECK PARAMETER FLAGS FOR CONSISTENCY              */ 00049000
*/*                                                                  */ 00050000
*/* OPERATION - A COUNT IS KEPT OF THE NUMBER OF FLAGS ON.  AT THE   */ 00051000
*/*            END, THE COUNT IS CHECKED.  IF THE VALUE IS 0, THE    */ 00052000
*/*            THE RETURN CODE VARIABLE IS SET TO INDICATE THE ERROR.*/ 00053000
*/*                                                                  */ 00054000
*/* ENTRY - INLINE SUBROUTINE - ENTERED AT TOP.                      */ 00055000
*/*                                                                  */ 00056000
*/*   PURPOSE - SEE FUNCTION                                         */ 00057000
*/*                                                                  */ 00058000
*/*   INPUT  - CVRPARM   CVRAVFLG                                    */ 00059000
*/*                      CVRALFLG                                    */ 00060000
*/*                      CVROFFLG                                    */ 00061000
*/*                                                                  */ 00062000
*/* EXIT - NORMAL - (INLINE SUBROUTINE EXITS AT BOTTOM)              */ 00063000
*/*                                                                  */ 00064000
*/*   CONDITION - PARAMETER FLAGS CHECKED                            */ 00065000
*/*                                                                  */ 00066000
*/*   OUTPUT - NONE                                                  */ 00067000
*/*                                                                  */ 00068000
*/*   CONDITION - FLAG COUNT IS ZERO                                 */ 00069000
*/*                                                                  */ 00070000
*/*   RETURN CODE - RCODE = 12                                       */ 00071000
*/*                                                                  */ 00072000
*/********************************************************************/ 00073000
*                                                               02S0051 00074000
*   DO;                             /* START OF CHKPARM              */ 00075000
*     FLAGCNT=CNTINIT;              /* INITIALIZE COUNTER            */ 00076000
         LR    FLAGCNT,@04                                      02S0052 00077000
*     IF CVRAVFLG=ON                /* AVAILABLE FLAG ON?            */ 00078000
*       THEN                                                    02S0053 00079000
         TM    CVRAVFLG(PARMPTR),B'10000000'                    02S0053 00080000
         BNO   @RF00053                                         02S0053 00081000
*       FLAGCNT=FLAGCNT+CNTINCR;    /* INCREMENT COUNT OF FLAGS      */ 00082000
         AH    FLAGCNT,@CH00051                                 02S0054 00083000
*     IF CVRALFLG=ON                /* CHECK ALLOCATED FLAG          */ 00084000
*       THEN                        /* ALLOCATED FLAG ON             */ 00085000
@RF00053 TM    CVRALFLG(PARMPTR),B'01000000'                    02S0055 00086000
         BNO   @RF00055                                         02S0055 00087000
*       FLAGCNT=FLAGCNT+CNTINCR;    /* INCREMENT COUNT OF FLAGS      */ 00088000
         AH    FLAGCNT,@CH00051                                 02S0056 00089000
*     IF CVROFFLG=ON                /* CHECK OFF-LINE FLAG           */ 00090000
*       THEN                        /* OFF-LINE FLAG ON              */ 00091000
@RF00055 TM    CVROFFLG(PARMPTR),B'00100000'                    02S0057 00092000
         BNO   @RF00057                                         02S0057 00093000
*       FLAGCNT=FLAGCNT+CNTINCR;    /* INCREMENT COUNT OF FLAGS      */ 00094000
         AH    FLAGCNT,@CH00051                                 02S0058 00095000
*     IF FLAGCNT=CNTINIT            /* ANY FLAGS ON?                 */ 00096000
*       THEN                        /* NO - ERROR                    */ 00097000
@RF00057 LTR   FLAGCNT,FLAGCNT                                  02S0059 00098000
         BNZ   @RF00059                                         02S0059 00099000
*       RCODE=BADPARM;              /* SET UP RETURN CODE            */ 00100000
         LA    RCODE,12                                         02S0060 00101000
*     ELSE                                                      02S0061 00102000
*       ;                           /* YES - PARAMETERS OK           */ 00103000
@RF00059 DS    0H                                               02S0062 00104000
*   END;                            /* END OF CHKPARM                */ 00105000
*   IF RCODE=NOERROR                /* PARAMETERS OK?                */ 00106000
*     THEN                          /* PROCESS REQ                   */ 00107000
*                                                               01S0063 00108000
         SLR   @08,@08                                          01S0063 00109000
         CR    RCODE,@08                                        01S0063 00110000
         BNE   @RF00063                                         01S0063 00111000
*     /***************************************************************/ 00112000
*     /*                                                             */ 00113000
*     /* INITIALIZE VOLATILE FIELDS IN INPUT STRUCTURES              */ 00114000
*     /*                                                             */ 00115000
*     /***************************************************************/ 00116000
*                                                               01S0064 00117000
*                                                               02S0064 00118000
*/********************************************************************/ 00119000
*/*                                                                  */ 00120000
*/* SEGMENT NAME - CVRINIT                                           */ 00121000
*/*                                                                  */ 00122000
*/* DESCRIPTIVE NAME - INITIALIZATION ROUTINE                        */ 00123000
*/*                                                                  */ 00124000
*/* FUNCTION - TO INITIALIZE VARIABLES AND FILL IN VOLATILE AREAS    */ 00125000
*/*            OF TABLES.  ALSO CONSTRUCTS CVRWORK, A WORKAREA FOR   */ 00126000
*/*            GROUPS.                                               */ 00127000
*/*                                                                  */ 00128000
*/* OPERATION -                                                      */ 00129000
*/*      FIRST REQUEST SCAN COUNTS TOTAL NUMBER OF LOCKED GROUPS TO  */ 00130000
*/*            DETERMINE MAXIMUM SIZE OF WORK AREA AND SETS WORK     */ 00131000
*/*            AREA POINTER (GRPWPTR) TO 0 FOR LATER USE IN UNIQUELY */ 00132000
*/*            ASSIGNING WORK AREA ENTRIES TO GROUP COUNT ENTRIES.   */ 00133000
*/*            ALSO INITIALIZES CVRNEED, EITHER TO 0 IF NOT FIRST    */ 00134000
*/*            CALL OR TO NUMBER STILL REQUIRED IF FIRST CALL.  A    */ 00135000
*/*            COUNT IS KEPT OF NUMBER OF ALLOCATED UNITS FOR EACH   */ 00136000
*/*            REQUEST.  IF THIS NUMBER AND CVRNEED ARE BOTH 0, THE  */ 00137000
*/*            REQUEST IS MARKED 'FULL' FOR USE IN PTS PROCESSING.   */ 00138000
*/*      WORKAREA GETMAIN IS FOR NUMBER OF GROUPS COUNTED PLUS 1.    */ 00139000
*/*            THE EXTRA IS TO CONTAIN A 'LAST ENTRY' FLAG USED TO   */ 00140000
*/*            END ALL SCANS OF THE TABLE.  IT IS UNLIKELY THAT ALL  */ 00141000
*/*            OF THESE ENTRIES WILL BE REQUIRED, BUT IT SAVES A     */ 00142000
*/*            DATA SCAN.                                            */ 00143000
*/*      SECOND REQUEST SCAN ASSIGNS WORK AREA ENTRIES TO GRPCOUNT   */ 00144000
*/*            ENTRIES AND CALCULATES THE NUMBER OF UNITS AVAILABLE  */ 00145000
*/*            FOR ALLOCATION.                                       */ 00146000
*/*      GROUP SCAN CHECKS EACH GROUP TO BE SURE THAT MORE UNITS     */ 00147000
*/*            HAVE NOT BEEN ALLOCATED (BY CALLER) THAN WERE         */ 00148000
*/*            ORIGINALLY AVAILABLE.  IF SOME 'EXCESS' COUNT IS      */ 00149000
*/*            NEGATIVE, ALLOCATIONS ARE REDUCED TO CORRECT THE      */ 00150000
*/*            CONDITION AND THE NUMBER OF UNITS NEEDED IS           */ 00151000
*/*            INCREASED.                                            */ 00152000
*/*                                                                  */ 00153000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 00154000
*/*                                                                  */ 00155000
*/*   PURPOSE - SEE FUNCTION                                         */ 00156000
*/*                                                                  */ 00157000
*/*   INPUT  - CVRPARM   CVRRQPTR  POINTER TO FIRST REQUEST          */ 00158000
*/*                      CVRNREQ   NUMBER OF REQUESTS                */ 00159000
*/*                      CVRFLG1   INDICATES WHICH COUNTS ARE TO     */ 00160000
*/*                                BE USED                           */ 00161000
*/*                      CVRGRPLK  ID OF HIGHEST LOCKED GROUP        */ 00162000
*/*            CVRRQLST  CVRREQ1   NUMBER OF UNITS REQUIRED FOR REQ. */ 00163000
*/*                      CVRALLCT  NUMBER OF UNITS ALREADY ALLOCATED */ 00164000
*/*                      CVRSKFLG  1 - IGNORE THIS REQUEST           */ 00165000
*/*                      CVRNGRP   NUMBER OF GROUPS FOR THIS REQUEST */ 00166000
*/*                      CVRGRPPT  POINTER TO FIRST GROUP ENTRY      */ 00167000
*/*            CVRGPLST  CVRGCPTR  POINTER TO COUNT ENTRY            */ 00168000
*/*                      CVRGRPID  ID OF GROUP                       */ 00169000
*/*                      CVRGRPAL  UNITS PRE-ALLOCATED               */ 00170000
*/*            GRPCOUNT  GRPAVAIL  NUMBER OF AVAILABLE UNITS         */ 00171000
*/*                      GRPALLCT  NUMBER OF ALLOCATED UNITS         */ 00172000
*/*                      GRPOFFLN  NUMBER OF OFF-LINE UNITS          */ 00173000
*/*                                                                  */ 00174000
*/* EXIT - (INLINE SUBROUTINE - EXITS AT BOTTOM)                     */ 00175000
*/*                                                                  */ 00176000
*/*   CONDITION - NORMAL - FUNCTION COMPLETE                         */ 00177000
*/*                                                                  */ 00178000
*/*   OUTPUT - CVRRQLST  CVRNEED   NUMBER STILL TO BE ALLOCATED      */ 00179000
*/*            CVRGPLST  CVRGALL   NUMBER ALLOCATED SO FAR           */ 00180000
*/*            GRPCOUNT  GRPEXCS   NUMBER OF UNITS STILL AVAILABLE   */ 00181000
*/*                      GRPWPTR   POINTER TO CVRWORK ENTRY FOR THIS */ 00182000
*/*                                GROUP                             */ 00183000
*/*            COUNT               NUMBER OF UNIQUE LOCKED GROUPS    */ 00184000
*/*            CVRWORK             WORK AREA FOR COUNTS              */ 00185000
*/*            SIZE                SIZE OF GETMAINED AREA            */ 00186000
*/*            ACVRWORK            ADDRESS OF GETMAINED AREA         */ 00187000
*/*                                                                  */ 00188000
*/* IN-LINE SUBROUTINES                                              */ 00189000
*/*            CNTGRPS             COUNTS GROUPS AND PUTS INITIAL    */ 00190000
*/*                                VALUES INTO FIELDS                */ 00191000
*/*            GETWORK             GETMAIN FOR WORK AREA             */ 00192000
*/*            SUMUNITS            TOTAL ALLOCATABLE UNITS ACCORDING */ 00193000
*/*                                TO FLAGS IN CVRPARM               */ 00194000
*/*            REDOSOL             REDUCE SOLUTION IF GROUP IS OVER- */ 00195000
*/*                                ALLOCATED                         */ 00196000
*/*                                                                  */ 00197000
*/********************************************************************/ 00198000
*                                                               02S0064 00199000
*     DO;                           /* START OF CVRINIT              */ 00200000
*                                                               02S0064 00201000
*       /*************************************************************/ 00202000
*       /*                                                           */ 00203000
*       /* COUNT GROUPS USED IN THIS SET OF REQUESTS TO DETERMINE    */ 00204000
*       /* SIZE OF WORK AREA. IN ADDITION, CALCULATE NUMBER STILL    */ 00205000
*       /* NEEDED FOR EACH REQUEST AND MARK ANY REQUEST WHICH IS     */ 00206000
*       /* FULLY BOUND.                                              */ 00207000
*       /*                                                           */ 00208000
*       /*************************************************************/ 00209000
*                                                               02S0065 00210000
*                                                               03S0065 00211000
*/********************************************************************/ 00212000
*/*                                                                  */ 00213000
*/*  SEGMENT NAME - CNTGRPS                                          */ 00214000
*/*                                                                  */ 00215000
*/* DESCRIPTIVE NAME - COUNT LOCKED GROUPS                           */ 00216000
*/*                                                                  */ 00217000
*/* FUNCTION - TO COUNT THE GROUPS USED FOR THE GETMAIN AND TO FILL  */ 00218000
*/*            IN THE INITIAL VALUES IN WORK FIELDS IN INPUT TABLES. */ 00219000
*/*                                                                  */ 00220000
*/* OPERATION -                                                      */ 00221000
*/*      REQUEST SCAN - CALCULATE CVRNEED IF FIRST CALL, OR SET IT   */ 00222000
*/*            TO 0.  THE NUMBER ALLOCATED IS COUNTED IN THE GROUP   */ 00223000
*/*            SCAN.  IF NUMBER ALLOCATED(MOVEABLE) AND NUMBER       */ 00224000
*/*            NEEDED ARE BOTH 0, MARK THE REQUEST 'FULL.'           */ 00225000
*/*      GROUP SCAN - COUNT THE NUMBER OF LOCKED GROUPS.  IF FIRST   */ 00226000
*/*            CALL, COPY THE ALREADY ALLOCATED FIELD AND SUBTRACT   */ 00227000
*/*            BOUND COUNT FROM CVRNEED.  IF ANY ARE ALLOCATED       */ 00228000
*/*            (CVRGALL>0), ADD THE NUMBER ALLOCATED TO ALCOUNT,     */ 00229000
*/*            TO BE USED TO LOCATE FULL REQUESTS.                   */ 00230000
*/*                                                                  */ 00231000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 00232000
*/*                                                                  */ 00233000
*/*   PURPOSE - SEE FUNCTION                                         */ 00234000
*/*                                                                  */ 00235000
*/*   INPUT  - CVRPARM   CVRFCALL  1 - FIRST CALL WITH THIS DATA     */ 00236000
*/*            CVRRQLST  CVRREQ1   NUMBER NEEDED                     */ 00237000
*/*                      CVRALLCT  NUMBER ALREADY ALLOCATED BY CALLER*/ 00238000
*/*            CVRGPLST  CVRGRPAL  NUMBER ALLOCATED FROM GROUP BY    */ 00239000
*/*                                CALLER - FIRST CALL ONLY          */ 00240000
*/*                      CVRGALL   NUMBER ALLOCATED FROM GROUP BY    */ 00241000
*/*                                PREVIOUS INVOCATION OF IEFAB480   */ 00242000
*/*                      CVRBOUND  NUMBER BOUND TO GROUP BY CALLER   */ 00243000
*/*                                                                  */ 00244000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 00245000
*/*                                                                  */ 00246000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 00247000
*/*                                                                  */ 00248000
*/*   OUTPUT - CVRRQLST  CVRNEED   NUMBER STILL NEEDED (NOT ALREADY  */ 00249000
*/*                                ALLOCATED OR BOUND)               */ 00250000
*/*                      CVRFULL   0 - REQUEST NOT FULLY BOUND       */ 00251000
*/*                                1 - REQUEST FULLY BOUND           */ 00252000
*/*            CVRGPLST  CVRGALL   FIRST CALL ONLY - NUMBER          */ 00253000
*/*                                ALLOCATED BY CALLER               */ 00254000
*/*            GRPCOUNT  GRPWPTR   0                                 */ 00255000
*/*            COUNT               MAXIMUM NUMBER OF LOCKED GROUPS   */ 00256000
*/*                                                                  */ 00257000
*/********************************************************************/ 00258000
*                                                               03S0065 00259000
*       DO;                         /* START OF CNTGRPS              */ 00260000
*         COUNT=CNTINIT;            /* INITIALIZE COUNT OF LOCKED       00261000
*                                      GROUPS                        */ 00262000
*                                                               03S0066 00263000
         LR    COUNT,@08                                        03S0066 00264000
*         /***********************************************************/ 00265000
*         /*                                                         */ 00266000
*         /* SCAN OF REQUESTS WHICH ARE NOT MARKED 'SKIP'. CALCULATE */ 00267000
*         /* NUMBER OF UNITS NEEDED, MARK ANY REQUESTS WHICH ARE     */ 00268000
*         /* FULLY BOUND AND COUNT ALL GROUPS WHICH THESE REQUESTS   */ 00269000
*         /* CAN USE.                                                */ 00270000
*         /*                                                         */ 00271000
*         /***********************************************************/ 00272000
*                                                               03S0067 00273000
*         REQPTR=CVRRQPTR;          /* LOCATE FIRST REQUEST          */ 00274000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0067 00275000
*         DO INDEX1=1 TO CVRNREQ;   /* LOOP OVER ALL REQUESTS        */ 00276000
         LA    INDEX1,1                                         03S0068 00277000
         B     @DE00068                                         03S0068 00278000
@DL00068 DS    0H                                               03S0069 00279000
*           IF CVRSKFLG=OFF         /* REQ TO BE PROCESSED OR   03S0069 00280000
*                                      IGNORED?                      */ 00281000
*             THEN                  /* REQUEST IS TO BE PROCESSED    */ 00282000
         TM    CVRSKFLG(REQPTR),B'10000000'                     03S0069 00283000
         BNZ   @RF00069                                         03S0069 00284000
*             DO;                                               03S0070 00285000
*               IF CVRFCALL=ON      /* FIRST CALL WITH THIS DATA?    */ 00286000
*                 THEN              /* FIRST CALL WITH THIS DATA     */ 00287000
         TM    CVRFCALL(PARMPTR),B'00010000'                    03S0071 00288000
         BNO   @RF00071                                         03S0071 00289000
*                 CVRNEED=CVRREQ1-CVRALLCT;/* NUMBER STILL NEEDED IS    00290000
*                                      NUMBER REQUIRED LESS NUMBER      00291000
*                                      ALLOCATED (NUMBER BOUND WILL     00292000
*                                      BE SUBTRACTED LATER)          */ 00293000
         LH    @10,CVRREQ1(,REQPTR)                             03S0072 00294000
         SH    @10,CVRALLCT(,REQPTR)                            03S0072 00295000
         STH   @10,CVRNEED(,REQPTR)                             03S0072 00296000
*               ELSE                /* NOT FIRST CALL - PREVIOUS        00297000
*                                      ALLOCATION WAS COMPLETE       */ 00298000
*                 CVRNEED=0;        /* INIT TO 0 (CAN BE INCREASED IF   00299000
*                                      CALLER CHANGED SOLUTION)      */ 00300000
         B     @RC00071                                         03S0073 00301000
@RF00071 SLR   @10,@10                                          03S0073 00302000
         STH   @10,CVRNEED(,REQPTR)                             03S0073 00303000
*               ALCOUNT=CNTINIT;    /* INITIALIZE COUNT OF MOVEABLE     00304000
*                                      UNITS                         */ 00305000
*                                                               03S0074 00306000
@RC00071 SLR   ALCOUNT,ALCOUNT                                  03S0074 00307000
*               /*****************************************************/ 00308000
*               /*                                                   */ 00309000
*               /* EXAMINE GROUPS FOR THIS REQUEST, SETTING CVRGALL  */ 00310000
*               /* IF FIRST CALL, KEEPING A COUNT OF NUMBER ALREADY  */ 00311000
*               /* ALLOCATED TO USE IN DETERMINING WHETHER REQUEST IS*/ 00312000
*               /* FULLY BOUND AND, IF FIRST CALL, SUBTRACT BOUND    */ 00313000
*               /* FROM NEEDED UNITS.                                */ 00314000
*               /*                                                   */ 00315000
*               /*****************************************************/ 00316000
*                                                               03S0075 00317000
*               GRPPTR=CVRGRPPT;    /* LOCATE FIRST GROUP FOR REQ    */ 00318000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0075 00319000
*               DO INDEX2=1 TO CVRNGRP WHILE(CVRGRPID<=CVRGRPLK);       00320000
         LA    INDEX2,1                                         03S0076 00321000
         B     @DE00076                                         03S0076 00322000
@DL00076 LH    @06,CVRGRPID(,GRPPTR)                            03S0076 00323000
         CH    @06,CVRGRPLK(,PARMPTR)                           03S0076 00324000
         BH    @DC00076                                         03S0076 00325000
*                 IF CVRGSKP=OFF THEN                           03S0077 00326000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0077 00327000
         BNZ   @RF00077                                         03S0077 00328000
*                   DO;                                         03S0078 00329000
*                     COUNT=COUNT+CNTINCR;/* INCREMENT COUNT OF 03S0079 00330000
*                                      LOCKED GROUPS                 */ 00331000
         AH    COUNT,@CH00051                                   03S0079 00332000
*                     CNTPTR=CVRGCPTR;/* LOCATE COUNTS FOR GROUP     */ 00333000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0080 00334000
*                     IF CVRFCALL=ON/* FIRST CALL WITH THIS DATA?    */ 00335000
*                       THEN        /* FIRST CALL WITH THIS DATA     */ 00336000
         TM    CVRFCALL(PARMPTR),B'00010000'                    03S0081 00337000
         BNO   @RF00081                                         03S0081 00338000
*                       DO;                                     03S0082 00339000
*                         CVRGALL=CVRGRPAL;/* COPY COUNT OF ALLOCATED   00340000
*                                      UNITS TO WORK AREA            */ 00341000
         MVC   CVRGALL(2,GRPPTR),CVRGRPAL(GRPPTR)               03S0083 00342000
*                         CVRNEED=CVRNEED-CVRBOUND;/* REMOVE NUMBER     00343000
*                                      BOUND FROM CONSIDERATION      */ 00344000
         LH    @15,CVRNEED(,REQPTR)                             03S0084 00345000
         SH    @15,CVRBOUND(,GRPPTR)                            03S0084 00346000
         STH   @15,CVRNEED(,REQPTR)                             03S0084 00347000
*                       END;        /* END PROCESSING FIRST CALL     */ 00348000
*/*THE FOLLOWING CODE TRANSLATES THE INPUT DATA INTO A FORM EXPECTED */ 00349000
*/*BY THE 'REDUCE' FUNCTION. THIS CODE IS DEPENDENT ON CVRREQ1 NOT   */ 00350000
*/*GREATER THAN ONE                                                  */ 00351000
*                                                               03S0086 00352000
*                     ELSE          /* NOT FIRST CALL WITH      03S0086 00353000
*                                      DATA-REDUCE                   */ 00354000
*                       DO;                                     03S0086 00355000
         B     @RC00081                                         03S0086 00356000
@RF00081 DS    0H                                               03S0087 00357000
*                         IF CVRALLCT>0&CVRGALL>0 THEN/* ALLOC'D BY     00358000
*                                      CALLER ?                      */ 00359000
         SLR   @15,@15                                          03S0087 00360000
         CH    @15,CVRALLCT(,REQPTR)                            03S0087 00361000
         BNL   @RF00087                                         03S0087 00362000
         CH    @15,CVRGALL(,GRPPTR)                             03S0087 00363000
         BNL   @RF00087                                         03S0087 00364000
*                           CVRGALL=0;/* YES,ZERO ALG'S CHOICE       */ 00365000
         STH   @15,CVRGALL(,GRPPTR)                             03S0088 00366000
*                         ELSE                                  03S0089 00367000
*                           ;       /* NOT ALLOCATED BY CALLER       */ 00368000
@RF00087 DS    0H                                               03S0090 00369000
*                         IF CVRALLCT>0&CVRREQ1>0/* GROUP CALLR 03S0090 00370000
*                                      PICKED                        */ 00371000
*                             &CVRGRPAL=1 THEN                  03S0090 00372000
         SLR   @15,@15                                          03S0090 00373000
         CH    @15,CVRALLCT(,REQPTR)                            03S0090 00374000
         BNL   @RF00090                                         03S0090 00375000
         CH    @15,CVRREQ1(,REQPTR)                             03S0090 00376000
         BNL   @RF00090                                         03S0090 00377000
         CLC   CVRGRPAL(2,GRPPTR),@CH00051                      03S0090 00378000
         BNE   @RF00090                                         03S0090 00379000
*                           DO;     /* YES,DECREMENT NO. OF REQSAC      00380000
*                                      AND FORM COUNT TABLE          */ 00381000
*                             CVRREQ1=0;                        03S0092 00382000
         STH   @15,CVRREQ1(,REQPTR)                             03S0092 00383000
*                             IF GRPAVAIL>0 THEN                03S0093 00384000
         LH    @14,GRPAVAIL(,CNTPTR)                            03S0093 00385000
         CR    @14,@15                                          03S0093 00386000
         BNH   @RF00093                                         03S0093 00387000
*                               GRPAVAIL=GRPAVAIL-1;            03S0094 00388000
         BCTR  @14,0                                            03S0094 00389000
         STH   @14,GRPAVAIL(,CNTPTR)                            03S0094 00390000
*                             ELSE                              03S0095 00391000
*                               DO;                             03S0095 00392000
         B     @RC00093                                         03S0095 00393000
@RF00093 DS    0H                                               03S0096 00394000
*                                 IF GRPALLCT>0&CVRALFLG=ON THEN        00395000
         LH    @15,GRPALLCT(,CNTPTR)                            03S0096 00396000
         LTR   @15,@15                                          03S0096 00397000
         BNP   @RF00096                                         03S0096 00398000
         TM    CVRALFLG(PARMPTR),B'01000000'                    03S0096 00399000
         BNO   @RF00096                                         03S0096 00400000
*                                   GRPALLCT=GRPALLCT-1;        03S0097 00401000
         BCTR  @15,0                                            03S0097 00402000
         STH   @15,GRPALLCT(,CNTPTR)                            03S0097 00403000
*                                 ELSE                          03S0098 00404000
*                                   GRPOFFLN=GRPOFFLN-1;        03S0098 00405000
         B     @RC00096                                         03S0098 00406000
@RF00096 LH    @15,GRPOFFLN(,CNTPTR)                            03S0098 00407000
         BCTR  @15,0                                            03S0098 00408000
         STH   @15,GRPOFFLN(,CNTPTR)                            03S0098 00409000
*                               END;                            03S0099 00410000
*                           END;                                03S0100 00411000
*                         ELSE                                  03S0101 00412000
*                           ;       /* NOT THE GROUP CALLER PICKED   */ 00413000
@RF00090 DS    0H                                               03S0102 00414000
*                       END;                                    03S0102 00415000
@RC00090 DS    0H                                               03S0103 00416000
*                     IF CVRGALL>0  /* ANY UNITS ALLOCATED?          */ 00417000
*                       THEN        /* UNITS ALLOCATED FROM THIS GRP */ 00418000
@RC00081 LH    @15,CVRGALL(,GRPPTR)                             03S0103 00419000
         LTR   @15,@15                                          03S0103 00420000
         BNP   @RF00103                                         03S0103 00421000
*                       ALCOUNT=ALCOUNT+CVRGALL;/* ADD THEM TO COUNT    00422000
*                                      OF ALLOCATED UNITS            */ 00423000
         ALR   ALCOUNT,@15                                      03S0104 00424000
*                     GRPWPTR=INITVAL;/* SET TO STANDARD NULL VALUE  */ 00425000
@RF00103 SLR   @15,@15                                          03S0105 00426000
         ST    @15,GRPWPTR(,CNTPTR)                             03S0105 00427000
*                   END;                                        03S0106 00428000
*                 ELSE                                          03S0107 00429000
*                   ;                                           03S0107 00430000
@RF00077 DS    0H                                               03S0108 00431000
*                 GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT GROUP*/ 00432000
         AH    GRPPTR,@CH00067                                  03S0108 00433000
*               END;                /* END OF GROUP SCAN             */ 00434000
         AH    INDEX2,@CH00051                                  03S0109 00435000
@DE00076 CH    INDEX2,CVRNGRP(,REQPTR)                          03S0109 00436000
         BNH   @DL00076                                         03S0109 00437000
@DC00076 DS    0H                                               03S0110 00438000
*               IF ALCOUNT=CNTINIT  /* ANY UNITS ALLOCATED TO THIS RQ*/ 00439000
*                   &CVRNEED=0      /* OR NEEDED BY IT?              */ 00440000
*                 THEN              /* NO UNITS ALLOCATED OR NEEDED  */ 00441000
         SLR   @10,@10                                          03S0110 00442000
         CR    ALCOUNT,@10                                      03S0110 00443000
         BNE   @RF00110                                         03S0110 00444000
         CH    @10,CVRNEED(,REQPTR)                             03S0110 00445000
         BNE   @RF00110                                         03S0110 00446000
*                 CVRFULL=ON;       /* REQUEST FULL FROM BOUND UNITS */ 00447000
         OI    CVRFULL(REQPTR),B'00010000'                      03S0111 00448000
*               ELSE                /* NOT ALL UNITS BOUND           */ 00449000
*                 CVRFULL=OFF;      /* MARK REQ NOT FULL             */ 00450000
         B     @RC00110                                         03S0112 00451000
@RF00110 NI    CVRFULL(REQPTR),B'11101111'                      03S0112 00452000
*             END;                  /* END PROCESSING OF ACTIVE REQ  */ 00453000
@RC00110 DS    0H                                               03S0114 00454000
*           REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST    */ 00455000
@RF00069 AH    REQPTR,@CH00250                                  03S0114 00456000
*         END;                      /* END OF REQUEST SCAN           */ 00457000
         AH    INDEX1,@CH00051                                  03S0115 00458000
@DE00068 CH    INDEX1,CVRNREQ(,PARMPTR)                         03S0115 00459000
         BNH   @DL00068                                         03S0115 00460000
*       END;                        /* END OF CNTGRPS                */ 00461000
*                                                               03S0117 00462000
*/********************************************************************/ 00463000
*/*                                                                  */ 00464000
*/* SEGMENT NAME - GETWORK                                           */ 00465000
*/*                                                                  */ 00466000
*/* DESCRIPTIVE NAME - OBTAIN STORAGE                                */ 00467000
*/*                                                                  */ 00468000
*/* FUNCTION - TO OBTAIN STORAGE FOR WORK AREA AND SET UP POINTER TO */ 00469000
*/*            IT                                                    */ 00470000
*/*                                                                  */ 00471000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 00472000
*/*                                                                  */ 00473000
*/*   PURPOSE - SEE FUNCTION                                         */ 00474000
*/*                                                                  */ 00475000
*/*   INPUT  - COUNT               NUMBER OF ENTRIES NEEDED IN TABLE */ 00476000
*/*                                                                  */ 00477000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 00478000
*/*                                                                  */ 00479000
*/*   CONDITION - GETMAIN SUCCESSFUL                                 */ 00480000
*/*                                                                  */ 00481000
*/*   OUTPUT - SIZE                SIZE OF AREA                      */ 00482000
*/*            ACVRWORK            ADDRESS OF AREA                   */ 00483000
*/*                                                                  */ 00484000
*/*   RETURN CODE - RCODE = 0                                        */ 00485000
*/*                                                                  */ 00486000
*/* EXIT - ERROR - (INLINE SUBROUTINE - EXITS AT BOTTOM)             */ 00487000
*/*                                                                  */ 00488000
*/*   CONDITION - GETMAIN FAIL                                       */ 00489000
*/*                                                                  */ 00490000
*/*   RETURN CODE - RCODE = 16                                       */ 00491000
*/*                                                                  */ 00492000
*/********************************************************************/ 00493000
*                                                               03S0117 00494000
*       DO;                         /* START OF GETWORK              */ 00495000
*         RESPECIFY                                             03S0118 00496000
*          (R2,                                                 03S0118 00497000
*           R3,                                                 03S0118 00498000
*           R15) RESTRICTED;        /* RESTRICT REGS NEEDED          */ 00499000
*         R2=(COUNT+1)*LENGTH(CVRWORKD);/* FIND MAX SIZE OF WORKAREA */ 00500000
         LA    R2,1                                             03S0119 00501000
         ALR   R2,COUNT                                         03S0119 00502000
         SLA   R2,4                                             03S0119 00503000
*         SIZE=R2;                  /* SAVE SIZE FOR FREEMAIN        */ 00504000
         LR    SIZE,R2                                          03S0120 00505000
*         R3=ADDR(ACVRWORK);        /* PUT ADDRESS OF ANSWER AREA       00506000
*                                      INTO REG FOR GETMAIN          */ 00507000
         LA    R3,ACVRWORK                                      03S0121 00508000
*         GEN REFS(R3,R2) SETS(ACVRWORK,R15)                    03S0122 00509000
*             (GETMAIN  EC,LV=(R2),A=(R3),SP=230,MF=(E,GETMAIN));       00510000
         GETMAIN  EC,LV=(R2),A=(R3),SP=230,MF=(E,GETMAIN)               00511000
*         IF R15^=0                 /* CHECK RESULT OF GETMAIN       */ 00512000
*           THEN                    /* GETMAIN FAILED                */ 00513000
         LTR   R15,R15                                          03S0123 00514000
         BZ    @RF00123                                         03S0123 00515000
*           RCODE=GETFAIL;          /* INDICATE GETMAIN FAILURE      */ 00516000
         LA    RCODE,16                                         03S0124 00517000
*         ELSE                                                  03S0125 00518000
*           ;                       /* GETMAIN SUCCESSFUL            */ 00519000
@RF00123 DS    0H                                               03S0126 00520000
*         RESPECIFY                                             03S0126 00521000
*          (R2,                                                 03S0126 00522000
*           R3,                                                 03S0126 00523000
*           R15);                   /* RELEASE REGISTERS             */ 00524000
*       END;                        /* END OF GETWORK                */ 00525000
*       IF RCODE=NOERROR            /* WAS GETMAIN SUCCESSFUL?       */ 00526000
*         THEN                      /* YES -                         */ 00527000
         LTR   RCODE,RCODE                                      02S0128 00528000
         BNZ   @RF00128                                         02S0128 00529000
*         DO;                                                   02S0129 00530000
*           WORKPTR=ACVRWORK;       /* SET UP ADDRESSABILITY FOR        00531000
*                                      WORKAREA                      */ 00532000
         L     WORKPTR,ACVRWORK                                 02S0130 00533000
*           RESPECIFY                                           02S0131 00534000
*            (CVRWORKD) BASED(WORKPTR);                         02S0131 00535000
*                                                               02S0131 00536000
*           /*********************************************************/ 00537000
*           /*                                                       */ 00538000
*           /* SCAN REQUESTS TO FILL IN GRPCOUNT AND CVRWORK ENTRIES */ 00539000
*           /* FOR EACH UNIQUE GROUP.                                */ 00540000
*           /*                                                       */ 00541000
*           /*********************************************************/ 00542000
*                                                               02S0132 00543000
*           REQPTR=CVRRQPTR;        /* LOCATE FIRST REQUEST          */ 00544000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        02S0132 00545000
*           DO INDEX3=1 TO CVRNREQ; /* SET UP LOOP CTL OVER REQUESTS */ 00546000
         LA    INDEX3,1                                         02S0133 00547000
         B     @DE00133                                         02S0133 00548000
@DL00133 DS    0H                                               02S0134 00549000
*             IF CVRSKFLG=OFF       /* IS REQUEST TO BE IGNORED?     */ 00550000
*               THEN                /* NO - TO BE PROCESSED          */ 00551000
         TM    CVRSKFLG(REQPTR),B'10000000'                     02S0134 00552000
         BNZ   @RF00134                                         02S0134 00553000
*               DO;                                             02S0135 00554000
*                                                               02S0135 00555000
*                 /***************************************************/ 00556000
*                 /*                                                 */ 00557000
*                 /* EXAMINE LOCKED GROUPS. IF NOT PREVIOUSLY FILLED */ 00558000
*                 /* IN (GRPWPTR=0), COMPLETE GRPCOUNT AND CVRWORK   */ 00559000
*                 /* ENTRIES.                                        */ 00560000
*                 /*                                                 */ 00561000
*                 /***************************************************/ 00562000
*                                                               02S0136 00563000
*                 GRPPTR=CVRGRPPT;  /* FIND FIRST GROUP FOR REQ      */ 00564000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         02S0136 00565000
*                 DO INDEX4=1 TO CVRNGRP WHILE(CVRGRPID<=CVRGRPLK);     00566000
         LA    INDEX4,1                                         02S0137 00567000
         B     @DE00137                                         02S0137 00568000
@DL00137 LH    @06,CVRGRPID(,GRPPTR)                            02S0137 00569000
         CH    @06,CVRGRPLK(,PARMPTR)                           02S0137 00570000
         BH    @DC00137                                         02S0137 00571000
*                   IF CVRGSKP=OFF THEN                         02S0138 00572000
         TM    CVRGSKP(GRPPTR),B'10000000'                      02S0138 00573000
         BNZ   @RF00138                                         02S0138 00574000
*                     DO;                                       02S0139 00575000
*                       CNTPTR=CVRGCPTR;/* FIND COUNTS FOR THIS GROUP*/ 00576000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         02S0140 00577000
*                       IF GRPWPTR=INITVAL/* HAS THIS ENTRY BEEN        00578000
*                                      CREATED?                      */ 00579000
*                         THEN      /* NOT USED YET - INCLUDE IN        00580000
*                                      TABLE                         */ 00581000
         ICM   @15,15,GRPWPTR(CNTPTR)                           02S0141 00582000
         BNZ   @RF00141                                         02S0141 00583000
*                         DO;                                   02S0142 00584000
*                                                               03S0143 00585000
*/********************************************************************/ 00586000
*/*                                                                  */ 00587000
*/* SEGMENT NAME - SUMUNITS                                          */ 00588000
*/*                                                                  */ 00589000
*/* DESCRIPTIVE NAME - TOTAL ALLOCATABLE UNITS                       */ 00590000
*/*                                                                  */ 00591000
*/* FUNCTION - TO PUT NUMBER OF UNUSED UNITS OF DESIRED TYPE IN      */ 00592000
*/*            GRPEXCS                                               */ 00593000
*/*                                                                  */ 00594000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 00595000
*/*                                                                  */ 00596000
*/*   PURPOSE - SEE FUNCTION                                         */ 00597000
*/*                                                                  */ 00598000
*/*   INPUT  - CVRPARM   CVRFLG1   INDICATES WHICH COUNT(S) SHOULD   */ 00599000
*/*                                BE USED                           */ 00600000
*/*            GRPCOUNT  GRPAVAIL                                    */ 00601000
*/*                      GRPALLCT                                    */ 00602000
*/*                      GRPOFFLN                                    */ 00603000
*/*                                                                  */ 00604000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 00605000
*/*                                                                  */ 00606000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 00607000
*/*                                                                  */ 00608000
*/*   OUTPUT - GRPCOUNT  GRPEXCS                                     */ 00609000
*/*                                                                  */ 00610000
*/********************************************************************/ 00611000
*                                                               03S0143 00612000
*                           DO;     /* START OF SUMUNITS             */ 00613000
*                             IF CVRAVFLG=ON/* IS AVAILABLE FLAG ON? */ 00614000
*                               THEN/* AVAILABLE FLAG IS ON          */ 00615000
         TM    CVRAVFLG(PARMPTR),B'10000000'                    03S0144 00616000
         BNO   @RF00144                                         03S0144 00617000
*                               GRPEXCS=GRPAVAIL;/* MOVE AVAILABLE      00618000
*                                      COUNT TO WORK FIELD           */ 00619000
         MVC   GRPEXCS(2,CNTPTR),GRPAVAIL(CNTPTR)               03S0145 00620000
*                             ELSE  /* AVAILABLE FLAG IS NOT ON      */ 00621000
*                               GRPEXCS=0;/* INIT FIELD TO 0         */ 00622000
         B     @RC00144                                         03S0146 00623000
@RF00144 SLR   @15,@15                                          03S0146 00624000
         STH   @15,GRPEXCS(,CNTPTR)                             03S0146 00625000
*                             IF CVRALFLG=ON/* IS ALLOCATED FLAG ON? */ 00626000
*                               THEN/* ALLOCATED COUNT TO BE USED    */ 00627000
@RC00144 TM    CVRALFLG(PARMPTR),B'01000000'                    03S0147 00628000
         BNO   @RF00147                                         03S0147 00629000
*                               GRPEXCS=GRPEXCS+GRPALLCT;/* ADD IN      00630000
*                                      ALLOCATED COUNT               */ 00631000
         LH    @15,GRPEXCS(,CNTPTR)                             03S0148 00632000
         AH    @15,GRPALLCT(,CNTPTR)                            03S0148 00633000
         STH   @15,GRPEXCS(,CNTPTR)                             03S0148 00634000
*                             ELSE                              03S0149 00635000
*                               ;   /* COUNT NOT TO BE USED          */ 00636000
@RF00147 DS    0H                                               03S0150 00637000
*                             IF CVROFFLG=ON/* OFF-LINE UNITS TO BE     00638000
*                                      INCLUDED?                     */ 00639000
*                               THEN/* USE OFF-LINE UNITS            */ 00640000
         TM    CVROFFLG(PARMPTR),B'00100000'                    03S0150 00641000
         BNO   @RF00150                                         03S0150 00642000
*                               GRPEXCS=GRPEXCS+GRPOFFLN;/* ADD IN      00643000
*                                      OFF-LINE UNITS                */ 00644000
         LH    @15,GRPEXCS(,CNTPTR)                             03S0151 00645000
         AH    @15,GRPOFFLN(,CNTPTR)                            03S0151 00646000
         STH   @15,GRPEXCS(,CNTPTR)                             03S0151 00647000
*                             ELSE                              03S0152 00648000
*                               ;   /* OFF-LINE UNITS NOT USED       */ 00649000
@RF00150 DS    0H                                               03S0153 00650000
*                           END;    /* END OF SUMUNITS               */ 00651000
*                           GRPWPTR=WORKPTR;/* SET UP CROSS POINTERS */ 00652000
         ST    WORKPTR,GRPWPTR(,CNTPTR)                         02S0154 00653000
*                           WCNTPTR=CNTPTR;                     02S0155 00654000
         ST    CNTPTR,WCNTPTR(,WORKPTR)                         02S0155 00655000
*                           LASTFLAG=OFF;/* INDICATE NOT LAST ENTRY  */ 00656000
         NI    LASTFLAG(WORKPTR),B'01111111'                    02S0156 00657000
*                           WORKPTR=WORKPTR+LENGTH(CVRWORKD);/* SET     00658000
*                                      POINTER TO NEXT ENTRY IN WORK    00659000
*                                      TABLE                         */ 00660000
         AH    WORKPTR,@CH00067                                 02S0157 00661000
*                         END;                                  02S0158 00662000
*                       GRPEXCS=GRPEXCS-CVRBOUND;/* SUBTRACT BOUND      00663000
*                                      UNIT COUNT                    */ 00664000
@RF00141 LH    @15,GRPEXCS(,CNTPTR)                             02S0159 00665000
         SH    @15,CVRBOUND(,GRPPTR)                            02S0159 00666000
         STH   @15,GRPEXCS(,CNTPTR)                             02S0159 00667000
*                       IF CVRGALL>0/* ANY ALLOCATED UNITS?          */ 00668000
*                         THEN      /* YES                           */ 00669000
         LH    @14,CVRGALL(,GRPPTR)                             02S0160 00670000
         LTR   @14,@14                                          02S0160 00671000
         BNP   @RF00160                                         02S0160 00672000
*                         GRPEXCS=GRPEXCS-CVRGALL;/* SUBTRACT FROM      00673000
*                                      ALLOCATABLE UNIT COUNT        */ 00674000
         SLR   @15,@14                                          02S0161 00675000
         STH   @15,GRPEXCS(,CNTPTR)                             02S0161 00676000
*                       IF GRPEXCS<0/* TOO MANY FROM THIS GROUP?     */ 00677000
*                         THEN      /* TOO MANY FROM THIS GROUP      */ 00678000
@RF00160 ICM   @15,3,GRPEXCS(CNTPTR)                            02S0162 00679000
         BNM   @RF00162                                         02S0162 00680000
*                         WPTS=CVRPTS;/* SAVE PTS NUMBER             */ 00681000
         MVC   WPTS(2,WORKPTR),CVRPTS(REQPTR)                   02S0163 00682000
*                     END;                                      02S0164 00683000
*                   ELSE                                        02S0165 00684000
*                     ;                                         02S0165 00685000
@RF00138 DS    0H                                               02S0166 00686000
*                   GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* FIND NEXT GROUP*/ 00687000
@RC00138 AH    GRPPTR,@CH00067                                  02S0166 00688000
*                 END;              /* END OF GROUP SCAN             */ 00689000
         AH    INDEX4,@CH00051                                  02S0167 00690000
@DE00137 CH    INDEX4,CVRNGRP(,REQPTR)                          02S0167 00691000
         BNH   @DL00137                                         02S0167 00692000
@DC00137 DS    0H                                               02S0168 00693000
*               END;                /* END OF PROCESSING OF ACTIVE RQ*/ 00694000
*             REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST  */ 00695000
@RF00134 AH    REQPTR,@CH00250                                  02S0169 00696000
*           END;                    /* END OF REQUEST SCAN           */ 00697000
         AH    INDEX3,@CH00051                                  02S0170 00698000
@DE00133 CH    INDEX3,CVRNREQ(,PARMPTR)                         02S0170 00699000
         BNH   @DL00133                                         02S0170 00700000
*           LASTFLAG=ON;            /* MARK LAST ENTRY               */ 00701000
         OI    LASTFLAG(WORKPTR),B'10000000'                    02S0171 00702000
*                                                               03S0172 00703000
*/********************************************************************/ 00704000
*/*                                                                  */ 00705000
*/* SEGMENT NAME - REDOSOL                                           */ 00706000
*/*                                                                  */ 00707000
*/* DESCRIPTIVE NAME - REDUCE SOLUTION IF GROUP IS OVER ALLOCATED    */ 00708000
*/*                                                                  */ 00709000
*/* FUNCTION - TO REDUCE TRIAL SOLUTION (CVRGALL) ON CALLS OTHER     */ 00710000
*/*            THAN THE FIRST WHERE SELECTION HAS BEEN MADE FROM     */ 00711000
*/*            SOME GROUP NOT IN TRIAL SOLUTION.                     */ 00712000
*/*                                                                  */ 00713000
*/* OPERATION -                                                      */ 00714000
*/*      WORK AREA SCAN - EACH GROUP IS EXAMINED TO SEE WHETHER IT   */ 00715000
*/*            IS OVER-ALLOCATED.  IF IT IS, THE ALLOCATION IS       */ 00716000
*/*            REDUCED.                                              */ 00717000
*/*        REQUEST SCAN - EACH REQUEST WHICH MIGHT HAVE ALLOCATIONS  */ 00718000
*/*            IN THE GROUP IS CHECKED(CVRPTS=WPTS).  IF THE         */ 00719000
*/*            REQUEST HAS UNITS ALLOCATED FROM THE GROUP, THE       */ 00720000
*/*            ALLOCATION IS REDUCED, CVRNEED IS INCREASED, AND      */ 00721000
*/*            THE NUMBER OF OVER-ALLOCATED UNITS IS REDUCED.        */ 00722000
*/*                                                                  */ 00723000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 00724000
*/*                                                                  */ 00725000
*/*   PURPOSE - SEE FUNCTION                                         */ 00726000
*/*                                                                  */ 00727000
*/*   INPUT  - CVRRQLST  CVRFULL   FLAG TO INDICATE REQUEST TO BE    */ 00728000
*/*                                SKIPPED BECAUSE FULLY BOUND       */ 00729000
*/*                      CVRPTS    PTS NUMBER OF REQUEST             */ 00730000
*/*            GRPCOUNT  GRPEXCS   NUMBER AVAIL FOR ALLOCATION       */ 00731000
*/*                                NEGATIVE IF OVER-ALLOCATED        */ 00732000
*/*            CVRWORKD  WPTS      PTS NUMBER OF GROUP               */ 00733000
*/*                                                                  */ 00734000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 00735000
*/*                                                                  */ 00736000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 00737000
*/*                                                                  */ 00738000
*/*   OUTPUT - CVRRQLST  CVRNEED   INCREASED TO SHOW UNITS DISPLACED */ 00739000
*/*            GRPCOUNT  GRPEXCS   IF PREVIOUS NEGATIVE, NOW 0       */ 00740000
*/*            CVRGPLST  CVRGALL   REDUCED IF OVER-ALLOCATED         */ 00741000
*/*                                                                  */ 00742000
*/********************************************************************/ 00743000
*                                                               03S0172 00744000
*           DO;                     /* START OF REDOSOL              */ 00745000
*                                                               03S0172 00746000
*             /*******************************************************/ 00747000
*             /*                                                     */ 00748000
*             /* EXAMINE EACH ENTRY OF GRPCOUNT LOOKING FOR          */ 00749000
*             /* GRPEXCS<0. ANY WHICH ARE FOUND CAUSE A SCAN TO      */ 00750000
*             /* REDUCE ALLOCATIONS TO THIS GROUP IN ORDER TO BRING  */ 00751000
*             /* GRPEXCS TO 0.                                       */ 00752000
*             /*                                                     */ 00753000
*             /*******************************************************/ 00754000
*                                                               03S0173 00755000
*             WORKPTR=ACVRWORK;     /* LOCATE FIRST ENTRY OF CVRWORK */ 00756000
         L     WORKPTR,ACVRWORK                                 03S0173 00757000
*             RESPECIFY                                         03S0174 00758000
*              (GRPCOUNT) BASED(WCNTPTR);/* LOCATE COUNT ENTRIES FROM   00759000
*                                      CORRESPONDING WORKAREA ENTRY  */ 00760000
*             DO WHILE(LASTFLAG=OFF);/* CHECK EACH ENTRY OF CVRWORK  */ 00761000
         B     @DE00175                                         03S0175 00762000
@DL00175 DS    0H                                               03S0176 00763000
*               IF GRPEXCS<0        /* GROUP OVER-ALLOCATED?         */ 00764000
*                 THEN              /* GROUP OVER-ALLOCATED          */ 00765000
         L     @08,WCNTPTR(,WORKPTR)                            03S0176 00766000
         ICM   @15,3,GRPEXCS(@08)                               03S0176 00767000
         BNM   @RF00176                                         03S0176 00768000
*                 DO;               /* REDUCE ALLOCATION             */ 00769000
*                                                               03S0177 00770000
*                   /*************************************************/ 00771000
*                   /*                                               */ 00772000
*                   /* LOCATE REQUESTS WHICH USE THIS GROUP AND      */ 00773000
*                   /* REDUCE THEIR ALLOCATION TO IT UNTIL GRPEXCS IS*/ 00774000
*                   /* 0.                                            */ 00775000
*                   /*                                               */ 00776000
*                   /*************************************************/ 00777000
*                                                               03S0178 00778000
*                   REQPTR=CVRRQPTR;/* LOCATE FIRST REQUEST          */ 00779000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0178 00780000
*                   DO INDEX5=1 TO CVRNREQ WHILE(GRPEXCS<0);/* SET UP   00781000
*                                      LOOP CONTROL OVER REQUESTS TO    00782000
*                                      END WHEN NO LONGER       03S0179 00783000
*                                      OVER-ALLOCATED                */ 00784000
         LA    INDEX5,1                                         03S0179 00785000
         B     @DE00179                                         03S0179 00786000
@DL00179 L     @08,WCNTPTR(,WORKPTR)                            03S0179 00787000
         ICM   @07,3,GRPEXCS(@08)                               03S0179 00788000
         BNM   @DC00179                                         03S0179 00789000
*                     IF CVRSKFLG=OFF&CVRFULL=OFF THEN/* ACTIVE 03S0180 00790000
*                                      REQUEST                       */ 00791000
         TM    CVRSKFLG(REQPTR),B'10010000'                     03S0180 00792000
         BNZ   @RF00180                                         03S0180 00793000
*                       DO;         /* CHECK REQ FOR UNITS IN GROUP  */ 00794000
*                                                               03S0181 00795000
*                         /*******************************************/ 00796000
*                         /*                                         */ 00797000
*                         /* SCAN GROUPS FOR REQUEST UNTIL GROUP IN  */ 00798000
*                         /* QUESTION IS REACHED OR PASSED. IF UNITS */ 00799000
*                         /* HAVE BEEN ALLOCATED TO GROUP, REDUCE    */ 00800000
*                         /* ALLOCATION.                             */ 00801000
*                         /*                                         */ 00802000
*                         /*******************************************/ 00803000
*                                                               03S0182 00804000
*                         GRPPTR=CVRGRPPT;/* LOCATE FIRST GROUP      */ 00805000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0182 00806000
*                         GFOUNDSW=OFF;/* SET SWITCH TO ENTER LOOP   */ 00807000
         NI    GFOUNDSW,B'11111011'                             03S0183 00808000
*                         DO INDEX6=1 TO CVRNGRP WHILE(GFOUNDSW=OFF);   00809000
         LA    INDEX6,1                                         03S0184 00810000
         B     @DE00184                                         03S0184 00811000
@DL00184 TM    GFOUNDSW,B'00000100'                             03S0184 00812000
         BNZ   @DC00184                                         03S0184 00813000
*                                   /* LOOP OVER LOCKED GROUPS UNTIL    00814000
*                                      MATCH FOUND                   */ 00815000
*                           IF CVRGSKP=OFF THEN                 03S0185 00816000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0185 00817000
         BNZ   @RF00185                                         03S0185 00818000
*                             DO;                               03S0186 00819000
*                               IF GRPIDENT<=CVRGRPID/* GROUP REACHED   00820000
*                                      OR PASSED?                    */ 00821000
*                                 THEN/* YES                         */ 00822000
         L     @08,WCNTPTR(,WORKPTR)                            03S0187 00823000
         LH    @15,GRPIDENT(,@08)                               03S0187 00824000
         LH    @14,CVRGRPID(,GRPPTR)                            03S0187 00825000
         CR    @15,@14                                          03S0187 00826000
         BH    @RF00187                                         03S0187 00827000
*                                 DO;                           03S0188 00828000
*                                   GFOUNDSW=ON;/* TERMINATE SCAN OF    00829000
*                                      GROUPS                        */ 00830000
         OI    GFOUNDSW,B'00000100'                             03S0189 00831000
*                                   IF CVRGRPID=GRPIDENT/* GROUP        00832000
*                                      DESIRED?                      */ 00833000
*                                       &CVRGALL>0/* ANY ALLOCATED?  */ 00834000
*                                     THEN/* SOME ALLOCATED TO  03S0190 00835000
*                                      DESIRED GRP                   */ 00836000
         CR    @14,@15                                          03S0190 00837000
         BNE   @RF00190                                         03S0190 00838000
         LH    @15,CVRGALL(,GRPPTR)                             03S0190 00839000
         LTR   @15,@15                                          03S0190 00840000
         BNP   @RF00190                                         03S0190 00841000
*                                    DO;                        03S0191 00842000
*                                     CVRGALL=CVRGALL-1;/* REDUCE       00843000
*                                      ALLOCATION                    */ 00844000
         BCTR  @15,0                                            03S0192 00845000
         STH   @15,CVRGALL(,GRPPTR)                             03S0192 00846000
*                                     GRPEXCS=GRPEXCS+1;/* SHOW GROUP   00847000
*                                      NO LONGER PROBLEM             */ 00848000
         LA    @15,1                                            03S0193 00849000
         LH    @14,GRPEXCS(,@08)                                03S0193 00850000
         ALR   @14,@15                                          03S0193 00851000
         STH   @14,GRPEXCS(,@08)                                03S0193 00852000
*                                     CVRNEED=CVRNEED+1;/* REQUEST      00853000
*                                      NOW NEEDS UNIT                */ 00854000
         AH    @15,CVRNEED(,REQPTR)                             03S0194 00855000
         STH   @15,CVRNEED(,REQPTR)                             03S0194 00856000
*                                    END;/* END OF REDUCING REQUEST  */ 00857000
*                                   ELSE                        03S0196 00858000
*                                    ;/* REQUEST DOESN'T USE DESIRED    00859000
*                                      GROUP OR NONE WERE ALLOCATED  */ 00860000
@RF00190 DS    0H                                               03S0197 00861000
*                                 END;                          03S0197 00862000
*                               ELSE                            03S0198 00863000
*                                 ; /* GROUP NOT REACHED YET         */ 00864000
@RF00187 DS    0H                                               03S0199 00865000
*                             END;                              03S0199 00866000
*                           ELSE                                03S0200 00867000
*                             ;                                 03S0200 00868000
@RF00185 DS    0H                                               03S0201 00869000
*                           GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE    00870000
*                                      NEXT GROUP                    */ 00871000
         AH    GRPPTR,@CH00067                                  03S0201 00872000
*                         END;      /* END OF GROUP SCAN             */ 00873000
         AH    INDEX6,@CH00051                                  03S0202 00874000
@DE00184 CH    INDEX6,CVRNGRP(,REQPTR)                          03S0202 00875000
         BNH   @DL00184                                         03S0202 00876000
@DC00184 DS    0H                                               03S0203 00877000
*                       END;        /* END OF CHECKING REQUEST       */ 00878000
*                     ELSE                                      03S0204 00879000
*                       ;           /* NOT ACTIVE REQUEST            */ 00880000
@RF00180 DS    0H                                               03S0205 00881000
*                     REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT     00882000
*                                      REQUEST                       */ 00883000
         AH    REQPTR,@CH00250                                  03S0205 00884000
*                   END;            /* END OF REQUEST SCAN           */ 00885000
         AH    INDEX5,@CH00051                                  03S0206 00886000
@DE00179 CH    INDEX5,CVRNREQ(,PARMPTR)                         03S0206 00887000
         BNH   @DL00179                                         03S0206 00888000
@DC00179 DS    0H                                               03S0207 00889000
*                 END;              /* END OF PROCESSING OF GROUP       00890000
*                                      WHICH IS OVER-ALLOCATED       */ 00891000
*               ELSE                                            03S0208 00892000
*                 ;                 /* GROUP NOT OVER-ALLOCATED      */ 00893000
@RF00176 DS    0H                                               03S0209 00894000
*               WORKPTR=WORKPTR+LENGTH(CVRWORKD);/* LOCATE NEXT ENTRY   00895000
*                                      OF CVRWORK                    */ 00896000
         AH    WORKPTR,@CH00067                                 03S0209 00897000
*             END;                  /* END OF CVRWORK SCAN           */ 00898000
@DE00175 TM    LASTFLAG(WORKPTR),B'10000000'                    03S0210 00899000
         BZ    @DL00175                                         03S0210 00900000
*             RESPECIFY                                         03S0211 00901000
*              (GRPCOUNT) BASED(CNTPTR);                        03S0211 00902000
*           END;                    /* END OF REDOSOL                */ 00903000
*         END;                                                  02S0213 00904000
*       ELSE                                                    02S0214 00905000
*         ;                         /* GETMAIN FAILED                */ 00906000
@RF00128 DS    0H                                               02S0215 00907000
*     END;                          /* END OF CVRINIT                */ 00908000
*   ELSE                                                        01S0216 00909000
*     ;                             /* PARAMETERS INCORRECT          */ 00910000
@RF00063 DS    0H                                               01S0217 00911000
*   IF RCODE=NOERROR                /* INITIALIZE WITHOUT ERROR?     */ 00912000
*     THEN                          /* YES - CONTINUE PROCESSING     */ 00913000
         LTR   RCODE,RCODE                                      01S0217 00914000
         BNZ   @RF00217                                         01S0217 00915000
*     DO;                                                       01S0218 00916000
*                                                               01S0218 00917000
*       /*************************************************************/ 00918000
*       /*                                                           */ 00919000
*       /* FIND SOLUTION IF POSSIBLE.                                */ 00920000
*       /*                                                           */ 00921000
*       /*************************************************************/ 00922000
*                                                               01S0219 00923000
*       CALL FINDTRL;               /* FIND TRIAL SOLUTION BY   01S0219 00924000
*                                      INSPECTION                    */ 00925000
         BAL   @14,FINDTRL                                      01S0219 00926000
*       RESPECIFY                                               01S0220 00927000
*        (R15) RESTRICTED;                                      01S0220 00928000
*       RCODE=R15;                  /* SAVE RETURN CODE              */ 00929000
         LR    RCODE,R15                                        01S0221 00930000
*       IF RCODE^=NOERROR           /* WERE ALL REQUESTS SATISFIED?  */ 00931000
*         THEN                      /* SOME REQUESTS NOT SATISFIED   */ 00932000
         LTR   RCODE,RCODE                                      01S0222 00933000
         BZ    @RF00222                                         01S0222 00934000
*         DO;                                                   01S0223 00935000
*           CALL HUNG;              /* EXTEND SOLUTION               */ 00936000
         BAL   @14,HUNG                                         01S0224 00937000
*           RCODE=R15;              /* SAVE RETURN CODE              */ 00938000
         LR    RCODE,R15                                        01S0225 00939000
*         END;                                                  01S0226 00940000
*       ELSE                                                    01S0227 00941000
*         ;                         /* SOLUTION COMPLETE             */ 00942000
@RF00222 DS    0H                                               01S0228 00943000
*       RESPECIFY                                               01S0228 00944000
*        (R15);                     /* RELEASE REGISTER              */ 00945000
*                                                               01S0229 00946000
*       /*************************************************************/ 00947000
*       /*                                                           */ 00948000
*       /* REMOVE INADMISSIBLE COMBINATIONS IF ALL REQUESTS ARE      */ 00949000
*       /* SATISFIED                                                 */ 00950000
*       /*                                                           */ 00951000
*       /*************************************************************/ 00952000
*                                                               01S0229 00953000
*       IF RCODE=NOERROR            /* IS ALLOCATION SUCCESSFUL?     */ 00954000
*         THEN                      /* ALLOCATION SUCCESSFUL         */ 00955000
         LTR   RCODE,RCODE                                      01S0229 00956000
         BNZ   @RF00229                                         01S0229 00957000
*                                                               02S0230 00958000
*/********************************************************************/ 00959000
*/*                                                                  */ 00960000
*/* SEGMENT NAME - PTSREDUC                                          */ 00961000
*/*                                                                  */ 00962000
*/* DESCRIPTIVE NAME - REMOVE INELIGIBEL REQUEST/GROUP COMBINATIONS  */ 00963000
*/*                                                                  */ 00964000
*/* FUNCTION - TO DETERMINE FOR EACH REQUEST ALL THE GROUPS FROM     */ 00965000
*/*            WHICH AT LEAST ONE UNIT CAN BE ALLOCATED WITHOUT      */ 00966000
*/*            JEOPARDIZING THE FULL SOLUTION.                       */ 00967000
*/*                                                                  */ 00968000
*/* OPERATION -                                                      */ 00969000
*/*      SCAN 1 - SCAN OF REQUESTS LOOKING FOR THOSE WHICH CAN USE   */ 00970000
*/*            GROUPS WHICH HAVE EXCESS UNITS.  IF ANY ARE FOUND,    */ 00971000
*/*            THIS PTS IS COMPLETED AND THE PTS NUMBER IS           */ 00972000
*/*            INCREMENTED.                                          */ 00973000
*/*      SCAN 2 - LOCATE FIRST ACTIVE REQUEST NOT YET IN PTS.        */ 00974000
*/*            COMPLETE PTS.                                         */ 00975000
*/*      REDUCE - WHEN ALL ACTIVE REQUESTS ARE INCLUDED IN SOME PTS, */ 00976000
*/*            REMOVE GROUPS FROM REQUESTS WHERE GROUP AND REQUEST   */ 00977000
*/*            ARE NOT IN SAME PTS.                                  */ 00978000
*/*                                                                  */ 00979000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 00980000
*/*                                                                  */ 00981000
*/*   PURPOSE - SEE FUNCTION                                         */ 00982000
*/*                                                                  */ 00983000
*/*   INPUT  - GRPCOUNT  GRPEXCS                                     */ 00984000
*/*            CVRGPLST  CVRGALL                                     */ 00985000
*/*                                                                  */ 00986000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 00987000
*/*                                                                  */ 00988000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 00989000
*/*                                                                  */ 00990000
*/*   OUTPUT - CVRRQLST  CVRPTS                                      */ 00991000
*/*            CVRGPLST  CVRGALL                                     */ 00992000
*/*                                                                  */ 00993000
*/* IN-LINE SUBROUTINES                                              */ 00994000
*/*            FINDEXCS            LOCATE GROUPS WITH UNASSIGNED     */ 00995000
*/*                                UNITS                             */ 00996000
*/*            FINDSTRT            LOCATE A REQUEST NOT YET IN PTS   */ 00997000
*/*            ROWREACH            FIND REQUEST REACH OF SPECIFIED   */ 00998000
*/*                                REQUEST                           */ 00999000
*/*            REDUCE              FLAG GROUPS FROM WHICH ALLOCATION */ 01000000
*/*                                MUST NOT BE MADE                  */ 01001000
*/*            COLREACH            FIND GROUPS REACH OF SPECIFIED    */ 01002000
*/*                                GROUPS OVER MARKED REQUESTS       */ 01003000
*/*            FINDROWS            LOCATE REQUESTS HAVING SOLUTION   */ 01004000
*/*                                ELEMENT IN SPECIFIED GROUPS.      */ 01005000
*/*                                                                  */ 01006000
*/********************************************************************/ 01007000
*                                                               02S0230 01008000
*         DO;                       /* START OF PTSREDUC             */ 01009000
*           PTSN=PTSINIT;           /* ID OF FIRST PTS               */ 01010000
         LA    PTSN,1                                           02S0231 01011000
*           RESPECIFY                                           02S0232 01012000
*            (CVRWORKD) BASED(GRPWPTR);                         02S0232 01013000
*                                                               02S0232 01014000
*           /*********************************************************/ 01015000
*           /*                                                       */ 01016000
*           /* LOCATE GROUPS WITH EXCESS UNITS AND REQUESTS WHICH USE*/ 01017000
*           /* THEM                                                  */ 01018000
*           /*                                                       */ 01019000
*           /*********************************************************/ 01020000
*                                                               02S0233 01021000
*                                                               03S0233 01022000
*/********************************************************************/ 01023000
*/*                                                                  */ 01024000
*/* SEGMENT NAME - FINDEXCS                                          */ 01025000
*/*                                                                  */ 01026000
*/* DESCRIPTIVE NAME - LOCATE GROUPS WITH UNASSIGNED UNITS           */ 01027000
*/*                                                                  */ 01028000
*/* FUNCTION - TO FIND GROUPS WITH UNUSED UNITS AND SET UP FLAGS     */ 01029000
*/*                                                                  */ 01030000
*/* OPERATION -                                                      */ 01031000
*/*  INITIALLY - SET WPTS TO 0 FOR ALL GROUP                         */ 01032000
*/*      SCAN EACH ACTIVE REQUEST LOOKING FOR GROUP WITH EXCESS      */ 01033000
*/*            UNITS.  MARK THE GROUP WITH THE PTS NUMBER.  IF       */ 01034000
*/*            REQUEST HAS A GROUP WITH EXCESS UNITS, RESCAN         */ 01035000
*/*            REQUEST AND FLAG ALL SOLUTION GROUPS FOR GROUP REACH. */ 01036000
*/*            SET FLAG INDICATING EXCESS HAS BEEN FOUND.            */ 01037000
*/*                                                                  */ 01038000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 01039000
*/*                                                                  */ 01040000
*/*   PURPOSE - SEE FUNCTION                                         */ 01041000
*/*                                                                  */ 01042000
*/*   INPUT  - GRPCOUNT  GRPEXCS                                     */ 01043000
*/*                                                                  */ 01044000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXIT AT BOTTOM)             */ 01045000
*/*                                                                  */ 01046000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 01047000
*/*                                                                  */ 01048000
*/*   OUTPUT - CVRRQLST  CVRPTS    INIT TO 0                         */ 01049000
*/*                      CVRREACH  INIT ON FOR GROUP REACH OVER      */ 01050000
*/*                                EXCESS                            */ 01051000
*/*            CVRWORKD  WPTS      PTS NUMBER - GROUP WITH EXCESS    */ 01052000
*/*                                -1 - SOLUTION GROUP FOR REQUEST   */ 01053000
*/*                                     WITH EXCESS UNITS            */ 01054000
*/*                                0 - NONE OF ABOVE                 */ 01055000
*/*            EXCESSSW            0 - NO REQUEST CAN USE GROUP WITH */ 01056000
*/*                                     EXCESS                       */ 01057000
*/*                                1 - SOME REQUEST CAN USE GROUP    */ 01058000
*/*                                                                  */ 01059000
*/********************************************************************/ 01060000
*                                                               03S0233 01061000
*           DO;                     /* START OF FINDEXCS             */ 01062000
*                                                               03S0233 01063000
*             /*******************************************************/ 01064000
*             /*                                                     */ 01065000
*             /* INITIALIZE WPTS TO 0 IN ALL WORK AREA ENTRIES       */ 01066000
*             /*                                                     */ 01067000
*             /*******************************************************/ 01068000
*                                                               03S0234 01069000
*             RESPECIFY                                         03S0234 01070000
*              (CVRWORKD) BASED(WORKPTR);                       03S0234 01071000
*             WORKPTR=ACVRWORK;     /* LOCATE FIRST ENTRY            */ 01072000
         L     WORKPTR,ACVRWORK                                 03S0235 01073000
*             DO WHILE(LASTFLAG=OFF);/* SCAN ALL ENTRIES             */ 01074000
         B     @DE00236                                         03S0236 01075000
@DL00236 DS    0H                                               03S0237 01076000
*               WPTS=NOPTS;         /* INIT TO 0                     */ 01077000
         SLR   @15,@15                                          03S0237 01078000
         STH   @15,WPTS(,WORKPTR)                               03S0237 01079000
*               WORKPTR=WORKPTR+LENGTH(CVRWORKD);/* LOCATE NEXT ENTRY*/ 01080000
         AH    WORKPTR,@CH00067                                 03S0238 01081000
*             END;                  /* END CVRWORK SCAN              */ 01082000
@DE00236 TM    LASTFLAG(WORKPTR),B'10000000'                    03S0239 01083000
         BZ    @DL00236                                         03S0239 01084000
*             RESPECIFY                                         03S0240 01085000
*              (CVRWORKD) BASED(GRPWPTR);                       03S0240 01086000
*             EXCESSSW=OFF;         /* INITIALIZE SWITCH             */ 01087000
*                                                               03S0241 01088000
         NI    EXCESSSW,B'11011111'                             03S0241 01089000
*             /*******************************************************/ 01090000
*             /*                                                     */ 01091000
*             /* SCAN ALL REQUESTS TO SET UP FLAGS AND SEARCH FOR    */ 01092000
*             /* EXCESS UNITS                                        */ 01093000
*             /*                                                     */ 01094000
*             /*******************************************************/ 01095000
*                                                               03S0242 01096000
*             REQPTR=CVRRQPTR;      /* LOCATE FIRST REQUEST          */ 01097000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0242 01098000
*             DO INDEX7=1 TO CVRNREQ;/* LOOP OVER ALL REQUESTS       */ 01099000
         LA    INDEX7,1                                         03S0243 01100000
         B     @DE00243                                         03S0243 01101000
@DL00243 DS    0H                                               03S0244 01102000
*               IF CVRSKFLG=OFF     /* IS REQUEST TO BE PROCESSED?   */ 01103000
*                 THEN              /* REQUEST TO BE PROCESSED       */ 01104000
         TM    CVRSKFLG(REQPTR),B'10000000'                     03S0244 01105000
         BNZ   @RF00244                                         03S0244 01106000
*                 DO;               /* START OF PROCESSING ONE REQ.  */ 01107000
*                   CVRPTS=NOPTS;   /* PTS NUMBER INIT TO 0          */ 01108000
         SLR   @06,@06                                          03S0246 01109000
         STH   @06,CVRPTS(,REQPTR)                              03S0246 01110000
*                   IF CVRFULL=OFF  /* REQUEST ALL BOUND?            */ 01111000
*                     THEN          /* REQUEST NOT ALL BOUND         */ 01112000
         TM    CVRFULL(REQPTR),B'00010000'                      03S0247 01113000
         BNZ   @RF00247                                         03S0247 01114000
*                     DO;           /* SEARCH FOR EXCESS             */ 01115000
*                       CVRREACH=ON;/* MARK REQUEST REACHED FOR USE     01116000
*                                      IN GROUP SCAN                 */ 01117000
         OI    CVRREACH(REQPTR),B'00100000'                     03S0249 01118000
*                       FOUNDSW=OFF;/* NO EXCESS UNITS FOUND FOR THIS   01119000
*                                      REQUEST (YET)                 */ 01120000
*                                                               03S0250 01121000
         NI    FOUNDSW,B'10111111'                              03S0250 01122000
*                       /*********************************************/ 01123000
*                       /*                                           */ 01124000
*                       /* SCAN GROUPS FOR REQUEST LOOKING FOR ONE   */ 01125000
*                       /* WITH EXCESS UNITS                         */ 01126000
*                       /*                                           */ 01127000
*                       /*********************************************/ 01128000
*                                                               03S0251 01129000
*                       GRPPTR=CVRGRPPT;/* LOCATE FIRST GROUP        */ 01130000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0251 01131000
*                       DO INDEX8=1 TO CVRNGRP WHILE(CVRGRPID<=CVRGRPLK 01132000
*                             );                                03S0252 01133000
         LA    INDEX8,1                                         03S0252 01134000
         B     @DE00252                                         03S0252 01135000
@DL00252 LH    @06,CVRGRPID(,GRPPTR)                            03S0252 01136000
         CH    @06,CVRGRPLK(,PARMPTR)                           03S0252 01137000
         BH    @DC00252                                         03S0252 01138000
*                         IF CVRGSKP=OFF THEN                   03S0253 01139000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0253 01140000
         BNZ   @RF00253                                         03S0253 01141000
*                           DO;                                 03S0254 01142000
*                             CNTPTR=CVRGCPTR;/* LOCATE GRPCOUNT        01143000
*                                      ENTRY                         */ 01144000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0255 01145000
*                             IF GRPEXCS>0/* ANY EXCESS UNITS?       */ 01146000
*                               THEN/* EXCESS UNITS FOUND            */ 01147000
         ICM   @15,3,GRPEXCS(CNTPTR)                            03S0256 01148000
         BNP   @RF00256                                         03S0256 01149000
*                               DO;                             03S0257 01150000
*                                 FOUNDSW=ON;/* SET FLAG TO SHOW        01151000
*                                      EXCESS FOUND                  */ 01152000
         OI    FOUNDSW,B'01000000'                              03S0258 01153000
*                                 WPTS=PTSN;/* FLAG GROUP            */ 01154000
         L     @01,GRPWPTR(,CNTPTR)                             03S0259 01155000
         STH   PTSN,WPTS(,@01)                                  03S0259 01156000
*                               END;                            03S0260 01157000
*                           END;                                03S0261 01158000
*                         ELSE                                  03S0262 01159000
*                           ;                                   03S0262 01160000
@RF00253 DS    0H                                               03S0263 01161000
*                         GRPPTR=GRPPTR+LENGTH(CVRGPLST);       03S0263 01162000
@RC00253 AH    GRPPTR,@CH00067                                  03S0263 01163000
*                       END;        /* END GROUP SCAN                */ 01164000
         AH    INDEX8,@CH00051                                  03S0264 01165000
@DE00252 CH    INDEX8,CVRNGRP(,REQPTR)                          03S0264 01166000
         BNH   @DL00252                                         03S0264 01167000
@DC00252 DS    0H                                               03S0265 01168000
*                       IF FOUNDSW=ON/* WAS GROUP WITH EXCESS FOUND? */ 01169000
*                         THEN      /* GROUP FOUND WITH EXCESS       */ 01170000
         TM    FOUNDSW,B'01000000'                              03S0265 01171000
         BNO   @RF00265                                         03S0265 01172000
*                         DO;                                   03S0266 01173000
*                           EXCESSSW=ON;/* SET GENERAL SWITCH THAT      01174000
*                                      EXCESS WAS FOUND FOR SOME        01175000
*                                      REQUEST                       */ 01176000
*                                                               03S0267 01177000
         OI    EXCESSSW,B'00100000'                             03S0267 01178000
*                           /*****************************************/ 01179000
*                           /*                                       */ 01180000
*                           /* SCAN GROUPS FOR THIS REQUEST AGAIN,   */ 01181000
*                           /* THIS TIME FOR SOLUTION GROUPS.        */ 01182000
*                           /*                                       */ 01183000
*                           /*****************************************/ 01184000
*                                                               03S0268 01185000
*                           GRPPTR=CVRGRPPT;                    03S0268 01186000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0268 01187000
*                           DO INDEX9=1 TO CVRNGRP WHILE(CVRGRPID<=     01188000
*                                 CVRGRPLK);                    03S0269 01189000
         LA    INDEX9,1                                         03S0269 01190000
         B     @DE00269                                         03S0269 01191000
@DL00269 LH    @06,CVRGRPID(,GRPPTR)                            03S0269 01192000
         CH    @06,CVRGRPLK(,PARMPTR)                           03S0269 01193000
         BH    @DC00269                                         03S0269 01194000
*                             IF CVRGSKP=OFF THEN               03S0270 01195000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0270 01196000
         BNZ   @RF00270                                         03S0270 01197000
*                               DO;                             03S0271 01198000
*                                 IF CVRGALL>0/* THIS GROUP USED IN     01199000
*                                      SOLUTION?                     */ 01200000
*                                   THEN/* THIS GROUP USED IN   03S0272 01201000
*                                      SOLUTION                      */ 01202000
         SLR   @06,@06                                          03S0272 01203000
         CH    @06,CVRGALL(,GRPPTR)                             03S0272 01204000
         BNL   @RF00272                                         03S0272 01205000
*                                   DO;                         03S0273 01206000
*                                    CNTPTR=CVRGCPTR;           03S0274 01207000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0274 01208000
*                                    IF WPTS=NOPTS/* GROUP REACHED      01209000
*                                      YET?                          */ 01210000
*                                      THEN/* GROUP NOT REACHED YET  */ 01211000
         SLR   @15,@15                                          03S0275 01212000
         L     @14,GRPWPTR(,CNTPTR)                             03S0275 01213000
         CH    @15,WPTS(,@14)                                   03S0275 01214000
         BNE   @RF00275                                         03S0275 01215000
*                                     WPTS=PTSFLAG;/* FLAG GROUP     */ 01216000
         MVC   WPTS(2,@14),@CH00125                             03S0276 01217000
*                                   END;/* END OF PROCESSING SOLUTION   01218000
*                                      GRP                           */ 01219000
*                               END;                            03S0278 01220000
*                             ELSE                              03S0279 01221000
*                               ;                               03S0279 01222000
@RF00270 DS    0H                                               03S0280 01223000
*                             GRPPTR=GRPPTR+LENGTH(CVRGPLST);   03S0280 01224000
@RC00270 AH    GRPPTR,@CH00067                                  03S0280 01225000
*                           END;    /* END OF GROUP SCAN             */ 01226000
         AH    INDEX9,@CH00051                                  03S0281 01227000
@DE00269 CH    INDEX9,CVRNGRP(,REQPTR)                          03S0281 01228000
         BNH   @DL00269                                         03S0281 01229000
@DC00269 DS    0H                                               03S0282 01230000
*                         END;      /* END OF PROCESSING REQUEST WITH   01231000
*                                      EXCESS UNITS                  */ 01232000
*                     END;          /* END OF SEARCH FOR EXCESS      */ 01233000
*                   ELSE            /* REQUEST ALL BOUND             */ 01234000
*                     CVRREACH=OFF; /* REQUEST NOT REACHED           */ 01235000
         B     @RC00247                                         03S0284 01236000
@RF00247 NI    CVRREACH(REQPTR),B'11011111'                     03S0284 01237000
*                 END;              /* END OF PROCESSING REQUEST     */ 01238000
@RC00247 DS    0H                                               03S0286 01239000
*               REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST*/ 01240000
@RF00244 AH    REQPTR,@CH00250                                  03S0286 01241000
*             END;                  /* END OF REQUEST SCAN           */ 01242000
         AH    INDEX7,@CH00051                                  03S0287 01243000
@DE00243 CH    INDEX7,CVRNREQ(,PARMPTR)                         03S0287 01244000
         BNH   @DL00243                                         03S0287 01245000
*           END;                    /* END OF FINDEXCS               */ 01246000
*           IF EXCESSSW=ON          /* ARE THERE ANY USABLE GROUPS      01247000
*                                      WITH EXCESS UNITS?            */ 01248000
*             THEN                  /* THERE ARE GRPS WITH EXCESS    */ 01249000
         TM    EXCESSSW,B'00100000'                             02S0289 01250000
         BNO   @RF00289                                         02S0289 01251000
*             DO;                                               02S0290 01252000
*               CALL COLREACH;      /* FIND GROUP REACH OF THESE GRPS*/ 01253000
         BAL   @14,COLREACH                                     02S0291 01254000
*               CALL FINDROWS;      /* FIND REQUESTS USING THESE NEW    01255000
*                                      GROUPS                        */ 01256000
         BAL   @14,FINDROWS                                     02S0292 01257000
*               PTSN=PTSN+PTSINCR;  /* SET ID TO NEXT PTS NUMBER     */ 01258000
         AH    PTSN,@CH00051                                    02S0293 01259000
*             END;                  /* END OF PROCESSING CASE WHERE     01260000
*                                      THERE IS EXCESS               */ 01261000
*           DONESW=OFF;             /* INIT LOOP CONTROL VAR         */ 01262000
*                                                               02S0295 01263000
@RF00289 NI    DONESW,B'01111111'                               02S0295 01264000
*           /*********************************************************/ 01265000
*           /*                                                       */ 01266000
*           /* LOCATE REQUEST NOT YET IN PTS AND FIND PTS CONTAINING */ 01267000
*           /* IT. TERMINATE LOOP WHEN ALL ACTIVE REQUESTS ARE IN    */ 01268000
*           /* PTS.                                                  */ 01269000
*           /*                                                       */ 01270000
*           /*********************************************************/ 01271000
*                                                               02S0296 01272000
*           DO WHILE(DONESW=OFF);   /* ITERATE UNTIL ALL REQUESTS ARE   01273000
*                                      IN PTS                        */ 01274000
         B     @DE00296                                         02S0296 01275000
@DL00296 DS    0H                                               02S0297 01276000
*                                                               03S0297 01277000
*/********************************************************************/ 01278000
*/*                                                                  */ 01279000
*/* SEGMENT NAME - FINDSTRT                                          */ 01280000
*/*                                                                  */ 01281000
*/* DESCRIPTIVE NAME - FIND FIRST REQUEST                            */ 01282000
*/*                                                                  */ 01283000
*/* FUNCTION - TO FIND FIRST REQUEST NOT IN PTS OR TO DETECT         */ 01284000
*/*            COMPLETION                                            */ 01285000
*/*                                                                  */ 01286000
*/* OPERATION -                                                      */ 01287000
*/*      REQUEST SCAN - SCAN ACTIVE REQUESTS TURNING OFF REACH FLAG  */ 01288000
*/*            AND SEARCHING FOR FIRST REQUEST NOT IN ANY PTS.  PUT  */ 01289000
*/*            POINTER TO THIS REQUEST INTO STARTR.  IF NO REQUEST   */ 01290000
*/*            IS FOUND, SET DONE FLAG ON.                           */ 01291000
*/*      WORK AREA SCAN - EXECUTED ONLY IF REQUEST NOT IN PTS WAS    */ 01292000
*/*            FOUND.  TURN OFF USED FLAG FOR EACH GROUP             */ 01293000
*/*                                                                  */ 01294000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 01295000
*/*                                                                  */ 01296000
*/*   INPUT  - CVRRQLST  CVRPTS    0 - REQUEST NOT IN PTS            */ 01297000
*/*                                OTHER - REQUEST IN PTS            */ 01298000
*/*                      CVRFULL   1 - REQUEST TO BE IGNORED         */ 01299000
*/*                                                                  */ 01300000
*/* EXIT - (INLINE SUBROUTINE - EXITS AT BOTTOM)                     */ 01301000
*/*                                                                  */ 01302000
*/*   OUTPUT - CVRRQLST  CVRREACH  INIT TO 0                         */ 01303000
*/*            CVRWORKD  WGUSED    INIT TO 0                         */ 01304000
*/*            STARTR              FIRST REQUEST NOT IN PTS OR       */ 01305000
*/*                                0 IF ALL IN PTS                   */ 01306000
*/*            DONESW              1 IF ALL ACTIVE REQUESTS IN PTS   */ 01307000
*/*                                                                  */ 01308000
*/********************************************************************/ 01309000
*                                                               03S0297 01310000
*             DO;                   /* START OF FINDSTRT             */ 01311000
*               STARTR=INITVAL;     /* INITIALIZE PTR TO FIRST  03S0298 01312000
*                                      REQUEST NOT IN PTS            */ 01313000
*                                                               03S0298 01314000
         SLR   STARTR,STARTR                                    03S0298 01315000
*               /*****************************************************/ 01316000
*               /*                                                   */ 01317000
*               /* SCAN REQUESTS INITIALIZING FLAGS AND LOOKING FOR  */ 01318000
*               /* ONE NOT YET IN ANY PTS (CVRPTS=0).                */ 01319000
*               /*                                                   */ 01320000
*               /*****************************************************/ 01321000
*                                                               03S0299 01322000
*               REQPTR=CVRRQPTR;    /* LOCATE FIRST REQUEST          */ 01323000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0299 01324000
*               DO INDEX15=1 TO CVRNREQ;/* SET UP LOOP CONTROL FOR      01325000
*                                      SCAN                          */ 01326000
         LA    INDEX15,1                                        03S0300 01327000
         B     @DE00300                                         03S0300 01328000
@DL00300 DS    0H                                               03S0301 01329000
*                 IF CVRSKFLG=OFF   /* IS REQUEST TO BE PROCESSED?   */ 01330000
*                     &CVRFULL=OFF  /* REQUEST ALL BOUND?            */ 01331000
*                   THEN            /* REQUEST IS TO PROCESSED       */ 01332000
         TM    CVRSKFLG(REQPTR),B'10010000'                     03S0301 01333000
         BNZ   @RF00301                                         03S0301 01334000
*                   DO;                                         03S0302 01335000
*                     CVRREACH=OFF; /* MARK REQUEST NO YET REACHED   */ 01336000
         NI    CVRREACH(REQPTR),B'11011111'                     03S0303 01337000
*                     IF CVRPTS=NOPTS/* IS THIS FIRST UNUSED REQUEST?*/ 01338000
*                         &STARTR=INITVAL THEN/* FIRST REQUEST NOT IN   01339000
*                                      PTS                           */ 01340000
         SLR   @06,@06                                          03S0304 01341000
         CH    @06,CVRPTS(,REQPTR)                              03S0304 01342000
         BNE   @RF00304                                         03S0304 01343000
         CR    STARTR,@06                                       03S0304 01344000
         BNE   @RF00304                                         03S0304 01345000
*                       STARTR=REQPTR;/* SAVE PTR TO REQUEST         */ 01346000
         LR    STARTR,REQPTR                                    03S0305 01347000
*                   END;            /* END PROCESSING FO ONE REQ     */ 01348000
@RF00304 DS    0H                                               03S0307 01349000
*                 REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT 03S0307 01350000
*                                      REQUEST                       */ 01351000
@RF00301 AH    REQPTR,@CH00250                                  03S0307 01352000
*               END;                /* END REQUEST SCAN              */ 01353000
         AH    INDEX15,@CH00051                                 03S0308 01354000
@DE00300 CH    INDEX15,CVRNREQ(,PARMPTR)                        03S0308 01355000
         BNH   @DL00300                                         03S0308 01356000
*               IF STARTR=INITVAL   /* IS EVERY REQUEST IN A PTS?    */ 01357000
*                 THEN              /* EVERY REQUEST IS IN PTS       */ 01358000
         LTR   STARTR,STARTR                                    03S0309 01359000
         BNZ   @RF00309                                         03S0309 01360000
*                 DONESW=ON;        /* PTS IDENTIFICATION IS DONE    */ 01361000
         OI    DONESW,B'10000000'                               03S0310 01362000
*               ELSE                /* SOME REQUEST NOT IN PTS YET   */ 01363000
*                 DO;                                           03S0311 01364000
*                                                               03S0311 01365000
         B     @RC00309                                         03S0311 01366000
@RF00309 DS    0H                                               03S0312 01367000
*                   /*************************************************/ 01368000
*                   /*                                               */ 01369000
*                   /* SCAN CVRWORK TURNING OFF 'USED' BIT FOR EACH  */ 01370000
*                   /* GROUP                                         */ 01371000
*                   /*                                               */ 01372000
*                   /*************************************************/ 01373000
*                                                               03S0312 01374000
*                   WORKPTR=ACVRWORK;/* LOCATE START OF CVRWORK      */ 01375000
         L     WORKPTR,ACVRWORK                                 03S0312 01376000
*                   DO WHILE(WORKPTR->LASTFLAG=OFF);            03S0313 01377000
         B     @DE00313                                         03S0313 01378000
@DL00313 DS    0H                                               03S0314 01379000
*                     WORKPTR->WGUSED=OFF;/* TURN OFF FLAG           */ 01380000
         NI    WGUSED(WORKPTR),B'10111111'                      03S0314 01381000
*                     WORKPTR=WORKPTR+LENGTH(CVRWORKD);/* LOCATE NEXT   01382000
*                                      ENTRY                         */ 01383000
         AH    WORKPTR,@CH00067                                 03S0315 01384000
*                   END;            /* END SCAN OF CVRWORK           */ 01385000
@DE00313 TM    LASTFLAG(WORKPTR),B'10000000'                    03S0316 01386000
         BZ    @DL00313                                         03S0316 01387000
*                 END;              /* END HANDLING REQUEST NOT IN      01388000
*                                      PTS                           */ 01389000
*             END;                  /* END FINDSTRT                  */ 01390000
@RC00309 DS    0H                                               03S0319 01391000
*             IF DONESW=OFF         /* IS ANY REQUEST NOT IN PTS?    */ 01392000
*               THEN                /* SOME REQUEST NOT IN PTS       */ 01393000
         TM    DONESW,B'10000000'                               02S0319 01394000
         BNZ   @RF00319                                         02S0319 01395000
*               DO;                                             02S0320 01396000
*                                                               03S0321 01397000
*/********************************************************************/ 01398000
*/*                                                                  */ 01399000
*/* SEGMENT NAME - ROWREACH                                          */ 01400000
*/*                                                                  */ 01401000
*/* DESCRIPTIVE NAME - FIND REQUEST REACH                            */ 01402000
*/*                                                                  */ 01403000
*/* FUNCTION - TO FIND ROW REACH OF STARTR                           */ 01404000
*/*                                                                  */ 01405000
*/* OPERATION -                                                      */ 01406000
*/*      STARTING SCAN - SET PTSFLAG FOR SOLUTION GROUPS FOR         */ 01407000
*/*            STARTING REQUEST.  IT WILL BE USED BY COLREACH LATER. */ 01408000
*/*      REACH LOOP - EACH ITERATION FINDS THE DIRECT REACH OF       */ 01409000
*/*            REQUESTS FOUND IN THE PREVIOUS ITERATION.  A REACHED  */ 01410000
*/*            REQUEST HAS CVRREACH ON, ONE WHOSE REACH HAS BEEN     */ 01411000
*/*            FOUND HAS CVRRUSED ON AS WELL.                        */ 01412000
*/*        REQUEST SCAN 1 - MARK (BY SETTING WGUSED ON) ALL GROUPS   */ 01413000
*/*            WHICH COULD BE USED BY REACHED REQUESTS WHICH HAVE    */ 01414000
*/*            NOT YET BEEN USED.  MARK EACH REACHED REQUEST USED.   */ 01415000
*/*        REQUEST SCAN 2 - FINDS REACHED REQUESTS.  SCAN ALL        */ 01416000
*/*            UNREACHED REQUESTS.  ANY WHICH HAS A GROUP WITH       */ 01417000
*/*            WGUSED ON AS A SOLUTION GROUP IS MARKED REACHED.  IF  */ 01418000
*/*            NONE IS FOUND, SET SWITCH TO TERMINATE OUTER LOOP.    */ 01419000
*/*                                                                  */ 01420000
*/*   INPUT  - STARTR              POINTER TO STARTING REQUEST       */ 01421000
*/*            CVRGPLST  CVRGALL   >0, SOLUTION GROUP                */ 01422000
*/*                                                                  */ 01423000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 01424000
*/*                                                                  */ 01425000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 01426000
*/*                                                                  */ 01427000
*/*   OUTPUT - CVRRQLST  CVRREACH  ON FOR REACHED REQUESTS           */ 01428000
*/*            CVRWORKD  WTPS      -1 FOR SOLUTION GROUPS OF         */ 01429000
*/*                                   STARTING REQUEST               */ 01430000
*/*                                                                  */ 01431000
*/********************************************************************/ 01432000
*                                                               03S0321 01433000
*                 DO;               /* START OF ROWREACH             */ 01434000
*                   STARTR->CVRREACH=ON;/* MARK STARTING REQUEST        01435000
*                                      REACHED                       */ 01436000
*                   STARTR->CVRRUSED=OFF;/* MARK STARTING REQUEST NOT   01437000
*                                      YET USED                      */ 01438000
*                                                               03S0323 01439000
         OI    CVRREACH(STARTR),B'00100000'                     03S0323 01440000
         NI    CVRRUSED(STARTR),B'10111111'                     03S0323 01441000
*                   /*************************************************/ 01442000
*                   /*                                               */ 01443000
*                   /* MARK SOLUTION GROUPS IN STARTING REQUEST FOR  */ 01444000
*                   /* LATER REFERENCE                               */ 01445000
*                   /*                                               */ 01446000
*                   /*************************************************/ 01447000
*                                                               03S0324 01448000
*                   GRPPTR=STARTR->CVRGRPPT;/* LOCATE FIRST GROUP    */ 01449000
         L     GRPPTR,CVRGRPPT(,STARTR)                         03S0324 01450000
*                   DO INDEX16=1 TO STARTR->CVRNGRP WHILE(CVRGRPID<=    01451000
*                         CVRGRPLK);/* SET UP LOOP CONTROL OVER 03S0325 01452000
*                                      LOCKED GROUPS OF STARTING ROW */ 01453000
         LA    INDEX16,1                                        03S0325 01454000
         B     @DE00325                                         03S0325 01455000
@DL00325 LH    @06,CVRGRPID(,GRPPTR)                            03S0325 01456000
         CH    @06,CVRGRPLK(,PARMPTR)                           03S0325 01457000
         BH    @DC00325                                         03S0325 01458000
*                     IF CVRGSKP=OFF THEN                       03S0326 01459000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0326 01460000
         BNZ   @RF00326                                         03S0326 01461000
*                       DO;                                     03S0327 01462000
*                         IF CVRGALL>0/* IS THIS GROUP A SOLUTION       01463000
*                                      GRP?                          */ 01464000
*                           THEN    /* GROUP IS SOLUTION GROUP       */ 01465000
         ICM   @06,3,CVRGALL(GRPPTR)                            03S0328 01466000
         BNP   @RF00328                                         03S0328 01467000
*                           DO;                                 03S0329 01468000
*                             CNTPTR=CVRGCPTR;/* LOCATE GRPCOUNT        01469000
*                                      ENTRY                         */ 01470000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0330 01471000
*                             WPTS=PTSFLAG;/* MARK GROUP             */ 01472000
         L     @04,GRPWPTR(,CNTPTR)                             03S0331 01473000
         MVC   WPTS(2,@04),@CH00125                             03S0331 01474000
*                           END;    /* END PROCESSING SOLUTION GROUP */ 01475000
*                         ELSE                                  03S0333 01476000
*                           ;       /* NOT A SOLUTION GROUP          */ 01477000
@RF00328 DS    0H                                               03S0334 01478000
*                       END;                                    03S0334 01479000
*                     ELSE                                      03S0335 01480000
*                       ;                                       03S0335 01481000
@RF00326 DS    0H                                               03S0336 01482000
*                     GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT     01483000
*                                      GROUP                         */ 01484000
         AH    GRPPTR,@CH00067                                  03S0336 01485000
*                   END;            /* END OF GROUP SCAN             */ 01486000
*                                                               03S0337 01487000
         AH    INDEX16,@CH00051                                 03S0337 01488000
@DE00325 CH    INDEX16,CVRNGRP(,STARTR)                         03S0337 01489000
         BNH   @DL00325                                         03S0337 01490000
@DC00325 DS    0H                                               03S0338 01491000
*                   /*************************************************/ 01492000
*                   /*                                               */ 01493000
*                   /* SCAN ALL REQUESTS LOOKING FOR REQUESTS        */ 01494000
*                   /* REACHABLE FROM THOSE REQUESTS REACHED IN      */ 01495000
*                   /* PREVIOUS PASS (OR STARTING REQUEST IF FIRST   */ 01496000
*                   /* PASS) UNTIL NO MORE REQUESTS ARE REACHED.     */ 01497000
*                   /*                                               */ 01498000
*                   /*************************************************/ 01499000
*                                                               03S0338 01500000
*                   RREACHSW=ON;    /* INITIALIZE LOOP CONTROL  03S0338 01501000
*                                      VARIABLE TO FORCE LOOP TO BE     01502000
*                                      ENTERED                       */ 01503000
         OI    RREACHSW,B'00001000'                             03S0338 01504000
*                   DO WHILE(RREACHSW=ON);/* CONTINUE SEARCH UNTIL NO   01505000
*                                      REQUEST IS REACHED            */ 01506000
*                                                               03S0339 01507000
         B     @DE00339                                         03S0339 01508000
@DL00339 DS    0H                                               03S0340 01509000
*                     /***********************************************/ 01510000
*                     /*                                             */ 01511000
*                     /* SCAN REQUESTS LOOKING FOR THOSE WHICH HAVE  */ 01512000
*                     /* BEEN REACHED BUT NOT USED. THE GROUPS OF    */ 01513000
*                     /* SUCH REQUESTS ARE MARKED FOR USE IN NEXT    */ 01514000
*                     /* SCAN OF REQUESTS.                           */ 01515000
*                     /*                                             */ 01516000
*                     /***********************************************/ 01517000
*                                                               03S0340 01518000
*                     REQPTR=CVRRQPTR;/* LOCATE FIRST REQUEST        */ 01519000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0340 01520000
*                     DO INDEX17=1 TO CVRNREQ;/* SET UP LOOP CTL OVER   01521000
*                                      REQUESTS                      */ 01522000
         LA    INDEX17,1                                        03S0341 01523000
         B     @DE00341                                         03S0341 01524000
@DL00341 DS    0H                                               03S0342 01525000
*                       IF CVRSKFLG=OFF&CVRREACH=ON&CVRRUSED=OFF THEN   01526000
         TM    CVRREACH(REQPTR),B'00100000'                     03S0342 01527000
         BNO   @RF00342                                         03S0342 01528000
         TM    CVRSKFLG(REQPTR),B'11000000'                     03S0342 01529000
         BNZ   @RF00342                                         03S0342 01530000
*                                   /* REQ REACHED BUT NOT YET USED  */ 01531000
*                         DO;                                   03S0343 01532000
*                           GRPPTR=CVRGRPPT;/* LOCATE FIRST GROUP    */ 01533000
*                                                               03S0344 01534000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0344 01535000
*                           /*****************************************/ 01536000
*                           /*                                       */ 01537000
*                           /* MARK ALL GROUPS FOR THIS REQUEST AS   */ 01538000
*                           /* REACHED                               */ 01539000
*                           /*                                       */ 01540000
*                           /*****************************************/ 01541000
*                                                               03S0345 01542000
*                           DO INDEX14=1 TO CVRNGRP WHILE(CVRGRPID<=    01543000
*                                 CVRGRPLK);/* SET UP LOOP CONTROL      01544000
*                                      OVER LOCKED GROUPS            */ 01545000
         LA    INDEX14,1                                        03S0345 01546000
         B     @DE00345                                         03S0345 01547000
@DL00345 LH    @06,CVRGRPID(,GRPPTR)                            03S0345 01548000
         CH    @06,CVRGRPLK(,PARMPTR)                           03S0345 01549000
         BH    @DC00345                                         03S0345 01550000
*                             IF CVRGSKP=OFF THEN               03S0346 01551000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0346 01552000
         BNZ   @RF00346                                         03S0346 01553000
*                               DO;                             03S0347 01554000
*                                 CNTPTR=CVRGCPTR;/* LOCATE GRPCOUNT    01555000
*                                      ENTRY                         */ 01556000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0348 01557000
*                                 WGUSED=ON;/* MARK GROUP REACHED    */ 01558000
         L     @01,GRPWPTR(,CNTPTR)                             03S0349 01559000
         OI    WGUSED(@01),B'01000000'                          03S0349 01560000
*                               END;                            03S0350 01561000
*                             ELSE                              03S0351 01562000
*                               ;                               03S0351 01563000
@RF00346 DS    0H                                               03S0352 01564000
*                             GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* 03S0352 01565000
*                                      LOCATE NEXT GROUP             */ 01566000
         AH    GRPPTR,@CH00067                                  03S0352 01567000
*                           END;    /* END OF GROUP SCAN             */ 01568000
         AH    INDEX14,@CH00051                                 03S0353 01569000
@DE00345 CH    INDEX14,CVRNGRP(,REQPTR)                         03S0353 01570000
         BNH   @DL00345                                         03S0353 01571000
@DC00345 DS    0H                                               03S0354 01572000
*                           CVRRUSED=ON;/* MARK REQUEST USED         */ 01573000
         OI    CVRRUSED(REQPTR),B'01000000'                     03S0354 01574000
*                         END;      /* END OF PROCESSING OF REACHED     01575000
*                                      REQUEST                       */ 01576000
*                       ELSE                                    03S0356 01577000
*                         ;         /* REQ TO BE SKIPPED OR NOT 03S0356 01578000
*                                      REACHED OR ALREADY USED       */ 01579000
@RF00342 DS    0H                                               03S0357 01580000
*                       REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT   01581000
*                                      REQUEST                       */ 01582000
         AH    REQPTR,@CH00250                                  03S0357 01583000
*                     END;          /* END OF REQUEST SCAN           */ 01584000
         AH    INDEX17,@CH00051                                 03S0358 01585000
@DE00341 CH    INDEX17,CVRNREQ(,PARMPTR)                        03S0358 01586000
         BNH   @DL00341                                         03S0358 01587000
*                     RREACHSW=OFF; /* ASSUME NO REACH UNTIL ONE        01588000
*                                      FOUND                         */ 01589000
*                                                               03S0359 01590000
         NI    RREACHSW,B'11110111'                             03S0359 01591000
*                     /***********************************************/ 01592000
*                     /*                                             */ 01593000
*                     /* SCAN ALL REQUESTS WHICH ARE NOT YET IN A PTS*/ 01594000
*                     /* AND WHICH HAVE NOT BEEN REACHED AND EXAMINE */ 01595000
*                     /* THEM TO SEE WHETHER A MARKED GROUP IS A     */ 01596000
*                     /* SOLUTION GROUP FOR THESE REQUESTS. IF A     */ 01597000
*                     /* REQUEST HAS ONE OF THESE GROUPS FOR A       */ 01598000
*                     /* SOLUTION GROUP, MARK IT REACHED.            */ 01599000
*                     /*                                             */ 01600000
*                     /***********************************************/ 01601000
*                                                               03S0360 01602000
*                     REQPTR=CVRRQPTR;/* LOCATE FIRST REQUEST        */ 01603000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0360 01604000
*                     DO INDEX18=1 TO CVRNREQ;/* SET UP LOOP CONTROL    01605000
*                                      OVER REQ                      */ 01606000
         LA    INDEX18,1                                        03S0361 01607000
         B     @DE00361                                         03S0361 01608000
@DL00361 DS    0H                                               03S0362 01609000
*                       IF CVRSKFLG=OFF&CVRFULL=OFF&^(CVRREACH=ON)&     01610000
*                           CVRPTS=NOPTS THEN/* REQUEST NOT REACHED     01611000
*                                      OR IN PTS                     */ 01612000
         TM    CVRSKFLG(REQPTR),B'10110000'                     03S0362 01613000
         BNZ   @RF00362                                         03S0362 01614000
         ICM   @03,3,CVRPTS(REQPTR)                             03S0362 01615000
         BNZ   @RF00362                                         03S0362 01616000
*                         DO;                                   03S0363 01617000
*                           GRPPTR=CVRGRPPT;/* LOCATE FIRST GROUP    */ 01618000
*                                                               03S0364 01619000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0364 01620000
*                           /*****************************************/ 01621000
*                           /*                                       */ 01622000
*                           /* EXAMINE GROUPS FOR THIS REQUEST       */ 01623000
*                           /* LOOKING FOR ONE WHICH HAS BEEN        */ 01624000
*                           /* REACHED. WHEN ONE IS FOUND, MARK THE  */ 01625000
*                           /* REQUEST REACHED AND SET FLAG          */ 01626000
*                           /* INDICATING A REACH HAS BEEN FOUND IN  */ 01627000
*                           /* THIS PASS.                            */ 01628000
*                           /*                                       */ 01629000
*                           /*****************************************/ 01630000
*                                                               03S0365 01631000
*                           DO INDEX19=1 TO CVRNGRP WHILE(CVRGRPID<=    01632000
*                                 CVRGRPLK&^(CVRREACH=ON));/* SCAN      01633000
*                                      UNLOCKED GROUPS UNTIL ONE IS     01634000
*                                      FOUND WHICH IS MARKED         */ 01635000
         LA    INDEX19,1                                        03S0365 01636000
         B     @DE00365                                         03S0365 01637000
@DL00365 LH    @06,CVRGRPID(,GRPPTR)                            03S0365 01638000
         CH    @06,CVRGRPLK(,PARMPTR)                           03S0365 01639000
         BH    @DC00365                                         03S0365 01640000
         TM    CVRREACH(REQPTR),B'00100000'                     03S0365 01641000
         BO    @DC00365                                         03S0365 01642000
*                             IF CVRGSKP=OFF THEN               03S0366 01643000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0366 01644000
         BNZ   @RF00366                                         03S0366 01645000
*                               DO;                             03S0367 01646000
*                                 CNTPTR=CVRGCPTR;/* LOCATE GRPCOUNT    01647000
*                                      ENTRY                         */ 01648000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0368 01649000
*                                 IF CVRGALL>0&WGUSED=ON/* IS THIS      01650000
*                                      MARKED SOLUTION GROUP?        */ 01651000
*                                   THEN/* SOLUTION GROUP AND MARKED */ 01652000
         ICM   @15,3,CVRGALL(GRPPTR)                            03S0369 01653000
         BNP   @RF00369                                         03S0369 01654000
         L     @01,GRPWPTR(,CNTPTR)                             03S0369 01655000
         TM    WGUSED(@01),B'01000000'                          03S0369 01656000
         BNO   @RF00369                                         03S0369 01657000
*                                   DO;                         03S0370 01658000
*                                    CVRREACH=ON;/* MARK REQUEST AS     01659000
*                                      REACHED                       */ 01660000
*                                    CVRRUSED=OFF;/* REQUEST NOT USED   01661000
*                                      YET                           */ 01662000
         OI    CVRREACH(REQPTR),B'00100000'                     03S0372 01663000
         NI    CVRRUSED(REQPTR),B'10111111'                     03S0372 01664000
*                                    RREACHSW=ON;/* REACH FOUND -       01665000
*                                      INDICATE NEED ANOTHER PASS    */ 01666000
         OI    RREACHSW,B'00001000'                             03S0373 01667000
*                                   END;/* END HANDLING OF MARKED GRP*/ 01668000
*                                 ELSE                          03S0375 01669000
*                                   ;/* GROUP NOT SOLUTION OR NOT       01670000
*                                      MARKED                        */ 01671000
@RF00369 DS    0H                                               03S0376 01672000
*                               END;                            03S0376 01673000
*                             ELSE                              03S0377 01674000
*                               ;                               03S0377 01675000
@RF00366 DS    0H                                               03S0378 01676000
*                             GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* 03S0378 01677000
*                                      LOCATE NEXT GROUP             */ 01678000
         AH    GRPPTR,@CH00067                                  03S0378 01679000
*                           END;    /* END OF GROUP SCAN             */ 01680000
         AH    INDEX19,@CH00051                                 03S0379 01681000
@DE00365 CH    INDEX19,CVRNGRP(,REQPTR)                         03S0379 01682000
         BNH   @DL00365                                         03S0379 01683000
@DC00365 DS    0H                                               03S0380 01684000
*                         END;      /* END CHECKING OF UNREACHED REQ.*/ 01685000
*                       ELSE                                    03S0381 01686000
*                         ;         /* REQUEST REACHED OR IN PTS     */ 01687000
@RF00362 DS    0H                                               03S0382 01688000
*                       REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT   01689000
*                                      REQUEST                       */ 01690000
         AH    REQPTR,@CH00250                                  03S0382 01691000
*                     END;          /* END OF SCAN OF REQUEST        */ 01692000
         AH    INDEX18,@CH00051                                 03S0383 01693000
@DE00361 CH    INDEX18,CVRNREQ(,PARMPTR)                        03S0383 01694000
         BNH   @DL00361                                         03S0383 01695000
*                   END;            /* END OF ONE PASS LOOKING FOR      01696000
*                                      REQUEST REACH                 */ 01697000
@DE00339 TM    RREACHSW,B'00001000'                             03S0384 01698000
         BO    @DL00339                                         03S0384 01699000
*                 END;              /* END OF ROWREACH               */ 01700000
*                 CALL COLREACH;    /* FIND GROUP REACH OF GROUPS OF    01701000
*                                      FIRST REQUEST OVER OTHER REQS */ 01702000
         BAL   @14,COLREACH                                     02S0386 01703000
*                 CALL FINDROWS;    /* FIND REQS WHICH HAVE THESE       01704000
*                                      GRPS AS SOLUTION ELEMENTS     */ 01705000
         BAL   @14,FINDROWS                                     02S0387 01706000
*                 PTSN=PTSN+PTSINCR;/* SET ID TO NEXT PTS NUMBER     */ 01707000
         AH    PTSN,@CH00051                                    02S0388 01708000
*               END;                /* END OF PROCESSING OF ONE 02S0389 01709000
*                                      STARTING ROW                  */ 01710000
*           END;                    /* END OF IDENTIFYING PROPER        01711000
*                                      TIGHT SETS                    */ 01712000
@RF00319 DS    0H                                               02S0390 01713000
@DE00296 TM    DONESW,B'10000000'                               02S0390 01714000
         BZ    @DL00296                                         02S0390 01715000
*                                                               03S0391 01716000
*/********************************************************************/ 01717000
*/*                                                                  */ 01718000
*/* SEGMENT NAME - REDUCE                                            */ 01719000
*/*                                                                  */ 01720000
*/* DESCRIPTIVE NAME - FLAG GROUPS NOT ELIGIBLE FOR ALLOCATION       */ 01721000
*/*                                                                  */ 01722000
*/* FUNCTION - TO REMOVE INELIGIBLE REQUEST/GROUP COMBINATIONS.      */ 01723000
*/*                                                                  */ 01724000
*/* OPERATION -                                                      */ 01725000
*/*            EACH REQUEST WHICH IS NOT FULLY BOUND IS EXAMINED.    */ 01726000
*/*            EACH GROUP WHICH IS NOT IN THE SAME PTS AS THE        */ 01727000
*/*            REQUEST(CVRPTS^=WPTS) IS FLAGGED WITH -1 IN CVRGALL.  */ 01728000
*/*                                                                  */ 01729000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 01730000
*/*                                                                  */ 01731000
*/*   PURPOSE - SEE FUNCTION                                         */ 01732000
*/*                                                                  */ 01733000
*/*   INPUT  - CVRRQLST  CVRSKFLG  IS REQUEST TO BE SKIPPED          */ 01734000
*/*                      CVRPTS    PTS ID FOR REQUEST                */ 01735000
*/*            CVRWORKD  WPTS      PTS ID FOR GROUP                  */ 01736000
*/*                                                                  */ 01737000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 01738000
*/*                                                                  */ 01739000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 01740000
*/*                                                                  */ 01741000
*/*   OUTPUT - CVRGPLST  CVRGALL   FLAGGED IF COMBINATION IS NOT     */ 01742000
*/*                                ELIGIBLE                          */ 01743000
*/*                                                                  */ 01744000
*/********************************************************************/ 01745000
*                                                               03S0391 01746000
*           DO;                     /* START OF REDUCE               */ 01747000
*                                                               03S0391 01748000
*             /*******************************************************/ 01749000
*             /*                                                     */ 01750000
*             /* SCAN GROUPS FOR EACH REQUEST TO BE SURE GROUP AND   */ 01751000
*             /* REQUEST HAVE SAME IDS (PTS NUMBERS). IF THE IDS DO  */ 01752000
*             /* NOT MATCH, THE COMBINATION IS MARKED INELIGIBLE.    */ 01753000
*             /*                                                     */ 01754000
*             /*******************************************************/ 01755000
*                                                               03S0392 01756000
*             REQPTR=CVRRQPTR;      /* LOCATE FIRST REQUEST          */ 01757000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0392 01758000
*             DO INDEX20=1 TO CVRNREQ;/* SET UP LOOP CTL OVER   03S0393 01759000
*                                      REQUESTS                      */ 01760000
         LA    INDEX20,1                                        03S0393 01761000
         B     @DE00393                                         03S0393 01762000
@DL00393 DS    0H                                               03S0394 01763000
*               IF CVRSKFLG=OFF     /* REQUEST TO BE SKIPPED?        */ 01764000
*                   &CVRFULL=OFF    /* REQUEST ALL BOUND?            */ 01765000
*                 THEN              /* NO- REQ. TO BE PROCESSED      */ 01766000
         TM    CVRSKFLG(REQPTR),B'10010000'                     03S0394 01767000
         BNZ   @RF00394                                         03S0394 01768000
*                 DO;                                           03S0395 01769000
*                   GRPPTR=CVRGRPPT;/* LOCATE FIRST GROUP            */ 01770000
*                                                               03S0396 01771000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0396 01772000
*                   /*************************************************/ 01773000
*                   /*                                               */ 01774000
*                   /* EXAMINE GROUPS FOR REQUEST AND MARK ANY NOT IN*/ 01775000
*                   /* SAME PTS AS INELIGIBLE (-1 IN CVRGALL).       */ 01776000
*                   /*                                               */ 01777000
*                   /*************************************************/ 01778000
*                                                               03S0397 01779000
*                   DO INDEX21=1 TO CVRNGRP WHILE(CVRGRPID<=CVRGRPLK);  01780000
         LA    INDEX21,1                                        03S0397 01781000
         B     @DE00397                                         03S0397 01782000
@DL00397 LH    @08,CVRGRPID(,GRPPTR)                            03S0397 01783000
         CH    @08,CVRGRPLK(,PARMPTR)                           03S0397 01784000
         BH    @DC00397                                         03S0397 01785000
*                                   /* SET UP LOOP CTL OVER LOCKED      01786000
*                                      GROUPS                        */ 01787000
*                     IF CVRGSKP=OFF THEN                       03S0398 01788000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0398 01789000
         BNZ   @RF00398                                         03S0398 01790000
*                       DO;                                     03S0399 01791000
*                         CNTPTR=CVRGCPTR;/* LOCATE GRPCOUNT ENTRY   */ 01792000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0400 01793000
*                         IF WPTS^=CVRPTS/* DO PTS NUMBERS MATCH?    */ 01794000
*                           THEN    /* IDS DON'T MATCH               */ 01795000
         L     @08,GRPWPTR(,CNTPTR)                             03S0401 01796000
         CLC   WPTS(2,@08),CVRPTS(REQPTR)                       03S0401 01797000
         BE    @RF00401                                         03S0401 01798000
*                           CVRGALL=SKIPFLAG;/* MARK IT INELIGIBLE   */ 01799000
         MVC   CVRGALL(2,GRPPTR),@CH00125                       03S0402 01800000
*                       END;                                    03S0403 01801000
*                     ELSE                                      03S0404 01802000
*                       ;                                       03S0404 01803000
@RF00398 DS    0H                                               03S0405 01804000
*                     GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT     01805000
*                                      GROUP                         */ 01806000
@RC00398 AH    GRPPTR,@CH00067                                  03S0405 01807000
*                   END;            /* END OF GROUP SCAN             */ 01808000
         AH    INDEX21,@CH00051                                 03S0406 01809000
@DE00397 CH    INDEX21,CVRNGRP(,REQPTR)                         03S0406 01810000
         BNH   @DL00397                                         03S0406 01811000
@DC00397 DS    0H                                               03S0407 01812000
*                 END;              /* END OF PROCESSING 1 REQ.      */ 01813000
*               REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST*/ 01814000
@RF00394 AH    REQPTR,@CH00250                                  03S0408 01815000
*             END;                  /* END OF REQUEST SCAN           */ 01816000
         AH    INDEX20,@CH00051                                 03S0409 01817000
@DE00393 CH    INDEX20,CVRNREQ(,PARMPTR)                        03S0409 01818000
         BNH   @DL00393                                         03S0409 01819000
*           END;                    /* END OF REDUCE                 */ 01820000
*         END;                      /* END PTSREDUC                  */ 01821000
*       ELSE                                                    01S0412 01822000
*         ;                         /* ALLOCATION NOT FULL           */ 01823000
@RF00229 DS    0H                                               01S0413 01824000
*                                                               02S0413 01825000
*/********************************************************************/ 01826000
*/*                                                                  */ 01827000
*/* SEGMENT NAME - FREEWORK                                          */ 01828000
*/*                                                                  */ 01829000
*/* DESCRIPTIVE NAME - FREEMAIN FOR WORKAREA                         */ 01830000
*/*                                                                  */ 01831000
*/* FUNCTION - TO FREE WORK AREA AND DELETE REFERENCES TO IT         */ 01832000
*/*                                                                  */ 01833000
*/* OPERATION - CVRWORK IS USED TO LOCATE GRPCOUNT ENTRIES FOR THIS  */ 01834000
*/*            INVOCATION.  THE POINTER TO THE WORKAREA(GRPWPTR) IS  */ 01835000
*/*            SET TO 0 IN EACH GRPCOUNT ENTRY.  THE WORKAREA IS     */ 01836000
*/*            FREED.                                                */ 01837000
*/*                                                                  */ 01838000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 01839000
*/*                                                                  */ 01840000
*/*   PURPOSE - SEE FUNCTION                                         */ 01841000
*/*                                                                  */ 01842000
*/*   INPUT  - ACVRWORK            ADDRESS OF WORK AREA              */ 01843000
*/*            SIZE                LENGTH OF WORK AREA               */ 01844000
*/*                                                                  */ 01845000
*/* EXIT - (INLINE SUBROUTINE - EXITS AT BOTTOM)                     */ 01846000
*/*                                                                  */ 01847000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 01848000
*/*                                                                  */ 01849000
*/*   OUTPUT - GRPCOUNT  GRPWPTR   PTR TO WORKAREA RESET TO 0        */ 01850000
*/*                                                                  */ 01851000
*/********************************************************************/ 01852000
*                                                               02S0413 01853000
*       DO;                         /* START OF FREEWORK             */ 01854000
*         WORKPTR=ACVRWORK;         /* LOCATE START OF WORK AREA     */ 01855000
*                                                               02S0414 01856000
         L     WORKPTR,ACVRWORK                                 02S0414 01857000
*         /***********************************************************/ 01858000
*         /*                                                         */ 01859000
*         /* USE POINTER IN CVRWORK TO LOCATE ENTRIES IN GRPCOUNT AND*/ 01860000
*         /* RESET POINTERS IN GRPCOUNT TO 0.                        */ 01861000
*         /*                                                         */ 01862000
*         /***********************************************************/ 01863000
*                                                               02S0415 01864000
*         RESPECIFY                                             02S0415 01865000
*          (CVRWORKD) BASED(WORKPTR);                           02S0415 01866000
*         DO WHILE(LASTFLAG=OFF);   /* SCAN ALL OF CVRWORK           */ 01867000
         B     @DE00416                                         02S0416 01868000
@DL00416 DS    0H                                               02S0417 01869000
*           WCNTPTR->GRPWPTR=INITVAL;/* RESET ENTRY IN GRPCOUNT      */ 01870000
         L     @08,WCNTPTR(,WORKPTR)                            02S0417 01871000
         SLR   @05,@05                                          02S0417 01872000
         ST    @05,GRPWPTR(,@08)                                02S0417 01873000
*           WORKPTR=WORKPTR+LENGTH(CVRWORKD);/* LOCATE NEXT ENTRY IN    01874000
*                                      CVRWORK                       */ 01875000
         AH    WORKPTR,@CH00067                                 02S0418 01876000
*         END;                      /* END OF SCAN OF CVRWORK        */ 01877000
@DE00416 TM    LASTFLAG(WORKPTR),B'10000000'                    02S0419 01878000
         BZ    @DL00416                                         02S0419 01879000
*         RESPECIFY                                             02S0420 01880000
*          (R0,                                                 02S0420 01881000
*           R1) RESTRICTED;                                     02S0420 01882000
*         R1=ACVRWORK;              /* SET UP REGISTERS 0 & 1 FOR       01883000
*                                      FREEMAIN                      */ 01884000
         L     R1,ACVRWORK                                      02S0421 01885000
*         R0=SIZE;                                              02S0422 01886000
         LR    R0,SIZE                                          02S0422 01887000
*         R0=R0|SUBPL230;           /* FREE FROM SUBPOOL 230         */ 01888000
         O     R0,@CF00128                                      02S0423 01889000
*         GEN REFS(R0,R1)(FREEMAIN R,LV=(0),A=(1));/* FREE WORK AREA */ 01890000
         FREEMAIN R,LV=(0),A=(1)                                        01891000
*         RESPECIFY                                             02S0425 01892000
*          (R0,                                                 02S0425 01893000
*           R1) UNRESTRICTED;                                   02S0425 01894000
*       END;                        /* END OF FREEWORK               */ 01895000
*     END;                                                      01S0427 01896000
*   ELSE                                                        01S0428 01897000
*     ;                                                         01S0428 01898000
@RF00217 DS    0H                                               01S0429 01899000
*   RETURN CODE(RCODE);             /* RETURN CODE SHOWING RESULTS TO   01900000
*                                      CALLER                        */ 01901000
         IC    @02,@OLDKEY                                      01S0429 01902000
         L     @13,4(,@13)                                      01S0429 01903000
         L     @00,@SIZDATD                                     01S0429 01904000
         LR    @01,@11                                          01S0429 01905000
         FSPACE   R,LV=(0),A=(1)                                        01906000
         MODESET KEYADDR=(2)                                            01907000
         LR    @15,@09                                          01S0429 01908000
         L     @14,12(,@13)                                     01S0429 01909000
         LM    @00,@12,20(@13)                                  01S0429 01910000
         BR    @14                                              01S0429 01911000
*                                                               02S0430 01912000
*/********************************************************************/ 01913000
*/*                                                                  */ 01914000
*/* SEGMENT NAME - FINDROWS                                          */ 01915000
*/*                                                                  */ 01916000
*/* DESCRIPTIVE NAME - LOCATE REQUESTS                               */ 01917000
*/*                                                                  */ 01918000
*/* FUNCTION - TO FIND REQUESTS HAVING SOLUTION ELEMENT IN MARKED    */ 01919000
*/*            GROUPS                                                */ 01920000
*/*                                                                  */ 01921000
*/* OPERATION -                                                      */ 01922000
*/*            SCAN REQUESTS LOOKING FOR ONE WHICH IS NOT YET IN     */ 01923000
*/*            PTS BUT WHICH HAS BEEN REACHED.  EXAMINE GROUPS FOR   */ 01924000
*/*            THIS REQUEST.  IF ANY SOLUTION GROUP FOR THIS         */ 01925000
*/*            IS IN THE CURRENT PTS(WPTS=PTSN), THIS REQUEST IS PUT */ 01926000
*/*            INTO THE CURRENT PTS(CVRPTS=PTSN) AND THE GROUP SCAN  */ 01927000
*/*            IS TERMINATED.                                        */ 01928000
*/*                                                                  */ 01929000
*/* ENTRY - FINDROWS                                                 */ 01930000
*/*                                                                  */ 01931000
*/*   PURPOSE - SEE FUNCTION                                         */ 01932000
*/*                                                                  */ 01933000
*/*   INPUT  - CVRGPLST  CVRGALL   >0 - SOLUTION ELEMENT             */ 01934000
*/*            CVRWORK   WPTS      PTS NUMBER FOR GROUP              */ 01935000
*/*            PTSN                CURRENT PTS                       */ 01936000
*/*                                                                  */ 01937000
*/* EXIT -                                                           */ 01938000
*/*                                                                  */ 01939000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 01940000
*/*                                                                  */ 01941000
*/*   OUTPUT - CVRRQLST  CVRPTS    PTS NUMBER FOR REQUEST            */ 01942000
*/*                                                                  */ 01943000
*/********************************************************************/ 01944000
*                                                               02S0430 01945000
*FINDROWS:                                                      02S0430 01946000
*   PROCEDURE;                                                  02S0430 01947000
FINDROWS STM   @14,@12,12(@13)                                  02S0430 01948000
*   RESPECIFY                                                   02S0431 01949000
*    (CVRWORKD) BASED(GRPWPTR);                                 02S0431 01950000
*                                                               02S0431 01951000
*   /*****************************************************************/ 01952000
*   /*                                                               */ 01953000
*   /* SCAN ALL REQUESTS TO FIND THOSE WITH SOLUTION ELEMENT IN      */ 01954000
*   /* CURRENT PTS                                                   */ 01955000
*   /*                                                               */ 01956000
*   /*****************************************************************/ 01957000
*                                                               02S0432 01958000
*   REQPTR=CVRRQPTR;                /* LOCATE FIRST REQUEST          */ 01959000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        02S0432 01960000
*   DO INDEX13=1 TO CVRNREQ;        /* SET UP LOOP CONTROL FOR REQ      01961000
*                                      SCAN                          */ 01962000
*                                                               02S0433 01963000
         LA    INDEX13,1                                        02S0433 01964000
         B     @DE00433                                         02S0433 01965000
@DL00433 DS    0H                                               02S0434 01966000
*     /***************************************************************/ 01967000
*     /*                                                             */ 01968000
*     /* CONSIDER THOSE REQUESTS WHICH ARE NOT MARKED SKIP AND ARE   */ 01969000
*     /* NOT YET IN A PTS AND WHICH HAVE BEEN REACHED                */ 01970000
*     /*                                                             */ 01971000
*     /***************************************************************/ 01972000
*                                                               02S0434 01973000
*     IF CVRSKFLG=OFF&CVRPTS=NOPTS&CVRREACH=ON THEN/* REQUEST IS        01974000
*                                      REACHED AND AVAIL.            */ 01975000
         TM    CVRSKFLG(REQPTR),B'10000000'                     02S0434 01976000
         BNZ   @RF00434                                         02S0434 01977000
         ICM   @10,3,CVRPTS(REQPTR)                             02S0434 01978000
         BNZ   @RF00434                                         02S0434 01979000
         TM    CVRREACH(REQPTR),B'00100000'                     02S0434 01980000
         BNO   @RF00434                                         02S0434 01981000
*       DO;                                                     02S0435 01982000
*                                                               02S0435 01983000
*         /***********************************************************/ 01984000
*         /*                                                         */ 01985000
*         /* SCAN GROUPS FOR REQUEST LOOKING FOR GROUP WHICH IS      */ 01986000
*         /* FLAGGED AND USED IN SOLUTION FOR THIS REQUEST. IF ONE IS*/ 01987000
*         /* FOUND, MARK REQUEST AS BEING IN THIS PTS AND STOP SCAN. */ 01988000
*         /*                                                         */ 01989000
*         /***********************************************************/ 01990000
*                                                               02S0436 01991000
*         GRPPTR=CVRGRPPT;                                      02S0436 01992000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         02S0436 01993000
*         DO INDEX14=1 TO CVRNGRP WHILE(CVRPTS=0&CVRGRPID<=CVRGRPLK);   01994000
         LA    INDEX14,1                                        02S0437 01995000
         B     @DE00437                                         02S0437 01996000
@DL00437 SLR   @10,@10                                          02S0437 01997000
         CH    @10,CVRPTS(,REQPTR)                              02S0437 01998000
         BNE   @DC00437                                         02S0437 01999000
         LH    @09,CVRGRPID(,GRPPTR)                            02S0437 02000000
         CH    @09,CVRGRPLK(,PARMPTR)                           02S0437 02001000
         BH    @DC00437                                         02S0437 02002000
*                                   /* SET UP LOOP CTL FOR GRP SCAN  */ 02003000
*           IF CVRGSKP=OFF THEN                                 02S0438 02004000
         TM    CVRGSKP(GRPPTR),B'10000000'                      02S0438 02005000
         BNZ   @RF00438                                         02S0438 02006000
*             DO;                                               02S0439 02007000
*               CNTPTR=CVRGCPTR;                                02S0440 02008000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         02S0440 02009000
*               IF WPTS=PTSN&CVRGALL>0/* IS GROUP IN THIS PTS AND       02010000
*                                      USED IN SOLUTION              */ 02011000
*                 THEN              /* MEETS ABOVE REQUIREMENTS      */ 02012000
         L     @09,GRPWPTR(,CNTPTR)                             02S0441 02013000
         CH    PTSN,WPTS(,@09)                                  02S0441 02014000
         BNE   @RF00441                                         02S0441 02015000
         CH    @10,CVRGALL(,GRPPTR)                             02S0441 02016000
         BNL   @RF00441                                         02S0441 02017000
*                 CVRPTS=PTSN;      /* PUT REQUEST INTO THIS PTS     */ 02018000
         STH   PTSN,CVRPTS(,REQPTR)                             02S0442 02019000
*               ELSE                                            02S0443 02020000
*                 ;                 /* NO SOLUTION OR NOT IN PTS     */ 02021000
@RF00441 DS    0H                                               02S0444 02022000
*             END;                                              02S0444 02023000
*           ELSE                                                02S0445 02024000
*             ;                                                 02S0445 02025000
@RF00438 DS    0H                                               02S0446 02026000
*           GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT GROUP      */ 02027000
         AH    GRPPTR,@CH00067                                  02S0446 02028000
*         END;                      /* END GROUP SCAN                */ 02029000
         AH    INDEX14,@CH00051                                 02S0447 02030000
@DE00437 CH    INDEX14,CVRNGRP(,REQPTR)                         02S0447 02031000
         BNH   @DL00437                                         02S0447 02032000
@DC00437 DS    0H                                               02S0448 02033000
*       END;                        /* END PROCESSING OF ONE REQ     */ 02034000
*     REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST          */ 02035000
@RF00434 AH    REQPTR,@CH00250                                  02S0449 02036000
*   END;                            /* END OF REQUEST SCAN           */ 02037000
         AH    INDEX13,@CH00051                                 02S0450 02038000
@DE00433 CH    INDEX13,CVRNREQ(,PARMPTR)                        02S0450 02039000
         BNH   @DL00433                                         02S0450 02040000
*   END FINDROWS;                                               02S0451 02041000
@EL00002 DS    0H                                               02S0451 02042000
@EF00002 DS    0H                                               02S0451 02043000
@ER00002 LM    @14,@12,12(@13)                                  02S0451 02044000
         BR    @14                                              02S0451 02045000
*                                                               02S0452 02046000
*/********************************************************************/ 02047000
*/*                                                                  */ 02048000
*/* SEGMENT NAME - COLREACH                                          */ 02049000
*/*                                                                  */ 02050000
*/* DESCRIPTIVE NAME - FIND GROUP REACH                              */ 02051000
*/*                                                                  */ 02052000
*/* FUNCTION - FIND GROUP REACH OF MARKED GROUPS OVER MARKED REQUESTS*/ 02053000
*/*                                                                  */ 02054000
*/* OPERATION -                                                      */ 02055000
*/*      OVERVIEW - GROUP REACH INVOLVES FINDING A MARKED REQUEST    */ 02056000
*/*            WHICH COULD USE THE STARTING GROUP AND DOES USE SOME  */ 02057000
*/*            OTHER GROUP.  THE GROUP USED IS SAID TO BE REACHED.   */ 02058000
*/*      INITIALLY - WPTS IN CVRWORK CONTAINS -1 FOR THOSE GROUPS    */ 02059000
*/*            WHOSE REACH IS TO BE FOUND.  CVRREACH FLAG IS ON FOR  */ 02060000
*/*            THOSE REQUESTS WHICH MAY BE CONSIDERED.               */ 02061000
*/*      INITIALIZATION - TURN OFF USED FLAG FOR EACH REQUEST.       */ 02062000
*/*      DIRECT REACH LOOP - EXECUTED UNTIL ONE PASS DOES NOT FIND   */ 02063000
*/*            ANY FURTHER DIRECT REACH.  CONTROLLED BY CREACHSW.    */ 02064000
*/*      FINDING DIRECT REACH - EACH REQUEST WHICH HAS BEEN          */ 02065000
*/*            REACHED BUT NOT USED IS EXAMINED.  IF ANY GROUP       */ 02066000
*/*            USABLE BY THIS REQUEST HAS BEEN MARKED REACHED,       */ 02067000
*/*            RESCAN ITS GROUPS MARKING ALL SOLUTION GROUPS REACHED */ 02068000
*/*            AND MARK THE REQUEST USED.                            */ 02069000
*/*      CVRWORK SCAN - EXECUTED WHEN COMPLETE GROUP REACH HAS BEEN  */ 02070000
*/*            FOUND.  CHANGE EACH -1 FLAG TO THE PTS NUMBER.        */ 02071000
*/*                                                                  */ 02072000
*/* ENTRY - COLREACH                                                 */ 02073000
*/*                                                                  */ 02074000
*/*   PURPOSE - SEE FUNCTION                                         */ 02075000
*/*                                                                  */ 02076000
*/*   INPUT  - CVRRQLST  CVRREACH  FLAG MARKING REQ ELIGIBLE         */ 02077000
*/*            CVRGPLST  CVRGALL   CURRENT ALLOCATION                */ 02078000
*/*            CVRWORK   WPTS      0 - GROUP NOT REACHED YET         */ 02079000
*/*                                -1 - GROUP REACHED                */ 02080000
*/*                                OTHER - GROUP IN PTS              */ 02081000
*/*            PTSN                CURRENT PTS NUMBER                */ 02082000
*/*                                                                  */ 02083000
*/* EXIT - NORMAL                                                    */ 02084000
*/*                                                                  */ 02085000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 02086000
*/*                                                                  */ 02087000
*/*   OUTPUT - CVRWORK   WPTS      REACHED GROUPS IN PTS             */ 02088000
*/*                                                                  */ 02089000
*/********************************************************************/ 02090000
*                                                               02S0452 02091000
*COLREACH:                                                      02S0452 02092000
*   PROCEDURE;                                                  02S0452 02093000
COLREACH STM   @14,@12,12(@13)                                  02S0452 02094000
*   REQPTR=CVRRQPTR;                /* LOCATE FIRST REQUEST          */ 02095000
*                                                               02S0453 02096000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        02S0453 02097000
*   /*****************************************************************/ 02098000
*   /*                                                               */ 02099000
*   /* MARK ALL ACTIVE REQUESTS NOT USED YET                         */ 02100000
*   /*                                                               */ 02101000
*   /*****************************************************************/ 02102000
*                                                               02S0454 02103000
*   DO INDEX22=1 TO CVRNREQ;        /* SET UP LOOP CONTROL OVER REQS */ 02104000
         LA    INDEX22,1                                        02S0454 02105000
         B     @DE00454                                         02S0454 02106000
@DL00454 DS    0H                                               02S0455 02107000
*     IF CVRSKFLG=OFF THEN                                      02S0455 02108000
         TM    CVRSKFLG(REQPTR),B'10000000'                     02S0455 02109000
         BNZ   @RF00455                                         02S0455 02110000
*       CVRRUSED=OFF;               /* INITIALIZE USED FLAG OFF      */ 02111000
         NI    CVRRUSED(REQPTR),B'10111111'                     02S0456 02112000
*     REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST          */ 02113000
@RF00455 AH    REQPTR,@CH00250                                  02S0457 02114000
*   END;                            /* END OF INITIALIZING LOOP      */ 02115000
         AH    INDEX22,@CH00051                                 02S0458 02116000
@DE00454 CH    INDEX22,CVRNREQ(,PARMPTR)                        02S0458 02117000
         BNH   @DL00454                                         02S0458 02118000
*   CREACHSW=ON;                    /* INITIALIZE SWITCH FOR LOOP    */ 02119000
*                                                               02S0459 02120000
         OI    CREACHSW,B'00010000'                             02S0459 02121000
*   /*****************************************************************/ 02122000
*   /*                                                               */ 02123000
*   /* LOOP FINDING DIRECT GROUP REACH UNTIL NO NEW GROUP IS REACHED */ 02124000
*   /*                                                               */ 02125000
*   /*****************************************************************/ 02126000
*                                                               02S0460 02127000
*   DO WHILE(CREACHSW=ON);          /* END LOOP WHEN NO GROUPS  02S0460 02128000
*                                      REACHED IN LAST PASS          */ 02129000
         B     @DE00460                                         02S0460 02130000
@DL00460 DS    0H                                               02S0461 02131000
*     CREACHSW=OFF;                 /* ASSUME NO GROUPS REACHED UNTIL   02132000
*                                      ONE IS FOUND                  */ 02133000
*                                                               02S0461 02134000
         NI    CREACHSW,B'11101111'                             02S0461 02135000
*     /***************************************************************/ 02136000
*     /*                                                             */ 02137000
*     /* EXAMINE EACH REACHED BUT NOT USED REQUEST TO DETERMINE      */ 02138000
*     /* WHETHER IT COULD USE ANY FLAGGED GROUP. IF IT COULD, MARK   */ 02139000
*     /* ANY OF ITS SOLUTION GROUPS WHICH HAVE NOT BEEN REACHED AS   */ 02140000
*     /* REACHED AND RESET CREACHSW TO CONTINUE THE SCAN.            */ 02141000
*     /*                                                             */ 02142000
*     /***************************************************************/ 02143000
*                                                               02S0462 02144000
*     REQPTR=CVRRQPTR;              /* LOCATE FIRST REQUEST          */ 02145000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        02S0462 02146000
*     DO INDEX10=1 TO CVRNREQ;      /* LOOP OVER ALL REQUESTS        */ 02147000
*                                                               02S0463 02148000
         LA    INDEX10,1                                        02S0463 02149000
         B     @DE00463                                         02S0463 02150000
@DL00463 DS    0H                                               02S0464 02151000
*       /*************************************************************/ 02152000
*       /*                                                           */ 02153000
*       /* CONSIDER ONLY THOSE REQUESTS NOT MARKED SKIP WHICH HAVE   */ 02154000
*       /* BEEN REACHED BUT NOT USED.                                */ 02155000
*       /*                                                           */ 02156000
*       /*************************************************************/ 02157000
*                                                               02S0464 02158000
*       IF CVRSKFLG=OFF&CVRREACH=ON&CVRRUSED=OFF THEN           02S0464 02159000
         TM    CVRREACH(REQPTR),B'00100000'                     02S0464 02160000
         BNO   @RF00464                                         02S0464 02161000
         TM    CVRSKFLG(REQPTR),B'11000000'                     02S0464 02162000
         BNZ   @RF00464                                         02S0464 02163000
*         DO;                                                   02S0465 02164000
*                                                               02S0465 02165000
*           /*********************************************************/ 02166000
*           /*                                                       */ 02167000
*           /* SCAN GROUPS TO DETERMINE WHETHER REQUEST COULD USE    */ 02168000
*           /* MARKED GROUP.                                         */ 02169000
*           /*                                                       */ 02170000
*           /*********************************************************/ 02171000
*                                                               02S0466 02172000
*           GFOUNDSW=OFF;           /* ASSUME CANNOT USE MARKED GROUP*/ 02173000
         NI    GFOUNDSW,B'11111011'                             02S0466 02174000
*           GRPPTR=CVRGRPPT;        /* LOCATE FIRST GROUP            */ 02175000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         02S0467 02176000
*           DO INDEX11=1 TO CVRNGRP WHILE(CVRGRPID<=CVRGRPLK&GFOUNDSW=  02177000
*                 OFF);             /* LOOP OVER LOCKED GROUP UNTIL     02178000
*                                      MARKED GROUP IS FOUND         */ 02179000
         LA    INDEX11,1                                        02S0468 02180000
         B     @DE00468                                         02S0468 02181000
@DL00468 LH    @10,CVRGRPID(,GRPPTR)                            02S0468 02182000
         CH    @10,CVRGRPLK(,PARMPTR)                           02S0468 02183000
         BH    @DC00468                                         02S0468 02184000
         TM    GFOUNDSW,B'00000100'                             02S0468 02185000
         BNZ   @DC00468                                         02S0468 02186000
*             IF CVRGSKP=OFF THEN                               02S0469 02187000
         TM    CVRGSKP(GRPPTR),B'10000000'                      02S0469 02188000
         BNZ   @RF00469                                         02S0469 02189000
*               DO;                                             02S0470 02190000
*                 CNTPTR=CVRGCPTR;  /* LOCATE COUNT ENTRY            */ 02191000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         02S0471 02192000
*                 IF WPTS=PTSFLAG   /* IS GROUP MARKED?              */ 02193000
*                   THEN            /* YES                           */ 02194000
         L     @10,GRPWPTR(,CNTPTR)                             02S0472 02195000
         CLC   WPTS(2,@10),@CH00125                             02S0472 02196000
         BNE   @RF00472                                         02S0472 02197000
*                   GFOUNDSW=ON;    /* INDICATE REACH POSSIBLE       */ 02198000
         OI    GFOUNDSW,B'00000100'                             02S0473 02199000
*               END;                                            02S0474 02200000
*             ELSE                                              02S0475 02201000
*               ;                                               02S0475 02202000
@RF00469 DS    0H                                               02S0476 02203000
*             GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT GROUP    */ 02204000
@RC00469 AH    GRPPTR,@CH00067                                  02S0476 02205000
*           END;                    /* END GROUP SCAN                */ 02206000
         AH    INDEX11,@CH00051                                 02S0477 02207000
@DE00468 CH    INDEX11,CVRNGRP(,REQPTR)                         02S0477 02208000
         BNH   @DL00468                                         02S0477 02209000
@DC00468 DS    0H                                               02S0478 02210000
*           IF GFOUNDSW=ON          /* COULD REQUEST USE MARKED 02S0478 02211000
*                                      GROUP?                        */ 02212000
*             THEN                  /* YES - DETERMINE REACH         */ 02213000
         TM    GFOUNDSW,B'00000100'                             02S0478 02214000
         BNO   @RF00478                                         02S0478 02215000
*             DO;                                               02S0479 02216000
*                                                               02S0479 02217000
*               /*****************************************************/ 02218000
*               /*                                                   */ 02219000
*               /* SCAN GROUPS MARKING UNMARKED SOLUTION GROUPS      */ 02220000
*               /*                                                   */ 02221000
*               /*****************************************************/ 02222000
*                                                               02S0480 02223000
*               GRPPTR=CVRGRPPT;    /* LOCATE FIRST GROUP            */ 02224000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         02S0480 02225000
*               DO INDEX12=1 TO CVRNGRP WHILE(CVRGRPID<=CVRGRPLK);/*    02226000
*                                      LOOP OVER LOCKED GROUPS       */ 02227000
         LA    INDEX12,1                                        02S0481 02228000
         B     @DE00481                                         02S0481 02229000
@DL00481 LH    @10,CVRGRPID(,GRPPTR)                            02S0481 02230000
         CH    @10,CVRGRPLK(,PARMPTR)                           02S0481 02231000
         BH    @DC00481                                         02S0481 02232000
*                 IF CVRGSKP=OFF THEN                           02S0482 02233000
         TM    CVRGSKP(GRPPTR),B'10000000'                      02S0482 02234000
         BNZ   @RF00482                                         02S0482 02235000
*                   DO;                                         02S0483 02236000
*                     CNTPTR=CVRGCPTR;/* LOCATE COUNT ENTRY          */ 02237000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         02S0484 02238000
*                     IF CVRGALL>0&WPTS=NOPTS/* SOLUTION GROUP NOT IN   02239000
*                                      PTS?                          */ 02240000
*                       THEN        /* YES                           */ 02241000
         SLR   @10,@10                                          02S0485 02242000
         CH    @10,CVRGALL(,GRPPTR)                             02S0485 02243000
         BNL   @RF00485                                         02S0485 02244000
         L     @09,GRPWPTR(,CNTPTR)                             02S0485 02245000
         CH    @10,WPTS(,@09)                                   02S0485 02246000
         BNE   @RF00485                                         02S0485 02247000
*                       DO;                                     02S0486 02248000
*                         WPTS=PTSFLAG;/* MARK GROUP REACHED         */ 02249000
         MVC   WPTS(2,@09),@CH00125                             02S0487 02250000
*                         CREACHSW=ON;/* INDICATE GROUP REACH FOUND  */ 02251000
         OI    CREACHSW,B'00010000'                             02S0488 02252000
*                       END;                                    02S0489 02253000
*                   END;                                        02S0490 02254000
*                 ELSE                                          02S0491 02255000
*                   ;                                           02S0491 02256000
@RF00482 DS    0H                                               02S0492 02257000
*                 GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT GROUP*/ 02258000
@RC00482 AH    GRPPTR,@CH00067                                  02S0492 02259000
*               END;                /* END GROUP SCAN                */ 02260000
         AH    INDEX12,@CH00051                                 02S0493 02261000
@DE00481 CH    INDEX12,CVRNGRP(,REQPTR)                         02S0493 02262000
         BNH   @DL00481                                         02S0493 02263000
@DC00481 DS    0H                                               02S0494 02264000
*               CVRRUSED=ON;        /* MARK REQUEST USED             */ 02265000
         OI    CVRRUSED(REQPTR),B'01000000'                     02S0494 02266000
*             END;                  /* END PROCESSING ONE REQUEST    */ 02267000
*         END;                      /* END PROCESSING REACHED REQUEST*/ 02268000
@RF00478 DS    0H                                               02S0497 02269000
*       REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST        */ 02270000
@RF00464 AH    REQPTR,@CH00250                                  02S0497 02271000
*     END;                          /* END REQUEST SCAN              */ 02272000
         AH    INDEX10,@CH00051                                 02S0498 02273000
@DE00463 CH    INDEX10,CVRNREQ(,PARMPTR)                        02S0498 02274000
         BNH   @DL00463                                         02S0498 02275000
*   END;                            /* END ONE SEARCH FOR DIRECT        02276000
*                                      REACH                         */ 02277000
@DE00460 TM    CREACHSW,B'00010000'                             02S0499 02278000
         BO    @DL00460                                         02S0499 02279000
*   RESPECIFY                                                   02S0500 02280000
*    (CVRWORKD) BASED(WORKPTR);     /* SET UP TO SCAN CVRWORK        */ 02281000
*                                                               02S0500 02282000
*   /*****************************************************************/ 02283000
*   /*                                                               */ 02284000
*   /* SET WPTS IN ALL REACHED GROUPS TO PTS NUMBER                  */ 02285000
*   /*                                                               */ 02286000
*   /*****************************************************************/ 02287000
*                                                               02S0501 02288000
*   WORKPTR=ACVRWORK;               /* LOCATE FIRST CVRWORK ENTRY    */ 02289000
         L     WORKPTR,ACVRWORK                                 02S0501 02290000
*   DO WHILE(LASTFLAG=OFF);                                     02S0502 02291000
         B     @DE00502                                         02S0502 02292000
@DL00502 DS    0H                                               02S0503 02293000
*     IF WPTS=PTSFLAG               /* MARKED REQUEST?               */ 02294000
*       THEN                        /* YES                           */ 02295000
         CLC   WPTS(2,WORKPTR),@CH00125                         02S0503 02296000
         BNE   @RF00503                                         02S0503 02297000
*       WPTS=PTSN;                  /* PUT INTO PTS                  */ 02298000
         STH   PTSN,WPTS(,WORKPTR)                              02S0504 02299000
*     WORKPTR=WORKPTR+LENGTH(CVRWORKD);/* LOCATE NEXT ENTRY          */ 02300000
@RF00503 AH    WORKPTR,@CH00067                                 02S0505 02301000
*   END;                            /* END SCAN OF CVRWORK           */ 02302000
@DE00502 TM    LASTFLAG(WORKPTR),B'10000000'                    02S0506 02303000
         BZ    @DL00502                                         02S0506 02304000
*   RESPECIFY                                                   02S0507 02305000
*    (CVRWORKD) BASED(GRPWPTR);                                 02S0507 02306000
*   END COLREACH;                   /* RETURN TO CALLER              */ 02307000
@EL00003 DS    0H                                               02S0508 02308000
@EF00003 DS    0H                                               02S0508 02309000
@ER00003 LM    @14,@12,12(@13)                                  02S0508 02310000
         BR    @14                                              02S0508 02311000
*                                                               02S0509 02312000
*/********************************************************************/ 02313000
*/*                                                                  */ 02314000
*/* SEGMENT NAME - FINDTRL                                           */ 02315000
*/*                                                                  */ 02316000
*/* DESCRIPTIVE NAME - FIND PRELIMINARY SOLUTION                     */ 02317000
*/*                                                                  */ 02318000
*/* FUNCTION - TO FIND PRELIMINARY SOLUTION BY INSPECTION.           */ 02319000
*/*                                                                  */ 02320000
*/* OPERATION - EACH REQUEST WHICH REQUESTS UNITS IS SCANNED.  IF    */ 02321000
*/*            ANY GROUP ELIGIBLE FOR THIS REQUEST HAS UNITS         */ 02322000
*/*            AVAILABLE, THEY ARE ALLOCATED TO THE REQUEST.  IF ANY */ 02323000
*/*            REQUEST IS NOT FULLY SATISFIED, AN ERROR CODE IS      */ 02324000
*/*            RETURNED TO INDICATE THAT FURTHER PROCESSING IS       */ 02325000
*/*            NEEDED.                                               */ 02326000
*/*                                                                  */ 02327000
*/* ENTRY - FINDTRL                                                  */ 02328000
*/*                                                                  */ 02329000
*/*   PURPOSE - SEE FUNCTION                                         */ 02330000
*/*                                                                  */ 02331000
*/*   INPUT  - CVRRQLST  CVRNEED   NUMBER OF UNITS NEEDED FOR REQ.   */ 02332000
*/*            GRPCOUNT  GRPEXCS   NUMBER OF UNITS ALLOCATABLE FROM  */ 02333000
*/*                                GROUP                             */ 02334000
*/*                                                                  */ 02335000
*/* EXIT -                                                           */ 02336000
*/*                                                                  */ 02337000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 02338000
*/*                                                                  */ 02339000
*/*   OUTPUT - CVRRQLST  CVRNEED   NUMBER OF UNITS STILL NEEDED      */ 02340000
*/*            CVRGPLST  CVRGALL   NUMBER OF UNITS ALLOCATED         */ 02341000
*/*            GRPCOUNT  GRPEXCS   NUMBER OF UNITS STILL ALLOCATABLE */ 02342000
*/*                                                                  */ 02343000
*/********************************************************************/ 02344000
*                                                               02S0509 02345000
*FINDTRL:                                                       02S0509 02346000
*   PROCEDURE;                                                  02S0509 02347000
FINDTRL  STM   @14,@12,12(@13)                                  02S0509 02348000
*   FCODE=NOERROR;                  /* INITIALIZE RETURN CODE TO OK  */ 02349000
*                                                               02S0510 02350000
         SLR   FCODE,FCODE                                      02S0510 02351000
*   /*****************************************************************/ 02352000
*   /*                                                               */ 02353000
*   /* ATTEMPT TO FILL EACH REQUEST FROM ALLOCATABLE UNITS           */ 02354000
*   /*                                                               */ 02355000
*   /*****************************************************************/ 02356000
*                                                               02S0511 02357000
*   REQPTR=CVRRQPTR;                /* LOCATE FIRST REQUEST          */ 02358000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        02S0511 02359000
*   DO FINDEX1=1 TO CVRNREQ;        /* SET UP LOOP CTL OVER REQS     */ 02360000
         LA    FINDEX1,1                                        02S0512 02361000
         B     @DE00512                                         02S0512 02362000
@DL00512 DS    0H                                               02S0513 02363000
*     IF CVRSKFLG=OFF               /* REQUEST TO BE SKIPPED?        */ 02364000
*       THEN                        /* NO - REQ TO BE PROCESSED      */ 02365000
         TM    CVRSKFLG(REQPTR),B'10000000'                     02S0513 02366000
         BNZ   @RF00513                                         02S0513 02367000
*       DO;                                                     02S0514 02368000
*                                                               02S0514 02369000
*         /***********************************************************/ 02370000
*         /*                                                         */ 02371000
*         /* ALLOCATE AS MANY UNITS AS POSSIBLE TO REQUEST FROM EACH */ 02372000
*         /* GROUP UNTIL REQUEST HAS BEEN FILLED.                    */ 02373000
*         /*                                                         */ 02374000
*         /***********************************************************/ 02375000
*                                                               02S0515 02376000
*         GRPPTR=CVRGRPPT;          /* LOCATE FIRST GROUP            */ 02377000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         02S0515 02378000
*         DO FINDEX2=1 TO CVRNGRP WHILE(CVRNEED>0&CVRGRPID<=CVRGRPLK);  02379000
         LA    FINDEX2,1                                        02S0516 02380000
         B     @DE00516                                         02S0516 02381000
@DL00516 SLR   @10,@10                                          02S0516 02382000
         LH    @06,CVRNEED(,REQPTR)                             02S0516 02383000
         CR    @06,@10                                          02S0516 02384000
         BNH   @DC00516                                         02S0516 02385000
         LH    @04,CVRGRPID(,GRPPTR)                            02S0516 02386000
         CH    @04,CVRGRPLK(,PARMPTR)                           02S0516 02387000
         BH    @DC00516                                         02S0516 02388000
*                                   /* SET UP LOOP CONTROL OVER 02S0517 02389000
*                                      GROUPS, STOPPING WHEN REQ FULL*/ 02390000
*           IF CVRGSKP=OFF THEN                                 02S0517 02391000
         TM    CVRGSKP(GRPPTR),B'10000000'                      02S0517 02392000
         BNZ   @RF00517                                         02S0517 02393000
*             DO;                                               02S0518 02394000
*               CNTPTR=CVRGCPTR;    /* LOCATE GRPCOUNT ENTRY         */ 02395000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         02S0519 02396000
*               MINX=MIN(CVRNEED,GRPEXCS);/* DETERMINE HOW MANY UNITS   02397000
*                                      CAN BE ALLOCATED HERE         */ 02398000
         LH    @15,CVRNEED(,REQPTR)                             02S0520 02399000
         LH    @14,GRPEXCS(,CNTPTR)                             02S0520 02400000
         LR    MINX,@14                                         02S0520 02401000
         CR    MINX,@15                                         02S0520 02402000
         BNH   *+6                                                      02403000
         LR    MINX,@15                                         02S0520 02404000
*               IF MINX>0           /* CAN ANY BE ALLOCATED?         */ 02405000
*                 THEN              /* SOME CAN BE ALLOCATED         */ 02406000
         CR    MINX,@10                                         02S0521 02407000
         BNH   @RF00521                                         02S0521 02408000
*                 DO;                                           02S0522 02409000
*                   CVRNEED=CVRNEED-MINX;/* REDUCE NUMBER NEEDED     */ 02410000
         SLR   @15,MINX                                         02S0523 02411000
         STH   @15,CVRNEED(,REQPTR)                             02S0523 02412000
*                   GRPEXCS=GRPEXCS-MINX;/* REDUCE NUMBER ALLOCATABLE*/ 02413000
         SLR   @14,MINX                                         02S0524 02414000
         STH   @14,GRPEXCS(,CNTPTR)                             02S0524 02415000
*                   CVRGALL=CVRGALL+MINX;/* INCREASE NUMBER ALLOCATED*/ 02416000
         LR    @10,MINX                                         02S0525 02417000
         AH    @10,CVRGALL(,GRPPTR)                             02S0525 02418000
         STH   @10,CVRGALL(,GRPPTR)                             02S0525 02419000
*                 END;                                          02S0526 02420000
*               ELSE                                            02S0527 02421000
*                 ;                                             02S0527 02422000
@RF00521 DS    0H                                               02S0528 02423000
*             END;                  /* END OF ALLOCATING UNITS       */ 02424000
*           GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT GROUP      */ 02425000
@RF00517 AH    GRPPTR,@CH00067                                  02S0529 02426000
*         END;                      /* END OF GROUP SCAN             */ 02427000
         AH    FINDEX2,@CH00051                                 02S0530 02428000
@DE00516 CH    FINDEX2,CVRNGRP(,REQPTR)                         02S0530 02429000
         BNH   @DL00516                                         02S0530 02430000
@DC00516 DS    0H                                               02S0531 02431000
*         IF CVRNEED>0              /* REQUEST FULLY ALLOCATED?      */ 02432000
*           THEN                    /* REQUEST NOT FULLY ALLOCATED   */ 02433000
         ICM   @10,3,CVRNEED(REQPTR)                            02S0531 02434000
         BNP   @RF00531                                         02S0531 02435000
*           FCODE=FTRLERR;          /* SET RETURN CODE TO INCOMPLETE */ 02436000
         LA    FCODE,4                                          02S0532 02437000
*       END;                        /* END OF ALLOCATION FOR ONE REQ */ 02438000
@RF00531 DS    0H                                               02S0534 02439000
*     REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST          */ 02440000
@RF00513 AH    REQPTR,@CH00250                                  02S0534 02441000
*   END;                            /* END REQUEST SCAN              */ 02442000
         AH    FINDEX1,@CH00051                                 02S0535 02443000
@DE00512 CH    FINDEX1,CVRNREQ(,PARMPTR)                        02S0535 02444000
         BNH   @DL00512                                         02S0535 02445000
*   RETURN CODE(FCODE);             /* RETURN TO CALLER              */ 02446000
         LR    @15,FCODE                                        02S0536 02447000
         L     @14,12(,@13)                                     02S0536 02448000
         LM    @00,@12,20(@13)                                  02S0536 02449000
         BR    @14                                              02S0536 02450000
*   END FINDTRL;                                                02S0537 02451000
*                                                               02S0538 02452000
*/********************************************************************/ 02453000
*/*                                                                  */ 02454000
*/* SEGMENT NAME - HUNG                                              */ 02455000
*/*                                                                  */ 02456000
*/* DESCRIPTIVE NAME - EXTENDED PRELIMINARY SOLUTION                 */ 02457000
*/*                                                                  */ 02458000
*/* FUNCTION - TO EXTEND SOLUTION AS MUCH AS POSSIBLE AND TO DETECT  */ 02459000
*/*            INFEASIBLE CONDITION IF IT EXISTS                     */ 02460000
*/* OPERATION -                                                      */ 02461000
*/*      OUTER LOOP SEARCHES FOR EXTENSION TO SOLUTION AND EXTENDS   */ 02462000
*/*            IT IF ONE IS FOUND.                                   */ 02463000
*/*            THE SEARCH CONSISTS OF EXAMINING ALL GROUPS USABLE BY */ 02464000
*/*            REQUESTS IN NEED OF UNITS TO LOCATE REQUESTS WHICH    */ 02465000
*/*            USE THEM.  ALL GROUPS USABLE BY THESE REQUESTS ARE    */ 02466000
*/*            THEN CHECKED UNTIL NO NEW REQUESTS OR GROUPS ARE      */ 02467000
*/*            LOCATED (FAILURE) OR A GROUP IS REACHED WHICH         */ 02468000
*/*            CONTAINS EXCESS UNITS (EXTENSION FOUND).  IF AN       */ 02469000
*/*            EXTENSION IS FOUND, UNITS ARE ALLOCATED FROM THIS     */ 02470000
*/*            GROUP TO REQUEST WHICH COULD USE THEM.  THIS FREES    */ 02471000
*/*            UNITS IN GROUP CURRENTLY ALLOCATED TO REQUEST, WHICH  */ 02472000
*/*            ARE THEN ALLOCATED TO NEXT REQUEST IN CHAIN.          */ 02473000
*/*            PROCESS CONTINUES UNTIL REQUEST WHICH WAS SHORT OF    */ 02474000
*/*            UNITS IS REACHED.                                     */ 02475000
*/*      ALTERNATING SEARCH AND EXTENSION CONTINUES UNTIL AN ERROR   */ 02476000
*/*            IS DETECTED OR A FULL SOLUTION IS FOUND.              */ 02477000
*/*                                                                  */ 02478000
*/* ENTRY - HUNG                                                     */ 02479000
*/*                                                                  */ 02480000
*/*   PURPOSE - SEE FUNCTION                                         */ 02481000
*/*                                                                  */ 02482000
*/*   INPUT  - CVRRQLST  CVRNEED   UNITS STILL NEEDED FOR FULL       */ 02483000
*/*                                ALLOCATION                        */ 02484000
*/*                      CVRSKFLG  1 - SKIP THIS REQUEST             */ 02485000
*/*            CVRGPLST  CVRGRPID  IDENTIFIER OF GROUP (FOR LOCK)    */ 02486000
*/*                      CVRGALL   UNITS ALLOCATED TO THIS GROUP     */ 02487000
*/*            GRPCOUNT  GRPEXCS   UNITS STILL AVAILABLE             */ 02488000
*/*                      GRPWPTR   CONNECTION TO WORK TABLE          */ 02489000
*/*            CVRWORK             WORK AREA                         */ 02490000
*/*                                                                  */ 02491000
*/* EXIT -                                                           */ 02492000
*/*                                                                  */ 02493000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 02494000
*/*                                                                  */ 02495000
*/*   OUTPUT - CVRRQLST  CVRNEED   UNITS (IF ANY) STILL NEEDED       */ 02496000
*/*                      CVRGNEXT  USED AS WORK AREA                 */ 02497000
*/*                      CVRMIN    USED AS WORK AREA                 */ 02498000
*/*            CVRGPLST  CVRGALL   EXTENDED SOLUTION                 */ 02499000
*/*            GRPCOUNT  GRPEXCS   REFLECTS EXTENDED SOLUTION        */ 02500000
*/*            CVRWORK             WORK AREA                         */ 02501000
*/*                                                                  */ 02502000
*/* IN-LINE SUBROUTINES                                              */ 02503000
*/*            HUNGMAC             DECLARATION OF MACRO VARIABLES    */ 02504000
*/*            HUNGDCL             DECLARATION OF VARIABLES          */ 02505000
*/*            HUNGINIT            LOCATES REQUESTS WHICH ARE NOT    */ 02506000
*/*                                FULL OR DETECTS COMPLETION        */ 02507000
*/*            SCANREQS            FIRST HALF OF LOCATING EXTENSION  */ 02508000
*/*            SCANGRPS            SECOND HALF OF LOCATING EXTEN.    */ 02509000
*/*            BACKTRK             REARRANGE SOLUTION TO INCLUDE     */ 02510000
*/*                                EXTENSION                         */ 02511000
*/*                                                                  */ 02512000
*/********************************************************************/ 02513000
*                                                               02S0538 02514000
*HUNG:                                                          02S0538 02515000
*   PROCEDURE;                                                  02S0538 02516000
*                                                               02S0538 02517000
HUNG     STM   @14,@12,12(@13)                                  02S0538 02518000
*/********************************************************************/ 02519000
*/*                                                                  */ 02520000
*/* NAME     - HUNGMAC                                               */ 02521000
*/*                                                                  */ 02522000
*/* FUNCTION - DECLARATION OF MACRO VARIABLES USED IN HUNG.          */ 02523000
*/*                                                                  */ 02524000
*/********************************************************************/ 02525000
*/********************************************************************/ 02526000
*/*                                                                  */ 02527000
*/* NAME     - HUNGDCL                                               */ 02528000
*/*                                                                  */ 02529000
*/* FUNCTION - DECLARATION OF LOCAL VARIABLES                        */ 02530000
*/*                                                                  */ 02531000
*/********************************************************************/ 02532000
*                                                               02S0539 02533000
*   /*****************************************************************/ 02534000
*   /*                                                               */ 02535000
*   /* DECLARATION OF CONSTANTS                                      */ 02536000
*   /*                                                               */ 02537000
*   /*****************************************************************/ 02538000
*                                                               02S0539 02539000
*   DCL                                                         02S0539 02540000
*     HUNGOK CONSTANT(0),           /* RETURN CODE - SUCCESS         */ 02541000
*     HUNGERR CONSTANT(8);          /* RETURN CODE - FAILURE         */ 02542000
*   DCL                                                         02S0540 02543000
*     NEEDFLAG CONSTANT(1);         /* FLAGS INCOMPLETE REQUESTS     */ 02544000
*                                                               02S0540 02545000
*   /*****************************************************************/ 02546000
*   /*                                                               */ 02547000
*   /* DECLARATION OF LOCAL ARITHMETIC VARIABLES                     */ 02548000
*   /*                                                               */ 02549000
*   /*****************************************************************/ 02550000
*                                                               02S0541 02551000
*   DCL                                                         02S0541 02552000
*     HCODE FIXED;                  /* HOLDS RETURN CODE             */ 02553000
*   DCL                                                         02S0542 02554000
*     ADDL FIXED;                   /* NUMBER BY WHICH SOLUTION IS TO   02555000
*                                      BE EXTENDED                   */ 02556000
*                                                               02S0542 02557000
*   /*****************************************************************/ 02558000
*   /*                                                               */ 02559000
*   /* DECLARATION OF LOCAL FLAGS                                    */ 02560000
*   /*                                                               */ 02561000
*   /*****************************************************************/ 02562000
*                                                               02S0543 02563000
*   DCL                                                         02S0543 02564000
*     1 * BIT(8),                                               02S0543 02565000
*      2 FAILSW BIT(1),             /* USED TO DETECT INFEASIBLE        02566000
*                                      COND.                         */ 02567000
*      2 * BIT(1);                                              02S0543 02568000
*                                                               02S0543 02569000
*   /*****************************************************************/ 02570000
*   /*                                                               */ 02571000
*   /* DECLARATION OF DO LOOP INDICES                                */ 02572000
*   /*                                                               */ 02573000
*   /*****************************************************************/ 02574000
*                                                               02S0544 02575000
*   DCL                                                         02S0544 02576000
*     HINDEX1 FIXED,                                            02S0544 02577000
*     HINDEX2 FIXED,                                            02S0544 02578000
*     HINDEX3 FIXED,                                            02S0544 02579000
*     HINDEX4 FIXED,                                            02S0544 02580000
*     HINDEX5 FIXED;                                            02S0544 02581000
*   DCL                                                         02S0545 02582000
*     SOLUTION PTR(31);             /* 0 NO SOLUTION FOUND 1 FINAL      02583000
*                                      SOLUTION FOUND OTHERWISE 02S0545 02584000
*                                      POINTS TO EXTENSION           */ 02585000
*                                                               02S0545 02586000
*   /*****************************************************************/ 02587000
*   /*                                                               */ 02588000
*   /* BASE STRUCTURES ON LOCAL POINTERS                             */ 02589000
*   /*                                                               */ 02590000
*   /*****************************************************************/ 02591000
*                                                               02S0546 02592000
*   RESPECIFY                                                   02S0546 02593000
*     CVRRQLST BASED(REQPTR);                                   02S0546 02594000
*   RESPECIFY                                                   02S0547 02595000
*     CVRGPLST BASED(GRPPTR);                                   02S0547 02596000
*   RESPECIFY                                                   02S0548 02597000
*     GRPCOUNT BASED(CNTPTR);                                   02S0548 02598000
*   RESPECIFY                                                   02S0549 02599000
*     CVRWORKD BASED(GRPWPTR);      /* REGARD CVRWORK AS EXTENSION OF   02600000
*                                      GRPCOUNT TABLE                */ 02601000
*   HCODE=HUNGOK;                   /* START WITH SUCCESS INDICATION */ 02602000
*                                                               02S0550 02603000
         SLR   @10,@10                                          02S0550 02604000
         LR    HCODE,@10                                        02S0550 02605000
*   /*****************************************************************/ 02606000
*   /*                                                               */ 02607000
*   /* SEARCH FOR EXTENSION UNTIL SOLUTION IS FOUND OR INFEASIBILITY */ 02608000
*   /* DETECTED.                                                     */ 02609000
*   /*                                                               */ 02610000
*   /*****************************************************************/ 02611000
*                                                               02S0551 02612000
*   SOLUTION=0;                     /* INIT SW FOR LOOP              */ 02613000
         LR    SOLUTION,@10                                     02S0551 02614000
*   DO WHILE(^(SOLUTION=1)&HCODE=HUNGOK);                       02S0552 02615000
         B     @DE00552                                         02S0552 02616000
@DL00552 DS    0H                                               02S0553 02617000
*                                                               03S0553 02618000
*/********************************************************************/ 02619000
*/*                                                                  */ 02620000
*/* SEGMENT NAME - HUNGINIT                                          */ 02621000
*/*                                                                  */ 02622000
*/* DESCRIPTIVE NAME - LOCATE AND MARK UNSATISFIED REQUEST           */ 02623000
*/*                                                                  */ 02624000
*/* FUNCTION - TO LOCATE AND MARK UNSATISFIED REQUESTS.  IF NONE     */ 02625000
*/*            SET FINAL SOLUTION INDICATOR                          */ 02626000
*/*                                                                  */ 02627000
*/* OPERATION -                                                      */ 02628000
*/*      REQUEST SCAN - IF REQUEST IS NOT FULLY SATISFIED, TURN OFF  */ 02629000
*/*            FINAL SOLUTION INDICATOR(SOLUTION=0) AND FLAG REQUEST */ 02630000
*/*            (CVRGNEXT=1).  OTHERWISE, SET CVRGNEXT TO 0 TO        */ 02631000
*/*            INDICATE THAT IT CAN BE USED TO OBTAIN A SOLUTION.    */ 02632000
*/*      CVRWORK SCAN - INITIALIZE WREQPTR AND WGUSED.               */ 02633000
*/*                                                                  */ 02634000
*/* ENTRY - (INLINE ROUTINE - ENTERED AT TOP)                        */ 02635000
*/*                                                                  */ 02636000
*/*   PURPOSE - SEE FUNCTION                                         */ 02637000
*/*                                                                  */ 02638000
*/*   INPUT  - CVRRQLST  CVRNEED   NUMBER OF UNITS STILL NEEDED      */ 02639000
*/*                                                                  */ 02640000
*/* EXIT - NORMAL - (INLINE SUBROUTINE EXITS AT BOTTOM)              */ 02641000
*/*                                                                  */ 02642000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 02643000
*/*                                                                  */ 02644000
*/*   OUTPUT - CVRRQLST  CVRGNEXT  0  IF REQUEST FILLED              */ 02645000
*/*                                1  IF STILL NOT SATISFIED         */ 02646000
*/*                      CVRMIN    NUMBER REQUIRED                   */ 02647000
*/*                      CVRUSED   INIT TO 0                         */ 02648000
*/*            CVRWORK   WREQPTR   INIT TO 0                         */ 02649000
*/*                      WGUSED    INIT TO 0                         */ 02650000
*/*            SOLUTION            0 IF SOME REQ NOT SATISFIED       */ 02651000
*/*                                1 IF ALL REQ SATISFIED            */ 02652000
*/*                                                                  */ 02653000
*/********************************************************************/ 02654000
*                                                               03S0553 02655000
*     DO;                           /* START OF HUNGINIT             */ 02656000
*       SOLUTION=1;                 /* SET INDICATION FOR FINAL 03S0554 02657000
*                                      SOLUTION FOUND UNTIL TURNED      02658000
*                                      OFF                           */ 02659000
*                                                               03S0554 02660000
         LA    @10,1                                            03S0554 02661000
         LR    SOLUTION,@10                                     03S0554 02662000
*       /*************************************************************/ 02663000
*       /*                                                           */ 02664000
*       /* SCAN REQUESTS, INITIALIZING FIELDS AND LOOKING FOR        */ 02665000
*       /* REQUESTS WHICH ARE NOT FULLY SATISFIED.                   */ 02666000
*       /*                                                           */ 02667000
*       /*************************************************************/ 02668000
*                                                               03S0555 02669000
*       REQPTR=CVRRQPTR;            /* LOCATE FIRST REQUEST          */ 02670000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0555 02671000
*       DO HINDEX1=1 TO CVRNREQ;    /* SET UP LOOP CTL OVER REQS.    */ 02672000
         LR    HINDEX1,@10                                      03S0556 02673000
         B     @DE00556                                         03S0556 02674000
@DL00556 DS    0H                                               03S0557 02675000
*         IF CVRSKFLG=OFF           /* IS THIS REQUEST TO BE    03S0557 02676000
*                                      PROCESSED                     */ 02677000
*           THEN                    /* REQUEST TO BE PROCESSED       */ 02678000
         TM    CVRSKFLG(REQPTR),B'10000000'                     03S0557 02679000
         BNZ   @RF00557                                         03S0557 02680000
*           DO;                                                 03S0558 02681000
*             IF CVRNEED>0          /* REQUEST FULLY SATISFIED?      */ 02682000
*               THEN                /* REQUEST NOT FULLY SATISFIED   */ 02683000
         SLR   @10,@10                                          03S0559 02684000
         LH    @09,CVRNEED(,REQPTR)                             03S0559 02685000
         CR    @09,@10                                          03S0559 02686000
         BNH   @RF00559                                         03S0559 02687000
*               DO;                                             03S0560 02688000
*                 SOLUTION=0;       /* INDICATE NOT FINAL SOLUTION      02689000
*                                      YET                           */ 02690000
         LR    SOLUTION,@10                                     03S0561 02691000
*                 CVRGNEXT=NEEDFLAG;/* SET FLAG TO SHOW REQ. NEEDING    02692000
*                                      UNITS                         */ 02693000
         MVC   CVRGNEXT(4,REQPTR),@CF00051                      03S0562 02694000
*                 CVRMIN=CVRNEED;   /* SET MAX. NUMBER FOR THIS PATH.*/ 02695000
         STH   @09,CVRMIN(,REQPTR)                              03S0563 02696000
*               END;                /* END PROCESSING CASE NEEDING      02697000
*                                      UNITS                         */ 02698000
*             ELSE                  /* NO UNITS NEEDED               */ 02699000
*               CVRGNEXT=INITVAL;   /* INIT FIELD TO NULL VALUE      */ 02700000
         B     @RC00559                                         03S0565 02701000
@RF00559 SLR   @10,@10                                          03S0565 02702000
         ST    @10,CVRGNEXT(,REQPTR)                            03S0565 02703000
*             CVRRUSED=OFF;         /* MARK REQUEST NOT USED YET     */ 02704000
@RC00559 NI    CVRRUSED(REQPTR),B'10111111'                     03S0566 02705000
*           END;                    /* END PROCESSING ONE NOT-SKIPPED   02706000
*                                      REQUEST                       */ 02707000
*         REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST      */ 02708000
@RF00557 AH    REQPTR,@CH00250                                  03S0568 02709000
*       END;                        /* END SCAN OF REQUEST           */ 02710000
*                                                               03S0569 02711000
         AH    HINDEX1,@CH00051                                 03S0569 02712000
@DE00556 CH    HINDEX1,CVRNREQ(,PARMPTR)                        03S0569 02713000
         BNH   @DL00556                                         03S0569 02714000
*       /*************************************************************/ 02715000
*       /*                                                           */ 02716000
*       /* SCAN CVRWORK, SETTING FIELDS TO INITIAL VALUE             */ 02717000
*       /*                                                           */ 02718000
*       /*************************************************************/ 02719000
*                                                               03S0570 02720000
*       WORKPTR=ACVRWORK;           /* LOCATE FIRST ENTRY OF CVRWORK */ 02721000
         L     WORKPTR,ACVRWORK                                 03S0570 02722000
*       RESPECIFY                                               03S0571 02723000
*        (CVRWORKD) BASED(WORKPTR);                             03S0571 02724000
*       DO WHILE(LASTFLAG=OFF);     /* SCAN ALL ACTIVE ENTRIES       */ 02725000
         B     @DE00572                                         03S0572 02726000
@DL00572 DS    0H                                               03S0573 02727000
*         WREQPTR=INITVAL;          /* SET REACH INDICATOR TO NULL   */ 02728000
         SLR   @10,@10                                          03S0573 02729000
         ST    @10,WREQPTR(,WORKPTR)                            03S0573 02730000
*         WGUSED=OFF;               /* SET USED INDICATOR TO OFF     */ 02731000
         NI    WGUSED(WORKPTR),B'10111111'                      03S0574 02732000
*         WORKPTR=WORKPTR+LENGTH(CVRWORKD);/* LOCATE NEXT ENTRY IN      02733000
*                                      CVRWORK                       */ 02734000
         AH    WORKPTR,@CH00067                                 03S0575 02735000
*       END;                        /* END OF SCAN OF CVRWORK        */ 02736000
@DE00572 TM    LASTFLAG(WORKPTR),B'10000000'                    03S0576 02737000
         BZ    @DL00572                                         03S0576 02738000
*       RESPECIFY                                               03S0577 02739000
*        (CVRWORKD) BASED(GRPWPTR);                             03S0577 02740000
*     END;                          /* END OF HUNGINIT               */ 02741000
*     FAILSW=OFF;                   /* NO FAILURE YET                */ 02742000
         NI    FAILSW,B'01111111'                               02S0579 02743000
*     DO WHILE(SOLUTION=0&FAILSW=OFF);/* CONTINUE UNTIL AN EXTENSION    02744000
*                                      IS FOUND OR FAILURE IS   02S0580 02745000
*                                      DETECTED                      */ 02746000
*                                                               02S0580 02747000
         B     @DE00580                                         02S0580 02748000
@DL00580 DS    0H                                               02S0581 02749000
*       /*************************************************************/ 02750000
*       /*                                                           */ 02751000
*       /* FIND GROUPS REACHED FROM REQUESTS IDENTIFIED IN LAST PASS */ 02752000
*       /*                                                           */ 02753000
*       /*************************************************************/ 02754000
*                                                               02S0581 02755000
*                                                               03S0581 02756000
*/********************************************************************/ 02757000
*/*                                                                  */ 02758000
*/* SEGMENT NAME - SCANREQS                                          */ 02759000
*/*                                                                  */ 02760000
*/* DESCRIPTIVE NAME - FIRST HALF OF LOCATING EXTENSION TO SOLUTION  */ 02761000
*/*                                                                  */ 02762000
*/* FUNCTION - TO FIND NEW GROUPS FOR REQUESTS FOUND IN LAST PASS.   */ 02763000
*/*            IF ONE CONTAINS AVAILABLE UNITS, INDICATE             */ 02764000
*/*            EXTENSION TO SOLUTION.  IF NO NEW GROUPS ARE FOUND,   */ 02765000
*/*            INDICATE FAILURE.                                     */ 02766000
*/* OPERATION -                                                      */ 02767000
*/*      REQUEST SCAN - EXAMINE GROUPS FOR EACH REQUEST WHICH HAS    */ 02768000
*/*            BEEN REACHED (CVRGNEXT^=0) BUT NOT YET USED.  IF ANY  */ 02769000
*/*            GROUP HAS NOT YET BEEN REACHED(WREQPTR=0), SET        */ 02770000
*/*            WREQPTR TO POINTER TO REQUEST WHICH REACHED IT AND    */ 02771000
*/*            WGRPPTR TO CVRGPLST ENTRY WHICH REACHED IT.  IF       */ 02772000
*/*            GROUP HAS UNUSED UNITS, INDICATE THAT AN EXTENSION    */ 02773000
*/*            HAS BEEN FOUND BY SETTING SOLUTION TO ADDRESS OF      */ 02774000
*/*            CVRWORK ENTRY.                                        */ 02775000
*/*                                                                  */ 02776000
*/* ENTRY - (INLINE SUBROUTINE ENTERED AT TOP)                       */ 02777000
*/*                                                                  */ 02778000
*/*   PURPOSE - SEE FUNCTION                                         */ 02779000
*/*                                                                  */ 02780000
*/*   INPUT  - CVRRQLST  CVRGNEXT  0 IF REQ NOT YET REACHED          */ 02781000
*/*                      CVRSKFLG  1 - IGNORE REQUEST                */ 02782000
*/*                      CVRRUSED  1 - REQUEST ALREADY SCANNED       */ 02783000
*/*                      CVRMIN    NUMBER TO BE MOVED                */ 02784000
*/*            GRPCOUNT  GRPEXCS   NUMBER OF UNITS AVAILABLE         */ 02785000
*/*            CVRWORK   WREQPTR   0 GROUP NOT REACHED YET           */ 02786000
*/*                                                                  */ 02787000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 02788000
*/*                                                                  */ 02789000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 02790000
*/*                                                                  */ 02791000
*/*   OUTPUT - CVRRQLST  CVRUSED   INDICATES REQUEST SCANNED         */ 02792000
*/*            CVRWORK   WREQPTR                                     */ 02793000
*/*                      WGRPPTR                                     */ 02794000
*/*                      WMIN                                        */ 02795000
*/*                                                                  */ 02796000
*/********************************************************************/ 02797000
*                                                               03S0581 02798000
*       DO;                         /* START OF SCANREQS             */ 02799000
*         FAILSW=ON;                /* INDICATE FAILURE UNTIL NEW       02800000
*                                      GROUP IS FOUND                */ 02801000
*                                                               03S0582 02802000
         OI    FAILSW,B'10000000'                               03S0582 02803000
*         /***********************************************************/ 02804000
*         /*                                                         */ 02805000
*         /* SCAN REQUESTS LOOKING FOR NEW GROUPS. TERMINATE SCAN IF */ 02806000
*         /* EXTENSION TO SOLUTION IS FOUND.                         */ 02807000
*         /*                                                         */ 02808000
*         /***********************************************************/ 02809000
*                                                               03S0583 02810000
*         REQPTR=CVRRQPTR;          /* LOCATE FIRST REQUEST          */ 02811000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0583 02812000
*         DO HINDEX2=1 TO CVRNREQ WHILE(SOLUTION=0);/* SET UP LOOP      02813000
*                                      CONTROL OVER REQS             */ 02814000
*                                                               03S0584 02815000
         LA    HINDEX2,1                                        03S0584 02816000
         B     @DE00584                                         03S0584 02817000
@DL00584 SLR   @10,@10                                          03S0584 02818000
         CR    SOLUTION,@10                                     03S0584 02819000
         BNE   @DC00584                                         03S0584 02820000
*           /*********************************************************/ 02821000
*           /*                                                       */ 02822000
*           /* CONSIDER ONLY THOSE REQUESTS WHICH HAVE BEEN REACHED  */ 02823000
*           /* IN GROUP SCAN BUT NOT USED IN ANY REQUEST SCAN YET.   */ 02824000
*           /*                                                       */ 02825000
*           /*********************************************************/ 02826000
*                                                               03S0585 02827000
*           IF CVRSKFLG=OFF&CVRGNEXT^=INITVAL&^(CVRRUSED=ON) THEN/*     02828000
*                                      REQ REACHED BUT NOT USED      */ 02829000
         TM    CVRSKFLG(REQPTR),B'10000000'                     03S0585 02830000
         BNZ   @RF00585                                         03S0585 02831000
         C     @10,CVRGNEXT(,REQPTR)                            03S0585 02832000
         BE    @RF00585                                         03S0585 02833000
         TM    CVRRUSED(REQPTR),B'01000000'                     03S0585 02834000
         BO    @RF00585                                         03S0585 02835000
*             DO;                                               03S0586 02836000
*                                                               03S0586 02837000
*               /*****************************************************/ 02838000
*               /*                                                   */ 02839000
*               /* SCAN GROUPS FOR THIS REQUEST LOOKING FOR ONE WHICH*/ 02840000
*               /* HAS NOT BEEN REACHED YET. IF AN UNREACHED GROUP   */ 02841000
*               /* CONTAINS EXCESS UNITS, AN EXTENSION TO THE        */ 02842000
*               /* SOLUTION HAS BEEN FOUND AND THE SCAN ENDS.        */ 02843000
*               /*                                                   */ 02844000
*               /*****************************************************/ 02845000
*                                                               03S0587 02846000
*               GRPPTR=CVRGRPPT;    /* LOCATE FIRST GROUP            */ 02847000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0587 02848000
*               DO HINDEX3=1 TO CVRNGRP WHILE(CVRGRPID<=CVRGRPLK&       02849000
*                     SOLUTION=0);  /* SET UP LOOP CONTROL OVER 03S0588 02850000
*                                      GROUPS                        */ 02851000
         LA    HINDEX3,1                                        03S0588 02852000
         B     @DE00588                                         03S0588 02853000
@DL00588 LH    @10,CVRGRPID(,GRPPTR)                            03S0588 02854000
         CH    @10,CVRGRPLK(,PARMPTR)                           03S0588 02855000
         BH    @DC00588                                         03S0588 02856000
         SLR   @10,@10                                          03S0588 02857000
         CR    SOLUTION,@10                                     03S0588 02858000
         BNE   @DC00588                                         03S0588 02859000
*                 IF CVRGSKP=OFF THEN                           03S0589 02860000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0589 02861000
         BNZ   @RF00589                                         03S0589 02862000
*                   DO;                                         03S0590 02863000
*                     CNTPTR=CVRGCPTR;/* LOCATE GRPCOUNT ENTRY       */ 02864000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0591 02865000
*                     IF WREQPTR=INITVAL/* GROUP REACHED YET?        */ 02866000
*                       THEN        /* GROUP NOT REACHED YET         */ 02867000
         L     @15,GRPWPTR(,CNTPTR)                             03S0592 02868000
         C     @10,WREQPTR(,@15)                                03S0592 02869000
         BNE   @RF00592                                         03S0592 02870000
*                       DO;                                     03S0593 02871000
*                         WREQPTR=REQPTR;/* INDICATE GROUP REACHED      02872000
*                                      AND SAVE POINTER TO REQUEST      02873000
*                                      WHICH REACHED IT              */ 02874000
         ST    REQPTR,WREQPTR(,@15)                             03S0594 02875000
*                         WGRPPTR=GRPPTR;/* SAVE PTR TO ENTRY IN        02876000
*                                      CVRGPLST                      */ 02877000
         ST    GRPPTR,WGRPPTR(,@15)                             03S0595 02878000
*                         WMIN=CVRMIN;/* NUMBER OF UNITS MOVABLE OVER   02879000
*                                      THIS PATH                     */ 02880000
         MVC   WMIN(2,@15),CVRMIN(REQPTR)                       03S0596 02881000
*                         FAILSW=OFF;/* NEW GROUP HAS BEEN REACHED   */ 02882000
         NI    FAILSW,B'01111111'                               03S0597 02883000
*                         IF GRPEXCS>0/* ANY UNUSED UNITS?           */ 02884000
*                           THEN    /* UNUSED UNITS IN THIS GROUP    */ 02885000
         CH    @10,GRPEXCS(,CNTPTR)                             03S0598 02886000
         BNL   @RF00598                                         03S0598 02887000
*                           SOLUTION=GRPWPTR;/* INDICATE EXTENSION   */ 02888000
         LR    SOLUTION,@15                                     03S0599 02889000
*                       END;        /* END OF PROCESSING OF REACHED     02890000
*                                      GROUP                         */ 02891000
*                   END;                                        03S0601 02892000
*                 ELSE                                          03S0602 02893000
*                   ;                                           03S0602 02894000
@RF00589 DS    0H                                               03S0603 02895000
*                 GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT GROUP   02896000
*                                      FOR REQ                       */ 02897000
@RC00589 AH    GRPPTR,@CH00067                                  03S0603 02898000
*               END;                /* END OF GROUP SCAN             */ 02899000
         AH    HINDEX3,@CH00051                                 03S0604 02900000
@DE00588 CH    HINDEX3,CVRNGRP(,REQPTR)                         03S0604 02901000
         BNH   @DL00588                                         03S0604 02902000
@DC00588 DS    0H                                               03S0605 02903000
*               CVRRUSED=ON;        /* MARK REQUEST AS USED          */ 02904000
         OI    CVRRUSED(REQPTR),B'01000000'                     03S0605 02905000
*             END;                  /* END HANDLING OF REACHED BUT      02906000
*                                      NOT USED REQUEST              */ 02907000
*           REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST    */ 02908000
@RF00585 AH    REQPTR,@CH00250                                  03S0607 02909000
*         END;                      /* END OF REQUEST SCAN           */ 02910000
         AH    HINDEX2,@CH00051                                 03S0608 02911000
@DE00584 CH    HINDEX2,CVRNREQ(,PARMPTR)                        03S0608 02912000
         BNH   @DL00584                                         03S0608 02913000
@DC00584 DS    0H                                               03S0609 02914000
*       END;                        /* END OF SCANREQ                */ 02915000
*       IF FAILSW=OFF&SOLUTION=0    /* WAS NEW GROUP REACHED OR 02S0610 02916000
*                                      SOLUTION FOUND?               */ 02917000
*         THEN                      /* NEW GROUP REACHED BUT NO 02S0610 02918000
*                                                              SOLUTN*/ 02919000
         TM    FAILSW,B'10000000'                               02S0610 02920000
         BNZ   @RF00610                                         02S0610 02921000
         LTR   SOLUTION,SOLUTION                                02S0610 02922000
         BNZ   @RF00610                                         02S0610 02923000
*                                                               03S0611 02924000
*/********************************************************************/ 02925000
*/*                                                                  */ 02926000
*/* SEGMENT NAME - SCANGRPS                                          */ 02927000
*/*                                                                  */ 02928000
*/* DESCRIPTIVE NAME - SECOND HALF OF LOCATING EXTENSION TO SOLUTION */ 02929000
*/*                                                                  */ 02930000
*/* FUNCTION - TO FIND AND MARK ALL UNUSED REQUESTS WHICH HAVE       */ 02931000
*/*            A GROUP FOUND IN SCANREQS AS SOLUTION ELEMENT         */ 02932000
*/*                                                                  */ 02933000
*/* OPERATION -                                                      */ 02934000
*/*      GROUPS TO BE USED IN THIS EXTENSION ARE IDENTIFIED BY       */ 02935000
*/*            WREQPTR NOT 0.  EACH REQUEST WHICH HAS NOT YET BEEN   */ 02936000
*/*            REACHED IS CHECKED TO SEE WHETHER IT USES ANY GROUP   */ 02937000
*/*            WITH THIS CHARACTERISTIC IN ITS SOLUTION.  IF IT DOES */ 02938000
*/*            CVRGNEXT IS SET TO ADDRESS OF CVRGPLST ENTRY FOR      */ 02939000
*/*            THIS GROUP.                                           */ 02940000
*/*                                                                  */ 02941000
*/* ENTRY - (INLINE SUBROUTINE - ENTERED AT TOP)                     */ 02942000
*/*                                                                  */ 02943000
*/*   PURPOSE - SEE FUNCTION                                         */ 02944000
*/*                                                                  */ 02945000
*/*   INPUT  - CVRRQLST  CVRGNEXT  0 IF AVAILABLE                    */ 02946000
*/*                      CVRSKFLG  1 - REQUEST IS TO BE IGNORED      */ 02947000
*/*            CVRGPLST  CVRGALL   NUMBER ALLOCATED TO THIS REQUEST  */ 02948000
*/*                                FROM THIS GROUP                   */ 02949000
*/*            CVRWORK   WREQPTR   ^=0 IF GROUP HAS BEEN REACHED     */ 02950000
*/*                                                                  */ 02951000
*/* EXIT - NORMAL - (INLINE SUBROUTINE - EXITS AT BOTTOM)            */ 02952000
*/*                                                                  */ 02953000
*/*   CONDITION - FUNCTION COMPLETE                                  */ 02954000
*/*                                                                  */ 02955000
*/*   OUTPUT - CVRRQLST  CVRGNEXT  POINTER TO GROUP FROM WHICH REQ   */ 02956000
*/*                                WAS REACHED                       */ 02957000
*/*                      CVRMIN    NUMBER OF UNITS WHICH CAN BE ADDED*/ 02958000
*/*                                                                  */ 02959000
*/********************************************************************/ 02960000
*                                                               03S0611 02961000
*         DO;                       /* START OF SCANGRPS             */ 02962000
*           RESPECIFY                                           03S0612 02963000
*            (CVRWORKD) BASED(GRPWPTR);                         03S0612 02964000
*           FAILSW=ON;              /* INDICATE FAILURE UNTIL A NEW     02965000
*                                      REQUEST IS REACHED.           */ 02966000
*                                                               03S0613 02967000
         OI    FAILSW,B'10000000'                               03S0613 02968000
*           /*********************************************************/ 02969000
*           /*                                                       */ 02970000
*           /* SCAN REQUESTS LOOKING FOR ONE WHICH HAS MARKED GROUP  */ 02971000
*           /* AS SOLUTION GROUP.                                    */ 02972000
*           /*                                                       */ 02973000
*           /*********************************************************/ 02974000
*                                                               03S0614 02975000
*           REQPTR=CVRRQPTR;        /* LOCATE FIRST REQUEST          */ 02976000
         L     REQPTR,CVRRQPTR(,PARMPTR)                        03S0614 02977000
*           DO HINDEX4=1 TO CVRNREQ;/* SET UP LOOP CONTROL OVER REQS */ 02978000
         LA    HINDEX4,1                                        03S0615 02979000
         B     @DE00615                                         03S0615 02980000
@DL00615 DS    0H                                               03S0616 02981000
*             IF CVRSKFLG=OFF&CVRGNEXT=INITVAL/* IS REQ TO BE   03S0616 02982000
*                                      PROCESSED AND NOT REACHED YET?*/ 02983000
*               THEN                /* PROCESSABLE REQ NOT REACHED   */ 02984000
         TM    CVRSKFLG(REQPTR),B'10000000'                     03S0616 02985000
         BNZ   @RF00616                                         03S0616 02986000
         ICM   @10,15,CVRGNEXT(REQPTR)                          03S0616 02987000
         BNZ   @RF00616                                         03S0616 02988000
*               DO;                                             03S0617 02989000
*                                                               03S0617 02990000
*                 /***************************************************/ 02991000
*                 /*                                                 */ 02992000
*                 /* SCAN GROUPS LOOKING FOR SOLUTION GROUPS WITH    */ 02993000
*                 /* WREQPTR^=0                                      */ 02994000
*                 /*                                                 */ 02995000
*                 /***************************************************/ 02996000
*                                                               03S0618 02997000
*                 GRPPTR=CVRGRPPT;  /* LOCATE FIRST GROUP            */ 02998000
         L     GRPPTR,CVRGRPPT(,REQPTR)                         03S0618 02999000
*                 DO HINDEX5=1 TO CVRNGRP WHILE(CVRGRPID<=CVRGRPLK&     03000000
*                       CVRGNEXT=0);/* END SCAN WHEN ALL ARE    03S0619 03001000
*                                      EXHAUSTED OR REACH HAS BEEN      03002000
*                                      ESTABLISHED                   */ 03003000
         LA    HINDEX5,1                                        03S0619 03004000
         B     @DE00619                                         03S0619 03005000
@DL00619 LH    @10,CVRGRPID(,GRPPTR)                            03S0619 03006000
         CH    @10,CVRGRPLK(,PARMPTR)                           03S0619 03007000
         BH    @DC00619                                         03S0619 03008000
         SLR   @10,@10                                          03S0619 03009000
         C     @10,CVRGNEXT(,REQPTR)                            03S0619 03010000
         BNE   @DC00619                                         03S0619 03011000
*                   IF CVRGSKP=OFF THEN                         03S0620 03012000
         TM    CVRGSKP(GRPPTR),B'10000000'                      03S0620 03013000
         BNZ   @RF00620                                         03S0620 03014000
*                     DO;                                       03S0621 03015000
*                       CNTPTR=CVRGCPTR;/* LOCATE GRPCOUNT ENTRY     */ 03016000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0622 03017000
*                       IF CVRGALL>0&WREQPTR^=INITVAL/* REACHED 03S0623 03018000
*                                      SOLUTION GROUP?               */ 03019000
*                         THEN      /* REACHED SOLUTION GROUP        */ 03020000
         LH    @15,CVRGALL(,GRPPTR)                             03S0623 03021000
         CR    @15,@10                                          03S0623 03022000
         BNH   @RF00623                                         03S0623 03023000
         L     @14,GRPWPTR(,CNTPTR)                             03S0623 03024000
         C     @10,WREQPTR(,@14)                                03S0623 03025000
         BE    @RF00623                                         03S0623 03026000
*                         DO;                                   03S0624 03027000
*                           CVRGNEXT=GRPPTR;/* INDICATE REQUEST 03S0625 03028000
*                                      REACHED AND SAVE PTR TO GROUP    03029000
*                                      WHICH REACHED IT              */ 03030000
         ST    GRPPTR,CVRGNEXT(,REQPTR)                         03S0625 03031000
*                           CVRMIN=MIN(WMIN,CVRGALL);/* NUMBER OF       03032000
*                                      UNITS WHICH CAN BE MOVED OVER    03033000
*                                      THIS PATH                     */ 03034000
         LH    @10,WMIN(,@14)                                   03S0626 03035000
         CR    @10,@15                                          03S0626 03036000
         BNH   *+6                                                      03037000
         LR    @10,@15                                          03S0626 03038000
         STH   @10,CVRMIN(,REQPTR)                              03S0626 03039000
*                           FAILSW=OFF;/* INDICATE NEW REQ REACHED   */ 03040000
         NI    FAILSW,B'01111111'                               03S0627 03041000
*                         END;      /* END OF PROCESSING OF SOLUTION    03042000
*                                      GROUP                         */ 03043000
*                     END;                                      03S0629 03044000
*                   ELSE                                        03S0630 03045000
*                     ;                                         03S0630 03046000
@RF00620 DS    0H                                               03S0631 03047000
*                   GRPPTR=GRPPTR+LENGTH(CVRGPLST);/* LOCATE NEXT       03048000
*                                      GROUP                         */ 03049000
@RC00620 AH    GRPPTR,@CH00067                                  03S0631 03050000
*                 END;              /* END OF GROUP SCAN             */ 03051000
         AH    HINDEX5,@CH00051                                 03S0632 03052000
@DE00619 CH    HINDEX5,CVRNGRP(,REQPTR)                         03S0632 03053000
         BNH   @DL00619                                         03S0632 03054000
@DC00619 DS    0H                                               03S0633 03055000
*               END;                /* END OF CHECKING ONE REQUEST   */ 03056000
*             REQPTR=REQPTR+LENGTH(CVRRQLST);/* LOCATE NEXT REQUEST  */ 03057000
@RF00616 AH    REQPTR,@CH00250                                  03S0634 03058000
*           END;                    /* END OF REQUEST SCAN           */ 03059000
         AH    HINDEX4,@CH00051                                 03S0635 03060000
@DE00615 CH    HINDEX4,CVRNREQ(,PARMPTR)                        03S0635 03061000
         BNH   @DL00615                                         03S0635 03062000
*         END;                      /* END OF SCANGRPS               */ 03063000
*     END;                          /* END SEARCH FOR EXTENSION      */ 03064000
@RF00610 DS    0H                                               02S0637 03065000
@DE00580 LTR   SOLUTION,SOLUTION                                02S0637 03066000
         BNZ   @DC00580                                         02S0637 03067000
         TM    FAILSW,B'10000000'                               02S0637 03068000
         BZ    @DL00580                                         02S0637 03069000
@DC00580 DS    0H                                               02S0638 03070000
*     IF^(SOLUTION=0)&^(SOLUTION=1) /* WAS EXTENSION FOUND?          */ 03071000
*       THEN                        /* EXTENSION WAS FOUND           */ 03072000
         LTR   SOLUTION,SOLUTION                                02S0638 03073000
         BZ    @RF00638                                         02S0638 03074000
         CH    SOLUTION,@CH00051                                02S0638 03075000
         BE    @RF00638                                         02S0638 03076000
*                                                               03S0639 03077000
*/********************************************************************/ 03078000
*/*                                                                  */ 03079000
*/* SEGMENT NAME - BACKTRK                                           */ 03080000
*/*                                                                  */ 03081000
*/* DESCRIPTIVE NAME - REARRANGE SOLUTION                            */ 03082000
*/*                                                                  */ 03083000
*/* FUNCTION - TO UPDATE THE COUNTS TO REFLECT THE EXTENDED SOLUTION */ 03084000
*/*                                                                  */ 03085000
*/* OPERATION -                                                      */ 03086000
*/*      AT ENTRY, SOLUTION CONTAINS THE ADDRESS OF THE CVRWORK      */ 03087000
*/*            ENTRY FOR THE GROUP WHICH CONTAINS EXCESS UNITS.      */ 03088000
*/*            EACH CVRWORK ENTRY IN CHAIN CONTAINS A POINTER TO     */ 03089000
*/*            REQUEST WHICH IS TO HAVE UNITS MOVED AND A POINTER TO */ 03090000
*/*            CVRGPLST TO WHICH THEY ARE TO BE MOVED.  EACH REQUEST */ 03091000
*/*            IN CHAIN CONTAINS A POINTER TO CVRGPLST ENTRY FROM    */ 03092000
*/*            WHICH UNITS ARE TO BE MOVED.                          */ 03093000
*/*      INITIALLY, THE NUMBER OF UNITS TO BE MOVED IS CALCULATED    */ 03094000
*/*            AND SUBTRACTED FROM THE NUMBER OF EXCESS UNITS        */ 03095000
*/*            AVAILABLE IN GROUP INIDICATED BY SOLUTION.            */ 03096000
*/*      BACKTRACKING - THE REQUEST AND GROUP TO WHICH UNITS ARE TO  */ 03097000
*/*            BE ALLOCATED ARE LOCATED FROM POINTERS IN CVRWORK.    */ 03098000
*/*            THE ALLOCATION TO THAT GROUP IS INCREASED.  THE GROUP */ 03099000
*/*            POINTER IN CVRRQLST IS EXAMINED.  IF IT IS THE FLAG   */ 03100000
*/*            VALUE(1), BACKTRACKING IS COMPLETED.  OTHERWISE,      */ 03101000
*/*            THE ALLOCATION TO THAT GROUP IS REDUCED, THE CVRWORK  */ 03102000
*/*            ENTRY CORRESPONDING TO THAT GROUP IS LOCATED, AND     */ 03103000
*/*            BACKTRACKING CONTINUES.                               */ 03104000
*/*      CLEAN-UP - REACHED WHEN GROUP POINTER IS FLAG VALUE.  THE   */ 03105000
*/*            NUMBER NEEDED FOR THIS REQUEST (CVRNEED) IS REDUCED.  */ 03106000
*/*                                                                  */ 03107000
*/* ENTRY - THIS CODE IS AN INLINE SUBROUTINE WHICH IS ENTERED AT    */ 03108000
*/*         THE TOP                                                  */ 03109000
*/*                                                                  */ 03110000
*/*   PURPOSE - SEE FUNCTION                                         */ 03111000
*/*                                                                  */ 03112000
*/* INPUT    - SOLUTION            GROUP WITH EXCESS UNITS           */ 03113000
*/*            CVRRQLST CVRNEED    NUMBER OF UNITS NEEDED            */ 03114000
*/*                     CVRGNEXT   GRP FROM WHICH UNITS ARE REMOVED  */ 03115000
*/*                                OR COMPLETION FLAG                */ 03116000
*/*            CVRGPLST CVRGALL    CURRENT SOLUTION                  */ 03117000
*/*            GRPCOUNT GRPEXCS    NUMBER OF UNITS AVAILABLE         */ 03118000
*/*            CVRWORK  WMIN       MAX NUMBER MOVABLE                */ 03119000
*/*                     WREQPTR    REQUEST TO BE CHANGED             */ 03120000
*/*                     WGRPPTR    GROUP TO BE INCREASED             */ 03121000
*/*                                                                  */ 03122000
*/* EXIT - NORMAL (INLINE SUBROUTINE - EXITS AT BOTTOM)              */ 03123000
*/*                                                                  */ 03124000
*/*   CONDITION - COUNTS UPDATED                                     */ 03125000
*/*                                                                  */ 03126000
*/* OUTPUT   - CVRRQLST CVRNEED    NUMBER OF UNITS STILL NEEDED      */ 03127000
*/*            CVRGPLST CVRGALL    NEW SOLUTION                      */ 03128000
*/*            GRPCOUNT GRPEXCS    NUMBER OF UNITS STILL AVAILABLE   */ 03129000
*/*                                                                  */ 03130000
*/********************************************************************/ 03131000
*                                                               03S0639 03132000
*       DO;                         /* START OF BACKTRACKING         */ 03133000
*         CNTPTR=SOLUTION->WCNTPTR; /* LOCATE GRPCOUNT ENTRY FOR        03134000
*                                      GROUP WITH EXCESS             */ 03135000
         L     CNTPTR,WCNTPTR(,SOLUTION)                        03S0640 03136000
*         RESPECIFY                                             03S0641 03137000
*           CVRWORKD BASED(GRPWPTR);/* CONSIDER CVRWORK AS EXTENSION    03138000
*                                      OF GRPCOUNT                   */ 03139000
*         ADDL=MIN(WMIN,GRPEXCS);   /* CALCULATE NUMBER TO BE MOVED  */ 03140000
         L     @10,GRPWPTR(,CNTPTR)                             03S0642 03141000
         LH    @09,GRPEXCS(,CNTPTR)                             03S0642 03142000
         LH    ADDL,WMIN(,@10)                                  03S0642 03143000
         CR    ADDL,@09                                         03S0642 03144000
         BNH   *+6                                                      03145000
         LR    ADDL,@09                                         03S0642 03146000
*         GRPEXCS=GRPEXCS-ADDL;     /* REDUCE COUNT OF EXCESS        */ 03147000
         SLR   @09,ADDL                                         03S0643 03148000
         STH   @09,GRPEXCS(,CNTPTR)                             03S0643 03149000
*         DONESW=OFF;               /* INITIALIZE SWITCH CONTROLLING    03150000
*                                      LOOP                          */ 03151000
*                                                               03S0644 03152000
         NI    DONESW,B'01111111'                               03S0644 03153000
*         /***********************************************************/ 03154000
*         /*                                                         */ 03155000
*         /* IN EACH EXECUTION OF THIS LOOP, UNITS ARE MOVED FROM ONE*/ 03156000
*         /* GROUP TO ANOTHER WITHIN THE SAME REQUEST UNTIL THE      */ 03157000
*         /* REQUEST WHICH REQUIRES MORE UNITS IS REACHED.           */ 03158000
*         /*                                                         */ 03159000
*         /***********************************************************/ 03160000
*                                                               03S0645 03161000
*         DO WHILE(^(DONESW=ON));   /* CONTINUE UNTIL FLAG SET       */ 03162000
         B     @DE00645                                         03S0645 03163000
@DL00645 DS    0H                                               03S0646 03164000
*           REQPTR=WREQPTR;         /* REQUEST WHICH IS TO HAVE UNITS   03165000
*                                      MOVED                         */ 03166000
         L     @10,GRPWPTR(,CNTPTR)                             03S0646 03167000
         L     REQPTR,WREQPTR(,@10)                             03S0646 03168000
*           GRPPTR=WGRPPTR;         /* GROUP TO WHICH UNITS ARE TO BE   03169000
*                                      ADDED                         */ 03170000
         L     GRPPTR,WGRPPTR(,@10)                             03S0647 03171000
*           CVRGALL=CVRGALL+ADDL;   /* ADD IN UNITS                  */ 03172000
         LR    @10,ADDL                                         03S0648 03173000
         AH    @10,CVRGALL(,GRPPTR)                             03S0648 03174000
         STH   @10,CVRGALL(,GRPPTR)                             03S0648 03175000
*           IF CVRGNEXT=NEEDFLAG    /* DOES REQUEST NEED UNITS?      */ 03176000
*             THEN                  /* REQUEST NEEDS UNITS           */ 03177000
         CLC   CVRGNEXT(4,REQPTR),@CF00051                      03S0649 03178000
         BNE   @RF00649                                         03S0649 03179000
*             DO;                                               03S0650 03180000
*               CVRNEED=CVRNEED-ADDL;/* REDUCE NUMBER NEEDED         */ 03181000
         LH    @10,CVRNEED(,REQPTR)                             03S0651 03182000
         SLR   @10,ADDL                                         03S0651 03183000
         STH   @10,CVRNEED(,REQPTR)                             03S0651 03184000
*               DONESW=ON;          /* SET FLAG TO INDICATE SOLUTION    03185000
*                                      HAS BEEN EXTENDED             */ 03186000
         OI    DONESW,B'10000000'                               03S0652 03187000
*             END;                                              03S0653 03188000
*           ELSE                    /* REQUEST DOES NOT NEED UNITS   */ 03189000
*             DO;                                               03S0654 03190000
         B     @RC00649                                         03S0654 03191000
@RF00649 DS    0H                                               03S0655 03192000
*               GRPPTR=CVRGNEXT;    /* LOCATE GROUP FROM WHICH UNITS    03193000
*                                      ARE TO BE REMOVED             */ 03194000
         L     GRPPTR,CVRGNEXT(,REQPTR)                         03S0655 03195000
*               CNTPTR=CVRGCPTR;    /* LOCATE COUNT ENTRY FOR GROUP  */ 03196000
         L     CNTPTR,CVRGCPTR(,GRPPTR)                         03S0656 03197000
*               CVRGALL=CVRGALL-ADDL;/* REDUCE NUMBER ALLOCATED TO      03198000
*                                      GRP                           */ 03199000
         LH    @10,CVRGALL(,GRPPTR)                             03S0657 03200000
         SLR   @10,ADDL                                         03S0657 03201000
         STH   @10,CVRGALL(,GRPPTR)                             03S0657 03202000
*             END;                                              03S0658 03203000
*         END;                      /* END OF LOOP TO WORK IN UNITS  */ 03204000
@RC00649 DS    0H                                               03S0659 03205000
@DE00645 TM    DONESW,B'10000000'                               03S0659 03206000
         BNO   @DL00645                                         03S0659 03207000
*       END;                        /* END OF BACK TRACK             */ 03208000
*     ELSE                          /* EXTENSION WAS NOT FOUND       */ 03209000
*       IF FAILSW=ON                /* WAS INFEASIBILITY DETECTED?   */ 03210000
*         THEN                      /* INFEASIBILITY FOUND           */ 03211000
         B     @RC00638                                         02S0661 03212000
@RF00638 TM    FAILSW,B'10000000'                               02S0661 03213000
         BNO   @RF00661                                         02S0661 03214000
*         HCODE=HUNGERR;            /* SET RETURN CODE TO ERROR IND. */ 03215000
         LA    HCODE,8                                          02S0662 03216000
*   END;                            /* END ONE PASS SEARCHING FOR       03217000
*                                      SOLUTION OR FAILURE           */ 03218000
@RF00661 DS    0H                                               02S0663 03219000
@RC00638 DS    0H                                               02S0663 03220000
@DE00552 CH    SOLUTION,@CH00051                                02S0663 03221000
         BE    @DC00552                                         02S0663 03222000
         LTR   HCODE,HCODE                                      02S0663 03223000
         BZ    @DL00552                                         02S0663 03224000
@DC00552 DS    0H                                               02S0664 03225000
*   RETURN CODE(HCODE);                                         02S0664 03226000
         LR    @15,HCODE                                        02S0664 03227000
         L     @14,12(,@13)                                     02S0664 03228000
         LM    @00,@12,20(@13)                                  02S0664 03229000
         BR    @14                                              02S0664 03230000
*   END;                                                        02S0665 03231000
*   END IEFAB480                                                01S0666 03232000
*                                                               01S0666 03233000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 03234000
*/*%INCLUDE SYSLIB  (CVRSPEC )                                       */ 03235000
*/*%INCLUDE SYSLIB  (CVRMAC  )                                       */ 03236000
*/*%INCLUDE SYSLIB  (IEFZB426)                                       */ 03237000
*/*%INCLUDE SYSLIB  (CVRLDCL )                                       */ 03238000
*/*%INCLUDE SYSLIB  (CHKPARM )                                       */ 03239000
*/*%INCLUDE SYSLIB  (CVRINIT )                                       */ 03240000
*/*%INCLUDE SYSLIB  (CNTGRPS )                                       */ 03241000
*/*%INCLUDE SYSLIB  (GETWORK )                                       */ 03242000
*/*%INCLUDE SYSLIB  (SUMUNITS)                                       */ 03243000
*/*%INCLUDE SYSLIB  (REDOSOL )                                       */ 03244000
*/*%INCLUDE SYSLIB  (PTSREDUC)                                       */ 03245000
*/*%INCLUDE SYSLIB  (FINDEXCS)                                       */ 03246000
*/*%INCLUDE SYSLIB  (FINDSTRT)                                       */ 03247000
*/*%INCLUDE SYSLIB  (ROWREACH)                                       */ 03248000
*/*%INCLUDE SYSLIB  (REDUCE  )                                       */ 03249000
*/*%INCLUDE SYSLIB  (FREEWORK)                                       */ 03250000
*/*%INCLUDE SYSLIB  (FINDROWS)                                       */ 03251000
*/*%INCLUDE SYSLIB  (COLREACH)                                       */ 03252000
*/*%INCLUDE SYSLIB  (FINDTRL )                                       */ 03253000
*/*%INCLUDE SYSLIB  (HUNG    )                                       */ 03254000
*/*%INCLUDE SYSLIB  (HUNGMAC )                                       */ 03255000
*/*%INCLUDE SYSLIB  (HUNGDCL )                                       */ 03256000
*/*%INCLUDE SYSLIB  (HUNGINIT)                                       */ 03257000
*/*%INCLUDE SYSLIB  (SCANREQS)                                       */ 03258000
*/*%INCLUDE SYSLIB  (SCANGRPS)                                       */ 03259000
*/*%INCLUDE SYSLIB  (BACKTRK )                                       */ 03260000
*                                                               01S0666 03261000
*       ;                                                       01S0666 03262000
@DATA    DS    0H                                                       03263000
@CH00067 DC    H'16'                                                    03264000
@CH00250 DC    H'28'                                                    03265000
@CH00125 DC    H'-1'                                                    03266000
@DATD    DSECT                                                          03267000
         DS    0F                                                       03268000
@SA00001 DS    18F                                                      03269000
@PC00001 DS    1F                                                       03270000
IEFAB480 CSECT                                                          03271000
         DS    0F                                                       03272000
@CF00051 DC    F'1'                                                     03273000
@CH00051 EQU   @CF00051+2                                               03274000
@CF00128 DC    XL4'E6000000'                                            03275000
@DATD    DSECT                                                          03276000
         DS    0D                                                       03277000
ALGTABP  DS    A                                                        03278000
ACVRWORK DS    A                                                        03279000
INDEX23  DS    F                                                        03280000
@NM00009 DS    BL1                                                      03281000
         ORG   @NM00009                                                 03282000
DONESW   DS    BL1                                                      03283000
FOUNDSW  EQU   @NM00009+0                                               03284000
EXCESSSW EQU   @NM00009+0                                               03285000
CREACHSW EQU   @NM00009+0                                               03286000
RREACHSW EQU   @NM00009+0                                               03287000
GFOUNDSW EQU   @NM00009+0                                               03288000
@NM00010 EQU   @NM00009+0                                               03289000
         ORG   @NM00009+1                                               03290000
@NM00011 DS    BL1                                                      03291000
         ORG   @NM00011                                                 03292000
FAILSW   DS    BL1                                                      03293000
@NM00012 EQU   @NM00011+0                                               03294000
         ORG   @NM00011+1                                               03295000
@OLDKEY  DS    AL1                                                      03296000
IEFAB480 CSECT                                                          03297000
         DS    0F                                                       03298000
@SIZDATD DC    AL1(230)                                                 03299000
         DC    AL3(@ENDDATD-@DATD)                                      03300000
         DS    0D                                                       03301000
IEFAB480 CSECT                                                          03302000
         DS   0H                                                        03303000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   03304000
@DATD    DSECT                                                          03305000
        DS 0F                                                           03306000
GETMAIN GETMAIN EC,MF=L                                                 03307000
@DATD    DSECT                                                          03308000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                03309000
@ENDDATD EQU   *                                                        03310000
IEFAB480 CSECT                                                          03311000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03312000
@01      EQU   01                                                       03313000
@02      EQU   02                                                       03314000
@03      EQU   03                                                       03315000
@04      EQU   04                                                       03316000
@05      EQU   05                                                       03317000
@06      EQU   06                                                       03318000
@07      EQU   07                                                       03319000
@08      EQU   08                                                       03320000
@09      EQU   09                                                       03321000
@10      EQU   10                                                       03322000
@11      EQU   11                                                       03323000
@12      EQU   12                                                       03324000
@13      EQU   13                                                       03325000
@14      EQU   14                                                       03326000
@15      EQU   15                                                       03327000
SOLUTION EQU   @07                                                      03328000
HINDEX5  EQU   @09                                                      03329000
HINDEX4  EQU   @04                                                      03330000
HINDEX3  EQU   @09                                                      03331000
HINDEX2  EQU   @04                                                      03332000
HINDEX1  EQU   @03                                                      03333000
ADDL     EQU   @04                                                      03334000
HCODE    EQU   @08                                                      03335000
PARMPTR  EQU   @05                                                      03336000
WORKPTR  EQU   @04                                                      03337000
CNTPTR   EQU   @06                                                      03338000
GRPPTR   EQU   @03                                                      03339000
REQPTR   EQU   @02                                                      03340000
FINDEX2  EQU   @09                                                      03341000
FINDEX1  EQU   @08                                                      03342000
INDEX22  EQU   @03                                                      03343000
INDEX21  EQU   @07                                                      03344000
INDEX20  EQU   @04                                                      03345000
INDEX19  EQU   @07                                                      03346000
INDEX18  EQU   @04                                                      03347000
INDEX17  EQU   @07                                                      03348000
INDEX16  EQU   @02                                                      03349000
INDEX15  EQU   @03                                                      03350000
INDEX14  EQU   @04                                                      03351000
INDEX13  EQU   @07                                                      03352000
INDEX12  EQU   @04                                                      03353000
INDEX11  EQU   @04                                                      03354000
INDEX10  EQU   @07                                                      03355000
INDEX9   EQU   @04                                                      03356000
INDEX8   EQU   @04                                                      03357000
INDEX7   EQU   @07                                                      03358000
INDEX6   EQU   @07                                                      03359000
INDEX5   EQU   @06                                                      03360000
INDEX4   EQU   @08                                                      03361000
INDEX3   EQU   @07                                                      03362000
INDEX2   EQU   @10                                                      03363000
INDEX1   EQU   @08                                                      03364000
FLAGCNT  EQU   @02                                                      03365000
MINX     EQU   @04                                                      03366000
FCODE    EQU   @07                                                      03367000
RCODE    EQU   @09                                                      03368000
ALCOUNT  EQU   @04                                                      03369000
STARTR   EQU   @07                                                      03370000
PTSN     EQU   @08                                                      03371000
SIZE     EQU   @10                                                      03372000
COUNT    EQU   @07                                                      03373000
R0       EQU   @00                                                      03374000
R1       EQU   @01                                                      03375000
R2       EQU   @02                                                      03376000
R3       EQU   @03                                                      03377000
R15      EQU   @15                                                      03378000
ALGPTRS  EQU   0                                                        03379000
CVRPARM  EQU   0                                                        03380000
CVRRQPTR EQU   CVRPARM                                                  03381000
CVRNREQ  EQU   CVRPARM+4                                                03382000
CVRGRPLK EQU   CVRPARM+6                                                03383000
CVRFLG1  EQU   CVRPARM+8                                                03384000
CVRAVFLG EQU   CVRFLG1                                                  03385000
CVRALFLG EQU   CVRFLG1                                                  03386000
CVROFFLG EQU   CVRFLG1                                                  03387000
CVRFCALL EQU   CVRFLG1                                                  03388000
CVRRQLST EQU   0                                                        03389000
CVRREQ1  EQU   CVRRQLST+4                                               03390000
CVRALLCT EQU   CVRRQLST+6                                               03391000
CVRNEED  EQU   CVRRQLST+8                                               03392000
CVRMIN   EQU   CVRRQLST+10                                              03393000
CVRPTS   EQU   CVRMIN                                                   03394000
CVRGNEXT EQU   CVRRQLST+12                                              03395000
CVRFLG2  EQU   CVRRQLST+16                                              03396000
CVRSKFLG EQU   CVRFLG2                                                  03397000
CVRRUSED EQU   CVRFLG2                                                  03398000
CVRREACH EQU   CVRFLG2                                                  03399000
CVRFULL  EQU   CVRFLG2                                                  03400000
CVRNGRP  EQU   CVRRQLST+18                                              03401000
CVRGRPPT EQU   CVRRQLST+20                                              03402000
CVRGPLST EQU   0                                                        03403000
CVRGCPTR EQU   CVRGPLST                                                 03404000
CVRGRPID EQU   CVRGPLST+4                                               03405000
CVRGRPAL EQU   CVRGPLST+6                                               03406000
CVRGALL  EQU   CVRGPLST+8                                               03407000
CVRBOUND EQU   CVRGPLST+10                                              03408000
CVRFLG3  EQU   CVRGPLST+12                                              03409000
CVRGSKP  EQU   CVRFLG3                                                  03410000
GRPCOUNT EQU   0                                                        03411000
GRPAVAIL EQU   GRPCOUNT                                                 03412000
GRPALLCT EQU   GRPCOUNT+2                                               03413000
GRPOFFLN EQU   GRPCOUNT+4                                               03414000
GRPEXCS  EQU   GRPCOUNT+8                                               03415000
GRPIDENT EQU   GRPCOUNT+10                                              03416000
GRPWPTR  EQU   GRPCOUNT+12                                              03417000
CVRWORKD EQU   0                                                        03418000
WMIN     EQU   CVRWORKD                                                 03419000
WPTS     EQU   WMIN                                                     03420000
@NM00007 EQU   CVRWORKD+2                                               03421000
LASTFLAG EQU   @NM00007                                                 03422000
WGUSED   EQU   @NM00007                                                 03423000
WGRPPTR  EQU   CVRWORKD+4                                               03424000
WREQPTR  EQU   CVRWORKD+8                                               03425000
WCNTPTR  EQU   CVRWORKD+12                                              03426000
PARMPTR2 EQU   0                                                        03427000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    03428000
@NM00008 EQU   CVRWORKD+3                                               03429000
GRPTOTAL EQU   GRPCOUNT+6                                               03430000
@NM00006 EQU   CVRGPLST+13                                              03431000
@NM00005 EQU   CVRFLG3                                                  03432000
CVRFORCI EQU   CVRFLG3                                                  03433000
@NM00004 EQU   CVRRQLST+26                                              03434000
CVRWUCBP EQU   CVRRQLST+24                                              03435000
@NM00003 EQU   CVRFLG2+1                                                03436000
CVRDUPLI EQU   CVRFLG2+1                                                03437000
CVRWMOVE EQU   CVRFLG2                                                  03438000
CVRIGNOR EQU   CVRFLG2                                                  03439000
CVRMULTI EQU   CVRFLG2                                                  03440000
CVRSCRTH EQU   CVRFLG2                                                  03441000
CVRVUPTR EQU   CVRRQLST                                                 03442000
@NM00002 EQU   CVRPARM+9                                                03443000
@NM00001 EQU   CVRFLG1                                                  03444000
ALGGCNTP EQU   ALGPTRS+12                                               03445000
ALGGLSTP EQU   ALGPTRS+8                                                03446000
ALGRQLTP EQU   ALGPTRS+4                                                03447000
ALGPARMP EQU   ALGPTRS                                                  03448000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03449000
@RC00093 EQU   @RC00090                                                 03450000
@RC00096 EQU   @RC00090                                                 03451000
@RF00162 EQU   @RC00138                                                 03452000
@RF00256 EQU   @RC00253                                                 03453000
@RF00272 EQU   @RC00270                                                 03454000
@RF00275 EQU   @RC00270                                                 03455000
@RF00265 EQU   @RC00247                                                 03456000
@RF00401 EQU   @RC00398                                                 03457000
@RF00472 EQU   @RC00469                                                 03458000
@RF00485 EQU   @RC00482                                                 03459000
@RF00592 EQU   @RC00589                                                 03460000
@RF00598 EQU   @RC00589                                                 03461000
@RF00623 EQU   @RC00620                                                 03462000
@ENDDATA EQU   *                                                        03463000
         END   IEFAB480,(C'PLS0504',0603,74212)                         03464000
