         TITLE 'IEFAB486 - OFFLINE/ALCDS ALLOCATION                    *00001000
                        '                                               00002000
IEFAB486 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEFAB486  76.342'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  LA    @11,4095(,@12)                                   01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         USING @PSTART+4095,@11                                 01S0001 00014000
         L     @00,@SIZDATD                                     01S0001 00015000
         GSPACE   R,LV=(0)                                              00016000
         LR    @10,@01                                          01S0001 00017000
         USING @DATD,@10                                        01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         LM    @00,@01,20(@13)                                  01S0001 00020000
         ST    @10,8(,@13)                                      01S0001 00021000
         LR    @13,@10                                          01S0001 00022000
         MVC   @PC00001(4),0(@01)                               01S0001 00023000
*SAVNOCOV = ZERO;                      /*INIT CODE SAVE AREA @ZA01569*/ 00024000
         SLR   @15,@15                                          01S0065 00025000
         STH   @15,SAVNOCOV                                     01S0065 00026000
*IF UWAITSW = ON THEN                  /*CAN ALLOC WAIT FOR UNITS ?  */ 00027000
         L     @15,@PC00001                                     01S0066 00028000
         L     @15,ALCWAPTR(,@15)                               01S0066 00029000
         L     @01,FMAPPTR(,@15)                                01S0066 00030000
         TM    UWAITSW(@01),B'00100000'                         01S0066 00031000
         BNO   @RF00066                                         01S0066 00032000
* DO;                                  /*YES, INDICATE IN ALG TABLES */ 00033000
*    CVRALFLG = ON;                                             01S0068 00034000
         L     @02,ALGTABP(,@15)                                01S0068 00035000
         L     @01,ALGPARMP(,@02)                               01S0068 00036000
         OI    CVRALFLG(@01),B'01000000'                        01S0068 00037000
*/********************************************************************/ 00038000
*/*                                                                  */ 00039000
*/* SEGMENT NAME - ALGAPREP                                          */ 00040000
*/*                                                                  */ 00041000
*/* DESCRIPTIVE NAME - UPDATE ALG TABLE FOR WAIT-FOR-DEVICES         */ 00042000
*/*                                                                  */ 00043000
*/* FUNCTION -                                                       */ 00044000
*/*     THIS ROUTINE UPDATES THE ALGORITHM REQUEST LIST ENTRIES      */ 00045000
*/*     TO REFLECT THAT THE ALGORITHM CAN NOW CONSIDER DEVICES       */ 00046000
*/*     THAT ARE ALLOCATED TO OTHER JOBS.                            */ 00047000
*/*                                                                  */ 00048000
*/*     REQUEST LIST ENTRIES, WHICH WERE NOT BEING PROCESSED BY THE  */ 00049000
*/*     ALGORITHM BECAUSE THEY WERE ALLOCATED TO DEVICES             */ 00050000
*/*     WHICH ARE ALLOCATED TO OTHER JOBS, NOW MARKED                */ 00051000
*/*     "TO BE CONSIDERED" (CVRSKFLG=0) BECAUSE THE                  */ 00052000
*/*     ALGORITHM COULD REARRANGE SUCH A REQUEST. THIS IS TRUE SINCE */ 00053000
*/*     THE VOLUME WILL BE MOVABLE WHEN ALL OTHER JOBS ALLOCATED TO  */ 00054000
*/*     THE UNIT HAVE UNALLOCATED.                                   */ 00055000
*/*                                                                  */ 00056000
*/*   OPERATION - (THE OPERATION IS DOCUMENTED BY THE CODE ITSELF)   */ 00057000
*/*                                                                  */ 00058000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00059000
*/*                                                                  */ 00060000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00061000
*/*                                                                  */ 00062000
*/*   INPUT -                                                        */ 00063000
*/*      ALGRQLTP - PTR TO ALGORITHM REQUEST LIST                    */ 00064000
*/*                                                                  */ 00065000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00066000
*/*                                                                  */ 00067000
*/*   CONDITIONS - FUNCTION COMPLETED.                               */ 00068000
*/*                                                                  */ 00069000
*/*   OUTPUT                                                         */ 00070000
*/*        CVRSKFLG - SET TO 0 FOR SOME ALGORITHM REQUESTS.          */ 00071000
*/*                                                                  */ 00072000
*/*   RETURN CODES - (NONE)                                          */ 00073000
*/*                                                                  */ 00074000
*/********************************************************************/ 00075000
*AREQPTR = ALGRQLTP;                   /*POINT TO FIRST ALG REQ ENTRY*/ 00076000
         L     AREQPTR,ALGRQLTP(,@02)                           02S0069 00077000
*DO AREQCTR = ONE TO CVRNREQ;          /*SCAN ALL ALG REQ LIST ENTRYS*/ 00078000
         LA    AREQCTR,1                                        02S0070 00079000
         B     @DE00070                                         02S0070 00080000
@DL00070 DS    0H                                               02S0071 00081000
*  IF CVRSKFLG = ON                    /*IS THE REQ IGNORED BECAUSE..*/ 00082000
*      & CVRWMOVE = ON                 /*..IT IS ''MOVABLE-IF-WAIT'' */ 00083000
*      & CVRIGNOR = OFF                /*..AND NOT IGNORED FOR...    */ 00084000
*      & CVRDUPLI = OFF THEN           /*..OTHER REASONS             */ 00085000
         TM    CVRSKFLG(AREQPTR),B'10000001'                    02S0071 00086000
         BNO   @RF00071                                         02S0071 00087000
         TM    CVRIGNOR(AREQPTR),B'00000010'                    02S0071 00088000
         BNZ   @RF00071                                         02S0071 00089000
         TM    CVRDUPLI(AREQPTR),B'10000000'                    02S0071 00090000
         BNZ   @RF00071                                         02S0071 00091000
*    DO;                               /*YES, HAVE THE ALG CONSIDER  */ 00092000
*      CVRSKFLG = OFF;                                          02S0073 00093000
         NI    CVRSKFLG(AREQPTR),B'01111111'                    02S0073 00094000
*    END;                                                       02S0074 00095000
*  ELSE;                               /*NOT 'MOVABLE-IF-WAIT' REQ   */ 00096000
@RF00071 DS    0H                                               02S0076 00097000
*  AREQPTR = AREQPTR + LENGTH(CVRRQLST); /*POINT TO NEXT ALG REQ     */ 00098000
         AH    AREQPTR,@CH01076                                 02S0076 00099000
*END;                                                           02S0077 00100000
         AH    AREQCTR,@CH00079                                 02S0077 00101000
@DE00070 L     @07,@PC00001                                     02S0077 00102000
         L     @07,ALCWAPTR(,@07)                               02S0077 00103000
         L     @07,ALGTABP(,@07)                                02S0077 00104000
         L     @07,ALGPARMP(,@07)                               02S0077 00105000
         CH    AREQCTR,CVRNREQ(,@07)                            02S0077 00106000
         BNH   @DL00070                                         02S0077 00107000
*  END;                                                         01S0078 00108000
*ELSE;                                 /*ALLOC CANT WAIT FOR UNITS   */ 00109000
@RF00066 DS    0H                                               01S0080 00110000
*IF OFFDEVSW = ON THEN                 /*CAN ALLOC USE OFFLINE UNITS?*/ 00111000
         L     @15,@PC00001                                     01S0080 00112000
         L     @15,ALCWAPTR(,@15)                               01S0080 00113000
         L     @01,FMAPPTR(,@15)                                01S0080 00114000
         TM    OFFDEVSW(@01),B'00000100'                        01S0080 00115000
         BNO   @RF00080                                         01S0080 00116000
*    CVROFFLG = ON;                    /*YES, INDICATE IN ALG TABLES */ 00117000
         L     @01,ALGTABP(,@15)                                01S0081 00118000
         L     @01,ALGPARMP(,@01)                               01S0081 00119000
         OI    CVROFFLG(@01),B'00100000'                        01S0081 00120000
*ELSE;                                 /*ALLOC CANT USE OFFLINE UNITS*/ 00121000
@RF00080 DS    0H                                               01S0083 00122000
*  CVRFCALL = ON;                      /*INDICATE 1ST CALL WITH DATA */ 00123000
*  CVRAVFLG = ON;                      /*ALG CAN CONSIDER AVAILABLES */ 00124000
         L     @04,@PC00001                                     01S0084 00125000
         L     @04,ALCWAPTR(,@04)                               01S0084 00126000
         L     @04,ALGTABP(,@04)                                01S0084 00127000
         L     @01,ALGPARMP(,@04)                               01S0084 00128000
         OI    CVRFCALL(@01),B'10010000'                        01S0084 00129000
*CALL IEFAB480(ALGPARMP);              /*TRY TO FIND SOLUTION VIA ALG*/ 00130000
         ST    @04,@AL00001                                     01S0085 00131000
         L     @15,@CV00138                                     01S0085 00132000
         LA    @01,@AL00001                                     01S0085 00133000
         BALR  @14,@15                                          01S0085 00134000
*RTNCODE = REG15;                      /*SAVE THE RETURN CODE        */ 00135000
         LR    RTNCODE,REG15                                    01S0086 00136000
*IF RTNCODE = SUCCESS THEN             /*ALL REQUESTS COVERED ?      */ 00137000
         LTR   RTNCODE,RTNCODE                                  01S0087 00138000
         BNZ   @RF00087                                         01S0087 00139000
*  DO;                                 /*YES, PROCESS ..             */ 00140000
*    CALL IEFAB474 (ALCWAPTR,FUNC474); /*TRY TO PUT REQS ON 1 GENERIC*/ 00141000
         L     @07,@PC00001                                     01S0089 00142000
         ST    @07,@AL00001                                     01S0089 00143000
         LA    @07,@CB00103                                     01S0089 00144000
         ST    @07,@AL00001+4                                   01S0089 00145000
         L     @15,@CV00135                                     01S0089 00146000
         LA    @01,@AL00001                                     01S0089 00147000
         BALR  @14,@15                                          01S0089 00148000
*/********************************************************************/ 00149000
*/*                                                                  */ 00150000
*/* SEGMENT NAME - FORCMULT                                          */ 00151000
*/*                                                                  */ 00152000
*/* DESCRIPTIVE NAME - FORCE REQUESTS ONTO ONE GENERIC               */ 00153000
*/*                                                                  */ 00154000
*/* FUNCTION -                                                       */ 00155000
*/*     THIS ROUTINE LOCATES ANY MULTI-UNIT/GENERIC GROUPS (SAME     */ 00156000
*/*     SIOTAFID) WHICH HAVE NOT YET BEEN COVERED BY A SINGLE        */ 00157000
*/*     GENERIC DEVICE. WHENEVER SUCH A MULTI-UNIT/GENERIC IS FOUND, */ 00158000
*/*     THIS ROUTINE INVOKES SEGMENT 'TRYGENIC' ONCE FOR EACH        */ 00159000
*/*     GENERIC ELIBLE TO THIS REQUEST UNTIL ONE GENERIC IS FOUND    */ 00160000
*/*     (BY SEGMENT 'TRYGENIC') WHICH CAN SATISFY THE ENTIRE AFID    */ 00161000
*/*     GROUP AND STILL MAINTAIN COVERAGE OF ALL OTHER REQS BY THE   */ 00162000
*/*     ALGORITHM. IF A GENERIC IS FOUND TO SATISFY THE AFID GROUP,  */ 00163000
*/*     MODULE 'IEFAB481' IS CALLED TO MAKE ALL OTHER GENERICS       */ 00164000
*/*     INELIGIBLE TO THE REQUESTS WITH THAT AFID. IF NO GENERIC IS  */ 00165000
*/*     FOUND WHICH CAN SATISFY AN AFID GROUP, THE ALLOCATION        */ 00166000
*/*     IS FAILED AND AN "UNABLE-TO-ALLOCATE" STEP REASON CODE IS    */ 00167000
*/*     SET.                                                         */ 00168000
*/*                                                                  */ 00169000
*/*   OPERATION - DOCUMENTED BY THE 'FUNCTION' SECTION ABOVE AND     */ 00170000
*/*               BY THE CODE ITSELF.                                */ 00171000
*/*                                                                  */ 00172000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00173000
*/*                                                                  */ 00174000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00175000
*/*                                                                  */ 00176000
*/*   INPUT -                                                        */ 00177000
*/*     SIOT1P - PTR TO FIRST SIOT IN CHAIN                          */ 00178000
*/*       SIOT FIELDS - SIOTAFID - NON-ZERO VALUE INDICATES THIS REQ */ 00179000
*/*                                IS PART OF A MULTI-UNIT/GEN GROUP.*/ 00180000
*/*                   - SIOTEDLP - PTR TO ELIGIBLE DEVICES LIST      */ 00181000
*/*                   - SIOTNPTR - PTR TO NEXT SIOT                  */ 00182000
*/*                                                                  */ 00183000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00184000
*/*                                                                  */ 00185000
*/*   CONDITIONS - ALL REQUESTS COVERED BY A SINGLE GENERIC          */ 00186000
*/*                                                                  */ 00187000
*/*   OUTPUT - ALL SIOTAFID FIELDS ZEROED                            */ 00188000
*/*          - ALL BUT ONE GENERIC MARKED INELIGIBLE (BY IEFAB481)   */ 00189000
*/*            IN THE EDL AND ALGORITHM GROUP LIST ENTRIES FOR       */ 00190000
*/*            EACH MULTI-UNIT/GENERIC REQUEST.                      */ 00191000
*/*                                                                  */ 00192000
*/*   RETURN CODES - RTNCODE = 0                                     */ 00193000
*/*                                                                  */ 00194000
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */ 00195000
*/*                                                                  */ 00196000
*/*   CONDITIONS - SOME MULTI-UNIT REQS COULD NOT BE COVERED BY A    */ 00197000
*/*                SINGLE GENERIC DEVICE TYPE.                       */ 00198000
*/*                                                                  */ 00199000
*/*   OUTPUT - REASON CODE, SAVNOCOV, SET TO 6               @ZA01569*/ 00200000
*/*            ("UNABLE TO ALLOCATE").                       @ZA01569*/ 00201000
*/*                                                                  */ 00202000
*/*   RETURN CODES - RTNCODE = 4                                     */ 00203000
*/*                                                                  */ 00204000
*/********************************************************************/ 00205000
*SIOTPTR = SIOT1P;                     /*POINT TO FIRST SIOT         */ 00206000
         L     @04,@PC00001                                     02S0090 00207000
         L     @04,ALCWAPTR(,@04)                               02S0090 00208000
         L     SIOTPTR,SIOT1P(,@04)                             02S0090 00209000
*DO WHILE (SIOTPTR^=ZERO & RTNCODE=SUCCESS); /*SCAN ALL SIOTS        */ 00210000
         B     @DE00091                                         02S0091 00211000
@DL00091 DS    0H                                               02S0092 00212000
*  IF SIOTAFID ^= ZERO THEN            /*MULTI-UNIT/GENERIC REQ ?    */ 00213000
         LH    @07,SIOTAFID(,SIOTPTR)                           02S0092 00214000
         LTR   @07,@07                                          02S0092 00215000
         BZ    @RF00092                                         02S0092 00216000
*    DO;                               /*YES,TRY TO COVER WITH 1 GEN */ 00217000
*      SAVEAFID = SIOTAFID;            /*COPY MUG AFFINITY ID        */ 00218000
         LR    SAVEAFID,@07                                     02S0094 00219000
*      GENFNDSW = OFF;                 /*INDICATE GENERIC NOT FOUND  */ 00220000
         NI    GENFNDSW,B'11011111'                             02S0095 00221000
*      EDLPTR = EDLFGENP;              /*POINT TO FIRST GEN IN EDL   */ 00222000
         L     @09,SIOTEDLP(,SIOTPTR)                           02S0096 00223000
         L     EDLPTR,EDLFGENP(,@09)                            02S0096 00224000
*      DO GENCTR = ONE TO EDLGENNO     /*SCAN ALL GENERICS IN EDL    */ 00225000
*          WHILE (RTNCODE = SUCCESS    /*UNTIL ONE GENERIC COVERS    */ 00226000
*          & GENFNDSW = OFF);                                   02S0097 00227000
         LA    @09,1                                            02S0097 00228000
         B     @DE00097                                         02S0097 00229000
@DL00097 LTR   RTNCODE,RTNCODE                                  02S0097 00230000
         BNZ   @DC00097                                         02S0097 00231000
         TM    GENFNDSW,B'00100000'                             02S0097 00232000
         BNZ   @DC00097                                         02S0097 00233000
*        IF EINDEVTP = OFF THEN        /*IS THE GENERIC ELIGIBLE ?   */ 00234000
         TM    EINDEVTP(EDLPTR),B'10000000'                     02S0098 00235000
         BNZ   @RF00098                                         02S0098 00236000
*          DO;                         /*YES,TRY TO COVER ENTIRE REQ */ 00237000
*            SAVGENID = EDLDEVT;       /*SAVE THE GENERIC DEVICE TYPE*/ 00238000
         MVC   SAVGENID(4),EDLDEVT(EDLPTR)                      02S0100 00239000
*/********************************************************************/ 00240000
*/*                                                                  */ 00241000
*/* SEGMENT NAME - TRYGENIC                                          */ 00242000
*/*                                                                  */ 00243000
*/* DESCRIPTIVE NAME - TRY TO COVER AFID GROUP WITH INPUT GENERIC    */ 00244000
*/*                                                                  */ 00245000
*/* FUNCTION -                                                       */ 00246000
*/*     THIS ROUTINE DETERMINES IF THE AFID GROUP CAN BE COVERED     */ 00247000
*/*     BY THE INPUT GENERIC DEVICE TYPE.                            */ 00248000
*/*                                                                  */ 00249000
*/*   OPERATION -                                                    */ 00250000
*/*       SEGMENT 'MARKINEL' IS INVOKED TO MARK ALL THE ALGORITHM    */ 00251000
*/*       GROUP LIST ENTRIES, EXCEPT FOR THE CHOSEN GENERIC, AS      */ 00252000
*/*       INELIGIBLE FOR EACH OF THE REQUESTS IN THE AFID GROUP.     */ 00253000
*/*       THE COVER ALGORITHM (IEFAB480) IS THEN INVOKED TO SEE IF   */ 00254000
*/*       A TOTAL SOLUTION STILL EXISTS. IF A TOTAL SOLUTION IS      */ 00255000
*/*       NOT STILL POSSIBLE THEN THE ALGORITHM GROUP LIST ENTRIES   */ 00256000
*/*       JUST MARKED INELIGIBLE ARE MADE ELIGIBLE AGAIN SO THAT     */ 00257000
*/*       THESE OTHER GENERICS CAN POSSIBLY BE TRIED NEXT AS         */ 00258000
*/*       A SOLUTION FOR THIS AFID GROUP.                            */ 00259000
*/*                                                                  */ 00260000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00261000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00262000
*/*                                                                  */ 00263000
*/*   INPUT -                                                        */ 00264000
*/*      ALGRARMP - PTR TO ALGORITHM INTERFACE TABLE                 */ 00265000
*/*      SAVEAFID - ID OF MULTI-UNIT/GENERIC GROUP TO BE PROCESSED   */ 00266000
*/*      SIOTPTR - PTR TO FIRST SIOT WITH THE AFID                   */ 00267000
*/*        SVOLUNNO - NUMBER OF VOLUNIT ENTRIES FOR THE SIOT         */ 00268000
*/*        SVOLUNAD - PTR TO FIRST VOLUNIT ENTRY FOR THE SIOT        */ 00269000
*/*          VOLALGTP - PTR TO ALGORITHM REQ LIST ENTRY FOR THIS     */ 00270000
*/*                     VOLUNIT ENTRY                                */ 00271000
*/*                                                                  */ 00272000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00273000
*/*                                                                  */ 00274000
*/*   CONDITIONS - NO ERROR. INDICATOR SET TO SHOW WHETHER THIS      */ 00275000
*/*                GENERIC CAN SATISFY THE AFID GROUP                */ 00276000
*/*                                                                  */ 00277000
*/*   OUTPUT - GENFNDSW - 0 INDICATES GENERIC CANNOT SATISFY THE     */ 00278000
*/*                       AFID GROUP.                                */ 00279000
*/*                     - 1 INDICATES GENERIC CAN SATISFY THE AFID   */ 00280000
*/*                       GROUP.                                     */ 00281000
*/*                                                                  */ 00282000
*/*   RETURN CODES - RTNCODE 0                                       */ 00283000
*/*                                                                  */ 00284000
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */ 00285000
*/*                                                                  */ 00286000
*/*   CONDITIONS - GETMAIN ERROR                                     */ 00287000
*/*                                                                  */ 00288000
*/*   OUTPUT - STEP REASON CODE, REASONCD, SET TO 2                  */ 00289000
*/*                                                                  */ 00290000
*/*   RETURN CODES - RTNCODE = NON-ZERO                              */ 00291000
*/*                                                                  */ 00292000
*/********************************************************************/ 00293000
*RFY INDMSIOT BASED (SPTR);                                     03S0101 00294000
*GENFNDSW = ON;                        /*ASSUME GENERIC WILL COVER   */ 00295000
         OI    GENFNDSW,B'00100000'                             03S0102 00296000
*/********************************************************************/ 00297000
*/*                                                                  */ 00298000
*/* SEGMENT NAME - MARKINEL                                          */ 00299000
*/*                                                                  */ 00300000
*/* DESCRIPTIVE NAME - MARK GROUPS (TEMPORARILY) INELIGIBLE          */ 00301000
*/*                                                                  */ 00302000
*/* FUNCTION -                                                       */ 00303000
*/*     GIVEN AN AFID AND A GENERIC DEVICE TYPE, THIS ROUTINE MARKS  */ 00304000
*/*     THE ALGORITHM GROUP LIST ENTRIES FOR OTHER GENERICS AS       */ 00305000
*/*     INELIGIBLE FOR ALL REQUESTS IN THE AFID GROUP.               */ 00306000
*/*                                                                  */ 00307000
*/*   OPERATION -                                                    */ 00308000
*/*       .THE SIOT CHAIN IS SCANNED TO LOCATE EACH OF THE AFID REQS.*/ 00309000
*/*       .THE EDL FOR EACH REQ IS SCANNED TO LOCATE THE GENERIC     */ 00310000
*/*        DEVICE ENTRY (IF IT EXISTS).                              */ 00311000
*/*       .IF THE GENERIC IS FOUND IN AN EDL THE ALG GROUP LIST      */ 00312000
*/*        ENTRIES FOR EACH OF THE SIOT'S VU ENTRIES ARE SCANNED.    */ 00313000
*/*        EACH SUCH ALG GROUP LIST ENTRY IS MARKED INELIGIBLE       */ 00314000
*/*        (CVRGSKP=1, CVRFORCI=1) UNTIL THE FIRST GROUP ENTRY FOR   */ 00315000
*/*        THE CHOSEN GENERIC IS HIT. THEN THE NEXT "N" ENTRIES ARE  */ 00316000
*/*        NOT MARKED INELIGIBLE (WHERE "N" IS THE NUMBER OF GROUPS  */ 00317000
*/*        IN THAT GENERIC'S EDL ENTRY).                             */ 00318000
*/*                                                                  */ 00319000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00320000
*/*                                                                  */ 00321000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00322000
*/*                                                                  */ 00323000
*/*   INPUT -                                                        */ 00324000
*/*       SIOTPTR - PTR TO FIRST SIOT WITH THE INPUT AFID            */ 00325000
*/*       SAVEAFID - ID OF THE MULTI-UNIT/GENERIC GROUP TO PROCESS   */ 00326000
*/*       SAVGENID - GENERIC DEVICE TYPE CHOSEN                      */ 00327000
*/*       GENFNDSW - 1                                               */ 00328000
*/*                                                                  */ 00329000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00330000
*/*                                                                  */ 00331000
*/*   CONDITIONS - FUNCTION COMPLETE.                                */ 00332000
*/*                                                                  */ 00333000
*/*   OUTPUT -                                                       */ 00334000
*/*       GENFNDSW - 0 - INDICATES GENERIC CANNOT SATISFY THE AFID   */ 00335000
*/*                      GROUP BECAUSE NOT ALL OF THE REQS WERE      */ 00336000
*/*                      ELIGIBLE TO THAT GENERIC.                   */ 00337000
*/*                - 1 - INDICATES ALL AFID REQS WERE ELIGIBLE TO    */ 00338000
*/*                      THE GENERIC AND ALL OTHER GENERICS ARE NOW  */ 00339000
*/*                      MARKED INELIGIBLE.                          */ 00340000
*/*       ALGORITHM GROUP LIST ENTRY FIELDS (FOR OTHER GENERIC):     */ 00341000
*/*           CVRGSKP=1 AND CVRFORCI=1.                              */ 00342000
*/*                                                                  */ 00343000
*/*   RETURN CODES - (NONE)                                          */ 00344000
*/*                                                                  */ 00345000
*/********************************************************************/ 00346000
*SPTR = SIOTPTR;                       /*POINT TO FIRST SIOT OF AFID */ 00347000
         ST    SIOTPTR,SPTR                                     04S0103 00348000
*DO WHILE (SPTR ^= ZERO                /*SCAN THE REST OF THE SIOTS  */ 00349000
*    & GENFNDSW = ON);                                          04S0104 00350000
         B     @DE00104                                         04S0104 00351000
@DL00104 DS    0H                                               04S0105 00352000
*  IF SIOTAFID = SAVEAFID THEN         /*SIOT WITH THE SAME AFID ?   */ 00353000
         L     @09,SPTR                                         04S0105 00354000
         CH    SAVEAFID,SIOTAFID(,@09)                          04S0105 00355000
         BNE   @RF00105                                         04S0105 00356000
*    DO;                               /*YES,ELIMINATE OTHER GENERICS*/ 00357000
*      GENFNDSW = OFF;                 /*INDICATE GEN NOT FOUND YET  */ 00358000
         NI    GENFNDSW,B'11011111'                             04S0107 00359000
*      EDLPTR = EDLFGENP;              /*POINT TO FIRST GEN IN EDL   */ 00360000
         L     @09,SIOTEDLP(,@09)                               04S0108 00361000
         L     EDLPTR,EDLFGENP(,@09)                            04S0108 00362000
*      DO GENCTR=ONE TO EDLGENNO       /*SCAN ALL GENERICS IN EDL    */ 00363000
*          WHILE GENFNDSW = OFF;                                04S0109 00364000
         LA    @09,1                                            04S0109 00365000
         B     @DE00109                                         04S0109 00366000
@DL00109 TM    GENFNDSW,B'00100000'                             04S0109 00367000
         BNZ   @DC00109                                         04S0109 00368000
*        IF EDLDEVT = SAVGENID THEN    /*IS THIS THE GENERIC CHOSEN? */ 00369000
         CLC   EDLDEVT(4,EDLPTR),SAVGENID                       04S0110 00370000
         BNE   @RF00110                                         04S0110 00371000
*          DO;                         /*YES,ELIMINATE ALL OTHER GENS*/ 00372000
*            GENFNDSW = ON;            /*INDICATE GENERIC WAS FOUND  */ 00373000
         OI    GENFNDSW,B'00100000'                             04S0112 00374000
*            VUPTR = SVOLUNAD;         /*POINT TO FIRT VU ENTRY      */ 00375000
         L     @09,SPTR                                         04S0113 00376000
         MVC   VUPTR(4),SVOLUNAD(@09)                           04S0113 00377000
*            DO VUCTR=ONE TO SVOLUNNO; /*SCAN ALL OF REQ'S VU ENTRIES*/ 00378000
         LA    VUCTR,1                                          04S0114 00379000
         B     @DE00114                                         04S0114 00380000
@DL00114 DS    0H                                               04S0115 00381000
*              AGRPPTR  = VOLALGTP->CVRGRPPT; /*POINT TO FIRST GROUP */ 00382000
         L     @09,VUPTR                                        04S0115 00383000
         L     @09,VOLALGTP(,@09)                               04S0115 00384000
         L     AGRPPTR,CVRGRPPT(,@09)                           04S0115 00385000
*              ECOUNT = ZERO;          /*INITIALIZE COUNT            */ 00386000
         SLR   ECOUNT,ECOUNT                                    04S0116 00387000
*              DO GRPCTR=ONE TO VOLALGTP->CVRNGRP; /*SCAN ALL ALG       00388000
*                                        GROUP ENTRIES FOR THIS REQ  */ 00389000
         LA    GRPCTR,1                                         04S0117 00390000
         B     @DE00117                                         04S0117 00391000
@DL00117 DS    0H                                               04S0118 00392000
*                IF EDLGRPTR->EDLGRID=CVRGRPID THEN /*FIRST GROUP IN    00393000
*                                        THE GENERIC CHOSEN          */ 00394000
         L     @01,EDLGRPTR(,EDLPTR)                            04S0118 00395000
         L     @15,EDLGRID(,@01)                                04S0118 00396000
         CH    @15,CVRGRPID(,AGRPPTR)                           04S0118 00397000
         BNE   @RF00118                                         04S0118 00398000
*                  ECOUNT = EDLGRPNO;  /*YES,SET COUNT OF GRPS IN GEN*/ 00399000
         L     ECOUNT,EDLGRPNO(,EDLPTR)                         04S0119 00400000
*                ELSE;                 /*NOT FIRST GRP IN GEN CHOSEN */ 00401000
@RF00118 DS    0H                                               04S0121 00402000
*                IF ECOUNT > ZERO THEN /*IS GROUP IN GENERIC CHOSEN? */ 00403000
         LTR   ECOUNT,ECOUNT                                    04S0121 00404000
         BNP   @RF00121                                         04S0121 00405000
*                  ECOUNT = ECOUNT - ONE; /*YES,DECREMENT COUNT      */ 00406000
         BCTR  ECOUNT,0                                         04S0122 00407000
*                ELSE                  /*NOT CHOSEN GENERIC'S GROUP  */ 00408000
*                  IF CVRGSKP = OFF THEN /*GROUP NOT YET MRKED  04S0123 00409000
*                                        INELIGIBLE          @Y30QPPA*/ 00410000
         B     @RC00121                                         04S0123 00411000
@RF00121 TM    CVRGSKP(AGRPPTR),B'10000000'                     04S0123 00412000
         BNZ   @RF00123                                         04S0123 00413000
*                    DO;                                        04S0124 00414000
*                      CVRGSKP = ON;   /*MARK GROUP INELIGIBLE       */ 00415000
*                      CVRFORCI = ON;  /*INDICATE WHY GRP ELIMINATED */ 00416000
         OI    CVRGSKP(AGRPPTR),B'11000000'                     04S0126 00417000
*                    END;                                       04S0127 00418000
*                  ELSE;               /*                    @Y30QPPA*/ 00419000
@RF00123 DS    0H                                               04S0129 00420000
*                AGRPPTR=AGRPPTR + LENGTH(CVRGPLST); /*PT TO NEXT GRP*/ 00421000
@RC00121 AH    AGRPPTR,@CH00061                                 04S0129 00422000
*              END;                                             04S0130 00423000
         AH    GRPCTR,@CH00079                                  04S0130 00424000
@DE00117 L     @01,VUPTR                                        04S0130 00425000
         L     @01,VOLALGTP(,@01)                               04S0130 00426000
         CH    GRPCTR,CVRNGRP(,@01)                             04S0130 00427000
         BNH   @DL00117                                         04S0130 00428000
*              VUPTR=VUPTR+LENGTH(VOLUNTAB); /*POINT TO NEXT VU ENTRY*/ 00429000
         LA    @09,28                                           04S0131 00430000
         AL    @09,VUPTR                                        04S0131 00431000
         ST    @09,VUPTR                                        04S0131 00432000
*            END;                                               04S0132 00433000
         AH    VUCTR,@CH00079                                   04S0132 00434000
@DE00114 L     @09,SPTR                                         04S0132 00435000
         CH    VUCTR,SVOLUNNO(,@09)                             04S0132 00436000
         BNH   @DL00114                                         04S0132 00437000
*          END;                                                 04S0133 00438000
*        ELSE;                         /*NOT THE GENERIC CHOSEN      */ 00439000
@RF00110 DS    0H                                               04S0135 00440000
*          EDLPTR = EDLNXTNT;          /*PTR TO NEXT GEN IN THE EDL  */ 00441000
         L     EDLPTR,EDLNXTNT(,EDLPTR)                         04S0135 00442000
*      END;                                                     04S0136 00443000
         LA    @09,1                                            04S0136 00444000
         AL    @09,GENCTR                                       04S0136 00445000
@DE00109 ST    @09,GENCTR                                       04S0136 00446000
         L     @07,SPTR                                         04S0136 00447000
         L     @07,SIOTEDLP(,@07)                               04S0136 00448000
         C     @09,EDLGENNO(,@07)                               04S0136 00449000
         BNH   @DL00109                                         04S0136 00450000
@DC00109 DS    0H                                               04S0137 00451000
*    END;                                                       04S0137 00452000
*  ELSE;                               /*NOT SIOT WITH SAME AFID     */ 00453000
@RF00105 DS    0H                                               04S0139 00454000
*  SPTR = SIOTNPTR;                    /*POINT TO THE NEXT SIOT       * 00455000
         L     @09,SPTR                                         04S0139 00456000
         L     @09,SIOTNPTR(,@09)                               04S0139 00457000
         ST    @09,SPTR                                         04S0139 00458000
*END;                                                           04S0140 00459000
@DE00104 ICM   @09,15,SPTR                                      04S0140 00460000
         BZ    @DC00104                                         04S0140 00461000
         TM    GENFNDSW,B'00100000'                             04S0140 00462000
         BO    @DL00104                                         04S0140 00463000
@DC00104 DS    0H                                               04S0141 00464000
*IF GENFNDSW = ON  THEN                /*WAS GEN ELIGIBLE TO EACH REQ*/ 00465000
         TM    GENFNDSW,B'00100000'                             03S0141 00466000
         BNO   @RF00141                                         03S0141 00467000
*  DO;                                 /*YES, TRY TO COVER VIA ALG   */ 00468000
*    CALL IEFAB480 (ALGPARMP);         /*COVER ALGORITHM             */ 00469000
         L     @09,@PC00001                                     03S0143 00470000
         L     @09,ALCWAPTR(,@09)                               03S0143 00471000
         L     @09,ALGTABP(,@09)                                03S0143 00472000
         ST    @09,@AL00001                                     03S0143 00473000
         L     @15,@CV00138                                     03S0143 00474000
         LA    @01,@AL00001                                     03S0143 00475000
         BALR  @14,@15                                          03S0143 00476000
*    RFY (REG15) RSTD;                                          03S0144 00477000
*    IF REG15 = ERROR480 THEN          /*GETMAIN ERROR ?             */ 00478000
         CH    REG15,@CH00061                                   03S0145 00479000
         BNE   @RF00145                                         03S0145 00480000
*      DO;                             /*YES, INDICATE ..            */ 00481000
*        RTNCODE = FAILURE;            /*SET ERROR RETURN CODE       */ 00482000
         LA    RTNCODE,4                                        03S0147 00483000
*        REASONCD = GETMNERR;          /*SET GETMAIN REASON CODE     */ 00484000
         L     @14,@PC00001                                     03S0148 00485000
         L     @14,ALCWAPTR(,@14)                               03S0148 00486000
         L     @14,FAILRSCP(,@14)                               03S0148 00487000
         MVC   REASONCD(2,@14),@CH00109                         03S0148 00488000
*      END;                                                     03S0149 00489000
*    ELSE                              /*NO GETMAIN ERROR            */ 00490000
*      DO;                                                      03S0150 00491000
         B     @RC00145                                         03S0150 00492000
@RF00145 DS    0H                                               03S0151 00493000
*        IF REG15 = PARTALOC THEN      /*WERE ALL REQS COVERED BY ALG*/ 00494000
         CH    REG15,@CH00055                                   03S0151 00495000
         BNE   @RF00151                                         03S0151 00496000
*          DO;                         /*NO, UPDATE ALG TABLES       */ 00497000
*            GENFNDSW = OFF;           /*INDICATE GENERIC DIDNT COVER*/ 00498000
         NI    GENFNDSW,B'11011111'                             03S0153 00499000
*            SPTR = SIOTPTR;           /*POINT TO FIRST SIOT OF AFID */ 00500000
         ST    SIOTPTR,SPTR                                     03S0154 00501000
*            DO WHILE SPTR ^= ZERO;    /*SCAN THE REST OF THE SIOTS  */ 00502000
         B     @DE00155                                         03S0155 00503000
@DL00155 DS    0H                                               03S0156 00504000
*              IF SIOTAFID = SAVEAFID THEN  /*PART OF THIS AFID GRP? */ 00505000
         L     @14,SPTR                                         03S0156 00506000
         CH    SAVEAFID,SIOTAFID(,@14)                          03S0156 00507000
         BNE   @RF00156                                         03S0156 00508000
*                DO;                   /*YES,PROCESS...              */ 00509000
*                  VUPTR = SVOLUNAD;   /*POINT TO FIRST VU ENTRY     */ 00510000
         MVC   VUPTR(4),SVOLUNAD(@14)                           03S0158 00511000
*                  DO VUCTR=ONE TO SVOLUNNO; /*SCAN ALL VU'S FOR SIOT*/ 00512000
         LA    VUCTR,1                                          03S0159 00513000
         B     @DE00159                                         03S0159 00514000
@DL00159 DS    0H                                               03S0160 00515000
*                    AGRPPTR= VOLALGTP->CVRGRPPT; /*POINT TO 1ST GRP */ 00516000
         L     @14,VUPTR                                        03S0160 00517000
         L     @14,VOLALGTP(,@14)                               03S0160 00518000
         L     AGRPPTR,CVRGRPPT(,@14)                           03S0160 00519000
*                    DO GRPCTR=ONE TO VOLALGTP->CVRNGRP; /*SCAN ALL ALG 00520000
*                                        GROUP ENTRIES FOR REQUEST   */ 00521000
         LA    GRPCTR,1                                         03S0161 00522000
         B     @DE00161                                         03S0161 00523000
@DL00161 DS    0H                                               03S0162 00524000
*                      IF CVRFORCI = ON THEN /*GROUP JUST ELIMINATED?*/ 00525000
         TM    CVRFORCI(AGRPPTR),B'01000000'                    03S0162 00526000
         BNO   @RF00162                                         03S0162 00527000
*                        DO;           /*YES, HAVE ALG CONSIDER AGAIN*/ 00528000
*                          CVRFORCI = OFF;                      03S0164 00529000
*                          CVRGSKP = OFF;                       03S0165 00530000
         NI    CVRFORCI(AGRPPTR),B'00111111'                    03S0165 00531000
*                        END;                                   03S0166 00532000
*                      ELSE;           /*GROUP WASN'T JUST ELIMINATED*/ 00533000
@RF00162 DS    0H                                               03S0168 00534000
*                      AGRPPTR=AGRPPTR + LENGTH(CVRGPLST); /*POINT TO   00535000
*                                        NXT ALG GROUP LIST ENTRY    */ 00536000
         AH    AGRPPTR,@CH00061                                 03S0168 00537000
*                    END;                                       03S0169 00538000
         AH    GRPCTR,@CH00079                                  03S0169 00539000
@DE00161 L     @14,VUPTR                                        03S0169 00540000
         L     @14,VOLALGTP(,@14)                               03S0169 00541000
         CH    GRPCTR,CVRNGRP(,@14)                             03S0169 00542000
         BNH   @DL00161                                         03S0169 00543000
*                    VUPTR = VUPTR + LENGTH(VOLUNTAB); /*POINT TO       00544000
*                                                    NEXT VU         */ 00545000
         LA    @14,28                                           03S0170 00546000
         AL    @14,VUPTR                                        03S0170 00547000
         ST    @14,VUPTR                                        03S0170 00548000
*                  END;                                         03S0171 00549000
         AH    VUCTR,@CH00079                                   03S0171 00550000
@DE00159 L     @14,SPTR                                         03S0171 00551000
         CH    VUCTR,SVOLUNNO(,@14)                             03S0171 00552000
         BNH   @DL00159                                         03S0171 00553000
*                END;                                           03S0172 00554000
*              ELSE;                   /*NOT OF THIS AFID GROUP      */ 00555000
@RF00156 DS    0H                                               03S0174 00556000
*              SPTR = SIOTNPTR;        /*POINT TO NEXT SIOT IN CHAIN */ 00557000
         L     @14,SPTR                                         03S0174 00558000
         L     @14,SIOTNPTR(,@14)                               03S0174 00559000
         ST    @14,SPTR                                         03S0174 00560000
*            END;                                               03S0175 00561000
@DE00155 ICM   @14,15,SPTR                                      03S0175 00562000
         BNZ   @DL00155                                         03S0175 00563000
*          END;                                                 03S0176 00564000
*        ELSE;                         /*ALG FULLY COVERED REQUESTS  */ 00565000
@RF00151 DS    0H                                               03S0178 00566000
*      END;                                                     03S0178 00567000
*    RFY (REG15) UNRSTD;                                        03S0179 00568000
@RC00145 DS    0H                                               03S0180 00569000
*  END;                                                         03S0180 00570000
*ELSE;                                 /*GEN NOT ELIGIBLE TO EACH REQ*/ 00571000
@RF00141 DS    0H                                               03S0182 00572000
*RFY INDMSIOT BASED (SIOTPTR);                                  03S0182 00573000
*          END;                                                 02S0183 00574000
*        ELSE;                         /*GENERIC IS NOT ELIGIBLE     */ 00575000
@RF00098 DS    0H                                               02S0185 00576000
*        EDLPTR = EDLNXTNT;            /*POINT TO NEXT GENERIC IN EDL*/ 00577000
         L     EDLPTR,EDLNXTNT(,EDLPTR)                         02S0185 00578000
*      END;                                                     02S0186 00579000
         LA    @09,1                                            02S0186 00580000
         AL    @09,GENCTR                                       02S0186 00581000
@DE00097 ST    @09,GENCTR                                       02S0186 00582000
         L     @07,SIOTEDLP(,SIOTPTR)                           02S0186 00583000
         C     @09,EDLGENNO(,@07)                               02S0186 00584000
         BNH   @DL00097                                         02S0186 00585000
@DC00097 DS    0H                                               02S0187 00586000
*      IF RTNCODE=SUCCESS & GENFNDSW=OFF THEN /*WAS ONE GENERIC FOUND   00587000
*                                        TO COVER ENTIRE REQUEST ?   */ 00588000
         LTR   RTNCODE,RTNCODE                                  02S0187 00589000
         BNZ   @RF00187                                         02S0187 00590000
         TM    GENFNDSW,B'00100000'                             02S0187 00591000
         BNZ   @RF00187                                         02S0187 00592000
*        DO;                           /*NO, INDICATE ERROR          */ 00593000
*          RTNCODE = FAILURE;          /*SET ERROR RETURN CODE       */ 00594000
         LA    RTNCODE,4                                        02S0189 00595000
*          SAVNOCOV = NOCOVER;         /*SET UNABLE-TO-ALLOC @ZA01569*/ 00596000
         MVC   SAVNOCOV(2),@CH00111                             02S0190 00597000
*        END;                                                   02S0191 00598000
*      ELSE                            /*ONE GEN DID COVER,OR ERRORS */ 00599000
*        DO;                                                    02S0192 00600000
         B     @RC00187                                         02S0192 00601000
@RF00187 DS    0H                                               02S0193 00602000
*          IF RTNCODE = SUCCESS THEN   /*ANY ERRORS ?                */ 00603000
         LTR   RTNCODE,RTNCODE                                  02S0193 00604000
         BNZ   @RF00193                                         02S0193 00605000
*            DO;                       /*NO, BIND REQS TO GEN CHOSEN */ 00606000
*              SPTR = SIOTPTR;         /*POINT TO FIRST SIOT OF AFID */ 00607000
         ST    SIOTPTR,SPTR                                     02S0195 00608000
*              DO WHILE SPTR ^= ZERO;  /*SCAN THE REST OF THE SIOTS  */ 00609000
         B     @DE00196                                         02S0196 00610000
@DL00196 DS    0H                                               02S0197 00611000
*                IF SPTR->SIOTAFID = SAVEAFID THEN /*SAME AFID ?     */ 00612000
         L     @09,SPTR                                         02S0197 00613000
         CH    SAVEAFID,SIOTAFID(,@09)                          02S0197 00614000
         BNE   @RF00197                                         02S0197 00615000
*                  CALL IEFAB481 (SPTR,SAVGENID); /*BIND REQ TO GEN  */ 00616000
         LA    @09,SPTR                                         02S0198 00617000
         ST    @09,@AL00001                                     02S0198 00618000
         LA    @09,SAVGENID                                     02S0198 00619000
         ST    @09,@AL00001+4                                   02S0198 00620000
         L     @15,@CV00139                                     02S0198 00621000
         LA    @01,@AL00001                                     02S0198 00622000
         BALR  @14,@15                                          02S0198 00623000
*                ELSE;                 /*SIOT DOES HAVE THE SAME AFID*/ 00624000
@RF00197 DS    0H                                               02S0200 00625000
*                SPTR = SPTR->SIOTNPTR; /*POINT TO THE NEXT SIOT     */ 00626000
         L     @09,SPTR                                         02S0200 00627000
         L     @09,SIOTNPTR(,@09)                               02S0200 00628000
         ST    @09,SPTR                                         02S0200 00629000
*              END;                                             02S0201 00630000
@DE00196 ICM   @09,15,SPTR                                      02S0201 00631000
         BNZ   @DL00196                                         02S0201 00632000
*            END;                                               02S0202 00633000
*          ELSE;                       /*ERROR                       */ 00634000
@RF00193 DS    0H                                               02S0204 00635000
*        END;                                                   02S0204 00636000
*    END;                                                       02S0205 00637000
*  ELSE;                               /*NOT A MULTI-UNIT/GENERIC REQ*/ 00638000
@RF00092 DS    0H                                               02S0207 00639000
*  SIOTPTR = SIOTNPTR;                 /*POINT TO THE NEXT SIOT      */ 00640000
@RC00092 L     SIOTPTR,SIOTNPTR(,SIOTPTR)                       02S0207 00641000
*END;                                                           02S0208 00642000
@DE00091 SLR   @07,@07                                          02S0208 00643000
         CR    SIOTPTR,@07                                      02S0208 00644000
         BE    @DC00091                                         02S0208 00645000
         CR    RTNCODE,@07                                      02S0208 00646000
         BE    @DL00091                                         02S0208 00647000
@DC00091 DS    0H                                               02S0209 00648000
*    IF RTNCODE = SUCCESS THEN         /*ALL REQUEST STILL COVERED ? */ 00649000
         LTR   RTNCODE,RTNCODE                                  01S0209 00650000
         BNZ   @RF00209                                         01S0209 00651000
*      DO;                             /*YES, CONTINUE ..            */ 00652000
*/********************************************************************/ 00653000
*/*                                                                  */ 00654000
*/* SEGMENT NAME - REARANGE                                          */ 00655000
*/*                                                                  */ 00656000
*/* DESCRIPTIVE NAME - MARK REQS TO REARRANGE + CALL IEFAB477        */ 00657000
*/*                                                                  */ 00658000
*/* FUNCTION -                                                       */ 00659000
*/*     THIS ROUTINE MARKS ALL THE VOLUNIT ENTRIES WHICH THE         */ 00660000
*/*     ALGORITHM INTERFACE TABLES INDICATE MUST BE REARRANGED. THEN */ 00661000
*/*     THIS ROUTINE CALLS MODULE IEFAB477 TO ACTUALLY UNALLOCATE    */ 00662000
*/*     THESE VOLUNIT ENTRIES.                                       */ 00663000
*/*                                                                  */ 00664000
*/*   OPERATION -                                                    */ 00665000
*/*       THE ALGORITHM REQUEST LIST ENTRIES ARE SCANNED TO LOCATE   */ 00666000
*/*       EACH ENTRY WHICH HAS A GROUP LIST ENTRY WHICH MUST BE      */ 00667000
*/*       UNALLOCATED (CVRGRPAL > CVRGALL). WHEN SUCH A REQUEST      */ 00668000
*/*       LIST ENTRY IS FOUND, THE VOLUNIT TABLE IS SCANNED TO MARK  */ 00669000
*/*       ALL VU ENTRIES WHICH ARE ALLOCATED TO THE SAME UNIT AS THE */ 00670000
*/*       REQUEST THE ALGORITHM WANTS REARRANGED.                    */ 00671000
*/*                                                                  */ 00672000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00673000
*/*                                                                  */ 00674000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00675000
*/*                                                                  */ 00676000
*/*   INPUT -                                                        */ 00677000
*/*      ALCWAPTR - PTR TO THE ALLOCATION WORK AREA (ALCWA)          */ 00678000
*/*        VOLUNPTR - PTR TO THE VOLUNIT TABLE                       */ 00679000
*/*        VOLUNSZE - SIZE OF THE VOLUNIT TABLE                      */ 00680000
*/*        ALGTABP - PTR TO THE ALGORITHM INTERFACE TABLES           */ 00681000
*/*                                                                  */ 00682000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00683000
*/*                                                                  */ 00684000
*/*   CONDITIONS - VOLUNIT ENTRIES TO BE REARRANGED HAVE BEEN        */ 00685000
*/*                SUCCESSFULLY UNALLOCATED.                         */ 00686000
*/*                                                                  */ 00687000
*/*   OUTPUT - NONE FROM THIS SEGMENT. SEE THE SPEC FOR MODULE       */ 00688000
*/*            IEFAB477 FOR A DESCRIPTION OF ITS OUTPUT.             */ 00689000
*/*                                                                  */ 00690000
*/*   RETURN CODES - RTNCODE SET TO 0                                */ 00691000
*/*                                                                  */ 00692000
*/*                                                                  */ 00693000
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */ 00694000
*/*                                                                  */ 00695000
*/*   CONDITIONS - GETMAIN ERROR BY IEFAB477                         */ 00696000
*/*                                                                  */ 00697000
*/*   OUTPUT - NONE FROM THIS SEGMENT. SEE THE SPEC FOR MODULE       */ 00698000
*/*            IEFAB477 FOR A DESCRIPTION OF ITS OUTPUT.             */ 00699000
*/*                                                                  */ 00700000
*/*   RETURN CODES - RTNCODE SET TO 4                                */ 00701000
*/*                                                                  */ 00702000
*/********************************************************************/ 00703000
*NEEDUNAL = OFF;                       /*ASSUME IEFAB477 NOT NEEDED  */ 00704000
         NI    NEEDUNAL,B'10111111'                             02S0211 00705000
*AREQPTR = ALGRQLTP;                   /*POINT TO FIRST ALG REQUEST  */ 00706000
         L     @04,@PC00001                                     02S0212 00707000
         L     @04,ALCWAPTR(,@04)                               02S0212 00708000
         L     @04,ALGTABP(,@04)                                02S0212 00709000
         L     AREQPTR,ALGRQLTP(,@04)                           02S0212 00710000
*DO AREQCTR = ONE TO CVRNREQ;          /*SCAN ALL THE ALG'S REQUESTS */ 00711000
         LA    AREQCTR,1                                        02S0213 00712000
         B     @DE00213                                         02S0213 00713000
@DL00213 DS    0H                                               02S0214 00714000
*  IF CVRSKFLG = OFF                   /*IS THE ALGORITHM TO CONSIDER*/ 00715000
*      & CVRALLCT > ZERO THEN          /*..AND ALREADY ALLOCATED ?   */ 00716000
         TM    CVRSKFLG(AREQPTR),B'10000000'                    02S0214 00717000
         BNZ   @RF00214                                         02S0214 00718000
         ICM   @07,3,CVRALLCT(AREQPTR)                          02S0214 00719000
         BNP   @RF00214                                         02S0214 00720000
*    DO;                               /*YES, DETERMINE IF REARRANGE */ 00721000
*      GRPFOUND = OFF;                 /*GROUP TO UNALLOC NOT FOUND  */ 00722000
         NI    GRPFOUND,B'11101111'                             02S0216 00723000
*      AGRPPTR = CVRGRPPT;             /*POINT TO FIRST GROUP LIST NT*/ 00724000
         L     AGRPPTR,CVRGRPPT(,AREQPTR)                       02S0217 00725000
*      DO AGRPCTR = ONE TO CVRNGRP     /*SCAN ALL GROUP LIST ENTRIES */ 00726000
*          WHILE GRPFOUND = OFF;                                02S0218 00727000
         LA    AGRPCTR,1                                        02S0218 00728000
         B     @DE00218                                         02S0218 00729000
@DL00218 TM    GRPFOUND,B'00010000'                             02S0218 00730000
         BNZ   @DC00218                                         02S0218 00731000
*        IF CVRGRPAL > ZERO            /*MORE ALLOC'D THAN ALG COVER */ 00732000
*           & CVRGALL < CVRGRPAL THEN                           02S0219 00733000
         SLR   @07,@07                                          02S0219 00734000
         LH    @15,CVRGRPAL(,AGRPPTR)                           02S0219 00735000
         CR    @15,@07                                          02S0219 00736000
         BNH   @RF00219                                         02S0219 00737000
         CH    @15,CVRGALL(,AGRPPTR)                            02S0219 00738000
         BNH   @RF00219                                         02S0219 00739000
*          DO;                         /*YES, MUST BE REARANGED      */ 00740000
*            NEEDUNAL = ON;            /*INDICATE IEFAB477 NEEDED    */ 00741000
*            GRPFOUND = ON;            /*INDICATE GROUP TO UNALLOC   */ 00742000
         OI    NEEDUNAL,B'01010000'                             02S0222 00743000
*            CVRALLCT = ZERO;          /*ZERO COUNT ALLOC'D TO VU    */ 00744000
         STH   @07,CVRALLCT(,AREQPTR)                           02S0223 00745000
*            CVRGCPTR->GRPEXCS=CVRGCPTR->GRPEXCS+CVRGRPAL; /*INCR       00746000
*                                        EXECS                       */ 00747000
         L     @14,CVRGCPTR(,AGRPPTR)                           02S0224 00748000
         AH    @15,GRPEXCS(,@14)                                02S0224 00749000
         STH   @15,GRPEXCS(,@14)                                02S0224 00750000
*            CVRGRPAL = ZERO;          /*ZERO COUNT ALLOC'D FROM GRP */ 00751000
         STH   @07,CVRGRPAL(,AGRPPTR)                           02S0225 00752000
*            VUPTR = VOLUNPTR;         /*POINT TO FIRST VU TABLE NTRY*/ 00753000
         L     @07,@PC00001                                     02S0226 00754000
         L     @07,ALCWAPTR(,@07)                               02S0226 00755000
         MVC   VUPTR(4),VOLUNPTR(@07)                           02S0226 00756000
*            DO VUCTR=ONE TO VOLUNSZE/LENGTH(VOLUNTAB); /*SCAN ALL VU*/ 00757000
         LA    VUCTR,1                                          02S0227 00758000
         B     @DE00227                                         02S0227 00759000
@DL00227 DS    0H                                               02S0228 00760000
*              IF VOLUNTID=CVRVUPTR->VOLUNTID  /*SAME UNIT ALLOCD?   */ 00761000
*                  & VOLALOC = ON THEN                          02S0228 00762000
         L     @15,VUPTR                                        02S0228 00763000
         L     @01,CVRVUPTR(,AREQPTR)                           02S0228 00764000
         CLC   VOLUNTID(2,@15),VOLUNTID(@01)                    02S0228 00765000
         BNE   @RF00228                                         02S0228 00766000
         TM    VOLALOC(@15),B'10000000'                         02S0228 00767000
         BNO   @RF00228                                         02S0228 00768000
*                DO;                   /*YES,INDICATE VU TO BE UNALCD*/ 00769000
*                  VUREALOC = ON;                               02S0230 00770000
         OI    VUREALOC(@15),B'01000000'                        02S0230 00771000
*                END;                                           02S0231 00772000
*              ELSE;                   /*NOT THE SAME UNIT           */ 00773000
@RF00228 DS    0H                                               02S0233 00774000
*              VUPTR = VUPTR + LENGTH(VOLUNTAB); /*PT TO NEXT VU NTRY*/ 00775000
         LA    @15,28                                           02S0233 00776000
         AL    @15,VUPTR                                        02S0233 00777000
         ST    @15,VUPTR                                        02S0233 00778000
*            END;                                               02S0234 00779000
         AH    VUCTR,@CH00079                                   02S0234 00780000
@DE00227 L     @15,@PC00001                                     02S0234 00781000
         L     @01,ALCWAPTR(,@15)                               02S0234 00782000
         L     @00,VOLUNSZE(,@01)                               02S0234 00783000
         SRDA  @00,32                                           02S0234 00784000
         D     @00,@CF01076                                     02S0234 00785000
         CR    VUCTR,@01                                        02S0234 00786000
         BNH   @DL00227                                         02S0234 00787000
*          END;                                                 02S0235 00788000
*        ELSE;                         /*NOT MORE ALLOC'D THAN COVER */ 00789000
@RF00219 DS    0H                                               02S0237 00790000
*        AGRPPTR=AGRPPTR+LENGTH(CVRGPLST);/*PT TO NEXT GROUP LIST ENT*/ 00791000
         AH    AGRPPTR,@CH00061                                 02S0237 00792000
*      END;                                                     02S0238 00793000
         AH    AGRPCTR,@CH00079                                 02S0238 00794000
@DE00218 CH    AGRPCTR,CVRNGRP(,AREQPTR)                        02S0238 00795000
         BNH   @DL00218                                         02S0238 00796000
@DC00218 DS    0H                                               02S0239 00797000
*    END;                                                       02S0239 00798000
*  ELSE;                               /*ALG REQ CANNOT BE REARRANGED*/ 00799000
@RF00214 DS    0H                                               02S0241 00800000
*  AREQPTR = AREQPTR + LENGTH(CVRRQLST); /*POINT TO NEXT ALG REQUEST */ 00801000
         AL    AREQPTR,@CF01076                                 02S0241 00802000
*END;                                                           02S0242 00803000
         AH    AREQCTR,@CH00079                                 02S0242 00804000
@DE00213 L     @07,@PC00001                                     02S0242 00805000
         L     @07,ALCWAPTR(,@07)                               02S0242 00806000
         L     @07,ALGTABP(,@07)                                02S0242 00807000
         L     @07,ALGPARMP(,@07)                               02S0242 00808000
         CH    AREQCTR,CVRNREQ(,@07)                            02S0242 00809000
         BNH   @DL00213                                         02S0242 00810000
*IF NEEDUNAL = ON THEN                 /*ANY REQS TO UNALLOC ?       */ 00811000
         TM    NEEDUNAL,B'01000000'                             02S0243 00812000
         BNO   @RF00243                                         02S0243 00813000
*  DO;                                 /*YES, CALL IEFAB477          */ 00814000
*    CALL IEFAB477 (ALCWAPTR,FUNC477); /*UNALLOC REQS TO BE REARANGED*/ 00815000
         L     @04,@PC00001                                     02S0245 00816000
         ST    @04,@AL00001                                     02S0245 00817000
         LA    @04,@CB00103                                     02S0245 00818000
         ST    @04,@AL00001+4                                   02S0245 00819000
         L     @15,@CV00136                                     02S0245 00820000
         LA    @01,@AL00001                                     02S0245 00821000
         BALR  @14,@15                                          02S0245 00822000
*    RTNCODE = REG15;                  /*SAVE THE RETURN CODE        */ 00823000
         LR    RTNCODE,REG15                                    02S0246 00824000
*  END;                                                         02S0247 00825000
*        IF RTNCODE = SUCCESS THEN     /*ANY ERRORS ?                */ 00826000
@RF00243 LTR   RTNCODE,RTNCODE                                  01S0248 00827000
         BNZ   @RF00248                                         01S0248 00828000
*          DO;                         /*NO, CONTINUE ..             */ 00829000
*/********************************************************************/ 00830000
*/*                                                                  */ 00831000
*/*                                                                  */ 00832000
*/* SEGMENT NAME - ENDVALID                                          */ 00833000
*/*                                                                  */ 00834000
*/* DESCRIPTIVE NAME - VALIDITY-CHECK REMAINING REQUESTS             */ 00835000
*/*                                                                  */ 00836000
*/* FUNCTION -                                                       */ 00837000
*/*     FOR EACH UNALLOCATED REQUEST THIS ROUTINE DETERMINES IF      */ 00838000
*/*     THE VOLUME REQUESTED IS CURRENTLY MOUNTED. IF SO, IEFAB441   */ 00839000
*/*     IS INVOKED TO MAKE THE FOLLOWING DETERMINATION               */ 00840000
*/*       (1) IF THE VOLUME IS UNALLOCATED, THE OPERATOR IS          */ 00841000
*/*           REQUESTED TO UNLOAD THE VOLUME.                        */ 00842000
*/*       (2) IF THE VOLUME IS ALLOCATED, THE ADDRESS OF THE UNIT    */ 00843000
*/*           WHERE THE VOLUME IS LOCATED IS SAVED (IN 'CVRWUCBP')   */ 00844000
*/*           SO THIS ALLOCATION CAN WAIT FOR THE VOLUME TO          */ 00845000
*/*           UNALLOCATE.                                            */ 00846000
*/*       NOTE: SEE MODULE IEFAB441 FOR A DESCRIPTION OF POSSIBLE    */ 00847000
*/*             ERROR CONDITIONS.                                    */ 00848000
*/*                                                                  */ 00849000
*/*   OPERATION -                                                    */ 00850000
*/*   THIS SEGMENT SCANS THE VOLUNIT TABLE TO LOCATE REQUESTS WHICH  */ 00851000
*/*   MUST BE VALIDITY-CHECKED. IEFAB441 IS INVOKED TO ACTUALLY DO   */ 00852000
*/*   EACH VALIDITY CHECK (I.E. UNLOAD THE VOLUME IF FOUND AND NO    */ 00853000
*/*   ERRORS ARE DETECTED).                                          */ 00854000
*/*                                                                  */ 00855000
*/*   VALIDITY-CHECK IS NECESSARY FOR ALL TAPE REQUESTS AND ANY      */ 00856000
*/*   SPECIFIC VOLUME DA REQUESTS WHICH HAVE NOT ALREADY BEEN        */ 00857000
*/*   VALIDITY CHECKED(I.E. CVRWUCBP=0).                             */ 00858000
*/*                                                                  */ 00859000
*/*   AS THE VU ENTRIES ARE SCANNED, THIS SEGMENT DETECTS REQS WHOSE */ 00860000
*/*   DEMANDED UNITS ARE NOT AVAILABLE BY VUDMNDOF = 1               */ 00861000
*/*   (IF THE UNIT IS OFFLINE) OR VUDMNDAL = 1 (IF THE UNIT IS       */ 00862000
*/*   ALLOCATED) - THE 'CVRWUCBP' FIELD IS ZEROED FOR SUCH REQUESTS  */ 00863000
*/*   SO THAT THIS CAN BE USED IF THE VOLUME FIELD REQUESTED         */ 00864000
*/*   IS ALLOCATED TO ANOTHER UNIT.                                  */ 00865000
*/*                                                                  */ 00866000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 00867000
*/*                                                                  */ 00868000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00869000
*/*                                                                  */ 00870000
*/*   INPUT -                                                        */ 00871000
*/*     ALCWAPTR - PTR TO ALLOCATION WORK AREA, WHICH CONTAINS       */ 00872000
*/*       VOLUNPTR - PTR TO VOLUNIT TABLE                            */ 00873000
*/*     RTNCODE - 0                                                  */ 00874000
*/*                                                                  */ 00875000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 00876000
*/*                                                                  */ 00877000
*/*   CONDITIONS - FUNCTION COMPLETED.                               */ 00878000
*/*                                                                  */ 00879000
*/*   OUTPUT -                                                       */ 00880000
*/*     .NEEDED VOLUMES UNLOADED IF UNALLOCATED                      */ 00881000
*/*     .CVRWUCBP FIELDS SET FOR ALLOCATED VOLUMES                   */ 00882000
*/*                                                                  */ 00883000
*/*   RETURN CODES - RTNCODE 0                                       */ 00884000
*/*                                                                  */ 00885000
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */ 00886000
*/*                                                                  */ 00887000
*/*   CONDITIONS + OUTPUT - (SEE MODULE IEFAB441)                    */ 00888000
*/*                                                                  */ 00889000
*/*   RETURN CODES - RTNCODE NON-ZERO                                */ 00890000
*/*                                                                  */ 00891000
*/* EXIT - ERROR - (INLINE SUBROUTINE)                       @ZA01569*/ 00892000
*/*                                                                  */ 00893000
*/*   CONDITIONS - ALGORITHM STILL UNABLE TO COVER           @ZA01569*/ 00894000
*/*                ALL REQUESTS                              @ZA01569*/ 00895000
*/*                                                                  */ 00896000
*/*   OUTPUT - REASON CODE SAVE AREA , SAVNOCOV,             @ZA01569*/ 00897000
*/*            SET TO 6 (UNABLE TO ALLOCATE)                 @ZA01569*/ 00898000
*/*                                                                  */ 00899000
*/*   RETURN CODES - RTNCODE NON-ZERO                        @ZA01569*/ 00900000
*/*                                                                  */ 00901000
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */ 00902000
*/*                                                                  */ 00903000
*/*   CONDITIONS - GETMAIN ERROR IN ALGORITHM (IEFAB480)             */ 00904000
*/*                                                                  */ 00905000
*/*   OUTPUT - REASONCD SET TO 2                                     */ 00906000
*/*                                                                  */ 00907000
*/*   RETURN CODES - RTNCODE NON-ZERO                                */ 00908000
*/*                                                                  */ 00909000
*/********************************************************************/ 00910000
*DO MASKBYTE = ONE TO GMTENTLN;        /*INVERT MASK TO GET MASK OF     00911000
*                                        GROUPS LOCKED               */ 00912000
         LA    MASKBYTE,1                                       02S0250 00913000
         B     @DE00250                                         02S0250 00914000
@DL00250 DS    0H                                               02S0251 00915000
*  NEEDMASK(MASKBYTE) = UNLKMASK(MASKBYTE) && ALLONES;          02S0251 00916000
         LA    @04,NEEDMASK-1(MASKBYTE)                         02S0251 00917000
         L     @03,@PC00001                                     02S0251 00918000
         L     @03,ALCWAPTR(,@03)                               02S0251 00919000
         L     @03,WMASKPTR(,@03)                               02S0251 00920000
         ALR   @03,MASKBYTE                                     02S0251 00921000
         BCTR  @03,0                                            02S0251 00922000
         MVC   0(1,@04),UNLKMASK(@03)                           02S0251 00923000
         XI    0(@04),X'FF'                                     02S0251 00924000
*END;                                                           02S0252 00925000
         AH    MASKBYTE,@CH00079                                02S0252 00926000
@DE00250 L     @04,@PC00001                                     02S0252 00927000
         L     @04,ALCWAPTR(,@04)                               02S0252 00928000
         L     @04,EDTABPTR(,@04)                               02S0252 00929000
         L     @04,EDTMSKTP(,@04)                               02S0252 00930000
         C     MASKBYTE,GMTENTLN(,@04)                          02S0252 00931000
         BNH   @DL00250                                         02S0252 00932000
*VUPTR = VOLUNPTR;                                              02S0253 00933000
         L     @04,@PC00001                                     02S0253 00934000
         L     @04,ALCWAPTR(,@04)                               02S0253 00935000
         MVC   VUPTR(4),VOLUNPTR(@04)                           02S0253 00936000
*DO VUCTR = ONE TO VOLUNSZE/LENGTH(VOLUNTAB) /*SCAN ALL VU ENTRIES   */ 00937000
*    WHILE RTNCODE = SUCCESS & INDRETRY = OFF;                  02S0254 00938000
         LA    VUCTR,1                                          02S0254 00939000
         B     @DE00254                                         02S0254 00940000
@DL00254 SLR   @06,@06                                          02S0254 00941000
         CR    RTNCODE,@06                                      02S0254 00942000
         BNE   @DC00254                                         02S0254 00943000
         L     @04,@PC00001                                     02S0254 00944000
         L     @04,ALCWAPTR(,@04)                               02S0254 00945000
         TM    INDRETRY(@04),B'01000000'                        02S0254 00946000
         BNZ   @DC00254                                         02S0254 00947000
*  IF VUDNALOC=ON & VOLALGTP->CVRWUCBP^=ZERO /*DEMAND UNIT UNAVAIL ? */ 00948000
*      & (VUDMNDOF=ON | VUDMNDAL=ON) THEN                       02S0255 00949000
         L     @04,VUPTR                                        02S0255 00950000
         TM    VUDNALOC(@04),B'00001000'                        02S0255 00951000
         BNO   @RF00255                                         02S0255 00952000
         L     @15,VOLALGTP(,@04)                               02S0255 00953000
         ICM   @14,3,CVRWUCBP(@15)                              02S0255 00954000
         BZ    @RF00255                                         02S0255 00955000
         TM    VUDMNDOF(@04),B'00110000'                        02S0255 00956000
         BZ    @RF00255                                         02S0255 00957000
*    DO;                               /*YES, ZERO PTR TO UCB        */ 00958000
*      VOLALGTP->CVRWUCBP = ZERO;                               02S0257 00959000
         STH   @06,CVRWUCBP(,@15)                               02S0257 00960000
*    END;                                                       02S0258 00961000
*  ELSE;                               /*NOT UNAVAIL DEMANDED UNIT   */ 00962000
@RF00255 DS    0H                                               02S0260 00963000
*    VUPTR = VUPTR + LENGTH(VOLUNTAB);                          02S0260 00964000
         LA    @06,28                                           02S0260 00965000
         AL    @06,VUPTR                                        02S0260 00966000
         ST    @06,VUPTR                                        02S0260 00967000
*END;                                                           02S0261 00968000
         AH    VUCTR,@CH00079                                   02S0261 00969000
@DE00254 L     @06,@PC00001                                     02S0261 00970000
         L     @06,ALCWAPTR(,@06)                               02S0261 00971000
         L     @00,VOLUNSZE(,@06)                               02S0261 00972000
         SRDA  @00,32                                           02S0261 00973000
         D     @00,@CF01076                                     02S0261 00974000
         CR    VUCTR,@01                                        02S0261 00975000
         BNH   @DL00254                                         02S0261 00976000
@DC00254 DS    0H                                               02S0262 00977000
*VUPTR = VOLUNPTR;                                              02S0262 00978000
         L     @04,@PC00001                                     02S0262 00979000
         L     @04,ALCWAPTR(,@04)                               02S0262 00980000
         MVC   VUPTR(4),VOLUNPTR(@04)                           02S0262 00981000
*DO VUCTR = ONE TO VOLUNSZE/LENGTH(VOLUNTAB) /*SCAN ALL VU ENTS      */ 00982000
*    WHILE RTNCODE = SUCCESS & INDRETRY = OFF;                  02S0263 00983000
         LA    VUCTR,1                                          02S0263 00984000
         B     @DE00263                                         02S0263 00985000
@DL00263 LTR   RTNCODE,RTNCODE                                  02S0263 00986000
         BNZ   @DC00263                                         02S0263 00987000
         L     @06,@PC00001                                     02S0263 00988000
         L     @06,ALCWAPTR(,@06)                               02S0263 00989000
         TM    INDRETRY(@06),B'01000000'                        02S0263 00990000
         BNZ   @DC00263                                         02S0263 00991000
*  DOVALIDS = OFF;                     /*ASSUME NO VALIDITY CHECK    */ 00992000
         NI    DOVALIDS,B'11111011'                             02S0264 00993000
*  IF VDEVREQD = ON THEN               /*DEVICE REQUIRED ?           */ 00994000
         L     @06,VUPTR                                        02S0265 00995000
         TM    VDEVREQD(@06),B'00100000'                        02S0265 00996000
         BNO   @RF00265                                         02S0265 00997000
*    DO;                               /*YES, PROCESS ..             */ 00998000
*      NDEVALID = OFF;                 /*ASSUME NO V-CHECK FOR NONREQ*/ 00999000
         NI    NDEVALID,B'11110111'                             02S0267 01000000
*      IF VOLALOC=OFF & (VOLTAREQ=ON   /*IS A VALIDITY CHECK NEEDED? */ 01001000
*          | (VOLDAREQ=ON & VOLSPEC=ON)) THEN                   02S0268 01002000
         TM    VOLALOC(@06),B'10000000'                         02S0268 01003000
         BNZ   @RF00268                                         02S0268 01004000
         TM    VOLTAREQ(@06),B'10000000'                        02S0268 01005000
         BO    @RT00268                                         02S0268 01006000
         TM    VOLDAREQ(@06),B'00100000'                        02S0268 01007000
         BNO   @RF00268                                         02S0268 01008000
         TM    VOLSPEC(@06),B'00100000'                         02S0268 01009000
         BNO   @RF00268                                         02S0268 01010000
@RT00268 DS    0H                                               02S0269 01011000
*        DO;                           /*YES, PROCESS                */ 01012000
*          NDEVALID = ON;              /*V-CHECK NOT-DEV-REQ'D ENTRYS*/ 01013000
         OI    NDEVALID,B'00001000'                             02S0270 01014000
*          IF VOLALGTP->CVRWUCBP=ZERO THEN /*HAS V-CHECK BEEN DONE?  */ 01015000
         L     @06,VUPTR                                        02S0271 01016000
         L     @06,VOLALGTP(,@06)                               02S0271 01017000
         ICM   @04,3,CVRWUCBP(@06)                              02S0271 01018000
         BNZ   @RF00271                                         02S0271 01019000
*            DOVALIDS = ON;            /*NO,DO VALIDITY CHECK        */ 01020000
         OI    DOVALIDS,B'00000100'                             02S0272 01021000
*          ELSE;                       /*DON'T REPEAT VALIDITY-CHECK */ 01022000
@RF00271 DS    0H                                               02S0274 01023000
*        END;                                                   02S0274 01024000
*      ELSE;                           /*VALIDITY-CHECK NOT NEEDED   */ 01025000
@RF00268 DS    0H                                               02S0276 01026000
*    END;                                                       02S0276 01027000
*  ELSE                                /*NOT DEVICE-REQUIRED         */ 01028000
*    DO;                                                        02S0277 01029000
         B     @RC00265                                         02S0277 01030000
@RF00265 DS    0H                                               02S0278 01031000
*      IF NDEVALID=ON & (VOLTAREQ=ON   /*IS A VALIDITY CHECK NEEDED? */ 01032000
*          | (VOLDAREQ=ON & VOLSPEC=ON)) THEN                   02S0278 01033000
         TM    NDEVALID,B'00001000'                             02S0278 01034000
         BNO   @RF00278                                         02S0278 01035000
         L     @06,VUPTR                                        02S0278 01036000
         TM    VOLTAREQ(@06),B'10000000'                        02S0278 01037000
         BO    @RT00278                                         02S0278 01038000
         TM    VOLDAREQ(@06),B'00100000'                        02S0278 01039000
         BNO   @RF00278                                         02S0278 01040000
         TM    VOLSPEC(@06),B'00100000'                         02S0278 01041000
         BNO   @RF00278                                         02S0278 01042000
@RT00278 DS    0H                                               02S0279 01043000
*        DO;                           /*YES, INDICATE               */ 01044000
*          DOVALIDS = ON;                                       02S0280 01045000
         OI    DOVALIDS,B'00000100'                             02S0280 01046000
*        END;                                                   02S0281 01047000
*      ELSE;                           /*VALIDITY-CHECK NOT NEEDED   */ 01048000
@RF00278 DS    0H                                               02S0283 01049000
*    END;                                                       02S0283 01050000
*  IF DOVALIDS = ON THEN               /*IS A VALIDITY-CHECK NEEDED? */ 01051000
@RC00265 TM    DOVALIDS,B'00000100'                             02S0284 01052000
         BNO   @RF00284                                         02S0284 01053000
*    DO;                               /*YES,UNLOAD VOLUME IF FOUND  */ 01054000
*      GENFNDSW = OFF;                 /*INITIALIZE SWITCH           */ 01055000
         NI    GENFNDSW,B'11011111'                             02S0286 01056000
*      EDLPTR = VOLSIOTP->SIOTEDLP->EDLFGENP; /*PTR TO 1ST GEN IN DEL*/ 01057000
         L     @06,VUPTR                                        02S0287 01058000
         L     @06,VOLSIOTP(,@06)                               02S0287 01059000
         L     @06,SIOTEDLP(,@06)                               02S0287 01060000
         L     EDLPTR,EDLFGENP(,@06)                            02S0287 01061000
*      DO WHILE GENFNDSW = OFF;        /*SCAN FOR ELIGIBLE GEN       */ 01062000
         B     @DE00288                                         02S0288 01063000
@DL00288 DS    0H                                               02S0289 01064000
*        IF EINDEVTP = OFF THEN        /*IS GEN ELIGIBLE ?           */ 01065000
         TM    EINDEVTP(EDLPTR),B'10000000'                     02S0289 01066000
         BNZ   @RF00289                                         02S0289 01067000
*          GENFNDSW = ON;              /*YES, END SCAN OF EDL        */ 01068000
         OI    GENFNDSW,B'00100000'                             02S0290 01069000
*        ELSE                          /*GEN NOT ELIGIBLE            */ 01070000
*          EDLPTR = EDLNXTNT;          /*POINT TO NEXT GEN           */ 01071000
         B     @RC00289                                         02S0291 01072000
@RF00289 L     EDLPTR,EDLNXTNT(,EDLPTR)                         02S0291 01073000
*      END;                                                     02S0292 01074000
@RC00289 DS    0H                                               02S0292 01075000
@DE00288 TM    GENFNDSW,B'00100000'                             02S0292 01076000
         BZ    @DL00288                                         02S0292 01077000
*      CALL IEFAB441 (FUNC441,ALCWAPTR,VUPTR,ADDR(NEEDMASK),    02S0293 01078000
*                     EDLGRPTR->EDLLISTP->EDLUCBAD(1)->UCBTYP); 02S0293 01079000
         LA    @06,@CB00103                                     02S0293 01080000
         ST    @06,@AL00001                                     02S0293 01081000
         L     @06,@PC00001                                     02S0293 01082000
         ST    @06,@AL00001+4                                   02S0293 01083000
         LA    @06,VUPTR                                        02S0293 01084000
         ST    @06,@AL00001+8                                   02S0293 01085000
         LA    @06,NEEDMASK                                     02S0293 01086000
         ST    @06,@TF00001                                     02S0293 01087000
         LA    @06,@TF00001                                     02S0293 01088000
         ST    @06,@AL00001+12                                  02S0293 01089000
         L     @06,EDLGRPTR(,EDLPTR)                            02S0293 01090000
         L     @06,EDLLISTP(,@06)                               02S0293 01091000
         SLR   @04,@04                                          02S0293 01092000
         ICM   @04,3,EDLUCBAD(@06)                              02S0293 01093000
         LA    @06,UCBTYP(,@04)                                 02S0293 01094000
         ST    @06,@AL00001+16                                  02S0293 01095000
         L     @15,@CV00140                                     02S0293 01096000
         LA    @01,@AL00001                                     02S0293 01097000
         BALR  @14,@15                                          02S0293 01098000
*      RTNCODE = REG15;                                         02S0294 01099000
         LR    RTNCODE,REG15                                    02S0294 01100000
*    END;                                                       02S0295 01101000
*  ELSE;                               /*VALIDITY-CHECK NOT NEEDED   */ 01102000
@RF00284 DS    0H                                               02S0297 01103000
*  VUPTR = VUPTR + LENGTH(VOLUNTAB);   /*POINT TO NEXT VU ENTRY      */ 01104000
         LA    @06,28                                           02S0297 01105000
         AL    @06,VUPTR                                        02S0297 01106000
         ST    @06,VUPTR                                        02S0297 01107000
*END;                                                           02S0298 01108000
         AH    VUCTR,@CH00079                                   02S0298 01109000
@DE00263 L     @06,@PC00001                                     02S0298 01110000
         L     @06,ALCWAPTR(,@06)                               02S0298 01111000
         L     @00,VOLUNSZE(,@06)                               02S0298 01112000
         SRDA  @00,32                                           02S0298 01113000
         D     @00,@CF01076                                     02S0298 01114000
         CR    VUCTR,@01                                        02S0298 01115000
         BNH   @DL00263                                         02S0298 01116000
@DC00263 DS    0H                                               02S0299 01117000
*IF RTNCODE = SUCCESS THEN             /*ANY ERRORS                  */ 01118000
         LTR   RTNCODE,RTNCODE                                  02S0299 01119000
         BNZ   @RF00299                                         02S0299 01120000
*  DO;                                 /*NO ERRORS                   */ 01121000
*    CALL IEFAB480(ALGPARMP);          /*RECALL COVER ALG            */ 01122000
         L     @04,@PC00001                                     02S0301 01123000
         L     @04,ALCWAPTR(,@04)                               02S0301 01124000
         L     @04,ALGTABP(,@04)                                02S0301 01125000
         ST    @04,@AL00001                                     02S0301 01126000
         L     @15,@CV00138                                     02S0301 01127000
         LA    @01,@AL00001                                     02S0301 01128000
         BALR  @14,@15                                          02S0301 01129000
*    RTNCODE = REG15;                  /*SAVE THE RETURN CODE        */ 01130000
         LR    RTNCODE,REG15                                    02S0302 01131000
*    IF RTNCODE ^= SUCCESS THEN        /*ANY ERRORS ?                */ 01132000
         LTR   RTNCODE,RTNCODE                                  02S0303 01133000
         BZ    @RF00303                                         02S0303 01134000
*      DO;                             /*YES,DETERMINE TYPE OF ERROR */ 01135000
*        IF RTNCODE = PARTALOC THEN    /*NO SOLUTION ?               */ 01136000
         CH    RTNCODE,@CH00055                                 02S0305 01137000
         BNE   @RF00305                                         02S0305 01138000
*          SAVNOCOV = NOCOVER;         /*YES, UNABLE TO ALLOC@ZA01569*/ 01139000
         MVC   SAVNOCOV(2),@CH00111                             02S0306 01140000
*        ELSE                          /*GETMAIN ERROR               */ 01141000
*          REASONCD = GETMNERR;        /*YES, SET REASON CODE        */ 01142000
         B     @RC00305                                         02S0307 01143000
@RF00305 L     @04,@PC00001                                     02S0307 01144000
         L     @04,ALCWAPTR(,@04)                               02S0307 01145000
         L     @04,FAILRSCP(,@04)                               02S0307 01146000
         MVC   REASONCD(2,@04),@CH00109                         02S0307 01147000
*      END;                                                     02S0308 01148000
*    ELSE;                             /*NO ERRORS                   */ 01149000
@RF00303 DS    0H                                               02S0310 01150000
*  END;                                                         02S0310 01151000
*ELSE;                                 /*VALIDITY CHECK ERRORS       */ 01152000
@RF00299 DS    0H                                               02S0312 01153000
*            IF RTNCODE = SUCCESS & INDRETRY=OFF THEN /*ANY ERRORS ? */ 01154000
@RC00299 LTR   RTNCODE,RTNCODE                                  01S0312 01155000
         BNZ   @RF00312                                         01S0312 01156000
         L     @04,@PC00001                                     01S0312 01157000
         L     @01,ALCWAPTR(,@04)                               01S0312 01158000
         TM    INDRETRY(@01),B'01000000'                        01S0312 01159000
         BNZ   @RF00312                                         01S0312 01160000
*              DO;                     /*NO, CONTINUE                */ 01161000
*                CALL IEFAB478 (ALCWAPTR,FUNC478); /*ALOC TO AVAILIBL*/ 01162000
         ST    @04,@AL00001                                     01S0314 01163000
         LA    @04,@CB00107                                     01S0314 01164000
         ST    @04,@AL00001+4                                   01S0314 01165000
         L     @15,@CV00137                                     01S0314 01166000
         LA    @01,@AL00001                                     01S0314 01167000
         BALR  @14,@15                                          01S0314 01168000
*                RTNCODE = REG15;      /*SAVE THE RETURN CODE        */ 01169000
         LR    RTNCODE,REG15                                    01S0315 01170000
*                IF RTNCODE = SUCCESS & INDRETRY=OFF THEN /*ANY ERORS*/ 01171000
         LTR   RTNCODE,RTNCODE                                  01S0316 01172000
         BNZ   @RF00316                                         01S0316 01173000
         L     @04,@PC00001                                     01S0316 01174000
         L     @04,ALCWAPTR(,@04)                               01S0316 01175000
         TM    INDRETRY(@04),B'01000000'                        01S0316 01176000
         BNZ   @RF00316                                         01S0316 01177000
*                  DO;                 /*NO, CONTINUE ..             */ 01178000
*/********************************************************************/ 01179000
*/*                                                                  */ 01180000
*/* SEGMENT NAME - FREGROUP                                          */ 01181000
*/*                                                                  */ 01182000
*/* DESCRIPTIVE NAME - RELEASE GROUPS NO LONGER NEEDED               */ 01183000
*/*                                                                  */ 01184000
*/* FUNCTION -                                                       */ 01185000
*/*     THIS ROUTINE RELEASES ANY DEVICE GROUPS NO LONGER NEEDED     */ 01186000
*/*     BY THIS ALLOCATION. DEVICE GROUPS MAY BE NEEDED FOR THE      */ 01187000
*/*     FOLLOWING REASONS:                                           */ 01188000
*/*       (1) CONTAINS A SPECIFIC OFFLINE OR ALLOCATED UNIT WHICH    */ 01189000
*/*           MUST BE ALLOCATED.                                     */ 01190000
*/*       (2) CONTAINS AN ALLOCATED VOLUME WHICH IS NEEDED ELSEWHERE.*/ 01191000
*/*       (3) CONTAINS A UNIT NEEDING A DA SCRATCH VOLUME MOUNTED.   */ 01192000
*/*       (4) GROUPS WHICH THE ALGORITHM INDICATES MAY PARTICIPATE   */ 01193000
*/*           IN AN ALLOCATION SOLUTION.                             */ 01194000
*/*                                                                  */ 01195000
*/*   OPERATION - (THE OPERATION IS DOCUMENTED BY THE CODE ITSELF)   */ 01196000
*/*                                                                  */ 01197000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 01198000
*/*                                                                  */ 01199000
*/*   INPUT -                                                        */ 01200000
*/*      ALCWAPTR - PTR TO ALLOCATION WORK AREA, WHICH CONTAINS      */ 01201000
*/*        VOLUNPTR - PTR TO VOLUNIT TABLE                           */ 01202000
*/*        QMGRRBP  - PTR TO ALLOCATION Q-MGR REQUEST BLOCK          */ 01203000
*/*        WORK3MP  - PTR TO MASK OF GROUPS VM&V NEEDS               */ 01204000
*/*        WMASKPTR - PTR TO AREA FOR 'WAITMASK'                     */ 01205000
*/*        WMASK2P  - PTR TO WORK AREA GROUP MASK                    */ 01206000
*/*                                                                  */ 01207000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 01208000
*/*                                                                  */ 01209000
*/*   CONDITIONS - FUNCTION COMPLETED.                               */ 01210000
*/*                                                                  */ 01211000
*/*   OUTPUT -                                                       */ 01212000
*/*      .GROUPS NOT NEEDED HAVE BEEN RELEASED.                      */ 01213000
*/*      .WAITMASK - MASK OF ALL GROUPS WHICH CONTAIN SPECIFIC,      */ 01214000
*/*                  ALLOCATED UNITS OR VOLUMES WHICH MUST BE        */ 01215000
*/*                  WAITED FOR.                                     */ 01216000
*/*                                                                  */ 01217000
*/*   RETURN CODES - (NONE)                                          */ 01218000
*/*                                                                  */ 01219000
*/* EXIT - ERROR - (NONE)                                            */ 01220000
*/*                                                                  */ 01221000
*/********************************************************************/ 01222000
*NEEDMASK(ONE:GMTENTLN)=                                        02S0318 01223000
*  NEEDMASK(ONE:GMTENTLN) && NEEDMASK(ONE:GMTENTLN);/*          02S0318 01224000
*                                        ZERO MASK                   */ 01225000
         L     @01,EDTABPTR(,@04)                               02S0318 01226000
         L     @01,EDTMSKTP(,@01)                               02S0318 01227000
         L     @05,GMTENTLN(,@01)                               02S0318 01228000
         BCTR  @05,0                                            02S0318 01229000
         EX    @05,@SX01098                                     02S0318 01230000
*KEEPMASK(ONE:GMTENTLN)=                                        02S0319 01231000
*  KEEPMASK(ONE:GMTENTLN) && KEEPMASK(ONE:GMTENTLN);            02S0319 01232000
         L     @01,WMASKPTR(,@04)                               02S0319 01233000
         EX    @05,@SX01100                                     02S0319 01234000
*VUPTR = VOLUNPTR;                     /*POINT TO FIRST VOLUNIT ENTRY*/ 01235000
         MVC   VUPTR(4),VOLUNPTR(@04)                           02S0320 01236000
*DO VUCTR = ONE TO VOLUNSZE/LENGTH(VOLUNTAB); /*SCAN ALL VU ENTRIES  */ 01237000
         LA    VUCTR,1                                          02S0321 01238000
         B     @DE00321                                         02S0321 01239000
@DL00321 DS    0H                                               02S0322 01240000
*  IF VUDMNDOF=ON | VUDMNDAL=ON THEN   /*SPECIFIC UNIT NOT AVAILABLE?*/ 01241000
         L     @06,VUPTR                                        02S0322 01242000
         TM    VUDMNDOF(@06),B'00110000'                        02S0322 01243000
         BZ    @RF00322                                         02S0322 01244000
*    DO;                               /*YES, PROCESS                */ 01245000
*      IF VOLSIOTP->SIOTDMND=ON THEN   /*DEMAND REQ ?                */ 01246000
         L     @06,VOLSIOTP(,@06)                               02S0324 01247000
         TM    SIOTDMND(@06),B'10000000'                        02S0324 01248000
         BNO   @RF00324                                         02S0324 01249000
*        DO;                           /*YES, GET GROUP ID           */ 01250000
*          THEGRPID=VOLSIOTP->SIOTEDLP->EDLFGENP->EDLGRPTR->EDLGRID;    01251000
         L     @06,SIOTEDLP(,@06)                               02S0326 01252000
         L     @06,EDLFGENP(,@06)                               02S0326 01253000
         L     @06,EDLGRPTR(,@06)                               02S0326 01254000
         L     THEGRPID,EDLGRID(,@06)                           02S0326 01255000
*          MASKPTR = ADDR(NEEDMASK);                            02S0327 01256000
         LA    @06,NEEDMASK                                     02S0327 01257000
         ST    @06,MASKPTR                                      02S0327 01258000
*          CALL TURNBIT1;              /*INDICATE GROUP IS NEEDED    */ 01259000
         BAL   @14,TURNBIT1                                     02S0328 01260000
*          IF VUDMNDAL = ON THEN       /*IS UNIT NEEDED ALLOCATED ?  */ 01261000
         L     @06,VUPTR                                        02S0329 01262000
         TM    VUDMNDAL(@06),B'00010000'                        02S0329 01263000
         BNO   @RF00329                                         02S0329 01264000
*            DO;                       /*YES,INDICATE GRP TO WAIT FOR*/ 01265000
*              MASKPTR = ADDR(WAITMASK);                        02S0331 01266000
         L     @06,@PC00001                                     02S0331 01267000
         L     @06,ALCWAPTR(,@06)                               02S0331 01268000
         MVC   MASKPTR(4),WMASK2P(@06)                          02S0331 01269000
*              CALL TURNBIT1;                                   02S0332 01270000
         BAL   @14,TURNBIT1                                     02S0332 01271000
*            END;                                               02S0333 01272000
*          ELSE;                       /*UNIT NOT ALLOCATED          */ 01273000
@RF00329 DS    0H                                               02S0335 01274000
*        END;                                                   02S0335 01275000
*      ELSE;                           /*NOT DEMAND REQ              */ 01276000
@RF00324 DS    0H                                               02S0337 01277000
*    END;                                                       02S0337 01278000
*  ELSE                                /*NOT UNAVAILABLE SPECIFIC UCB*/ 01279000
*    DO;                                                        02S0338 01280000
         B     @RC00322                                         02S0338 01281000
@RF00322 DS    0H                                               02S0339 01282000
*      IF VOLALOC = OFF & VDEVREQD = ON THEN /*IS THE REQ ALLOCATED? */ 01283000
         L     @06,VUPTR                                        02S0339 01284000
         TM    VDEVREQD(@06),B'00100000'                        02S0339 01285000
         BNO   @RF00339                                         02S0339 01286000
         TM    VOLALOC(@06),B'10000000'                         02S0339 01287000
         BNZ   @RF00339                                         02S0339 01288000
*        DO;                           /*NO, PROCESS                 */ 01289000
*          IF VOLALGTP->CVRSKFLG = OFF THEN /*CONSIDERED BY ALG?     */ 01290000
         L     @06,VOLALGTP(,@06)                               02S0341 01291000
         TM    CVRSKFLG(@06),B'10000000'                        02S0341 01292000
         BNZ   @RF00341                                         02S0341 01293000
*            DO;                       /*YES, PROCESS                */ 01294000
*              AGRPPTR=VOLALGTP->CVRGRPPT; /*POINT TO FIRST GROUP       01295000
*                                        ENTRY                       */ 01296000
         L     AGRPPTR,CVRGRPPT(,@06)                           02S0343 01297000
*              DO AGRPCTR=ONE TO VOLALGTP->CVRNGRP; /*SCAN ALL GRP      01298000
*                                        ENTRIES                     */ 01299000
         LA    AGRPCTR,1                                        02S0344 01300000
         B     @DE00344                                         02S0344 01301000
@DL00344 DS    0H                                               02S0345 01302000
*                IF CVRGSKP=OFF & CVRGALL => ZERO THEN   /*POSSIBLE     01303000
*                                        SOLUTION GROUP ?            */ 01304000
         TM    CVRGSKP(AGRPPTR),B'10000000'                     02S0345 01305000
         BNZ   @RF00345                                         02S0345 01306000
         ICM   @06,3,CVRGALL(AGRPPTR)                           02S0345 01307000
         BM    @RF00345                                         02S0345 01308000
*                  DO;                 /*YES,INDICATE GROUP IS NEEDED*/ 01309000
*                    THEGRPID = CVRGRPID;                       02S0347 01310000
         LH    THEGRPID,CVRGRPID(,AGRPPTR)                      02S0347 01311000
*                    MASKPTR = ADDR(NEEDMASK);                  02S0348 01312000
         LA    @06,NEEDMASK                                     02S0348 01313000
         ST    @06,MASKPTR                                      02S0348 01314000
*                    CALL TURNBIT1;                             02S0349 01315000
         BAL   @14,TURNBIT1                                     02S0349 01316000
*                    IF VOLALGTP->CVRWUCBP^=ZERO THEN /*VOL ALLOC'D? */ 01317000
         L     @06,VUPTR                                        02S0350 01318000
         L     @06,VOLALGTP(,@06)                               02S0350 01319000
         ICM   @05,3,CVRWUCBP(@06)                              02S0350 01320000
         BZ    @RF00350                                         02S0350 01321000
*                      DO;             /*YES, INDICATE GROUP NEEDED  */ 01322000
*                        MASKPTR = ADDR(KEEPMASK);              02S0352 01323000
         L     @06,@PC00001                                     02S0352 01324000
         L     @06,ALCWAPTR(,@06)                               02S0352 01325000
         MVC   MASKPTR(4),WMASKPTR(@06)                         02S0352 01326000
*                        CALL TURNBIT1;                         02S0353 01327000
         BAL   @14,TURNBIT1                                     02S0353 01328000
*                      END;                                     02S0354 01329000
*                    ELSE;             /*VOLUME NOT ALLOCATED        */ 01330000
@RF00350 DS    0H                                               02S0356 01331000
*                  END;                                         02S0356 01332000
*                ELSE;                 /*NOT A POSSIBLE SOLUTION GRP */ 01333000
@RF00345 DS    0H                                               02S0358 01334000
*                AGRPPTR=AGRPPTR+LENGTH(CVRGPLST);              02S0358 01335000
         AH    AGRPPTR,@CH00061                                 02S0358 01336000
*              END;                                             02S0359 01337000
         AH    AGRPCTR,@CH00079                                 02S0359 01338000
@DE00344 L     @06,VUPTR                                        02S0359 01339000
         L     @06,VOLALGTP(,@06)                               02S0359 01340000
         CH    AGRPCTR,CVRNGRP(,@06)                            02S0359 01341000
         BNH   @DL00344                                         02S0359 01342000
*          END;                                                 02S0360 01343000
*        ELSE                          /*REQ NOT CONSIDERED BY ALG   */ 01344000
*          DO;                                                  02S0361 01345000
         B     @RC00341                                         02S0361 01346000
@RF00341 DS    0H                                               02S0362 01347000
*            IF VOLSIOTP->SIOTDMND=ON  /*DEMAND REQ                  */ 01348000
*              & VOLALGTP->CVRWUCBP ^= ZERO THEN /*AND VOL ALLOCATED?*/ 01349000
         L     @06,VUPTR                                        02S0362 01350000
         L     @15,VOLSIOTP(,@06)                               02S0362 01351000
         TM    SIOTDMND(@15),B'10000000'                        02S0362 01352000
         BNO   @RF00362                                         02S0362 01353000
         L     @06,VOLALGTP(,@06)                               02S0362 01354000
         ICM   @14,3,CVRWUCBP(@06)                              02S0362 01355000
         BZ    @RF00362                                         02S0362 01356000
*              DO;                     /*YES, GROUP IS NEEDED        */ 01357000
*                THEGRPID = VOLSIOTP->SIOTEDLP->EDLFGENP        02S0364 01358000
*                 ->EDLGRPTR->EDLGRID;                          02S0364 01359000
         L     @06,SIOTEDLP(,@15)                               02S0364 01360000
         L     @06,EDLFGENP(,@06)                               02S0364 01361000
         L     @06,EDLGRPTR(,@06)                               02S0364 01362000
         L     THEGRPID,EDLGRID(,@06)                           02S0364 01363000
*                MASKPTR = ADDR(NEEDMASK);                      02S0365 01364000
         LA    @06,NEEDMASK                                     02S0365 01365000
         ST    @06,MASKPTR                                      02S0365 01366000
*                CALL TURNBIT1;                                 02S0366 01367000
         BAL   @14,TURNBIT1                                     02S0366 01368000
*                MASKPTR = ADDR(KEEPMASK);                      02S0367 01369000
         L     @06,@PC00001                                     02S0367 01370000
         L     @06,ALCWAPTR(,@06)                               02S0367 01371000
         MVC   MASKPTR(4),WMASKPTR(@06)                         02S0367 01372000
*                CALL TURNBIT1;                                 02S0368 01373000
         BAL   @14,TURNBIT1                                     02S0368 01374000
*              END;                                             02S0369 01375000
*            ELSE;                     /*NONDEMAND OR VOL NOT ALLOC'D*/ 01376000
@RF00362 DS    0H                                               02S0371 01377000
*          END;                                                 02S0371 01378000
*        END;                                                   02S0372 01379000
*      ELSE;                           /*REQ IS ALLOCATED            */ 01380000
@RF00339 DS    0H                                               02S0374 01381000
*    END;                                                       02S0374 01382000
@RC00339 DS    0H                                               02S0375 01383000
*  IF VOLALGTP^=ZERO & VOLALGTP->CVRWUCBP^=ZERO THEN  /*VOLUME-NEEDED   01384000
*                                        ALLOCATED ?   */       02S0375 01385000
@RC00322 L     @06,VUPTR                                        02S0375 01386000
         L     @06,VOLALGTP(,@06)                               02S0375 01387000
         LTR   @06,@06                                          02S0375 01388000
         BZ    @RF00375                                         02S0375 01389000
         SLR   @15,@15                                          02S0375 01390000
         ICM   @15,3,CVRWUCBP(@06)                              02S0375 01391000
         LTR   @15,@15                                          02S0375 01392000
         BZ    @RF00375                                         02S0375 01393000
*    DO;                                                        02S0376 01394000
*      UCBPTR = VOLALGTP->CVRWUCBP;    /*SAVE PTR TO UCB             */ 01395000
         LR    UCBPTR,@15                                       02S0377 01396000
*/********************************************************************/ 01397000
*/*                                                                  */ 01398000
*/* SEGMENT NAME - FINDGRP                                           */ 01399000
*/*                                                                  */ 01400000
*/* DESCRIPTIVE NAME - DETERMINE GROUP ID OF UCB                     */ 01401000
*/*                                                                  */ 01402000
*/* FUNCTION -                                                       */ 01403000
*/*     THIS ROUTINE DETERMINES THE GROUP ID OF A UCB                */ 01404000
*/*                                                                  */ 01405000
*/*   OPERATION - THE EDT GROUP ENTRIES ARE SCANNED TO LOCATE        */ 01406000
*/*               THE UCB                                            */ 01407000
*/*                                                                  */ 01408000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 01409000
*/*                                                                  */ 01410000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 01411000
*/*                                                                  */ 01412000
*/*   INPUT -                                                        */ 01413000
*/*     ALCWAPTR - PTR TO THE ALLOCATION WORK AREA                   */ 01414000
*/*       EDTABPTR - PTR TO THE SYSGEN'ED EDT                        */ 01415000
*/*     UCBPTR - PTR TO THE UCB TO LOCATE                            */ 01416000
*/*                                                                  */ 01417000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 01418000
*/*                                                                  */ 01419000
*/*   CONDITIONS - UCB'S GROUP ID DETERMINED.                        */ 01420000
*/*                                                                  */ 01421000
*/*   OUTPUT -                                                       */ 01422000
*/*     FNDGRPID - GROUP ID OF UCB                                   */ 01423000
*/*                                                                  */ 01424000
*/* EXIT - ERROR - (NONE)                                            */ 01425000
*/*                                                                  */ 01426000
*/********************************************************************/ 01427000
*UCBFOUND = OFF;                       /*INDICATE UCB NOT LOCATED    */ 01428000
         NI    UCBFOUND,B'11111110'                             03S0378 01429000
*GRPPTR = EDTGRPSP + LENGTH(GRPHDR);   /*LOCATE FIRST GROUP ENTRY    */ 01430000
         L     @06,@PC00001                                     03S0379 01431000
         L     @06,ALCWAPTR(,@06)                               03S0379 01432000
         L     @06,EDTABPTR(,@06)                               03S0379 01433000
         LA    GRPPTR,8                                         03S0379 01434000
         AL    GRPPTR,EDTGRPSP(,@06)                            03S0379 01435000
*DO GRPCTR = ONE TO GRPENTNO           /*SCAN ALL GROUP ENTRIES      */ 01436000
*    WHILE UCBFOUND = OFF;                                      03S0380 01437000
         LA    GRPCTR,1                                         03S0380 01438000
         B     @DE00380                                         03S0380 01439000
@DL00380 TM    UCBFOUND,B'00000001'                             03S0380 01440000
         BNZ   @DC00380                                         03S0380 01441000
*  DO UCBCTR = ONE TO GRPUCBNO         /*SCAN ALL UCBS IN GROUP      */ 01442000
*      WHILE UCBFOUND = OFF;                                    03S0381 01443000
         LA    UCBCTR,1                                         03S0381 01444000
         B     @DE00381                                         03S0381 01445000
@DL00381 TM    UCBFOUND,B'00000001'                             03S0381 01446000
         BNZ   @DC00381                                         03S0381 01447000
*    IF IOSLUT(EUCBTPOS(UCBCTR)+ONE)=UCBPTR THEN /*UCB FOUND ?       */ 01448000
         LR    @08,UCBCTR                                       03S0382 01449000
         ALR   @08,@08                                          03S0382 01450000
         L     @06,GRPUCBP(,GRPPTR)                             03S0382 01451000
         BCTR  @06,0                                            03S0382 01452000
         BCTR  @06,0                                            03S0382 01453000
         LH    @08,EUCBTPOS(@08,@06)                            03S0382 01454000
         ALR   @08,@08                                          03S0382 01455000
         L     @06,@PC00001                                     03S0382 01456000
         L     @06,ALCWAPTR(,@06)                               03S0382 01457000
         L     @06,IOSLUTP(,@06)                                03S0382 01458000
         ALR   @06,@08                                          03S0382 01459000
         SLR   @08,@08                                          03S0382 01460000
         ICM   @08,3,IOSLUT(@06)                                03S0382 01461000
         CR    UCBPTR,@08                                       03S0382 01462000
         BNE   @RF00382                                         03S0382 01463000
*      DO;                             /*YES, SAVE GROUP ID          */ 01464000
*        UCBFOUND = ON;                                         03S0384 01465000
         OI    UCBFOUND,B'00000001'                             03S0384 01466000
*        FNDGRPID = GRPID;                                      03S0385 01467000
         MVC   FNDGRPID(4),GRPID(GRPPTR)                        03S0385 01468000
*      END;                                                     03S0386 01469000
*    ELSE;                             /*UCB NOT FOUND               */ 01470000
@RF00382 DS    0H                                               03S0388 01471000
*  END;                                                         03S0388 01472000
         AH    UCBCTR,@CH00079                                  03S0388 01473000
@DE00381 C     UCBCTR,GRPUCBNO(,GRPPTR)                         03S0388 01474000
         BNH   @DL00381                                         03S0388 01475000
@DC00381 DS    0H                                               03S0389 01476000
*  GRPPTR = GRPPTR + GRPENTLN;         /*POINT TO NEXT GROUP ENTRY   */ 01477000
         L     @08,@PC00001                                     03S0389 01478000
         L     @08,ALCWAPTR(,@08)                               03S0389 01479000
         L     @08,EDTABPTR(,@08)                               03S0389 01480000
         L     @08,EDTGRPSP(,@08)                               03S0389 01481000
         AL    GRPPTR,GRPENTLN(,@08)                            03S0389 01482000
*END;                                                           03S0390 01483000
         AH    GRPCTR,@CH00079                                  03S0390 01484000
@DE00380 L     @08,@PC00001                                     03S0390 01485000
         L     @08,ALCWAPTR(,@08)                               03S0390 01486000
         L     @08,EDTABPTR(,@08)                               03S0390 01487000
         L     @08,EDTGRPSP(,@08)                               03S0390 01488000
         C     GRPCTR,GRPENTNO(,@08)                            03S0390 01489000
         BNH   @DL00380                                         03S0390 01490000
@DC00380 DS    0H                                               03S0391 01491000
*      THEGRPID = FNDGRPID;            /*COPY GROUP ID FOUND         */ 01492000
         L     THEGRPID,FNDGRPID                                02S0391 01493000
*      MASKPTR = ADDR(NEEDMASK);                                02S0392 01494000
         LA    @06,NEEDMASK                                     02S0392 01495000
         ST    @06,MASKPTR                                      02S0392 01496000
*      CALL TURNBIT1;                  /*INDICATE GROUP IS NEEDED    */ 01497000
         BAL   @14,TURNBIT1                                     02S0393 01498000
*      MASKPTR = ADDR(WAITMASK);                                02S0394 01499000
         L     @06,@PC00001                                     02S0394 01500000
         L     @06,ALCWAPTR(,@06)                               02S0394 01501000
         MVC   MASKPTR(4),WMASK2P(@06)                          02S0394 01502000
*      CALL TURNBIT1;                  /*INDICATE TO WAIT FOR GROUP  */ 01503000
         BAL   @14,TURNBIT1                                     02S0395 01504000
*    END;                                                       02S0396 01505000
*  ELSE;                               /*NOT ALLOCATED VOLUME        */ 01506000
@RF00375 DS    0H                                               02S0398 01507000
*  VUPTR = VUPTR + LENGTH(VOLUNTAB);   /*POINT TO NEXT VOLUNIT ENTRY */ 01508000
         LA    @06,28                                           02S0398 01509000
         AL    @06,VUPTR                                        02S0398 01510000
         ST    @06,VUPTR                                        02S0398 01511000
*END;                                                           02S0399 01512000
         AH    VUCTR,@CH00079                                   02S0399 01513000
@DE00321 L     @06,@PC00001                                     02S0399 01514000
         L     @06,ALCWAPTR(,@06)                               02S0399 01515000
         L     @00,VOLUNSZE(,@06)                               02S0399 01516000
         SRDA  @00,32                                           02S0399 01517000
         D     @00,@CF01076                                     02S0399 01518000
         CR    VUCTR,@01                                        02S0399 01519000
         BNH   @DL00321                                         02S0399 01520000
*NEEDMASK(ONE:GMTENTLN)=NEEDMASK(ONE:GMTENTLN) | VERIFYMK(ONE:GMTENTLN) 01521000
         L     @15,@PC00001                                     02S0400 01522000
         L     @15,ALCWAPTR(,@15)                               02S0400 01523000
         L     @01,EDTABPTR(,@15)                               02S0400 01524000
         L     @01,EDTMSKTP(,@01)                               02S0400 01525000
         L     @14,GMTENTLN(,@01)                               02S0400 01526000
         BCTR  @14,0                                            02S0400 01527000
         L     @01,WORK3MP(,@15)                                02S0400 01528000
         EX    @14,@SO01104                                     02S0400 01529000
*                                                   /*ADD VERIFY MASK*/ 01530000
*DO MASKBYTE=ONE TO GMTENTLN;          /*INVERT TO MASK NOT NEEDED   */ 01531000
         LA    MASKBYTE,1                                       02S0401 01532000
         B     @DE00401                                         02S0401 01533000
@DL00401 DS    0H                                               02S0402 01534000
*  NEEDMASK(MASKBYTE)=NEEDMASK(MASKBYTE) && ALLONES;            02S0402 01535000
         LA    @03,NEEDMASK-1(MASKBYTE)                         02S0402 01536000
         XI    0(@03),X'FF'                                     02S0402 01537000
*END;                                                           02S0403 01538000
         AH    MASKBYTE,@CH00079                                02S0403 01539000
@DE00401 L     @03,@PC00001                                     02S0403 01540000
         L     @03,ALCWAPTR(,@03)                               02S0403 01541000
         L     @03,EDTABPTR(,@03)                               02S0403 01542000
         L     @03,EDTMSKTP(,@03)                               02S0403 01543000
         C     MASKBYTE,GMTENTLN(,@03)                          02S0403 01544000
         BNH   @DL00401                                         02S0403 01545000
*QMGRRBP->AQMECODE = RLSEFUNC;         /*INDICATE TO RELEASE GROUPS  */ 01546000
         L     @04,@PC00001                                     02S0404 01547000
         L     @04,ALCWAPTR(,@04)                               02S0404 01548000
         L     @15,QMGRRBP(,@04)                                02S0404 01549000
         MVC   AQMECODE(2,@15),@CH00075                         02S0404 01550000
*QMGRRBP->AQMMASKP = ADDR(NEEDMASK);   /*POINT TO MASK TO FREE       */ 01551000
         LA    @14,NEEDMASK                                     02S0405 01552000
         ST    @14,AQMMASKP(,@15)                               02S0405 01553000
*CALL IEFAB4FA (QMGRRBP,EXITPRMP);     /*RELEASE GROUPS              */ 01554000
         LA    @15,QMGRRBP(,@04)                                02S0406 01555000
         ST    @15,@AL00001                                     02S0406 01556000
         LA    @04,EXITPRMP(,@04)                               02S0406 01557000
         ST    @04,@AL00001+4                                   02S0406 01558000
         L     @15,@CV00134                                     02S0406 01559000
         LA    @01,@AL00001                                     02S0406 01560000
         BALR  @14,@15                                          02S0406 01561000
*RTNCODE = REG15;                      /*SAVE THE RETURN CODE        */ 01562000
         LR    RTNCODE,REG15                                    02S0407 01563000
*                    IF TOTREQS > ZERO THEN /*ANY REQS TO ALLOC      */ 01564000
         L     @04,@PC00001                                     01S0408 01565000
         L     @04,ALCWAPTR(,@04)                               01S0408 01566000
         ICM   @15,15,TOTREQS(@04)                              01S0408 01567000
         BNP   @RF00408                                         01S0408 01568000
*                      DO;             /*YES, INTERFACE WITH OPERATOR*/ 01569000
*/********************************************************************/ 01570000
*/*                                                                  */ 01571000
*/* SEGMENT NAME - SETHANDL                                          */ 01572000
*/*                                                                  */ 01573000
*/* DESCRIPTIVE NAME - INDICATE REQS THAT CAN ALLOCATE TO AVAILABLE  */ 01574000
*/*                    DEVICES                                       */ 01575000
*/*                                                                  */ 01576000
*/* FUNCTION - THIS ROUTINE MARKS AS PROCESSED (VURCVYPR=1) ANY      */ 01577000
*/*            REQS WHICH COULD ALLOCATE TO AVAILABLE DEVICES        */ 01578000
*/*            AS SOON AS THE VOLUME NEEDED IS UNALLOCATED FROM      */ 01579000
*/*            WHERE IT IS CURRENTLY ALLOCATED (CVRWUCBP).           */ 01580000
*/*                                                                  */ 01581000
*/*            AT THE END OF THIS PROCESSING THE ALGORITHM IS        */ 01582000
*/*            CALLED TO REDUCE THE ALGORITHM CHOICES DUE TO ANY     */ 01583000
*/*            GROUPS ALREADY PICKED.                                */ 01584000
*/*                                                                  */ 01585000
*/*            THIS ROUTINE ALSO TURNS OFF 'VUDNALOC' FOR            */ 01586000
*/*            REQUESTS WHOSE VOLUME IS ALLOCATED ELSEWHERE OR FOR   */ 01587000
*/*            DEMAND REQUESTS WHOSE UNIT IS OFFLINE OR ALLOCATED.   */ 01588000
*/*                                                                  */ 01589000
*/*   OPERATION - (THE OPERATION IS DOCUMENTED BY THE CODE ITSELF)   */ 01590000
*/*                                                                  */ 01591000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 01592000
*/*                                                                  */ 01593000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 01594000
*/*                                                                  */ 01595000
*/*   INPUT -                                                        */ 01596000
*/*      ALCWAPTR - PTR TO THE ALLOCATION WORK AREA, WHICH CONTAINS  */ 01597000
*/*        EDTABPTR - PTR TO THE EDT                                 */ 01598000
*/*        IOSLUTP - PTR TO THE IOS UCB LOOKUP TABLE                 */ 01599000
*/*        ALGTABP - PTR TO THE ALGORITHM INTERFACE TABLES           */ 01600000
*/*        FAILRSCP - PTR TO THE STEP REASON CODE AREA               */ 01601000
*/*                                                                  */ 01602000
*/* EXIT - NORMAL - (INLINE SUBROUTINE)                              */ 01603000
*/*                                                                  */ 01604000
*/*   CONDITIONS - FUNCTION COMPLETED WITHOUT AN ERROR.              */ 01605000
*/*                                                                  */ 01606000
*/*   OUTPUT -                                                       */ 01607000
*/*       VURVYPR=1 FOR REQS WHICH CAN ALLOCATE WHICH THEIR          */ 01608000
*/*          REQUESTED VOLUME IS UNALLOCATED                         */ 01609000
*/*       CVRGALL=1 FOR GROUP CHOSEN FOR A REQUEST WITH VURCVYPR=1   */ 01610000
*/*       VUDNALOC = 0                                               */ 01611000
*/*                                                                  */ 01612000
*/*   RETURN CODES - RTNCODE = 0                                     */ 01613000
*/*                                                                  */ 01614000
*/* EXIT - ERROR - (INLINE SUBROUTINE)                               */ 01615000
*/*                                                                  */ 01616000
*/*   CONDITIONS - GETMAIN ERROR DETECTED BY IEFAB480                */ 01617000
*/*                                                                  */ 01618000
*/*   OUTPUT - STEP REASON CODE (REASONCD) SET TO 2                  */ 01619000
*/*                                                                  */ 01620000
*/*   RETURN CODES - RTNCODE = NON-ZERO                              */ 01621000
*/*                                                                  */ 01622000
*/********************************************************************/ 01623000
*RFY GRPENTRY BASED (GROUPPTR);                                 02S0410 01624000
*CVRFCALL = OFF;                       /*INDICATE 'REDUCE' FUNCTION  */ 01625000
         L     @04,ALGTABP(,@04)                                02S0411 01626000
         L     @01,ALGPARMP(,@04)                               02S0411 01627000
         NI    CVRFCALL(@01),B'11101111'                        02S0411 01628000
*CALL IEFAB480 (ALGPARMP);             /*REDUCE SOLUTIONS            */ 01629000
         ST    @04,@AL00001                                     02S0412 01630000
         L     @15,@CV00138                                     02S0412 01631000
         LA    @01,@AL00001                                     02S0412 01632000
         BALR  @14,@15                                          02S0412 01633000
*RTNCODE = REG15;                      /*SAVE THE RETURN CODE        */ 01634000
         LR    RTNCODE,REG15                                    02S0413 01635000
*IF RTNCODE ^= SUCCESS THEN            /*ANY ERRORS ?                */ 01636000
         LTR   RTNCODE,RTNCODE                                  02S0414 01637000
         BZ    @RF00414                                         02S0414 01638000
*  REASONCD = GETMNERR;                /*YES,INDICATE GETMAIN ERROR  */ 01639000
         L     @04,@PC00001                                     02S0415 01640000
         L     @04,ALCWAPTR(,@04)                               02S0415 01641000
         L     @04,FAILRSCP(,@04)                               02S0415 01642000
         MVC   REASONCD(2,@04),@CH00109                         02S0415 01643000
*ELSE;                                 /*NO ERRORS                   */ 01644000
@RF00414 DS    0H                                               02S0417 01645000
*MASKPTR = ADDR(NEEDMASK);             /*POINT TO THE GRPS NOT NEEDED*/ 01646000
         LA    @04,NEEDMASK                                     02S0417 01647000
         ST    @04,MASKPTR                                      02S0417 01648000
*DO GROUPNO=ONE TO EIGHT*GMTENTLN;     /*SCAN EACH GROUP             */ 01649000
         LA    @04,1                                            02S0418 01650000
         B     @DE00418                                         02S0418 01651000
@DL00418 DS    0H                                               02S0419 01652000
*  CALL TESTBIT;                       /*TEST IF GROUP IS NEEDED     */ 01653000
         BAL   @14,TESTBIT                                      02S0419 01654000
*  IF BITRTN = OFF THEN                                         02S0420 01655000
         TM    BITRTN,B'10000000'                               02S0420 01656000
         BNZ   @RF00420                                         02S0420 01657000
*    DO;                               /*GROUP IS NEEDED - PROCESS   */ 01658000
*      GROUPPTR=EDTGRPSP+LENGTH(GRPHDR) /*LOCATE GROUP IN THE EDT    */ 01659000
*          + LENGTH(GRPENTRY)*(GROUPNO-ONE);                    02S0422 01660000
         L     @06,@PC00001                                     02S0422 01661000
         L     @06,ALCWAPTR(,@06)                               02S0422 01662000
         L     @06,EDTABPTR(,@06)                               02S0422 01663000
         LA    GROUPPTR,8                                       02S0422 01664000
         AL    GROUPPTR,EDTGRPSP(,@06)                          02S0422 01665000
         L     @06,GROUPNO                                      02S0422 01666000
         BCTR  @06,0                                            02S0422 01667000
         MH    @06,@CH00033                                     02S0422 01668000
         ALR   GROUPPTR,@06                                     02S0422 01669000
*      AVAILCTR = ZERO;                /*INIT COUNT OF AVAILABLE DEVS*/ 01670000
         SLR   AVAILCTR,AVAILCTR                                02S0423 01671000
*      DO UCBCTR = ONE TO GRPUCBNO;    /*SCAN ALL UCBS IN THE GROUP  */ 01672000
         LA    UCBCTR,1                                         02S0424 01673000
         B     @DE00424                                         02S0424 01674000
@DL00424 DS    0H                                               02S0425 01675000
*        UCBPTR=IOSLUT(EUCBTPOS(UCBCTR)+1); /*GET ADDR OF THE UCB    */ 01676000
         LR    @09,UCBCTR                                       02S0425 01677000
         ALR   @09,@09                                          02S0425 01678000
         L     @06,GRPUCBP(,GROUPPTR)                           02S0425 01679000
         BCTR  @06,0                                            02S0425 01680000
         BCTR  @06,0                                            02S0425 01681000
         LH    @09,EUCBTPOS(@09,@06)                            02S0425 01682000
         ALR   @09,@09                                          02S0425 01683000
         L     @06,@PC00001                                     02S0425 01684000
         L     @06,ALCWAPTR(,@06)                               02S0425 01685000
         L     @06,IOSLUTP(,@06)                                02S0425 01686000
         ALR   @06,@09                                          02S0425 01687000
         SLR   UCBPTR,UCBPTR                                    02S0425 01688000
         ICM   UCBPTR,3,IOSLUT(@06)                             02S0425 01689000
*        IF UCBNALOC = OFF                                      02S0426 01690000
*           & UCBONLI = ON                                      02S0426 01691000
*           & UCBALOC = OFF                                     02S0426 01692000
*           & (UCBSYSR = OFF                                    02S0426 01693000
*           | (UCB3DACC = ON | UCB3TAPE = ON))                  02S0426 01694000
*           & (UCB3DACC = OFF | (UCBPRES = OFF                  02S0426 01695000
*           & UCBRESV = OFF) |       /*                    @YM05583*/   01696000
*           (UCBPRES=ON & (UCBVOLI=NOVOLSER /*             @YM05583*/   01697000
*           | UCBMOUNT=ON)))         /*                    @YM05583*/   01698000
*           & (UCB3TAPE = OFF | UCBRESV = OFF) THEN/*           02S0426 01699000
*                                        IS THE UCB AVAILABLE ?      */ 01700000
         TM    UCBNALOC(UCBPTR),B'00000100'                     02S0426 01701000
         BNZ   @RF00426                                         02S0426 01702000
         TM    UCBONLI(UCBPTR),B'10000000'                      02S0426 01703000
         BNO   @RF00426                                         02S0426 01704000
         TM    UCBALOC(UCBPTR),B'00001000'                      02S0426 01705000
         BNZ   @RF00426                                         02S0426 01706000
         TM    UCBSYSR(UCBPTR),B'00000010'                      02S0426 01707000
         BZ    @GL00025                                         02S0426 01708000
         TM    UCB3DACC(UCBPTR),B'10100000'                     02S0426 01709000
         BZ    @RF00426                                         02S0426 01710000
@GL00025 TM    UCB3DACC(UCBPTR),B'00100000'                     02S0426 01711000
         BZ    @GL00024                                         02S0426 01712000
         TM    UCBPRES(UCBPTR),B'00100100'                      02S0426 01713000
         BZ    @GL00024                                         02S0426 01714000
         TM    UCBPRES(UCBPTR),B'00000100'                      02S0426 01715000
         BNO   @RF00426                                         02S0426 01716000
         CLC   UCBVOLI(6,UCBPTR),NOVOLSER                       02S0426 01717000
         BE    @GL00024                                         02S0426 01718000
         TM    UCBMOUNT(UCBPTR),B'10000000'                     02S0426 01719000
         BNO   @RF00426                                         02S0426 01720000
@GL00024 TM    UCB3TAPE(UCBPTR),B'10000000'                     02S0426 01721000
         BZ    @RT00426                                         02S0426 01722000
         TM    UCBRESV(UCBPTR),B'00100000'                      02S0426 01723000
         BNZ   @RF00426                                         02S0426 01724000
@RT00426 DS    0H                                               02S0427 01725000
*          DO;                         /*YES, SEE IF DEMANDED        */ 01726000
*/********************************************************************/ 01727000
*/*                                                                  */ 01728000
*/* SEGMENT NAME - DMNDNEED                                          */ 01729000
*/*                                                                  */ 01730000
*/* DESCRIPTIVE NAME - TEST IF UCB IS DEMANDED                       */ 01731000
*/*                                                                  */ 01732000
*/* FUNCTION - THIS ROUTINE DETERMINES IF THE INPUT UCB IS           */ 01733000
*/*            NEEDED BY A DEMAND REQUEST (E.G. UNIT=190).           */ 01734000
*/*                                                                  */ 01735000
*/*   OPERATION - THE SIOT CHAIN IS SCANNED TO LOCATE EACH           */ 01736000
*/*               DEMAND REQUEST.                                    */ 01737000
*/*                                                                  */ 01738000
*/* ENTRY - (INLINE SUBROUTINE)                                      */ 01739000
*/*                                                                  */ 01740000
*/*   INPUT -                                                        */ 01741000
*/*      SIOT1P - PTR TO THE FIRST SIOT IN THE CHAIN                 */ 01742000
*/*        SIOTDMND - 1 FOR DEMAND REQUESTS                          */ 01743000
*/*        SIOUCBAD - FOR DEMAND REQUEST, ADDRESS OF THE             */ 01744000
*/*                   DEMANDED UCB                                   */ 01745000
*/*        SIOTNPTR - PTR TO THE NEXT SIOT                           */ 01746000
*/*      UCBPTR - PTR TO UCB                                         */ 01747000
*/*                                                                  */ 01748000
*/* EXIT - NORMAL - INLINE SUBROUTINE                                */ 01749000
*/*                                                                  */ 01750000
*/*   CONDITIONS - FUNCTION COMPLETED                                */ 01751000
*/*                                                                  */ 01752000
*/*   OUTPUT -                                                       */ 01753000
*/*       USEUCB - 1 = NO DEMAND REQ NEEDS THIS UCB                  */ 01754000
*/*              - 0 = A DEMAND REQ NEEDS THIS UCB                   */ 01755000
*/*                                                                  */ 01756000
*/********************************************************************/ 01757000
*USEUCB = ON;                          /*ASSUME UCB NOT DEMANDED     */ 01758000
         OI    USEUCB,B'00000010'                               03S0428 01759000
*RFY INDMSIOT BASED(SPTR);                                      03S0429 01760000
*SPTR = SIOT1P;                        /*POINT TO THE FIRST SIOT     */ 01761000
         L     @09,@PC00001                                     03S0430 01762000
         L     @09,ALCWAPTR(,@09)                               03S0430 01763000
         MVC   SPTR(4),SIOT1P(@09)                              03S0430 01764000
*DO WHILE (SPTR ^= ZERO                /*SCAN ALL SIOTS ..           */ 01765000
*    & USEUCB = ON);                   /*..UNTIL UCB FOUND DEMANDED  */ 01766000
         B     @DE00431                                         03S0431 01767000
@DL00431 DS    0H                                               03S0432 01768000
*  IF SIOTDMND = ON                    /*DEMAND REQ FOR THIS UCB ?   */ 01769000
*      & SIOUCBAD = UCBPTR THEN                                 03S0432 01770000
         L     @09,SPTR                                         03S0432 01771000
         TM    SIOTDMND(@09),B'10000000'                        03S0432 01772000
         BNO   @RF00432                                         03S0432 01773000
         SLR   @06,@06                                          03S0432 01774000
         ICM   @06,7,SIOUCBAD(@09)                              03S0432 01775000
         CR    UCBPTR,@06                                       03S0432 01776000
         BNE   @RF00432                                         03S0432 01777000
*    DO;                               /*YES,INDICATE UCB IS DEMANDED*/ 01778000
*      USEUCB = OFF;                                            03S0434 01779000
         NI    USEUCB,B'11111101'                               03S0434 01780000
*    END;                                                       03S0435 01781000
*  ELSE;                               /*NOT DEMAND REQ FOR THIS UCB */ 01782000
@RF00432 DS    0H                                               03S0437 01783000
*  SPTR = SIOTNPTR;                    /*POINT TO THE NEXT SIOT      */ 01784000
         L     @09,SPTR                                         03S0437 01785000
         L     @09,SIOTNPTR(,@09)                               03S0437 01786000
         ST    @09,SPTR                                         03S0437 01787000
*END;                                                           03S0438 01788000
@DE00431 ICM   @09,15,SPTR                                      03S0438 01789000
         BZ    @DC00431                                         03S0438 01790000
         TM    USEUCB,B'00000010'                               03S0438 01791000
         BO    @DL00431                                         03S0438 01792000
@DC00431 DS    0H                                               03S0439 01793000
*RFY INDMSIOT BASED;                                            03S0439 01794000
*            IF USEUCB = ON THEN       /*UCB NOT DEMANDED            */ 01795000
         TM    USEUCB,B'00000010'                               02S0440 01796000
         BNO   @RF00440                                         02S0440 01797000
*              AVAILCTR = AVAILCTR + ONE;  /*NO, INCREMENT COUNT OF     01798000
*                                        AVAIL                       */ 01799000
         AH    AVAILCTR,@CH00079                                02S0441 01800000
*            ELSE;                     /*UCB DEMANDED                */ 01801000
@RF00440 DS    0H                                               02S0443 01802000
*          END;                                                 02S0443 01803000
*        ELSE;                         /*UCB IS NOT AVAILABLE        */ 01804000
@RF00426 DS    0H                                               02S0445 01805000
*      END;                                                     02S0445 01806000
         AH    UCBCTR,@CH00079                                  02S0445 01807000
@DE00424 C     UCBCTR,GRPUCBNO(,GROUPPTR)                       02S0445 01808000
         BNH   @DL00424                                         02S0445 01809000
*      AREQPTR = ALGRQLTP;             /*POINT TO FIRST ALG REQ ENTRY*/ 01810000
         L     @09,@PC00001                                     02S0446 01811000
         L     @09,ALCWAPTR(,@09)                               02S0446 01812000
         L     @09,ALGTABP(,@09)                                02S0446 01813000
         L     AREQPTR,ALGRQLTP(,@09)                           02S0446 01814000
*      DO AREQCTR = ONE TO CVRNREQ     /*SCAN ALL ALG REQ LIST ENTRYS*/ 01815000
*          WHILE (AVAILCTR > ZERO);                             02S0447 01816000
         LA    AREQCTR,1                                        02S0447 01817000
         B     @DE00447                                         02S0447 01818000
@DL00447 LTR   AVAILCTR,AVAILCTR                                02S0447 01819000
         BNP   @DC00447                                         02S0447 01820000
*        IF CVRWUCBP ^= ZERO           /*IS REQ WAITING FOR VOLUME.. */ 01821000
*            & CVRVUPTR-> VOLALOC = OFF /*..STILL UNALLOCATED ..     */ 01822000
*            & CVRVUPTR->VURCVYPR = OFF /*..NOT HANDLED BY RTN YET   */ 01823000
*            & CVRSKFLG = OFF THEN     /*..AND CONSIDER BY THE ALG ? */ 01824000
         ICM   @09,3,CVRWUCBP(AREQPTR)                          02S0448 01825000
         BZ    @RF00448                                         02S0448 01826000
         L     @09,CVRVUPTR(,AREQPTR)                           02S0448 01827000
         TM    VOLALOC(@09),B'10000000'                         02S0448 01828000
         BNZ   @RF00448                                         02S0448 01829000
         TM    VURCVYPR(@09),B'00000001'                        02S0448 01830000
         BNZ   @RF00448                                         02S0448 01831000
         TM    CVRSKFLG(AREQPTR),B'10000000'                    02S0448 01832000
         BNZ   @RF00448                                         02S0448 01833000
*          DO;                         /*YES, PROCESS                */ 01834000
*            AGRPPTR = CVRGRPPT;       /*POINT TO FIRST GROUP LIST      01835000
*                                        ENTRY FOR THIS REQUEST      */ 01836000
         L     AGRPPTR,CVRGRPPT(,AREQPTR)                       02S0450 01837000
*            DO GRPCTR=ONE TO CVRNGRP; /*SCAN ALL GROUP LIST ENTRIES */ 01838000
         LA    GRPCTR,1                                         02S0451 01839000
         B     @DE00451                                         02S0451 01840000
@DL00451 DS    0H                                               02S0452 01841000
*              IF CVRGRPID = GRPID     /*SAME GROUP ID PICKED BY ALG */ 01842000
*                  & CVRGALL => ZERO THEN /*..FOR THIS REQUEST ?     */ 01843000
         LH    @02,CVRGRPID(,AGRPPTR)                           02S0452 01844000
         C     @02,GRPID(,GROUPPTR)                             02S0452 01845000
         BNE   @RF00452                                         02S0452 01846000
         ICM   @02,3,CVRGALL(AGRPPTR)                           02S0452 01847000
         BM    @RF00452                                         02S0452 01848000
*                DO;                   /*YES, PROCESS                */ 01849000
*                  AVAILCTR=AVAILCTR-ONE; /*DECREMENT AVAILABLE UNITS*/ 01850000
         BCTR  AVAILCTR,0                                       02S0454 01851000
*                  CVRGRPAL = ONE;     /*INDICATE ALLOC WILL USE GRP */ 01852000
         LA    @02,1                                            02S0455 01853000
         STH   @02,CVRGRPAL(,AGRPPTR)                           02S0455 01854000
*                  CVRALLCT = ONE;     /*INDICATE REQ COVERED BY        01855000
*                                        CALLER                      */ 01856000
         STH   @02,CVRALLCT(,AREQPTR)                           02S0456 01857000
*                  CVRVUPTR->VURCVYPR = ON; /*INDICATE REQ IS HANDLED*/ 01858000
         L     @02,CVRVUPTR(,AREQPTR)                           02S0457 01859000
         OI    VURCVYPR(@02),B'00000001'                        02S0457 01860000
*                  CVRFCALL = OFF;     /*INDICATE 'REDUCE' FUNCTION  */ 01861000
         L     @02,@PC00001                                     02S0458 01862000
         L     @02,ALCWAPTR(,@02)                               02S0458 01863000
         L     @02,ALGTABP(,@02)                                02S0458 01864000
         L     @01,ALGPARMP(,@02)                               02S0458 01865000
         NI    CVRFCALL(@01),B'11101111'                        02S0458 01866000
*                  CALL IEFAB480 (ALGPARMP); /*REDUCE SOLUTIONS      */ 01867000
         ST    @02,@AL00001                                     02S0459 01868000
         L     @15,@CV00138                                     02S0459 01869000
         LA    @01,@AL00001                                     02S0459 01870000
         BALR  @14,@15                                          02S0459 01871000
*                  RTNCODE = REG15;    /*SAVE THE RETURN CODE        */ 01872000
         LR    RTNCODE,REG15                                    02S0460 01873000
*                  IF RTNCODE ^= SUCCESS THEN /*ANY ERRORS ?         */ 01874000
         LTR   RTNCODE,RTNCODE                                  02S0461 01875000
         BZ    @RF00461                                         02S0461 01876000
*                    REASONCD = GETMNERR; /*YES,INDICATE GETMAIN EROR*/ 01877000
         L     @02,@PC00001                                     02S0462 01878000
         L     @02,ALCWAPTR(,@02)                               02S0462 01879000
         L     @02,FAILRSCP(,@02)                               02S0462 01880000
         MVC   REASONCD(2,@02),@CH00109                         02S0462 01881000
*                  ELSE;               /*NO ERRORS                   */ 01882000
@RF00461 DS    0H                                               02S0464 01883000
*                END;                                           02S0464 01884000
*              ELSE;                   /*GROUP IN QUESTION NOT PICKED*/ 01885000
@RF00452 DS    0H                                               02S0466 01886000
*              AGRPPTR=AGRPPTR+LENGTH(CVRGPLST); /*POINT TO NEXT GRP */ 01887000
         AH    AGRPPTR,@CH00061                                 02S0466 01888000
*            END;                                               02S0467 01889000
         AH    GRPCTR,@CH00079                                  02S0467 01890000
@DE00451 CH    GRPCTR,CVRNGRP(,AREQPTR)                         02S0467 01891000
         BNH   @DL00451                                         02S0467 01892000
*          END;                                                 02S0468 01893000
*        ELSE;                         /*ALG REQ NOT TO PROCESS      */ 01894000
@RF00448 DS    0H                                               02S0470 01895000
*        AREQPTR=AREQPTR+LENGTH(CVRRQLST); /*POINT TO NEXT REQ ENTRY */ 01896000
         AL    AREQPTR,@CF01076                                 02S0470 01897000
*      END;                                                     02S0471 01898000
         AH    AREQCTR,@CH00079                                 02S0471 01899000
@DE00447 L     @09,@PC00001                                     02S0471 01900000
         L     @09,ALCWAPTR(,@09)                               02S0471 01901000
         L     @09,ALGTABP(,@09)                                02S0471 01902000
         L     @09,ALGPARMP(,@09)                               02S0471 01903000
         CH    AREQCTR,CVRNREQ(,@09)                            02S0471 01904000
         BNH   @DL00447                                         02S0471 01905000
@DC00447 DS    0H                                               02S0472 01906000
*    END;                                                       02S0472 01907000
*  ELSE;                               /*GROUP IS NOT NEEDED         */ 01908000
@RF00420 DS    0H                                               02S0474 01909000
*END;                                                           02S0474 01910000
         LA    @04,1                                            02S0474 01911000
         AL    @04,GROUPNO                                      02S0474 01912000
@DE00418 ST    @04,GROUPNO                                      02S0474 01913000
         L     @15,@PC00001                                     02S0474 01914000
         L     @01,ALCWAPTR(,@15)                               02S0474 01915000
         L     @01,EDTABPTR(,@01)                               02S0474 01916000
         L     @01,EDTMSKTP(,@01)                               02S0474 01917000
         L     @15,GMTENTLN(,@01)                               02S0474 01918000
         SLA   @15,3                                            02S0474 01919000
         CR    @04,@15                                          02S0474 01920000
         BNH   @DL00418                                         02S0474 01921000
*VUPTR = VOLUNPTR;                     /*POINT TO FIRST VU ENTRY     */ 01922000
         L     @04,@PC00001                                     02S0475 01923000
         L     @04,ALCWAPTR(,@04)                               02S0475 01924000
         MVC   VUPTR(4),VOLUNPTR(@04)                           02S0475 01925000
*DO VUCTR = ONE TO VOLUNSZE/LENGTH(VOLUNTAB); /*SCAN VU TABLE        */ 01926000
         LA    VUCTR,1                                          02S0476 01927000
         B     @DE00476                                         02S0476 01928000
@DL00476 DS    0H                                               02S0477 01929000
*  IF (VOLALGTP ^= ZERO & VOLALGTP->CVRWUCBP ^= ZERO)           02S0477 01930000
*    | VUDMNDOF = ON | VUDMNDAL = ON THEN                       02S0477 01931000
         L     @06,VUPTR                                        02S0477 01932000
         L     @06,VOLALGTP(,@06)                               02S0477 01933000
         LTR   @06,@06                                          02S0477 01934000
         BZ    @GL00040                                         02S0477 01935000
         ICM   @04,3,CVRWUCBP(@06)                              02S0477 01936000
         BNZ   @RT00477                                         02S0477 01937000
@GL00040 L     @06,VUPTR                                        02S0477 01938000
         TM    VUDMNDOF(@06),B'00110000'                        02S0477 01939000
         BZ    @RF00477                                         02S0477 01940000
@RT00477 DS    0H                                               02S0478 01941000
*    VUDNALOC = OFF;                   /*ALLOW REQ TO BE ALLOC'D     */ 01942000
         L     @06,VUPTR                                        02S0478 01943000
         NI    VUDNALOC(@06),B'11110111'                        02S0478 01944000
*  ELSE;                                                        02S0479 01945000
@RF00477 DS    0H                                               02S0480 01946000
*  IF VOLSIOTP->SIOTDMND = ON                                   02S0480 01947000
*    & VOLALGTP ^= ZERO                                         02S0480 01948000
*    & VOLALGTP->CVRWUCBP ^= ZERO                               02S0480 01949000
*    & VUDMNDOF = OFF & VUDMNDAL = OFF THEN                     02S0480 01950000
         L     @06,VUPTR                                        02S0480 01951000
         L     @04,VOLSIOTP(,@06)                               02S0480 01952000
         TM    SIOTDMND(@04),B'10000000'                        02S0480 01953000
         BNO   @RF00480                                         02S0480 01954000
         L     @04,VOLALGTP(,@06)                               02S0480 01955000
         LTR   @04,@04                                          02S0480 01956000
         BZ    @RF00480                                         02S0480 01957000
         ICM   @15,3,CVRWUCBP(@04)                              02S0480 01958000
         BZ    @RF00480                                         02S0480 01959000
         TM    VUDMNDOF(@06),B'00110000'                        02S0480 01960000
         BNZ   @RF00480                                         02S0480 01961000
*    VURCVYPR=ON;                      /*MARK REQ PROCESSED          */ 01962000
         OI    VURCVYPR(@06),B'00000001'                        02S0481 01963000
*  ELSE;                                                        02S0482 01964000
@RF00480 DS    0H                                               02S0483 01965000
*  VUPTR = VUPTR + LENGTH(VOLUNTAB);   /*POINT TO NEXT VU            */ 01966000
         LA    @06,28                                           02S0483 01967000
         AL    @06,VUPTR                                        02S0483 01968000
         ST    @06,VUPTR                                        02S0483 01969000
*END;                                                           02S0484 01970000
         AH    VUCTR,@CH00079                                   02S0484 01971000
@DE00476 L     @06,@PC00001                                     02S0484 01972000
         L     @06,ALCWAPTR(,@06)                               02S0484 01973000
         L     @00,VOLUNSZE(,@06)                               02S0484 01974000
         SRDA  @00,32                                           02S0484 01975000
         D     @00,@CF01076                                     02S0484 01976000
         CR    VUCTR,@01                                        02S0484 01977000
         BNH   @DL00476                                         02S0484 01978000
*                        IF RTNCODE = SUCCESS THEN /*ANY ERRORS ?    */ 01979000
         LTR   RTNCODE,RTNCODE                                  01S0485 01980000
         BNZ   @RF00485                                         01S0485 01981000
*                          DO;         /*NO, CONTINUE..              */ 01982000
*                            CALL IEFAB487 (ALCWAPTR);/*RECOVERY OPR    01983000
*                                            EXCHANGE                */ 01984000
         L     @04,@PC00001                                     01S0487 01985000
         ST    @04,@AL00001                                     01S0487 01986000
         L     @15,@CV00141                                     01S0487 01987000
         LA    @01,@AL00001                                     01S0487 01988000
         BALR  @14,@15                                          01S0487 01989000
*                            RTNCODE = REG15;/*SAVE THE RETURN CODE  */ 01990000
         LR    RTNCODE,REG15                                    01S0488 01991000
*                          END;                                 01S0489 01992000
*                        ELSE;         /*ERROR                       */ 01993000
@RF00485 DS    0H                                               01S0491 01994000
*                      END;                                     01S0491 01995000
*                    ELSE;             /*ALL REQS ALREADY ALLOC'D    */ 01996000
@RF00408 DS    0H                                               01S0493 01997000
*                  END;                                         01S0493 01998000
*                ELSE;                 /*ERROR FROM IEFAB478         */ 01999000
@RF00316 DS    0H                                               01S0495 02000000
*              END;                                             01S0495 02001000
*            ELSE;                     /*ERROR                       */ 02002000
@RF00312 DS    0H                                               01S0497 02003000
*          END;                                                 01S0497 02004000
*        ELSE;                         /*ERROR UNALLOCATING          */ 02005000
@RF00248 DS    0H                                               01S0499 02006000
*      END;                                                     01S0499 02007000
*    ELSE;                             /*REQS NOT COVERED BY 1 GEN   */ 02008000
@RF00209 DS    0H                                               01S0501 02009000
*  END;                                                         01S0501 02010000
*ELSE                                  /*ALL REQS NOT COVERED BY ALG */ 02011000
*  DO;                                                          01S0502 02012000
         B     @RC00087                                         01S0502 02013000
@RF00087 DS    0H                                               01S0503 02014000
*    IF RTNCODE = PARTALOC THEN        /*PARTIALLY COVERED ?         */ 02015000
         CH    RTNCODE,@CH00055                                 01S0503 02016000
         BNE   @RF00503                                         01S0503 02017000
*        SAVNOCOV = NOCOVER;           /*YES, UNABLE-TO-ALOC @ZA01569*/ 02018000
         MVC   SAVNOCOV(2),@CH00111                             01S0504 02019000
*    ELSE                              /*ERROR MUST BE GETMAIN       */ 02020000
*        REASONCD = GETMNERR;          /*SET GETMAIN ERR REASON CODE */ 02021000
         B     @RC00503                                         01S0505 02022000
@RF00503 L     @04,@PC00001                                     01S0505 02023000
         L     @04,ALCWAPTR(,@04)                               01S0505 02024000
         L     @04,FAILRSCP(,@04)                               01S0505 02025000
         MVC   REASONCD(2,@04),@CH00109                         01S0505 02026000
*  END;                                                         01S0506 02027000
@RC00503 DS    0H                                               01S0507 02028000
*IF SAVNOCOV = NOCOVER THEN            /*UNABLE TO ALLOCATE? @ZA01569*/ 02029000
@RC00087 CLC   SAVNOCOV(2),@CH00111                             01S0507 02030000
         BNE   @RF00507                                         01S0507 02031000
*  DO;                                 /*YES -               @ZA01569*/ 02032000
*    RFY VOLUNTAB BASED(CVRVUPTR);     /*ASSOCIATE VU ENTRY AND COVER   02033000
*                                        REQUEST LIST ENTRY  @ZA01569*/ 02034000
*    RFY INDMSIOT BASED(VOLSIOTP);     /*ASSOCIATE VU ENTRY WITH        02035000
*                                        ITS SIOT            @ZA01569*/ 02036000
*    AREQPTR = ALGRQLTP;               /*FIRST REQ LIST ENTRY@ZA01569*/ 02037000
         L     @04,@PC00001                                     01S0511 02038000
         L     @04,ALCWAPTR(,@04)                               01S0511 02039000
         L     @04,ALGTABP(,@04)                                01S0511 02040000
         L     AREQPTR,ALGRQLTP(,@04)                           01S0511 02041000
*    RTNCODE = FAILURE;                /*INDICATE ERROR      @ZA01569*/ 02042000
         LA    RTNCODE,4                                        01S0512 02043000
*    DO AREQCTR = ONE TO CVRNREQ;      /*SCAN ALL ENTRIES    @ZA01569*/ 02044000
         LA    AREQCTR,1                                        01S0513 02045000
         B     @DE00513                                         01S0513 02046000
@DL00513 DS    0H                                               01S0514 02047000
*      IF VDEVREQD = ON &              /*REQ REQUIRES UNITS? @ZA01569*/ 02048000
*         VOLALOC = OFF &              /*NOT ALLOCATED YET?  @ZA01569*/ 02049000
*         CVRSKFLG = OFF &             /*ALG DID NOT SKIP?   @ZA01569*/ 02050000
*         CVRNEED > ZERO THEN          /*ARE UNITS STILL REQUIRED       02051000
*                                        FOR THIS REQUEST?   @ZA01569*/ 02052000
         L     @07,CVRVUPTR(,AREQPTR)                           01S0514 02053000
         TM    VDEVREQD(@07),B'00100000'                        01S0514 02054000
         BNO   @RF00514                                         01S0514 02055000
         TM    VOLALOC(@07),B'10000000'                         01S0514 02056000
         BNZ   @RF00514                                         01S0514 02057000
         TM    CVRSKFLG(AREQPTR),B'10000000'                    01S0514 02058000
         BNZ   @RF00514                                         01S0514 02059000
         ICM   @04,3,CVRNEED(AREQPTR)                           01S0514 02060000
         BNP   @RF00514                                         01S0514 02061000
*        DO;                           /*YES -               @ZA01569*/ 02062000
*          SIOTRSNC = NOCOVER;         /*SET DD-RELATED CODE FOR        02063000
*                                        UNABLE TO ALLOCATE  @ZA01569*/ 02064000
         L     @07,VOLSIOTP(,@07)                               01S0516 02065000
         MVC   SIOTRSNC(2,@07),@CH00111                         01S0516 02066000
*        END;                          /*                    @ZA01569*/ 02067000
*      ELSE;                           /*                    @ZA01569*/ 02068000
@RF00514 DS    0H                                               01S0519 02069000
*      AREQPTR = AREQPTR + LENGTH(CVRRQLST);/*PICK UP NEXT REQUEST      02070000
*                                        LIST ENTRY          @ZA01569*/ 02071000
         AL    AREQPTR,@CF01076                                 01S0519 02072000
*    END;                              /*                    @ZA01569*/ 02073000
         AH    AREQCTR,@CH00079                                 01S0520 02074000
@DE00513 L     @07,@PC00001                                     01S0520 02075000
         L     @07,ALCWAPTR(,@07)                               01S0520 02076000
         L     @07,ALGTABP(,@07)                                01S0520 02077000
         L     @07,ALGPARMP(,@07)                               01S0520 02078000
         CH    AREQCTR,CVRNREQ(,@07)                            01S0520 02079000
         BNH   @DL00513                                         01S0520 02080000
*    RFY VOLUNTAB BASED(VUPTR);        /*RESET BASE          @ZA01569*/ 02081000
*    RFY INDMSIOT BASED(SIOTPTR);      /*RESET BASE          @ZA01569*/ 02082000
*  END;                                /*                    @ZA01569*/ 02083000
*RETURN CODE(RTNCODE);                 /*RETURN TO CALLER            */ 02084000
@RF00507 L     @13,4(,@13)                                      01S0524 02085000
         L     @00,@SIZDATD                                     01S0524 02086000
         LR    @01,@10                                          01S0524 02087000
         FSPACE   R,LV=(0),A=(1)                                        02088000
         LR    @15,@05                                          01S0524 02089000
         L     @14,12(,@13)                                     01S0524 02090000
         LM    @00,@12,20(@13)                                  01S0524 02091000
         BR    @14                                              01S0524 02092000
*TURNBIT1: PROC;                                                02S0525 02093000
TURNBIT1 STM   @14,@12,12(@13)                                  02S0525 02094000
*/*******************************************************************/  02095000
*/*                                                                  */ 02096000
*/* SEGMENT NAME - TURNBIT1                                          */ 02097000
*/*                                                                  */ 02098000
*/* DESCRIPTIVE NAME - TURN ON A BIT IN A GROUP MASK                 */ 02099000
*/*                                                                  */ 02100000
*/* FUNCTION -                                                       */ 02101000
*/*     GIVEN A GROUP ID, THIS ROUTINE TURNS ON THE GROUP MASK       */ 02102000
*/*     BIT ASSOCIATED WITH THAT GROUP ID.                           */ 02103000
*/*                                                                  */ 02104000
*/*   OPERATION - (THE OPERATION IS DOCUMENTED BY THE CODE ITSELF)   */ 02105000
*/*                                                                  */ 02106000
*/* ENTRY - TURNBIT1 (INTERNAL PROC)                                 */ 02107000
*/*                                                                  */ 02108000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 02109000
*/*                                                                  */ 02110000
*/*   INPUT -                                                        */ 02111000
*/*     THEGRPID - GROUP ID                                          */ 02112000
*/*     MASKPTR - PTR TO THE GROUP MASK (GRPMSK)                     */ 02113000
*/*                                                                  */ 02114000
*/* EXIT - NORMAL - RETURN TO CALLER (INTERNAL PROC)                 */ 02115000
*/*                                                                  */ 02116000
*/*   CONDITIONS - BIT TURNED ON IN GROUP MASK                       */ 02117000
*/*                                                                  */ 02118000
*/*   OUTPUT -                                                       */ 02119000
*/*      BIT TURNED ON IN GROUP MASK                                 */ 02120000
*/*                                                                  */ 02121000
*/*   RETURN CODES - (NONE)                                          */ 02122000
*/*                                                                  */ 02123000
*/* EXIT - ERROR - (NONE)                                            */ 02124000
*/*                                                                  */ 02125000
*/********************************************************************/ 02126000
*GRMSKBYT = THEGRPID/LENGTH(GRPMSK);   /*CALCULATE BYTE IN GROUP MASK*/ 02127000
         LA    @05,8                                            02S0526 02128000
         LR    @00,THEGRPID                                     02S0526 02129000
         SRDA  @00,32                                           02S0526 02130000
         DR    @00,@05                                          02S0526 02131000
         LR    GRMSKBYT,@01                                     02S0526 02132000
*GRMSKBIT = THEGRPID//LENGTH(GRPMSK);  /*CALCULATE BIT POSITION OF ID*/ 02133000
         LR    @00,THEGRPID                                     02S0527 02134000
         SRDA  @00,32                                           02S0527 02135000
         D     @00,@CF00055                                     02S0527 02136000
         LR    GRMSKBIT,@00                                     02S0527 02137000
*IF GRMSKBIT = ZERO THEN               /*GROUP ID MULTIPLE OF 8  ?   */ 02138000
         CH    GRMSKBIT,@CH00123                                02S0528 02139000
         BNE   @RF00528                                         02S0528 02140000
*  GRMSKBIT = LENGTH(GRPMSK);          /*YES, SET BIT POSITION = 8   */ 02141000
         LR    GRMSKBIT,@05                                     02S0529 02142000
*ELSE                                  /*GROUP ID NOT MULTIPLE OF 8  */ 02143000
*  GRMSKBYT = GRMSKBYT + ONE;          /*INCREMENT BYTE OF GROUP ID  */ 02144000
         B     @RC00528                                         02S0530 02145000
@RF00528 LA    GRMSKBYT,1(,GRMSKBYT)                            02S0530 02146000
*GRPMSK(GRMSKBYT) =                    /*TURN ON BIT IN GROUP MASK   */ 02147000
*    GRPMSK(GRMSKBYT) | MASKTAB(GRMSKBIT);                      02S0531 02148000
@RC00528 L     @05,MASKPTR                                      02S0531 02149000
         ALR   @05,GRMSKBYT                                     02S0531 02150000
         BCTR  @05,0                                            02S0531 02151000
         LA    @01,MASKTAB-1(GRMSKBIT)                          02S0531 02152000
         OC    GRPMSK(1,@05),0(@01)                             02S0531 02153000
*END TURNBIT1;                                                  02S0532 02154000
@EL00002 DS    0H                                               02S0532 02155000
@EF00002 DS    0H                                               02S0532 02156000
@ER00002 LM    @14,@12,12(@13)                                  02S0532 02157000
         BR    @14                                              02S0532 02158000
*TESTBIT: PROC;                                                 02S0533 02159000
TESTBIT  STM   @14,@12,@SA00003                                 02S0533 02160000
*/********************************************************************/ 02161000
*/*                                                                  */ 02162000
*/* SEGMENT NAME - TESTBIT                                           */ 02163000
*/*                                                                  */ 02164000
*/* DESCRIPTIVE NAME - TEST BIT IN GROUP MASK                        */ 02165000
*/*                                                                  */ 02166000
*/* FUNCTION -                                                       */ 02167000
*/*      THIS SUBROUTINE DETERMINES IF A PARTICULAR BIT IN A         */ 02168000
*/*      GROUP MASK IS ON OR OFF. THE GROUP MASK IS A VARIABLE       */ 02169000
*/*      LENGTH BIT MASK POINTED TO BY MASKPTR . THE ONE-ORIGIN      */ 02170000
*/*      INDEX OF THE BIT TO BE TESTED IS CONTAINED IN FIELD         */ 02171000
*/*      GROUPNO.                                                    */ 02172000
*/*                                                                  */ 02173000
*/*   OPERATION -                                                    */ 02174000
*/*      THIS SEGMENT GENERATES BAL INSTRUCTIONS                     */ 02175000
*/*                                                                  */ 02176000
*/*      ONE IS SUBTRACTED FROM THE GROUPNO TO PRODUCE A ZERO-ORIGIN */ 02177000
*/*      INDEX. THE INDEX IS THEN DIVIDED BY EIGHT TO DETERMINE THE  */ 02178000
*/*      BYTE (AND REMAINDER)  OF THE BIT BEING TESTED (IN A SRDL    */ 02179000
*/*      INSTRUCTION, THE ODD REGISTER GETS THE BITS SHIFTED OUT OF  */ 02180000
*/*      THE EVEN REGISTER). THE REMAINDER IS ALIGNED IN A REGISTER  */ 02181000
*/*      AND IS USED TO INDICATE THE BIT POSITION IN THE BYTE. THIS  */ 02182000
*/*      BIT POSITION IS USED IN A TEST-UNDER-MASK INSTRUCTION VIA   */ 02183000
*/*      EXECUTE.                                                    */ 02184000
*/*                                                                  */ 02185000
*/*      EXAMPLE - IF GROUPNO = 10, THIS OPERATION WILL DETERMINE    */ 02186000
*/*                THE BIT IS 1 BYTE AFTER THE BEGINNING OF THE      */ 02187000
*/*                GROUP MASK AND IS THE SECOND BIT POSITION.        */ 02188000
*/*                                                                  */ 02189000
*/* ENTRY - THIS CODE IS AN INLINE SUBROUTINE WHICH IS ENTERED       */ 02190000
*/*         AT THE TOP.                                              */ 02191000
*/*                                                                  */ 02192000
*/*   PURPOSE  -  TO DETERMINE IF A PARTICULAR BIT IN A GROUP        */ 02193000
*/*               MASK IS ON OR OFF.                                 */ 02194000
*/*                                                                  */ 02195000
*/*   INPUT -                                                        */ 02196000
*/*       MASKPTR - PTR TO GROUP MASK                                */ 02197000
*/*       GROUPNO - 1-ORIGIN INDEX INTO MASK OF THE BIT TO BE TESTED */ 02198000
*/*       BITRTN - BIT FOR RESULTS OF TEST TO BE RETURNED IN         */ 02199000
*/*                                                                  */ 02200000
*/* EXIT - NORMAL - THIS CODE IS AN INLINE SUBROUTINE WHICH          */ 02201000
*/*                 EXITS FROM THE BOTTOM.                           */ 02202000
*/*                                                                  */ 02203000
*/*   CONDITION - BIT TESTED AND RESULTS INDICATED.                  */ 02204000
*/*                                                                  */ 02205000
*/*   OUTPUT -                                                       */ 02206000
*/*       BITRTN - SET TO 1 IF BIT WAS ON                            */ 02207000
*/*              - SET TO 0 IF BIT WAS OFF                           */ 02208000
*/*                                                                  */ 02209000
*/*   RETURN CODES - (NONE)                                          */ 02210000
*/*                                                                  */ 02211000
*/********************************************************************/ 02212000
*BITRTN = OFFVALUE;                    /*ASSUME BIT IS OFF           */ 02213000
         NI    BITRTN,B'01111111'                               02S0534 02214000
*RFY (EVENREG,ODDREG,MASKREG) RSTD;    /*RESTRICT USE OF REGS 3,4+5  */ 02215000
*GEN REFS(EVENREG,GROUPNO,MASKPTR,ODDREG,MASKREG,TMINST)        02S0536 02216000
*    FLOWS(BITOFF);                                             02S0536 02217000
        L     EVENREG,GROUPNO         PUT BIT INDEX INTO REG            02218000
        BCTR  EVENREG,0               DECREMENT INDEX FOR ZERO ORIGIN   02219000
        SRDL  EVENREG,3               DIVIDE INDEX BY 8.SAVE REMAINDER  02220000
        A     EVENREG,MASKPTR         POINT TO CORRECT BYTE             02221000
        SRL   ODDREG,29               ALIGN REMAINDER IS REG            02222000
        LA    MASKREG,X'80'           INSERT 0-BIT MASK                 02223000
        SRL   MASKREG,0(ODDREG)       POSITION MASK BIT                 02224000
        EX    MASKREG,TMINST          TEST IF BIT IS ON                 02225000
        BNO   BITOFF                  BRANCH IF BIT NOT ON              02226000
*RFY (EVENREG,ODDREG,MASKREG) UNRSTD;  /*UNRESTRICT REGS 3,4, AND 5  */ 02227000
*BITRTN = ONVALUE;                     /*INDICATE BIT WAS ON         */ 02228000
         OI    BITRTN,B'10000000'                               02S0538 02229000
*BITOFF:;                                                       02S0539 02230000
*RETURN;                                                        02S0540 02231000
@EL00003 DS    0H                                               02S0540 02232000
@EF00003 DS    0H                                               02S0540 02233000
@ER00003 LM    @14,@12,@SA00003                                 02S0540 02234000
         BR    @14                                              02S0540 02235000
*END TESTBIT;                                                   02S0541 02236000
         B     @EL00003                                         02S0541 02237000
*END IEFAB486                          /*END OF OFFLINE/ALCDS ALLOC  */ 02238000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 02239000
*/*%INCLUDE SYSLIB  (A486SPEC)                                        * 02240000
*/*%INCLUDE SYSLIB  (A486DATA)                                        * 02241000
*/*%INCLUDE SYSLIB  (TBITDATA)                                        * 02242000
*/*%INCLUDE SYSLIB  (IEFZB421)                                        * 02243000
*/*%INCLUDE SYSLIB  (IEFZB422)                                        * 02244000
*/*%INCLUDE SYSLIB  (IEFZB423)                                        * 02245000
*/*%INCLUDE SYSLIB  (IEFZB425)                                        * 02246000
*/*%INCLUDE SYSLIB  (IEFZB426)                                        * 02247000
*/*%INCLUDE SYSLIB  (IEFZB427)                                        * 02248000
*/*%INCLUDE SYSLIB  (IEFZB428)                                        * 02249000
*/*%INCLUDE SYSLIB  (IEFZB431)                                        * 02250000
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        * 02251000
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                        * 02252000
*/*%INCLUDE SYSLIB  (ALGAPREP)                                        * 02253000
*/*%INCLUDE SYSLIB  (APRESPEC)                                        * 02254000
*/*%INCLUDE SYSLIB  (FORCMULT)                                        * 02255000
*/*%INCLUDE SYSLIB  (MULTSPEC)                                        * 02256000
*/*%INCLUDE SYSLIB  (TRYGENIC)                                        * 02257000
*/*%INCLUDE SYSLIB  (TRYGSPEC)                                        * 02258000
*/*%INCLUDE SYSLIB  (MARKINEL)                                        * 02259000
*/*%INCLUDE SYSLIB  (MARKSPEC)                                        * 02260000
*/*%INCLUDE SYSLIB  (REARANGE)                                        * 02261000
*/*%INCLUDE SYSLIB  (REARSPEC)                                        * 02262000
*/*%INCLUDE SYSLIB  (ENDVALID)                                        * 02263000
*/*%INCLUDE SYSLIB  (VENDSPEC)                                        * 02264000
*/*%INCLUDE SYSLIB  (FREGROUP)                                        * 02265000
*/*%INCLUDE SYSLIB  (FREGSPEC)                                        * 02266000
*/*%INCLUDE SYSLIB  (FINDGRP )                                        * 02267000
*/*%INCLUDE SYSLIB  (FGRPSPEC)                                        * 02268000
*/*%INCLUDE SYSLIB  (SETHANDL)                                        * 02269000
*/*%INCLUDE SYSLIB  (SHANSPEC)                                        * 02270000
*/*%INCLUDE SYSLIB  (DMNDNEED)                                        * 02271000
*/*%INCLUDE SYSLIB  (DNEDSPEC)                                        * 02272000
*/*%INCLUDE SYSLIB  (TURNBIT1)                                        * 02273000
*/*%INCLUDE SYSLIB  (TURNSPEC)                                        * 02274000
*/*%INCLUDE SYSLIB  (TESTBIT )                                        * 02275000
*/*%INCLUDE SYSLIB  (TBITSPEC)                                        * 02276000
*;                                                              01S0542 02277000
@DATA    DS    0H                                                       02278000
@CH00123 DC    H'0'                                                     02279000
@CH00079 DC    H'1'                                                     02280000
@CH00109 DC    H'2'                                                     02281000
@CH00075 DC    H'4'                                                     02282000
@CH00111 DC    H'6'                                                     02283000
@CH00033 DC    H'12'                                                    02284000
@CH00061 DC    H'16'                                                    02285000
@SX01098 XC    NEEDMASK(0),NEEDMASK                                     02286000
@SX01100 XC    KEEPMASK(0,@01),KEEPMASK(@01)                            02287000
@SO01104 OC    NEEDMASK(0),VERIFYMK(@01)                                02288000
@DATD    DSECT                                                          02289000
         DS    0F                                                       02290000
@SA00001 DS    18F                                                      02291000
@PC00001 DS    1F                                                       02292000
@SA00003 DS    15F                                                      02293000
@AL00001 DS    5A                                                       02294000
@TF00001 DS    F                                                        02295000
IEFAB486 CSECT                                                          02296000
         DS    0F                                                       02297000
@CF00055 DC    F'8'                                                     02298000
@CH00055 EQU   @CF00055+2                                               02299000
@CF01076 DC    F'28'                                                    02300000
@CH01076 EQU   @CF01076+2                                               02301000
@DATD    DSECT                                                          02302000
         DS    0D                                                       02303000
MASKPTR  DS    A                                                        02304000
SPTR     DS    A                                                        02305000
VUPTR    DS    A                                                        02306000
FNDGRPID DS    F                                                        02307000
GENCTR   DS    F                                                        02308000
GROUPNO  DS    F                                                        02309000
EDTPTR   DS    A                                                        02310000
LUVPTR   DS    A                                                        02311000
GENPTR   DS    A                                                        02312000
GRPTABP  DS    A                                                        02313000
EDLGNTP  DS    A                                                        02314000
EDLUCBLP DS    A                                                        02315000
VMVREQBP DS    A                                                        02316000
SAVNOCOV DS    H                                                        02317000
NEEDMASK DS    CL240                                                    02318000
SAVGENID DS    CL4                                                      02319000
SWITCHES DS    BL1                                                      02320000
         ORG   SWITCHES                                                 02321000
BITRTN   DS    BL1                                                      02322000
NEEDUNAL EQU   SWITCHES+0                                               02323000
GENFNDSW EQU   SWITCHES+0                                               02324000
GRPFOUND EQU   SWITCHES+0                                               02325000
NDEVALID EQU   SWITCHES+0                                               02326000
DOVALIDS EQU   SWITCHES+0                                               02327000
USEUCB   EQU   SWITCHES+0                                               02328000
UCBFOUND EQU   SWITCHES+0                                               02329000
         ORG   SWITCHES+1                                               02330000
IEFAB486 CSECT                                                          02331000
         DS    0F                                                       02332000
@SIZDATD DC    AL1(230)                                                 02333000
         DC    AL3(@ENDDATD-@DATD)                                      02334000
@CV00134 DC    V(IEFAB4FA)                                              02335000
@CV00135 DC    V(IEFAB474)                                              02336000
@CV00136 DC    V(IEFAB477)                                              02337000
@CV00137 DC    V(IEFAB478)                                              02338000
@CV00138 DC    V(IEFAB480)                                              02339000
@CV00139 DC    V(IEFAB481)                                              02340000
@CV00140 DC    V(IEFAB441)                                              02341000
@CV00141 DC    V(IEFAB487)                                              02342000
         DS    0D                                                       02343000
@CB00103 DC    B'00000000'                                              02344000
@CB00107 DC    B'00001000'                                              02345000
NOVOLSER DC    X'000000000000'                                          02346000
MASKTAB  DC    X'80'                                                    02347000
         DC    X'40'                                                    02348000
         DC    X'20'                                                    02349000
         DC    X'10'                                                    02350000
         DC    X'08'                                                    02351000
         DC    X'04'                                                    02352000
         DC    X'02'                                                    02353000
         DC    X'01'                                                    02354000
IEFAB486 CSECT                                                          02355000
         DS   0H                                                        02356000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   02357000
IEFAB486 CSECT                                                          02358000
TMINST  TM    0(EVENREG),0            TEST OF CORRECT BYTE. MASK=BIT    02359000
@DATD    DSECT                                                          02360000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02361000
@ENDDATD EQU   *                                                        02362000
IEFAB486 CSECT                                                          02363000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02364000
@01      EQU   01                                                       02365000
@02      EQU   02                                                       02366000
@03      EQU   03                                                       02367000
@04      EQU   04                                                       02368000
@05      EQU   05                                                       02369000
@06      EQU   06                                                       02370000
@07      EQU   07                                                       02371000
@08      EQU   08                                                       02372000
@09      EQU   09                                                       02373000
@10      EQU   10                                                       02374000
@11      EQU   11                                                       02375000
@12      EQU   12                                                       02376000
@13      EQU   13                                                       02377000
@14      EQU   14                                                       02378000
@15      EQU   15                                                       02379000
VUCTR    EQU   @07                                                      02380000
UCBCTR   EQU   @04                                                      02381000
THEGRPID EQU   @03                                                      02382000
SAVEAFID EQU   @08                                                      02383000
RTNCODE  EQU   @05                                                      02384000
MASKBYTE EQU   @02                                                      02385000
GRPCTR   EQU   @09                                                      02386000
GRMSKBYT EQU   @02                                                      02387000
GRMSKBIT EQU   @04                                                      02388000
ECOUNT   EQU   @02                                                      02389000
AVAILCTR EQU   @07                                                      02390000
AREQCTR  EQU   @06                                                      02391000
AGRPCTR  EQU   @02                                                      02392000
UCBPTR   EQU   @02                                                      02393000
SIOTPTR  EQU   @06                                                      02394000
GRPPTR   EQU   @03                                                      02395000
GROUPPTR EQU   @08                                                      02396000
EDLPTR   EQU   @03                                                      02397000
AREQPTR  EQU   @03                                                      02398000
AGRPPTR  EQU   @04                                                      02399000
REG15    EQU   @15                                                      02400000
EVENREG  EQU   @04                                                      02401000
MASKREG  EQU   @03                                                      02402000
ODDREG   EQU   @05                                                      02403000
GRPMSK   EQU   0                                                        02404000
IOSLUT   EQU   0                                                        02405000
KEEPMASK EQU   0                                                        02406000
REASONCD EQU   0                                                        02407000
UNLKMASK EQU   0                                                        02408000
VERIFYMK EQU   0                                                        02409000
WAITMASK EQU   0                                                        02410000
EDTHDR   EQU   0                                                        02411000
EDTLUVSP EQU   EDTHDR                                                   02412000
EDTGENSP EQU   EDTHDR+4                                                 02413000
EDTGRPSP EQU   EDTHDR+8                                                 02414000
EDTUCBSP EQU   EDTHDR+12                                                02415000
EDTMSKTP EQU   EDTHDR+16                                                02416000
LUVSECT  EQU   0                                                        02417000
LUVHDR   EQU   LUVSECT                                                  02418000
LUVENTRY EQU   0                                                        02419000
LUVGMTP  EQU   LUVENTRY+12                                              02420000
LUVFLAGS EQU   LUVENTRY+24                                              02421000
GENSECT  EQU   0                                                        02422000
GENHDR   EQU   GENSECT                                                  02423000
GENENTRY EQU   0                                                        02424000
GRPTRTAB EQU   0                                                        02425000
GRPSECT  EQU   0                                                        02426000
GRPHDR   EQU   GRPSECT                                                  02427000
GRPENTNO EQU   GRPHDR                                                   02428000
GRPENTLN EQU   GRPHDR+4                                                 02429000
GRPENTRY EQU   0                                                        02430000
GRPID    EQU   GRPENTRY                                                 02431000
GRPUCBNO EQU   GRPENTRY+4                                               02432000
GRPUCBP  EQU   GRPENTRY+8                                               02433000
EUCBSECT EQU   0                                                        02434000
EUCBHDR  EQU   EUCBSECT                                                 02435000
EUCBENTY EQU   0                                                        02436000
EUCBTPOS EQU   EUCBENTY                                                 02437000
GRMSKTAB EQU   0                                                        02438000
GMTHDR   EQU   GRMSKTAB                                                 02439000
GMTENTLN EQU   GMTHDR+4                                                 02440000
GMTENTRY EQU   0                                                        02441000
IEFEDL   EQU   0                                                        02442000
EDLHDR   EQU   IEFEDL                                                   02443000
EDLGENNO EQU   EDLHDR+4                                                 02444000
EDLFGENP EQU   EDLHDR+8                                                 02445000
EDLUVFLG EQU   EDLHDR+16                                                02446000
EDLENTRY EQU   0                                                        02447000
EDLNXTNT EQU   EDLENTRY                                                 02448000
EDLDEVT  EQU   EDLENTRY+4                                               02449000
EDLGRPNO EQU   EDLENTRY+8                                               02450000
EDLGRPTR EQU   EDLENTRY+12                                              02451000
EDLDTFLG EQU   EDLENTRY+20                                              02452000
EINDEVTP EQU   EDLDTFLG                                                 02453000
EDLGNTRY EQU   0                                                        02454000
EDLLISTP EQU   EDLGNTRY+8                                               02455000
EDLGRID  EQU   EDLGNTRY+12                                              02456000
EDLGRFLG EQU   EDLGNTRY+16                                              02457000
EDLUCBL  EQU   0                                                        02458000
EDLUCBAD EQU   EDLUCBL                                                  02459000
EDLINDIC EQU   EDLUCBL+2                                                02460000
VOLUNTAB EQU   0                                                        02461000
VOLSTAT  EQU   VOLUNTAB+6                                               02462000
VOLSTATA EQU   VOLSTAT                                                  02463000
VOLSPEC  EQU   VOLSTATA                                                 02464000
VOLSTATB EQU   VOLSTAT+1                                                02465000
VOLALOC  EQU   VOLSTATB                                                 02466000
VDEVREQD EQU   VOLSTATB                                                 02467000
VUDNALOC EQU   VOLSTATB                                                 02468000
VOLSTATC EQU   VOLSTAT+2                                                02469000
VOLTAREQ EQU   VOLSTATC                                                 02470000
VOLDAREQ EQU   VOLSTATC                                                 02471000
VOLSTATD EQU   VOLSTAT+3                                                02472000
VUREALOC EQU   VOLSTATD                                                 02473000
VUDMNDOF EQU   VOLSTATD                                                 02474000
VUDMNDAL EQU   VOLSTATD                                                 02475000
VURCVYPR EQU   VOLSTATD                                                 02476000
VOLUNTID EQU   VOLUNTAB+10                                              02477000
VOLALGTP EQU   VOLUNTAB+12                                              02478000
VOLSIOTP EQU   VOLUNTAB+16                                              02479000
ALCWA    EQU   0                                                        02480000
FMAPPTR  EQU   ALCWA+4                                                  02481000
SIOT1P   EQU   ALCWA+8                                                  02482000
IOSLUTP  EQU   ALCWA+16                                                 02483000
FAILRSCP EQU   ALCWA+20                                                 02484000
EDTABPTR EQU   ALCWA+24                                                 02485000
CNTABLE  EQU   ALCWA+28                                                 02486000
TOTREQS  EQU   CNTABLE+36                                               02487000
VOLUNPTR EQU   ALCWA+80                                                 02488000
VOLUNSZE EQU   ALCWA+84                                                 02489000
ALGTABP  EQU   ALCWA+88                                                 02490000
QMGRRBP  EQU   ALCWA+108                                                02491000
INDICATE EQU   ALCWA+112                                                02492000
INDRETRY EQU   INDICATE                                                 02493000
@NM00006 EQU   ALCWA+113                                                02494000
TIOTHDRP EQU   ALCWA+120                                                02495000
WMASKPTR EQU   ALCWA+128                                                02496000
WMASK2P  EQU   ALCWA+132                                                02497000
WORK3MP  EQU   ALCWA+136                                                02498000
EXITPRMP EQU   ALCWA+144                                                02499000
NAMES    EQU   0                                                        02500000
ALGPTRS  EQU   0                                                        02501000
ALGPARMP EQU   ALGPTRS                                                  02502000
ALGRQLTP EQU   ALGPTRS+4                                                02503000
CVRPARM  EQU   0                                                        02504000
CVRNREQ  EQU   CVRPARM+4                                                02505000
CVRFLG1  EQU   CVRPARM+8                                                02506000
CVRAVFLG EQU   CVRFLG1                                                  02507000
CVRALFLG EQU   CVRFLG1                                                  02508000
CVROFFLG EQU   CVRFLG1                                                  02509000
CVRFCALL EQU   CVRFLG1                                                  02510000
CVRRQLST EQU   0                                                        02511000
CVRVUPTR EQU   CVRRQLST                                                 02512000
CVRALLCT EQU   CVRRQLST+6                                               02513000
CVRNEED  EQU   CVRRQLST+8                                               02514000
CVRMIN   EQU   CVRRQLST+10                                              02515000
CVRFLG2  EQU   CVRRQLST+16                                              02516000
CVRSKFLG EQU   CVRFLG2                                                  02517000
CVRIGNOR EQU   CVRFLG2                                                  02518000
CVRWMOVE EQU   CVRFLG2                                                  02519000
CVRDUPLI EQU   CVRFLG2+1                                                02520000
CVRNGRP  EQU   CVRRQLST+18                                              02521000
CVRGRPPT EQU   CVRRQLST+20                                              02522000
CVRWUCBP EQU   CVRRQLST+24                                              02523000
CVRGPLST EQU   0                                                        02524000
CVRGCPTR EQU   CVRGPLST                                                 02525000
CVRGRPID EQU   CVRGPLST+4                                               02526000
CVRGRPAL EQU   CVRGPLST+6                                               02527000
CVRGALL  EQU   CVRGPLST+8                                               02528000
CVRFLG3  EQU   CVRGPLST+12                                              02529000
CVRGSKP  EQU   CVRFLG3                                                  02530000
CVRFORCI EQU   CVRFLG3                                                  02531000
GRPCOUNT EQU   0                                                        02532000
GRPEXCS  EQU   GRPCOUNT+8                                               02533000
AQMPARAM EQU   0                                                        02534000
AQMECODE EQU   AQMPARAM                                                 02535000
AQMMASKP EQU   AQMPARAM+4                                               02536000
AQMNORMP EQU   AQMPARAM+20                                              02537000
FUNCMAP  EQU   0                                                        02538000
VOLMNTSW EQU   FUNCMAP                                                  02539000
WRTMSGSW EQU   FUNCMAP                                                  02540000
UWAITSW  EQU   FUNCMAP                                                  02541000
VWAITSW  EQU   FUNCMAP                                                  02542000
OFFDEVSW EQU   FUNCMAP                                                  02543000
CCLMNTSW EQU   FUNCMAP                                                  02544000
GENLOKSW EQU   FUNCMAP                                                  02545000
HDRMSGSW EQU   FUNCMAP+1                                                02546000
MTRJOBSW EQU   FUNCMAP+1                                                02547000
NOTIOTNQ EQU   FUNCMAP+1                                                02548000
TRKMSW   EQU   FUNCMAP+1                                                02549000
WAITOKSW EQU   FUNCMAP+1                                                02550000
ASNMSW   EQU   FUNCMAP+1                                                02551000
VMVRQBLK EQU   0                                                        02552000
VMVFNMAP EQU   VMVRQBLK                                                 02553000
VMVOPTB1 EQU   VMVFNMAP                                                 02554000
VMVOPTB2 EQU   VMVFNMAP+1                                               02555000
VMVOPTB3 EQU   VMVFNMAP+2                                               02556000
VMVMINFO EQU   VMVRQBLK+40                                              02557000
VMVACTON EQU   VMVMINFO                                                 02558000
VMVUSER  EQU   VMVRQBLK+48                                              02559000
INDMSIOT EQU   0                                                        02560000
SCTUSADD EQU   INDMSIOT+20                                              02561000
SIOTAFID EQU   INDMSIOT+26                                              02562000
SIOTBYT1 EQU   INDMSIOT+43                                              02563000
SIOTBYT3 EQU   INDMSIOT+46                                              02564000
SIOTTSTC EQU   INDMSIOT+47                                              02565000
SIOTBYT0 EQU   INDMSIOT+52                                              02566000
SCTSDISP EQU   INDMSIOT+55                                              02567000
SCTSBYT1 EQU   INDMSIOT+56                                              02568000
SCTSBYT2 EQU   INDMSIOT+57                                              02569000
SCTSBYT3 EQU   INDMSIOT+58                                              02570000
SCTSBYT4 EQU   INDMSIOT+59                                              02571000
SCTUTYPE EQU   INDMSIOT+60                                              02572000
SIOTDEVT EQU   SCTUTYPE                                                 02573000
SIOUBYT3 EQU   SIOTDEVT+2                                               02574000
SIOUCBAD EQU   SCTUTYPE+5                                               02575000
SIOTALTD EQU   INDMSIOT+92                                              02576000
SIOTBYT2 EQU   INDMSIOT+103                                             02577000
SIOTDMND EQU   SIOTBYT2                                                 02578000
SIOTRSNC EQU   INDMSIOT+130                                             02579000
SIOTEDLP EQU   INDMSIOT+136                                             02580000
SVOLUNAD EQU   INDMSIOT+140                                             02581000
SIOTNPTR EQU   INDMSIOT+152                                             02582000
SVOLUNNO EQU   INDMSIOT+168                                             02583000
UCB      EQU   0                                                        02584000
UCBOB    EQU   0                                                        02585000
UCBJBNR  EQU   UCBOB                                                    02586000
UCBFL5   EQU   UCBOB+1                                                  02587000
UCBAF    EQU   UCBFL5                                                   02588000
UCBNALOC EQU   UCBFL5                                                   02589000
UCBSTAT  EQU   UCBOB+3                                                  02590000
UCBONLI  EQU   UCBSTAT                                                  02591000
UCBRESV  EQU   UCBSTAT                                                  02592000
UCBALOC  EQU   UCBSTAT                                                  02593000
UCBPRES  EQU   UCBSTAT                                                  02594000
UCBSYSR  EQU   UCBSTAT                                                  02595000
UCBCHAN  EQU   UCBOB+4                                                  02596000
UCBSFLS  EQU   UCBOB+6                                                  02597000
UCBFLA   EQU   UCBSFLS                                                  02598000
UCBFL1   EQU   UCBFLA                                                   02599000
UCBBSY   EQU   UCBFL1                                                   02600000
UCBNRY   EQU   UCBFL1                                                   02601000
UCBPST   EQU   UCBFL1                                                   02602000
UCBCUB   EQU   UCBFL1                                                   02603000
UCBFLB   EQU   UCBSFLS+1                                                02604000
UCBCHM   EQU   UCBOB+8                                                  02605000
UCBCHM1  EQU   UCBCHM                                                   02606000
UCBPTH0  EQU   UCBCHM1                                                  02607000
UCBPTH1  EQU   UCBCHM1                                                  02608000
UCBWGT   EQU   UCBOB+12                                                 02609000
UCBTYP   EQU   UCBOB+16                                                 02610000
UCBTBYT1 EQU   UCBTYP                                                   02611000
UCB1FEA5 EQU   UCBTBYT1                                                 02612000
UCB1FEA6 EQU   UCBTBYT1                                                 02613000
UCBTBYT2 EQU   UCBTYP+1                                                 02614000
UCB2OPT2 EQU   UCBTBYT2                                                 02615000
UCBDUDN1 EQU   UCB2OPT2                                                 02616000
UCB2OPT3 EQU   UCBTBYT2                                                 02617000
UCBDUDN2 EQU   UCB2OPT3                                                 02618000
UCB2OPT4 EQU   UCBTBYT2                                                 02619000
UCBRWTAU EQU   UCB2OPT4                                                 02620000
UCB2OPT6 EQU   UCBTBYT2                                                 02621000
UCB2OPT7 EQU   UCBTBYT2                                                 02622000
UCBTBYT3 EQU   UCBTYP+2                                                 02623000
UCBDVCLS EQU   UCBTBYT3                                                 02624000
UCB3TAPE EQU   UCBDVCLS                                                 02625000
UCB3DACC EQU   UCBDVCLS                                                 02626000
UCBTBYT4 EQU   UCBTYP+3                                                 02627000
UCBEXTPT EQU   UCBOB+20                                                 02628000
UCBFLC   EQU   UCBEXTPT                                                 02629000
UCBDEV   EQU   UCBOB+24                                                 02630000
UCBCMEXT EQU   0                                                        02631000
UCBATI   EQU   UCBCMEXT+3                                               02632000
@NM00040 EQU   UCBATI                                                   02633000
UCBFLP1  EQU   UCBCMEXT+5                                               02634000
UCBMT    EQU   0                                                        02635000
UCBOCR   EQU   0                                                        02636000
UCB3540X EQU   0                                                        02637000
UCBDKBYT EQU   UCB3540X+6                                               02638000
UCB3800X EQU   0                                                        02639000
UCBOPTNS EQU   UCB3800X                                                 02640000
UCBACTIV EQU   UCB3800X+3                                               02641000
UCBMDRBF EQU   UCB3800X+36                                              02642000
UCBUCS   EQU   0                                                        02643000
UCBUCSOP EQU   UCBUCS+4                                                 02644000
UCBFCBOP EQU   UCBUCS+5                                                 02645000
UCBBGN   EQU   0                                                        02646000
ALCWAPTR EQU   0                                                        02647000
UCBOBS01 EQU   UCBDEV                                                   02648000
UCBVOLI  EQU   UCBOBS01+4                                               02649000
UCBSTAB  EQU   UCBOBS01+10                                              02650000
UCBBSVL  EQU   UCBSTAB                                                  02651000
UCBPRSRS EQU   UCBSTAB                                                  02652000
UCBDMCT  EQU   UCBOBS01+11                                              02653000
UCBMOUNT EQU   UCBDMCT                                                  02654000
UCBFL4   EQU   UCBOBS01+13                                              02655000
UCBOBS02 EQU   UCBDEV                                                   02656000
UCBTFL1  EQU   UCBOBS02+19                                              02657000
UCBXTN   EQU   UCBOBS02+20                                              02658000
UCBVOPT  EQU   UCBXTN                                                   02659000
UCBOBS03 EQU   UCBDEV                                                   02660000
UCBXTADR EQU   UCBOBS03                                                 02661000
UCBOBS04 EQU   UCBDEV                                                   02662000
UCBBTA   EQU   UCBOBS04+12                                              02663000
UCBOBS06 EQU   UCBDEV                                                   02664000
UCBAOF   EQU   UCBOBS06                                                 02665000
UCBAOF1  EQU   UCBAOF                                                   02666000
UCBAOF2  EQU   UCBAOF+1                                                 02667000
@NM00039 EQU   UCBOBS06+3                                               02668000
UCBIRB   EQU   UCBOBS06+4                                               02669000
UCBGRAF  EQU   UCBIRB                                                   02670000
UCBLDNCA EQU   UCBOBS06+8                                               02671000
UCBRDYQ  EQU   UCBLDNCA                                                 02672000
UCBIRLN  EQU   UCBRDYQ                                                  02673000
UCBLDNCB EQU   UCBRDYQ+1                                                02674000
UCBCTLNK EQU   UCBOBS06+12                                              02675000
UCBOBS07 EQU   UCBDEV                                                   02676000
UCBOBS08 EQU   UCBDEV                                                   02677000
UCBCTCAD EQU   UCBOBS08                                                 02678000
UCBCTCF1 EQU   UCBOBS08+4                                               02679000
UCBOBS09 EQU   UCBDEV                                                   02680000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02681000
UCBRV066 EQU   UCBOBS09+4                                               02682000
UCBIOSBA EQU   UCBOBS09                                                 02683000
UCBRV042 EQU   UCBOBS08+5                                               02684000
UCBRV082 EQU   UCBCTCF1                                                 02685000
UCBRV081 EQU   UCBCTCF1                                                 02686000
UCBRV080 EQU   UCBCTCF1                                                 02687000
UCBRV079 EQU   UCBCTCF1                                                 02688000
UCBRV078 EQU   UCBCTCF1                                                 02689000
UCBRV077 EQU   UCBCTCF1                                                 02690000
UCBRV076 EQU   UCBCTCF1                                                 02691000
UCBCTC80 EQU   UCBCTCF1                                                 02692000
UCBCTCAL EQU   UCBCTCAD                                                 02693000
UCBICNCB EQU   UCBOBS07+4                                               02694000
UCBRV040 EQU   UCBOBS07                                                 02695000
UCBCTLNA EQU   UCBCTLNK+1                                               02696000
UCBRLN   EQU   UCBCTLNK                                                 02697000
UCBRDYQA EQU   UCBLDNCB                                                 02698000
UCBINRLN EQU   UCBIRLN                                                  02699000
UCBIRBA  EQU   UCBIRB+1                                                 02700000
UCBRV039 EQU   UCBGRAF                                                  02701000
UCBDWNR  EQU   UCBGRAF                                                  02702000
UCBRPND  EQU   UCBGRAF                                                  02703000
UCBUPM   EQU   UCBGRAF                                                  02704000
UCBBTAM  EQU   UCBGRAF                                                  02705000
UCBDRNO  EQU   UCBGRAF                                                  02706000
UCBDRO   EQU   UCBGRAF                                                  02707000
UCBOIP   EQU   UCBGRAF                                                  02708000
UCBATRCD EQU   @NM00039                                                 02709000
UCBSKPFG EQU   @NM00039                                                 02710000
UCBRIPND EQU   @NM00039                                                 02711000
UCBRTIAC EQU   @NM00039                                                 02712000
UCBRSV79 EQU   @NM00039                                                 02713000
UCBRSV78 EQU   @NM00039                                                 02714000
UCBRSV77 EQU   @NM00039                                                 02715000
UCBOLTEP EQU   @NM00039                                                 02716000
UCBATNCT EQU   UCBOBS06+2                                               02717000
UCBRSV76 EQU   UCBAOF2                                                  02718000
UCBRSV75 EQU   UCBAOF2                                                  02719000
UCBRSV74 EQU   UCBAOF2                                                  02720000
UCBRSV73 EQU   UCBAOF2                                                  02721000
UCBRSV72 EQU   UCBAOF2                                                  02722000
UCBRSV71 EQU   UCBAOF2                                                  02723000
UCBRSV70 EQU   UCBAOF2                                                  02724000
UCBRSV69 EQU   UCBAOF2                                                  02725000
UCBRSV68 EQU   UCBAOF1                                                  02726000
UCBRSV67 EQU   UCBAOF1                                                  02727000
UCBRSV66 EQU   UCBAOF1                                                  02728000
UCBRSV65 EQU   UCBAOF1                                                  02729000
UCBRSV64 EQU   UCBAOF1                                                  02730000
UCBOFNL  EQU   UCBAOF1                                                  02731000
UCBOFSP  EQU   UCBAOF1                                                  02732000
UCBOFMCR EQU   UCBAOF1                                                  02733000
UCBBTB   EQU   UCBBTA+1                                                 02734000
UCBDI    EQU   UCBBTA                                                   02735000
UCBSNS   EQU   UCBOBS04+8                                               02736000
UCBTEB   EQU   UCBOBS04+4                                               02737000
UCBGCB   EQU   UCBOBS04+3                                               02738000
UCBOPEN  EQU   UCBOBS04+2                                               02739000
UCBSTART EQU   UCBOBS04                                                 02740000
UCBXTNB  EQU   UCBXTN+1                                                 02741000
UCBRSV22 EQU   UCBVOPT                                                  02742000
UCBRSV21 EQU   UCBVOPT                                                  02743000
UCBRSV20 EQU   UCBVOPT                                                  02744000
UCBESVE  EQU   UCBVOPT                                                  02745000
UCBERPC  EQU   UCBVOPT                                                  02746000
UCBESVC  EQU   UCBVOPT                                                  02747000
UCBEVA   EQU   UCBVOPT                                                  02748000
UCBESV   EQU   UCBVOPT                                                  02749000
UCBRV009 EQU   UCBTFL1                                                  02750000
UCBRV008 EQU   UCBTFL1                                                  02751000
UCBRV007 EQU   UCBTFL1                                                  02752000
UCBRV006 EQU   UCBTFL1                                                  02753000
UCBRV005 EQU   UCBTFL1                                                  02754000
UCBRV038 EQU   UCBTFL1                                                  02755000
UCBNSLTP EQU   UCBTFL1                                                  02756000
UCBNLTP  EQU   UCBTFL1                                                  02757000
UCBRES1B EQU   UCBOBS02+18                                              02758000
UCBFSER  EQU   UCBOBS02+12                                              02759000
@NM00038 EQU   UCBOBS02+4                                               02760000
UCBFSEQ  EQU   UCBOBS02+2                                               02761000
UCBFSCT  EQU   UCBOBS02                                                 02762000
UCBNEXP  EQU   UCBOBS01+20                                              02763000
UCBBASE  EQU   UCBOBS01+16                                              02764000
UCBRES1A EQU   UCBOBS01+15                                              02765000
UCBUSER  EQU   UCBOBS01+14                                              02766000
UCBFL47  EQU   UCBFL4                                                   02767000
UCBFL46  EQU   UCBFL4                                                   02768000
UCBFL45  EQU   UCBFL4                                                   02769000
UCBRV065 EQU   UCBFL4                                                   02770000
UCBDSS   EQU   UCBFL4                                                   02771000
UCBRESVP EQU   UCBFL4                                                   02772000
UCBWDAV  EQU   UCBFL4                                                   02773000
UCBDAVV  EQU   UCBFL4                                                   02774000
UCBSQC   EQU   UCBOBS01+12                                              02775000
UCBDATP  EQU   UCBOBS01+12                                              02776000
UCBDMC   EQU   UCBDMCT                                                  02777000
UCBBNUL  EQU   UCBSTAB                                                  02778000
UCBSHAR  EQU   UCBSTAB                                                  02779000
UCBBSTR  EQU   UCBSTAB                                                  02780000
UCBBPUB  EQU   UCBSTAB                                                  02781000
UCBBPRV  EQU   UCBSTAB                                                  02782000
UCBBALB  EQU   UCBPRSRS                                                 02783000
UCBPGFL  EQU   UCBSTAB                                                  02784000
UCBDVSHR EQU   UCBBSVL                                                  02785000
UCBVTOC  EQU   UCBOBS01                                                 02786000
UCBERADR EQU   UCBUCS+12                                                02787000
UCBFCBID EQU   UCBUCS+8                                                 02788000
UCBERCNT EQU   UCBUCS+7                                                 02789000
UCBRSV51 EQU   UCBUCS+6                                                 02790000
UCBRSV50 EQU   UCBFCBOP                                                 02791000
UCBRSV49 EQU   UCBFCBOP                                                 02792000
UCBRSV48 EQU   UCBFCBOP                                                 02793000
UCBRSV47 EQU   UCBFCBOP                                                 02794000
UCBRSV46 EQU   UCBFCBOP                                                 02795000
UCBRSV45 EQU   UCBFCBOP                                                 02796000
UCBRSV44 EQU   UCBFCBOP                                                 02797000
UCBFCBO1 EQU   UCBFCBOP                                                 02798000
UCBUCSPE EQU   UCBUCSOP                                                 02799000
UCBRSV43 EQU   UCBUCSOP                                                 02800000
UCBRSV42 EQU   UCBUCSOP                                                 02801000
UCBRSV41 EQU   UCBUCSOP                                                 02802000
UCBRSV40 EQU   UCBUCSOP                                                 02803000
UCBRSV39 EQU   UCBUCSOP                                                 02804000
UCBUCSO2 EQU   UCBUCSOP                                                 02805000
UCBUCSO1 EQU   UCBUCSOP                                                 02806000
UCBUCSID EQU   UCBUCS                                                   02807000
UCBMDRBA EQU   UCBMDRBF+1                                               02808000
UCBRV075 EQU   UCBMDRBF                                                 02809000
UCBRV074 EQU   UCB3800X+32                                              02810000
UCBIMAGE EQU   UCB3800X+28                                              02811000
UCBFCBNM EQU   UCB3800X+24                                              02812000
UCBCHAR4 EQU   UCB3800X+20                                              02813000
UCBCHAR3 EQU   UCB3800X+16                                              02814000
UCBCHAR2 EQU   UCB3800X+12                                              02815000
UCBCHAR1 EQU   UCB3800X+8                                               02816000
UCBCGMID EQU   UCB3800X+4                                               02817000
UCBBRSTA EQU   UCBACTIV                                                 02818000
UCBRV063 EQU   UCBACTIV                                                 02819000
UCBRV062 EQU   UCBACTIV                                                 02820000
UCBRV061 EQU   UCBACTIV                                                 02821000
UCBRV060 EQU   UCBACTIV                                                 02822000
UCBRV059 EQU   UCBACTIV                                                 02823000
UCBRV058 EQU   UCBACTIV                                                 02824000
UCBRV057 EQU   UCBACTIV                                                 02825000
UCBRV050 EQU   UCB3800X+2                                               02826000
UCBCGMNO EQU   UCB3800X+1                                               02827000
UCBRV083 EQU   UCBOPTNS                                                 02828000
UCBBRSTR EQU   UCBOPTNS                                                 02829000
UCBRV056 EQU   UCBOPTNS                                                 02830000
UCBRV055 EQU   UCBOPTNS                                                 02831000
UCBRV054 EQU   UCBOPTNS                                                 02832000
UCBRV053 EQU   UCBOPTNS                                                 02833000
UCBRV052 EQU   UCBOPTNS                                                 02834000
UCBRV051 EQU   UCBOPTNS                                                 02835000
UCBRV073 EQU   UCB3540X+7                                               02836000
UCBRV072 EQU   UCBDKBYT                                                 02837000
UCBRV071 EQU   UCBDKBYT                                                 02838000
UCBRV070 EQU   UCBDKBYT                                                 02839000
UCBRV069 EQU   UCBDKBYT                                                 02840000
UCBRV068 EQU   UCBDKBYT                                                 02841000
UCBRV067 EQU   UCBDKBYT                                                 02842000
UCBVLVER EQU   UCBDKBYT                                                 02843000
UCBDKAMX EQU   UCBDKBYT                                                 02844000
UCBVLSER EQU   UCB3540X                                                 02845000
UCBRDATA EQU   UCBOCR+4                                                 02846000
UCBFRID  EQU   UCBOCR                                                   02847000
UCBCLN   EQU   UCBMT+14                                                 02848000
UCBERG   EQU   UCBMT+12                                                 02849000
UCBMS    EQU   UCBMT+11                                                 02850000
UCBNB    EQU   UCBMT+10                                                 02851000
UCBPW    EQU   UCBMT+9                                                  02852000
UCBPR    EQU   UCBMT+8                                                  02853000
UCBSIO   EQU   UCBMT+6                                                  02854000
UCBTW    EQU   UCBMT+5                                                  02855000
UCBTR    EQU   UCBMT+4                                                  02856000
UCBTWT   EQU   UCBMT+3                                                  02857000
UCBTRT   EQU   UCBMT+2                                                  02858000
UCBCTD   EQU   UCBMT                                                    02859000
UCBWTOID EQU   UCBCMEXT+17                                              02860000
UCBRV043 EQU   UCBCMEXT+16                                              02861000
UCBASID  EQU   UCBCMEXT+14                                              02862000
UCBMFCNT EQU   UCBCMEXT+12                                              02863000
UCBPMSK  EQU   UCBCMEXT+10                                              02864000
UCBCCWOF EQU   UCBCMEXT+8                                               02865000
UCBRV041 EQU   UCBCMEXT+6                                               02866000
UCBRV036 EQU   UCBFLP1                                                  02867000
UCBRV035 EQU   UCBFLP1                                                  02868000
UCBERLOG EQU   UCBFLP1                                                  02869000
UCBRV033 EQU   UCBFLP1                                                  02870000
UCBRV032 EQU   UCBFLP1                                                  02871000
UCBRV031 EQU   UCBFLP1                                                  02872000
UCBSHRUP EQU   UCBFLP1                                                  02873000
UCBNSRCH EQU   UCBFLP1                                                  02874000
UCBSNSCT EQU   UCBCMEXT+4                                               02875000
UCBHPDV  EQU   @NM00040                                                 02876000
UCBHALI  EQU   @NM00040                                                 02877000
UCBRSV09 EQU   @NM00040                                                 02878000
UCBRSV08 EQU   @NM00040                                                 02879000
UCBRSV07 EQU   @NM00040                                                 02880000
UCBRSV06 EQU   @NM00040                                                 02881000
UCBRSV05 EQU   @NM00040                                                 02882000
UCBRSV04 EQU   @NM00040                                                 02883000
UCBDTI   EQU   UCBCMEXT+2                                               02884000
UCBSTI   EQU   UCBCMEXT+1                                               02885000
UCBETI   EQU   UCBCMEXT                                                 02886000
UCBEXTP  EQU   UCBEXTPT+1                                               02887000
UCBDDRSW EQU   UCBFLC                                                   02888000
UCBTICBT EQU   UCBFLC                                                   02889000
UCBIVRR  EQU   UCBFLC                                                   02890000
UCBIVRS  EQU   UCBFLC                                                   02891000
UCBITF   EQU   UCBFLC                                                   02892000
UCBUDE   EQU   UCBFLC                                                   02893000
UCBWAA   EQU   UCBFLC                                                   02894000
UCBATTP  EQU   UCBFLC                                                   02895000
UCBUNTYP EQU   UCBTBYT4                                                 02896000
UCBRSV11 EQU   UCBDVCLS                                                 02897000
UCBRSV10 EQU   UCBDVCLS                                                 02898000
UCB3CHAR EQU   UCBDVCLS                                                 02899000
UCB3UREC EQU   UCBDVCLS                                                 02900000
UCB3DISP EQU   UCBDVCLS                                                 02901000
UCB3COMM EQU   UCBDVCLS                                                 02902000
UCBDVPWR EQU   UCB2OPT7                                                 02903000
UCBVLPWR EQU   UCB2OPT6                                                 02904000
UCB2OPT5 EQU   UCBTBYT2                                                 02905000
UCBRVDEV EQU   UCBRWTAU                                                 02906000
UCBRPS   EQU   UCBDUDN2                                                 02907000
UCBRR    EQU   UCBDUDN1                                                 02908000
UCB2OPT1 EQU   UCBTBYT2                                                 02909000
UCB2OPT0 EQU   UCBTBYT2                                                 02910000
UCB1FEA7 EQU   UCBTBYT1                                                 02911000
UCBD6250 EQU   UCB1FEA6                                                 02912000
UCBD1600 EQU   UCB1FEA5                                                 02913000
UCB1FEA4 EQU   UCBTBYT1                                                 02914000
UCB1FEA3 EQU   UCBTBYT1                                                 02915000
UCB1FEA2 EQU   UCBTBYT1                                                 02916000
UCB1FEA1 EQU   UCBTBYT1                                                 02917000
UCB1FEA0 EQU   UCBTBYT1                                                 02918000
UCBNAME  EQU   UCBOB+13                                                 02919000
UCBRV029 EQU   UCBWGT                                                   02920000
UCBVHRSN EQU   UCBWGT                                                   02921000
UCBVORSN EQU   UCBWGT                                                   02922000
UCBMTPXP EQU   UCBWGT                                                   02923000
UCBREW   EQU   UCBWGT                                                   02924000
UCBPUB   EQU   UCBWGT                                                   02925000
UCBOUT   EQU   UCBWGT                                                   02926000
UCBIN    EQU   UCBWGT                                                   02927000
UCBCPU   EQU   UCBOB+11                                                 02928000
UCBLCI   EQU   UCBOB+10                                                 02929000
UCBCNT   EQU   UCBOB+9                                                  02930000
UCBRV017 EQU   UCBCHM1                                                  02931000
UCBRV016 EQU   UCBCHM1                                                  02932000
UCBRV015 EQU   UCBCHM1                                                  02933000
UCBRV014 EQU   UCBCHM1                                                  02934000
UCBSPB   EQU   UCBPTH1                                                  02935000
UCBPPB   EQU   UCBPTH1                                                  02936000
UCBSPA   EQU   UCBPTH0                                                  02937000
UCBPPA   EQU   UCBPTH0                                                  02938000
UCBSIGP  EQU   UCBFLB                                                   02939000
UCBVALPH EQU   UCBFLB                                                   02940000
UCBCRHSN EQU   UCBFLB                                                   02941000
UCBCRHRV EQU   UCBFLB                                                   02942000
UCBRESVH EQU   UCBFLB                                                   02943000
UCBSPST  EQU   UCBFLB                                                   02944000
UCBASNS  EQU   UCBFLB                                                   02945000
UCBIORST EQU   UCBFLB                                                   02946000
UCBQISCE EQU   UCBFL1                                                   02947000
UCBACTV  EQU   UCBFL1                                                   02948000
UCBSAP   EQU   UCBFL1                                                   02949000
UCBNOTRC EQU   UCBCUB                                                   02950000
UCBPSNS  EQU   UCBFL1                                                   02951000
UCBUSING EQU   UCBPST                                                   02952000
UCBNOTRD EQU   UCBNRY                                                   02953000
UCBBUSYD EQU   UCBBSY                                                   02954000
UCBUA    EQU   UCBCHAN+1                                                02955000
UCBCHA   EQU   UCBCHAN                                                  02956000
UCBDADI  EQU   UCBSTAT                                                  02957000
UCBUNLD  EQU   UCBSTAT                                                  02958000
UCBCHGS  EQU   UCBSTAT                                                  02959000
UCBID    EQU   UCBOB+2                                                  02960000
UCBALTPH EQU   UCBFL5                                                   02961000
UCBALTCU EQU   UCBFL5                                                   02962000
UCBENVRD EQU   UCBFL5                                                   02963000
UCBVSDR  EQU   UCBFL5                                                   02964000
UCBSASK  EQU   UCBFL5                                                   02965000
UCBAMV   EQU   UCBAF                                                    02966000
UCBDCC   EQU   UCBFL5                                                   02967000
UCBMONT  EQU   UCBJBNR                                                  02968000
UCBRV011 EQU   UCBJBNR                                                  02969000
UCBMMSGP EQU   UCBJBNR                                                  02970000
UCBOLDSM EQU   UCBJBNR                                                  02971000
UCBRV003 EQU   UCBJBNR                                                  02972000
UCBDUC   EQU   UCBJBNR                                                  02973000
UCBJES3  EQU   UCBJBNR                                                  02974000
UCBVRDEV EQU   UCBJBNR                                                  02975000
UCBCMSEG EQU   UCBOB                                                    02976000
UCBPFXND EQU   UCB+512                                                  02977000
UCBIOQ   EQU   UCB+508                                                  02978000
UCBLOCK  EQU   UCB+504                                                  02979000
UCBPXST  EQU   UCB+504                                                  02980000
@NM00037 EQU   UCB                                                      02981000
SIODDSNL EQU   INDMSIOT+173                                             02982000
SIOVDSNL EQU   INDMSIOT+172                                             02983000
SIOVDSNT EQU   INDMSIOT+170                                             02984000
SIOTVMVP EQU   INDMSIOT+164                                             02985000
SIOTJFX  EQU   INDMSIOT+160                                             02986000
SJFCBPTR EQU   INDMSIOT+156                                             02987000
SIOTETIO EQU   INDMSIOT+148                                             02988000
SIOTATE  EQU   INDMSIOT+144                                             02989000
SIOTEDLS EQU   INDMSIOT+132                                             02990000
SCTANAME EQU   INDMSIOT+122                                             02991000
@NM00036 EQU   INDMSIOT+108                                             02992000
SIOTSSNM EQU   INDMSIOT+104                                             02993000
@NM00035 EQU   SIOTBYT2                                                 02994000
@NM00034 EQU   SIOTBYT2                                                 02995000
SIOTCVOL EQU   SIOTBYT2                                                 02996000
SIOTCNEW EQU   SIOTBYT2                                                 02997000
SIOTCALC EQU   SIOTBYT2                                                 02998000
SIOTGALL EQU   SIOTBYT2                                                 02999000
SIOTDSPD EQU   SIOTBYT2                                                 03000000
SIOTOPUC EQU   INDMSIOT+99                                              03001000
SIOTOUTR EQU   INDMSIOT+97                                              03002000
SIOTOUTC EQU   INDMSIOT+96                                              03003000
@NM00033 EQU   INDMSIOT+93                                              03004000
SIOTAUNC EQU   SIOTALTD                                                 03005000
SIOTACAT EQU   SIOTALTD                                                 03006000
SIOTADEL EQU   SIOTALTD                                                 03007000
SIOTAKEP EQU   SIOTALTD                                                 03008000
SIOTNPRV EQU   SIOTALTD                                                 03009000
SIOJCATS EQU   SIOTALTD                                                 03010000
@NM00032 EQU   SIOTALTD                                                 03011000
@NM00031 EQU   SIOTALTD                                                 03012000
@NM00030 EQU   INDMSIOT+91                                              03013000
SIOTNDSB EQU   INDMSIOT+88                                              03014000
@NM00029 EQU   INDMSIOT+84                                              03015000
SIOTDPCD EQU   INDMSIOT+82                                              03016000
@NM00028 EQU   INDMSIOT+81                                              03017000
SCTOUTPN EQU   INDMSIOT+80                                              03018000
SCTOUTNO EQU   INDMSIOT+76                                              03019000
SCTOUTNM EQU   INDMSIOT+68                                              03020000
SIOUCNVT EQU   SCTUTYPE+4                                               03021000
SIOUBYT4 EQU   SIOTDEVT+3                                               03022000
@NM00027 EQU   SIOUBYT3                                                 03023000
SIO3UREC EQU   SIOUBYT3                                                 03024000
SIO3DISP EQU   SIOUBYT3                                                 03025000
SIO3DACC EQU   SIOUBYT3                                                 03026000
SIO3COMM EQU   SIOUBYT3                                                 03027000
SIO3TAPE EQU   SIOUBYT3                                                 03028000
SIOUBYT2 EQU   SIOTDEVT+1                                               03029000
SIOUBYT1 EQU   SIOTDEVT                                                 03030000
SIOTOMN  EQU   SCTSBYT4                                                 03031000
SIOTIPDI EQU   SCTSBYT4                                                 03032000
SIOTVAFF EQU   SCTSBYT4                                                 03033000
SIOTSTEP EQU   SCTSBYT4                                                 03034000
SIOTASCI EQU   SCTSBYT4                                                 03035000
SIOTAFF  EQU   SCTSBYT4                                                 03036000
SIOTGDGA EQU   SCTSBYT4                                                 03037000
SCTSGDGS EQU   SCTSBYT4                                                 03038000
SCTSOLD  EQU   SCTSBYT3                                                 03039000
SCTSMOD  EQU   SCTSBYT3                                                 03040000
SCTSNEW  EQU   SCTSBYT3                                                 03041000
SCTSYSOU EQU   SCTSBYT3                                                 03042000
SCTVREF  EQU   SCTSBYT3                                                 03043000
SCTALCHK EQU   SCTSBYT3                                                 03044000
SCTSYSNE EQU   SCTSBYT3                                                 03045000
SCTDSNRF EQU   SCTSBYT3                                                 03046000
SCTRECVD EQU   SCTSBYT2                                                 03047000
SCTDEFER EQU   SCTSBYT2                                                 03048000
SCTLABEL EQU   SCTSBYT2                                                 03049000
SCTUNLBD EQU   SCTSBYT2                                                 03050000
SCTJOBLB EQU   SCTSBYT2                                                 03051000
SCTVOLAF EQU   SCTSBYT2                                                 03052000
SIOTCATL EQU   SCTSBYT2                                                 03053000
SIOCLUNL EQU   SCTSBYT2                                                 03054000
SIOTJSCT EQU   SCTSBYT1                                                 03055000
SCTUNAFF EQU   SCTSBYT1                                                 03056000
SCTPARLM EQU   SCTSBYT1                                                 03057000
SIOTQDSN EQU   SCTSBYT1                                                 03058000
SIOTGDSN EQU   SCTSBYT1                                                 03059000
SIOTCCAT EQU   SCTSBYT1                                                 03060000
SCTSYSIN EQU   SCTSBYT1                                                 03061000
SCTDUMMY EQU   SCTSBYT1                                                 03062000
SIOTUNCT EQU   SCTSDISP                                                 03063000
SIOTCTLG EQU   SCTSDISP                                                 03064000
SIOTDLET EQU   SCTSDISP                                                 03065000
SIOTKEEP EQU   SCTSDISP                                                 03066000
SIOTPASS EQU   SCTSDISP                                                 03067000
SIOTPRIV EQU   SCTSDISP                                                 03068000
S3400DSP EQU   SCTSDISP                                                 03069000
SIOTRETN EQU   SCTSDISP                                                 03070000
SIOTVLCT EQU   INDMSIOT+54                                              03071000
SCTNMBUT EQU   INDMSIOT+53                                              03072000
SIOTRTRY EQU   SIOTBYT0                                                 03073000
SIOTPUPV EQU   SIOTBYT0                                                 03074000
SIOTNOPV EQU   SIOTBYT0                                                 03075000
SIOTGIGN EQU   SIOTBYT0                                                 03076000
SPVTAMSG EQU   SIOTBYT0                                                 03077000
SIOTFUDA EQU   SIOTBYT0                                                 03078000
SIOTDYAL EQU   SIOTBYT0                                                 03079000
SIOTSSDS EQU   SIOTBYT0                                                 03080000
SIOTGIID EQU   INDMSIOT+50                                              03081000
SCTVOLCT EQU   INDMSIOT+49                                              03082000
SCTSPOOL EQU   INDMSIOT+48                                              03083000
SIOTQNAM EQU   SIOTTSTC                                                 03084000
SIOTDSNM EQU   SIOTTSTC                                                 03085000
SIOTTRKM EQU   SIOTTSTC                                                 03086000
@NM00026 EQU   SIOTTSTC                                                 03087000
SIOTTERM EQU   SIOTTSTC                                                 03088000
@NM00025 EQU   SIOTTSTC                                                 03089000
@NM00024 EQU   SIOTBYT3                                                 03090000
S3400OFF EQU   SIOTBYT3                                                 03091000
SIOTJES3 EQU   SIOTBYT3                                                 03092000
SIOCDEVT EQU   SIOTBYT3                                                 03093000
SIOALIAS EQU   SIOTBYT3                                                 03094000
SCTDDINO EQU   INDMSIOT+44                                              03095000
SIOTDDNT EQU   SIOTBYT1                                                 03096000
SIOTALCD EQU   SIOTBYT1                                                 03097000
SIODADSM EQU   SIOTBYT1                                                 03098000
SIOTDADR EQU   SIOTBYT1                                                 03099000
SIODUNAL EQU   SIOTBYT1                                                 03100000
SIOVAMDS EQU   SIOTBYT1                                                 03101000
SIOTHOLD EQU   SIOTBYT1                                                 03102000
SIOTOCKP EQU   SIOTBYT1                                                 03103000
SIOPSCNT EQU   INDMSIOT+42                                              03104000
SIOTREFN EQU   INDMSIOT+40                                              03105000
SIOTOTUN EQU   INDMSIOT+39                                              03106000
SIOTVRSB EQU   INDMSIOT+36                                              03107000
@NM00023 EQU   INDMSIOT+35                                              03108000
SCTPJFCB EQU   INDMSIOT+32                                              03109000
@NM00022 EQU   INDMSIOT+31                                              03110000
SCTPSIOT EQU   INDMSIOT+28                                              03111000
@NM00021 EQU   INDMSIOT+24                                              03112000
SIODSNTE EQU   INDMSIOT+22                                              03113000
SIOTUNAF EQU   SCTUSADD                                                 03114000
SIOTDEST EQU   INDMSIOT+12                                              03115000
SCTDDNAM EQU   INDMSIOT+4                                               03116000
SIOTTYPE EQU   INDMSIOT+3                                               03117000
SIOTDSKA EQU   INDMSIOT                                                 03118000
@NM00020 EQU   VMVUSER                                                  03119000
VMVPROCD EQU   VMVUSER                                                  03120000
VMVVUNTP EQU   VMVRQBLK+44                                              03121000
@NM00019 EQU   VMVMINFO+1                                               03122000
@NM00018 EQU   VMVACTON                                                 03123000
VMVRTAIN EQU   VMVACTON                                                 03124000
VMVDSMT  EQU   VMVACTON                                                 03125000
VMVKEEP  EQU   VMVACTON                                                 03126000
VMVRETCD EQU   VMVRQBLK+36                                              03127000
VMVJSNMP EQU   VMVRQBLK+32                                              03128000
VMVDSNMP EQU   VMVRQBLK+28                                              03129000
VMVJBNMP EQU   VMVRQBLK+24                                              03130000
VMVMVLSR EQU   VMVRQBLK+18                                              03131000
VMVUVLSR EQU   VMVRQBLK+12                                              03132000
VMVUCBP  EQU   VMVRQBLK+9                                               03133000
@NM00017 EQU   VMVRQBLK+8                                               03134000
VMVNREQP EQU   VMVRQBLK+4                                               03135000
VMVOPTB4 EQU   VMVFNMAP+3                                               03136000
@NM00016 EQU   VMVOPTB3                                                 03137000
VMVNUMSG EQU   VMVOPTB3                                                 03138000
VMVCUVOL EQU   VMVOPTB3                                                 03139000
VMVDUPVL EQU   VMVOPTB3                                                 03140000
VMVNSPVT EQU   VMVOPTB2                                                 03141000
VMVNSLTP EQU   VMVOPTB2                                                 03142000
VMVSLTAP EQU   VMVOPTB2                                                 03143000
VMVNLTAP EQU   VMVOPTB2                                                 03144000
VMVALTAP EQU   VMVOPTB2                                                 03145000
VMVSTRG  EQU   VMVOPTB2                                                 03146000
VMVPUBLC EQU   VMVOPTB2                                                 03147000
VMVPRIVT EQU   VMVOPTB2                                                 03148000
VMVVDEND EQU   VMVOPTB1                                                 03149000
VMVVRLBL EQU   VMVOPTB1                                                 03150000
VMVDWTOR EQU   VMVOPTB1                                                 03151000
VMVMTMSG EQU   VMVOPTB1                                                 03152000
VMVMOUNT EQU   VMVOPTB1                                                 03153000
VMVREWND EQU   VMVOPTB1                                                 03154000
VMVUCB   EQU   VMVOPTB1                                                 03155000
VMVUNLOD EQU   VMVOPTB1                                                 03156000
EXTRACAL EQU   FUNCMAP+1                                                03157000
ALCASDSN EQU   ASNMSW                                                   03158000
ALCSUBWT EQU   WAITOKSW                                                 03159000
ALCATRKM EQU   TRKMSW                                                   03160000
ALCNOENQ EQU   NOTIOTNQ                                                 03161000
ALCJOBNM EQU   MTRJOBSW                                                 03162000
ALCHDMSG EQU   HDRMSGSW                                                 03163000
@NM00015 EQU   FUNCMAP+1                                                03164000
ALCGENER EQU   GENLOKSW                                                 03165000
ALCCANCL EQU   CCLMNTSW                                                 03166000
ALCOFFDV EQU   OFFDEVSW                                                 03167000
@NM00014 EQU   FUNCMAP                                                  03168000
ALCWTVOL EQU   VWAITSW                                                  03169000
ALCWTUNT EQU   UWAITSW                                                  03170000
ALCMSGLV EQU   WRTMSGSW                                                 03171000
ALCMOUNT EQU   VOLMNTSW                                                 03172000
AQMQBPTR EQU   AQMPARAM+24                                              03173000
AQMPFLG  EQU   AQMNORMP                                                 03174000
AQMCANCP EQU   AQMPARAM+16                                              03175000
AQMLENGT EQU   AQMPARAM+12                                              03176000
AQMASID  EQU   AQMPARAM+8                                               03177000
AQMQCODE EQU   AQMPARAM+2                                               03178000
GRPWPTR  EQU   GRPCOUNT+12                                              03179000
GRPIDENT EQU   GRPCOUNT+10                                              03180000
GRPTOTAL EQU   GRPCOUNT+6                                               03181000
GRPOFFLN EQU   GRPCOUNT+4                                               03182000
GRPALLCT EQU   GRPCOUNT+2                                               03183000
GRPAVAIL EQU   GRPCOUNT                                                 03184000
@NM00013 EQU   CVRGPLST+13                                              03185000
@NM00012 EQU   CVRFLG3                                                  03186000
CVRBOUND EQU   CVRGPLST+10                                              03187000
@NM00011 EQU   CVRRQLST+26                                              03188000
@NM00010 EQU   CVRFLG2+1                                                03189000
CVRMULTI EQU   CVRFLG2                                                  03190000
CVRSCRTH EQU   CVRFLG2                                                  03191000
CVRFULL  EQU   CVRFLG2                                                  03192000
CVRREACH EQU   CVRFLG2                                                  03193000
CVRRUSED EQU   CVRFLG2                                                  03194000
CVRGNEXT EQU   CVRRQLST+12                                              03195000
CVRPTS   EQU   CVRMIN                                                   03196000
CVRREQ1  EQU   CVRRQLST+4                                               03197000
@NM00009 EQU   CVRPARM+9                                                03198000
@NM00008 EQU   CVRFLG1                                                  03199000
CVRGRPLK EQU   CVRPARM+6                                                03200000
CVRRQPTR EQU   CVRPARM                                                  03201000
ALGGCNTP EQU   ALGPTRS+12                                               03202000
ALGGLSTP EQU   ALGPTRS+8                                                03203000
ALCPROCN EQU   NAMES+16                                                 03204000
ALCSTEPN EQU   NAMES+8                                                  03205000
ALCJOBN  EQU   NAMES                                                    03206000
CANCELP  EQU   ALCWA+140                                                03207000
LGENLOCK EQU   ALCWA+124                                                03208000
TCBP     EQU   ALCWA+116                                                03209000
ALCWASID EQU   ALCWA+114                                                03210000
@NM00007 EQU   @NM00006                                                 03211000
NODEVERR EQU   @NM00006                                                 03212000
NEEDRCVY EQU   @NM00006                                                 03213000
ALCWAREC EQU   @NM00006                                                 03214000
WAITIGEN EQU   @NM00006                                                 03215000
UNITRECS EQU   @NM00006                                                 03216000
ALCWADUL EQU   INDICATE                                                 03217000
ALCWISAM EQU   INDICATE                                                 03218000
DSSUNIT  EQU   INDICATE                                                 03219000
DSSTAPE  EQU   INDICATE                                                 03220000
PRIVASUM EQU   INDICATE                                                 03221000
INDREQU  EQU   INDICATE                                                 03222000
INDWAIT  EQU   INDICATE                                                 03223000
RIMTABCT EQU   ALCWA+104                                                03224000
RIMTABLN EQU   ALCWA+100                                                03225000
RIMTABP  EQU   ALCWA+96                                                 03226000
ALGTABSZ EQU   ALCWA+92                                                 03227000
@NM00005 EQU   ALCWA+78                                                 03228000
LTUNITID EQU   ALCWA+76                                                 03229000
TOTVOLUN EQU   CNTABLE+44                                               03230000
NUMREQS  EQU   CNTABLE+40                                               03231000
OTHEREQS EQU   CNTABLE+32                                               03232000
SUBSREQS EQU   CNTABLE+28                                               03233000
STRGREQS EQU   CNTABLE+24                                               03234000
PUBLREQS EQU   CNTABLE+20                                               03235000
PVTNREQS EQU   CNTABLE+16                                               03236000
SPECREQS EQU   CNTABLE+12                                               03237000
TPREQS   EQU   CNTABLE+8                                                03238000
VAMREQS  EQU   CNTABLE+4                                                03239000
DMYREQS  EQU   CNTABLE                                                  03240000
JSCBPTR  EQU   ALCWA+12                                                 03241000
WASIZE   EQU   ALCWA                                                    03242000
VUGRID   EQU   VOLUNTAB+24                                              03243000
VUUCBP   EQU   VOLUNTAB+20                                              03244000
VUVLUNIQ EQU   VOLSTATD                                                 03245000
VUDMUNIQ EQU   VOLSTATD                                                 03246000
VUUNALSW EQU   VOLSTATD                                                 03247000
VUMUGDON EQU   VOLSTATD                                                 03248000
@NM00004 EQU   VOLSTATC                                                 03249000
@NM00003 EQU   VOLSTATC                                                 03250000
VURECVRY EQU   VOLSTATC                                                 03251000
VOLURREQ EQU   VOLSTATC                                                 03252000
VOLGRREQ EQU   VOLSTATC                                                 03253000
VOLCOREQ EQU   VOLSTATC                                                 03254000
VUAFFWRK EQU   VOLSTATB                                                 03255000
VUVINELG EQU   VOLSTATB                                                 03256000
VUDADSME EQU   VOLSTATB                                                 03257000
VUPROCED EQU   VOLSTATB                                                 03258000
VOLMNTD  EQU   VOLSTATB                                                 03259000
VOLDEFER EQU   VOLSTATA                                                 03260000
VUDADSM  EQU   VOLSTATA                                                 03261000
VOLRESVE EQU   VOLSTATA                                                 03262000
VOLNSHR  EQU   VOLSTATA                                                 03263000
VOLSTG   EQU   VOLSTATA                                                 03264000
VOLPRV   EQU   VOLSTATA                                                 03265000
VOLPUB   EQU   VOLSTATA                                                 03266000
VOLID    EQU   VOLUNTAB                                                 03267000
EDLNOJES EQU   EDLINDIC                                                 03268000
EDLVOLAF EQU   EDLINDIC                                                 03269000
EDLENQ   EQU   EDLINDIC                                                 03270000
EDLDADSM EQU   EDLINDIC                                                 03271000
EDLALCD  EQU   EDLINDIC                                                 03272000
EDLJINEL EQU   EDLGRFLG                                                 03273000
EDLUCBNO EQU   EDLGNTRY+4                                               03274000
EDLNXGRP EQU   EDLGNTRY                                                 03275000
@NM00002 EQU   EDLENTRY+18                                              03276000
EDLNSCNT EQU   EDLENTRY+16                                              03277000
EDLMGENS EQU   EDLUVFLG                                                 03278000
EDLVAM   EQU   EDLUVFLG                                                 03279000
EDLGMTP  EQU   EDLHDR+12                                                03280000
EDLLUV   EQU   EDLHDR                                                   03281000
GRPMASK  EQU   GMTENTRY                                                 03282000
GMTENTNO EQU   GMTHDR                                                   03283000
EUCBENLN EQU   EUCBHDR+4                                                03284000
EUCBENNO EQU   EUCBHDR                                                  03285000
GRPTR    EQU   GRPTRTAB                                                 03286000
GENGRPTR EQU   GENENTRY+8                                               03287000
GENGRPNO EQU   GENENTRY+4                                               03288000
GENDEVT  EQU   GENENTRY                                                 03289000
GENENTLN EQU   GENHDR+4                                                 03290000
GENENTNO EQU   GENHDR                                                   03291000
LUVAGMTP EQU   LUVENTRY+28                                              03292000
@NM00001 EQU   LUVFLAGS                                                 03293000
LUVMGENS EQU   LUVFLAGS                                                 03294000
LUVAGMSK EQU   LUVFLAGS                                                 03295000
LUVVAM   EQU   LUVFLAGS                                                 03296000
LUVGENP  EQU   LUVENTRY+20                                              03297000
LUVGENNO EQU   LUVENTRY+16                                              03298000
LUVALUE  EQU   LUVENTRY+8                                               03299000
UNITNAME EQU   LUVENTRY                                                 03300000
LUVENTLN EQU   LUVHDR+4                                                 03301000
LUVENTNO EQU   LUVHDR                                                   03302000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03303000
@RC00187 EQU   @RC00092                                                 03304000
@RC00303 EQU   @RC00299                                                 03305000
@RC00341 EQU   @RC00339                                                 03306000
BITOFF   EQU   @EL00003                                                 03307000
@RC00305 EQU   @RC00303                                                 03308000
@ENDDATA EQU   *                                                        03309000
         END   IEFAB486,(C'PLS1334',0701,76342)                         03310000
