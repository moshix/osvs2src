         TITLE 'IEFAB499 - VM&&V WTO/R FORMAT RTN                      *00001000
                         '                                              00002000
IEFAB499 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEFAB499  73.325'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         MODESET EXTKEY=SCHED,SAVEKEY=(2)                               00015000
         GSPACE  R,LV=(0)                                               00016000
         LR    @11,@01                                          01S0001 00017000
         USING @DATD,@11                                        01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         STC   @02,@OLDKEY                                      01S0001 00020000
         MODESET KEYADDR=(2)                                            00021000
         LM    @00,@02,20(@13)                                  01S0001 00022000
         ST    @11,8(,@13)                                      01S0001 00023000
         LR    @13,@11                                          01S0001 00024000
         MODESET EXTKEY=ZERO                                            00025000
         MVC   @PC00001(20),0(@01)                              01S0001 00026000
         MODESET EXTKEY=SCHED                                           00027000
*                                        SCAN                        */ 00028000
*RETCODE = ZERO;                       /*INITIALIZE RETURN CODE      */ 00029000
         SLR   RETCODE,RETCODE                                  01S0027 00030000
*/********************************************************************/ 00031000
*/*                                                                  */ 00032000
*/* SEGMENT NAME - A499INIT                                          */ 00033000
*/*                                                                  */ 00034000
*/* DESCRIPTIVE NAME - IEFAB499 MESSAGE INITIALIZATION               */ 00035000
*/*                                                                  */ 00036000
*/* FUNCTION -                                                       */ 00037000
*/*   THIS ROUTINE PERFORMS THE FOLLOWING INITIALIZATION FUNCTIONS:  */ 00038000
*/*     .GETS CORE FOR THE WTO/R PARAMETER LIST                      */ 00039000
*/*     .ESTABLISHES ADDRESSABILITY TO THE PARM LIST AND TO THE      */ 00040000
*/*      TEXT BUFFER                                                 */ 00041000
*/*     .DETERMINES THE LENGTH OF THE JOB NAME, STEP NAME AND/OR     */ 00042000
*/*      DATA SET NAME TO BE USED IN THE MESSAGE                     */ 00043000
*/*                                                                  */ 00044000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00045000
*/*   INPUT -                                                        */ 00046000
*/*     DSNAMEP - PTR TO DSNAME OR 0                                 */ 00047000
*/*     JOBNAMEP - PTR TO JOB NAME OR 0                              */ 00048000
*/*     STEPNAMP - PTR TO STEP NAME OR 0                             */ 00049000
*/*                                                                  */ 00050000
*/* EXIT -                                                           */ 00051000
*/*   CONDITION - INITIALIZATION COMPLETED SUCCESSFULLY              */ 00052000
*/*     OUTPUT -                                                     */ 00053000
*/*       DSNAMELM - LENGTH OF DATA SET NAME OR 0                    */ 00054000
*/*       JOBNAMLN - LENGTH OF JOB NAME OR 0                         */ 00055000
*/*       LINECNT  - LINE COUNT = 1                                  */ 00056000
*/*       MSGPTR   - PTR TO START OF TEXT BUFFER                     */ 00057000
*/*       WPLPTR   - PTR TO START OF WTO PARM LIST (WPL)             */ 00058000
*/*       WTOLISTP - PTR TO WTO/R PARM LIST (IN INPUT PARM AREA)     */ 00059000
*/*       WTOLSTLN - LENGTH OF PARM LIST (IN INPUT PARM AREA)        */ 00060000
*/*     RETURN CODE -                                                */ 00061000
*/*       RETCODE = 0                                                */ 00062000
*/*   CONDITION - NO CORE AVAILABLE FOR WPL                          */ 00063000
*/*     OUTPUT - NONE                                                */ 00064000
*/*     RETURN CODE                                                  */ 00065000
*/*       RETCODE = 4                                                */ 00066000
*/********************************************************************/ 00067000
* /* ?GETSTORG (SUBPL230,MAXBUFR,WPLPTR);*/                     02S0028 00068000
*   /* DEFINITIONS OF GETMAIN PARMS */                          02S0028 00069000
*   DCL                                                         02S0028 00070000
*     GTSTR0   FIXED(31) REG(0),/*GTMN PARM REG*/               02S0028 00071000
*     GTSTR1   FIXED(31) REG(1),/*GTMN PARM REG*/               02S0028 00072000
*     GTSTR2   PTR(31)   REG(2),/*GTMN PARM REG*/               02S0028 00073000
*     GTSTR15  FIXED(31) REG(15),/*GTMN RET COD*/               02S0028 00074000
*     GTSTRTCD FIXED(31); /* GETMAIN RTN CODE  */               02S0028 00075000
*   DCL                                                         02S0029 00076000
*     GTSTR3   FIXED(31) REG(3),/* CLEARING REG*/               02S0029 00077000
*     GTSTR4   FIXED(31) REG(4),/* CLEARING REG*/               02S0029 00078000
*     GTSTR5   FIXED(31) REG(5),/* CLEARING REG*/               02S0029 00079000
*     GTSTR6   FIXED(31) REG(6),/* CLEARING REG*/               02S0029 00080000
*     GTSTR7   FIXED(31) REG(7),/* CLEARING REG*/               02S0029 00081000
*     GTSTR8   FIXED(31) REG(8),/* CLEARING REG*/               02S0029 00082000
*     GTSTZERO FIXED(31) INIT(0),                               02S0029 00083000
*     GTST253  FIXED(31) CONSTANT(253);                         02S0029 00084000
*   RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/               02S0030 00085000
*   GTSTR0 = MAXBUFR; /* SET AMOUNT*/                           02S0031 00086000
         LA    GTSTR0,160                                       02S0031 00087000
*   GTSTR2 = SUBPL230; /* SET SUBPOOL*/                         02S0032 00088000
         LA    GTSTR2,230                                       02S0032 00089000
*   GENERATE CODE;                                              02S0033 00090000
     GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN                               00091000
*   GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/               02S0034 00092000
         LR    GTSTRTCD,GTSTR15                                 02S0034 00093000
*   WPLPTR = GTSTR1; /* ADDR OF GOTN STORG*/                    02S0035 00094000
         LR    WPLPTR,GTSTR1                                    02S0035 00095000
*   RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */                02S0036 00096000
*   IF GTSTRTCD = 0 THEN /*GETMAIN SUCCESSFUL? */               02S0037 00097000
         LTR   GTSTRTCD,GTSTRTCD                                02S0037 00098000
         BNZ   @RF00037                                         02S0037 00099000
*     DO;               /* YES, CLEAR STORAGE.*/                02S0038 00100000
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       02S0039 00101000
*                          GTSTR7,GTSTR8) RSTD;                 02S0039 00102000
*       GTSTR4 = WPLPTR; /*STORG PTR*/                          02S0040 00103000
         LR    GTSTR4,WPLPTR                                    02S0040 00104000
*       GTSTR5 = MAXBUFR; /*STORG AMNT*/                        02S0041 00105000
         LA    GTSTR5,160                                       02S0041 00106000
*       GTSTR7 = '00000000'X; /*PAD CHAR & LNTH*/               02S0042 00107000
         SLR   GTSTR7,GTSTR7                                    02S0042 00108000
*       IF SUBPL230 = GTST253 THEN                              02S0043 00109000
         B     @RF00043                                         02S0043 00110000
*      GEN                                                      02S0044 00111000
*   (MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8);           02S0044 00112000
         MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8                 00113000
*       GEN REFS(GTSTR4,GTSTR6);                                02S0045 00114000
@RF00043 DS    0H                                               02S0045 00115000
          MVCL  GTSTR4,GTSTR6 CLEAR GOTTEN STORG                        00116000
*       IF SUBPL230 = GTST253 THEN                              02S0046 00117000
         B     @RF00046                                         02S0046 00118000
*         GEN (MODESET KEYADDR=(2));                            02S0047 00119000
         MODESET KEYADDR=(2)                                            00120000
*       RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                       02S0048 00121000
*                          GTSTR7,GTSTR8) UNRSTD;               02S0048 00122000
@RF00046 DS    0H                                               02S0049 00123000
*     END;       /* STORAGE CLEARING COMPLETED */               02S0049 00124000
*   ELSE                                                        02S0050 00125000
*   WPLPTR= 0;   /* CLEAR RETURN ADDR. */                       02S0050 00126000
         B     @RC00037                                         02S0050 00127000
@RF00037 SLR   WPLPTR,WPLPTR                                    02S0050 00128000
*   GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */               02S0051 00129000
@RC00037 LR    GTSTR15,GTSTRTCD                                 02S0051 00130000
*                                      /* RESTORE LIST PRINT STATUS  */ 00131000
*  /*GET CORE FOR MSG BUFFER     */                             02S0052 00132000
*RETCODE = REG15;                      /*SAVE RETURN CODE            */ 00133000
         LR    RETCODE,REG15                                    02S0052 00134000
*IF RETCODE = ZERO THEN                /*CORE GOTTEN O.K.            */ 00135000
         LTR   RETCODE,RETCODE                                  02S0053 00136000
         BNZ   @RF00053                                         02S0053 00137000
*  DO;                                 /*CONTINUE INITIALIZATION     */ 00138000
*    WTOLISTP = WPLPTR;                /*SET PTR TO BUFF IN PARM BLK */ 00139000
         L     @10,@PC00001                                     02S0055 00140000
         ST    WPLPTR,WTOLISTP(,@10)                            02S0055 00141000
*    WTOLSTLN = MAXBUFR;               /*SET LENGTH OF BUFFER        */ 00142000
         MVC   WTOLSTLN(2,@10),@CH00256                         02S0056 00143000
*    IF MSGID = VERMSG THEN            /*MSG WILL NEED WTOR PREFIX   */ 00144000
         CLI   MSGID(@10),4                                     02S0057 00145000
         BNE   @RF00057                                         02S0057 00146000
*      WPLPTR = WPLPTR + PREFXLEN;     /*ADJUST PTR PASS PREFIX      */ 00147000
         AL    WPLPTR,PREFXLEN                                  02S0058 00148000
*    MSGPTR = ADDR(WPLTXT);            /*INIT BUFF PTR TO BEGINNING     00149000
*                                        OF TEXT AREA                */ 00150000
@RF00057 LA    @10,WPLTXT(,WPLPTR)                              02S0059 00151000
         ST    @10,MSGPTR                                       02S0059 00152000
*    EVNTACTN = OFF;                   /*INIT EVENTUAL ACTION INDIC  */ 00153000
         NI    EVNTACTN,B'01111111'                             02S0060 00154000
*    LINECNT = ONE;                    /*INIT LINE COUNT             */ 00155000
         MVI   LINECNT,X'01'                                    02S0061 00156000
*    JOBNAMLN = ZERO;                  /*INIT LENGTH OF JOBNAME      */ 00157000
         SLR   @10,@10                                          02S0062 00158000
         STH   @10,JOBNAMLN                                     02S0062 00159000
*    STPNAMLN = ZERO;                  /*INIT LENGTH OF STEPNAME     */ 00160000
         STH   @10,STPNAMLN                                     02S0063 00161000
*    DSNAMELN = ZERO;                  /*INIT LENGTH OF DSNAME       */ 00162000
         STH   @10,DSNAMELN                                     02S0064 00163000
*    IF JOBNAMEP ^= ZERO THEN          /*JOB NAME NEEDED             */ 00164000
         L     @08,@PC00001+8                                   02S0065 00165000
         C     @10,JOBNAMEP(,@08)                               02S0065 00166000
         BE    @RF00065                                         02S0065 00167000
*      DO;                             /*GET NUMBER NON-BLANK CHARS  */ 00168000
*        JOBNAMLN = MAXJNMLN;          /*SET MAX LENGTH OF NAME      */ 00169000
         MVC   JOBNAMLN(2),@CH00049                             02S0067 00170000
*        CALL SQUEEZE(JOBNAMEP,JOBNAMLN); /*COMPRESS BLANKS FROM NAME*/ 00171000
         ST    @08,@AL00001                                     02S0068 00172000
         LA    @10,JOBNAMLN                                     02S0068 00173000
         ST    @10,@AL00001+4                                   02S0068 00174000
         LA    @01,@AL00001                                     02S0068 00175000
         BAL   @14,SQUEEZE                                      02S0068 00176000
*      END;                                                     02S0069 00177000
*    IF STEPNAMP ^= ZERO THEN          /*STEP NAME NEEDED            */ 00178000
@RF00065 L     @10,@PC00001+12                                  02S0070 00179000
         ICM   @08,15,STEPNAMP(@10)                             02S0070 00180000
         BZ    @RF00070                                         02S0070 00181000
*      DO;                             /*GET LENGTH FOR MSG          */ 00182000
*        STPNAMLN = MAXSNMLN;          /*SET MAX LENGTH              */ 00183000
         MVC   STPNAMLN(2),@CH00049                             02S0072 00184000
*        CALL SQUEEZE(STEPNAMP,STPNAMLN); /*COMPRESS BLANKS          */ 00185000
         ST    @10,@AL00001                                     02S0073 00186000
         LA    @10,STPNAMLN                                     02S0073 00187000
         ST    @10,@AL00001+4                                   02S0073 00188000
         LA    @01,@AL00001                                     02S0073 00189000
         BAL   @14,SQUEEZE                                      02S0073 00190000
*      END;                                                     02S0074 00191000
*    IF DSNAMEP ^= ZERO THEN           /*DS NAME NEEDED              */ 00192000
@RF00070 L     @10,@PC00001+16                                  02S0075 00193000
         ICM   @08,15,DSNAMEP(@10)                              02S0075 00194000
         BZ    @RF00075                                         02S0075 00195000
*      DO;                             /*GET LENGTH FOR MSG          */ 00196000
*        DSNAMELN = MAXDSNLN;          /*SET MAXIMUM LENGTH          */ 00197000
         MVC   DSNAMELN(2),@CH00258                             02S0077 00198000
*        CALL SQUEEZE(DSNAMEP,DSNAMELN); /*GET NO. NON-BLANK CHARS   */ 00199000
         ST    @10,@AL00001                                     02S0078 00200000
         LA    @10,DSNAMELN                                     02S0078 00201000
         ST    @10,@AL00001+4                                   02S0078 00202000
         LA    @01,@AL00001                                     02S0078 00203000
         BAL   @14,SQUEEZE                                      02S0078 00204000
*      END;                                                     02S0079 00205000
*  END;                                                         02S0080 00206000
*ELSE;                                 /*NO CORE AVAILABLE FOR BUFFER*/ 00207000
@RF00053 DS    0H                                               02S0082 00208000
*IF RETCODE = ZERO THEN                /*BUFFER CORE OBTAINED O.K.   */ 00209000
@RC00053 SLR   @10,@10                                          01S0082 00210000
         CR    RETCODE,@10                                      01S0082 00211000
         BNE   @RF00082                                         01S0082 00212000
*  DO;                                 /*BUILD REQUIRED MESSAGE      */ 00213000
*    IF MSGID = VERMSG THEN            /*NEED VERIFY  MESSAGE        */ 00214000
         L     @08,@PC00001                                     01S0084 00215000
         CLI   MSGID(@08),4                                     01S0084 00216000
         BNE   @RF00084                                         01S0084 00217000
*      DO;                                                      01S0085 00218000
*/********************************************************************/ 00219000
*/*                                                                  */ 00220000
*/* SEGMENT NAME - BVERMSG                                           */ 00221000
*/*                                                                  */ 00222000
*/* DESCRIPTIVE NAME - BUILD VERIFY MESSAGE (IEF369D)                */ 00223000
*/*                                                                  */ 00224000
*/* FUNCTION -                                                       */ 00225000
*/*   THIS ROUTINE CONSTRUCTS THE VERIFY MESSAGE USING DATA OBTAINED */ 00226000
*/*   FROM THE INPUT PARAMETER AREA AND THE MESSAGE MODULE, IEFAB4M4.*/ 00227000
*/*                                                                  */ 00228000
*/*   OPERATION -                                                    */ 00229000
*/*     A PTR TO THE TEXT OF THE VERIFY MESSAGE IS RECEIVED AS       */ 00230000
*/*     INPUT (ADINFOP). THE MESSAGE ID, THE JOB AND STEP NAMES  (IF */ 00231000
*/*     PRESENT), AND THE MESSAGE TEXT ARE POSITIONED IN THE         */ 00232000
*/*     MESSAGE BUFFER AND THE WTO/R PARAMETER LIST COMPLETED (VIA   */ 00233000
*/*     THE 'COMPLWPL' SUBROUTINE).                                  */ 00234000
*/*                                                                  */ 00235000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00236000
*/*   INPUT -                                                        */ 00237000
*/*     ADINFOP  - PTR TO VERIFY MESSAGE TEXT                        */ 00238000
*/*     ADINFOLN - LENGTH OF TEXT                                    */ 00239000
*/*     JOBNAMLN - LENGTH OF JOBNAME                                 */ 00240000
*/*     JOBNAMEP - PTR TO JOBNAME                                    */ 00241000
*/*     LINECNT  - CURRENT LINE NUMBER (ALWAYS 1 FOR VERIFY MSG)     */ 00242000
*/*     MSGPTR   - PTR TO START OF TEXT BUFFER                       */ 00243000
*/*     STEPNAMP - PTR TO STEP NAME                                  */ 00244000
*/*     STPNAMLN - LENGTH OF STEP NAME                               */ 00245000
*/*     WPLPTR   - PTR TO START OF WTO PARM LIST                     */ 00246000
*/*                                                                  */ 00247000
*/* EXIT -                                                           */ 00248000
*/*   CONDITION - WTO PARM LIST FOR VERIFY MESSAGE COMPLETED         */ 00249000
*/*     OUTPUT -                                                     */ 00250000
*/*       COMPLETED WPL FOR VERIFY MESSAGE                           */ 00251000
*/*     RETURN CODES - NONE                                          */ 00252000
*/********************************************************************/ 00253000
*VMSGID = MSGNO(MSGID);                /*GET MSG ID FROM MSG MODULE  */ 00254000
         L     @02,MSGPTR                                       02S0086 00255000
         SLR   @15,@15                                          02S0086 00256000
         IC    @15,MSGID(,@08)                                  02S0086 00257000
         SLA   @15,3                                            02S0086 00258000
         L     @08,@CA00292                                     02S0086 00259000
         ALR   @08,@15                                          02S0086 00260000
         AL    @08,@CF00328                                     02S0086 00261000
         MVC   VMSGID(8,@02),MSGNO-MSGNO(@08)                   02S0086 00262000
*VMSGJNM(1:JOBNAMLN) = JOBNAME(1:JOBNAMLN); /*INSERT JOB NAME IN MSG */ 00263000
         LH    @08,JOBNAMLN                                     02S0087 00264000
         LR    @15,@08                                          02S0087 00265000
         BCTR  @15,0                                            02S0087 00266000
         L     @14,@PC00001+8                                   02S0087 00267000
         L     @01,JOBNAMEP(,@14)                               02S0087 00268000
         EX    @15,@SM00329                                     02S0087 00269000
*MSGPTR = MSGPTR + LENGTH(VMSGID) + JOBNAMLN; /*UPDATE BUFFER PTR    */ 00270000
         AH    @02,@CH00049                                     02S0088 00271000
         ALR   @02,@08                                          02S0088 00272000
         ST    @02,MSGPTR                                       02S0088 00273000
*IF STPNAMLN ^= ZERO THEN              /*STEP NAME PRESENT FOR MSG   */ 00274000
         LH    @08,STPNAMLN                                     02S0089 00275000
         CR    @08,@10                                          02S0089 00276000
         BE    @RF00089                                         02S0089 00277000
*  DO;                                                          02S0090 00278000
*    VMSGDLIM = COMMA;                 /*INSERT DELIMITER            */ 00279000
         MVC   VMSGDLIM(1,@02),COMMA                            02S0091 00280000
*    VMSGSTNM(1:STPNAMLN) = STEPNAME(1:STPNAMLN); /*ADD STEP NAME    */ 00281000
         LR    @10,@08                                          02S0092 00282000
         BCTR  @10,0                                            02S0092 00283000
         L     @15,@PC00001+12                                  02S0092 00284000
         L     @01,STEPNAMP(,@15)                               02S0092 00285000
         EX    @10,@SM00331                                     02S0092 00286000
*    MSGPTR = MSGPTR + STPNAMLN + COMMALEN; /*UPDATE BUFFER PTR      */ 00287000
         ALR   @02,@08                                          02S0093 00288000
         AH    @02,COMMALEN                                     02S0093 00289000
         ST    @02,MSGPTR                                       02S0093 00290000
*  END;                                                         02S0094 00291000
*ELSE;                                 /*NO STEP NAME FOR MSG        */ 00292000
@RF00089 DS    0H                                               02S0096 00293000
*MSG(1:ADINFOLN) = ADDLINFO(1:ADINFOLN); /*PUT MSG TEXT INTO BUFFER  */ 00294000
         L     @10,MSGPTR                                       02S0096 00295000
         L     @08,@PC00001                                     02S0096 00296000
         LH    @15,ADINFOLN(,@08)                               02S0096 00297000
         LR    @14,@15                                          02S0096 00298000
         BCTR  @14,0                                            02S0096 00299000
         L     @08,ADINFOP(,@08)                                02S0096 00300000
         EX    @14,@SM00333                                     02S0096 00301000
*MSGPTR = MSGPTR + ADINFOLN;           /*UPDATE BUFFER PTR           */ 00302000
         ALR   @10,@15                                          02S0097 00303000
         ST    @10,MSGPTR                                       02S0097 00304000
*MSGLNTH = MSGPTR - ADDR(WPLTXT);      /*SET LENGTH OF MSG           */ 00305000
         LA    MSGLNTH,WPLTXT(,WPLPTR)                          02S0098 00306000
         SLR   @10,MSGLNTH                                      02S0098 00307000
         LR    MSGLNTH,@10                                      02S0098 00308000
*CALL COMPLWPL;                        /*COMPLETE THE WTO PARM LIST  */ 00309000
         BAL   @14,COMPLWPL                                     02S0099 00310000
*      END;                                                     01S0100 00311000
*    ELSE                                                       01S0101 00312000
*      DO;                                                      01S0101 00313000
         B     @RC00084                                         01S0101 00314000
@RF00084 DS    0H                                               01S0102 00315000
*/********************************************************************/ 00316000
*/*                                                                  */ 00317000
*/* SEGMENT NAME - BLDBASIC                                          */ 00318000
*/*                                                                  */ 00319000
*/* DESCRIPTIVE NAME - BUILD BASIC MOUNT/DISMOUNT MESSAGE            */ 00320000
*/*                                                                  */ 00321000
*/* FUNCTION -                                                       */ 00322000
*/*   THIS ROUTINE CONSTRUCTS THE BASIC PORTION OF A MOUNT OR A      */ 00323000
*/*   DISMOUNT (UNLOAD) MESSAGE USING DATA FROM THE INPUT PARAMETER  */ 00324000
*/*   AREA AND THE MESSAGE MODULE IEFAB4M4. THE MESSAGE BUILT        */ 00325000
*/*   INCLUDES ALL OF THE DATA SPECIFIED UP TO THE JOBSTEP NAME      */ 00326000
*/*   (I.E., MSGID, ACTION CODE, UNIT NAME, VOLUME SERIAL,           */ 00327000
*/*   VOLUME ATTRIBUTE, JOB NAME AND STEP NAME).                     */ 00328000
*/*                                                                  */ 00329000
*/*   OPERATION -                                                    */ 00330000
*/*     THE ROUTINE WILL FIRST INSERT ALL REQUIRED DATA INTO THE     */ 00331000
*/*     MESSAGE BUFFER. FOR OPTIONAL DATA THE ROUTINE MUST INSERT    */ 00332000
*/*     THE DATA IF IT IS SPECIFIED. OTHERWISE ITS ABSENCE FROM      */ 00333000
*/*     THE MESSAGE MUST BE DENOTED BY A COMMA.                      */ 00334000
*/*                                                                  */ 00335000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00336000
*/*   INPUT -                                                        */ 00337000
*/*     ACTCODE - INDEX TO MESSAGE ACTION CODE TEXT                  */ 00338000
*/*     ATTRIBUT - INDEX TO VOLUME ATTRIBUTE TEXT                    */ 00339000
*/*     JOBNAMLN - LENGTH OF JOB NAME IF GIVEN, ZERO OTHERWISE       */ 00340000
*/*     JOBNAMEP - PTR TO JOB NAME FOR MSG                           */ 00341000
*/*     MSGID - INDEX TO MESSAGE ID                                  */ 00342000
*/*     MSGPTR - PTR TO MESSAGE TEXT BUFFER                          */ 00343000
*/*     STPNAMLN  - LENGTH OF STEP NAME IF GIVEN,ZERO OTHERWISE      */ 00344000
*/*     STEPNAMP - PTR TO STEP NAME                                  */ 00345000
*/*     UNITNAME - UNIT NAME FOR MESSAGE                             */ 00346000
*/*     VOLSERP - PTR TO VOLSER FOR MESSAGE OR ZERO                  */ 00347000
*/*     WPLPTR - PTR TO START OF WPL                                 */ 00348000
*/*                                                                  */ 00349000
*/* EXIT -                                                           */ 00350000
*/*   CONDITION - BASIC MESSAGE CONSTRUCTED IN BUFFER                */ 00351000
*/*     OUTPUT -                                                     */ 00352000
*/*       MSG - MESSAGE BUFFER COMPLETE THRU STEP NAME FIELD         */ 00353000
*/*       MSGPTR - PTR TO NEXT AVAILABLE POSITION IN BUFFER          */ 00354000
*/*       MSGLNTH - LENGTH OF TEXT CURRENTLY IN BUFFER               */ 00355000
*/*     RETURN CODE - NONE                                           */ 00356000
*/********************************************************************/ 00357000
*MSGIDENT = MSGNO(MSGID);              /*GET MESSAGE ID FROM MSG MOD */ 00358000
         L     @10,MSGPTR                                       02S0102 00359000
         L     @08,@PC00001                                     02S0102 00360000
         SLR   @02,@02                                          02S0102 00361000
         IC    @02,MSGID(,@08)                                  02S0102 00362000
         SLA   @02,3                                            02S0102 00363000
         L     @15,@CA00292                                     02S0102 00364000
         ALR   @15,@02                                          02S0102 00365000
         AL    @15,@CF00328                                     02S0102 00366000
         MVC   MSGIDENT(8,@10),MSGNO-MSGNO(@15)                 02S0102 00367000
*ACTNCODE = ACTION(ACTCODE);           /*GET ACTION CODE             */ 00368000
         SLR   @02,@02                                          02S0103 00369000
         IC    @02,ACTCODE(,@08)                                02S0103 00370000
         ALR   @02,@02                                          02S0103 00371000
         L     @15,@CA00290                                     02S0103 00372000
         ALR   @15,@02                                          02S0103 00373000
         AL    @15,@CF00335                                     02S0103 00374000
         MVC   ACTNCODE(2,@10),ACTION-ACTION(@15)               02S0103 00375000
*MSGUNAME = UNITNAME;                  /*INSERT INPUT UNIT NAME      */ 00376000
         MVC   MSGUNAME(3,@10),UNITNAME(@08)                    02S0104 00377000
*MSGDLIM = COMMA;                      /*INSERT DELIMITER            */ 00378000
         MVC   MSGDLIM(1,@10),COMMA                             02S0105 00379000
*MSGPTR = MSGPTR + LENGTH(HDRFMT);     /*UPDATE TEXT PTR TO NEXT SLOT*/ 00380000
         AH    @10,@CH00201                                     02S0106 00381000
         ST    @10,MSGPTR                                       02S0106 00382000
*IF VOLSERP ^= ZERO &                  /*VOL SER SUPPLIED FOR MSG    */ 00383000
*    VOLSER(1) ^= NSPTAPE &            /*NOT 'FF' VOL SER            */ 00384000
*    VOLSER ^= ZEROVLSR THEN           /*NOT A ZERO VOL SER          */ 00385000
         L     @08,@PC00001+4                                   02S0107 00386000
         L     @08,VOLSERP(,@08)                                02S0107 00387000
         LTR   @08,@08                                          02S0107 00388000
         BZ    @RF00107                                         02S0107 00389000
         CLC   VOLSER(1,@08),NSPTAPE                            02S0107 00390000
         BE    @RF00107                                         02S0107 00391000
         CLC   VOLSER(6,@08),ZEROVLSR                           02S0107 00392000
         BE    @RF00107                                         02S0107 00393000
*  DO;                                                          02S0108 00394000
*    MSGVLSER = VOLSER;                /*PUT VOLSER INTO BUFFER      */ 00395000
         MVC   MSGVLSER(6,@10),VOLSER(@08)                      02S0109 00396000
*    MSGPTR = MSGPTR + LENGTH(VOLSER); /*UPDATE BUFFER PTR           */ 00397000
         AH    @10,@CH00203                                     02S0110 00398000
         ST    @10,MSGPTR                                       02S0110 00399000
*  END;                                                         02S0111 00400000
*MSG(1) = COMMA;                       /*INSERT DELIMITER            */ 00401000
@RF00107 L     @10,MSGPTR                                       02S0112 00402000
         MVC   MSG(1,@10),COMMA                                 02S0112 00403000
*MSGPTR = MSGPTR + COMMALEN;           /*UPDATE TO NEXT BUFFR POS'N  */ 00404000
         AH    @10,COMMALEN                                     02S0113 00405000
         ST    @10,MSGPTR                                       02S0113 00406000
*IF ATTRIBUT ^= ZERO THEN              /*ATTRIBUTE NEEDED IN MSG     */ 00407000
         L     @08,@PC00001                                     02S0114 00408000
         CLI   ATTRIBUT(@08),0                                  02S0114 00409000
         BE    @RF00114                                         02S0114 00410000
*  DO;                                                          02S0115 00411000
*    ATTRPTR = ADDR(ATRIBUTE)          /*GET PTR TO ATTRIBUTE IN MSG    00412000
*                                        MODULE                      */ 00413000
*        + ATTROFFS(ATTRIBUT);         /*OFFSET TO TEXT IN MSG MOD   */ 00414000
         L     ATTRPTR,@CV00291                                 02S0116 00415000
         SLR   @05,@05                                          02S0116 00416000
         IC    @05,ATTRIBUT(,@08)                               02S0116 00417000
         ALR   @05,@05                                          02S0116 00418000
         L     @08,@CA00284                                     02S0116 00419000
         LA    @01,0(@05,@08)                                   02S0116 00420000
         AL    @01,@CF00336                                     02S0116 00421000
         SLR   @00,@00                                          02S0116 00422000
         IC    @00,ATTROFFS-ATTROTAB-1(,@01)                    02S0116 00423000
         ALR   ATTRPTR,@00                                      02S0116 00424000
*    ATTRLEN = ATTRLNTH(ATTRIBUT);     /*GET LENGTH OF ATTRIBUTE     */ 00425000
         AL    @08,@CF00335                                     02S0117 00426000
         SLR   ATTRLEN,ATTRLEN                                  02S0117 00427000
         IC    ATTRLEN,ATTRLNTH-ATTROTAB(@05,@08)               02S0117 00428000
*    MSG(1:ATTRLEN) = ATTRTEXT(1:ATTRLEN); /*MOVE ATTRIBUTE TO BUFFER*/ 00429000
         LR    @08,ATTRLEN                                      02S0118 00430000
         BCTR  @08,0                                            02S0118 00431000
         EX    @08,@SM00337                                     02S0118 00432000
*    MSGPTR = MSGPTR + ATTRLEN;        /*UPDATE BUFFER PTR           */ 00433000
         ALR   @10,ATTRLEN                                      02S0119 00434000
         ST    @10,MSGPTR                                       02S0119 00435000
*  END;                                                         02S0120 00436000
*MSG(1) = COMMA;                       /*INSERT DATA DELIMITER       */ 00437000
@RF00114 L     @10,MSGPTR                                       02S0121 00438000
         MVC   MSG(1,@10),COMMA                                 02S0121 00439000
*MSGPTR = MSGPTR + COMMALEN;           /*UPDATE TO NEXT BUFF POS'N   */ 00440000
         AH    @10,COMMALEN                                     02S0122 00441000
         ST    @10,MSGPTR                                       02S0122 00442000
*IF JOBNAMLN ^= ZERO THEN              /*JOB NAME TO GO IN MSG       */ 00443000
         LH    @08,JOBNAMLN                                     02S0123 00444000
         LTR   @08,@08                                          02S0123 00445000
         BZ    @RF00123                                         02S0123 00446000
*  DO;                                                          02S0124 00447000
*    MSG(1:JOBNAMLN) = JOBNAME(1:JOBNAMLN); /*MOVE JOBNAME TO BUFFER */ 00448000
         LR    @02,@08                                          02S0125 00449000
         BCTR  @02,0                                            02S0125 00450000
         L     @15,@PC00001+8                                   02S0125 00451000
         L     @01,JOBNAMEP(,@15)                               02S0125 00452000
         EX    @02,@SM00339                                     02S0125 00453000
*    MSGPTR = MSGPTR + JOBNAMLN;       /*UPDATE BUFFER PTR           */ 00454000
         ALR   @10,@08                                          02S0126 00455000
         ST    @10,MSGPTR                                       02S0126 00456000
*  END;                                                         02S0127 00457000
*MSG(1) = COMMA;                       /*INSERT DELIMITER            */ 00458000
@RF00123 L     @10,MSGPTR                                       02S0128 00459000
         MVC   MSG(1,@10),COMMA                                 02S0128 00460000
*MSGPTR = MSGPTR + COMMALEN;           /*UPDATE BUFFER PTR           */ 00461000
         AH    @10,COMMALEN                                     02S0129 00462000
         ST    @10,MSGPTR                                       02S0129 00463000
*IF STPNAMLN ^= ZERO THEN              /*STEP NAME TO GO IN MSG      */ 00464000
         LH    @08,STPNAMLN                                     02S0130 00465000
         LTR   @08,@08                                          02S0130 00466000
         BZ    @RF00130                                         02S0130 00467000
*  DO;                                                          02S0131 00468000
*    MSG(1:STPNAMLN) = STEPNAME(1:STPNAMLN); /*MOVE STEP NAME TO BUFF*/ 00469000
         LR    @02,@08                                          02S0132 00470000
         BCTR  @02,0                                            02S0132 00471000
         L     @15,@PC00001+12                                  02S0132 00472000
         L     @01,STEPNAMP(,@15)                               02S0132 00473000
         EX    @02,@SM00341                                     02S0132 00474000
*    MSGPTR = MSGPTR + STPNAMLN;       /*UPDATE BUFFER PTR           */ 00475000
         ALR   @10,@08                                          02S0133 00476000
         ST    @10,MSGPTR                                       02S0133 00477000
*  END;                                                         02S0134 00478000
*MSG(1) = COMMA;                       /*UNSERT DELIMITER            */ 00479000
@RF00130 L     @10,MSGPTR                                       02S0135 00480000
         MVC   MSG(1,@10),COMMA                                 02S0135 00481000
*MSGPTR = MSGPTR + COMMALEN;           /*UPDATE BUFFER PTR           */ 00482000
         AH    @10,COMMALEN                                     02S0136 00483000
         ST    @10,MSGPTR                                       02S0136 00484000
*MSGLNTH = MSGPTR - ADDR(WPLTXT);      /*CALC CURRENT MSG LENGTH     */ 00485000
         LA    MSGLNTH,WPLTXT(,WPLPTR)                          02S0137 00486000
         SLR   @10,MSGLNTH                                      02S0137 00487000
         LR    MSGLNTH,@10                                      02S0137 00488000
*        IF MSGID = UNLDMSG THEN       /*UNLOAD MESSAGE REQUESTED    */ 00489000
         L     @10,@PC00001                                     01S0138 00490000
         CLI   MSGID(@10),2                                     01S0138 00491000
         BNE   @RF00138                                         01S0138 00492000
*          DO;                         /*COMPLETE UNLOAD MESSAGE     */ 00493000
*/********************************************************************/ 00494000
*/*                                                                  */ 00495000
*/* SEGMENT NAME - BUNLDMSG                                          */ 00496000
*/*                                                                  */ 00497000
*/* DESCRIPTIVE NAME - BUILD UNLOAD MESSAGE (IEF234E)                */ 00498000
*/*                                                                  */ 00499000
*/* FUNCTION -                                                       */ 00500000
*/*   THIS ROUTINE COMPLETES THE CONSTRUCTION OF AN UNLOAD (DISMOUNT)*/ 00501000
*/*   MESSAGE.                                                       */ 00502000
*/*                                                                  */ 00503000
*/*   OPERATION -                                                    */ 00504000
*/*     THE BASIC TEXT OF THE UNLOAD MESSAGE IS RECEIVED AS INPUT TO */ 00505000
*/*     THIS ROUTINE. IF ADDITIONAL TEXT WAS REQUESTED BY THE CALLER */ 00506000
*/*     (ADINFOP ^= ZERO), THAT TEXT IS ADDED TO THE MESSAGE. IF THE */ 00507000
*/*     TEXT CANNOT FIT ON THE CURRENT LINE OF THE MESSAGE, A LINE   */ 00508000
*/*     SWITCH WILL BE DONE (VIA THE 'CHNGLINE' SUBROUTINE). EXTRA   */ 00509000
*/*     COMMAS PRIOR TO THE ADDITIONAL TEXT WILL BE DELETED, LEAVING */ 00510000
*/*     ONE COMMA BEFORE THE TEXT.                                   */ 00511000
*/*                                                                  */ 00512000
*/* ENTRY - INLINE SUBROUTINE                                        */ 00513000
*/*   INPUT -                                                        */ 00514000
*/*     ADINFOP  - PTR TO ADDITIONAL TEXT OR 0                       */ 00515000
*/*     ADINFOLN - LENGTH OF ADDITIONAL TEXT                         */ 00516000
*/*     LINECNT  - CURRENT LINE NUMBER                               */ 00517000
*/*     MSGPTR   - PTR TO NEXT BUFFER POSITION                       */ 00518000
*/*     MSGLNTH  - LENGTH OF TEXT CURRENTLY IN BUFFER                */ 00519000
*/*     WPLPTR   - PTR TO START OF WTO PARM LIST (WPL)               */ 00520000
*/*                                                                  */ 00521000
*/* EXIT -                                                           */ 00522000
*/*   CONDITION - WTO PARM LIST FOR UNLOAD MESSAGE COMPLETED         */ 00523000
*/*     OUTPUT -                                                     */ 00524000
*/*       WPL COMPLETED FOR UNLOAD MESSAGE                           */ 00525000
*/*     RETURN CODES - NONE                                          */ 00526000
*/********************************************************************/ 00527000
*DO WHILE(EOLCHAR = COMMA);            /*REMOVE TRAILING COMMAS      */ 00528000
         B     @DE00140                                         02S0140 00529000
@DL00140 DS    0H                                               02S0141 00530000
*  MSGPTR = MSGPTR - COMMALEN;         /*DECREMENT PTR TO E-O-L CHAR */ 00531000
         LH    @10,COMMALEN                                     02S0141 00532000
         L     @08,MSGPTR                                       02S0141 00533000
         SLR   @08,@10                                          02S0141 00534000
         ST    @08,MSGPTR                                       02S0141 00535000
*  MSGLNTH = MSGLNTH - COMMALEN;       /* DECREMENT PTR TO TEXT      */ 00536000
         SLR   MSGLNTH,@10                                      02S0142 00537000
*END;                                                           02S0143 00538000
@DE00140 L     @10,MSGPTR                                       02S0143 00539000
         LR    @08,@10                                          02S0143 00540000
         BCTR  @08,0                                            02S0143 00541000
         CLC   EOLCHAR(1,@08),COMMA                             02S0143 00542000
         BE    @DL00140                                         02S0143 00543000
*IF ADINFOP ^= ZERO THEN               /*SPACE INFO NEED IN UNLD MSG */ 00544000
         L     @08,@PC00001                                     02S0144 00545000
         ICM   @15,15,ADINFOP(@08)                              02S0144 00546000
         BZ    @RF00144                                         02S0144 00547000
*  DO;                                                          02S0145 00548000
*    MSG(1) = COMMA;                   /*ADD COMMA BEFORE INFO       */ 00549000
         MVC   MSG(1,@10),COMMA                                 02S0146 00550000
*    MSGPTR = MSGPTR + COMMALEN;       /*UPDATE BUFFER PTR           */ 00551000
         LH    @15,COMMALEN                                     02S0147 00552000
         ALR   @10,@15                                          02S0147 00553000
         ST    @10,MSGPTR                                       02S0147 00554000
*    MSGLNTH = MSGLNTH + COMMALEN;     /*UPDATE TEXT LENGTH          */ 00555000
         ALR   MSGLNTH,@15                                      02S0148 00556000
*    IF MSGLNTH + ADINFOLN > ONELINE THEN /*NEED NEW LINE FOR ADD'L     00557000
*                                        TEXT                        */ 00558000
         LR    @10,MSGLNTH                                      02S0149 00559000
         AH    @10,ADINFOLN(,@08)                               02S0149 00560000
         CH    @10,@CH00272                                     02S0149 00561000
         BNH   @RF00149                                         02S0149 00562000
*      CALL CHNGLINE;                  /*SWITCH LINES IN PARM LIST   */ 00563000
         BAL   @14,CHNGLINE                                     02S0150 00564000
*    ELSE;                             /*ADD'L TEXT FITS ON CURRENT     00565000
*                                        LINE                        */ 00566000
@RF00149 DS    0H                                               02S0152 00567000
*    MSG(1:ADINFOLN) = ADDLINFO(1:ADINFOLN); /*INSERT SPACE INFO     */ 00568000
         L     @10,MSGPTR                                       02S0152 00569000
         L     @08,@PC00001                                     02S0152 00570000
         LH    @15,ADINFOLN(,@08)                               02S0152 00571000
         LR    @14,@15                                          02S0152 00572000
         BCTR  @14,0                                            02S0152 00573000
         L     @08,ADINFOP(,@08)                                02S0152 00574000
         EX    @14,@SM00333                                     02S0152 00575000
*    MSGLNTH = MSGLNTH + ADINFOLN;     /*UPDATE TEXT LENGTH          */ 00576000
         ALR   MSGLNTH,@15                                      02S0153 00577000
*    MSGPTR = MSGPTR + ADINFOLN;       /*UPDATE BUFFER PTR           */ 00578000
         ALR   @10,@15                                          02S0154 00579000
         ST    @10,MSGPTR                                       02S0154 00580000
*  END;                                                         02S0155 00581000
*ELSE;                                 /*NO SPACE INFO FOR MESSAGE   */ 00582000
@RF00144 DS    0H                                               02S0157 00583000
*EVNTACTN = ON;                        /*INDICATE 'EVENTUAL ACTION      00584000
*                                        MESSAGE                     */ 00585000
         OI    EVNTACTN,B'10000000'                             02S0157 00586000
*CALL COMPLWPL;                        /*COMPLETE THE WTO PARM LIST  */ 00587000
         BAL   @14,COMPLWPL                                     02S0158 00588000
*          END;                                                 01S0159 00589000
*        ELSE                          /*MSGID NOT FOR UNLOAD MSG    */ 00590000
*          DO;                         /*COMPLETE MOUNT/MOUNT REPLY     00591000
*                                        MSG                         */ 00592000
         B     @RC00138                                         01S0160 00593000
@RF00138 DS    0H                                               01S0161 00594000
*/********************************************************************/ 00595000
*/*                                                                  */ 00596000
*/* SEGMENT NAME - BMNTMSG                                           */ 00597000
*/*                                                                  */ 00598000
*/* DESCRIPTIVE NAME - BUILD MOUNT MESSAGE (IEF233A OR IEF233D)      */ 00599000
*/*                                                                  */ 00600000
*/* FUNCTION -                                                       */ 00601000
*/*   THIS ROUTINE COMPLETES THE MOUNT MESSAGE. IF THE MESSAGE       */ 00602000
*/*   REQUIRES A REPLY, THE WTO MESSAGE IS ISSUED AND THE PARAMETER  */ 00603000
*/*   LIST FOR THE SUBSEQUENT WTOR IS CONSTRUCTED (SEE BLDWTOR).     */ 00604000
*/*   TRAILING COMMAS ARE DELETED.                                   */ 00605000
*/*                                                                  */ 00606000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00607000
*/*   INPUT -                                                        */ 00608000
*/*     ADINFOLN - LENGTH OF ADDITIONAL TEXT FOR MOUNT WITH REPLY OPT*/ 00609000
*/*     ADINFOP - PTR TO ADDITIONAL TEXT                             */ 00610000
*/*     DSNAMELN - LENGTH OF DSNAME IF ONE GIVEN, 0 OTHERWISE        */ 00611000
*/*     DSNAMEP - PTR TO DSNAME                                      */ 00612000
*/*     MSGID - INDEX TO ID OF MESSAGE TO BE ISSUED                  */ 00613000
*/*     MSGLNTH - LENGTH OF CURRENT TEXT IN PARM LIST                */ 00614000
*/*     MSGPTR  - PTR TO NEXT DATA POSITION IN TEXT                  */ 00615000
*/*     WPLPTR - PTR TO START OF WTO PARM LIST (WPL)                 */ 00616000
*/*                                                                  */ 00617000
*/* EXIT -                                                           */ 00618000
*/*   CONDITION - FUNCTION COMPLETED                                 */ 00619000
*/*     OUTPUT -                                                     */ 00620000
*/*       MOUNT MESSAGE BUILT IN MESSAGE BUFFER                      */ 00621000
*/*       IF NECESSARY, MESSAGE ISSUED AND CONDITIONAL MOUNT MESSAGE */ 00622000
*/*         BUILT                                                    */ 00623000
*/*     RETURN CODES - NONE                                          */ 00624000
*/********************************************************************/ 00625000
*IF DSNAMELN ^= ZERO THEN              /*DSNAME NEEDED IN MESSAGE    */ 00626000
         LH    @10,DSNAMELN                                     02S0161 00627000
         LTR   @10,@10                                          02S0161 00628000
         BZ    @RF00161                                         02S0161 00629000
*  DO;                                                          02S0162 00630000
*    IF MSGLNTH + DSNAMELN > ONELINE |  /*NO ROOM ON CURRENT LINE FOR*/ 00631000
*       ( MSGID = MONTRPLY &            /* FOR DSNAME AND COMMA IF IT*/ 00632000
*       MSGLNTH + DSNAMELN + COMMALEN > ONELINE )  THEN /* HAS REPLY */ 00633000
         LA    @08,70                                           02S0163 00634000
         ALR   @10,MSGLNTH                                      02S0163 00635000
         CR    @10,@08                                          02S0163 00636000
         BH    @RT00163                                         02S0163 00637000
         L     @15,@PC00001                                     02S0163 00638000
         CLI   MSGID(@15),3                                     02S0163 00639000
         BNE   @RF00163                                         02S0163 00640000
         AH    @10,COMMALEN                                     02S0163 00641000
         CR    @10,@08                                          02S0163 00642000
         BNH   @RF00163                                         02S0163 00643000
@RT00163 DS    0H                                               02S0164 00644000
*        CALL CHNGLINE;                /*SWITCH TO NEW LINE          */ 00645000
         BAL   @14,CHNGLINE                                     02S0164 00646000
*    ELSE;                             /*DSNAME FITS ON CURRENT LINE */ 00647000
@RF00163 DS    0H                                               02S0166 00648000
*    MSG(1:DSNAMELN) = DSNAME(1:DSNAMELN); /*MOVE DSNAME TO BUFFER   */ 00649000
         L     @10,MSGPTR                                       02S0166 00650000
         LH    @08,DSNAMELN                                     02S0166 00651000
         LR    @15,@08                                          02S0166 00652000
         BCTR  @15,0                                            02S0166 00653000
         L     @14,@PC00001+16                                  02S0166 00654000
         L     @01,DSNAMEP(,@14)                                02S0166 00655000
         EX    @15,@SM00344                                     02S0166 00656000
*    MSGPTR = MSGPTR + DSNAMELN;       /*UPDATE MSG TEXT PTR         */ 00657000
         ALR   @10,@08                                          02S0167 00658000
         ST    @10,MSGPTR                                       02S0167 00659000
*    MSGLNTH = MSGLNTH + DSNAMELN;     /*UPDATE TEXT LENGTH          */ 00660000
         ALR   MSGLNTH,@08                                      02S0168 00661000
*  END;                                                         02S0169 00662000
*ELSE                                  /*NO DSNAME FOR MESSAGE       */ 00663000
*  DO WHILE(EOLCHAR = COMMA);          /*REMOVE TRAILING COMMAS      */ 00664000
         B     @RC00161                                         02S0170 00665000
@RF00161 B     @DE00170                                         02S0170 00666000
@DL00170 DS    0H                                               02S0171 00667000
*    MSGPTR = MSGPTR - COMMALEN;       /*DECREMENT PTR TO EOLCHAR    */ 00668000
         LH    @10,COMMALEN                                     02S0171 00669000
         L     @08,MSGPTR                                       02S0171 00670000
         SLR   @08,@10                                          02S0171 00671000
         ST    @08,MSGPTR                                       02S0171 00672000
*    MSGLNTH = MSGLNTH - COMMALEN;     /*DECREMENT LENGTH OF TEXT    */ 00673000
         SLR   MSGLNTH,@10                                      02S0172 00674000
*  END;                                                         02S0173 00675000
@DE00170 L     @10,MSGPTR                                       02S0173 00676000
         BCTR  @10,0                                            02S0173 00677000
         CLC   EOLCHAR(1,@10),COMMA                             02S0173 00678000
         BE    @DL00170                                         02S0173 00679000
*IF MSGID = MONTRPLY THEN              /*MOUNT REPLY MESSAGE         */ 00680000
@RC00161 L     @10,@PC00001                                     02S0174 00681000
         CLI   MSGID(@10),3                                     02S0174 00682000
         BNE   @RF00174                                         02S0174 00683000
*  DO;                                 /*PUT REPLY TEXT ON NEW LINE  */ 00684000
*    MSG(1) = COMMA;                   /*END TEXT WITH COMMA         */ 00685000
         L     @10,MSGPTR                                       02S0176 00686000
         MVC   MSG(1,@10),COMMA                                 02S0176 00687000
*    MSGPTR = MSGPTR + COMMALEN;       /*UPDATE BUFFER PTR           */ 00688000
         LH    @08,COMMALEN                                     02S0177 00689000
         ALR   @10,@08                                          02S0177 00690000
         ST    @10,MSGPTR                                       02S0177 00691000
*    MSGLNTH = MSGLNTH + COMMALEN;     /*UPDATE TEXT LENGTH          */ 00692000
         ALR   MSGLNTH,@08                                      02S0178 00693000
*    CALL CHNGLINE;                    /*SET UP FOR NEXT LINE        */ 00694000
         BAL   @14,CHNGLINE                                     02S0179 00695000
*    MSG(1:ADINFOLN) = ADDLINFO(1:ADINFOLN); /*INSERT REPLY TEXT     */ 00696000
         L     @10,MSGPTR                                       02S0180 00697000
         L     @08,@PC00001                                     02S0180 00698000
         LH    @15,ADINFOLN(,@08)                               02S0180 00699000
         LR    @14,@15                                          02S0180 00700000
         BCTR  @14,0                                            02S0180 00701000
         L     @08,ADINFOP(,@08)                                02S0180 00702000
         EX    @14,@SM00333                                     02S0180 00703000
*    MSGPTR = MSGPTR + ADINFOLN;       /*UPDATE BUFFER PTR           */ 00704000
         ALR   @10,@15                                          02S0181 00705000
         ST    @10,MSGPTR                                       02S0181 00706000
*    MSGLNTH = MSGLNTH + ADINFOLN;     /*UPDATE TEXT LENGTH          */ 00707000
         ALR   MSGLNTH,@15                                      02S0182 00708000
*    EVNTACTN = ON;                    /*MSG REQUIRES EVENTUAL ACTION*/ 00709000
         OI    EVNTACTN,B'10000000'                             02S0183 00710000
*  END;                                                         02S0184 00711000
*ELSE;                                 /*NOT MOUNT WITH REPLY OPT    */ 00712000
@RF00174 DS    0H                                               02S0186 00713000
*CALL COMPLWPL;                        /*COMPLETE WTO PARM-LIST      */ 00714000
         BAL   @14,COMPLWPL                                     02S0186 00715000
*IF MSGID = MONTRPLY THEN                                       02S0187 00716000
         L     @10,@PC00001                                     02S0187 00717000
         CLI   MSGID(@10),3                                     02S0187 00718000
         BNE   @RF00187                                         02S0187 00719000
*  DO;                                 /*ISSUE WTO & BLD WTOR        */ 00720000
*    RFY (REG0,REG1) RSTD;                                      02S0189 00721000
*    REG0 = ZERO;                      /*CLEAR REG0 FOR WTO          */ 00722000
         SLR   REG0,REG0                                        02S0190 00723000
*    REG1 = WPLPTR;                    /*POINT TO WTO PARM LIST      */ 00724000
         LR    REG1,WPLPTR                                      02S0191 00725000
*    GEN (WTO MF=(E,(1)));             /*ISSUE MESSAGE               */ 00726000
         WTO MF=(E,(1))                                                 00727000
*    RFY (REG0,REG1) UNRSTD;                                    02S0193 00728000
*/********************************************************************/ 00729000
*/*                                                                  */ 00730000
*/* SEGMENT NAME - BLDWTOR                                           */ 00731000
*/*                                                                  */ 00732000
*/* DESCRIPTIVE NAME - BUILD WTOR PARM LIST                          */ 00733000
*/*                                                                  */ 00734000
*/* FUNCTION -                                                       */ 00735000
*/*   THIS ROUTINE BUILDS THE WTO PARAMETER THE CONDITIONAL MOUNT    */ 00736000
*/*   MESSAGE USING DATA FROM THE INPUT PARAMETER AREA AND THE       */ 00737000
*/*   MESSAGE MODULE, IEFAB4M4. THE CONDITIONAL MOUNT MESSAGE WILL   */ 00738000
*/*   BE ISSUED AS A WRITE-TO-OPERATOR-WITH-REPLY (WTOR) BY THE      */ 00739000
*/*   CALLER OF THIS MODULE.                                         */ 00740000
*/*                                                                  */ 00741000
*/*   OPERATION -                                                    */ 00742000
*/*     THE COMPLETE TEXT OF THE MESSAGE IS OBTAINED FROM THE        */ 00743000
*/*     MESSAGE MODULE. THE VARIABLE TEXT PORTIONS OF THE MESSAGE    */ 00744000
*/*     (I.E.,JOB NAME, STEP NAME, UNIT NAME AND VOLUME SERIAL)      */ 00745000
*/*     ARE THEN INSERTED BY THIS ROUTINE. THE WPL IS COMPLETED VIA  */ 00746000
*/*     THE 'COMPLWPL' SUBROUTINE.                                   */ 00747000
*/*                                                                  */ 00748000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00749000
*/*   INPUT -                                                        */ 00750000
*/*     WPLPTR  - PTR TO START OF WTO PARM LIST CORE                 */ 00751000
*/*     WTOLSTLN - LENGTH OF PARM LIST                               */ 00752000
*/*     JOBNAMEP - PTR TO JOB NAME                                   */ 00753000
*/*     JOBNAMLN - LENGTH OF JOB NAME                                */ 00754000
*/*     STEPNAMP - PTR TO STEP NAME (IF PRESENT)                     */ 00755000
*/*     STPNAMLN - LENGTH OF STEP NAME OR 0                          */ 00756000
*/*     UNITNAME - UNIT NAME (IN EBCDIC)                             */ 00757000
*/*     VOLSERP  - PTR TO VOLSER                                     */ 00758000
*/*                                                                  */ 00759000
*/* EXIT -                                                           */ 00760000
*/*   CONDITION - CONDITIONAL MOUNT MSG PARM LIST COMPLETED          */ 00761000
*/*     OUTPUT -                                                     */ 00762000
*/*       WPL FOR CONDITIONAL MOUNT MESSAGE                          */ 00763000
*/*     RETURN CODES - NONE                                          */ 00764000
*/********************************************************************/ 00765000
*MSGPTR = WPLPTR;                      /*SET PTR TO START OF P-LIST     00766000
*                                        CORE                        */ 00767000
         ST    WPLPTR,MSGPTR                                    03S0194 00768000
*MSG(1:WTOLSTLN) =                     /*ZERO WPL CORE               */ 00769000
*    MSG(1:WTOLSTLN) && MSG(1:WTOLSTLN);                        03S0195 00770000
         L     @10,MSGPTR                                       03S0195 00771000
         L     @08,@PC00001                                     03S0195 00772000
         LH    @15,WTOLSTLN(,@08)                               03S0195 00773000
         BCTR  @15,0                                            03S0195 00774000
         EX    @15,@SX00346                                     03S0195 00775000
*WPLPTR = WPLPTR + PREFXLEN;           /*POINT PASS WPL PREFIX       */ 00776000
         AL    WPLPTR,PREFXLEN                                  03S0196 00777000
*MSGPTR = ADDR(WPLTXT);                /*BASE FOR TEXT OF MESSAGE    */ 00778000
         LA    @10,WPLTXT(,WPLPTR)                              03S0197 00779000
         ST    @10,MSGPTR                                       03S0197 00780000
*FMPTR = MSGPTR;                       /*SET FIXED MSG PTR           */ 00781000
         LR    FMPTR,@10                                        03S0198 00782000
*MSG(1:CMLEN) = CONDMT(1:CMLEN);       /*MOVE BASE MSG TO BUFFER     */ 00783000
         L     @15,@CA00287                                     03S0199 00784000
         LH    @14,CMLEN-CNDMTMSG(,@15)                         03S0199 00785000
         BCTR  @14,0                                            03S0199 00786000
         EX    @14,@SM00348                                     03S0199 00787000
*CMSER = VOLSER;                       /*VOLSER TO BUFFER            */ 00788000
         L     @10,@PC00001+4                                   03S0200 00789000
         L     @10,VOLSERP(,@10)                                03S0200 00790000
         MVC   CMSER(6,FMPTR),VOLSER(@10)                       03S0200 00791000
*CMCUA = UNITNAME;                     /*UNIT TO BUFFER              */ 00792000
         MVC   CMCUA(3,FMPTR),UNITNAME(@08)                     03S0201 00793000
*CMJOB(1:JOBNAMLN) = JOBNAME(1:JOBNAMLN); /*JOBNAME TO BUFFER        */ 00794000
         LH    @10,JOBNAMLN                                     03S0202 00795000
         LR    @08,@10                                          03S0202 00796000
         BCTR  @08,0                                            03S0202 00797000
         L     @15,@PC00001+8                                   03S0202 00798000
         L     @01,JOBNAMEP(,@15)                               03S0202 00799000
         EX    @08,@SM00350                                     03S0202 00800000
*MSGPTR = ADDR(CMJOB) + JOBNAMLN;      /*BUMP MSGPTR PAST JOBNAME    */ 00801000
         LA    @08,CMJOB(,FMPTR)                                03S0203 00802000
         ALR   @08,@10                                          03S0203 00803000
         ST    @08,MSGPTR                                       03S0203 00804000
*IF STPNAMLN ^= ZERO THEN              /*MUST PUT IN STEPNAME        */ 00805000
         LH    @10,STPNAMLN                                     03S0204 00806000
         LTR   @10,@10                                          03S0204 00807000
         BZ    @RF00204                                         03S0204 00808000
*  DO;                                                          03S0205 00809000
*    MSG(1) = COMMA;                   /*INSERT DELIMITER            */ 00810000
         MVC   MSG(1,@08),COMMA                                 03S0206 00811000
*    MSGPTR = MSGPTR + COMMALEN;       /*UPDATE BUFFER PTR           */ 00812000
         AH    @08,COMMALEN                                     03S0207 00813000
         ST    @08,MSGPTR                                       03S0207 00814000
*    CMSTEP(1:STPNAMLN) = STEPNAME(1:STPNAMLN); /*STEPNAME TO BUFFER */ 00815000
         LR    @15,@10                                          03S0208 00816000
         BCTR  @15,0                                            03S0208 00817000
         L     @14,@PC00001+12                                  03S0208 00818000
         L     @01,STEPNAMP(,@14)                               03S0208 00819000
         EX    @15,@SM00352                                     03S0208 00820000
*    MSGPTR = MSGPTR+STPNAMLN;         /*UPDATE BUFFER PTR           */ 00821000
         ALR   @08,@10                                          03S0209 00822000
         ST    @08,MSGPTR                                       03S0209 00823000
*  END;                                                         03S0210 00824000
*CMREPLY = CMFREPLY;                   /*REPLY INFO TO BUFFER        */ 00825000
@RF00204 L     @10,MSGPTR                                       03S0211 00826000
         MVC   CMREPLY(14,@10),CMFREPLY(FMPTR)                  03S0211 00827000
*MSGPTR = MSGPTR+LENGTH(CMFREPLY);     /*UPDATE BUFFER PTR           */ 00828000
         AH    @10,@CH00201                                     03S0212 00829000
         ST    @10,MSGPTR                                       03S0212 00830000
*MSGLNTH = MSGPTR - ADDR(WPLTXT);      /*SET LNTH OF MSG             */ 00831000
         LA    MSGLNTH,WPLTXT(,WPLPTR)                          03S0213 00832000
         SLR   @10,MSGLNTH                                      03S0213 00833000
         LR    MSGLNTH,@10                                      03S0213 00834000
*LINECNT = ONE;                        /*SINGLE LINE MSG             */ 00835000
         MVI   LINECNT,X'01'                                    03S0214 00836000
*EVNTACTN = OFF;                       /*NOT AN EVENTUAL ACTION MSG  */ 00837000
         NI    EVNTACTN,B'01111111'                             03S0215 00838000
*CALL COMPLWPL;                        /*COMPLETE WTO PARM LIST      */ 00839000
         BAL   @14,COMPLWPL                                     03S0216 00840000
*  END;                                                         02S0217 00841000
*ELSE;                                 /*NOT MOUNT WITH REPLY OPT    */ 00842000
@RF00187 DS    0H                                               02S0219 00843000
*          END;                                                 01S0219 00844000
*      END;                                                     01S0220 00845000
*  END;                                                         01S0221 00846000
*ELSE;                                 /*NO CORE AVAILABLE FOR BUFFER*/ 00847000
@RF00082 DS    0H                                               01S0223 00848000
*RETURN CODE (RETCODE);                                         01S0223 00849000
@RC00082 IC    @02,@OLDKEY                                      01S0223 00850000
         L     @13,4(,@13)                                      01S0223 00851000
         L     @00,@SIZDATD                                     01S0223 00852000
         LR    @01,@11                                          01S0223 00853000
         FSPACE   R,LV=(0),A=(1)                                        00854000
         MODESET KEYADDR=(2)                                            00855000
         LR    @15,@03                                          01S0223 00856000
         L     @14,12(,@13)                                     01S0223 00857000
         LM    @00,@12,20(@13)                                  01S0223 00858000
         BR    @14                                              01S0223 00859000
*/********************************************************************/ 00860000
*/*                                                                  */ 00861000
*/* SEGMENT NAME - SQUEEZE                                           */ 00862000
*/*                                                                  */ 00863000
*/* DESCRIPTIVE NAME - ELIMINATE TRAILING BLANKS FROM FIELD NAMES    */ 00864000
*/*                                                                  */ 00865000
*/* FUNCTION - GIVEN A POINTER TO A FIELD AND A LENGTH OF THE FIELD  */ 00866000
*/*   CALCULATE THE RESIDUAL COUNT OF THE NUMBER OF CHARACTERS IN THE*/ 00867000
*/*   FIELD IGNORING TRAILING BLANKS.                                */ 00868000
*/*                                                                  */ 00869000
*/*   OPERATION - SCAN FROM RIGHT TO LEFT UNTIL FIRST NON-BLANK IS   */ 00870000
*/*     ENCOUNTERED. CALCULATE RESIDUAL COUNT OF CHARACTERS IN FIELD.*/ 00871000
*/*                                                                  */ 00872000
*/* ENTRY POINT - SQUEEZE (INTERNAL PROCEDURE)                       */ 00873000
*/*                                                                  */ 00874000
*/*   PURPOSE - (SEE FUNCTION)                                       */ 00875000
*/*                                                                  */ 00876000
*/* INPUT DATA -                                                     */ 00877000
*/*                                                                  */ 00878000
*/*   PARMLEN - LENGTH OF FIELD                                      */ 00879000
*/*   PARMPTR - ADDRESS OF FIELD                                     */ 00880000
*/*                                                                  */ 00881000
*/* EXIT -                                                           */ 00882000
*/*                                                                  */ 00883000
*/*   CONDITION - FIELD LENGTH SQUEEZED DOWN TO ACTUAL NUMBER OF     */ 00884000
*/*               CHARACTERS IN FIELD.                               */ 00885000
*/*                                                                  */ 00886000
*/*     OUTPUT DATA -                                                */ 00887000
*/*       INPUT FIELD PARMLEN UPDATED TO ACTUAL LENGTH OF FIELD.     */ 00888000
*/*                                                                  */ 00889000
*/*     RETURN CODE - NONE                                           */ 00890000
*/*                                                                  */ 00891000
*/********************************************************************/ 00892000
*SQUEEZE: PROC(PARMPTR,PARMLEN);                                02S0224 00893000
@EL00001 IC    @02,@OLDKEY                                      02S0224 00894000
         L     @13,4(,@13)                                      02S0224 00895000
@EF00001 L     @00,@SIZDATD                                     02S0224 00896000
         LR    @01,@11                                          02S0224 00897000
         FSPACE   R,LV=(0),A=(1)                                        00898000
         MODESET KEYADDR=(2)                                            00899000
@ER00001 LM    @14,@12,12(@13)                                  02S0224 00900000
         BR    @14                                              02S0224 00901000
@PB00001 DS    0H                                               02S0224 00902000
SQUEEZE  STM   @14,@12,12(@13)                                  02S0224 00903000
         MVC   @PC00002(8),0(@01)                               02S0224 00904000
*ENDPTR = PARMPTR + PARMLEN-ONE;       /*POINT TO END OF MESSAGE     */ 00905000
         L     @10,@PC00002                                     02S0225 00906000
         L     @15,@PC00002+4                                   02S0225 00907000
         LH    ENDPTR,PARMLEN(,@15)                             02S0225 00908000
         AL    ENDPTR,PARMPTR(,@10)                             02S0225 00909000
         BCTR  ENDPTR,0                                         02S0225 00910000
*DO WHILE (PARMLEN ^= ZERO &           /*SEARCH FOR FIRST NON-BLANK  */ 00911000
*    LASTCHAR = BLANK);                                         02S0226 00912000
         B     @DE00226                                         02S0226 00913000
@DL00226 DS    0H                                               02S0227 00914000
*  ENDPTR = ENDPTR - ONE;                                       02S0227 00915000
         BCTR  ENDPTR,0                                         02S0227 00916000
*  PARMLEN = PARMLEN - ONE;                                     02S0228 00917000
         L     @10,@PC00002+4                                   02S0228 00918000
         LH    @03,PARMLEN(,@10)                                02S0228 00919000
         BCTR  @03,0                                            02S0228 00920000
         STH   @03,PARMLEN(,@10)                                02S0228 00921000
*END;                                                           02S0229 00922000
@DE00226 L     @10,@PC00002+4                                   02S0229 00923000
         ICM   @03,3,PARMLEN(@10)                               02S0229 00924000
         BZ    @DC00226                                         02S0229 00925000
         CLI   LASTCHAR(ENDPTR),C' '                            02S0229 00926000
         BE    @DL00226                                         02S0229 00927000
@DC00226 DS    0H                                               02S0230 00928000
*PARMLEN = ENDPTR - PARMPTR + ONE;     /*GET ACTUAL LENGTH OF FIELD  */ 00929000
         L     @10,@PC00002+4                                   02S0230 00930000
         L     @03,@PC00002                                     02S0230 00931000
         LR    @15,ENDPTR                                       02S0230 00932000
         SL    @15,PARMPTR(,@03)                                02S0230 00933000
         AH    @15,@CH00060                                     02S0230 00934000
         STH   @15,PARMLEN(,@10)                                02S0230 00935000
*END;                                                           02S0231 00936000
@EL00002 DS    0H                                               02S0231 00937000
@EF00002 DS    0H                                               02S0231 00938000
@ER00002 LM    @14,@12,12(@13)                                  02S0231 00939000
         BR    @14                                              02S0231 00940000
*/********************************************************************/ 00941000
*/*                                                                  */ 00942000
*/* SEGMENT NAME - COMPLWPL                                          */ 00943000
*/*                                                                  */ 00944000
*/* DESCRIPTIVE NAME - COMPLETE WTO PARAMETER LIST (WPL)             */ 00945000
*/*                                                                  */ 00946000
*/* FUNCTION -                                                       */ 00947000
*/*   THIS ROUTINE COMPLETES THE BUILDING OF A WRITE-TO-OPERATOR     */ 00948000
*/*   PARAMETER LIST BY FILLING IN THE FOLLOWING INFORMATION:        */ 00949000
*/*     .LENGTH OF LAST LINE                                         */ 00950000
*/*     .'END LINE' CONTROL FLAG (IF A MULTI-LINE MSG)               */ 00951000
*/*     .ROUTING AND DESCRIPTOR CODES                                */ 00952000
*/*                                                                  */ 00953000
*/* ENTRY - COMPLWPL (INTERNAL SUBROUTINE)                           */ 00954000
*/*   INPUT -                                                        */ 00955000
*/*     LINECNT - NUMBER OF LINES IN MESSAGE                         */ 00956000
*/*     MSGPTR  - PTR TO NEXT DATA POSITION IN BUFFER                */ 00957000
*/*     MSGLNTH  - LENGTH OF TEXT IN CURRENT LINE                    */ 00958000
*/*     EVNTACTN - IF ON, MSG WILL REQUIRE EVENTUAL OPERATOR ACTION  */ 00959000
*/*              - IF OFF, MSG REQUIRES IMMEDIATE ACTION             */ 00960000
*/*     DAUNIT   - IF ON, MSG IS FOR A D.A. UNIT                     */ 00961000
*/*     TAPEUNIT - IF ON, MSG IS FOR A TAPE UNIT                     */ 00962000
*/*     WPLPTR   - PTR TO START OF WTP PARM LIST                     */ 00963000
*/*     WPLMLPTR - PTR TO LAST MULTI-LINE SECTION OF PARM LIST IF ANY*/ 00964000
*/*                                                                  */ 00965000
*/* EXIT - RETURN TO CALLER                                          */ 00966000
*/*   CONDITION - WPL COMPLETED                                      */ 00967000
*/*     OUTPUT -                                                     */ 00968000
*/*       THE FOLLOWING FIELDS ARE FILLED IN IF REQUIRED:            */ 00969000
*/*         WPLLGH/WPLMLLEN - LENGTH OF LAST LINE                    */ 00970000
*/*         WPLMLLTD - 'END LINE' INDICATOR                          */ 00971000
*/*         WPLMCSFA - 'ROUTE/DESC CODES PRESENT' INDICATOR          */ 00972000
*/*         WPLDESCB/WPLDESCC - 'OPERATOR ACTION' DESCRIPTOR CODE    */ 00973000
*/*         WPLDESCF - 'JOB STATUS' DESCRIPTOR CODE                  */ 00974000
*/*         WPLROUTC/WPLROUTD - ROUTING CODE                         */ 00975000
*/*     RETURN CODE - NONE                                           */ 00976000
*/********************************************************************/ 00977000
*COMPLWPL:                             /*COMPLETE WTO PARM LIST      */ 00978000
*  PROC;                                                        02S0232 00979000
COMPLWPL STM   @14,@12,12(@13)                                  02S0232 00980000
*IF LINECNT = ONE THEN                 /*SINGLE LINE MESSAGE         */ 00981000
         CLI   LINECNT,1                                        02S0233 00982000
         BNE   @RF00233                                         02S0233 00983000
*  WPLLGH = MSGLNTH + FOUR;            /*SET LENGTH OF LINE          */ 00984000
         LA    @10,4                                            02S0234 00985000
         ALR   @10,MSGLNTH                                      02S0234 00986000
         STH   @10,WPLLGH(,WPLPTR)                              02S0234 00987000
*ELSE                                  /*MULTI-LINE MESSAGE          */ 00988000
*  DO;                                                          02S0235 00989000
         B     @RC00233                                         02S0235 00990000
@RF00233 DS    0H                                               02S0236 00991000
*    WPLMLLEN = MSGLNTH + FOUR;        /*SET LENGTH OF LAST LINE     */ 00992000
         L     @10,WPLMLPTR                                     02S0236 00993000
         LA    @08,4                                            02S0236 00994000
         ALR   @08,MSGLNTH                                      02S0236 00995000
         STC   @08,WPLMLLEN(,@10)                               02S0236 00996000
*    WPLMLLTD = ON;                    /*SET 'END LINE' INDICATOR    */ 00997000
         OI    WPLMLLTD(@10),B'00010000'                        02S0237 00998000
*  END;                                                         02S0238 00999000
*WPLMCSFA = ON;                        /*INDICATE RTE/DESC CODES        01000000
*                                        PRESENT                     */ 01001000
@RC00233 OI    WPLMCSFA(WPLPTR),B'10000000'                     02S0239 01002000
*WPLDESC = ZERO;                       /*CLEAR DESC CODES AREA       */ 01003000
         SLR   @10,@10                                          02S0240 01004000
         LR    @08,WPLPTR                                       02S0240 01005000
         AH    @08,WPLLGH(,WPLPTR)                              02S0240 01006000
         STH   @10,WPLDESC(,@08)                                02S0240 01007000
*WPLROUT = ZERO;                       /*CLEAR ROUTE CODES AREA      */ 01008000
         STH   @10,WPLROUT(,@08)                                02S0241 01009000
*IF EVNTACTN = NO THEN                 /*NOT AN EVENTUAL ACTION MSG  */ 01010000
         TM    EVNTACTN,B'10000000'                             02S0242 01011000
         BNZ   @RF00242                                         02S0242 01012000
*  DO;                                                          02S0243 01013000
*    WPLDESCB = ON;                    /*INDICATE IMMEDIATE ACTION   */ 01014000
*    WPLDESCF = ON;                    /*SET 'JOB STATUS' INDICATOR  */ 01015000
         OI    WPLDESCB(@08),B'01000100'                        02S0245 01016000
*  END;                                                         02S0246 01017000
*ELSE                                                           02S0247 01018000
*  WPLDESCC = ON;                      /*INDICATE EVENTUAL ACTION    */ 01019000
         B     @RC00242                                         02S0247 01020000
@RF00242 LR    @10,WPLPTR                                       02S0247 01021000
         AH    @10,WPLLGH(,WPLPTR)                              02S0247 01022000
         OI    WPLDESCC(@10),B'00100000'                        02S0247 01023000
*IF DAUNIT = ON THEN                   /*MSG IS FOR A D.A. UNIT      */ 01024000
@RC00242 L     @10,@PC00001                                     02S0248 01025000
         TM    DAUNIT(@10),B'00100000'                          02S0248 01026000
         BNO   @RF00248                                         02S0248 01027000
*  WPLROUTD = ON;                      /*ROUTE TO D.A. POOL          */ 01028000
         LR    @10,WPLPTR                                       02S0249 01029000
         AH    @10,WPLLGH(,WPLPTR)                              02S0249 01030000
         OI    WPLROUTD(@10),B'00010000'                        02S0249 01031000
*ELSE                                  /*NOT D.A. UNIT               */ 01032000
*  IF TAPEUNIT = ON THEN               /*MSG IS FOR TAPE UNIT        */ 01033000
         B     @RC00248                                         02S0250 01034000
@RF00248 L     @10,@PC00001                                     02S0250 01035000
         TM    TAPEUNIT(@10),B'00010000'                        02S0250 01036000
         BNO   @RF00250                                         02S0250 01037000
*    WPLROUTC = ON;                    /*ROUTE TO TAPE POOL          */ 01038000
         LR    @10,WPLPTR                                       02S0251 01039000
         AH    @10,WPLLGH(,WPLPTR)                              02S0251 01040000
         OI    WPLROUTC(@10),B'00100000'                        02S0251 01041000
*RETURN;                               /*RETURN TO CALLER            */ 01042000
@EL00003 DS    0H                                               02S0252 01043000
@EF00003 DS    0H                                               02S0252 01044000
@ER00003 LM    @14,@12,12(@13)                                  02S0252 01045000
         BR    @14                                              02S0252 01046000
*END COMPLWPL;                                                  02S0253 01047000
         B     @EL00003                                         02S0253 01048000
*/********************************************************************/ 01049000
*/*                                                                  */ 01050000
*/* SEGMENT NAME - CHNGLINE                                          */ 01051000
*/*                                                                  */ 01052000
*/* DESCRIPTIVE NAME - CHANGE LINE IN WTO PARAMETER LIST             */ 01053000
*/*                                                                  */ 01054000
*/* FUNCTION -                                                       */ 01055000
*/*   THIS ROUTINE EFFECTS A LINE CHANGE IN THE WRITE-TO-OPERATOR    */ 01056000
*/*   PARAMETER LIST (WPL) BEING CONSTRUCTED. THE ROUTINE WILL SET   */ 01057000
*/*   THE NECESSARY FLAGS/FIELDS TO COMPLETE THE CURRENT LINE, SET   */ 01058000
*/*   UP ADDRESSABILITY TO THE NEXT LINE AND SET REQUIRED FIELDS AND */ 01059000
*/*   FLAGS IN THAT SECTION OF THE PARM LIST. BLANKS ARE INSERTED    */ 01060000
*/*   AT THE BEGINNING OF THE NEW LINE SO THAT THE ACTUAL TEXT WILL  */ 01061000
*/*   BEGIN BEYOND THE MESSAGE I.D. OF THE FIRST LINE.               */ 01062000
*/*                                                                  */ 01063000
*/* ENTRY - CHNGLINE (INTERNAL SUBROUTINE)                           */ 01064000
*/*   INPUT -                                                        */ 01065000
*/*     LINECNT - CURRENT LINE NUMBER                                */ 01066000
*/*     MSGLNTH - LENGTH OF TEXT IN CURRENT LINE                     */ 01067000
*/*     WPLMLPTR - POINTER TO CURRENT MULTI-LINE SECTION, IF ANY     */ 01068000
*/*     WPLPTR - POINTER TO START OF WPL                             */ 01069000
*/*                                                                  */ 01070000
*/* EXIT - RETURN TO CALLER                                          */ 01071000
*/*   CONDITION - LINE CHANGE EFFECTED                               */ 01072000
*/*     OUTPUT -                                                     */ 01073000
*/*       WPLMLPTR - PTR TO NEW WPLML                                */ 01074000
*/*       MSGPTR - PTR TO NEXT AVAILABLE TEXT POSITION               */ 01075000
*/*       WPLLGH/WPLMLLEN - LENGTH OF CURRENT LINE                   */ 01076000
*/*       WPLLTFC/WPLMLLTC - 'DATA LINE' INDICATORS                  */ 01077000
*/*       WPLMCSFJ - 'MULTI-LINE WTO' INDICATOR                      */ 01078000
*/*       LINECNT - UPDATED LINE NUMBER                              */ 01079000
*/*       WPLLINES - NUMBER OF LINES                                 */ 01080000
*/*       MSGLNTH - LENGTH OF TEXT IN NEW LINE                       */ 01081000
*/*     RETURN CODES - NONE                                          */ 01082000
*/********************************************************************/ 01083000
*CHNGLINE:                             /*CHANGE LINE SUBROUTINE      */ 01084000
*  PROC;                                                        02S0254 01085000
CHNGLINE STM   @14,@01,12(@13)                                  02S0254 01086000
         STM   @03,@12,32(@13)                                  02S0254 01087000
*IF LINECNT = ONE THEN                 /*END OF FIRST LINE           */ 01088000
         CLI   LINECNT,1                                        02S0255 01089000
         BNE   @RF00255                                         02S0255 01090000
*  DO;                                                          02S0256 01091000
*    WPLLGH = MSGLNTH + FOUR;          /*SET LENGTH FOR FIRST LINE   */ 01092000
         LA    @10,4                                            02S0257 01093000
         LR    @08,MSGLNTH                                      02S0257 01094000
         ALR   @08,@10                                          02S0257 01095000
         STH   @08,WPLLGH(,WPLPTR)                              02S0257 01096000
*    WPLMCSFJ = ON;                    /*SET MULTI-LINE INDICATOR    */ 01097000
         OI    WPLMCSFJ(WPLPTR),B'01000000'                     02S0258 01098000
*    WPLLTFC = ON;                     /*SET DATA LINE INDICATOR     */ 01099000
         ALR   @08,WPLPTR                                       02S0259 01100000
         ALR   @10,@08                                          02S0259 01101000
         OI    WPLLTFC(@10),B'00100000'                         02S0259 01102000
*    WPLMLPTR = ADDR(WPLLS01) +        /*POINT TO START OF LINE 2    */ 01103000
*        LENGTH(WPLLS01);                                       02S0260 01104000
         AH    @08,@CH00049                                     02S0260 01105000
         ST    @08,WPLMLPTR                                     02S0260 01106000
*  END;                                                         02S0261 01107000
*ELSE                                                           02S0262 01108000
*  DO;                                                          02S0262 01109000
         B     @RC00255                                         02S0262 01110000
@RF00255 DS    0H                                               02S0263 01111000
*    WPLMLLEN = MSGLNTH + FOUR;        /*SET LENGTH OF CURRENT LINE  */ 01112000
         L     @10,WPLMLPTR                                     02S0263 01113000
         LA    @08,4                                            02S0263 01114000
         ALR   @08,MSGLNTH                                      02S0263 01115000
         STC   @08,WPLMLLEN(,@10)                               02S0263 01116000
*    WPLMLPTR = WPLMLPTR + WPLMLLEN;   /*POINT TO START OF NEXT LINE */ 01117000
         ALR   @10,@08                                          02S0264 01118000
         ST    @10,WPLMLPTR                                     02S0264 01119000
*  END;                                                         02S0265 01120000
*LINECNT = LINECNT + ONE;              /*INCREMENT NUMBER OF LINES   */ 01121000
@RC00255 LA    @10,1                                            02S0266 01122000
         SLR   @08,@08                                          02S0266 01123000
         IC    @08,LINECNT                                      02S0266 01124000
         ALR   @10,@08                                          02S0266 01125000
         STC   @10,LINECNT                                      02S0266 01126000
*WPLLINES = LINECNT;                   /*SET NUMBER OF LINES IN WPL  */ 01127000
         LR    @08,WPLPTR                                       02S0267 01128000
         AH    @08,WPLLGH(,WPLPTR)                              02S0267 01129000
         STC   @10,WPLLINES+4(,@08)                             02S0267 01130000
*WPLMLLTC = ON;                        /*INDICATE NEW LINE IS A DATA    01131000
*                                        LINE                        */ 01132000
         L     @10,WPLMLPTR                                     02S0268 01133000
         OI    WPLMLLTC(@10),B'00100000'                        02S0268 01134000
*MSGPTR = ADDR(WPLMLTXT);              /*SET PTR FOR START OF MSG TXT*/ 01135000
         LA    @10,WPLMLTXT(,@10)                               02S0269 01136000
         ST    @10,MSGPTR                                       02S0269 01137000
*MSGIDENT = BLANKS;                    /*INSERT BLANKS INSTEAD OF AN    01138000
*                                        ID                          */ 01139000
         MVC   MSGIDENT(8,@10),BLANKS                           02S0270 01140000
*MSGPTR = MSGPTR + LENGTH(MSGIDENT);   /*POINT TO NEXT BUFFER POS'N  */ 01141000
         LA    @08,8                                            02S0271 01142000
         ALR   @10,@08                                          02S0271 01143000
         ST    @10,MSGPTR                                       02S0271 01144000
*MSGLNTH = LENGTH(MSGIDENT);           /*SET LENGTH OF TEXT          */ 01145000
         LR    MSGLNTH,@08                                      02S0272 01146000
*RETURN;                               /*RETURN TO CALLER            */ 01147000
@EL00004 DS    0H                                               02S0273 01148000
@EF00004 DS    0H                                               02S0273 01149000
@ER00004 LM    @14,@01,12(@13)                                  02S0273 01150000
         LM    @03,@12,32(@13)                                  02S0273 01151000
         BR    @14                                              02S0273 01152000
*END CHNGLINE;                                                  02S0274 01153000
*END IEFAB499                                                   01S0275 01154000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01155000
*/*%INCLUDE SYSLIB  (A499SPEC)                                        * 01156000
*/*%INCLUDE SYSLIB  (A499DATA)                                        * 01157000
*/*%INCLUDE SYSLIB  (IEZWPL  )                                        * 01158000
*/*%INCLUDE SYSLIB  (A499INIT)                                        * 01159000
*/*%INCLUDE SYSLIB  (INITSPEC)                                        * 01160000
*/*%INCLUDE SYSLIB  (BVERMSG )                                        * 01161000
*/*%INCLUDE SYSLIB  (VERSPEC )                                        * 01162000
*/*%INCLUDE SYSLIB  (BLDBASIC)                                        * 01163000
*/*%INCLUDE SYSLIB  (BBSCSPEC)                                        * 01164000
*/*%INCLUDE SYSLIB  (BUNLDMSG)                                        * 01165000
*/*%INCLUDE SYSLIB  (UNLDSPEC)                                        * 01166000
*/*%INCLUDE SYSLIB  (BMNTMSG )                                        * 01167000
*/*%INCLUDE SYSLIB  (BMNTSPEC)                                        * 01168000
*/*%INCLUDE SYSLIB  (BLDWTOR )                                        * 01169000
*/*%INCLUDE SYSLIB  (WTORSPEC)                                        * 01170000
*/*%INCLUDE SYSLIB  (SQUEEZE )                                        * 01171000
*/*%INCLUDE SYSLIB  (SQUEZSPC)                                        * 01172000
*/*%INCLUDE SYSLIB  (COMPLWPL)                                        * 01173000
*/*%INCLUDE SYSLIB  (CWPLSPEC)                                        * 01174000
*/*%INCLUDE SYSLIB  (CHNGLINE)                                        * 01175000
*/*%INCLUDE SYSLIB  (CHLNSPEC)                                        * 01176000
*;                                                              01S0275 01177000
@DATA    DS    0H                                                       01178000
@CH00060 DC    H'1'                                                     01179000
@CH00203 DC    H'6'                                                     01180000
@CH00049 DC    H'8'                                                     01181000
@CH00201 DC    H'14'                                                    01182000
@CH00258 DC    H'44'                                                    01183000
@CH00272 DC    H'70'                                                    01184000
@CH00256 DC    H'160'                                                   01185000
@SM00329 MVC   VMSGJNM(0,@02),JOBNAME(@01)                              01186000
@SM00331 MVC   VMSGSTNM(0,@02),STEPNAME(@01)                            01187000
@SM00333 MVC   MSG(0,@10),ADDLINFO(@08)                                 01188000
@SM00337 MVC   MSG(0,@10),ATTRTEXT(ATTRPTR)                             01189000
@SM00339 MVC   MSG(0,@10),JOBNAME(@01)                                  01190000
@SM00341 MVC   MSG(0,@10),STEPNAME(@01)                                 01191000
@SM00344 MVC   MSG(0,@10),DSNAME(@01)                                   01192000
@SX00346 XC    MSG(0,@10),MSG(@10)                                      01193000
@SM00348 MVC   MSG(0,@10),CONDMT-CNDMTMSG(@15)                          01194000
@SM00350 MVC   CMJOB(0,FMPTR),JOBNAME(@01)                              01195000
@SM00352 MVC   CMSTEP(0,@08),STEPNAME(@01)                              01196000
@DATD    DSECT                                                          01197000
         DS    0F                                                       01198000
@SA00001 DS    18F                                                      01199000
@PC00001 DS    5F                                                       01200000
@PC00002 DS    2F                                                       01201000
@AL00001 DS    2A                                                       01202000
IEFAB499 CSECT                                                          01203000
         DS    0F                                                       01204000
@CF00328 DC    F'-8'                                                    01205000
@CF00335 DC    F'-2'                                                    01206000
@CF00336 DC    F'-1'                                                    01207000
@DATD    DSECT                                                          01208000
         DS    0D                                                       01209000
WPLMLPTR DS    A                                                        01210000
MSGPTR   DS    A                                                        01211000
DSNAMELN DS    H                                                        01212000
JOBNAMLN DS    H                                                        01213000
STPNAMLN DS    H                                                        01214000
SPACELEN DS    H                                                        01215000
LINECNT  DS    FL1                                                      01216000
EVNTACTN DS    BL1                                                      01217000
@OLDKEY  DS    AL1                                                      01218000
IEFAB499 CSECT                                                          01219000
         DS    0F                                                       01220000
@SIZDATD DC    AL1(230)                                                 01221000
         DC    AL3(@ENDDATD-@DATD)                                      01222000
@CA00284 DC    A(ATTROTAB)                                              01223000
@CA00287 DC    A(CNDMTMSG)                                              01224000
@CA00290 DC    A(ACTION)                                                01225000
@CV00291 DC    V(ATRIBUTE)                                              01226000
@CA00292 DC    A(MSGNO)                                                 01227000
         DS    0D                                                       01228000
PREFXLEN DC    AL4(8)                                                   01229000
GTSTZERO DC    F'0'                                                     01230000
COMMALEN DC    AL2(1)                                                   01231000
BLANKS   DC    CL8' '                                                   01232000
COMMA    DC    CL1','                                                   01233000
NSPTAPE  DC    X'FF'                                                    01234000
ZEROVLSR DC    X'00'                                                    01235000
         DC    XL5'0'                                                   01236000
IEFAB499 CSECT                                                          01237000
         DS   0H                                                        01238000
A499PTCH DC ((@DATA-@PSTART)/20)X'00'                                   01239000
@DATD    DSECT                                                          01240000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01241000
@ENDDATD EQU   *                                                        01242000
IEFAB499 CSECT                                                          01243000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01244000
@01      EQU   01                                                       01245000
@02      EQU   02                                                       01246000
@03      EQU   03                                                       01247000
@04      EQU   04                                                       01248000
@05      EQU   05                                                       01249000
@06      EQU   06                                                       01250000
@07      EQU   07                                                       01251000
@08      EQU   08                                                       01252000
@09      EQU   09                                                       01253000
@10      EQU   10                                                       01254000
@11      EQU   11                                                       01255000
@12      EQU   12                                                       01256000
@13      EQU   13                                                       01257000
@14      EQU   14                                                       01258000
@15      EQU   15                                                       01259000
GTSTRTCD EQU   @10                                                      01260000
ENDPTR   EQU   @02                                                      01261000
RETCODE  EQU   @03                                                      01262000
MSGLNTH  EQU   @02                                                      01263000
ATTRLEN  EQU   @02                                                      01264000
FMPTR    EQU   @02                                                      01265000
ATTRPTR  EQU   @04                                                      01266000
WPLPTR   EQU   @09                                                      01267000
REG0     EQU   @00                                                      01268000
REG1     EQU   @01                                                      01269000
REG15    EQU   @15                                                      01270000
GTSTR0   EQU   @00                                                      01271000
GTSTR1   EQU   @01                                                      01272000
GTSTR2   EQU   @02                                                      01273000
GTSTR15  EQU   @15                                                      01274000
GTSTR4   EQU   @04                                                      01275000
GTSTR5   EQU   @05                                                      01276000
GTSTR6   EQU   @06                                                      01277000
GTSTR7   EQU   @07                                                      01278000
GTSTR8   EQU   @08                                                      01279000
GTSTR3   EQU   @03                                                      01280000
         EXTRN ATTROTAB                                                 01281000
         EXTRN CNDMTMSG                                                 01282000
         EXTRN ACTION                                                   01283000
         EXTRN MSGNO                                                    01284000
WPLRF    EQU   0                                                        01285000
WPLRPTR  EQU   WPLRF                                                    01286000
WPL      EQU   0                                                        01287000
WPLLGH   EQU   WPL                                                      01288000
WPLMCSF  EQU   WPL+2                                                    01289000
WPLMCSF1 EQU   WPLMCSF                                                  01290000
WPLMCSFA EQU   WPLMCSF1                                                 01291000
WPLMCSF2 EQU   WPLMCSF+1                                                01292000
WPLMCSFJ EQU   WPLMCSF2                                                 01293000
WPLTXT   EQU   WPL+4                                                    01294000
WPLFLGS  EQU   0                                                        01295000
WPLDESC  EQU   WPLFLGS                                                  01296000
WPLDESC1 EQU   WPLDESC                                                  01297000
WPLDESCB EQU   WPLDESC1                                                 01298000
WPLDESCC EQU   WPLDESC1                                                 01299000
WPLDESCF EQU   WPLDESC1                                                 01300000
WPLDESC2 EQU   WPLDESC+1                                                01301000
WPLROUT  EQU   WPLFLGS+2                                                01302000
WPLROUT1 EQU   WPLROUT                                                  01303000
WPLROUTC EQU   WPLROUT1                                                 01304000
WPLROUTD EQU   WPLROUT1                                                 01305000
WPLROUT2 EQU   WPLROUT+1                                                01306000
WPLMSGTY EQU   WPLFLGS+4                                                01307000
WPLMSGT1 EQU   WPLMSGTY                                                 01308000
WPLMSGT2 EQU   WPLMSGTY+1                                               01309000
WPLLS01  EQU   0                                                        01310000
WPLLTF   EQU   WPLLS01                                                  01311000
WPLLTF1  EQU   WPLLTF                                                   01312000
WPLLTFC  EQU   WPLLTF1                                                  01313000
WPLLINES EQU   WPLLS01+3                                                01314000
WPLML    EQU   0                                                        01315000
WPLMLLEN EQU   WPLML+1                                                  01316000
WPLMLLTF EQU   WPLML+2                                                  01317000
WPLMLLT1 EQU   WPLMLLTF                                                 01318000
WPLMLLTC EQU   WPLMLLT1                                                 01319000
WPLMLLTD EQU   WPLMLLT1                                                 01320000
WPLMLTXT EQU   WPLML+4                                                  01321000
CMBUF    EQU   0                                                        01322000
CMSER    EQU   CMBUF+14                                                 01323000
CMCUA    EQU   CMBUF+24                                                 01324000
CMJOB    EQU   CMBUF+32                                                 01325000
CMFREPLY EQU   CMBUF+49                                                 01326000
HDRFMT   EQU   0                                                        01327000
MSGIDENT EQU   HDRFMT                                                   01328000
ACTNCODE EQU   HDRFMT+8                                                 01329000
MSGUNAME EQU   HDRFMT+10                                                01330000
MSGDLIM  EQU   HDRFMT+13                                                01331000
ADDLINFO EQU   0                                                        01332000
ATTRTEXT EQU   0                                                        01333000
CMREPLY  EQU   0                                                        01334000
CMSTEP   EQU   0                                                        01335000
DSNAME   EQU   0                                                        01336000
EOLCHAR  EQU   0                                                        01337000
JOBNAME  EQU   0                                                        01338000
MSG      EQU   0                                                        01339000
MSGVLSER EQU   0                                                        01340000
VOLSER   EQU   0                                                        01341000
STEPNAME EQU   0                                                        01342000
VMSGFMT1 EQU   0                                                        01343000
VMSGID   EQU   VMSGFMT1                                                 01344000
VMSGJNM  EQU   VMSGFMT1+8                                               01345000
VMSGFMT2 EQU   0                                                        01346000
VMSGDLIM EQU   VMSGFMT2                                                 01347000
VMSGSTNM EQU   VMSGFMT2+1                                               01348000
LASTCHAR EQU   0                                                        01349000
ATTRLNTH EQU   ATTROTAB                                                 01350000
ATTROFFS EQU   ATTROTAB+1                                               01351000
CMLEN    EQU   CNDMTMSG                                                 01352000
CONDMT   EQU   CNDMTMSG+2                                               01353000
PARMBLCK EQU   0                                                        01354000
MSGID    EQU   PARMBLCK                                                 01355000
ACTCODE  EQU   PARMBLCK+1                                               01356000
UNITNAME EQU   PARMBLCK+2                                               01357000
ATTRIBUT EQU   PARMBLCK+5                                               01358000
TYPEBITS EQU   PARMBLCK+6                                               01359000
DAUNIT   EQU   TYPEBITS                                                 01360000
TAPEUNIT EQU   TYPEBITS                                                 01361000
ADINFOP  EQU   PARMBLCK+8                                               01362000
ADINFOLN EQU   PARMBLCK+12                                              01363000
WTOLSTLN EQU   PARMBLCK+14                                              01364000
WTOLISTP EQU   PARMBLCK+16                                              01365000
VOLSERP  EQU   0                                                        01366000
JOBNAMEP EQU   0                                                        01367000
STEPNAMP EQU   0                                                        01368000
DSNAMEP  EQU   0                                                        01369000
PARMLEN  EQU   0                                                        01370000
PARMPTR  EQU   0                                                        01371000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01372000
@NM00002 EQU   TYPEBITS                                                 01373000
DOWTO    EQU   TYPEBITS                                                 01374000
DOWTOR   EQU   TYPEBITS                                                 01375000
@NM00006 EQU   CMBUF+40                                                 01376000
@NM00005 EQU   CMBUF+27                                                 01377000
@NM00004 EQU   CMBUF+20                                                 01378000
@NM00003 EQU   CMBUF                                                    01379000
WPLMLLT2 EQU   WPLMLLTF+1                                               01380000
WPLRSV24 EQU   WPLMLLT1                                                 01381000
WPLRSV23 EQU   WPLMLLT1                                                 01382000
WPLRSV22 EQU   WPLMLLT1                                                 01383000
WPLRSV21 EQU   WPLMLLT1                                                 01384000
WPLMLLTB EQU   WPLMLLT1                                                 01385000
WPLMLLTA EQU   WPLMLLT1                                                 01386000
WPLML0   EQU   WPLML                                                    01387000
WPLAREA  EQU   WPLLS01+2                                                01388000
WPLLTF2  EQU   WPLLTF+1                                                 01389000
WPLRSV20 EQU   WPLLTF1                                                  01390000
WPLRSV19 EQU   WPLLTF1                                                  01391000
WPLRSV18 EQU   WPLLTF1                                                  01392000
WPLRSV17 EQU   WPLLTF1                                                  01393000
WPLLTFD  EQU   WPLLTF1                                                  01394000
WPLLTFB  EQU   WPLLTF1                                                  01395000
WPLLTFA  EQU   WPLLTF1                                                  01396000
WPLQID   EQU   WPLFLGS+6                                                01397000
WPLRSV32 EQU   WPLMSGT2                                                 01398000
WPLRSV31 EQU   WPLMSGT2                                                 01399000
WPLRSV30 EQU   WPLMSGT2                                                 01400000
WPLRSV29 EQU   WPLMSGT2                                                 01401000
WPLRSV28 EQU   WPLMSGT2                                                 01402000
WPLRSV27 EQU   WPLMSGT2                                                 01403000
WPLRSV26 EQU   WPLMSGT2                                                 01404000
WPLRSV25 EQU   WPLMSGT2                                                 01405000
WPLRSV16 EQU   WPLMSGT1                                                 01406000
WPLRSV15 EQU   WPLMSGT1                                                 01407000
WPLMSGTF EQU   WPLMSGT1                                                 01408000
WPLRSV14 EQU   WPLMSGT1                                                 01409000
WPLMSGTD EQU   WPLMSGT1                                                 01410000
WPLMSGTC EQU   WPLMSGT1                                                 01411000
WPLMSGTB EQU   WPLMSGT1                                                 01412000
WPLMSGTA EQU   WPLMSGT1                                                 01413000
WPLRSV13 EQU   WPLROUT2                                                 01414000
WPLROUTO EQU   WPLROUT2                                                 01415000
WPLROUTN EQU   WPLROUT2                                                 01416000
WPLROUTM EQU   WPLROUT2                                                 01417000
WPLROUTL EQU   WPLROUT2                                                 01418000
WPLROUTK EQU   WPLROUT2                                                 01419000
WPLROUTJ EQU   WPLROUT2                                                 01420000
WPLROUTI EQU   WPLROUT2                                                 01421000
WPLROUTH EQU   WPLROUT1                                                 01422000
WPLROUTG EQU   WPLROUT1                                                 01423000
WPLROUTF EQU   WPLROUT1                                                 01424000
WPLROUTE EQU   WPLROUT1                                                 01425000
WPLROUTB EQU   WPLROUT1                                                 01426000
WPLROUTA EQU   WPLROUT1                                                 01427000
WPLRSV12 EQU   WPLDESC2                                                 01428000
WPLRSV11 EQU   WPLDESC2                                                 01429000
WPLRSV10 EQU   WPLDESC2                                                 01430000
WPLRSV09 EQU   WPLDESC2                                                 01431000
WPLRSV08 EQU   WPLDESC2                                                 01432000
WPLRSV07 EQU   WPLDESC2                                                 01433000
WPLDESCJ EQU   WPLDESC2                                                 01434000
WPLDESCI EQU   WPLDESC2                                                 01435000
WPLDESCH EQU   WPLDESC1                                                 01436000
WPLDESCG EQU   WPLDESC1                                                 01437000
WPLDESCE EQU   WPLDESC1                                                 01438000
WPLDESCD EQU   WPLDESC1                                                 01439000
WPLDESCA EQU   WPLDESC1                                                 01440000
WPLTXTL  EQU   WPLTXT+125                                               01441000
@NM00001 EQU   WPLTXT                                                   01442000
WPLRSV05 EQU   WPLMCSF2                                                 01443000
WPLRSV04 EQU   WPLMCSF2                                                 01444000
WPLMCSFN EQU   WPLMCSF2                                                 01445000
WPLRSV03 EQU   WPLMCSF2                                                 01446000
WPLNOWTP EQU   WPLMCSF2                                                 01447000
WPLMCSFK EQU   WPLMCSF2                                                 01448000
WPLMCSFI EQU   WPLMCSF2                                                 01449000
WPLMCSFH EQU   WPLMCSF1                                                 01450000
WPLMCSFG EQU   WPLMCSF1                                                 01451000
WPLMCSFF EQU   WPLMCSF1                                                 01452000
WPLMCSFE EQU   WPLMCSF1                                                 01453000
WPLMCSFD EQU   WPLMCSF1                                                 01454000
WPLMCSFC EQU   WPLMCSF1                                                 01455000
WPLMCSFB EQU   WPLMCSF1                                                 01456000
WPLRECB  EQU   WPLRF+4                                                  01457000
WPLRPTRA EQU   WPLRPTR+1                                                01458000
WPLRLN   EQU   WPLRPTR                                                  01459000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01460000
@RF00075 EQU   @RC00053                                                 01461000
@RC00084 EQU   @RC00082                                                 01462000
@RC00138 EQU   @RC00082                                                 01463000
@RF00250 EQU   @EL00003                                                 01464000
@RC00248 EQU   @EL00003                                                 01465000
@PB00004 EQU   @EL00001                                                 01466000
@PB00003 EQU   @PB00004                                                 01467000
@PB00002 EQU   @PB00003                                                 01468000
@ENDDATA EQU   *                                                        01469000
         END   IEFAB499                                                 01470000
