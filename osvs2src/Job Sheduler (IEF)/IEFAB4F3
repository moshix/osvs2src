         TITLE 'IEFAB4F3 - MESSAGE COMPRESSION ROUTINE                 *00001000
                        '                                               00002000
IEFAB4F3 CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEFAB4F3  73.333'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         MODESET EXTKEY=SCHED,SAVEKEY=(2)                               00015000
         GSPACE  R,LV=(0)                                               00016000
         LR    @11,@01                                          01S0001 00017000
         USING @DATD,@11                                        01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         STC   @02,@OLDKEY                                      01S0001 00020000
         MODESET KEYADDR=(2)                                            00021000
         LM    @00,@02,20(@13)                                  01S0001 00022000
         ST    @11,8(,@13)                                      01S0001 00023000
         LR    @13,@11                                          01S0001 00024000
         MODESET EXTKEY=ZERO                                            00025000
         MVC   @PC00001(12),0(@01)                              01S0001 00026000
         MODESET EXTKEY=SCHED                                           00027000
*NEWLNTH = TXTLNTH;                    /*INIT COMPRESSED TEXT LENGTH */ 00028000
         L     @10,@PC00001+8                                   01S0007 00029000
         L     @03,@PC00001+4                                   01S0007 00030000
         L     @03,TXTLNTH(,@03)                                01S0007 00031000
         ST    @03,NEWLNTH(,@10)                                01S0007 00032000
*WRKBUFFR = TXTBUFFR(1:TXTLNTH);       /*MOVE TEXT TO WORK BUFFER    */ 00033000
         MVI   WRKBUFFR+1,C' '                                  01S0008 00034000
         MVC   WRKBUFFR+2(119),WRKBUFFR+1                       01S0008 00035000
         LR    @10,@03                                          01S0008 00036000
         BCTR  @10,0                                            01S0008 00037000
         L     @15,@PC00001                                     01S0008 00038000
         L     @01,BUFFPTR(,@15)                                01S0008 00039000
         EX    @10,@SM00063                                     01S0008 00040000
*WRKBUFFR(TXTLNTH+1) = ENDCHAR;        /*INSERT END MARKER           */ 00041000
         LA    @10,WRKBUFFR(@03)                                01S0009 00042000
         MVI   0(@10),X'FF'                                     01S0009 00043000
*SCANPOS = ONE;                        /*INIT BUFFER SCAN POSITION   */ 00044000
         LA    SCANPOS,1                                        01S0010 00045000
*DO WHILE(WRKBUFFR(SCANPOS) ^= ENDCHAR); /*SCAN TO END MARKER IN BUFF*/ 00046000
         B     @DE00011                                         01S0011 00047000
@DL00011 DS    0H                                               01S0012 00048000
*  IF WRKBUFFR(SCANPOS) = BLANK        /*CURRENT POSITION BLANK ?    */ 00049000
*      & WRKBUFFR(SCANPOS+1) = BLANK THEN /*...NEXT BLANK TOO? ...   */ 00050000
         LA    @10,WRKBUFFR-1(SCANPOS)                          01S0012 00051000
         CLI   0(@10),C' '                                      01S0012 00052000
         BNE   @RF00012                                         01S0012 00053000
         LA    @10,WRKBUFFR(SCANPOS)                            01S0012 00054000
         CLI   0(@10),C' '                                      01S0012 00055000
         BNE   @RF00012                                         01S0012 00056000
*    DO;                               /*YES,SHIFT TEXT OVER BLANK(S)*/ 00057000
*      SCANPOS = SCANPOS + ONE;        /*ADJUST SCAN POSITION        */ 00058000
         AH    SCANPOS,@CH00052                                 01S0014 00059000
*      DO NBLNKPOS = SCANPOS BY ONE    /*SCAN TO NEXT NON-BLANK CHAR */ 00060000
*          WHILE(WRKBUFFR(NBLNKPOS) = BLANK                     01S0015 00061000
*          & WRKBUFFR(NBLNKPOS) ^= ENDCHAR);                    01S0015 00062000
         LR    NBLNKPOS,SCANPOS                                 01S0015 00063000
         B     @DE00015                                         01S0015 00064000
@DL00015 DS    0H                                               01S0016 00065000
*        NEWLNTH = NEWLNTH - ONE;      /*ADJUST LENGTH OF MESSAGE    */ 00066000
         L     @10,@PC00001+8                                   01S0016 00067000
         L     @15,NEWLNTH(,@10)                                01S0016 00068000
         BCTR  @15,0                                            01S0016 00069000
         ST    @15,NEWLNTH(,@10)                                01S0016 00070000
*      END;                                                     01S0017 00071000
         AH    NBLNKPOS,@CH00052                                01S0017 00072000
@DE00015 LA    @10,WRKBUFFR-1(NBLNKPOS)                         01S0017 00073000
         CLI   0(@10),C' '                                      01S0017 00074000
         BNE   @DC00015                                         01S0017 00075000
         LA    @10,WRKBUFFR-1(NBLNKPOS)                         01S0017 00076000
         CLI   0(@10),X'FF'                                     01S0017 00077000
         BNE   @DL00015                                         01S0017 00078000
@DC00015 DS    0H                                               01S0018 00079000
*      MVELNTH = ZERO;                 /*INIT # CHARS TO MOVE        */ 00080000
         SLR   MVELNTH,MVELNTH                                  01S0018 00081000
*      DO MVECTR = NBLNKPOS BY ONE     /*DETERMINE # CHARS TO MOVE   */ 00082000
*          WHILE(WRKBUFFR(MVECTR) ^= ENDCHAR);/*SCAN TO END OF BUFFR */ 00083000
         LR    MVECTR,NBLNKPOS                                  01S0019 00084000
         B     @DE00019                                         01S0019 00085000
@DL00019 DS    0H                                               01S0020 00086000
*        MVELNTH = MVELNTH + ONE;      /*UPDATE LENGTH OF MOVE       */ 00087000
         AH    MVELNTH,@CH00052                                 01S0020 00088000
*      END;                                                     01S0021 00089000
         AH    MVECTR,@CH00052                                  01S0021 00090000
@DE00019 LA    @10,WRKBUFFR-1(MVECTR)                           01S0021 00091000
         CLI   0(@10),X'FF'                                     01S0021 00092000
         BNE   @DL00019                                         01S0021 00093000
*      TEMPTR = ADDR(WRKBUFFR(NBLNKPOS));                       01S0022 00094000
         LA    TEMPTR,WRKBUFFR-1(NBLNKPOS)                      01S0022 00095000
*      WRKBUFFR(SCANPOS:SCANPOS+MVELNTH) /*MOVE TEXT OVER BLNNK(S)   */ 00096000
*          = TMPBUFFR(1 : MVELNTH);    /*FROM FIRST NON-BLANK,  01S0023 00097000
*                                        INCLUDING END MARKER        */ 00098000
         LA    @10,WRKBUFFR-1(SCANPOS)                          01S0023 00099000
         EX    MVELNTH,@SM00065                                 01S0023 00100000
*    END;                                                       01S0024 00101000
*  ELSE                                /*NOT CONSECUTIVE BLANKS      */ 00102000
*    SCANPOS = SCANPOS + ONE;          /*UPDATE TO NEXT BUFF POSITION*/ 00103000
         B     @RC00012                                         01S0025 00104000
@RF00012 AH    SCANPOS,@CH00052                                 01S0025 00105000
*END;                                                           01S0026 00106000
@RC00012 DS    0H                                               01S0026 00107000
@DE00011 LA    @10,WRKBUFFR-1(SCANPOS)                          01S0026 00108000
         CLI   0(@10),X'FF'                                     01S0026 00109000
         BNE   @DL00011                                         01S0026 00110000
*DO WHILE(WRKBUFFR(NEWLNTH) = BLANK);  /*CHECK FOR TRAILING BLANKS   */ 00111000
         B     @DE00027                                         01S0027 00112000
@DL00027 DS    0H                                               01S0028 00113000
*  NEWLNTH = NEWLNTH - ONE;            /*ADJUST LENGTH OF MESSAGE    */ 00114000
         L     @10,@PC00001+8                                   01S0028 00115000
         L     @15,NEWLNTH(,@10)                                01S0028 00116000
         BCTR  @15,0                                            01S0028 00117000
         ST    @15,NEWLNTH(,@10)                                01S0028 00118000
*END;                                                           01S0029 00119000
@DE00027 L     @10,@PC00001+8                                   01S0029 00120000
         L     @10,NEWLNTH(,@10)                                01S0029 00121000
         LA    @01,WRKBUFFR-1(@10)                              01S0029 00122000
         CLI   0(@01),C' '                                      01S0029 00123000
         BE    @DL00027                                         01S0029 00124000
*TXTBUFFR(1:NEWLNTH) = WRKBUFFR(1:NEWLNTH); /*MOVE TEXT BACK TO INPUT   00125000
*                                        BUFFER                      */ 00126000
         L     @15,@PC00001                                     01S0030 00127000
         L     @01,BUFFPTR(,@15)                                01S0030 00128000
         BCTR  @10,0                                            01S0030 00129000
         EX    @10,@SM00067                                     01S0030 00130000
*RETURN;                               /*RETURN TO CALLER            */ 00131000
@EL00001 IC    @02,@OLDKEY                                      01S0031 00132000
         L     @13,4(,@13)                                      01S0031 00133000
@EF00001 L     @00,@SIZDATD                                     01S0031 00134000
         LR    @01,@11                                          01S0031 00135000
         FSPACE   R,LV=(0),A=(1)                                        00136000
         MODESET KEYADDR=(2)                                            00137000
@ER00001 LM    @14,@12,12(@13)                                  01S0031 00138000
         BR    @14                                              01S0031 00139000
*END IEFAB4F3                                                   01S0032 00140000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00141000
*/*%INCLUDE SYSLIB  (A4F3SPEC)                                        * 00142000
*/*%INCLUDE SYSLIB  (A4F3DATA)                                        * 00143000
*;                                                              01S0032 00144000
@DATA    DS    0H                                                       00145000
@CH00052 DC    H'1'                                                     00146000
@SM00063 MVC   WRKBUFFR(0),TXTBUFFR(@01)                                00147000
@SM00065 MVC   0(0,@10),TMPBUFFR(TEMPTR)                                00148000
@SM00067 MVC   TXTBUFFR(0,@01),WRKBUFFR                                 00149000
@DATD    DSECT                                                          00150000
         DS    0F                                                       00151000
@SA00001 DS    18F                                                      00152000
@PC00001 DS    3F                                                       00153000
IEFAB4F3 CSECT                                                          00154000
         DS    0F                                                       00155000
@DATD    DSECT                                                          00156000
         DS    0D                                                       00157000
WRKBUFFR DS    CL121                                                    00158000
@OLDKEY  DS    AL1                                                      00159000
IEFAB4F3 CSECT                                                          00160000
         DS    0F                                                       00161000
@SIZDATD DC    AL1(230)                                                 00162000
         DC    AL3(@ENDDATD-@DATD)                                      00163000
         DS    0D                                                       00164000
IEFAB4F3 CSECT                                                          00165000
         DS   0H                                                        00166000
A4F3PTCH DC (50)X'00'                                                   00167000
@DATD    DSECT                                                          00168000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00169000
@ENDDATD EQU   *                                                        00170000
IEFAB4F3 CSECT                                                          00171000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00172000
@01      EQU   01                                                       00173000
@02      EQU   02                                                       00174000
@03      EQU   03                                                       00175000
@04      EQU   04                                                       00176000
@05      EQU   05                                                       00177000
@06      EQU   06                                                       00178000
@07      EQU   07                                                       00179000
@08      EQU   08                                                       00180000
@09      EQU   09                                                       00181000
@10      EQU   10                                                       00182000
@11      EQU   11                                                       00183000
@12      EQU   12                                                       00184000
@13      EQU   13                                                       00185000
@14      EQU   14                                                       00186000
@15      EQU   15                                                       00187000
SCANPOS  EQU   @02                                                      00188000
NBLNKPOS EQU   @03                                                      00189000
MVELNTH  EQU   @05                                                      00190000
MVECTR   EQU   @04                                                      00191000
TEMPTR   EQU   @04                                                      00192000
TXTBUFFR EQU   0                                                        00193000
TMPBUFFR EQU   0                                                        00194000
BUFFPTR  EQU   0                                                        00195000
TXTLNTH  EQU   0                                                        00196000
NEWLNTH  EQU   0                                                        00197000
@ENDDATA EQU   *                                                        00198000
         END   IEFAB4F3                                                 00199000
