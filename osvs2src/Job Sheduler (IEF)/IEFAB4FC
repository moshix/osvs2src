         TITLE 'IEFAB4FC - TIOT MANAGER CONTROL ROUTINE                *00001000
                        '                                               00002000
IEFAB4FC CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'IEFAB4FC  74.099'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @12,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@12                                      01S0001 00013000
         L     @00,@SIZDATD                                     01S0001 00014000
         MODESET EXTKEY=SCHED,SAVEKEY=(2)                               00015000
         GSPACE  R,LV=(0)                                               00016000
         LR    @11,@01                                          01S0001 00017000
         USING @DATD,@11                                        01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         STC   @02,@OLDKEY                                      01S0001 00020000
         MODESET KEYADDR=(2)                                            00021000
         LM    @00,@02,20(@13)                                  01S0001 00022000
         ST    @11,8(,@13)                                      01S0001 00023000
         LR    @13,@11                                          01S0001 00024000
         MODESET EXTKEY=ZERO                                            00025000
         MVC   @PC00001(4),0(@01)                               01S0001 00026000
         MODESET EXTKEY=SCHED                                           00027000
JSCBDISP EQU 188                                                        00028000
JSCBAOS1 EQU  72                                                        00029000
JSCBAOS2 EQU 192                                                        00030000
*/* END OF DATA DEFINITIONS                                          */ 00031000
*TIORBPTR = INRBPTR;                   /*INIT PTR TO REQUEST BLOCK   */ 00032000
         L     @08,@PC00001                                     01S0048 00033000
         L     TIORBPTR,INRBPTR(,@08)                           01S0048 00034000
*RETCODE = NOERROR;                    /*INIT RETURN CODE FIELD      */ 00035000
         SLR   RETCODE,RETCODE                                  01S0049 00036000
*RFY IEZJSCB BASED(JSCBPTR);                                    01S0050 00037000
*JSCBPTR = TIOMJSCP;                   /*SET PTR TO INPUT JSCB       */ 00038000
         L     JSCBPTR,TIOMJSCP(,TIORBPTR)                      01S0051 00039000
*IF TIOMBLD = YES THEN                 /*CREATE REQUESTED?           */ 00040000
         TM    TIOMBLD(TIORBPTR),B'10000000'                    01S0052 00041000
         BNO   @RF00052                                         01S0052 00042000
*  DO;                                                          01S0053 00043000
*/********************************************************************/ 00044000
*/* SEGMENT NAME - GETTIOT                                           */ 00045000
*/*                                                                  */ 00046000
*/* DESCRIPTIVE NAME - GET TIOT/QDB CORE                             */ 00047000
*/*                                                                  */ 00048000
*/* FUNCTION - GETS/CLEARS CORE FOR TIOT AND DSAB QDB. INITIALIZES   */ 00049000
*/*   THE FIXED FIELDS OF THE DSAB QDB.                              */ 00050000
*/*                                                                  */ 00051000
*/* ENTRY - IN-LINE ROUTINE IS ENTERED AT TOP BY TIOT MANAGER WHEN   */ 00052000
*/*   THE CREATE FUNCTION IS REQUESTED                               */ 00053000
*/*                                                                  */ 00054000
*/*   INPUT -                                                        */ 00055000
*/*     JSCBPTR - POINTER TO INPUT JSCB                              */ 00056000
*/*       JSCBSWSP - SWA SUBPOOL ID                                  */ 00057000
*/*     TIORBPTR  - POINTER TO TIOT MANAGER REQUEST BLOCK            */ 00058000
*/*       TIOMTSZE - REQUESTED TIOT SIZE                             */ 00059000
*/*                                                                  */ 00060000
*/* EXITS -                                                          */ 00061000
*/*   CONDITION 1 - NO GETMAIN ERRORS                                */ 00062000
*/*                                                                  */ 00063000
*/*   OUTPUT -                                                       */ 00064000
*/*     JSCB UPDATED                                                 */ 00065000
*/*       JSCTMCOR - PTR TO TIOT CORE                                */ 00066000
*/*       JSCDSABQ - PTR TO QSAB QDB                                 */ 00067000
*/*     QDB (FIXED) FIELDS INITIALIZED                               */ 00068000
*/*                                                                  */ 00069000
*/*   RETURN CODE -                                                  */ 00070000
*/*     RETCODE = 0                                                  */ 00071000
*/*                                                                  */ 00072000
*/*   CONDITION 2 - NO CORE AVAILABLE FOR TIOT OR FOR QDB            */ 00073000
*/*                                                                  */ 00074000
*/*   OUTPUT - NONE                                                  */ 00075000
*/*                                                                  */ 00076000
*/*   RETURN CODE -                                                  */ 00077000
*/*     RETCODE = 4                                                  */ 00078000
*/********************************************************************/ 00079000
*                                                               02S0054 00080000
*SWASPID = JSCBSWSP;                   /*SET SWA SUBPOOL ID          */ 00081000
         SLR   @08,@08                                          02S0054 00082000
         IC    @08,JSCBSWSP(,JSCBPTR)                           02S0054 00083000
         ST    @08,SWASPID                                      02S0054 00084000
*TIOTSIZE = TIOMTSZE;                  /*SET AMT OF CORE REQUIRED    */ 00085000
         LH    TIOTSIZE,TIOMTSZE(,TIORBPTR)                     02S0055 00086000
* /* ?GETSTORG (SWASPID,TIOTSIZE,TMCORPTR) NOCLEAR;*/           02S0056 00087000
*   /* DEFINITIONS OF GETMAIN PARMS */                          02S0056 00088000
*   DCL                                                         02S0056 00089000
*     GTSTR0   FIXED(31) REG(0),/*GTMN PARM REG*/               02S0056 00090000
*     GTSTR1   FIXED(31) REG(1),/*GTMN PARM REG*/               02S0056 00091000
*     GTSTR2   PTR(31)   REG(2),/*GTMN PARM REG*/               02S0056 00092000
*     GTSTR15  FIXED(31) REG(15),/*GTMN RET COD*/               02S0056 00093000
*     GTSTRTCD FIXED(31); /* GETMAIN RTN CODE  */               02S0056 00094000
*   RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/               02S0057 00095000
*   GTSTR0 = TIOTSIZE; /* SET AMOUNT*/                          02S0058 00096000
         LR    GTSTR0,TIOTSIZE                                  02S0058 00097000
*   GTSTR2 = SWASPID; /* SET SUBPOOL*/                          02S0059 00098000
         LR    GTSTR2,@08                                       02S0059 00099000
*   GENERATE CODE;                                              02S0060 00100000
     GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN                               00101000
*   GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/               02S0061 00102000
         ST    GTSTR15,GTSTRTCD                                 02S0061 00103000
*   TMCORPTR = GTSTR1; /* ADDR OF GOTN STORG*/                  02S0062 00104000
         LR    TMCORPTR,GTSTR1                                  02S0062 00105000
*   RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */                02S0063 00106000
*   GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */               02S0064 00107000
         L     @08,GTSTRTCD                                     02S0064 00108000
         LR    GTSTR15,@08                                      02S0064 00109000
*                                      /* RESTORE LIST PRINT STATUS  */ 00110000
*/*GET CORE FOR TIOT   */                                       02S0065 00111000
*RETCODE = REG15;                      /*SAVE RETURN CODE            */ 00112000
*                                                               02S0065 00113000
         LR    RETCODE,REG15                                    02S0065 00114000
*IF RETCODE = NOERROR THEN                                      02S0066 00115000
         SLR   @08,@08                                          02S0066 00116000
         CR    RETCODE,@08                                      02S0066 00117000
         BNE   @RF00066                                         02S0066 00118000
*  DO;                                                          02S0067 00119000
*     DO; /*MODESET  KEYADDR(ZERO)*/                            02S0068 00120000
*       SPKA (ZERO); /*SET PSW KEY*/                            02S0069 00121000
         SPKA  0(@08)                                           02S0069 00122000
*     END; /*MODESET  KEYADDR(ZERO)*/           /*GET KEY ZERO TO UPDAT 00123000
* JSCB */                                                       02S0070 00124000
*    JSCTMCOR = TMCORPTR;                                       02S0071 00125000
         ST    TMCORPTR,JSCTMCOR(,JSCBPTR)                      02S0071 00126000
*     DO; /*MODESET  EXTKEY(SCHED)*/                            02S0072 00127000
*       SPKA (16); /*SET PSW KEY*/                              02S0073 00128000
         LA    @08,16                                           02S0073 00129000
         SPKA  0(@08)                                           02S0073 00130000
*     END; /*MODESET  EXTKEY(SCHED)*/           /*RETURN TO SCHEDULER K 00131000
*Y     */                                                       02S0074 00132000
*    DSAQDBLN = LENGTH(DSABQDB);                                02S0075 00133000
         LA    @08,28                                           02S0075 00134000
         ST    @08,DSAQDBLN                                     02S0075 00135000
*     /* ?GETSTORG (SWASPID,DSAQDBLN,DQDBCORP);*/               02S0076 00136000
*       DCL                                                     02S0076 00137000
*         GTSTR3   FIXED(31) REG(3),/* CLEARING REG*/           02S0076 00138000
*         GTSTR4   FIXED(31) REG(4),/* CLEARING REG*/           02S0076 00139000
*         GTSTR5   FIXED(31) REG(5),/* CLEARING REG*/           02S0076 00140000
*         GTSTR6   FIXED(31) REG(6),/* CLEARING REG*/           02S0076 00141000
*         GTSTR7   FIXED(31) REG(7),/* CLEARING REG*/           02S0076 00142000
*         GTSTR8   FIXED(31) REG(8),/* CLEARING REG*/           02S0076 00143000
*         GTSTZERO FIXED(31) INIT(0),                           02S0076 00144000
*         GTST253  FIXED(31) CONSTANT(253);                     02S0076 00145000
*       RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/           02S0077 00146000
*       GTSTR0 = DSAQDBLN; /* SET AMOUNT*/                      02S0078 00147000
         LR    GTSTR0,@08                                       02S0078 00148000
*       GTSTR2 = SWASPID; /* SET SUBPOOL*/                      02S0079 00149000
         L     GTSTR2,SWASPID                                   02S0079 00150000
*       GENERATE CODE;                                          02S0080 00151000
         GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN                           00152000
*       GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/           02S0081 00153000
         ST    GTSTR15,GTSTRTCD                                 02S0081 00154000
*       DQDBCORP = GTSTR1; /* ADDR OF GOTN STORG*/              02S0082 00155000
         ST    GTSTR1,DQDBCORP                                  02S0082 00156000
*       RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */            02S0083 00157000
*       IF GTSTRTCD = 0 THEN /*GETMAIN SUCCESSFUL? */           02S0084 00158000
         L     @08,GTSTRTCD                                     02S0084 00159000
         LTR   @08,@08                                          02S0084 00160000
         BNZ   @RF00084                                         02S0084 00161000
*         DO;               /* YES, CLEAR STORAGE.*/            02S0085 00162000
*           RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                   02S0086 00163000
*                              GTSTR7,GTSTR8) RSTD;             02S0086 00164000
*           GTSTR4 = DQDBCORP; /*STORG PTR*/                    02S0087 00165000
         L     @03,DQDBCORP                                     02S0087 00166000
         LR    GTSTR4,@03                                       02S0087 00167000
*           GTSTR5 = DSAQDBLN; /*STORG AMNT*/                   02S0088 00168000
         L     GTSTR5,DSAQDBLN                                  02S0088 00169000
*           GTSTR7 = '00000000'X; /*PAD CHAR & LNTH*/           02S0089 00170000
         SLR   GTSTR7,GTSTR7                                    02S0089 00171000
*           IF SWASPID = GTST253 THEN                           02S0090 00172000
         CLC   SWASPID(4),@CF00638                              02S0090 00173000
         BNE   @RF00090                                         02S0090 00174000
*          GEN                                                  02S0091 00175000
*       (MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8);       02S0091 00176000
         MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8                 00177000
*           GEN REFS(GTSTR4,GTSTR6);                            02S0092 00178000
@RF00090 DS    0H                                               02S0092 00179000
              MVCL  GTSTR4,GTSTR6 CLEAR GOTTEN STORG                    00180000
*           IF SWASPID = GTST253 THEN                           02S0093 00181000
         CLC   SWASPID(4),@CF00638                              02S0093 00182000
         BNE   @RF00093                                         02S0093 00183000
*             GEN (MODESET KEYADDR=(2));                        02S0094 00184000
         MODESET KEYADDR=(2)                                            00185000
*           RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                   02S0095 00186000
*                              GTSTR7,GTSTR8) UNRSTD;           02S0095 00187000
@RF00093 DS    0H                                               02S0096 00188000
*         END;       /* STORAGE CLEARING COMPLETED */           02S0096 00189000
*       ELSE                                                    02S0097 00190000
*       DQDBCORP= 0;   /* CLEAR RETURN ADDR. */                 02S0097 00191000
         B     @RC00084                                         02S0097 00192000
@RF00084 SLR   @08,@08                                          02S0097 00193000
         ST    @08,DQDBCORP                                     02S0097 00194000
*       GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */           02S0098 00195000
@RC00084 L     GTSTR15,GTSTRTCD                                 02S0098 00196000
*                                      /* RESTORE LIST PRINT STATUS  */ 00197000
*/*GET CORE FOR DSAB CHAIN                                            A 00198000
*CHOR BLOCK.               */                                   02S0099 00199000
*    RETCODE = REG15;                                           02S0099 00200000
         LR    RETCODE,REG15                                    02S0099 00201000
*  END;                                                         02S0100 00202000
*IF RETCODE = NOERROR THEN             /*ANY GETMAIN ERROR?          */ 00203000
@RF00066 SLR   @08,@08                                          02S0101 00204000
         CR    RETCODE,@08                                      02S0101 00205000
         BNE   @RF00101                                         02S0101 00206000
*  DO;                                 /*NO, SET UP QDB FOR STEP     */ 00207000
*     DO; /*MODESET  KEYADDR(ZERO)*/                            02S0103 00208000
*       SPKA (ZERO); /*SET PSW KEY*/                            02S0104 00209000
         SPKA  0(@08)                                           02S0104 00210000
*     END; /*MODESET  KEYADDR(ZERO)*/           /*GET KEY ZERO TO UPDAT 00211000
* JSCB */                                                       02S0105 00212000
*    JSCDSABQ = DQDBCORP;              /*SET PTR TO START OF QDB CORE   00213000
*                                        INTO JSCB                   */ 00214000
         L     @06,DQDBCORP                                     02S0106 00215000
         ST    @06,JSCDSABQ(,JSCBPTR)                           02S0106 00216000
*     DO; /*MODESET  EXTKEY(SCHED)*/                            02S0107 00217000
*       SPKA (16); /*SET PSW KEY*/                              02S0108 00218000
         LA    @03,16                                           02S0108 00219000
         SPKA  0(@03)                                           02S0108 00220000
*     END; /*MODESET  EXTKEY(SCHED)*/           /*RETURN TO SCHEDULER K 00221000
*Y     */                                                       02S0109 00222000
*    DSQDBID = DSABNM;                 /*SET 'Q' ACRONYM TO 'DSAB'   */ 00223000
         MVC   DSQDBID(4,@06),@CC00592                          02S0110 00224000
*    DSQDBLN = LENGTH(DSABQDB);        /*LENGTH OF DSAB QDB          */ 00225000
         MVC   DSQDBLN(2,@06),@CH00655                          02S0111 00226000
*    DSABPTR = ZERO;                   /*INSURE BASE PTR IS 0        */ 00227000
         LR    DSABPTR,@08                                      02S0112 00228000
*    DSQFDSP = ADDR(DSABFCHN);         /*DISPLACEMENT WITHIN DSAB       00229000
*                                        OF FWD PTR                  */ 00230000
         LA    @08,DSABFCHN(,DSABPTR)                           02S0113 00231000
         STH   @08,DSQFDSP(,@06)                                02S0113 00232000
*    DSQBDSP = ADDR(DSABBCHN);         /*DISPLACEMENT WITHIN DSAB       00233000
*                                        OF BACK PTR                 */ 00234000
         LA    @08,DSABBCHN(,DSABPTR)                           02S0114 00235000
         STH   @08,DSQBDSP(,@06)                                02S0114 00236000
*  END;                                                         02S0115 00237000
*     IF RETCODE = NOERROR THEN        /*GETMAIN OK?                 */ 00238000
@RF00101 SLR   @08,@08                                          01S0116 00239000
         CR    RETCODE,@08                                      01S0116 00240000
         BNE   @RF00116                                         01S0116 00241000
*       DO;                            /*YES, INIT TIOT & QDB        */ 00242000
*/********************************************************************/ 00243000
*/*                                                                  */ 00244000
*/* SEGMENT NAME - INITTIOT                                          */ 00245000
*/*                                                                  */ 00246000
*/* DESCRIPTIVE NAME - INITIALIZE TIOT/DSAB QDB                      */ 00247000
*/*                                                                  */ 00248000
*/* FUNCTION-                                                        */ 00249000
*/*   .INITIALIZE TIOT PREFIX AREA                                   */ 00250000
*/*      SET  POINTER TO BEGINNING OF FREE SPACE                     */ 00251000
*/*      SET LENGTH OF FREE SPACE                                    */ 00252000
*/*      SET POINTER TO BEGINNING OF TIOT AND LENGTH OF TIOT         */ 00253000
*/*        INTO TIOT LIST                                            */ 00254000
*/*                                                                  */ 00255000
*/*   .INITIALIZE TIOT HEADER AND SET 'END-OF-TIOT' INDICATOR        */ 00256000
*/*                                                                  */ 00257000
*/*   .INITIALIZE DSAB QDB                                           */ 00258000
*/*      CLEAR VARIABLE FIELDS OF QDB                                */ 00259000
*/*                                                                  */ 00260000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00261000
*/*                                                                  */ 00262000
*/*   PURPOSE - SEE FUNCTION                                         */ 00263000
*/*                                                                  */ 00264000
*/*   INPUT -                                                        */ 00265000
*/*     JSCTMCOR - POINTER TO TIOT CORE (IN JSCB)                    */ 00266000
*/*     TIOMIUSL - IN-LINE LIMIT                                     */ 00267000
*/*     TIOMJNMP - POINTER TO JOB NAME (IN TIOT MGR REQUEST BLOCK)   */ 00268000
*/*     TIOMSCTP - POINTER TO STEP NAME (IN TIOT MGR REQUEST BLOCK)  */ 00269000
*/*     TIOMPSNP - POINTER TO STEP NAME (IN TIOT MGR REQUEST         */ 00270000
*/*                BLOCK)                                            */ 00271000
*/*     TIOMSIZE - SIZE OF TIOT CORE (IN TIOT MGR REQUEST BLOCK)     */ 00272000
*/*     TIOMRETP - PTR TO RETURN INFO AREA                           */ 00273000
*/* EXITS -                                                          */ 00274000
*/*   CONDITIONS - SUCCESSFUL INITIALIZATION                         */ 00275000
*/*                                                                  */ 00276000
*/*     OUTPUT -                                                     */ 00277000
*/*       TIOT PREFIX,TIOT HEADER AND DSAB QDB ARE INITIALIZED       */ 00278000
*/*       (NOTE:  FREE SPACE POINTER AND LENGTH, IN PREFIX AREA,     */ 00279000
*/*       ARE ADJUSTED TO EXCLUDE THE 'END-OF-TIOT' INDICATOR)       */ 00280000
*/*       A POINTER TO THE TIOT LIST IS RETURNED IN THE RETURN INFO  */ 00281000
*/*         AREA                                                     */ 00282000
*/*     RETURN CODES - 0                                             */ 00283000
*/********************************************************************/ 00284000
*TIOTPTR = JSCTMCOR +LENGTH(TIOPREFX); /*SET PTR TO BEGINNING OF        00285000
*                                        TIOT IN TIOT LIST           */ 00286000
         L     @06,JSCTMCOR(,JSCBPTR)                           02S0118 00287000
         LA    @02,32                                           02S0118 00288000
         LR    @15,@06                                          02S0118 00289000
         ALR   @15,@02                                          02S0118 00290000
         ST    @15,TIOTPTR(,@06)                                02S0118 00291000
*TIOTLEN = TIOMTSZE - LENGTH(TIOPREFX);/*LENGTH OF TIOT, LESS PREFIX    00292000
*                                        AREA, INTO TIOT LIST        */ 00293000
         LCR   @02,@02                                          02S0119 00294000
         AH    @02,TIOMTSZE(,TIORBPTR)                          02S0119 00295000
         ST    @02,TIOTLEN(,@06)                                02S0119 00296000
*TIOFREEP =                            /*POINT TO START OF FREE SPACE*/ 00297000
*    TIOTPTR + LENGTH(TIOTHDR) + LENGTH(TIOTEND);               02S0120 00298000
         LA    @14,28                                           02S0120 00299000
         LR    @05,@15                                          02S0120 00300000
         ALR   @05,@14                                          02S0120 00301000
         ST    @05,TIOFREEP(,@06)                               02S0120 00302000
*TIOFRLEN =                            /*SET LENGTH OF FREE SPACE    */ 00303000
*    TIOTLEN - (LENGTH(TIOTHDR) + LENGTH(TIOTEND));             02S0121 00304000
         SLR   @02,@14                                          02S0121 00305000
         ST    @02,TIOFRLEN(,@06)                               02S0121 00306000
*TIOFENTP = ZERO;                      /*CLEAR PTR TO FIRST FREE        00307000
*                                        ENTRY ON CHAIN              */ 00308000
         ST    @08,TIOFENTP(,@06)                               02S0122 00309000
*DSQNELMS = ZERO;                      /*CLEAR VARIABLE QDB FIELDS   */ 00310000
         L     @02,JSCDSABQ(,JSCBPTR)                           02S0123 00311000
         ST    @08,DSQNELMS(,@02)                               02S0123 00312000
*DSQFRSTP = ZERO;                                               02S0124 00313000
         ST    @08,DSQFRSTP(,@02)                               02S0124 00314000
*DSQLASTP = ZERO;                                               02S0125 00315000
         ST    @08,DSQLASTP(,@02)                               02S0125 00316000
*TIONIUSL = TIOMIUSL;                  /*COPY IN-LINE LIMIT TO TIOT     00317000
*                                        PREFIX AREA                 */ 00318000
         MVC   TIONIUSL(2,@06),TIOMIUSL(TIORBPTR)               02S0126 00319000
*TIOJNAME = JOBNAME;                   /*JOB NAME TO TIOT HEADER     */ 00320000
         L     @02,TIOMJNMP(,TIORBPTR)                          02S0127 00321000
         MVC   TIOJNAME(8,@15),JOBNAME(@02)                     02S0127 00322000
*TIOSNAME = STEPNAME;                  /*STEP NAME TO HEADER         */ 00323000
         L     @02,TIOMSNMP(,TIORBPTR)                          02S0128 00324000
         MVC   TIOSNAME(8,@15),STEPNAME(@02)                    02S0128 00325000
*TIOPSNME = PSTPNAME;                  /*PROC STEP NAME TO HEADER    */ 00326000
         L     @02,TIOMPSNP(,TIORBPTR)                          02S0129 00327000
         MVC   TIOPSNME(8,@15),PSTPNAME(@02)                    02S0129 00328000
*TIOENTP = TIOTPTR + LENGTH(TIOTHDR);  /*POINT BEYOUND HEADER        */ 00329000
         AH    @15,@CH00064                                     02S0130 00330000
         LR    TIOENTP,@15                                      02S0130 00331000
*TIOENTP->TIOENTRY(1:4) =TIOTEND;      /*SET END INDICATOR           */ 00332000
         ST    @08,TIOENTRY(,TIOENTP)                           02S0131 00333000
* DO; /*MODESET  KEYADDR(ZERO)*/                                02S0132 00334000
*   SPKA (ZERO); /*SET PSW KEY*/                                02S0133 00335000
         SPKA  0(@08)                                           02S0133 00336000
* END; /*MODESET  KEYADDR(ZERO)*/                               02S0134 00337000
*TIORETNP = ADDR(TIOTLIST);            /*SET PTR TO TIOT LIST FOR       00338000
*                                        CALLER                      */ 00339000
         L     @08,TIOMRETP(,TIORBPTR)                          02S0135 00340000
         LA    @06,TIOTLIST(,@06)                               02S0135 00341000
         ST    @06,TIORETNP(,@08)                               02S0135 00342000
* DO; /*MODESET  EXTKEY(SCHED)*/                                02S0136 00343000
*   SPKA (16); /*SET PSW KEY*/                                  02S0137 00344000
         LA    @10,16                                           02S0137 00345000
         SPKA  0(@10)                                           02S0137 00346000
* END; /*MODESET  EXTKEY(SCHED)*/                               02S0138 00347000
*       END;                                                    01S0139 00348000
*  END;                                                         01S0140 00349000
*ELSE                                                           01S0141 00350000
*  IF TIOMALOC = YES THEN              /*ALLOCATE REQUESTED?         */ 00351000
         B     @RC00052                                         01S0141 00352000
@RF00052 TM    TIOMALOC(TIORBPTR),B'00100000'                   01S0141 00353000
         BNO   @RF00141                                         01S0141 00354000
*    DO;                                                        01S0142 00355000
*      REQENTLN = TIOMELEN;            /*SET LENGTH OF ENTRY REQ'D   */ 00356000
         LH    REQENTLN,TIOMELEN(,TIORBPTR)                     01S0143 00357000
*      CALL ALOCTIOE;                  /*CALL RTN TO ALLOC AN ENTRY  */ 00358000
         BAL   @14,ALOCTIOE                                     01S0144 00359000
*      IF RETCODE = NOERROR THEN                                01S0145 00360000
         SLR   @06,@06                                          01S0145 00361000
         CR    RETCODE,@06                                      01S0145 00362000
         BNE   @RF00145                                         01S0145 00363000
*        DO;                                                    01S0146 00364000
*           DO; /*MODESET  KEYADDR(ZERO)*/                      01S0147 00365000
*             SPKA (ZERO); /*SET PSW KEY*/                      01S0148 00366000
         SPKA  0(@06)                                           01S0148 00367000
*           END; /*MODESET  KEYADDR(ZERO)*/                     01S0149 00368000
*          TIORETNP = TIOENTP;         /*SET PTR TO ALOC'D ENTRY     */ 00369000
         L     @06,TIOMRETP(,TIORBPTR)                          01S0150 00370000
         ST    TIOENTP,TIORETNP(,@06)                           01S0150 00371000
*           DO; /*MODESET  EXTKEY(SCHED)*/                      01S0151 00372000
*             SPKA (16); /*SET PSW KEY*/                        01S0152 00373000
         LA    @10,16                                           01S0152 00374000
         SPKA  0(@10)                                           01S0152 00375000
*           END; /*MODESET  EXTKEY(SCHED)*/                     01S0153 00376000
*        END;                                                   01S0154 00377000
*    END;                                                       01S0155 00378000
*  ELSE                                                         01S0156 00379000
*    IF TIOMRLSE = YES THEN            /*RELEASE REQUESTED?          */ 00380000
         B     @RC00141                                         01S0156 00381000
@RF00141 TM    TIOMRLSE(TIORBPTR),B'00010000'                   01S0156 00382000
         BNO   @RF00156                                         01S0156 00383000
*      DO;                                                      01S0157 00384000
*        REQENTP = TIOMENTP;           /*SET PTR TO INPUT ENTRY      */ 00385000
         L     REQENTP,TIOMENTP(,TIORBPTR)                      01S0158 00386000
*        CALL RLSETIOT;                /*RELEASE A TIOT DD ENTRY     */ 00387000
         BAL   @14,RLSETIOT                                     01S0159 00388000
*      END;                                                     01S0160 00389000
*    ELSE                                                       01S0161 00390000
*       IF TIOMUPD = YES THEN          /*UPDATE REQUESTED?           */ 00391000
         B     @RC00156                                         01S0161 00392000
@RF00156 TM    TIOMUPD(TIORBPTR),B'00001000'                    01S0161 00393000
         BNO   @RF00161                                         01S0161 00394000
*         DO;                                                   01S0162 00395000
*/********************************************************************/ 00396000
*/*                                                                  */ 00397000
*/* SEGMENT NAME - UPDTIOT                                           */ 00398000
*/*                                                                  */ 00399000
*/* DESCRIPTIVE NAME - UPDATE (COMPRESS & REORDER) TIOT              */ 00400000
*/*                                                                  */ 00401000
*/* FUNCTION -                                                       */ 00402000
*/*   THIS ROUTINE IS RESPONSIBLE FOR INSURING THAT ALL VALID DD     */ 00403000
*/*   ENTRIES IN THE TIOT ARE BOTH CONTIGUOUS AND IN THE SAME ORDER  */ 00404000
*/*   AS THE INPUT SIOT CHAIN. THE DSAB CHAIN WILL ALSO BE REORDERED */ 00405000
*/*   TO CORRESPOND TO THE SIOT CHAIN AND THE                        */ 00406000
*/*   DSAB QUEUE DESCRIPTOR BLOCK (QDB) UPDATED TO REFLECT THE NEW   */ 00407000
*/*   ORDER (IF NECESSARY).                                          */ 00408000
*/*                                                                  */ 00409000
*/*   OPERATION -                                                    */ 00410000
*/*     .OBTAIN WORK SPACE                                           */ 00411000
*/*       THE ROUTINE MUST DETERMINE THE AMOUNT OF CORE REQUIRED FOR */ 00412000
*/*       ITS WORK SPACE (I.E.,AREA IN WHICH TIOT WILL BE REBUILT).  */ 00413000
*/*       THE AMOUNT OF SPACE NECESSARY IS THE SUM OF THE ENTRY      */ 00414000
*/*       LENGTHS.                                                   */ 00415000
*/*       IF THERE IS ENOUGH FREE SPACE IN THE TIOT ITSELF,THAT AREA */ 00416000
*/*       WILL BE USED. OTHERWISE CORE WILL BE REQUESTED FROM SUB-   */ 00417000
*/*       POOL 230.                                                  */ 00418000
*/*                                                                  */ 00419000
*/*     .REBUILDING THE TIOT                                         */ 00420000
*/*       IF WORK SPACE IS SUCCESSFULLY OBTAINED THE DD ENTRIES      */ 00421000
*/*       ARE MOVED INTO IT IN THE ORDER IN WHICH THE SIOTS APPEAR   */ 00422000
*/*       ON THE INPUT CHAIN. THE COMPRESSED AND REORDERED TIOT IS   */ 00423000
*/*       THEN MOVED BACK TO THE "REAL" TIOT. IF WORK SPACE WAS NOT  */ 00424000
*/*       AVAILABLE PROCESSING IS TERMINATED AND AN ERROR RETURN     */ 00425000
*/*       CODE SET.                                                  */ 00426000
*/*                                                                  */ 00427000
*/*     .REORDER DSAB CHAIN                                          */ 00428000
*/*       THE INPUT SIOT CHAIN IS USED TO DETERMINE THE REQUIRED     */ 00429000
*/*       ORDER OF THE DSAB CHAIN. THE DSABS ARE RECHAINED AND THE   */ 00430000
*/*       DSAB QDB POINTERS TO THE FIRST AND LAST DSAB ARE UPDATED.  */ 00431000
*/*                                                                  */ 00432000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00433000
*/*   PURPOSE - SEE FUNCTION                                         */ 00434000
*/*                                                                  */ 00435000
*/*   INPUT -                                                        */ 00436000
*/*     TIOMSIOP - PTR TO FIRST SIOT ON CHAIN                        */ 00437000
*/*     JSCBPTR  - PTR TO JOB STEP CONTROL BLOCK                     */ 00438000
*/*     JSCTMCOR - PTR TO TIOT CORE                                  */ 00439000
*/*     JSCDSABQ - PTR TO DSAB QDB                                   */ 00440000
*/*                                                                  */ 00441000
*/* EXITS -                                                          */ 00442000
*/*   CONDITION - FUNCTIONS COMPLETED SUCCESSFULLY                   */ 00443000
*/*                                                                  */ 00444000
*/*     OUTPUT - UPDATED TIOT, DSAB AND QDB                          */ 00445000
*/*                                                                  */ 00446000
*/*     RETURN CODE - RETCODE = 0                                    */ 00447000
*/*                                                                  */ 00448000
*/*   CONDITION - WORK SPACE NOT AVAILABLE                           */ 00449000
*/*                                                                  */ 00450000
*/*     OUTPUT - TIOT & QDB REMAIN UNCHANGED                         */ 00451000
*/*                                                                  */ 00452000
*/*     RETURN CODE - RETCODE = 4                                    */ 00453000
*/********************************************************************/ 00454000
*WSLNTH = ZERO;                        /*INITIALIZE WORK SPACE LENGTH*/ 00455000
         SLR   @08,@08                                          02S0163 00456000
         ST    @08,WSLNTH                                       02S0163 00457000
*SIOTPTR = TIOMSIOP;                   /*PT TO FIRST SIOT ON CHAIN   */ 00458000
         L     SIOTPTR,TIOMSIOP(,TIORBPTR)                      02S0164 00459000
*DO WHILE (SIOTPTR ^= ZERO);           /*SCAN SIOT CHAIN             */ 00460000
         B     @DE00165                                         02S0165 00461000
@DL00165 DS    0H                                               02S0166 00462000
*  DSABPTR = SIOTETIO;                 /*POINT TO ETIOT FOR REQUEST  */ 00463000
         L     DSABPTR,SIOTETIO(,SIOTPTR)                       02S0166 00464000
*  DSABPALC = ON;                      /*PERM. ALLOCATED ATTRIBUTE   */ 00465000
         OI    DSABPALC(DSABPTR),B'01000000'                    02S0167 00466000
*  IF DSABCATM = ON THEN               /*MEMBER OF CONCAT GROUP ?    */ 00467000
         TM    DSABCATM(DSABPTR),B'00000010'                    02S0168 00468000
         BNO   @RF00168                                         02S0168 00469000
*    DSABPCAT = ON;                    /*PERM CONCAT ATTRIBUTE       */ 00470000
         OI    DSABPCAT(DSABPTR),B'00000100'                    02S0169 00471000
*  ELSE;                                                        02S0170 00472000
@RF00168 DS    0H                                               02S0171 00473000
*  WSLNTH = WSLNTH + TIOELNGH;         /*CALCULATE TOTAL LENGTH      */ 00474000
         L     @08,DSABTIOT(,DSABPTR)                           02S0171 00475000
         SLR   @06,@06                                          02S0171 00476000
         IC    @06,TIOELNGH(,@08)                               02S0171 00477000
         AL    @06,WSLNTH                                       02S0171 00478000
         ST    @06,WSLNTH                                       02S0171 00479000
*  SIOTPTR = SIOTNPTR;                 /*POINT TO NEXT SIOT          */ 00480000
         L     SIOTPTR,SIOTNPTR(,SIOTPTR)                       02S0172 00481000
*END;                                                           02S0173 00482000
@DE00165 LTR   SIOTPTR,SIOTPTR                                  02S0173 00483000
         BNZ   @DL00165                                         02S0173 00484000
*GETMNSW = NO;                         /*INIT GETMAIN SWITCH         */ 00485000
         NI    GETMNSW,B'01111111'                              02S0174 00486000
*IF WSLNTH <= TIOFRLEN THEN            /*ENOUGH FREE SPACE IN TIOT?  */ 00487000
         L     @08,JSCTMCOR(,JSCBPTR)                           02S0175 00488000
         L     @06,WSLNTH                                       02S0175 00489000
         C     @06,TIOFRLEN(,@08)                               02S0175 00490000
         BH    @RF00175                                         02S0175 00491000
*  TIOENTP = TIOFREEP;                 /*YES,SET PTR TO WORK SPACE   */ 00492000
         L     TIOENTP,TIOFREEP(,@08)                           02S0176 00493000
*ELSE                                  /*NO, MUST GET CORE           */ 00494000
*  DO;                                                          02S0177 00495000
         B     @RC00175                                         02S0177 00496000
@RF00175 DS    0H                                               02S0178 00497000
*    GETMNSW = YES;                    /*INDICATE GETMAIN DONE       */ 00498000
         OI    GETMNSW,B'10000000'                              02S0178 00499000
*    SUBPLID  = WSSUBPL;               /*SET SUBPOOL NUMBER          */ 00500000
         LA    @08,230                                          02S0179 00501000
         ST    @08,SUBPLID                                      02S0179 00502000
*     /* ?GETSTORG (SUBPLID,WSLNTH,WSPTR);*/                    02S0180 00503000
*       RFY (GTSTR0,GTSTR1,GTSTR2) RSTD; /*SAVE RGS*/           02S0180 00504000
*       GTSTR0 = WSLNTH; /* SET AMOUNT*/                        02S0181 00505000
         L     GTSTR0,WSLNTH                                    02S0181 00506000
*       GTSTR2 = SUBPLID; /* SET SUBPOOL*/                      02S0182 00507000
         LR    GTSTR2,@08                                       02S0182 00508000
*       GENERATE CODE;                                          02S0183 00509000
         GETMAIN RC,LV=(0),SP=(2)  DO GETMAIN                           00510000
*       GTSTRTCD = GTSTR15; /* SAVE GETMAIN RET COD*/           02S0184 00511000
         ST    GTSTR15,GTSTRTCD                                 02S0184 00512000
*       WSPTR = GTSTR1; /* ADDR OF GOTN STORG*/                 02S0185 00513000
         ST    GTSTR1,WSPTR                                     02S0185 00514000
*       RFY (GTSTR0,GTSTR1,GTSTR2) UNRSTD; /*RLSE */            02S0186 00515000
*       IF GTSTRTCD = 0 THEN /*GETMAIN SUCCESSFUL? */           02S0187 00516000
         L     @08,GTSTRTCD                                     02S0187 00517000
         LTR   @08,@08                                          02S0187 00518000
         BNZ   @RF00187                                         02S0187 00519000
*         DO;               /* YES, CLEAR STORAGE.*/            02S0188 00520000
*           RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                   02S0189 00521000
*                              GTSTR7,GTSTR8) RSTD;             02S0189 00522000
*           GTSTR4 = WSPTR; /*STORG PTR*/                       02S0190 00523000
         L     @03,WSPTR                                        02S0190 00524000
         LR    GTSTR4,@03                                       02S0190 00525000
*           GTSTR5 = WSLNTH; /*STORG AMNT*/                     02S0191 00526000
         L     GTSTR5,WSLNTH                                    02S0191 00527000
*           GTSTR7 = '00000000'X; /*PAD CHAR & LNTH*/           02S0192 00528000
         SLR   GTSTR7,GTSTR7                                    02S0192 00529000
*           IF SUBPLID = GTST253 THEN                           02S0193 00530000
         CLC   SUBPLID(4),@CF00638                              02S0193 00531000
         BNE   @RF00193                                         02S0193 00532000
*          GEN                                                  02S0194 00533000
*       (MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8);       02S0194 00534000
         MODESET KEYADDR=GTSTZERO,SAVEKEY=(2),WORKREG=8                 00535000
*           GEN REFS(GTSTR4,GTSTR6);                            02S0195 00536000
@RF00193 DS    0H                                               02S0195 00537000
              MVCL  GTSTR4,GTSTR6 CLEAR GOTTEN STORG                    00538000
*           IF SUBPLID = GTST253 THEN                           02S0196 00539000
         CLC   SUBPLID(4),@CF00638                              02S0196 00540000
         BNE   @RF00196                                         02S0196 00541000
*             GEN (MODESET KEYADDR=(2));                        02S0197 00542000
         MODESET KEYADDR=(2)                                            00543000
*           RFY (GTSTR2,GTSTR4,GTSTR5,GTSTR6,                   02S0198 00544000
*                              GTSTR7,GTSTR8) UNRSTD;           02S0198 00545000
@RF00196 DS    0H                                               02S0199 00546000
*         END;       /* STORAGE CLEARING COMPLETED */           02S0199 00547000
*       ELSE                                                    02S0200 00548000
*       WSPTR= 0;   /* CLEAR RETURN ADDR. */                    02S0200 00549000
         B     @RC00187                                         02S0200 00550000
@RF00187 SLR   @08,@08                                          02S0200 00551000
         ST    @08,WSPTR                                        02S0200 00552000
*       GTSTR15 = GTSTRTCD;    /* GTMN RETURN CODE */           02S0201 00553000
@RC00187 L     GTSTR15,GTSTRTCD                                 02S0201 00554000
*                                      /* RESTORE LIST PRINT STATUS  */ 00555000
*/*INVOKE GETSPACE RTN         */                               02S0202 00556000
*    RETCODE = REG15;                  /*SAVE RETURN CODE            */ 00557000
         LR    RETCODE,REG15                                    02S0202 00558000
*    TIOENTP = WSPTR;                  /*SET PTR TO WORK SPACE       */ 00559000
         L     TIOENTP,WSPTR                                    02S0203 00560000
*  END;                                                         02S0204 00561000
*DO I = 1 TO 2 WHILE (RETCODE = NOERROR);/*                     02S0205 00562000
*                                        MOVE DD ENTRIES TO WORK        00563000
*                                        SPACE THEN BACK TO REAL TIOT*/ 00564000
@RC00175 LA    I,1                                              02S0205 00565000
@DL00205 LTR   RETCODE,RETCODE                                  02S0205 00566000
         BNZ   @DC00205                                         02S0205 00567000
*  SIOTPTR = TIOMSIOP;                 /*SET PTR TO FIRST SIOT       */ 00568000
         L     SIOTPTR,TIOMSIOP(,TIORBPTR)                      02S0206 00569000
*    DO WHILE (SIOTPTR ^= ZERO);       /*SCAN SIOT CHAIN             */ 00570000
         B     @DE00207                                         02S0207 00571000
@DL00207 DS    0H                                               02S0208 00572000
*      DSABPTR = SIOTETIO;             /*SET PTR TO ETIOT ENTRY      */ 00573000
         L     DSABPTR,SIOTETIO(,SIOTPTR)                       02S0208 00574000
*      TIOENTP -> TIOENTRY(1:TIOELNGH) = /*MOVE DD ENTRY             */ 00575000
*          TIOENTRY;                                            02S0209 00576000
         L     @08,DSABTIOT(,DSABPTR)                           02S0209 00577000
         SLR   @06,@06                                          02S0209 00578000
         IC    @06,TIOELNGH(,@08)                               02S0209 00579000
         BCTR  @06,0                                            02S0209 00580000
         EX    @06,@SM00662                                     02S0209 00581000
*      DSABTIOT = TIOENTP;             /*SET PTR TO DD ENTRY IN DSAB */ 00582000
         ST    TIOENTP,DSABTIOT(,DSABPTR)                       02S0210 00583000
*      TIOENTP = TIOENTP + TIOELNGH;   /*POINT TO NEXT SLOT  IN TIOT */ 00584000
         L     @08,DSABTIOT(,DSABPTR)                           02S0211 00585000
         SLR   @06,@06                                          02S0211 00586000
         IC    @06,TIOELNGH(,@08)                               02S0211 00587000
         ALR   TIOENTP,@06                                      02S0211 00588000
*      SIOTPTR = SIOTNPTR;             /*POINT TO NEXT SIOT          */ 00589000
         L     SIOTPTR,SIOTNPTR(,SIOTPTR)                       02S0212 00590000
*    END;                                                       02S0213 00591000
@DE00207 LTR   SIOTPTR,SIOTPTR                                  02S0213 00592000
         BNZ   @DL00207                                         02S0213 00593000
*  TIOENTP = TIOTPTR + LENGTH(TIOTHDR); /*RESET PTR TO BEG. TIOT        00594000
*                                        FOR THE MOVE BACK           */ 00595000
         L     @08,JSCTMCOR(,JSCBPTR)                           02S0214 00596000
         LA    TIOENTP,24                                       02S0214 00597000
         AL    TIOENTP,TIOTPTR(,@08)                            02S0214 00598000
*END;                                                           02S0215 00599000
         AH    I,@CH00062                                       02S0215 00600000
         CH    I,@CH00113                                       02S0215 00601000
         BNH   @DL00205                                         02S0215 00602000
@DC00205 DS    0H                                               02S0216 00603000
*IF RETCODE = NOERROR THEN                                      02S0216 00604000
         SLR   @08,@08                                          02S0216 00605000
         CR    RETCODE,@08                                      02S0216 00606000
         BNE   @RF00216                                         02S0216 00607000
*  DO;                                                          02S0217 00608000
*    TIOENTP =                         /*POINT TO END OF TIOT ENTRIES*/ 00609000
*        TIOTPTR + WSLNTH + LENGTH(TIOTHDR);                    02S0218 00610000
         L     @06,WSLNTH                                       02S0218 00611000
         L     @15,JSCTMCOR(,JSCBPTR)                           02S0218 00612000
         L     TIOENTP,TIOTPTR(,@15)                            02S0218 00613000
         ALR   TIOENTP,@06                                      02S0218 00614000
         AH    TIOENTP,@CH00064                                 02S0218 00615000
*    TIOENTP -> TIOENTRY(1:4) = TIOTEND;/*SET END OF TIOT INDICATOR  */ 00616000
         ST    @08,TIOENTRY(,TIOENTP)                           02S0219 00617000
*    TIOFREEP = TIOENTP + LENGTH(TIOTEND);/*UPDATE FREE SPACE PTR    */ 00618000
         LA    @02,4                                            02S0220 00619000
         ALR   @02,TIOENTP                                      02S0220 00620000
         ST    @02,TIOFREEP(,@15)                               02S0220 00621000
*    TIOFENTP = ZERO;                  /*CLEAR FREE ENTRY PTR        */ 00622000
         ST    @08,TIOFENTP(,@15)                               02S0221 00623000
*    IF GETMNSW = ON THEN              /*WAS A GETMAIN DONE?         */ 00624000
         TM    GETMNSW,B'10000000'                              02S0222 00625000
         BNO   @RF00222                                         02S0222 00626000
*      DO;                             /*YES, FREE WORK SPACE        */ 00627000
*        RFY (REG0,REG1) RSTD;                                  02S0224 00628000
*        SPID = SUBPLID;               /*SET SUBPOOL NUMBER          */ 00629000
         MVC   SPID(1),SUBPLID+3                                02S0225 00630000
*        BLKLEN = WSLNTH;              /*LENGTH OF AREA TO FREE      */ 00631000
         STCM  @06,7,BLKLEN                                     02S0226 00632000
*        REG0 = FREELEN;                                        02S0227 00633000
         L     REG0,FREELEN                                     02S0227 00634000
*        REG1 = WSPTR;                 /*POINT TO WORK SPACE         */ 00635000
         L     REG1,WSPTR                                       02S0228 00636000
*        GEN(FREEMAIN R,LV=(0),A=(1)); /*FREE WORK SPACE CORE        */ 00637000
         FREEMAIN R,LV=(0),A=(1)                                        00638000
*        RFY (REG0,REG1) UNRSTD;                                02S0230 00639000
*      END;                                                     02S0231 00640000
*/********************************************************************/ 00641000
*/*                                                                  */ 00642000
*/* SEGMENT NAME - UPDSACHN                                          */ 00643000
*/*                                                                  */ 00644000
*/* DESCRIPTIVE NAME - UPDATE DSAB CHAIN                             */ 00645000
*/*                                                                  */ 00646000
*/* FUNCTION -                                                       */ 00647000
*/*   THIS ROUTINE WILL REORDER THE INPUT DSAB CHAIN TO CORRESPOND   */ 00648000
*/*   TO THE ORDER OF THE INPUT SIOT CHAIN. THE DSAB QDB IS ALSO     */ 00649000
*/*   UPDATED TO REFLECT THE NEW ORDER.                              */ 00650000
*/*                                                                  */ 00651000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00652000
*/*   PURPOSE - SEE FUNCTION                                         */ 00653000
*/*                                                                  */ 00654000
*/*   INPUT -                                                        */ 00655000
*/*     TIOMSIOP - PTR TO FIRST SIOT ON CHAIN                        */ 00656000
*/*       SIOTETIO - PTR TO DSAB (IN EACH SIOT)                      */ 00657000
*/*     JSCBPTR - PTR TO JOB STEP CONTROL BLOCK                      */ 00658000
*/*       JSCDSABQ - PTR TO DSAB QDB                                 */ 00659000
*/*                                                                  */ 00660000
*/* EXITS -                                                          */ 00661000
*/*   CONDITION - DSAB CHAIN REORDERED                               */ 00662000
*/*     OUTPUT -                                                     */ 00663000
*/*       DSABFCHN AND DSABBCHN FIELDS UPDATED IN EACH DSAB          */ 00664000
*/*       DSQFRSTP AND DSQLASTP FIELDS UPDATED IN DSAB QDB           */ 00665000
*/*       DSABCATM AND DSABPCAT BITS SET ON IF NECESSARY             */ 00666000
*/*     RETURN CODE -                                                */ 00667000
*/*       RETCODE - SAME AS ON ENTRY                                 */ 00668000
*/*                                                                  */ 00669000
*/********************************************************************/ 00670000
*SIOTPTR = TIOMSIOP;                   /*SET PTR TO FIRST SIOT       */ 00671000
@RF00222 L     SIOTPTR,TIOMSIOP(,TIORBPTR)                      03S0232 00672000
*DSABPTR = SIOTETIO;                   /*SET PTR TO FIRT DSAB        */ 00673000
         L     DSABPTR,SIOTETIO(,SIOTPTR)                       03S0233 00674000
*DSQFRSTP = DSABPTR;                   /*SET FIRST DSAB PTR IN QDB   */ 00675000
         L     @10,JSCDSABQ(,JSCBPTR)                           03S0234 00676000
         ST    DSABPTR,DSQFRSTP(,@10)                           03S0234 00677000
*DSABBCHN = ZERO;                      /*ZERO BACK CHAIN PTR IN FIRST*/ 00678000
         SLR   @10,@10                                          03S0235 00679000
         ST    @10,DSABBCHN(,DSABPTR)                           03S0235 00680000
*DO WHILE (SIOTPTR ^= ZERO);           /*PROCESS ALL DSABS           */ 00681000
         B     @DE00236                                         03S0236 00682000
@DL00236 DS    0H                                               03S0237 00683000
*  IF SIOTNPTR ^= ZERO THEN            /*ANOTHER SIOT ON CHAIN       */ 00684000
         L     @10,SIOTNPTR(,SIOTPTR)                           03S0237 00685000
         LTR   @10,@10                                          03S0237 00686000
         BZ    @RF00237                                         03S0237 00687000
*    DO;                               /*YES, CONTINUE               */ 00688000
*      DSABFCHN = SIOTNPTR -> SIOTETIO; /*SET FWD PTR TO NEXT DSAB   */ 00689000
         L     @10,SIOTETIO(,@10)                               03S0239 00690000
         ST    @10,DSABFCHN(,DSABPTR)                           03S0239 00691000
*      DSABFCHN -> DSABBCHN = SIOTETIO; /*SET BACK PTR IN NEXT DSAB  */ 00692000
         MVC   DSABBCHN(4,@10),SIOTETIO(SIOTPTR)                03S0240 00693000
*      IF DSABFCHN->DSABCATM = ON      /*NXT DSAB IN CONCAT          */ 00694000
*        & SCTDDNAM(1) ^= BLANK THEN   /*& THIS IS MOTHER DSAB       */ 00695000
         TM    DSABCATM(@10),B'00000010'                        03S0241 00696000
         BNO   @RF00241                                         03S0241 00697000
         CLC   SCTDDNAM(1,SIOTPTR),BLANK                        03S0241 00698000
         BE    @RF00241                                         03S0241 00699000
*        DO;                                                    03S0242 00700000
*          DSABCATM = ON;              /*SET CONCAT BIT IN MOTHER       00701000
*                                        DSAB                        */ 00702000
*          DSABPCAT = ON;              /*PERM CONCAT                 */ 00703000
         OI    DSABCATM(DSABPTR),B'00000110'                    03S0244 00704000
*        END;                                                   03S0245 00705000
*    END;                                                       03S0246 00706000
@RF00241 DS    0H                                               03S0247 00707000
*  SIOTPTR = SIOTNPTR;                 /*POINT TO NEXT SIOT          */ 00708000
@RF00237 L     SIOTPTR,SIOTNPTR(,SIOTPTR)                       03S0247 00709000
*  IF SIOTPTR ^= ZERO THEN             /*IS THERE ANOTHER SIOT?      */ 00710000
         LTR   SIOTPTR,SIOTPTR                                  03S0248 00711000
         BZ    @RF00248                                         03S0248 00712000
*    DSABPTR = SIOTETIO;               /*YES,POINT TO ITS DSAB       */ 00713000
         L     DSABPTR,SIOTETIO(,SIOTPTR)                       03S0249 00714000
*END;                                                           03S0250 00715000
@RF00248 DS    0H                                               03S0250 00716000
@DE00236 SLR   @10,@10                                          03S0250 00717000
         CR    SIOTPTR,@10                                      03S0250 00718000
         BNE   @DL00236                                         03S0250 00719000
*DSABFCHN = ZERO;                      /*ZERO FWD CHN PTR IN LAST       00720000
*                                        DSAB                        */ 00721000
         ST    @10,DSABFCHN(,DSABPTR)                           03S0251 00722000
*DSQLASTP = DSABPTR;                   /*SET PTR TO LAST DSAB IN QDB */ 00723000
         L     @10,JSCDSABQ(,JSCBPTR)                           03S0252 00724000
         ST    DSABPTR,DSQLASTP(,@10)                           03S0252 00725000
*  END;                                                         02S0253 00726000
*         END;                                                  01S0254 00727000
*       ELSE                                                    01S0255 00728000
*         IF TIOMUNAL = YES THEN       /*UNALLOCATE REQUESTED?       */ 00729000
         B     @RC00161                                         01S0255 00730000
@RF00161 TM    TIOMUNAL(TIORBPTR),B'00000010'                   01S0255 00731000
         BNO   @RF00255                                         01S0255 00732000
*           DO;                                                 01S0256 00733000
*/********************************************************************/ 00734000
*/*                                                                  */ 00735000
*/* SEGMENT NAME - UNALCTIO                                          */ 00736000
*/*                                                                  */ 00737000
*/* DESCRIPTIVE NAME - UNALLOCATE DSAB/TIOT DD ENTRY                 */ 00738000
*/*                                                                  */ 00739000
*/* FUNCTION -                                                       */ 00740000
*/*   THIS ROUTINE PERFORMS THE FOLLOWING FUNCTIONS:                 */ 00741000
*/*     .RELEASES TIOT DD ENTRIES,IF REQUIRED                        */ 00742000
*/*     .FREES THE CORE FOR THE DSAB AND ITS ASSOCIATED TABLES       */ 00743000
*/*     .UPDATES THE DSAB QDB                                        */ 00744000
*/*                                                                  */ 00745000
*/*   OPERATION -                                                    */ 00746000
*/*     FOR EACH DSAB IN THE INPUT LIST THE ROUTINE PROCESSES IT AS  */ 00747000
*/*     FOLLOWS:                                                     */ 00748000
*/*       IF THE TIOT DD ENTRY IS TO BE RELEASED, THE 'RELEASE       */ 00749000
*/*       TIOT ENTRY' SUBROUTINE IS INVOKED TO PLACE THE ENTRY       */ 00750000
*/*       ON TO THE FREE ENTRY CHAIN AND TO MERGE CONTIGUOUS FREE    */ 00751000
*/*       ENTRIES.                                                   */ 00752000
*/*                                                                  */ 00753000
*/*       THE CORE FOR THE DSAB GROUP ID LIST, THE DSAB ALTERNATE    */ 00754000
*/*       NAME LIST AND THE DSAB ITSELF, IS FREED. IF THIS DSAB      */ 00755000
*/*       IS EITHER THE FIRST OR THE LAST ON THE CHAIN THE           */ 00756000
*/*       CORRESPONDING DSAB QDB POINTER IS UPDATED. THE NUMBER OF   */ 00757000
*/*       ELEMENTS ON THE CHAIN IS DECREMENTED FOR EACH DSAB FREED   */ 00758000
*/*       AND THE REMAINING ELEMENTS ARE RECHAINED.                  */ 00759000
*/*                                                                  */ 00760000
*/* ENTRY - IN-LINE SEGMENT                                          */ 00761000
*/*   PURPOSE - SEE FUNCTION                                         */ 00762000
*/*   INPUT -                                                        */ 00763000
*/*     TIOT MGR REQUEST BLOCK                                       */ 00764000
*/*       TIOMRENT - IF ON,RELEASE DD ENTRIES                        */ 00765000
*/*       TIOMNDSA - NO. DSABS TO PROCESS                            */ 00766000
*/*       TIOMDSAP - PTR TO LIST OF DSAB POINTERS (DSLIST)           */ 00767000
*/*         EACH DSAB CONTAINS                                       */ 00768000
*/*           PTR TO NEXT DSAB (OR 0 IF LAST)                        */ 00769000
*/*           PTR TO LAST DSAB (OR 0 IF FIRST)                       */ 00770000
*/*           PTR TO TIOT DD ENTRY                                   */ 00771000
*/*           PTR TO GROUP ID LIST                                   */ 00772000
*/*           PTR TO ALTERNATE DATA SET NAME LIST                    */ 00773000
*/*           LENGTH OF DSAB                                         */ 00774000
*/*       TIOMJSCP - PTR TO JSCB                                     */ 00775000
*/*         JSCBDSAQ - PTR TO DSAB QDB                               */ 00776000
*/*                                                                  */ 00777000
*/* EXIT -                                                           */ 00778000
*/*    CONDITION - REQUESTED FUNCTIONS COMPLETED                     */ 00779000
*/*     OUTPUT -                                                     */ 00780000
*/*       TIOT ENTRY FREE CHAIN UPDATED                              */ 00781000
*/*       DSAB CHAIN UPDATED                                         */ 00782000
*/*       DSAB QDB UPDATED                                           */ 00783000
*/*     RETURN CODES -                                               */ 00784000
*/*       NONE                                                       */ 00785000
*/*                                                                  */ 00786000
*/********************************************************************/ 00787000
*DO DSABCTR = 1 TO TIOMNDSA;           /*PROCESS ALL DSABS IN LIST   */ 00788000
         LA    DSABCTR,1                                        02S0257 00789000
         B     @DE00257                                         02S0257 00790000
@DL00257 DS    0H                                               02S0258 00791000
*  DSABPTR = DSLENT(DSABCTR);          /*SET BASE FOR THIS DSAB      */ 00792000
         LR    @08,DSABCTR                                      02S0258 00793000
         SLA   @08,2                                            02S0258 00794000
         L     @01,TIOMDSAP(,TIORBPTR)                          02S0258 00795000
         AL    @01,@CF00664                                     02S0258 00796000
         L     DSABPTR,DSLENT(@08,@01)                          02S0258 00797000
*  IF TIOMRENT = YES THEN              /*DD ENTRIES TO BE RELEASED   */ 00798000
         TM    TIOMRENT(TIORBPTR),B'10000000'                   02S0259 00799000
         BNO   @RF00259                                         02S0259 00800000
*    DO;                               /*RELEASE ENTRY               */ 00801000
*      REQENTP = DSABTIOT;             /*SET PTR TO DD ENTRY         */ 00802000
         L     REQENTP,DSABTIOT(,DSABPTR)                       02S0261 00803000
*      CALL RLSETIOT;                  /*RELEASE DD ENTRY            */ 00804000
         BAL   @14,RLSETIOT                                     02S0262 00805000
*    END;                                                       02S0263 00806000
*  IF DSQNELMS > ONE THEN              /*MORE THAN 1 DSAB ON CHAIN   */ 00807000
@RF00259 L     @08,JSCDSABQ(,JSCBPTR)                           02S0264 00808000
         L     @08,DSQNELMS(,@08)                               02S0264 00809000
         CH    @08,@CH00062                                     02S0264 00810000
         BNH   @RF00264                                         02S0264 00811000
*    DO;                                                        02S0265 00812000
*      IF DSABFCHN ^= ZERO THEN        /*THIS DSAB NOT LAST ON CHAIN */ 00813000
         L     @08,DSABFCHN(,DSABPTR)                           02S0266 00814000
         LTR   @08,@08                                          02S0266 00815000
         BZ    @RF00266                                         02S0266 00816000
*        DSABFCHN->DSABBCHN = DSABBCHN; /*UPDATE NEXT BACK PTR       */ 00817000
         MVC   DSABBCHN(4,@08),DSABBCHN(DSABPTR)                02S0267 00818000
*      ELSE                            /*CURRENT LAST BEING FREED    */ 00819000
*        DSABBCHN->DSABFCHN = ZERO;    /*SET ZERO IN NEW LAST        */ 00820000
         B     @RC00266                                         02S0268 00821000
@RF00266 L     @08,DSABBCHN(,DSABPTR)                           02S0268 00822000
         SLR   @03,@03                                          02S0268 00823000
         ST    @03,DSABFCHN(,@08)                               02S0268 00824000
*      IF DSABBCHN ^= ZERO THEN        /*THIS DSAB NOT FIRST         */ 00825000
@RC00266 L     @08,DSABBCHN(,DSABPTR)                           02S0269 00826000
         LTR   @08,@08                                          02S0269 00827000
         BZ    @RF00269                                         02S0269 00828000
*        DSABBCHN->DSABFCHN = DSABFCHN; /*UPDATE LAST FWD PTR        */ 00829000
         MVC   DSABFCHN(4,@08),DSABFCHN(DSABPTR)                02S0270 00830000
*      ELSE                            /*CURRENT FIRST BEING FREED   */ 00831000
*        DSABFCHN->DSABBCHN = ZERO;    /*SET ZERO BACK PTR IN NEW       00832000
*                                        FIRST                       */ 00833000
         B     @RC00269                                         02S0271 00834000
@RF00269 L     @08,DSABFCHN(,DSABPTR)                           02S0271 00835000
         SLR   @03,@03                                          02S0271 00836000
         ST    @03,DSABBCHN(,@08)                               02S0271 00837000
*    END;                                                       02S0272 00838000
@RC00269 DS    0H                                               02S0273 00839000
*  IF DSQFRSTP = DSABPTR THEN          /*FIRST DSAB BEING FREED      */ 00840000
@RF00264 L     @08,JSCDSABQ(,JSCBPTR)                           02S0273 00841000
         C     DSABPTR,DSQFRSTP(,@08)                           02S0273 00842000
         BNE   @RF00273                                         02S0273 00843000
*    DSQFRSTP = DSABFCHN;              /*SET QDB PTR TO NEW FIRST    */ 00844000
         MVC   DSQFRSTP(4,@08),DSABFCHN(DSABPTR)                02S0274 00845000
*  IF DSQLASTP = DSABPTR THEN          /*LAST DSAB BEING FREED       */ 00846000
@RF00273 L     @08,JSCDSABQ(,JSCBPTR)                           02S0275 00847000
         C     DSABPTR,DSQLASTP(,@08)                           02S0275 00848000
         BNE   @RF00275                                         02S0275 00849000
*    DSQLASTP = DSABBCHN;              /*SET QDB PTR TO NEW LAST     */ 00850000
         MVC   DSQLASTP(4,@08),DSABBCHN(DSABPTR)                02S0276 00851000
*  DSQNELMS = DSQNELMS - ONE;          /*DECR. NO. DSABS             */ 00852000
@RF00275 L     @08,JSCDSABQ(,JSCBPTR)                           02S0277 00853000
         L     @03,DSQNELMS(,@08)                               02S0277 00854000
         BCTR  @03,0                                            02S0277 00855000
         ST    @03,DSQNELMS(,@08)                               02S0277 00856000
*  RFY(REG0,REG1) RSTD;                                         02S0278 00857000
*  IF DSABGIDP ^= ZERO THEN                                     02S0279 00858000
         L     @08,DSABGIDP(,DSABPTR)                           02S0279 00859000
         LTR   @08,@08                                          02S0279 00860000
         BZ    @RF00279                                         02S0279 00861000
*    DO;                               /*FREE GROUP ID LIST          */ 00862000
*      BLKLEN = DSABLLEN;                                       02S0281 00863000
         MVC   BLKLEN(3),DSABLLEN+1(@08)                        02S0281 00864000
*      SPID  = JSCBSWSP;                                        02S0282 00865000
         MVC   SPID(1),JSCBSWSP(JSCBPTR)                        02S0282 00866000
*      REG0 = FREELEN;                                          02S0283 00867000
         L     REG0,FREELEN                                     02S0283 00868000
*      REG1 = DSABGIDP;                                         02S0284 00869000
         LR    REG1,@08                                         02S0284 00870000
*      GEN(FREEMAIN R,LV=(0),A=(1));                            02S0285 00871000
         FREEMAIN R,LV=(0),A=(1)                                        00872000
*    END;                                                       02S0286 00873000
*  IF DSABANMP ^= ZERO THEN                                     02S0287 00874000
@RF00279 L     @08,DSABANMP(,DSABPTR)                           02S0287 00875000
         LTR   @08,@08                                          02S0287 00876000
         BZ    @RF00287                                         02S0287 00877000
*    DO;                               /*FREE ALTERNATE DSN LIST     */ 00878000
*      BLKLEN = DSABANML + LENGTH(DSABANML);                    02S0289 00879000
         LA    @03,1                                            02S0289 00880000
         SLR   @15,@15                                          02S0289 00881000
         IC    @15,DSABANML(,@08)                               02S0289 00882000
         ALR   @03,@15                                          02S0289 00883000
         STCM  @03,7,BLKLEN                                     02S0289 00884000
*      SPID = JSCBSWSP;                                         02S0290 00885000
         MVC   SPID(1),JSCBSWSP(JSCBPTR)                        02S0290 00886000
*      REG0 = FREELEN;                                          02S0291 00887000
         L     REG0,FREELEN                                     02S0291 00888000
*      REG1 = DSABANMP;                                         02S0292 00889000
         LR    REG1,@08                                         02S0292 00890000
*      GEN(FREEMAIN R,LV=(0),A=(1));                            02S0293 00891000
         FREEMAIN R,LV=(0),A=(1)                                        00892000
*    END;                                                       02S0294 00893000
*  BLKLEN = DSABLNTH;                                           02S0295 00894000
@RF00287 LH    @08,DSABLNTH(,DSABPTR)                           02S0295 00895000
         STCM  @08,7,BLKLEN                                     02S0295 00896000
*  SPID = JSCBSWSP;                                             02S0296 00897000
         MVC   SPID(1),JSCBSWSP(JSCBPTR)                        02S0296 00898000
*  REG0 = FREELEN;                                              02S0297 00899000
         L     REG0,FREELEN                                     02S0297 00900000
*  REG1 = DSABPTR;                                              02S0298 00901000
         LR    REG1,DSABPTR                                     02S0298 00902000
*  GEN(FREEMAIN R,LV=(0),A=(1));       /*FREE THE DSAB               */ 00903000
         FREEMAIN R,LV=(0),A=(1)                                        00904000
*  RFY(REG0,REG1) UNRSTD;                                       02S0300 00905000
*END;                                                           02S0301 00906000
         AH    DSABCTR,@CH00062                                 02S0301 00907000
@DE00257 CH    DSABCTR,TIOMNDSA(,TIORBPTR)                      02S0301 00908000
         BNH   @DL00257                                         02S0301 00909000
*           END;                                                01S0302 00910000
*         ELSE                                                  01S0303 00911000
*           IF TIOMFREE = YES THEN     /*FREE TIOT & QDB CORE?       */ 00912000
         B     @RC00255                                         01S0303 00913000
@RF00255 TM    TIOMFREE(TIORBPTR),B'00000001'                   01S0303 00914000
         BNO   @RF00303                                         01S0303 00915000
*             DO;                                               01S0304 00916000
*               SPID = JSCBSWSP;       /*SET SUBPOOL ID TO FREE      */ 00917000
         MVC   SPID(1),JSCBSWSP(JSCBPTR)                        01S0305 00918000
*               RFY(REG0,REG1) RSTD;   /*RESTRICT REGS FOR MACRO     */ 00919000
*               IF JSCTMCOR ^=ZERO THEN                         01S0307 00920000
         L     @10,JSCTMCOR(,JSCBPTR)                           01S0307 00921000
         LTR   @10,@10                                          01S0307 00922000
         BZ    @RF00307                                         01S0307 00923000
*                 DO;                                           01S0308 00924000
*                   BLKLEN=TIOTLEN + LENGTH(TIOPREFX);          01S0309 00925000
         LA    @08,32                                           01S0309 00926000
         AL    @08,TIOTLEN(,@10)                                01S0309 00927000
         STCM  @08,7,BLKLEN                                     01S0309 00928000
*                   REG0 = FREELEN;                             01S0310 00929000
         L     REG0,FREELEN                                     01S0310 00930000
*                   REG1 = JSCTMCOR;   /*SET PTR TO TIOT CORE        */ 00931000
         LR    REG1,@10                                         01S0311 00932000
*                   GEN(FREEMAIN R,LV=(0),A=(1)); /*FREE  TIOT CORE  */ 00933000
         FREEMAIN R,LV=(0),A=(1)                                        00934000
*                    DO; /*MODESET  KEYADDR(ZERO)*/             01S0313 00935000
*                      SPKA (ZERO); /*SET PSW KEY*/             01S0314 00936000
         SLR   @10,@10                                          01S0314 00937000
         SPKA  0(@10)                                           01S0314 00938000
*                    END; /*MODESET  KEYADDR(ZERO)*/            01S0315 00939000
*                   JSCTMCOR = ZERO;   /*CLEAR PTR FIELD IN JSCB     */ 00940000
         ST    @10,JSCTMCOR(,JSCBPTR)                           01S0316 00941000
*                    DO; /*MODESET  EXTKEY(SCHED)*/             01S0317 00942000
*                      SPKA (16); /*SET PSW KEY*/               01S0318 00943000
         LA    @10,16                                           01S0318 00944000
         SPKA  0(@10)                                           01S0318 00945000
*                    END; /*MODESET  EXTKEY(SCHED)*/            01S0319 00946000
*                 END;                                          01S0320 00947000
*               IF JSCDSABQ ^= ZERO THEN                        01S0321 00948000
@RF00307 L     @10,JSCDSABQ(,JSCBPTR)                           01S0321 00949000
         LTR   @10,@10                                          01S0321 00950000
         BZ    @RF00321                                         01S0321 00951000
*                 DO;                                           01S0322 00952000
*                   BLKLEN = LENGTH(DSABQDB);                   01S0323 00953000
         MVC   BLKLEN(3),@CF00655+1                             01S0323 00954000
*                   REG0 = FREELEN;                             01S0324 00955000
         L     REG0,FREELEN                                     01S0324 00956000
*                   REG1 = JSCDSABQ;   /*SET PTR TO QDB CORE         */ 00957000
         LR    REG1,@10                                         01S0325 00958000
*                   GEN(FREEMAIN R,LV=(0),A=(1)); /*FREE QDB CORE    */ 00959000
         FREEMAIN R,LV=(0),A=(1)                                        00960000
*                    DO; /*MODESET  KEYADDR(ZERO)*/             01S0327 00961000
*                      SPKA (ZERO); /*SET PSW KEY*/             01S0328 00962000
         SLR   @10,@10                                          01S0328 00963000
         SPKA  0(@10)                                           01S0328 00964000
*                    END; /*MODESET  KEYADDR(ZERO)*/            01S0329 00965000
*                   JSCDSABQ = ZERO;   /*CLEAR PTR FIELD IN JSCB     */ 00966000
         ST    @10,JSCDSABQ(,JSCBPTR)                           01S0330 00967000
*                    DO; /*MODESET  EXTKEY(SCHED)*/             01S0331 00968000
*                      SPKA (16); /*SET PSW KEY*/               01S0332 00969000
         LA    @10,16                                           01S0332 00970000
         SPKA  0(@10)                                           01S0332 00971000
*                    END; /*MODESET  EXTKEY(SCHED)*/            01S0333 00972000
*                 END;                                          01S0334 00973000
*               RFY(REG0,REG1) UNRSTD;                          01S0335 00974000
@RF00321 DS    0H                                               01S0336 00975000
*                DO; /*MODESET  KEYADDR(ZERO)*/                 01S0336 00976000
*                  SPKA (ZERO); /*SET PSW KEY*/                 01S0337 00977000
         SLR   @10,@10                                          01S0337 00978000
         SPKA  0(@10)                                           01S0337 00979000
*                END; /*MODESET  KEYADDR(ZERO)*/                01S0338 00980000
*               JSCSIOTS = OFF;        /*CLEAR C/R SIOT SCAN INDIC   */ 00981000
         NI    JSCSIOTS(JSCBPTR),B'11111101'                    01S0339 00982000
*                DO; /*MODESET  EXTKEY(SCHED)*/                 01S0340 00983000
*                  SPKA (16); /*SET PSW KEY*/                   01S0341 00984000
         LA    @10,16                                           01S0341 00985000
         SPKA  0(@10)                                           01S0341 00986000
*                END; /*MODESET  EXTKEY(SCHED)*//*RETURN TO SCHEDULER K 00987000
*Y     */                                                       01S0342 00988000
*             END;                                              01S0343 00989000
*           ELSE                                                01S0344 00990000
*             IF TIOMCCAT = YES THEN   /*CONCATENATE REQUESTED       */ 00991000
         B     @RC00303                                         01S0344 00992000
@RF00303 TM    TIOMCCAT(TIORBPTR),B'00000100'                   01S0344 00993000
         BNO   @RF00344                                         01S0344 00994000
*               DO;                                             01S0345 00995000
*/********************************************************************/ 00996000
*/* SEGMENT NAME - CONCATIO                                          */ 00997000
*/*                                                                  */ 00998000
*/* DESCRIPTIVE NAME - CONCATENATE TIOT DD ENTRIES                   */ 00999000
*/*                                                                  */ 01000000
*/* FUNCTION -                                                       */ 01001000
*/*   THIS ROUTINE WILL INSURE THAT THE TIOT DD ENTRIES FOR EACH     */ 01002000
*/*   DSAB ON THE INPUT LIST  ARE CONTIGUOUS IN THE TIOT AND ARE     */ 01003000
*/*   IN THE ORDER SPECIFIED BY THE LIST.  THE ROUTINE WILL ALSO     */ 01004000
*/*   UPDATE THE DSAB CHAIN AND THE DSAB QDB TO REFLECT ANY REORDER- */ 01005000
*/*   ING NECESSARY.  THE DSABS WILL BE PUT AT THE END OF THE CHAIN  */ 01006000
*/*   IN THE ORDER SPECIFIED BY THE LIST.                            */ 01007000
*/*                                                                  */ 01008000
*/*   THE ROUTINE WILL USE THE ALLOCATE SUBROUTINE (ALOCTIOE) TO     */ 01009000
*/*   OBTAIN SPACE EQUAL IN LENGTH TO THE COMBINED LENGTH OF THE     */ 01010000
*/*   ENTRIES TO BE CONCATENATED. IF ENOUGH SPACE IS AVAILABLE IN THE*/ 01011000
*/*   TIOT, THE  DATA IN THE EXISTING ENTRIES IS MOVED TO THE NEW    */ 01012000
*/*   SPACE  AND THE EXISTING ENTRIES RELEASED USING THE RELEASE     */ 01013000
*/*   SUBROUTINE  (RLSETIOT).  IF THERE IS NOT ENOUGH SPACE AVAILABLE*/ 01014000
*/*   IN THE TIOT AN ERROR CODE IS RETURNED TO THE CALLER.           */ 01015000
*/*                                                                  */ 01016000
*/*   THIS ROUTINE WILL ALSO SET DSABCATM IN THE DSAB FOR EACH       */ 01017000
*/*   MEMBER OF A CONCATENATED GROUP INCLUDING THE MEMBER WITH       */ 01018000
*/*   THE DDNAME.                                                    */ 01019000
*/* NOTE:  THE SIOTS ARE NOT CHANGED OR RECHAINED.                   */ 01020000
*/*                                                                  */ 01021000
*/* OPERATION -                                                      */ 01022000
*/*   THIS ROUTINE WILL CALCULATE THE SIZE OF THE TIOT ENTRY THAT    */ 01023000
*/*   IS REQUIRED FOR THE REQUESTED CONCATENATION.IT LOCATES AN      */ 01024000
*/*   ENTRY IN THE TIOT BY CALLING ALOCTIOE WHICH RETURNS A POINTER  */ 01025000
*/*   TO AN ENTRY IF THERE IS ENOUGH SPACE AND SETS A RETURN CODE TO */ 01026000
*/*   ZERO,(IF A NON-ZERO RETURN CODE IS RETURNED,PROCESSING IS      */ 01027000
*/*   TERMINATED). THE ROUTINE THEN MOVES THE TIOT ENTRIES TO BE     */ 01028000
*/*   CONCATENATED TO THE NEW TIOT ENTRY IN THE ORDER SPECIFIED,     */ 01029000
*/*   SETS THE DSAB POINTERS TO THE NEW ENTRIES, AND RELEASES THE OLD*/ 01030000
*/*   TIOT ENTRIES VIA A CALL TO RLSETIOT.  CONCAT DSAB (CCATDSAB) IS*/ 01031000
*/*   THEN INCLUDED TO REORDER THE DSAB CHAIN & QDB.  AFTER          */ 01032000
*/*   THE DSAB CHAIN IS UPDATED, THE DSABCATM BIT IS SET FOR EACH    */ 01033000
*/*   DSAB ON THE LIST AND THE TIOT DDNAME FOR EACH DSAB ENTRY ON THE*/ 01034000
*/*   LIST, EXCEPT FOR THE FIRST ONE, IS BLANKED OUT.                */ 01035000
*/*                                                                  */ 01036000
*/*                                                                  */ 01037000
*/* ENTRY - INLINE SEGMENT                                           */ 01038000
*/*   PURPOSE - SEE FUNCTION                                         */ 01039000
*/*   INPUT -                                                        */ 01040000
*/*     TIOMDSAP - PTR TO LIST OF DSABS TO BE CONCATENATED           */ 01041000
*/*         DSABTIOT- PTR TO TIOT DD ENTRY                           */ 01042000
*/*           TIOELNGH- LENGTH OF TIOT DD ENTRY                      */ 01043000
*/*     TIOMNDSA - NUMBER OF DSABS TO BE CONCATENATED                */ 01044000
*/*     JSCBPTR - PTR TO JOB STEP CONTROL BLOCK                      */ 01045000
*/*       JSCDSABQ - PTR TO DSAB QDB                                 */ 01046000
*/*                                                                  */ 01047000
*/* EXITS -                                                          */ 01048000
*/*   CONDITION - DD ENTRIES CONTIGUOUS IN TIOT                      */ 01049000
*/*                                                                  */ 01050000
*/*     OUTPUT DATA -                                                */ 01051000
*/*       UPDATED TIOT AND FREE ENTRY CHAIN                          */ 01052000
*/*       UPDATED DSAB CHAIN AND DSAB QDB                            */ 01053000
*/*                                                                  */ 01054000
*/*     RETURN CODE - 0                                              */ 01055000
*/*                                                                  */ 01056000
*/*   CONDITON - NOT ENOUGH SPACE AVAILABLE IN TIOT                  */ 01057000
*/*                                                                  */ 01058000
*/*     OUTPUT DATA - NONE                                           */ 01059000
*/*                                                                  */ 01060000
*/*     RETURN CODE - 4                                              */ 01061000
*/*                                                                  */ 01062000
*/*                                                                  */ 01063000
*/********************************************************************/ 01064000
*/* CALCULATE TIOT ENTRY SIZE NEEDED:                                */ 01065000
*RETCODE = NOERROR;                    /*INITIALIZE RETURN CODE      */ 01066000
         SLR   @08,@08                                          02S0346 01067000
         LR    RETCODE,@08                                      02S0346 01068000
*REQENTLN = ZERO;                      /*INITIALIZE LENGTH FIELD     */ 01069000
         LR    REQENTLN,@08                                     02S0347 01070000
*DO TEMPDCTR = ONE TO TIOMNDSA;        /*PROCESS ALL DSABS ON LIST   */ 01071000
         LA    TEMPDCTR,1                                       02S0348 01072000
         B     @DE00348                                         02S0348 01073000
@DL00348 DS    0H                                               02S0349 01074000
*  DSABPTR = DSABLIST(TEMPDCTR);       /*PT TO CURRENT DSAB          */ 01075000
         LR    @06,TEMPDCTR                                     02S0349 01076000
         SLA   @06,2                                            02S0349 01077000
         L     @05,TIOMDSAP(,TIORBPTR)                          02S0349 01078000
         AL    @05,@CF00664                                     02S0349 01079000
         L     DSABPTR,DSABLIST(@06,@05)                        02S0349 01080000
*  REQENTLN=REQENTLN + TIOELNGH;       /*ACCUMULATE LENGH            */ 01081000
         L     @06,DSABTIOT(,DSABPTR)                           02S0350 01082000
         SLR   @05,@05                                          02S0350 01083000
         IC    @05,TIOELNGH(,@06)                               02S0350 01084000
         ALR   REQENTLN,@05                                     02S0350 01085000
*  DO WHILE  DSABPTR   ^= ZERO &       /*DSABS EXIST ?       @YM07296*/ 01086000
*            DSABFCHN  ^= ZERO &       /*NOT ALL DONE WITH DSAB CHAIN*/ 01087000
*            DSABFCHN->DSABCATM=ON &   /*PROCESS DSABS ALREADY CONCAT*/ 01088000
*            DSABFCHN->DSABTIOT->TIOEDDNM = BLANKS8;  /* TIOT DDNAME    01089000
*                                        BLANK ?             @YM07296*/ 01090000
         B     @DE00351                                         02S0351 01091000
@DL00351 DS    0H                                               02S0352 01092000
*    DSABPTR = DSABFCHN;               /*POINT TO NEXT DSAB          */ 01093000
         L     DSABPTR,DSABFCHN(,DSABPTR)                       02S0352 01094000
*    REQENTLN = REQENTLN + TIOELNGH;   /*UPDATE LENGTH TOTAL         */ 01095000
         L     @06,DSABTIOT(,DSABPTR)                           02S0353 01096000
         SLR   @05,@05                                          02S0353 01097000
         IC    @05,TIOELNGH(,@06)                               02S0353 01098000
         ALR   REQENTLN,@05                                     02S0353 01099000
*  END;                                                         02S0354 01100000
@DE00351 SLR   @06,@06                                          02S0354 01101000
         CR    DSABPTR,@06                                      02S0354 01102000
         BE    @DC00351                                         02S0354 01103000
         L     @05,DSABFCHN(,DSABPTR)                           02S0354 01104000
         CR    @05,@06                                          02S0354 01105000
         BE    @DC00351                                         02S0354 01106000
         TM    DSABCATM(@05),B'00000010'                        02S0354 01107000
         BNO   @DC00351                                         02S0354 01108000
         L     @06,DSABTIOT(,@05)                               02S0354 01109000
         CLC   TIOEDDNM(8,@06),BLANKS8                          02S0354 01110000
         BE    @DL00351                                         02S0354 01111000
@DC00351 DS    0H                                               02S0355 01112000
*END;                                                           02S0355 01113000
         AH    TEMPDCTR,@CH00062                                02S0355 01114000
@DE00348 CH    TEMPDCTR,TIOMNDSA(,TIORBPTR)                     02S0355 01115000
         BNH   @DL00348                                         02S0355 01116000
*CALL ALOCTIOE;                        /*LOCATE ENTRY LARGE ENOUGH   */ 01117000
         BAL   @14,ALOCTIOE                                     02S0356 01118000
*IF RETCODE = NOERROR THEN             /*IF YES, SPACE FOUND         */ 01119000
         LTR   RETCODE,RETCODE                                  02S0357 01120000
         BNZ   @RF00357                                         02S0357 01121000
*  DO;                                                          02S0358 01122000
*    TCATPTR = TIOENTP;                /*TEMP WORK POINTER.  TIOENTP    01123000
*                                       IS THE PTR TO ALLOCATED ENTRY*/ 01124000
         LR    TCATPTR,TIOENTP                                  02S0359 01125000
*    DO TEMPDCTR = ONE TO TIOMNDSA;    /*PROCESS ALL DSABS ON LIST   */ 01126000
         LA    TEMPDCTR,1                                       02S0360 01127000
         B     @DE00360                                         02S0360 01128000
@DL00360 DS    0H                                               02S0361 01129000
*      DSABPTR = DSABLIST(TEMPDCTR);   /*POINT TO CURRENT DSAB       */ 01130000
         LR    @15,TEMPDCTR                                     02S0361 01131000
         SLA   @15,2                                            02S0361 01132000
         L     @01,TIOMDSAP(,TIORBPTR)                          02S0361 01133000
         AL    @01,@CF00664                                     02S0361 01134000
         L     DSABPTR,DSABLIST(@15,@01)                        02S0361 01135000
*      TCATPTR->TIOENTRY(1:TIOELNGH)=                           02S0362 01136000
*                 TIOENTRY(1:TIOELNGH); /*MOVE TIOT DD ENTRY         */ 01137000
         L     @03,DSABTIOT(,DSABPTR)                           02S0362 01138000
         SLR   @15,@15                                          02S0362 01139000
         IC    @15,TIOELNGH(,@03)                               02S0362 01140000
         BCTR  @15,0                                            02S0362 01141000
         EX    @15,@SM00666                                     02S0362 01142000
*      REQENTP = DSABTIOT;             /*POINT TO ENTRY TO RELEASE   */ 01143000
         LR    REQENTP,@03                                      02S0363 01144000
*      DSABTIOT = TCATPTR;             /*UPDATE PTR TO TIOT          */ 01145000
         ST    TCATPTR,DSABTIOT(,DSABPTR)                       02S0364 01146000
*      REQENTLN = REQENTLN - TIOELNGH; /*GET REMAINING LENGTH@YM07296*/ 01147000
         L     @03,DSABTIOT(,DSABPTR)                           02S0365 01148000
         SLR   @15,@15                                          02S0365 01149000
         IC    @15,TIOELNGH(,@03)                               02S0365 01150000
         SLR   REQENTLN,@15                                     02S0365 01151000
*      TCATPTR = TCATPTR+TIOELNGH;     /*POINT TO END OF NEW ENTRY   */ 01152000
         ALR   TCATPTR,@15                                      02S0366 01153000
*      IF REQENTLN ^= ZERO THEN        /*MORE SPACE REMAINS? @YM07296*/ 01154000
         LTR   REQENTLN,REQENTLN                                02S0367 01155000
         BZ    @RF00367                                         02S0367 01156000
*        TCATPTR->TIOELNGH = REQENTLN; /*SET NEXT ENTRY LEN  @YM07296*/ 01157000
         STC   REQENTLN,TIOELNGH(,TCATPTR)                      02S0368 01158000
*      CALL RLSETIOT;                  /*RELEASE OLD ENTRY           */ 01159000
@RF00367 BAL   @14,RLSETIOT                                     02S0369 01160000
*      DO WHILE DSABFCHN ^= ZERO  &    /*MORE DSABS EXIST            */ 01161000
*               DSABFCHN->DSABCATM = ON  &  /*NEXT DSAB IS CONCAT'D  */ 01162000
*               DSABFCHN->DSABTIOT->TIOEDDNM = BLANKS8; /* TO THIS      01163000
*                                        GROUP               @YM07296*/ 01164000
         B     @DE00370                                         02S0370 01165000
@DL00370 DS    0H                                               02S0371 01166000
*        DSABPTR = DSABFCHN;             /*POINT TO DSAB/TIOT TO MOVE*/ 01167000
         L     DSABPTR,DSABFCHN(,DSABPTR)                       02S0371 01168000
*        TCATPTR ->TIOENTRY(1:TIOELNGH)=    /*MOVE TIOT DD ENTRY     */ 01169000
*                      TIOENTRY(1:TIOELNGH);                    02S0372 01170000
         L     @03,DSABTIOT(,DSABPTR)                           02S0372 01171000
         SLR   @15,@15                                          02S0372 01172000
         IC    @15,TIOELNGH(,@03)                               02S0372 01173000
         BCTR  @15,0                                            02S0372 01174000
         EX    @15,@SM00666                                     02S0372 01175000
*        REQENTP = DSABTIOT;             /*UPDATE PTR TO TIOT ENTRY  */ 01176000
         LR    REQENTP,@03                                      02S0373 01177000
*        DSABTIOT = TCATPTR;             /*UPDATE PTR TO TIOT        */ 01178000
         ST    TCATPTR,DSABTIOT(,DSABPTR)                       02S0374 01179000
*        REQENTLN = REQENTLN - TIOELNGH; /*GET REMAINING LENGTH      */ 01180000
         L     @03,DSABTIOT(,DSABPTR)                           02S0375 01181000
         SLR   @15,@15                                          02S0375 01182000
         IC    @15,TIOELNGH(,@03)                               02S0375 01183000
         SLR   REQENTLN,@15                                     02S0375 01184000
*        TCATPTR = TCATPTR + TIOELNGH;   /*POINT TO NEXT ENTRY TO USE*/ 01185000
         ALR   TCATPTR,@15                                      02S0376 01186000
*        IF REQENTLN ^= ZERO THEN                               02S0377 01187000
         LTR   REQENTLN,REQENTLN                                02S0377 01188000
         BZ    @RF00377                                         02S0377 01189000
*          TCATPTR->TIOELNGH = REQENTLN; /*SET NEXT ENTRY LENGTH     */ 01190000
         STC   REQENTLN,TIOELNGH(,TCATPTR)                      02S0378 01191000
*        CALL RLSETIOT;                  /*RELEASE OLD ENTRY         */ 01192000
@RF00377 BAL   @14,RLSETIOT                                     02S0379 01193000
*      END;                                                     02S0380 01194000
@DE00370 L     @05,DSABFCHN(,DSABPTR)                           02S0380 01195000
         LTR   @05,@05                                          02S0380 01196000
         BZ    @DC00370                                         02S0380 01197000
         TM    DSABCATM(@05),B'00000010'                        02S0380 01198000
         BNO   @DC00370                                         02S0380 01199000
         L     @05,DSABTIOT(,@05)                               02S0380 01200000
         CLC   TIOEDDNM(8,@05),BLANKS8                          02S0380 01201000
         BE    @DL00370                                         02S0380 01202000
@DC00370 DS    0H                                               02S0381 01203000
*    END;                                                       02S0381 01204000
         AH    TEMPDCTR,@CH00062                                02S0381 01205000
@DE00360 CH    TEMPDCTR,TIOMNDSA(,TIORBPTR)                     02S0381 01206000
         BNH   @DL00360                                         02S0381 01207000
*/********************************************************************/ 01208000
*/*TIOT ENTRIES FOR THE REQUEST ARE NOW CONTIGUOUS AND IN THE ORDER  */ 01209000
*/*SPECIFIED.  THE POINTERS TO THE TIOT ENTRIES ARE UPDATED(DSABTIOT)*/ 01210000
*/*AND THE OLD TIOT ENTRIES HAVE BEEN RELEASED.                      */ 01211000
*/********************************************************************/ 01212000
*/********************************************************************/ 01213000
*/* SEGMENT NAME - CCATDSAB                                          */ 01214000
*/*                                                                  */ 01215000
*/* DESCRIPTIVE NAME - CONCATENATE DSABS                             */ 01216000
*/*                                                                  */ 01217000
*/* FUNCTION -                                                       */ 01218000
*/*   THIS ROUTINE WILL RECHAIN THE DSAB ENTRIES FOR A CONCAT REQUEST*/ 01219000
*/*   SO THAT THEY ARE IN THE ORDER SPECIFIED BY THE DSAB LIST.      */ 01220000
*/*   IT WILL PLACE THEM AT THE END OF THE DSAB CHAIN IF THERE ARE   */ 01221000
*/*   OTHER DSABS. IF A DSAB ALREADY HAS A DSAB CONCATENATED TO IT,  */ 01222000
*/*   THAT PREVIOUS CONCATENATION WILL BE PRESERVED BY CONCATENATING */ 01223000
*/*   THE NEW ELEMENT(S) TO THE END OF THAT PREVIOUSLY CONCATENATED  */ 01224000
*/*   GROUP. IT ALSO SETS BITS FOR DYNAMIC ALLOCATION RECOVERY TO    */ 01225000
*/*   INDICATE THE CONDITION OF THE DSAB CHAIN IN CASE AN ABEND      */ 01226000
*/*   OCCURS.                                                        */ 01227000
*/*                                                                  */ 01228000
*/*   OPERATION -                                                    */ 01229000
*/*     A CHECK IS MADE TO SEE IF THE DSAB POINTED TO HAS ANY DSABS  */ 01230000
*/*     CONCATENATED TO IT FROM PREVIOUS CONCAT OPERATIONS. IT WILL  */ 01231000
*/*     CHAIN THE DSAB (OR DSAB GROUP IF THERE WERE PREVIOUS CONCATE-*/ 01232000
*/*     NATIONS) TO THE BOTTOM OF THE DSAB CHAIN. THE FORWARD CHAINS */ 01233000
*/*     ARE UPDATED FIRST AND BACKCHAINS ARE UPDATED LAST. A COUNTER */ 01234000
*/*     (TEMPDCTR) WILL BE INCREMENTED TO POINT TO EACH DSAB POINTER */ 01235000
*/*     ON THE LIST.  THIS OPERATION WILL BE REPEATED FOR EACH DSAB  */ 01236000
*/*     ON THE LIST.                                                 */ 01237000
*/*                                                                  */ 01238000
*/* ENTRY - INLINE SEGMENT                                           */ 01239000
*/*   PURPOSE - SEE FUNCTION                                         */ 01240000
*/*   INPUT -                                                        */ 01241000
*/*     TIOMDSAP - PTR TO THE LIST OF DSABS TO BE CONCATENATED       */ 01242000
*/*     TIOMNDSA - NUMBER OF DSABS TO BE CONCATENATED                */ 01243000
*/*     JSCBPTR  - PTR TO JSCB                                       */ 01244000
*/*                                                                  */ 01245000
*/* EXITS -                                                          */ 01246000
*/*   CONDITION - SPECIFIED DSABS REORDERED & RECHAINED, DSAB LIST   */ 01247000
*/*               COMPLETELY PROCESSED.                              */ 01248000
*/*     OUTPUT -                                                     */ 01249000
*/*       UPDATED DSAB CHAIN AND DSAB QDB                            */ 01250000
*/*     RETURN CODE - NONE                                           */ 01251000
*/********************************************************************/ 01252000
*DO TEMPDCTR = ONE TO TIOMNDSA;        /*PROCESS ALL DSABS IN LIST   */ 01253000
         LA    TEMPDCTR,1                                       03S0382 01254000
         B     @DE00382                                         03S0382 01255000
@DL00382 DS    0H                                               03S0383 01256000
*  DSABPTR = DSABLIST(TEMPDCTR);       /*POINT TO DSAB               */ 01257000
         LR    @06,TEMPDCTR                                     03S0383 01258000
         SLA   @06,2                                            03S0383 01259000
         L     @05,TIOMDSAP(,TIORBPTR)                          03S0383 01260000
         AL    @05,@CF00664                                     03S0383 01261000
         L     DSABPTR,DSABLIST(@06,@05)                        03S0383 01262000
*  LASTDSAB = DSABPTR;                 /*INIT PTR TO LAST CONCAT DSAB*/ 01263000
         LR    LASTDSAB,DSABPTR                                 03S0384 01264000
*  RFY DSAB BASED(LASTDSAB);           /*RESET DSAB BASE PTR         */ 01265000
*  DO WHILE DSABFCHN^= ZERO            /*PROC. TO END OF CHAIN OF ANY   01266000
*                                        DSABS PREVIOUSLY CONCAT'D   */ 01267000
*       &  DSABFCHN ->DSABCATM = ON                             03S0386 01268000
*       &  DSABFCHN->DSABTIOT->TIOEDDNM(1) = BLANK;             03S0386 01269000
         B     @DE00386                                         03S0386 01270000
@DL00386 DS    0H                                               03S0387 01271000
*    LASTDSAB = LASTDSAB->DSABFCHN;    /*PTR TO LAST MEMBER OF  03S0387 01272000
*                                        PREVIOUS CONCATENATION      */ 01273000
         L     LASTDSAB,DSABFCHN(,LASTDSAB)                     03S0387 01274000
*  END;                                                         03S0388 01275000
@DE00386 L     @06,DSABFCHN(,LASTDSAB)                          03S0388 01276000
         LTR   @06,@06                                          03S0388 01277000
         BZ    @DC00386                                         03S0388 01278000
         TM    DSABCATM(@06),B'00000010'                        03S0388 01279000
         BNO   @DC00386                                         03S0388 01280000
         L     @06,DSABTIOT(,@06)                               03S0388 01281000
         CLC   TIOEDDNM(1,@06),BLANK                            03S0388 01282000
         BE    @DL00386                                         03S0388 01283000
@DC00386 DS    0H                                               03S0389 01284000
*  RFY DSAB BASED(DSABPTR);            /*RESET DSAB BASE POINTER     */ 01285000
*  IF LASTDSAB->DSABFCHN ^= ZERO THEN  /*IF DSAB (OR GROUP) IS NOT AT*/ 01286000
         SLR   @06,@06                                          03S0390 01287000
         L     @05,DSABFCHN(,LASTDSAB)                          03S0390 01288000
         CR    @05,@06                                          03S0390 01289000
         BE    @RF00390                                         03S0390 01290000
*                                      /*END OF CHAIN ALREADY        */ 01291000
*    DO;                               /*MOVE TO END OF DSAB CHAIN   */ 01292000
*      TEMPENTP = LASTDSAB->DSABFCHN;  /*SAVE CURRENT LAST DSAB 03S0392 01293000
*                                        ADDRESS FOR CHAIN RECOVERY  */ 01294000
         L     @15,DSABFCHN(,LASTDSAB)                          03S0392 01295000
         LR    TEMPENTP,@15                                     03S0392 01296000
*      DSQBADFC = ON;                  /*RECOVERY INDICATOR-FORWARD     01297000
*                                        CHAIN IS INCORRECT          */ 01298000
         L     @14,JSCDSABQ(,JSCBPTR)                           03S0393 01299000
         OI    DSQBADFC(@14),B'10000000'                        03S0393 01300000
*      IF DSABBCHN = ZERO THEN         /*IF DSAB IS  1ST ON CHAIN    */ 01301000
         C     @06,DSABBCHN(,DSABPTR)                           03S0394 01302000
         BNE   @RF00394                                         03S0394 01303000
*        DSQFRSTP = LASTDSAB->DSABFCHN; /*UPDATE NEW 1ST DSAB QDB PTR*/ 01304000
         ST    @15,DSQFRSTP(,@14)                               03S0395 01305000
*      ELSE                            /*DSAB IS NOT 1ST ON CHAIN    */ 01306000
*        DSABBCHN->DSABFCHN = LASTDSAB->DSABFCHN; /*UPDATE FORWARD PTR  01307000
*                                        OF PRECEEDING DSAB ON CHAIN */ 01308000
         B     @RC00394                                         03S0396 01309000
@RF00394 L     @06,DSABBCHN(,DSABPTR)                           03S0396 01310000
         MVC   DSABFCHN(4,@06),DSABFCHN(LASTDSAB)               03S0396 01311000
*      DSQLASTP->DSABFCHN = DSABPTR;   /*UPDATE FORWARD PTR OF CURRENT  01312000
*                                        LAST DSAB ON CHAIN          */ 01313000
@RC00394 L     @06,JSCDSABQ(,JSCBPTR)                           03S0397 01314000
         L     @01,DSQLASTP(,@06)                               03S0397 01315000
         ST    DSABPTR,DSABFCHN(,@01)                           03S0397 01316000
*      LASTDSAB->DSABFCHN = ZERO;      /*NEW LAST DSAB ON CHAIN HAS     01317000
*                                        FORWARD POINTER OF ZERO     */ 01318000
         SLR   @15,@15                                          03S0398 01319000
         ST    @15,DSABFCHN(,LASTDSAB)                          03S0398 01320000
*      DSQBADBC = ON;                  /*RECOVERY INDICATOR-BACKWARD    01321000
*                                        CHAIN IS INCORRECT          */ 01322000
         OI    DSQBADBC(@06),B'10000000'                        03S0399 01323000
*      DSQBADFC = OFF;                 /*FORWARD CHAIN IS CORRECT    */ 01324000
         NI    DSQBADFC(@06),B'01111111'                        03S0400 01325000
*      TEMPENTP->DSABBCHN = DSABBCHN;  /*UPDATE BACK PTR OF DSAB        01326000
*                                        NEXT AFTER LAST ONE MOVED   */ 01327000
         MVC   DSABBCHN(4,TEMPENTP),DSABBCHN(DSABPTR)           03S0401 01328000
*      DSABBCHN = DSQLASTP;            /*NEW BACK PTR FOR 1ST DSAB      01329000
*                                        MOVED TO END OF CHAIN       */ 01330000
         MVC   DSABBCHN(4,DSABPTR),DSQLASTP(@06)                03S0402 01331000
*      DSQLASTP = LASTDSAB;            /*UPDATE NEW QDB LAST DSAB PTR*/ 01332000
         ST    LASTDSAB,DSQLASTP(,@06)                          03S0403 01333000
*      DSQBADBC = OFF;                 /*BACKWARD CHAIN IS CORRECT   */ 01334000
         NI    DSQBADBC(@06),B'01111111'                        03S0404 01335000
*    END;                              /*END DSAB CHAINING PROCESS   */ 01336000
*  ELSE;                               /*DSAB (GROUP) ALREADY AT END OF 01337000
*                                        CHAIN; NO RECHAIN REQUIRED. */ 01338000
@RF00390 DS    0H                                               03S0407 01339000
*END;                                                           03S0407 01340000
         AH    TEMPDCTR,@CH00062                                03S0407 01341000
@DE00382 CH    TEMPDCTR,TIOMNDSA(,TIORBPTR)                     03S0407 01342000
         BNH   @DL00382                                         03S0407 01343000
*    TCATPTR = TIOENTP;                /*INIT TIOT ENTRY POINTER     */ 01344000
         LR    TCATPTR,TIOENTP                                  02S0408 01345000
*    DO TEMPDCTR = ONE TO TIOMNDSA;    /*PROCESS ALL DSABS ON LIST   */ 01346000
         LA    TEMPDCTR,1                                       02S0409 01347000
         B     @DE00409                                         02S0409 01348000
@DL00409 DS    0H                                               02S0410 01349000
*      DSABPTR = DSABLIST(TEMPDCTR);   /*POINT TO EACH DSAB          */ 01350000
         LR    @09,TEMPDCTR                                     02S0410 01351000
         SLA   @09,2                                            02S0410 01352000
         L     @01,TIOMDSAP(,TIORBPTR)                          02S0410 01353000
         AL    @01,@CF00664                                     02S0410 01354000
         L     DSABPTR,DSABLIST(@09,@01)                        02S0410 01355000
*      DSABCATM = ON;                  /*SET CONCAT INDICATOR        */ 01356000
         OI    DSABCATM(DSABPTR),B'00000010'                    02S0411 01357000
*      IF TCATPTR  ^= TIOENTP THEN     /*IS THIS THE 1ST TIOT ENTRY     01358000
*                                        FOR THIS CONCAT REQUEST?    */ 01359000
         CR    TCATPTR,TIOENTP                                  02S0412 01360000
         BE    @RF00412                                         02S0412 01361000
*         TIOEDDNM = BLANKS8;          /*IF NO, BLANK OUT TIOT DDNAME*/ 01362000
         L     @09,DSABTIOT(,DSABPTR)                           02S0413 01363000
         MVC   TIOEDDNM(8,@09),BLANKS8                          02S0413 01364000
*      ELSE;                                                    02S0414 01365000
@RF00412 DS    0H                                               02S0415 01366000
*      TCATPTR = TCATPTR  + TIOELNGH;  /*POINT TO NEXT TIOT ENTRY    */ 01367000
         L     @09,DSABTIOT(,DSABPTR)                           02S0415 01368000
         SLR   @15,@15                                          02S0415 01369000
         IC    @15,TIOELNGH(,@09)                               02S0415 01370000
         ALR   TCATPTR,@15                                      02S0415 01371000
*    END;                                                       02S0416 01372000
         AH    TEMPDCTR,@CH00062                                02S0416 01373000
@DE00409 CH    TEMPDCTR,TIOMNDSA(,TIORBPTR)                     02S0416 01374000
         BNH   @DL00409                                         02S0416 01375000
*  END;                                                         02S0417 01376000
*ELSE;                                                          02S0418 01377000
@RF00357 DS    0H                                               02S0419 01378000
*               END;                                            01S0419 01379000
*                                                               01S0419 01380000
*RETURN CODE(RETCODE);                                          01S0420 01381000
@RF00344 DS    0H                                               01S0420 01382000
@RC00303 DS    0H                                               01S0420 01383000
@RC00255 DS    0H                                               01S0420 01384000
@RC00161 DS    0H                                               01S0420 01385000
@RC00156 DS    0H                                               01S0420 01386000
@RC00141 DS    0H                                               01S0420 01387000
@RC00052 IC    @02,@OLDKEY                                      01S0420 01388000
         L     @13,4(,@13)                                      01S0420 01389000
         L     @00,@SIZDATD                                     01S0420 01390000
         LR    @01,@11                                          01S0420 01391000
         FSPACE   R,LV=(0),A=(1)                                        01392000
         MODESET KEYADDR=(2)                                            01393000
         LR    @15,@07                                          01S0420 01394000
         L     @14,12(,@13)                                     01S0420 01395000
         LM    @00,@12,20(@13)                                  01S0420 01396000
         BR    @14                                              01S0420 01397000
*/********************************************************************/ 01398000
*/*                                                                  */ 01399000
*/* SEGMENT NAME - ALOCTIOE                                          */ 01400000
*/*                                                                  */ 01401000
*/* DESCRIPTIVE NAME - ALLOCATE A TIOT DD ENTRY                      */ 01402000
*/*                                                                  */ 01403000
*/* FUNCTION -                                                       */ 01404000
*/*   THIS ROUTINE IS RESPONSIBLE FOR LOCATING A FREE ENTRY IN THE   */ 01405000
*/*   TIOT OF THE LENGTH REQUESTED BY THE CALLER. IF THERE ARE NO    */ 01406000
*/*   ENTRIES ELIGIBLE, A NON-ZERO RETURN CODE IS RETURNED TO THE    */ 01407000
*/*   CALLER.                                                        */ 01408000
*/*                                                                  */ 01409000
*/*   OPERATION -                                                    */ 01410000
*/*     THIS ROUTINE WILL FIRST ATTEMPT TO ALLOCATE AN ENTRY FROM    */ 01411000
*/*     ONE ON THE FREE ENTRY CHAIN. IF THERE IS AN ENTRY OF THE     */ 01412000
*/*     REQUESTED LENGTH IT IS REMOVED FROM THE FREE CHAIN AND A     */ 01413000
*/*     PTR TO IT RETURNED TO THE CALLER. IF, HOWEVER, THE           */ 01414000
*/*     FREE ENTRY IS LARGER THAN THE REQUESTED LENGTH THE           */ 01415000
*/*     ROUTINE CHECKS TO INSURE THAT THE REMAINING PORTION OF THE   */ 01416000
*/*     FREE ENTRY IS AT LEAST 20 BYTES LONG - THE MINIMUM ENTRY     */ 01417000
*/*     SIZE. IF IT IS NOT, THIS ENTRY CANNOT BE ALLOCATED.          */ 01418000
*/*     IF A VALID ENTRY REMAINS, AN ENTRY OF THE REQUESTED SIZE IS  */ 01419000
*/*     ALLOCATED AND THE REMAINING PORTION OF THE ENTRY FORMS A NEW */ 01420000
*/*     ENTRY WHICH IS PLACED ON THE FREE ENTRY CHAIN.               */ 01421000
*/*     A PTR TO THE ALLOCATED ENTRY IS RETURNED TO THE CALLER.      */ 01422000
*/*                                                                  */ 01423000
*/*     IF THERE ARE NO FREE ENTRIES ON THE CHAIN OR IF THERE WERE   */ 01424000
*/*     NONE ELIGIBLE TO ALLOCATE, THE ROUTINE ATTEMPTS TO ALLOCATE  */ 01425000
*/*     FROM THE CONTIGUOUS FREE SPACE IN THE TIOT CORE. IF THERE    */ 01426000
*/*     IS ENOUGH SPACE, A PTR TO THE SPACE IS RETURNED TO THE       */ 01427000
*/*     CALLER AND THE TIOT END INDICATOR INSERTED AFTER THE SPACE   */ 01428000
*/*     ALLOCATED. THE FREE SPACE INFORMATION IN THE TIOT PREFIX     */ 01429000
*/*     AREA IS UPDATED.                                             */ 01430000
*/*                                                                  */ 01431000
*/* ENTRY POINT - ALOCTIOE  (CLOSED SUBROUTINE)                      */ 01432000
*/*   PURPOSE - TO FIND AN ELIGIBLE FREE TIOT DD ENTRY               */ 01433000
*/*                                                                  */ 01434000
*/*   INPUT -                                                        */ 01435000
*/*     JSCTMCOR - PTR TO TIOT CORE (IN JSCB)                        */ 01436000
*/*     TIOFENTP - PTR TO FIRST FREE DD ENTRY                        */ 01437000
*/*     TIOFREEP - PTR TO BEGINNING OF CONTIGUOUS FREE SPACE         */ 01438000
*/*     TIOFRLEN - LENGTH OF FREE SPACE                              */ 01439000
*/*     REQENTLN - SIZE OF ENTRY REQUESTED                           */ 01440000
*/*                                                                  */ 01441000
*/* EXITS - CLOSED SUBROUTINE ALWAYS RETURNS TO CALLER               */ 01442000
*/*   CONDITION  - ELIGIBLE DD ENTRY FOUND                           */ 01443000
*/*                                                                  */ 01444000
*/*     OUTPUT -                                                     */ 01445000
*/*       A PTR TO THE ELIGIBLE ENTRY IN TIOENTP                     */ 01446000
*/*                                                                  */ 01447000
*/*     RETURN CODE                                                  */ 01448000
*/*       RETCODE = 0                                                */ 01449000
*/*                                                                  */ 01450000
*/*   CONDITION - NO ELIGIBLE ENTRY FOUND                            */ 01451000
*/*     OUTPUT -                                                     */ 01452000
*/*       NONE                                                       */ 01453000
*/*     RETURN CODE                                                  */ 01454000
*/*       RETCODE = 4                                                */ 01455000
*/********************************************************************/ 01456000
*ALOCTIOE: PROC;                       /*SBRTN TO ALLOCATE A DD ENTRY*/ 01457000
@EL00001 IC    @02,@OLDKEY                                      02S0421 01458000
         L     @13,4(,@13)                                      02S0421 01459000
@EF00001 L     @00,@SIZDATD                                     02S0421 01460000
         LR    @01,@11                                          02S0421 01461000
         FSPACE   R,LV=(0),A=(1)                                        01462000
         MODESET KEYADDR=(2)                                            01463000
@ER00001 LM    @14,@12,12(@13)                                  02S0421 01464000
         BR    @14                                              02S0421 01465000
@PB00001 DS    0H                                               02S0421 01466000
ALOCTIOE STM   @14,@02,12(@13)                                  02S0421 01467000
         STM   @04,@06,36(@13)                                  02S0421 01468000
         STM   @08,@12,52(@13)                                  02S0421 01469000
*TIOENTP = TIOFENTP;                   /*PT TO FIRST FREE ENTRY      */ 01470000
         L     @10,JSCTMCOR(,JSCBPTR)                           02S0422 01471000
         L     TIOENTP,TIOFENTP(,@10)                           02S0422 01472000
*FRENTSW = NOTFOUND;                   /*INIT LOOP EXIT SWITCH       */ 01473000
         NI    FRENTSW,B'01111111'                              02S0423 01474000
*RFY TIOENTRY BASED(TIOENTP);                                   02S0424 01475000
*DO WHILE(TIOENTP ^= ZERO              /*SCAN FREE ENTRY CHAIN       */ 01476000
*         & FRENTSW = NOTFOUND);       /*TO FIND ELIGIBLE ENTRY      */ 01477000
         B     @DE00425                                         02S0425 01478000
@DL00425 DS    0H                                               02S0426 01479000
*  IF TIOELNGH >= REQENTLN THEN        /*IS ENTRY AS LARGE AS REQ'D? */ 01480000
         SLR   @10,@10                                          02S0426 01481000
         IC    @10,TIOELNGH(,TIOENTP)                           02S0426 01482000
         CR    @10,REQENTLN                                     02S0426 01483000
         BL    @RF00426                                         02S0426 01484000
*    DO;                               /*YES, CONTINUE CHECKING      */ 01485000
*      IF TIOELNGH = REQENTLN THEN     /*IS FREE ENTRY EQ. REQ'D SIZE*/ 01486000
         CR    @10,REQENTLN                                     02S0428 01487000
         BNE   @RF00428                                         02S0428 01488000
*        DO;                           /*YES, CAN ALLOCATE THIS ENTRY*/ 01489000
*          FRENTSW = FOUND;            /*INDICATE ENTRY FOUND        */ 01490000
         OI    FRENTSW,B'10000000'                              02S0430 01491000
*          NXTFENTP = TIONFENP;        /*SET CHAIN PTR FOR MOVE      */ 01492000
         MVC   NXTFENTP(4),TIONFENP(TIOENTP)                    02S0431 01493000
*        END;                                                   02S0432 01494000
*      ELSE                            /*ENTRY LARGER THAN REQ'D     */ 01495000
*        IF TIOELNGH - REQENTLN >= MINENTRY THEN /*IS EXCESS OVER 20 */ 01496000
         B     @RC00428                                         02S0433 01497000
@RF00428 SLR   @10,@10                                          02S0433 01498000
         IC    @10,TIOELNGH(,TIOENTP)                           02S0433 01499000
         SLR   @10,REQENTLN                                     02S0433 01500000
         CH    @10,@CH00598                                     02S0433 01501000
         BL    @RF00433                                         02S0433 01502000
*          DO;                         /*YES,ALOC REQ'D SIZE & CREATE   01503000
*                                        A NEW FREE ENTRY            */ 01504000
*            FRENTSW = FOUND;                                   02S0435 01505000
         OI    FRENTSW,B'10000000'                              02S0435 01506000
*            NXTFENTP = TIOENTP + REQENTLN;/*SET PTR TO NEW FREE ENT.*/ 01507000
         LR    @08,TIOENTP                                      02S0436 01508000
         ALR   @08,REQENTLN                                     02S0436 01509000
         ST    @08,NXTFENTP                                     02S0436 01510000
*            NXTFENTP -> TIONFENP      /*MOVE CHN PTR TO NEW ENTRY...*/ 01511000
*                = TIONFENP;           /*...FROM ENT. TO BE ALOC'D   */ 01512000
         MVC   TIONFENP(4,@08),TIONFENP(TIOENTP)                02S0437 01513000
*            NXTFENTP -> TIOFRSW = ON; /*SET FREE ENTRY INDICATOR    */ 01514000
         OI    TIOFRSW(@08),B'10000000'                         02S0438 01515000
*            NXTFENTP -> TIOELNGH =    /*SET NEW ENTRY LENGTH        */ 01516000
*                TIOELNGH - REQENTLN;                           02S0439 01517000
         STC   @10,TIOELNGH(,@08)                               02S0439 01518000
*            NXTFENTP->TIOEFSRT=0;     /*MAKE ENTRY DUMMY FOR ANYONE    01519000
*                                        SEARCHING TIOT      @YM08165*/ 01520000
         SLR   @10,@10                                          02S0440 01521000
         STCM  @10,7,TIOEFSRT(@08)                              02S0440 01522000
*          END;                                                 02S0441 01523000
*      IF FRENTSW = FOUND THEN         /*ELIGIBLE ENTRY FOUND?       */ 01524000
@RF00433 DS    0H                                               02S0442 01525000
@RC00428 TM    FRENTSW,B'10000000'                              02S0442 01526000
         BNO   @RF00442                                         02S0442 01527000
*        DO;                           /*YES, REMOVE FROM FREE CHAIN */ 01528000
*          IF TIOENTP = TIOFENTP THEN  /*WAS FOUND ENTRY FIRST ON CHN*/ 01529000
         L     @10,JSCTMCOR(,JSCBPTR)                           02S0444 01530000
         C     TIOENTP,TIOFENTP(,@10)                           02S0444 01531000
         BNE   @RF00444                                         02S0444 01532000
*            TIOFENTP = NXTFENTP;      /*YES, UPDATE FIRST ENTRY PTR */ 01533000
         MVC   TIOFENTP(4,@10),NXTFENTP                         02S0445 01534000
*          ELSE                                                 02S0446 01535000
*            LSTFENTP -> TIONFENP=NXTFENTP;/*UPDATE FREE CHAIN PTR IN   01536000
*                                        PREVIOUS FREE ENTRY         */ 01537000
         B     @RC00444                                         02S0446 01538000
@RF00444 L     @10,LSTFENTP                                     02S0446 01539000
         MVC   TIONFENP(4,@10),NXTFENTP                         02S0446 01540000
*          TIOFRSW = OFF;              /*RESET FREE ENTRY INDICATOR  */ 01541000
@RC00444 NI    TIOFRSW(TIOENTP),B'01111111'                     02S0447 01542000
*          TIOELNGH = REQENTLN;        /*SET LENGTH OF ALC'D ENTRY   */ 01543000
         STC   REQENTLN,TIOELNGH(,TIOENTP)                      02S0448 01544000
*        END;                                                   02S0449 01545000
*      ELSE;                                                    02S0450 01546000
@RF00442 DS    0H                                               02S0451 01547000
*    END;                                                       02S0451 01548000
*  ELSE;                               /*ENTRY NOT LARGE ENOUGH      */ 01549000
@RF00426 DS    0H                                               02S0453 01550000
*  IF FRENTSW = NOTFOUND THEN                                   02S0453 01551000
         TM    FRENTSW,B'10000000'                              02S0453 01552000
         BNZ   @RF00453                                         02S0453 01553000
*    DO;                                                        02S0454 01554000
*      LSTFENTP = TIOENTP;             /*SAVE PTR TO CURRENT ENTRY   */ 01555000
         ST    TIOENTP,LSTFENTP                                 02S0455 01556000
*      TIOENTP = TIONFENP;             /*POINT TO NEXT FREE ENTRY    */ 01557000
         L     TIOENTP,TIONFENP(,TIOENTP)                       02S0456 01558000
*    END;                                                       02S0457 01559000
*END;                                                           02S0458 01560000
@RF00453 DS    0H                                               02S0458 01561000
@DE00425 LTR   TIOENTP,TIOENTP                                  02S0458 01562000
         BZ    @DC00425                                         02S0458 01563000
         TM    FRENTSW,B'10000000'                              02S0458 01564000
         BZ    @DL00425                                         02S0458 01565000
@DC00425 DS    0H                                               02S0459 01566000
*IF FRENTSW = NOTFOUND THEN            /*WAS AN ENTRY FOUND ON CHAIN?*/ 01567000
         TM    FRENTSW,B'10000000'                              02S0459 01568000
         BNZ   @RF00459                                         02S0459 01569000
*  DO;                                 /*NO,CHECK FREE SPACE         */ 01570000
*    IF TIOFREEP ^= ZERO THEN          /*ANY CONTIGUOUS FREE SPACE?  */ 01571000
         SLR   @10,@10                                          02S0461 01572000
         L     @08,JSCTMCOR(,JSCBPTR)                           02S0461 01573000
         L     @06,TIOFREEP(,@08)                               02S0461 01574000
         CR    @06,@10                                          02S0461 01575000
         BE    @RF00461                                         02S0461 01576000
*      DO;                             /*YES, SEE IF IT'S ELIGIBLE   */ 01577000
*        TIOENTP = TIOFREEP            /*POINT TO START OF AREA      */ 01578000
*            - LENGTH(TIOTEND);        /*ADJUST FOR END OF TIOT INDIC*/ 01579000
         LA    @05,4                                            02S0463 01580000
         SLR   @06,@05                                          02S0463 01581000
         LR    TIOENTP,@06                                      02S0463 01582000
*        IF TIOFRLEN >= REQENTLN THEN  /*ENOUGH SPACE?               */ 01583000
         L     @06,TIOFRLEN(,@08)                               02S0464 01584000
         CR    @06,REQENTLN                                     02S0464 01585000
         BL    @RF00464                                         02S0464 01586000
*          DO;                         /*YES, CAN ALLOCATE THE ENTRY */ 01587000
*            FRENTSW = FOUND;          /*INDICATE AN ENTRY FOUND     */ 01588000
         OI    FRENTSW,B'10000000'                              02S0466 01589000
*            TIOELNGH = REQENTLN;      /*SET LENGTH OF ALOC'D ENTRY  */ 01590000
         STC   REQENTLN,TIOELNGH(,TIOENTP)                      02S0467 01591000
*            TIOFREEP = TIOENTP        /*UPDATE FREE SPACE POINTER   */ 01592000
*                + REQENTLN;           /*TO END OF ALLOCATED ENTRY   */ 01593000
         LR    @02,TIOENTP                                      02S0468 01594000
         ALR   @02,REQENTLN                                     02S0468 01595000
         ST    @02,TIOFREEP(,@08)                               02S0468 01596000
*            TIOFREEP -> TIOENTRY(1:4) = TIOTEND; /*INSERT AN 'END OF   01597000
*                                        TIOT' INDICATOR             */ 01598000
         ST    @10,TIOENTRY(,@02)                               02S0469 01599000
*            TIOFREEP = TIOFREEP                                02S0470 01600000
*                + LENGTH(TIOTEND);    /*PT TO NEW BEG. OF FREE SPACE*/ 01601000
         ALR   @02,@05                                          02S0470 01602000
         ST    @02,TIOFREEP(,@08)                               02S0470 01603000
*            TIOFRLEN  = TIOFRLEN - REQENTLN; /*SET AMT FREE SPACE      01604000
*                                        REMAINING                   */ 01605000
         SLR   @06,REQENTLN                                     02S0471 01606000
         ST    @06,TIOFRLEN(,@08)                               02S0471 01607000
*          END;                                                 02S0472 01608000
*        ELSE                          /*NOT ENOUGH FREE SPACE       */ 01609000
*          RETCODE = NOSPACE;          /*SET RETURN CODE TO 4        */ 01610000
         B     @RC00464                                         02S0473 01611000
@RF00464 LA    RETCODE,4                                        02S0473 01612000
*      END;                                                     02S0474 01613000
*    ELSE                              /*NO FREE ENTRY OR FREE SPACE */ 01614000
*      RETCODE = NOSPACE;              /*SET RETURN CODE TO 4        */ 01615000
         B     @RC00461                                         02S0475 01616000
@RF00461 LA    RETCODE,4                                        02S0475 01617000
*  END;                                                         02S0476 01618000
*ELSE;                                 /*ENTRY ALOC'D FROM FREE CHAIN*/ 01619000
@RF00459 DS    0H                                               02S0478 01620000
*RFY TIOENTRY BASED(DSABTIOT);                                  02S0478 01621000
*RETURN;                                                        02S0479 01622000
@EL00002 DS    0H                                               02S0479 01623000
@EF00002 DS    0H                                               02S0479 01624000
@ER00002 LM    @14,@02,12(@13)                                  02S0479 01625000
         LM    @04,@06,36(@13)                                  02S0479 01626000
         LM    @08,@12,52(@13)                                  02S0479 01627000
         BR    @14                                              02S0479 01628000
*END ALOCTIOE;                                                  02S0480 01629000
         B     @EL00002                                         02S0480 01630000
*/********************************************************************/ 01631000
*/*                                                                  */ 01632000
*/* SEGMENT NAME - RLSETIOT                                          */ 01633000
*/*                                                                  */ 01634000
*/* DESCRIPTIVE NAME - RELEASE A TIOT DD ENTRY                       */ 01635000
*/*                                                                  */ 01636000
*/* FUNCTION -                                                       */ 01637000
*/*   THIS ROUTINE IS RESPONSIBLE FOR THE FOLLOWING FUNCTIONS:       */ 01638000
*/*     .PLACING THE INPUT ENTRY ONTO THE FREE ENTRY CHAIN           */ 01639000
*/*     .COMBINING CONTIGUOUS FREE ENTRIES INTO ONE UP TO THE        */ 01640000
*/*      MAXIMUM ENTRY SIZE OF 252 BYTES.                            */ 01641000
*/*                                                                  */ 01642000
*/* OPERATION -                                                      */ 01643000
*/*   TO PLACE AN ENTRY ON THE FREE CHAIN THE ROUTINE WILL SCAN THE  */ 01644000
*/*   CHAIN AND INSERT THE ENTRY IN SEQUENTIAL ADDRESS ORDER. THE    */ 01645000
*/*   ELEMENTS ON THE CHAIN WILL, THEREFORE, ALWAYS BE IN ORDER OF   */ 01646000
*/*   ASCENDING ADDRESSES. THE ROUTINE UPDATES THE CHAIN POINTERS    */ 01647000
*/*   ONCE THE POINT OF INSERTION IS DETERMINED. IF THE ENTRY BEING  */ 01648000
*/*   RELEASED IS THE FIRST TO GO ON THE CHAIN, THE FIRST FREE ENTRY */ 01649000
*/*   POINTER IS UPDATED AND THE CHAIN POINTER FIELD OF THE ENTRY IS */ 01650000
*/*   SET TO ZERO.                                                   */ 01651000
*/*                                                                  */ 01652000
*/*   TO COMBINE CONTIGOUS FREE ENTRIES THE MRGNTRYS ROUTINE WILL    */ 01653000
*/*   SCAN THE CHAIN FOR CONTIGOUS ENTRIES WHICH CAN BE MERGED       */ 01654000
*/*   INTO ONE (SEE MRGESPEC FOR DETAILS).                           */ 01655000
*/*                                                                  */ 01656000
*/*                                                                  */ 01657000
*/* ENTRY POINT - RLSETIOT (CLOSED SUBROUTINE)                       */ 01658000
*/*   PURPOSE - TO RELEASE A TIOT ENTRY                              */ 01659000
*/*                                                                  */ 01660000
*/*   INPUT -                                                        */ 01661000
*/*     PTR TO ENTRY TO BE RELEASED. THE ENTRY ITSELF CONTAINS THE   */ 01662000
*/*     LENGTH.                                                      */ 01663000
*/*     PTR TO JSCB                                                  */ 01664000
*/*       JSCB CONTAINS A POINTER TO THE TIOT CORE                   */ 01665000
*/*                                                                  */ 01666000
*/* EXIT - CLOSED SUBROUTINE. ALWAYS RETURNS TO CALLER               */ 01667000
*/*   CONDITION - INPUT DD ENTRY RELEASED                            */ 01668000
*/*                                                                  */ 01669000
*/*     OUTPUT -                                                     */ 01670000
*/*       UPDATED TIOT ENTRY FREE CHAIN                              */ 01671000
*/*                                                                  */ 01672000
*/*     RETURN CODE                                                  */ 01673000
*/*       RETCODE = 0                                                */ 01674000
*/*                                                                  */ 01675000
*/********************************************************************/ 01676000
*RLSETIOT: PROC;                       /*RELEASE A DD ENTRY          */ 01677000
RLSETIOT STM   @14,@02,12(@13)                                  02S0481 01678000
         STM   @04,@12,36(@13)                                  02S0481 01679000
*RFY TIOENTRY BASED (TIOENTP);                                  02S0482 01680000
*REQENTP->TIOEFSRT=0;                  /*MAKE ENTRY LOOK DUMMY, FOR     01681000
*                                        ANYONE SERCHING TIOT@YM08165*/ 01682000
         SLR   @10,@10                                          02S0483 01683000
         STCM  @10,7,TIOEFSRT(REQENTP)                          02S0483 01684000
*FRSRCHSW = OFF;                       /*INIT SEARCH SWITCH          */ 01685000
         NI    FRSRCHSW,B'01111111'                             02S0484 01686000
*TIOENTP = TIOFENTP;                   /*POINT TO FIRST FREE ENTRY   */ 01687000
         L     @08,JSCTMCOR(,JSCBPTR)                           02S0485 01688000
         L     @04,TIOFENTP(,@08)                               02S0485 01689000
         LR    TIOENTP,@04                                      02S0485 01690000
*IF TIOENTP ^= ZERO THEN               /*ANY ENTRIES ON CHAIN?       */ 01691000
         CR    TIOENTP,@10                                      02S0486 01692000
         BE    @RF00486                                         02S0486 01693000
*  IF REQENTP < TIOENTP THEN           /*NEW ENTRY FIRST ON CHAIN    */ 01694000
         CR    REQENTP,TIOENTP                                  02S0487 01695000
         BNL   @RF00487                                         02S0487 01696000
*    DO;                                                        02S0488 01697000
*      REQENTP->TIONFENP = TIOFENTP;   /*SET CHAIN PTR IN NEW ENTRY  */ 01698000
         ST    @04,TIONFENP(,REQENTP)                           02S0489 01699000
*      REQENTP->TIOFRSW = ON;          /*SET FREE ENTRY INDICATOR    */ 01700000
         OI    TIOFRSW(REQENTP),B'10000000'                     02S0490 01701000
*      TIOFENTP = REQENTP;             /*SET PTR TO NEW FIRST        */ 01702000
         ST    REQENTP,TIOFENTP(,@08)                           02S0491 01703000
*    END;                                                       02S0492 01704000
*  ELSE                                /*MUST INSERT NEW ENTRY       */ 01705000
*    DO WHILE (TIOENTP ^= ZERO         /*FIND PLACE TO INSERT   02S0493 01706000
*                                        ENTRY BEING RELEASED        */ 01707000
*              & FRSRCHSW = OFF);                               02S0493 01708000
         B     @RC00487                                         02S0493 01709000
@RF00487 B     @DE00493                                         02S0493 01710000
@DL00493 DS    0H                                               02S0494 01711000
*      IF TIOENTP < REQENTP THEN       /*IS ENTRY BETWEEN CURRENT ...*/ 01712000
         CR    TIOENTP,REQENTP                                  02S0494 01713000
         BNL   @RF00494                                         02S0494 01714000
*        IF TIONFENP > REQENTP         /*...AND NEXT FREE ENTRIES ...*/ 01715000
*            | TIONFENP = ZERO THEN    /*...OR IS CURRENT ALSO LAST  */ 01716000
         L     @10,TIONFENP(,TIOENTP)                           02S0495 01717000
         CR    @10,REQENTP                                      02S0495 01718000
         BH    @RT00495                                         02S0495 01719000
         LTR   @10,@10                                          02S0495 01720000
         BNZ   @RF00495                                         02S0495 01721000
@RT00495 DS    0H                                               02S0496 01722000
*          DO;                         /*YES, INSERT INPUT ENTRY HERE*/ 01723000
*            FRSRCHSW = ON;            /*INDICATE END OF SEARCH      */ 01724000
         OI    FRSRCHSW,B'10000000'                             02S0497 01725000
*            REQENTP->TIONFENP = TIONFENP; /*SET CHAIN PTR IN THIS      01726000
*                                        ENTRY                       */ 01727000
         MVC   TIONFENP(4,REQENTP),TIONFENP(TIOENTP)            02S0498 01728000
*            REQENTP->TIOFRSW = ON;    /*SET FREE ENTRY INDICATOR    */ 01729000
         OI    TIOFRSW(REQENTP),B'10000000'                     02S0499 01730000
*            TIONFENP = REQENTP;       /*CHANGE CHAIN PTR IN CURRENT    01731000
*                                        TO POINT TO INPUT ENTRY     */ 01732000
         ST    REQENTP,TIONFENP(,TIOENTP)                       02S0500 01733000
*          END;                                                 02S0501 01734000
*        ELSE;                                                  02S0502 01735000
@RF00495 DS    0H                                               02S0503 01736000
*      ELSE;                                                    02S0503 01737000
@RF00494 DS    0H                                               02S0504 01738000
*      TIOENTP = TIONFENP;             /*UPDATE PTR TO NEXT FREE        01739000
*                                        ENTRY                       */ 01740000
         L     TIOENTP,TIONFENP(,TIOENTP)                       02S0504 01741000
*    END;                                                       02S0505 01742000
@DE00493 LTR   TIOENTP,TIOENTP                                  02S0505 01743000
         BZ    @DC00493                                         02S0505 01744000
         TM    FRSRCHSW,B'10000000'                             02S0505 01745000
         BZ    @DL00493                                         02S0505 01746000
@DC00493 DS    0H                                               02S0506 01747000
*ELSE                                  /*INPUT ENTRY IS FIRST ON        01748000
*                                        FREE CHAIN                  */ 01749000
*  DO;                                                          02S0506 01750000
         B     @RC00486                                         02S0506 01751000
@RF00486 DS    0H                                               02S0507 01752000
*    REQENTP -> TIOFRSW = ON;          /*SET FREE ENTRY INDICATOR    */ 01753000
         OI    TIOFRSW(REQENTP),B'10000000'                     02S0507 01754000
*    REQENTP -> TIONFENP = ZERO;       /*ZERO PTR TO NEXT FREE ENTRY */ 01755000
         SLR   @10,@10                                          02S0508 01756000
         ST    @10,TIONFENP(,REQENTP)                           02S0508 01757000
*    TIOFENTP = REQENTP;               /*SET PTR TO FIRST FREE ENTRY */ 01758000
         L     @10,JSCTMCOR(,JSCBPTR)                           02S0509 01759000
         ST    REQENTP,TIOFENTP(,@10)                           02S0509 01760000
*  END;                                                         02S0510 01761000
*/********************************************************************/ 01762000
*/*                                                                  */ 01763000
*/* SEGMENT NAME - MRGNTRYS                                          */ 01764000
*/*                                                                  */ 01765000
*/* DESCRIPTIVE NAME - MERGE TIOT FREE ENTRIES                       */ 01766000
*/*                                                                  */ 01767000
*/* FUNCTION                                                         */ 01768000
*/*   THIS ROUTINE ATTEMPTS TO COMBINE CONTIGUOUS FREE TIOT ENTRIES  */ 01769000
*/*   INTO ONE ENTRY OF MAXIMUM SIZE. THE ROUTINE IS INVOKED EACH    */ 01770000
*/*   TIME AN ENTRY IS PLACED ON THE FREE CHAIN IN AN ATTEMPT TO     */ 01771000
*/*   MINIMIZE THE AMOUNT OF FRAGMENTATION OF TIOT CORE WHICH WILL   */ 01772000
*/*   OCCUR.                                                         */ 01773000
*/*                                                                  */ 01774000
*/*   OPERATION -                                                    */ 01775000
*/*     THE ROUTINE SCANS THE TIOT FREE CHAIN TO FIND A PAIR OF      */ 01776000
*/*     CONTIGUOUS FREE ENTRIES AND COMPUTES THEIR COMBINED LENGTH.  */ 01777000
*/*     WHEN THE COMBINED LENGTH IS 252 BYTES OR LESS, THE ENTRIES   */ 01778000
*/*     ARE MERGED INTO ONE AND THE CHAIN UPDATED TO REFLECT THE     */ 01779000
*/*     MERGE.                                                       */ 01780000
*/*     IF THE COMBINED LENGTH IS GREATER THAN 252 BYTES BUT EXCEEDS */ 01781000
*/*     IT BY AT LEAST 20 BYTES, THE ENTRIES ARE SPLIT INTO ONE OF   */ 01782000
*/*     MAXIMUM SIZE AND A NEW SMALLER ONE. THE CHAIN IS UPDATED TO  */ 01783000
*/*     CONTAIN THE NEW ENTRIES.                                     */ 01784000
*/*     WHEN THERE ARE NO CONTIGUOUS ENTRIES, OR THERE ARE NO MORE   */ 01785000
*/*     CONTIGUOUS ENTRIES WHICH CAN BE COMBINED, THE PROCESSING IS  */ 01786000
*/*     COMPLETE.                                                    */ 01787000
*/*                                                                  */ 01788000
*/* ENTRY - IN-LINE SEGMENT                                          */ 01789000
*/*   PURPOSE - SEE FUNCTION                                         */ 01790000
*/*                                                                  */ 01791000
*/*   INPUT -                                                        */ 01792000
*/*     TIOFENTP - POINTER TO FIRST FREE ENTRY (IN TIOT PREFIX AREA) */ 01793000
*/*                                                                  */ 01794000
*/* EXITS -                                                          */ 01795000
*/*   CONDITION - NO MORE CONTIGUOUS ENTRIES OR END OF FREE CHAIN    */ 01796000
*/*                                                                  */ 01797000
*/*   OUTPUT - UPDATED FREE ENTRY CHAIN                              */ 01798000
*/*                                                                  */ 01799000
*/*   RETURN CODE - NONE                                             */ 01800000
*/*                                                                  */ 01801000
*/********************************************************************/ 01802000
*EXITSW = OFF;                                                  03S0511 01803000
@RC00486 NI    EXITSW,B'01111111'                               03S0511 01804000
*TIOENTP = TIOFENTP;                                            03S0512 01805000
         L     @10,JSCTMCOR(,JSCBPTR)                           03S0512 01806000
         L     TIOENTP,TIOFENTP(,@10)                           03S0512 01807000
*DO WHILE (TIOENTP ^= ZERO             /*SCAN CHAIN TO END OR UNTIL  */ 01808000
*          & EXITSW = OFF);            /*SUCCESSFUL MERGE COMPLETED  */ 01809000
         B     @DE00513                                         03S0513 01810000
@DL00513 DS    0H                                               03S0514 01811000
*  MERGESW = NO;                       /*ASSUME EXIT CONDITION       */ 01812000
         NI    MERGESW,B'10111111'                              03S0514 01813000
*  TEMPENTP = TIOENTP + TIOELNGH;      /*POINT TO NEXT ENTRY         */ 01814000
         LR    TEMPENTP,TIOENTP                                 03S0515 01815000
         SLR   @10,@10                                          03S0515 01816000
         IC    @10,TIOELNGH(,TIOENTP)                           03S0515 01817000
         ALR   TEMPENTP,@10                                     03S0515 01818000
*  DO WHILE (TEMPENTP=TIONFENP);       /*MERGE ALL CONTIGUOUS ENTRIES*/ 01819000
         B     @DE00516                                         03S0516 01820000
@DL00516 DS    0H                                               03S0517 01821000
*    TEMPLNTH = TIOELNGH               /*COMPUTE COMBINED LENGTH     */ 01822000
*        + TEMPENTP -> TIOELNGH;                                03S0517 01823000
         SLR   TEMPLNTH,TEMPLNTH                                03S0517 01824000
         IC    TEMPLNTH,TIOELNGH(,TIOENTP)                      03S0517 01825000
         SLR   @10,@10                                          03S0517 01826000
         IC    @10,TIOELNGH(,TEMPENTP)                          03S0517 01827000
         ALR   TEMPLNTH,@10                                     03S0517 01828000
*    IF TEMPLNTH <= MAXLNTH THEN       /*IS IT L.T./EQ MAX LENGTH    */ 01829000
         CH    TEMPLNTH,@CH00610                                03S0518 01830000
         BH    @RF00518                                         03S0518 01831000
*      DO;                             /*YES, MERGE THEM             */ 01832000
*        MERGESW = YES;                /*INDICATE A MERGE DONE       */ 01833000
         OI    MERGESW,B'01000000'                              03S0520 01834000
*        TIONFENP =                                             03S0521 01835000
*            TEMPENTP -> TIONFENP;     /*MOVE CHAIN PTR FROM ENTRY      01836000
*                                        BEING MERGED                */ 01837000
         MVC   TIONFENP(4,TIOENTP),TIONFENP(TEMPENTP)           03S0521 01838000
*        TIOELNGH = TEMPLNTH;          /*SET NEW ENTRY LENGTH        */ 01839000
         STC   TEMPLNTH,TIOELNGH(,TIOENTP)                      03S0522 01840000
*      END;                                                     03S0523 01841000
*    ELSE                              /*COMBINED LENGTH G.T. MAX    */ 01842000
*      DO;                             /*SEE IF CAN SPLIT ONE        */ 01843000
         B     @RC00518                                         03S0524 01844000
@RF00518 DS    0H                                               03S0525 01845000
*        NEWLNTH = TEMPLNTH - MAXLNTH; /*REDUCE LENGTH BY MAX        */ 01846000
         LA    @10,252                                          03S0525 01847000
         LR    NEWLNTH,TEMPLNTH                                 03S0525 01848000
         SLR   NEWLNTH,@10                                      03S0525 01849000
*        IF NEWLNTH >= MINLNTH THEN    /*IS A MIN. FREE ENTRY LEFT   */ 01850000
         CH    NEWLNTH,@CH00598                                 03S0526 01851000
         BL    @RF00526                                         03S0526 01852000
*          DO;                         /*YES, MAKE ONE MAX & ONE NEW */ 01853000
*            MERGESW = YES;            /*INDICATE A MERGE DONE       */ 01854000
         OI    MERGESW,B'01000000'                              03S0528 01855000
*            NEWENTP = TIOENTP         /*GET PTR TO NEW FREE ENTRY   */ 01856000
*                + MAXLNTH;                                     03S0529 01857000
         ALR   @10,TIOENTP                                      03S0529 01858000
         LR    NEWENTP,@10                                      03S0529 01859000
*            NEWENTP -> TIONFENP =     /*MOVE CHAIN PTR TO NEW ENTRY */ 01860000
*                TEMPENTP -> TIONFENP;                          03S0530 01861000
         MVC   TIONFENP(4,NEWENTP),TIONFENP(TEMPENTP)           03S0530 01862000
*            NEWENTP -> TIOELNGH =     /*SET LENGTH OF NEW FREE ENTRY*/ 01863000
*                NEWLNTH;                                       03S0531 01864000
         STC   NEWLNTH,TIOELNGH(,NEWENTP)                       03S0531 01865000
*            NEWENTP -> TIOFRSW = ON;  /*SET FREE ENTRY INDICATOR    */ 01866000
         OI    TIOFRSW(NEWENTP),B'10000000'                     03S0532 01867000
*            TIONFENP = NEWENTP;       /* SET CHAIN PTR TO NEW ENTRY */ 01868000
         ST    NEWENTP,TIONFENP(,TIOENTP)                       03S0533 01869000
*            TIOELNGH = MAXLNTH;       /*SET MAX LENGTH IN MRG'D ENT */ 01870000
         MVI   TIOELNGH(TIOENTP),X'FC'                          03S0534 01871000
*            TIOENTP = TIONFENP;       /*UPDATE TO NEXT FREE ENTRY   */ 01872000
         L     @10,TIONFENP(,TIOENTP)                           03S0535 01873000
         LR    TIOENTP,@10                                      03S0535 01874000
*          END;                                                 03S0536 01875000
*        ELSE                          /*NOT ENOUGH SPACE FOR   03S0537 01876000
*                                        MERGE               @YM06157*/ 01877000
*          TIOENTP = TIOENTP + TIOELNGH; /*POINT TO NEXT ENTRY  03S0537 01878000
*                                                            @YM06157*/ 01879000
         B     @RC00526                                         03S0537 01880000
@RF00526 SLR   @10,@10                                          03S0537 01881000
         IC    @10,TIOELNGH(,TIOENTP)                           03S0537 01882000
         ALR   TIOENTP,@10                                      03S0537 01883000
*       END;                                                    03S0538 01884000
@RC00526 DS    0H                                               03S0539 01885000
*     TEMPENTP = TIOENTP + TIOELNGH;   /*UPDATE PTR TO NEXT ENTRY    */ 01886000
@RC00518 LR    TEMPENTP,TIOENTP                                 03S0539 01887000
         SLR   @10,@10                                          03S0539 01888000
         IC    @10,TIOELNGH(,TIOENTP)                           03S0539 01889000
         ALR   TEMPENTP,@10                                     03S0539 01890000
*  END;                                /*END OF MERGE LOOP           */ 01891000
@DE00516 L     @10,TIONFENP(,TIOENTP)                           03S0540 01892000
         CR    TEMPENTP,@10                                     03S0540 01893000
         BE    @DL00516                                         03S0540 01894000
*  IF MERGESW = NO THEN                /*WAS A MERGE DONE?           */ 01895000
         TM    MERGESW,B'01000000'                              03S0541 01896000
         BNZ   @RF00541                                         03S0541 01897000
*    TIOENTP = TIONFENP;               /*NO, PT TO NEXT FREE ENTRY   */ 01898000
         LR    TIOENTP,@10                                      03S0542 01899000
*  ELSE                                /*MERGE WAS SUCCESSFUL        */ 01900000
*   EXITSW = ON;                       /*SET SWITCH TO EXIT LOOP     */ 01901000
         B     @RC00541                                         03S0543 01902000
@RF00541 OI    EXITSW,B'10000000'                               03S0543 01903000
*END;                                                           03S0544 01904000
@RC00541 DS    0H                                               03S0544 01905000
@DE00513 LTR   TIOENTP,TIOENTP                                  03S0544 01906000
         BZ    @DC00513                                         03S0544 01907000
         TM    EXITSW,B'10000000'                               03S0544 01908000
         BZ    @DL00513                                         03S0544 01909000
@DC00513 DS    0H                                               03S0545 01910000
*RFY TIOENTRY BASED(DSABTIOT);                                  02S0545 01911000
*RETURN;                                                        02S0546 01912000
@EL00003 DS    0H                                               02S0546 01913000
@EF00003 DS    0H                                               02S0546 01914000
@ER00003 LM    @14,@02,12(@13)                                  02S0546 01915000
         LM    @04,@12,36(@13)                                  02S0546 01916000
         BR    @14                                              02S0546 01917000
*END RLSETIOT;                                                  02S0547 01918000
*END IEFAB4FC                                                   01S0548 01919000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01920000
*/*%INCLUDE SYSLIB  (A4FCSPEC)                                        * 01921000
*/*%INCLUDE SYSLIB  (A4FCDATA)                                        * 01922000
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        * 01923000
*/*%INCLUDE SYSLIB  (IHADSAB )                                        * 01924000
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                        * 01925000
*/*%INCLUDE SYSLIB  (IEFZB424)                                        * 01926000
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        * 01927000
*/*%INCLUDE SYSLIB  (IHAQDB  )                                        * 01928000
*/*%INCLUDE SYSLIB  (IEFZB4D5)                                        * 01929000
*/*%INCLUDE SYSLIB  (GTIODATA)                                        * 01930000
*/*%INCLUDE SYSLIB  (ATIODATA)                                        * 01931000
*/*%INCLUDE SYSLIB  (RTIODATA)                                        * 01932000
*/*%INCLUDE SYSLIB  (MRGEDATA)                                        * 01933000
*/*%INCLUDE SYSLIB  (UPDTDATA)                                        * 01934000
*/*%INCLUDE SYSLIB  (UTIODATA)                                        * 01935000
*/*%INCLUDE SYSLIB  (GETTIOT )                                        * 01936000
*/*%INCLUDE SYSLIB  (GTIOSPEC)                                        * 01937000
*/*%INCLUDE SYSLIB  (INITTIOT)                                        * 01938000
*/*%INCLUDE SYSLIB  (ITIOSPEC)                                        * 01939000
*/*%INCLUDE SYSLIB  (UPDTIOT )                                        * 01940000
*/*%INCLUDE SYSLIB  (UPDTSPEC)                                        * 01941000
*/*%INCLUDE SYSLIB  (UPDSACHN)                                        * 01942000
*/*%INCLUDE SYSLIB  (UDSASPEC)                                        * 01943000
*/*%INCLUDE SYSLIB  (UNALCTIO)                                        * 01944000
*/*%INCLUDE SYSLIB  (UTIOSPEC)                                        * 01945000
*/*%INCLUDE SYSLIB  (CONCATIO)                                        * 01946000
*/*%INCLUDE SYSLIB  (CTIOSPEC)                                        * 01947000
*/*%INCLUDE SYSLIB  (CCATDSAB)                                        * 01948000
*/*%INCLUDE SYSLIB  (CCATSPEC)                                        * 01949000
*/*%INCLUDE SYSLIB  (ALOCTIOE)                                        * 01950000
*/*%INCLUDE SYSLIB  (ATIOSPEC)                                        * 01951000
*/*%INCLUDE SYSLIB  (RLSETIOT)                                        * 01952000
*/*%INCLUDE SYSLIB  (RTIOSPEC)                                        * 01953000
*/*%INCLUDE SYSLIB  (MRGNTRYS)                                        * 01954000
*/*%INCLUDE SYSLIB  (MRGESPEC)                                        * 01955000
*;                                                              01S0548 01956000
@DATA    DS    0H                                                       01957000
@CH00062 DC    H'1'                                                     01958000
@CH00113 DC    H'2'                                                     01959000
@CH00598 DC    H'20'                                                    01960000
@CH00064 DC    H'24'                                                    01961000
@CH00610 DC    H'252'                                                   01962000
@SM00662 MVC   TIOENTRY(0,TIOENTP),TIOENTRY(@08)                        01963000
@SM00666 MVC   TIOENTRY(0,TCATPTR),TIOENTRY(@03)                        01964000
@DATD    DSECT                                                          01965000
         DS    0F                                                       01966000
@SA00001 DS    18F                                                      01967000
@PC00001 DS    1F                                                       01968000
IEFAB4FC CSECT                                                          01969000
         DS    0F                                                       01970000
@CF00655 DC    F'28'                                                    01971000
@CH00655 EQU   @CF00655+2                                               01972000
@CF00638 DC    F'253'                                                   01973000
@CF00664 DC    F'-4'                                                    01974000
@DATD    DSECT                                                          01975000
         DS    0D                                                       01976000
TCBJSCB  DS    A                                                        01977000
QDBPTR   DS    A                                                        01978000
DQDBCORP DS    A                                                        01979000
DSAQDBLN DS    F                                                        01980000
SWASPID  DS    F                                                        01981000
LSTFENTP DS    A                                                        01982000
NXTFENTP DS    A                                                        01983000
WSPTR    DS    A                                                        01984000
SUBPLID  DS    F                                                        01985000
WSLNTH   DS    F                                                        01986000
GTSTRTCD DS    F                                                        01987000
SAVECHNP DS    A                                                        01988000
FREELEN  DS    CL4                                                      01989000
         ORG   FREELEN                                                  01990000
SPID     DS    CL1                                                      01991000
BLKLEN   DS    AL3                                                      01992000
         ORG   FREELEN+4                                                01993000
FRENTSW  DS    BL1                                                      01994000
FRSRCHSW DS    BL1                                                      01995000
MRGSWS   DS    BL1                                                      01996000
         ORG   MRGSWS                                                   01997000
EXITSW   DS    BL1                                                      01998000
MERGESW  EQU   MRGSWS+0                                                 01999000
         ORG   MRGSWS+1                                                 02000000
GETMNSW  DS    BL1                                                      02001000
@OLDKEY  DS    AL1                                                      02002000
IEFAB4FC CSECT                                                          02003000
         DS    0F                                                       02004000
@SIZDATD DC    AL1(230)                                                 02005000
         DC    AL3(@ENDDATD-@DATD)                                      02006000
         DS    0D                                                       02007000
GTSTZERO DC    F'0'                                                     02008000
@CC00592 DC    C'DSAB'                                                  02009000
BLANKS8  DC    CL8' '                                                   02010000
BLANK    DC    CL1' '                                                   02011000
IEFAB4FC CSECT                                                          02012000
         DS   0H                                                        02013000
A4FCPTCH DC ((@DATA-@PSTART)/20)X'00'                                   02014000
@DATD    DSECT                                                          02015000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02016000
@ENDDATD EQU   *                                                        02017000
IEFAB4FC CSECT                                                          02018000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02019000
@01      EQU   01                                                       02020000
@02      EQU   02                                                       02021000
@03      EQU   03                                                       02022000
@04      EQU   04                                                       02023000
@05      EQU   05                                                       02024000
@06      EQU   06                                                       02025000
@07      EQU   07                                                       02026000
@08      EQU   08                                                       02027000
@09      EQU   09                                                       02028000
@10      EQU   10                                                       02029000
@11      EQU   11                                                       02030000
@12      EQU   12                                                       02031000
@13      EQU   13                                                       02032000
@14      EQU   14                                                       02033000
@15      EQU   15                                                       02034000
DSABCTR  EQU   @06                                                      02035000
I        EQU   @05                                                      02036000
TEMPLNTH EQU   @02                                                      02037000
NEWLNTH  EQU   @04                                                      02038000
NEWENTP  EQU   @02                                                      02039000
TIOTSIZE EQU   @03                                                      02040000
TMCORPTR EQU   @06                                                      02041000
RETCODE  EQU   @07                                                      02042000
REQENTLN EQU   @04                                                      02043000
TEMPDCTR EQU   @08                                                      02044000
LASTDSAB EQU   @04                                                      02045000
TIORBPTR EQU   @10                                                      02046000
TIOENTP  EQU   @03                                                      02047000
TEMPENTP EQU   @05                                                      02048000
TCATPTR  EQU   @06                                                      02049000
SIOTPTR  EQU   @04                                                      02050000
REQENTP  EQU   @05                                                      02051000
JSCBPTR  EQU   @09                                                      02052000
DSABPTR  EQU   @02                                                      02053000
REG0     EQU   @00                                                      02054000
REG1     EQU   @01                                                      02055000
REG15    EQU   @15                                                      02056000
GTSTR0   EQU   @00                                                      02057000
GTSTR1   EQU   @01                                                      02058000
GTSTR2   EQU   @02                                                      02059000
GTSTR15  EQU   @15                                                      02060000
GTSTR4   EQU   @04                                                      02061000
GTSTR5   EQU   @05                                                      02062000
GTSTR6   EQU   @06                                                      02063000
GTSTR7   EQU   @07                                                      02064000
GTSTR8   EQU   @08                                                      02065000
GTSTR3   EQU   @03                                                      02066000
DSABLIST EQU   0                                                        02067000
TIORETNP EQU   0                                                        02068000
JOBNAME  EQU   0                                                        02069000
PSTPNAME EQU   0                                                        02070000
STEPNAME EQU   0                                                        02071000
TIOPREFX EQU   0                                                        02072000
TIOFREEP EQU   TIOPREFX                                                 02073000
TIOFRLEN EQU   TIOPREFX+4                                               02074000
TIOFENTP EQU   TIOPREFX+8                                               02075000
TIONIUSL EQU   TIOPREFX+22                                              02076000
TIOTLIST EQU   TIOPREFX+24                                              02077000
TIOTPTR  EQU   TIOTLIST                                                 02078000
TIOTLEN  EQU   TIOTLIST+4                                               02079000
TIOTHDR  EQU   0                                                        02080000
TIOJNAME EQU   TIOTHDR                                                  02081000
TIOSNAME EQU   TIOTHDR+8                                                02082000
TIOPSNME EQU   TIOTHDR+16                                               02083000
INDMSIOT EQU   0                                                        02084000
SCTDDNAM EQU   INDMSIOT+4                                               02085000
SCTUSADD EQU   INDMSIOT+20                                              02086000
SIOTBYT1 EQU   INDMSIOT+43                                              02087000
SIOTBYT3 EQU   INDMSIOT+46                                              02088000
SIOTTSTC EQU   INDMSIOT+47                                              02089000
SIOTBYT0 EQU   INDMSIOT+52                                              02090000
SCTSDISP EQU   INDMSIOT+55                                              02091000
SCTSBYT1 EQU   INDMSIOT+56                                              02092000
SCTSBYT2 EQU   INDMSIOT+57                                              02093000
SCTSBYT3 EQU   INDMSIOT+58                                              02094000
SCTSBYT4 EQU   INDMSIOT+59                                              02095000
SCTUTYPE EQU   INDMSIOT+60                                              02096000
SIOTDEVT EQU   SCTUTYPE                                                 02097000
SIOUBYT3 EQU   SIOTDEVT+2                                               02098000
SIOTALTD EQU   INDMSIOT+92                                              02099000
SIOTBYT2 EQU   INDMSIOT+103                                             02100000
SIOTETIO EQU   INDMSIOT+148                                             02101000
SIOTNPTR EQU   INDMSIOT+152                                             02102000
DSAB     EQU   0                                                        02103000
DSABFCHN EQU   DSAB+4                                                   02104000
DSABBCHN EQU   DSAB+8                                                   02105000
DSABLNTH EQU   DSAB+12                                                  02106000
DSABTIOT EQU   DSAB+16                                                  02107000
DSABGIDP EQU   DSAB+24                                                  02108000
DSABANMP EQU   DSAB+28                                                  02109000
DSABORG  EQU   DSAB+32                                                  02110000
DSABORG1 EQU   DSABORG                                                  02111000
DSABORG2 EQU   DSABORG+1                                                02112000
DSABFLG1 EQU   DSAB+34                                                  02113000
DSABPALC EQU   DSABFLG1                                                 02114000
DSABPCAT EQU   DSABFLG1                                                 02115000
DSABCATM EQU   DSABFLG1                                                 02116000
DSABFLG2 EQU   DSAB+35                                                  02117000
DSABFLG3 EQU   DSAB+36                                                  02118000
DSABFLG4 EQU   DSAB+37                                                  02119000
DSABANMI EQU   0                                                        02120000
DSABANML EQU   DSABANMI                                                 02121000
DSABGIDL EQU   0                                                        02122000
DSABLLEN EQU   DSABGIDL                                                 02123000
TIOT1    EQU   0                                                        02124000
TIOENTRY EQU   0                                                        02125000
TIOELNGH EQU   TIOENTRY                                                 02126000
TIOESTTA EQU   TIOENTRY+1                                               02127000
TIOERLOC EQU   TIOENTRY+2                                               02128000
TIOELINK EQU   TIOERLOC+1                                               02129000
TIOESYOT EQU   TIOELINK                                                 02130000
TIOEDDNM EQU   TIOENTRY+4                                               02131000
TIOESTTC EQU   TIOENTRY+15                                              02132000
TIOESTTB EQU   TIOENTRY+16                                              02133000
TIOEFSRT EQU   TIOENTRY+17                                              02134000
POOLSTAR EQU   TIOENTRY+20                                              02135000
TIOMGRRB EQU   0                                                        02136000
TIOMFMAP EQU   TIOMGRRB                                                 02137000
TIOMBLD  EQU   TIOMFMAP                                                 02138000
TIOMALOC EQU   TIOMFMAP                                                 02139000
TIOMRLSE EQU   TIOMFMAP                                                 02140000
TIOMUPD  EQU   TIOMFMAP                                                 02141000
TIOMCCAT EQU   TIOMFMAP                                                 02142000
TIOMUNAL EQU   TIOMFMAP                                                 02143000
TIOMFREE EQU   TIOMFMAP                                                 02144000
TIOMRENT EQU   TIOMFMAP+1                                               02145000
TIOMTSZE EQU   TIOMGRRB+2                                               02146000
TIOMJSCP EQU   TIOMGRRB+4                                               02147000
TIOMJNMP EQU   TIOMGRRB+8                                               02148000
TIOMSNMP EQU   TIOMGRRB+12                                              02149000
TIOMENTP EQU   TIOMGRRB+16                                              02150000
TIOMDSAP EQU   TIOMGRRB+20                                              02151000
TIOMSIOP EQU   TIOMGRRB+24                                              02152000
TIOMRETP EQU   TIOMGRRB+28                                              02153000
TIOMPSNP EQU   TIOMGRRB+32                                              02154000
TIOMIUSL EQU   TIOMGRRB+36                                              02155000
IEZJSCB  EQU   0                                                        02156000
JSCBSEC1 EQU   IEZJSCB+188                                              02157000
JSCHPCE  EQU   JSCBSEC1+4                                               02158000
JSCBDCB  EQU   JSCBSEC1+36                                              02159000
JSCBOPTS EQU   JSCBSEC1+48                                              02160000
JSCSIOTS EQU   JSCBOPTS                                                 02161000
JSCBSWT1 EQU   JSCBSEC1+55                                              02162000
JSCBWTP  EQU   JSCBSEC1+64                                              02163000
JSCBWTFG EQU   JSCBWTP                                                  02164000
JSCBEND1 EQU   IEZJSCB+260                                              02165000
QDB      EQU   0                                                        02166000
DSLIST   EQU   0                                                        02167000
DSLENT   EQU   DSLIST                                                   02168000
INRBPTR  EQU   0                                                        02169000
TIONFENP EQU   TIOEDDNM                                                 02170000
TIOFRSW  EQU   TIOESTTA                                                 02171000
TIOEDEVE EQU   TIOESTTB                                                 02172000
TIOSTTB  EQU   TIOEDEVE                                                 02173000
TIOMELEN EQU   TIOMTSZE                                                 02174000
TIOMNDSA EQU   TIOMTSZE                                                 02175000
JSCBSEC2 EQU   JSCBEND1                                                 02176000
JSCBSEC3 EQU   JSCBEND1                                                 02177000
JSCBJCT  EQU   JSCBSEC3                                                 02178000
JSCBJCTA EQU   JSCBJCT+1                                                02179000
JSCBASID EQU   JSCBSEC3+8                                               02180000
JSCBJNL  EQU   JSCBSEC3+28                                              02181000
JSCBJJSB EQU   JSCBJNL                                                  02182000
JSCBSUB  EQU   JSCBSEC3+40                                              02183000
JSCDSABQ EQU   JSCBSEC3+60                                              02184000
JSCSCT   EQU   JSCBSEC3+68                                              02185000
JSCTMCOR EQU   JSCBSEC3+72                                              02186000
JSCBSWSP EQU   JSCBSEC3+87                                              02187000
JSCRSV35 EQU   JSCBSEC3+96                                              02188000
JSCRSV36 EQU   JSCRSV35                                                 02189000
JSCRSV37 EQU   JSCRSV35+2                                               02190000
JSCRSV45 EQU   JSCBSEC3+112                                             02191000
JSCRSV46 EQU   JSCRSV45                                                 02192000
JSCRSV47 EQU   JSCRSV45+2                                               02193000
DSABQDB  EQU   QDB                                                      02194000
DSQDBID  EQU   DSABQDB                                                  02195000
DSQDBLN  EQU   DSABQDB+6                                                02196000
DSQNELMS EQU   DSABQDB+8                                                02197000
DSQFRSTP EQU   DSABQDB+12                                               02198000
DSQBADBC EQU   DSQFRSTP                                                 02199000
DSQLASTP EQU   DSABQDB+16                                               02200000
DSQBADFC EQU   DSQLASTP                                                 02201000
DSQFDSP  EQU   DSABQDB+20                                               02202000
DSQBDSP  EQU   DSABQDB+22                                               02203000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02204000
@NM00040 EQU   DSABQDB+24                                               02205000
DSQATTRS EQU   DSABQDB+4                                                02206000
JSCBEND3 EQU   JSCBSEC3+120                                             02207000
JSCRSV52 EQU   JSCBSEC3+116                                             02208000
JSCRSV51 EQU   JSCRSV47+1                                               02209000
JSCRSV50 EQU   JSCRSV47                                                 02210000
JSCRSV49 EQU   JSCRSV46+1                                               02211000
JSCRSV48 EQU   JSCRSV46                                                 02212000
JSCRSV44 EQU   JSCBSEC3+108                                             02213000
JSCRSV43 EQU   JSCBSEC3+104                                             02214000
JSCRSV42 EQU   JSCBSEC3+100                                             02215000
JSCRSV41 EQU   JSCRSV37+1                                               02216000
JSCRSV40 EQU   JSCRSV37                                                 02217000
JSCRSV39 EQU   JSCRSV36+1                                               02218000
JSCRSV38 EQU   JSCRSV36                                                 02219000
JSCBUFPT EQU   JSCBSEC3+92                                              02220000
JSCBACT  EQU   JSCBSEC3+88                                              02221000
JSCRSV33 EQU   JSCBSEC3+86                                              02222000
JSCDDNUM EQU   JSCBSEC3+84                                              02223000
JSCRSV53 EQU   JSCBSEC3+82                                              02224000
JSCDDNNO EQU   JSCBSEC3+80                                              02225000
JSCBVATA EQU   JSCBSEC3+76                                              02226000
JSCSCTP  EQU   JSCSCT+1                                                 02227000
JSCRSV55 EQU   JSCSCT                                                   02228000
JSCRSV54 EQU   JSCBSEC3+64                                              02229000
JSCBSSIB EQU   JSCBSEC3+56                                              02230000
JSCBFRBA EQU   JSCBSEC3+48                                              02231000
JSCRSV28 EQU   JSCBSEC3+46                                              02232000
JSCBSONO EQU   JSCBSEC3+44                                              02233000
JSCBSUBA EQU   JSCBSUB+1                                                02234000
JSCRSV31 EQU   JSCBSUB                                                  02235000
JSCBSMLR EQU   JSCBSEC3+36                                              02236000
JSCBJNLR EQU   JSCBSEC3+32                                              02237000
JSCBJNLA EQU   JSCBJNL+1                                                02238000
JSCBJSBT EQU   JSCBJJSB                                                 02239000
JSCBJSBX EQU   JSCBJJSB                                                 02240000
JSCBJSBA EQU   JSCBJJSB                                                 02241000
JSCBJSBI EQU   JSCBJJSB                                                 02242000
@NM00039 EQU   JSCBJJSB                                                 02243000
JSCBJNLE EQU   JSCBJJSB                                                 02244000
JSCBJNLF EQU   JSCBJJSB                                                 02245000
JSCBJNLN EQU   JSCBJJSB                                                 02246000
@NM00038 EQU   JSCBSEC3+24                                              02247000
JSCBJRBA EQU   JSCBSEC3+16                                              02248000
JSCBIECB EQU   JSCBSEC3+12                                              02249000
JSCRSV25 EQU   JSCBSEC3+10                                              02250000
JSCBTJID EQU   JSCBASID                                                 02251000
JSCBPSCB EQU   JSCBSEC3+4                                               02252000
JSCJCTP  EQU   JSCBJCTA                                                 02253000
JSCRSV24 EQU   JSCBJCT                                                  02254000
JSCBEND2 EQU   JSCBSEC2                                                 02255000
TIOUCBP  EQU   TIOEDEVE+1                                               02256000
TIOVERF  EQU   TIOSTTB                                                  02257000
TIOUNLD  EQU   TIOSTTB                                                  02258000
TIOMNTD  EQU   TIOSTTB                                                  02259000
TIOSETU  EQU   TIOSTTB                                                  02260000
TIOVLSR  EQU   TIOSTTB                                                  02261000
TIOPVIO  EQU   TIOSTTB                                                  02262000
TIOREQD  EQU   TIOSTTB                                                  02263000
TIOUSED  EQU   TIOSTTB                                                  02264000
QDBRV002 EQU   QDB+28                                                   02265000
QDBPRDS  EQU   QDB+26                                                   02266000
QDBPRSZ  EQU   QDB+24                                                   02267000
QDBBPTDS EQU   QDB+22                                                   02268000
QDBFPTDS EQU   QDB+20                                                   02269000
QDBLELMP EQU   QDB+16                                                   02270000
QDBFELMP EQU   QDB+12                                                   02271000
QDBNELMS EQU   QDB+8                                                    02272000
QDBRV001 EQU   QDB+6                                                    02273000
QDBATTR  EQU   QDB+4                                                    02274000
QDBQDB   EQU   QDB                                                      02275000
JSCBCSCB EQU   JSCBSEC1+68                                              02276000
JSCBPMG  EQU   JSCBWTP+2                                                02277000
JSCBWTSP EQU   JSCBWTP+1                                                02278000
JSCRSV23 EQU   JSCBWTFG                                                 02279000
JSCRSV22 EQU   JSCBWTFG                                                 02280000
JSCRSV21 EQU   JSCBWTFG                                                 02281000
JSCRSV20 EQU   JSCBWTFG                                                 02282000
JSCRSV19 EQU   JSCBWTFG                                                 02283000
JSCRSV18 EQU   JSCBWTFG                                                 02284000
JSCBRET  EQU   JSCBWTFG                                                 02285000
JSCBIOFG EQU   JSCBWTFG                                                 02286000
@NM00037 EQU   JSCBSEC1+60                                              02287000
JSCBQMPI EQU   JSCBSEC1+56                                              02288000
JSCBPMSG EQU   JSCBSWT1                                                 02289000
JSCRSV16 EQU   JSCBSWT1                                                 02290000
JSCRSV15 EQU   JSCBSWT1                                                 02291000
JSCRSV14 EQU   JSCBSWT1                                                 02292000
JSCRSV13 EQU   JSCBSWT1                                                 02293000
JSCRSV12 EQU   JSCBSWT1                                                 02294000
JSCRSV11 EQU   JSCBSWT1                                                 02295000
JSCBPASS EQU   JSCBSWT1                                                 02296000
JSCBTTTR EQU   JSCBSEC1+52                                              02297000
JSCRSV10 EQU   JSCBSEC1+49                                              02298000
JSCBAUTH EQU   JSCBOPTS                                                 02299000
JSCRSV08 EQU   JSCBOPTS                                                 02300000
JSCRSV07 EQU   JSCBOPTS                                                 02301000
JSCRSV06 EQU   JSCBOPTS                                                 02302000
JSCBLONG EQU   JSCBOPTS                                                 02303000
JSCRSV05 EQU   JSCBOPTS                                                 02304000
JSCRSV04 EQU   JSCBOPTS                                                 02305000
JSCBSECB EQU   JSCBSEC1+44                                              02306000
JSCRSV03 EQU   JSCBSEC1+41                                              02307000
JSCBSTEP EQU   JSCBSEC1+40                                              02308000
JSCBDCBA EQU   JSCBDCB+1                                                02309000
JSCRSV02 EQU   JSCBDCB                                                  02310000
JSCBID   EQU   JSCBSEC1+32                                              02311000
JSCBDBTB EQU   JSCBSEC1+28                                              02312000
JSCBIJSC EQU   JSCBSEC1+24                                              02313000
JSCBTCBP EQU   JSCBSEC1+20                                              02314000
JSCBPCC  EQU   JSCBSEC1+16                                              02315000
JSCBTCP  EQU   JSCBSEC1+12                                              02316000
JSCBSHR  EQU   JSCBSEC1+8                                               02317000
JSCHPCEA EQU   JSCHPCE+1                                                02318000
JSCRSV32 EQU   JSCHPCE                                                  02319000
JSCRSV01 EQU   JSCBSEC1                                                 02320000
@NM00036 EQU   IEZJSCB                                                  02321000
@NM00035 EQU   TIOMFMAP+1                                               02322000
@NM00034 EQU   TIOMFMAP+1                                               02323000
@NM00033 EQU   TIOMFMAP+1                                               02324000
@NM00032 EQU   TIOMFMAP+1                                               02325000
@NM00031 EQU   TIOMFMAP+1                                               02326000
@NM00030 EQU   TIOMFMAP+1                                               02327000
@NM00029 EQU   TIOMFMAP+1                                               02328000
@NM00028 EQU   TIOMFMAP                                                 02329000
TIOTFEND EQU   POOLSTAR+16                                              02330000
TIOPSLOT EQU   POOLSTAR+13                                              02331000
TIOPSTTB EQU   POOLSTAR+12                                              02332000
TIOPPOOL EQU   POOLSTAR+4                                               02333000
TIOPNSRT EQU   POOLSTAR+3                                               02334000
@NM00027 EQU   POOLSTAR+2                                               02335000
TIOPNSLT EQU   POOLSTAR+1                                               02336000
@NM00026 EQU   POOLSTAR                                                 02337000
TIOSVERF EQU   TIOESTTB                                                 02338000
TIOSUNLD EQU   TIOESTTB                                                 02339000
TIOSMNTD EQU   TIOESTTB                                                 02340000
TIOSSETU EQU   TIOESTTB                                                 02341000
TIOSVLSR EQU   TIOESTTB                                                 02342000
TIOSPVIO EQU   TIOESTTB                                                 02343000
TIOSREQD EQU   TIOESTTB                                                 02344000
TIOSUSED EQU   TIOESTTB                                                 02345000
TIOSBALS EQU   TIOESTTC                                                 02346000
TIOSBALP EQU   TIOESTTC                                                 02347000
TIOSVOLS EQU   TIOESTTC                                                 02348000
TIOSVOLP EQU   TIOESTTC                                                 02349000
TIOSAFFS EQU   TIOESTTC                                                 02350000
TIOSAFFP EQU   TIOESTTC                                                 02351000
TIOSDEFR EQU   TIOESTTC                                                 02352000
TIOSDKCR EQU   TIOESTTC                                                 02353000
TIOEJFCB EQU   TIOENTRY+12                                              02354000
TIOTREM  EQU   TIOELINK                                                 02355000
TIOESSDS EQU   TIOESYOT                                                 02356000
TIOESYIN EQU   TIOELINK                                                 02357000
TIOEQNAM EQU   TIOELINK                                                 02358000
TIOEDYNM EQU   TIOELINK                                                 02359000
TIOTTERM EQU   TIOELINK                                                 02360000
TIOTRV01 EQU   TIOELINK                                                 02361000
TIOSYOUT EQU   TIOELINK                                                 02362000
TIOEWTCT EQU   TIOERLOC                                                 02363000
TIOSDSP2 EQU   TIOESTTA                                                 02364000
TIOSDSP1 EQU   TIOESTTA                                                 02365000
TIOSLABL EQU   TIOESTTA                                                 02366000
TIOSDADS EQU   TIOESTTA                                                 02367000
TIOSJBLB EQU   TIOESTTA                                                 02368000
TIOSPLTS EQU   TIOESTTA                                                 02369000
TIOSPLTP EQU   TIOESTTA                                                 02370000
TIOSLTYP EQU   TIOESTTA                                                 02371000
TIOCSTEP EQU   TIOT1+8                                                  02372000
TIOCNJOB EQU   TIOT1                                                    02373000
DSABGRID EQU   DSABGIDL+4                                               02374000
DSABANAM EQU   DSABANMI+1                                               02375000
DSABRS04 EQU   DSAB+68                                                  02376000
DSABSIOT EQU   DSAB+64                                                  02377000
DSABRS03 EQU   DSAB+62                                                  02378000
DSABDCBM EQU   DSAB+56                                                  02379000
DSABSSCM EQU   DSAB+52                                                  02380000
DSABSSNM EQU   DSAB+48                                                  02381000
DSABPTTR EQU   DSAB+44                                                  02382000
DSABTCBP EQU   DSAB+40                                                  02383000
DSABRS02 EQU   DSAB+38                                                  02384000
@NM00025 EQU   DSABFLG4                                                 02385000
DSABCKSI EQU   DSABFLG4                                                 02386000
DSABCKVL EQU   DSABFLG4                                                 02387000
DSABCKDS EQU   DSABFLG4                                                 02388000
@NM00024 EQU   DSABFLG3                                                 02389000
DSABJSCT EQU   DSABFLG3                                                 02390000
DSABCATL EQU   DSABFLG3                                                 02391000
DSABVMSC EQU   DSABFLG3                                                 02392000
DSABVAM  EQU   DSABFLG3                                                 02393000
DSABPASS EQU   DSABFLG3                                                 02394000
DSABDEFR EQU   DSABFLG3                                                 02395000
@NM00023 EQU   DSABFLG2                                                 02396000
DSABUNAL EQU   DSABFLG2                                                 02397000
DSABIRM  EQU   DSABFLG2                                                 02398000
DSABOPEN EQU   DSABFLG2                                                 02399000
DSABNUSE EQU   DSABFLG1                                                 02400000
DSABDCAT EQU   DSABFLG1                                                 02401000
DSABCONV EQU   DSABFLG1                                                 02402000
DSABDCNV EQU   DSABFLG1                                                 02403000
DSABDALC EQU   DSABFLG1                                                 02404000
@NM00022 EQU   DSABORG2                                                 02405000
DSABTR   EQU   DSABORG2                                                 02406000
DSABAM   EQU   DSABORG2                                                 02407000
@NM00021 EQU   DSABORG2                                                 02408000
DSABTQ   EQU   DSABORG2                                                 02409000
DSABTX   EQU   DSABORG2                                                 02410000
DSABGS   EQU   DSABORG2                                                 02411000
DSABU    EQU   DSABORG1                                                 02412000
DSABPO   EQU   DSABORG1                                                 02413000
DSABMQ   EQU   DSABORG1                                                 02414000
DSABCQ   EQU   DSABORG1                                                 02415000
DSABCX   EQU   DSABORG1                                                 02416000
DSABDA   EQU   DSABORG1                                                 02417000
DSABPS   EQU   DSABORG1                                                 02418000
DSABIS   EQU   DSABORG1                                                 02419000
DSABSSVA EQU   DSAB+21                                                  02420000
DSABRS01 EQU   DSAB+20                                                  02421000
DSABOPCT EQU   DSAB+14                                                  02422000
DSABID   EQU   DSAB                                                     02423000
SIODDSNL EQU   INDMSIOT+173                                             02424000
SIOVDSNL EQU   INDMSIOT+172                                             02425000
SIOVDSNT EQU   INDMSIOT+170                                             02426000
SVOLUNNO EQU   INDMSIOT+168                                             02427000
SIOTVMVP EQU   INDMSIOT+164                                             02428000
SIOTJFX  EQU   INDMSIOT+160                                             02429000
SJFCBPTR EQU   INDMSIOT+156                                             02430000
SIOTATE  EQU   INDMSIOT+144                                             02431000
SVOLUNAD EQU   INDMSIOT+140                                             02432000
SIOTEDLP EQU   INDMSIOT+136                                             02433000
SIOTEDLS EQU   INDMSIOT+132                                             02434000
SIOTRSNC EQU   INDMSIOT+130                                             02435000
SCTANAME EQU   INDMSIOT+122                                             02436000
@NM00020 EQU   INDMSIOT+108                                             02437000
SIOTSSNM EQU   INDMSIOT+104                                             02438000
SIODDQCR EQU   SIOTBYT2                                                 02439000
SIOVDQCR EQU   SIOTBYT2                                                 02440000
SIOTCVOL EQU   SIOTBYT2                                                 02441000
SIOTCNEW EQU   SIOTBYT2                                                 02442000
SIOTCALC EQU   SIOTBYT2                                                 02443000
SIOTGALL EQU   SIOTBYT2                                                 02444000
SIOTDSPD EQU   SIOTBYT2                                                 02445000
SIOTDMND EQU   SIOTBYT2                                                 02446000
SIOTOPUC EQU   INDMSIOT+99                                              02447000
SIOTOUTR EQU   INDMSIOT+97                                              02448000
SIOTOUTC EQU   INDMSIOT+96                                              02449000
@NM00019 EQU   INDMSIOT+93                                              02450000
SIOTAUNC EQU   SIOTALTD                                                 02451000
SIOTACAT EQU   SIOTALTD                                                 02452000
SIOTADEL EQU   SIOTALTD                                                 02453000
SIOTAKEP EQU   SIOTALTD                                                 02454000
SIOTNPRV EQU   SIOTALTD                                                 02455000
SIOJCATS EQU   SIOTALTD                                                 02456000
@NM00018 EQU   SIOTALTD                                                 02457000
@NM00017 EQU   SIOTALTD                                                 02458000
@NM00016 EQU   INDMSIOT+91                                              02459000
SIOTNDSB EQU   INDMSIOT+88                                              02460000
@NM00015 EQU   INDMSIOT+84                                              02461000
SIOTDPCD EQU   INDMSIOT+82                                              02462000
@NM00014 EQU   INDMSIOT+81                                              02463000
SCTOUTPN EQU   INDMSIOT+80                                              02464000
SCTOUTNO EQU   INDMSIOT+76                                              02465000
SCTOUTNM EQU   INDMSIOT+68                                              02466000
SIOUCBAD EQU   SCTUTYPE+5                                               02467000
SIOUCNVT EQU   SCTUTYPE+4                                               02468000
SIOUBYT4 EQU   SIOTDEVT+3                                               02469000
@NM00013 EQU   SIOUBYT3                                                 02470000
SIO3UREC EQU   SIOUBYT3                                                 02471000
SIO3DISP EQU   SIOUBYT3                                                 02472000
SIO3DACC EQU   SIOUBYT3                                                 02473000
SIO3COMM EQU   SIOUBYT3                                                 02474000
SIO3TAPE EQU   SIOUBYT3                                                 02475000
SIOUBYT2 EQU   SIOTDEVT+1                                               02476000
SIOUBYT1 EQU   SIOTDEVT                                                 02477000
SIOTOMN  EQU   SCTSBYT4                                                 02478000
SIOTIPDI EQU   SCTSBYT4                                                 02479000
SIOTVAFF EQU   SCTSBYT4                                                 02480000
SIOTSTEP EQU   SCTSBYT4                                                 02481000
SIOTASCI EQU   SCTSBYT4                                                 02482000
@NM00012 EQU   SCTSBYT4                                                 02483000
SIOTGDGA EQU   SCTSBYT4                                                 02484000
SCTSGDGS EQU   SCTSBYT4                                                 02485000
SCTSOLD  EQU   SCTSBYT3                                                 02486000
SCTSMOD  EQU   SCTSBYT3                                                 02487000
SCTSNEW  EQU   SCTSBYT3                                                 02488000
SCTSYSOU EQU   SCTSBYT3                                                 02489000
SCTVREF  EQU   SCTSBYT3                                                 02490000
@NM00011 EQU   SCTSBYT3                                                 02491000
SCTSYSNE EQU   SCTSBYT3                                                 02492000
SCTDSNRF EQU   SCTSBYT3                                                 02493000
SCTRECVD EQU   SCTSBYT2                                                 02494000
SCTDEFER EQU   SCTSBYT2                                                 02495000
SCTLABEL EQU   SCTSBYT2                                                 02496000
SCTUNLBD EQU   SCTSBYT2                                                 02497000
SCTJOBLB EQU   SCTSBYT2                                                 02498000
SCTVOLAF EQU   SCTSBYT2                                                 02499000
SIOTCATL EQU   SCTSBYT2                                                 02500000
SIOCLUNL EQU   SCTSBYT2                                                 02501000
SIOTJSCT EQU   SCTSBYT1                                                 02502000
SCTUNAFF EQU   SCTSBYT1                                                 02503000
SCTPARLM EQU   SCTSBYT1                                                 02504000
SIOTQDSN EQU   SCTSBYT1                                                 02505000
SIOTGDSN EQU   SCTSBYT1                                                 02506000
SIOTCCAT EQU   SCTSBYT1                                                 02507000
SCTSYSIN EQU   SCTSBYT1                                                 02508000
SCTDUMMY EQU   SCTSBYT1                                                 02509000
SIOTUNCT EQU   SCTSDISP                                                 02510000
SIOTCTLG EQU   SCTSDISP                                                 02511000
SIOTDLET EQU   SCTSDISP                                                 02512000
SIOTKEEP EQU   SCTSDISP                                                 02513000
SIOTPASS EQU   SCTSDISP                                                 02514000
SIOTPRIV EQU   SCTSDISP                                                 02515000
S3400DSP EQU   SCTSDISP                                                 02516000
@NM00010 EQU   SCTSDISP                                                 02517000
SIOTVLCT EQU   INDMSIOT+54                                              02518000
SCTNMBUT EQU   INDMSIOT+53                                              02519000
SIOTRTRY EQU   SIOTBYT0                                                 02520000
SIOTPUPV EQU   SIOTBYT0                                                 02521000
SIOTNOPV EQU   SIOTBYT0                                                 02522000
SIOTGIGN EQU   SIOTBYT0                                                 02523000
SPVTAMSG EQU   SIOTBYT0                                                 02524000
SIOTFUDA EQU   SIOTBYT0                                                 02525000
SIOTDYAL EQU   SIOTBYT0                                                 02526000
SIOTSSDS EQU   SIOTBYT0                                                 02527000
SIOTGIID EQU   INDMSIOT+50                                              02528000
SCTVOLCT EQU   INDMSIOT+49                                              02529000
SCTSPOOL EQU   INDMSIOT+48                                              02530000
SIOTQNAM EQU   SIOTTSTC                                                 02531000
@NM00009 EQU   SIOTTSTC                                                 02532000
SIOTTERM EQU   SIOTTSTC                                                 02533000
@NM00008 EQU   SIOTTSTC                                                 02534000
@NM00007 EQU   SIOTBYT3                                                 02535000
SIOTJES3 EQU   SIOTBYT3                                                 02536000
SIOCDEVT EQU   SIOTBYT3                                                 02537000
SIOALIAS EQU   SIOTBYT3                                                 02538000
SCTDDINO EQU   INDMSIOT+44                                              02539000
SIOTDDNT EQU   SIOTBYT1                                                 02540000
SIOTALCD EQU   SIOTBYT1                                                 02541000
SIODADSM EQU   SIOTBYT1                                                 02542000
SIOTDADR EQU   SIOTBYT1                                                 02543000
SIODUNAL EQU   SIOTBYT1                                                 02544000
SIOVAMDS EQU   SIOTBYT1                                                 02545000
SIOTHOLD EQU   SIOTBYT1                                                 02546000
SIOTOCKP EQU   SIOTBYT1                                                 02547000
SIOPSCNT EQU   INDMSIOT+42                                              02548000
SIOTREFN EQU   INDMSIOT+40                                              02549000
SIOTOTUN EQU   INDMSIOT+39                                              02550000
SIOTVRSB EQU   INDMSIOT+36                                              02551000
@NM00006 EQU   INDMSIOT+35                                              02552000
SCTPJFCB EQU   INDMSIOT+32                                              02553000
@NM00005 EQU   INDMSIOT+31                                              02554000
SCTPSIOT EQU   INDMSIOT+28                                              02555000
SIOTAFID EQU   INDMSIOT+26                                              02556000
@NM00004 EQU   INDMSIOT+24                                              02557000
SIODSNTE EQU   INDMSIOT+22                                              02558000
SIOTUNAF EQU   SCTUSADD                                                 02559000
SIOTDEST EQU   INDMSIOT+12                                              02560000
SIOTTYPE EQU   INDMSIOT+3                                               02561000
SIOTDSKA EQU   INDMSIOT                                                 02562000
@NM00003 EQU   TIOPREFX+20                                              02563000
@NM00002 EQU   TIOPREFX+16                                              02564000
@NM00001 EQU   TIOPREFX+12                                              02565000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02566000
@RF00116 EQU   @RC00052                                                 02567000
@RF00145 EQU   @RC00141                                                 02568000
@RF00216 EQU   @RC00161                                                 02569000
@RC00459 EQU   @EL00002                                                 02570000
@RC00487 EQU   @RC00486                                                 02571000
@PB00003 EQU   @EL00001                                                 02572000
@RC00461 EQU   @RC00459                                                 02573000
@PB00002 EQU   @PB00003                                                 02574000
@RC00464 EQU   @RC00461                                                 02575000
@ENDDATA EQU   *                                                        02576000
         END   IEFAB4FC                                                 02577000
