         TITLE 'PSEUDO ACCESS METHOD WRITE A SEQUENTIAL RECORD       '  00001000
IEFJWRTE CSECT ,                                                   0001 00002000
@MAINENT DS    0H                                                  0001 00003000
         USING *,@15                                               0001 00004000
         B     @PROLOG                                             0001 00005000
         DC    AL1(16)                                             0001 00006000
         DC    C'IEFJWRTE  72.321'                                 0001 00007000
         DROP  @15                                                      00008000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00009000
         BALR  @12,0                                               0001 00010000
@PSTART  DS    0H                                                  0001 00011000
         USING @PSTART,@12                                         0001 00012000
         L     @00,@SIZDATD                                        0001 00013000
         GETMAIN R,LV=(0)                                               00014000
         LR    @11,@01                                             0001 00015000
         USING @DATD,@11                                           0001 00016000
         LM    @00,@01,20(@13)                                     0001 00017000
*   RPLPTR=R1;                      /* SAVE THE POINTER TO THE RPL   */ 00018000
         LR    RPLPTR,R1                                           0008 00019000
*   RFY                                                            0009 00020000
*     R1 UNRSTD;                    /* RELEASE R1                    */ 00021000
*   RFY                                                            0010 00022000
*     IFGRPL BASED(RPLPTR);         /* THE RPL MACRO IS BASED ON THE    00023000
*                                      CONTENTS OF RPLPTR            */ 00024000
*   RFY                                                            0011 00025000
*     IFGACB BASED(RPLDACB);        /* THE ACB IS BASED ON A PTR IN     00026000
*                                      THE RPL                       */ 00027000
*   RFY                                                            0012 00028000
*     ACBPRFIX BASED(ADDR(IFGACB)-4);/* GET THE ACB PREFIX           */ 00029000
*   RFY                                                            0013 00030000
*     IEFJAMWD BASED(ACBPRFIX);     /* THE ACCESS METHOD WORK AREA IS   00031000
*                                      BASED ON THE ACB PREFIX       */ 00032000
*   RFY                                                            0014 00033000
*     IEFJAREA BASED(AMWDLAST);     /* THE COMMON DATA RECORD AREA   */ 00034000
*                                                                  0015 00035000
*   /*****************************************************************/ 00036000
*   /*                                                               */ 00037000
*   /* PERFORM A SEQUENTIAL WRITE                                    */ 00038000
*   /*                                                               */ 00039000
*   /*****************************************************************/ 00040000
*                                                                  0015 00041000
*   TEXTLGTH=RPLRLEN+8;             /* SAVE RECORD LGTH AND ADD 8  0015 00042000
*                                      BYTES FOR A REC PREFIX        */ 00043000
         LA    TEXTLGTH,8                                          0015 00044000
         A     TEXTLGTH,RPLRLEN(,RPLPTR)                           0015 00045000
*   SPNUM=10;                       /* SUBPOOL USED IS 10            */ 00046000
         MVI   SPNUM,X'0A'                                         0016 00047000
*   SPLEN=TEXTLGTH;                 /* TEXTLGTH EQUALS THE SIZE OF 0017 00048000
*                                      CORE REQUIRED                 */ 00049000
         STCM  TEXTLGTH,7,SPLEN                                    0017 00050000
*   RFY                                                            0018 00051000
*    (R0,                                                          0018 00052000
*     R1)RSTD;                      /* RESTRICT R1, R0               */ 00053000
*   R0=R0INPUT;                     /* THE SUBPOOL NUMBER AND LENGTH    00054000
*                                      ARE SET IN R0                 */ 00055000
         L     R0,R0INPUT                                          0019 00056000
*   GEN(GETMAIN R,LV=(0));          /* ISSUE GETMAIN                 */ 00057000
         GETMAIN R,LV=(0)                                               00058000
*   GETMNADD=R1;                    /* SAVE ADDR RETURNED            */ 00059000
         LR    GETMNADD,R1                                         0021 00060000
*   RFY                                                            0022 00061000
*    (R0,                                                          0022 00062000
*     R1)UNRSTD;                    /* RELEASE R0,R1                 */ 00063000
*   IF AMWDFRST^=0 THEN             /* IS THIS THE FIRST REC IN THE     00064000
*                                      CHAIN                         */ 00065000
         L     @10,RPLDACB(,RPLPTR)                                0023 00066000
         AL    @10,@CF00233                                        0023 00067000
         L     @10,ACBPRFIX(,@10)                                  0023 00068000
         ICM   @07,15,AMWDFRST(@10)                                0023 00069000
         BZ    @RF00023                                            0023 00070000
*     NEXTPTR=GETMNADD;             /* IF NOT CHAIN TO LAST RECORD   */ 00071000
         L     @10,AMWDLAST(,@10)                                  0024 00072000
         ST    GETMNADD,NEXTPTR(,@10)                              0024 00073000
*   ELSE                            /* IF THIS IS THE FIRST REC IN 0025 00074000
*                                      THE CHAIN THEN SET AMWDFRST   */ 00075000
*     AMWDFRST=GETMNADD;            /* EQUAL TO ADDR OF CORE         */ 00076000
         B     @RC00023                                            0025 00077000
@RF00023 L     @10,RPLDACB(,RPLPTR)                                0025 00078000
         AL    @10,@CF00233                                        0025 00079000
         L     @10,ACBPRFIX(,@10)                                  0025 00080000
         ST    GETMNADD,AMWDFRST(,@10)                             0025 00081000
*   AMWDLAST=GETMNADD;              /* BASE RECORD FORMAT ON THE ADDR   00082000
*                                      OF THE GOTTEN AREA            */ 00083000
@RC00023 L     @10,RPLDACB(,RPLPTR)                                0026 00084000
         AL    @10,@CF00233                                        0026 00085000
         L     @10,ACBPRFIX(,@10)                                  0026 00086000
         ST    GETMNADD,AMWDLAST(,@10)                             0026 00087000
*   TEXTPTR=RPLAREA;                /* TEXTPTR NOW POINTS TO THE AREA   00088000
*                                      THAT THE REC WILL BE WRITTEN     00089000
*                                      FROM                          */ 00090000
         L     TEXTPTR,RPLAREA(,RPLPTR)                            0027 00091000
*   RECPTR=ADDR(IEFJAREA);          /* RECPTR POINTS TO THE REC TO BE   00092000
*                                      RE-WRITTEN                    */ 00093000
         L     @10,RPLDACB(,RPLPTR)                                0028 00094000
         AL    @10,@CF00233                                        0028 00095000
         L     @10,ACBPRFIX(,@10)                                  0028 00096000
         L     @10,AMWDLAST(,@10)                                  0028 00097000
         LR    RECPTR,@10                                          0028 00098000
*   IF RPLRLEN<=256 THEN            /* CHECK LENGTH OF REC IF > 256     00099000
*                                      MORE THAN ONE MOVE IS       0029 00100000
*                                      NECESSARY                     */ 00101000
         CLC   RPLRLEN(4,RPLPTR),@CF00232                          0029 00102000
         BH    @RF00029                                            0029 00103000
*     RECTEXT(1:RPLRLEN)=TEXTAREA(1:RPLRLEN);/* LESS THAN 256 MOVE 0030 00104000
*                                      AND END                       */ 00105000
         L     @07,RPLRLEN(,RPLPTR)                                0030 00106000
         BCTR  @07,0                                               0030 00107000
         EX    @07,@SM00234                                        0030 00108000
*   ELSE                                                           0031 00109000
*     DO;                                                          0031 00110000
         B     @RC00029                                            0031 00111000
@RF00029 DS    0H                                                  0032 00112000
*       CTR=RPLRLEN/256;            /* SET CTR TO THE NUMBER OF MOVES   00113000
*                                      NECESSARY                     */ 00114000
         L     CTR,RPLRLEN(,RPLPTR)                                0032 00115000
         SRL   CTR,8                                               0032 00116000
*       DO WHILE CTR>0;             /* EXECUTE UNTIL ALL 256 BYTE  0033 00117000
*                                      BLOCKS HAVE BEEN MOVED        */ 00118000
         B     @DE00033                                            0033 00119000
@DL00033 DS    0H                                                  0034 00120000
*         RECPTR->RECTEXT(1:256)=TEXTAREA(1:256);/* MOVE 256 BYTES AT   00121000
*                                      A TIME                        */ 00122000
         MVC   RECTEXT(256,RECPTR),TEXTAREA(TEXTPTR)               0034 00123000
*         TEXTPTR=TEXTPTR+256;      /* UPDATE POINTER                */ 00124000
         LA    @10,256                                             0035 00125000
         AR    TEXTPTR,@10                                         0035 00126000
*         RECPTR=RECPTR+256;        /* UPDATE POINTER                */ 00127000
         AR    RECPTR,@10                                          0036 00128000
*         CTR=CTR-1;                /* DECREMENT COUNTER             */ 00129000
         BCTR  CTR,0                                               0037 00130000
*       END;                                                       0038 00131000
@DE00033 LTR   CTR,CTR                                             0038 00132000
         BP    @DL00033                                            0038 00133000
*       CTR=RPLRLEN//256;           /* SET REMAINING LENGTH IN CTR   */ 00134000
         L     CTR,RPLRLEN(,RPLPTR)                                0039 00135000
         N     CTR,@CF00236                                        0039 00136000
*       RECPTR->RECTEXT(1:CTR)=TEXTAREA(1:CTR);/* MOVE REMAINING   0040 00137000
*                                      LENGTH                        */ 00138000
         LR    @10,CTR                                             0040 00139000
         BCTR  @10,0                                               0040 00140000
         EX    @10,@SM00237                                        0040 00141000
*     END;                                                         0041 00142000
*   LGTH=TEXTLGTH;                  /* SET THE LENGTH                */ 00143000
@RC00029 L     @10,RPLDACB(,RPLPTR)                                0042 00144000
         AL    @10,@CF00233                                        0042 00145000
         L     @10,ACBPRFIX(,@10)                                  0042 00146000
         L     @10,AMWDLAST(,@10)                                  0042 00147000
         ST    TEXTLGTH,LGTH(,@10)                                 0042 00148000
*   NEXTPTR=0;                      /* THE NEXTPTR IS ALWAYS SET TO     00149000
*                                      ZERO BECAUSE THERE IS NO WAY     00150000
*                                      OF KNOWING IF THIS IS THE LAST   00151000
*                                      REC                           */ 00152000
         SR    @03,@03                                             0043 00153000
         ST    @03,NEXTPTR(,@10)                                   0043 00154000
*   RPLDDDD=ADDR(RECTEXT);          /* RETURN THE ADDR IN THE RPL    */ 00155000
         LA    @10,RECTEXT(,@10)                                   0044 00156000
         ST    @10,RPLDDDD(,RPLPTR)                                0044 00157000
*   END IEFJWRTE                    /* RETURN TO CALLER              */ 00158000
*                                                                  0045 00159000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00160000
*/*%INCLUDE SYSLIB  (IFGACB  )                                       */ 00161000
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */ 00162000
*/*%INCLUDE SYSLIB  (IEFJAMWD)                                       */ 00163000
*/*%INCLUDE SYSLIB  (IEFJAREA)                                       */ 00164000
*                                                                  0045 00165000
*       ;                                                          0045 00166000
@EL00001 DS    0H                                                  0045 00167000
@EF00001 L     @00,@SIZDATD                                        0045 00168000
         LR    @01,@11                                             0045 00169000
         FREEMAIN R,LV=(0),A=(1)                                        00170000
@ER00001 LM    @14,@12,12(@13)                                     0045 00171000
         BR    @14                                                 0045 00172000
@DATA    DS    0H                                                       00173000
@SM00234 MVC   RECTEXT(0,@10),TEXTAREA(TEXTPTR)                         00174000
@SM00237 MVC   RECTEXT(0,RECPTR),TEXTAREA(TEXTPTR)                      00175000
@DATD    DSECT                                                          00176000
         DS    0F                                                       00177000
IEFJWRTE CSECT                                                          00178000
         DS    0F                                                       00179000
@CF00233 DC    F'-4'                                                    00180000
@CF00236 DC    F'255'                                                   00181000
@CF00232 DC    F'256'                                                   00182000
@DATD    DSECT                                                          00183000
         DS    0D                                                       00184000
R0INPUT  DS    CL4                                                      00185000
         ORG   R0INPUT                                                  00186000
SPNUM    DS    FL1                                                      00187000
SPLEN    DS    FL3                                                      00188000
         ORG   R0INPUT+4                                                00189000
@ENDDATD EQU   *                                                        00190000
IEFJWRTE CSECT                                                          00191000
         DS    0F                                                       00192000
@SIZDATD DC    AL1(0)                                                   00193000
         DC    AL3(@ENDDATD-@DATD)                                      00194000
         DS    0D                                                       00195000
PTCHWRTE DC    X'00'                                                    00196000
         DS    9XL1                                                     00197000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00198000
@01      EQU   01                                                       00199000
@02      EQU   02                                                       00200000
@03      EQU   03                                                       00201000
@04      EQU   04                                                       00202000
@05      EQU   05                                                       00203000
@06      EQU   06                                                       00204000
@07      EQU   07                                                       00205000
@08      EQU   08                                                       00206000
@09      EQU   09                                                       00207000
@10      EQU   10                                                       00208000
@11      EQU   11                                                       00209000
@12      EQU   12                                                       00210000
@13      EQU   13                                                       00211000
@14      EQU   14                                                       00212000
@15      EQU   15                                                       00213000
GETMNADD EQU   @03                                                      00214000
CTR      EQU   @03                                                      00215000
TEXTLGTH EQU   @06                                                      00216000
RECPTR   EQU   @05                                                      00217000
TEXTPTR  EQU   @04                                                      00218000
RPLPTR   EQU   @02                                                      00219000
R1       EQU   @01                                                      00220000
R0       EQU   @00                                                      00221000
ACBPRFIX EQU   0                                                        00222000
TEXTAREA EQU   0                                                        00223000
IFGACB   EQU   0                                                        00224000
ACBAMBL  EQU   IFGACB+4                                                 00225000
ACBIXLST EQU   ACBAMBL                                                  00226000
ACBJWA   EQU   ACBIXLST                                                 00227000
ACBMACRF EQU   IFGACB+12                                                00228000
ACBMACR1 EQU   ACBMACRF                                                 00229000
ACBADR   EQU   ACBMACR1                                                 00230000
ACBCNV   EQU   ACBMACR1                                                 00231000
ACBMACR2 EQU   ACBMACRF+1                                               00232000
ACBLFB   EQU   IFGACB+20                                                00233000
ACBBUFPL EQU   ACBLFB                                                   00234000
ACBRECFM EQU   IFGACB+24                                                00235000
ACBCCTYP EQU   IFGACB+25                                                00236000
ACBOPT   EQU   IFGACB+26                                                00237000
ACBDSORG EQU   ACBOPT                                                   00238000
ACBCROPS EQU   ACBDSORG                                                 00239000
ACBEXLST EQU   IFGACB+36                                                00240000
ACBDDNM  EQU   IFGACB+40                                                00241000
ACBOFLGS EQU   IFGACB+48                                                00242000
ACBINFLG EQU   IFGACB+50                                                00243000
ACBUJFCB EQU   IFGACB+52                                                00244000
ACBWAPTR EQU   ACBUJFCB                                                 00245000
IFGRPL   EQU   0                                                        00246000
RPLIDWD  EQU   IFGRPL                                                   00247000
RPLECB   EQU   IFGRPL+8                                                 00248000
RPLSTAT  EQU   IFGRPL+12                                                00249000
RPLFDBK  EQU   IFGRPL+13                                                00250000
RPLRTNCD EQU   RPLFDBK                                                  00251000
RPLCNDCD EQU   RPLFDBK+1                                                00252000
RPLKEYLE EQU   IFGRPL+16                                                00253000
RPLDACB  EQU   IFGRPL+24                                                00254000
RPLAREA  EQU   IFGRPL+32                                                00255000
RPLOPTCD EQU   IFGRPL+40                                                00256000
RPLOPT1  EQU   RPLOPTCD                                                 00257000
RPLOPT2  EQU   RPLOPTCD+1                                               00258000
RPLADR   EQU   RPLOPT2                                                  00259000
RPLOPT3  EQU   RPLOPTCD+2                                               00260000
RPLNXTRP EQU   IFGRPL+44                                                00261000
RPLRLEN  EQU   IFGRPL+48                                                00262000
RPLRBAR  EQU   IFGRPL+60                                                00263000
RPL6RBA  EQU   RPLRBAR+2                                                00264000
RPLDDDD  EQU   RPL6RBA+2                                                00265000
IEFJAMWD EQU   0                                                        00266000
AMWDFRST EQU   IEFJAMWD                                                 00267000
AMWDLAST EQU   IEFJAMWD+4                                               00268000
AMWDFLG1 EQU   IEFJAMWD+8                                               00269000
IEFJAREA EQU   0                                                        00270000
NEXTPTR  EQU   IEFJAREA                                                 00271000
LGTH     EQU   IEFJAREA+4                                               00272000
RECTEXT  EQU   IEFJAREA+8                                               00273000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00274000
@NM00019 EQU   IEFJAMWD+10                                              00275000
AMWDFLG2 EQU   IEFJAMWD+9                                               00276000
@NM00018 EQU   AMWDFLG1                                                 00277000
AMWDMV80 EQU   AMWDFLG1                                                 00278000
AMWDEOF  EQU   AMWDFLG1                                                 00279000
RPLERMSA EQU   IFGRPL+72                                                00280000
RPLEMLEN EQU   IFGRPL+70                                                00281000
@NM00017 EQU   IFGRPL+68                                                00282000
RPLS2S2  EQU   RPL6RBA                                                  00283000
RPLS1S1  EQU   RPLRBAR                                                  00284000
@NM00016 EQU   IFGRPL+56                                                00285000
RPLBUFL  EQU   IFGRPL+52                                                00286000
RPLCHAIN EQU   RPLNXTRP                                                 00287000
RPLOPT4  EQU   RPLOPTCD+3                                               00288000
RPLALIGN EQU   RPLOPT3                                                  00289000
RPLFMT   EQU   RPLOPT3                                                  00290000
RPLFLD   EQU   RPLOPT3                                                  00291000
RPLVFY   EQU   RPLOPT3                                                  00292000
RPLBLK   EQU   RPLOPT3                                                  00293000
RPLSFORM EQU   RPLOPT3                                                  00294000
RPLEODS  EQU   RPLOPT3                                                  00295000
RPLNSP   EQU   RPLOPT2                                                  00296000
RPLUPD   EQU   RPLOPT2                                                  00297000
@NM00015 EQU   RPLOPT2                                                  00298000
RPLCNV   EQU   RPLOPT2                                                  00299000
RPLADD   EQU   RPLADR                                                   00300000
RPLKEY   EQU   RPLOPT2                                                  00301000
RPLECBSW EQU   RPLOPT1                                                  00302000
RPLGEN   EQU   RPLOPT1                                                  00303000
RPLKGE   EQU   RPLOPT1                                                  00304000
RPLASY   EQU   RPLOPT1                                                  00305000
RPLSKP   EQU   RPLOPT1                                                  00306000
RPLSEQ   EQU   RPLOPT1                                                  00307000
RPLDIR   EQU   RPLOPT1                                                  00308000
RPLLOC   EQU   RPLOPT1                                                  00309000
RPLARG   EQU   IFGRPL+36                                                00310000
RPLTCBPT EQU   IFGRPL+28                                                00311000
RPLCCHAR EQU   IFGRPL+20                                                00312000
RPLSTRID EQU   IFGRPL+18                                                00313000
RPLKEYL  EQU   RPLKEYLE                                                 00314000
RPLERRCD EQU   RPLCNDCD+1                                               00315000
RPLCMPON EQU   RPLCNDCD                                                 00316000
RPLERREG EQU   RPLRTNCD                                                 00317000
@NM00014 EQU   RPLSTAT                                                  00318000
RPLEDRQI EQU   RPLSTAT                                                  00319000
RPLCHKI  EQU   RPLSTAT                                                  00320000
RPLACTIV EQU   RPLSTAT                                                  00321000
RPLPOST  EQU   RPLECB                                                   00322000
RPLWAIT  EQU   RPLECB                                                   00323000
RPLPLHPT EQU   IFGRPL+4                                                 00324000
RPLLEN   EQU   RPLIDWD+3                                                00325000
RPLREQ   EQU   RPLIDWD+2                                                00326000
RPLSTYP  EQU   RPLIDWD+1                                                00327000
RPLID    EQU   RPLIDWD                                                  00328000
@NM00013 EQU   IFGACB+72                                                00329000
@NM00012 EQU   IFGACB+68                                                00330000
ACBUAPTR EQU   IFGACB+64                                                00331000
ACBLRECL EQU   IFGACB+62                                                00332000
ACBBLKSZ EQU   IFGACB+60                                                00333000
ACBBUFSP EQU   IFGACB+56                                                00334000
@NM00011 EQU   ACBWAPTR+1                                               00335000
ACBOPTN  EQU   ACBWAPTR                                                 00336000
ACBCAT   EQU   ACBINFLG                                                 00337000
ACBIJRQE EQU   ACBINFLG                                                 00338000
ACBJEPS  EQU   ACBINFLG                                                 00339000
@NM00010 EQU   ACBINFLG                                                 00340000
ACBERFLG EQU   IFGACB+49                                                00341000
ACBIOSFG EQU   ACBOFLGS                                                 00342000
ACBEXFG  EQU   ACBOFLGS                                                 00343000
@NM00009 EQU   ACBOFLGS                                                 00344000
ACBDSERR EQU   ACBOFLGS                                                 00345000
ACBOPEN  EQU   ACBOFLGS                                                 00346000
ACBEOV   EQU   ACBOFLGS                                                 00347000
@NM00008 EQU   ACBOFLGS                                                 00348000
ACBDEB   EQU   ACBDDNM+5                                                00349000
ACBERFL  EQU   ACBDDNM+4                                                00350000
ACBAMETH EQU   ACBDDNM+3                                                00351000
ACBINFL  EQU   ACBDDNM+2                                                00352000
ACBTIOT  EQU   ACBDDNM                                                  00353000
ACBUEL   EQU   ACBEXLST                                                 00354000
ACBPASSW EQU   IFGACB+32                                                00355000
@NM00007 EQU   IFGACB+28                                                00356000
@NM00006 EQU   ACBDSORG+1                                               00357000
ACBDORGA EQU   ACBDSORG+1                                               00358000
@NM00005 EQU   ACBDSORG                                                 00359000
ACBCRNRE EQU   ACBCROPS                                                 00360000
ACBCRNCK EQU   ACBCROPS                                                 00361000
ACBASA   EQU   ACBCCTYP                                                 00362000
@NM00004 EQU   ACBCCTYP                                                 00363000
ACBRECAF EQU   ACBRECFM                                                 00364000
ACBJBUF  EQU   ACBBUFPL+2                                               00365000
@NM00003 EQU   ACBBUFPL                                                 00366000
ACBBUFNI EQU   IFGACB+18                                                00367000
ACBBUFND EQU   IFGACB+16                                                00368000
ACBSTRNO EQU   IFGACB+14                                                00369000
@NM00002 EQU   ACBMACR2                                                 00370000
@NM00001 EQU   ACBMACR2                                                 00371000
ACBSKP   EQU   ACBMACR2                                                 00372000
ACBCHN   EQU   ACBMACR2                                                 00373000
ACBCBRD  EQU   ACBMACR2                                                 00374000
ACBCBOPN EQU   ACBMACR2                                                 00375000
ACBUPD   EQU   ACBMACR1                                                 00376000
ACBOUT   EQU   ACBMACR1                                                 00377000
ACBIN    EQU   ACBMACR1                                                 00378000
ACBDIR   EQU   ACBMACR1                                                 00379000
ACBSEQ   EQU   ACBMACR1                                                 00380000
ACBBLK   EQU   ACBCNV                                                   00381000
ACBADD   EQU   ACBADR                                                   00382000
ACBKEY   EQU   ACBMACR1                                                 00383000
ACBINRTN EQU   IFGACB+8                                                 00384000
ACBIBCT  EQU   ACBJWA                                                   00385000
ACBLENG  EQU   IFGACB+2                                                 00386000
ACBSTYP  EQU   IFGACB+1                                                 00387000
ACBID    EQU   IFGACB                                                   00388000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00389000
@ENDDATA EQU   *                                                        00390000
         END   IEFJWRTE                                                 00391000
