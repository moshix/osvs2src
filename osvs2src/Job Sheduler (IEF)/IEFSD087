         TITLE 'IEFSD087 - VMS SYSOUT STANDARD DATASET OUTPUT WRITER'   00020000
*                                                                       00022020
*          RELEASE 22 DELETIONS/CHANGES                                 00024020
*          RELEASE 21 DELETIONS/CHANGES                                 00026020
*1123083600                                                      A51944 00026221
*1123                                                            A39229 00026521
*1123                                                            A41000 00027021
*1123                                                            A42459 00027521
*          RELEASE 20 DELETIONS/CHANGES                                 00028020
*1043060240-060280,060360,063000                                 M5878  00028520
*1043004260                                                      20202  00029020
* 011200-032200,039200-046992,047122-047742                      MAPMAC 00030020
* 068720                                                         A34036 00032020
* 084243-084246                                                  A33218 00034020
*1043064200                                                      A35780 00037020
 TITLE 'IEFSD087' - STANDARD DATASET OUTPUT WRITER                      00040000
*********************************************************************** 00060000
*                                                                     * 00080000
* STATUS CHANGE LEVEL 008                                               00100021
*                                                                     * 00120000
*FUNCTION OF THIS MODULE:                                             * 00140000
*                                                                     * 00160000
*    0. DETERMINE IF THE OUTPUT DEVICE IS A 3211 PRINTER AND     20202  00165020
*       CHANGES HAVE BEEN REQUESTED TO THE UCS/FCB ENVIRONMENT.  20202  00170020
*       THEN LINK TO MODULE IEFSDTTE TO LOAD THE UCS/FCB BUFFERS.20202  00175020
*    1. GET THE INDIVIDUAL RECORDS FROM THE DATASET.                  * 00180000
*    2. WRITE TO THE SYSTEM OUTPUT DEVICE ERROR MESSAGES IF THE DCB   * 00200000
*       IS NOT SATISFACTORY FOR QSAM PROCESSING OR IF THE IS AN       * 00220000
*       UNRECOVERABLE INPUT ERROR.                                    * 00240000
*    3. IF INPUT DATASET IS SPANNED AND OUTPUT IS NOT LOADS THE    VS0H 00242017
*       VARIABLE SPANNED ROUTINE (IEFSDXXX) AND DELETES IT WHEN    VS0H 00244017
*       THE INPUT DATASET IS DONE. IF EITHER INPUT OR OUTPUT IS    VS0H 00246017
*       SPANNED IEFSDXXX IS ENTERED TO INITIALIZE THE SPAN CONTROL VS0H 00248017
*       AREA AND GET CORE FOR AN AREA TO BUILD THE SPANNED RECORD  VS0H 00250017
*       IN IF NECESSARY. IT WILL FREE THIS AREA WHEN THE INPUT     VS0H 00252017
*       IS DONE .                                                  VS0H 00254017
*                                                                     * 00260000
*OPERATION OF THIS MODULE:                                            * 00280000
*                                                                     * 00300000
*    ENTRY POINT 1 - IEFSD087 WHICH IS LINKED TO FROM IEFSD070 WHEN   * 00320000
*        THIS MODULE IS TO BE USER TO PUT OUT DATASETS.               * 00340000
*    INPUT AT ENTRY POINT 1:                                          * 00360000
*        REGISTER 1 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00380000
*        ROUTINE.                                                     * 00400000
*                                                                20202  00402020
*    EXIT POINT 0.2 - LINK TO IEFSDTTE TO LOAD THE UCS/FCB BUFFER 20202 00404020
*    OUTPUT AT EXIT POINT 0.2:                                   20202  00406020
*        REGISTER 6 POINTS TO THE INPUT DCB.                     20202  00408020
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB  20202  00410020
*        ROUTINE.                                                20202  00412020
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT  20202  00414020
*        ROUTINE.                                                20202  00416020
*                                                                     * 00420000
*    EXIT POINT 0.5 - BRANCH TO IEFSDXXX TO INITIALIZE THE SPAN    VS0H 00422017
*        CONTROL AREA IF INPUT OR OUTPUT IS VARIABLE SPANNED.      VS0H 00424017
*    OUTPUT AT EXIT POINT 0.5:                                   20202  00426020
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB    VS0H 00428017
*        ROUTINE.                                                  VS0H 00430017
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND  VS0H 00432017
*        DSB PROCESSING ROUTINES.                                  VS0H 00434017
*                                                                  VS0H 00436017
*    EXIT POINT 1 - BRANCH TO IEFSD088 TO DO THE START TRANSITION     * 00440000
*        ROUTINE.                                                     * 00460000
*    OUTPUT AT EXIT POINT 1:                                          * 00480000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00500000
*        ROUTINE.                                                     * 00520000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 00540000
*        ROUTINE.                                                     * 00560000
*                                                                     * 00580000
*    EXIT POINT 2 - BRANCH TO IEFSD089 TO DO THE PUT FOR EACH RECORD. * 00600000
*    OUTPUT AT EXIT POINT 2:                                          * 00620000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00640000
*        ROUTINE.                                                     * 00660000
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND     * 00680000
*        DSB PROCESSING ROUTINES.                                     * 00700000
*                                                                     * 00720000
*    EXIT POINT 3 - BRANCH TO IEFSD088 TO DO THE END TRANSITION       * 00740000
*        ROUTINE.                                                     * 00760000
*    OUTPUT AT EXIT POINT 3:                                          * 00780000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00800000
*        ROUTINE.                                                     * 00820000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 00840000
*        ROUTINE.                                                     * 00860000
*                                                                     * 00880000
*    EXIT POINT 4- RETURN TO IEFSD078 IF SYSOUT WORK DONE.            * 00900000
*        THE REGISTERS ARE RESTORED TO AS THEY WERE ON LEAVING        * 00920000
*        IEFSD078.                                                    * 00940000
*                                                                     * 00960000
*EXTERNAL ROUTINES:                                                   * 00980000
*                                                                     * 01000000
*    IEFSD088  THE TRANSITION ROUTINE                                 * 01020000
*    IEFSD089  THE OUTPUT ROUTINE                                     * 01040000
*   IEFSDXXX   SPANNED DATASETS ROUTINE                            VS0H 01050017
*    IEFSD078  SYSOUT WRITER LINK-TO-DSB/SMB                          * 01060000
*    IEFSD87M  MESSAGES FOR IEFSD087                                  * 01080000
*    IEFSDTTE  THE 3211 PRINTER SUPPORT ROUTINE                         01090020
*                                                                     * 01100000
*                                                                     * 03240000
*                                                                     * 03260000
*ATTRIBUTES - REENTRANT                                               * 03280000
*                                                                     * 03300000
*********************************************************************** 03320000
*                        NEEDED DSECTS                                  03340000
*                                                                       03360000
R0       EQU   0                                                        03380000
R1       EQU   1                                                        03400000
R2       EQU   2                                                        03420000
R3       EQU   3                                                        03440000
R4       EQU   4                                                        03460000
R5       EQU   5                                                        03480000
R6       EQU   6                                                        03500000
R7       EQU   7                                                        03520000
R8       EQU   8                                                        03540000
R9       EQU   9                                                        03560000
R10      EQU   10                                                       03580000
R11      EQU   11                                                       03600000
R12      EQU   12                                                       03620000
R13      EQU   13                                                       03640000
R14      EQU   14                                                       03660000
R15      EQU   15                                                       03680000
*                                                                       03680620
*        ESSENTIAL EQUATES                                              03681220
******************************************************************      03681820
*3211 SUPPORT                                                           03682420
DEBUCBAD EQU   32                       UCB ADDR OFFSET IN DEB   M5878  03683020
FLAGF    EQU   X'FF'                    ONE BYTE FLAG            M5878  03683620
FOUR     EQU   4                        LENGTH OF FOUR           M5878  03684220
JFCBFAL  EQU   X'08'                    JFCB FCB ALIGN REQUEST   M5878  03684820
JFCBFVR  EQU   X'04'                    JFCB FCB VERIFY REQUEST  M5878  03685420
JFCBUBLK EQU   X'40'                    JFCB UNBLK ALLOW DATA CK M5878  03686020
JFCBUF   EQU   X'40'                    JFCB UCS FOLD REQUEST    M5878  03686620
JFCBUVR  EQU   X'10'                    JFCB UCS VERIFY REQUEST  M5878  03687220
RETCODE  EQU   19                       REG 15 RETURN CODE       M5878  03687820
TTETYPE  EQU   X'09'                    3211 UNIT TYPE           M5878  03688420
UCBFDF   EQU   X'80'                    UCB FCB ID IS DEFAULT ID M5878  03689020
UCBUDF   EQU   X'80'                    UCB UCS ID IS DEFAULT ID M5878  03689620
ZERO     EQU   0                        ZERO CONSTANT            M5878  03690220
UCBUPE   EQU   X'01'                    UCB UCS PARITY ERROR     M5878  03690820
*                                                                       03691420
******************************************************************      03692020
*                                                                       03692620
*DEFINE JFCB                                                            03693220
IEFJFCBN DSECT                                                          03693820
         IEFJFCBN                                                       03694420
IEFUCBOB DSECT                                                          03695020
         IEFUCBOB                                                       03695620
*                                                                       03696220
******************************************************************      03696820
*                                                                       03697420
*DEFINE DCB LABELS FOR DCB OF MAXIMUM SIZE                              03700000
         DCBD  DSORG=PS                                                 03720000
*DEFINE DCB AND OPEN AND CLOSE. (EODAD,SYNAD,OPEN,AND CLOSE TO ADD)     03740000
TODCB    DSECT                                                          03760000
         DCB   DSORG=PS,                                               *03780000
               MACRF=GL,                                               *03800000
               BUFNO=2                                                  03820000
SPOPN    OPEN  (0,INPUT),MF=L                                           03840000
SPCLO    CLOSE (0),MF=L                                                 03860000
SPEXL    DC    F'0'                     DCB EXIT LIST                   03880000
SPEXL1   DC    F'0'                    DCB EXIT LIST                    03890015
BODCB    EQU   *                                                        03900000
         IEFSDWKT                                                MAPMAC 04100020
         IEFSDSDR                                                MAPMAC 04300020
         IEFSDWKX                                                MAPMAC 04500020
*EQUATES                                                                04700218
ASASW    EQU   4                        ASA CONTROL CHARACTER           04701218
MACSW    EQU   2                        MACHINE CONTROL CHARACTER       04702218
NOTLA    EQU   X'1'                     NOT LAST SEGMENT           VS0H 04703218
NOTFI    EQU   X'2'                     NOT FIRST SEGMENT          VS0H 04704218
VARSP    EQU   X'48'                    VARIABLE SPANNED RECFM     VS0H 04705218
CVT      EQU   16                                                  000F 04706218
MFTWO    EQU   X'74'                                               000F 04707218
MFTBT    EQU   X'20'                                               000F 04708218
VARSW    EQU   64                       VARIABLE SWITCH WHEN NOT FIXED  04709218
FIXSW    EQU   128                      FIXED SWITCH WHEN NOT VARIABLE  04710218
UNKSW    EQU   VARSW+FIXSW              UNKNOWN SWITCH                  04711218
         IEFSDPAR                                                MAPMAC 04741220
         IEFSDSMF                                                MAPMAC 04771220
*                                                                     * 04820000
*                   THIS ROUTINE IS THE STANDARD SYSOUT WRITER        * 04840000
*                   ROUTINE WHICH MAY BE USED TO WRITE OUT            * 04860000
*                   DATASETS INSTEAD OF ONE SUPPLIED BY THE           * 04880000
*                   USER. IT RECEIVES A 3 WORD REGISTER SAVE          * 04900000
*                   AREA THE ADDRESS OF WHICH IS IN REGISTER          * 04920000
*                   1. THE AREA HAS THE FOLLOWING APPEARANCE:         * 04940000
*                                                                     * 04960000
*                    *************************************            * 04980000
*                    *        *        *        *        *            * 05000000
*                    *SWITCHES*        *        *        *            * 05020000
*                    *        *        *        *        *            * 05040000
*                    *************************************            * 05060000
*                    *                                   *            * 05080000
*                    *         ADDRESS OF OUTPUT DCB     *            * 05100000
*                    *                                   *            * 05120000
*                    *************************************            * 05140000
*                    *                                   *            * 05160000
*                    *         ADDRESS OF INPUT DCB      *            * 05180000
*                    *                                   *            * 05200000
*                    *************************************            * 05220000
*                                                                     * 05240000
*                   SWITCHES ARE AS FOLLOWS:                          * 05260000
*                                                                     * 05280000
*                    LEFT MOST BIT (128) IS ON IF THE OUTPUT          * 05300000
*                    UNIT IS A 1442 PUNCH                             * 05320000
*                                                                     * 05340000
*                    NEXT BIT (64)  IS ON IF THE OUTPUT UNIT          * 05360000
*                    IS A PUNCH OR IF IT IS TAPE WHICH HAS A          * 05380000
*                    PUNCH AS ITS ULTIMATE DESTINATION                * 05400000
*                                                                     * 05420000
*                    NEXT BIT (32) IS ON IF THE OUTPUT UNIT           * 05440000
*                    IS A PRINTER OR A PUNCH.                         * 05460000
*                                                                     * 05480000
*                                                                     * 05500000
*                   A USER MAY WRITE A ROUTINE TO USE INSTEAD         * 05520000
*                   OF THIS. HE WILL HAVE THE ROUTINE IN THE          * 05540000
*                   LINK LIBRARY AND THE PROGRAM NAME IN THE          * 05560000
*                   SYSOUT FIELD OF THE DD STATEMENT. SEE JCL         * 05580000
*                   PUBLICATION.                                      * 05600000
*                                                                     * 05620000
*                   THE USERS PROGRAM WILL GET CONTROL WITH           * 05640000
*                   THE OUTPUT FILE OPEN AND THE INPUT FILE           * 05660000
*                   NOT OPENED.                                       * 05680000
*                                                                     * 05700000
*                   AT THE END OF HIS ROUTINE HE WILL CLOSE           * 05720000
*                   THE INPUT FILE AND RETURN. THE INPUT FILE         * 05740000
*                   WILL THEN BE DELETED FOR HIM.                     * 05760000
*                                                                     * 05780000
*INITIALIZE                                                             05800000
IEFSD087 CSECT                                                          05820000
*3412047000-048000,058300,065800,078800,079008-079200,079400,      SM0I 05826018
*084270                                                            SM0I 05832018
*                                                                A17618 05836018
*067050-067150                                                   F40172 05838019
         SAVE  (14,12)                  SAVE REGISTERS                  05840000
         BALR  R9,0                     SET BASE REGISTER               05860000
         USING *,R9                                                     05880000
         LR    R7,R1                    SAVE PARAM REGISTERS            05900000
         USING WORKLST,R7                                               05920000
*GET CORE FOR WORK AREA                                                 05940000
         LA    R0,WKSOE-WKSOR           GET SIZE OF WORK AREA           05960000
         GETMAIN R,LV=(0)               GET CORE FOR IT                 05980000
         LR    R8,R1                    SET REGISTER TO WORK AREA       06000000
         USING WKSOR,R8                                                 06020000
         L     R4,WOSPS                 GET ADDRESS OF PARLIST   M5878  06024020
         USING PARLIST,R4               ESTABLISH ADDRESSABILITY M5878  06028020
         ST    R8,PARWKSOR              SAVE WKSOR ADDRESS       A35780 06032020
         ST    R13,SRETR                SAVE RETURN REGISTER            06040000
         LA    R13,SMSVA                GET SAVE AREA ADDRESS           06060000
*CLEAR TRANSITION WRITE SWITCH                                          06080000
         MVI   BCTSW,X'00'              PUT COUNT TO 0                  06100000
*                                                                F40172 06103019
*         INITIALIZE CONTROL CHARACTERS                          F40172 06106019
*                                                                F40172 06109019
         MVI   SAVEC,X'09'        INITIALIZE SAVEC               F40172 06112019
         MVI   SAVED,X'09'        INITIALIZE SAVED               F40172 06115019
*TURN OFF SWITCHES                                                      06120000
         MVI   SORS1,0                                                  06140000
         MVI   SORS2,0                  TURN OFF SWITCH          A35780 06145020
         MVI   SEGIN,0                  MAKE SEGMENT 0             VS0H 06150017
*PUT IN EXLST ROUTINE                                                   06160000
         L     R6,DCBIN                 GET ADDRESS OF DCB              06180000
         USING IHADCB,R6                                                06200000
         LA    R10,SPEXL-TODCB(0,R6)    GET ADDRESS OF DCB EXIT LIST    06220000
         ST    R10,SPEXL-TODCB(0,R6)    SAVE IT                         06240000
         MVC   DCBEXLST+1(3),SPEXL+1-TODCB(R6)                          06260000
         MVC   SPEXL-TODCB(4,R6),WJFCB  PUT IN JFCB ADDRESS             06270015
         MVI   SPEXL-TODCB(R6),X'07'    SET HIGH ORDER BYTE AT 7        06280015
         MVC   SPEXL-TODCB+4(4,R6),ADING   PUT IN OPEN EXIT LIST ADDR   06290015
*3211 PRINTER SUPPORT                                                   06290320
         ST    R13,PARSAP               SAVE POINTER TO SAVE     M5878  06290620
*                                       AREA                     M5878  06290920
         LA    R13,PARSAV               ADDR OF SAVE AR IN       M5878  06291220
*                                       PARLIST                  M5878  06291520
         TM    PARSWCH,PARDUMMY         IS OUTPUT DUMMY DATA SET M5878  06291820
         BO    OPENIN                   YES, NORMAL OPERATIONS   M5878  06292120
         L     R5,PARUCB                GET OUTPUT UCB ADDRESS   M5878  06292420
         USING UCBOB,R5                 ESTABLISH ADDRESSIBILITY M5878  06292720
*IS OUTPUT DEVICE 3211 PRINTER                                          06293020
         TM    UCBTBYT3,UCB3UREC        IS DEVICE CLASS UNIT REC M5878  06293320
         BNO   OPENIN                   NO, NORMAL OPERATION     M5878  06293620
         TM    UCBTBYT4,TTETYPE         IS UNIT TYPE 3211 PTR    M5878  06293920
         BNO   OPENIN                   NO, NORMAL OPERATION     M5878  06294220
*CONTINUE TEST FOR CHANGE REQUEST BEFORE LOADING 3211 PROCESSOR         06294520
         L     R10,WJFCB                ESTABLISH                M5878  06294820
         USING INFMJFCB,R10               INPUT JFCB BASE        M5878  06295120
         L     R5,UCBXTADR              SHIFT TO UCB/UCS         M5878  06295420
*                                       EXTENSION                M5878  06295720
         DROP  R5                                                A42459 06295821
         USING UCBUCS,R5                BASE FOR UCS EXTENSION   A42459 06295921
         CLC   JFCFCBID(FOUR),INVALADR  FCB IMAGE-ID SPECIFIED   M5878  06296020
         BNE   TTENT                    YES, GO TO IEFSDTTE      M5878  06296320
         TM    UCBFCBOP,UCBFDF          PRESENT IMAGE-ID A       M5878  06296620
*                                       DEFAULT                  M5878  06296920
         BO    CHKVER                   YES, GO TO CHECK VER REQ M5878  06297220
         CLI   PARFCBID,ZERO            WAS FCB SAVED            M5878  06297520
         BNE   TTENT                    YES, GO TO IEFSDTTE      M5878  06297820
CHKVER   EQU   *                                                 M5878  06298120
         TM    JFCUCSOP,JFCBFVR         FCB IMAGE-ID VERIFY REQ  M5878  06298420
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06298720
         TM    JFCUCSOP,JFCBFAL         FCB IMAGE-ID ALIGNMENT   M5878  06299020
*                                       REQ                      M5878  06299320
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06299620
         CLC   JFCUCSID(FOUR),INVALADR  UCS IMAGE-ID SPECIFIED   M5878  06299920
         BNE   TTENT                    YES, GO TO IEFSDTTE      M5878  06300220
         TM    UCBUCSOP,UCBUPE          RELOAD REQUEST FROM OPEN M5878  06300520
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06300820
         TM    UCBUCSOP,UCBUDF          PRESENT IMAGE-ID A       M5878  06301120
*                                       DEFAULT                  M5878  06301420
         BO    UCSVER                   YES, GO TO CHECK VER REQ M5878  06301720
         CLI   PARUCSID,ZERO            WAS UCS ID SAVED         M5878  06302020
         BNE   TTENT                    YES, GO TO IEFSDTTE      M5878  06302320
UCSVER   EQU   *                                                 M5878  06302620
         TM    JFCUCSOP,JFCBUVR         UCB IMAGE-ID VERIFY REQ  M5878  06302920
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06303220
         TM    JFCUCSOP,JFCBUF          UCS FOLD MODE REQUEST    M5878  06303520
         BO    TTENT                    YES, GO TO IEFSDTTE      M5878  06303820
         TM    JFCOPTCD,JFCBUBLK        ALLOW DATA CK,-UNBLOCK   M5878  06304120
*                                       REQ                      M5878  06304420
         BZ    OPENIN                   NO, NORMAL OPERATION     M5878  06304720
TTENT    EQU   *                                                 M5878  06305020
*                                                                       06305320
         DROP  R5                                                M5878  06305620
         L     R1,SD89EXIT              PASS 089 ADDR TO         M5878  06305920
*                                       IEFSDTTE                 M5878  06306220
*                                         FOR OUTPUT MSG WRITE          06306520
*LINK TO THE 3211 SUPPORT MODULE                                        06306820
         LINK  EP=IEFSDTTE,MF=(E,(1))   LINK TO 3211 PROCESSOR   M5878  06307120
         DROP  R10                                               M5878  06307420
         L     R13,PARSAP               RESTORE SAVE AREA ADDR   M5878  06307720
*********************************************************************** 06308020
*                                                                     * 06308320
*ON RETURN FROM THE 3211 PROCESSOR MODULE, REGISTER 15 WILL           * 06308620
*  CONTAIN A RETURN CODE INDICATING UCS/FCB ENVIRONMENTAL CONDI-      * 06308920
*  TIONS.  REG15 RC=00 - SUCCESSFUL COMPLETION                        * 06309220
*        REG15 RC<0C AND SORS1=INERS - INPUT ERROR                    * 06309520
*        REG15 RC>08 - OUTPUT ERROR                                   * 06309820
*                                                                     * 06310120
*********************************************************************** 06310420
         TM    SORS1,INERS              TEST FOR IO ERROR. IF SO M5878  06310720
         BO    FREEWORK                 BRANCH TO SKIP INPUT     M5878  06311020
         L     R10,WOSAP                GET ADDR ERROR RET PUT   M5878  06311320
*                                       AT                       M5878  06311620
         TM    RETCODE(R10),FLAGF       TEST FOR ERROR- IF ANY   M5878  06311920
         BNZ   FREEWORK                 TERM PRESENT OPERATION   M5878  06312220
OPENIN   EQU   *                                                 M5878  06312520
*OPEN INPUT                                                             06312820
         LA    R1,SPOPN-TODCB(0,R6)     GET ADDRESS OF OPEN             06320000
         OPEN  ((R6),INPUT),TYPE=J,MF=(E,(1))                           06340015
*PUT IN INPUT SYNAD AND EODAD ROUTINES                                  06360000
         MVC   DCBSYNAD+1(3),ADINE+1    PUT IN INPUT ERROR ROUTINE      06380000
         MVC   DCBEODAD+1(3),ADINF+1    PUT IN INPUT END OF FILE ROUT.  06400000
* SET SWITCH TO INDICATE INPUT CONTROL CHARACTER TYPE                   06406020
         TM    DCBRECFM,ASASW           ASA CNTRL CHAR ON INPUT  A35780 06412020
         BZ    MACTEST                  NO, TEST FOR MACH CC     A35780 06418020
         OI    SORS2,ASACC              TURN ON ASA SWITCH       A35780 06424020
MACTEST  EQU   *                                                 A35780 06430020
         TM    DCBRECFM,MACSW           TEST FOR MACHINE CNTRL CHAR     06440000
         BZ    VSPST                    BRANCH TO TEST SPAN IF NOT VS0H 06460017
         OI    SORS1,MACHS              TURN ON MACHINE SWITCH          06480000
*IS VARIABLE SPANNED OUTPUT                                        VS0H 06480917
VSPST    L     R15,WOXXX                GET SPANNED MODULE ADDRESS VS0H 06481817
         LTR   R15,R15                  IF A MODULE PRESENT        VS0H 06482717
         BNZ   SPANM                    THEN ENTER IT              VS0H 06483617
*IS VARIABLE SPANNED INPUT                                         VS0H 06484517
         TM    DCBRECFM,VARSP           IF NOT VS INPUT THEN       VS0H 06485417
         BNO   DTRRO                    BRANCH TO AVOID SPANNING   VS0H 06486317
*LOAD THE SPANNING MODULE                                          VS0H 06487217
         LOAD  EP=IEFSDXXX                                         VS0H 06488117
*SAVE THIS ADDRESS                                                 VS0H 06489017
         ST    R0,WOXXX                                            VS0H 06489917
*GET CORE FOR SPANNING WORK AREA                                   VS0H 06490817
         LA    R0,WORKFEND-WORKFXXX     GET SIZE                   VS0H 06491717
         GETMAIN R,LV=(0)               GET CORE                   VS0H 06492617
*SAVE THE GOT CORE OF SPANNING MODULE                              VS0H 06493517
         ST    R1,WOXXA                                            VS0H 06494417
*BRANCH TO THE SPANNING MODULE                                     VS0H 06495317
SPANM    L     R15,WOXXX                GET SPAN MODULE ADDRESS    VS0H 06496217
         O     R15,BATEY                USE 8 TO INDICATE DATASET  VS0H 06497117
         BALR  R14,R15                  GO TO SPANNING MODULE      VS0H 06498017
*DO TRANSITION ROUTINE                                                  06500000
DTRRO    L     R15,SD88EXIT             GET ADDRESS FOR EXIT            06520000
         BALR  R14,R15                                                  06540000
         L     R14,WOSPS           GET ADDRESS OF PARLIST          SM0I 06542018
         USING  PARLIST,R14                                        SM0I 06544018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 06546018
         BE    CONTUE1             IF NONE-SKIP SMF PROCESSING     SM0I 06548018
         L     R15,PARSMF          GET ADDRESS OF SMFREC           SM0I 06550018
         DROP   R14                                                SM0I 06552018
         USING  SMFREC,R15                                         SM0I 06554018
         XC    SMFDYCNT(4),SMFDYCNT  ZERO OUT TRANSITION COUNT     SM0I 06556018
         DROP  R15                                                 SM0I 06558018
*IS THERE AN UNRECOVERABLE ERROR                                        06560000
CONTUE1  L     R10,WOSAP           GET ADDRESS ERROR RETURN PUT AT SM0I 06580018
         TM    19(R10),X'FF'            TEST FOR ERROR IF SO            06600000
         BNE   CLIDS                    BRANCH TO CLOSE INPUT           06620000
*IS THERE AN UNOPENED DATASET                                           06640000
         TM    SORS1,LRERS+INERS        TEST FOR UNOPENED DATASET       06660000
         BO   SD87EOFX                  IF SO BRANCH TO END OF FILE     06680000
*WAS CORE NEEDED FOR WORK AREA THAT WASNT AVAILABLE                VS0H 06685017
         TM    SORS1,OVERT+CNTGE        IF CANT GET NEEDED CORE    VS0H 06690017
         BNZ   SD87EREX                 GO TO WRITE MESSAGE        VS0H 06695017
*GET NEXT LOGICAL RECORD                                                06700000
GLOGR    EQU   *                                                 F40172 06710019
         L     R1,WOTIQ                 SEE IF CANCEL              000F 06720015
         TM    0(R1),X'40'                                         000F 06725015
         BO    SD87EOFX           CANCEL MFT-2                     000F 06730015
GLOGS    LR    R1,R6                    GET ADDRESS OF DCB         000F 06735015
         MVI   SEGIN,0                  GET 0 SEGMENT INDICATION   VS0H 06737017
         GET   (1)                      GET NEXT RECORD                 06740000
*IS THERE A PERMANENT IO INPUT ERROR                                    06760000
         TM    SORS1,INERS              TEST FOR IO ERROR IF SO         06780000
         BO    PTICC                    BRANCH TO PUT MESSAGE CNTR CHAR 06800000
*GET LENGTH AND BEGINNING OF INPUT RECORD                               06820000
         LH    R11,DCBLRECL             GET LENGTH                      06840000
         LR    R12,R1                   GET BEGINNING                   06860000
*GET SEGMENT INDICATION                                            VS0H 06861017
         TM    DCBRECFM,VARSP           IF NOT SPANNING THEN       VS0H 06862017
         BNO   SEGDN                    AVOID SAVING SEGMENT       VS0H 06863017
         MVC   SEGIN(1),2(R12)          GET SEGMENT INDICATION     VS0H 06864017
*IS SEGMENT O.K.                                                   VS0H 06865017
         L     R3,WOXXA                 GET PREVIOUS SEGMENT BASE  VS0H 06866017
         IC    R3,INSEG-ATENW(R3)       GET PREVIOUS SEGMENT       VS0H 06867017
         IC    R10,SEGIN                GET PRESENT SEGMENT        VS0H 06868017
         SRL   R10,1                    SHIFT TO ALIGN             VS0H 06869017
         XR    R10,R3                   IF SEG OK THE LOW BIT 0    VS0H 06870017
         N     R10,ONELY                ONLY LOW BIT LEFT. IF IT 1 VS0H 06871017
         BNZ   SEGER                    THEN BRANCH TO SEG. BAD  A34036 06872020
SEGDN    EQU   *                        SAVE SEGMENT               VS0H 06873017
*IS THE INPUT RECORD IN VARIABLE FORMAT                                 06880000
         TM    DCBRECFM,FIXSW           TEST FOR NON VARIABLE IF SO     06900000
         BO    TFCCH                    BRANCH AROUND MODIFICATION      06920000
*MODIFY LENGTH AND BEGINNING LOCATION BY 4                              06940000
         LA    R10,4                    MODIFY BY 4                     06960000
         SR    R11,R10                  SUBTRACTED FROM LENGTH          06980000
         BM    SD87EREX                 ERROR AS RECORD TOO SHORT   076 07000000
         AR    R12,R10                  ADDED TO BEGINNING LOCATION     07020000
*IS THIS A SUBSEQUENT SEGMENT                                      VS0H 07025017
         TM    SEGIN,NOTFI              IF SUBSEQUENT SEGMENT THEN VS0H 07030017
         BO    TOOLD                    AVOID C.C. FIX             VS0H 07035017
*IS THERE A CONTROL CHARACTER                                           07040000
TFCCH    TM    DCBRECFM,ASASW+MACSW     TEST FOR NO CONTROL CHAR. IF SO 07060000
         BZ    ASPOC                    BRANCH TO PUT STANDARD ONE IN   07080000
*GET CONTROL CHARACTER                                                  07100000
         MVC   CONCH,0(R12)             SAVE CONTROL CHARACTER          07120000
*MODIFY LENGTH AND BEGINNING LOCATION BY 1                              07140000
         LA    R10,1                    MODIFY BY 1                     07160000
         SR    R11,R10                  SUBTRACTED FROM LENGTH          07180000
         BM    SD87EREX                 ERROR AS RECORD TOO SHORT   076 07200000
         AR    R12,R10                  ADDED TO BEGINNING LOCATION     07220000
         B     TOOLD                    BRANCH TO TURN ON OLD SWITCH    07240000
*MAKE ASA SPACE 1 THE CONTROL CHARACTER                                 07260000
ASPOC    MVI   CONCH,C' '                                               07280000
*IS PRINTER OVERFLOWED                                                  07300000
         L     R3,DCBOT                 GET DCB ADDRESS                 07320000
         PRTOV (3),12,MASCH             IF OVER FLOWED BRANCH TO SKIP   07340000
*IS OLD SWITCH ON                                                       07360000
         TM    SORS1,OLDSW              TEST FOR OLD SWITCH ON IF SO    07380000
         BO    TOOLD                    BRANCH TO DO OUTPUT ROUTINE     07400000
*MAKE ASA SKIP TO CHANNEL 1 THE CONTROL CHARACTER                       07420000
MASCH    MVI   CONCH,C'1'                                               07440000
*TURN ON OLD SWITCH                                                     07460000
TOOLD    OI    SORS1,OLDSW                                              07480000
*DO OUTPUT ROUTINE                                                      07500000
         STM   R11,R12,INLSF            SAVE LOCATION AND BEGINNING     07520000
         L     R15,SD89EXIT             GET ADDRESS FOR EXIT            07540000
         BALR  R14,R15                                                  07560000
*IS THERE AN UNRECOVERABLE ERROR                                        07580000
         L     R10,WOSAP                GET ADDRESS ERROR RETURN PUT AT 07600000
         TM    19(R10),X'FF'            TEST FOR ERROR IF SO            07620000
         BNE   CLIDS                    BRANCH TO CLOSE INPUT           07640000
*IS PERMANENT IO INPUT ERROR SWITCH ON                                  07660000
         TM    SORS1,INERS+OVERT+CNTGE+ERRSW IF IO CORRECT THEN    VS0H 07680017
         BZ    GLOGR                    BRANCH TO GET NEXT RECORD       07700000
*TURN ON OLD SWITCH                                                     07720000
SD87EOFX OI    SORS1,OLDSW                                              07740000
*FIX NUMBER OF TRANSITION WRITES                                        07760000
         MVI   BCTSW,1                  PUT IN 1 FOR PAINTER            07780000
         TM    VARBA,PUNSH              TEST FOR PUNCH IF NOT           07800000
         BZ    DTRAN                    BRANCH TO DO TRANSITION         07820000
         MVI   BCTSW,3                  PUT IN 3 FOR PUNCH              07840000
*DO TRANSITION ROUTINE                                                  07860000
DTRAN    LA    R1,DTRAN1           GET ADDRESS TO RETURN TO        SM0I 07870018
         BAL   R1,SMFPROC          GO CHECK FOR SMF PROCESSING     SM0I 07880018
DTRAN1   L     R15,SD88EXIT        GET ADDRESS FOR EXIT            SM0I 07890018
         BALR  R14,R15                                                  07900000
*IS THERE A SPANNED MODULE                                         VS0H 07901018
CLIDS    L     R3,WOXXA                 GET SPANNING WORK AREA     VS0H 07902018
         LTR   R3,R3                    IF IT IS O THEN            VS0H 07903018
         BZ    CLIDU                    AVOID CLEAN UP             VS0H 07904018
*IS THERE A SPECIAL SPAN WORK AREA                                 VS0H 07905018
         USING WORKFXXX,R3                                         VS0H 07906018
         LM    R0,R1,WOKRL              GET SIZE AND ADDRESS       VS0H 07907018
         C     R0,ONSXA                 IF NOT OVER 168 THEN       VS0H 07908018
         BNH   TFSPO                    BRANCH AS NO CORE GOT      VS0H 07909018
*FREE SPECIAL SPAN WORK AREA                                       VS0H 07910018
         FREEMAIN R,LV=(0),A=(1)        FREE CORE                  VS0H 07911018
* IS THERE SPANNED OUTPUT                                          VS0H 07912018
TFSPO    L     R1,DCBOT                 GET DCB OUTPUT ADDRESS     VS0H 07913018
         TM    DCBRECFM-IHADCB(R1),VARSP  IF SPANNED THEN          VS0H 07914018
         BO    CLIDU                    AVOID DELETING SPAN MODULE VS0H 07915018
*FREE SPAN WORK AREA                                               VS0H 07916018
         LA    R0,WORKFEND-WORKFXXX     GET SIZE                   VS0H 07917018
         LR    R1,R3                    GET CORE                   VS0H 07918018
         FREEMAIN R,LV=(0),A=(1)        FREE CORE                  VS0H 07919018
*DELETE THE SPANNING MODULE                                        VS0H 07920018
         DELETE EP=IEFSDXXX                                        VS0H 07921018
         DROP  R3                                                  VS0H 07922018
*INDICATE SPANNING CODE NOT PRESENT                                VS0H 07923018
         XC    WOXXX(8),WOXXX                                      VS0H 07924018
*CLOSE INPUT                                                            07925018
         L     R14,WOSPS           GET ADDRESS OF PARLIST          SM0I 07926018
         USING  PARLIST,R14                                        SM0I 07927018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 07928018
         BE    CLIDS               IF NONE-SKIP SMF PROCESSING     SM0I 07929018
         L     R15,PARSMF          GET ADDRESS OF SMFREC           SM0I 07930018
         DROP   R14                                                SM0I 07931018
         USING  SMFREC,R15                                         SM0I 07932018
         XC    SMFDYCNT(4),SMFDYCNT  ZERO OUT TRANSITION COUNT     SM0I 07933018
         DROP  R15                                                 SM0I 07934018
CLIDU    L     R10,WOSAP           GET ADDRESS ERROR RETURN PUT AT SM0I 07937018
         TM    19(R10),X'FF'       TEST FOR ERROR-IF NONE          SM0I 07940018
         BE    CLIDS1              SKIP SMF PROCESSING             SM0I 07943018
         LA    R1,CLIDS1           GET ADDRESS TO RETURN TO        SM0I 07946018
         BAL   R1,SMFPROC          GO CHECK FOR SMF PROCESSING     SM0I 07949018
CLIDS1   LA    R1,SPCLO-TODCB(0,R6)    GET ADDRESS OF CLOSE        SM0I 07952018
         CLOSE ((R6)),MF=(E,(1))                                        07960000
*FREE INPUT POOLS                                                       07980000
         LR    R1,R6                    GET ADDRESS OF DCB              08000000
         FREEPOOL (1)                                                   08020000
*FREE WORK AREA                                                         08040000
FREEWORK EQU   *                                                 M5878  08050020
         L     R13,SRETR                GET RETURN REGISTER             08060000
         LA    R0,WKSOE-WKSOR           GET SIZE OF WORK AREA           08080000
         LR    R1,R8                    GET START OF IT                 08100000
         FREEMAIN R,LV=(0),A=(1)                                        08120000
*SAVE RETURN INDICATION                                                 08140000
         L     R10,WOSAP                GET ADDRESS ERROR RETURN PUT AT 08160000
         MVC   16(4,R13),16(R10)        PUT IT WHERE REG. 15 GETS IT    08180000
*INDICATE NO SYNAD ROUTINE                                              08185021
         L     R6,DCBOT                 GET OUTPUT DCB ADDRESS   A41000 08190021
         MVC   DCBSYNAD+1(3),ONELY+1    PUT ONE IN SYNAD ADDRESS A41000 08195021
         RETURN (14,12)                 RETURN TO IEFSD070       A32638 08200020
*DOES DATASET HAVE FIELDS WHICH ARE NEEDED TO OPEN                      08220000
SD87EXLS NI    DCBBFTEK,X'7F'           SET HIER. BIT TO ZERO    A32638 08224020
         OI    DCBBFTEK,X'04'           TURN HIERARCHY=0 BIT ON  A32638 08228020
         TM    DCBRECFM,UNKSW           IS INPUT RECFM=U         A39229 08228821
         BNO   PCIOK                    NO, DON'T TURN OFF PCI   A39229 08229621
         NI    DCBOPTCD,X'DF'           TURN OFF PCI BIT         A39229 08230421
PCIOK    EQU   *                                                 A39229 08231221
         CLC   DCBBLKSI(2),BBLK         TEST FOR LARGE BLOCKSIZE A32638 08232020
         BNH   SDBLK                    NOT TOO LARGE            A17618 08236018
         MVI   DCBBUFNO,X'01'           USE ONE BUFFER           A17618 08244018
SDBLK    CLC   DCBBLKSI(2),FOURY        TEST FOR ZERO IF NOT     A17618 08252018
         BCR   7,R14                    BRANCH TO FINISH OPEN           08260000
         CLC   DCBBUFL(2),FOURY         TEST FOR ZERO IF NOT            08280000
         BCR   7,R14                    BRANCH TO FINISH OPEN           08300000
*FIX SO DATASET CAN COMPLETE OPEN                                       08320000
         LA    R10,18                   GET SMALLEST LENGTH             08340000
         STH   R10,DCBLRECL            PUT IN LRECL FOR OPEN     000G   08370016
         OI    SORS1,LRERS+INERS        TURN ON NO LRECL AND IO ERROR   08380000
         TM    DCBRECFM,X'40'           CHECK FOR VARIABLE FMT   A51944 08383021
         BNO   NOTVAR                   BRANCH IF NOT VARIABLE   A51944 08386021
*                                       FMT                      A51944 08389021
         LA    R10,4(R10)               ADJUST FOR BDW           A51944 08392021
NOTVAR   STH   R10,DCBBLKSI             MINIMUM BLOCKSIZE        A51944 08395021
         BR    R14                      BRANCH TO ALLOW OPEN            08400000
*INPUT ERROR ROUTINE                                                    08420000
SD87EREX L     R14,WOSPS           GET ADDRESS OF PARLIST          SM0I 08421018
         USING  PARLIST,R14                                        SM0I 08422018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 08423018
         BE    CONTUE3             IF NONE-SKIP SMF PROCESSING     SM0I 08424018
         L     R14,PARSMF              GET ADDRESS OF SMF REC    A33218 08424320
         DROP  R14                                               A33218 08424620
         USING  SMFREC,R14                                         SM0I 08425018
         OI    SMFERIN,X'04'       SET GET INPUT ERROR INDICATOR ONSM0I 08426018
         OI    SMFERINJ,X'04'      SET JOB ERROR INDICATOR         SM0I 08427018
         DROP  R14                                                 SM0I 08428018
CONTUE3  L     R10,IEFSDM87        SET UP MESSAGE BASE             SM0I 08429018
         USING IEFSD87M,R10                                        VS0H 08434017
         LA    R12,MS32K                GET START OF MESSAGE       VS0H 08441017
         LA    R11,MS32E-MS32K          GET LENGTH OF MESSAGE      VS0H 08448017
         TM    SORS1,OVERT              IF OVER 32K ERROR THEN     VS0H 08455017
         BO    PTICC                    BRANCH TO GET C.C.         VS0H 08462017
         LA    R12,MSGET                GET START OF MESSAGE       VS0H 08469017
         LA    R11,MSGEE-MSGET          GET LENGTH OF MESSAGE      VS0H 08476017
         TM    SORS1,CNTGE              IF COULDNT GET CORE THEN   VS0H 08483017
         BO    PTICC                    BRANCH TO GET C.C.         VS0H 08490017
         OI    SORS1,INERS              TURN ON IO ERROR           VS0H 08495017
         LA    R12,FIRLN                GET START OF MESSAGE            08500000
         LA    R11,ENDLN-FIRLN          GET LENGTH OF MESSAGE           08520000
         B     PTICC                    BRANCH TO GET CONTROL CHARACTER 08540000
SEGER    L     R10,IEFSDM87             SET UP MESSAGE BASE        VS0H 08544017
         LA    R12,MSSEG                GET LOCATION OF MESSAGE    VS0H 08548017
         LA    R11,MSSEE-MSSEG          GET LENGTH OF MESSAGE      VS0H 08552017
         OI    SORS1,ERRSW              TURN ON BAD SEGMENT SW.    VS0H 08556017
*PUT IN THE ERROR CONTROL CHARACTER                                     08560000
PTICC    MVI   CONCH,C' '               GET ASA SPACE 1 OR POCKET 1     08580000
         MVI   SEGIN,0                  CLEAR SEGMENT              VS0H 08590017
         TM    SORS1,MACHS              TEST FOR MACHINE CNTRL CHAR.    08600000
         BZ    TOOLD                    BRANCH TO PUT MESSAGE IF NOT    08620000
         MVI   CONCH,X'09'              GET MACHINE SPACE 1             08640000
         TM    VARBA,PUNSH              TEST FOR PUNCH TYPE OUTPUT      08660000
         BZ    TOOLD                    BRANCH TO PUT MESSAGE IF NOT    08680000
         MVI   CONCH,X'01'              GET MACHINE POCKET 1            08700000
         TM    VARBA,FTFTW              TEST FOR 1442 PUNCH IF NOT      08720000
         BZ    TOOLD                    BRANCH TO PUT MESSAGE           08740000
         MVI   CONCH,X'81'              GET 1442 POCKET 1               08760000
         B     TOOLD                    BRANCH TO PUT MESSAGE           08780000
SMFPROC  L     R14,WOSPS           GET ADDRESS OF PARLIST          SM0I 08781018
         USING  PARLIST,R14                                        SM0I 08782018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 08783018
         BE    CONTUE4             IF NONE-SKIP SMF PROCESSING     SM0I 08784018
         L     R15,PARSMF          GET ADDRESS OF SMFREC           SM0I 08785018
         DROP   R14                                                SM0I 08786018
         USING  SMFREC,R15                                         SM0I 08787018
         L     R14,SMFDYCNT        GET SYSOUT COUNT ADDITION       SM0I 08788018
         MVC   SMFWORKA(4),SMFSOCTF   GET OLD SYSOUT COUNT-FORM    SM0I 08789018
         A     R14,SMFWORKA        UPDATE COUNT                    SM0I 08790018
         ST    R14,SMFWORKA        SAVE NEW COUNT                  SM0I 08791018
         MVC   SMFSOCTF(4),SMFWORKA   STORE NEW COUNT-FORM         SM0I 08792018
         XC    SMFDYCNT(4),SMFDYCNT    CLEAR SYSOUT COUNTER        SM0I 08793018
         DROP  R15                                                 SM0I 08794018
CONTUE4  BR    R1                  RETURN TO CALLER                SM0I 08795018
*CONSTANTS                                                              08800000
BBLK     DC    H'3000'                                           A17618 08810018
         DS    0F                                                       08820000
FOURY    DC    X'00000004'                                              08840000
BATEY    DC    X'08000000'              TO INDICATE DATASET INPUT  VS0H 08846017
ONSXA    DC    F'168'                   MINIMUM GOT CORE           VS0H 08852017
ADINE    DC    A(SD87EREX)                                              08860000
ADINF    DC    A(SD87EOFX)                                              08880000
ADING    DC    X'85'                    LAST ENTRY, DATA CONTROL BLOCK  08900000
         DC    AL3(SD87EXLS)            ADDRESS OF ROUTINE              08920000
SD88EXIT DC    V(IEFSD088)              TRANSITION ROUTINE              08940000
SD89EXIT DC    V(IEFSD089)              OUTPUT ROUTINE                  08960000
IEFSDM87 DC    V(IEFSD87M)              MESSAGE CONSTANTS               08980000
INVALADR DC    1F'0'                    INVALID ADDR CONSTANT    M5878  08981020
ONELY    DC    X'00000001'                                         VS0H 08982017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08984017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08986017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08988017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08990017
         DC    C'ZAPSZAPSZAPSZAPS'                                 VS0H 08992017
*********************************************************************** 09000000
*                                                                     * 09020000
*TITLE         IEFSD87M   MESSAGES FOR IEFSD087                       * 09040000
*                                                                     * 09060000
*********************************************************************** 09080000
IEFSD87M CSECT                                                          09100000
         DS    0F                                                       09120000
FIRLN    DC    C'IEF314I SYSIO'                                         09140000
ENDLN    EQU   *                                                        09160000
MS32K    DC    C'IEF229I LRECL EXCEEDS 32K'                        VS0H 09162017
MS32E    EQU   *                                                   VS0H 09164017
MSGET    DC    C'IEF32OI STORAGE NOT AVAILABLE'                    VS0H 09166017
MSGEE    EQU   *                                                   VS0H 09168017
MSSEG    DC    C'IEF321I SEGMENT INVALID'                          VS0H 09170017
MSSEE    EQU   *                                                   VS0H 09172017
         END                                                            09180000
