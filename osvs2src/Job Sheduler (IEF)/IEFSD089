         TITLE 'IEFSD089 - VMS SYSOUT OUTPUT ROUTINE'                   00020000
*                                                                       00023020
*          RELEASE 22 DELETIONS/CHANGES                                 00026020
*          RELEASE 21 DELETIONS/CHANGES                                 00029020
*          RELEASE 20 DELETIONS/CHANGES                                 00032020
*1043088840,089008,089016,089040,089070                          A38032 00033020
* 008400-029400,036600-044189                                    MAPMAC 00035020
*1043                                                            A35780 00037020
*1043087060-087240                                               A35926 00038020
 TITLE 'IEFSD089' - THE OUTPUT ROUTINE                                  00040000
*********************************************************************** 00060000
*                                                                     * 00080000
*STATUS CHANGE LEVEL 005                                                00100020
*                                                                     * 00120000
*FUNCTION OF THIS MODULE:                                             * 00140000
*                                                                     * 00160000
*    1. PUT THE RECORD TO BE OUTPUT INTO THE CORRECT FORM FOR THIS    * 00180000
*       SYSOUT WRITER AND PUT IT OUT.                                 * 00200000
*    2. MAKE UP AN ERROR RECORD IF A CONTROL CHARACTER IN AN INPUT    * 00220000
*       RECORD CAN NOT BE TRANSLATED INTO A MEANINGFUL CONTROL        * 00240000
*       CHARACTER FOR THE OUTPUT WRITER. THEN PUT IT OUT AND PASS     * 00260000
*       OVER THE INPUT DATASET THAT CONTAINED IT.                     * 00280000
*    3. IN CASE OF SYSOUT WRITER UNIT FAILURE REENQUEUE THE REST OF   * 00300000
*       THE JOB TO BE DONE SO THAT ANOTHER WRITER CAN FINISH IT AND   * 00320000
*       PASS ON AN INDICATION OF THE KIND OF ERROR THAT OCCURRED.     * 00340000
*    4. IN CASE THERE IS VARIABLE SPANNED INPUT OR OUTPUT          VS0H 00345017
*       THE SPAN ROUTINE (IEFSDXXX) IS USED TO MAKE UP THE         VS0H 00350017
*       RECORD TO BE PUT RATHER THAN THIS ROUTINE                  VS0H 00355017
*                                                                     * 00360000
*OPERATION OF THIS MODULE:                                            * 00380000
*                                                                     * 00400000
*    ENTRY POINT 1 - IEFSD089 WHICH IS BRANCHED TO FROM IEFSD086,     * 00420000
*        IEFSD087, AND IEFSD088.                                      * 00440000
*    INPUT AT ENTRY POINT 1:                                          * 00460000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00480000
*        ROUTINE.                                                     * 00500000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 00520000
*        ROUTINE.                                                     * 00540000
*                                                                     * 00560000
*    EXIT POINT 0.5 - BRANCH TO IEFSDXXX TO HANDLE THE RECORD      VS0H 00561017
*       OBTAINED BY GET. IT WILL BE MOVED INTO THE PUT AREA.       VS0H 00562017
*    INPUT AT EXIT POINT 0.5:                                      VS0H 00563017
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB    VS0H 00564017
*        ROUTINE.                                                  VS0H 00565017
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND  VS0H 00566017
*        DSB PROCESSING ROUTINES.                                  VS0H 00567017
*                                                                  VS0H 00568017
*    EXIT POINT 0.7 - BRANCH TO IEFSDXXX TO HANDLE THE AREA        VS0H 00569017
*       OBTAINED BY PUT. THE OUTPUT RECORDS WILL BE PUT            VS0H 00570017
*       FROM HERE.                                                 VS0H 00571017
*    EXIT POINT 0.5 - BRANCH TO IEFSDXXX TO INITIALIZE THE SPAN    VS0H 00572017
*        CONTROL AREA IF OUTPUT IS VARIABLE SPANNED.               VS0H 00573017
*    INPUT AT EXIT POINT 0.7:                                      VS0H 00574017
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB    VS0H 00575017
*        ROUTINE.                                                  VS0H 00576017
*        REGISTER 8 POINTS TO THE PARAMETER LIST GIVEN TO SMB AND  VS0H 00577017
*        DSB PROCESSING ROUTINES.                                  VS0H 00578017
*                                                                  VS0H 00579017
*    EXIT POINT 1 - BRANCH TO IEFSD088 TO MAKE MORE BLANK RECORDS FOR * 00580000
*        OUTPUT IN ORDER TO CLEAR OUT THE PUNCH.                      * 00600000
*    OUTPUT AT EXIT POINT 1:                                          * 00620000
*        REGISTER 7 POINTS TO THE WORK LIST USED BY DSB AND SMB       * 00640000
*        ROUTINE.                                                     * 00660000
*        REGISTER 8 POINTS TO THE WORK AREA FOR STANDARD OUTPUT       * 00680000
*        ROUTINE.                                                     * 00700000
*                                                                     * 00720000
*EXTERNAL ROUTINES:                                                   * 00740000
*                                                                     * 00760000
*    IEFSD088  THE TRANSITION ROUTINE                                 * 00780000
*    IEFSD89M  MESSAGES FOR IEFSD089                                  * 00800000
*   IEFSDXXX   SPANNED DATASETS ROUTINE                            VS0H 00810017
*                                                                     * 00820000
*                                                                     * 02960000
*                                                                     * 02980000
*ATTRIBUTES - REENTRANT                                               * 03000000
*                                                                     * 03020000
*********************************************************************** 03040000
*                                                                       03060000
*                        NEEDED DSECTS                                  03080000
*                                                                       03100000
R0       EQU   0                                                        03120000
R1       EQU   1                                                        03140000
R2       EQU   2                                                        03160000
R3       EQU   3                                                        03180000
R4       EQU   4                                                        03200000
R5       EQU   5                                                        03220000
R6       EQU   6                                                        03240000
R7       EQU   7                                                        03260000
R8       EQU   8                                                        03280000
R9       EQU   9                                                        03300000
R10      EQU   10                                                       03320000
R11      EQU   11                                                       03340000
R12      EQU   12                                                       03360000
R13      EQU   13                                                       03380000
R14      EQU   14                                                       03400000
R15      EQU   15                                                       03420000
*DEFINE DCB LABELS FOR DCB OF MAXIMUM SIZE                              03440000
         DCBD  DSORG=PS                                                 03460000
*DEFINE DCB AND OPEN AND CLOSE. (EODAD,SYNAD,OPEN,AND CLOSE TO ADD)     03480000
TODCB    DSECT                                                          03500000
         DCB   DSORG=PS,                                               *03520000
               MACRF=GL,                                               *03540000
               BUFNO=2                                                  03560000
SPOPN    OPEN  (0,INPUT),MF=L                                           03580000
SPCLO    CLOSE (0),MF=L                                                 03600000
SPEXL    DC    F'0'                     DCB EXIT LIST                   03620000
BODCB    EQU   *                                                        03640000
         IEFSDWKT                                                MAPMAC 03740020
         IEFSDSDR                                                MAPMAC 03840020
         IEFSDPAR                                                MAPMAC 03940020
         IEFSDSMF                                                MAPMAC 04040020
*EQUATES                                                                04420000
ASASW    EQU   4                        ASA CONTROL CHARACTER           04440000
MACSW    EQU   2                        MACHINE CONTROL CHARACTER       04460000
NOTLA    EQU   X'1'                     NOT LAST SEGMENT           VS0H 04465017
NOTFI    EQU   X'2'                     NOT FIRST SEGMENT          VS0H 04470017
VARSP    EQU   X'48'                    VARIABLE SPANNED RECFM     VS0H 04475017
VARSW    EQU   64                       VARIABLE SWITCH WHEN NOT FIXED  04480000
FIXSW    EQU   128                      FIXED SWITCH WHEN NOT VARIABLE  04500000
UNKSW    EQU   VARSW+FIXSW              UNKNOWN SWITCH                  04520000
*                                                                       04540000
*                   THIS ROUTINE HAS TWO PARTS. THE FIRST               04560000
*                   TRANSLATES THE CONTROL CHARACTER IF REQUIRED        04580000
*                   AND PUTS IT WHERE NEEDED. THE SECOND TAKES          04600000
*                   THE INPUT INFORMATION AND MAKES AN OUTPUT           04620000
*                   RECORD FROM IT.                                     04640000
*                                                                       04660000
*INITIALIZE                                                             04680000
IEFSD089 CSECT                                                          04700000
*3289047100-047150,089400                                          SM0I 04710018
*                                                                A20574 04715018
*                                                                 M2323 04717018
*                                                                 M2380 04718018
         BALR  R10,0                    SET BASE REGISTER               04720000
         USING *,R10                                                    04740000
         USING WORKLST,R7               SET PARAMETER BASE              04760000
         USING WKSOR,R8                 SET WORK AREA BASE              04780000
         USING IHADCB,R5                SET OUTPUT DCB BASE             04800000
         ST    R14,BALRG                SAVE RETURN REGISTER            04820000
*PUT IN OUTPUT SYNAD ROUTINE ADDRESS                                    04840000
         L     R5,DCBOT                 GET OUTPUT DCB                  04860000
         MVC   DCBSYNAD+1(3),ADOUE+1    MOVE IN OUTPUT ERROR ROUTINE    04880000
*IS A SUBSEQUENT SEGMENT BEING HANDLED                             VS0H 04885017
         TM    SEGIN,NOTFI              IF SUBSEQUENT SEGMENT THEN VS0H 04890017
         BO    OUTPT                    AVOID C.C. FIX             VS0H 04895017
*DOES THE OUTPUT RECORD REQUIRE A CONTROL CHARACTER                     04900000
         TM    DCBRECFM,ASASW+MACSW     TEST FOR NO CONTROL CHAR.       04920000
         BZ    OUTPT                    BRANCH TO OUTPUT RECORD         04940000
*                                                                       04960000
*                        FIRST PART OF IEFSD089                         04980000
*                   IF THE INPUT DATASET HAS MACHINE TYPE               05000000
*                   CONTROL CHARACTERS AND THE OUTPUT DATASET           05020000
*                   HAS ASA CONTROL CHARACTERS, OR VICA VERSA,          05040000
*                   THEN THE INPUT TYPE MUST BE TRANSLATED              05060000
*                   TO THE OUTPUT TYPE. THERE ARE TWO KINDS             05080000
*                   OF TRANSLATIONS, THOSE FOR PRINTER AND              05100000
*                   THOSE FOR PUNCHES. THERE ARE TWO DIFFERENT          05120000
*                   KINDS OF MACHINE CONTROL CHARACTERS FOR             05140000
*                   PUNCHES SO IF THE WRITER IS A 1442 PUNCH            05160000
*                   A SOMEWHAT DIFFERENT TRANSLATION IS USED.           05180000
*                                                                       05200000
*IS THE OUTPUT UNIT OF PRINTER TYPE                                     05220000
         SR    R4,R4              CLEAR FOR C/C                   M2380 05230018
         IC    R4,CONCH                 GET CONTROL CHARACTER           05240000
         TM    VARBA,PUNSH              TEST FOR PUNCH TYPE IF NOT      05260000
         BZ    TTAMC                    BRANCH TO TRANSLATE FOR PRINTER 05280000
*                                                                       05300000
*                   AFTER THE CONTROL CHARACTER IS OBTAINED             05320000
*                   IT MUST BE PUT IN THE CORRECT RECORD.               05340000
*                   MACHINE CONTROL CHARACTER FOR THE PRINTER           05360000
*                   ARE USED TO COMMAND SPACING OR SKIPPING             05380000
*                   AFTER THE LINE IS PRINTED. ASA CONTROL              05400000
*                   CHARACTERS FOR THE PRINTER ARE USED TO              05420000
*                   COMMAND SPACING OR SKIPPING BEFORE THE              05440000
*                   LINE IS PRINTED.                                    05460000
*                   SO IF THE INPUT FORMAT IS MACHINE AND THE           05480000
*                   OUTPUT IS ASA THE CONTROL CHARACTER FROM            05500000
*                   A RECORD MUST BE ATTACHED TO THE FOLLOWING          05520000
*                   RECORD IN ORDER TO MAKE ITS SPACING OCCUR           05540000
*                   BETWEEN THE RECORD AND THE FOLLOWING ONE.           05560000
*                   ON THE OTHER HAND, IF THE INPUT FORMAT IS           05580000
*                   ASA AND THE OUTPUT IS MACHINE THE CONTROL           05600000
*                   CHARACTER FROM A RECORD MUST BE ATTACHED            05620000
*                   TO THE PREVIOUS RECORD IN ORDER TO MAKE             05640000
*                   ITS SPACING OCCUR BEFORE THE RECORD.                05660000
*                   WHEN INPUT RECORDS HAVE NO CONTROL CHARACTERS       05680000
*                   ASA CHARACTERS ARE MADE FOR THEM. THESE             05700000
*                   ARE TREATED JUST AS REGULAR ASA CHARACTERS.         05720000
*                                                                       05740000
*IS THERE A TRANSLATION FROM ASA TO MACHINE                             05760000
         TM    DCBRECFM,ASASW           TEST FOR ASA CNTRL CHAR. OUTPUT 05780000
         BO    TFOAS                    BRANCH TO OUTPUT ASA IF SO      05800000
         TM    SORS1,MACHS              TEST FOR MACH CNTRL CHAR INPUT  05820000
         BO    PCHTEST            GO VALIDITY-CHECK C/C          A20574 05840018
*TRANSLATE ASA TO MACHINE FOR PUNCH                                     05860000
         LA    R4,X'01'                 GET 2540 STACKER 1              05880000
         CLI   CONCH,C'W'               COMPARE C.C. TO W               05900000
         BNE   TFORT                    BRANCH AS STACKER 1 IS COMMAND  05920000
         LA    R4,X'41'                 GET 2540 STACKER 2              05940000
TFORT    TM    VARBA,FTFTW              TEST FOR 1442 IF NOT            05960000
         BZ    CCTTR                    BRANCH AROUND GETTING 1442 C.C. 05980000
         LA    R4,X'80'(R4)             CHANGE 2540 CHAR. TO 1442 FORM  06000000
         B     CCTTR                    BRANCH OUT AS TRANSLATE DONE    06020000
*IS THERE A TRANSLATION FROM MACHINE TO ASA                             06040000
TFOAS    TM    SORS1,MACHS              TEST FOR MACH CNTRL CHAR INPUT  06060000
         BZ    CCTTR                    BRANCH OUT BOTH C.C. ASA        06080000
*IS THE MACHINE CHARACTER LEGITIMATE                                    06100000
         LA    R4,C'V'                  GET ASA POCKET 1                06120000
         TM    CONCH,X'1E'              TEST FOR ILLEGAL BITS IF SO     06140000
         BNE   BCCCO                    BRANCH TO CORRECTIVE            06160000
         TM    CONCH,X'01'              TEST FOR NECESSARY BIT IF NOT   06180000
         BZ    BCCCO                    BRANCH TO CORRECTIVE            06200000
         TM    VARBA,FTFTW              TEST FOR 1442 IF NOT            06220000
         BZ    TESPU                    BRANCH TO 2540 TESTING          06240000
         TM    CONCH,X'80'              TEST FOR NECESSARY BIT IF NOT   06260000
         BZ    BCCCO                    BRANCH TO CORRECTIVE            06280000
         B     TFOMC                    BRANCH TO TRANSLATE             06300000
TESPU    TM    CONCH,X'C0'              TEST FOR ILLEGAL PATTERN IF SO  06320000
         BO    BCCCO                    BRANCH TO CORRECTIVE            06340000
*TRANSLATE MACHINE TO ASA FOR PUNCH                                     06360000
TFOMC    LA    R4,C'V'                  GET POCKET 1                    06380000
         TM    CONCH,X'40'              TEST FOR POCKET 2 IF NOT        06400000
         BZ    CCTTR                    BRANCH OUT AS TRANSLATE DONE    06420000
         LA    R4,C'W'                  GET POCKET 2                    06440000
*SAVE CONTROL CHARACTER FOR THIS RECORD                                 06460000
CCTTR    STC   R4,SAVEC                                                 06480000
         B     OUTPT                    BRANCH TO OUTPUT                06500000
*BAD CONTROL CHARACTER CORRECTIVE                                       06520000
BCCCO    STC   R4,SAVEC                 WILL SPACE 1 BEFORE LINE        06540000
         MVI   SEGIN,0                  MAKE INPUT SEGMENT 0       VS0H 06550017
         L     R11,IEFSDM89             SET UP MESSAGE BASE             06560000
         USING IEFSD89M,R11                                             06580000
*SET UP MESSAGE                                                         06600000
         LA    R12,FIRLN                GET START OF MESSAGE            06620000
         LA    R11,ENDLN-FIRLN          GET LENGTH OF MESSAGE           06640000
         STM   R11,R12,INLSF            SAVE MESSAGE PARAMETERS         06660000
*TURN ON PERMANENT IO INPUT ERROR SWITCH                                06680000
         OI    SORS1,INERS                                              06700000
         B     OUTPT                    BRANCH TO PUT OUT MESSAGE       06720000
*             THIS ROUTINE TESTS TO SEE IF THE 'ONE' BIT IS             06720518
*             ON IN THE CONTROL CHARACTER.  IF IT IS NOT, THE           06721018
*             CHARACTER IS INVALID.  IF THE 'ONE' BIT IS ON,            06721518
*             THE CHARACTER IS DIVIDED BY TWO AND TESTED FOR            06722018
*             VALIDITY.  THE FUNCTION BYTES IN THE TRANSLATE            06722518
*             TABLE REFLECT THE FACT THAT THE ARGUMENT BYTE HAS         06723018
*             BEEN SHIFTED RIGHT ONE POSITION.                          06723518
PTRTEST  TM    CONCH,X'01'        DOES C/C HAVE NECESSARY BIT    A20574 06724018
         BZ    ERRTNE1            ILLEGAL C/C                    A20574 06724518
         SRL   R4,1               DIVIDE C/C BY 2                A20574 06725018
         STC   R4,SAVEC           PREPARE FOR TEST               A20574 06725518
         TRT   SAVEC(1),PRINTRT   IS C/C VALID                   A20574 06726018
         BNZ   ERRTNE1            INVALID                        A20574 06726518
         MVC   SAVEC(1),CONCH     SAVE GOOD C/C                  A20574 06727018
         B     OUTPT              GO TO PUT OUT RECORD           A20574 06727518
ERRTNE1  MVI   SAVEC,X'09'        MAKE SPACE 1 THE C/C           A20574 06728018
         B     OUTPT              GO PUT OUT RECORD              A20574 06728518
PCHTEST  TM    CONCH,X'01'        TEST FOR NECESSARY C/C BIT     A20574 06729018
         BZ    ERRTNE2            ILLEGAL MACHINE C/C            A20574 06729518
         SRL   R4,1               DIVIDE C/C BY 2                A20574 06730018
         STC   R4,SAVEC           PREPARE FOR VALIDITY CHECK     A20574 06730518
         TM    VARBA,FTFTW        TEST FOR 1442 PUNCH            A20574 06731018
         BO    TST1442            GO TO VALIDITY CHECK           A20574 06731518
         TRT   SAVEC(1),TR2540    IS C/C VALID FOR 2540          A20574 06732018
         BNZ   SS2540             GO TO ERROR RTNE               A20574 06732518
MOVECC   MVC   SAVEC(1),CONCH     SAVE GOOD C/C                  A20574 06733018
         B     OUTPT              GO TO PUT OUT RECORD           A20574 06733518
ERRTNE2  TM    VARBA,FTFTW        TEST FOR 1442 PUNCH            A20574 06734018
         BZ    SS2540             NOT 1442                       A20574 06734518
SS1442   MVI   SAVEC,X'81'        SELECT STACKER 1 FOR 1442      A20574 06735018
         B     OUTPT              GO TO PUT OUT RECORD           A20574 06735518
SS2540   MVI   SAVEC,X'01'        SELECT STACKER 1 FOR 2540      A20574 06736018
         B     OUTPT              GO TO PUT OUT RECORD           A20574 06736518
TST1442  TRT   SAVEC(1),TR1442    IS C/C VALID FOR 1442          A20574 06737018
         BNZ   SS1442             INVALID-GO TO ERROR RTNE       A20574 06737518
         B     MOVECC             GO SAVE THE C/C                A20574 06738018
*IS THERE A TRANSLATION FROM ASA TO MACHINE                             06740000
TTAMC    TM    DCBRECFM,ASASW           TEST FOR ASA CNTRL CHAR. OUTPUT 06760000
         BO    TFIMA                    BRANCH TO OUTPUT ASA IF SO      06780000
         TM    SORS1,MACHS              TEST FOR MACH CNTRL CHAR INPUT  06800000
         BO    PTRTEST            GO TEST C/C FOR PRINTER        A20574 06820018
*TRANSLATE ASA TO MACHINE FOR PRINTER                                   06840000
         LA    R4,X'09'                 PUT IN ASA SPACE1               06860000
         CLI   CONCH,C' '               TEST FOR IT IF SO               06880000
         BE    CCTPR                    BRANCH OUT AS DONE              06900000
         LA    R4,X'11'                 SPACE 2                         06920000
         CLI   CONCH,C'0'                                               06940000
         BH    SKICH                    BRANCH TO SEE IF SKIP 1 TO 9    06960000
         BE    CCTPR                                                    06980000
         LA    R4,X'19'                 SPACE 3                         07000000
         CLI   CONCH,C'-'                                               07020000
         BE    CCTPR                                                    07040000
         LA    R4,X'01'                 SPACE 0                         07060000
         CLI   CONCH,C'+'                                               07080000
         BE    CCTPR                                                    07100000
         LA    R4,X'D1'                 SKIP TO CHANNEL 10              07120000
         CLI   CONCH,C'A'                                               07140000
         BE    CCTPR                                                    07160000
         LA    R4,X'D9'                 SKIP TO CHANNEL 11              07180000
         CLI   CONCH,C'B'                                               07200000
         BE    CCTPR                                                    07220000
         LA    R4,X'E1'                 SKIP TO CHANNEL 12              07240000
         CLI   CONCH,C'C'                                               07260000
         BE    CCTPR                                                    07280000
DEFLT    LA    R4,X'09'                 PUT IN ASA SPACE 1 AS DEFAULT   07300000
         B     CCTPR                    BRANCH OUT AS DONE              07320000
SKICH    CLI   CONCH,C'9'               TEST FOR CHARACTER IS DEFAULT   07340000
         BH    DEFLT                    BRANCH TO SPACE 1 CHAR. IF SO   07360000
         LA    R4,X'01'                 PUT IN BASIC SKIP CHARACTER     07380000
         IC    R3,CONCH                 GET ASA CHARACTER               07400000
         SLL   R3,3                     ALIGN THEM TO MAKE MACH. CHAR.  07420000
         OR    R4,R3                    MAKE MACHINE CHARACTER          07440000
*PUT CONTROL CHARACTER IN PREVIOUS RECORD                               07460000
CCTPR    L     R3,LOCAT                 GET C.C. POSITION FROM PREVIOUS 07480000
         STC   R4,0(R3)                 PUT CONTROL CHARACTER THERE     07500000
         B     OUTPT                    BRANCH TO OUTPUT RECORD         07520000
*IS THERE A TRANSLATE FROM MACHINE TO ASA                               07540000
TFIMA    TM    SORS1,MACHS              TEST FOR MACH CNTRL CHAR INPUT  07560000
         BZ    CCTTR                    BRANCH OUT BOTH C.C. ASA        07580000
*IS THE MACHINE CHARACTER LEGITIMATE                                    07600000
         LA    R4,C' '                  GET ASA SPACE 1                 07620000
         STC   R4,SAVED                 USE IT AS GUIDE                 07640000
         IC    R3,CONCH                 GET OFFSET FROM MACH CNTRL CHAR 07660000
         N     R3,ONETW                 SAVE -1111--- BITS ONLY         07680000
         SRL   R3,3                     PUT THESE IN OFFSETTING FORM    07700000
         TM    CONCH,X'02'                 TEST FOR ______1_ IF NOT     07720000
         BZ    REGTS                       BRANCH TO NORMAL TEST        07740000
         NI    CONCH,X'FD'                 TURN OFF IMMEDIATE BIT       07760000
         L     R12,INLOC                   FIND LOCATION OF RECORD      07780000
         L     R15,WOXXX                IF SPANNING USED           VS0H 07785017
         LTR   R15,R15                                             VS0H 07790017
         BNZ   REGTS                    THEN DONT SUPRESS PRINT    VS0H 07795017
         MVI   0(R12),X'40'                PUT IN ONE BLANK             07800000
         MVC   INLSF(4),ONELY              MAKE LENGTH OF RECORD 1      07820000
REGTS    TM    CONCH,X'06'                 TEST FOR _____00_ IF NOT     07840000
         BNE   BCCCO                    BRANCH TO CORRECTIVE            07860000
         TM    CONCH,X'01'              TEST FOR -----001 IF NOT        07880000
         BZ    BCCCO                    BRANCH TO CORRECTIVE            07900000
         TM    CONCH,X'E0'              TEST FOR 000--001 IF SO         07920000
         BZ    TMAPR                    BRANCH TO TRANSLATE             07940000
         CLI   CONCH,X'89'              TEST FOR 10001001 OR HIGHER     07960000
         BL    BCCCO                    BRANCH TO CORRECTIVE IF NOT     07980000
         CLI   CONCH,X'E1'              TEST FOR 1110001 OR LOWER       08000000
         BH    BCCCO                    BRANCH TO CORRECTIVE IF NOT     08020000
         LA    R3,3(R3)                 FIX OFFSETTING ADDRESS          08040000
*TRANSLATE MACHINE TO ASA FOR PRINT                                     08060000
TMAPR    IC    R4,TRMAT(R3)             GET THE ASA CHARACTER           08080000
*SAVE CONTROL CHARACTER FOR FOLLOWING RECORD                            08100000
         STC   R4,SAVED                                                 08120000
*                                                                       08140000
*                        SECOND PART OF IEFSD089                        08160000
*                   THE INPUT RECORD IS IN STANDARD FORM WITH           08180000
*                   CONTROL CHARACTER TAKEN CARE OF, LENGTH             08200000
*                   SAVED AND START OF THE RECORD PROPER SAVED.         08220000
*                   THIS WILL BE PUT IN THE FORM NECESSARY FOR          08240000
*                   OUTPUT; VARIABLE OR FIXED, WITH CONTROL             08260000
*                   CHARACTER OR NOT AS REQUIRED BY THE FORMAT          08280000
*                   OF THE OUTPUT DATASET.                              08300000
*                                                                       08320000
*IS THERE A SPANNING MODULE                                        VS0H 08322017
OUTPT    L     R15,WOXXX                GET ADDRESS OF SPANNING MODVS0H 08324017
         LTR   R15,R15                  IF IT IS 0 THEN            VS0H 08326017
         BZ    OUTPX                    AVOID SPANNING             VS0H 08328017
         BALR  R14,R15                  GO TO SPANNING MODULE      VS0H 08330017
         B     *+4(R15)                 USE RETURN CODE FOR BRANCH VS0H 08332017
         B     PUTLG                    BRANCH TO PUT FOR SPANNING VS0H 08334017
         B     TBCTS                    BRANCH TO GET FOR SPANNING VS0H 08336017
*IS THIS FIXED OUTPUT                                                   08340000
OUTPX    TM    DCBRECFM,UNKSW           IF UNKNOWN OUTPUT THEN     VS0H 08360017
         BO    GSNFR                    BRANCH TO NON FIXED ROUTINE     08380000
         TM    DCBRECFM,FIXSW           TEST FOR FIXED OUTPUT IF SO     08400000
         BO    GSOFX                    BRANCH TO MAKE FIXED OUTPUT     08420000
*GET SIZE OF OUTPUT RECORD AND ITS SIZE WITHOUT CONTROL INFORMATION     08440000
GSNFR    L     R2,INLSF                 GET INPUT SIZE FOR START        08460000
         LR    R3,R2                                                    08480000
         SR    R1,R1                    GET 0 TO MODIFY WITH       VS0H 08490017
         TM    DCBRECFM,ASASW+MACSW     TEST FOR OUTPUT HAS NO C.C.     08500000
         BZ    TFVAR                    BRANCH AROUND CHANGING LENGTH   08520000
         LA    R2,1(R2)                 MAKE FULL LENTH 1 MORE          08540000
TFVAR    TM    DCBRECFM,UNKSW           TEST FOR UNKNOWN OUTPUT IF SO   08560000
         BNM   TFSMR                    BRANCH AROUND FIX LENGTH   VS0H 08570017
         S     R1,FOURY                 GET -4 TO MODIFY WITH      VS0H 08580017
         LA    R2,4(R2)                 MAKE FULL LENGTH 4 MORE         08600000
TFSMR    C     R2,ATEEN                 TEST FOR RECORDS UNDER 18 LONG  08620000
         BNL   TFOBS                    BRANCH AROUND CHANGING LENGTH   08640000
         SR    R3,R2                                                    08660000
         LA    R2,18                    MAKE FULL LENGTH 18 AND         08680000
         AR    R3,R2                    ADJUST LENGTH PROPER            08700000
TFOBS    TM    DCBBLKSI,X'F0'           IS BLOCKSIZE IN DCB      A35926 08705020
         BO    TFBUF                    IF NOT USE BUFFER SIZE   A35926 08710020
         AH    R1,DCBBLKSI              GET BLOCKSIZE TO COMPARE A35926 08715020
         B     TFOBT                    BYPASS BUFFER SIZE       A35926 08720020
TFBUF    AH    R1,DCBBUFL               GET BUFFER LENGTH        A35926 08725020
TFOBT    CR    R2,R1                    TEST REC. TOO BIG FOR BUFF VS0H 08730017
         BNH   SVRLP                    BRANCH AROUND CHANGING LENGTH   08740000
         SR    R3,R2                                                    08760000
         LR    R2,R1                    MAKE FULL LENGTH BUFF. SIZEVS0H 08780017
         AR    R3,R2                    ADJUST LENGTH PROPER            08800000
SVRLP    STH   R2,DCBLRECL              SAVE RECORD LENGTH FOR PUT      08820000
*PUT LOGICAL WITH RECORD SIZE                                           08840000
PUTLG    LR    R1,R5                    GET OUTPUT DCB ADDRESS          08860000
         PUT   (1)                                                      08880000
         B     REGPT                    GO TO SMF ROUTINE        A38032 08880520
*IS THERE SPANNING TO BE DONE                                      VS0H 08881017
CHKSPAN  EQU   *                                                 A38032 08881520
         L     R15,WOXXX                GET ADDRESS OF SPANNING    VS0H 08882017
         LTR   R15,R15                  IF IT IS ZERO, THEN        VS0H 08883017
         BZ    CONTIN                   AVOID SPANNING           A38032 08884020
*BRANCH TO SPANNING ROUTINE                                        VS0H 08885017
         O     R15,BFOUR                IND. BRANCH TO AFTER PUT   VS0H 08886017
         BALR  R14,R15                                             VS0H 08887017
         B     *+4(R15)                 USE RETURN CODE FOR BRANCH VS0H 08888017
         B     PUTLG                    BRANCH TO PUT FOR SPANNING VS0H 08889017
         B     TBCTS                    BRANCH TO TRANSITION ROUT. VS0H 08890017
*NORMAL ROUTINE USED WHEN NO SPANNING                              VS0H 08891017
REGPT    EQU   *                                                   VS0H 08892017
         LR    R4,R1                    SAVE OUTPUT LOCATION            08900000
         LR    R11,R0                   SAVE REM BUF LEN         A38032 08900120
* IS THIS PCP                                                     M0023 08900218
         L     R1,16               GET CVT ADDRESS                M0023 08900418
         TM    116(R1),X'40'       IF PCP THEN                    M0023 08900618
         BO    BYPSMF                   BYPASS SMF               A38032 08900820
         L     R1,WOSPS            GET ADDRESS OF PARLIST          SM0I 08901018
         LTR   R1,R1               TEST FOR DIRECT WRITER          O099 08901319
         BNP   BYPSMF                   YES, BYPASS SMF          A38032 08901620
         USING  PARLIST,R1                                         SM0I 08902018
         CLI   PARSMF+3,X'FF'      CHECK FOR SMF PROCESSING        SM0I 08903018
         BE    BYPSMF                   BYPASS SMF               A38032 08904020
         L     R14,PARSMF          GET ADDRESS OF SMFREC           SM0I 08905018
         LTR   R14,R14                                             SM0I 08906018
         BZ    BYPSMF                   BYPASS SMF               A38032 08907020
         DROP  R1                                                  SM0I 08908018
         USING  SMFREC,R14                                         SM0I 08909018
         L     R15,SMFDYCNT        GET SYSOUT COUNTER              SM0I 08910018
         A     R15,ONELY           ADD ONE TO SYSOUT COUNTER       SM0I 08911018
         ST    R15,SMFDYCNT        STORE NEW COUNT IN SMFREC       SM0I 08912018
         DROP  R14                                                 SM0I 08913018
BYPSMF   LR    R0,R11                   RESTORE BUF LEN          A38032 08914020
         LR    R1,R4                    RESTORE OUTPUT LOCTN     A38032 08915020
         B     CHKSPAN                  CHECK FOR SPANNED RCDS   A38032 08916020
*IS THIS VARIABLE OUTPUT                                                08920000
CONTIN   TM    DCBRECFM,FIXSW      TEST FOR FIXED OUTPUT-IF SO     SM0I 08940018
         BO    TFOCC                    BRANCH AROUND MAKE LENGTH FIELD 08960000
         TM    DCBRECFM,VARSW           TEST FOR VARIABLE OUTPUT   8162 08966017
         BZ    TFOCC                    DO NOT CHANGE LENGTH       8162 08972017
*PUT LENGTH INTO OUTPUT RECORD                                          08980000
         ST    R2,OTLWR                 SAVE LENGTH FOR 4 BYTE HEADER   09000000
         MVC   0(2,R4),OTLWR+2          PUT IN LENGTH                   09020000
         MVC   2(2,R4),BLANS            PUT IN BLANKS                   09040000
         LA    R4,4(R4)                 FIX LOCATION WHERE RECORD MOVED 09060000
*IS THERE AN OUTPUT CONTROL CHARACTER                                   09080000
TFOCC    TM    DCBRECFM,ASASW+MACSW     TEST FOR CONTROL CHARACTER      09100000
         BZ    MRBTR                    BRANCH AROUND C.C. FIX IF NOT   09120000
*FIX CONTROL CHARACTER                                                  09140000
         ST    R4,LOCAT                 SAVE LOCATION OF CONTROL CHAR.  09160000
         MVC   0(1,R4),SAVEC            PUT CONTROL CHAR. IN RECORD285  09180000
         MVC   SAVEC(1),SAVED           GET NEXT CONTROL CHAR.          09200000
         LA    R4,1(R4)            FIX LOCATION WHERE RECORD MOVED 285  09220000
*MUST RECORD BE TRUNCATED                                               09240000
MRBTR    LM    R11,R12,INLSF            GET INPUT INFORMATION           09260000
         LR    R1,R11                   INPUT LENGTH MADE AMOUNT MOVED  09280000
         CR    R3,R11                   TEST FOR INPUT RECORD TOO LONG  09300000
         BNL   MVIRC                    BRANCH AROUND USE OUTPUT LENGTH 09320000
*TRUNCATE RECORD                                                        09340000
         LR    R1,R3                    OUTPUT LENGTH MADE AMOUNT MOVED 09360000
*MOVE IN RECORD                                                         09380000
MVIRC    BCT   R1,*+4              REDUCE LENGTH BY 1 FOR MOVE     4997 09390017
         LTR   R1,R1               TEST FOR NEG LNGTH RECORD       4997 09400017
         BM    MVRRI+4             PROVIDE A BLANK RECORD          4997 09410017
TFOTF    C     R1,TWFIS                 TEST FOR OVER 256 TO BE MOVED   09420000
         BL    MVRRI                    BRANCH TO MOVE REST OF BYTES    09440000
         MVC   0(256,R4),0(R12)         MOVE IN 256 BYTES               09460000
         S     R1,TWFIS                 SUBTRACT FROM AMOUNT TO MOVE    09480000
         A     R4,TWFIS                 ADD TO LOCATION MOVED TO        09500000
         A     R12,TWFIS                ADD TO LOCATION MOVED FROM      09520000
         B     TFOTF                    BRANCH TO MOVE MORE             09540000
MVRRI    EX    R1,MVCHR                 MOVE LAST INFORMATION           09560000
*MUST RECORD BE PADDED                                                  09580000
         CR    R3,R11                   TEST FOR INPUT RECORD TOO SHORT 09600000
         BNH   TBCTS                    BRANCH IF NO PADDING            09620000
*PUT IN PADDING                                                         09640000
         LA    R4,1(R1,R4)              FIND LOCATION TO BLANK          09660000
         LR    R1,R3                    FIND NUMBER OF BLANKS TO MOVE   09680000
         SR    R1,R11                                                   09700000
         BCT   R1,*+4                   REDUCE LENGTH BY 1              09720000
         MVI   0(R4),X'40'              PUT IN 1 BLANK                  09740000
         S     R1,ONELY                 REDUCE LENGTH BY 1              09760000
         BM    TBCTS                    BRANCH TO DONE IF MINUS         09780000
TFVTF    C     R1,TWFIS                 TEST FOR OVER 256 BLANKS        09800000
         BL    PIRBL                    BRANCH TO PUT IN REST OF BLANKS 09820000
         MVC   1(256,R4),0(R4)          MOVE IN 256 BLANKS              09840000
         S     R1,TWFIS                 SUBTRACT FROM AMOUNT OF BLANKS  09860000
         A     R4,TWFIS                 ADD TO LOCATION BLANKED         09880000
         B     TFVTF                    BRANCH TO PUT IN MORE BLANKS    09900000
PIRBL    EX    R1,BLKAR                 PUT IN LAST BLANKS              09920000
*IS THE TRANSITION WRITE SWITCH ON                                      09940000
TBCTS    L     R14,BALRG                RESTORE RETURN ADDRESS          09960000
         SR    R2,R2                    GET BUFFER COUNT                09980000
         IC    R2,BCTSW                                                 10000000
         LTR   R2,R2                    TEST FOR SWITCH ON IF NOT       10020000
         BCR   8,R14                    BRANCH OUT AS DONE              10040000
*HAVE ALL TRANSITION WRITES BEEN DONE                                   10060000
         L     R15,SD88EXIT             GET ADDRESS FOR EXIT            10080000
         S     R2,ONELY                 REDUCE COUNT BY 1               10100000
         STC   R2,BCTSW                 SAVE REDUCED COUNT              10120000
         BCR   2,R15                    BRANCH TO PUT AGAIN IF NOT 0    10140000
         BR    R14                      BRANCH OUT AS DONE              10160000
*GET SIZE OF OUTPUT RECORD FOR FIXED OUTPUT                             10180000
GSOFX    LH    R2,DCBLRECL              GET FIXED RECORD SIZE FOR START 10200000
         LR    R3,R2                                                    10220000
         TM    DCBRECFM,ASASW+MACSW     TEST FOR OUTPUT HAS NO C.C.     10240000
         BZ    PUTLG                    BRANCH AROUND CHANGING LENGTH   10260000
         BCT   R3,PUTLG                 MAKE LENGTH PROPER 1 LESS       10280000
         B     PUTLG                    BRANCH TO PUT                   10300000
*TURN ON UNRECOVERABLE ERROR SWITCH                                     10320000
SD89EREX L     R1,WOSAP                 GET ADDRESS ERROR RETURN PUT AT 10340000
         MVI   19(R1),8                 INDICATE IO OUTPUT ERROR        10360000
         L     R14,BALRG                RESTORE RETURN ADDRESS          10380000
         BR    R14                      BRANCH BACK                     10400000
*CONSTANTS                                                              10420000
PRINTRT  DC    4XL4'00000101'     TRANSLATE TABLE FOR PRINTER    A20574 10421018
         DC    10XL4'01010101'                                   A20574 10422018
         DC    2XL4'01000101'                                    A20574 10423018
         DC    XL4'01010101'                                     A20574 10424018
         DC    12XL4'00000101'                                    M2323 10425018
         DC    3XL4'01000101'                                    A20574 10426018
         DS    0F                                                       10427018
TR1442   DC    4XL32'00000101010101010101010101010101000101010101010101X10428018
               01010101010101'                                          10429018
TR2540   DC    6XL16'00010101000101010101010101010101'                  10430018
         DC    2XL16'01010101010101010101010101010101'                  10431018
         DS    0F                                                       10440000
ONELY    DC    X'00000001'              ONE                             10460000
ATEEN    DC    X'00000012'              EIGHTEEN                        10480000
TWFIS    DC    X'00000100'              HIGHEST AMOUNT TO MOVE          10500000
ONETW    DC    X'00000078'              CONSTANT FOR TRANSLATING        10520000
BFOUR    DC    X'04000000'              INDICATE GO TO AFTER PUT   VS0H 10526017
FOURY    DC    X'00000004'              FOUR                       VS0H 10532017
ADOUE    DC    A(SD89EREX)              OUTPUT ERROR ROUTINE ADDRESS    10540000
SD88EXIT DC    V(IEFSD088)              TRANSITIONAL ROUTINE            10560000
IEFSDM89 DC    V(IEFSD89M)              MESSAGE CONSTANTS               10580000
TRMAT    DC    C'+ 0-'                  TABLE USED WHEN TRANSLATING     10600000
         DC    C'1234'                  MACHINE                         10620000
         DC    C'5678'                  TO                              10640000
         DC    C'9ABC'                  ASA                             10660000
BLANS    DC    C'00'                    TWO ZEROS                  VS0H 10680017
MVCHR    MVC   0(1,R4),0(R12)           INSTRUCTION USED TO MOVE RECORD 10700000
BLKAR    MVC   1(1,R4),0(R4)            INSTRUCTION USED TO BLANK OUT   10720000
*********************************************************************** 10740000
*                                                                     * 10760000
*TITLE         IEFSD89M   MESSAGES FOR IEFSD089                       * 10780000
*                                                                     * 10800000
*********************************************************************** 10820000
IEFSD89M CSECT                                                          10840000
         DS    0F                                                       10860000
FIRLN    DC    C'IEF316I CCBAD'                                         10880000
ENDLN    EQU   *                                                        10900000
         END                                                            10920000
