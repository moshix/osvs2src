RELO  TITLE 'HEWLRELO-OBJECT MODULE PROCESSING AND RELOCATION'          00020021
*STATUS - CHANGE LEVEL 20                                             * 00040021
*    INCREMENTAL 288 - W-CON ADDED        INC288                        00060021
*A073800                                                         A39336 00062037
*C244900-245000                                                  A39336 00064037
*                                                                A46172 00066037
*                                                                A47048 00068037
*                                                               SA49491 00070037
*                                                               SA56381 00072037
*              APAR FIX 27445 - ZERO/LENGTH CSECTS OKAY                 00080021
*    APAR  30142   DUPLICATE CSECTS            $256300-256400,257200    00100021
*                                              $257400-258000           00120021
*    APAR  30162   BAD IEW1182 MSG             $119100,131200           00140021
*                                                               YA00226 00150001
*                                                               YA00379 00152001
*                                                                YM5575 00154001
*I084200,120900,278300,A128200,278200,M298220-298340            ZA01335 00156002
*A062500-062520                                                 OZ04727 00158037
*DEL062430--062680 REMOVE CODE FOR Z04727(UZ2075)              @ZA10552 00159037
*ADD0624100,0624200  APAR  Z16098 DUPLICATE LRS                @ZA16098 00159537
*D062500-062600                                                @ZA29882 00159737
*        TSO CHANGES FOR IDENTIFY AND INCORE DATA SET                 * 00160021
*FUNCTION/OPERATION:                                                  * 00180021
*        1)HEWLRELO-DETERMINES RECORD TYPE,THEN PASSES CONTROL TO THE * 00200021
*              APPROPRIATE ROUTINE FOR RECORD PROCESSING              * 00220021
*        2)HEWLESD-PROCESSES ESD RECORDS,BUILDS AND MAINTAINS CESD    * 00240021
*        3)HEWLTXT-PROCESSES TXT RECORDS                              * 00260021
*        4)HEWLRLD-PROCESSES RLD RECORDS, BUILDS AND MAINTAINS RLD    * 00280021
*              TABLE                                                  * 00300021
*        5)HEWLEND-PROCESSES END RECORDS,DEFINES ENTRY POINT,UPDATES  * 00320021
*              THE TEXT LOCATION POINTER, CLEARS THE TRANSLATION      * 00340021
*              TABLE                                                  * 00360021
*        6)ALLOCATE-ALLOCATES STORAGE FOR THE CESD,RLD TABLE AND      * 00380021
*              TRANSLATION TABLE                                      * 00400021
*        7)TRANSID-TRANSLATES ESDID TO TRANSLATION TABLE ENTRY ADDRESS* 00420021
*        8)HEWLERTN-RELOCATES RLDS                                    * 00440021
*        9)HEWLMAP-CREATES MAP PRINTOUT                               * 00460021
*       10)HEWLCNVT-CONVERTS BINARY QUANTITIES TO PRINT CHARACTERS    * 00480021
*       11)HEWLMOD - PROCESSES MOD RECORDS                            * 00500021
*ENTRY POINTS:                                                        * 00520021
*        1)HEWLRELO-FOR OBJECT MODULE PROCESSING                      * 00540021
*        2)HEWLESD-FOR ESD PROCESSING                                 * 00560021
*        3)HEWLRLD-FOR RLD PROCESSING                                 * 00580021
*        4)HEWLEND-FOR END OF MODULE PROCESSING                       * 00600021
*        5)TRANSID-FOR ESDID-TRANSLATION TABLE ADDRESS CONVERSION     * 00620021
*        6)HEWLERTN-FOR RELOCATION OF RLDS ON CHAIN                   * 00640021
*        7)HEWLCNVT-FOR CONVERSION TO PRINT CHARACTERS                * 00660021
*        8)HEWLMAP-FOR MAKING MAP ENTRIES                             * 00680021
*INPUT:  ALL ROUTINES EXPECT:                                         * 00700021
*             #13-ADDR OF SAVE AREA                                   * 00720021
*             #14-RETURN ADDRESS                                      * 00740021
*             #11-ADDR.OF COMMUNICATIONS AREA                         * 00760021
*        IN ADDITION:                                                 * 00780021
*           HEWLESD EXPECTS:                                          * 00800021
*             #5-ID OF FIRST ESD ITEM                                 * 00820021
*             #7-LENGTH OF ESD INFORMATION                            * 00840021
*             #8-ADDRESS OF ESD INFORMATION                           * 00860021
*           HEWLRLD EXPECTS:                                          * 00880021
*             #7-LENGTH OF RLD INFORMATION                            * 00900021
*             #8-ADDRESS OF RLD INFORMATION                           * 00920021
*          TRANSID EXPECTS:                                           * 00940021
*             #5-ID TO BE TRANSLATED                                  * 00960021
*           HEWLERTN EXPECTS:                                         * 00980021
*             #1-STARTING ADDRESS OF RLD CHAIN                        * 01000021
*             #9-ADDRESS OF CESD ENTRY TO BE USED FOR RELOCATION      * 01020021
*           HEWLCNVT EXPECTS:                                         * 01040021
*             #1-QUANTITY TO BE CONVERTED                             * 01060021
*           HEWLMAP EXPECTS:                                          * 01080021
*             #9-ADDRESS OF CESD ENTRY TO BE MAPPED                   * 01100021
*           HEWLMOD EXPECTS:                                          * 01120021
*             #7=LENGTH OF MOD INFO                                   * 01140021
*             #8=ADDRESS OF MOD INFO                                  * 01160021
*OUTPUT:    HEWLCNVT: CMXDBLWD CONTAINS CONVERTED VALUE               * 01180021
*          TRANSID:#1-CONTAINS TRANSLATION TABLE ENTRY ADDRESS        * 01200021
*EXTERNAL ROUTINES:                                                   * 01220021
*           HEWLREAD-READ AND DEBLOCK OBJECT RECORDS                  * 01240021
*           HEWLPRNT-PRINT MAP                                        * 01260021
*           HEWERROR-LOG ERRORS                                       * 01280021
*EXITS-NORMAL:TO CALLER                                               * 01300021
*     -ERROR: TO HEWERROR    LA   0,ERRCODE                           * 01320021
*                            L    15,=V(HEWERROR)                     * 01340021
*                             BALR 14,15                              * 01360021
*                                                                     * 01380021
*TABLES/WORKAREAS: REFER TO LOADER PLM FOR DETAILED DESCRIPTION       * 01400021
*        1)CESD                                                       * 01420021
*        2)RLD TABLE                                                  * 01440021
*        3)TRANSLATION TABLE                                          * 01460021
*        4)COMMUNICATIONS AREA(HEWLDCOM)                              * 01480021
*ATTRIBUTES: READ ONLY,REUSABLE,REENTRANT                             * 01500021
*NOTES:  NONE                                                         * 01520021
*********************************************************************** 01540021
         EJECT                                                          01560021
HEWLRELO CSECT                                                          01580021
*                       REGISTER ASSIGNMENTS                          * 01660021
*                                                                     * 01680021
BRANCH   EQU   15                       BRANCH REGISTER                 01700021
RETURN   EQU   14                       LINK REGISTER                   01720021
SAVEREG  EQU   13                       SAVE AREA POINTER               01740021
BASE     EQU   12                       BASE REGISTER                   01760021
CMPTR    EQU   11                       POINTER TO COMMUNICATIONS AREA  01780021
BASE2    EQU   10                       SECOND BASE REG         SA49491 01800000
CESD     EQU   9                        CESD ENTRY ADDR                 01820021
PTR      EQU   8                        USED FOR POINTER VALUE          01840021
*                                           -POINTER WITHIN INPUT BUF.  01860021
*                                           -POINTER WITHIN OUTPUT BUF. 01880021
LNG      EQU   7                        LENGTH OF INFORMATION           01900021
ADR      EQU   6                        ADDR FROM OBJECT RECORD         01920021
ID       EQU   5                        ID                              01940021
WORKC    EQU   4                        WORK REG.-EVEN FOR DEV          01960021
WORKA    EQU   3                        WORK REG.-ODD FOR BXLE          01980021
WORKB    EQU   2                        WORK REG.                       02000021
PARM     EQU   1                        PARAMETER REGISTER              02020021
ZERO     EQU   0                                                        02040021
*                                                                     * 02060021
*                    MAP FORMAT DISPLACEMENTS                         * 02080021
PREFIXNM EQU   2                                                        02100021
NAME     EQU   3                                                        02120021
TYPE     EQU   14                                                       02140021
ADDR     EQU   17                                                       02160021
SUFFIXNM EQU   11                                                       02180021
ENTRYSZ  EQU   24                                                       02200021
*                                                                     * 02220021
*                     CESD  DISPLACEMENTS                             * 02240021
*                                                                     * 02260021
CNAME    EQU   4                                                        02280021
CTYPE    EQU   12                                                       02300021
CADR     EQU   12                                                       02320021
CREL     EQU   16                                                       02340021
CLNG     EQU   16                                                       02360021
*                                                                     * 02380021
*                       CESD  INDICATORS                              * 02400021
*                                                                     * 02420021
SD       EQU   X'00'                    SECTION DEFINITION              02440021
LD       EQU   X'01'                    LABEL DEFINITION                02460021
ER       EQU   X'02'                    EXTERNAL REFERENCE              02480021
LR       EQU   X'03'                    LABEL REFERENCE                 02500021
PC       EQU   X'04'                    PRIVATE CODE                    02520021
CM       EQU   X'05'                    COMMON                          02540021
PR       EQU   X'06'                    PSEUDO REGISTER                 02560021
NULL     EQU   X'07'                    NULL ENTRY                      02580021
DELETE   EQU   X'80'                    DELETE  INDICATOR               02600021
NOLEN    EQU   X'20'               ZERO LENGTH                  27445   02620021
DELINK   EQU   X'80'                    RLD'S FOR ENTRY NEED DELINKING  02640021
LDCHAIN  EQU   X'40'                    ON LD CHAIN,ALREADY PROCESSED   02660021
*                                            THIS RECORD                02680021
WX       EQU   X'0A'               W-CON - EXTERNAL FORMAT  INC288      02700021
WEAKCALL EQU   X'40'               W-CON - INTERNAL FORMAT  INC288      02720021
NEVERCAL EQU   X'08'                   'ER' NEVER CALL                  02740021
BLANK    EQU   C' '                                                     02760021
ERWEAK   EQU   X'42'               FOR ER AND WEAKCALL BIT CHECK A39336 02780021
********                                                       ******** 02800021
*                       TRANSLATION TABLE INDICATORS                  * 02820021
********                                                       ******** 02840021
ERMATCH  EQU   X'80'                    ABSOLUTE RELOCATION INDIC.      02860021
*                                                                     * 02880021
*                       ESD DISPLACEMENTS                             * 02900021
*                                                                     * 02920021
ENAME    EQU   0                                                        02940021
ETYPE    EQU   8                                                        02960021
EADR     EQU   8                                                        02980021
ELNG     EQU   12                                                       03000021
ESUBTYP  EQU   13                      SUBTYPE FIELD                    03020021
EID      EQU   14                                                       03040021
ESDADDR  EQU   12                                                       03060021
ESEGNO   EQU   12                       SEGMENT NUMBER                  03080021
*                                                                     * 03100021
*                            RLD  FLAGS                               * 03120021
*                                                                     * 03140021
CONT     EQU   X'01'                                                    03160021
VCON     EQU   X'10'                    CHECK FOR ABSOLUTE RELOCATION   03180021
PRRLD    EQU   X'20'                    PSEUDO REGISTER RLD INDICATOR   03200021
ACCUMPR  EQU   X'30'                   ACCUMULATIVE PSEUDO REGISTER     03220021
*                                                                     * 03240021
*                      RLD DISPLACEMENTS                              * 03260021
*                                                                     * 03280021
P        EQU   2                        P PTR DISPLACEMENT              03300021
R        EQU   0                        R PTR DISPLACEMENT              03320021
RLDFLG   EQU   4                        FLAG FIELD                      03340021
RLDADR   EQU   4                        ADDRESS FIELD                   03360021
*                                                                     * 03380021
*                   DISPLACEMENTS WITHIN OBJECT BUFFER                * 03400021
*                                                                     * 03420021
COL1     EQU   0                                                        03440021
COL5     EQU   4                                                        03460021
COL11    EQU   10                                                       03480021
COL15    EQU   14                                                       03500021
COL29    EQU   12                       ADDED TO INFO ADDR TO GET COL.  03520021
*                                                  29 ADDR.             03540021
CQFF     EQU   X'FF'                   USED TO TURN OFF INDIC.          03560021
         EJECT                                                          03580021
         ENTRY HEWLERTN           EXTERNAL REFERENCE RESOLUTION         03600021
         ENTRY HEWLMAP            MAP PROCESSING                        03620021
         ENTRY HEWLCNVT           CONVERSION                            03640021
         ENTRY HEWLRLD            RLD RECORD PROCESSING                 03660021
         ENTRY HEWLESD            ESD RECORD PROCESSING                 03680021
         ENTRY HEWLEND            END OF MODULE PROCESSING              03700021
         ENTRY TRANSID                 TRANSLATE ID ROUTINE             03720021
         SAVE  (14,12),T,*              SAVE REGISTERS                  03740021
         USING HEWLRELO,BRANCH                                          03760021
         LR    BASE,BRANCH        SET BASE TO START             SA49491 03780000
         USING HEWLRELO,BASE      ESTABLISH ADDRESSABILITY              03800021
         DROP  BRANCH                                                   03820021
         L     SAVEREG,8(SAVEREG)       PICK UP NEXT SAVE AREA          03840021
         USING HEWLDCOM,CMPTR     ESTABLISH ADDR. TO COMM. AREA         03860021
         USING ERCODES,0               ERROR CODE DSECT                 03880021
         L     BASE2,ABEG4096          SET UP SECOND BASE REG   SA49491 03890000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 03892000
         B     RELOREAD                                                 03893037
         DC    C'OZ29882 '         LATEST APAR NUMBER                   03894037
         DC    C'03/13/78'         DATE LAST CHANGED                    03900037
         DC    0H'0'                    ALIGN                           03912037
         EJECT                                                          03921037
*********************************************************************** 03930037
*              GET A RECORD TO PROCESS                                * 03939037
*********************************************************************** 03948037
RELOREAD L     BRANCH,ADREAD                                            03960021
         BALR  RETURN,BRANCH            GO TO READ A RECORD             03980021
         TM    CMIOFLGS,CQEOCB          END OF CONCATENATION?           04000021
         BZ    RELO10                   NO, PROCESS RECORD              04020021
         TM    CMRELFLG,CQNOEND        WAS AN END CARD RECEIVED         04040021
         BO    RELO1                   YES                              04060021
         TM    CMRELFLG,CQINPUT        WAS IT A DUMMY DATA SET          04080021
         BZ    RELO1                   YES,RETURN                       04100021
         BAL   RETURN,HEWLEND     GO TO PERFORM CLOSE-OUT PROC.         04120021
        BAL    RETURN,RERINPTA          WARNING--NO END CARD            04140021
RELO1    NI    CMRELFLG,CQFF-CQNOEND   SET OFF END CARD INDIC.          04160021
         L     SAVEREG,4(SAVEREG)                                       04180021
         RETURN (14,12),T                                               04200021
*                                                                     * 04220021
*                  SET-UP FOR RECORD PROCESSING                       * 04240021
*                                                                     * 04260021
RELO10   L     PTR,CMGETREC            LOAD ADDR. OF OBJ. BUFFER A30162 04280021
         CLI   0(PTR),BLANK             CHECK FOR L.E.CONTROL CARD      04300021
         BNE   RELO20                   IT IS NOT A CONTROL CARD        04320021
         BAL   RETURN,RERINPT8          WARNING-CARD NOT AN OBJ.CARD    04340021
         B     RELOREAD                GO TO READ NEXT RECORD           04360021
RELO20   L     ADR,COL5(PTR)            LOAD COLS 5 THRU 8 - ADDRESS    04380021
         LA    ADR,0(ADR)                                               04400021
         LH    LNG,COL11(PTR)           LOAD COLS 11 AND 12 -BYTE CT    04420021
         LH    ID,COL15(PTR)            LOAD COLS IS AND 16 - ID        04440021
         L     WORKA,COL1(PTR)          LOAD COLS 1 THRU 4-CARD IDENT.  04460021
         LA    PTR,16(PTR)              ADDR. OF COL 17- ADDR.OF INFO   04480021
*                                                                     * 04500021
*   THE FOLLOWING CODE DETERMINES TYPE OF RECORD AND THEN BRANCHES TO * 04520021
*            THE APPROPRIATE ROUTINE FOR PROCESSING                   * 04540021
*                                                                     * 04560021
         LA    WORKC,6             GET TABLE ENTRY NUMBER               04580021
         LA    WORKB,TYPETBLE           GET TABLE ADDRESS               04600021
RELO30   LM    RETURN,BRANCH,0(WORKB)   PICK UP TABLE ENTRY             04620021
         CR    WORKA,RETURN             ARE TYPES EQUAL                 04640021
         BC    7,RELO40                 NO , CONTINUE SEARCH            04660021
         OI    CMRELFLG,CQINPUT        SET INDICATOR FOR VALID INPUT    04680021
*                                      RECEIVED                  A30162 04700021
         BALR  RETURN,BRANCH            YES, THEN GO TO PROCESS REC.    04720021
         B     RELOREAD                 GO TO READ NEXT RECORD          04740021
RELO40   LA    WORKB,8(WORKB)           UPDATE TABLE PTR                04760021
         BCT   WORKC,RELO30             LOOP AGAIN                      04780021
         BAL   RETURN,RERINPT9         INVALID INPUT FROM OBJ.MODULE    04800021
         B     RELOREAD                 GO TO READ NEXT RECORD          04820021
         EJECT                                                          04840021
*                                                                     * 04860021
**************************  ESD PROCESSOR  **************************** 04880021
*                                                                     * 04900021
*   THIS SUBROUTINE CREATES THE CESD FROM THE ESD/CESD SENT TO IT.    * 04920021
*     IT EXPECTS                                                      * 04940021
*            #LNG-LENGTH OF ESD INFORMATION                           * 04960021
*            #PTR- ADR. OF ESD INFORMATION                            * 04980021
*            #ID- ID OF FIRST ESD ITEM OTHER THAN LD                    05000021
*                                                                     * 05020021
*********************************************************************** 05040021
HEWLESD  EQU   *                                                        05060021
         STM   14,12,12(13)             SAVE REGISTERS                  05080021
         BALR  BASE,0                                                   05100021
         USING *,BASE                                                   05120021
         L     BASE,ABEGIN                                              05140021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           05160021
         L     BASE2,ABEG4096           SET UP SECPND BASE REG  SA49491 05170000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 05172000
         B     NESD+8                                                   05180021
NESD     DC    C'HEWLESD '                                              05200021
         L     SAVEREG,8(SAVEREG)          GET NEXT SAVE AREA           05220021
ESDSTART STH   ID,CMCURRID              SAVE CURRENT ID                 05240021
         OI    CMFLAG4,CQESDS     SHOW ESDS RECHD FOR THIS MODULE       05260021
         TM    CMIOFLGS,CQRECFM         IS A LOAD MODULE BEING PROC.    05280021
         BO    LOADPROC                 YES                             05300021
****                                                               **** 05320021
*                       INPUT ESD TYPE IS 'NULL'                      * 05340021
****                                                               **** 05360021
ESD10    TM    ETYPE(PTR),WX       IS INPUT TYPE WX         INC288      05380021
         BNO   ESD12               NO. BRANCH               INC288      05400021
         MVI   ETYPE(PTR),WEAKCALL+ER  YES. SET ER WITH WEAKCALL INC288 05420021
*                                     FLAG ON               INC288      05440021
ESD12    TM    ETYPE(PTR),NULL     IS INPUT ESD TYPE NULL   INC288      05460021
         BZ    CESDSRCH                 NO, TYPE IS SD - SEARCH CESD    05480021
         BC    6,ESD20                  NO, CHECK FOR TYPE 'PC'         05500021
ESD15    L     CESD,CMNULCHN            IS THE CESD NULL ENTRY CREATED  05520021
*                                       ALL NULL ENTRIES ARE RENUMBERED 05540021
*                                         TO THE SAME CESD'DELETE'ENTRY 05560021
         LTR   CESD,CESD                                                05580021
         BC    7,TRANSLAT               YES                             05600021
         BAL   RETURN,CESDENT           NO, GET CESD ENTRY              05620021
         XC    0(20,CESD),0(CESD)       CLEAR ENTRY                     05640021
         OI    CTYPE(CESD),DELETE       SET DELETE INDICATOR            05660021
         ST    CESD,CMNULCHN            SAVE CESD ADDR.FOR FUTURE NULLS 05680021
         B     TRANSLAT                 GO TO TRANSLATE ID              05700021
********                                                        ******* 05720021
*                         INPUT ESD TYPE IS 'PC'                      * 05740021
********                                                        ******* 05760021
ESD20    TM    ETYPE(PTR),X'03'         IS INPUT ESD TYPE 'PC'          05780021
         BC    7,ESD35                  NO, CHECK FOR 'LD'/'LR'         05800021
ESD30    BAL   RETURN,CESDENT           GET CESD ENTRY                  05820021
         BAL   RETURN,ENTER             MAKE CESD ENTRY                 05840021
         BAL   RETURN,CHECKEP          CHECK FOR EP NAME                05860021
         B     MATERSD2                 GO TO TEST LNG.AND MAP          05880021
********                                                        ******* 05900021
*                        INPUT ESD TYPE IS 'LR'OR'LD'                 * 05920021
********                                                        ******* 05940021
ESD35    TM    ETYPE(PTR),CM           IS ESD TYPE'LR'OR'LD'            05960021
         BC    11,CESDSRCH             NO                               05980021
         TM    ETYPE(PTR),PR           IS ESD TYPE 'PR'                 06000021
         BO    CESDSRCH                YES                              06020021
         LH    ID,EID(PTR)              GET 'SD' ID                     06040021
         OI    CMRELFLG,CQESD          ESD CALLER INDICATOR             06060021
         BAL   RETURN,TRANSID           TRANSLATE ID                    06080021
         NI    CMRELFLG,CQFF-CQESD     SET ESD CALLER INDIC. OFF        06100021
         LH    ID,CMCURRID              RESTORE ID                      06120021
         LTR   PARM,PARM                WAS AN INVALID ID FOUND         06140021
         BZ    NEXTESD                  YES                             06160021
         L     CESD,0(PARM)             GET'SD' CESD ADDR.              06180021
         LTR   CESD,CESD                IS 'SD' DEFINED YET             06200021
         BZ    ESD40                    NO                              06220021
         ST    CESD,ESDADDR(PTR)        SAVE 'SD' CESD ADDR.            06240021
         B     CESDSRCH                GO TO SEARCH CESD                06250037
*   THE SECTION DEFINITION(SD) FOR A LABEL DEFINITION(LD) MUST BE     * 06280021
*    DEFINED BEFORE THE LD CAN BE PROCESSED. THEREFORE, ALL LDS WHOSE * 06300021
*    SD IS NOT DEFINED WHEN ENCOUNTERED ARE PLACED ON A CHAIN UNTIL   * 06320021
*    THEIR CORRESPONDING SD IS DEFINED. THE CHAIN IS PROCESSED AT     * 06340021
*    THE END OF EACH RECORD.(THIS SPECIAL CASE SHOULD OCCUR ONLY IF   * 06360021
*    THE USER REARRANGES THE OBJECT DECK IN THIS MANNER.              * 06380021
ESD40    LR    CESD,PTR                GET CESD ENTRY ADDR              06400021
         SH    CESD,CONT4                                               06420021
         TM    ETYPE(PTR),LDCHAIN      HAS CESD ENTRY BEEN CREATED      06440021
         BO    ESD50                    YES, RECHAIN                    06460021
         BAL   RETURN,CESDENT          GET CESD ENTRY                   06480021
         MVC   CNAME(16,CESD),ENAME(PTR) MOVE ESD INFO TO CESD          06500021
ESD50    L     WORKC,CMLDCHN                                            06520021
         ST    CESD,CMLDCHN                                             06540021
         ST    WORKC,0(CESD)            CHAIN ENTRY TO 'LD' CHAIN       06560021
         B     NEXTESD                  GET NEXT ESD ITEM               06580021
         EJECT                                                          06600021
****************************  CESD SEARCH  **************************** 06620021
*                                                                     * 06640021
*      THIS ROUTINE SEARCHES THE CESD FOR A GIVEN NAME. IT USES       * 06660021
*        HIERTBLE TO DETERMINE WHICH CESD CHAINS TO SEARCH AND THEN   * 06680021
*        GETS THE CHAIN BEGINNING ADDRESSES FROM THE CMTYPCHN TABLE   * 06700021
*                                                                     * 06720021
*********************************************************************** 06740021
CESDSRCH XC    CMPREVPT(4),CMPREVPT     CLEAR PREVIOUS CHAIN POINTER    06760021
         IC    WORKA,ETYPE(PTR)         GET INPUT ESD TYPE              06780021
         N     WORKA,TYPEONLY           CLEAR ALL BUT TYPE FIELD        06800021
         CH    WORKA,ONE               IS INPUT TYPE 'LD'               06820021
         BNE   SRCH05                  NO                               06840021
         LA    WORKA,3                 SET TYPE TO 'LR'                 06860021
SRCH05   SLL   WORKA,2                                                  06880021
         LA    WORKA,HIERTBLE(WORKA)   CALC HIERTBLE ENTRY ADDR         06900021
SRCH10   IC    CESD,0(WORKA)            GET CESD TYPE                   06920021
         N     CESD,TYPEONLY           CLEAR ALL BUT TYPE               06940021
         SLL   CESD,2                                                   06960021
         LA    CESD,CMTYPCHN(CESD)     CALC CHAIN TABLE ENTRY ADDR      06980021
SRCH20   L     CESD,0(CESD)             GET ADDR. OF FIRST ON CHAIN     07000021
         LTR   CESD,CESD                IS THIS END OF CHAIN            07020021
         BZ    SRCH30                   YES                             07040021
         CLC   CNAME(8,CESD),ENAME(PTR)  ARE NAMES EQUAL                07060021
         BE    MATCHED                  YES, GO TO MATCH PROCESSING     07080021
         ST    CESD,CMPREVPT            SAVE PREVIOUS CHAIN POINTER     07100021
         B     SRCH20                   GET NEXT IN CHAIN               07120021
SRCH30   TM    0(WORKA),X'80'           LAST ENTRY IN HIERTBLE          07140021
         BO    NOMATCH                  YES, GO TO NO MATCH PROCESSING  07160021
         LA    WORKA,1(WORKA)           UPDATE TO NEXT ENTRY            07180021
         XC    CMPREVPT(4),CMPREVPT     CLEAR PREVIOUS CHAIN POINTER    07200021
         B     SRCH10                   CONTINUE SEARCH                 07220021
         EJECT                                                          07240021
*********************************************************************** 07260021
*                                                                     * 07280021
***********************  NO MATCH PROCESSING   ************************ 07300021
*                                                                     * 07320021
*********************************************************************** 07340021
********                                                        ******* 07360021
*                          INPUT ESD TYPE IS 'SD'                     * 07380021
********                                                        ******* 07400021
NOMATCH  EQU   *                                                        07420021
         TM    ETYPE(PTR),NULL          IS INPUT ESD TYPE 'SD'          07440021
         BZ    ESD30                    YES, HANDLE SAME AS 'PC'        07460021
         BAL   RETURN,CESDENT           GET CESD ENTRY FOR NOMATCH PROC 07480021
********                                                        ******* 07500021
*                          INPUT ESD TYPE IS 'PR'                     * 07520021
********                                                        ******* 07540021
         TM    ETYPE(PTR),PR            IS INPUT ESD TYPE 'PR'          07560021
         BZ    NOMATLD1                 NO, TYPE IS'LD'                 07580021
         BC    6,NOMATCM                NO, CHECK FOR 'CM'              07600021
         MVC   CNAME(16,CESD),ENAME(PTR) YES, MOVE ESD INFO.TO CESD     07620021
         XC    CTYPE+1(3,CESD),CTYPE+1(CESD)  CLEAR RLD CHAIN FIELD     07640021
*                                       CHAIN PR TO END OF PR CHAIN IN  07660021
*                                       ORDER TO MAINTAIN INPUT PR      07680021
*                                       ORDER.                          07700021
         LA    WORKB,CMPRCHN                                            07720021
         L     WORKC,CMPRCHN            GET ADDRESS OF 1ST PR ENTRY     07740021
NOMATPR1 LTR   WORKC,WORKC              IS THIS LAST ON CHAIN           07760021
         BZ    NOMATPR2                 YES                             07780021
         LR    WORKB,WORKC              NO,SAVE PREVIOUS ENTRY ADDRESS  07800021
         L     WORKC,0(WORKC)           GET ADDR. OF NEXT PR ENTRY      07820021
         B     NOMATPR1                                                 07840021
NOMATPR2 ST    CESD,0(WORKB)            CHAIN PR AT END OF CHAIN        07860021
         XC    0(4,CESD),0(CESD)        CLEAR CHAIN FIELD               07880021
         B     TRANSLAT                 GO TO TRANSLATE ID              07900021
********                                                        ******* 07920021
*                          INPUT ESD TYPE IS 'CM'                     * 07940021
********                                                        ******* 07960021
NOMATCM  TM    ETYPE(PTR),CM            IS TYPE 'CM'                    07980021
         BC    14,NOMATLD               NO                              08000021
         MVC   CTYPE(8,CESD),ETYPE(PTR)  KEEP INPUT ADDR.AND LNG.       08020021
         LR    WORKC,CESD               SAVE EXTENDED ENTRY ADDR        08040021
         BAL   RETURN,CESDENT           GET ANOTHER CESD ENTRY          08060021
         MVC   CNAME(9,CESD),ENAME(PTR) MOVE NAME AND TYPE              08080021
         NI    CTYPE(CESD),X'07'        CLEAR FLAGS EXCEPT TYPE         08100021
         XC    CTYPE+1(3,CESD),CTYPE+1(CESD) CLEAR ER CHAIN             08120021
         ST    WORKC,CREL(CESD)         SAVE PTR TO EXTENDED ENTRY      08140021
         B     CHAINING                 GO TO CHAIN AND TRANSLATE       08160021
********                                                        ******* 08180021
*                          INPUT ESD TYPE IS 'LR' OR 'LD'             * 08200021
********                                                        ******* 08220021
NOMATLD  TM    ETYPE(PTR),LR            IS TYPE'LR'                     08240021
         BM    NOMATER                  NO, TYPE IS 'ER'                08260021
NOMATLD1 L     WORKC,ESDADDR(PTR)       CESD ADDR OF SD ENTRY           08280021
         MVC   CNAME(8,CESD),ENAME(PTR) YES, MOVE NAME TO CESD          08300021
         TM    CTYPE(WORKC),DELETE      IS 'SD' FOR 'LR' DELETE         08320021
         BZ    NOMATLD2                 NO                              08340021
         MVI   ETYPE(PTR),ER            SET TYPE TO 'ER'                08360021
         MVI   CTYPE(CESD),ER+DELINK    SET CESD TYPE TO ER WITH DELINK 08380021
         MVC   CREL+1(3,CESD),EADR+1(PTR) SAVE DELINKING FACTOR         08400021
         XC    CADR+1(3,CESD),CADR+1(CESD) CLEAR RLD CHAIN FIELD        08420021
         OI    CREL(CESD),X'80'        TURN SPEC DELETE BIT ON  ZA01335 08430002
         B     CHAINING                 GO TO CHAIN ENTRY               08440021
NOMATLD2 BAL   RETURN,ENTERLR           MAKE LR CESD ENTRY              08460021
         BAL   RETURN,CHECKEP          CHECK FOR EP NAME                08480021
         BAL   RETURN,HEWLMAP     GO TO MAKE MAP ENTRY                  08500021
         B     CHAINING                 GO TO CHAIN AND TRANSLATE       08520021
********                                                        ******* 08540021
*                         INPUT ESD TYPE IS 'ER'                      * 08560021
********                                                        ******* 08580021
NOMATER  MVC   CNAME(16,CESD),ENAME(PTR) MOVE ESD INFO. TO CESD ENTRY   08600021
         CLI   ETYPE(PTR),ERWEAK   IS THIS W-CON                 A39336 08620021
         BE    NOMATER1            YES, DON'T CLEAR FLAGS        A39336 08640021
         NI    CTYPE(CESD),X'07'         CLEAR FLAGS EXCEPT FOR TYPE    08660021
NOMATER1 EQU   *                                            INC288      08680021
         XC    CADR+1(7,CESD),CADR+1(CESD) CLEAR ALL BUT NAME AND TYPE  08700021
         CLI   ESUBTYP(PTR),X'06'      IS ESD MARKED NEVER-CALL         08720021
         BNE   ENTERCH                 NO                        XA1803 08740002
         OI    CTYPE(CESD),NEVERCAL    SET NEVER-CALL INCIC IN CESD'ER' 08760021
ENTERCH  LA    WORKB,CMERCHN           PT TO ER CHAIN            XA1803 08770002
         L     WORKC,CMERCHN           GET ADDR OF 1ST ER ENTRY  XA1803 08780002
NOMATER2 LTR   WORKC,WORKC             IS THIS LAST ON CHAIN     XA1803 08790002
         BZ    NOMATER3                YES                       XA1803 08792002
         LR    WORKB,WORKC             SAVE PREV ENTRY ADDR      XA1803 08794002
         L     WORKC,0(WORKC)          GET ADDR OF NEXT ER ENTRY XA1803 08796002
         B     NOMATER2                CONTINUE SEARCH           XA1803 08798002
NOMATER3 ST    CESD,0(WORKB)           CHAIN ER AT END OF CHAIN  XA1803 08798402
         XC    0(4,CESD),0(CESD)       CLEAR CHAIN FIELD         XA1803 08798802
         B     TRANSLAT                GO TO TRANSLATE ID        XA1803 08799202
         EJECT                                                          08800021
*********************************************************************** 08820021
**************************  MATCH  PROCESSING  ************************ 08840021
*                                                                     * 08860021
*********************************************************************** 08880021
********                                                        ******* 08900021
*                CESD TYPE IS 'SD' --- INPUT ESD TYPE IS 'SD'         * 08920021
********                                                        ******* 08940021
MATCHED  EQU   *                                                        08960021
         TM    CTYPE(CESD),NULL         IS CESD TYPE 'SD'               08980021
         BC    7,MATCHPR                NO                              09000021
         TM    ETYPE(PTR),NULL          IS INPUT ESD TYPE 'SD'          09020021
         BC    7,MATSDER                NO                              09040021
DELETE1  TM    CMFLAG4,CQMOD       IS THIS CMPLER-LDED TXT       A30142 09060021
         BZ    DELETE2             NO. WE WON'T READ TEXT               09080021
         L     WORKC,ELNG(PTR)     YES. GET ESD LENGTH                  09100021
         LA    WORKC,0(WORKC)      CLEAR HI-ORDER BYTE                  09120021
         A     WORKC,CMMODLNG      UPDATE MODULE LENGTH                 09140021
         LA    WORKC,7(WORKC)      AND ROUND IT                         09160021
         N     WORKC,DBLWRD                                             09180021
         ST    WORKC,CMMODLNG      STORE IT BACK                        09200021
DELETE2  TM    CTYPE(CESD),DELETE  IS ORIGINAL DELETE            A30142 09220021
         BO    UPDATERC            YES, USE IT                   A30142 09240021
         ST    CESD,CMESDSAV       SAVE CESD ADDR               SA56381 09250000
         BAL   RETURN,CESDENT      GET CESD ENTRY                A30142 09280021
         MVC   CNAME(8,CESD),ENAME(PTR)  MOVE NAME AND TYPE      A30142 09300021
         L     WORKC,CMESDSAV      GET ORIGINAL'S ADDR          SA56381 09320000
         L     WORKC,CADR(WORKC)   INTO WORKC                   SA49491 09330000
         LA    WORKC,0(WORKC)                                    A30142 09340021
         ST    WORKC,CADR(CESD)    STORE IT HERE                 A30142 09360021
         L     WORKB,EADR(PTR)     GET ESD INPUT ADDR            A30142 09380021
         LA    WORKB,0(WORKB)      CALC RELOCATION CONSTANT      A30142 09400021
         SR    WORKC,WORKB                                       A30142 09420021
         ST    WORKC,CREL(CESD)    STORE IT                      A30142 09440021
         MVC   CTYPE(1,CESD),ETYPE(PTR)  SET TYPE                A30142 09460021
         OI    CTYPE(CESD),DELETE  SET TO DELETE                 A30142 09480021
         B     CHAINING            GO TO CHAIN AND TRANSLATE     A30142 09500021
********                                                        ******* 09520021
*                CESD TYPE IS 'SD' --- INPUT ESD TYPE IS 'ER'         * 09540021
********                                                        ******* 09560021
MATSDER  TM    ETYPE(PTR),CM            IS INPUT ESD TYPE 'ER'          09580021
         BZ    TRANSLAT                YES,GO TO TRANSLATE              09600021
********                                                        ******* 09620021
*                CESD TYPE IS 'SD' --- INPUT ESD TYPE IS 'CM'         * 09640021
********                                                        ******* 09660021
MATSDCM  BO    UPDATERC                 BRANCH IF INPUT TYPE IS CM      09670001
********                                                        ******* 09700021
*                CESD TYPE IS 'SD' --- INPUT ESD TYPE IS 'LD'/'LR'    * 09720021
********                                                        ******* 09740021
MATSDLR  L     WORKC,ESDADDR(PTR)       GET'SD' ADDR                    09760021
         TM    CTYPE(WORKC),DELETE      IS'SD' MARKED DELETE            09780021
         BO    UPDATERC                 GO TO UPDATE RELOC. CONSTANT    09800021
         BAL   RETURN,RERINPT4         DUPLIC.SYMBOL-CONFLICTING TYPE   09820021
         B     UPDATERC                 GO TO UPDATE RELOC. CONSTANT    09840021
********                                                        ******* 09860021
*                CESD TYPE IS 'PR'---INPUT ESD TYPE IS 'PR'           * 09880021
********                                                        ******* 09900021
MATCHPR  TM    CTYPE(CESD),PR           IS CESD TYPE 'PR'               09920021
         BC    14,MATCHCM               NO                              09940021
         BNH   MATPRPR1                 NO, GO TO CHECK ALIGNMENT       09960021
         MVC   CLNG+1(3,CESD),ELNG+1(PTR) YES, USE ESD LNG              09980021
MATPRPR1 OC    CLNG(1,CESD),ELNG(PTR)   SET ALIGN. TO HIGHER VALUE      10000021
         B     TRANSLAT                 GO TO TRANSLATE                 10020021
********                                                        ******* 10040021
*               CESD TYPE IS 'CM' --- INPUT ESD TYPE IS 'SD'          * 10060021
********                                                        ******* 10080021
MATCHCM  TM    CTYPE(CESD),CM           IS CESD TYPE 'CM'               10100021
         BZ    MATCHER                  NO, CESD TYPE IS 'ER'           10120021
         BC    6,MATCHLR                NO, CESD TYPE IS 'LR'           10140021
         TM    ETYPE(PTR),NULL          YES, IS INPUT ESD TYPE 'SD'     10160021
         BC    7,MATCMER                NO                              10180021
         L     ADR,CREL(CESD)           GET ADDR OF EXTENDED ENTRY      10200021
         CLC   ELNG+1(3,PTR),CLNG+1(ADR) IS INPUT LNG GT CESD LNG       10220021
         BNL   MATCMSD1                  YES,USE INPUT LNG              10240002
         LA    ZERO,22                   MSG IEW1232             YM5575 10250001
         LR    PARM,PTR                  PT TO ESD NAME          YM5575 10260001
         L     BRANCH,ADERROR            ADDR OF ERROR ROUTINE   YM5575 10270001
         BALR  RETURN,BRANCH             BR TO ERROR ROUTINE     YM5575 10272001
MATCMSD1 L     WORKC,CMESDCHN                                           10280021
         ST    ADR,CMESDCHN                                             10300021
         ST    WORKC,0(ADR)             PUT EXTENDED ENTRY ON FREE CHN. 10320021
         B     MATERSD0                 GO TO HANDLE SAME AS SD-ER      10340021
********                                                        ******* 10360021
*           CESD TYPE IS 'CM' --- INPUT ESD TYPE IS 'ER'              * 10380021
********                                                        ******* 10400021
MATCMER  L     WORKC,CREL(CESD)         GET ADDR OF EXTENDED ENTRY      10420021
         MVC   CADR+1(3,WORKC),EADR+1(PTR)  SAVE INPUT ADDRESS          10440021
         TM    ETYPE(PTR),CM            IS ESD TYPE 'ER'                10460021
         BO    MATCMCM                  NO, ESD TYPE IS 'CM'            10480021
         BM    MATCMLR                  NO, TYPE IS 'LR' OR 'LD'        10500021
         XC    CADR+1(3,WORKC),CADR+1(WORKC)  MAKE SURE ADDR IS ZERO    10520021
         B     TRANSLAT                 GO TO TRANSLATE ID              10540021
********                                                        ******* 10560021
*           CESD  TYPE IS 'CM' --- INPUT ESD TYPE IS 'LR'/'LD'        * 10580021
********                                                        ******* 10600021
MATCMLR  L     WORKC,ESDADDR(PTR)       GET 'SD' ADDR                   10620021
         TM    CTYPE(WORKC),DELETE      IS'SD' DELETE                   10640021
         BO    TRANSLAT                 YES                             10660021
         BAL   RETURN,RERINPT4         DUPLIC.SYMBOL-CONFLICTING TYPE   10680021
         B     TRANSLAT                 GO TO TRANSLATE                 10700021
********                                                        ******* 10720021
*          CESD TYPE IS 'CM' --- INPUT ESD TYPE IS 'CM'               * 10740021
********                                                        ******* 10760021
MATCMCM  CLC   CLNG+1(3,WORKC),ELNG+1(PTR) IS CESD LNG BT ESD LNG       10780021
         BH    TRANSLAT                   YES, USE CESD LNG             10800021
         MVC   CLNG+1(3,WORKC),ELNG+1(PTR) USE ESD LENGTH               10820021
         B     TRANSLAT                  GO TO TRANSLATE                10840021
********                                                        ******* 10860021
*               CESD TYPE IS 'LR' ---INPUT ESD TYPE IS 'SD'           * 10880021
********                                                        ******* 10900021
MATCHLR  TM    ETYPE(PTR),NULL          IS ESD TYPE 'SD'                10920021
         BC    7,MATLRER               NO                               10940021
         B     DELETE1             YES. GO TO DELETE                    10960021
********                                                        ******* 10980021
*               CESD TYPE IS 'LR'--- INPUT ESD TYPE IS  'ER'          * 11000021
********                                                        ******* 11020021
MATLRER  TM    ETYPE(PTR),CM            IS ESD TYPE 'ER'                11040021
         BZ    TRANSLAT                 YES, GO TO TRANSLATE            11060021
********                                                        ******* 11080021
*               CESD TYPE IS 'LR' --- INPUT ESD TYPE IS 'LR'/'LD'     * 11100021
********                                                        ******* 11120021
MATLRLR  BC    6,MATSDLR               HANDLE SAME AS 'SD'-'LR'MATCH    11140021
********                                                        ******* 11160021
*           CESD TYPE IS 'LR' --- INPUT ESD TYPE IS 'CM'              * 11180021
********                                                        ******* 11200021
         BAL   RETURN,RERINPT4         DUPLIC.SYMBOL-CONFLICTING TYPE   11220021
         B     UPDATERC                 GO TO UPDATE RELOC.CONSTANT     11240021
********                                                        ******* 11260021
*           CESD TYPE IS 'ER' --- INPUT ESD TYPE IS 'SD'              * 11280021
********                                                        ******* 11300021
MATCHER  TM    ETYPE(PTR),NULL          IS INPUT ESD TYPE 'SD'          11320021
         BC    7,MATERLR                NO                              11340021
MATERSD0 L     WORKB,CMPREVPT           GET ADDR OF PREV ENTRY ON CHAIN 11360021
         L     WORKC,0(CESD)                                            11380021
         LTR   WORKB,WORKB              IS MATCH FIRST ON CHAIN         11400021
         BZ    MATERSD5                 YES                             11420021
         ST    WORKC,0(WORKB)           DECHAIN ENTRY                   11440021
MATERSD1 L     PARM,CADR(CESD)          GET ADDR. OF RLD CHAIN          11460021
         LA    PARM,0(PARM)            CLEAR TYPE FIELD                 11480021
         BAL   RETURN,ENTER             GO TO MAKE CESD  ENTRY          11500021
         BAL   RETURN,CHECKEP          CHECK FOR EP NAME                11520021
         BAL   RETURN,HEWLERTN    GO TO RESOLVE RLD CHAIN               11540021
MATERSD2 L     WORKC,ELNG(PTR)          GET ESD LENGTH                  11560021
         LA    WORKC,0(WORKC)          CLEAR HIGH ORDER BYTE            11580021
         LTR   WORKC,WORKC              IS LNG EQUAL TO ZERO            11600021
         BC    7,MATERSD3               NO                              11620021
         OI    CMRELFLG,CQNOLNG         YES, SET NOLENGTH INDICATOR     11640021
         OI    CTYPE(CESD),NOLEN   SET NOLENGTH INDICATOR       27445   11660021
         B     MATERSD4                                                 11680021
MATERSD3 A     WORKC,CMMODLNG                                           11700021
         ST    WORKC,CMMODLNG           UPDATE ACCUM. LENGTH            11720021
MATERSD4 BAL RETURN,HEWLMAP       GO TO MAP ENTRY                       11740021
         B     CHAINING                 GO TO CHAIN AND TRANSLATE       11760021
MATERSD5 TM    CTYPE(CESD),CM           IS 'CM' TO BE DECHAINED         11780021
         BO    MATERSD6                 YES                             11800021
         ST    WORKC,CMERCHN            DECHAIN 'ER'                    11820021
         B     MATERSD1                                                 11840021
MATERSD6 ST    WORKC,CMCMCHN            DECHAIN 'CM'                    11860021
         B     MATERSD1                                                 11880021
********                                                        ******* 11900021
*           CESD TYPE IS 'ER' --- INPUT ESD TYPE IS 'LD'/'LR'         * 11920021
********                                                        ******* 11940021
MATERLR  TM    ETYPE(PTR),CM            IS INPUT ESD TYPE'LD'OR'LR'     11960021
         BZ    MATERER                  NO, TYPE IS 'ER'                11980021
         BO    MATERCM                  NO, TYPE IS 'CM'                12000021
         L     PARM,CADR(CESD)          GET ADDR. OF RLD CHAIN          12020021
         LA    PARM,0(PARM)            CLEAR TYPE FIELD                 12040021
         LA    RETURN,MATERLR2          SET RETURN ADDR FOR ENTERLR RTN 12060021
         L     WORKC,ESDADDR(PTR)      GET 'SD' CESD ADDR               12080021
         NI    CREL(CESD),X'7F'        TURN OFF DELETE BIT      ZA01335 12090002
         TM    CTYPE(WORKC),DELETE     IS 'SD' FOR 'LR' DELETE  ZA01335 12092002
         BZ    ENTERLR                 NO,CONTINUE              ZA01335 12094002
         OI    CREL(CESD),X'80'        TURN SPEC DELETE BIT ON  ZA01335 12096002
         MVC   CREL+1(3,CESD),EADR+1(PTR) SAVE DELINKING FACTOR ZA01335 12098002
         B     TRANSLAT                GO TO TRANSLATE ID       ZA01335 12098402
ENTERLR  L     WORKB,EADR(PTR)          GET INPUT ADDR                  12100021
         LA    WORKB,0(WORKB)                                           12120021
         LR    WORKA,WORKB              SAVE FOR RC CALC.               12140021
         A     WORKB,CREL(WORKC)        CALC. LOADER ASSIGNED ADDR(LAA) 12160021
         ST    WORKB,CADR(CESD)         PUT IN CESD ENTRY               12180021
         TM    CMFLAG4,CQMOD       IS THIS COMPILER-LOADED TEXT         12200021
         BO    MATERLR1            YES. DON'T WORRY                     12220021
         CL    WORKB,CMLOWTBL           HAVE TABLES BEEN EXCEEDED       12240021
         BNH   MATERLR1                NO                               12260021
         B     RERSIZE2                PROGRAM TOO LARGE--ABORT         12280021
MATERLR1 MVI   CTYPE(CESD),LR           SET TYPE TO 'LR'                12300021
         SR    WORKB,WORKA              CALC RELOCATION CONSTANT        12320021
         ST    WORKB,CREL(CESD)         PUT RC IN CESD ENTRY            12340021
         BR    RETURN                                                   12360021
MATERLR2 BAL   RETURN,HEWLERTN    GO TO RESOLVE RLD CHAIN               12380021
         BAL   RETURN,CHECKEP          CHECK FOR EP NAME                12400021
         BAL   RETURN,HEWLMAP     GO TO MAKE MAP ENTRY                  12420021
         B     DECHAIN                  GO TO DECHAIN'ER',CHAIN 'LR',   12440021
*                                            AND TRANSLATE ID           12460021
********                                                        ******* 12480021
*           CESD TYPE IS 'ER' --- INPUT ESD TYPE IS 'CM'              * 12500021
********                                                        ******* 12520021
MATERCM  LR    WORKC,CESD               SAVE CESD ADDR OF 'ER'          12540021
         BAL   RETURN,CESDENT           GET CESD ENTRY FOR EXTENDED ENT 12560021
         MVC   CADR(8,CESD),EADR(PTR)   MOVE TYPE,ADDR.AND LNG          12580021
         ST    CESD,CREL(WORKC)         SAVE PTR TO EXTENDED ENTRY      12600021
         LR    CESD,WORKC               RESTORE CESD ADDR OF 'ER'       12620021
         MVI   CTYPE(CESD),CM           SET TYPE TO 'CM'                12640021
         B     DECHAIN                  GO TO DECHAIN'ER',CHAIN'CM'     12660021
*                                          AND TRANSLATE ID             12680021
********                                                        ******* 12700021
*           CESD TYPE IS 'ER' --- INPUT ESD TYPE IS 'ER'              * 12720021
********                                                        ******* 12740021
MATERER  CLI   CTYPE(CESD),ER+DELINK    IS ER MARKED DELINK             12760021
         BNE   MATERER2                 NO                              12780021
         NI    CTYPE(CESD),X'FF'-DELINK SET DELINK INDIC OFF            12800021
         XC    CREL(4,CESD),CREL(CESD) CLEAR DELINK FIELD       ZA01335 12820002
MATERER2 TM    ETYPE(PTR),WEAKCALL IS WEAKCALL FLAG ON INC288           12840021
         BO    MATERER3            YES. LEAVE CESD AS IS   INC288       12860021
         NI    CTYPE(CESD),X'FF'-WEAKCALL  NO. MAKE SURE  INC288        12880021
*                                  WX IS OFF   INC288                   12900021
MATERER3 CLI   ESUBTYP(PTR),X'06'  IS ESD MARKED NEVCAL  INC288         12920021
         BNE   TRANSLAT                 NO, GO TO TRANSLATE ID          12940021
         OI    CTYPE(CESD),NEVERCAL    SET NEVERCALL INDIC.IN CESD'ER'  12960021
         B     TRANSLAT                GO TO TRANSLATE ID               12980021
         EJECT                                                          13000021
********                                                        ******* 13020021
*        THIS ROUTINE DECHAINS CESD ENTRIES WHEN THEIR TYPE CHANGES   * 13040021
********                                                        ******* 13060021
DECHAIN  L     WORKB,CMPREVPT           GET ADDR.OF PREV.ENTRY ON CHAIN 13080021
         L     WORKC,0(CESD)            GET ADDR.OF NEXT ENTRY ON CHAIN 13100021
         LTR   WORKB,WORKB             IS MATCH FIRST ON CHAIN          13120021
         BZ    DECHAIN1                YES                              13140021
         ST    WORKC,0(WORKB)           DECHAIN ENTRY                   13160021
         B     CHAINING                                                 13180021
DECHAIN1 ST    WORKC,CMERCHN           DECHAIN FIRST 'ER' ENTRY         13200021
********                                                        ******* 13220021
*        THIS ROUTINE CHAINS CESD ENTRIES ACCORDING TO TYPE           * 13240021
********                                                        ******* 13260021
CHAINING IC    WORKC,CTYPE(CESD)        GET CESD TYPE                   13280021
         N     WORKC,TYPEONLY                                           13300021
         SLL   WORKC,2                                                  13320021
         LA    WORKC,CMTYPCHN(WORKC)   CALC ADDR OF CHAIN TABLE         13340021
         L     WORKB,0(WORKC)                                           13360021
         ST    CESD,0(WORKC)            CHAIN NEW CESD ENTRY            13380021
         ST    WORKB,0(CESD)                                            13400021
********                                                        ******* 13420021
*        THIS ROUTINE MAKES A TRANSLATION TABLE ENTRY                 * 13440021
********                                                        ******* 13460021
TRANSLAT TM    ETYPE(PTR),X'06'         IS INPUT TYPE 'LD'              13480021
         BC    7,TRANS10                NO, GO TO TRANSLATE ID.         13500021
         TM    ETYPE(PTR),LD                                            13520021
         BO    NEXTESD                  YES,DON'T TRANSLATE             13540021
TRANS10  OI    CMRELFLG,CQESD           YES, SET ESD CALLER INDICATOR   13560021
         BAL   RETURN,TRANSID           GO TO TRANSLATE ID              13580021
         NI    CMRELFLG,CQFF-CQESD      SET OFF ESD CALLER INDICATOR    13600021
         LTR   PARM,PARM                WAS BAD ID ENCOUNTERED          13620021
         BZ    NEXTESD                  YES, GET NEXT ESD ITEM          13640021
         ST    CESD,0(PARM)             MAKE TRANSLATION TABLE ENTRY    13660021
         TM    ETYPE(PTR),X'05'         IS ESD TYPE 'ER'                13680021
         BC    7,NEXTESD               NO                               13700021
         TM    ETYPE(PTR),X'02'                                         13720021
         BZ    NEXTESD         '       NO                               13740021
         OI    0(PARM),ERMATCH         YES, SET INDIC FOR ABS. FACTOR   13760021
*                                            IF AN 'A'TYPE ADCON IS     13780021
*                                            USED TO REFERENCE THIS     13800021
*                                            EXTERNAL REFERENCE, THE    13820021
*                                            LOADER ASSIGNED ADDR.MUST  13840021
*                                            BE USED FOR RELOCATION     13860021
*                                            INSTEAD OF THE NORMAL      13880021
*                                            RELATIVE RELOCATION FACTOR 13900021
********                                                       ******** 13920021
*  THIS ROUTINE PREPARES TO PROCESS THE NEXT ESD IF THERE IS ONE      * 13940021
********                                                       ******** 13960021
NEXTESD  TM    ETYPE(PTR),X'06'         IS INPUT ESD TYPE'LD'           13980021
         BC    7,NEXT10                 NO                              14000021
         TM    ETYPE(PTR),LD                                            14020021
         BO    NEXT20                   YES, DON'T UPDATE ID            14040021
NEXT10   LA    ID,1(ID)                 UPDATE ID                       14060021
NEXT20   LA    PTR,16(PTR)              UPDATE INPUT RECORD PTR         14080021
         SH    LNG,CONT16                                               14100021
         BP    ESDSTART                 GO TO PROCESS NEXT ESD          14120021
         EJECT                                                          14140021
********                                                        ******* 14160021
*   THIS ROUTINE DOES END OF RECORD PROCESSING FOR THE LD CHAIN,IF IT * 14180021
*     EXISTS. THIS CHAIN CONSISTS OF LDS WHOSE SD WAS NOT DEFINED WHEN* 14200021
*     THE LD WAS PROCESSED.                                           * 14220021
********                                                        ******* 14240021
LDRTN    L     PTR,CMLDCHN             GET BEGINNING OF 'LD' CHAIN      14260021
         LTR   PTR,PTR                  IS THERE AN LD CHAIN            14280021
         BZ    LD20                     NO                              14300021
         TM    CTYPE(PTR),LDCHAIN       HAS CHAIN BEEN PROCESSED FOR    14320021
*                                            THIS RECORD                14340021
         BZ    LD10                     NO                              14360021
         NI    CTYPE(PTR),X'FF'-LDCHAIN TURN OFF PROCESSED INDIC        14380021
         B     ESDEND                   BRANCH TO RETURN                14400021
LD10     L     WORKB,0(PTR)             DECHAIN LD ENTRY                14420021
         ST    WORKB,CMLDCHN                                            14440021
         LA    LNG,16                   SET ESD LENGTH TO ONE ENTRY     14460021
         OI    CTYPE(PTR),LDCHAIN       SET PROCESSED THIS RECORD INDIC 14480021
         LA    PTR,4(PTR)              POINT TO ESD ITEM                14500021
         B     ESD35                                                    14520021
LD20     TM    CMLIBFLG,CQCESDR         IS THIS END OF CESD PROCESSING  14540021
         BZ    CESDEND                  YES,CONTINUE END OF CESD PROC.  14560021
ESDEND   L     SAVEREG,4(SAVEREG)       RESTORE SAVE AREA PTR           14580021
         RETURN (14,12),T                                               14600021
         EJECT                                                          14620021
**********************  SPECIAL LOAD MODULE PROCESSING **************** 14640021
*     THIS ROUTINE SETS ASIDE ALL PC,SD,AND LR CESD TYPES FOR A LOAD  * 14660021
*       MODULE AND THEN PROCESSES THEM AT END OF CESD.  THIS IS NEEDED* 14680021
*       BECAUSE SOME LOAD MODULES ARE NOT ASSIGNED ADDRESSES ACCORDING* 14700021
*       TO THE ORDER IN THE CESD.                                     * 14720021
*********************************************************************** 14740021
LOADPROC TM    CMLIBFLG,CQCESDR         IS THIS END OF CESD             14760021
         BZ    CESDEND                  YES,GO TO END OF CESD PROCESS   14780021
         TM    ETYPE(PTR),NULL          IS TYPE SD,PC OR LR             14800021
         BO    ESD15                    TYPE IS NULL                    14820021
         BZ    LOAD20                   TYPE IS SD                      14840021
         TM    ETYPE(PTR),LR                                            14860021
         BC    6,ESD10                  TYPE IS CM,PR,OR ER             14880021
         BZ    LOAD10                   TYPE IS PC                      14900021
         OI    CMCURRID,X'80'           IDENTIFY TYPE AS LR             14920021
         B     LOAD20                                                   14940021
LOAD10   TM    ETYPE(PTR),X'10'        IS PC DELETE(ENTAB-SEGTAB)       14960021
         BO    ESD15                   GO TO PROCESS AS NULL            14980021
LOAD20   BAL   RETURN,CESDENT           GET CESD ENTRY                  15000021
         MVC   CNAME(16,CESD),ENAME(PTR) MOVE  INFO.TO CESD ENTRY       15020021
         MVC   CTYPE+2(3,CESD),EADR+1(PTR) CREATE SPECIAL ENTRY FOR ID  15040021
         MVC   CTYPE(2,CESD),CMCURRID   MOVE ID AND TYPE TO CESD ENTRY  15060021
         NI    CMCURRID,X'7F'          CLEAR LR INDIC                   15080021
         LA    WORKA,CMLOADCH           SET AS PREVIOUS CHAIN ADDR      15100021
         L     WORKC,CMLOADCH           GET BEGINNING CHAIN ADDR        15120021
LOAD25   LA    WORKC,0(WORKC)           CLEAR SEGMENT NUMBER            15140021
         LTR   WORKC,WORKC              IS THIS END OF CHAIN            15160021
         BZ    LOAD45                   YES,GO TO CHAIN ENTRY           15180021
         CLC   ESEGNO(1,PTR),0(WORKC)   COMPARE SEGMENT NUMBERS         15200021
         BL    LOAD45                   CHAIN BEFORE                    15220021
         BH    LOAD30                   CONTINUE SEARCH                 15240021
         CLC   EADR+1(3,PTR),CADR+2(WORKC) COMPARE ADDRESSES            15260021
         BE    LOAD40                   ADDR. EQUAL                     15280021
         BL    LOAD45                   INPUT ADDR. LT EXISTING ADDR.   15300021
LOAD30   LR    WORKA,WORKC              SAVE AS RPEVIOUS CHAIN ADDR     15320021
         L     WORKC,0(WORKC)           GET NEXT ENTRY FROM CHAIN       15340021
         B     LOAD25                   CONTINUE SEARCH                 15360021
LOAD40   TM    ETYPE(PTR),X'03'        CHAIN LRS AFTER SDS,PCS  YA00379 15380001
         BO    LOAD30                  TYPE IS LR. CONT SEARCH  YA00379 15400001
LOAD45   LR    WORKC,WORKA              CHAIN BEFORE MATCHED ENTRY      15420021
LOAD50   L     WORKB,0(WORKC)           CHAIN AFTER  MATCHED ENTRY      15440021
         ST    WORKB,0(CESD)                                            15460021
         MVC   0(1,CESD),ESEGNO(PTR)    ENTER SEGMENT NUMBER            15480021
         ST    CESD,0(WORKC)                                            15500021
         SRL   WORKB,24                 RIGHT ADJUST SEGMENT NUMBER     15520021
         STC   WORKB,0(WORKC)           PRESERVE SEGMENT NUMBER         15540021
         B     NEXTESD                  GET NEXT ESD                    15560021
CESDEND  L     WORKC,CMTEMPCH           GET ADDR.OF FREE LOAD CHN.ENTRY 15580021
         LTR   WORKC,WORKC             IS THERE A LOAD CH ENTRY TO FREE 15600021
         BZ    CESDEND0                NO                               15620021
         L     WORKB,CMESDCHN          YES,CHAIN IT TO FREE ESD CHAIN   15640021
         ST    WORKC,CMESDCHN                                           15660021
         ST    WORKB,0(WORKC)                                           15680021
         XC    CMTEMPCH(4),CMTEMPCH    CLEAR CHAIN POINTER              15700021
CESDEND0 L     PTR,CMLOADCH            GET NEXT ESD                     15720021
         LA    PTR,0(PTR)               CLEAR SEGMENT NUMBER            15740021
         LTR   PTR,PTR                  ANY ENTRIES ON CHAIN            15760021
         BZ    ESDEND                   NO, RETURN TO CALLER            15780021
         LA    LNG,16                   SET LENGTH EQ TO ONE ESD ENTRY  15800021
         LH    ID,CTYPE(PTR)            GET  ID                         15820021
         MVC   CADR+1(3,PTR),CADR+2(PTR) READJUST INPUT ADDR FIELD      15840021
         MVI   CREL(PTR),X'00'         CLEAR HIGH BYTE OF R.C.          15860021
         TM    CTYPE(PTR),X'80'         IS TYPE'LR'                     15880021
         BZ    CESDEND1                 NO                              15900021
         SLL   ID,17                    YES, ZERO HIGH ORDER BITS OF ID 15920021
         SRL   ID,17                                                    15940021
         MVI   CTYPE(PTR),LR           SET TYPE TO 'LR'                 15960021
         B     CESDEND2                                                 15980021
CESDEND1 MVI   CTYPE(PTR),SD           SET TYPE TO 'SD'                 16000021
         CLI   CNAME(PTR),C' '         IS TYPE 'PC'                     16020021
         BNE   CESDEND2                NO                               16040021
         MVI   CTYPE(PTR),PC           SET TYPE TO 'PC'                 16060021
CESDEND2 L     WORKC,0(PTR)             TAKE ENTRY OFF LOAD CHAIN       16080021
         LA    WORKC,0(WORKC)           CLEAR SEGMENT NUMBER            16100021
         ST    WORKC,CMLOADCH                                           16120021
         LA    PTR,0(PTR)               CLEAR SEGMENT NUMBER            16140021
         ST    PTR,CMTEMPCH            SAVE ESD PTR TO FREE AFTER PROC. 16160021
         LA    PTR,4(PTR)               UPDATE PAST CHAIN FIELD         16180021
         STH   ID,CMCURRID             SAVE ID                          16200021
         B     ESD10                    GO TO PROCESS ESD               16220021
         EJECT                                                          16240021
********************  CESD ENTRY ALLOCATION  ************************** 16260021
*                                                                     * 16280021
*    THIS SUBROUTINE GETS A CESD ENTRY FROM CESD FREE ENTRIES CHAIN   * 16300021
*       OR CALLS THE ALLOCATE ROUTINE FOR ALLOCATION OF ONE ENTRY     * 16320021
*       THE ENTRY ADDRESS IS RETURNED IN #PARM AND #CESD              * 16340021
*                                                                     * 16360021
*********************************************************************** 16380021
CESDENT  STM   14,1,12(13)              SAVE REGISTERS 14-1             16400021
         L     PARM,CMESDCHN            GET BEGINNING OF FREE CESD CHN  16420021
         LTR   PARM,PARM                IS IT EMPTY                     16440021
         BC    7,CESDDCHN              NO                               16460021
         LA    ZERO,20                  SET ENTRY LENGTH                16480021
         BAL   RETURN,ALLOCATE          GO TO ALLOCATE A CESD ENTRY     16500021
CESDRTRN LM    14,0,12(13)              YES,RESTORE REGS. 14-0          16520021
         LR    CESD,PARM                                                16540021
         BR    RETURN                   RETURN                          16560021
CESDDCHN L     ZERO,0(PARM)            DECHAIN ENTRY FROM FREE CHAIN    16580021
         ST    ZERO,CMESDCHN                                            16600021
         B     CESDRTRN                 GO TO RETURN                    16620021
         EJECT                                                          16640021
**********************  MAKE CESD ENTRY FOR PC AND SD  **************** 16660021
*                          #CESD-ADDR.OF CESD ENTRY                   * 16680021
*                          #PTR-ADDR.OF INPUT ESD ITEM                * 16700021
*********************************************************************** 16720021
ENTER    MVC   CNAME(8,CESD),ENAME(PTR) MOVE NAME TO CESD               16740021
         L     WORKC,CMMODLNG          GET ACCUM. LENGTH                16760021
         LA    WORKC,7(WORKC)                                           16780021
         N     WORKC,DBLWRD            ROUND TO DOUBLE WORD             16800021
         ST    WORKC,CMMODLNG          SAVE ROUNDED LENGTH              16820021
         TM    CMFLAG4,CQMOD      IS THIS COMPILER-LOADED TEXT          16840021
         BZ    ENTER05            NO                                    16860021
         A     WORKC,CMCORE1      YES. USE COMPILER-ASSIGNED ADR        16880021
         B     ENTER10                                                  16900021
ENTER05  A     WORKC,CMNXTTXT     CALCUATE NEXT CSECT ADDRESS           16920021
         CL    WORKC,CMLOWTBL           HAS CORE BEEN EXCEEDED          16940021
         BH    RERSIZE2                 YES,PROGRAM TOO LARGE-ABORT     16960021
ENTER10  ST    WORKC,CADR(CESD)         LOADER ASSIGNED ADDR TO CESD    16980021
         MVC   CTYPE(1,CESD),ETYPE(PTR) MOVE FLAG FIELD TO CESD         17000021
         NI    CTYPE(CESD),X'07'        CLEAR FLAGS EXCEPT FOR TYPE     17020021
         L     WORKB,EADR(PTR)          GET INPUT ADDR.                 17040021
         LA    WORKB,0(WORKB)           CLEAR HIGH ORDER BYTES          17060021
         SR    WORKC,WORKB              RELOC.VALUE=LAA-INPUT ADDR      17080021
         ST    WORKC,CREL(CESD)         RELOC.VALUE TO CESD             17100021
         BR    RETURN                   RETURN                          17120021
         EJECT                                                          17140021
********                                                        ******* 17160021
*    THIS ROUTINE UPDATE THE RELOCATION CONSTANT,THEN GOES TO TRANSLAT* 17180021
********                                                        ******* 17200021
UPDATERC L     WORKC,EADR(PTR)          GET ESD INPUT ADDR.             17220021
         LA    WORKC,0(WORKC)                                           17240021
         L     WORKB,CADR(CESD)        GET LOADER ASSIGNED ADDR.        17260021
         LA    WORKB,0(WORKB)                                           17280021
         SR    WORKB,WORKC              CALC. RELOCATION CONSTANT       17300021
         ST    WORKB,CREL(CESD)         UPDATE RC.                      17320021
         B     TRANSLAT                 GO TO TRANSLATE                 17340021
         EJECT                                                          17360021
********                                                        ******* 17380021
*                        CHECK FOR ENTRY POINT NAME                   * 17400021
********                                                        ******* 17420021
CHECKEP  TM    CMPRMFLG,CQEPNAME+CQEPADDR HAS ENTRY PT.BEEN DEFINED     17440021
         BCR   9,RETURN                 YES OR AN ENTRY POINT WAS NOT   17460021
*                                            SPECIFIED                  17480021
         TM    CMPRMFLG,CQEPNAME        WAS A NAME DEFINED              17500021
         BCR   8,RETURN                 NO,RETURN                       17520021
         CLC   CMEPNAME(8),CNAME(CESD)  IS CURRENT CESD THE ENTRY POINT 17540021
         BCR   7,RETURN                NO                               17560021
         MVC   CMEPADDR+1(3),CADR+1(CESD) YES, SAVE EP  ADDR            17580021
         OI    CMPRMFLG,CQEPADDR        SET EP ADDR DEFINED INDICATOR   17600021
         BR    RETURN                                                   17620021
         EJECT                                                          17640021
***************************  TEXT PROCESSOR  ************************** 17660021
*                                                                     * 17680021
*    THIS ROUTINE LOADS TEXT INTO MAIN STORAGE.   IT  EXPECTS THE     * 17700021
*        FOLLOWING REGISTER CONTENT:                                  * 17720021
*                                                                     * 17740021
*             #ID - TEXT ID                                           * 17760021
*             #ADR- DISPLACEMENT ADDR OF TEXT                         * 17780021
*             #LNG- LENGTH OF TEXT                                    * 17800021
*             #PTR- ADDRESS OF TEXT IN BUFFER                         * 17820021
*                                                                     * 17840021
*********************************************************************** 17860021
HEWLTXT  LTR   LNG,LNG            IS THERE ANY TEXT                     17880021
         BZ    RELOREAD                 NO, GO TO READ NEXT RECORD      17900021
         TM    CMFLAG4,CQMOD      WAS MOD RECORD ALSO RECEIVED          17920021
         BO    RELOREAD           IGNORE THIS TEXT                      17940021
         BAL   RETURN,TRANSID           CONVERT ID TO TRANS.TABLE ADDR  17960021
         LTR   PARM,PARM                WAS CONVERSION POSSIBLE         17980021
         BZ    RELOREAD                 NO,BAD ID ENCOUNTERED           18000021
TXT10    TM    CTYPE(CESD),DELETE       SHOULD TEXT BE DELETED          18020021
         BO    RELOREAD                 TEXT IS DELETE,GO TO READ       18040021
         OI    CMLIBFLG,CQNOTXT        SET TEXT RECEIVED INDICATOR      18060021
         TM    CTYPE(CESD),NOLEN   WAS THIS ZERO-LENGTH CSECT   27445   18080021
         BNO   TXT20               NO                           27445   18100021
         OI    CMRELFLG,CQNOLNTX   SHOW TEXT WAS RECEIVED       27445   18120021
TXT20    A     ADR,CREL(CESD)      CALC MAIN STORAGE TEXT ADR   27445   18140021
         LA    WORKC,0(LNG,ADR)        CALC END TEXT ADDR.              18160021
         CL    WORKC,CMLOWTBL          WILL TEXT OVERLAP TABLES         18180021
         BH    RERSIZE2                YES,PROGRAM TOO LARGE--ABORT     18200021
         BCTR  LNG,0                                                    18220021
         EX    LNG,MOVE2                MOVE TEXT INTO MAIN STORAGE     18240021
         LA    ADR,1(ADR,LNG)          CALC. EXTENT OF TEXT ADDED       18260021
         CL    ADR,CMLSTTXT             IS HIGHEST TEXT ADDR.EXCEEDED   18280021
         BNH   RELOREAD                 NO                              18300021
         ST    ADR,CMLSTTXT             UPDATE HIGHEST TXT ADDR         18320021
         B     RELOREAD                GO TO READ NEXT RECORD           18340021
         EJECT                                                          18360021
****************************MOD PROCESSOR****************************** 18380021
*                                                                     * 18400021
*        THIS ROUTINE PICKS UP ORIGIN AND EXTENT INFORMATION          * 18420021
*        FOR COMPILER-LOADED TEXT FROM MOD CARDS PASSED THROUGH AN    * 18440021
*        INCORE DATA SET.  IT EXPECTS THE FOLLOWING REGISTER CONTENT  * 18460021
*                                                                     * 18480021
*              #LNG - LENGTH OF INFO                                  * 18500021
*         #PTR - ADDRESS OF INFO IN BUFFER                            * 18520021
*                                                                     * 18540021
*********************************************************************** 18560021
HEWLMOD  TM    CMFLAG3,CQINCORE   IS THIS INCORE DATA SET               18580021
         BZ    RELOREAD           NO. IGNORE IT                         18600021
         TM    CMFLAG4,CQESDS     ESD CARDS ALREADY RECEIVED            18620021
         BNZ   RELOREAD           YES. IGNORE THIS THEN                 18640021
         LTR   LNG,LNG            ANY MOD INFO                          18660021
         BZ    RELOREAD           NO. IGNORE IT                         18680021
         OI    CMLIBFLG,CQNOTXT    SET TEXT RECEIVED                    18700021
         OI    CMFLAG4,CQMOD      SET MOD RECEIVED                      18720021
         L     WORKC,0(PTR)       GET ORIGIN OF TEXT                    18740021
         LTR   WORKC,WORKC         WAS IT SPECIFIED                     18760021
         BZ    MODEXTNT            NO. SEE IF EXTENTS DEFINED           18780021
MOD10    ST    WORKC,CMCORE1      SAVE ORIGIN OF TEXT                   18800021
         L     WORKC,4(PTR)       GET LAST ADDRESS                      18820021
         ST    WORKC,CMCORE2      SAVE IT                               18840021
MODEXTNT LA    WORKC,8             SEE IF THERE'S EXTENT INFO           18860021
         SR    LNG,WORKC           IS LENGTH GREATER THAN 8             18880021
         BNP   RELOREAD            NO. BRANCH                           18900021
MODEXT   LA    ZERO,12             GET THREE WORDS TO SAVE              18920021
         BAL   RETURN,ALLOCATE     EXTENT INFO IN                       18940021
         L     WORKC,CMLOWTBL      FIND ADDRESS                         18960021
         MVC   0(4,WORKC),CMXLCHN  CHAIN IT                             18980021
         MVC   CMXLCHN(4),CMLOWTBL TO OTHER EXTENTS                     19000021
         MVC   4(8,WORKC),8(PTR)   MOVE IN EXTENT INFO                  19020021
         LH    WORKC,CMNUMXS       PICK UP NUMBER OF EXTENTS            19040021
         TM    CMPRMFLG,CQEPNAME+CQEPADDR   HAS ENTRY POINT BEEN DEF    19060021
         BNZ   MODEXT1             YES.                                 19080021
         LTR   WORKC,WORKC         NO. IS THIS FIRST EXTENT             19100021
         BNZ   MODEXT1             NO                                   19120021
         MVC   CMEPADDR(4),8(PTR)  YES. USE IT AS ENTRY POINT           19140021
MODEXT1  LA    WORKC,1(WORKC)      ADD AN EXTENT                        19160021
         STH   WORKC,CMNUMXS       TO TOTAL                             19180021
         B     RELOREAD            GO GET ANOTHER RECORD                19200021
         EJECT                                                          19220021
*************************   RLD PROCESSOR   *************************** 19240021
*                                                                     * 19260021
*    THIS SUBROUTINE RELOCATES ADDRESS CONSTANTS USING THE RELOCATION * 19280021
*      DICTIONARY (RLDS) ENTRIES SENT IT.  IF RELOCATION IS NOT       * 19300021
*      POSSIBLE, THE RLDS ARE CHAINED OFF OF THE R PTR CESD ENTRY.    * 19320021
*      IT EXPECTS:                                                    * 19340021
*            #PTR-POINTER TO RLD INFORMATION                          * 19360021
*            #LNG-LENGTH OF RLD INFORMATION                           * 19380021
*********************************************************************** 19400021
HEWLRLD  EQU   *                                                        19420021
         STM   14,12,12(13)             SAVE REGISTERS                  19440021
RLDBASE  BALR  BASE,0                                                   19460021
         USING *,BASE                                                   19480021
         L     BASE,ABEGIN                                              19500021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           19520021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 19530000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 19532000
         B     NRLD+8                                                   19540021
NRLD     DC    C'HEWLRLD '                                              19560021
         L     SAVEREG,8(SAVEREG)       PICK UP NEXT SAVE AREA ADDR.    19580021
RLD10    LTR   LNG,LNG                  ARE ALL RLDS PROCESSED          19600021
         BC    2,RLD30                  NO.                             19620021
RLD19    L     SAVEREG,4(SAVEREG)       RESTORE SAVE AREA PTR           19640021
         RETURN (14,12),T                                               19660021
*                                                                     * 19680021
*                    CHECK VALIDITY OF P PTR                          * 19700021
*                                                                     * 19720021
RLD30    TM    CMRELFLG,CQENTRY         IS THIS THE ENTRY POINT RLD     19740021
         BO    RLD35                    YES                             19760021
         LH    ID,P(PTR)                GET P PTR                       19780021
         BAL   RETURN,TRANSID           GET TRANS. TABLE ENTRY ADDR     19800021
         LTR   PARM,PARM                WAS TRANSLATION POSSIBLE        19820021
         BZ    RLD65                    NO                              19840021
         L     WORKA,0(PARM)            GET CESD ENTRY ADDR             19860021
         TM    CTYPE(WORKA),DELETE      IS CSECT MARKED DELETE          19880021
         BO    RLD65                    YES                             19900021
         TM    RLDFLG(PTR),ACCUMPR     IS RLD CXD PSEUDO REG. TYPE      19920021
         BO    RLD40                   YES                              19940021
*                                                                     * 19960021
*                       CHECK VALIDITY OF R PTR                       * 19980021
*                                                                     * 20000021
RLD35    LH    ID,R(PTR)                GET R PTR                       20020021
         BAL   RETURN,TRANSID           GET TRANS, TABLE ENTRY ADDR     20040021
         LTR   PARM,PARM                WAS TRANSLATION POSSIBLE        20060021
         BZ    RLD65                    NO                              20080021
*                                                                     * 20100021
*           RELOCATE ADCON ADDRESS - MAKE RLD TABLE ENTRY             * 20120021
*                                                                     * 20140021
RLD40    L     PARM,CMRLDCHN            GET BEG.ADDR OF FREE RLD TABLE  20160021
*                                            ENTRIES                    20180021
         LTR   PARM,PARM                IS IT EMPTY                     20200021
         BC    7,RLD45                  NO                              20220021
         LA    ZERO,8                   YES, INDICATE ENTRY SIZE        20240021
         BAL   RETURN,ALLOCATE          GO TO ALLOCATE ENTRY            20260021
         B     RLD48                    NO, CONTINUE PROCESSING         20280021
RLD45    L     ZERO,0(PARM)             DECHAIN ENTRY FROM FREE CHAIN   20300021
         ST    ZERO,CMRLDCHN                                            20320021
RLD48    L     WORKB,RLDADR(PTR)                                        20340021
         LA    WORKB,0(WORKB)                                           20360021
         A     WORKB,CREL(WORKA)        CALC. ADCON ADDRESS             20380021
         ST    WORKB,4(PARM)            SAVE ADCON ADDRESS IN RLD TABLE 20400021
         TM    RLDFLG(PTR),ACCUMPR     IS RLD CXD PSEUDO REG. TYPE      20420021
         BO    RLD100                  YES                              20440021
         MVC   4(1,PARM),RLDFLG(PTR)    SAVE FLAG FIELD IN RLD TABLE    20460021
         LTR   CESD,CESD               IS ABSOLUTE FACTOR NEEDED        20480021
         BC    11,RLD49                NO                               20500021
         OI    4(PARM),ERMATCH         USE ABSOLUTE FACTOR              20520021
*                                                                     * 20540021
*        CHECK R PTR TYPE --- RELOCATE RLD OR CHAIN IT TO CESD ENTRY  * 20560021
*                                                                     * 20580021
RLD49    TM    CTYPE(CESD),LR          R PTR TYPE IS SD,PC,OR LR        20600021
         BM    RLD70                    NO                              20620021
         XC    0(4,PARM),0(PARM)       CLEAR CHAIN FIELD                20640021
         BAL   RETURN,HEWLERTN    GO TO RELOCATE RLD                    20660021
RLD50    TM    RLDFLG(PTR),CONT         IS NEXT RLD ITEM CHAINED        20680021
         BC    14,RLD60                 NO, GO TO GET NEXT R-P PTR      20700021
*                                                                     * 20720021
*                     UPDATE TO NEXT FA FIELD                         * 20740021
*                                                                     * 20760021
         LA    PTR,4(PTR)               UPDATE TO NEXT FA FIELD         20780021
         SH    LNG,CONT4                                                20800021
         CH    LNG,CONT4                ARE ANY RLDS LEFT               20820021
         BH    RLD40                    YES, GO TO PROCESS NEXT RLD     20840021
         BAL   RETURN,RERINPT9          INVALID INPUT FROM OBJ MODULE   20860021
         B     RLD19                   RETURN                           20880021
*                                                                     * 20900021
*              UPDATE TO NEXT R-P PTR                                 * 20920021
*                                                                     * 20940021
RLD60    LA    PTR,8(PTR)               UPDATE RLD PTR                  20960021
         SH    LNG,CONT8                DECR. LENGTH                    20980021
         B     RLD10                    GO TO PROCESS NEXT R-P PTR      21000021
RLD65    TM    RLDFLG(PTR),CONT         NEXT ITEM CHAINED               21020021
         BZ    RLD60                    NO                              21040021
         LA    PTR,4(PTR)               UPDATE POINTER                  21060021
         SH    LNG,CONT4                                                21080021
         LTR   LNG,LNG                  HAS RECORD END BEEN REACHED     21100021
         BC    2,RLD65                  NO, CONTINUE SEARCH FOR R-P     21120021
         B     RLD19                    YES, RETURN TO CALLER           21140021
*                                                                     * 21160021
*     R PTR TYPE IS CM,PR,OR ER  - CHAIN RLD TO CESD ENTRY            * 21180021
*                                                                     * 21200021
RLD70    TM    CTYPE(CESD),CM          IS CESD TYPE COMMON              21220021
         BO    RLD75                   YES                              21240021
         BZ    RLD72                    NO, CESD TYPE IS ER             21260021
         OI    4(PARM),PRRLD            CESD TYPE IS 'PR',SET PR FLAG   21280021
         B     RLD80                                                    21300021
*                                       PRECEDING CODING TO MARK RLD AS 21320021
*                                       DISPLACEMENT PR IS INCLUDED     21340021
*                                       BECAUSE THE ASSEMBLER PUTS OUT  21360021
*                                       NON-BRANCH RLDS FOR Q-TYPE      21380021
*                                       ADDRESS CONSTANTS               21400021
RLD72    TM    CTYPE(CESD),DELINK       DOES RLD NEED DELINKING         21420021
         BZ    RLD80                    NO                              21440021
RLD75    OI    CMRELFLG,CQDELINK        SET SPECIAL RELOCATION INDIC.   21460021
         BAL   RETURN,HEWLERTN    GO TO DELINK ADCON                    21480021
RLD80    L     WORKC,CADR(CESD)                                         21500021
         ST    PARM,CADR(CESD)                                          21520021
         ST    WORKC,0(PARM)            CHAIN RLD TO CESD ENTRY         21540021
         MVC   CADR(1,CESD),0(PARM)    PRESERVE TYPE INDIC              21560021
         MVI   0(PARM),X'00'           CLEAR TYPE FROM CHAIN ADDR       21580021
         B     RLD50                    GO TO CHECK IF NEXT R-P OR ADDR 21600021
*                                                                     * 21620021
*                 RLD IS CXD PSEUDO REGISTER TYPE                     * 21640021
*                                                                     * 21660021
RLD100   L     WORKB,CMCXDPT           CHAIN ACCUM PSEUDO REGISTER      21680021
         ST    PARM,CMCXDPT                                             21700021
         ST    WORKB,0(PARM)                                            21720021
         B     RLD50                   GO TO CHECK IF NEXT R-P OR ADDR  21740021
         EJECT                                                          21760021
****************************  END PROCESSOR  ************************** 21780021
*                                                                     * 21800021
*    THIS ROUTINE PROCESSES THE END CARD FOR LENGTH AND ENTRY POINT.  * 21820021
*      IT ALSO CLEARS THE TRANSLATION TABLE.  IT EXPECTS:             * 21840021
*              #ID - CONTAINS ID OF ASSEMBLED ADDR. ENTRY             * 21860021
*              #PTR- ADDR OF SYMBOLIC ENTRY POINT NAME                * 21880021
*              #ADR- ENTRY POINT ADDRESS IF PRESENT                   * 21900021
*                                                                     * 21920021
*********************************************************************** 21940021
HEWLEND  EQU   *                                                        21960021
         STM   14,12,12(13)             SAVE REGISTERS                  21980021
         BALR  BASE,0                                                   22000021
         USING *,BASE                                                   22020021
         L     BASE,ABEGIN                                              22040021
         USING HEWLRELO,BASE                                            22060021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 22070000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 22072000
         B     NEND+8                                                   22080021
NEND     DC    C'HEWLEND '                                              22100021
         L     SAVEREG,8(SAVEREG)       PICK UP NEXT SAVE AREA          22120021
         TM    CMIOFLGS,CQEOCB+CQRECFM  IS THIS END OF MODULE PROCESS   22140021
         BC    7,ENDLNG                YES                              22160021
         OI    CMRELFLG,CQNOEND        SET END CARD RECEIVED INDIC      22180021
         L     WORKB,CMLDCHN           GET START OF 'LD' CHAIN          22200021
         LTR   WORKB,WORKB             IS 'LD' CHAIN EMPTY              22220021
         BZ    ENDEPCHK                YES                              22240021
         BAL   RETURN,RERINPT7         INVALID ID ON 'LD' ENTRY         22260021
ENDEPCHK TM    CMPRMFLG,CQEPNAME+CQEPADDR HAS ENTRY POINT BEEN DEFINED  22280021
         BZ    ENDENTRY                 NO                              22300021
********                                                     ********** 22320021
*                  DEFINE CSECT LENGTH AND MODULE EXTENT              * 22340021
********                                                     ********** 22360021
ENDLNG   L     WORKA,CMNXTTXT           GET MODULE START ADDR           22380021
         TM    CMFLAG4,CQMOD      IS THIS COMPILER-LOADED TEXT          22400021
         BZ    END05              NO                                    22420021
         BAL   RETURN,SWITCH      SWITCH LIMIT ADDRESSES                22440021
END05    EQU   *                                                        22460021
         TM    CMRELFLG,CQNOLNG         WAS LENGTH ALREADY SPECIFIED    22480021
         BZ    END19                    YES                             22500021
         TM    CMRELFLG,CQNOEND        WAS END CARD MISSING             22520021
         BZ    END12                   YES                              22540021
END10    L     LNG,COL29(PTR)           GET LENGTH FIELD                22560021
         CLI   COL29(PTR),X'00'         IS LENGTH ON END CARD           22580021
         BE    END13                    YES                             22600021
END12    TM    CMRELFLG,CQNOLNTX   WAS TEXT RECEIVED            27445   22620021
         BNO   END12A              NO. CSECT WITH LNG ZERO OKAY 27445   22640021
         BAL   RETURN,RERINPT2     YES. ERROR                   27445   22660021
END12A   EQU   *                                                SA49491 22670000
         SR    LNG,LNG                  CSECT LENGTH 0          SA49491 22672000
         C     LNG,CMMODLNG             MORE THAN ONE CSECT?    SA49491 22674000
         BL    END12B                   MULT CSECTS, ONE ZERO   SA49491 22676000
         L     WORKA,CMLSTTXT           USE CMLSTTXT            SA49491 22678000
         B     END20                                            SA49491 22678400
END12B   EQU   *                                                SA49491 22678800
         L     LNG,CMMODLNG             USE CMMODLNG            SA49491 22679200
         L     WORKA,CMOBJST            GET BEGINING ADDRESS    YA00226 22679601
         B     END20                                            SA49491 22679700
END13    EQU   *                                                SA49491 22679800
         A     LNG,CMMODLNG             UPDATE NEW ACCUM LENGTH SA49491 22679900
         ST    LNG,CMMODLNG             STORE IT BACK           SA49491 22686600
         A     LNG,CMOBJST              COMPUTE HIGH ADDRESS    YA00226 22688601
         CL    LNG,CMLSTTXT             ACCUM GREATER THAN TXT? YA00226 22690601
         L     LNG,CMMODLNG             RESTORE LNG REGISTER    SA49491 22692600
         BH    END20                    YES, GO USE IT          SA49491 22693000
         L     WORKA,CMNXTTXT           GET LENGTH              SA49491 22693100
         ST    WORKA,CMOBJST            SAVE IT                 SA49491 22693200
         B     END20                    GO CALCULATE MODULE LNG SA49491 22699900
END19    L     LNG,CMMODLNG             NO,USE ACCUM MODULE LNG         22780021
END20    AR    WORKA,LNG                CALC. PROGRAM HIGHEST ADDR.     22800021
         LA    WORKA,7(WORKA)                                           22820021
         N     WORKA,DBLWRD             UPDATE TO DBLE. WORD BOUNDARY   22840021
         CL    WORKA,CMLSTTXT           HAS TEXT EXCEEDED SPECIFIED LNG 22860021
         BNL   END25                    NO                              22880021
         L     WORKA,CMLSTTXT           YES,USE ACTUAL TEXT LENGTH      22900021
         LA   WORKA,7(WORKA)            ROUND OFF TO             A47048 22910000
         N    WORKA,DBLWRD              DOUBLEWORD BOUNDARY      A47048 22912000
         BAL   RETURN,RERINPT2          ERROR,TXT RECEIVED EXCEEDS LNG  22920021
END25    ST    WORKA,CMNXTTXT           UPDATE NEXT TEXT ADDRESS        22940021
         ST    WORKA,CMOBJST            SAVE AMOUNT IN OBJST    SA49491 22950000
         ST    WORKA,CMLSTTXT          INITIAL TEXT POINTER             22960021
         TM    CMFLAG4,CQMOD      IS THERE INCORE TEXT                  22980021
         BZ    END26              NO                                    23000021
         BAL   RETURN,SWITCH                                            23020021
END26    EQU   *                                                        23040021
         CL    WORKA,CMHITBL            HAS CORE EXTENT BEEN EXCEEDED   23060021
         BNH   ENDTRCLR                NO                               23080021
         B     RERSIZE2                PROGRAM TOO LARGE--ABORT         23100021
SWITCH   L     WORKB,CMCORE1      SWITCH ADDRESSES                      23120021
         ST    WORKA,CMCORE1      FOR  COMPILER-LOADED TEXT             23140021
         ST    WORKB,CMNXTTXT                                           23160021
         ST    WORKB,CMOBJST            SAVE IT                 SA49491 23170000
         L     WORKA,CMCORE2                                            23180021
         L     WORKB,CMLSTTXT                                           23200021
         ST    WORKA,CMLSTTXT                                           23220021
         ST    WORKA,CMLSTTXT                                           23240021
         ST    WORKB,CMCORE2                                            23260021
         BR    RETURN                                                   23280021
********                                                        ******* 23300021
*                       CLEAR TRANSLATION TABLE                       * 23320021
********                                                        ******* 23340021
ENDTRCLR LA    WORKC,CQMAXEXT           NO. OF TRANS. TABLE EXTENTS     23360021
         BCTR  WORKC,0                                                  23380021
         SLL   WORKC,2                  CALC. DISP INTO TRANS. CTRL.TBL 23400021
         LA    WORKB,CMTRCTRL           ADDR. OF TRANS.CTRL. TABLE      23420021
         LH    WORKA,NEG4                                               23440021
ENDCLEAR L     PTR,0(WORKB,WORKC)       GET ADDR OF EXTENT              23460021
         LTR   PTR,PTR                  HAS EXTENT BEEN ALLOCATED       23480021
         BZ    ENDLOOP                  NO                              23500021
         XC    0(CQEXTSIZ,PTR),0(PTR)   CLEAR EXTENT                    23520021
ENDLOOP  BXH   WORKC,WORKA,ENDCLEAR     DECR-TEST-LOOP OR CONTINUE      23540021
         XC    CMMODLNG(4),CMMODLNG     CLEAR MODULE LENGTH             23560021
         NI    CMRELFLG,CQNOEND+CQLIB   CLEAR FLAGS                     23580021
         NI    CMFLAG4,X'FF'-CQESDS-CQMOD    SET FLAGS 0                23600021
         L     SAVEREG,4(SAVEREG)       RESTORE SAVE AREA PTR           23620021
         RETURN (14,12),T                                               23640021
********                                                        ******* 23660021
*                        ENTRY POINT DEFINITION                       * 23680021
********                                                        ******* 23700021
ENDENTRY CH    ID,BLNK+2                IS ID PRESENT                   23720021
         BE    ENDSYM                   NO                              23740021
         CL    ADR,BLNK                 HAS ADDR.BEEN SPECIFIED         23760021
         BNE   END100                   YES                             23780021
         SR    ADR,ADR                  NO, SET ADDR TO ZERO            23800021
END100   ST    ADR,CMEPADDR             SAVE ENTRY POINT  ADDR.         23820021
         BAL   RETURN,TRANSID           CONVERT ID TO TRANS.TABLE ADDR  23840021
         LTR   PARM,PARM                WAS TRANSLATION POSSIBLE        23860021
         BZ    ENDLNG                   NO                              23880021
         LA    WORKC,CMEPADDR           CREATE RLD FOR EP               23900021
         ST    WORKC,CMEPNAME+4                                         23920021
         MVI   CMEPNAME+4,X'0C'         SET FLAG  FIELD FOR EP RLD      23940021
         STH   ID,CMEPNAME              SAVE R PTR FOR EP RLD           23960021
         XC    CMEPCESD(4),CMEPCESD     SET RELOC VALUE TO ZERO         23980021
         LA    WORKA,CMEPCESD-16        SIMULATE P PTR CESD ADDR        24000021
         LA    LNG,8                    GET LENGTH OF RLD ENTRY         24020021
         LR    WORKC,PTR                SAVE BUFFER POINTER             24040021
         LA    PTR,CMEPNAME             GET ADDR OF RLD ENTRY           24060021
         OI    CMRELFLG,CQENTRY         SET INDIC NOT TO TRANS P PTR    24080021
         BAL   RETURN,HEWLRLD          GO TO PROCESS RLD FOR EP         24100021
         LR    PTR,WORKC                RESTORE BUFFER POINTER          24120021
ENDADDR  ST    CESD,CMEPCESD            SAVE ENTRY POINT CESD ADDR      24140021
         OI    CMPRMFLG,CQEPADDR        SET EP ADDR RECEIVED            24160021
         B     ENDLNG                                                   24180021
ENDSYM   CLI   0(PTR),BLANK             IS NAME ON END CARD             24200021
         BE    ENDLNG                   NO                              24220021
         MVC   CMEPNAME(8),0(PTR)       SAVE ENTRY POINT NAME           24240021
         OI    CMPRMFLG,CQEPNAME        SET EP NAME RECEIVED            24260021
*                                                                     * 24280021
*                 CHECK IF ENTRY POINT NAME DEFINED YET               * 24300021
*                                                                     * 24320021
         L     WORKC,CMSDCHN            CHECK 'SD' CHAIN                24340021
         LA    RETURN,ENDLRCHN                                          24360021
ENDEP    LTR   WORKC,WORKC              IS THIS END OF CHAIN            24380021
         BCR   8,RETURN                 YES                             24400021
         CLC   CNAME(8,WORKC),CMEPNAME  CHECK FOR ENTRY POINT NAME      24420021
         BE    ENDEPADR                                                 24440021
         L     WORKC,0(WORKC)           UPDATE TO NEXT ENTRY            24460021
         B     ENDEP                                                    24480021
ENDLRCHN LA    RETURN,ENDLNG            SET RETURN REGISTER             24500021
         L     WORKC,CMLRCHN            GET BEGINNING OF LR CHAIN       24520021
         B     ENDEP                    GO TO SEARCH CHAIN              24540021
ENDEPADR MVC   CMEPADDR+1(3),CADR+1(WORKC) SAVE ENTRY POINT ADDR.       24560021
         OI    CMPRMFLG,CQEPADDR        SET INDICATOR FOR EP ADDR       24580021
         B     ENDLNG                   GO TO CHECK LENGTH              24600021
         EJECT                                                          24620021
***********************  TABLE ALLOCATION ROUTINE  ******************** 24640021
*                                                                     * 24660021
*   THIS ROUTINE ALLOCATES TABLE EXTENTS AND RETURNS THE ENTRY ADDR.  * 24680021
*     IN #PARM.  #ZERO MUST CONTAIN EXTENT SIZE ON ENTRY.             * 24700021
*                                                                     * 24720021
*********************************************************************** 24740021
ALLOCATE EQU   *                                                        24760021
         L     PARM,CMLOWTBL            ADDR OF LOWEST USED TABLE ADDR  24780021
         SR    PARM,ZERO                                                24800021
         C     PARM,CMLSTTXT            HAVE TABLES OVERLAPPED TEXT     24820021
         BNL   ALLOC                                                    24840021
         B     RERSIZE2                PROGRAM TOO LARGE--ABORT         24860021
ALLOC    ST    PARM,CMLOWTBL            UPDATE LOWEST TABLE ADDRESS     24880021
         BR    RETURN                   RETURN                          24900021
         EJECT                                                          24920021
**************************  TRANSLATE ROUTINE  ************************ 24940021
*                                                                     * 24960021
*  THIS SUBROUTINE TRANSLATES THE ESD ID TO A CORRESPONDING ENTRY     * 24980021
*     ADDRESS IN  THE TRANSLATE TABLE.  #ID MUST CONTAIN THE ESD ID.  * 25000021
*     THE LOW ORDER BIT OF CMRELFLG SHOULD BE SET TO INDICATE WHETHER * 25020021
*     THE TRANSLATION TABLE ENTRY SHOULD EXIST OR NOT                 * 25040021
*     THE ENTRY ADDRESS IS RETURNED IN #PARM. IF BAD ID,#PARM= 0.     * 25060021
*     THE CONTENTS OF THE ENTRY(CESD ADDR) ARE RETURNED IN #CESD IF   * 25080021
*     REQUESTED BY CQESD FLAG                                         * 25100021
*********************************************************************** 25120021
TRANSID  EQU   *                                                        25140021
         STM   14,12,12(13)             SAVE REGISTERS                  25160021
         BALR  BASE,0                                                   25180021
         USING *,BASE                                                   25200021
         L     BASE,ABEGIN                                              25220021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           25240021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 25250000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 25252000
         B     NTRAN+8                                                  25260021
NTRAN    DC    C'TRANSID '                                              25280021
         L     SAVEREG,8(SAVEREG)       GET NEXT SAVE AREA              25300021
         LTR   ID,ID                    IS ID EQ TO 0                   25320021
         BZ    TRBADID                  YES-ERROR                       25340021
         LA    ZERO,CQEXTSIZ            NO.OF TRANSLATE EXTENT ENTRIES  25360021
         LA    WORKA,CQMAXEXT           MAX. NO. OF EXTENTS             25380021
         SR    WORKC,WORKC              CLEAR EVEN DIVIDE REGISTER      25400021
         DR    WORKC,ZERO               CALC.TRANSLATE CTRL ENTRY NO.   25420021
         CR    ID,WORKA                 HAS EXTENT BEEN ALLOCATED       25440021
         BNL   TRANSERR                 NO                              25460021
         SLL   ID,2                     CALC DISP                       25480021
         LA    ID,CMTRCTRL(ID)          CALC TRANSLATE CTRL ENTRY ADDR  25500021
         L     PARM,0(ID)                                               25520021
         LTR   PARM,PARM                HAS THE EXTENT BEEN ALLOCATED   25540021
         BC    7,CALCADDR               YES, GO TO CALC ADDR            25560021
         TM    CMRELFLG,CQESD           ERROR OR ALLOCATE MORE          25580021
         BZ    TRBADID                  ERROR-BAD ID                    25600021
         LA    ZERO,CQEXTSIZ*4          SIZE OF EXTENT                  25620021
         BAL   RETURN,ALLOCATE          GO TO ALLOCATE EXTENT           25640021
         ST    PARM,0(ID)               PUT EXTENT ADDR IN CTRL TABLE   25660021
         XC    0(CQEXTSIZ*4,PARM),0(PARM) CLEAR TRANSLATION TABLE ENTRY 25680021
CALCADDR SLL   WORKC,2                                                  25700021
         AR    PARM,WORKC               CALC TRANSLATE ENTRY ADDR       25720021
         TM    CMRELFLG,CQESD           SHOULD ESD BE DEFINED           25740021
         BO    ENDALLOC                 NO                              25760021
         L     CESD,0(PARM)             YES,CHECK IF IT IS DEFINED      25780021
         LTR   CESD,CESD                                                25800021
         BZ    TRBADID                  ERROR, IT IS NOT DEFINED        25820021
ENDALLOC L     SAVEREG,4(SAVEREG)       RESTORE REGISTERS               25840021
         LM    2,8,28(13)               PRESERVE REGISTER 1 AND 9       25860021
         LM    10,12,60(13)                                             25880021
         L     14,12(13)                                                25900021
         MVI   12(13),X'FF'             FLAG SAVE AREA                  25920021
         BR    RETURN                   RETURN                          25940021
TRANSERR TM    CMRELFLG,CQESD           TABLE OVERFLOW OR BAD ID        25960021
         BZ    TRBADID                  BAD ID                          25980021
         B     RERSIZE3                TRANS.TABLE SIZE EXCEEDED        26000021
TRBADID  BAL   RETURN,RERINPT7         INVALID ID                       26020021
         SR    PARM,PARM                CLEAR PARM REG.                 26040021
         B     ENDALLOC                 RETURN TO CALLER                26060021
         EJECT                                                          26080021
********************     EXTERNAL REFERENCE RESOLUTION  *************** 26100021
*                                                                     * 26120021
*   THIS SUBROUTINE RELOCATES ALL RLDS ON A CHAIN, THEN RETURNS. WHEN * 26140021
*      ENTERED #PARM-MUST CONTAIN THE STARTING ADDR.OF THE ER CHAIN   * 26160021
*              #CESD-MUST CONTAIN THE CESD ENTRY ADDR TO BE USED FOR  * 26180021
*                    RELOCATION (R PTR ENTRY)                         * 26200021
*                                                                     * 26220021
*********************************************************************** 26240021
HEWLERTN EQU   *                                                        26260021
         STM   14,12,12(13)             SAVE REGISTERS                  26280021
RESOLVER BALR  BASE,0                                                   26300021
         USING *,BASE                                                   26320021
         L     BASE,ABEGIN                                              26340021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           26360021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 26370000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 26372000
         B     NERTN+8                                                  26380021
NERTN    DC    C'HEWLERTN'                                              26400021
         L     SAVEREG,8(SAVEREG)       GET NEXT SAVE AREA              26420021
ERRTN    LTR   PARM,PARM                IS THIS LAST ON CHAIN           26440021
         BC    7,ER5                   NO                               26460021
ER2      L     SAVEREG,4(SAVEREG)       RESTORE PTR TO SAVE AREA        26480021
         RETURN (14,12),T                                               26500021
ER5      LA    LNG,3                    SET LNG OF 4 FOR EX INSTRUCTION 26520021
         TM    4(PARM),X'0C'            IS THE LENGTH EQ TO 4           26540021
         BO    ER10                     YES                             26560021
         LA    LNG,2                    SET LNG OF 3 FOR EX INSTRUCTION 26580021
         TM    4(PARM),X'04'            IS IT A TWO BYTE ADCON          26600021
         BZ    ER10                     NO,CONTINUE RELOCATION          26620021
         LA    LNG,1                    SET LNG EQ 1                    26640021
         TM    4(PARM),PRRLD            IS IT A VALID 2 BYTE PR         26660021
         BO    ER10                     YES,CONTINUE RELOCATION         26680021
         BAL   RETURN,RERINPT5         INVALID TWO BYTE ADCON           26700021
*                                                                     * 26720021
*        MOVE ADCON FROM TEXT TO WORK AREA                            * 26740021
*                                                                     * 26760021
ER10     L     WORKA,4(PARM)            GET TEXT ADDR. OF ADCON         26780021
         LA    WORKA,0(WORKA)           CLEAR HIGH ORDER FLAG FIELD     26800021
         LA    WORKB,CMADCON+3          END ADDR OF ADCON SAVE AREA     26820021
         SR    WORKB,LNG                                                26840021
         MVI   CMADCON,X'00'           CLEAR HIGH ORDER BYTE            26860021
         EX    LNG,MOVEOUT              MOVE ADCON TO WORK AREA         26880021
*                                                                     * 26900021
*        TEST TYPE TO DETERMINE WHAT TYPE OF RELOCATION TO PERFORM    * 26920021
*                                                                     * 26940021
         TM    CMRELFLG,CQDELINK        IS DELINKING NEEDED             26960021
         BO    ER60                     YES                             26980021
         TM    4(PARM),PRRLD           IS THIS A PR RLD                 27000021
         BO    ER15                    YES, GO FOR ABSOLUTE RELOCATION  27020021
         TM    4(PARM),VCON             IS ADCON BRANCH TYPE            27040021
         BZ    ER40                     NO, IT IS NON-BRANCH TYPE       27060021
*                                                                     * 27080021
*                       ABSOLUTE  RELOCATION                          * 27100021
*                                                                     * 27120021
ER15     MVC   CMADCON(4),CADR(CESD)   GET LOADER ASSIGNED ADDRESS      27140021
         MVI   CMADCON,X'00'            CLEAR HIGH ORDER BYTE           27160021
         EX    LNG,MOVEIN               SET ADCON=LOADER ASSIGNED ADDR  27180021
*                                                                     * 27200021
*              PUT RLD ENTRY ON FREE ENTRY CHAIN                      * 27220021
*                                                                     * 27240021
ER20     L     WORKA,0(PARM)            SAVE ER CHAIN PTR               27260021
         L     WORKB,CMRLDCHN           GET START OF CHAIN              27280021
         ST    WORKB,0(PARM)                                            27300021
         ST    PARM,CMRLDCHN            ADD ENTRY TO TOP OF CHAIN       27320021
         LR    PARM,WORKA                                               27340021
         B     ERRTN                    CONTINUE RESOLUTION             27360021
********                                                        ******* 27380021
*                 RELATIVE    RELOCATION                              * 27400021
********                                                        ******* 27420021
ER40     L     WORKA,CREL(CESD)         GET RELOCATION VALUE            27440021
         TM    4(PARM),X'80'           IS ABSOLUTE RELOC FACTOR NEEDED  27460021
         BZ    ER45                    NO                               27480021
         CLI   CTYPE(CESD),CM          IS THIS COMMON            A46172 27490000
         BE    ER45                    YES-ABSOL FACTOR IN CREL  A46172 27492000
         L     WORKA,CADR(CESD)        GET ABSOLUTE RELOC FACTOR        27500021
         LA    WORKA,0(WORKA)                                           27520021
ER45     TM    4(PARM),X'02'           DOES RLD INDICATE SUBT.          27540021
         BZ    ER50                     NO                              27560021
         LCR   WORKA,WORKA              COMPLEMENT VALUE                27580021
ER50     A     WORKA,CMADCON           RELOCATE ADCON                   27600021
         ST    WORKA,CMADCON            STORE ADCON VALUE FOR MOVE      27620021
         L     WORKA,4(PARM)            GET TEXT ADDR. FOR ADCON        27640021
         EX    LNG,MOVEIN               MOVE RELOCATED ADCON TO TEXT    27660021
         B     ER20                                                     27680021
*                                                                     * 27700021
*       SPECIAL DELINKING FOR ADCONS POINTING TO COMMON AREAS.        * 27720021
*                                                                     * 27740021
ER60     L     WORKC,CREL(CESD)         GET ADDR OF EXTENDED CM ENTRY   27760021
         TM    CTYPE(CESD),CM           DOES WORKC CONTAIN ADDR OF EXT. 27780021
*                                          ENTRY(CM) OR INPUT ADDR(ER)  27800021
         BNZ   ER65                     WORKC CONTAINS INPUT ADDR(ER)   27820002
         NI    CREL(CESD),X'7F'        TURN OFF DELETE BIT      ZA01335 27830002
         B     ER70                    CONTINUE                 ZA01335 27832002
ER65     EQU   *                       HERE IF COMMON           ZA01335 27834002
         L     WORKC,CADR(WORKC)        GET INPUT ADDR FOR COMMON       27840021
         OI    4(PARM),X'80'            SHOW ABS RELO FAC NEEDED A46172 27850000
ER70     LA    WORKC,0(WORKC)           CLEAR HIGH ORDER BYTE           27860021
         L     ZERO,CMADCON             GET ADCON VALUE                 27880021
         SR    ZERO,WORKC               SUBTRACT INPUT ADDR             27900021
         ST    ZERO,CMADCON                                             27920021
         EX    LNG,MOVEIN               MOVE DELINKED VALUE BACK TO TXT 27940021
         NI    CMRELFLG,CQFF-CQDELINK   SET DELINK INDICATOR OFF        27960021
         B     ER2                                                      27980021
         EJECT                                                          28000021
******************************* IEWLMAP ******************************* 28020021
*                                                                     * 28040021
* THIS SUBROUTINE FORMATS THE MAP PRINT LINE AND USES THE PRINT  RTN. * 28060021
*     #CESD=ADDR OF CESD ENTRY TO BE MAPPED                           * 28080021
*                                                                     * 28100021
**********                                                      ******* 28120021
HEWLMAP  EQU   *                                                        28140021
         STM   14,12,12(13)             SAVE REGISTERS                  28160021
         BALR  BASE,0                                                   28180021
         USING *,BASE                                                   28200021
         L     BASE,ABEGIN                                              28220021
         USING HEWLRELO,BASE                                            28240021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 28250000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 28252000
         B     NMAP+8                                                   28260021
NMAP     DC    C'HEWLMAP '                                              28280021
         TM    CMPRMFLG,CQMAP           IS MAP OPTION SPECIFIED         28300021
         BZ    MAPRETRN                 NO                              28320021
         L     SAVEREG,8(SAVEREG)       PICK UP NEXT SAVE AREA          28340021
         CLC   CMWTBFCT(2),CMMAPLIN   IS LINE FULL                      28360021
         BL    MAP20                    NO,MAKE ENTRY                   28380021
         L     BRANCH,ADPRINT                                           28400021
         BALR  RETURN,BRANCH            GO TO PRINT LINE-GET NEW LINE   28420021
MAP20    L     PTR,CMPUTREC                                             28440021
         AH    PTR,CMWTBFCT             CALC NEXT BUFFER ADDR.          28460021
         TM    CMFLAG4,CQMOD       WAS THIS PASSED THROUGH MOD RECORD   28480021
         BNO   MAP30               NO. CHECK AUTOCALL                   28500021
         MVC   SUFFIXNM(3,PTR),TRISTAR   YES. MARK AS PRE-LOADED TEXT   28520021
         B     MAPNAME                                                  28540021
MAP30    EQU   *                                                        28560021
         TM    CMLIBFLG,CQAUTOC         WAS ENTRY CREATED BY AUTOCALL   28580021
         BZ    MAPNAME                  NO                              28600021
         MVI   SUFFIXNM(PTR),C'*'       YES, MOVE IN LIBRARY DESIGNATOR 28620021
         TM    CMRELFLG,CQLIB           IS RESOLUTION FROM SYSLIB       28640021
         BO    MAPNAME                  YES                             28660021
         MVI   SUFFIXNM+1(PTR),C'*'     NO,FROM LINK PACK AREA          28680021
MAPNAME  MVC   NAME(8,PTR),CNAME(CESD)  MOVE IN NAME                    28700021
         TM    CTYPE(CESD),NULL         IS IT AN 'SD'                   28720021
         BZ    MAPSD                    YES                             28740021
         TM    CTYPE(CESD),LR           IS IT AN 'LR'                   28760021
         BO    MAPLR                    YES                             28780021
         BZ    MAPPC                    IT IS 'PC'                      28800021
         TM    CTYPE(CESD),CM           IS IT A 'CM'                    28820021
         BO    MAPCM                    YES                             28840021
MAPPR    MVC   TYPE(2,PTR),PRTYPE       IT IS A 'PR',MOVE IN 'PR'TYPE   28860021
         B     MAPADDR                  GO TO MAP ADDR                  28880021
MAPSD    MVC   TYPE(2,PTR),SDTYPE       IT IS AN 'SD'MOVE IN 'SD' TYPE  28900021
         B     MAPADDR                  GO TO CHECK FOR EP NAME         28920021
MAPLR    MVC   TYPE(2,PTR),LRTYPE       IT IS AN 'LR' MOVE IN 'LR'TYPE  28940021
         B     MAPADDR                  GO TO CHECK FOR EP NAME         28960021
MAPPC    MVC   PREFIXNM(13,PTR),PRIVATE IT IS A 'PC',MOVE IN PRIVATE    28980021
         B     MAPADDR                               DESIGNATOR         29000021
MAPCM    MVC   TYPE(2,PTR),CMNTYPE      IT IS CM, MOVE IN TYPE          29020021
         CLI   CNAME(CESD),BLANK        IS IT BLANK COMMON              29040021
         BNE   MAPADDR                  NO                              29060021
         MVC   PREFIXNM(9,PTR),BLANKCOM MOVE IN BLANK COMMON DESIGNATOR 29080021
MAPADDR  L     PARM,CADR(CESD)          GET ADDR TO BE MAPPED           29100021
         BAL   14,HEWLCNVT        GO TO CONVERSION ROUTINE              29120021
         MVC   ADDR(6,PTR),CMXDBLWD+1   MOVE IN CONVERTED ADDR          29140021
         LH    PARM,CMWTBFCT                                            29160021
         LA    PARM,ENTRYSZ(PARM)                                       29180021
         STH   PARM,CMWTBFCT            UPDATE BUFFER BYTE COUNT        29200021
         L     SAVEREG,4(SAVEREG)       PICK UP LAST SAVE AREA          29220021
MAPRETRN RETURN (14,12),T                                               29240021
         EJECT                                                          29260021
************************ CONVERSION  ROUTINE  ************************* 29280021
*                                                                     * 29300021
*   THIS SUBROUTINE CONVERTS A BINARY QUANTITY IN REGISTER 1  TO      * 29320021
*       PRINT CHARACTERS.  THE RESULT IS IN THE COMMUNICATIONS AREA   * 29340021
*       CMDBLEWD+1. REGISTERS  0 AND 1 DESTROYED                      * 29360021
*                                                                     * 29380021
***************                             *************************** 29400021
HEWLCNVT EQU   *                                                        29420021
         BALR  BASE,0                                                   29440021
         USING *,BASE                                                   29460021
         L     BASE,ABEGIN                                              29480021
         USING HEWLRELO,BASE      RESET BASE TO INITIAL VALUE           29500021
         L     BASE2,ABEG4096           SET UP SECOND BASE REG  SA49491 29510000
         USING HEWLRELO+4096,BASE2     ESTABLISH ADDRESSABILITY SA49491 29512000
         LA    PARM,0(PARM)             CLEAR HIGH ORDER BITS           29520021
         LTR   PARM,PARM                TEST FOR ZERO                   29540021
         BC    7,CVTCONT                NO                              29560021
         MVC   CMXDBLWD+1(6),ZEROADDR   STORE ZERO                      29580021
         BR    RETURN                   RETURN                          29600021
CVTCONT  ST    PARM,CMXDBLWD            PLACE BINARY QUANTITY IN AREA   29620021
         UNPK  CMXDBLWD+1(7),CMXDBLWD+1(4) UNPACK BINARY QUANTITY       29640021
         MVZ   CMXDBLWD+1(6),CMXDBLWD   ZERO ZONES FOR TRANSLATE        29660021
         TR    CMXDBLWD+1(6),TRTABLE    TRANSLATE FOR PRINTING          29680021
         LA    ZERO,1                   LOAD INCREMENT                  29700021
         LA    PARM,CMXDBLWD+1          GET ADDR. OF CONVERTED QUANTITY 29720021
HIGHZERO CLI   0(PARM),C'0'             TEST FOR ZERO                   29740021
         BCR   7,RETURN                 NONE, SO RETURN                 29760021
         MVI   0(PARM),C' '             REPLACE ZERO WITH BLANK         29780021
         BXH   PARM,ZERO,HIGHZERO       INCR AND LOOP TO NEXT DIGIT     29800021
         EJECT                                                          29820021
         DS    0F                                       ZA01335,SA49491 29822002
*    THE FOLOWING TWO CONSTANTS MUST BE WITH THE FIRST 2K       SA49491 29830002
ABEGIN   DC    A(HEWLRELO)        USED TO ESTABLISH ADDR.               29832002
ABEG4096 DC    A(HEWLRELO+4096)   ADCON FOR SECOND BASE         SA49491 29834002
*                                                                     * 29840021
***********************  ERROR  ROUTINES  ***************************** 29860021
*                                                                     * 29880021
RERINPT2 LA    ZERO,ERINPT2             INVALID LNG SPECIFIED FOR CSECT 29900021
         B     ERROR                                                    29920021
RERINPT4 LA    ZERO,ERINPT4            DOUBLY DEFINED SYMBOL----        29940021
         LR    PARM,PTR                      CONFLICTING TYPES          29960021
         B     ERROR                                                    29980021
RERINPT5 LA    ZERO,ERINPT5            INVALID TWO-BYTE ADCON           30000021
         B     ERROR                                                    30020021
RERINPT7 LA    ZERO,ERINPT7            INVALID ID                       30040021
         B     ERROR                                                    30060021
RERINPT8 LA    ZERO,ERINPT8            CARD PRINTED NOT OBJECT CARD     30080021
         B     ERR                                                      30100021
RERINPT9 LA    ZERO,ERINPT9            INVALID INPUT FROM OBJ. MODULE   30120021
         B     ERR                                                      30140021
RERINPTA LA    ZERO,ERINPT10            WARNING--NO END CARD            30160021
         B     ERROR                                                    30180021
RERSIZE2 LA    ZERO,ERSIZE2            PROGRAM TOO LARGE                30200021
         B     ERROR                                                    30220021
RERSIZE3 LA    ZERO,ERSIZE3            TRANS. TABLE OVERFLOW            30240021
         B     ERROR                        CONFLICTING TYPES           30260021
ERR      L     PARM,CMGETREC           GET ADDR.OF BUF.TO BE PRINTED    30280021
         TM    CMFLAG3,CQINCORE    IS THIS INCORE DATA SET              30300021
         BZ    ERROR               NO. GO AHEAD                         30320021
         OI    CMIOFLGS,CQEOFB+CQEOCB  YES. SET FLAGS SO WE WON'T READ  30340021
*                                           ANY MORE                    30360021
ERROR    LR    WORKC,RETURN            SAVE RETURN REGISTER             30380021
         L     BRANCH,ADERROR                                           30400021
         BALR  RETURN,BRANCH           GO TO LOG ERROR                  30420021
         LR    RETURN,WORKC            RESTORE RETURN REGISTER          30440021
         BR    RETURN                                                   30460021
         EJECT                                                          30480021
MOVE2    MVC   0(1,ADR),0(PTR)          MOVE TEXT FROM REC.TO STORAGE   30500021
MOVEOUT  MVC   0(1,WORKB),0(WORKA)      MOVE ADCON TO WORK AREA         30520021
MOVEIN   MVC   0(1,WORKA),0(WORKB)      MOVE ADCON FROM WORK AREA       30540021
         DS    0F                                               SA49491 30540400
ADPRINT  DC    V(HEWLPRNT)        ADDRESS OF PRINT ROUTINE              30550000
ADERROR  DC    V(HEWERROR)        ADDRESS OF ERROR ROUTINE              30552000
ADREAD   DC    V(HEWLREAD)        ADDRESS OF OBJ. READ ROUTINE          30554000
         DS    0F                                                       30560021
*                                                                     * 30940021
* THIS TABLE IDENTIFIES THE CESD CHAINS TO BE SEARCHED FOR EACH INPUT * 30960021
*                              ESD TYPE                               * 30980021
*                                                                     * 31000021
HIERTBLE EQU   *                                                        31020021
         DC    X'02000583'             SD--ER,SD,CM,LR                  31040021
         DC    X'80000000'             LD--NEVER SEARCHED               31060021
         DC    X'00020385'             ER--SD,ER,LR,CM                  31080021
         DC    X'02030085'             LR--ER,LR,SD,CM                  31100021
         DC    X'80000000'             PC--NEVER SEARCHED               31120021
         DC    X'05020083'             CM--CM,ER,SD,LR                  31140021
         DC    X'86000000'             PR--PR--------                   31160021
         DC    X'80000000'             NULL-----NEVER SEARCHED          31180021
BLANKCOM DC    C'$BLANKCOM'             BLANK COMMON DESIGNATOR         31200021
PRIVATE  DC    C'$PRIVATE   PC'         PRIVATE CODE DESIGNATOR         31220021
TRTABLE  DC    C'0123456789ABCDEF'      TRANSLATION TABLE               31240021
ZEROADDR DC    C'    00'                ADDR OR DISP VALUE EQ 0         31260021
NEG4     DC    H'-4'                    DECR. FOR TRANS.TABLE CLEARING  31280021
ONE      DC    H'1'                                                     31300021
CONT4    DC    H'4'                                                     31320021
CONT8    DC    H'8'                                                     31340021
CONT16   DC    H'16'                                                    31360021
TRISTAR  DC    C'***'              FLAG PRE-LOADED TEXT IN MAP          31380021
         DS    0F                       ALIGNMENT                       31400021
BLNK     DC    X'00'                    BLANK ADDR. ON WORK BOUNDARY    31420021
         DC    C'   '                                                   31440021
         DS    0F                                               SA49491 31450000
DBLWRD   DC    X'FFFFFFF8'              MASK TO ZERO LAST 3 BITS        31460021
TYPEONLY DC    X'00000007'              CLEAR ALL BUT TYPE FIELD        31480021
PRTYPE   DC    C'PR'                    USED FOR MAPPING TYPE           31500021
SDTYPE   DC    C'SD'                    USED FOR MAPPING TYPE           31520021
CMNTYPE  DC    C'CM'                    USED FOR MAPPING TYPE           31540021
LRTYPE   DC    C'LR'                    USED FOR MAPPING TYPE           31560021
TYPETBLE DC    X'02'                    TYPE COMPARISON TABLE           31610000
         DC    C'TXT'                                                   31620000
         DC    A(HEWLTXT)         TEXT PROCESSOR                        31630000
         DC    X'02'                                                    31640000
         DC    C'RLD'                                                   31650000
         DC    A(HEWLRLD)         RLD PROCESSOR                         31652000
         DC    X'02'                                                    31654000
         DC    C'ESD'                                                   31656000
         DC    A(HEWLESD)         ESD PROCESSOR                         31658000
         DC    X'02'                                                    31658400
         DC    C'SYM'                                                   31658800
         DC    A(RELOREAD)              READ REQUEST ROUTINE            31659200
         DC    X'02'                                                    31659600
         DC    C'END'                                                   31659700
         DC    A(HEWLEND)         END PROCESSOR                         31659800
         DC    X'02'                                                    31659900
         DC    C'MOD'                                                   31666600
         DC    A(HEWLMOD)                                               31668600
PATCH    DC    A(HEWLRELO)                                              31680037
**************************************************************          34680037
*        PATCH AREA                                                     37680037
**************************************************************          40680037
         DC    40F'0'                                                   43680037
         EJECT                                                          46680037
         HEWLDCOM                                                       49680037
         END                                                            52680037
