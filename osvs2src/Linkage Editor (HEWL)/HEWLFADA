         TITLE    'HEWLFADA  ADDRESS ASSIGNMENT'                        00100021
*                                                                     * 00200021
*********************************************************************** 00300021
*********************************************************************** 00400021
*                                                                       00500021
*STATUS: CHANGE LEVEL                                                   00600021
*FUNCTION:                                                            * 00700021
*   1) ASSIGN LINKED ADDRESSES TO ALL CONTROL SECTIONS AND LABELS     * 00800021
*      THEREIN                                                        * 00900021
*   2) IF IN OVERLAY DETERMINE SEGMENT ADDRESSES                      * 01000021
*   3) DETERMINE PSEUDO REGISTER DISPLACEMENTS AND CUMULATIVE LENGTH  * 01100021
*   4) PRINT MESSAGE FOR ALL UNRESOLVED EXTERNAL REFERENCES           * 01200021
*   5) SET CERTAIN ESD TYPES TO NULL - DELETE LINE TYPE ER SUBTYPE    * 01300021
*      (BYTE 13 OF CESD) AS FOLLOWS                                   * 01400021
*       A) ALL CARDS EXCEPT ALIAS (F0 - B0,90)                        * 01500021
*       B) NO CALL UNMATCHED       (04)                               * 01600021
*       C) UNMATCHED LIBRARY MEMBER (02)                              * 01700021
*   6) IF IN OVERLAY COMPUTE LENGTH OF SEGTAB                         * 01800021
*   7) GO TO HEWLKENS TO DETERMINE SEGMENT NUMBERS FOR LABELS AND TO  * 01900021
*      COMPUTE ENTAB SIZES (ONLY IF IN OVERLAY)                       * 02000021
*                                                                     * 02100021
*ENTRY POINTS:                                                        * 02200021
*   1) HEWLFADA - CONTROL SECTION NAME - MAIN ENTRY POINT             * 02300021
*   2) HEWLCAD1 - LABEL - ENTERED FROM HEWLKENS TO MAKE CESD ENTRIES  * 02400021
*      FOR ENTABS                                                     * 02500021
*                                                                     * 02600021
*INPUT:                                                               * 02700021
*   1) GP REGISTER 2 - ADDRESS OF ALL PURPOSE TABLE                     02800021
*EXTERNAL ROUTINES:                                                   * 02900021
*   1) HEWLFENS    -ENTAB SIZE DETERMINATION                            03000021
*   2) HEWLFENT                                                         03100021
*   3) HEWLFLOG    - ERROR DIAGNOSTIC ROUTINE                         * 03200021
*                                                                     * 03300021
*EXITS:                                                               * 03400021
*   1) HEWLFOUT (NORMAL) - INTERMEDIATE OUTPUT PROCESSOR                03500021
*   2) HEWLFFNL (NO CESD OR TEXT) FINAL PROCESSOR                       03600021
*                                                                     * 03700021
*TABLES:                                                              * 03800021
*   INPUT                                                             * 03900021
*   1) COMPOSITE EXTERNAL SYMBOL DICTIONARY                           * 04000021
*   2) ALL PURPOSE TABLE                                              * 04100021
*   3) SEGTA1 (OVERLAY ONLY)                                          * 04200021
*                                                                     * 04300021
*   INTERNALLY USED                                                   * 04400021
*   1) SEGMENT LENGTH TABLE                                           * 04500021
*                                                                     * 04600021
*   OUTPUT                                                            * 04700021
*   1) RELOCATION CONSTANT TABLE                                      * 04800021
*   2) UPDATED COMPOSITE EXTERNAL SYMBOL DICTIONARY                   * 04900021
*********************************************************************** 05000021
*********************************************************************** 05100021
*              HEWLFADA    -ADDRESS ASSIGNMENT                        * 05200021
*                                                                     * 05300021
HEWLFADA CSECT                                                          05400021
**********************************************************************  05450021
*098000,155000-187000,283000-285000,287000,316000-317000         S01904 05452021
*342000-366000,533000-569000,573000-574000,576000,583000-584000  S01904 05454021
*590000-591000,594000,604000-674000,768000-775000,881000-920000  S01904 05456021
*                                                               OY00358 05456401
*C092000-0930200,A093520-093560,A094484                          YM5543 05458001
*D093500-093984                                                  XM4628 05458403
*  SEE FIX FOR XM4628                                           OX02833 05458803
*D314000,D523000,D701000-713000,D829000-832000          OX03901,OY03217 05459202
*D846000,D850000                                        OX03901,OY03217 05459602
**********************************************************************  05460021
         ENTRY HEWLCAD1                                                 05500021
         ENTRY SEGLNTAB                                                 05600021
*********************************************************************** 05700021
*              REGISTER  ASSIGNMENT                                   * 05800021
*********************************************************************** 05900021
ERRCODE  EQU   0                                                        06000021
ERRSYMAD EQU   1                                                        06100021
TEMP2    EQU   1                                                        06200021
WORK4    EQU   1                                                        06300021
APT      EQU   2                                                        06400021
CSLGTH   EQU   3                        CONTROL SECTION LENGTH          06500021
WORK1    EQU   3                                                        06600021
MAXSEGCT EQU   3                        MAX.NO OF SEGMENTS              06700021
CSSEGNO  EQU   4                        CONTROL SECTION SEGMENT NO      06800021
WORK2    EQU   4                                                        06900021
CSASADD  EQU   5                        CONTROL SECTION ASSEMBLED ADD.  07000021
WORK3    EQU   5                                                        07100021
CESDCRCT EQU   6                                                        07200021
CESDCRAD EQU   7                                                        07300021
TEMP1    EQU   7                                                        07400021
SEGLGTH  EQU   8                                                        07500021
ASMADD   EQU   9                                                        07600021
CURSEGNO EQU   9                                                        07700021
LOCCTR   EQU   10                                                       07800021
ADTXTIOT EQU   11                                                       07900021
BASE     EQU   12                                                       08000021
ACUMZERO EQU   13                                                       08100021
TEST     EQU   13                                                       08200021
RETURN   EQU   14                                                       08300021
BRANCH   EQU   15                                                       08400021
EBIT     EQU   X'80'                    ENTAB PRESENT MASK              08500021
OVLYOFF  EQU   X'DF'                    MASK TO TURN OVERLAY OFF        08600021
OVRLAYBT EQU   X'20'                                                    08700021
RCCOMP   EQU   X'20'                    RELOCATION CONST IS IN COMPFORM 08800021
         USING APTDSECT,APT   DECLARE APT BASE                          08900021
         USING ADA00100+2,BASE                                          09000021
ADA00100 BALR  BASE,0                                                   09100021
         B     MODID                                             YM5543 09200001
         DC    C'01MADA'                                         YM5543 09300001
MODID    EQU   *                                                 YM5543 09302001
         OI    APT4,INTRPS             INDICATE INTR PASS        S01904 09310001
NOCESD   EQU   *                       BRANCH TARGET             YM5543 09448401
*                                                                       09900021
*              INITIALIZATION                                           10000021
*                                                                       10100021
*                                                                       10200021
*              SET SEGMENT LENGTH TABLE = 0                             10300021
*                                                                       10400021
*  USE OBJECT MODULE BUFFER FOR SEG LENGTH TABLE - USE LOWER ADDRESS    10500021
         CLC   HEWLCRBB+4(4),HEWLCRBB+8                                 10600021
         BL    ADA00110            FIRST LOW- USE IT                    10700021
         L     SEGLGTH,HEWLCRBB+8  FIRST HIGH- USE SECOND               10800021
         B     ADA00115                                                 10900021
ADA00110 L     SEGLGTH,HEWLCRBB+4  USE FIRST                            11000021
ADA00115 ST    SEGLGTH,SEGLNTAB    SAVE LOW ADD AS ADD OF SEG LNGTH TAB 11100021
         SR    WORK3,WORK3         CLEAR REGISTER                       11200021
         IC    WORK3,CSNO+1        GET HIGHEST SEGMENT USED             11300021
         LA    WORK3,1(WORK3)      ADD 1 FORRE-ORIGINING                11400021
         MH    WORK3,SIX           MULT BY NUM BYTES/ENTRY FOR TOTAL    11500021
         SR    WORK2,WORK2         CLEAR REMAINDER REGISTER             11600021
         D     WORK2,CONST256      DVIDE BY 256                         11700021
         LR    TEMP1,SEGLGTH       ADDR. OF BEG SEGMNT LGTH TABLE       11800021
         LTR   WORK3,WORK3         IF LESS THAN 256 BYTES QUOTIENT = 0  11900021
         BC    2,CLRBUF            IF NOT SO, BEGIN CLEARING TABLE      12000021
         B     CLRFNL      IF QUOTIENT = 0, CLEAR NON-MULTIPLE OF 256   12100021
CLRBUF   XC    0(256,TEMP1),0(TEMP1)    CLEAR 256 BYTES                 12200021
         LA    TEMP1,256(TEMP1)        UPDATE PTR BY 256                12300021
         BCT   WORK3,CLRBUF        REDUCE QUOTIENT & IF NOTZERO- RETURN 12400021
CLRFNL   BCTR  WORK2,0             DECREMENT FOR PROPER CLEARING        12500021
         EX    WORK2,CLRLAST       CLEAR LAST NON-MULTIPLE OF 256       12600021
         XC    HIADDREG(12),HIADDREG   SET HIADDREG,BGADDREG,CURRREGN   12700021
*                                      AND NCESDCT = 0  (12 BYTES)      12800021
*                                      = 0  (10 BYTES )                 12900021
*********************************************************************** 13000021
*              TEST IF CESD CURRENT CT = 0  - YES-ERROR  /GO TO FINAL * 13100021
*              PROCESSOR                                              * 13200021
*********************************************************************** 13300021
ADA00120 BAL   RETURN,ADA02300         GO TO TEST CESD CT = 0           13400021
*********************************************************************** 13500021
*              TEST IF PROGRAM IS IN OVERLAY - YES/ COMPUTE SIZE SEGTB* 13600021
*********************************************************************** 13700021
         TM    PDSE7,OVRLAYBT      IS PROGRAM IN OVERLAY                13800021
         BC    1,ADA01000               YES  GO TO INIT SEGTAB & ENS    13900021
*********************************************************************** 14000021
*              GO TO HEWLKENS TO DETERMINE SEGMENT NUMBERS FOR LABELS * 14100021
*              REG 13 SUPPLIED BUT REGISTERS NEED NOT BE SAVED        * 14200021
*********************************************************************** 14300021
ADA00122 LA    13,SAVEREGS             SAVE REG AREA AADDRESS FOR ENS   14400021
         L     BRANCH,ENSVCON          ADDRESS OF HEWLCENS              14500021
         BALR  RETURN,BRANCH            BRANCH TO HEWLCENS              14600021
**********************************************************************  14700021
*                                                                     * 14800021
*              FIRST SEARCH  ASSIGN TEMPORARY LINKED ADDRESSES        * 14900021
*                TO ALL CSECTS REFERENCED IN THE TXTIO TABLE          * 15000021
*                                                                     * 15100021
**********************************************************************  15200021
*                                                                       15300021
* SET UP SEARCH OF TXTIO TABLE                                          15400021
         ST    TEST,SAVE13         KEEP ADDRESS OF SAVE AREA     S01904 15500021
         TM    APT4,ORDERR         IS ORDERING TO BE DONE        S01904 15600021
         BZ    ADA0123A            NO,BRANCH OUT                 S01904 15700021
         LH    TEST,ORDRCUR        OBTAIN CUR NO OF BYTES USED   S01904 15800021
         LTR   TEST,TEST           IS THERE ANY ENTRY            S01904 15900021
         BZ    ADA0123A            NO,BRANCH OUT                 S01904 16000021
         OI    TWELVE,X'40'        INDICATE ORDER TABLE PROCESS  S01904 16100021
ADORDR   EQU   11                                                S01904 16200021
         L     ADORDR,ORDRADR      GET BEG ADDR OF ORDER TBL     S01904 16300021
         AR    TEST,ADORDR         POINT TO END OF ORDER TBL     S01904 16400021
ADA0300  TM    O(ADORDR),X'A0'     IS THIS A MATCHED ENTRY       S01904 16500021
         BNO   ADA0302             NO,BRANCH OUT                 S01904 16600021
         MVC   IDSV(2),I(ADORDR)   SAVE ID                       S01904 16700021
         LH    CESDCRAD,IDSV                                     S01904 16800021
         SLL   CESDCRAD,4          COMPUTE REL CESD LOC OF ID    S01904 16900021
         A     CESDCRAD,CHESD      COMPUTE ABS CESD ENTRY LOC    S01904 17000021
         CLI   0(CESDCRAD),0       IS CORRESPONDING ENTRY DELETED       17100021
         BE    ADA0302             YES,BRANCH OUT                S01904 17200021
         TM    VIII(CESDCRAD),X'08'     IS THIS A WEAK EXTRN     S01904 17300021
         BO    ADA0302             YES,BRANCH OUT                S01904 17400021
         MVN   TYPESV(I),VIII(CESDCRAD)                          S01904 17500021
         CLI   TYPESV,X'05'        TYPE COMMON?                  S01904 17600021
         BE    ADA00175            YES,DETERMINE TLA             S01904 17700021
         CLI   TYPESV,O            IS TYPE SD?                   S01904 17800021
         BE    ADA00175            YES,DETERMINE TLA             S01904 17900021
         LA    RETURN,ADA0302      FLAG ERROR - INVALID ID       S01904 18000021
         LH    ERRCODE,ERRPARM8                                  S01904 18100021
         L     BRANCH,ERDIG                                      S01904 18200021
         BR    BRANCH                                            S01904 18300021
ADA0301  OI    VIII(CESDCRAD),X'08'     MARK ENTRY PROCESSED     S01904 18400021
ADA0302  LA    ADORDR,3(ADORDR)    INCREMENT TO NEXT ORDER TBL ENTRY    18500021
         CR    ADORDR,TEST         END OF TABLE REACHED?         S01904 18600021
         BL    ADA0300             NO,CONTINUE SCAN              S01904 18700021
         NI    TWELVE,X'BF'        MARK END OF ORDER TBL PROCESS        18800021
ADA0123A SR    TEST,TEST                                                18900021
         CH    TEST,ENTOC               IS THERE ANY TEXT               19000021
         BC    11,ADA00140         NO TXT - SEARCH CESD                 19100021
         OI    TWELVE,X'80'             SET SWITCH INDICATNG TXTIO LOOP 19200021
         L     ADTXTIOT,TXTIO           ADDR OF TXTIO TABLE             19300021
         LR    TEST,ADTXTIOT           ADDRESS TXTIOT TABLE             19400021
         AH    TEST,ENTOC       TEST NOW CONTAINS END ADDR OF TXTIOT    19500021
ADA00123 CR    ADTXTIOT,TEST      ANY MORE TXT IN TXTIOT                19600021
         BC    11,ADA00135              NO- SET IN TXTIOT LOOP OFF      19700021
         TM    2(ADTXTIOT),X'20'        IS IT OUT OF ORDER TXT          19800021
         BC    1,ADA00133               YES--ID FOR TXTIO ENTRY ALREADY 19900021
*                                          PROCESSD. CHECK NEXT ENTRY.  20000021
* FIND CESD ENTRY                                                       20100021
         LH    CESDCRAD,0(ADTXTIOT)     CESD ENTRY ID (FROM TXTIOT)     20200021
         SLL   CESDCRAD,4               FIND REL. ADDR. ON CESD  (*16)  20300021
         A     CESDCRAD,CHESD           ADDRESS OF CESD ENTRY           20400021
         TM    08(CESDCRAD),X'08'       HAS CESD ENTRY BEEN PROCESSED   20500021
         BC    1,ADA00133               YES- CHECK NEXT TXTIOT ENTRY    20600021
         TM    8(CESDCRAD),X'0B'        IS TYPE SD OR PC                20700021
         BC    7,ERRETURN               NO-ERROR-GO TO NEXT ENTRY       20800021
         CLI   8(CESDCRAD),X'14'        IS THIS A PC FOR ENTAB OR SEGTB 20900021
         BC    7,ADA00175              NO - PROCESS CESD ENTRY          21000021
*    ERROR FOUND  LOG IT THEN CONTINUE                                  21100021
ERRETURN LA    RETURN,ADA00175                                          21200021
         L     BRANCH,ERDIG                                             21300021
         LH    ERRCODE,ERRPARM8        GIVE TXTIOT ERROR MESSAGE        21400021
         BR    BRANCH                                                   21500021
ADA00130 OI    8(CESDCRAD),X'08'        SET CESD ENTRY PROCESSED SWITCH 21600021
ADA00133 LA    ADTXTIOT,INC(ADTXTIOT)   UPDATE ADDRESS                  21700021
         B     ADA00123                 GO TO NEXT TXTIOT ENTRY         21800021
ADA00135 NI    TWELVE,X'7F'             TURN TXTIO LOOP SWITCH OFF      21900021
         B     ADA00140                 SEARCH CESD                     22000021
ADA00136 NI    8(CESDCRAD),X'F7'        SET PROCESSD SWITCH OFF         22100021
         B     ADA00400                 CHECK END OF LOOP               22200021
*********************************************************************** 22300021
*                                                                     * 22400021
*              SEARCH CESD FOR NON-PROCESSED CSECTS- NO TEXT          * 22500021
*                COMMON,  ASSIGN TEMP LINKED ADDRESSES                  22600021
*                COMPUTERELOCATION CONSTANTS (PUT IN RCT),DETERMINE   * 22700021
*                PSEUDO REGISTER DISPLACEMENTS AND TOTAL LENGTH       * 22800021
*                                                                     * 22900021
*********************************************************************** 23000021
ADA00140 LH    CESDCRCT,ENCDC           CURRENT NO. CESD ENTRIES        23100021
         L     CESDCRAD,CHESD  CESD ADD                                 23200021
         LA    WORK4,1(CESDCRCT)       CESD CURRENT CT + 1              23300021
         STH   WORK4,NCESDCT           INITIALIZE NCESD CT              23400021
ADA00150 LA    CESDCRAD,16(CESDCRAD)    POINTS TO CURRENT CESD ENTRY    23500021
         CLI    8(CESDCRAD),X'0A'       WEAK EXTERNAL                   23600021
         BE    ADA00400                 YES,CHECK END OF LOOP           23700021
         TM    8(CESDCRAD),X'08'        HAS CESD ENTRY BEEN PROCESSED   23800021
         BC    1,ADA00136               YES- SET PROCESSD SW OFF-       23900021
         NI    8(CESDCRAD),X'DF'       SET BIT 2 OF TYPE BYTE TO 0      24000021
         MVN   TESTTYPE(1),8(CESDCRAD)  MOVE LOW 4 BITS FOR ESDTYPETEST 24100021
         TM    TESTTYPE,X'02'           IS TYPE NOT SO,PC OR CM         24200021
         BC    1,ADA00850               YES                             24300021
*********************************************************************** 24400021
*              IS THIS CESD ENTRY THE PC DELETE FOR SEGTAB / YES -DONOT 24500021
*              ASSIGN AN ADDRESS TO IT ( IT IS INITIALIZED TO 0)      * 24600021
*********************************************************************** 24700021
         LR    TEMP2,CESDCRAD                                           24800021
         S     TEMP2,CHESD    REL ID                                    24900021
         SRL   TEMP2,4                  ID                              25000021
         CH    TEMP2,ENSPX    IS THIS A SEGTAB ENTRY                    25100021
         BC    8,ADA00400               YES  DO NOT ASSIGN ADDRESS      25200021
*********************************************************************** 25300021
*              USING SEGMENT NUMBER REFERENCE SEGMENT LENGTH TABLE AND* 25400021
*              FIND LENGTH OF THIS SEGMENT                            * 25500021
*********************************************************************** 25600021
ADA00175 SR    SEGLGTH,SEGLGTH                                          25700021
         IC    SEGLGTH,12(CESDCRAD)     PICK UP SEG NO OF THIS CESD ENT 25800021
         MH    SEGLGTH,SIX              MULTIPLY BY 6  (6BYTES/ENTRY)   25900021
         A     SEGLGTH,SEGLNTAB    POINTS TO AN ENTRY IN SEG LENGTH TAB 26000021
         MVI   CONSTWK,X'00'                                            26100021
         MVC   CONSTWK+1(3),0(SEGLGTH)  MOVE SEGMENT LG TO CONST+1      26200021
         L     ASMADD,8(CESDCRAD)       ASSEMBLED ADDRESS OF THIS CS    26300021
         LA    ASMADD,0(ASMADD)         REMOVE TYPE                     26400021
         L     LOCCTR,CONSTWK           LENGTH OF THIS SEGMENT          26500021
*********************************************************************** 26600021
*              IF SEGMENT LENGTH = 0  SAVE LOW 3 BITS OF ASSEMBLED ADD* 26700021
*********************************************************************** 26800021
         LTR   LOCCTR,LOCCTR            IS LENGTH = 0                   26900021
         BC    2,ADA00200               NO                              27000021
         LA    WORK1,7                  SET REG TO 7/FOR SAVING LOW 3   27100021
         NR    WORK1,ASMADD             SAVE LOW 3 BITS OF ASSEMBLED AD 27200021
         STC   WORK1,3(SEGLGTH)         STORE LOW 3 BITS OF CS INSGLGTH 27300021
*********************************************************************** 27400021
*              MAKE TEMPORARY LINKED ADDRESS (SEGMENT LENGTH) MODULO 8* 27500021
*              WITH ASSEMBLED ADDRESS - SAVE TLA IN CESD              * 27600021
*********************************************************************** 27700021
ADA00200 LR    WORK1,ASMADD             SAVE ASSEMBLED ADDRESS          27800021
         SR    WORK1,LOCCTR             MAKE TEMP LINKED ADD MOD 8 WITH 27900021
         LA    WORK2,7                   THE ASSEMBLED ADDRESS OF CS    28000021
         NR    WORK1,WORK2                                              28100021
         AR    LOCCTR,WORK1             ANS IN LOCCTR  (TLA)            28200021
         TM    PDSE7,OVRLAYBT           OVERLAY SPECIFIED?       S01904 28300021
         BO    ADA0201                 YES,BRANCH AROUND         S01904 28400021
         LR    WORK2,LOCCTR             SAVE LOCAL REGISTER      S01904 28500021
         BAL   WORK3,ADA0400            CHECK FOR PAGE ALIGNMENT        28600021
         LR    LOCCTR,WORK2             RESTORE LOCAL REGISTER   S01904 28700021
ADA0201  IC    WORK2,8(CESDCRAD)        SAVE  TYPE                      28800021
         ST    LOCCTR,8(CESDCRAD)       PUT TLA IN CESD                 28900021
         STC   WORK2,8(CESDCRAD)        RESTORE  TYPE                   29000021
         LR    WORK1,LOCCTR             SAVE  LOCCTR  (TLA)             29100021
*********************************************************************** 29200021
*              DETERMINE ADDRESS OF RELOCATION CONST IN RCT FOR THIS CS 29300021
*********************************************************************** 29400021
*                                                                       29500021
         LR    WORK2,CESDCRAD                                           29600021
         S     WORK2,CHESD    RELATIVE CESD ADD                         29700021
         SRL   WORK2,2                  RELATIVE RC ADD                 29800021
         A     WORK2,RECNT    ADD OF A RCT ENTRY/RCT 1-1 CESD           29900021
*********************************************************************** 30000021
*              COMPUTE RELOCATION CONSTANT  , RC = TLA - AA /PUT IN RCT 30100021
*********************************************************************** 30200021
         SR    WORK1,ASMADD             COMPUTE  RCT = TLA - ASSM ADD   30300021
         BC    11,ADA00250         IF POSITIVE  -- CONTINUE             30400021
         OI    8(CESDCRAD),X'20'   IF NEG- INCICATE NEG RELOC CONST     30500021
ADA00250 ST    WORK1,0(WORK2)           STORE TRC IN RELOC CONST TABLE  30600021
*********************************************************************** 30700021
*              ADD CS LENGTH TO CS TLA AND SAVE IN SEG LENGTH TABLE/SEG 30800021
*********************************************************************** 30900021
ADA00300 MVC   CONSTWK(4),12(CESDCRAD)  MOVE LENGTH TO CONST            31000021
         MVI   CONSTWK,X'00'           SET IST BYTE TO ZERO             31100021
         A     LOCCTR,CONSTWK          ADD LENGTH TO LOCATION CTR       31200021
         ST    LOCCTR,CONSTWK                                           31300021
ADA00350 MVC   0(3,SEGLGTH),CONSTWK+1  PUT TLA + L (CURRENT SEG LG) IN  31500021
         TM    TWELVE,X'40'             ORDER TABLE LOOP         S01904 31600021
         BO    ADA0301                  YES,BRANCH OUT           S01904 31700021
         TM    TWELVE,X'80'             IN TXTIOT LOOP?                 31800021
         BC    1,ADA00130               YES- SET CESD ENTRY PROCESSED   31900021
         L     TEST,SAVE13         RESTORE REG 13                       32000021
*                                                                       32100021
ADA00400 BCT   CESDCRCT,ADA00150         SEGLGTH TABLE /BRANCH IFNOTDON 32200021
*********************************************************************** 32300021
*              TEST FOR OVERLAY-YES/ GO TO SCAN SEG LENGTH TABLE      * 32400021
*********************************************************************** 32500021
         TM    PDSE7,OVRLAYBT IS PROGRAM IN OVERLAY                     32600021
         BC    1,ADA01100               YES                             32700021
         MVC   SIZSAVE+1(3),0(SEGLGTH)  GET PROGRAM LENGTH              32800021
         L     WORK1,SIZSAVE                                            32900021
         LA    WORK1,7(WORK1)          ROUND SIZE TO NEXT               33000021
         N     WORK1,ROUNDOFF          DOUBLE WORD                      33100021
         ST    WORK1,SIZSAVE           SAVE SIZE FOR PDS DIRECTORY      33200021
         MVC   0(3,SEGLGTH),SIZSAVE+1                                   33300021
         MVC   PDSE9(3),0(SEGLGTH) PUT PROGRAM LENGTH IN PDS            33400021
*********************************************************************** 33500021
*              SCAN CESD - RELOCATE ADDRESSES OF LRS-PROCESS ERS      * 33600021
*********************************************************************** 33700021
ADA00550 LH    CESDCRCT,ENCDC  CURRENT NO. CESD ENTRIES                 33800021
         L     CESDCRAD,CHESD  CESD ADD                                 33900021
ADA00600 LA    CESDCRAD,16(CESDCRAD)    INCREMENT TO FIRST(NEXT) ENTRY  34000021
         MVN   TESTTYPE(1),8(CESDCRAD)  MOVE LOW 4 BITS FOR ESDTYPETEST 34100021
         STM   WRKREGE,WRKREG1,BRNCHSV SAVE REGISTERS            S01904 34200021
         LH    WRKREG1,ORDRCUR          GET CUR NO OF BYTES IN ORDR     34300021
         LTR   WRKREG1,WRKREG1          ARE THERE ANY ENTRIES?   S01904 34400021
         BZ    ADA060D                  NONE,BRANCH OUT          S01904 34500021
         L     WRKREGF,ORDRADR          COMPUTE ADDR OF AVAIL ENTRY     34600021
         AR    WRKREG1,WRKREGF          IN THE ORDER TABLE       S01904 34700021
         LA    WRKREG0,3                GET LENGTH OF AN ENTRY   S01904 34800021
         SR    WRKREG1,WRKREG0          POINT TO LAST ENTRY      S01904 34900021
         LR    WRKREGE,WRKREG7                                   S01904 35000021
         S     WRKREGE,CHESD            CALCULATE CESD ID        S01904 35100021
         SRL   WRKREGE,4                OF THE ENTRY BEING EXAMINED     35200021
         STH   WRKREGE,IDSV             SAVE ID                  S01904 35300021
ADA060B  CLC   IDSV(2),1(WRKREGF)       LOOK FOR  MATCH IN ORDR TBL     35400021
         BE    ADA060C                  MATCH FOUND-CHECK TYPE   S01904 35500021
         BXLE  WRKREGF,WRKREG0,ADA060B  CONTINUE LOOP SEARCH     S01904 35600021
         B     ADA060D                  NO MATCH FOUND-BRANCH OUT       35700021
ADA060C  CLI   TESTTYPE,X'00'           IS TYPE SD?              S01904 35800021
         BE    ADA060D                  YES,PROCEED-VALID COND   S01904 35900021
         CLI   TESTTYPE,X'05'           IS TYPE COMMON?          S01904 36000021
         BE    ADA060D                  YES,PROCEED-VALID COND   S01904 36100021
         LR    WRKREG1,WRKREG7          GET CESD ENTRY ADDRESS   S01904 36200021
         LH    WRKREG0,ERRCDDE          GET ERROR CODE           S01904 36300021
         L     WRKREGF,ERDIG            GET ADDRESS OF LOG RTN   S01904 36400021
         BALR  WRKREGE,WRKREGF          BRANCH TO ERROR LOG RTN  S01904 36500021
ADA060D  LM    WRKREGE,WRKREG1,BRNCHSV  RESTORE REGISTERS        S01904 36600021
         TM    TESTTYPE,X'0A'           IS TYPE WEAK EXTRN              36700021
         BNO   ADA00601                 NO,BRANCH OUT                   36800021
         XC    9(4,CESDCRAD),9(CESDCRAD)  CLEAR CHN ADDR AND SEG FLDS   36900021
         B     ADA00650                                                 37000021
ADA00601 CLI TESTTYPE,X'02'                                             37100021
         BC    8,ADA00900               YES / GO TO ER ROUTINE          37200021
         CLI   TESTTYPE,X'07'           IS TYPE NULL                    37300021
         BC    8,ADA00700               YES / TEST END OF LOOP          37400021
         CLI   TESTTYPE,X'03'           IS TYPE = LR                    37500021
         BC    7,ADA00650               NO / GO TO  SAVE  Y             37600021
         LH    WORK1,14(CESDCRAD)       YES  LR - NOW RELOCATE TLA/ ID  37700021
         SLL   WORK1,2                  MULTIPLY BY 4                   37800021
         A     WORK1,RECNT    POINTS TO RCT ENTRY OF SD,PC,CM           37900021
         L     WORK2,0(WORK1)           RELOCATION CONSTANT = RC        38000021
         LR    WORK1,CESDCRAD                                           38100021
         S     WORK1,CHESD    REL ADD OF LR ENTRY IN RCT                38200021
         SRL   WORK1,2                                                  38300021
         A     WORK1,RECNT    ADD OF RC FOR LR                          38400021
         ST    WORK2,0(WORK1)          ST RC OF LR                      38500021
         A     WORK2,8(CESDCRAD)        ADD RC TO ASSEMBLED ADD OF LR   38600021
         IC    WORK1,8(CESDCRAD)        SAVE TYPE                       38700021
         ST    WORK2,8(CESDCRAD)        STORE LINKED ADDRESS OF THIS LR 38800021
         STC   WORK1,8(CESDCRAD)        RESTORE TYPE                    38900021
*              SAVE CURRENT CESD CT - CESD LINE NUMBER + 1 = Y          39000021
ADA00650 STH   CESDCRCT,NCESDCT         SAVE Y                          39100021
ADA00700 BCT   CESDCRCT,ADA00600        BRANCH IF LOOP OF CESD NOT DONE 39200021
*              COMPUTE NEW CESD CURRENT NUMBER ENTRIES                  39300021
         LH    CESDCRCT,NCESDCT         Y= CESD CURR CT - CESD LN NO +1 39400021
         BCTR  CESDCRCT,0               Y-1                             39500021
         LCR   CESDCRCT,CESDCRCT        Y-1 IN COMPLEMENT FORM          39600021
         AH    CESDCRCT,ENCDC      CESD ID OF LAST NON NULL LINE        39700021
         STH   CESDCRCT,ENCDC      SAVE NEW CESD CT                     39800021
         BAL   RETURN,ADA02300          GO TO TEST CESD CT = 0          39900021
         L     BRANCH,ENTVCON           GO TO ENTRY PROCESSOR           40000021
         LA    13,SAVEREGS             ADDRESS OF SAVE AREA FOR ENT     40100021
         BALR  RETURN,BRANCH            (EXPECT ENT TO RETURN ALL REGS) 40200021
ADA00800 L     BRANCH,OUTVCON           GO TO OUTPUT PROCESSOR          40300021
         BALR  RETURN,BRANCH                                            40400021
*********************************************************************** 40500021
*              TEST IF THIS IS A PSEUDO REGISTER                      * 40600021
*                                                                     * 40700021
*********************************************************************** 40800021
ADA00850 CLI   TESTTYPE,X'06'          IS TYPE = PSEUDO REGISTER        40900021
         BC    7,ADA00400              NO / GO TO TEST END OF LOOP      41000021
*********************************************************************** 41100021
*              CESD  TYPE = PSEUDO REGISTER                             41200021
*********************************************************************** 41300021
         SR    WORK1,WORK1                                              41400021
         IC    WORK1,12(CESDCRAD)       PSEUDO REGISTER ALIGNMENT       41500021
         LCR   WORK2,WORK1              2S COMPLEMENT OF ALIGNMENT      41600021
         BCTR  WORK2,0                  IS COMPLEMENT OF ALIGNMENT      41700021
         A     WORK1,PRAL          ADD PR LOC CTR TO ALIGNMENT          41800021
         NR    WORK1,WORK2              AND IS COMPLEMENT TO ADJUSTEDPR 41900021
         IC    WORK2,8(CESDCRAD)        SAVE TYPE                       42000021
         ST    WORK1,8(CESDCRAD)        STORE PSEUDO REG NEW DISPLACMNT 42100021
         STC   WORK2,8(CESDCRAD)        RESTORE TYPE                    42200021
         A     WORK1,12(CESDCRAD)       ADD PR LENGTH TO CULMULATIVE    42300021
         LA    WORK1,0(WORK1)           REMOVE HI BYTE GARBAGE          42400021
         ST    WORK1,PRAL          SAVE NEW CULMULATIVE TOTAL LGTH      42500021
         BC    15,ADA00400              BRANCH TO TEST END OF CESD LOOP 42600021
*********************************************************************** 42700021
*              TYPE = ER - DETERMINE SUBTYPE -                        * 42800021
*********************************************************************** 42900021
ADA00900 LA    RETURN,ADA00650          RETURN TO SAVE Y                43000021
         LA    TEMP2,ADA00910          ADD OF NULLIFY ROUT              43100021
*                                                                       43200021
         CLI   13(CESDCRAD),X'A0'      IS TYPE = ALIAS                  43300021
         BCR   8,RETURN                YES - RETURN TO MAIN LOOP        43400021
*                                                                       43500021
         CLI   13(CESDCRAD),X'90'      IS TYPE = NULL                   43600021
         BCR   11,TEMP2                GO TO NULLIFY CESD LINE          43700021
*                                                                       43800021
         CLI   13(CESDCRAD),X'04'      IS TYPE = NO CALL LOB MEMBER     43900021
         BCR   8,TEMP2                 YES - NULLIFY                    44000021
*                                                                       44100021
         CLI   13(CESDCRAD),X'02'      IS TYPE = NULL                   44200021
         BCR   8,TEMP2                 YES - NULLIFY                    44300021
         XC    9(4,CESDCRAD),9(CESDCRAD) SET ADD AND SEG FIELD = 0      44400021
*                                                                       44500021
         CLI   13(CESDCRAD),X'06'       IS TYPE = NEVER CALL            44600021
         BC    8,ADA00904               YES / PRINT WARNING MESSAGE -ER 44700021
*              MATCHED LIB.MEM.(TYPE 03) ARE REGULAR ERS                44800021
         CLI   13(CESDCRAD),X'05'       IS TYPE = NO CALL MATCHED       44900021
         MVI   13(CESDCRAD),X'00'       SET TYPE 05 OR 03 = 00 -REG.ER  45000021
         BC    8,ADA00904               YES / PRINT WARNING MESSAGE -ER 45100021
*                                                                       45200021
         LH    ERRCODE,ERRPARM1         ER - ASSUME NO CALL OFF         45300021
         TM    APT0,X'80'          IS NO CALL OPTION = ON               45400021
         BC    8,ADA00905               NO - SEV 3 - EXEC ONLY IF LET   45500021
ADA00904 LH    ERRCODE,ERRPARM2         ER - NO CALL ON                 45600021
ADA00905 LR    ERRSYMAD,CESDCRAD        ADDRESS OF SYMBOL OF ER         45700021
ADA00906 L     BRANCH,ERDIG        ADDRESS OF ERROR DIAGNOSTIC RT       45800021
         L     13,SAVE13           RESTORE ADDR. OF SAVE AREA           45900021
         BCR   15,BRANCH               GO TO ERROR ROUTINE - TYPE ER    46000021
*              NULL LINE                                                46100021
ADA00910 XC    0(16,CESDCRAD),0(CESDCRAD) NULLIFY LINE                  46200021
         MVI   8(CESDCRAD),X'07'       SET NULL TYPE                    46300021
         BC    15,ADA00700              RETURN TO TEST END OF LOOP      46400021
*********************************************************************** 46500021
*              TEST IF CURRENT NO SEGMENTS IS GTR THAN 1/ NO ERROR    * 46600021
*              SET PROGRAM TO NOT IN OVERLAY                          * 46700021
*********************************************************************** 46800021
ADA01000 LH    CSLGTH,CSNO         CURRENT NUMBER OF SEGMENTS           46900021
         BCT   CSLGTH,ADA01050          BRANCH IF CURRNO SEG GTR 1      47000021
         NI    PDSE7,OVLYOFF       SET PROG TO NOT IN OVERLAY           47100021
         LH    ERRCODE,ERRPARM5         LOAD ERR PARM - OVERLAY WARNING 47200021
         LA    RETURN,ADA00122          RETURN ADDRESS                  47300021
         BC    15,ADA00906              GO TO GO TO ERROR ROUTINE       47400021
ADA01050 LA    CSLGTH,1(CSLGTH)         RESTORE CURRENT NO SEGMENTS     47500021
         SLL   CSLGTH,2                 MULTIPLY BY 4                   47600021
         LA    CSLGTH,24(CSLGTH)        LENGTH OF SEGTAB                47700021
         L     WORK4,SEGLNTAB                                           47800021
         ST    CSLGTH,CONSTWK                                           47900021
         MVC   6(3,WORK4),CONSTWK+1     PUT SEGTAB LGTH IN SEGLGTH TBL  48000021
*                                       AT ENTRY PER SEGMENT 1          48100021
         MVC   PDSE10(2),CONSTWK+2  PUT LENGTH OF SEGTAB IN PDS         48200021
         SR    CSASADD,CSASADD          ASSEMBLED ADD OF SEGTAB = 0     48300021
         LA    CSSEGNO,1                SEGMENT NO = 1                  48400021
         BAL   RETURN,ADA02500         GO TO PCB ROUT                   48500021
*                                                                       48600021
         MVC   ENSPX(2),ENCDC      PUT ESDID IN PDS (SEGTAB)            48700021
         BC    15,ADA00122              GO TO SCAN CESD  (MAIN FLOW)    48800021
*                                                                       48900021
*                                                                       49000021
ADA01100 LA    CURSEGNO,1               INIT CURRENT SEGMENT =1         49100021
         L     SEGLGTH,SEGLNTAB    ADDRESS OF SEG LENGTH TABLE          49200021
         LR    WORK4,SEGLGTH            ADDRESS OF SEGLGTH              49300021
ADA01200 LA    SEGLGTH,6(SEGLGTH)       INC SEGMENT LG TBL ADD NXT ENTY 49400021
         L     WORK1,SGT1          ADDRESS OF SEGTAB1                   49500021
         SR    WORK2,WORK2                                              49600021
         IC    WORK2,0(WORK1,CURSEGNO)  PICK UP PRV SEGMENT NO.         49700021
         LTR   WORK2,WORK2              IS PREVIOUS SEGMENT NO.= 0      49800021
         BC    2,ADA02400               NO                              49900021
         LH    WORK3,CURRREGN           LOAD CURRENT REGION NO.         50000021
         ST    CURSEGNO,CONSTWK         CURR SEG NO                     50100021
         LA    WORK2,LSTS(WORK3)   ADDR OF LAST SEG OG PRES REG         50200021
         CLC   CONSTWK+3(1),0(WORK2)    IS CURR SEG IN PRES REGION      50300021
         BC    13,ADA01300              YES                             50400021
         LA    WORK3,1(WORK3)           INC CURRENT REG NO BY 1         50500021
         STH   WORK3,CURRREGN           SAVE CURR REG NO                50600021
         MVC   BGADDREG(4),HIADDREG     SET BEGIN ADDOF REG TO HIADDREG 50700021
ADA01300 L     WORK3,BGADDREG           LOAD BEGIN ADDRESS OF REGION    50800021
ADA01500 SR    WORK1,WORK1              SAVE SEGMENT (PATH) LENGTH      50900021
         IC    WORK1,3(SEGLGTH)         PICK UP FLAG BYTE FOR THIS SEG  51000021
         SR    WORK1,WORK3              3BITS OF AA - SEGLENGTH         51100021
         LA    WORK2,7                                                  51200021
         NR    WORK1,WORK2              AND OUT ALL BUT LOW 3 BITS/DIFF 51300021
         AR    WORK3,WORK1              SEGMENT LENGTH NOW MODULO 8FLAG 51400021
         ST    WORK3,CONSTWK                                            51500021
         NI    CONSTWK+3,X'F8'          AND OUT LOW 3 BITS OF SEGMENTRC 51600021
         MVC   3(3,SEGLGTH),CONSTWK+1   PUT SEGMENT RC IN LST 3BYTSEGLG 51700021
         MVC   CONSTWK+1(3),0(SEGLGTH)  MOVE LENGTH OFTHIS SEGMENT      51800021
         MVI   CONSTWK,X'00'            SET HI BYTE OF LENGTH TO ZERO   51900021
         A     WORK3,CONSTWK            ADD LENGTH OF THIS SEG TO PTHTL 52000021
         ST    WORK3,CONSTWK            PUT UPDATED SEGMENT LENGTH IN   52100021
         MVC   0(3,SEGLGTH),CONSTWK+1   SEGLGTH TBL AT THIS SEG ENTRY   52200021
         CL    WORK3,HIADDREG           IS THIS ADD GTR THAN CURR HIADD 52400021
         BC    13,ADA01600              NO                              52500021
         ST    WORK3,HIADDREG           YES SAVE NEW HI ADDRESS         52600021
ADA01600 LA    CURSEGNO,1(CURSEGNO)     INC CURRENT SEGMENT CT          52700021
         CH    CURSEGNO,CSNO       IS LOOP DONE                         52800021
         BC    13,ADA01200              NO / CONTINUE LOOP              52900021
*                                                                       53000021
*              LOOP THROUGH CESD ADDING SEGMENT RC TO TLA OF (SD,PC,CM) 53100021
*                           AND TO TRC OF (SD,PC,CM)                    53200021
         LA    CURSEGNO,1               INIT CURRENT SEG=1       S01904 53300021
         XC    CURRREGN(10),CURRREGN    CLEAR CURRENT REGION NO  S01904 53400021
         LH    WRKREG7,ENSPX            COUNT OF CESD ENTRIES    S01904 53500021
         OI    SWITCHH,4                SET SWITCHH TO 4         S01904 53600021
         L     SEGLGTH,SEGLNTAB         ADDR OF SEG LEN TABLE    S01904 53700021
         B     ADA01701                                          S01904 53800021
ADA0170A L     SEGLGTH,SEGLNTAB         ADDR OF SEG LEN TABLE    S01904 53900021
ADA0600A LH    WRKREG1,ORDRCUR          CUR NO OF BYTES IN ORDR TBL     54000021
         NI    SWITCHH,X'FB'                                     S01904 54100021
         LTR   WRKREG1,WRKREG1          ANY ENTRIES IN ORDR TBL  S01904 54200021
         BZ    ADA0700                  NO,BRANCH OUT            S01904 54300021
         OI    SWITCHH,1                INDICATE ORDER TBL LOOP  S01904 54400021
         L     WRKREGF,ORDRADR          ADDR OF ORDER TBL        S01904 54500021
         AR    WRKREG1,WRKREGF          ADDR OF LAST ENTRY IN ORDR      54600021
         LA    WRKREG0,3               TO BE COMPUTED            S01904 54700021
         SR    WRKREG1,WRKREG0          NOW IN REGISTER 1        S01904 54800021
ADA0600  TM    0(WRKREGF),X'A0'         MATCHED ENTRY TO BE ORDERED     54900021
         BNO   ADA0601                  NO,CONTINUE SEARCH       S01904 55000021
         MVC   IDSV(2),1(WRKREGF)       SAVE ESIDID FROM ORDR TABLE     55100021
         LH    WRKREG7,IDSV             PROCESS THIS ENTRY       S01904 55200021
         B     ADA01701                                          S01904 55300021
ADA0601  BXLE  WRKREGF,WRKREG0,ADA0600  CONTINUE LOOP            S01904 55400021
         NI    SWITCHH,X'FE'            RESET ORDR TBL LOOP INDICATOR   55500021
ADA0700  LH    WRKREG1,ENTOC            CURR NO OF BYTES IN TXTIO TBL   55600021
         LTR   WRKREG1,WRKREG1          ANY ENTRIES IN TXTIO TBL        55700021
         BZ    ADA0800                  NO,BRANCH OUT            S01904 55800021
         OI    SWITCHH,2                INDICATE TXTIO LOOP      S01904 55900021
         L     WRKREGF,TXTIO            GET ADDR OF TXTIO TBL    S01904 56000021
         AR    WRKREG1,WRKREGF          COMPUTE THE ADDR         S01904 56100021
         LA    WRKREG0,4                OF THE LAST ENTRY IN TXTIO      56200021
         SR    WRKREG1,WRKREG0          ADDR NOW IN REG ONE      S01904 56300021
ADA0701  LH    WRKREG7,0(WRKREGF)       GET ESDID FROM ENTRY     S01904 56400021
ADA01701 SLL   WRKREG7,4                LOCATE CORR ENTRY        S01904 56500021
         A     WRKREG7,CHESD            IN CESD TABLE.           S01904 56600021
         B     ADA01702                 PROCEED TO PROCESS ENTRY        56700021
ADA0702  BXLE  WRKREGF,WRKREG0,ADA0701  CONTINUE TXTIO PROCESS LOOP     56800021
         NI    SWITCHH,X'FD'            RESET TXTIO INDICATOR    S01904 56900021
ADA0800  L     CESDCRAD,CHESD      CESD ADDRESS                         57000021
         LH    CESDCRCT,ENCDC      CESD CURRENT COUNT                   57100021
ADA01700 LA    CESDCRAD,16(CESDCRAD)    INCREMENT CESD ADDRESS          57200021
ADA01702 TM    8(WRKREG7),8             WAS ENTRY PROCESSED      S01904 57300021
         BO    ADA02000                 YES,BRANCH OUT           S01904 57400021
         MVN   TESTTYPE(1),8(CESDCRAD)  MOVE TYPE FOR TESTING           57500021
         NI    TESTTYPE,X'F7'                                    S01904 57600021
         CLI   TESTTYPE,X'05'           IS TYPE = CM                    57700021
         BC    8,ADA01750               YES                             57800021
         TM    TESTTYPE,X'03'           IS TYPE NOT = SD,PC,(W/O RLDS)  57900021
         BC    5,ADA02000               NO  GO TO TEST END OF LOOP      58000021
ADA01750 SR    WORK1,WORK1                                              58100021
         IC    WORK1,12(CESDCRAD)       PICK UP SEG NO OF THIS CESD ID  58200021
         CR    WORK1,CURSEGNO           IS IT THE CURR SEG NO    S01904 58300021
         BNE   ADA02000                 NO,BRANCH OUT            S01904 58400021
         MH    WORK1,SIX                MULTIPLY BY 6                   58500021
         AR    WORK1,SEGLGTH            ADD SEGLGTH ADD /POINTS   ENTRY 58600021
         MVI   CONSTWK,X'00'                                            58700021
         MVC   CONSTWK+1(3),3(WORK1)    MOVE SEGMENT RC TO CONSTWK      58800021
         L     WORK1,CONSTWK            LOAD SEGMENT RELOCATION CONST   58900021
         MVI   CONSTWK1,0                                        S01904 59000021
         A     WORK1,CONSTWK1                                    S01904 59100021
         LR    WORK2,WORK1              SAVE SEGMENT RC                 59200021
         A     WORK2,8(CESDCRAD)        ADD TEMP LINKED ADD TO SEG RC   59300021
         BAL   WORK3,ADA0400            CHECK PAGE ALIGN         S01904 59400021
         IC    WORK3,8(CESDCRAD)        SAVE TYPE                       59500021
         ST    WORK2,8(CESDCRAD)        STORE FINAL LINKED ADD          59600021
         STC   WORK3,8(CESDCRAD)        RESTORE TYPE                    59700021
         LR    WORK2,CESDCRAD           SAVE CURRENT CESD ADD           59800021
         S     WORK2,CHESD         FIND RELATIVE CESD ADD               59900021
         SRL   WORK2,2                  FIND RELATIVE RCT (REL)ADD      60000021
         A     WORK2,RECNT         ADDRESS OF THIS RC ENTRY             60100021
ADA01800 A     WORK1,0(WORK2)           ADD TRC TO SEG RC               60200021
         ST    WORK1,0(WORK2)          PUT FINAL RC IN RCT              60300021
         TM    SWITCHH,X'07'                                     S01904 60400021
         BZ    ADA02000                                          S01904 60500021
         OI    8(WRKREG7),X'08'                                  S01904 60600021
ADA02000 TM    SWITCHH,1                                         S01904 60700021
         BO    ADA0601                                           S01904 60800021
         TM    SWITCHH,2                                         S01904 60900021
         BO    ADA0702                                           S01904 61000021
         TM    SWITCHH,4                                         S01904 61100021
         BO    ADA0600A                                          S01904 61200021
         CLI   8(WRKREG7),X'0A'         IS ENTRY A WEAK EXTN     S01904 61300021
         BE    ADA02001                 YES,SKIP RESET           S01904 61400021
         NI    8(WRKREG7),X'F7'         RESET PROCESSED BIT      S01904 61500021
ADA02001 BCT   CESDCRCT,ADA01700        BRANC IF LOOP NOT DONE   S01904 61600021
ADA0500  STM   WRKREG0,WRKREGF,BRNCHSV  SAVE REGISTERS           S01904 61700021
         LR    WRKREG1,CURSEGNO         GET CURRENT SEG NO       S01904 61800021
         MH    WRKREG1,SIX             COMPUTE ITS ENTRY ADDR    S01904 61900021
         A     WRKREG1,SEGLNTAB        IN THE SEG LEN TABLE      S01904 62000021
         MVC   CONSTWK+1(3),0(WRKREG1)  MOVE THE SEG LENGTH      S01904 62100021
         MVI   CONSTWK,0               ZERO OUT HI ORDER BYTE    S01904 62200021
         L     WRKREG0,CONSTWK         LOAD SEG LENGTH           S01904 62300021
         MVI   CONSTWK1,0                                        S01904 62400021
         A     WRKREG0,CONSTWK1        ADD                       S01904 62500021
         LR    WRKREG4,WRKREG0         USE NONZERO REG FOR INDXING      62600021
         LA    WRKREG0,7(WRKREG4)      FORCE ADDR TO NEXT HIGHER        62700021
         N     WRKREG0,ROUNDOFF        DOUBLEWORD BOUNDARY       S01904 62800021
         ST    WRKREG0,CONSTWK         SAVE                      S01904 62900021
         MVC   0(3,WRKREG1),CONSTWK+1   MOVE TO SEG LEN TBLE     S01904 63000021
         C     WRKREG0,HIRNADR2                                  S01904 63100021
         BNH   ADA500A                                           S01904 63200021
         ST    WRKREG0,HIRNADR2                                  S01904 63300021
ADA500A  XC    CONSTWK1(4),CONSTWK1                              S01904 63400021
         XR    WRKREGE,WRKREGE                                   S01904 63500021
         L     WRKREGF,SGT1                                      S01904 63600021
         LA    WRKREG3,1(CURSEGNO)                               S01904 63700021
         CH    WRKREG3,CSNO                                      S01904 63800021
         BNH   ADA0501                                           S01904 63900021
         LM    WRKREG0,WRKREGF,BRNCHSV   RESTORE REGS            S01904 64000021
         B     ADA504A                                           S01904 64100021
ADA0501  LH    WRKREG5,CURRREGN        GET CURR REGION NO        S01904 64200021
         LA    WRKREG6,LSTS(WRKREG5)                             S01904 64300021
         STC   CURSEGNO,SEGNOSV                                  S01904 64400021
         CLC   0(1,WRKREG6),SEGNOSV                              S01904 64500021
         BNE   ADA0501A                                          S01904 64600021
         MVC   HIRNADR1(4),HIRNADR2                              S01904 64700021
         LA    WRKREG5,1(WRKREG5)                                S01904 64800021
         STH   WRKREG5,CURRREGN                                  S01904 64900021
ADA0501A IC    WRKREG3,0(WRKREG3,WRKREGF)  GET CUR SEG LOC IN OVLY TREE 65000021
         LTR   WRKREG3,WRKREG3         IS IT ZERO?               S01904 65100021
         BZ    ADA0504                 YES,BRANCH OUT            S01904 65200021
         LR    WRKREG4,WRKREG3         COMPUTE CORR ENTRY ADDR   S01904 65300021
         MH    WRKREG4,SIX             IN THE SEG LEN TABLE      S01904 65400021
         A     WRKREG4,SEGLNTAB                                  S01904 65500021
         MVC   CONSTWK+1(3),0(WRKREG4) OBTAIN SEGMENT LENGTH     S01904 65600021
         L     WRKREGE,CONSTWK         LOAD INTO REGISTER        S01904 65700021
         B     ADA0504B                                          S01904 65800021
ADA0504  L     WRKREGE,HIRNADR1                                  S01904 65900021
ADA0504B LR    WRKREGB,WRKREGE                                   S01904 66000021
         MVC   CONSTWK+1(3),9(WRKREG1)                           S01904 66100021
         MVI   CONSTWK,0                                         S01904 66200021
         S     WRKREGB,CONSTWK                                   S01904 66300021
         MVC   CONSTWK+1(3),6(WRKREG1)                           S01904 66400021
         A     WRKREGB,CONSTWK                                   S01904 66500021
         ST    WRKREGB,CONSTWK                                   S01904 66600021
         MVC   6(3,WRKREG1),CONSTWK+1                            S01904 66700021
         ST    WRKREGE,CONSTWK                                   S01904 66800021
         MVC   9(3,WRKREG1),CONSTWK+1                            S01904 66900021
         LM    WRKREG0,WRKREGF,BRNCHSV                           S01904 67000021
         LA    CURSEGNO,1(CURSEGNO)                              S01904 67100021
         CH    CURSEGNO,CSNO                                     S01904 67200021
         BNH   ADA0170A                                          S01904 67300021
ADA504A  MVC   HIADDREG,HIRNADR2                                 S01904 67400021
         L     WORK1,HIADDREG          GET LENGTH OF LONGEST PATH       67500021
         LA    WORK1,7(WORK1)          ROUND UP TOTAL LENGTH TO         67600021
         N     WORK1,ROUNDOFF          NEXT DOUBLE WORD                 67700021
         ST    WORK1,HIADDREG          SAVE FOR PDS DIRECTORY           67800021
         MVC   PDSE9(3),HIADDREG+1 PUT TOTAL CONTIGOUS CORE REQ         67900021
         BC    15,ADA00550              IN PDS / GO TO FINAL CESD LOOP  68000021
ADA02300 LH    CESDCRCT,ENCDC      CESD CURR CT                         68100021
         LTR   CESDCRCT,CESDCRCT       IS CESD CURR CT = 0              68200021
         BCR   2,RETURN                N/ / GO TO CALLER                68300021
         L     BRANCH,ERDIG        ERROR RT ADDRESS                     68400021
         LH    ERRCODE,ERRPARM3         CESD DOES NOT EXIST             68500021
         BALR  RETURN,BRANCH                                            68600021
         L     BRANCH,FNLVCON           ADD OF FINAL PROC               68700021
         BCR   15,BRANCH                GO TO FINAL PROC                68800021
ADA02400 MH    WORK2,SIX                                                68900021
         AR    WORK2,WORK4              ADDRESS OF A SEGLGTH ENTRY      69000021
         MVI   CONSTWK,X'00'                                            69100021
         MVC   CONSTWK+1(3),0(WORK2)    MOVE SEG LGTH OF PRVIOUS SEG.   69200021
         L     WORK3,CONSTWK                                            69300021
         LTR   WORK3,WORK3              IS PRV. SEGMENT LENGTH = 0      69400021
         BC    2,ADA01500               NO                              69500021
         SR    WORK2,WORK2                                              69600021
         IC    WORK2,0(WORK1,CURSEGNO)  PICK UP PRVIOUS SEGMENT NO.     69700021
         IC    WORK2,0(WORK1,WORK2)     USING PRV.SEG.NO PICK UP ITSPRV 69800021
         STC   WORK2,0(WORK1,CURSEGNO)  PUT PRV.OF PRV AS PRV TO THIS 1 69900021
         BC    15,ADA02400              BRANCH TO GET SEG LENGTH OF     70000021
*********************************************************************** 71400021
*              THE FOLLOWING BOX OF CODE WILL BE USED ON THE E LOADER * 71500021
*                        1) IT COMPUTES NO.BYTES OF ENTAB PER SEGMENT * 71600021
*                        2) IT MAKES AN ENTRY IN CESD FOR EACH SEGMENT* 71700021
*                   NOTE:  1) AND 2) ARE DONE ONLY IF A SEG HAS ENTAB * 71800021
*                                                                     * 71900021
         DROP  BASE                                                     72000021
         USING HEWLCAD1,BRANCH                                          72100021
         DS    0F                                                       72200021
HEWLCAD1 LR    TEMP1,BASE          SAVE BASE OF HEWLKENS                72300021
         L     BASE,BASADD             SET UP ADDRESSABILITY            72400021
         LR    TEMP2,RETURN        SAVE RETURN ADD OF HEWLKENS          72500021
         MH    ACUMZERO,TWELVE          CHANGE ENTAB LINES TO ENTAB     72600021
         LA    ACUMZERO,12(ACUMZERO)    BYTES                           72700021
         C     ACUMZERO,MULTSIZE       IS ENTAB  G.T. MULTIPLICITY      72800021
         BC    2,ENTABERR    YES GIVE TERMINAL ERROR MESSAGE            72900021
         CH    ACUMZERO,FOUR096        IS ENTAB G.T. ABSOLUTE MAX.      73000021
         BC    2,ENTABERR     YES, GIVE TERMINAL ERROR MESSAGE          73100021
         SR    CSASADD,CSASADD          ADDRESS OF THIS ENTAB = 0       73200021
         LR    CSLGTH,ACUMZERO          LENGTH OF THIS ENTAB (BYTES)    73300021
         LR    CSSEGNO,CURSEGNO         SEGMENT NO OF THIS ENTAB        73400021
         BAL   RETURN,ADA02500         GO TO PCB ROUTINE                73500021
         LR    BASE,TEMP1          RESTORE BASE OF HEWLKENS             73600021
         LR    RETURN,TEMP2        RESTORE RETURN ADD OF HEWLKENS       73700021
         BCR   15,RETURN               RETURN TO ENS                    73800021
ENTABERR LH    ERRCODE,ERRPARM7        SET UP FOR 454 MESSAGE           73900021
         BC    15,ADA02600+4       GO TO GIVE MSG AND TERMINATE         74000021
BASADD   DC    A(ADA00100+2)       ADDRESS OF HEWLKADA+2                74100021
         DROP  BRANCH                                                   74200021
         USING ADA00100+2,BASE                                          74300021
*********************************************************************** 74400021
*                                                                       74500021
*              PCB  - PRIVATE CODE ENTRY BUILDING                       74600021
*                                                                       74700021
*                                                                     * 74800021
*                   REQUIRED REGISTERS & PARAMETERS                   * 74900021
*                        CESDADD (11)  WORK REGISTER                  * 75000021
*                        APT      (2)- ADDRESS OF APT                 * 75100021
*                        CSLGTH        CONTROL SECTION LENGTH         * 75200021
*                        CSSEGNO       CONTROL SECTION SEGMENT NO.    * 75300021
*                        CSASADD       CONTROL SECTION ASSIGNED ADD   * 75400021
*                        BASE    (12)  BASE REGISTER                  * 75500021
*                        RETURN  (14)                                 * 75600021
*                                                                       75700021
*              REGISTERS                                                75800021
*                                                                       75900021
CESDADD  EQU   11                                                       76000021
ERRADD   EQU   15                                                       76100021
*              APT  DISPLACEMENTS                                       76200021
*              DATA CONSTANTS  AND TEMPORARY STORAGE                    76300021
PCDELETE EQU   X'14'                    CESD TYPE PC MARKED DELETE      76400021
ADA02500 LH    CESDADD,ENCDC       CURRENT NO CESD ENTRIES              76500021
         LA    CESDADD,1(CESDADD)       INC CESD CURRENT CT             76600021
ADA02510 CH    CESDADD,ENCDX       IS CESD FULL                         76700021
         BL    ADA02520                NO,BRANCH OUT             S01904 76800021
         TM    APT4,REALOCTE           CAN REALLOC BE DONE       S01904 76900021
         BO    ADA02600                NO,SIGNAL OVERFLOW        S01904 77000021
         STM   WRKREG0,WRKREGF,BRNCHSV    SAVE REGISTERS         S01904 77100021
         L     WRKREGF,ERDIGA          ADDR OF REALOC RTN        S01904 77200021
         BALR  WRKREGE,WRKREGF         GO TO REALOC RTN          S01904 77300021
         LM    WRKREG0,WRKREGF,BRNCHSV RESTORE REGISTERS         S01904 77400021
         B     ADA02510                RESUME CHECK              S01904 77500021
ADA02520 STH   CESDADD,ENCDC            INCR CUR CESD COUNT             77600021
ADA02550 SLL   CESDADD,4                LOCATE NEXT AVAIL ENTRY         77700021
         A     CESDADD,CHESD            ADD BEGIN ADDR OF CESD TBL      77800021
         MVI   0(CESDADD),X'40'         MOVE BLANKS FOR SYMBOL          77900021
         MVC   1(7,CESDADD),0(CESDADD)   IN AVAIL ENTRY                 78000021
         ST    CSASADD,8(CESDADD)       STORE CS ASSIGNED ADDR          78100021
         MVI   8(CESDADD),PCDELETE      INDICATE PC DELETE TYPE         78200021
         ST    CSLGTH,12(CESDADD)       STORE LENGTH OF CSECT           78300021
         STC   CSSEGNO,12(CESDADD)      STORE CURR SEG NO               78400021
         BCR   15,RETURN                RETURN TO CALLING RTN           78500021
ADA02600 LH    ERRCODE,ERRPARM4         CESD OVERFLOW                   78600021
         L     ERRADD,ERDIG                                             78700021
         BCR   15,ERRADD                                                78800021
*********************************************************************** 78900021
*                                 TEMPORARY  ERROR  PARMS             * 79000021
*********************************************************************** 79100021
DISP1    EQU   X'22'                    DISP = 2   SEV = 2   NCAL  OFF  79200021
DISP2    EQU   X'21'                    DISP = 2   SEV = 1   NCAL  ON   79300021
DISP3    EQU   X'03'                    DISP = 0   SEV = 3   NO         79400021
DISP4    EQU   X'04'                                                    79500021
DISP5    EQU   X'01'                   DISP = 0     SEV = 1             79600021
DISP6    EQU   X'02'                   DISP = 0    SEV = 2              79700021
*                                                                       79800021
*              MESSAGE NUMBERS ARE DECIMAL                              79900021
*                                                                       80000021
MESS1    EQU   13                       UNRESOLVED ER   NCALL OFF       80100021
MESS2    EQU   46                       UNRESOLVED ER   NCALL ON        80200021
MESS3    EQU   12                       NO CESD                         80300021
MESS4    EQU   25                       CESD OVERFLOW                   80400021
MESS5    EQU   20     ONLY 1 SEGMENT IN AN OVERLAY STRUCTURE            80500021
MESS6    EQU   19     OUTPUT LOAD MODULE GREATER THAN 512K              80600021
MESS7    EQU   45     ENTAB GREATER THAN MULT SIZE OR 4K                80700021
*                     TOO MANY DOWNWARD CALLS FROM SEGMENT              80800021
MESS8    EQU   38     ID FOR TEXT IN TXTIOT IS NOT SD,PC, OR CM         80900021
         DS    0F                                                       81000021
         EXTRN HEWLFLDB                                                 81100021
SYSLIBAD DC    A(HEWLFLDB)    SYSLIB DCB ADDRESS                        81200021
ERRPARM1 DC    AL1(DISP1)               UNRESOLVED XTERNAL REFERENCE    81300021
         DC    AL1(MESS1)               SEV =2  - NCALL OFF             81400021
*                                                                       81500021
ERRPARM2 DC    AL1(DISP2)               UNRESOLVED XTERNAL REF          81600021
         DC    AL1(MESS2)         SEV=1 - NCAL ON                       81700021
*                                                                       81800021
ERRPARM3 DC    AL1(DISP3)               NO CESD                         81900021
         DC    AL1(MESS3)               SEV = 3                         82000021
*                                                                       82100021
ERRPARM4 DC    AL1(DISP4)               CESD  OVERFLOW                  82200021
         DC    AL1(MESS4)                                               82300021
*                                                                       82400021
ERRPARM5 DC    AL1(DISP5)              ONLY 1 SEGMENT IN AN OVERLAY     82500021
         DC    AL1(MESS5)              PROGRAM - OVERLAY OPTION         82600021
*                                      CANCELLED                        82700021
*                                                                       82800021
ERRPARM7  DC   AL1(DISP4)              ENTAB HAS EXCEEDED MULTIPLICITY  83300021
         DC    AL1(MESS7)              SIZE OR THE MAX. OF 4K.          83400021
*                                      TOO MANY DOWNWARD CALLS IN SEG.  83500021
*                                                                       83600021
ERRPARM8 DC    AL1(DISP6)              ID IN TXTIOT IS NOT SD, OR PC    83700021
         DC    AL1(MESS8)              INVALID ID MESSAGE ISSUED        83800021
*                                                                       83900021
*              MASKS & CONSTANTS                                        84000021
*                                                                       84100021
OUTVCON  DC    V(HEWLFOUT)    ADD OF OUTPRO                             84200021
ENSVCON  DC    V(HEWLFENS)    ADDRESS OF ENTAB SIZE DETERMINATION       84300021
ENTVCON  DC    V(HEWLFENT)    ADDRESS OF ENTRY PROCESSOR                84400021
FNLVCON  DC    V(HEWLFFNL)    ADDRESS OF FINAL PROCESSOR                84500021
CONSTWK  DC    F'0'                     WORK WORD                       84700021
SIX      DC    H'6'                     VALUE OF 6                      84800021
CLRLAST  XC    0(0,TEMP1),0(TEMP1)  INSTRUCTION FOR CLEARING TABLES     84900021
CONST256 DC    F'256'              USED FOR CLEARING TABLES             85100021
SIZSAVE  DC    F'0'                    AREA FOR MANIPULATING PGM SIZE   85200021
ROUNDOFF DC    X'FFFFFFF8'             MASK FOR ROUNDING TO NEXT        85300021
*                                      DOUBLE WORD                      85400021
SAVE13   DS    1F                                                       85500021
INC      EQU   4       NUMBRR OF BYTES/ENTRY ON TXTIOT                  85600021
*********************************************************************** 85700021
*              HIADDREG,BGADDREG,CURREGN,NCESDCT MUST BE IN THE CONTIG* 85800021
*              UOUS ORDER - THEY ARE REFERENCED AS A BLOCK            * 85900021
*********************************************************************** 86000021
HIADDREG DC    F'0'                     PRESENT HIGH ADDRESS OF THISREG 86100021
BGADDREG DC    F'0'                          PRESENT BEGIN ADDR OF REG  86200021
NCESDCT  DS    H                        Y - USED TO RECORD CESD CURR CT 86300021
CURRREGN DC    H'0'                     CURRENT REGION NUMBER           86400021
HIRNADR1 DC    F'0'                                                     86500021
HIRNADR2 DC    F'0'                                                     86600021
TWELVE   DC    H'12'                                                    86700021
         DS    0F                                                       86800021
*********************************************************************** 86900021
TESTTYPE DC    X'00'                    USED FOR TESTING ESD TYPES      87000021
*                                       HI 4 BITS= 0,LOW 4 BITS FORTYPE 87100021
FOUR096  DC    H'4096'                 CONSTANT OF 4K                   87200021
SEGLNTAB DS    F         ADDRESS OF SEGMENT LENGTH TABLE                87300021
*     TABLE ALSO USED BY HEWLFOUT FOR HI ID'S                           87400021
         DS    50F                                                      87500021
SAVEREGS DS    16F                                                      87600021
         EJECT                                                          87700021
*********************************************************************   87800021
*                                                                    *  87900021
*********************************************************************   88000021
ADA0400  TM    APT4,PAGEE         WAS PAGE ALIGN REQUESTED       S01904 88100021
         BCR   8,WORK3            NO,RETURN TO CALLING RTN       S01904 88200021
         STM   WRKREGE,WRKREG1,BRNCHSV SAVE REGISTERS            S01904 88300021
         LH    WRKREG1,ORDRCUR    OBTAIN CUR NO OF BYTES IN ORDR TBL    88400021
         LTR   WRKREG1,WRKREG1    ARE THERE ANY ENTRIES?         S01904 88500021
         BZ    ADA0405            NO,BRANCH OUT AND EXIT         S01904 88600021
         L     WRKREGE,ORDRADR    GET BEGIN ADDR OF ORDER TBL    S01904 88700021
         AR    WRKREG1,WRKREGE    COMPUTE ADDR OF LAST ENTRY     S01904 88800021
         LA    WRKREG0,3          IN THE ORDER TABLE             S01904 88900021
         SR    WRKREG1,WRKREG0    WRKREG1 NOW HAS THE ADDR       S01904 89000021
         LR    WRKREGF,WRKREG7    GET CESD ENTRY ADDR            S01904 89100021
         S     WRKREGF,CHESD      SUBTRACT FROM CESD TBL ADDR    S01904 89200021
         SRL   WRKREGF,4          AND DIVIDE BY 16               S01904 89300021
         STH   WRKREGF,IDSV       TO OBTAIN ESDID.               S01904 89400021
ADA0402  CLC   IDSV(2),1(WRKREGE) MATCH WITH ORDER TABLE ENTRY?  S01904 89500021
         BNE   ADA0406            NO,CONTINUE                    S01904 89600021
         TM    0(WRKREGE),X'10'   IS ENTRY FOR PAGE ALIGNMENT?   S01904 89700021
         BZ    ADA0405            NO,BRANCH OUT AND EXIT         S01904 89800021
         TM    APT4,ALIGN2        ALIGNMENT FOR 2K-BOUNDARY      S01904 89900021
         BO    ADA0403            YES,BRANCH OUT FOR 2K-ALIGNMENT       90000021
         LA    WRKREGF,X'FFF'(WORK2)   ALIGN TLA                 S01904 90100021
         N     WRKREGF,HEX1000    ON 4K-BOUNDARY                 S01904 90200021
         B     ADA0404                                           S01904 90300021
ADA0403  LA    WRKREGF,X'7FF'(WORK2)   ALIGN TLA                 S01904 90400021
         N     WRKREGF,HEX800     ON 2K-BOUNDARY                 S01904 90500021
ADA0404  LR    WRKREGE,WRKREGF    SAVE ALIGNED TLA               S01904 90600021
         SR    WRKREGF,WORK2      CHECK IF ALIGNMENT CAUSED DISPLMENT   90700021
         BZ    ADA0405            NO,EXIT                        S01904 90800021
         TM    PDSE7,OVRLAYBT     PROCESS INVOLVES OVLY STRUCTURES?     90900021
         BZ    ADA0405A           NO,BRANCH OUT                  S01904 91000021
         AR    WORK1,WRKREGF                                     S01904 91100021
         LA    WORK1,0(WORK1)                                    S01904 91200021
         A     WRKREGF,CONSTWK1   ACCUM INCREMENTS WITHIN SEGMENT       91300021
         LA    WRKREGF,0(WRKREGF) REMOVE HI ORDER BYTE           S01904 91400021
         ST    WRKREGF,CONSTWK1   SAVE ACCUM INCREMENT           S01904 91500021
ADA0405A LR    WORK2,WRKREGE                                     S01904 91600021
ADA0405  LM    WRKREGE,WRKREG1,BRNCHSV  RESTORE REGISTERS        S01904 91700021
         BR    WORK3              RETURN                         S01904 91800021
ADA0406  BXLE  WRKREGE,WRKREG0,ADA0402  CONTINUE SEARCH          S01904 91900021
         B     ADA0405                 SEARCH DONE               S01904 92000021
*********************************************************************   92100021
CONSTWK1 DC    F'0'                                                     92200021
HEX1000  DC    X'FFFFF000'                                              92300021
HEX800   DC    X'FFFFF800'                                              92400021
IDSV     DC    H'0'                                                     92500021
TYPESV   DC    H'0'                                                     92600021
ERRCDDE  DC    X'2240'                                                  92700021
SWITCHH  DC    X'0'                                                     92800021
SEGNOSV  EQU   IDSV                                                     92900021
WRKREG0  EQU   0                                                        93000021
WRKREG1  EQU   1                                                        93100021
WRKREG2  EQU   2                                                        93200021
WRKREG3  EQU   3                                                        93300021
WRKREG4  EQU   4                                                        93400021
WRKREG5  EQU   5                                                        93500021
WRKREG6  EQU   6                                                        93600021
WRKREG7  EQU   7                                                        93700021
WRKREG8  EQU   8                                                        93800021
WRKREG9  EQU   9                                                        93900021
WRKREGA  EQU   10                                                       94000021
WRKREGB  EQU   11                                                       94100021
WRKREGC  EQU   12                                                       94200021
WRKREGD  EQU   13                                                       94300021
WRKREGE  EQU   14                                                       94400021
WRKREGF  EQU   15                                                       94500021
O        EQU   0                                                        94600021
I        EQU   1                                                        94700021
VIII     EQU   8                                                        94800021
*********************************************************************** 94900021
*                                                                     * 95000021
*********************************************************************** 95100021
         HEWAPT                                                         95200021
         END                                                            95300021
