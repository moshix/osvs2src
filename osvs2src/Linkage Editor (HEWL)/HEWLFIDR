         TITLE '***HEWLFIDR*** CSECT IDENTIFICATION RECORD PROCESSOR'   00050021
**** START OF SPECIFICATIONS ****************************************** 00100021
*                                                                     * 00150021
*1MODULE-NAME = HEWLFIDR                                              * 00200021
*1DESCRIPTIVE-NAME = CSECT IDENTIFICATION RECORD PROCESSOR            * 00250021
*1DESCRIPTION = THE IDR MODULE PROCESSES INCOMING LOAD MODULE IDR'S,  * 00300021
*              IDR DATA ON OBJECT MODULE END RECORDS, AND USER -      * 00350021
*              SUPPLIED IDR DATA FROM THE IDENTIFY CONTROL STATEMENT. * 00400021
*1ASSUMPTIONS = N/A                                                   * 00450021
*1PERFORMANCE = NOT YET AVAILABLE                                     * 00500021
*1FUNCTION = THE FUNCTIONS OF THE CSECT IDENTIFICATION RECORD         * 00550021
*            PROCESSOR ARE DEPENDENT ON THE TYPE OF IDR INPUT         * 00600021
*            BEING PROCESSED:                                         * 00650021
*              LOAD MODULE IDR'S --                                   * 00700021
*                  THE IDR DATA IS EXTRACTED FROM THESE RECORDS,      * 00750021
*                  EXCEPT FOR THE LINKAGE EDITOR IDR, WHICH IS        * 00800021
*                  IGNORED. A CHECK IS MADE TO SEE WHETHER ANY OF THE * 00850021
*                  CSECT'S IDENTIFIED IN THE IDR ARE BEING DELETED    * 00900021
*                  FROM THE OUTPUT LOAD MODULE. IF SO, THE IDR DATA   * 00950021
*                  ASSOCIATED WITH SUCH CSECT'S ARE ALSO DELETED. THE * 01000021
*                  DATA WHICH IS NOT TO BE DELETED IS THEN PLACED AT  * 01050021
*                  THE END OF THE APPROPRIATE IDR DATA TABLE. IN THE  * 01100021
*                  CASE OF TRANSLATOR DESCRIPTIONS, A CHECK IS MADE   * 01150021
*                  TO SEE WHETHER AN IDENTICAL DESCRIPTION HAS        * 01200021
*                  ALREADY BEEN ENTERED INTO THE TABLE. IF SO, THE    * 01250021
*                  CSECT'S ASSOCIATED WITH THE INCOMING ITEM AND      * 01300021
*                  THOSE ASSOCIATED WITH THE EXISTING ITEM ARE        * 01350021
*                  GROUPED INTO A SINGLE TABLE ENTRY TO AVOID         * 01400021
*                  NEEDLESS REPETITION.                               * 01450021
*              OBJECT MODULE END RECORDS --                           * 01500021
*                  WHEN THESE RECORDS CONTAIN THE IDR DATA FIELD      * 01550021
*                  (ONLY PRESENT IF THE TRANSLATOR WHICH PRODUCED THE * 01600021
*                  OBJECT MODULE CONTAINS IDR SUPPORT), THAT FIELD IS * 01650021
*                  EXTRACTED FROM THE RECORD. THE RENUMBERING TABLE   * 01700021
*                  IS SCANNED TO DETERMINE THE CORRECT ESDID'S OF THE * 01750021
*                  CSECT'S TO WHICH THE INCOMING TRANSLATOR           * 01800021
*                  DESCRIPTION APPLIES. IF ANY OF THESE CSECT'S ARE   * 01850021
*                  TO BE DELETED, THEY ARE NOT IDENTIFIED ON THE IDR  * 01900021
*                  OUTPUT. IF AT LEAST ONE OF THE CSECT'S ARE TO BE   * 01950021
*                  KEPT, THE TRANSLATOR DESCRIPTION IS ADDED TO THE   * 02000021
*                  TABLE. AS IN LOAD MODULE INPUT, A CHECK IS MADE    * 02050021
*                  FOR A DUPLICATE ITEM AND, IF FOUND, THE TWO ARE    * 02100021
*                  COMBINED.                                          * 02150021
*              IDENTIFY CONTROL STATEMENT --                          * 02200021
*                  THE CESD LINE ASSOCIATED WITH THE CSECT NAME TO BE * 02250021
*                  IDENTIFIED IS CHECKED. IF THE NAME IS NOT FOUND IN * 02300021
*                  THE CESD AS AN SD-TYPE ENTRY, AN ERROR MESSAGE     * 02350021
*                  IS LOGGED, AND PROCESSING TERMINATES. IF THE CSECT * 02400021
*                  IS TO BE DELETED, THE IDENTIFY DATA IS IGNORED. IF * 02450021
*                  NOT, A CHECK IS MADE TO SEE IF THERE PREVIOUSLY    * 02500021
*                  WAS ANY USER-SUPPLIED DATA ASSOCIATED WITH THAT    * 02550021
*                  CSECT. IF SO, THE OLD DATA IS REPLACED WITH THE    * 02600021
*                  NEW INCOMING DATA. IF NOT, THE INCOMING DATA IS    * 02650021
*                  ADDED TO THE END OF THE TABLE.                     * 02700021
*            WHENEVER ANY TYPE OF DATA IS BEING ADDED TO ONE OF THE   * 02750021
*            TABLES, A CHECK IS FIRST MADE TO DETERMINE WHETHER THE   * 02800021
*            ADDITION OF THAT DATA WILL CAUSE A TABLE OVERFLOW        * 02850021
*            CONDITION. IF IT WILL, AN ERROR MESSAGE INDICATING THIS  * 02900021
*            IS LOGGED, AND PROCESSING IS TERMINATED AT THAT POINT.   * 02950021
*1RESTRICTIONS = NONE                                                 * 03000021
*1MODULE-TYPE = PROCEDURE                                             * 03050021
*    2PROCESSOR = ASSEMBLER                                           * 03100021
*    2MODULE-SIZE = NOT YET KNOWN                                     * 03150021
*    2CODE-ATTRIBUTES = REUSABLE                                      * 03200021
*    2LOAD-ATTRIBUTES = OVERLAY                                       * 03250021
*    2MAIN-ENTRY-POINT = HEWLFIDR - TO PROCESS INPUT LOAD MODULE      * 03300021
*                                   IDR'S AND OBJECT MODULE END       * 03350021
*                                   RECORDS WITH THE IDR FIELD        * 03400021
*         3LINKAGE = BALR 14,15                                       * 03450021
*         3PARAMETER-RECEIVED = POINTER-TO-PARAMETER-LIST             * 03500021
*             4HOW-PASSED = REGISTER 1                                * 03550021
*             4LENGTH-OF-LIST = 4 BYTES                               * 03600021
*                  5FIELD = POINTER TO INPUT BUFFER                   * 03650021
*                       6DISPLACEMENT = 0 BYTES                       * 03700021
*                       6TYPE = ADDRESS                               * 03750021
*    2SECONDARY-ENTRY-POINT = HEWLCIDR - TO PROCESS IDENTIFY CONTROL  * 03800021
*                                        STATEMENT                    * 03850021
*         3LINKAGE = BALR 14,15                                       * 03900021
*         3PARAMETER-RECEIVED = POINTER-TO-PARAMETER-LIST             * 03950021
*             4HOW-PASSED = REGISTER 1                                * 04000021
*             4LENGTH-OF-LIST = 12 BYTES                              * 04050021
*                  5FIELD = POINTER TO CSECT NAME TO BE IDENTIFIED    * 04100021
*                       6DISPLACEMENT = 0 BYTES                       * 04150021
*                       6TYPE = ADDRESS                               * 04200021
*                  5FIELD = POINTER TO IDENTIFY STRING LENGTH         * 04250021
*                       6DISPLACEMENT = 4 BYTES                       * 04300021
*                       6TYPE = ADDRESS                               * 04350021
*                  5FIELD = POINTER TO IDENTIFY STRING                * 04400021
*                       6DISPLACEMENT = 8 BYTES                       * 04450021
*                       6TYPE = ADDRESS                               * 04500021
*    2EXIT = FINISH                                                   * 04550021
*         3PARAMETER-RETURNED = COMPLETION CODE                       * 04600021
*             4HOW-PASSED = REGISTER 15                               * 04650021
*             4TYPE = ARITHMETIC                                      * 04700021
*                 5MODE = BINARY                                      * 04750021
*                 5LENGTH = 32 BITS                                   * 04800021
*                 5SCALING = N/A                                      * 04850021
*                 5VALUE = 0 (NORMAL COMPLETION)                      * 04900021
*    2EXIT = ABORT                                                    * 04950021
*         3PARAMETER-RETURNED = ERROR CODE                            * 05000021
*             4HOW-PASSED = REGISTER 0                                * 05050021
*             4TYPE = ARITHMETIC                                      * 05100021
*                 5MODE = BINARY                                      * 05150021
*                 5LENGTH = 16 BITS                                   * 05200021
*                 5VALUE = X'0446' (MSG. IEW0704)                     * 05250021
*    2EXIT = TABOVFLO                                                 * 05300021
*         3PARAMETER-RETURNED = ERROR CODE                            * 05350021
*             4HOW-PASSED = REGISTER 0                                * 05400021
*             4TYPE = ARITHMETIC                                      * 05450021
*                 5MODE = BINARY                                      * 05500021
*                 5LENGTH = 16 BITS                                   * 05550021
*                 5VALUE = X'0445' (MSG. IEW0694)                     * 05600021
*    2EXTERNAL-PROCEDURE = HEWLFLOG (TO LOG DIAGNOSTIC MESSAGES)      * 05650021
*         3PARAMETER-PASSED = MESSAGE CODE (IN REGISTER 0)            * 05700021
*         3PARAMETER-RETURNED = NONE                                  * 05750021
*    2EXTERNAL-MACRO = HEWAPT                                         * 05800021
*         3PARAMETER-PASSED = NONE                                    * 05850021
*         3PARAMETER-RETURNED = NONE                                  * 05900021
*    2SYSTEM-MACROS = SAVE, RETURN, OPEN, SNAP, CLOSE AND DCB         * 05950021
*    2EXTERNAL-TABLES = CESD, RENUMBERING TABLE AND IDR DATA TABLES   * 06000021
*                       (IDRTRTAB, IDRUDTAB AND IDRZPTAB)             * 06050021
*                                                                     * 06100021
**** END OF SPECIFICATIONS ******************************************** 06150021
         EJECT                                                          06200021
*********************************************************************** 06250021
*                                                                     * 06300021
*                 *******************************                     * 06350021
*                * MAIN ENTRY POINT --HEWLFIDR-- *                    * 06400021
*                 *******************************                     * 06450021
*                                                                     * 06500021
*        CONTROL IS RECEIVED AT THIS POINT FROM MODULE HEWLFINP       * 06550021
*        FOR THE PURPOSE OF ACCEPTING IDR DATA OBTAINED FROM INPUT    * 06600021
*        LOAD MODULES AND/OR INPUT OBJECT MODULES.                    * 06650021
*                                                                     * 06700021
*********************************************************************** 06750021
         SPACE                                                          06800021
HEWLFIDR CSECT                                                          06850021
*A000000                                                         S21016 06900021
*                                                                XM5507 06910005
*C229000-229500,319500-320000,358500-359000                      XM6300 06920005
*A311100,C339500-340000,A604600                                 OX01989 06930002
*C529000-529275                                                  XM4628 06940003
*  SEE FIX FOR XM4628                                           OX02833 06942003
*C529125,A604620-604700,D311100,C339500-340000,D604600           XM4950 06944003
*D214500-215500,A214100-214400,A219100                           XM4950 06944403
* SEE FIX FOR XM4950                                            OX03393 06946003
*C137100-137200,138100-138440,140600,154500-156400,             OX04245 06948002
* 159500-161400,197000-360766,487000-487400,518100-518400,      OX04245 06948402
* 532600-532680,588700-590700,604600-604608                     OX04245 06948802
*A360000,I360118                                        XA05783,YM08524 06949203
*I199100                                                XA05783,YM08532 06949603
*D360118,I280600-280960                                 XA05783,YA04546 06949703
*I358986,I359498                                        XA05450,YA05599 06949803
*A09960,A599900-599920,A358970-359020,A359495,A359602           OZ01412 06949937
*  SEE FIX FOR OZ01412                                          OZ01412 06966637
* C349500 AND C351500                                           OZ11107 06974637
         SPACE                                                          06983337
*********************************************************************** 07000021
*                                                                     * 07050021
*                  EXTERNAL ENTRY POINT DEFINITION                    * 07100021
*                                                                     * 07150021
*********************************************************************** 07200021
         SPACE                                                          07250021
         ENTRY HEWLCIDR                                                 07300021
********************CONTROL PASSED TO THIS EP FROM HEWLFSCN************ 07350021
         SPACE 3                                                        07400021
*********************************************************************** 07450021
*                                                                     * 07500021
*                  SYMBOLIC EQUATES                                   * 07550021
*                                                                     * 07600021
*********************************************************************** 07650021
         SPACE 2                                                        07700021
********************GENERAL REGISTER EQUATES*************************** 07750021
         SPACE                                                          07800021
NULLREG  EQU   0                       REGISTER USED WHEN NO BRANCHING  07850021
*                                      IS DESIRED                       07900021
GREG0    EQU   0                       GENERAL PURPOSE WORK REGISTER    07950021
PARMPTR  EQU   1                       POINTER TO PARAMETER LIST PASSED 08000021
*                                      BY CALLING PROGRAM               08050021
BUFPTR   EQU   1                       POINTER TO RECORD BEING          08100021
*                                      PROCESSED IN INPUT BUFFER        08150021
GREG1    EQU   1                       GENERAL PURPOSE WORK REGISTER    08200021
APTBASE  EQU   2                       BASE ADDRESS FOR THE ALL         08250021
*                                      PURPOSE TABLE DSECT              08300021
TABPTR   EQU   3                       POINTER TO START OF IDR DATA     08350021
*                                      TABLE                            08400021
TABNXT   EQU   4                       POINTER TO NEXT AVAILABLE BYTE   08450021
*                                      IN IDR DATA TABLE                08500021
TABEND   EQU   5                       MAXIMUM LENGTH OF IDR DATA TABLE 08550021
ITEMPTR  EQU   6                       POINTER TO IDR ITEM BEING        08600021
*                                      PROCESSED                        08650021
DATAPTR  EQU   7                       POINTER TO PORTION OF ITEM       08700021
*                                      BEING EXAMINED                   08750021
GREG7    EQU   7                       GENERAL PURPOSE WORK REGISTER    08760002
ENDBUF   EQU   8                       POINTER TO END OF INPUT RECORD   08800021
GREG8    EQU   8                       GENERAL PURPOSE WORK REGISTER    08850021
TEMPRTN  EQU   9                       RETURN REGISTER FOR INTERNAL     08900021
*                                      SUBROUTINE LINKAGES              08950021
CESDPTR  EQU   9                       POINTER TO THE START OF THE      09000021
*                                      COMPOSITE ESD TABLE              09050021
GREG9    EQU   9                       GENERAL PURPOSE WORK REGISTER    09100021
RNTPTR   EQU   10                      POINTER TO THE START OF THE      09150021
*                                      RENUMBERING TABLE                09200021
GREG10   EQU   10                      GENERAL PURPOSE WORK REGISTER    09250021
GREG11   EQU   11                      GENERAL PURPOSE WORK REGISTER    09300021
IDRBASE  EQU   12                      BASE ADDRESS FOR MODULE          09350021
SAPTR    EQU   13                      POINTER TO CALLING PROGRAM'S     09400021
*                                      SAVE AREA                        09450021
GREG13   EQU   13                      GENERAL PURPOSE WORK REGISTER    09500021
RETURN   EQU   14                      RETURN ADDRESS IN CALLING        09550021
*                                      PROGRAM                          09600021
GREG14   EQU   14                      GENERAL PURPOSE WORK REGISTER    09650021
ENTRYPT  EQU   15                      ENTRY POINT ADDRESS FOR SYSTEM   09700021
*                                      LINKAGES                         09750021
GREG15   EQU   15                      GENERAL PURPOSE WORK REGISTER    09800021
         SPACE 2                                                        09850021
*****************SYMBOLIC MASKS AND IMMEDIATE BYTES******************** 09900021
         SPACE                                                          09950021
EXCON    EQU   X'0100'                 INCREMENT CONSTANT       OZ01412 09960037
SPZAP    EQU   X'01'                   SUBTYPE VALUE FOR IMASPZAP IDR   10000021
LKED     EQU   X'02'                   SUBTYPE VALUE FOR LINK-EDIT IDR  10050021
TRANS    EQU   X'04'                   SUBTYPE VALUE FOR TRANSLATOR IDR 10100021
USER     EQU   X'08'                   SUBTYPE VALUE FOR USER-DATA IDR  10150021
INDTR    EQU   0                       TRANS.TABLE BEING PROCESSED      10160021
INDUD    EQU   4                       USER DATA TABLE BEING PROCESSED  10170021
INDZP    EQU   8                       IMASPZAP TABLE BEING PROCESSED   10180021
INDBR    EQU   12                      TRANS-TAB BEING PROCESSED XM5507 10182000
*                                      NOT USING POSTIDR RTN     XM5507 10184000
INDNT    EQU   16                      NO TABLE BEING PROCESSED  XM7705 10190000
BLANK    EQU   C' '                    FLAG VALUE FOR NO IDR DATA       10200021
*                                      ON AN OBJECT MODULE END CARD     10250021
SINGLE   EQU   C'1'                    FLAG VALUE FOR SINGLE IDR ENTRY  10300021
*                                      ON AN OBJECT MODULE END CARD     10350021
DOUBLE   EQU   C'2'                    FLAG VALUE FOR DOUBLE IDR ENTRY  10400021
*                                      ON AN OBJECT MODULE END CARD     10450021
ONETRNS  EQU   X'00'                   INDICATOR VALUE FOR A SINGLE     10500021
*                                      IDR TRANSLATOR DESCRIPTION       10550021
DBLSWS   EQU   X'01'                   INDICATOR VALUE FOR A DOUBLE     10600021
*                                      IDR TRANSLATOR DESCRIPTION       10650021
SWSOFF   EQU   X'00'                   IMMEDIATE BYTE TO RE-INITIALIZE  10700021
*                                      ALL IDR SWITCHES TO ZEROES       10750021
SWSINIT  EQU   X'13'                   IMMEDIATE BYTE TO RE-INITIALIZE  10800021
*                                      THE IDR SWITCHES IN THE APT      10850021
PARTOFF  EQU   X'EF'                   IMMEDIATE BYTE TO TURN OFF       10900021
*                                      PARTIAL ENTRY INDICATOR          10950021
LASTID   EQU   X'80'                   MASK VALUE TO DETERMINE LAST ID  11000021
*                                      IN A STRING OF ESDID'S ON AN IDR 11050021
*                                      TRANSLATOR ITEM                  11100021
LSTIDOFF EQU   X'7F'                   IMMEDIATE BYTE TO TURN OFF THE   11150021
*                                      HIGH ORDER BIT IN THE LAST       11200021
*                                      CESDID IN A STRING OF CESDID'S   11250021
LSTIDFND EQU   X'80'                   SWITCH VALUE INDICATING THE      11300021
*                                      LAST ID IN A STRING OF CESDID'S  11350021
*                                      HAS BEEN FOUND                   11400021
DELETE   EQU   X'10'                   SUB-CLASSIFICATION OF A CESD     11450021
*                                      TYPE MARKED FOR DELETION         11500021
AL1VLD   EQU   X'40'                   SWITCH VALUE INDICATING AT       11550021
*                                      LEAST ONE CESDID IN A STRING     11600021
*                                      IS VALID (NOT DELETE)            11650021
TRSWOFF  EQU   X'3F'                   IMMEDIATE BYTE TO TURN OFF       11700021
*                                      SWITCHES AL1VLD AND LSTIDFND     11750021
*                                      IN LCLSWS                        11800021
CNTDITM  EQU   X'20'                   SWITCH VALUE INDICATING A        11850021
*                                      CONTINUED ENTRY IS BEING         11900021
*                                      PROCESSED                        11950021
CNTDOFF  EQU   X'DF'                   IMMEDIATE BYTE TO TURN OFF       12000021
*                                      CONTINUED ENTRY INDICATOR        12050021
CNTDID   EQU   X'10'                   SWITCH VALUE INDICATING A        12100021
*                                      CONTINUED CESDID IS BEING        12150021
*                                      PROCESSED                        12200021
CNTIDOFF EQU   X'EF'                   IMMEDIATE BYTE TO TURN OFF       12250021
*                                      CONTINUED CESDID INDICATOR       12300021
ZCHNOFF  EQU   X'BF'                   IMMEDIATE BYTE TO TURN OFF THE   12350021
*                                      'CHAIN' BIT IN AN IMASPZAP IDR   12400021
SECTDEF  EQU   X'0F'                   MASK VALUE FOR SD TYPE IN CESD   12450021
PRIVATE  EQU   X'04'                   MASK VALUE FOR PC IN CESD TYPE   12500021
OTHTYPE  EQU   X'0B'                   MASK VALUE FOR ALL BITS IN CESD  12550021
*                                      TYPE OTHER THAN PC               12600021
LOGIDNT  EQU   X'20'                   SWITCH VALUE TO INDICATE TO THE  12650021
*                                      ERROR LOG ROUTINE TO LOG A CARD  12700021
*                                      IMAGE WHOSE ADDRESS IS IN REG.1  12750021
LOGSOFF  EQU   X'DF'                   MASK VALUE TO TURN OFF LOGIDNT   12800021
*                                      SWITCH                           12850021
HIDSW    EQU   4                       PARTIAL ID INDICATOR             13050021
STRSW    EQU   12                      PARTIAL ID-STRING INDICATOR      13100021
ITMSW    EQU   8                       PARTIAL TRANS.ITEM INDICATOR     13150021
         SPACE 2                                                        13200021
*****************SYMBOLIC DISPLACEMENTS AND LENGTHS******************** 13250021
         SPACE                                                          13300021
NODISP   EQU   0                       DISPLACEMENT OF ZERO             13350021
SUBTYPE  EQU   2                       SUBTYPE FIELD IN LOAD MOD IDR'S  13400021
OBJFLAG  EQU   32                      FLAG FIELD IN OBJECT END CARDS   13450021
HEADLEN  EQU   3                       LENGTH OF IDR RECORD-HEADER      13500021
NEXTID   EQU   2                       LENGTH OF CESDID FIELD IN IDR    13550021
*                                      DATA ITEMS                       13600021
SNGTRN   EQU   16                      LENGTH OF A SINGLE IDR           13650002
*                                      TRANSLATOR DESCRIPTION           13700002
SNGTRN1  EQU   12                      LENGTH OF A SINGLE IDR   OX04245 13710002
*                                      TRANSLATOR NAME, LEVEL   OX04245 13720002
DBLTRN   EQU   31                      LENGTH OF A DOUBLE IDR           13750021
*                                      TRANSLATOR DESCRIPTION           13800021
DBLTRN1  EQU   24                      LENGTH OF A DOUBLE IDR   OX04245 13810002
*                                      TRANSLATOR NAME, LEVEL   OX04245 13820002
IDHDR1   EQU   6                       LENGTH OF FLAG,PTR,DATE  OX04245 13830002
*                                      HEADER IN TRANS ID TABLE OX04245 13840002
IDHDR2   EQU   9                       LENGTH OF FLAG,PTR, TWO  OX04245 13842002
*                                      DATES IN TRANS ID TABLE  OX04245 13844002
COUNT    EQU   1                       DISPLACEMENT TO THE BYTE COUNT   13850021
*                                      FIELD IN LOAD MODULE IDR'S       13900021
ADJ      EQU   1                       ADJUSTMENT VALUE FOR COMPUTING   13950021
*                                      THE ENDING ADDR. OF A REC.       14000021
HALFID   EQU   8                       SHIFT VALUE FOR ONE BYTE         14050021
BYTE1    EQU   8                       ONE-BYTE SHIFT           OX04245 14060002
BYTE2    EQU   1                       ONE-BYTE DISPLACEMENT            14100021
RNTINDX  EQU   2                       SHIFT VALUE TO GET INDEX INTO    14150021
*                                      THE RENUMBERING TABLE            14200021
CESDINDX EQU   4                       SHIFT VALUE TO GET INDEX INTO    14250021
*                                      THE CESD                         14300021
IDLEN    EQU   2                       LENGTH OF A CESDID               14350021
HIDLEN   EQU   1                       LENGTH OF HALF A CESDID          14400021
TYPE     EQU   8                       DISPLACEMENT OF TYPE FIELD IN    14450021
*                                      A CESD ENTRY                     14500021
NOLEN    EQU   0                       NULL LENGTH                      14550021
CESDWDTH EQU   16                      WIDTH OF CESD TABLE              14600021
FSTID    EQU   1                       VALUE OF 1ST CESDID              14650021
NAMELEN  EQU   8                       LENGTH OF A CSECT NAME           14700021
UDCNT    EQU   5                       DISPLACEMENT TO BYTE COUNT FIELD 14750021
*                                      IN USER DATA IDR                 14800021
UDHEAD   EQU   6                       HEADER LENGTH IN USER DATA IDR   14850021
FULWD    EQU   4                       LENGTH OF A FULL WORD            14900021
HALFWD   EQU   2                       LENGTH OF A HALF WORD     XM4628 14910003
USTRLEN  EQU   4                       DISPLACEMENT TO ADDR. OF         14950021
*                                      IDENTIFY STRING LENGTH IN        15000021
*                                      PARAMETER LIST                   15050021
UDSTR    EQU   8                       DISPLACEMENT TO ADDRESS OF       15100021
*                                      IDENTIFY STRING IN PARAMETER     15150021
*                                      LIST                             15200021
UDLEN    EQU   40                      LENGTH OF IDENTIFY STRING        15250021
DATELEN  EQU   3                       LENGTH OF DATE FIELD             15300021
RNTYPE   EQU   3                       DISPLACEMENT TO THE ESD TYPE     15350021
*                                      FIELD IN AN RNT ENTRY            15400021
PKLEN1   EQU   2                       PACKED LENGTH OF V/M     OX04245 15450002
*                                      LEVEL IN TRANSLATOR ITEM OX04245 15500002
PKLEN2   EQU   3                       PACKED LENGTH OF DATE    OX04245 15510002
*                                      IN TRANSLATOR ITEM       OX04245 15520002
PKLEN    EQU   PKLEN1+PKLEN2           PACKED LENGTH OF V/M     OX04245 15530002
*                                      LEVEL, DATE IN TRANS IDR ITEM    15540002
UPLEN    EQU   9                       UNPACKED LENGTH OF V/M   OX04245 15550002
*                                      LEVEL,DATE IN OBJ.END    OX04245 15600002
*                                      RECD IDR FIELD           OX04245 15610002
PCKADJ   EQU   14                      OFFSET FOR PAKING ALGORITHM      15620002
*                                      EQUALS VVMM+UPLEN-PKLEN  OX04245 15640002
TRNMLEN  EQU   10                      LENGTH OF TRANSLATOR NAME IN     15650021
*                                      OBJ.END REC. IDR FIELD           15700021
TRNM1    EQU   33                      DISPLACEMENT TO THE TRANSLATOR   15750021
*                                      NAME ON AN OBJ.END WITH IDR      15800021
TRNM2    EQU   52                      DISPLACEMENT TO THE 2ND TRANS.   15850021
*                                      NAME ON AN OBJ.END WITH IDR      15900021
VM1      EQU   43                      DISPLACEMENT TO THE V/M  OX04245 15950002
*                                      LEVEL ON AN OBJ.END IDR  OX04245 16000002
VM2      EQU   62                      DISPLACEMENT TO THE 2ND  OX04245 16050002
*                                      V/M LVL ON AN OBJ.END WITH IDR   16100002
YD1      EQU   47                      DISPLACEMENT TO DATE     OX04245 16110002
*                                      ON OBJ END IDR           OX04245 16120002
YD2      EQU   66                      DISPLACEMENT TO 2ND DATE OX04245 16130002
*                                      ON OBJ END IDR           OX04245 16140002
UDMAXLEN EQU   46                      MAXIMUM LENGTH OF A USER DATA    16150021
*                                      ITEM ON A LOAD MODULE IDR        16200021
ZAPLEN   EQU   13                      LENGTH OF AN IMASPZAP DATA ENTRY 16250021
MSGLEN   EQU   79                      LENGTH OF MESSAGE LINE - 1       16300021
         SPACE 3                                                        16350021
*********************************************************************** 16400021
*                                                                     * 16450021
*                  END OF SYMBOLIC EQUATES                            * 16500021
*                                                                     * 16550021
*********************************************************************** 16600021
         EJECT                                                          16650021
*********************************************************************** 16700021
*********************************************************************** 16750021
**********                                                   ********** 16800021
**********           EXECUTEABLE CODE BEGINS HERE            ********** 16850021
**********                                                   ********** 16900021
*********************************************************************** 16950021
*********************************************************************** 17000021
         SPACE 2                                                        17050021
         SAVE  (14,12),T,*             SAVE CALLING PROGRAM'S REGISTERS 17100021
         BALR  IDRBASE,NULLREG         LOAD BASE ADDRESS                17150021
         USING START,IDRBASE           ESTABLISH ADDRESSABILITY FOR     17200021
*                                      MODULE                           17250021
         USING APTDSECT,APTBASE        ESTABLISH ADDRESSABILITY FOR     17300021
*                                      THE ALL PURPOSE TABLE            17350021
START    MVI   TABIND,INDNT            INITIALIZE TABLE TYPE INDICATOR  17552021
         L     BUFPTR,NODISP(PARMPTR)  LOAD ADDR. OF INPUT RECORD       17586702
         TM    IDRSWS,OBJIDR           IS INPUT AN OBJECT END CARD?     17600021
         BZ    TESTLMOD                NO, BRANCH                       17650021
         CLI   OBJFLAG(BUFPTR),BLANK   IF IT IS, DOES IT CONTAIN THE    17700021
*                                      IDR FIELD?  (BLANK IN COL.33     17750021
*                                      INDICATES NO IDR DATA PRESENT)   17800021
         BE    FINISH                  IF NOT, RETURN                   17850021
         CLI   OBJFLAG(BUFPTR),DOUBLE  IS IDR DATA A DOUBLE ENTRY?      17900021
         BNE   ONENTRY                 IF NOT, BRANCH                   17950021
         OI    IDRSWS,DBLOBJ           IF IT IS, TURN ON THE DOUBLE     18000021
*                                      ENTRY INDICATOR                  18050021
         B     IDRTRANS                GO TO PROCESS THE IDR DATA       18100021
ONENTRY  CLI   OBJFLAG(BUFPTR),SINGLE  IS IDR DATA A SINGLE ENTRY?      18150021
         BNE   FINISH                  IF NOT, THE FLAG FIELD IS        18170021
*                                      INVALID FOR IDR -- IGNORE        18190021
*                                      THE RECORD                       18210021
         B     IDRTRANS                IF IT IS, GO TO PROCESS IT       18250021
TESTLMOD TM    IDRSWS,LMDIDR           IS INPUT A LOAD MODULE IDR?      18300021
         BNO   ABORT                   IF NOT, IT IS AN ERROR           18350021
         TM    SUBTYPE(BUFPTR),LKED    IS IT A LINK-EDIT RECORD?        18400021
         BO    FINISH                  IF IT IS, RETURN                 18450021
         SR    ENDBUF,ENDBUF           ZERO REGISTER TO RECEIVE COUNT   18500021
         IC    ENDBUF,COUNT(BUFPTR)    GET BYTE COUNT FOR RECORD        18550021
         LA    ENDBUF,ADJ(ENDBUF,BUFPTR) GET ADDRESS OF END OF RECORD   18600021
         TM    SUBTYPE(BUFPTR),SPZAP   IS THIS AN IMASPZAP RECORD?      18650021
         BO    IDRSPZAP                IF IT IS, BRANCH                 18700021
         TM    SUBTYPE(BUFPTR),TRANS   IS IT A TRANSLATOR RECORD?       18750021
         BO    IDRTRANS                IF IT IS, BRANCH                 18800021
         TM    SUBTYPE(BUFPTR),USER    IS IT A USER-DATA RECORD?        18850021
         BO    IDRIDENT                IF IT IS, BRANCH                 18900021
         B     ABORT                   IF NONE OF THE ABOVE BRANCHES    18950021
*                                      HAVE BEEN TAKEN, THE SUBTYPE     19000021
*                                      FIELD OF THE RECORD CONTAINS     19050021
*                                      AN INVALID CODE                  19100021
         EJECT                                                          19150021
*********************************************************************** 19200021
*********************************************************************** 19250021
****                                                               **** 19300021
****     SUB-PROGRAM IDRTRANS PROCESSES INPUT LOAD MODULE IDR'S    **** 19350021
****     WITH TRANSLATOR DATA AND OBJECT MODULE END RECORDS        **** 19400021
****     WITH THE IDR TRANSLATOR IDENTIFICATION FIELD              **** 19450021
****                                                               **** 19500021
*********************************************************************** 19550021
*********************************************************************** 19600021
         SPACE 2                                                        19650021
IDRTRANS EQU   *                                                OX04245 19700002
         LA    TABNXT,IDRTRCUR         GET CURRENT TAB SIZE PTR OX04245 19760002
         ST    TABNXT,TABCURAD         SAVE THE POINTER         OX04245 19770002
         L     TABNXT,IDRTIEND         GET ADDRESS OF NEXT      OX04245 19800002
*                                      BYTE IN TABLE                    19850021
         L     TABEND,IDRTITAB         GET STARTING ADDRESS OF  OX04245 19900002
*                                      TRANSLATOR ID TABLE      OX04245 19910002
         LR    TABPTR,TABEND           INIT TABPTR FOR CLEANUP  YM08532 19920002
         AH    TABEND,IDRTILEN         GET ENDING ADDRESS OF    OX04245 19950002
*                                      TRANSLATOR ID TABLE      OX04245 19952002
         L     RNTPTR,RECNT            GET ADDRESS OF RNT       OX04245 19992002
         L     CESDPTR,CHESD           GET THE ADDRESS OF THE CESD      20200021
         LA    ITEMPTR,HEADLEN(BUFPTR) POINT TO FIRST DATA ITEM IN REC  20250002
         TM    IDRSWS,PARTENT          IS LAST ITEM IN TABLE A PARTIAL  20300021
*                                      ENTRY?                           20350021
         BO    CONTIN                  IF SO, BRANCH                    20400021
         C     TABNXT,IDRTITAB         FIRST ENTRY IN TABLE?    OX04245 20410002
         BNE   HDPTR                   NO, USE IDRTICUR         OX04245 20420002
         SR    GREG11,GREG11           ZERO OUT WORK REGISTER   OX04245 20430002
         STH   GREG11,LASTPTR          INITIALIZE LASTPTR       OX04245 20432002
         B     HDPTR1                  BRANCH TO ZERO TABNXTSV  OX04245 20440002
HDPTR    EQU   *                                                OX04245 20442002
         LR    GREG11,TABNXT           COPY NEXT AVAILABLE BYTE OX04245 20444002
         S     GREG11,IDRTITAB         MAKE A RELATIVE ADR      OX04245 20446002
*                                      DONT USE IDRTICUR        OX04245 20448002
HDPTR1   EQU   *                                                OX04245 20450402
         STH   GREG11,TABNXTSV         SAVE AS POINTER TO START OX04245 20452002
*                                      OF HEADER                OX04245 20452102
         LA    TABNXT,IDHDR2(TABNXT)   SET POINTER TO           OX04245 20452202
*                                      TEMPORARY WORK AREA      OX04245 20452302
         TM    IDRSWS,OBJIDR           IS OBJECT MODULE INDICATOR ON?   20452402
         BO    TRANSOBJ                IF SO, GO TO POST        OX04245 20452802
         TM    IDRSWS,LMDIDR           IS LOAD MODULE INDICATOR ON?     20453202
         BNO   ABORT                   IF NOT, IT IS AN ERROR   OX04245 20453602
SCNITM   EQU   *                                                OX04245 20460002
         LR    DATAPTR,ITEMPTR         POINT TO START OF DATA FOR       20500002
*                                      CURRENT ITEM                     20550021
SCNITM1  EQU   *                                                OX04245 20560002
         LA    GREG11,NEXTID(DATAPTR)  GET ENDING ADDR. OF THIS ID      20600002
         TM    LCLSWS,CNTDID           IS THIS A CONTINUED ID?          20650021
         BO    SCNITM04                IF SO, BRANCH                    20700021
         CR    GREG11,ENDBUF           IS IT COMPLETE IN THIS RECORD?   20750021
         BH    PRTLID                  IF NOT, BRANCH                   20800021
SCNITM04 TM    NODISP(DATAPTR),LASTID  IS THIS THE LAST CESDID FOR THE  20850021
*                                      CURRENT ITEM?                    20900021
         BNO   SCNITM3                 IF NOT, BRANCH           OX04245 20950002
         OI    LCLSWS,LSTIDFND         TURN ON 'LAST ID FOUND' SWITCH   21000021
         NI    NODISP(DATAPTR),LSTIDOFF  TURN OFF HIGH ORDER BIT OF ID  21050021
SCNITM3  SR    GREG11,GREG11           ZERO WORK REG 11         OX04245 21100002
         IC    GREG11,NODISP(DATAPTR)  GET 1ST BYTE OF ID       OX04245 21150002
         SLL   GREG11,HALFID           SHIFT FOR SECOND BYTE    OX04245 21200002
         IC    GREG11,BYTE2(DATAPTR)   GET SECOND BYTE          OX04245 21250002
         SLL   GREG11,RNTINDX          MULT BY 4 TO GET INDEX   OX04245 21300002
*                                      TO RNT TABLE             OX04245 21350002
         LA    GREG11,NODISP(RNTPTR,GREG11)  GET ADDRESS OF     OX04245 21400002
*                                      RENUMBERED  ESDID        OX04245 21500002
         TM    RNTYPE(GREG11),DELETE   ENTRY MARKED DELETE?     OX04245 21510002
         BO    SCNITM6                 IF SO, BRANCH TO SKIP    OX04245 21520002
*                                      FURTHER PROCESSING       OX04245 21530002
         MVC   NODISP(IDLEN,DATAPTR),NODISP(GREG11) MOVE        OX04245 21550002
*                                      NEW ID TO INPUT          OX04245 21560002
*                                      BUFFER FOR PROCESSING    OX04245 21600002
         LH    GREG11,NODISP(GREG11)   GET RENUMBERED CESDID    OX04245 21610002
         SLL   GREG11,CESDINDX         MULTIPLY BY 16 TO        OX04245 21620002
*                                      GET CESD INDEX           OX04245 21630002
         AR    GREG11,CESDPTR          GET ADDRESS OF CESD LINE OX04245 21640002
         TM    TYPE(GREG11),DELETE     SECTION MARKED FOR DELETION?     21650002
         BO    SCNITM6                 YES, DONT MOVE TO ID TABLE       21700002
         BAL   GREG14,MOVEID0          MOVE ID TO TRANS ID TAB  OX04245 21750002
SCNITM6  EQU   *                                                OX04245 21800002
         TM    LCLSWS,AL1VLD+LSTIDFND  AT LEAST ONE VALID ID    OX04245 21900002
*                                      FOUND OR LAST ID         OX04245 21910102
*                                      FOUND?                   OX04245 21920002
         BNO   GETNXT                  IF NOT BOTH TRUE,        OX04245 21970002
*                                      BRANCH                   OX04245 21980002
         BCTR  TABNXT,NULLREG          BACK UP ONE ID           OX04245 22000002
         BCTR  TABNXT,NULLREG          TO GET TO PREVIOUS       OX04245 22050002
         OI    NODISP(TABNXT),LASTID   MARK LAST ID             OX04245 22100002
GETNXT   EQU   *                                                OX04245 22150002
         LA    ITEMPTR,NEXTID(ITEMPTR)  INCREMENT BUFFER POINTER        22200002
*                                      TO NEXT ID               OX04245 22250002
         CR    ITEMPTR,ENDBUF          AT END OF RECORD?        OX04245 22300002
         BNL   PRTLSTR                 IF SO, BRANCH TO PROCESS BROKEN  22350002
*                                      STRING                   OX04245 22400002
STCNTIN  EQU   *                                                OX04245 22402002
         NI    LCLSWS,CNTDOFF          TURN OFF CONT ID SWITCH  OX04245 22404002
         TM    LCLSWS,LSTIDFND         WAS THIS THE LAST CESDID OX04245 22410002
         BNO   SCNITM                  NO, LOOP TO CONTINUE SCN OX04245 22470002
PREDESC  EQU   *                                                OX04245 22470402
         L     GREG11,IDRTITAB         GET ADDRESS OF HEADER    OX04245 22480402
         AH    GREG11,TABNXTSV         FROM SAVED POINTER       OX04245 22482402
         CLI   INDCTR(ITEMPTR),ONETRNS IS THIS ITEM A SINGLE    OX04245 22490402
*                                      TRANSLATOR DESCRIPTION?  OX04245 22492402
         BNE   PREDESC2                NO,BRANCH                OX04245 22494402
         LA    DATAPTR,SNGTRN(ITEMPTR) GET ADDRESS OF END OF    OX04245 22496402
*                                      ITEM                     OX04245 22498402
         TM    LCLSWS,CNTDITM          CONTINUED ITEM          @ZA14611 22498837
         BO    CNTITEM1                YES, BRANCH             @ZA14611 22499737
         CR    DATAPTR,ENDBUF          COMPLETE IN THIS RECORD? OX04245 22500637
         BH    PRTLITEM                NO,BRANCH                OX04245 22501537
CNTITEM1 TM    LCLSWS,AL1VLD           AT LEAST ON VALID ID?   @ZA14611 22502437
         BZ    TRFIN                   NO, DONT MOVE TRANS DATA OX04245 22503402
         LA    ITEMPTR,ADJ(ITEMPTR)    INCREMENT TO POINT       OX04245 22503802
*                                       TO FIRST TRANS NAME     OX04245 22506002
         MVC   YYDDD(DATELEN,GREG11),SNGTRN1(ITEMPTR) MOVE FIRST        22508202
*                                      DATE TO HEADER           OX04245 22510402
         B     TRDESC0                 BRANCH TO PROCESS        OX04245 22512602
PREDESC2 EQU   *                                                OX04245 22514802
         LA    DATAPTR,DBLTRN(ITEMPTR) GET ADDRESS OF END OF ITEM       22517002
         TM    LCLSWS,CNTDITM          CONTINUED ITEM?         @ZA14611 22519237
         BO    CNTITEM2                YES, BRANCH             @ZA14611 22520237
         CR    DATAPTR,ENDBUF          COMPLETE IN THIS RECORD? OX04245 22521237
         BH    PRTLITEM                NO, BRANCH TO PROCESS    OX04245 22522237
*                                      CONTINUED RECORD         OX04245 22523237
CNTITEM2 TM    LCLSWS,AL1VLD           AT LEAST ONE VALID ID?  @ZA14611 22524237
         BZ    TRFIN                   NO, DONT MOVE TRANS DATA OX04245 22525702
         LA    GREG7,SNGTRN(ITEMPTR)  POINT TO SECOND ITEM      OX04245 22525802
         LA    ITEMPTR,ADJ(ITEMPTR)    INCREMENT TO POINT       OX04245 22528002
*                                      TO FIRST TRANS NAME      OX04245 22530202
         MVC   YYDDD(DATELEN,GREG11),SNGTRN1(ITEMPTR) MOVE FIRST        22532402
*                                      DATE TO HEADER           OX04245 22534602
         MVC   YYDDD2(DATELEN,GREG11),SNGTRN1(GREG7) MOVE 2ND   OX04245 22536802
*                                      TRANSLATOR DATE          OX04245 22539002
         MVC   SNGTRN1(SNGTRN1,ITEMPTR),NODISP(GREG7) SQUISH    OX04245 22541202
*                                      NAMES TOGETHER FOR TABLE SEARCH  22543402
         OI    IDRSWS,DBLOBJ           TURN ON DOUBLE SWITCH    OX04245 22545602
         B     DBLTRNS                 BRANCH TO PROCESS DATA           22547802
         EJECT                                                          22550002
         SPACE 3                                                        25800021
*********************************************************************   25850021
*******            THE FOLLOWING SECTION OF CODE              *******   25900021
*******          HANDLES TRANSLATOR IDR ITEMS THAT            *******   25950021
*******            ARE EXPECTED TO BE CONTINUED               *******   26000002
*******                 ON THE NEXT RECORD                    *******   26050002
*********************************************************************   26100021
         SPACE 1                                                        26150021
PRTLID   MVI   PTLSWCH,HIDSW           TURN ON THE HALF-ID INDICATOR    26200021
         MVC   ID1ST(HIDLEN),NODISP(DATAPTR)  MOVE IN THE HALF-ID       26250002
         B     PARTIAL                 GO TO POST THE PARTIAL ITEM      26400002
PRTLSTR  MVI   PTLSWCH,STRSW           TURN ON THE STRING INDICATOR     26450021
PARTIAL  EQU   *                                                OX04245 26500002
         ST    TABNXT,IDRTIEND         UPDATE ID TABLE POINTER  OX04245 26510002
         MVC   CPYLCLS(ADJ),LCLSWS     COPY LOCAL SWITCHES      OX04245 26550002
         OI    IDRSWS,PARTENT          TURN ON PARTIAL ENTRY FLAG       26560002
         B     TRFIN3                  LEAVE ROUTINE            OX04245 26600002
PRTRMOV  MVC   OBJTRN(NOLEN),NODISP(ITEMPTR)  MOVE PARTIAL TRANSLATOR   26650002
*                                      DESCRIPTION TO WORK AREA OX04245 26700002
PRTLITEM EQU   *                       HANDLE PARTIAL DESCRIPTION       26750002
         SR    DATAPTR,ITEMPTR         GET EXPECTED LENGTH OF ITEM      26800002
         SR    ENDBUF,ITEMPTR          GET LENGTH OF PARTIAL ITEM       26950002
         STC   ENDBUF,PTLTRLN          SAVE PARTIAL LENGTH      OX04245 26960002
         LR    GREG11,ENDBUF           SAVE FOR LATER COMPUTATION       27000002
         BCTR  ENDBUF,NULLREG          SUBTRACT 1 FOR MOVE LENGTH       27050002
         EX    ENDBUF,PRTRMOV          MOVE IN PARTIAL ITEM DATAOX04245 27100002
         SR    DATAPTR,GREG11          COMPUTE CONTINUATION LENGTH      27110002
         STC   DATAPTR,XPTRLEN         SAVE CONTINUATION LENGTH OX04245 27130002
         MVI   PTLSWCH,ITMSW           TURN ON THE ITEM INDICATOR       27150021
         B     PARTIAL                 BRANCH TO SET SWITCHES   OX04245 27200002
*********************************************************************** 27210002
**** CODE TO PROCESS ENTRIES CONTINUED FROM A PREVIOUS RECORD      **** 27250002
*********************************************************************** 27260002
CONTIN   EQU   *                                                        27300002
         MVC   LCLSWS(ADJ),CPYLCLS     SET LOCAL SWITCHES TO REFLECT    27900021
*                                      STATUS OF PROCESSING FOR         27950021
*                                      CONTINUED ITEM                   28000021
         NI    IDRSWS,PARTOFF          TURN OFF PARTIAL ITEM FLAG       28050002
         TM    LCLSWS,AL1VLD           AT LEAST ONE VALID ID?   XA05783 28060003
         BO     CONTOK                 YES, BRANCH TO CONTINUE  XA05783 28080003
         L     GREG11,IDRTIEND         PREPARE TO RESET PTR     XA05783 28090003
         SH    GREG11,HDLEN2           BACK UP NINE BYTES       XA05783 28092003
         ST    GREG11,IDRTIEND         RESET IN APT             XA05783 28094003
CONTOK   EQU   *                                                XA05783 28096003
         TM    PTLSWCH,STRSW           IS IT A CONTINUED ID STRING?     28100002
         BO    STCNTIN                 YES, BRANCH TO CONTINUE  OX04245 28150002
*                                      PROCESSING THE STRING OF OX04245 28200002
*                                      CESDID'S                 OX04245 28250002
CONTIN1  EQU   *                                                OX04245 28910002
         TM    PTLSWCH,HIDSW           IS IT A CONTINUED ID?    OX04245 28920002
         BNO   DSCNTIN                 NO, DO CONTINUED TRANSLATOR      28930002
*                                      DATA PROCESSING          OX04245 28940002
         IC    GREG11,HEADLEN(BUFPTR)  GET 2ND HALF OF CESDID FROM      29100021
*                                      CONTINUATION RECORD              29150021
         STC   GREG11,ID2ND            MOVE IT TO WORK AREA             29200021
         OI    LCLSWS,CNTDID           TURN ON CONTINUED ID SWITCH      29250021
         BCTR  ITEMPTR,NULLREG         CORRECT ITEMPTR POSITIONING      29260002
         LA    DATAPTR,ID1ST           POINT TO CONTINUED CESDID        29300002
         B     SCNITM1                 GO TO PROCESS IT                 29350002
DSCNTIN  EQU   *                                                        29400002
         SR    GREG7,GREG7             ZERO OUT WORK REGISTER   OX04245 29450002
         IC    GREG7,XPTRLEN           GET EXPECTED CONTINUATIONOX04245 29500002
*                                      LENGTH                   OX04245 29600002
         SR    GREG11,GREG11           ZERO OUT WORK REGISTER   OX04245 29650002
         IC    GREG11,PTLTRLN          GET PARTIAL LENGTH       OX04245 29700002
         BCTR  GREG7,NULLREG           SUBTRACT ONE FOR MOVE    OX04245 30248802
         LA    GREG11,OBJTRN(GREG11)  GET WORK AREA ADDRESS     OX04245 30249202
         EX    GREG7,CTDMV             MOVE CONTINUATION TO     OX04245 30249602
*                                      TO WORK AREA             OX04245 30249702
         LA    BUFPTR,HEADLEN+1(BUFPTR,GREG7) ADJUST BUFFER POINTER     30249802
*                                      TO START OF NEXT RECORD  OX04245 30249902
         OI    LCLSWS,CNTDITM          TURN ON PARTIAL ITEN INDICATOR   30250021
         LA    ITEMPTR,OBJTRN          GET ADR TO ITEMPTR       OX04245 30300002
         B     PREDESC                 BRANCH TO HANDLE DESCRIPTION     30350002
CTDMV    MVC   NODISP(NOLEN,GREG11),HEADLEN(BUFPTR)  MOVE CONTINUATION  30500002
*                                      OF TRANSLATOR DESCRIPTION TO     30550021
*                                      WORK AREA                        30600021
         EJECT                                                          30650021
*********************************************************************   30700021
*******            THE FOLLOWING SECTION OF CODE              *******   30750021
*******             HANDLES THE IDR FIELD OF AN               *******   30800021
*******            OBJECT MODULE END RECORD, WHEN             *******   30850021
*******                      PRESENT                          *******   30900021
*********************************************************************   30950021
         SPACE 1                                                        31000021
TRANSOBJ EQU   *                                                        31050002
         SR    GREG8,GREG8             ZERO REGISTER 8                  31100002
         LA    DATAPTR,IDTEMP          POINT TO TEMP ID SPACE   OX04245 31150002
RNTLOOP  LA    RNTPTR,FULWD(RNTPTR)    UPDATE POINTER TO NEXT RNT ENTRY 31250021
         CH    GREG8,NODISP(RNTPTR)    IS THIS ENTRY ZEROES ( END OF    31300021
*                                      THE RNT)?                        31350021
         BE    ADDITEM                 IF SO, BRANCH                    31400021
         TM    RNTYPE(RNTPTR),SECTDEF  IS THIS AN SD?                   31450021
         BZ    ADDID                   IF SO, BRANCH TO ADD IT          31500021
         TM    RNTYPE(RNTPTR),PRIVATE  COULD THIS BE A PC?              31550021
         BNO   RNTLOOP                 IF NOT, GO TO TRY NEXT ENTRY     31600021
         TM    RNTYPE(RNTPTR),OTHTYPE  IS THIS ENTRY A PC?              31650021
         BNZ   RNTLOOP                 IF NOT, GO TO TRY NEXT ENTRY     31700021
ADDID    TM    RNTYPE(RNTPTR),DELETE   IS IT MARKED FOR DELETION?       31750021
         BO    RNTLOOP                 IF SO, GO TO TRY NEXT ENTRY      31800002
         MVC   IDTEMP(IDLEN),NODISP(RNTPTR)    MOVE ID TO TEMP SPACE    31850002
         BAL   GREG14,MOVEID0          ADD ID TO THE TANS ID TABLE      31860002
         B     RNTLOOP                 GO TO CONTINUE SEARCH LOOP       32450021
ADDITEM  EQU   *                                                OX04245 32460002
         LA    ITEMPTR,TRNM1(BUFPTR)  GET ADDRESS OF IDR FIELD  OX04245 32470002
         TM    LCLSWS,AL1VLD           WAS AT LEAST 1 VALID ID FOUND?   32500002
         BNO   FINISH                  IF NOT, RETURN                   32550021
         L     GREG11,IDRTITAB         GET ADDRESS OF HEADER    OX04245 32560002
         AH    GREG11,TABNXTSV         FROM SAVED POINTER       OX04245 32610002
         BCTR  TABNXT,NULLREG          BACK UP 1 ID             OX04245 32660002
         BCTR  TABNXT,NULLREG          TO POINT TO LAST         OX04245 32670002
         OI    NODISP(TABNXT),LASTID   TURN ON LASTID BIT       OX04245 32680002
         PACK  PCKADJ(PKLEN,ITEMPTR),VM1(UPLEN,BUFPTR)          OX04245 32700002
*                                      PACK V/M LVL DATE FIELDS OX04245 32750002
         MVC   VVMM(PKLEN1,ITEMPTR),PCKADJ(ITEMPTR)             OX04245 32800002
*                                      MOVE V/M LVL TO PACKED LOC       32802002
         MVC   YYDDD(PKLEN2,GREG11),PCKADJ+PKLEN1(ITEMPTR) MOVE OX04245 32810002
*                                      DATE TO HEADER           OX04245 32820002
         TM    IDRSWS,DBLOBJ           IS THIS A DOUBLE TRANSLATOR      32850021
*                                      DESCRIPTION?             OX04245 32900002
         BNO   TRDESC0                 IF NOT SO,BRANCH         OX04245 32950002
         MVC   TRNAME2(TRNMLEN,ITEMPTR),TRNM2(BUFPTR) MOVE 2ND TRANS    33200002
*                                      NAME TO PACKED LOCATION  OX04245 33250002
         PACK  VVMM2(PKLEN,ITEMPTR),VM2(UPLEN,BUFPTR) CONVERT   OX04245 33300002
*                                      2ND V/M LVL TO PACKED    OX04245 33350002
*                                      FORMAT AND MOVE          OX04245 33400002
         MVC   YYDDD2(PKLEN2,GREG11),VVMM2+PKLEN1(ITEMPTR) MOVE OX04245 33402002
*                                      2ND DATE TO HEADER       OX04245 33404002
         B     DBLTRNS                 BRANCH TO TRANSLATOR DESCRIPTION 33410002
*                                      PROCESSING                       33420002
*********************************************************************** 33422002
*****    ROUTINE TO ADD ONE ID TO TRANSLATOR ID TABLE            ****** 33430002
*********************************************************************** 33432002
MOVEID0  EQU   *                                                OX04245 33440002
         OI    LCLSWS,AL1VLD           TURN ON 1 VALID CESDID SWITCH    33442002
         LA    GREG11,NEXTID(TABNXT)   GET NEXT ID LOC          OX04245 33444002
         CR    GREG11,TABEND           WILL ADDING ID OVERFLOW TABLE?   33446002
         BNH   MOVEID1                 NO,NO NEED TO REALLOCATE OX04245 33448002
         ST    ENDBUF,SAVR8            SAVE ENDBUF REGISTER     OX04245 33449602
         S     RNTPTR,RECNT            MAKE RNT OFFSET RELATIVE OX04245 33451602
         S     TABNXT,IDRTITAB         SUBTRACT START ADDRESS   OX04245 33452202
*                                      FROM NEXT AVAIL LOC      OX04245 33453802
         STH   TABNXT,IDRTICUR         STORE CURRENT TABLE SIZE OX04245 33455402
         MVI   TABIND,INDBR            INDICATE RETURN BY REGISTER      33457002
         BAL   GREG11,CHKALLOC         GO TO REALLOCATE         OX04245 33458602
         L     ENDBUF,SAVR8            RESTORE END BUF REGISTER OX04245 33459002
         A     RNTPTR,RECNT            RESTORE PTR TO RNT       OX04245 33459402
MOVEID1  EQU   *                                                OX04245 33460202
         TM    LCLSWS,LSTIDFND         WAS IT THE LAST ID?      OX04245 33461802
         BZ    MOVEID2                  NO,BRANCH               OX04245 33463402
         OI    NODISP(DATAPTR),LASTID  TURN ON LAST ID INDIC    OX04245 33465002
MOVEID2  EQU   *                                                OX04245 33466602
         MVC   NODISP(IDLEN,TABNXT),NODISP(DATAPTR) MOVE ID TO END OF   33476602
*                                      TRANSLATOR ID TABLE      OX04245 33478602
         LA    TABNXT,NEXTID(TABNXT)   INCREMENT POINTER TO TAB OX04245 33480602
         BR    GREG14                  CONTINUE                 OX04245 33482602
         EJECT                                                          33483002
         SPACE 3                                                        33483302
*********************************************************************   33500021
*******            THE FOLLOWING SECTION OF CODE              *******   33550021
*******            SCANS THE IDR TRANSLATOR TABLE             *******   33600021
*******             FOR TRANSLATOR DESCRIPTIONS               *******   33650021
*******            IDENTICAL TO THAT ON THE INPUT             *******   33700021
*******             RECORD -- IF FOUND, NO NEW                *******   33750002
*******                 ENTRY IS MADE                         *******   33800002
*********************************************************************   33850021
         SPACE 1                                                        33900021
TRDESC0  EQU   *                       PREPARE FOR TRANS DATA   OX04245 33950002
*                                      TABLE PROCESSING         OX04245 34000002
         LA    DATAPTR,SNGTRN1(ITEMPTR) SET DATAPTR TO POINT    OX04245 34200002
*                                      TO END OF ITEM           OX04245 34250002
         MVI   INDCTR(GREG11),ONETRNS  INDICATE A SINGLE ENTRY  OX04245 34260002
         B     TRDESC                  BRANCH TO SCAN ROUTINE   OX04245 34300002
DBLTRNS  LA DATAPTR,DBLTRN1(ITEMPTR)   SET DATAPTR TO           OX04245 34310002
*                                      POINT TO END OF ITEM     OX04245 34320002
         MVI   INDCTR(GREG11),DBLSWS   INDICATE A DOUBLE ENTRY  OX04245 34330002
TRDESC   EQU   *                                                OX04245 34380002
         LA    TABNXT,NEXTID(TABNXT)   POINT TO NEXT AVAILABLE BYTE     34390002
         ST    TABNXT,IDRTIEND         SAVE ID TABLE POINTER    OX04245 34392002
         S     TABNXT,IDRTITAB         SUBTRACT START ADDRESS   OX04245 34394002
         STH   TABNXT,IDRTICUR         SAVE CURRENT SIZE        OX04245 34396002
         L     TABPTR,IDRTRTAB         GET ADR OF TRANSLATOR DATA       34400002
*                                      TABLE                    OX04245 34450002
         L     TABNXT,IDRTREND         GET ADR OF NEXT AVAILABLE BYTE   34500002
         LR    TABEND,TABPTR           SAVE POINTER TO COMPUTE  OX04245 34550002
         AH    TABEND,IDRTRLEN         ENDING ADDRESS OF TABLE  OX04245 34600002
         MVI   TABIND,INDTR            INDICATE TRANSLATOR DATA OX04245 34610002
*                                      TABLE PROCESSING         OX04245 34620002
SCANTRT0 EQU   *                       SEARCH FOR A MATCH IN    OX04245 34700002
*                                      TRANSLATOR DATA TABLE    OX04245 34710002
         CR    TABPTR,TABNXT           AT END OF TABLE?         OX04245 34750002
         BNL   NEWITEM                 YES, BRANCH TO ADD NEW ITEM      34800002
         TM    IDRSWS,DBLOBJ           IS THIS A DOUBLE ENTRY?  OX04245 34850002
         BO    SCANDBL                 YES, BRANCH TO TEST DOUBLE       34900002
*                                      LENGTH                   OX04245 34910002
         CLC   NODISP(SNGTRN1,ITEMPTR),NODISP(TABPTR) ARE THE  @ZA11107 34950037
*                                      TRANSLATORS EQUAL ?     @ZA11107 34990037
         BE    MATCH1                  YES, BRANCH TO ROUTINE FOR       35030037
*                                      IDENTICAL DESCRIPTIONS   OX04245 35070037
         B     SCANTRT1                ELSE BRANCH TO CONTINUE SCAN     35110037
SCANDBL  CLC   NODISP(DBLTRN1,ITEMPTR),NODISP(TABPTR) IS THE   @ZA11107 35150037
*                               DOUBLE LENGTH ITEM IDENTICAL?  @ZA11107 35190037
         BE    MATCH1                  YES, WE HAVE A MATCH - BRANCH    35250002
*                                      TO PROCESS IT            OX04245 35300002
SCANTRT1 LA    TABPTR,SNGTRN1(TABPTR)   INCREMENT TO NEXT ENTRY OX04245 35350002
         B     SCANTRT0                BRANCH TO CONTINUE SCAN  OX04245 35400002
*********************************************************************** 35410002
****     THE FOLLOWING SECTION OF CODE CHECKS FOR                 ****  35420002
****       AN IDENTICAL HEADER AND                                ****  35470002
****       ADJUSTS IDS AS NECESSARY                               ****  35480002
*********************************************************************** 35490002
NEWITEM  EQU   *                                                OX04245 35540002
         BAL   TEMPRTN,POSTIDR         ADD THE NEW ITEM TO TABLE        35550002
         ST    TABNXT,IDRTREND         UPDATE TRANS DATA TABLE PTR      35600002
         S     TABNXT,IDRTRTAB         COMPUTE CURRENT NO BYTES OX04245 35610002
         STH   TABNXT,IDRTRCUR         AND UPDATE IDRTRCUR      OX04245 35620002
*        COMPARE LAST ID/DATE ENTRY TO THE CURRENT ONE          OX04245 35650002
MATCH1   EQU   *                                                OXO4245 35660002
         L     TABNXT,IDRTITAB         GET TRANS ID TABLE PARAMETERS    35750002
         AH    TABNXT,TABNXTSV         GET NEXT AVAILABLE BYTE  OX04245 35800002
*                                      POINTER                  OX04245 35800402
         S     TABPTR,IDRTRTAB         MAKE TABPTR A RELATIVE   OX04245 35802002
*                                      POINTER                  OX04245 35804002
         STC   TABPTR,NAMEPTR+1(TABNXT)   SAVE ADR OF TRANS NAME        35806002
*                                      DATA IN THE WORK AREA    OX04245 35808002
         SRL   TABPTR,BYTE1            SHIFT NEXT CHARACTER             35808402
         STC   TABPTR,NAMEPTR(TABNXT) STORE 2ND HALF OF POINTER         35808802
         L     TABPTR,IDRTITAB         GET ADR OF TRANS ID TAB  OX04245 35809202
         L     GREG11,IDRTIEND         RETRIEVE END OF ID STRNG OX04245 35838002
         LR    GREG7,TABPTR            COPY PTR TO START OF TAB OX04245 35838402
         AH    GREG7,LASTPTR           GET ABS ADR OF LASTPTR   OX04245 35838802
         TM    IDRSWS,DBLOBJ           IS THIS A DOUBLE ENTRY?  OX04245 35840002
         BNO   SNGHDR                  NO,BRANCH                OX04245 35842002
         CR    TABNXT,TABPTR           TEST FOR FIRST ENTRY     OX04245 35844002
         BE    TRFIN0                  YES, DONT ATTEMPT SHIFT  OX04245 35846002
         CLC   NODISP(IDHDR2,GREG7),INDCTR(TABNXT) THIS HEADER  OX04245 35848402
*                                      SAME AS LAST PREVIOUS?   OX04245 35848502
         BNE   MATCH2                  NO,NO ADJUSTMENT NEEDED  OX04245 35858502
NOHDRSH  EQU   *                       SHIFT NINE SPACES        OX04245 35860002
         SH    GREG11,HDLEN2           ADJUST TO POINT TO       OX04245 35868602
*                                      NEW END OF TRANS ID TAB  OX04245 35870602
         ST    GREG11,IDRTIEND         SAVE POINTER TO END OF TABLE     35872602
         SR    GREG11,TABNXT           COMPUTE LENGTH OF MOVE   OX04245 35886602
         BCTR  GREG11,NULLREG          DECREMENT FOR MOVE       OX04245 35896602
         ST    TABNXT,TABNXTSA         SAVE POINTER             OZ01412 35897037
EXLOOP2  EQU   *                                                        35897437
         CH    GREG11,H100             LESS THAN 100HEX         OZ01412 35897837
         BL    EXMOVE2                 YES GO TO EXMOVE2        OZ01412 35898237
         MVC   NODISP(EXCON,TABNXT),IDHDR2(TABNXT)  MOVE 100HEX OZ01412 35898337
         LA    TABNXT,EXCON(0,TABNXT)  UPDATE POINTER           OZ01412 35898437
         SH    GREG11,H100             UPDATE MOVE COUNT        OZ01412 35898537
         BP    EXLOOP2                 IF PLUSS GO TO EXLOOP2   OZ01412 35899737
EXMOVE2  EQU   *                                                        35900137
         EX    GREG11,IDMOV            SHIFT THE CHARACTERS     OX04245 35901637
         L     TABNXT,TABNXTSA         RESTORE POINTER          OZ01412 35902037
         L     GREG11,IDRTIEND       CLEANUP AFTER MOVE YA05599,XA05450 35902837
         XC    0(IDHDR2,GREG11),0(GREG11)               YA05599,XA05450 35904037
         B     MATCH3                  BRANCH TO ENDING ROUTINE OX04245 35905237
IDMOV    MVC   NODISP(NOLEN,TABNXT),IDHDR2(TABNXT) DOUBLE LENGTH MOVE   35906437
SNGMOV   MVC   IDHDR1(NOLEN,TABNXT),IDHDR2(TABNXT) SINGLE LENGTH MOVE   35907637
SNGHDR   EQU   *                                                OX04245 35908837
         CR    TABNXT,TABPTR           FIRST TABLE ENTRY?       OX04245 35910002
         BE    FSTHDR                  YES, BRANCH TO SHIFT THREE       35912002
         CLC   NODISP(IDHDR1,GREG7),INDCTR(TABNXT) THIS ENTRY   OX04245 35916602
*                                      SAME AS LAST?            OX04245 35917002
         BE    NOHDRSH                 BRANCH TO SHIFT ROUTINE  OX04245 35918602
FSTHDR   EQU   *                                                OX04245 35928602
         SH    GREG11,HDLEN1           ADJUST TO POINT TO       OX04245 35947002
*                                      NEW END OF TABLE         OX04245 35947402
         ST    GREG11,IDRTIEND         SAVE POINTER TO END      OX04245 35947802
         SR    GREG11,TABNXT           COMPUTE LENGTH OF MOVE   OX04245 35949002
         BCTR  GREG11,NULLREG          DECREMENT FOR MOVE       OX04245 35949402
         ST    TABNXT,TABNXTSA         SAVE POINTER             OZ01412 35950237
EXLOOP   EQU   *                                                        35950637
         CH    GREG11,H100             COUNT LESS THAN 100X     OZ01412 35951037
         BL    EXMOVE                  YES GO TO EXMOVE         OZ01412 35951437
         MVC   IDHDR1(EXCON,TABNXT),IDHDR2(TABNXT) MOVE 100 HEX OZ01412 35951537
         LA    TABNXT,EXCON(0,TABNXT)  UPDATE POINTER           OZ01412 35951637
         SH    GREG11,H100             UPDATE MOVE COUNT        OZ01412 35951737
         BP    EXLOOP                  IF PLUSS GO TO EXLOOP    OZ01412 35955737
EXMOVE   EQU   *                                                        35957737
         EX    GREG11,SNGMOV           DO THE MOVE              OX04245 35959737
         L     TABNXT,TABNXTSA         RESTORE POINTER          OZ01412 35960437
         L     GREG11,IDRTIEND       CLEANUP AFTER MOVE YA05599,XA05450 35961837
         XC    0(IDHDR2,GREG11),0(GREG11)               YA05599,XA05450 35963837
MATCH2   EQU   *                                                OX04245 35967837
         LR    GREG7,TABNXT            COPY TABNXT              OX04245 35971837
         SR    GREG7,TABPTR            MAKE INTO RELATIVE PTR   OX04245 35975837
         STH   GREG7,LASTPTR           SAVE POINTER FOR NEXT    OX04245 35979802
*                                      TIME                     OX04245 35989802
         B     TRFIN0                                           OX04245 35989902
MATCH3   EQU   *                                                OX04245 35990202
         LR GREG7,TABNXT               COPY TABNXT              OX04245 35990602
         BCTR GREG7,NULLREG            BACK UP TO LAST          OX04245 35991002
         BCTR GREG7,NULLREG            ID AND ERASE LASTID      OX04245 35991402
         NI NODISP(GREG7),LSTIDOFF     FLAG                     OX04245 35991502
*********************************************************************** 35991802
*        FINAL CLEANUP ROUTINE                                          35998602
*********************************************************************** 35998702
TRFIN0   EQU   *                                                OX04245 35998802
         BCTR  ITEMPTR,NULLREG         BACK TO SING/DBLE FLAG   OX04245 35998902
TRFIN    EQU   *                       ENTRY IF NO VALID ID     OX04245 35999002
         L     TABNXT,IDRTIEND         GET CURR TRANS ID TAB ENDOX04245 35999402
         TM    IDRSWS,LMDIDR           WAS IT A LOAD MODULE?    OX04245 35999702
         BNO   TRFIN3                  NO, BRANCH TO EXIT ROUTINE       35999802
         TM    LCLSWS,CNTDITM          WAS THIS A CONTINUED ITEM?       35999902
         BO    ENDTEST                 YES,NO ADJUSTMENT NEEDED YM08524 36000003
         CLI   NODISP(ITEMPTR),ONETRNS SINGLE TRANSLATOR ITEM?  OX04245 36006002
         BNE   DBLINC                  NO,BRANCH                OX04245 36008002
         LA    BUFPTR,SNGTRN(ITEMPTR)  YES, INCREMENT BUFF PTR  OX04245 36008102
         B     ENDTEST                 BRANCH TO OVERFLOW TEST  OX04245 36011802
DBLINC   EQU   *                                                OX04245 36013802
         LA    BUFPTR,DBLTRN(ITEMPTR)  INCREMENT FOR DOUBLE ITEMOX04245 36014202
ENDTEST  EQU   *                                                OX04245 36014602
         CR    BUFPTR,ENDBUF           ANY MORE ITEMS IN THIS RECORD?   36015502
         BNL   TRFIN3                  NO, EXIT                 OX04245 36019202
         MVI   LCLSWS,SWSOFF           RESET LOCAL SWITCHES     OX04245 36021202
         LR    ITEMPTR,BUFPTR         POINT TO NEXT ITEM IN RECORD      36022902
         NI    IDRSWS,SWSINIT          RE-INITIALIZE IDR SWITCHES       36024902
         LR    TABEND,TABPTR           REINIT POINTER TO ID     OX04245 36025302
         AH    TABEND,IDRTILEN         TABLE END                OX04245 36025702
         L     CESDPTR,CHESD           RESTORE PTR TO CESD      OX04245 36026102
         L     RNTPTR,RECNT            RESTORE RNT TABLE PTR    OX04245 36026502
         B     HDPTR                   LOOP TO SCAN NEXT ITEM   OX04245 36026602
TRFIN3   EQU   *                       TABNXT MUST POINT AT TIEND       36036602
         S     TABNXT,IDRTITAB         SUBTRACT START ADR       OX04245 36049002
         STH   TABNXT,IDRTICUR         SAVE CURRENT SIZE        OX04245 36049402
         B     FINISH                  BRANCH TO EXIT           OX04245 36076602
         EJECT                                                          37950021
*********************************************************************** 38000021
*********************************************************************** 38050021
****                                                               **** 38100021
****     SUB-PROGRAM IDRIDENT PROCESSES INPUT LOAD MODULE IDR'S    **** 38150021
****     WITH USER DATA AND USER DATA SPECIFIED VIA THE IDENTIFY   **** 38200021
****                    CONTROL STATEMENT                          **** 38250021
****                                                               **** 38300021
*********************************************************************** 38350021
*********************************************************************** 38400021
         SPACE 2                                                        38450021
IDRIDENT L     TABPTR,IDRUDTAB         GET ADDRESS OF USER DATA TABLE   38500021
         LA    TABNXT,IDRUDCUR         GET CURRENT TAB SIZE PTR  YM2013 38510000
         ST    TABNXT,TABCURAD         SAVE THE POINTER          YM2013 38520000
         L     TABNXT,IDRUDEND         GET ADDRESS OF NEXT AVAILABLE    38550021
*                                      BYTE IN TABLE                    38600021
         LR    TABEND,TABPTR           GET STARTING ADDRESS OF TABLE    38650021
         AH    TABEND,IDRUDLEN         GET ENDING ADDRESS OF TABLE      38700021
         MVI   TABIND,INDUD            INDICATE USER TABLE PROCESSING   38710021
         TM    IDRSWS,LMDIDR           IS LOAD MODULE INDICATOR ON?     38750021
         BO    LMODUD                  IF SO, BRANCH                    38800021
         TM    IDRSWS,USEIDR           IS IDENTIFY CARD SWITCH ON?      38850021
         BNO   ABORT                   IF NOT, IT IS AN ERROR           38900021
         STM   GREG14,GREG15,SAVR14    SAVE WORK REG. CONTENTS          38950021
         ST    GREG10,SAVR10           SAVE WORK REG. CONTENTS          39000021
         L     GREG10,NODISP(PARMPTR)  GET ADDRESS OF CSECT NAME        39050021
         L     CESDPTR,CHESD           GET CESD ADDRESS - 16            39100021
         LA    GREG14,CESDWDTH         PLACE 16 IN INCREMENT REGISTER   39150021
         ST    GREG8,SAVR8             SAVE WORK REG. CONTENTS          39200021
         LA    GREG8,FSTID             PLACE CESDID OF 1 FOR 1ST ITEM   39250021
         LH    GREG15,ENCDC            GET NO. OF ITEMS IN CESD         39300021
         SLL   GREG15,CESDINDX         MULT. BY 16 FOR CESD SIZE        39350021
         AR    GREG15,CESDPTR          ADD ADDR.OF CESD TP POINT TO     39400021
*                                      LAST ENTRY IN THE CESD           39450021
         B     INCRMNT                 GO TO INCREMENT THE CESD POINTER 39500021
CESDSRCH CLC   NODISP(NAMELEN,GREG10),NODISP(CESDPTR)  COMPARE CSECT    39550021
*                                      NAME TO BE IDENTIFIED WITH THIS  39600021
*                                      ENTRY IN THE CESD                39650021
         BE    NAMEFND                 IF THEY MATCH, BRANCH            39700021
BADMTCH  LA    GREG8,FSTID(GREG8)      UPDATE TO NEXT CESDID            39750021
INCRMNT  BXLE  CESDPTR,GREG14,CESDSRCH UPDATE POINTER TO NEXT ENTRY IN  39800021
*                                      CESD, COMPARE TO END ADDR. OF    39850021
*                                      CESD, IF NOT AT END, BRANCH TO   39900021
*                                      CONTINUE IN SEARCH LOOP          39950021
         B     BADIDENT                NAME NOT FOUND IN CESD -- GO TO  40000021
*                                      LOG ERROR MESSAGE                40050021
NAMEFND  TM    TYPE(CESDPTR),SECTDEF   IS MATCHING CESD ENTRY AN SD?    40100021
         BNZ   BADMTCH                 IF NOT, BRANCH BACK INTO LOOP    40150021
         TM    TYPE(CESDPTR),DELETE    IS THIS SD MARKED FOR DELETION?  40200021
         BO    BADMTCH                 IF SO, BRANCH BACK INTO LOOP     40250021
         STH   GREG8,HTEMP             SAVE MATCHED CESDID              40300021
         SPACE 3                                                        40350021
*********************************************************************   40400021
*******            THE FOLLOWING SECTION OF CODE              *******   40450021
*******            SCANS THE IDR USER DATA TABLE              *******   40500021
*******            FOR ANY PREVIOUS ENTRY WHICH               *******   40550021
*******            SPECIFIES THE SAME CSECT AS                *******   40600021
*******            THE IDENTIFY CONTROL CARD BEING            *******   40650021
*******            PROCESSED -- IF FOUND, THE OLD             *******   40700021
*******            DATA IS REPLACED BY THE NEW DATA           *******   40750021
*********************************************************************   40800021
         SPACE 1                                                        40850021
UDTABSCH CR    TABPTR,TABNXT           TABLE POINTER AT END OF TABLE?   40900021
         BE    POSTUD                  IF SO, BRANCH                    40950021
         CLC   NODISP(IDLEN,TABPTR),HZERO  IS THIS A NULL ITEM?         41000021
         BNE   UDTBSR05                IF NOT, BRANCH                   41050021
         MVC   HTEMP2(IDLEN),NEXTID(TABPTR)  GET LENGTH OF NULL ITEM    41100021
         AH    TABPTR,HTEMP2           POINT AFTER NULL ITEM            41150021
         B     UDTABSCH                GO TO CONTINUE SCAN              41200021
UDTBSR05 SR    GREG8,GREG8             ZERO OUT WORK REGISTER           41250021
         IC    GREG8,UDCNT(TABPTR)     GET BYTE COUNT OF USER DATA IN   41300021
*                                      THIS ITEM                        41350021
         LA    GREG8,UDHEAD(GREG8)     GET TOTAL LENGTH OF ITEM         41400021
         CLC   NODISP(IDLEN,TABPTR),HTEMP  DOES CESDID OF THIS ITEM     41450021
*                                      MATCH ID IN TABLE?               41500021
         BE    UDMATCH                 IF SO, BRANCH                    41550021
         AR    TABPTR,GREG8            UPDATE TO POINT TO NEXT ITEM     41600021
         B     UDTABSCH                GO TO CONTINUE SEARCH LOOP       41650021
UDMATCH  ST    GREG8,FTEMP             SAVE ITEM LENGTH                 41700021
         MVC   NODISP(FULWD,TABPTR),FTEMP  NULL ITEM WITH 2 BYTES OF    41750021
*                                      ZEROES AND 2-BYTE COUNT          41800021
         MVC   NODISP(IDLEN,TABPTR),HZERO  NULL THE ITEM          M1602 41820021
POSTUD   MVC   UDID(IDLEN),HTEMP       SAVE CESDID OF THIS ITEM         41850021
         L     GREG8,USTRLEN(PARMPTR)  GET ADDR. OF DATA LENGTH         41900021
         LH    GREG8,NODISP(GREG8)     GET LENGTH OF IDENTIFY DATA      41950021
         STC   GREG8,UDBTCT            STORE DATA LENGTH                42000021
         LA    ITEMPTR,UDITEM          GET ADDR. OF ITEM TO BE POSTED   42050021
         LA    GREG8,UDHEAD(GREG8)     GET LENGTH OF ITEM               42100021
         LR    DATAPTR,ITEMPTR         GET BEGINNING ADDR. OF ITEM      42150021
         AR    DATAPTR,GREG8           GET ENDING ADDR. OF ITEM         42200021
         L     GREG8,UDSTR(PARMPTR)    GET ADDR. OF USER DATA           42250021
         MVC   UDATA(UDLEN),NODISP(GREG8)  MOVE USER DATA               42300021
         STM   GREG0,GREG1,SAVR0       SAVE WORK REG. CONTENTS          42350021
         TIME  ,                       GET TODAY'S DATE                 42400021
         ST    GREG1,FTEMP             SAVE DATE                        42450021
         MVC   UDATE(DATELEN),DATESAV  MOVE DATE TO ITEM                42500021
         LM    GREG0,GREG1,SAVR0       RESTORE WORK REG. CONTENTS       42550021
         BAL   TEMPRTN,POSTIDR         GO TO POST THIS ITEM             42600021
         LM    GREG14,GREG15,SAVR14    RESTORE WORK REG. CONTENTS       42650021
         L     GREG8,SAVR8             RESTORE WORK REG. CONTENTS       42700021
         L     GREG10,SAVR10           RESTORE WORK REG. CONTENTS       42750021
         ST    TABNXT,IDRUDEND         UPDATE POINTER TO NEXT           42800021
*                                      AVAILABLE BYTE IN TABLE          42850021
         MVI   MSGBUF,BLANK            PLACE BLANK IN MSG BUFFER        42900021
         MVC   MSGBUFF(MSGLEN),MSGBUF  BLANK OUT MESSAGE LINE           42950021
         L     GREG14,NODISP(PARMPTR)  GET ADDRESS OF CSECT NAME        43000021
         MVC   MSGNAME(NAMELEN),NODISP(GREG14)  MOVE CSECT NAME INTO    43050021
*                                      MESSAGE LINE                     43100021
         L     GREG14,UDSTR(PARMPTR)   GET ADDRESS OF USER DATA         43150021
         MVC   MSGDATA(UDLEN),NODISP(GREG14)  MOVE USER DATA INTO       43200021
*                                      MESSAGE LINE                     43250021
         LH    GREG0,GOODIDNT          GET MESSAGE CODE                 43300021
         ST    GREG1,SAVR1             SAVE REG. 1 CONTENTS             43350021
         LA    GREG1,MSGBUF            POINT TO MESSAGE BUFFER          43400021
         OI    IDRSWS,LOGIDNT          TURN IDENT OPTION SWITCH FOR LOG 43450021
         L     ENTRYPT,ERDIG           GET ADDRESS OF MESSAGE LOGGING   43500021
*                                      ROUTINE                          43550021
         BALR  RETURN,ENTRYPT          LINK TO LOGGING ROUTINE          43600021
         NI    IDRSWS,LOGSOFF          TURN OFF LOG SWITCH              43650021
         L     GREG1,SAVR1             RESTORE REG. 1                   43700021
         B     USERCUR                 RETURN TO CALLING ROUTINEOX04245 43750002
         EJECT                                                          43800021
*********************************************************************   43850021
*******            THE FOLLOWING SECTION OF CODE              *******   43900021
*******              HANDLES LOAD MODULE IDR'S                *******   43950021
*******             CONTAINING USER DATA ITEMS                *******   44000021
*********************************************************************   44050021
         SPACE 1                                                        44100021
LMODUD   LA    ITEMPTR,HEADLEN(BUFPTR) GET STARTING ADDR. OF 1ST ITEM   44150021
*                                      ON THE RECORD                    44200021
         TM    IDRSWS,PARTENT          IS THIS A CONTINUATION FROM THE  44250021
*                                      PREVIOUS RECORD?                 44300021
         BNO   RECSCAN                 IF NOT, BRANCH                   44350021
         MVC   PRTLEN(FULWD),NODISP(TABNXT)  GET THE LENGTH OF THE      44400021
*                                      PARTIAL ITEM                     44450021
         STM   GREG8,GREG9,SAVR8       SAVE WORK REG. CONTENTS          44500021
         L     GREG8,PRTLEN            GET PARTIAL ITEM LENGTH          44550021
         BCTR  GREG8,NULLREG           SUBTRACT 1 FOR MOVE LENGTH       44600021
         EX    GREG8,CNTDMOV           MOVE PARTIAL ITEM TO WORK AREA   44650021
         LA    GREG8,UDMAXLEN          GET MAXIMUM LENGTH OF A USER     44700021
*                                      DATA ITEM                        44750021
         L     GREG9,PRTLEN            GET LENGTH OF PARTIAL ITEM       44800021
         SR    GREG8,GREG9             GET LENGTH OF CONTINUED ITEM     44850021
         LA    ITEMPTR,UDITEM          POINT TO START OF ITEM           44900021
         AR    GREG9,ITEMPTR           GET ADDR. FOR CONTINUATION TO    44950021
*                                      START                            45000021
         BCTR  GREG8,NULLREG           SUBTRACT 1 FOR MOVE LENGTH       45050021
         EX    GREG8,MOVCTN            MOVE CONTINUATION OF ITEM TO     45100021
*                                      WORK AREA                        45150021
         OI    LCLSWS,CNTDITM          TURN ON CONTINUATION SWITCH      45200021
         NI    IDRSWS,PARTOFF          TURN OFF PARTIAL ENTRY SWITCH    45250021
         LM    GREG8,GREG9,SAVR8       RESTORE WORK REGISTERS           45300021
RECSCAN  LA    DATAPTR,UDHEAD(ITEMPTR) GET STARTING ADDR. OF DATA       45350021
         TM    LCLSWS,CNTDITM          IS THIS A CONTINUED ITEM?        45400021
         BO    RCSCN040                IF SO, BRANCH                    45450021
         CR    DATAPTR,ENDBUF          IS THIS A PARTIAL ENTRY?         45500021
         BH    PRTLUD                  IF SO, BRANCH                    45550021
RCSCN040 SR    GREG0,GREG0             ZERO WORK REGISTER               45600021
         IC    GREG0,UDCNT(ITEMPTR)    GET DATA BYTE COUNT              45650021
         AR    DATAPTR,GREG0           GET ENDING ADDR. OF ITEM         45700021
         TM    LCLSWS,CNTDITM          IS THIS A CONTINUED ITEM?        45750021
         BO    RCSCN080                IF SO, BRANCH                    45800021
         CR    DATAPTR,ENDBUF          IS THIS A PARTIAL ENTRY?         45850021
         BH    PRTLUD                  IF SO, BRANCH                    45900021
RCSCN080 MVC   HTEMP(IDLEN),NODISP(ITEMPTR)  SAVE INPUT CESDID          45950021
         LH    RNTPTR,HTEMP            GET INPUT CESDID                 46000021
         SLL   RNTPTR,RNTINDX          GET INDEX INTO THE RNT           46050021
         A     RNTPTR,RECNT            ADD STARTING ADDR. OF RNT        46100021
         TM    RNTYPE(RNTPTR),DELETE   IS THIS CSECT MARKED DELETE?     46150021
         BO    NXTITEM                 IF SO, SKIP THIS ITEM            46200021
         MVC   NODISP(IDLEN,ITEMPTR),NODISP(RNTPTR)  MOVE RENUMBERED    46250021
*                                      CESDID TO THE ITEM               46300021
         BAL   TEMPRTN,POSTIDR         GO TO POST THE ITEM              46350021
NXTITEM  TM    LCLSWS,CNTDITM          WAS THIS A CONTINUED ITEM?       46400021
         BNO   NOTCNTD                 IF NOT, BRANCH                   46450021
         SR    DATAPTR,ITEMPTR         GET LENGTH OF ITEM               46500021
         S     DATAPTR,PRTLEN          GET LENGTH OF CONTINUATION       46550021
         STH   DATAPTR,HTEMP           SAVE LENGTH OF CONTINUATION      46600021
         LA    DATAPTR,HEADLEN(BUFPTR) GET STARTING ADDR. OF DATA ON    46650021
*                                      THE RECORD                       46700021
         AH    DATAPTR,HTEMP           GET ADDR. OF 1ST ITEM ON RECORD  46750021
*                                      AFTER CONTINUATION               46800021
         NI    LCLSWS,CNTDOFF          TURN OFF CONTINUATION SWITCH     46850021
NOTCNTD  LR    ITEMPTR,DATAPTR         UPDATE TO POINT TO NEXT ITEM     46900021
         CR    DATAPTR,ENDBUF          IS THIS THE LAST ITEM ON THE     46950021
*                                      RECORD?                          47000021
         BE    UDFIN                   IF SO, BRANCH                    47050021
         B     RECSCAN                 GO TO CONTINUE SCANNING RECORD   47100021
CNTDMOV  MVC   UDITEM(NOLEN),FULWD(TABNXT)  MOVE PARTIAL ITEM SAVED IN  47150021
*                                      TABLE TO WORK AREA               47200021
MOVCTN   MVC   NODISP(NOLEN,GREG9),HEADLEN(BUFPTR)  MOVE CONTINUATION   47250021
*                                      OF PARTIAL ITEM TO WORK AREA     47300021
PRTLMOV  MVC   UDITEM(NOLEN),NODISP(ITEMPTR)  MOVE PARTIAL USER DATA    47350021
*                                      ITEM TO WORK AREA                47400021
         SPACE 3                                                        47450021
*********************************************************************   47500021
*******            THE FOLLOWING SECTION OF CODE              *******   47550021
*******             HANDLES USER DATA IDR ITEMS               *******   47600021
*******             THAT ARE INCOMPLETE ON THE                *******   47650021
*******           RECORD CURRENTLY BEING PROCESSED            *******   47700021
*********************************************************************   47750021
         SPACE 1                                                        47800021
PRTLUD   OI    IDRSWS,PARTENT          TURN ON PARTIAL ENTRY SWITCH     47850021
         LR    GREG11,ENDBUF           GET ENDING ADDR. OF PARTIAL ITEM 47900021
         SR    GREG11,ITEMPTR          GET LENGTH OF PARTIAL ITEM       47950021
         ST    GREG11,PRTLEN           SAVE LENGTH OF PARTIAL ITEM      48000021
         BCTR  GREG11,NULLREG          SUBTRACT 1 FROM LENGTH FOR       48050021
*                                      ZERO-ORIENTED MOVE LENGTH        48100021
         EX    GREG11,PRTLMOV          MOVE PARTIAL ITEM TO WORK AREA   48150021
         LA    ITEMPTR,SAVPTLUD        GET ADDRESS OF PARTIAL ITEM      48200021
         L     DATAPTR,PRTLEN          GET LENGTH OF PARTIAL ITEM       48250021
         LA    DATAPTR,FULWD(ITEMPTR,DATAPTR)  ADD LENGTH OF ITEM BYTE  48300021
*                                      COUNT AND STARTING ADDRESS OF    48350021
*                                      ITEM TO GET ENDING ADDRESS       48400021
         BAL   TEMPRTN,POSTIDR         POST PARTIAL ITEM                48450021
         L     TABNXT,PARTBEG          RESTORE ADDRESS OF NEXT BYTE IN  48500021
*                                      TABLE TO START OF PARTIAL ENTRY  48550021
UDFIN    ST    TABNXT,IDRUDEND         UPDATE POINTER TO NEXT           48600021
*                                      AVAILABLE BYTE IN TABLE          48650021
USERCUR  EQU   *                                                OX04245 48700002
         L     GREG8,IDRUDEND          GET NEXT USER TAB ADR    OX04245 48710002
         S     GREG8,IDRUDTAB          SUBTRACT START ADR       OX04245 48720002
         STH   GREG8,IDRUDCUR          STORE CURRENT NO BYTES   OX04245 48730002
         B     FINISH                  RETURN TO CALLING ROUTNE OX04245 48740002
BADIDENT EQU   *                       LOG ERR. FOR NO SUCH CSECT FOUND 48750021
         MVI   MSGBUF,BLANK            PLACE BLANK IN MSG BUFFER        48800021
         MVC   MSGBUFF(MSGLEN),MSGBUF  BLANK OUT MESSAGE LINE           48850021
         MVC   MSGNAME(NAMELEN),NODISP(GREG10)  MOVE CSECT NAME INTO    48900021
*                                      MESSAGE LINE                     48950021
         L     GREG10,UDSTR(PARMPTR)   GET ADDRESS OF USER DATA         49000021
         MVC   MSGDATA(UDLEN),NODISP(GREG10)  MOVE USER DATA INTO       49050021
*                                      MESSAGE LINE                     49100021
         LH    GREG0,BADIDNT           GET MESSAGE CODE                 49150021
         ST    GREG1,SAVR1             SAVE REG. 1 CONTENTS             49200021
         LA    GREG1,MSGBUF            POINT TO MESSAGE BUFFER          49250021
         OI    IDRSWS,LOGIDNT          TURN ON OPTION TO LOG A CARD     49300021
*                                      NOT IN THE SYSTEM BUFFER         49350021
         L     ENTRYPT,ERDIG           GET ADDRESS OF MESSAGE LOGGING   49400021
*                                      ROUTINE                          49450021
         BALR  RETURN,ENTRYPT          LINK TO LOGGING ROUTINE          49500021
         NI    IDRSWS,LOGSOFF          TURN OFF LOG OPTION SWITCH       49550021
         L     GREG1,SAVR1             RESTORE REG. 1                   49600021
         B     USERCUR                  RETURN                          49650002
         EJECT                                                          49700021
*********************************************************************** 49750021
*********************************************************************** 49800021
****                                                               **** 49850021
****     SUB-PROGRAM IDRSPZAP PROCESSES INPUT LOAD MODULE IDR'S    **** 49900021
****     WITH DATA ENTERED BY THE SERVICE AID PROGRAM IMASPZAP     **** 49950021
****                                                               **** 50000021
*********************************************************************** 50050021
*********************************************************************** 50100021
         SPACE 2                                                        50150021
IDRSPZAP L     TABPTR,IDRZPTAB         GET ADDRESS OF IMASPZAP DATA     50200021
*                                      TABLE                            50250021
         LA    TABNXT,IDRZPCUR         GET CURRENT TAB SIZE PTR  YM2013 50260000
         ST    TABNXT,TABCURAD         SAVE THE POINTER          YM2013 50270000
         L     TABNXT,IDRZPEND         GET ADDRESS OF NEXT AVAILABLE    50300021
*                                      BYTE IN TABLE                    50350021
         LR    TABEND,TABPTR           GET STARTING ADDRESS OF TABLE    50400021
         AH    TABEND,IDRZPLEN         GET ENDING ADDRESS OF TABLE      50450021
         MVI   TABIND,INDZP            INDICATE ZAP TABLE PROCESSING    50460021
         SR    GREG11,GREG11           ZERO WORK REGISTER               50500021
         NI    HEADLEN(BUFPTR),ZCHNOFF TURN OFF THE CHAIN BIT IN THE    50550021
*                                      IMASPZAP COUNT FIELD             50600021
         IC    GREG11,HEADLEN(BUFPTR)  GET COUNT OF IMASPZAP ENTRIES    50650021
         LTR   GREG11,GREG11           TEST THE ENTRY COUNT             50700021
         BZ    ZAPCUR                  IF THERE ARE NO ENTRIES ON THIS  50750002
*                                      RECORD, RETURN                   50800021
         L     RNTPTR,RECNT            GET ADDRESS OF THE RNT - 4       50850021
         LA    ITEMPTR,FULWD(BUFPTR)   GET ADDRESS OF 1ST ENTRY ON REC. 50900021
ZAPLOOP  LA    DATAPTR,ZAPLEN(ITEMPTR) GET ENDING ADDRESS OF THIS ENTRY 50950021
         MVC   HTEMP(IDLEN),NODISP(ITEMPTR)  SAVE THE CESDID OF THE     51000021
*                                      ENTRY                            51050021
         LH    GREG15,HTEMP            GET THE CESDID                   51100021
         SLL   GREG15,RNTINDX          MULTIFLY THE ID BY 4 TO GET AN   51150021
*                                      INDEX INTO THE RNT               51200021
         AR    GREG15,RNTPTR           ADD THE ADDRESS OF THE RNT-4     51250021
         TM    RNTYPE(GREG15),DELETE   IS THIS CSECT MARKED DELETE?     51300021
         BO    DELZAP                  IF SO, BRANCH                    51350021
         MVC   NODISP(IDLEN,ITEMPTR),NODISP(GREG15)  MOVE THE           51400021
*                                      RENUMBERED CESDID INTO THE ENTRY 51450021
         BAL   TEMPRTN,POSTIDR         GO TO POST THE ENTRY             51500021
DELZAP   LR    ITEMPTR,DATAPTR         POINT TO THE NEXT ENTRY          51550021
         BCT   GREG11,ZAPLOOP          GO TO CONTINUE PROCESSING        51600021
*                                      CONSECUTIVE ENTRIES UNTIL        51650021
*                                      THE COUNT IS EXHAUSTED           51700021
         ST    TABNXT,IDRZPEND         UPDATE POINTER TO NEXT           51750021
*                                      AVAILABLE BYTE IN TABLE          51800021
ZAPCUR   EQU   *                                                OX04245 51810002
         L     GREG8,IDRZPEND          GET NEXT ZAP TABLE ADR   OX04245 51820002
         S     GREG8,IDRZPTAB          SUBTRACT START ADDRESS   OX04245 51830002
         STH   GREG8,IDRZPCUR          STORE CURRENT # BYTES    OX04245 51840002
         B     FINISH                  RETURN TO CALLING ROUTINE        51850021
         EJECT                                                          51900021
*********************************************************************** 51950021
*********************************************************************** 52000021
****                                                               **** 52050021
****     SUB-PROGRAM POSTIDR ADDS INPUT IDR DATA TO ONE OF THE     **** 52100021
****     THREE IDR DATA TABLES:  1) IDRTRTAB -- TRANSLATOR DATA    **** 52150021
****                             2) IDRZPTAB -- IMASPZAP DATA      **** 52200021
****                             3) IDRUDTAB -- USER DATA          **** 52250021
****                                                               **** 52300021
*********************************************************************** 52350021
*********************************************************************** 52400021
         SPACE 2                                                        52450021
POSTIDR  ST    GREG8,SAVR8             SAVE WORK REG. CONTENTS          52470021
PSTRETRY TM    IDRSWS,PARTENT          IS THIS ITEM A PARTIAL ENTRY?    52490021
         BNO   NOTPART                 IF NOT, BRANCH                   52510021
         ST    TABNXT,PARTBEG          SAVE STARTING ADDR. OF PARTIAL   52530021
*                                      ENTRY IN TABLE                   52550021
NOTPART  LR    GREG8,DATAPTR           GET ENDING ADDR. OF ITEM         52570021
         SR    GREG8,ITEMPTR           GET LENGTH OF ITEM               52590021
         AR    GREG8,TABNXT            ADD NEXT TABLE ADDR.             52610021
         CR    GREG8,TABEND            COMPARE TO END OF TABLE          52630021
         BH    PREALLOC                IF HIGH, IT IS AN         YM2013 52650000
*                                      OVERFLOW CONDITION -- GO         52670000
*                                      TRY TO REALLOCATE THE TABLES     52690000
         SR    GREG8,TABNXT            GET ITEM LENGTH AGAIN            52710021
         ST    GREG8,FTEMP             SAVE LENGTH OF ENTRY             52730021
         BCTR  GREG8,NULLREG           SUBTRACT 1 FOR MOVE LENGTH       52750021
         EX    GREG8,MOVEIDR           MOVE THE PARTIAL ENTRY TO THE    52770021
*                                      NEXT POSITION IN THE TABLE       52790021
         L     GREG8,FTEMP             RESTORE CORRECT ENTRY LENGTH     52810021
         AR    TABNXT,GREG8            UPDATE POINTER TO NEXT AVAILABLE 52830021
*                                      BYTE IN TABLE                    52850021
         L     GREG8,SAVR8             RESTORE WORK REG. CONTENTS       52870021
         BR    TEMPRTN                 RETURN TO PROCESSOR              52890021
PREALLOC EQU   *                                                 XM4628 52900003
         STM   GREG9,GREG11,BRNCHSV    SAVE WORK REGISTERS       XM4628 52905003
         L     GREG10,TABCURAD         GET CURRENT TAB.SIZE PTR  XM4628 52907503
         LR    GREG9,GREG10            PUT IT IN 9               XM4628 52910003
         SH    GREG9,TABSTCON          GET TO TAB START FIELD    XM4950 52912503
         L     GREG9,NODISP(GREG9)     GET TAB START ADDRESS     XM4628 52915003
         LR    GREG11,TABNXT           GET PTR TO NEXT BYTE      XM4628 52917503
         SR    GREG11,GREG9            SUBTRACT START ADDRESS    XM4628 52920003
         STH   GREG11,NODISP(GREG10)   UPDATE CURRENT TAB.SIZE   XM4628 52922503
         LM    GREG9,GREG11,BRNCHSV    RESTORE WORK REGISTERS    XM4628 52925003
CHKALLOC EQU   *                                                 XM4628 52927003
         TM    APT4,REALOCTE           IS REALLOCATION POSSIBLE? XM4628 52927503
         BO    TABOVFLO                IF NOT, SIGNAL OVERFLOW          52930021
         STM   GREG0,GREG15,BRNCHSV    SAVE REGISTERS                   52950021
         L     GREG15,ERDIGA           GET ALLOCATION RTN.ADDR.         52970021
         BALR  GREG14,GREG15           REALLOCATE                       52990021
         LM    GREG0,GREG15,BRNCHSV    RESTORE REGISTERS                53010021
         SR    GREG8,GREG8             CLEAR REGISTER 8                 53030021
         IC    GREG8,TABIND            USE AS INDEX REGISTER            53050021
         B     NEWTAB(GREG8)           GO TO APPROPRIATE RTN.           53070021
NEWTAB   EQU   *                                                        53080003
         B     NEWTABTR                GET TRANS.TABLE PTR'S.           53090003
         B     NEWTABUD                GET USER TABLE PTR'S.            53110021
         B     NEWTABZP                GET ZAP TABLE PTR'S.             53130021
         B     NEWTABBR                GET TRANS.TABLE PTR'S.    XM5507 53140000
NEWTABTR EQU   *                                                        53142003
         L     TABPTR,IDRTRTAB         GET ADDR. OF TRANS.TABLE         53150003
         L     TABNXT,IDRTREND         GET ADDR. OF NEXT AVAILABLE      53170021
*                                      BYTE IN TABLE                    53190021
         LR    TABEND,TABPTR           GET STARTING ADR OF TABLE        53240002
         AH    TABEND,IDRTRLEN         GET ENDING ADDR OF TABLE         53242002
         B     PSTRETRY                RE-CHECK                         53250021
NEWTABBR L     TABPTR,IDRTITAB         GET ADDR. OF TRANS.TABLE OX04245 53260002
         L     TABNXT,IDRTIEND         GET ADDR. OF NEXT        OX04245 53262002
*                                      AVAILABLE BYTE IN TABLE  OX04245 53264002
         LR    TABEND,TABPTR           GET STARTING ADDR OF TAB OX04245 53266002
         AH    TABEND,IDRTILEN         GET END ADR OF TABLE     OX04245 53268002
         BR    GREG11                  RETURN TO RETRY           XM5507 53268400
NEWTABUD EQU   *                                                        53268803
         L     TABPTR,IDRUDTAB         GET ADDR. OF USER TABLE          53270003
         L     TABNXT,IDRUDEND         GET ADDR. OF NEXT AVAILABLE      53290021
*                                      BYTE IN TABLE                    53310021
         LR    TABEND,TABPTR           GET STARTING ADDR. OF TABLE      53330021
         AH    TABEND,IDRUDLEN         GET ENDING ADDR. OF TABLE        53350021
         B     PSTRETRY                RE-CHECK                         53370021
NEWTABZP EQU   *                                                        53380003
         L     TABPTR,IDRZPTAB         GET ADDR. OF ZAP TABLE           53390003
         L     TABNXT,IDRZPEND         GET ADDR. OF NEXT AVAILABLE      53410021
*                                      BYTE IN TABLE                    53430021
         LR    TABEND,TABPTR           GET STARTING ADDR. OF TABLE      53450021
         AH    TABEND,IDRZPLEN         GET ENDING ADDR. OF TABLE        53470021
         B     PSTRETRY                RE-CHECK                         53490021
MOVEIDR  MVC   NODISP(NOLEN,TABNXT),NODISP(ITEMPTR)  MOVE IDR ITEM TO   53550021
*                                      THE NEXT AVAILABLE POSITION IN   53600021
*                                      THE TABLE                        53650021
TABOVFLO EQU   *                       LOG OVERFLO MSG & TERMINATE      53700021
         LH    GREG0,OVFLMSG           GET OVERFLOW MESSAGE CODE        53750021
         L     ENTRYPT,ERDIG           GET ADDRESS OF ERROR LOGGING     53800021
*                                      ROUTINE                          53850021
         BR    ENTRYPT                 GO TO LOG ROUTINE                53900021
*                  THIS IS A TERMINAL ERROR -- THE LOG ROUTINE WILL     53950021
*                  PASS CONTROL TO HEWLFFNL TO PRINT THE MESSAGE        54000021
*                  AND TERMINATE LINKAGE EDITOR PROCESSING              54050021
         TITLE '***HEWLFIDR*** IDENTIFY CONTROL CARD PROCESSOR'         54100021
*********************************************************************** 54150021
*                                                                     * 54200021
*               ************************************                  * 54250021
*              * SECONDARY ENTRY POINT --HEWLCIDR-- *                 * 54300021
*               ************************************                  * 54350021
*                                                                     * 54400021
*        CONTROL IS RECEIVED AT THIS POINT FROM MODULE HEWLFSCN       * 54450021
*        FOR THE PURPOSE OF ACCEPTING IDR DATA SUPPLIED BY THE        * 54500021
*        USER AND PASSED TO THE LINKAGE EDITOR BY MEANS OF THE        * 54550021
*        IDENTIFY CONTROL STATEMENT.                                  * 54600021
*                                                                     * 54650021
*********************************************************************** 54700021
         SPACE 2                                                        54750021
HEWLCIDR SAVE  (14,12),T,*             SAVE CALLING PROGRAM'S REGISTERS 54800021
         L     IDRBASE,ADDISP(ENTRYPT) LOAD BASE ADDRESS FOR MODULE     54850021
         B     CSTART                  BRANCH AROUND ADRESS CONSTANT    54900021
STARTAD  DC    A(START)                ADDR OF 1ST INSTR FOR MOD BASE   54950021
ADDISP   EQU   STARTAD-HEWLCIDR        DISPLACEMENT BEYOND ENTRY POINT  55000021
*                                      TO OPTAIN BASE ADDRESS FOR THE   55050021
*                                      MODULE WHEN ENTERED HERE         55100021
CSTART   OI    IDRSWS,USEIDR           TURN ON IDENTIFY CONTROL CARD    55150021
*                                      INDICATOR                        55200021
         B     IDRIDENT                GO TO PROCESS THE DATA ON THE    55250021
*                                      IDENTIFY CARD                    55300021
*********************************************************************** 55310002
***      THE FOLLOWING SECTION OF CODE RESETS SWITCHES            ***** 55320002
***            AND RETURNS CONTROL TO                             ***** 55330002
***               THE CALLING PROGRAM                  OX04245    ***** 55340002
*********************************************************************** 55342002
FINISH   NI    IDRSWS,SWSINIT          RE-INITIALIZE IDR SWITCHES       55350021
         MVI   LCLSWS,SWSOFF           RE-INITIALIZE ALL LOCAL          55400021
*                                      SWITCHES TO ZEROES               55450021
NOUPDT   EQU   *                                                        55526621
         RETURN    (14,12),T,RC=0      RESTORE REGISTERS AND RETURN     55533321
ABORT    LH    GREG0,INTERR            GET MESSAGE CODE FOR ERROR       55550021
*                                      IN IDR INPUT                     55600021
         L     ENTRYPT,ERDIG           GET ADDRESS OF LOG ROUTINE       55650021
         BR    ENTRYPT                 GO TO LOG THE ERROR              55700021
*                                      -- THIS IS A TERMINAL            55750021
*                                         ERROR CONDITION               55800021
*                                      -- THE LOG ROUTINE               55850021
*                                         WILL NOT RETURN               55900021
         TITLE '***HEWLFIDR*** CSECT IDENTIFICATION RECORD PROCESSOR'   55950021
*********************************************************************** 56000021
*                                                                     * 56050021
*                    DEFINED STORAGE AND CONSTANTS                    * 56100021
*                                                                     * 56150021
*********************************************************************** 56200021
         SPACE 2                                                        56250021
SAVR0    DS    1F                      GENERAL PURPOSE REG SAVE AREA    56300021
SAVR1    DS    1F                      GENERAL PURPOSE REG SAVE AREA    56350021
SAVR8    DS    1F                      GENERAL PURPOSE REG SAVE AREA    56400021
SAVR9    DS    1F                      GENERAL PURPOSE REG SAVE AREA    56450021
SAVR10   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56500021
SAVR11   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56550021
SAVR13   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56600021
SAVR14   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56650021
SAVR15   DS    1F                      GENERAL PURPOSE REG SAVE AREA    56700021
FTEMP    DS    1F                      FULLWORD TEMPORARY SAVE AREA     56750021
DATESAV  EQU   FTEMP+1                 START OF PACKED DECIMAL DATE     56800021
*                                      RETURNED BY TIME MACRO           56850021
PARTBEG  DS    1F                      SAVE AREA FOR STARTING ADDR. OF  56900021
*                                      A PARTIAL ITEM IN AN IDR TABLE   56950021
TABCURAD DS    1F                      SAVE AREA FOR CURRENT     YM2013 56960000
*                                      TABLE SIZE POINTER        YM2013 56970000
SAVPTLUD DS    0F                      SAVE AREA FOR A PARTIAL USER     57000021
*                                      DATA ITEM                        57050021
PRTLEN   DS    1F                      LENGTH OF THE PARTIAL ITEM       57100021
UDITEM   EQU   *                       WORKING COPY OF A USER DATA ITEM 57150021
UDID     DS    XL2                     CESDID                           57200021
UDATE    DS    XL3                     TODAY'S DATE                     57250021
UDBTCT   DS    XL1                     BYTE COUNT OF USER DATA          57300021
UDATA    DS    XL40                    USER DATA                        57350021
HTEMP    DS    1H                      HALFWORD TEMPORARY FOR CESDID    57400021
HTEMP2   DS    1H                      HALFWORD TEMPORARY WORK AREA     57450021
IDTEMP   DS    0H                      WORK AREA FOR A CONTINUED CESDID 57500021
ID1ST    DS    XL1                     1ST HALF OF THE CESDID           57550021
ID2ND    DS    XL1                     2ND HALF OF THE CESDID           57600021
SAVPTLTR DS    0F                      SAVE AREA FOR A PARTIAL          57800021
*                                      TRANSLATOR ITEM                  57850021
PTLSWCH  DS    XL1                     INDICATOR FOR TYPE OF PARTIAL    57900021
*                                      ITEM (BINARY VALUE):             57950021
*                                        4 = HALF OF A CESDID FOLLOWS   58000021
*                                        8 = A PARTIAL TRANSLATOR       58050021
*                                            DESCRIPTION FOLLOWS        58100021
*                                       12 = NO DATA FOLLOWS (ITEM WAS  58150021
*                                            BROKEN AFTER A COMPLETE    58200021
*                                            CESDID)                    58250021
CPYLCLS  DS    XL1                     COPY OF LCLSWS REFLECTING        58300021
*                                      CURRENT STATUS OF PROCESSING     58350021
*                                      FOR THIS ITEM                    58400021
PTLTRLN  DS    XL1                     LENGTH OF PARTIAL DESCRIPTION    58450021
*                                      WHICH FOLLOWS (IF PTLSWCH=8)     58500021
XPTRLEN  DS    XL1                     EXPECTED LENGTH OF DESCRIPTION   58550021
*                                      (IF PTLSWCH=8)                   58600021
HIDSAV   EQU   XPTRLEN                 1ST HALF OF THE CESDID BEING     58650021
*                                      PROCESSED (IF PTLSWCH=4)         58700021
OBJTRN   DS    CL31                    IDR TRANSLATOR DATA FIELD ON AN  58750002
*                                      OBJECT MODULE END RECORD         58800021
LASTPTR  DC    H'0'                    POINTER TO START OF LAST         58870002
*                                      PREVIOUS ID TRANSLATOR TABLE     58920002
*                                      ENTRY                    OX04245 58970002
HDLEN1   DC    H'3'                    SHIFT LENGTH FOR SINGLE IDR      59020002
*                                      TRANSLATOR ITEM          OX04245 59070002
HDLEN2   DC    H'9'                    SHIFT LENGTH FOR IDR TRANSLATOR  59120002
*                                      ITEM WITH HEADER SAME AS LAST    59170002
MSGBUF   DS    CL80                    BUFFER FOR BUILDING DIAGNOSTIC   59550021
*                                      MESSAGES TO BE PASSED TO THE     59600021
*                                      LOGGING ROUTINE                  59650021
MSGBUFF  EQU   MSGBUF+1                FOR INITIALIZING THE BUFFER      59700021
MSGNAME  EQU   MSGBUF+10               FOR A CSECT NAME                 59750021
MSGDATA  EQU   MSGBUF+30               FOR USER DATA FROM AN IDENTIFY   59800021
*                                      CONTROL STATEMENT                59850021
TABIND   DS    XL1                     TABLE TYPE INDICATOR             59860021
HZERO    DS    0H                      HALFWORD OF F'S TO TEST    M1602 59900021
         DC    X'FFFF'                 FOR NULL ITEMS             M1602 59940021
TABNXTSA DS    1F                      TABNXT SAVE AREA         OZ01412 59990037
H100     DC    H'256'                  INCREMENT CONSTANT       OZ01412 59992037
         DS    0H                      HALF-WORD ALIGNMENT              60000021
GOODIDNT DC    X'1043'                 MESSAGE INDICATING IDENTIFY      60050021
*                                      HAS BEEN ADDED                   60100021
BADIDNT  DC    X'1244'                 MESSAGE INDICATING CSECT NAME    60150021
*                                      ON AN IDENTIFY CARD CANNOT BE    60200021
*                                      FOUND IN THE CESD                60250021
OVFLMSG  DC    X'0445'                 ERROR MESSAGE CODE FOR IDR       60300021
*                                      TABLE OVERFLOW -- TERMINAL ERROR 60350021
INTERR   DC    X'0446'                 ERROR MESSAGE CODE FOR INVALID   60400021
*                                      IDR INPUT -- TERMINAL ERROR      60450021
TABNXTSV DC    H'0'                    STORE OFFSET TO START    OX04245 60460002
*                                      OF HEADER IN TRANS ID    OX04245 60460402
*                                      TABLE HERE               OX04245 60460802
         DS    0H                      ALIGNMENT                 XM4950 60462003
TABSTCON DC    AL2(IDRTRCUR-IDRTRTAB)  ADCON FOR SUBTRACT        XM4950 60470003
         EJECT                                                          60500021
LCLSWS   DC    X'00'                   LOCAL SWITCHES ***************** 60550021
*     ***********************************************************     * 60600021
*     *                BIT DESCRIPTIONS                         *     * 60650021
*     ***********************************************************     * 60700021
*     *  SYMBOLIC  *       *        *    MEANING OF BIT WHEN    *     * 60750021
*     *  NAME  OF  *  BIT  *  MASK  *         TURNED ON         *     * 60800021
*     *    MASK    *       *        *        (VALUE = 1)        *     * 60850021
*     ***********************************************************     * 60900021
*     *            *       *        *  THE LAST ID IN A STRING  *     * 60950021
*     *  LSTIDFND  *   0   *  X'80' *   OF CESDID'S HAS BEEN    *     * 61000021
*     *            *       *        *          FOUND            *     * 61050021
*     ***********************************************************     * 61100021
*     *            *       *        *  AT LEAST ONE CESDID IN   *     * 61150021
*     *   AL1VLD   *   1   *  X'40' *  A STRING IS VALID (NOT   *     * 61200021
*     *            *       *        *      MARKED DELETE)       *     * 61250021
*     ***********************************************************     * 61300021
*     *            *       *        *    THE IDR ITEM BEING     *     * 61350021
*     *  CNTDITM   *   2   *  X'20' *  PROCESSED IS CONTINUED   *     * 61400021
*     *            *       *        *  FROM THE PREVIOUS IDR    *     * 61450021
*     ***********************************************************     * 61500021
*     *            *       *        *  A CESDID IN A STRING OF  *     * 61550021
*     *   CNTDID   *   3   *  X'10' *    CESDID'S, CONTINUED    *     * 61600021
*     *            *       *        *  FROM A PREVIOUS TRANS.   *     * 61650021
*     *            *       *        *  IDR IS BEING PROCESSED   *     * 61700021
*     ***********************************************************     * 61750021
*     *    N/A     *   4   *  X'08' *         RESERVED          *     * 61800021
*     ***********************************************************     * 61850021
*     *    N/A     *   5   *  X'04' *         RESERVED          *     * 61900021
*     ***********************************************************     * 61950021
*     *    N/A     *   6   *  X'02' *         RESERVED          *     * 62000021
*     ***********************************************************     * 62050021
*     *    N/A     *   7   *  X'01' *         RESERVED          *     * 62100021
*     ***********************************************************     * 62150021
************* NOTE--INITIAL VALUE OF ALL BITS IS ZERO ***************** 62200021
         EJECT                                                          62250021
*********************************************************************** 62300021
*                                                                     * 62350021
*                     MODULE MAINTENANCE AREA                         * 62400021
*             160 BYTES ALIGNED ON A DOUBLE WORD BOUNDARY             * 62450021
*                  (APPROXIMATELY 8% OF MODULE SIZE)                  * 62500021
*                                                                     * 62550021
*********************************************************************** 62600021
         SPACE                                                          62650021
         DS    0D                      DOUBLE WORD ALIGNMENT            62700021
         DC    CL32'HEWLFIDR MAINTENANCE AREA BEGINS'  AREA IDENTIFIER  62750021
         DC    160X'00'                MAINTAINENCE SPACE               62800021
         DC    CL21'MAINTENANCE AREA ENDS'  END OF AREA IDENTIFIER      62850021
         SPACE                                                          62900021
         HEWAPT                                                         62950021
         END                                                            63000021
*/*TRANSIDR:      CHART */                                              63050002
*/*HEADER                                                               63100002
*/*               SUBPROGRAM TO PROCESS TRANSLATOR IDRS                 63150002
*/*SEPTEMBER 73                                     PAGE #       */     63200002
*/*IDRTRANS:      E TRANSLATOR IDR DETECTED */                          63300002
*/*               P SET REGISTERS TO POINT TO TRANS ID TABLE */         63350002
*/*               M SET INDICATOR FOR TRANS TABLE PROCESSING */         63400002
*/*               P SET POINTER TO ID TABLE PAST HEADER SPACE */        63450002
*/*               P GET ADDRESS OF RNT */                               63500002
*/*               D (YES,TRANSOBJ,NO,) OBJECT MODULE? */                63550002
*/*               D (YES,,NO,ABORT) LOAD MODULE? */                     63600002
*/*               P GET ADDRESS OF CESD */                              63650002
*/*               P POINT TO FIRST DATA IN INPUT BUFFER */              63700002
*/*               D (YES,CONTIN,NO,) ITEM CONT FROM PREV RECORD? */     63750002
*/*               P SAVE OFFSET TO START OF HEADER IN ID TABLE */       63800002
*/*SCNITM:        P SET DATAPTR TO POINT TO START OF ITEM */            63850002
*/*SCNITM1:       D (YES,SCNITM04,NO,) ID CONT FROM PREV RECORD? */     63900002
*/*               D (YES,PRTLID,NO,) ID CONT TO NEXT RECORD? */         63950002
*/*SCNITM04:      D (YES,,NO,SCNITM3) LAST ID? */                       64000002
*/*               M SET 'LAST ID FOUND' SWITCH */                       64050002
*/*               M TURN OFF HIGH ORDER BIT OF ID */                    64100002
*/*SCNITM3:       P USE ID TO COMPUT INDEX INTO RNT */                  64150002
*/*               P GET CORRECT CESD LINE NUMBER */                     64200002
*/*               D (YES,SCNITM6,NO,) SECTION MARKED DELETE? */         64250002
*/*               S MOVEID0:MOVE ID TO TRANS ID TABLE */                64300002
*/*SCNITM6:       D (NO,GETNXT,YES,) 'LAST ID' SWITCH ON? */            64350002
*/*               D (NO,TRFIN0,YES,)  AT LEAST ONE VALID ID? */         64400002
*/*               P MARK LAST ID IN TABLE */                            64450002
*/*GETNXT:        P INCREMENT POINTER TO NEXT ID INPUT */               64500002
*/*               D (YES,PRTLSTR,NO,) AT END OF INPUT RECORD? */        64550002
*/*STCNTIN:       D (YES,,NO,SCNITM) 'LAST ID' SWITCH ON? */            64600002
*/*               M TURN OFF 'CONTINUED ID' SWITCH */                   64650002
*/*PREDESC:       P POINT TO START OF HEADER IN TRANS ID TABLE */       64700002
*/*               D (NO,PREDESC2,YES,) SINGLE TRANS DESCRIPTION? */     64750002
*/*               P INCREMENT DATAPTR TO END OF SINGLE ITEM */          64800002
*/*               D (NO,PRTLITEM,YES,) IS ITEM COMPLETE IN THIS RECORD? 64850002
*/* */                                                                  64900002
*/*               P (,TRDESC0) MOVE FIRST DATE TO HEADER SPACE */       64950002
*/*PREDESC2:      P INCREMENT DATAPTR TO END OF DOUBLE ITEM */          65000002
*/*               D (NO,PRTLITEM,YES,) IS ITEM COMPLETE IN THIS RECORD? 65050002
*/* */                                                                  65100002
*/*               P MOVE TWO DATES TO HEADER SPACE */                   65150002
*/*               P PACK TRANSLATOR NAMES TOGETHER */                   65200002
*/*               M (,DBLTRNS) TURN ON DOUBLE ITEM SWITCH IN APT */     65250002
*/*PRTLID:        M TURN ON HALF ID INDICATOR */                        65300002
*/*               P (,PARTIAL) SAVE THE HALF ID */                      65350002
*/*PRTLSTR:       M TURN ON CONT STRG INDICATOR */                      65400002
*/*PARTIAL:       M SET PARTIAL ENTRY FLAG IN APT */                    65450002
*/*               P COPY LOCAL SWITCHES */                              65500002
*/*               P (,TRFIN3) UPDATE END OF TABLE PTR TO CURRENT POS */ 65550002
*/*PRTLITEM:      P COMPUTE AND SAVE EXPECTED TOTAL ITEM LENGTH */      65600002
*/*               P SAVE LENGTH OF PARTIAL ITEM */                      65650002
*/*               P SAVE PARTIAL ITEM */                                65700002
*/*               M (,PARTIAL) TURN ON CONTINUED ITEM INDICATOR */      65750002
*/*CONTIN:        P COPY THE SAVED LOCAL SWITCHES */                    65800002
*/*               M TURN OFF PARTIAL ITEM FLAG IN APT */                65850002
*/*               P RETRIEVE CURRENT END OF TABLE POINTER */            65900002
*/*               D (YES,STCNTIN,NO,) STRING OF CONTINUED IDS */        65950002
*/*               D (YES,,NO,DSCNTIN) CONTINUED ID? */                  66000002
*/*               P MOVE 2ND HALF ID TO WORK AREA */                    66050002
*/*               M SET 'CONTINUED ID' SWITCH */                        66100002
*/*               P (,SCNITM1) POINT TO CONTINUED ID */                 66150002
*/*DSCNTIN:       P MOVE CONTINUATION TO WORK AREA AND POINT TO IT */   66200002
*/*               P ADJUST BUFPTR TO START OF NEXT RECORD */            66250002
*/*               M (,PREDESC) TURN ON 'PARTIAL ITEM' INDICATOR */      66300002
*/*TRANSOBJ:      P SAVE ADDRESS OF START OF HEADER */                  66350002
*/*RNTLOOP:       P INCREMENT PTR TO NEXT RNT ENTRY */                  66400002
*/*               D (YES,ADDITEM,NO,) AT END OF RNT? */                 66450002
*/*               D (YES,ADDID,NO,) IS THIS AN SD? */                   66500002
*/*               D (YES,,NO,RNTLOOP) IS THIS A PC? */                  66550002
*/*ADDID:         D (YES,RNTLOOP,NO,) MARKED DELETE? */                 66600002
*/*               S (,RNTLOOP) MOVEID0:MOVE ID TO TRANS ID TABLE */     66650002
*/*ADDITEM:       D (NO,FINISH,YES,) AT LEAST ONE VALID ID FOUND? */    66700002
*/*               P CONVERT V/M,LVL TO PACKED FORM AND SQUISH */        66750002
*/*               P PACK DATE AND MOVE TO HEADER */                     66800002
*/*               D (NO,TRDESC0,YES,) DOUBLE TRANSLATOR ITEM? */        66850002
*/*               P MOVE SECOND TRANSLATOR NAME AFTER FIRST */          66900002
*/*               P PACK 2ND V/M LVL AND MOVE */                        66950002
*/*               P (,DBLTRNS) PACK 2ND DATE AND MOVE TO HEADER */      67000002
*/*TRDESC0:       P SET DATAPTR TO POINT TO END OF ITEM */              67050002
*/*               P (,TRDESC) INDICATE SINGLE ENTRY IN HEADER */        67100002
*/*DBLTRNS:       P SET DATAPTR TO POINT TO END OF ITEM */              67150002
*/*               P INDICATE DOUBLE ENTRY IN HEADER */                  67200002
*/*TRDESC:        P SAVE POINTER TO END OF ID STRING */                 67250002
*/*               P SET REGISTERS TO POINT TO TRANS DATA TABLE */       67300002
*/*SCANTRT0:      D (YES,NEWITEM,NO,) AT END OF TABLE? */               67350002
*/*               D (YES,SCANDBL,NO,) DOUBLE ENTRY? */                  67400002
*/*               D (YES, MATCH1,NO,SCANTRT1) IS THIS A MATCH WITH      67450002
*/*CURRENT ITEM? */                                                     67500002
*/*SCANDBL:       D (YES,MATCH1,NO,) IS THIS A MATCH WITH CURRWNT       67550002
*/*(DOUBLE) ITEM? */                                                    67600002
*/*SCANTRT1:      P (,SCANTRT0) INCREMENT TO NEXT DATA TABLE ENTRY */   67650002
*/*NEWITEM:       L POSTIDR: ADD ITEM TO TABLE */                       67700002
*/*               P UPDATE TRANS DATA TABLE END POINTER */              67750002
*/*MATCH1:        P SET REGISTERS TO POINT TO TRANS ID TABLE */         67800002
*/*               P STORE POINTER TO TRANS DATA ENTRY IN HEADER */      67850002
*/*               D (YES,,NO,SNGHDR) IS THIS A DOUBLE ITEM? */          67900002
*/*               D (YES,,NO,TRFIN0) IS THIS HEADER SAME AS LAST        67950002
*/*PREVIOUS? */                                                         68000002
*/*NOHDRSH:       P COMPUTE LENGTH OF ID STRING */                      68050002
*/*               P (,MATCH2) SHIFT STRING NINE BYTES */                68100002
*/*SNGHDR:       D (YES,NOHDRSH,NO,) IS THIS ENTRY SAME AS LAST         68150002
*/*PREVIOUS? */                                                         68200002
*/*               P COMPUTE LENGTH OF ID STRING */                      68250002
*/*               P SHIFT STRING THREE BYTES */                         68300002
*/*MATCH2:        P SAVE NEW END OF TABLE LOCATION */                   68350002
*/*TRFIN0:        D (NO,TRFIN3,YES,) LOAD MODULE? */                    68400002
*/*               D (NO,,YES,ENDTEST) ITEM CONTINUED FROM LAST RECORD?  68450002
*/**/                                                                   68500002
*/*               D (NO,DBLINC,YES,) SINGLE TRANSLATOR ITEM? */         68550002
*/*               P (,ENDTEST) INCREMENT BUFFER POINTER TO NEXT ITEM */ 68600002
*/*DBLINC:        P INCREMENT BUFFER POINTER FOR DOUBLE ITEM */         68650002
*/*ENDTEST:       D (NO,TRFIN3,YES,) ANY MORE ITEMS IN THIS RECORD? */  68700002
*/*               P (,SCNITM) RESET LOCAL SWITCHES */                   68750002
*/*TRFIN3:        P UPDATE APT TABLE INFORMATION */                     68800002
*/*FINISH:        R RESET SWITCHES AND EXIT MODULE */                   68850002
*/*ABORT:         R FATAL ERROR - ABORT LINK EDIT */                    68900002
*/*MOVEID0:       E ROUTINE TO MOVE ID TO TABLE */                      68950002
*/*               M TURN ON 'ONE VALID ID' SWITCH */                    69000002
*/*               D (YES,MOVEID1,NO,) ROOM IN TABLE? */                 69050002
*/*               L CHKALLOC: BRANCH TO CALL REALLOCATE */              69100002
*/*MOVEID1:       D (NO,MOVEID2,YES,) LAST ID? */                       69150002
*/*               P TURN ON LAST ID INDICATOR */                        69200002
*/*MOVEID2:       P MOVE ID TO TRANSLATOR ID TABLE */                   69250002
*/*               P INCREMENT ID TABLE POINTER */                       69300002
*/*               R CONTINUE PROCESSING */                              69350002
*/*TRANSIDR:      END */                                                69400002
