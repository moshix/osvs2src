         TITLE    'HEWLFOUT  - INTERMEDIATE OUTPUT PROCESSOR'           00070021
*                                                                     * 00140021
*STATUS:CHANGE LEVEL                                                  * 00210021
*                                                                     * 00280021
*FUNCTION/OPERATION:                                                  * 00350021
*        1- OUTPUT THE COMPOSITE EXTERNAL SYMBOL DICTIONARY(EDITABLE) * 00420021
*        2- BUILDS HALF EXTERNAL SYMBOL DICTIONARY                    * 00490021
*        3- BUILDS AND OUTPUTS CONTROL RECORD AND SEGTAB (1ST TXT) WHEN 00560021
*              THE PROGRAM IS IN OVERLAY                              * 00630021
*        4- BUILDS AND OUTPUTS THE SCATTER/TRANSLATION RECORDS WHEN   * 00700021
*              THE PROGRAM IS IN SCATTER                              * 00770021
*        5- READS IN THE TEXT AND RLD NOTE LISTS                      * 00840021
*        6- DETERMINES THE CONTROL SECTIONS WITH THE HIGHEST ESD ID   * 00910021
*              PER SEGMENT                                            * 00980021
*        7) INITIALIZES FOR 2ND PASS - HEWLKSCD                       * 01050021
*           A - SET 2 DECBS TO COMPLETE STATUS                        * 01120021
*           B - COMPUTES END ADDRESSES FOR 3 RLD BUFFERS              * 01190021
*           C - SETS CONTROL INFORMATION (16 BYTES) TO ZERO  IN CONTROL 01260021
*               RECORD BUFFER                                         * 01330021
*           D - PASSES PARAMETERS IN 3 GENERAL PURPOSE REGISTERS      * 01400021
*           E - COMPUTES END OF HESD ADDRESS                          * 01470021
*           F - CONVERTS TXTIO TABLE CURRENT NO.BYTES TO NO. OF ENTRYS* 01540021
*           G - SETS TTR LIST TO ZERO                                   01610021
*                                                                       01680021
*ENTRY POINT  HEWLFOUT - CONTROL SECTION NAME                         * 01750021
*                                                                     * 01820021
*INPUT:  TABLES - LISTED BELOW                                        * 01890021
*                                                                     * 01960021
*OUTPUT: TABLES - LISTED BELOW                                        * 02030021
*                                                                     * 02100021
*EXTERNAL ROUTINES: HEWLFLOG - ERROR DIAGNOSTIC ROUTINE               * 02170021
*                                                                     * 02240021
*EXITS - NORMAL   HEWLFSCD - SECOND PASS PROCESSOR                    * 02310021
*                                                                     * 02380021
*        ERRORS   HEWLFFNL - FINAL PROCESSOR - WHEN THERE IS NO TEXT IN 02450021
*              THE OUTPUT LOAD MODULE THE SECOND PASS IS BY PASSED    * 02520021
*TABLES/WORK AREA:                                                    * 02590021
*                                                                     * 02660021
*        1- ALL PURPOSE TABLE                                         * 02730021
*        2- COMPOSITE EXTERNAL SYMBOL DICTIONARY                      * 02800021
*        3- RELOCATION CONSTANT TABLE                                 * 02870021
*        4- SEGMENT TABLE ONE                                         * 02940021
*        5- TEXT NOTE LIST 1 AND 2                                    * 03010021
*        6- RLD  NOTE LIST 1 AND 2                                    * 03080021
*        7- SCATTER AND TRANSLATION TABLES                            * 03150021
*        8- HALF EXTERNAL DICTIONARY                                  * 03220021
*                                                                     * 03290021
*ATTRIBUTES:                                                          * 03360021
*                                                                     * 03430021
*NOTES:                                                               * 03500021
*                                                                     * 03570021
*                                                                     * 03640021
HEWLFOUT CSECT                                                          03710021
*********************************************************************** 03780021
*086800-105000,114100-163100,198800-195500,200900-201600         S21026 03790021
*210000-211400,622300-947800                                     S21026 03800021
*231700-289800,301700-303800,307300,308100,378700-382900         S01904 03810021
*392000,393400,406000,420000-425600                              S01904 03820021
*A375900,D423500,C425600                                        OX00029 03822000
*C308700,A309200,D634200-635600,A635400-635500,D716100-717500,   XM5480 03824003
*A718000-718100,D720300-721700,A721800-722300                    XM5480 03826003
*C277200-277900                                                  YM4013 03828002
*A718000-718100,740200-786200,A930100                           0X04245 03828402
*        REFER TO FIX FOR XM5480                        OX03509,OY03049 03828802
* D221900-226100,I298000,C300300                                 XM6065 03829203
* A604100,I299600                                                XM9089 03829603
* C914200                                                       ZA01402 03829702
* C566500                                                      @ZA07600 03830037
* A747910,747920 PREVENT ABEND0C4 WITH INCORRECT XLATOR IDR    @ZA17975 03831037
*                                                                       03833037
         EJECT                                                          03836037
*********************************************************************** 03840021
*                                                                       03850021
*              INTERMEDIATE OUTPUT PROCESSOR                            03920021
*                                                                       03990021
*********************************************************************** 04060021
*              REGISTER ASSIGNMENT                                    * 04130021
*********************************************************************** 04200021
ERRCODE  EQU   0                        ERR CODE                        04270021
NOTL1MXE EQU   0                        MAXIMUM NO.ENTRIES IN NOTE LST1 04340021
WRITECT  EQU   0                                                        04410021
ENDTXTIO EQU   0      USED ON BUILD SCATR/TRANS LOOP                    04480021
REG0     EQU   0                                                        04550021
REG1     EQU   1                                                        04620021
TEMP4    EQU   1                                                        04690021
NOTL1CTE EQU   1                        CURRENT NO.ENTRIES IN NOTE LST1 04760021
TTRREG   EQU   1                                                        04830021
APT      EQU   2                                                        04900021
REG2     EQU    2                                                       04970021
ADTXTIOT EQU   3      USED ON BUILD SCATR/TRANS LOOP                    05040021
CESDCRCT EQU   3                                                        05110021
IOCTLADD EQU   3                        ADD OF IO CONTROL TABLE         05180021
TEMP5    EQU   3                        TEMPORARY REGISTER              05250021
REG3     EQU   3                                                        05320021
CESDADD  EQU   4                                                        05390021
TRANSADD EQU   4                        ADD OF TRANSLATION  TABLE       05460021
IOCTLCTB EQU   4                        CURRENT NO.BYTES IN IO CTL TBL  05530021
TXTIOADD EQU   4                        ADD OF TXT IO TABLE             05600021
REG4     EQU   4                                                        05670021
HESDCT   EQU   5                                                        05740021
NOTL2ADD EQU   5                        ADD OF NOTE LIST 2              05810021
TXTIOCT  EQU   5                        CT OF CURRENT NO BYTES IN TXTIO 05880021
REG5     EQU   5                                                        05950021
BUFFRSIZ EQU   6                        SIZE OF NOTE LIST 1             06020021
CESDID   EQU   6                                                        06090021
SEGCT    EQU   6                        SEGMENT NO.                     06160021
HIARAD   EQU   6    USED IN LOOP TO BUILD SCTR TABLE IF HIAR SPECIFIED  06230021
REG6     EQU   6                                                        06300021
HIIDTAB  EQU   7                        ADD OF HI ID TABLE              06370021
WRITEADD EQU   7                                                        06440021
REG7     EQU   7                                                        06510021
INDCBADD EQU   8                        ADDRESS OF INT. DCB             06580021
SCATTADD EQU   WRITEADD                                                 06650021
NOTL1ADD EQU   8                        ADD OF NOTE LIST 1              06720021
OTDCBADD EQU   8                        ADDRESS OF OUT. DCB             06790021
TEMPRTN  EQU   8                        TEMP RETURN REG            DISP 06860021
REG8     EQU   8                                                        06930021
DCBADD   EQU   9                                                        07000021
RETPARM  EQU   9                        NO ENTRIES IN NOTE LIST 2       07070021
REG9     EQU   9                                                        07140021
EVENREG  EQU   10                       EVEN REG OF AN EVEN ODD PAIR    07210021
HESDADD  EQU   10                                                       07280021
WORK1    EQU   10                       WORK REG                        07350021
REG10    EQU   10                                                       07420021
ODDREG   EQU   11                       ODD  REG OF AN EVEN ODD PAIR    07490021
RCTADD   EQU   11                                                       07560021
REG11    EQU   11                                                       07630021
BASE     EQU   12                                                       07700021
BYTSPERE EQU   13                       NO.OF BYTES PER ENTRY           07770021
SAVEAREA EQU   13                                                       07840021
TEMP1    EQU   13                                                       07910021
TEMPREG  EQU   X'D'                                                     07980021
REG13    EQU   13                                                       08050021
REG14    EQU   14                                                       08120021
RETURN   EQU   14                       RETURN REGISTER                 08190021
TEMP2    EQU   14                                                       08260021
REG15    EQU   15                                                       08330021
BRANCH   EQU   15                       BRANCH REGISTER                 08400021
FIFTEEN  EQU   15                                                       08470021
TEMP3    EQU   15                                                       08540021
         SPACE 1                                                 S21016 08610021
*****************REGISTERS USED BY SUBROUTINE IDROUT*************S21016 08680021
         SPACE 1                                                 S21016 08750021
TABADD   EQU   10                      POINTER TO BEGINNING OF   S21016 08820021
*                                      AN IDR DATA TABLE         S21016 08890021
TABEND   EQU   11                      POINTER TO END OF AN IDR  S21016 08960021
*                                      DATA TABLE                S21016 09030021
DATAPTR  EQU   4                       POINTER TO BEGINNING OF   S21016 09100021
*                                      DATA IN AN IDR DATA TABLE S21016 09170021
DATALEN  EQU   5                       LENGTH OF DATA IN AN IDR  S21016 09240021
*                                      DATA TABLE                S21016 09310021
RECLEN   EQU   3                       LENGTH OF DATA IN ONE     S21016 09380021
*                                      RECORD (USED AS DECREMENT S21016 09450021
*                                      FOR UPDATING DATALEN)     S21016 09520021
MVCPTR   EQU   3                       POINTER TO DESTINATION IN S21016 09590021
*                                      EXECUTED MOVE             S21016 09660021
DATASIZE EQU   4                       LENGTH OF DATA IN A       S21016 09730021
*                                      RECORD                    S21016 09800021
ZPCOUNT  EQU   5                       NUMBER OF ENTRIES IN      S21016 09870021
*                                      AN SPZAP DATA RECORD      S21016 09940021
TIME     EQU   0                       TIME OF DAY RETURNED BY   S21016 10010021
*                                      TIME MACRO                S21016 10080021
DATE     EQU   1                       DATE RETURNED BY TIME     S21016 10150021
*                                      MACRO                     S21016 10220021
ZAPCMPR  EQU   4                       COMPARISON VALUE USED TO  S21016 10290021
*                                      DETERMINE WHETHER AN      S21016 10360021
*                                      EXTRA SPZAP IDR SHOULD    S21016 10430021
*                                      BE CREATED                S21016 10500021
OBUFPTR  EQU   6                       CURRENT POSITION IN IDR  OX04245 10560002
*                                      BUFFER                   OX04245 10562002
*********************************************************************** 10570021
*              MASKS                                                  * 10640021
*********************************************************************** 10710021
ESDWTBIT EQU   X'01'                                                    10780021
HIAROP   EQU   X'04'                    HIAR MASK                       10850021
INC      EQU   4                                                        10920021
SDPCCM   EQU   X'02'                                                    10990021
SCATTBIT EQU   X'04'                    SCATTER MASK               DISP 11060021
OVRLYBIT EQU   X'20'                    OVERLAY MASK               DISP 11130021
CESDCNTL EQU   X'20'                                                    11200021
ESDWTOFF EQU   X'FE'                                                    11270021
         SPACE 1                                                 S21016 11340021
*******MASKS AND IMMEDIATE BYTES USED BY SUBROUTINE IDROUT*******S21016 11410021
         SPACE 1                                                 S21016 11480021
CHAIN    EQU   X'40'                   CHAIN BIT IN DATA COUNT   S21016 11550021
*                                      FIELD OF SPZAP TYPE IDR   S21016 11620021
ZAPMAX   EQU   X'53'                   VALUE OF COUNT FIELD IN   S21016 11690021
*                                      SPZAP TYPE IDR WHEN ALL   S21016 11760021
*                                      ENTRIES ARE USED AND      S21016 11830021
*                                      CHAIN BIT IS ON           S21016 11900021
NOZPDATA EQU   X'00'                   VALUE OF COUNT FIELD IN   S21016 11970021
*                                      SPZAP TYPE IDR WHEN NO    S21016 12040021
*                                      ENTRIES ARE USED AND      S21016 12110021
*                                      CHAIN BIT IS OFF          S21016 12180021
LASTIDR  EQU   X'80'                   FLAG IN IDR SUBTYPE FIELD S21016 12250021
*                                      TO INDICATE THE LAST IDR  S21016 12320021
*                                      FOR AN OUTPUT LOAD MODULE S21016 12390021
TRNSTYPE EQU   X'04'                   SUBTYPE INDICATOR FOR     S21016 12460021
*                                      IDR'S WITH TRANSLATOR     S21016 12530021
*                                      DATA                      S21016 12600021
USERTYPE EQU   X'08'                   SUBTYPE INDICATOR FOR     S21016 12670021
*                                      IDR'S WITH USER-DATA      S21016 12740021
TRUDMAX  EQU   X'FF'                   MAXIMUM BYTE COUNT FOR    S21016 12810021
*                                      TRANSLATOR AND USER-DATA  S21016 12880021
*                                      IDR'S                     S21016 12950021
ZEROFILL EQU   X'00'                   ZEROES FOR PADDING        S21016 13020021
ON       EQU   X'01'                   MASK FOR SWITCH           S21016 13090021
*                                      INDICATING A TEMPORARY    S21016 13160021
*                                      NEEDED FOR A MOVE         S21016 13230021
OFF      EQU   X'FE'                   IMMEDIATE BYTE TO TURN    S21016 13300021
*                                      OFF 'TEMPORARY NEEDED'    S21016 13370021
*                                      SWITCH                    S21016 13440021
*********************************************************************** 13510021
*              DISPLACEMENTS                                          * 13580021
*********************************************************************** 13650021
LASTESD  EQU   X'08'                   MASK FOR LAST ESD RCD IN MODULE  13720021
         SPACE 1                                                 S21016 13790021
**********SYMBOLIC DISPLACEMENTS AND LENGTHS USED BY*************S21016 13860021
*********************SUBROUTINE IDROUT***************************S21016 13930021
         SPACE 1                                                 S21016 14000021
HDRLEN   EQU   4                       LENGTH OF IDR SPZAP       S21016 14070021
*                                      HEADER                    S21016 14140021
ZAPLEN   EQU   247                     LENGTH OF SPZAP DATA IN   S21016 14210021
*                                      ONE RECORD                S21016 14280021
ZPLEN    EQU   246                     LENGTH OF SPZAP DATA - 1  S21016 14350021
*                                      (USED TO PAD WITH ZEROES) S21016 14420021
LOC      EQU   0                       NULL OFFSET               S21016 14490021
ZPRECLEN EQU   251                     LENGTH OF AN IDR SPZAP    S21016 14560021
*                                      RECORD                    S21016 14630021
UNIT     EQU   1                       OFFSET OF 1 BYTE          S21016 14700021
LEN2     EQU   2                       TWO-BYTE LENGTH           S21016 14770021
LEN3     EQU   3                       THREE-BYTE LENGTH         S21016 14840021
LEN4     EQU   4                       FOUR-BYTE LENGTH          S21016 14910021
LEN8     EQU   8                       EIGHT-BYTE LENGTH         S21016 14980021
CMPRSIZE EQU   14                      COMPARISON VALUE FOR MAX  S21016 15050021
*                                      NUMBER OF ENTRIES ALLOWED S21016 15120021
*                                      IN AN IDR SPZAP RECORD    S21016 15190021
*                                      BEFORE ADDING AN ADDI-    S21016 15260021
*                                      TIONAL SPARE RECORD       S21016 15330021
LKRECLEN EQU   18                      LENGTH OF IDR LKED RECORD S21016 15400021
LKLEN    EQU   15                      LENGTH OF IDR LKED DATA   S21016 15470021
*                                      EXCEPT FOR DATE OF LKED   S21016 15540021
DATELEN  EQU   3                       LENGTH OF PACKED DEC DATE S21016 15610021
*                                      RETURNED BY TIME MACRO    S21016 15680021
TRUDLEN  EQU   253                     GREATEST AMOUNT OF USER   S21016 15750021
*                                      OR TRANSLATOR DATA WHICH  S21016 15820021
*                                      CAN GO ONTO ONE RECORD    S21016 15890021
TURECLEN EQU   256                     MAXIMUM TRANSLATOR AND    S21016 15960021
*                                      USER-DATA RECORD SIZE     S21016 16030021
ADDLEN   EQU   3                       THREE-BYTE ADJUSTMENT FOR S21016 16100021
*                                      DETERMINING BYTE COUNT OF S21016 16170021
*                                      TRANSLATOR AND USER-DATA  S21016 16240021
*                                      RECORDS SHORTER THAN MAX  S21016 16310021
ONETRNS  EQU   0                       FLAG FOR SINGLE TRANS    OX04245 16360002
*                                      ITEM                     OX04245 16370002
HDLEN1   EQU   6                       LENGTH OF HEADER         OX04245 16372002
*                                      FOR SINGLE TRANS IDR     OX04245 16374002
HDLEN2   EQU   9                       LENGTH OF HEADER         OX04245 16376002
*                                      FOR DOUBLE TRANS IDR     OX04245 16378002
INDCTRLN EQU   1                       LENGTH OF FALG FIELD     OX04245 16378402
*                                      FOR TRANS IDR ITEM       OX04245 16378802
TRNMLEN  EQU   12                      LENGTH OF TRANS NAME/LVL OX04245 16379202
*                                      FOR TRANS IDR ITEM       OX04245 16379602
PKLEN2   EQU   3                       LENGTH OF DATE FOR       OX04245 16379702
*                                      TRANS IDR ITEM           OX04245 16379802
*********************************************************************** 16380021
*              SECOND PASS DISPLACEMENTS,REGISTERS AND MASKS          * 16450021
*********************************************************************** 16520021
NOEDIT2P EQU   X'02'                   NOT EDIT MASK FOR 2ND PASS       16590021
NOTEDIT  EQU   X'08'                   NOT EDITABLE MASK                16660021
         EJECT                                                          16690037
         EXTRN HEWLCUDB                                                 16730021
         EXTRN HEWLCMDB                                                 16800021
         EXTRN SEGLNTAB                                                 16870021
*              OUTPUT CESD AND  BUILD HESD                              16940021
         USING OUT00100+2,BASE                                          17010021
         USING APTDSECT,APT                                             17080021
OUT00100 BALR  BASE,0                                                   17150021
*********************************************************************** 17220021
*              BUILD HESD & OUTPUT CESD(IF PGM IS NOT- NOT EDITABLE   * 17290021
*              ALSO MARK LAST ESD RECORD IF THERE IS NO TEXT          * 17360021
*********************************************************************** 17430021
         BC    15,OVERNAME             BRANCH AROUND MODULE IDENT       17500037
         DC    C' 02/24/77 OZ17975'    DATE/APAR NUMBER                 17550037
MODID    DC    C' HEWLFOUT ',0H'0'     MOD ID                           17600037
OVERNAME TM    APT0,X'20'              IS MAP REQUESTED                 17650037
         BC    1,OUT00105              YES                              17710021
         TM    APT0,X'40'              NO--IS XREF REQUESTED            17780021
         BC    8,OUT00110              NO                               17850021
         TM    NEWSW,X'20'             YES--ARE RLDS IN CORE            17920021
         BC    1,OUT00110              NO--DON'T DO XREF NOW            17990021
OUT00105 L     REG15,MAPAD             YES--GO TO MAP/XREF              18060021
         OI    NEWSW,X'40'             SET ENTRY FROM INTERMEDIATE BIT  18130021
         BALR  REG14,REG15                                              18200021
         NI    NEWSW,X'BF'             TURN OFF INTERMEDIATE ENTRY BIT  18270021
OUT00110 L     CESDADD,CHESD      LOAD CESD ADDRESS                     18340021
         LA    CESDID,1                 SET FIRST ID TO 1               18410021
         L     HESDADD,HESD       HESD ADDRESS                          18480021
         OI    APT1,ESDWTBIT      SET FIRST ESD WRITE ON FOR NOTE       18550021
         LH    CESDCRCT,ENCDC     CURR NO CESD ENTRIES                  18620021
         OI    APT3,NOEDIT2P                                            18690021
OUT00200 LA    FIFTEEN,15               PUT 15  IN FIFTEEN              18760021
         XC    8(4,CESDADD),8(CESDADD) SET HI WORD OF CONTROL TO ZERO   18830021
         SR    CESDCRCT,FIFTEEN         REMAING NO. CESD ENTRIES TO WT  18900021
         BC    2,OUT00300              BRANCH IF REMAINDER GTR THAN 0   18970021
         AR    FIFTEEN,CESDCRCT         REMAINDER LESS 0 /RESTORE CT    19040021
         OC    ENTOC(2),ENTOC     IS THERE ANY TEXT IN MODULE           19110021
         BC    4,OUT00300              YES                              19180021
         OI    8(CESDADD),LASTESD      NO/SET LAST RCD IN MODULE IND    19250021
OUT00300 LR    HESDCT,FIFTEEN           COUNT OF PRESENT CESD WT COUNT  19320021
         SLL   FIFTEEN,4                16(Y); Y= NO CESD LINES TO WT.  19390021
         STH   FIFTEEN,14(CESDADD)      PUT BYTE CT IN CONTROL          19460021
         STH   CESDID,12(CESDADD)       PUT ESDID IN CONTROL            19530021
         OI    8(CESDADD),CESDCNTL      SET HI BYTE TO 20 (ESD ITEM)    19600021
         LA    WRITECT,8(FIFTEEN)       INC WT BYTE CT BY 8             19670021
         LA    WRITEADD,8(CESDADD)      INC WT BYTE ADD BY 8            19740021
         TM    PDSE8,NOTEDIT      IS MODULE NOT EDITABLE                19810021
         BO    OUT00350                IF YES, DO NOT TURN 2ND   S21016 19880021
*                                      PASS NE SWITCH            S21016 19950021
         NI    APT3,X'FD'         SET NOT EDITABLE OFF                  20020021
OUT00350 BAL   TEMPRTN,OUT00990        GO TO WRITE/CHECK/NOTE    S21016 20090021
*                                      SUBROUTINE                S21016 20160021
         LTR   TTRREG,TTRREG            TTR EXISTS ON FIRST WT/ESD&SCAT 20230021
         BC    8,OUT00400               BRANCH ON ALL OTHER WTS         20300021
         ST    TTRREG,CTTR        SAVE TTR OF CESD                      20370021
OUT00400 LA    HESDADD,8(HESDADD)       INCREMENT HESD ADDRESS PTR      20440021
         LA    CESDADD,16(CESDADD)      INCREMENT CESD ADDRESS PTR      20510021
         LM    TEMP1,TEMP2,8(CESDADD)   LOAD LAST 4 BYTES OF A CESD LIN 20580021
         STM   TEMP1,TEMP2,0(HESDADD)   STORE IT IN HESD                20650021
         BCT   HESDCT,OUT00400          BRANC IF LOOP NOT DONE          20720021
         LA    CESDID,15(CESDID)        INC ESDID BY 15                 20790021
         LTR   CESDCRCT,CESDCRCT        HAVE ALL CESD LINES BEEN WRITEN 20860021
         BC    2,OUT00200               NO /CONTINUE WRITE OUT          20930021
         BAL   TEMPRTN,IDROUT          AFTER LAST CESD LINE IS   S21016 21000021
*                                      WRITTEN, GO TO PROCESS    S21016 21070021
*                                      IDR'S                     S21016 21140021
         XC    8(8,HESDADD),8(HESDADD) SET LINE AFTER LAST = 0          21210021
*********************************************************************** 21280021
*              IF THERE IS NO TEXT IN MODULE BY PASS 2ND PASS/GO TO   * 21350021
*              FINAL PROCESSOR - ALSO PRINT MESSAGE - NO TEXT         * 21420021
*********************************************************************** 21490021
OUT00525 SR    TEMP1,TEMP1                                              21560021
         CH    TEMP1,ENTOC        ANY ENTRIES IN TXT ID TBL             21630021
         BC    8,OUT00970              NO / NO TXT / GO TO FINAL PROC   21700021
*********************************************************************** 21770021
*              TEST FOR OVERLAY - YES GO TO BUILD  SEGTAB CONTROL RCD * 21840021
*              AND SEGTAB RECORD  AND WRITE OUT BOTH                  * 21910021
*********************************************************************** 21980021
OUT00550 TM    PDSE7,OVRLYBIT     IS PROGRAM IN OVERLAY                 22050021
         BC    1,OUT01000               YES/ GO OUT PUT SEGTAB RCDS     22120021
*********************************************************************** 22680021
*              READ IN TEXT NOTE LIST AND RLD NOTE LIST                 22750021
*********************************************************************** 22820021
*              INITIALIZE REGS FOR TXT NOTE LIST READ IN                22890021
*********************************************************************** 22960021
OUT00560 LA    BYTSPERE,7              7 BYTES/ENTRY IN TXT NOTELIST    23030021
         LA    IOCTLADD,IOCT      ADDRESS OF TXT IO  CTL TBL            23100021
         XR    REG4,REG4              CLEAR REGISTER             S01904 23170021
         XR    REG9,REG9              CLEAR REGISTER             S01904 23240021
         IC    REG4,ENITC+1                                      S01904 23310021
         IC    REG9,ENITC                                        S01904 23380021
         L     NOTL1ADD,TNT1          TXT NOTELIST1 ADDR         S01904 23450021
         L     NOTL2ADD,TNLS2         TXT NOTELIST2 ADDR         S01904 23520021
         LH    NOTL1CTE,ENT1C         CURR NO ENTRIES IN TNL1    S01904 23590021
         LH    REG0,ENT1X1                                       S01904 23660021
         LH    REG7,ENT1X                                        S01904 23730021
         BAL   RETURN,OUT00600        GO TO TXT TLD READIN RTN   S01904 23800021
         MVC   ENT2C(2),ENTRYSV                                  S01904 23870021
         EJECT                                                          23920002
         TM    APT4,ORDERR            IS ORDERING FLAG ON?       S01904 23940021
         BZ    OUT560B                NO,BRANCH OUT              S01904 24010021
         SPACE 2                                                        24060002
****************                                                        24070002
*  REARRANGE THE TEXT I/O TABLE AND TEXT NOTELIST 2 TO                  24072002
*  MATCH THE ORDER IN WHICH CSECTS APPEAR IN THE ORDER TABLE            24074002
*  (THE ORDER IN WHICH ADDRESSES WERE ASSIGNED IN HEWLFADA)             24076002
****************                                                        24078002
         SPACE 1                                                        24078402
         STM   REG0,REG15,BRNCHSV     SAVE REGISTERS                    24080021
         LH    REG1,ORDRCUR           CURR NO OF BYTES IN ORDR TBL      24150021
         LTR   REG1,REG1              IS THERE AN ENTRY?         S01904 24220021
         BZ    OUT560A                NO,BRANCH OUT              S01904 24290021
********** THE FOLLOWING BLOCK OF INSTRUCTIONS ARE SETUP FOR            24340002
********** TWO NESTED BXLE INSTRUCTIONS THAT LOOP THROUGH THE ORDER     24350002
********** TABLE AND THE TEXTIO TABLE/TEXT NOTELIST 2                   24352002
**********                                                              24354002
         L     REG3,ORDRADR           GET ADDR OF ORDER TABLE    S01904 24360021
         AR    REG1,REG3              CALC THE ADDR OF LAST ENTRY       24430021
         LA    REG0,3                 IN THE ORDER TABLE         S01904 24500021
*                                     REG0=INCREMENT FOR BXLE    S01904 24550002
         SR    REG1,REG0              REG1 -> LAST ENTRY         S01904 24570002
*                                     (COMPARAND FOR BXLE)       S01904 24620002
         LH    REG5,ENTOC             CURR NO OF BYTES ON TXT IO TBL    24640021
         LTR   REG5,REG5              ANY ENTRIES?               S01904 24710021
         BZ    OUT560A                NO,BRANCH OUT              S01904 24780021
         L     REG13,TXTIO            ADDR OF TEXT IO TABLE      S01904 24850021
         AR    REG5,REG13             CALC THE ADDR OF THE LAST ENTRY   24920021
         LA    REG4,4                 IN THE TXT IO TABLE        S01904 24990021
*                                     REG4=INCREMENT FOR BXLE    S01904 25040002
         SR    REG5,REG4              REG5 -> LAST TXTIO ENTRY   S01904 25060002
*                                     (COMPARAND FOR BXLE)       S01904 25120002
         LR    REG7,REG13             REG7 -> TXTIO TAB START    S01904 25130002
********** END OF SETUP FOR NESTED BXLE'S                               25180002
         SPACE 1                                                        25190002
OUT561   TM    0(REG3),X'A0'          IS THE ORDR TBL ENTRY MATCHED?    25200021
         BNO   OUT564                 NO,CONTINUE SCAN OF TABLE         25270021
OUT562   CLC   1(2,REG3),0(REG13)     FIND MATCH OF ID IN TXT IO TBL    25340021
*                                     (COMPARE CESDID IN ORDER          25390002
*                                     TABLE ENTRY WITH CESDID IN        25400002
*                                     TEXTIO TABLE ENTRY)               25402002
         BE    OUT565                 IF MATCHED, BRANCH OUT     S01904 25410002
OUT563   BXLE  REG13,REG4,OUT562      SCAN THRU TEXTIO TABLE     S01904 25480002
         LR    REG13,REG7             RESTORE PTR TO TXT IO TBL         25550021
OUT564   BXLE  REG3,REG0,OUT561       CONTINUE SCAN OF ORDER TBL        25620021
         B     OUT560A                EXIT AFTER THE LAST ENTRY  S01904 25690002
*                                     IN THE ORDER TABLE HAS     S01904 25740002
*                                     BEEN PROCESSED             S01904 25750002
OUT565   CR    REG7,REG13             MATCHED ENTRY FIRST IN TXTIO?     25760021
         BE    OUT569A                YES,BRANCH OUT -NO REORDERING     25830021
*                                     (I.E. THE TXTIO TABLE ENTRY IS,   25880002
*                                     BY CHANCE, ALREADY IN THE         25890002
*                                     REQUIRED POSITION TO SATISFY      25892002
*                                     THE ORDER TABLE)                  25894002
         LR    REG11,REG13            POINT TO TXTIO TABLE ENTRY S01904 25900002
*                                     TO BE MOVED UP             S01904 25950002
         LR    REG9,REG7              POINT TO TARGET FOR TXTIO  S01904 25970002
*                                     TABLE ENTRY BEING ORDERED  S01904 26020002
*                                     TO BE MOVED TO             S01904 26030002
         LA    REG6,3                 LENGTH OPERAND FOR         S01904 26040002
*                                     EXECUTED MOVE (WIDTH OF    S01904 26090002
*                                     ONE TXTIO TABLE ENTRY)     S01904 26100002
         LA    REG8,255               LENGTH OPERAND FOR         S01904 26110002
*                                     EXECUTED MOVE OF TXTIO TBL S01904 26160002
*                                     256 BYTES AT A TIME TO THE S01904 26170002
*                                     RIGHT TO MAKE ROOM FOR     S01904 26172002
*                                     ENTRY BEING ORDERED        S01904 26174002
OUT565A  EX    REG6,MOVE1             SAVE MATCHED TABLE ENTRY          26180021
*                                     (EXECUTE MOVE OF ENTRY BEING      26230002
*                                     ORDERED TO TEMP SAVEAREA)         26240002
         LR    REG10,REG13            POINT TO END OF AREA TO BE S01904 26250002
*                                     MOVED                      S01904 26300002
         LR    REG14,REG13            CALC IF THERE ARE MORE THAN 256   26320021
         SR    REG14,REG7             BYTES FROM MATCHED ENTRY ADDR TO  26390021
         SRDL  REG14,REG8             BEGIN OF LAST ORDRD ENTRY         26460021
         LTR   REG14,REG14            ARE THERE MORE THAN 256?          26530021
         BZ    OUT567                 NO, BRANCH                 S01904 26600002
OUT566   SH    REG10,HEX100           MOVE THE LOWER 256 BYTES   S01904 26670021
         EX    REG8,MOVE3             INTO A TEMP SAVEAREA       S01904 26740021
         AR    REG10,REG6             LEAVE ROOM FOR ENTRY TO BE REORDR 26810021
         EX    REG8,MOVE4             MOVE BACK THE 256 BYTES TO TXT IO 26880021
*                                     TABLE/TNL (MOVED ONE ENTRY S01904 26950002
*                                     TO THE RIGHT OF WHERE IT   S01904 27000002
*                                     PREVIOUSLY WAS IN TABLE)   S01904 27010002
         SR    REG10,REG6             RESET REG10 TO CONTINUE    S01904 27020002
*                                     MOVE LOOP -- REG10 ALWAYS  S01904 27070002
*                                     POINTS TO FROM-LOCATION    S01904 27080002
*                                     FOR MOVE (IT POINTS 256    S01904 27082002
*                                     BYTES FURTHER TO THE LEFT  S01904 27084002
*                                     ON EACH ITERATION THRU THE S01904 27086002
*                                     MOVE LOOP)                 S01904 27088002
         BCT   REG14,OUT566           ANY MORE MOVE TO BE DONE?         27090021
OUT567   SRL   REG15,24               REG15=REMAINDING NUMBER    S01904 27160002
*                                     OF BYTES TO BE MOVED IF    S01904 27210002
*                                     TOTAL NUMBER OF BYTES TO   S01904 27220002
*                                     BE MOVED WAS NOT AN EVEN   S01904 27222002
*                                     MULTIPLE OF 256            S01904 27224002
         LTR   REG15,REG15            ANY REMAINDER  TO BE MOVED?       27230021
         BZ    OUT568                 NO,MOVE IS ALL DONE        S01904 27300021
*                                     IF THE AREA TO BE MOVED    S01904 27350002
*                                     WAS AN EVEN MULTIPLE OF    S01904 27360002
*                                     256 BYTES IN SIZE, ALL     S01904 27362002
*                                     MOVING IS NOW COMPLETE,    S01904 27364002
*                                     EXCEPT TO MOVE THE ENTRY   YM4013 27366002
*                                     BEING ORDERED UP TO ITS    YM4013 27368002
*                                     NEW POSITION IN THE TABLE  YM4013 27368402
         SR    REG10,REG15            IF NOT, POINT TO START OF  S01904 27370002
*                                     REMAINING AREA TO BE MOVED S01904 27420002
         BCTR  REG15,0                MACHINE LENGTH OF REMAINDER       27440002
         EX    REG15,MOVE3            MOVE THE REMAINING BYTES   S01904 27510021
         AR    REG10,REG6             POINT ONE ENTRY TO RIGHT   S01904 27580002
         EX    REG15,MOVE4            MOVE THE TXT ENTRY FOR ORDERING   27650021
OUT568   EX    REG6,MOVE2             MOVE THE ENTRY      S01904,YM4013 27720002
*                                     BEING ORDERED TO    S01904,YM4013 27770002
*                                     ITS NEW POSITION IN S01904,YM4013 27780002
*                                     THE TABLE           S01904,YM4013 27782002
         C     REG6,SIX               HAS TEXT NOTELIST2  S01904,YM4013 27790002
*                                     JUST BEEN MOVED?           S01904 27840002
         BE    OUT569                 IF SO, BRANCH              S01904 27860002
         S     REG13,TXTIO            CALC OLD TXT IO ENTRY NUMBER      27930021
         SRL   REG13,2                DIVIDE REL ADDR OF TXTIO   S01904 28000002
*                                     ENTRY BY 4 (ENTRY SIZE)    S01904 28050002
*                                     TO GET REL ENTRY NUMBER    S01904 28060002
         MH    REG13,SEVEN            MULTIPLY BY SEVEN          S01904 28070021
         A     REG13,TNLS2            TO LOCATE CORR TNL2 ENTRY         28140021
         S     REG7,TXTIO             CALC NEW TXT IO ENTRY NO   S01904 28210021
         SRL   REG7,2                 DIVIDE REL ADDR BY 4       S01904 28280002
         MH    REG7,SEVEN             LOCATE CORR TNL2 ENTRY     S01904 28350021
         A     REG7,TNLS2             GET ABSOLUTE ADDR IN TNL2  S01904 28420002
         LA    REG6,6                 REG6=WIDTH OF TNL2 ENTRY   S01904 28490002
*                                     (MINUS 1 FOR EXECUTED MVC) S01904 28540002
         B     OUT565A                BRANCH OUT TO PERFORM MOVE TNL2   28560021
OUT569   LR    REG13,REG11            RESTORE PTRS TO ORDER AND TXT IO  28630021
         LR    REG7,REG9              TABLE ENTRIES              S01904 28700021
OUT569A  LA    REG7,4(REG7)           INCREMENT TO NEXT TXTIO    S01904 28770002
*                                     TABLE ENTRY                S01904 28820002
         B     OUT563                 RETURN TO COMPLETE TBL SCAN       28840021
OUT560A  LM    REG0,REG15,BRNCHSV     RESTORE REGISTERS          S01904 28910002
         B     OUT560B                AND CONTINUE NORMAL        S01904 28980002
*                                     PROCESSING                        29030002
         SPACE 3                                                        29040002
MOVE1    MVC   TEMPSV1(1),0(REG13)    MOVE TABLE ENTRY BEING ORDERED    29050002
*                                     TO TEMPORARY SAVE AREA            29100002
MOVE2    MVC   0(1,REG7),TEMPSV1      MOVE ENTRY BEING ORDERED FROM     29120002
*                                     TEMP SAVE AREA TO NEW (ORDERED)   29170002
*                                     POSITION IN TABLE                 29180002
MOVE3    MVC   TEMPSV2(1),0(REG10)    MOVE 256 BYTES OF TABLE TO        29190002
*                                     TEMPORARY SAVE AREA               29240002
MOVE4    MVC   1(1,REG10),TEMPSV2     MOVE 256 BYTES OF TABLE FROM      29260002
*                                     TEMP SAVE AREA BACK TO TABLE      29310002
*                                     ONE ENTRY TO RIGHT OF PREVIOUS    29320002
*                                     LOCATION (TO MAKE ROOM FOR        29322002
*                                     ENTRY BEING ORDERED)              29324002
         SPACE 2                                                        29330021
SIX      DC    F'6'                   MACHINE LENGTH OF TNL2 ENTRIES    29400002
TEMPSV1  DC    XL7'0'                 SAVE FOR 1 TXTIO/TNL2 ENTRY       29470002
TEMPSV2  DC    XL256'0'               SAVE FOR 256 BYTES OF TABLE       29540002
SEVEN    DC    H'7'                   WIDTH OF TNL2 ENTRIES             29610002
HEX100   DC    H'256'                 WIDTH OF ONE 256 BYTE TABLE MOVE  29680002
ENTRYSV  DC    H'0'                   TEMP SAVE FOR TNL2 READIN         29750002
         EJECT                                                          29800002
*********************************************************************** 29810003
*              TEST FOR SCATTER - YES -BUILD SCATTER / TRANSLATION    * 29812003
*              TABLES AND OUTPUT BOTH AS ONE ENITY- OUT IN RECORDS    * 29814003
*              OF 1024 DEC BYTES                                      * 29816003
*********************************************************************** 29818003
OUT560B TM    PDSE7,SCATTBIT     IS PROGRAM IN SCATTER           XM6065 29818403
        BC    1,OUT02000         YES, GO WRITE SCATTER RCD       XM6O65 29818803
*********************************************************************** 29820021
*              INITIALIZE REGS FOR RLD NOTE LIST READ IN                29890021
*********************************************************************** 29960021
OUT560C  EQU   *                                                 XM9089 30010003
        LA    BYTSPERE,9              9 BYTES/ENTRY IN RLD NOTELIST     30030003
         LA    IOCTLADD,IOCT+12   ADDRESS OF RLD IO CTL TBL             30100021
         XR    REG4,REG4              CLEAR REGISTER             S01904 30170021
         XR    REG9,REG9              CLEAR REGISTER             S01904 30240021
         IC    REG9,ENIRC             BYTES IN OLD RLD IO TBL    S01904 30310021
         IC    REG4,ENIRC+1           BYTES IN REALOC RLD TBLE   S01904 30380021
         L     NOTL1ADD,RNT1      ADDR RLD  NOTELIST 1                  30450021
         L     NOTL2ADD,RNLS2     ADDR RLD  NOTELIST 2                  30520021
         LH    NOTL1CTE,ENR1C     CURRNT NO. ENTRIES IN RLD NOTELIST 1  30590021
         LH    NOTL1MXE,ENR1X1    MAX NO. OF ENTRIES IN RLD NOTELIST 1  30660021
         LH    REG7,ENR1X                                        S01904 30730021
         BAL   RETURN,OUT00600          GO TO TXT- RLD READ IN RT       30800021
         MVC   ENR2C(2),ENTRYSV     ST CUR NO ENTRIES IN RLDNL2  XM5480 30870003
         MVC   ENR1C(2),ENTRYSV     ST CUR NO ENTRIES IN RLDNL1  XM5480 30920003
**********************************************************************$ 30940021
*              DETERMINE ID OF LAST TXTIOT ENTRY PER SEGMENT          * 31010021
*              ALSO SAVE HIGEST SEGMENT NUMBER CONTAINING TEXT          31080021
**********************************************************************$ 31150021
*                                                                       31220021
OUT00570 SR    TEMP4,TEMP4              ZERO CT OF TXTIO FOR LOOP       31290021
         L     HIIDTAB,ADHIID                                           31360021
         L     HIIDTAB,0(HIIDTAB)      ADDRESS OF HI ID TABLE           31430021
         LR    TEMP1,HIIDTAB        GET START OF TABLE ADDRESS          31500021
         XC    0(256,TEMP1),0(TEMP1)   CLEAR 1ST HALF OF TABLE          31570021
         XC    256(256,TEMP1),256(TEMP1)   CLEAR 2ND HALF OF TABLE      31640021
OUT00580 L     TXTIOADD,TXTIO     ADD OF  TXTIO TABLE                   31710021
         AR    TXTIOADD,TEMP4           ADD OF NEXT ID IN TXTIO TABLE   31780021
         TM    2(TXTIOADD),X'20'        IS IT OUT OF ORDER TXT          31850021
         BC    1,OUT00581               YES--TEST END OF TXTIOT LOOP    31920021
         MVC   WORD(2),0(TXTIOADD)      MOVE ID FROM TXTIO TO WORK      31990021
         LH    TEMP1,WORD               LOAD ID                         32060021
         LR    TEMP2,TEMP1              SAVE ID                         32130021
         SLL   TEMP2,3                  RELATIVE HESD ADD FOR THIS ID   32200021
         A     TEMP2,HESD         ABSOLUTE HESD ADR FOR THIS ID         32270021
         SR    TEMP3,TEMP3              ZERO SEGMENT NO REG             32340021
         IC    TEMP3,4(TEMP2)           THIS ID LIES IN THIS SEGMENT    32410021
         AR    TEMP3,TEMP3              DOUBLE SEG NO - REL. ADD TOHIID 32480021
         LH    WORK1,0(HIIDTAB,TEMP3)   GET CURRENT HI-ID IN TABLE      32550021
         LTR   WORK1,WORK1              WAS THERE ANY PREVIOUS ID       32620021
         BC    8,NOPRVID          BR IF THIS IS THE FIRST ID FOR SEG.   32690021
         SLL   WORK1,3                  CALCULATE HESD ADDRESS          32760021
         A     WORK1,HESD               FOR THIS ID                     32830021
         CLC   1(3,TEMP2),1(WORK1)      IS NEW ID LOCATED AT A HIGHER   32900021
*                                       ADDRESS THAN PREVIOUS ID IN SEG 32970021
         BC    12,OUT00581        BR IF NOT AT A HIGHER ADDRESS         33040021
NOPRVID  EQU   *        THIS SHOULD BE AT THE STORE ID INSTRUCTION      33110021
         STH   TEMP1,0(HIIDTAB,TEMP3)   SAVE LAST TXTIOT ENTRY FOR SEG  33180021
OUT00581 LA    TEMP4,4(TEMP4)      INCREMENT TEXTIO BYTE COUNT          33250021
         CH    TEMP4,ENTOC        IS CURR. CT =  SAVED CT               33320021
         BC    4,OUT00580               NO - GO TO CONTINUE LOOP        33390021
         SR    TEMP1,TEMP1                                              33460021
         LH    SEGCT,CSNO         TOTAL CURRENT NO. SEGMENTS            33530021
OUT00582 LA    TEMP1,1(TEMP1)           INC BY 1 (CURRENT SEG)          33600021
         LR    TEMP3,TEMP1              SAVE CURRENT SEG NO.            33670021
         AR    TEMP3,TEMP3             DOUBLE CURR SEG NO               33740021
         LH    TEMP2,0(HIIDTAB,TEMP3)   LAST TXTIOT ENTRY FOR THIS SEG  33810021
         LTR   TEMP2,TEMP2              IS ID = 0                       33880021
         BC    8,OUT00583               YES  NO TXT IN THIS SEGMENT     33950021
         STH   TEMP1,ENSPC        SAVE HI SEG WITH TEXT                 34020021
         SLL   TEMP2,3                  MULT BY 8                       34090021
         A     TEMP2,HESD         ADDRESS OF HESD ENTRY                 34160021
         OI    0(TEMP2),X'40'     SET LAST TXTIOT ENTRY ON IN HESD      34230021
OUT00583 BCT   SEGCT,OUT00582           BRANCH IF LOOP NOT DONE         34300021
*********************************************************************** 34370021
* AT THIS POINT SECOND PASS INITIALIZATION IS PERFORMED                 34440021
*********************************************************************** 34510021
OUT00575 L     REG7,TTRLIST       ADDRESS OF TTR LIST                   34580021
         BCT   TEMP1,OUT00576     BRANCH TO ZERO TTR LIST               34650021
         BC    15,OUT00577        BRANCH AROUND ZEROING TTR LIST        34720021
OUT00576 SLL   TEMP1,2       CURR NO SEGMENTS -1 TIMES 4                34790021
*                                     RESTORE SEGMENT CT IF IN OVERLAY  34860021
         LA    TEMP1,3(TEMP1)     UPDATE COUNT FOR EX INSTRUCTION       34930021
         LA    REG1,256                                                 35000021
OUT00578 SR    TEMP1,REG1              CHECK FOR 256 OR MORE BYTES      35070021
         BC    4,OUT00579              NO                               35140021
         XC    0(256,REG7),0(REG7)     YES--CLEAR 256 BYTES             35210021
         AR    REG7,REG1               INCREMENT BY 256                 35280021
         BC    15,OUT00578                                              35350021
OUT00579 AR    TEMP1,REG1              RESTORE COUNT                    35420021
         EX    TEMP1,ZEROHIID          ZERO TTR L                       35490021
OUT00577 SR    REG0,REG0                                                35560021
         LA    WORK1,9                                                  35630021
         MH    WORK1,ENR2C                                              35700021
         A     WORK1,RNLS2                                              35770021
         ST    WORK1,SPACES+48         RLD NOTELIST LAST ENTRY ADDR.    35840021
         L     WORK1,TXTIO                                              35910021
         AH    WORK1,ENTOC                                              35980021
         SH    WORK1,FOUR                                               36050021
         ST    WORK1,SPACES+44         TEXT I/O TABLE LAST ENTRY ADDR   36120021
         LH    WORK1,ENCDC                                              36190021
         SLL   WORK1,3                                                  36260021
         A     WORK1,HESD                                               36330021
         ST    WORK1,SPACES+52         HESD LAST ENTRY ADDR             36400021
         LH    REG1,ENSPX              SEGTAB ID                        36470021
         CR    REG1,REG0                                                36540021
         BC    8,SCDGETID                                               36610021
OUTSCDIN SLL   REG1,3                                                   36680021
         A     REG1,HESD                                                36750021
         LA    REG1,8(0,REG1)          ADDR. FIRST HESD ENTAB ENTRY     36820021
         L     BRANCH,TPASSVCN                                          36890021
         BR    BRANCH                  GO TO SECOND PASS                36960021
SCDGETID LH    REG1,ENCDC              LAST ID                          37030021
         B     OUTSCDIN                                                 37100021
*********************************************************************** 37170021
*                                                                       37240021
*              TXT - RLD MOVE AND READ IN ROUTINE                       37310021
*                                                                       37380021
*********************************************************************** 37450021
OUT00600 STM   RETURN,BRANCH,SAVE1415                                   37520021
         SRL   IOCTLCTB,2               NO.OF BUFFERINGS                37590021
         SRL   REG9,2                   NO. OF BUFFERINGS       OX00029 37640000
         LR    EVENREG,IOCTLCTB         NO,OF NOTE LIST BUFFERINGS      37660021
         LR    ODDREG,NOTL1MXE          NO.OF ENTRIES PER BUFFERING     37730021
         MR    EVENREG,EVENREG          TOTAL NO.OF BUFFER ENTRIES      37800021
         LA    REG6,0(ODDREG,NOTL1CTE)                           S01904 37870021
         LTR   REG9,REG9              WAS TNL REALLOCATED?       S01904 37940021
         BZ    OUT00610               NO,BRANCH AROUND           S01904 38010021
         LR    ODDREG,REG9            NO OF REALLOC BUFFERINGS   S01904 38080021
         MR    EVENREG,REG7           TOTAL NO OF NEW BUFFER ENTRIES    38150021
         LA    REG6,0(ODDREG,REG6)                               S01904 38220021
OUT00610 STH   REG6,ENTRYSV                                      S01904 38290021
         LR    EVENREG,BYTSPERE         NO BYTES PER ENTRY              38360021
         LR    ODDREG,NOTL1MXE          MAX NO.NOTE LIST 1 ENTRIES      38430021
         MR    EVENREG,EVENREG          NO. BYTES IN BUFFER (NOTE LST1) 38500021
*                                       ANS IN ODDREG                   38570021
         LR    BUFFRSIZ,ODDREG          SAVE BUFFER SIZE                38640021
         LR    EVENREG,IOCTLCTB         NO.OF BUFFERINGS                38710021
         MR    EVENREG,EVENREG          RELAITIVE ADD  OF WHERE TO MOVE 38780021
*                                       CONTENTS OF NOTE LIST1-ANS-ODDR 38850021
         ST    NOTL2ADD,SAVEWORD                                        38920021
         AR    NOTL2ADD,ODDREG          ADD OF WHERE TO 1PT OF NL1TONL2 38990021
         LR    ODDREG,REG7            NO OF ENTRIES IN REALLOC BUFFER   39060021
         MR    EVENREG,BYTSPERE       MULT BY NO OF BYTES/ENTRY         39130021
         LR    REG7,ODDREG            SAVE NEW BUFFER SIZE       S01904 39200021
         MR    EVENREG,REG9           MULT BY NO OF NEW BUFFERS         39270021
         AR    NOTL2ADD,ODDREG                                   S01904 39340021
         LR    EVENREG,BYTSPERE         NO,BYTES PER ENTRY IN NOTE LIST 39410021
         LTR   ODDREG,NOTL1CTE          NO.ENTRIES IN NOTE LIST 1       39480021
         BC    8,OUT00850                                               39550021
         MR    EVENREG,EVENREG          CURRENT NO BYTES IN NOTE LIST 1 39620021
         SR    TEMP3,TEMP3                                              39690021
OUT00700 LA    TEMP1,256                                                39760021
         SR    ODDREG,TEMP1             REMAINDER TO MOVE TO NOTE LIST2 39830021
         BC    10,OUT00800              BRANCH IF REMAINDER GTR,=  0    39900021
         AR    TEMP1,ODDREG             RESTORE NO.BYTES TO MOVE        39970021
OUT00800 BCTR  TEMP1,0                  DECREMENT BY 1 FOR EX MOVE INST 40040021
         LA    TEMP2,0(NOTL2ADD,TEMP3)  ADD.OF WHERE TO MV NL1 TO NL2   40110021
         EX    TEMP1,MOVEINST           MOVE NOTE LIST 1 TO NOTE LIST 2 40180021
         LA    TEMP3,256(TEMP3)         INC BY 256                      40250021
         LA    NOTL1ADD,256(NOTL1ADD)   INC ADD OF NOTE LIST TO MOVE AD 40320021
         LTR   ODDREG,ODDREG            ANY MORE NOTE LST TO BE MOVED   40390021
         BC    2,OUT00700               BRANCH ON YES - GO TO MOVE      40460021
OUT00850 EQU   *                                                        40470002
         L     NOTL2ADD,SAVEWORD                                 XM0834 40510002
         LTR   IOCTLCTB,IOCTLCTB ANY PRE-REALLOCATION BUFFERINGS XM0834 40530000
         BZ    OUT00940                 NO                       XM0834 40600000
OUT00900 LA    SAVEAREA,SPACES    SAVE AREA FOR POINT MACRO             40740021
         L     INDCBADD,DCBINTER        INTER DCB ADDRESS               40810021
*********************************************************************** 40880021
*              POINT TO NEXT RECORD TO READ                           * 40950021
*********************************************************************** 41020021
         POINT (INDCBADD),(IOCTLADD)                                    41090021
*                                                                     * 41160021
*              READ NEXT RECORD                                         41230021
*********************************************************************** 41300021
         READ  DECB,SF,(INDCBADD),(NOTL2ADD),(BUFFRSIZ)                 41370021
*********************************************************************** 41440021
*              CHECK FOR COMPLETION OF READ                           * 41510021
*********************************************************************** 41580021
         CHECK DECB                                                     41650021
         LA    IOCTLADD,4(IOCTLADD)     ADD OF NEXT TTR                 41720021
OUT00930 AR    NOTL2ADD,BUFFRSIZ                                        41790021
         BCT   IOCTLCTB,OUT00900        BRANC IF MORE TO READ IN        41860021
OUT00940 LTR   REG9,REG9              IS THERE A REALLOC BUFFER         41930021
         BZ    OUT00950               NO - RETURN                S01904 42000021
         LA    REG6,0(REG6)                                      S01904 42070021
         LA    REG7,0(REG7)                                      S01904 42140021
         CR    REG6,REG7              HAVE THE NEW BUFFERS BEEN READ?   42210021
         BE    OUT00950               YES,RETURN                 S01904 42280021
         LR    REG6,REG7              GET NEW BUFFER SIZE        S01904 42420021
         LR    REG4,REG9              GET NEW BUFFER COUNT       S01904 42490021
         B     OUT00900               RETURN TO READ     OX00029,S01904 42560000
OUT00950 LM    RETURN,BRANCH,SAVE1415   RESTORE  2 REGS                 42630021
         BCR   15,RETURN                RETURN TO CALLER                42700021
SAVEWORD DC    F'0'                                                     42770021
*********************************************************************** 42840021
*              PASS ERROR PARM TO ERROR ROUTINE - NO TEXT             * 42910021
*********************************************************************** 42980021
OUT00970 EQU   *                                                        43050037
IEW0143  LH    ERRCODE,ERRPARM1         NO TXT IN LOAD MODULE           43080037
         L     BRANCH,ERDIG       ADDR OF ERROR ROUTINE                 43120021
         BALR  RETURN,BRANCH            GO TO ERR DIAGNOSTIC ROUTINE    43190021
         L     BRANCH,FNALVCON          ADD OF FINAL PROC               43260021
         BCR   15,BRANCH                GO TO ERR ROUT                  43330021
**********************************************************************  43400021
*              WRITE - CHECK - NOTE   SUBROUTINE                      * 43470021
**********************************************************************  43540021
*                   REQUIRED REGISTERS                                  43610021
*                                                                       43680021
*              TEMPRTN             -RETURN ADDRESS                      43750021
*              WRITEADD            -ADDRESS OF WRITE AREA               43820021
*              WRITECT             -WRITE BYTE CT                       43890021
*                                                                       43960021
*                   REGISTERS THAT ARE ALSO USED (NOT SAVED)            44030021
*                                                                       44100021
*              DCBADD                                                   44170021
*              SAVEAREA                                                 44240021
*              TTRREG                                                   44310021
*                                                                       44380021
*              APT                                                      44450021
*              BASE                                                     44520021
*              REGS 14 - 1                                              44590021
OUT00990 L     DCBADD,DCBLMOD          SYSLMOD DCB                      44660021
         LA    SAVEAREA,REGSA     ADDRESS OF SAVE AREA                  44730021
*********************************************************************** 44800021
*              WRITE THE NEXT RECORD                                  * 44870021
*********************************************************************** 44940021
         WRITE WDECB,SF,(DCBADD),(WRITEADD),(WRITECT)                   45010021
         CHECK WDECB                                                    45080021
         SR    TTRREG,TTRREG            TTR REG SET TO ZERO             45150021
         TM    APT1,ESDWTBIT      IS FIRST ESD WT IND = ON              45220021
         BCR   8,TEMPRTN      NO        NO                              45290021
         NI    APT1,ESDWTOFF      SET FIRST ESD WT IND = OFF            45360021
         NOTE  (DCBADD)                                                 45430021
         BCR   15,TEMPRTN               RETURN TO CALLER                45500021
*********************************************************************** 45570021
*              SETUP SEGTAB CONTROL RECORD                              45640021
*********************************************************************** 45710021
OUT01000 L     WRITEADD,TNLS2     ESD ADDRESS/WRITE OUT AREA            45780021
         LA    WRITEADD,5(WRITEADD)     WRITE OUT AREA                  45850021
         XC    0(20,WRITEADD),0(WRITEADD) ZERO CONTROL RCD AREA         45920021
         OI    0(WRITEADD),X'01'        SET CONTROL IND.(TXT TO FOLLOW) 45990021
         OI    5(WRITEADD),X'04'        SET NO. BYTES ESD ID IN CTL     46060021
         OI    8(WRITEADD),X'06'        SET READ CCW FOR FETCH          46130021
         OI    12(WRITEADD),X'40'       SET FLAG FIELD FOR FETCH        46200021
         MVC   14(2,WRITEADD),PDSE10  PUT SEGTAB LENGTH IN CONTROL      46270021
         MVC   18(2,WRITEADD),PDSE10  PUT SEGTAB LENGTH IN CONTROL      46340021
         MVC   16(2,WRITEADD),ENSPX   PUT SEGTAB ID IN CONTROL          46410021
         MVC   WORD(2),PDSE10     LENGTH OF SEGTAB                      46480021
         LH    TEMP5,WORD              LENGTH OF SEGTAB                 46550021
*********************************************************************** 46620021
*              SETUP FOR WRITE OF CONTROL RECORD                        46690021
*********************************************************************** 46760021
         NI    APT1,ESDWTOFF      SET NOTE IND= OFF                     46830021
         LA    WRITECT,20               SET WRITE CT TO 20 BYTES        46900021
         NI    APT3,X'FD'         SET 2ND PASS NOT EDIT BIT OFF         46970021
*              WHEN THIS BIT IS ON 2ND PASS DOES NOT WRITE HIS 1ST      47040021
*              CONTROL RECORD ---- IN OVERLAY HIS 1ST CONTROL RECORD    47110021
*              IS NOT THE 1ST CONTROL RECORD IN THE PGM & MUST BE WRITT 47180021
         TM    PDSE8,NOTEDIT      IS MODULE NOT EDITABLE                47250021
         BC    1,OUT01100              YES/DO NOT OUTPUT CONTROL RECORD 47320021
         BAL   TEMPRTN,OUT00990         GO TO WT OUT SEG TAB CONTROL RD 47390021
*********************************************************************** 47460021
*              BUILD IST TEXT RECORD  (SEGTAB)                        * 47530021
*********************************************************************** 47600021
*                                                                       47670021
OUT01100 LR    TEMP2,WRITEADD          ADDRESS OF AREA TO SET TO 0      47740021
         LR    TEMP1,TEMP5              BYTES OF SEGTAB TO 0  (CT)      47810021
         LA    TEMP3,256                                                47880021
OUT01200 SR    TEMP1,TEMP3             IS REMAINDER LESS THAN 256       47950021
         BC    4,OUT01300               YES                             48020021
         BCTR  TEMP3,0                 DECREMENT COUNT TO 255           48090021
         EX    TEMP3,ZEROHIID          ZERO 255 BYTES                   48160021
         LA    WRITEADD,256(WRITEADD)   INCREMENT ADD BY 256            48230021
         BC    15,OUT01200              RETURN TO 0 REMAINDER           48300021
OUT01300 AR    TEMP1,TEMP3             RESTORE COUNT                    48370021
         BCTR  TEMP1,0                 DECREMENT COUNT BY 1             48440021
         EX    TEMP1,ZEROHIID          ZERO REMAINDER                   48510021
         LR    WRITEADD,TEMP2           RESTORE BEGIN OF SEGTAB AREA    48580021
         LR    WRITECT,TEMP5                 SEGTAB LENGTH              48650021
         MVC   8(1,WRITEADD),LSTS PUT LST SEG OF REG0 SEGTAB            48720021
         MVC   10(1,WRITEADD),LSTS+1   PUT LST SEG OF REG 1 SEGTAB      48790021
         MVC   12(1,WRITEADD),LSTS+2   PUT LST SEG OF REG 2 SEGTAB      48860021
         MVC   14(1,WRITEADD),LSTS+3   PUT LST SEG OF REG 3 SEGTAB      48930021
         MVI   9(WRITEADD),X'01'                                        49000021
*                                                                       49070021
*                                                                       49140021
         SR    TEMP1,TEMP1                                              49210021
         LA    TEMP2,20(WRITEADD)                                       49280021
OUT01500 L     TEMP3,SGT1         ADD OF SEGTAB 1 (-1)                  49350021
         LA    TEMP1,1(TEMP1)                INC ADD OF SEGTAB          49420021
         AR    TEMP3,TEMP1              ADD OF NEXT ITEM IN SEGTA1      49490021
         LA    TEMP2,4(TEMP2)                INC ADD OF PRV SG IN SEGTB 49560021
         MVC   0(1,TEMP2),0(TEMP3)           MOVE PRV SG NO  TO SEGTAB  49630021
         MVI   3(TEMP2),X'03'                SET STATUS - NOT IN CORE   49700021
         CH    TEMP1,CSNO         IS LOOP DONE                          49770021
         BC    4,OUT01500                    NO                         49840021
         MVI   27(WRITEADD),X'02'            SET STATUS - IN CORE/SEG 1 49910021
*********************************************************************** 49980021
*              SETUP FOR WRITE OF SEGTAB RECORD                         50050021
*********************************************************************** 50120021
         OI    APT1,ESDWTBIT      SET NOTE IND = ON                     50190021
         BAL   TEMPRTN,OUT00990         GO TO WRITE SEGTAB RCD          50260021
         ST    TTRREG,PDSE4       SAVE TTRO OF SEGTAB IN PDS            50330021
         BC    15,OUT00560             GO BUILD REST OF HESD            50400021
*********************************************************************** 50470021
*              INITIALIZE FOR BUILDING SCATTER/TRANSLATION TABLES     * 50540021
*********************************************************************** 50610021
OUT02000 LA    TEMP5,2                                                  50680021
         LH    HESDCT,ENCDC       HESD CT = X                           50750021
         L     HESDADD,HESD            HESD ADDRESS                     50820021
         LA    SCATTADD,1(HESDCT)       X+1                             50890021
         LR    TRANSADD,SCATTADD        X+1                             50960021
         SLL   TRANSADD,3               8(X+1)                          51030021
         AR    TRANSADD,HESDADD         8(X+1) +HESD ADD = TRANS ADD    51100021
         AR    SCATTADD,SCATTADD        2(X+1)   / SLATION TABLE -4     51170021
         AR    SCATTADD,TEMP5           2(X+1)+2  - EXTRA 2 FOR PAD     51240021
         AR    TEMP5,TEMP5              4                               51310021
         XC    4(2,TRANSADD),4(TRANSADD)  SET IST TRANSADD ENTRY = 0    51380021
         LCR   TEMP1,TEMP5              2'S COMP OF 4 = FFFFFFFC        51450021
         NR    SCATTADD,TEMP1           LENGTH OF TRANSLATION TABLE     51520021
*                                       WITH PAD REMOVED IF NOT NEEDED  51590021
         STH   SCATTADD,WORD            PUT LENGTH IN PDS               51660021
         MVC   PDSE14(2),WORD                                           51730021
         LA    TEMP4,0(SCATTADD,TRANSADD)    ADD OF SCATTER TABLE -TRUE 51800021
         XC    0(8,TEMP4),0(TEMP4)      SET 1ST SCAT ENTRY = 0          51870021
         LA    SCATTADD,8(TEMP4)        ADD OF 2ND ENTRY IN SCATTER TBL 51940021
         AR    TRANSADD,TEMP5           TRUE ADD OF TRANSLATION TABLE   52010021
         AR    TEMP4,TEMP5                                              52080021
*********************************************************************** 52150021
*                BUILD SCATTER/TRANSLATION TABLES                     * 52220021
*                  FIRST PASS REFERENCED TXTIOT                       * 52290021
*********************************************************************** 52360021
*                                                                     * 52430021
* SET UP SEARCH OF TXTIOT                                             * 52500021
          SR    ENDTXTIO,ENDTXTIO   CLEAR REGISTER FOR COMPARE TO 0     52570021
         CH    ENDTXTIO,ENTOC      IS THERE AN Y TEXT                   52640021
         BC    11,OUT02050         NO/ SKIP 1ST SEARCH AND SEARCH HESD  52710021
         OI    SWITCH,TXTIOLP      SET SWITCH INDICATION TXTIO LOOP     52780021
         L     ADTXTIOT,TXTIO      ADDRESS TXTIO TABLE                  52850021
         LR    ENDTXTIO,ADTXTIOT   ADDRESS TXTIO TABLE                  52920021
         AH    ENDTXTIO,ENTOC      END ADDRESS OF TXTIO TABLE           52990021
* PROCESS TXTIOT ENTRY                                                  53060021
OUT02023 CR    ADTXTIOT,ENDTXTIO   ANY MORE TXT IN TXTIOT               53130021
         BC    11,OUT02035         NO- SET IN TXTIOT LOOP OFF           53200021
         TM    2(ADTXTIOT),X'20'   IS IT OUT OF ORDER TEXT              53270021
         BC    1,OUT02033          YES--THEN ID FOR TXTIO ENTRY ALREADY 53340021
*                                     PROCESSED, CHECK NEXT ENTRY.      53410021
* FIND HESD ENTRY                                                       53480021
         LH    TEMP1,0(ADTXTIOT)   HESD ENTRY ID (FROM TXTIOT)          53550021
         SLL   TEMP1,3             FIND REL ADDRESS HESD  (* 8)         53620021
         A     TEMP1,HESD          ADDRESS OF HESD ENTRY                53690021
         TM    0(TEMP1),X'08'          HAS HESD ENTRY BEEN PROCESSED    53760021
         BC    1,OUT02033          YES/ CHECK NEXT TXTIOT ENTRY         53830021
         B     OUT02110            NO/ PROCESS ENTRY                    53900021
OUT02030 OI    0(TEMP1),X'08'      SET PROCESSED SWITCH                 53970021
OUT02033 LA    ADTXTIOT,INC(ADTXTIOT)  UPDATE ADDR TXTIOT ENTRY         54040021
         B     OUT02023                                                 54110021
OUT02035 NI    SWITCH,X'7F'        TURN TXTIO LOOP SWITCH OFF           54180021
         B     OUT02050            SEARCH HESD                          54250021
OUT02036 NI    0(TEMP1),X'F7'      TURN PROCESSED SWITCH OFF            54320021
         B     OUT02300            CHECK END OF LOOP                    54390021
OUT02050 LR    TEMP5,HESDCT        SAVE NUMBER OF ENTRIES IN HESD       54460021
         LR    TEMP1,HESDADD            HESD ADD  // 1ST ENTRY = 0      54530021
*********************************************************************** 54600021
*********************************************************************** 54670021
*              BUILD SCATTER/TRANSLATION TABLES                       * 54740021
*********************************************************************** 54810021
OUT02100 LA    TEMP1,8(TEMP1)           INC HESD ADD                    54880021
         TM    0(TEMP1),X'08'      HAS HESD ENTRY BEEN PROCESSED        54950021
         BC    1,OUT02036          YES- TURN OFF SWITCH/ CHECK END OF   55020021
*                                      LOOP                             55090021
         TM    NEWSW,HIAROP             IS HIAR OPTION ON               55160021
         BC    8,OUT02120               NO                              55230021
         LR    HIARAD,TEMP1        HESD ADDRESS                         55300021
         S     HIARAD,HESD         RELATIVE HESD ADDRESS                55370021
         SRL   HIARAD,3            DIVIDE BY 8 TO GET HESD ID           55440021
         B     OUT02115                                                 55510021
OUT02110 TM    NEWSW,HIAROP        IS HIAR OPTION ON                    55580021
         BC    8,OUT02120           NO                                  55650021
         LH    HIARAD,0(ADTXTIOT)  HESD ID (REL. ADDR ON HIAR TABLE)    55720021
OUT02115 A     HIARAD,HIARADD      ADDRESS OF ENTRY OF HIERARCHY TABLE  55790021
OUT02120 TM    0(TEMP1),X'02'           IS HESD TYPE SD,PC OR CM        55860021
         BC    1,OUT02300               NO                              55930021
         TM    NEWSW,HIAROP             IS HIAR OPTION ON               56000021
         BC    8,OUT02140               NO                              56070021
         MVC   0(1,SCATTADD),0(HIARAD)  PUT HN IN HIGH ORDER BYTE       56140021
         B     OUT02150                                                 56210021
OUT02140 MVI   0(SCATTADD),X'00'        NO HIAR- PUT 00 IN HIGH BYTE    56280021
OUT02150 MVC   1(3,SCATTADD),1(TEMP1)   PUT SD,PC OR CM ADD IN SCTR TAB 56350021
         LR    TEMP3,SCATTADD           SAVE SCATTER ADD FOR THIS ENTRY 56420021
         SR    TEMP3,TEMP4              REL SCATTER ADD                 56490021
         SRL   TEMP3,2                  SCAT ID                         56560021
         LA    SCATTADD,4(SCATTADD)     INC TO NEXT AVAILABLE SCATENTRY 56630021
         CL    SCATTADD,TNLS2   CF SCTR TBL END:TXTNL BEGIN    @ZA07600 56640037
         BL    OUT02200         BR IF SCTR TBL DOESN'T OVLY    @ZA07600 56650037
IEW0364  LA    ERRCODE,X'0424'  NEED MORE SIZE1 PARM           @ZA07600 56660037
         L     15,ERDIG         LOAD ERR ADDR                  @ZA07600 56670037
         BCR   15,15            BR TO ERROR RTN                @ZA07600 56680037
OUT02200 LR    TEMP2,TEMP1              SAVE HESD ADD FOR THIS ENTRY    56700021
         SR    TEMP2,HESDADD            REL HESD ADD                    56770021
         SRL   TEMP2,2                  2(HESD ID) OR REL TRANS ADD     56840021
         STH   TEMP3,0(TRANSADD,TEMP2)  PUT PTR TO SCAT ENT IN TRANS TB 56910021
         TM    SWITCH,TXTIOLP       IS PGM IN TXTIO TABLE SEARCH        56980021
         BC    1,OUT02030          YES SET ENTRY PROCESSED/ GO TO  NEXT 57050021
*                                         TXTIOT ENTRY                  57120021
OUT02300 BCT   HESDCT,OUT02100          BRANCH IF HESD LOOP NOT DONE    57190021
         LR    TEMP1,HESDADD           ADDRESS OF HESD                  57260021
OUT02400 LA    TEMP1,8(TEMP1)          INC HESD ADD                     57330021
         SR    TEMP3,TEMP3              0 TO BE USED AS TRANSPTER,PR,NL 57400021
         TM    0(TEMP1),X'02'           IS HESD TYPE SD,PC OR CM        57470021
         BC    8,OUT02470              YES                              57540021
         TM    0(TEMP1),X'07'           IS TYPE = NULL                  57610021
         BC    1,OUT02450               YES / GO TO PUT 0 PTR IN TRANS  57680021
         TM    0(TEMP1),X'03'           IS TYPE = LR                    57750021
         BC    12,OUT02450              NO - ER,PR /GO PUT 0 IN TRANS   57820021
         LH    TEMP2,6(TEMP1)           PICK UP ID THAT PTS TO SD OR PC 57890021
         AR    TEMP2,TEMP2              DOUBLE ID - REL TRANS TBL ADD   57960021
         LH    TEMP3,0(TRANSADD,TEMP2)  PICK UP PTR TO SCATT FOR SD -PC 58030021
OUT02450 LR    TEMP2,TEMP1              SAVE HESD ADD FOR THIS ENTRY    58100021
         SR    TEMP2,HESDADD            REL HESD ADD                    58170021
         SRL   TEMP2,2                  2(HESD ID) OR REL TRANS ADD     58240021
         STH   TEMP3,0(TRANSADD,TEMP2)  PUT PTR TO SCAT ENT IN TRANS TB 58310021
OUT02470 BCT   TEMP5,OUT02400           BRANCH IF HESD LOOP NOT DONE    58380021
*********************************************************************** 58450021
*              SET UP LOOP TO WRITE OUT SCATTER - TRANSLATION RECORD  * 58520021
*********************************************************************** 58590021
         LR    TEMP1,SCATTADD           ADD OF LAST SCATTER ENTRY + 4   58660021
         SR    TEMP1,TEMP4              NO BYTES OF SCATTER TABLE       58730021
         STH   TEMP1,WORD                                               58800021
         MVC   PDSE13(2),WORD     PUT NO SCATT BYTES IN PDS             58870021
         LR    TEMP5,SCATTADD                                           58940021
         SR    TEMP5,TRANSADD           NO BYTES     TO WRITE OUT       59010021
         OI    APT1,ESDWTBIT      SET BIT TO NOTE FIRST WRITE           59080021
OUT02500 LA    TEMP1,1020               1020                            59150021
         SR    TEMP5,TEMP1              BYTES REMAINING TO WRITE        59220021
         BC    10,OUT02600              BRANCH IF REMAINDER GREATER 0   59290021
         AR    TEMP1,TEMP5              WRITE CT = OR LESS 1020         59360021
OUT02600 LA    WRITECT,4(TEMP1)         CT + 4                          59430021
         SR    SCATTADD,WRITECT         WRITE ADDRESS                   59500021
         L     WORK1,0(SCATTADD)        SAVE 4 BYTES                    59570021
         ST    TEMP1,0(SCATTADD)        PUT WRITE CT IN HEADER - CTL    59640021
         MVI   0(SCATTADD),X'10'        PUT IN SCAT CONTROL             59710021
         BAL   TEMPRTN,OUT00990         GO WRITE OUT SCATT RCD          59780021
         ST    WORK1,0(SCATTADD)        RESTORE  4 B                    59850021
         LA    SCATTADD,4(SCATTADD)                                     59920021
         LTR   TTRREG,TTRREG            WAS A NOTE DONE ON THIS WRITE   59990021
         BC    8,OUT02700               NO                              60060021
         ST    TTRREG,WORD              SAVE TTR                        60130021
         MVC   PDSE5(3),WORD      PUT TTR IN PDS                        60200021
OUT02700 LTR   TEMP5,TEMP5              ANY MORE DATA TO WRITE          60270021
         BC    2,OUT02500               YES                             60340021
         BC    15,OUT560C               NO/RETURN TO MAIN LOOP   XM9089 60410003
         EJECT                                                   S21016 60480021
*********************************************************************** 60550021
*                                                                     * 60620021
*              IDROUT -- SUBROUTINE TO PROCESS IDR OUTPUT             * 60690021
*                                                                     * 60760021
*********************************************************************** 60830021
*                                                                     * 60900021
*                  SUBROUTINE IDROUT RECEIVES CONTROL                 * 60970021
*                  AFTER THE LAST CESD RECORD HAS BEEN                * 61040021
*                  WRITTEN ON THE SYSLMOD DATA SET.                   * 61110021
*                  ITS FUNCTION IS TO CREATE AND WRITE                * 61180021
*                  THE CSECT IDENTIFICATION RECORDS OF                * 61250021
*                  A LOAD MODULE IMMEDIATELY FOLLOWING                * 61320021
*                  ALL CESD RECORDS ON THE SYSLMOD                    * 61390021
*                  DATA SET.                                          * 61460021
*                  IT USES THREE TABLES CREATED DURING                * 61530021
*                  INPUT PROCESSING:                                  * 61600021
*                            IDRZPTAB - IMASPZAP DATA                 * 61670021
*                            IDRTRTAB - TRANSLATOR DATA               * 61740021
*                            IDRUDTAB - USER DATA                     * 61810021
*                  THESE TABLES, COLLECTIVELY, CONTAIN                * 61880021
*                  ALL IDR DATA RECEIVED FROM ALL                     * 61950021
*                  INPUT LOAD AND OBJECT MODULES PLUS                 * 62020021
*                  USER-SUPPLIED IDR DATA RECEIVED                    * 62090021
*                  VIA THE IDENTIFY CONTROL STATEMENT.                * 62160021
*                                                              S21016 * 62230021
*********************************************************************** 62300021
         SPACE 2                                                 S21016 62370021
IDROUT   STM   WRITECT,TABEND,TEMPSAVE   SAVE REGISTERS          S21016 62440021
         SPACE 1                                                 S21016 62510021
*********************************************************************** 62580021
*                                                                     * 62650021
*              PROCESS IDR IMASPZAP RECORD(S)                         * 62720021
*                                                              S21016 * 62790021
*********************************************************************** 62860021
         SPACE 1                                                 S21016 62930021
         MVC   IDRBUF(HDRLEN),IDRZHDR  MOVE IDR SPZAP RECORD     S21016 63000021
*                                      HEADER INTO IDR BUFFER    S21016 63070021
         LA    WRITEADD,IDRBUF         POINT TO IDR BUFFER FOR   S21016 63140021
*                                      WRITE ROUTINE             S21016 63210021
         LA    WRITECT,ZPRECLEN        LOAD RECORD LENGTH FOR    S21016 63280021
*                                      WRITE ROUTINE             S21016 63350021
         L     TABADD,IDRZPTAB         GET TABLE START ADDRESS   XM5480 63540003
         L     TABEND,IDRZPEND         GET TABLE END ADDRESS     XM5480 63550003
*                                      TABLE                     S21016 63560021
         CR    TABADD,TABEND           ANY DATA IN TABLE?        S21016 63630021
         BE    NOZAP                   IF NOT, BRANCH            S21016 63700021
         LR    DATAPTR,TABADD          IF THERE IS DATA, POINT   S21016 63770021
*                                      TO IT                     S21016 63840021
         LR    DATALEN,TABEND          GET ENDING ADDRESS OF     S21016 63910021
*                                      DATA                      S21016 63980021
         SR    DATALEN,TABADD          SUBTRACT STARTING ADDRESS S21016 64050021
*                                      TO GET TOTAL LENGTH OF    S21016 64120021
*                                      DATA IN TABLE             S21016 64190021
         LA    RECLEN,ZAPLEN           LOAD DATA LENGTH FOR ONE  S21016 64260021
*                                      SPZAP RECORD              S21016 64330021
ZAPLOOP  CR    DATALEN,RECLEN          COMPARE LENGTH OF DATA IN S21016 64400021
*                                      TABLE TO LENGTH WHICH CAN S21016 64470021
*                                      GO ONTO ONE SPZAP RECORD  S21016 64540021
         BNH   LASTZAP                 IF ALL DATA REMAINING IN  S21016 64610021
*                                      TABLE CAN GO ONTO A       S21016 64680021
*                                      SINGLE RECORD, BRANCH     S21016 64750021
MOVEDATA MVC   ZAPDATA(ZAPLEN),LOC(DATAPTR)  IF NOT, MOVE DATA   S21016 64820021
*                                      TO FILL 1 REC TO BUFFER   S21016 64890021
         OI    ZAPCNT,ZAPMAX           SET COUNT FIELD OF REC TO S21016 64960021
*                                      SHOW 19 ENTRIES (MAXIMUM) S21016 65030021
*                                      AND TURN ON CHAIN BIT     S21016 65100021
*                                      (BIT 1 OF COUNT BYTE)     S21016 65170021
         BAL   TEMPRTN,OUT00990        GO TO WRITE THE RECORD    S21016 65240021
         LA    DATAPTR,ZAPLEN(DATAPTR) UPDATE POINTER TO DATA BY S21016 65310021
*                                      THE AMOUNT JUST WRITTEN   S21016 65380021
         SR    DATALEN,RECLEN          SUBTRACT AMOUNT JUST      S21016 65450021
*                                      WRITTEN FROM LENGTH OF    S21016 65520021
*                                      DATA REMAINING TO BE      S21016 65590021
*                                      PROCESSED                 S21016 65660021
         B     ZAPLOOP                 LOOP TO CONTINUE          S21016 65730021
*                                      PROCESSING THE REMAINING  S21016 65800021
*                                      DATA                      S21016 65870021
NOZAP    NI    ZAPCNT,NOZPDATA         TURN CHAIN BIT OFF AND    S21016 65940021
*                                      SET COUNT TO ZERO ENTRIES S21016 66010021
*                                      FOR THIS RECORD           S21016 66080021
         MVI   ZAPDATA,ZEROFILL        PAD UNUSED DATA PORTION   S21016 66150021
         MVC   ZAPDAT1(ZPLEN),ZAPDATA  OF RECORD WITH ZEROES     S21016 66220021
SHRTZAP  BAL   TEMPRTN,OUT00990        GO TO WRITE THE RECORD    S21016 66290021
         B     LKEDREC                 GO TO PROCESS LKED DATA   S21016 66360021
*                                      FOR IDR                   S21016 66430021
LASTZAP  BCTR  DATALEN,LOC             SUBTRACT ONE FROM DATA    S21016 66500021
*                                      LENGTH FOR ZERO-ORIENTED  S21016 66570021
*                                      MOVE LENGTH               S21016 66640021
         MVI   ZAPDATA,ZEROFILL        PAD UNUSED DATA PORTION   S21016 66710021
         MVC   ZAPDAT1(ZPLEN),ZAPDATA  OF RECORD WITH ZEROES     S21016 66780021
         EX    DATALEN,MOVEDATA        EXECUTE MOVE OF DATA TO   S21016 66850021
*                                      IDR BUFFER FOR SPZAP REC  S21016 66920021
         LA    DATALEN,UNIT(DATALEN)   ADD ONE TO DATA LENGTH    S21016 66990021
*                                      TO RESTORE NORMAL ONE-    S21016 67060021
*                                      ORIENTATION               S21016 67130021
         XR    DATAPTR,DATAPTR         ZERO OUT EVEN REG         S21016 67200021
*                                      TO CLEAR SIGN BIT         S21016 67270021
*                                      FOR DIVIDE (ALWAYS        S21016 67340021
*                                      A POSITIVE NUMBER)        S21016 67410021
         D     DATASIZE,ZAPSIZE        DIVIDE LENGTH OF DATA     S21016 67480021
*                                      IN RECORD BY LENGTH OF    S21016 67550021
*                                      A SINGLE DATA ITEM TO     S21016 67620021
*                                      DETERMINE THE NUMBER OF   S21016 67690021
*                                      ENTRIES IN THIS RECORD    S21016 67760021
         STC   ZPCOUNT,ZAPCNT          SET COUNT FIELD OF REC TO S21016 67830021
*                                      CORRECT NUMBER OF ENTRIES S21016 67900021
*                                      IN THIS RECORD WITH CHAIN S21016 67970021
*                                      BIT OFF                   S21016 68040021
         LA    ZAPCMPR,CMPRSIZE        GET COMPARISON VALUE      S21016 68110021
*                                      FOR NUMBER OF ENTRIES     S21016 68180021
*                                      ALLOWED WITHOUT CREATING  S21016 68250021
*                                      AN EXTRA (BLANK) REC FOR  S21016 68320021
*                                      POSSIBLE FUTURE OVERFLOW  S21016 68390021
         CR    ZPCOUNT,ZAPCMPR         DOES THIS RECORD CONTAIN  S21016 68460021
*                                      MORE THAN THE CRITICAL    S21016 68530021
*                                      NUMBER OF ENTRIES?        S21016 68600021
         BNH   SHRTZAP                 IF NOT, BRANCH (THIS WILL S21016 68670021
*                                      BE THE LAST IDR WITH      S21016 68740021
*                                      SPZAP DATA)               S21016 68810021
         OI    ZAPCNT,CHAIN            IF AN ADDITIONAL RECORD   S21016 68880021
*                                      IS NEEDED, TURN ON THE    S21016 68950021
*                                      CHAIN BIT IN THIS RECORD  S21016 69020021
         BAL   TEMPRTN,OUT00990        GO TO WRITE THIS RECORD   S21016 69090021
         B     NOZAP                   BRANCH TO CREATE A SPARE  S21016 69160021
*                                      RECORD                    S21016 69230021
         SPACE 1                                                 S21016 69300021
*********************************************************************** 69370021
*                                                                     * 69440021
*              PROCESS IDR LINKAGE EDITOR RECORD                      * 69510021
*                                                              S21016 * 69580021
*********************************************************************** 69650021
         SPACE 1                                                 S21016 69720021
LKEDREC  LA    WRITECT,LKRECLEN        SET UP RECORD LENGTH FOR  S21016 69790021
*                                      WRITE ROUTINE             S21016 69860021
         L     REG1,DEFADDR            GET ADDR. OF MDEF         S21016 69930021
         USING DEFDSECT,REG1           SET UP ADRESSABABILITY    S21016 70000021
*                                      FOR MDEF DSECT            S21016 70070021
         PACK  LKRELNO(LEN2),SGRELNO(LEN3)  PACK SYSGEN-ASSIGNED S21016 70140021
*                                      OS RELEASE NO. TO LKED    S21016 70210021
*                                      IDR HEADER                S21016 70280021
         DROP  REG1                    NO LONGER NEEDED          S21016 70350021
         SR    REG1,REG1               ZERO OUT REGISTER         S21016 70420021
         IC    REG1,LKRELNO+1          GET 2ND BYTE OF REL.NO.   S21016 70490021
         SRL   REG1,LEN4               SHIFT OUT SIGN            S21016 70560021
         STC   REG1,LKRELNO+1          STORE MODIFICATION LEVEL  S21016 70630021
*                                      WITH A LEADING ZERO       S21016 70700021
         MVC   IDRBUF(LKLEN),LKIDR     MOVE RECORD HEADER AND    S21016 70770021
*                                      LKED IDENTIFYING INFO     S21016 70840021
*                                      TO IDR BUFFER             S21016 70910021
         ST    TIME,TIMESAVE           SAVE REGISTER 0 BEFORE    S21016 70980021
*                                      ISSUEING TIME MACRO       S21016 71050021
         TIME  ,            ISSUE TIME MACRO TO GET TODAY'S DATE S21016 71120021
         ST    DATE,DATESAVE           STORE TODAY'S DATE AS     S21016 71190021
*                                      RETURNED BY TIME MACRO    S21016 71260021
         MVC   LKDATE(DATELEN),DATESAV  MOVE TODAY'S DATE TO     S21016 71330021
*                                      DATE FIELD OF RECORD (IN  S21016 71400021
*                                      PACKED DECIMAL FORMAT)    S21016 71470021
         L     TIME,TIMESAVE           RESTORE REGISTER ZERO     S21016 71540021
         L     TABADD,IDRTITAB         GET TABLE START ADDRESS  OX04245 71800002
         L     TABEND,IDRTIEND         GET TABLE END ADDRESS    OX04245 71810002
         CR    TABADD,TABEND           ANY DATA IN TABLE?        S21016 71820021
         BNE   TRNSREC                 IF SO, BRANCH TO          S21016 71890021
*                                      PROCESS TRANSLATOR DATA   S21016 71960021
TRNSDONE EQU   *                       TRNSDONE                  XM5480 72180003
         L     TABADD,IDRUDTAB         GET TABLE START ADDRESS   XM5480 72220003
         L     TABEND,IDRUDEND         GET TABLE END ADDRESS     XM5480 72230003
         CR    TABADD,TABEND           ANY DATA IN TABLE?        S21016 72240021
         BNE   USERREC                 IF SO, BRANCH TO          S21016 72310021
*                                      PROCESS USER DATA         S21016 72380021
USERDONE OI    SUBTYPE,LASTIDR         TURN ON FLAG IN SUBTYPE   S21016 72450021
*                                      FIELD OF THIS RECORD TO   S21016 72520021
*                                      INDICATE THAT IT IS THE   S21016 72590021
*                                      LAST IDR FOR THE LOAD     S21016 72660021
*                                      MODULE                    S21016 72730021
         BAL   TEMPRTN,OUT00990        GO TO WRITE THE LAST REC  S21016 72800021
         LM    WRITECT,TABEND,TEMPSAVE RESTORE REGISTERS         S21016 72870021
         BR    TEMPRTN                 RETURN TO CALLER          S21016 72940021
         SPACE 1                                                 S21016 73010021
*********************************************************************** 73080021
*                                                                     * 73150021
*              PROCESS IDR TRANSLATOR RECORD(S)                       * 73220021
*                                                              S21016 * 73290021
*********************************************************************** 73360021
         SPACE 1                                                 S21016 73430021
TRNSREC  BAL   TEMPRTN,OUT00990        GO TO WRITE THE LKED IDR  S21016 73500021
         MVI   SUBTYPE,TRNSTYPE        MOVE INDICATOR FOR        S21016 73570021
*                                      TRANSLATOR DATA TO        S21016 73640021
*                                      IDR SUBTYPE FIELD         S21016 73710021
         LA    WRITECT,TURECLEN        LOAD RECORD LENGTH FOR    S21016 73780021
*                                      WRITE ROUTINE             S21016 73850021
         LA    RECLEN,TRUDLEN          LOAD DATA LENGTH FOR ONE OX04245 74020002
*                                      OUTPUT RECORD            OX04245 74070002
         LA    OBUFPTR,TRUDATA         GET ADDRESS OF OUTPT     OX04245 74120002
*                                      BUFFER                   OX04245 74170002
         LR    DATAPTR,OBUFPTR         MAHE A COPY IN ORDER TO  OX04245 74220002
         AR    DATAPTR,RECLEN          COMPUT POINTER TO END    OX04245 74270002
*                                      OF RECORD                OX04245 74320002
         ST    DATAPTR,OBUFEND         STORE FOR COMPARISON     OX04245 74320102
         LR    DATAPTR,TABADD          POINT TO START OF DATA    S21016 74320402
TRNSLOOP EQU   *                       LOOP TO MOVE ONE         OX04245 74320802
*                                      TRANSLATOR IDR ITEM      OX04245 74321202
         CR    DATAPTR,TABEND          TEST FOR END OF TABLE    OX04245 74321602
         BNL   LASTRANS                BRANCH TO WRITE LAST     OX04245 74321702
*                                      RECORD                   OX04245 74321802
         LA    MVCPTR,HDLEN2(DATAPTR)  POINT TO FIRST ID        OX04245 74322002
*                                      OF DOUBLE ITEM           OX04245 74324002
         CLI   LOC(DATAPTR),ONETRNS    IS THIS A SINGLE ITEM?   OX04245 74330002
         BNE   TRNSID                  NO,  BRANCH              OX04245 74340002
         LA    MVCPTR,HDLEN1(DATAPTR)  POINT TO FIRST ID        OX04245 74350002
TRNSID   EQU   *                                                OX04245 74720002
         LR    DATALEN,MVCPTR          SAVE MVCPTR IN DATALEN   OX04245 74770002
*                                      FOR USE AS INDEX         OX04245 74780002
TRIDLOOP EQU   *                       ID SEARCH LOOP           OX04245 74790002
         CR    DATALEN,TABEND          TEST FOR END OF TABLE    @Z17975 74870037
         BNL   LASTRANS                BRANCH TO WRITE LAST REC @Z17975 74879037
         TM    LOC(DATALEN),LASTIDR      WAS THIS THE LAST ID?  OX04245 74888037
         BO    MOVID                   YES, MOVE IDS            OX04245 74897037
         LA    DATALEN,LEN2(DATALEN)   POINT TO NEXT ID         OX04245 74906037
         B     TRIDLOOP                BRANCH TO CONTINUE LOOP  OX04245 74915037
MOVID    EQU   *                                                OX04245 74926002
         LA    DATALEN,LEN2(DATALEN)   POINT PAST LAST ID       OX04245 74928002
         ST DATALEN,DPTRSAV            SAVE ADR OF NEXT TAB     OX04245 74928402
*                                      ENTRY FOR LATER USE      OX04245 74928802
         SR    DATALEN,MVCPTR          COMPUTE DATA LENGTH      OX04245 74930002
         BAL   TEMPRTN,TRMOV           YES,MOVE THE IDS         OX04245 74970002
         LA    DATALEN,INDCTRLN        GET LENGTH OF FLAG FIELD OX04245 75170002
         LR    MVCPTR,DATAPTR          POINT TO START OF HEADER OX04245 75180002
         BAL   TEMPRTN,TRMOV           BRANCH TO MOVE THE FLAG  OX04245 75220002
         SR    MVCPTR,MVCPTR           ZERO OUT REGISTER        OX04245 75270002
         IC    MVCPTR,NAMEPTR(DATAPTR) GET FIRST BYTE OF TABLE  OX04245 75320002
*                                      POINTER                  OX04245 75370002
         SLL   MVCPTR,LEN8             SHIFT LEFT ONE BYTE      OX04245 75420002
         IC    MVCPTR,NAMEPTR+1(DATAPTR) GET SECOND BYTE OF     OX04245 75470002
*                                      TABLE POINTER            OX04245 75520002
         A     MVCPTR,IDRTRTAB          ADD START ADDRESS OF    OX04245 75570002
*                                      TRANSLATOR DATA TABLE    OX04245 75620002
         ST    MVCPTR,TEMPSAVE         SAVE POINTER TO TABLE    OX04245 75670002
         LA    DATALEN,TRNMLEN         GET TRANSLATOR NAME LEN  OX04245 75720002
         BAL   TEMPRTN,TRMOV           BRANCH TO MOV TRANS NAME OX04245 75770002
         LA    MVCPTR,YYDDD(DATAPTR)   GET PTR TO FIRST DATE    OX04245 75820002
         LA    DATALEN,PKLEN2          GET LENGTH OF FIRST DATE OX04245 75870002
         BAL   TEMPRTN,TRMOV           BRANCH TO MOVE           OX04245 75920002
*                                      TRANSLATOR DATE          OX04245 75970002
         CLI   INDCTR(DATAPTR),ONETRNS IS THIS A DOUBLE ITEM?   OX04245 76020002
         BE    TRNSNXT                 IF NOT, BRANCH TO SKIP   OX04245 76070002
*                                      REMAINDER OF MOVE        OX04245 76120002
         L     MVCPTR,TEMPSAVE         RETRIEVE TABLE POINTER   OX04245 76170002
         LA    MVCPTR,TRNMLEN(MVCPTR)  INCREMENT TO NEXT TABLE  OX04245 76270002
*                                      ENTRY                    OX04245 76320002
         LA    DATALEN,TRNMLEN         GET LENGTH OF TRANSLATOR OX04245 76370002
*                                      NAME                     OX04245 76420002
         BAL   TEMPRTN,TRMOV           BRANCH TO MOVE 2ND       OX04245 76470002
*                                      TRANSLATOR NAME          OX04245 76520002
         LA    MVCPTR,YYDDD2(DATAPTR)  GET ADDRESS OF 2ND DATE  OX04245 76570002
         LA    DATALEN,PKLEN2          GET LENGTH OF 2ND DATE   OX04245 76620002
         BAL TEMPRTN,TRMOV             MOVE IN 2ND DATE         OX04245 76670002
TRNSNXT  EQU   *                                                        76720002
         L     DATAPTR,DPTRSAV         RETRIEVE POINTER         OX04245 76770002
         B     TRNSLOOP                CONTINUE SEARCHING       OX04245 76820002
*        ROUTINE TO MOVE ONE FIELD INTO OUTPUT RECORD           OX04245 76870002
TRMOV    EQU   *                                                OX04245 76920002
         LR    REG10,OBUFPTR           COPY CURRENT BUFFER      OX04245 76970002
*                                      POINTER                  OX04245 77020002
         AR    REG10,DATALEN           ADD LENGTH OF DATA TO BE OX04245 77070002
*                                      MOVED                    OX04245 77120002
         C     REG10,OBUFEND           IS THERE ROOM FOR THIS   OX04245 77170002
*                                      MOVE?                    OX04245 77220002
         BNL   TRMOV1                  NO,BRANCH TO PROCESS     OX04245 77270002
*                                      PARTIAL ITEM             OX04245 77320002
TRNSREC0 EQU   *                                                OX04245 77330002
         BCTR  DATALEN,REG0            DECRE LENGTH FOR MOVE    OX04245 77370002
         EX    DATALEN,TREXC           EXECUTE THE MOVE         OX04245 77420002
         LR    OBUFPTR,REG10           ADVANCE BUFFER POINTER   OX04245 77430002
         BR    TEMPRTN                 RETURN                   OX04245 77470002
TREXC    EQU   *                                                OX04245 77520002
         MVC   LOC(LOC,OBUFPTR),LOC(MVCPTR) MOVE                OX04245 77570002
*                                      INSTRUCTION FOR EXECUTE  OX04245 77620002
TRMOV1   EQU   *                       NO ROOM - MOVE AS MUCH   OX04245 77670002
*                                      AS POSSIBLE              OX04245 77720002
         L     REG10,OBUFEND           GET POINTER TO BUFF END  OX04245 77770002
         SR    REG10,OBUFPTR           COMPUTE AVAILABLE SPACE  OX04245 77820002
         SR    DATALEN,REG10           COMPUTE LEFTOVER LENGTH  OX04245 77870002
         BCTR  REG10,REG0              DECREMENT LENGTH FOR MOV OX04245 77920002
         EX    REG10,TREXC             MOVE THE PARTIAL LENGTH  OX04245 77970002
         MVI   IDRBYTCT,TRUDMAX        SET BYTE COUNT FOR ONE   OX04245 78020002
*                                      RECORD                   OX04245 78070002
         AR    MVCPTR,REG10            POINT TO NEW DATA START  OX04245 78072002
         LA    MVCPTR,UNIT(MVCPTR)     ADJUST POINTER           OX04245 78074002
         LR    REG10,TEMPRTN           SAVE TEMPRTN             OX04245 78080002
         BAL   TEMPRTN,OUT00990        GO TO WRITE THE RECORD   OX04245 78120002
         LA    OBUFPTR,TRUDATA         GET ADDRESS OF OUTPUT    OX04245 78130002
*                                      BUFFER                   OX04245 78150002
         LR    TEMPRTN,REG10           RESTORE TEMPRTN          OX04245 78160002
         B     TRMOV                   BRANCH TO CONT OUTPUT    OX04245 78170002
LASTRANS EQU   *                       END OF TRANSLATOR IDR    OX04245 78220002
*                                      DATA                     OX04245 78270002
         LA    REG10,IDRBYTCT          GET ADR TO COMPUTE       OX04245 78320002
*                                      BYTE COUNT OF OUTPUT RECORD      78370002
         SR    OBUFPTR,REG10           SUBTRACT START ADR FROM  OX04245 78390002
*                                      CURRENT POINTER          OX04245 78400002
         STC   OBUFPTR,IDRBYTCT        STORE BYTE COUNT         OX04245 78470002
*                                      INTO BUFFER              OX04245 78520002
         LA    WRITECT,UNIT(OBUFPTR)   ADD ONE TO BYTE COUNT    OX04245 78570002
*                                      FOR ACTUAL RECORD LENGTH OX04245 78620002
         B     TRNSDONE                GO TO PROCESS TRANSLATOR  S21016 81130021
*                                      RECORD JUST BUILT AND     S21016 81200021
*                                      USER-DATA IDR'S, IF ANY   S21016 81270021
         SPACE 1                                                 S21016 81340021
*********************************************************************** 81410021
*                                                                     * 81480021
*               PROCESS IDR USER-DATA RECORD(S)                       * 81550021
*                                                              S21016 * 81620021
*********************************************************************** 81690021
         SPACE 1                                                 S21016 81760021
USERREC  BAL   TEMPRTN,OUT00990        GO TO WRITE LAST IDR WITH S21016 81830021
*                                      TRANSLATOR DATA           S21016 81900021
         MVI   SUBTYPE,USERTYPE        MOVE INDICATOR FOR        S21016 81970021
*                                      USER-SUPPLIED DATA TO     S21016 82040021
*                                      IDR SUBTYPE FIELD         S21016 82110021
         LA    WRITECT,TURECLEN        LOAD RECORD LENGTH FOR    S21016 82180021
*                                      WRITE ROUTINE             S21016 82250021
         LR    DATAPTR,TABADD          POINT TO START OF DATA    S21016 82320021
         LR    DATALEN,TABEND          LOAD ENDING ADDRESS OF    S21016 82390021
*                                      DATA IN TABLE             S21016 82460021
         SR    DATALEN,TABADD          SUBTRACT STARTING ADDRESS S21016 82530021
*                                      TO OBTAIN LENGTH OF DATA  S21016 82600021
USERLOOP LA    RECLEN,TRUDLEN          LOAD DATA LENGTH FOR ONE  S21016 82670021
*                                      RECORD                    S21016 82740021
         CR    DATALEN,RECLEN          COMPARE LENGTH OF DATA    S21016 82810021
*                                      TO LENGTH OF 1 RECORD     S21016 82880021
         BNL   USER0020                IF DATA LENGTH IS NOT <   S21016 82950021
*                                      RECORD LENGTH, BRANCH     S21016 83020021
         LR    RECLEN,DATALEN          ELSE, GET DATA LENGTH     S21016 83090021
USER0020 ST    DATAPTR,DPTRSAV         SAVE POINTER TO START OF  S21016 83160021
*                                      DATA                      S21016 83230021
USER0040 CLC   LOC(LEN2,DATAPTR),NULITEM  IS THIS THE START OF   S21016 83300021
*                                      A NULL ITEM?              S21016 83370021
         BE    USER0060                IF SO, GO TO SKIP IT      S21016 83440021
         LA    DATAPTR,UNIT(DATAPTR)   UPDATE BY ONE BYTE        S21016 83510021
         BCT   RECLEN,USER0040         GO TO CONTINUE SCANNING   S21016 83580021
*                                      FOR A NULL ITEM UNTIL THE S21016 83650021
*                                      COUNT IS EXHAUSTED        S21016 83720021
         LA    RECLEN,TRUDLEN          RESTORE NORMAL REC.LENGTH S21016 83790021
         L     DATAPTR,DPTRSAV         RESTORE DATA POINTER      S21016 83860021
         B     USER0100                GO TO PROCESS THE DATA    S21016 83930021
USER0060 ST    DATALEN,DLENSAV         SAVE LENGTH OF DATA       S21016 84000021
         MVC   NULLEN(LEN2),LEN2(DATAPTR)  GET LENGTH OF NULL    S21016 84070021
*                                      ITEM                      S21016 84140021
         LR    DATALEN,DATAPTR         GET STARTING ADDR. OF     S21016 84210021
*                                      NULL ITEM                 S21016 84280021
         S     DATALEN,DPTRSAV         SUBTRACT STARTING ADDR.   S21016 84350021
*                                      OF DATA FOR LENGTH OF     S21016 84420021
*                                      GOOD DATA PRECEEDING THE  S21016 84490021
*                                      NULL ITEM                 S21016 84560021
         LTR   DATALEN,DATALEN         TEST LENGTH OF GOOD DATA  S21016 84630021
         BZ    USER0080                IF ZERO, BRANCH           S21016 84700021
         CH    DATALEN,NULLEN          IS LENGTH OF GOOD DATA >  S21016 84770021
*                                      LENGTH OF NULL ITEM?      S21016 84840021
         BNH   USER0070                IF NOT, BRANCH            S21016 84910021
         OI    TEMPSW,ON               TURN SWITCH TO INDICATE   S21016 84980021
*                                      A TEMPORARY MUST BE USED  S21016 85050021
*                                      TO MOVE DATA              S21016 85120021
USER0070 LR    MVCPTR,DATAPTR          GET STARTING ADDR. OF     S21016 85190021
*                                      NULL ITEM                 S21016 85260021
         AH    MVCPTR,NULLEN           ADD LENGTH OF NULL ITEM   S21016 85330021
*                                      TO POINT TO END OF IT     S21016 85400021
         SR    MVCPTR,DATALEN          SUBTRACT LENGTH OF GOOD   S21016 85470021
*                                      DATA TO DETERMINE ADDR.   S21016 85540021
*                                      GOOD DATA SHOULD GO TO    S21016 85610021
         BCTR  DATALEN,LOC             SUBTRACT 1 FROM LENGTH OF S21016 85680021
*                                      GOOD DATA FOR MOVE        S21016 85750021
         L     DATAPTR,DPTRSAV         POINT BACK TO START OF    S21016 85820021
*                                      GOOD DATA                 S21016 85890021
         TM    TEMPSW,ON               IS TEMPORARY NEEDED FOR   S21016 85960021
*                                      MOVE?                     S21016 86030021
         BNO   USER0075                IF NOT, BRANCH            S21016 86100021
         ST    MVCPTR,MPTRSAV          SAVE POINTER TO MOVE      S21016 86170021
*                                      DESTINATION               S21016 86240021
         LA    MVCPTR,DATATEMP         POINT TO TEMPORARY        S21016 86310021
         EX    DATALEN,DATAMVC         MOVE DATA TO TEMPORARY    S21016 86380021
         LR    DATAPTR,MVCPTR          POINT TO TEMPORARY        S21016 86450021
         L     MVCPTR,MPTRSAV          RESTORE MOVE DESTINATION  S21016 86520021
         NI    TEMPSW,OFF              TURN OFF SWITCH           S21016 86590021
USER0075 EX    DATALEN,DATAMVC         MOVE THE GOOD DATA OVER   S21016 86660021
*                                      THE NULL ITEM             S21016 86730021
USER0080 L     DATALEN,DLENSAV         RESTORE THE LENGTH OF     S21016 86800021
*                                      DATA REMAINING IN TABLE   S21016 86870021
         SH    DATALEN,NULLEN          SUBTRACT LENGTH OF NULL   S21016 86940021
*                                      ITEM JUST OVERWRITTEN     S21016 87010021
         L     DATAPTR,DPTRSAV         RESTORE THE ADDR. OF NEXT S21016 87080021
*                                      DATA TO BE PROCESSED      S21016 87150021
         AH    DATAPTR,NULLEN          ADD LENGTH OF NULL ITEM   S21016 87220021
         B     USERLOOP                GO TO SEE IF THERE ARE    S21016 87290021
*                                      MORE NULL ITEMS           S21016 87360021
USER0100 CR    DATALEN,RECLEN          COMPARE LENGTH OF DATA IN S21016 87430021
*                                      TABLE TO AMOUNT OF DATA   S21016 87500021
*                                      WHICH CAN GO ONTO ONE REC S21016 87570021
         BNH   LASTUSER                IF REMAINING DATA CAN GO  S21016 87640021
*                                      ONTO ONE RECORD, BRANCH   S21016 87710021
         MVI   IDRBYTCT,TRUDMAX        ELSE, SET BYTE COUNT TO   S21016 87780021
*                                      MAX LENGTH FOR ONE REC    S21016 87850021
         MVC   TRUDATA(TRUDLEN),LOC(DATAPTR)  MOVE DATA FROM     S21016 87920021
*                                      TABLE TO FILL ONE RECORD  S21016 87990021
*                                      IN BUFFER                 S21016 88060021
         BAL   TEMPRTN,OUT00990        GO TO WRITE THE RECORD    S21016 88130021
         LA    DATAPTR,TRUDLEN(DATAPTR)  UPDATE POINTER TO DATA  S21016 88200021
*                                      BY AMOUNT JUST WRITTEN    S21016 88270021
         SR    DATALEN,RECLEN          UPDATE LENGTH OF DATA     S21016 88340021
*                                      REMAINING IN TABLE        S21016 88410021
         B     USERLOOP                LOOP TO CONTINUE          S21016 88480021
*                                      PROCESSING THE            S21016 88550021
*                                      REMAINING DATA            S21016 88620021
LASTUSER BCTR  DATALEN,LOC             SUBTRACT ONE FROM DATA    S21016 88690021
*                                      LENGTH FOR ZERO-ORIENTED  S21016 88760021
*                                      MOVE LENGTH               S21016 88830021
         EX    DATALEN,MOVETRUD        EXECUTE MOVE OF REMAINING S21016 88900021
*                                      DATA TO IDR BUFFER        S21016 88970021
         LA    DATALEN,ADDLEN(DATALEN) ADD 3 TO MOVE LENGTH TO   S21016 89040021
*                                      GET CORRECT BYTE COUNT    S21016 89110021
*                                      FOR THIS RECORD           S21016 89180021
         STC   DATALEN,IDRBYTCT        STORE BYTE COUNT INTO     S21016 89250021
*                                      BUFFER                    S21016 89320021
         LA    WRITECT,UNIT(DATALEN)   ADD ONE TO BYTE COUNT FOR S21016 89390021
*                                      ACTUAL RECORD LENGTH      S21016 89460021
         B     USERDONE                GO TO PROCESS LAST REC    S21016 89530021
*                                                                     * 89600021
MOVETRUD MVC   TRUDATA(TRUDLEN),LOC(DATAPTR)                            89650002
MOVEINST MVC   0(1,TEMP2),0(NOTL1ADD)     MOVE NOTE LIST 1 TO NOTE LST2 89670021
ZEROHIID XC    0(1,HIIDTAB),0(HIIDTAB)   ZERO                           89740021
SAVE1415 DC    2F'0'                    SAVE AREA FOR REGS 14 AND 15    89810021
WORD     DC    F'0'                                                     89880021
FOUR     DC    H'4'                                                     89950021
SWITCH   DC    X'00'               SWITCHES AND INCICATORS              90020021
TXTIOLP  EQU   X'80'               TXTIO LOOP INDICATOR                 90090021
*        OTHER BITS OF SWITCH --SPARE                                   90160021
*********************************************************************** 90230021
*********************************************************************** 90300021
TPASSVCN DC    V(HEWLFSCD)              ADDR OF 2ND PASS PROCESSOR      90370021
FNALVCON DC    V(HEWLFFNL)              ADDR OF FINAL  PROCESSOR        90440021
MAPAD    DC    V(HEWLFMAP)             ADDRESS OF MAP PROCESSOR         90510021
DEFADDR  DC    V(HEWLFDEF)             ADDRESS OF MDEF CSECT     S21016 90580021
ADHIID   DC    A(SEGLNTAB)         ADDRESS OF ADDRESS OF TABLE          90650021
DCBINTER DC    AL4(HEWLCUDB)            SYSUT1 DCB                      90720021
SYSMDDCB EQU   *                                                        90790021
DCBLMOD  DC    AL4(HEWLCMDB)            SYSLMOD DCB                     90860021
         SPACE 1                                                 S21016 90930021
******************** IDR DEFINED CONSTANTS **********************S21016 91000021
         SPACE 1                                                 S21016 91070021
IDRZHDR  DC    X'80FA0100'             RECORD HEADER FOR IDR     S21016 91140021
*                                      SPZAP RECORDS             S21016 91210021
ZAPSIZE  DC    F'13'                   SIZE OF AN SPZAP ENTRY    S21016 91280021
LKIDR    DC    X'801102'               LKED IDR HEADER           S21016 91350021
         DC    CL10'5752SC104'         LKED COMP NAME    S21016,ZA01402 91420002
LKRELNO  DS    XL2'2100'               LKED VERSION/MODIFICATION S21016 91490021
*                                      LEVEL (=OS RELEASE LEVEL) S21016 91560021
NULITEM  DC    X'FFFF'                 NULL ITEM INDICATOR        M1602 91630021
DATAMVC  MVC   LOC(LOC,MVCPTR),LOC(DATAPTR)  EXECUTED MOVE       S21016 91700021
TEMPSW   DC    X'00'                   'TEMPORARY NEEDED FOR     S21016 91770021
*                                      MOVE' SWITCH (WHEN LOW    S21016 91840021
*                                      ORDER BIT = 1)            S21016 91910021
         SPACE 1                                                 S21016 91980021
******************** IDR DEFINED STORAGE ********************    S21016 92050021
         SPACE 1                                                 S21016 92120021
IDRBUF   DS    CL256                   IDR BUFFER                S21016 92190021
DATATEMP DS    CL253                   WORK AREA FOR DATA MOVING S21016 92260021
MPTRSAV  DS    F                       SAVEAREA FOR MOVE POINTER S21016 92330021
DPTRSAV  DS    F                       SAVEAREA FOR DATA POINTER S21016 92400021
DLENSAV  DS    F                       SAVEAREA FOR DATA LENGTH  S21016 92470021
TEMPSAVE DS    12F                     TEMPORARY SAVE AREA FOR   S21016 92540021
*                                      IDR OUTPUT SUBROUTINE     S21016 92610021
TIMESAVE DS    F                       SAVE AREA FOR REG 0       S21016 92680021
*                                      FOR TIME MACRO            S21016 92750021
DATESAVE DS    F                       SAVE AREA FOR REG 1       S21016 92820021
*                                      FOR TIME MACRO            S21016 92890021
NULLEN   DS    H                       LENGTH OF A NULL ITEM     S21016 92960021
OBUFEND  DS    F                       SAVEAREA FOR BUFFER END  OX04245 93010002
         SPACE 2                                                 S21016 93030021
*****************************************************************S21016 93100021
**********         SYMBOLIC DISPLACEMENTS WITHIN       **********S21016 93170021
**********          IDR DEFINED STORAGE FIELDS         **********S21016 93240021
*****************************************************************S21016 93310021
         SPACE 2                                                 S21016 93380021
ZAPDATA  EQU   IDRBUF+4                LOCATION IN IDR BUFFER    S21016 93450021
*                                      WHERE SPZAP DATA IS       S21016 93520021
*                                      PLACED                    S21016 93590021
ZAPDAT1  EQU   IDRBUF+5                SECOND BYTE OF SPZAP DATA S21016 93660021
ZAPCNT   EQU   IDRBUF+3                LOCATION OF COUNT FIELD   S21016 93730021
*                                      IN IDR BUFFER FOR SPZAP   S21016 93800021
*                                      DATA                      S21016 93870021
LKDATE   EQU   IDRBUF+15               LOCATION FOR LKED DATE    S21016 93940021
*                                      IN IDR BUFFER             S21016 94010021
DATESAV  EQU   DATESAVE+1              LOCATION OF 1ST BYTE OF   S21016 94080021
*                                      PACKED DECIMAL DATE IN    S21016 94150021
*                                      WORD RETURNED BY TIME     S21016 94220021
*                                      MACRO                     S21016 94290021
SUBTYPE  EQU   IDRBUF+2                LOCATION OF SUBTYPE FIELD S21016 94360021
*                                      IN IDR BUFFER             S21016 94430021
IDRBYTCT EQU   IDRBUF+1                IDR BYTE COUNT FIELD      S21016 94500021
TRUDATA  EQU   IDRBUF+3                STARTING LOCATION OF USER S21016 94570021
*                                      OR TRANSLATOR DATA IN IDR S21016 94640021
*                                      BUFFER                    S21016 94710021
***************** END OF IDR SUPPORT ADDITIONS ***************** S21016 94780021
         SPACE 3                                                 S21016 94850021
PATCH    DC    C'PATCH AREA',43F'0'  *** MAINTENANCE AREA ***           94920037
*                                                                       94990021
*              TEMPORY ERROR PARMS  -  MESSAGE NUMBER IN DECIMAL        95060021
*                                                                       95130021
DISP1    EQU   X'03'                    DISP=0  SEV = 3                 95200021
MESS1    EQU   14                       NO TXT IN LOAD MOD              95270021
         DS    0F                                                       95340021
*                                                                       95410021
ERRPARM1 DC    AL1(DISP1)               NO TXT IN LOAD MODULE           95480021
         DC    AL1(MESS1)                                               95550021
         HEWAPT                                                         95620021
DEFDSECT DSECT                                                          95690021
         DS    CL4                                               S21016 95760021
         DS    AL4                                               S21016 95830021
         DS    AL4                                               S21016 95900021
         DS    AL4                                               S21016 95970021
         DS    CL4                                               S21016 96040021
SGRELNO  DS    CL4                     SYSGEN-ASSIGNED OS        S21016 96110021
*                                      RELEASE NUMBER            S21016 96180021
         END                                                            96250021
