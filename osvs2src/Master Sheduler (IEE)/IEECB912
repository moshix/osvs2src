B912     TITLE 'IEECB912  MLWTO CONTINUATION PROCESSOR                 *00001000
                        '                                               00002000
IEECB912 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(19)                                             0001 00007000
         DC    C'IEECB912R0300077006'                              0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
         MVC   @PC00001(24),0(@01)                                 0001 00022000
*                                                                  0022 00023000
*   /*****************************************************************/ 00024000
*   /*                                                               */ 00025000
*   /* CHECK TO SEE IF THERE WAS AN ERROR RETURN CODE FROM A PREVIOUS*/ 00026000
*   /* CALL TO WTO                                                   */ 00027000
*   /*                                                               */ 00028000
*   /*****************************************************************/ 00029000
*                                                                  0022 00030000
*   IF WAREAPTR=WTOERROR THEN       /* YES THERE WAS                 */ 00031000
         L     @10,@PC00001+20                                     0022 00032000
         CLC   WAREAPTR(4,@10),@CF00190                            0022 00033000
         BNE   @RF00022                                            0022 00034000
*     RETURN CODE(4);               /* SO THROW AWAY THE TEXT AND  0023 00035000
*                                      QUIT. NO FURTHER ATTEMPT    0023 00036000
*                                      SHOULD BE MADE TO WRITE OUT TO   00037000
*                                      THIS MLWTO ID                 */ 00038000
*                                                                  0023 00039000
         L     @13,4(,@13)                                         0023 00040000
         L     @00,@SIZDATD                                        0023 00041000
         LR    @01,@11                                             0023 00042000
         FREEMAIN R,LV=(0),A=(1)                                        00043000
         LA    @15,4                                               0023 00044000
         L     @14,12(,@13)                                        0023 00045000
         LM    @00,@12,20(@13)                                     0023 00046000
         BR    @14                                                 0023 00047000
*   /*****************************************************************/ 00048000
*   /*                                                               */ 00049000
*   /* INIT AND IF NECESSARY DROP ANY TRAILING BLANKS FROM THE TEXT  */ 00050000
*   /* TO BE PROCESSED                                               */ 00051000
*   /*                                                               */ 00052000
*   /*****************************************************************/ 00053000
*                                                                  0024 00054000
*   IF WAREAPTR=0                   /* CHECK TO SEE IF THIS IS THE 0024 00055000
*                                      FIRST CALL IN                 */ 00056000
*     THEN                                                         0024 00057000
@RF00022 L     @10,@PC00001+20                                     0024 00058000
         ICM   @03,15,WAREAPTR(@10)                                0024 00059000
         BNZ   @RF00024                                            0024 00060000
*     WAREAPTR=ADDR(WTOAREA);       /* INIT THE WAREAPTR             */ 00061000
         LA    @03,WTOAREA(,@10)                                   0025 00062000
         ST    @03,WAREAPTR(,@10)                                  0025 00063000
*   CONTINUE=BITOFF;                /* INIT                          */ 00064000
@RF00024 NI    CONTINUE,B'01111111'                                0026 00065000
*   START=ADDR(TEXT);               /* INIT                          */ 00066000
         L     START,@PC00001                                      0027 00067000
         LA    @10,TEXT(,START)                                    0027 00068000
         LR    START,@10                                           0027 00069000
*   DO SCANPTR=START+TEXTLEN-1 TO START BY-1/* SCAN BACKWARDS TO DROP   00070000
*                                      TRAILING BLANKS               */ 00071000
*         WHILE CHAR=' ';           /* STOP WHEN A NONBLANK IS FOUND */ 00072000
         L     @10,@PC00001                                        0028 00073000
         LR    SCANPTR,START                                       0028 00074000
         SLR   @04,@04                                             0028 00075000
         IC    @04,TEXTLEN(,@10)                                   0028 00076000
         ALR   SCANPTR,@04                                         0028 00077000
         BCTR  SCANPTR,0                                           0028 00078000
         B     @DE00028                                            0028 00079000
@DL00028 CLI   CHAR(SCANPTR),C' '                                  0028 00080000
         BNE   @DC00028                                            0028 00081000
*   END;                                                           0029 00082000
         BCTR  SCANPTR,0                                           0029 00083000
@DE00028 CR    SCANPTR,START                                       0029 00084000
         BNL   @DL00028                                            0029 00085000
@DC00028 DS    0H                                                  0030 00086000
*   ENDPTR=SCANPTR+1;               /* POINT TO BYTE FOLLOWING LAST     00087000
*                                      NONBLANK IN THE LINE          */ 00088000
         LA    ENDPTR,1                                            0030 00089000
         ALR   ENDPTR,SCANPTR                                      0030 00090000
*                                                                  0031 00091000
*   /*****************************************************************/ 00092000
*   /*                                                               */ 00093000
*   /* LOOP ONCE FOR EACH MLWTO LINE GENERATED FRON THE INPUT TEXT   */ 00094000
*   /*                                                               */ 00095000
*   /*****************************************************************/ 00096000
*                                                                  0031 00097000
*   DO WHILE START<ENDPTR;          /* PROCESS THE WHOLE INPUT LINE  */ 00098000
         B     @DE00031                                            0031 00099000
@DL00031 DS    0H                                                  0032 00100000
*     IF CONTINUE=BITOFF            /* IS THIS BEGINNING A NEW LINE     00101000
*                                      OR CONTINUING AN OLD ONE      */ 00102000
*       THEN                        /* THIS IS THE BEGINNING OF A THE   00103000
*                                      LINE OF INPUT TEXT            */ 00104000
         TM    CONTINUE,B'10000000'                                0032 00105000
         BNZ   @RF00032                                            0032 00106000
*       DO;                                                        0033 00107000
*         MAXLEN=MAXWTO;            /* THE AMOUNT OF TEXT THAT MAY BE   00108000
*                                      PUT ON THIS LINE IS THE MAX 0034 00109000
*                                      THAT WTO WILL ALLOW           */ 00110000
         LA    MAXLEN,70                                           0034 00111000
*         WTOLEN=0;                 /* INIT LENGTH COUNT             */ 00112000
         SLR   WTOLEN,WTOLEN                                       0035 00113000
*       END;                                                       0036 00114000
*     ELSE                          /* THIS IS A MLWTO CONTINUATION     00115000
*                                      LINE FOR THE INPUT TEXT       */ 00116000
*       DO;                                                        0037 00117000
         B     @RC00032                                            0037 00118000
@RF00032 DS    0H                                                  0038 00119000
*         MAXLEN=MAXWTO-CONTCOL+1;  /* THE AMOUNT OF TEXT THAT MAY BE   00120000
*                                      PUT ON THIS LINE IS REDUCED BY   00121000
*                                      THE NEED FOR INDENTING        */ 00122000
         L     @10,@PC00001+8                                      0038 00123000
         L     @10,CONTCOL(,@10)                                   0038 00124000
         LA    MAXLEN,70                                           0038 00125000
         SLR   MAXLEN,@10                                          0038 00126000
         AH    MAXLEN,@CH00062                                     0038 00127000
*         WTOLEN=CONTCOL-1;         /* START OFF WITH THE LENGTH OF     00128000
*                                      BLANKS AT THE HEAD OF THE LINE*/ 00129000
         BCTR  @10,0                                               0039 00130000
         LR    WTOLEN,@10                                          0039 00131000
*       END;                                                       0040 00132000
*                                                                  0041 00133000
*     /***************************************************************/ 00134000
*     /*                                                             */ 00135000
*     /* FIND THE END OF THE NEXT MLWTO LINE TO BE GENERATED FROM THE*/ 00136000
*     /* INPUT TEXT                                                  */ 00137000
*     /*                                                             */ 00138000
*     /***************************************************************/ 00139000
*                                                                  0041 00140000
*     IF(ENDPTR-START<=MAXLEN)      /* WILL THE REMAINING TEXT ALL 0041 00141000
*                                      FIT ON THE NEXT LINE          */ 00142000
*       THEN                        /* YES IT WILL                   */ 00143000
@RC00032 LR    @10,ENDPTR                                          0041 00144000
         SLR   @10,START                                           0041 00145000
         CR    @10,MAXLEN                                          0041 00146000
         BH    @RF00041                                            0041 00147000
*       TRUELEN=ENDPTR-START;       /* THEN TAKE IT ALL              */ 00148000
         LR    TRUELEN,@10                                         0042 00149000
*     ELSE                                                         0043 00150000
*       DO;                         /* NO IT WON'T, SO FIND A BREAK     00151000
*                                      POINT                         */ 00152000
         B     @RC00041                                            0043 00153000
@RF00041 DS    0H                                                  0044 00154000
*         TRUELEN=MAXLEN;           /* SET UP FOR THE DEFAULT BREAK     00155000
*                                      POINT IN CASE NOTHING BETTER     00156000
*                                      IS FOUND WITHIN THE SCANBACK     00157000
*                                      RANGE                         */ 00158000
         LR    TRUELEN,MAXLEN                                      0044 00159000
*         SCANEND=START+TRUELEN-1;  /* CALC END CONDITION FOR LOOP   */ 00160000
         LR    @10,START                                           0045 00161000
         ALR   @10,TRUELEN                                         0045 00162000
         LR    SCANEND,@10                                         0045 00163000
         BCTR  SCANEND,0                                           0045 00164000
*         DO SCANPTR=(START+TRUELEN-SCANBACK) TO SCANEND BY 1;/* SCAN   00165000
*                                      LOOKING FOR A BREAK POINT     */ 00166000
         L     @09,@PC00001+4                                      0046 00167000
         SL    @10,SCANBACK(,@09)                                  0046 00168000
         LR    SCANPTR,@10                                         0046 00169000
         B     @DE00046                                            0046 00170000
@DL00046 DS    0H                                                  0047 00171000
*           IF CHAR=' '|CHAR=','    /* IS THIS A BREAK CHAR          */ 00172000
*             THEN                                                 0047 00173000
         CLI   CHAR(SCANPTR),C' '                                  0047 00174000
         BE    @RT00047                                            0047 00175000
         CLI   CHAR(SCANPTR),C','                                  0047 00176000
         BNE   @RF00047                                            0047 00177000
@RT00047 DS    0H                                                  0048 00178000
*             TRUELEN=SCANPTR+1-START;/* CHANGE THE LENGTH TO POINT     00179000
*                                      TO THIS BREAK POINT WHICH IS     00180000
*                                      THE BEST ONE FOUND SO FAR     */ 00181000
         LA    TRUELEN,1                                           0048 00182000
         ALR   TRUELEN,SCANPTR                                     0048 00183000
         SLR   TRUELEN,START                                       0048 00184000
*         END;                      /* CONTINUE LOOKING FOR A BETTER    00185000
*                                      BREAK POINT                   */ 00186000
@RF00047 AH    SCANPTR,@CH00062                                    0049 00187000
@DE00046 CR    SCANPTR,SCANEND                                     0049 00188000
         BNH   @DL00046                                            0049 00189000
*       END;                        /* OF FINDING A BREAK POINT      */ 00190000
*     WTOLEN=WTOLEN+TRUELEN;        /* ADD TO THE ACCUMULATED WTO  0051 00191000
*                                      LENGTH THE LENGTH OF THE TEXT    00192000
*                                      TO BE ADDED                   */ 00193000
@RC00041 ALR   WTOLEN,TRUELEN                                      0051 00194000
*                                                                  0052 00195000
*     /***************************************************************/ 00196000
*     /*                                                             */ 00197000
*     /* BUILD THE MLWTO PARMLIST SECTION FOR THIS LINE AND          */ 00198000
*     /* ACCUMULATE IT IN THE BUFFER                                 */ 00199000
*     /*                                                             */ 00200000
*     /***************************************************************/ 00201000
*                                                                  0052 00202000
*     IF WAREAPTR=ADDR(WTOAREA)     /* CHECK TO SEE IF A NEW MLWTO 0052 00203000
*                                      BUFFER SHOULD BE STARTED      */ 00204000
*       THEN                        /* YES A NEW BUFFER SHOULD BE  0052 00205000
*                                                             STARTED*/ 00206000
         L     @10,@PC00001+20                                     0052 00207000
         L     @03,WAREAPTR(,@10)                                  0052 00208000
         LA    @15,WTOAREA(,@10)                                   0052 00209000
         CR    @03,@15                                             0052 00210000
         BNE   @RF00052                                            0052 00211000
*       DO;                                                        0053 00212000
*         WPLPTR=ADDR(WTODUMMY);    /* BASE WPL MAP ON LIST FORM   0054 00213000
*                                      MLWTO MACRO TO GET THE MCS  0054 00214000
*                                      FLGS ETC                      */ 00215000
         LA    WPLPTR,WTODUMMY                                     0054 00216000
*         WAREAPTR->WPLLGH=WTOLEN+LENGTH(WPLLS01);/* FILL IN LENGTH     00217000
*                                      FIELD                         */ 00218000
         LA    @15,4                                               0055 00219000
         ALR   @15,WTOLEN                                          0055 00220000
         STH   @15,WPLLGH(,@03)                                    0055 00221000
*         WAREAPTR->WPLMCSF=WPLMCSF;/* COPY PARMS                    */ 00222000
         MVC   WPLMCSF(2,@03),WPLMCSF(WPLPTR)                      0056 00223000
*         IF CONTINUE=BITON         /* IS THE NEXT LINE TO BE      0057 00224000
*                                      GENERATED AS A CONTINUATION OF   00225000
*                                      THE ONE BEFORE                */ 00226000
*           THEN                                                   0057 00227000
         TM    CONTINUE,B'10000000'                                0057 00228000
         BNO   @RF00057                                            0057 00229000
*           DO;                     /* YES                           */ 00230000
*             WAREAPTR->WPLTXT(1:CONTCOL-1)=BLANKS(1:CONTCOL-1);/* 0059 00231000
*                                      BLANK OUT THE PORTION OF THE     00232000
*                                      MLWTO LINE PRECEDING THE    0059 00233000
*                                      CONTINUATION                  */ 00234000
         L     @07,@PC00001+8                                      0059 00235000
         L     @07,CONTCOL(,@07)                                   0059 00236000
         LR    @15,@07                                             0059 00237000
         BCTR  @15,0                                               0059 00238000
         BCTR  @15,0                                               0059 00239000
         EX    @15,@SM00232                                        0059 00240000
*             WAREAPTR=WAREAPTR+CONTCOL-1;/* CHANGE THE MAPPING BASE    00241000
*                                      TO COMPENSATE FOR THE BLANKS     00242000
*                                      ADDED                         */ 00243000
         ALR   @03,@07                                             0060 00244000
         BCTR  @03,0                                               0060 00245000
         ST    @03,WAREAPTR(,@10)                                  0060 00246000
*           END;                                                   0061 00247000
*         WAREAPTR->WPLTXT(1:TRUELEN)=CHARSTR(1:TRUELEN);/* MOVE IN     00248000
*                                      THE TEXT                      */ 00249000
@RF00057 L     @10,@PC00001+20                                     0062 00250000
         L     @07,WAREAPTR(,@10)                                  0062 00251000
         LR    @03,TRUELEN                                         0062 00252000
         BCTR  @03,0                                               0062 00253000
         EX    @03,@SM00234                                        0062 00254000
*         WAREAPTR=ADDR(WAREAPTR->WPLTXT)+TRUELEN;/* SHIFT TO THE END   00255000
*                                      OF TEXT                       */ 00256000
         LA    @07,WPLTXT(,@07)                                    0063 00257000
         ALR   @07,TRUELEN                                         0063 00258000
         ST    @07,WAREAPTR(,@10)                                  0063 00259000
*         IF LINETYPE=LABLINE       /* CHECK WHICH TYPE OF LINE THIS    00260000
*                                      IS                            */ 00261000
*           THEN                    /* IF THIS IS A LABEL LINE       */ 00262000
         L     @10,@PC00001+12                                     0064 00263000
         CLI   LINETYPE(@10),X'01'                                 0064 00264000
         BNE   @RF00064                                            0064 00265000
*           WPLPTR=ADDR(WD1);       /* SHIFT THE WTO MAPPING BASE ON    00266000
*                                      THE LIST FORM WTO TO THE LABEL   00267000
*                                      LINE PORTION                  */ 00268000
         LA    WPLPTR,WD1                                          0065 00269000
*         ELSE                      /* IF NOT A LABEL LINE           */ 00270000
*           WPLPTR=ADDR(WD2);       /* THEN SHIFT WPLPTR TO THE DATA    00271000
*                                      LINE IN THE LIST FORM WTO     */ 00272000
         B     @RC00064                                            0066 00273000
@RF00064 LA    WPLPTR,WD2                                          0066 00274000
*         WAREAPTR->WPLLTF=WPLMLLTF;/* COPY WTO FLAGS                */ 00275000
@RC00064 L     @10,@PC00001+20                                     0067 00276000
         L     @07,WAREAPTR(,@10)                                  0067 00277000
         MVC   WPLLTF(2,@07),WPLMLLTF(WPLPTR)                      0067 00278000
*         LSTFLGP=ADDR(WAREAPTR->WPLLTF);/* SAVE THE ADDRESS OF THE     00279000
*                                      LAST FLAG FIELD UPDATED SO  0068 00280000
*                                      THAT IT CAN BE REPLACED WITH     00281000
*                                      AN END OF MLWTO VERSION IF  0068 00282000
*                                      THIS TURNS OUT TO BE THE LAST    00283000
*                                      LINE                          */ 00284000
         LR    LSTFLGP,@07                                         0068 00285000
*         NUMLNPTR=ADDR(WAREAPTR->WPLLINES);/* SAVE THE ADDR OF WHERE   00286000
*                                      THE # OF LINES FIELD IS     0069 00287000
*                                      BECAUSE THERE IS NO WAY TO  0069 00288000
*                                      FIND IT LATER WHEN THE # OF 0069 00289000
*                                      LINES IS KNOWN                */ 00290000
         LA    @15,WPLLINES(,@07)                                  0069 00291000
         ST    @15,NUMLNPTR(,@10)                                  0069 00292000
*         NUMLINES=1;               /* INIT THE WTO PARM LIST LINE 0070 00293000
*                                      CNT                           */ 00294000
         MVI   NUMLINES(@15),X'01'                                 0070 00295000
*         WAREAPTR=WAREAPTR+LENGTH(WPLLS01);/* MOVE THE MAPPING BASE    00296000
*                                      PAST THE END OF THE LIST FOR     00297000
*                                      THIS LINE                     */ 00298000
         AH    @07,@CH00180                                        0071 00299000
         ST    @07,WAREAPTR(,@10)                                  0071 00300000
*       END;                                                       0072 00301000
*     ELSE                          /* FOR MLWTO LINES OTHER THAN THE   00302000
*                                      FIRST IN A GROUP              */ 00303000
*       DO;                                                        0073 00304000
         B     @RC00052                                            0073 00305000
@RF00052 DS    0H                                                  0074 00306000
*         IF LINETYPE=LABLINE       /* CHECK WHICH TYPE OF LINE THIS    00307000
*                                      IS                            */ 00308000
*           THEN                    /* IF THIS IS A LABEL LINE       */ 00309000
         L     @10,@PC00001+12                                     0074 00310000
         CLI   LINETYPE(@10),X'01'                                 0074 00311000
         BNE   @RF00074                                            0074 00312000
*           WPLPTR=ADDR(WD1);       /* SHIFT THE WTO MAPPING BASE ON    00313000
*                                      THE LIST FORM WTO TO THE LABEL   00314000
*                                      LINE PORTION                  */ 00315000
         LA    WPLPTR,WD1                                          0075 00316000
*         ELSE                      /* IF NOT A LABEL LINE           */ 00317000
*           WPLPTR=ADDR(WD2);       /* BASE WPL MAP ON LIST FORM WTO    00318000
*                                      MACRO SECOND PART (A DATA   0076 00319000
*                                      LINE)                         */ 00320000
         B     @RC00074                                            0076 00321000
@RF00074 LA    WPLPTR,WD2                                          0076 00322000
*         WAREAPTR->WPLLGH=WTOLEN+LENGTH(WPLLS01);/* FILL IN LENGTH     00323000
*                                      FIELD                         */ 00324000
@RC00074 L     @10,@PC00001+20                                     0077 00325000
         L     @15,WAREAPTR(,@10)                                  0077 00326000
         LA    @14,4                                               0077 00327000
         ALR   @14,WTOLEN                                          0077 00328000
         STH   @14,WPLLGH(,@15)                                    0077 00329000
*         WAREAPTR->WPLMLLTF=WPLMLLTF;/* COPY FLAGS                  */ 00330000
         MVC   WPLMLLTF(2,@15),WPLMLLTF(WPLPTR)                    0078 00331000
*         LSTFLGP=ADDR(WAREAPTR->WPLMLLTF);/* SAVE THE ADDRESS OF THE   00332000
*                                      LAST FLAG FIELD UPDATED SO  0079 00333000
*                                      THAT IT CAN BE REPLACED WITH     00334000
*                                      AN END OF MLWTO VERSION IF  0079 00335000
*                                      THIS TURNS OUT TO BE THE LAST    00336000
*                                      LINE                          */ 00337000
         LA    LSTFLGP,WPLMLLTF(,@15)                              0079 00338000
*         IF CONTINUE=BITON         /* IS THE NEXT LINE TO BE      0080 00339000
*                                      GENERATED A CONTINUATION OF 0080 00340000
*                                      THE ONE BEFORE                */ 00341000
*           THEN                                                   0080 00342000
         TM    CONTINUE,B'10000000'                                0080 00343000
         BNO   @RF00080                                            0080 00344000
*           DO;                                                    0081 00345000
*             WAREAPTR->WPLTXT(1:CONTCOL-1)=BLANKS(1:CONTCOL-1);/* 0082 00346000
*                                      BLANK OUT THE PORTION OF THE     00347000
*                                      MLWTO LINE PRECEDING THE    0082 00348000
*                                      CONTINUATION                  */ 00349000
         L     @07,@PC00001+8                                      0082 00350000
         L     @07,CONTCOL(,@07)                                   0082 00351000
         LR    @14,@07                                             0082 00352000
         BCTR  @14,0                                               0082 00353000
         BCTR  @14,0                                               0082 00354000
         EX    @14,@SM00236                                        0082 00355000
*             WAREAPTR=WAREAPTR+CONTCOL-1;/* CHANGE THE MAPPING BASE    00356000
*                                      TO COMPENSATE FOR THE BLANKS     00357000
*                                      ADDED                         */ 00358000
         ALR   @15,@07                                             0083 00359000
         BCTR  @15,0                                               0083 00360000
         ST    @15,WAREAPTR(,@10)                                  0083 00361000
*           END;                                                   0084 00362000
*         WAREAPTR->WPLTXT(1:TRUELEN)=CHARSTR(1:TRUELEN);/* MOVE IN     00363000
*                                      THE TEXT                      */ 00364000
@RF00080 L     @10,@PC00001+20                                     0085 00365000
         L     @07,WAREAPTR(,@10)                                  0085 00366000
         LR    @15,TRUELEN                                         0085 00367000
         BCTR  @15,0                                               0085 00368000
         EX    @15,@SM00234                                        0085 00369000
*         WAREAPTR=ADDR(WAREAPTR->WPLTXT)+TRUELEN;/* SHIFT TO THE END   00370000
*                                      OF TEXT                       */ 00371000
         LA    @07,WPLTXT(,@07)                                    0086 00372000
         ALR   @07,TRUELEN                                         0086 00373000
         ST    @07,WAREAPTR(,@10)                                  0086 00374000
*         NUMLINES=NUMLINES+1;      /* BUMP COUNT OF LINES IN THIS 0087 00375000
*                                      GROUP                         */ 00376000
         L     @10,NUMLNPTR(,@10)                                  0087 00377000
         LA    @07,1                                               0087 00378000
         SLR   @15,@15                                             0087 00379000
         IC    @15,NUMLINES(,@10)                                  0087 00380000
         ALR   @07,@15                                             0087 00381000
         STC   @07,NUMLINES(,@10)                                  0087 00382000
*       END;                                                       0088 00383000
*     START=START+TRUELEN;          /* ADVANCE TO THE NEXT TEXT TO BE   00384000
*                                      PROCESSED                     */ 00385000
@RC00052 ALR   START,TRUELEN                                       0089 00386000
*                                                                  0090 00387000
*     /***************************************************************/ 00388000
*     /*                                                             */ 00389000
*     /* CALL WTO VIA THE SVC IF THE BUFFER IS FULL OR THE END HAS   */ 00390000
*     /* HAS BEEN SIGNALED                                           */ 00391000
*     /*                                                             */ 00392000
*     /***************************************************************/ 00393000
*                                                                  0090 00394000
*     IF NUMLINES=10                /* CHECK FOR MAX GROUP SIZE      */ 00395000
*         |(START=ENDPTR&LINETYPE=ENDLINE)/* OR THE END              */ 00396000
*       THEN                                                       0090 00397000
         L     @10,@PC00001+20                                     0090 00398000
         L     @10,NUMLNPTR(,@10)                                  0090 00399000
         CLI   NUMLINES(@10),10                                    0090 00400000
         BE    @RT00090                                            0090 00401000
         CR    START,ENDPTR                                        0090 00402000
         BNE   @RF00090                                            0090 00403000
         L     @10,@PC00001+12                                     0090 00404000
         CLI   LINETYPE(@10),X'FF'                                 0090 00405000
         BNE   @RF00090                                            0090 00406000
@RT00090 DS    0H                                                  0091 00407000
*       DO;                         /* PASS THE MLWTO PARM LIST TO 0091 00408000
*                                      WTO                           */ 00409000
*         IF(START=ENDPTR&LINETYPE=ENDLINE)/* CHECK TO SEE IF THE END   00410000
*                                      OF DATA FLAG SHOULD BE SET    */ 00411000
*           THEN                                                   0092 00412000
         CR    START,ENDPTR                                        0092 00413000
         BNE   @RF00092                                            0092 00414000
         L     @10,@PC00001+12                                     0092 00415000
         CLI   LINETYPE(@10),X'FF'                                 0092 00416000
         BNE   @RF00092                                            0092 00417000
*           DO;                                                    0093 00418000
*             WPLPTR=ADDR(WD3);     /* BASE THE WPL MAPPING ON THE 0094 00419000
*                                      3RD PART OF THE LIST FORM WTO    00420000
*                                      (A DATA TYPE END LINE)        */ 00421000
         LA    WPLPTR,WD3                                          0094 00422000
*             LSTFLG=WPLMLLTF;      /* COPY END FLAGS INTO THE LAST     00423000
*                                      FLAG FIELD IN THE MLWTO LIST  */ 00424000
         MVC   LSTFLG(2,LSTFLGP),WPLMLLTF(WPLPTR)                  0095 00425000
*           END;                                                   0096 00426000
*         RFY                                                      0097 00427000
*          (REG0,                                                  0097 00428000
*           REG1,                                                  0097 00429000
*           RETCODE) RSTD;                                         0097 00430000
@RF00092 DS    0H                                                  0098 00431000
*         REG0=WTOREG0;                                            0098 00432000
         L     @14,@PC00001+16                                     0098 00433000
         L     REG0,WTOREG0(,@14)                                  0098 00434000
*         REG1=ADDR(WTOAREA);       /* PASS THE MLWTO CONTINUATION 0099 00435000
*                                      PARM LIST BUILT               */ 00436000
         L     REG1,@PC00001+20                                    0099 00437000
         LA    REG1,WTOAREA(,REG1)                                 0099 00438000
*MLWTO:                                                            0100 00439000
*         GEN SETS(REG1) REFS(REG0,WTOAREA) CODE(WTO MF=(E,(1)) ); 0100 00440000
MLWTO    WTO MF=(E,(1))                                                 00441000
*         IF RETCODE^=0             /* CHECK THE RETURN CODE         */ 00442000
*           THEN                    /* IF IT INDICATES AN ERROR      */ 00443000
         LTR   RETCODE,RETCODE                                     0101 00444000
         BZ    @RF00101                                            0101 00445000
*           WAREAPTR=WTOERROR;      /* SET WAREAPTR SO THAT NO     0102 00446000
*                                      ADDITIONAL ATTEMPTS WILL BE 0102 00447000
*                                      MADE TO PASS DATA TO WTO      */ 00448000
         L     @14,@PC00001+20                                     0102 00449000
         MVC   WAREAPTR(4,@14),@CF00190                            0102 00450000
*         ELSE                      /* IF THE WTO WENT OK            */ 00451000
*           WAREAPTR=ADDR(WTOAREA); /* SHOW THAT THE WTOAREA IS EMPTY   00452000
*                                      AND A NEW PARM LIST WILL HAVE    00453000
*                                      TO BE STARTED                 */ 00454000
         B     @RC00101                                            0103 00455000
@RF00101 L     @14,@PC00001+20                                     0103 00456000
         LA    @10,WTOAREA(,@14)                                   0103 00457000
         ST    @10,WAREAPTR(,@14)                                  0103 00458000
*         RFY                                                      0104 00459000
*          (REG0,                                                  0104 00460000
*           REG1,                                                  0104 00461000
*           RETCODE) UNRSTD;                                       0104 00462000
@RC00101 DS    0H                                                  0105 00463000
*       END;                                                       0105 00464000
*     CONTINUE=BITON;               /* INDICATED THAT THE LINE AFTER    00465000
*                                      THIS MUST BE A CONTINUATION   */ 00466000
@RF00090 OI    CONTINUE,B'10000000'                                0106 00467000
*   END;                            /* OF PROCESSING WHOLE INPUT LINE*/ 00468000
@DE00031 CR    START,ENDPTR                                        0107 00469000
         BL    @DL00031                                            0107 00470000
*   END IEECB912                                                   0108 00471000
*                                                                  0108 00472000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00473000
*/*%INCLUDE SYSLIB  (IEZWPL  )                                       */ 00474000
*                                                                  0108 00475000
*       ;                                                          0108 00476000
@EL00001 L     @13,4(,@13)                                         0108 00477000
@EF00001 L     @00,@SIZDATD                                        0108 00478000
         LR    @01,@11                                             0108 00479000
         FREEMAIN R,LV=(0),A=(1)                                        00480000
@ER00001 LM    @14,@12,12(@13)                                     0108 00481000
         BR    @14                                                 0108 00482000
@DATA    DS    0H                                                       00483000
@CH00062 DC    H'1'                                                     00484000
@CH00180 DC    H'4'                                                     00485000
@SM00232 MVC   WPLTXT(0,@03),BLANKS                                     00486000
@SM00234 MVC   WPLTXT(0,@07),CHARSTR(START)                             00487000
@SM00236 MVC   WPLTXT(0,@15),BLANKS                                     00488000
@DATD    DSECT                                                          00489000
         DS    0F                                                       00490000
@SA00001 DS    18F                                                      00491000
@PC00001 DS    6F                                                       00492000
IEECB912 CSECT                                                          00493000
         DS    0F                                                       00494000
@CF00190 DC    XL4'FFFFFFFF'                                            00495000
@DATD    DSECT                                                          00496000
         DS    0D                                                       00497000
CONTINUE DS    BL1                                                      00498000
IEECB912 CSECT                                                          00499000
         DS    0F                                                       00500000
@SIZDATD DC    AL1(0)                                                   00501000
         DC    AL3(@ENDDATD-@DATD)                                      00502000
         DS    0D                                                       00503000
BLANKS   DC    CL70' '                                                  00504000
IEECB912 CSECT                                                          00505000
WTOLIST  WTO   ('TEXT',C),('TEXT',L),('TEXT',D),('TEXT',DE),MF=L        00506000
@DATD    DSECT                                                          00507000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00508000
@ENDDATD EQU   *                                                        00509000
IEECB912 CSECT                                                          00510000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00511000
@01      EQU   01                                                       00512000
@02      EQU   02                                                       00513000
@03      EQU   03                                                       00514000
@04      EQU   04                                                       00515000
@05      EQU   05                                                       00516000
@06      EQU   06                                                       00517000
@07      EQU   07                                                       00518000
@08      EQU   08                                                       00519000
@09      EQU   09                                                       00520000
@10      EQU   10                                                       00521000
@11      EQU   11                                                       00522000
@12      EQU   12                                                       00523000
@13      EQU   13                                                       00524000
@14      EQU   14                                                       00525000
@15      EQU   15                                                       00526000
LSTFLGP  EQU   @03                                                      00527000
WTOLEN   EQU   @07                                                      00528000
SCANPTR  EQU   @03                                                      00529000
SCANEND  EQU   @08                                                      00530000
TRUELEN  EQU   @04                                                      00531000
MAXLEN   EQU   @03                                                      00532000
ENDPTR   EQU   @06                                                      00533000
START    EQU   @05                                                      00534000
WPLPTR   EQU   @02                                                      00535000
REG0     EQU   @00                                                      00536000
REG1     EQU   @01                                                      00537000
RETCODE  EQU   @15                                                      00538000
WPLRF    EQU   0                                                        00539000
WPLRPTR  EQU   WPLRF                                                    00540000
WPL      EQU   0                                                        00541000
WPLLGH   EQU   WPL                                                      00542000
WPLMCSF  EQU   WPL+2                                                    00543000
WPLMCSF1 EQU   WPLMCSF                                                  00544000
WPLMCSF2 EQU   WPLMCSF+1                                                00545000
WPLTXT   EQU   WPL+4                                                    00546000
WPLFLGS  EQU   0                                                        00547000
WPLDESC  EQU   WPLFLGS                                                  00548000
WPLDESC1 EQU   WPLDESC                                                  00549000
WPLDESC2 EQU   WPLDESC+1                                                00550000
WPLROUT  EQU   WPLFLGS+2                                                00551000
WPLROUT1 EQU   WPLROUT                                                  00552000
WPLROUT2 EQU   WPLROUT+1                                                00553000
WPLMSGTY EQU   WPLFLGS+4                                                00554000
WPLMSGT1 EQU   WPLMSGTY                                                 00555000
WPLMSGT2 EQU   WPLMSGTY+1                                               00556000
WPLLS01  EQU   0                                                        00557000
WPLLTF   EQU   WPLLS01                                                  00558000
WPLLTF1  EQU   WPLLTF                                                   00559000
WPLLINES EQU   WPLLS01+3                                                00560000
WPLML    EQU   0                                                        00561000
WPLMLLTF EQU   WPLML+2                                                  00562000
WPLMLLT1 EQU   WPLMLLTF                                                 00563000
CHARSTR  EQU   0                                                        00564000
CHAR     EQU   0                                                        00565000
NUMLINES EQU   0                                                        00566000
LSTFLG   EQU   0                                                        00567000
TEXTLINE EQU   0                                                        00568000
TEXTLEN  EQU   TEXTLINE                                                 00569000
TEXT     EQU   TEXTLINE+1                                               00570000
SCANBACK EQU   0                                                        00571000
CONTCOL  EQU   0                                                        00572000
LINETYPE EQU   0                                                        00573000
WTOREG0  EQU   0                                                        00574000
WTRTNWKA EQU   0                                                        00575000
WAREAPTR EQU   WTRTNWKA                                                 00576000
NUMLNPTR EQU   WTRTNWKA+4                                               00577000
WTOAREA  EQU   WTRTNWKA+8                                               00578000
WTODUMMY EQU   WTOLIST                                                  00579000
WD1      EQU   WTODUMMY+12                                              00580000
WD2      EQU   WTODUMMY+20                                              00581000
WD3      EQU   WTODUMMY+28                                              00582000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00583000
@NM00004 EQU   WTODUMMY                                                 00584000
@NM00003 EQU   WTOREG0+3                                                00585000
@NM00002 EQU   WTOREG0                                                  00586000
WPLMLTXT EQU   WPLML+4                                                  00587000
WPLMLLT2 EQU   WPLMLLTF+1                                               00588000
WPLRSV24 EQU   WPLMLLT1                                                 00589000
WPLRSV23 EQU   WPLMLLT1                                                 00590000
WPLRSV22 EQU   WPLMLLT1                                                 00591000
WPLRSV21 EQU   WPLMLLT1                                                 00592000
WPLMLLTD EQU   WPLMLLT1                                                 00593000
WPLMLLTC EQU   WPLMLLT1                                                 00594000
WPLMLLTB EQU   WPLMLLT1                                                 00595000
WPLMLLTA EQU   WPLMLLT1                                                 00596000
WPLMLLEN EQU   WPLML+1                                                  00597000
WPLML0   EQU   WPLML                                                    00598000
WPLAREA  EQU   WPLLS01+2                                                00599000
WPLLTF2  EQU   WPLLTF+1                                                 00600000
WPLRSV20 EQU   WPLLTF1                                                  00601000
WPLRSV19 EQU   WPLLTF1                                                  00602000
WPLRSV18 EQU   WPLLTF1                                                  00603000
WPLRSV17 EQU   WPLLTF1                                                  00604000
WPLLTFD  EQU   WPLLTF1                                                  00605000
WPLLTFC  EQU   WPLLTF1                                                  00606000
WPLLTFB  EQU   WPLLTF1                                                  00607000
WPLLTFA  EQU   WPLLTF1                                                  00608000
WPLQID   EQU   WPLFLGS+6                                                00609000
WPLRSV32 EQU   WPLMSGT2                                                 00610000
WPLRSV31 EQU   WPLMSGT2                                                 00611000
WPLRSV30 EQU   WPLMSGT2                                                 00612000
WPLRSV29 EQU   WPLMSGT2                                                 00613000
WPLRSV28 EQU   WPLMSGT2                                                 00614000
WPLRSV27 EQU   WPLMSGT2                                                 00615000
WPLRSV26 EQU   WPLMSGT2                                                 00616000
WPLRSV25 EQU   WPLMSGT2                                                 00617000
WPLRSV16 EQU   WPLMSGT1                                                 00618000
WPLRSV15 EQU   WPLMSGT1                                                 00619000
WPLMSGTF EQU   WPLMSGT1                                                 00620000
WPLRSV14 EQU   WPLMSGT1                                                 00621000
WPLMSGTD EQU   WPLMSGT1                                                 00622000
WPLMSGTC EQU   WPLMSGT1                                                 00623000
WPLMSGTB EQU   WPLMSGT1                                                 00624000
WPLMSGTA EQU   WPLMSGT1                                                 00625000
WPLRSV13 EQU   WPLROUT2                                                 00626000
WPLROUTO EQU   WPLROUT2                                                 00627000
WPLROUTN EQU   WPLROUT2                                                 00628000
WPLROUTM EQU   WPLROUT2                                                 00629000
WPLROUTL EQU   WPLROUT2                                                 00630000
WPLROUTK EQU   WPLROUT2                                                 00631000
WPLROUTJ EQU   WPLROUT2                                                 00632000
WPLROUTI EQU   WPLROUT2                                                 00633000
WPLROUTH EQU   WPLROUT1                                                 00634000
WPLROUTG EQU   WPLROUT1                                                 00635000
WPLROUTF EQU   WPLROUT1                                                 00636000
WPLROUTE EQU   WPLROUT1                                                 00637000
WPLROUTD EQU   WPLROUT1                                                 00638000
WPLROUTC EQU   WPLROUT1                                                 00639000
WPLROUTB EQU   WPLROUT1                                                 00640000
WPLROUTA EQU   WPLROUT1                                                 00641000
WPLRSV12 EQU   WPLDESC2                                                 00642000
WPLRSV11 EQU   WPLDESC2                                                 00643000
WPLRSV10 EQU   WPLDESC2                                                 00644000
WPLRSV09 EQU   WPLDESC2                                                 00645000
WPLRSV08 EQU   WPLDESC2                                                 00646000
WPLRSV07 EQU   WPLDESC2                                                 00647000
WPLDESCJ EQU   WPLDESC2                                                 00648000
WPLDESCI EQU   WPLDESC2                                                 00649000
WPLDESCH EQU   WPLDESC1                                                 00650000
WPLDESCG EQU   WPLDESC1                                                 00651000
WPLDESCF EQU   WPLDESC1                                                 00652000
WPLDESCE EQU   WPLDESC1                                                 00653000
WPLDESCD EQU   WPLDESC1                                                 00654000
WPLDESCC EQU   WPLDESC1                                                 00655000
WPLDESCB EQU   WPLDESC1                                                 00656000
WPLDESCA EQU   WPLDESC1                                                 00657000
WPLTXTL  EQU   WPLTXT+125                                               00658000
@NM00001 EQU   WPLTXT                                                   00659000
WPLRSV05 EQU   WPLMCSF2                                                 00660000
WPLRSV04 EQU   WPLMCSF2                                                 00661000
WPLMCSFN EQU   WPLMCSF2                                                 00662000
WPLRSV03 EQU   WPLMCSF2                                                 00663000
WPLNOWTP EQU   WPLMCSF2                                                 00664000
WPLMCSFK EQU   WPLMCSF2                                                 00665000
WPLMCSFJ EQU   WPLMCSF2                                                 00666000
WPLMCSFI EQU   WPLMCSF2                                                 00667000
WPLMCSFH EQU   WPLMCSF1                                                 00668000
WPLMCSFG EQU   WPLMCSF1                                                 00669000
WPLMCSFF EQU   WPLMCSF1                                                 00670000
WPLMCSFE EQU   WPLMCSF1                                                 00671000
WPLMCSFD EQU   WPLMCSF1                                                 00672000
WPLMCSFC EQU   WPLMCSF1                                                 00673000
WPLMCSFB EQU   WPLMCSF1                                                 00674000
WPLMCSFA EQU   WPLMCSF1                                                 00675000
WPLRECB  EQU   WPLRF+4                                                  00676000
WPLRPTRA EQU   WPLRPTR+1                                                00677000
WPLRLN   EQU   WPLRPTR                                                  00678000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00679000
@ENDDATA EQU   *                                                        00680000
         END   IEECB912,(C'PLS2200',0701,77006)                         00681000
