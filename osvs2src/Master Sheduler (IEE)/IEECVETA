         TITLE 'IEECVETA OPTIONS'                                       00050002
IEECVETA CSECT                                                          00100002
**********************************************************************  00500002
*                                                                       00550002
*  STATUS    CHANGE LEVEL 0                                             00600002
*                                                                       00650002
*  FUNCTION    TO EVALUATE THE OPTIONS SELECTED BY THE USER OF A        00700002
*            DEVICE, AND DETERMINE WHETHER THEY ARE LEGITIMATE.  IF SO, 00750002
*            INDICATORS ARE PASSED TO ALL OTHER ROUTINES AS TO WHAT THE 00800002
*            OPTIONS ARE.  IF AN ILLEGAL OPTION OR COMBINATION OF       00850002
*            OPTIONS IS ENCOUNTERED, INDICATORS ARE PASSED FOR THE      00900002
*            PRINTING OF THE APPROPRIATE ERROR MESSAGE.  THIS ROUTINE   00950002
*            ALSO, AT THE USER'S REQUEST, ARRANGES TO HAVE THE PRESENT  01000002
*            STATUS OF ALL OPTIONS DISPLAYED.                           01050002
*                                                                       01100002
*  ENTRY POINT    CONTROL IS PASSED ONLY THROUGH THE CSECT LABEL,       01150002
*               IEECVETA.  THE FIRST EXECUTABLE INSTRUCTION IS LABELED  01200002
*               START.                                                  01250002
*                                                                       01300002
*  INPUT    ALL OPERANDS OF ANY K S COMMAND ENTERED ON THE DEVICE BY A  01350002
*         USER.  THESE ARE RECEIVED IN EBCDIC IN THE FORMAT IN WHICH    01400002
*         THEY APPEAR ON THE SCREEN WHEN ENTERED.                       01450002
*                                                                       01500002
*  OUTPUT    THE CURRENT VALUES OF ALL OPTIONS ARE KEPT UP IN THE DCM.  01550002
*          WHEN REQUESTED, ALL OF THE OPTIONS AND THEIR VALUES ARE      01600002
*          TRANSFERRED INTO A BUFFER AREA, FROM WHICH THEY WILL BE      01650002
*          DISPLAYED.                                                   01700002
*                                                                       01750002
* EXTERNAL REFERENCES NONE                                              01800002
*                                                                       01850002
*  EXITS - NORMAL  IEECVETK TIMER INTERPRETER:  IF THE DISPLAY HAS JUST 01900002
*                  GONE INTO OR OUT OF ROLL MODE; OR, IF THE VALUE OF   01950002
*                  RTME HAS JUST BEEN CHANGED; OR, IF ALL THE ABOVE AND 02000002
*                  THE WARNING MESSAGE IS TO BE DISPLAYED               02050002
*                  IEECVETD MESSAGE MODULE 1:  IF A WARNING MESSAGE IS  02100002
*                  TO BE DISPLAYED                                      02150002
*                  IEECVETH OR P OR R DEVICE-DEPENDENT IO:  IF NONE OF  02200002
*                  THE ABOVE CONDITIONS EXIST                           02250002
*       - ERROR    IEECVETD MESSAGE MODULE 1                            02300002
*                  IEECVETK TIMER/INTERPRETER ROUTINE                   02350002
*                                                                       02400002
* TABLES/WORK AREAS DISPLAY CONTROL MODULE (CONTAINED IN DSECT)         02450002
*                   RESIDENT DISPLAY CONTROL MODULE (CONTAINED   S21002 02500002
*                   IN DSECT)                                    S21002 02550002
*                                                                       02600002
* ATTRIBUTES   REFRESHABLE, PRIVILEGED, TYPE 4 SVC                      02650002
*                                                                       02700002
* NOTES        THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A      02750002
*              PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL       02800002
*              CHARACTER SET.                                           02850002
*                                                                       02900002
**********************************************************************  02950002
         EJECT                                                          03000002
*/*IEECVETA: CHART */                                                   03050002
*/*IEECVETA: E OPTIONS RTN */                                           03100002
*/*START: P ESTABLISH ADDRESSABILITY */                                 03150002
*/* P BASE THE RDCM, TDCM, UCM */                                       03200002
*/* P POINT TO THE COMMAND IN THE DCM */                                03250002
*/* D (NO,,YES,OREF) IS SECOND CHARACTER A BLANK ? */                   03300002
*/* D (NO,,YES,OREF) IS OPERAND 'S,REF' ? */                            03350002
*/*NEXT: D (NO,,YES,OUT) IS OPERAND BLANK ? */                          03400002
*/* D (NO,,YES,OCON) IS OPERAND ',CON=' ? */                            03450002
*/* D (NO,,YES,ODEL) IS OPERAND ',DEL=' ? */                            03500002
*/* D (NO,,YES,OSEG) IS OPERAND ',SEG=' ? */                            03550002
*/* D (NO,,YES,ORNUM) IS OPERAND ',RNUM=' ? */                          03600002
*/* D (NO,,YES,ORTME) IS OPERAND ',RTME=' ? */                          03650002
*/* P POINT EXIT TO INVALID OPERAND */                                  03700002
*/*INVALOP: P INDICATE INVALID OPERAND AND POINT TO IT */               03750002
*/*ERRIND: P INDICATE EXIT TO MESSAGE MODULE */                         03800002
*/* P (,INSRT) POINT TO CURSOR POSITION */                              03850002
*/*OUT: P INDICATE BLANK ENTRY AREA AND INSTR LINE */                   03900002
*/* P WRITE ENTRY AREA */                                               03950002
*/* P (,INSRT) INDICATE PUT CURSOR IN POS 1 OF ENTRY AREA */            04000002
*/*OREF: P BLANK THE ENTRY AREA */                                      04050002
*/* P INDICATE THIS IS AN OPTIONS MESSAGE */                            04100002
*/* S UNDO RTN:CONVERT SEG VALUE TO EBCDIC */                           04150002
*/* S UNDO RTN:CONVERT RNUM VALUE TO EBCDIC */                          04200002
*/* S UNDO RTN:CONVERT RTME VALUE TO EBCDIC */                          04250002
*/* P PUT ALL INFO IN ENTRY AREA FOR S,REF */                           04300002
*/*PUT: P INDICATE WRITE ENTRY AREA */                                  04350002
*/* P SET EXIT TO MESSAGE MODULE */                                     04400002
*/* P SET INSERT CURSOR IN LINE 1 POS 9 */                              04450002
*/*INSRT: P INDICATE WRITE INSTR LINE AND INSERT CURSOR */              04500002
*/* D (NO,,YES,WHERE) NO HARDCOPY BIT ON ? */                           04550002
*/* D (NO,,YES,WHERE) DEL = R ? */                                      04600002
*/* D (NO,,YES,MORE) DEL = Y ? */                                       04650002
*/*THERE: P INDICATE WRITE WARNING LINE */                              04700002
*/* P INDICATE BLANK 2ND HALF WARNING LINE */                           04750002
*/*WHERE: D (NO,,YES,TI) GO TO TIMER INTERPRET RTN ? */                 04800002
*/* D (NO,,YES,MM) EXIT TO MESSAGE MODULE ? */                          04850002
*/* P (,XCTL) SET EXIT TO I/O RTN */                                    04900002
*/*MORE: D (NO,THERE,YES,) CON = N ? */                                 04950002
*/* P SET EXIT TO MESSAGE MODULE */                                     05000002
*/* P (,WHERE) DISPLAY WARNING CON=N,DEL=Y MESSAGE */                   05050002
*/*TI: P (,XCTL) SET EXIT TO TIMER INTER RTN */                         05100002
*/*MM: P RESET EXIT TO MSG MOD BIT */                                   05150002
*/* P PUT MSG MOD NAME IN XCTL LIST */                                  05200002
*/*XCTL: R EXIT TO PROPER MODULE */                                     05250002
*/*OCON: D (NO,NCON,YES,) CON = Y IN COMMAND ? */                       05300002
*/* P (,MCON) INDICATE THAT FACT IN DCM */                              05350002
*/*NCON: D (NO,INVALOP,YES,) CON = N IN COMMAND ? */                    05400002
*/* D (NO,,YES,ERRHARD) IS NO HARD COPY BIT ON ? */                     05450002
*/* P INDICATE CON = N IN DCM */                                        05500002
*/*MCON: P (,NEXT) PUT CON VALUE (Y OR N) IN DCM */                     05550002
*/*ODEL: D (NO,NDEL,YES,) DEL = Y IN COMMAND ? */                       05600002
*/* D (NO,,YES,ERRHARD) IS NO HARD COPY FLAG SET ? */                   05650002
*/* P (,YN) INDICATE DEL = Y IN DCM */                                  05700002
*/*NDEL: D (NO,RDEL,YES,) DEL = N IN COMMAND */                         05750002
*/* P RESET DEL = Y FLAG */                                             05800002
*/*YN: D (NO,SAME,YES,) DEL MODE = R/RD ? */                            05850002
*/* P SET EXIT TO TIMER INT RTN */                                      05900002
*/*SAME: P INDICATE BLANK LEFT HALF WARN LINE AND WRITE SAME */         05950002
*/* P TURN OFF ROLL MODE AND MSG FLAGS */                               06000002
*/*MDEL: P (,NEXT) SET DEL OPTION TO CORRECT STATE */                   06050002
*/*RDEL: D (NO,INVALOP,YES,) DEL = R IN COMMAND */                      06100002
*/* P INDICATE THAT IN THE DCM */                                       06150002
*/* D (NO,,YES,ERRHARD) NO HARD COPY FLAG SET ? */                      06200002
*/* P SET EXIT TO TIMER INTER RTN */                                    06250002
*/*NOCH: D (NO,NOCH0,YES,) IS UNVIEWABLE MSG ON SCREEN ? */             06300002
*/* P INDICATE REMOVE MESSAGE */                                        06350002
*/*NOCH0: D (NO,NOTFUL,YES,) IS SCREEN FULL ? */                        06400002
*/* P TURN OFF FLAG */                                                  06450002
*/*NOCH1: P INDICATE REMOVE MSG WAITING MSG */                          06500002
*/*NOTFUL: D (NO,MDEL,YES,) HAS D BEEN SPECIFIED ? */                   06550002
*/* P (,NEXT) INDICATE SO IN DCM */                                     06600002
*/*ERRHARD: P (,ERRIND) INDICATE PUT OUT NO HARD COPY MSG */            06650002
*/*OSEG: S NUM RTN: CONVERT SEG VALUE TO BINARY */                      06700002
*/* D (NO,,YES,INVALOP) DOES NEW SEG EXCEED MAX ? */                    06750002
*/* D (NO,,YES,OFF) NEW SEG = 0 ? */                                    06800002
*/* P (,IN) INDICATE THAT IN DCM */                                     06850002
*/*OFF: P INDICATE THAT IN DCM */                                       06900002
*/*IN: P (,NEXT) PUT SEG VALUE IN DCM */                                06950002
*/*ORNUM: S NUM RTN:CONVERT RNUM VALUE TO BINARY */                     07000002
*/* D (NO,,YES,INVALOP) DOES RNUM EXCEED MAX ? */                       07050002
*/* D (NO,,YES,INVALOP) IS RNUM = 0 ? */                                07100002
*/* P (,NEXT) HOLD NEW VALUE */                                         07150002
*/*ORTME: S NUM RTN:CONVERT RTME VALUE TO BINARY */                     07200002
*/* D (NO,,YES,INVALOP) IS RTME = 0 ? */                                07250002
*/* P (,NEXT) HOLD NEW VALUE IN DCM */                                  07300002
*/*NUM: E NUMBER CONVERT RTN */                                         07350002
*/* P FIND END OF NUMBER */                                             07400002
*/* D (NO,,YES,INVALOP) NUMBER LESS THAT 0 ? */                         07450002
*/* P CONVERT NUMBER TO BINARY */                                       07500002
*/* R BR 14 */                                                          07550002
*/*UNDO: E NUMBER UNCONVERT RTN */                                      07600002
*/* P CONVERT NUMBER TO EBCDIC */                                       07650002
*/* R BR 14 */                                                          07700002
*/*IEECVETA: END */                                                     07750002
         EJECT                                                          07800002
START    LR    BASERA,RF           ESTABLISH ADDRESSIBILITY             07850002
         USING START,BASERA                                             07900002
         B     BEGIN               BRANCH AROUND PATCH AREA             07910002
ICATCH   DC    CL72'IEECVETA'      EYECATCHER AND FIELD MAINTENANCE     07920002
BEGIN    EQU   *                   END OF PATCH AREA                    07930002
         LR    CXSARB,R1           ESTABLISH CXSA ADDRESS               07950002
         USING CXSA,CXSARB                                              08000002
         L     UCMERC,CSAUCM       ESTABLISH UCM ADDRESS                08100002
         USING UCMLIST,UCMERC                                           08150002
         L     RRDCM,UCMXB         ESTABLISH RDCM                S21003 08200002
         USING DCMTSRT,RRDCM          ESTABLISH ADDRESSABILITY          08250002
         L     DCMR9,Z(RRDCM)      ESTABLISH TDCM                S21003 08300002
         USING DCMSTRT,DCMR9                                            08350002
         L     UCMR7,CSACTLM       ESTABLISH UCM BASE REG               08400002
         USING UCM,UCMR7           ESTABLISH UCM BASE                   08450002
         MVC   DCMTRACE(DCMTRLEN),DCMTRAC2 SHIFT OLD TRACE ENTRIES      08460002
         MVI   DCMTREN1,ID1        PUT CSECT ID INTO                    08470002
         MVI   DCMTREN2,ID2        NEW TRACE ENTRY                      08480002
         L     ENTR2,DCMAENTR      ADDRESS OF DCMENTRY                  08500002
         L     OPR3,DCMADOPN       ADDR OF OPERAND IN DCMENTRY          08550002
*     THIS ROUTINE WILL TEST WHICH OPTION HAS BEEN SPECIFIED            08600002
         CLI   I(OPR3),BLANK       IS SECOND CHAR BLANK                 08650002
         BE    OREF                IF SO, DEFAULT = S,REF               08700002
         CLC   I(V,OPR3),CREF      IS OPERAND S,REF                     08750002
         BE    OREF                YES                                  08800002
         LA    OPR3,I(OPR3)                                             08850002
         LA    RF,NUM              RTN TO WHICH NUMERICAL OPS BALR      08900002
NEXT     EQU   *                                                        08950002
         CLI   Z(OPR3),BLANK       IS OPERAND BLANK                     09000002
         BE    OUT                 IF SO, GO TO EXIT RTN                09050002
         LA    R1,V(OPR3)          THIS POINTS R1 TO A POSSIBLE INVALID 09100002
*     VALUE OF CON OR DEL.  FOR OTHER OPS, ANOTHER ADDR WILL GO IN R1.  09150002
         CLC   Z(V,OPR3),CCON      IS OPERAND ,CON=                     09200002
         BE    OCON                YES                                  09250002
         CLC   Z(V,OPR3),CDEL      IS OPERAND ,DEL=                     09300002
         BE    ODEL                YES                                  09350002
         CLC   Z(V,OPR3),CSEG      IS OPERAND ,SEG=                     09400002
         BE    OSEG                YES                                  09450002
         CLC   Z(VI,OPR3),CRNUM    IS OPERAND ,RNUM=                    09500002
         BE    ORNUM               YES                                  09550002
         CLC   Z(VI,OPR3),CRTME    IS OPERAND ,RTME=                    09600002
         BE    ORTME               YES                                  09650002
         LA    R1,I(OPR3)          NOW POINT R1 TO INVALID OP           09700002
*     UPON BRANCH HERE, R1 ALWAYS POINTS TO INVALID OPERAND             09750002
INVALOP  EQU   *                                                        09800002
         ST    R1,DCMDSAV          MOVE IN ADDR OF INVALID OP           09850002
         OI    DCMCMSG2,DCMINVOP   INVALID OP MSG BIT                   09900002
ERRIND   EQU   *                                                        09950002
         OI    DCMTIMES,DCMOTTMM   OPT OR TI SHOULD EXIT TO MM          10000002
         BCTR  ENTR2,R0            SUBTRACT ONE TO GET POSITION         10050002
         SR    R1,ENTR2            POS OF OP IN ENTRY AREA              10100002
         CH    R1,DCMLGNTH         OP ON SECOND LINE                    10150002
         BL    ONE                 NO                                   10200002
         MVI   DCMCULNO,II         LINE TWO                             10250002
         SH    R1,DCMLGNTH                                              10300002
         STC   R1,DCMPOSCU         STORE CURSOR POSITION                10350002
         B     INSRT               INSERT CURSOR                        10400002
ONE      MVI   DCMCULNO,I          LINE ONE                             10450002
         STC   R1,DCMPOSCU         STORE CURSOR POSITION                10500002
         B     INSRT               INSERT CURSOR                        10550002
OUT      EQU   *                                                        10600002
         OI    DCMIOCM2,BLENTINS   BLANK ENTRY AREA AND INST LINE BITS  10650002
         OI    DCMIOCM1,DCMWRENT   WRITE ENTRY AREA BIT                 10700002
         MVI   DCMCULNO,I          LINE ONE                             10750002
         MVI   DCMPOSCU,I            AND POS ONE FOR CURSOR             10800002
         B     INSRT               INSERT CURSOR                        10850002
OREF     EQU   *                                                        10900002
         MVI   Z(ENTR2),BLANK                                           10950002
         MVC   I(CXXV,ENTR2),Z(ENTR2)  BLANK ENTRY AREA                 11000002
         OI    DCMCMSG1,DCMCHOPT   OPTIONS MSG BIT                      11050002
         MVC   Z(XL,ENTR2),SCOMMAND   MOVE SKELETON LINE         S21002 11100002
         MVC   VIII(II,ENTR2),DCMDEL    VALUE OF DEL                    11150002
         MVC   XXII(I,ENTR2),DCMCON     VALUE OF CON                    11200002
         XR    R6,R6                                                    11250002
         LA    RF,UNDO                                                  11300002
         IC    R6,DCMSEG                     BINARY VALUE OF SEG        11350002
         BALR  RE,RF                         TO CONVERT TO EBCDIC       11400002
         MVC   XV(II,ENTR2),DCMPACK+II       VALUE OF SEG               11450002
         IC    R6,DCMRNUM                    BINARY VALUE OF RNUM       11500002
         BALR  RE,RF                         TO CONVERT TO EBCDIC       11550002
         MVC   XXIX(II,ENTR2),DCMPACK+II   VALUE OF RNUM         S21002 11600002
         LH    R6,DCMRTME                    BINARY VALUE OF RTME       11650002
         BALR  RE,RF                         TO CONVERT TO EBCDIC       11700002
         MVC   XXXVII(III,ENTR2),DCMPACK+I   VALUE OF RTME       S21002 11750002
         CLI   IX(ENTR2),BLANK     IS VALUE OF DEL ONE CHAR             11800002
         BNE   PUT                 IF NOT, CONTINUE                     11850002
         MVC   IX(XXXVII,ENTR2),X(ENTR2)     ELSE, MOVE OVER RIGHT PART 11900002
PUT      EQU   *                                                        11950002
         OI    DCMIOCM1,DCMWRENT   WRITE ENTRY AREA BIT                 12000002
         OI    DCMTIMES,DCMOTTMM   OPT OR TI SHOULD EXIT TO MM          12050002
         MVI   DCMCULNO,I          LINE ONE                             12100002
         MVI   DCMPOSCU,IX           AND POS NINE FOR CURSOR            12150002
INSRT    EQU   *                                                        12200002
         OI    DCMIOCM1,WRININSC   WRITE INST LINE AND INSERT CURSOR    12250002
         CLI   DCMDEL,CHARR        Q. DEL=R                             12400002
         BE    WHERE               YES,DEPART                           12450002
         CLI   DCMDEL,CHARY        Q. DEL=Y                             12500002
         BE    MORE                YES, TEST FOR CON=N                  12550002
THERE    EQU   *                                                        12600002
         OI    DCMIOCM1,DCMWRWRN   NO, INDICATE WRITE WARNING LINE      12650002
         OI    DCMIOCM2,DCMBLWRL   AND BLANK LEFT HALF OF WARNING LINE  12700002
WHERE    EQU   *                                                        12750002
         TM    DCMTIMES,DCMOPTTI   OPT TO TI BIT SET                    12800002
         BO    TI                  IF SO, EXIT TO TI RTN                12850002
         TM    DCMTIMES,DCMOTTMM   SHOULD RTN EXIT TO MSG MOD           12900002
         BO    MM                  IF SO, GO DO IT                      12950002
         L     XFBRANCH,DCMIORTN   LOAD IO ROUTINE ADDRESS              13000002
         L     X1PARM,DCMCXSVE     RESTORE CXSA ADDRESS                 13010002
         BR    XFBRANCH            EXIT TO IEECVET(H,P,R, OR U)         13050002
MORE     EQU   *                                                        13100002
         CLI   DCMCON,CHARN        Q. CON=N                             13150002
         BNE   THERE               NO, GO BLANK WARNING LINE            13200002
         OI    DCMTIMES,DCMOTTMM   YES, OPTIONS OR TIMER/INTERPRETER    13250002
*                                    SHOULD EXIT TO MESSAGE MODULE      13300002
         OI    DCMCMSG1,DCMWRCDL   MOVE IN WARNING CON=N,DEL=Y MESSAGE  13350002
         B     WHERE               DEPART                               13400002
TI       EQU   *                                                        13450002
         L     XFBRANCH,DCMNTIMR   LOAD TIMER INTERPRETER ADDRESS       13500002
         L     X1PARM,DCMCXSVE     RESTORE CXSA ADDRESS                 13510002
         BR    XFBRANCH            EXIT TO IEECVETK                     13550002
MM       EQU   *                                                        13600002
         NI    DCMTIMES,OFFOTTMM   TURN OFF EXIT TO MM BIT              13650002
         L     XFBRANCH,DCMNMSG1   LOAD MESSAGE 1 ADDRESS               13700002
         L     X1PARM,DCMCXSVE     RESTORE CXSA ADDRESS                 13710002
         BR    XFBRANCH            EXIT TO IEECVETD                     13750002
OCON     EQU   *                                                        14000002
         CLI   V(OPR3),CHARY       CON=Y                                14050002
         BNE   NCON                NO                                   14100002
         OI    DCMOPTST,DCMOPTVR   CON BIT                              14150002
         B     MCON                MOVE IN Y                            14200002
NCON     EQU   *                                                        14250002
         CLI   V(OPR3),CHARN       CON=N                                14300002
         BNE   INVALOP             IT HAD BETTER BE                     14350002
         NI    DCMOPTST,OFFOPTVR   CON BIT OFF                          14500002
MCON     EQU   *                                                        14550002
         MVC   DCMCON(I),V(OPR3)   MOVE VALUE IN                        14600002
         LA    OPR3,VI(OPR3)       UPDATE OP PTR                        14650002
         B     NEXT                HERE WE GO AGAIN                     14700002
ODEL     EQU   *                                                        14750002
         CLI   V(OPR3),CHARY       DEL=Y                                14800002
         BNE   NDEL                NO                                   14850002
         OI    DCMOPTST,DCMOPTAD   DEL BIT                              15000002
         B     YN                  FOR YES OR NO                        15050002
NDEL     EQU   *                                                        15100002
         CLI   V(OPR3),CHARN       DEL=N                                15150002
         BNE   RDEL                NO                                   15200002
         NI    DCMOPTST,OFFOPTAD   DEL BIT OFF                          15250002
YN       EQU   *                                                        15300002
         CLI   DCMDEL,CHARR        IS MODE NOW R OR RD                  15350002
         BNE   SAME                IF NOT, OK                           15400002
         OI    DCMTIMES,DCMOPTTI   ELSE, TURN ON OPT TO TI BIT          15450002
SAME     EQU   *                                                        15500002
         OI    DCMIOCM2,DCMBLWRL   BLANK LEFT HALF WARN LINE BIT        15550002
         OI    DCMIOCM1,DCMWRWRN   INDICATE WRITE WARNING LINE          15600002
         NI    DCMOPTST,OFFOPRLL   ROLL BIT OFF                         15650002
         NI    DCMCMSG3,OFFCMRLL   ROLL MODE MSG BIT OFF                15700002
         NI    DCMR2FLG,N255-DCMRXUNV  TURN OFF BIT IF ON        S21002 15750002
MDEL     EQU   *                                                        15800002
         MVC   DCMDEL(I),V(OPR3)   MOVE IN CHAR                         15850002
         MVI   DCMDEL+I,BLANK      MOVE IN BLANK                        15900002
         LA    OPR3,VI(OPR3)       UPDATE OP PTR                        15950002
         B     NEXT                AND AGAIN                            16000002
RDEL     EQU   *                                                        16050002
         CLI   V(OPR3),CHARR       DEL=R                                16100002
         BNE   INVALOP             NOT ANYTHING                         16150002
         OI    DCMOPTST,DCMOPRLL   ROLL BIT                             16200002
         OI    DCMTIMES,DCMOPTTI   ELSE, TURN ON OPT TO TI BIT          16350002
         TM    DCMR2FLG,DCMRXSFL   Q. IS SCREEN FULL                    16550002
         BNO   NOTFUL              NO, LEAVE WARNING LINE AS IS         16600002
         OI    DCMIOCM2,DCMBLWRR   INDICATE REMOVE MSG WAITING MSG      16750002
NOTFUL   EQU   *                                                        16800002
         NI    DCMOPTST,OFFOPTAD   DEL BIT OFF                          16850002
         OI    DCMTIMES,DCMOTTMM   OPT OR TI SHOULD EXIT TO MM          16900002
         OI    DCMCMSG3,DCMCMRLL   ROLL MODE MSG BIT                    16950002
         CLI   VI(OPR3),CHARD      HAS D BEEN SPECIFIED                 17000002
         BNE   MDEL                IF NOT, MOVE IN CHAR                 17050002
         MVC   DCMDEL(II),V(OPR3)       IF SO, DO MORE HERE             17100002
         LA    OPR3,VII(OPR3)      UPDATE PTR                           17150002
         B     NEXT                AND GO BACK                          17200002
OSEG     EQU   *                                                        17400002
         LA    OPR3,V(OPR3)        POINT TO VALUE                       17450002
         BALR  RE,RF               TO HANDLE VALUE                      17500002
         CH    R6,DCMMSGAL         DOES VALUE EXCEED MAX                17550002
         BH    INVALOP             YES                                  17600002
         LTR   R6,R6               SEG=0                                17650002
         BZ    OFF                 IF SO, SET BIT OFF                   17700002
         OI    DCMOPTST,DCMOPTSG   ELSE, TURN BIT ON                    17750002
         B     IN                  INSERT VALUE                         17800002
OFF      NI    DCMOPTST,OFFOPTSG   TURN BIT OFF                         17850002
IN       STC   R6,DCMSEG           STORE VALUE IN                       17900002
         B     NEXT                FIND NEXT OPERAND                    17950002
ORNUM    EQU   *                                                        18000002
         LA    OPR3,VI(OPR3)       POINT TO VALUE                       18050002
         BALR  RE,RF               TO HANDLE VALUE                      18100002
         CH    R6,DCMMSGAL         DOES VALUE EXCEED MAX                18150002
         BH    INVALOP             YES                                  18200002
         LTR   R6,R6               RNUM=0                               18250002
         BZ    INVALOP             IS NOT ALLOWED, SO DEPART            18300002
         STC   R6,DCMRNUM          STORE VALUE IN                       18350002
         B     NEXT                FIND NEXT OPERAND                    18400002
ORTME    EQU   *                                                        18450002
         LA    OPR3,VI(OPR3)       POINT TO VALUE                       18500002
         BALR  RE,RF               TO HANDLE VALUE                      18550002
         LTR   R6,R6               RTME=0                               18600002
         BZ    INVALOP             IS NOT ALLOWED, SO DEPART            18650002
         STH   R6,DCMRTME          STORE VALUE IN                       18700002
         OI    DCMTIMES,DCMOPTTI   TURN ON OPT TO TI BIT                18750002
         B     NEXT                FIND NEXT OPERAND                    18800002
NUM      EQU   *                                                        18850002
         LR    R1,OPR3             POINT TO OP IN CASE IT IS INVALID    18900002
         MVC   DCMCVBIN(III),Z(OPR3)    MOVE IN UP TO THREE DIGITS      18950002
         XC    DCMPACK(IV),DCMPACK      ZERO OUT CONVERSION WORD        19000002
NDIG     EQU   *                                                        19050002
         CLI   Z(OPR3),COMMA                                            19100002
         BE    DO                  IF COMMA HERE                        19150002
         CLI   Z(OPR3),BLANK                                            19200002
         BE    DO                  IF BLANK HERE                        19250002
         CLI   Z(OPR3),HF0                                              19300002
         BL    INVALOP             IF LESS THAN 0                       19350002
         MVC   DCMPACK+I(V),DCMPACK+II       MOVE ONE DIGIT OVER        19400002
         LA    OPR3,I(OPR3)        UPDATE OP PTR                        19450002
         B     NDIG                GO BACK FOR NEXT DIGIT               19500002
DO       EQU   *                                                        19550002
         CR    OPR3,R1             Q. WAS THERE A NUMBER FOLLOWING OPER 19600002
         BE    INVALOP             NO, INVALID OPERAND                  19650002
         SR    OPR3,R1             GET NUM DIGITS IN OPR3               19700002
         CH    OPR3,HW4            IS IT LESS THAN FOUR                 19750002
         BNL   INVALOP             IF NOT, INVALID OP                   19800002
         AR    OPR3,R1             ELSE, RESTORE OPR3                   19850002
         PACK  DCMCVBIN(IV),DCMPACK(IV)      EBCDIC                     19900002
         XC    DCMPACK(IV),DCMPACK           TO                         19950002
         CVB   R6,DCMPACK                    BINARY                     20000002
         BR    RE                            RETURN                     20050002
UNDO     EQU   *                                                        20100002
         CVD   R6,DCMPACK                    BINARY                     20150002
         UNPK  DCMPACK(IV),DCMCVBIN(IV)      TO                         20200002
         OI    DCMPACK+III,HF0               EBCDIC                     20250002
         BR    RE                            RETURN                     20300002
         EJECT                                                          20350002
**********************************************************************  20400002
*                                                                       20450002
*        CONSTANTS                                                      20500002
*                                                                       20550002
**********************************************************************  20600002
         SPACE 1                                                        20650002
HW4      DC    H'4'                VALUE                                20700002
SCOMMAND DC    C'K S'              K S COMMAND                          20750002
CDEL     DC    C',DEL=  '          DEL OPERAND                          20800002
CSEG     DC    C',SEG=  '          SEG OPERAND                          20850002
CCON     DC    C',CON= '           CON OPERAND                          20900002
CRNUM    DC    C',RNUM=  '         RNUM OPERAND                         20950002
CRTME    DC    C',RTME='           RTME OPERAND                         21000002
CREF     DC    C',REF '            REF OPERAND                          21050002
         SPACE 3                                                        21200002
**********************************************************************  21250002
*                                                                       21300002
*        REGISTER EQUATE STATEMENTS                                     21350002
*                                                                       21400002
**********************************************************************  21450002
         SPACE 1                                                        21500002
R0       EQU   0                   REGISTER 0                           21560002
R1       EQU   1                   REGISTER 1                           21570002
ENTR2    EQU   2                   ADDRESS OF DCMENTRY                  21580002
OPR3     EQU   3                   OPERAND PTR REG                      21590002
RRDCM    EQU   5                   R DCM BASE REGISTER                  21590402
R6       EQU   6                   REGISTER 6                           21590802
UCMR7    EQU   7                   UCM BASE REG                         21591202
UCMPR8   EQU   8                   UCM PREFIX BASE REG                  21591602
DCMR9    EQU   9                   DCM BASE REG                         21591702
BASERA   EQU   10                  MODULE BASE REG                      21592002
CXSARB   EQU   11                  CXSA BASE REG                        21600002
UCMERC   EQU   12                  UCM ENTRY BASE REG                   21800002
RE       EQU   14                  REGISTER 14                          22150002
RF       EQU   15                  REGISTER 15                          22200002
X1PARM   EQU   1                                                        22202002
XFBRANCH EQU   15                                                       22210002
         EJECT                                                          22250002
**********************************************************************  22300002
*                                                                       22350002
*        EQUATE STATEMENTS                                              22400002
*                                                                       22450002
**********************************************************************  22500002
         SPACE 1                                                        22550002
ID1      EQU   C'E'                1ST CHARACTER OF CSECT ID            22560002
ID2      EQU   C'A'                2ND CHARACTER OF CSECT ID            22570002
BLANK    EQU   X'40'               CHARACTER BLANK                      22600002
CHARD    EQU   C'D'                CHARACTER                            22650002
CHARN    EQU   C'N'                CHARACTER                            22700002
CHARR    EQU   C'R'                CHARACTER                            22750002
CHARY    EQU   C'Y'                CHARACTER                            22800002
COMMA    EQU   C','                CHARACTER                            22850002
HF0      EQU   X'F0'               FOR EBCDIC DIGIT                     22900002
Z        EQU   0                   NUMBER                               22950002
I        EQU   1                   NUMBER                               23000002
II       EQU   2                   NUMBER                               23050002
III      EQU   3                   NUMBER                               23100002
IV       EQU   4                   NUMBER                               23150002
V        EQU   5                   NUMBER                               23200002
VI       EQU   6                   NUMBER                               23250002
VII      EQU   7                   NUMBER                               23300002
VIII     EQU   8                   NUMBER                               23350002
IX       EQU   9                   NUMBER                               23400002
X        EQU   10                  NUMBER                               23450002
XV       EQU   15                  NUMBER                               23500002
XXII     EQU   22                  NUMBER                               23550002
XXIX     EQU   29                  NUMBER                         21002 23650002
XXXVII   EQU   37                  NUMBER                               23750002
XL       EQU   40                  NUMBER                         21002 23800002
CXXV     EQU   125                 NUMBER                               23900002
N255     EQU   255                 MASK TO TURN BITS OFF         S21002 23950002
         EJECT                                                          24000002
**********************************************************************  24050002
*                                                                       24100002
*        DSECTS                                                         24150002
*                                                                       24200002
**********************************************************************  24250002
         IEERDCM                                                        24300002
         EJECT                                                          24350002
         IEETDCM                                                        24360002
         EJECT                                                          24400002
         IEECUCM  FORMAT=NEW                                            24500002
         EJECT                                                          24550002
         IHACTM  CXSA                                                   24650002
*   EXTRA EQUATES FOR BIT SETTINGS                                      24700002
BLENTINS EQU   DCMBLENT+DCMINSSH   TO TURN TWO BITS ON                  24750002
OFFBLWRL EQU   255-DCMBLWRL        TO TURN BIT OFF                      24850002
OFFCMRLL EQU   255-DCMCMRLL        TO TURN BIT OFF                      24900002
OFFOPRLL EQU   255-DCMOPRLL        TO TURN BIT OFF                      24950002
OFFOPTAD EQU   255-DCMOPTAD        TO TURN BIT OFF                      25000002
OFFOPTSG EQU   255-DCMOPTSG        TO TURN BIT OFF                      25050002
OFFOPTVR EQU   255-DCMOPTVR        TO TURN BIT OFF                      25100002
OFFOTTMM EQU   255-DCMOTTMM        TO TURN BIT OFF                      25150002
WRININSC EQU   DCMWRINS+DCMINSC    TO TURN TWO BITS ON                  25200002
         EJECT                                                          25250002
         END                                                            25400002
