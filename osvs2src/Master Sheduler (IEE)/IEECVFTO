         TITLE 'IEECVFTO -- STATUS DISPLAY INTERFACE 4'                 00100000
IEECVFTO CSECT                                                          00200000
         SPACE 2                                                        00500000
* THIS ROUTINE WAS CREATED FOR STATUS DISPLAY SUPPORT, LINE ITEM 21002, 00600000
*    OS RELEASE 21                                                      00700000
         SPACE 2                                                        00800000
*                                                                       00900000
* STATUS -- CHANGE LEVEL 0                                              01000000
*                                                                       01030000
* APARS FIXED --- ZA14992                                               01060000
*                                                                       01100000
* FUNCTION -- OUTPUT OF A DISPLAY WHICH OVERLAYS MESSAGES               01200000
*    1) MOVE 3 LINES AT A TIME OF A STATUS DISPLAY FROM THE             01300000
*    WQE'S INTO A WRITE AREA IN THE DISPLAY CONTROL MODULE (DCM),       01400000
*    FREE THE WQE'S, AND INDICATE TO THE I/O MODULES TO WRITE           01500000
*    THE DISPLAY TO THE SCREEN.                                         01600000
*    2) ON THE LAST FRAME OF A DISPLAY, BLANK THE REMAINDER OF          01700000
*    THE DISPLAY AREA ON THE SCREEN, 3 LINES AT A TIME.                 01800000
*                                                                       01900000
* ENTRY POINT -- IEECVFTO, FROM IEECVFTM                                02000000
*                                                                       02100000
* INPUT                                                                 02200000
*    1) REGISTER 1 - POINTER TO CXSA                                    02300000
*    2) REGISTER 7 - POINTER TO SACB                                    02400000
*                                                                       02500000
* OUTPUT                                                                02600000
*    1) REGISTER 1 - POINTER TO CXSA                                    02700000
*    2) WRITE AREA IN DCM SET UP FOR A WRITE INFORMATIONAL              02800000
*    DISPLAY BY THE I/O ROUTINE                                         02900000
*    3) FIELDS IN SACB AND SSCT TO REFLECT STATUS OF DISPLAY            03000000
*                                                                       03100000
* EXTERNAL REFERENCES -- NONE                                           03200000
*                                                                       03300000
* EXITS,NORMAL                                                          03400000
*    1) DEVICE DEPENDENT I/O MODULE                                     03500000
*                                                                       03600000
* EXITS,ERROR -- NONE                                                   03700000
*                                                                       03800000
* TABLES/WORK AREAS                                                     03900000
*    1) UNIT CONTROL MODULE - UCM                                       04000000
*    2) RESIDENT PORTION OF THE DISPLAY CONTROL MODULE - DCM            04100000
*    (INCLUDING SCREEN AREA CONTROL BLOCKS - SACB'S)                    04200000
*    3) TRANSIENT PORTION OF THE DISPLAY CONTROL MODULE                 04300000
*                                                                       04400000
* ATTRIBUTES -- REFRESHABLE, PRIVILEGED, TYPE 4 SVC                     04500000
*    DISABLED WHEN DECREMENTING USE COUNTS OF MINOR WQE'S               04600000
*                                                                       04700000
* CHARACTER CODE DEPENDENCY -- THE OPERATION OF THIS MODULE DOES        04800000
*    NOT DEPEND ON A PARTICULAR INTERNAL REPRESENTATION OF THE          04900000
*    EXTERNAL CHARACTER SET                                             05000000
*                                                                       05100000
         EJECT                                                          05200000
* REGISTER USAGE                                                        05300000
X1PARM   EQU   1                                                        05400000
XERTRN   EQU   14                                                       05500000
XFBRANCH EQU   15                                                       05600000
R0       EQU   0                   REG 0                                05700000
R1       EQU   1                   PARAMETER REGISTER                   05800000
WORKR    EQU   2                   WORK REG                             05900000
WORK1    EQU   3                   WORK REG                             06000000
EVEN     EQU   4                   WORK REG                             06100000
ODD      EQU   5                   WORK REG                             06200000
RDCMBASE EQU   6                   RESIDENT PORTION OF DCM BASE         06300000
SACBBASE EQU   7                   SCREEN AREA CONTROL BLOCK BASE       06400000
TDCMBASE EQU   8                   TRANSIENT PORTION OF DCM BASE        06500000
OUTQREG  EQU   9                   POINTER TO CONSOLE OUTPUT           X06600000
                                        QUEUE ENTRY                     06700000
UCMEBASE EQU   10                  UCM ENTRY BASE                       06800000
WQEBASE  EQU   11                  WQE BASE                             06900000
MYBASE   EQU   12                  BASE REGISTER FOR THIS MODULE        07000000
CXSABASE EQU   13                  CXSA BASE                            07100000
RETURNR  EQU   14                  RETURN REGISTER                      07200000
LINKR    EQU   14                  FIRST LEVEL LINK REG                 07300000
LINK1    EQU   15                  SECOND LEVEL LINK REGISTER           07400000
R15      EQU   15                                                       07500000
         EJECT                                                          07600000
* ESTABLISH ADDRESSABILITY                                              07700000
         SPACE 2                                                        07900000
         BALR  MYBASE,0                                                 08000000
         USING *,MYBASE            BASE THIS MODULE                     08100000
         B     BEGIN                                                    08200000
         DC    CL8'IEECVFTO'       MODULE NAME                 Y02958   08300000
         DC    CL8'&SYSDATE',CL56' '  DATE AND PATCH AREA      Y02958   08400000
BEGIN    EQU   *                                                        08500000
         LR    CXSABASE,R1         GET CXSA ADDRESS                     08600000
         USING CXSA,CXSABASE       BASE CXSA                            08700000
         L     UCMEBASE,CSAUCM     GET ADDRESS OF UCM ENTRY             08800000
         USING UCMLIST,UCMEBASE    BASE UCM ENTRY                       08900000
         L     RDCMBASE,UCMXB      GET ADDRESS OF RESIDENT DCM          09000000
         USING DCMTSRT,RDCMBASE      BASE RESIDENT DCM                  09100000
         L     TDCMBASE,DCMADTRN   GET ADDRESS OF TRANSIENT DCM         09200000
         USING DCMSTRT,TDCMBASE      BASE TRANSIENT DCM                 09300000
*        SACBBASE IS PASSED FROM INTERFACE 2                            09400000
         USING DCMACB,SACBBASE     BASE SACB                            09500000
         USING WMJM,WQEBASE        BASE WQE'S                           09600000
         MVC   DCMTRACE(DCMTRLEN),DCMTRAC2 SHIFT OLD TRACE ENTRIES      09700000
         MVI   DCMTREN1,ID1        PUT CSECT ID INTO                    09800000
         MVI   DCMTREN2,ID2        NEW TRACE ENTRY                      09900000
         L     XFBRANCH,CSAXB      ADDRESS GETLOCK SUBROUTINE           10000000
         LR    X1PARM,CXSABASE     PASS  CXSA ADDRESS IN REG 1          10100000
         BALR  XERTRN,XFBRANCH     OBTAIN LOCKS                         10200000
         SPACE 3                                                        10300000
* INITIALIZATION                                                        10400000
         SPACE 2                                                        10500000
         L     OUTQREG,DCMAMJWQ    GET POINTER TO CONSOLE OUTPUT       X10600000
                                        QUEUE ENTRY                     10700000
         USING CQE,OUTQREG         CONSOLE Q ADDRESSABILITY   MB Y02958 10800000
         XC    DCMBYTCT(E2),DCMBYTCT ZERO BYTE COUNT FOR OUTPUT         10900000
         EJECT                                                          11000000
         TM    DCMAFLG2,DCMARCON   Q. REWRITE CONTROL LINE              11200000
         BO    RCON                YES, BRANCH TO DO SO                 11300000
         TM    DCMAFLG1,DCMABL     Q. BLANK REST OF AREA                11500000
         BO    BLNKREST            YES, GO BLANK IT                     11600000
         TM    DCMAFLG2,DCMAWCON   Q. CONTROL LINE TO BE WRITTEN        11800000
         BNO   WRMIN               NO, BRANCH TO WRITE FROM            X11900000
                                        MINOR WQE'S                     12000000
         SPACE 2                                                        12100000
* PUT CONTROL LINE IN FIRST LINE OF WRITE AREA FIRST TIME THROUGH       12200000
         NI    DCMAFLG2,XFF-DCMAWCON TURN OFF WRITE CONTROL FLAG        12500000
         L     WORKR,DCMAINS       GET ADDRESS OF FIRST LINE OF        X12600000
                                        WRITE AREA (INSTRUCTION        X12700000
                                        LINE)                           12800000
         BAL   LINKR,BLDCNTRL      BUILD CONTROL LINE IN FIRST         X12900000
                                        LINE OF WRITE AREA              13000000
         SPACE                                                          13100000
*    INDICATE CONTROL LINE IN SSCT                                      13200000
         BAL   LINK1,FINDSSCT      GET SSCT ENTRY POINTER IN           X13400000
                                        WORKR                           13500000
         OI    E0(WORKR),DCMSECCL  INDICATE CONTROL LINE IN SSCT        13600000
         SPACE                                                          13700000
*    INCREMENT ROW IN SACB BY ONE                                       13800000
         BAL   LINK1,UPDTEROW      INCREMENT ROW NUMBER                 14000000
         SPACE                                                          14100000
         TM    WMJMLTYP,WMJMLTYD   Q. END INDICATED                     14300000
         BNO   TSTMIN              NO, LOOK FOR MINORS TO WRITE         14400000
         OI    DCMAFLG1,DCMADEND   INDICATE END IN SACB                 14500000
         B     END1                GO HANDLE END                        14600000
         DROP  WQEBASE                                                  14700000
         USING WMNM,WQEBASE         BASE WQE                            14800000
         SPACE                                                          14900000
TSTMIN   EQU   *                                                        15100000
         L     WQEBASE,DCMAMIN     GET POINTER TO NEXT MINOR TO        X15200000
                                        BE WRITTEN                      15300000
         LTR   WQEBASE,WQEBASE     ANY MINORS TO BE WRITTEN             15400000
         BZ    INFDEXIT            NO, OUTPUT CONTROL LINE              15500000
         B     LINE2               BRANCH TO FILL LINE 2 OF            X15600000
                                        WRITE AREA                      15700000
         EJECT                                                          15800000
WRMIN    EQU   *                                                        15900000
         MVC   DCMLINEN(E1),DCMAROW  INDICATE NEXT ROW TO              X16200000
                                        WRITE TO                        16300000
         L     WQEBASE,DCMAMIN     GET POINTER TO NEXT MINOR TO        X16400000
                                        BE WRITTEN                      16500000
         L     WORKR,DCMAINS       GET ADDRESS OF FIRST LINE OF        X16600000
                                        WRITE AREA (INSTRUCTION        X16700000
                                        LINE)                           16800000
         BAL   LINKR,MOVELINE      MOVE LINE INTO WRITE AREA            16900000
         SPACE 2                                                        17000000
LINE2    EQU   *                                                        17100000
         L     WQEBASE,DCMAMIN     GET POINTER TO NEXT MINOR TO        X17400000
                                        BE WRITTEN                      17500000
         L     WORKR,DCMAENTR      GET ADDRESS OF SECOND LINE OF       X17600000
                                        WRITE AREA (LINE 1 OF          X17700000
                                        ENTRY AREA)                     17800000
         BAL   LINKR,MOVELINE      MOVE LINE INTO WRITE AREA            17900000
         SPACE 2                                                        18000000
LINE3    EQU   *                                                        18100000
         L     WQEBASE,DCMAMIN     GET POINTER TO NEXT MINOR TO        X18400000
                                        BE WRITTEN                      18500000
         L     WORKR,DCMAENTR      GET ADDRESS OF ENTRY AREA            18600000
         AH    WORKR,DCMCORLN      ADD LENGTH OF A LINE TO GET         X18700000
                                        POINTER TO THIRD LINE OF       X18800000
                                        WRITE AREA                      18900000
*                                       (LINE 2 OF ENTRY AREA)          19000000
         BAL   LINKR,MOVELINE      MOVE LINE INTO WRITE AREA            19100000
         SPACE 2                                                        19200000
* WRITE AREA FULL                                                       19300000
*    AT THIS POINT THE WRITE AREA IS FULL AND THERE ARE MORE            19400000
* LINES OF THE DISPLAY ON THE QUEUE.  THE WRITE AREA IS OUTPUT          19500000
* AND CONTROL WILL BE RETURNED TO CONTINUE WRITING THE DISPLAY.         19600000
         SPACE                                                          19700000
         B     INFDEXIT            BRANCH TO ENABLE INTERRUPTS         X19800000
                                        AND EXIT TO I/O ROUTINE        X19900000
                                        TO WRITE 3 LINES                20000000
         EJECT                                                          20100000
*********************************************************************** 20200000
*                                                                     * 20300000
* MOVE LINE SUBROUTINE                                                * 20400000
*    MOVE TEXT FROM MINOR WQE TO INDICATED LINE OF WRITE AREA         * 20500000
* AND TAKE CARE OF ASSOCIATED HOUSEKEEPING.  FREE MINOR WQE.          * 20600000
*    INPUT - WORKR - POINTS TO LINE OF WRITE AREA                     * 20700000
*            WQEBASE - POINTS TO MINOR TO BE WRITTEN                  * 20800000
*            BASE REGS - SACBBASE, TDCMBASE, UCMEBASE, OUTQREG        * 20900000
*    OUTPUT - BIT SETTINGS IN SACB, SSCT                              * 21000000
*            LINE MOVED INTO WRITE AREA                               * 21100000
*            MINOR POINTER IN SACB                                    * 21200000
*            INCREMENTS DCMBYTCT BY LENGTH OF ONE LINE                * 21300000
*            UPDATES DCMAROW                                          * 21400000
*    EXITS - I/O MODULE IF ONE OF THE FOLLOWING:                      * 21500000
*              1) NO MINOR ON Q AFTER THE ONE JUST USED               * 21600000
*              2) FRAME FULL CONDITION IS REACHED                     * 21700000
*              3) END CONDITION IS FOUND (AND AT LEAST ONE LINE       * 21800000
*                 TO WRITE)                                           * 21900000
*            INTERFACE 2 - IF END IS FOUND AND ALL MINORS HAVE        * 22000000
*              ALREADY BEEN WRITTEN                                   * 22100000
*            RETURN - IF FRAME NOT FULL AND MORE MINORS ON QUEUE      * 22200000
*    REGISTER USAGE - DESTROYS CONTENTS OF FOLLOWING REGS:            * 22300000
*                        WORKR,WORK1,LINK1                            * 22400000
*            LINKR - LINK REGISTER                                    * 22500000
*                                                                     * 22600000
*********************************************************************** 22700000
         SPACE 2                                                        22800000
MOVELINE EQU   *                                                        22900000
         CLI   WMNMTL1,E0          IS TEXT LENGTH ZERO                  23200000
         BNE   TEXT                NO, TEXT PRESENT - BRANCH            23300000
         TM    WMNMLT1,WMNMLT1D    Q. MINOR INDICATE END      MF        23400000
         BO    INDEND              YES, GO INDICATE END       MF        23500000
*     IF THE TEXT LENGTH IS ZERO AND THE MINOR DOES NOT       MF        23600000
*     INDICATE END, THEN THE MINOR IS STILL BEING BUILT AND   MF        23700000
*     MUST NOT BE USED.                                       MF        23800000
         NI    DCMAFLG2,XFF-DCMALMIN    TURN OFF LAST MINOR   MF       X23900000
                                        SAVED FLAG            MF        24000000
         B     INFDEXIT            EXIT                       MF        24100000
         SPACE                                                          24200000
TEXT     EQU   *                                                        24300000
*    MOVE TEXT FROM MINOR WQE TO WRITE AREA                             24400000
         BAL   LINK1,BLNKLINE      BLANK OUT LINE OF WRITE AREA         24600000
         SR    WORK1,WORK1         CLEAR REG                            24700000
         IC    WORK1,WMNMTL1       GET LENGTH OF TEXT                   24800000
         BCTR  WORK1,E0            DECREMENT BY ONE                     24900000
         EX    WORK1,MOVETEXT      MOVE TEXT FROM MINOR TO             X25000000
                                        WRITE AREA                      25100000
         B     SETSSCT             BRANCH TO SET SSCT FLAGS             25200000
MOVETEXT MVC   E0(E0,WORKR),WMNMTXT1  MOVE TEXT                         25300000
         SPACE 2                                                        25400000
SETSSCT  EQU   *                                                        25500000
*    INDICATE LABEL OR DATA LINE IN SSCT                                25600000
         BAL   LINK1,FINDSSCT      GET SSCT ENTRY POINTER IN           X25800000
                                        WORKR                           25900000
         NI    E0(WORKR),XFF-DCMSECBL   TURN OFF BLANK LINE FLAG        26000000
         TM    WMNMLT1,WMNMLT1B    Q. MINOR WQE FOR LABEL LINE          26100000
         BO    LABEL               YES, BRANCH TO INDICATE LABEL        26200000
         OI    E0(WORKR),DCMSECDL  INDICATE DATA LINE IN SSCT           26300000
         B     OVERLABL            BRANCH AROUND                        26400000
LABEL    EQU   *                                                        26500000
         OI    E0(WORKR),DCMSECLL  INDICATE LABEL LINE IN SSCT          26600000
OVERLABL EQU   *                                                        26700000
         SPACE 2                                                        26800000
*    INCREMENT ROW IN SACB BY ONE                                       27000000
         BAL   LINK1,UPDTEROW      INCREMENT ROW NUMBER AND SET        X27100000
                                        FLAG IF FULL FRAME              27200000
         SPACE 2                                                        27300000
*    ADD LENGTH OF ONE LINE TO BYTE COUNT FOR WRITE                     27400000
         LH    WORK1,DCMBYTCT      GET CURRENT BYTE COUNT               27500000
         AH    WORK1,DCMCORLN      ADD LENGTH OF ONE LINE               27600000
         STH   WORK1,DCMBYTCT      STORE BYTE COUNT                     27700000
         SPACE 2                                                        27800000
*    SAVE SOME INFORMATION BEFORE MINOR IS FREED                        27900000
         TM    WMNMLT1,WMNMLT1D    Q. MINOR INDICATE END                28200000
         BNO   SAVENEXT            NO, BRANCH TO SAVE ADDRESS          X28300000
                                        OF NEXT MINOR                   28400000
INDEND   EQU   *                                                        28500000
         OI    DCMAFLG1,DCMADEND   YES, INDICATE END OF DISPLAY         28700000
         B     FREEMIN             BRANCH TO FREE MINOR                 28800000
         SPACE 2                                                        28900000
SAVENEXT EQU   *                                                        29000000
*    TEST FOR MORE MINORS ON QUEUE AND SAVE POINTER TO MINOR            29100000
         L     WORK1,WMNMNX1-E1    GET POINTER TO NEXT MINOR            29300000
         LA    WORK1,E0(WORK1)     ZERO HIGH ORDER BYTE                 29400000
         LTR   WORK1,WORK1         Q. ANY MORE MINORS                   29500000
         BZ    NOMORMIN            NO, BRANCH TO SAVE POINTER          X29600000
                                        TO MINOR JUST USED              29700000
         NI    DCMAFLG2,N255-DCMALMIN TF LAST MIN PTR SAVED   @ZA14992  29800000
         ST    WORK1,DCMAMIN       SAVE POINTER TO NEXT MINOR           29900000
         B     FREEMIN             BRANCH TO FREE MINOR JUST           X30000000
                                        USED                            30100000
NOMORMIN EQU   *                                                        30200000
         OI    DCMAFLG2,DCMALMIN   INDICATE POINTER TO LAST            X30500000
                                        MINOR OUTPUT SAVED             X30600000
                                        (RATHER THAN NEXT ON Q)         30700000
         ST    WQEBASE,DCMAMIN     SAVE POINTER TO MINOR JUST          X30800000
                                        USED                            30900000
         SPACE 2                                                        31000000
FREEMIN  EQU   *                                                        31100000
*    FREE MINOR WQE                                                     31200000
         SR    WORK1,WORK1         CLEAR REG                            31400000
         IC    WORK1,WMNMUC1       GET USE COUNT FROM MINOR             31500000
         BCTR  WORK1,E0            DECREMENT USE COUNT BY ONE           31600000
         STC   WORK1,WMNMUC1       STORE NEW USE COUNT                  31700000
         LTR   WORK1,WORK1         Q. IS USE COUNT ZERO                 31800000
         BNZ   TESTEND             NO, BRANCH TO TEST FOR END           31900000
DEQ      EQU   *                                                        32000000
         OI    UCMSTS,UCMTB        INDICATE DEQUEUE WORK TO DO          32100000
         L     WORK1,CQEWQE        GET POINTER TO MAJOR WQE   MB Y02958 32200000
         DROP  WQEBASE              DROP OLD REG             Y02958     32300000
         USING WMJM,WORK1          BASE WQE                             32400000
         OI    WMJMMLW,WMJMMLWG    INDICATE IN MAJOR THAT MLWTO         32500000
*                                  CHAIN NEEDS SERVICING.               32600000
         DROP  WORK1                                                    32700000
         USING WMNM,WQEBASE        RESET BASE           Y02958          32800000
         SPACE 2                                                        32900000
TESTEND  EQU   *                                                        33000000
*     TEST FOR  END OF DISPLAY                                          33100000
         TM    DCMAFLG1,DCMADEND   Q. END OF DISPLAY FOUND              33300000
         BO    END1                YES, BRANCH TO HANDLE END            33400000
         SPACE                                                          33500000
*    TEST FOR FULL FRAME                                                33600000
         TM    DCMAFLG1,DCMAFULL   Q. FULL FRAME                        33800000
         BO    FRAMFUL1            YES, BRANCH TO HANDLE                33900000
         SPACE 2                                                        34000000
*    IF MORE MINORS ON Q, RETURN FROM SUBROUTINE, OTHERWISE             34100000
*    OUTPUT WHAT WE HAVE                                                34200000
         TM    DCMAFLG2,DCMALMIN   Q. POINTER TO LAST MINOR            X34400000
                                        SAVED (BECAUSE NO MORE         X34500000
                                        ON QUEUE)                       34600000
         BO    INFDEXIT            YES, OUTPUT WHAT WE HAVE             34700000
         BR    LINKR               MORE MINORS SO RETURN FROM          X34900000
                                        SUBROUTINE                      35000000
         EJECT                                                          35100000
FRAMFUL1 EQU   *                                                        35200000
* FRAME FULL                                                            35300000
         SPACE                                                          35400000
         BAL   LINK1,INDFRFL       INDICATE FRAME FULL IN MAJOR         35600000
         SPACE                                                          35700000
CONTFF   EQU   *                                                        35800000
         NI    DCMAFLG1,XFF-DCMAFRPR  TURN OFF FRAMING IN              X36000000
                                        PROGRESS FLAG                   36100000
         SPACE                                                          36200000
*    FIND FIRST LINE TO BE WRITTEN NEXT FRAME (FIRST DATA LINE)         36300000
         SR    WORK1,WORK1         CLEAR REG                            36600000
         IC    WORK1,DCMATOP       GET LINE NO. OF TOP LINE             36700000
         BCTR  WORK1,E0            SUBTRACT ONE                         36800000
         L     WORKR,DCMADSEC      GET ADDRESS OF SSCT                  36900000
         AR    WORKR,WORK1         WORKR NOW POINTS TO SSCT BYTE       X37000000
                                        FOR TOP LINE                    37100000
SRCHDATA EQU   *                                                        37200000
         LA    WORK1,E1(WORK1)     UPDATE LINE NO.                      37300000
         TM    E0(WORKR),DCMSECDL  Q. DATA LINE                         37400000
         BO    DATALFND            YES, SAVE LINE NO.                   37500000
         LA    WORKR,E1(WORKR)     POINT TO NEXT SSCT BYTE              37600000
         B     SRCHDATA            CONTINUE SEARCH (MUST ALWAYS        X37700000
                                        FIND ONE SINCE FRAME           X37800000
                                        FULL - AT LEAST 4 LINES-        37900000
*                                       CANNOT BE REACHED BY           X38000000
                                        CONTROL LINE AND 2 LABEL       X38100000
                                        LINES)                          38200000
DATALFND EQU   *                                                        38300000
         STC   WORK1,DCMAROW       STORE AS NEXT LINE TO BE            X38400000
                                        WRITTEN (NEXT FRAME)            38500000
         SPACE                                                          38600000
         B     INFDEXIT            EXIT TO I/O ROUTINE                  38700000
         EJECT                                                          38800000
END1     EQU   *                                                        38900000
* END OF DISPLAY FOUND                                                  39000000
         OI    DCMAFLG2,DCMARCON   INDICATE REWRITE CONTROL LINE        39200000
         TM    DCMAFLG1,DCMAFULL   Q. FRAME FULL                        39400000
         BO    TESTIO              YES, BRANCH TO TEST FOR I/O          39500000
         OI    DCMAFLG1,DCMABL     INDICATE IN SACB TO BLANK           X39700000
                                        REST OF AREA                    39800000
TESTIO   EQU   *                                                        39900000
         LH    WORK1,DCMBYTCT      GET BYTE COUNT FOR WRITE             40000000
         LTR   WORK1,WORK1         Q. BYTE COUNT ZERO                   40100000
         BZ    RCON                YES, NO I/O TO DO, SO BRANCH        X40200000
                                        TO REWRITE CONTROL LINE         40300000
         B     INFDEXIT            BRANCH TO ENABLE INTERRUPTS         X40400000
                                        AND EXIT TO I/O ROUTINE         40500000
         SPACE 5                                                        40600000
* END OF MOVELINE SUBROUTINE                                            40700000
         EJECT                                                          40800000
* BLANK REST OF AREA                                                    40900000
*    AFTER THE LAST (END) LINE OF THE DISPLAY HAS BEEN WRITTEN,         41000000
* THE REST OF THE LINES OF THE FRAME MUST BE BLANKED OUT.               41100000
         SPACE                                                          41200000
BLNKREST EQU   *                                                        41300000
         SPACE                                                          41400000
         MVC   DCMLINEN(E1),DCMAROW  INDICATE LINE TO WRITE TO          41700000
         L     WORKR,DCMAINS       GET ADDRESS OF FIRST LINE OF        X41800000
                                        WRITE AREA (INSTRUCTION        X41900000
                                        LINE)                           42000000
         BAL   LINKR,MOVEBLNK      MOVE BLANKS INTO LINE                42100000
         L     WORKR,DCMAENTR      GET ADDRESS OF SECOND LINE OF       X42400000
                                        WRITE AREA (LINE 1 OF          X42500000
                                        ENTRY AREA)                     42600000
         BAL   LINKR,MOVEBLNK      MOVE BLANKS INTO LINE                42700000
         L     WORKR,DCMAENTR      GET ADDRESS OF ENTRY AREA            43000000
         AH    WORKR,DCMCORLN      ADD LENGTH OF A LINE TO GET         X43100000
                                        POINTER TO THIRD LINE OF       X43200000
                                        WRITE AREA                      43300000
*                                       (LINE 2 OF ENTRY AREA)          43400000
         BAL   LINKR,MOVEBLNK      MOVE BLANKS INTO LINE                43500000
         SPACE                                                          43600000
*    AT THIS POINT THE WRITE AREA IS FULL OF BLANKS AND IS              43700000
* OUTPUT.                                                               43800000
         B     INFDEXIT            EXIT TO I/O ROUTINE TO OUTPUT       X43900000
                                        3 LINES OF BLANKS               44000000
         EJECT                                                          44100000
*********************************************************************** 44200000
*                                                                     * 44300000
* MOVE BLANK LINE INTO WRITE AREA                                     * 44400000
*    PARELLELS MOVE LINE SUBROUTINE BUT WRITES OUT BLANK LINES        * 44500000
* AT THE END OF THE LAST FRAME AND THEN FREES THE MAJOR WQE.          * 44600000
*    INPUT - WORKR - POINTS TO LINE OF WRITE AREA                     * 44700000
*            BASE REGS - SACBBASE, OUTQREG, TDCMBASE, UCMEBASE        * 44800000
*    OUTPUT - BLANK LINE IN WRITE AREA                                * 44900000
*            BIT SETTINGS IN SACB, SSCT                               * 45000000
*            INCREMENTS DCMBYTCT AND DCMAROW                          * 45100000
*    EXITS - I/O ROUTINE ON FULL FRAME                                * 45200000
*            RETURN WHEN NOT FULL FRAME                               * 45300000
*    REGISTER USAGE - DESTROYS CONTENTS OF FOLLOWING REGS:            * 45400000
*                   LINK1, WORK1, WORKR                               * 45500000
*            LINKR - LINK REG                                         * 45600000
*                                                                     * 45700000
*********************************************************************** 45800000
         SPACE 2                                                        45900000
MOVEBLNK EQU   *                                                        46000000
         BAL   LINK1,BLNKLINE      BLANK OUT LINE OF WRITE AREA         46300000
         SPACE                                                          46400000
*    INDICATE BLANKED LINE IN SSCT                                      46500000
         BAL   LINK1,FINDSSCT      GET SSCT ENTRY POINTER IN           X46700000
                                        WORKR                           46800000
         OI    E0(WORKR),DCMSECBL  INDICATE BLANKED LINE IN SSCT        46900000
         SPACE                                                          47000000
*    INCREMENT ROW IN SACB BY ONE                                       47100000
         BAL   LINK1,UPDTEROW      INCREMENT ROW NO. AND SET           X47300000
                                        FLAG IF FULL FRAME              47400000
         SPACE                                                          47500000
*    ADD LENGTH OF ONE LINE TO BYTE COUNT FOR WRITE                     47600000
         LH    WORK1,DCMBYTCT      GET CURRENT BYTE COUNT               47700000
         AH    WORK1,DCMCORLN      ADD LENGTH OF ONE LINE               47800000
         STH   WORK1,DCMBYTCT      STORE BYTE COUNT                     47900000
         SPACE                                                          48000000
*    TEST FOR FRAME FULL                                                48100000
         TM    DCMAFLG1,DCMAFULL   Q. FULL FRAME                        48300000
         BNOR  LINKR               NO, RETURN FROM SUBROUTINE MB Y02958 48500000
         SPACE 2                                                        48600000
FRAMFUL2 EQU   *                                                        48700000
         NI    DCMAFLG1,XFF-DCMABL TURN OFF BLANK REST OF AREA         X48900000
                                        FLAG IN SACB                    49000000
FREEMAJ  EQU   *                                                        49100000
         NI    DCMAFLG1,XFF-DCMAFRPR  TURN OFF FRAMING IN              X49300000
                                        PROGRESS FLAG                   49400000
         SPACE                                                          49500000
         TM    DCMADFLG,DCMADD     Q. DYNAMIC DISPLAY                   49600000
         BO    ENDDD               YES, BRANCH TO HANDLE END OF        X49700000
                                        DYNAMIC DISPLAY                 49800000
         SPACE                                                          49900000
         OI    CQEFLAG,CQEAVAIL    INDICATE MAJOR WQE NO LONGER        X50100000
                                   NEEDED BY THIS CONSOLE     MB Y02958 50200000
         NI    CQEFLAG,XFF-CQEENTR TURN OFF ENTRY FLAG        MB Y02958 50300000
         OI    UCMSTS,UCMTB        INDICATE DEQUEUE WORK NEEDED         50400000
         OI    DCMAFLG2,DCMAMJFR   INDICATE MAJOR FREED                 50500000
         SPACE                                                          50600000
         B     INFDEXIT            EXIT TO I/O ROUTINE                  50700000
         SPACE 2                                                        50800000
ENDDD    EQU   *                                                        50900000
*      SINCE THIS MODULE HAS CONTROL AT THIS POINT, THE CONTROL         51000000
*    LINE IS NOT IN THE SCREEN IMAGE BUFFER AND THE MAJOR WQE           51100000
*    MUST BE SAVED FOR POSSIBLE USE BY K D,H OR K D,U TO REBUILD        51200000
*    THE CONTROL LINE.  THE FRAME FULL BIT IN THE MAJOR WQE IS          51300000
*    TURNED ON SO THAT INTERFACE 2 WILL IGNORE THE MAJOR WHILE          51400000
*    IT REMAINS ON THE QUEUE.                                           51500000
         BAL   LINK1,INDFRFL       TURN ON FRAME FULL BIT               51600000
         B     INFDEXIT            EXIT TO I/O ROUTINE                  51700000
         SPACE 2                                                        51800000
* END OF MOVEBLNK SUBROUTINE                                            51900000
         EJECT                                                          52000000
RCON     EQU   *                                                        52100000
* REWRITE CONTROL LINE                                                  52200000
         NI    DCMAFLG2,XFF-DCMARCON  TURN REWRITE FLAG OFF             52400000
         L     WORKR,DCMAINS       GET ADDRESS OF FIRST LINE OF        X52700000
                                        WRITE AREA (INSTRUCTION)       X52800000
                                        LINE)                           52900000
         BAL   LINKR,BLDCNTRL      BUILD CONTROL LINE IN FIRST         X53000000
                                        LINE OF WRITE AREA,             53100000
*                                       INDICATE WRITE ONE LINE,       X53200000
                                        INDICATE WRITE TO TOP          X53300000
                                        LINE OF AREA                    53400000
         TM    DCMAFLG1,DCMABL     Q. REENTRY REQUIRED TO BLANK        X53700000
                                        REST OF AREA                    53800000
         BO    INFDEXIT            YES, EXIT TO I/O ROUTINE             53900000
         B     FREEMAJ             NO, FREE MAJOR WQE                   54000000
         EJECT                                                          54100000
*********************************************************************** 54200000
*                                                                     * 54300000
* UPDATE ROW NUMBER                                                   * 54400000
*    THIS ROUTINE INCREMENTS THE NEXT ROW TO WRITE FIELD OF THE       * 54500000
* SACB AND TESTS FOR A FULL FRAME                                     * 54600000
*    INPUT - NONE OTHER THAN CONTROL BLOCKS AND BASE REGS             * 54700000
*    OUTPUT - DCMAROW - INCREMENTED BY ONE                            * 54800000
*             DCMAFLG1 - DCMAFULL FLAG IS TURNED ON IF UPDATED        * 54900000
*                        ROW NUMBER IS OUTSIDE AREA                   * 55000000
*    REGISTER USAGE - DESTROYS CONTENTS OF FOLLOWING REGS:            * 55100000
*                        WORKR, WORK1                                 * 55200000
*              LINK1 - LINK REGISTER                                  * 55300000
*                                                                     * 55400000
*********************************************************************** 55500000
         SPACE 2                                                        55600000
UPDTEROW EQU   *                                                        55700000
*    INCREMENT ROW IN SACB BY ONE                                       55800000
         SR    WORK1,WORK1         CLEAR REG                            55900000
         IC    WORK1,DCMAROW       GET CURRENT ROW                      56000000
         LA    WORK1,E1(WORK1)     INCREMENT BY ONE                     56100000
         STC   WORK1,DCMAROW       STORE IN SACB                        56200000
         SPACE                                                          56300000
*    TEST FOR FULL FRAME                                                56400000
         SR    WORKR,WORKR         CLEAR REG                            56500000
         IC    WORKR,DCMATOP       GET NO. OF TOP ROW OF AREA           56600000
         AH    WORKR,DCMALN        ADD LENGTH OF AREA                  X56700000
                                        WORKR NOW CONTAINS NO.         X56800000
                                        OF FIRST ROW BELOW AREA.        56900000
*                                       WORK1 STILL CONTAINS           X57000000
                                        NO. OF NEXT ROW TO BE          X57100000
                                        WRITTEN                         57200000
         CR    WORK1,WORKR         Q. INSIDE AREA             MF        57300000
         BNER  LINK1               YES, RETURN FROM SUBROUTIN MB Y02958 57400000
         SPACE                                                          57500000
FRAMFUL3 EQU   *                                                        57600000
         OI    DCMAFLG1,DCMAFULL   INDICATE FULL FRAME                  57700000
         BR    LINK1               RETURN FROM SUBROUTINE               57800000
     EJECT                                                              57900000
*********************************************************************** 58000000
*                                                                     * 58100000
* INDICATE FRAME FULL IN MAJOR WQE                                    * 58200000
*    THE FRAME FULL BIT INDICATES TO THE QUEUEING ROUTINE THAT        * 58300000
* EVEN IF MORE MINOR WQE'S ARE QUEUED, OUT OF LINE OUTPUT SHOULD      * 58400000
* NOT BE INDICATED SINCE NO MORE CAN BE DISPLAYED.  IT ALSO           * 58500000
* CAUSES THE MAJOR WQE TO BE IGNORED BY INTERFACE 2 SINCE NO          * 58600000
* MORE OF THE DISPLAY CAN BE OUTPUT.                                  * 58700000
*    THE ALGORITHM MANIPULATES THE CONSOLE ID TO FIND THE             * 58800000
* CORRESPONDING BIT POSITION IN THE DOUBLE WORD FRAME FULL            * 58900000
* FIELD.                                                              * 59000000
*    INPUT - NONE OTHER THAN CONTROL BLOCKS AND BASE REGS             * 59100000
*    OUTPUT - FRAME FULL BIT TURNED ON IN MAJOR WQE                   * 59200000
*    REGISTER USAGE - DESTROYS CONTENTS OF FOLLOWING REGS:            * 59300000
*                        WORKR, WORK1,ODD,EVEN,WQEBASE                * 59400000
*              LINK1 - LINK REGISTER                                  * 59500000
*                                                                     * 59600000
*********************************************************************** 59700000
         SPACE 2                                                        59800000
INDFRFL  EQU   *                                                        59900000
         SR    WORK1,WORK1         CLEAR REG                            60000000
         IC    WORK1,UCMID         GET CONSOLE ID                       60100000
         BCTR  WORK1,E0            REDUCE FOR ALGORITHM                 60200000
         SR    WORKR,WORKR         CLEAR REG                            60300000
         LA    ODD,E8              GET DIVISOR                          60400000
         DR    WORKR,ODD           DIVIDE ID                            60500000
*                                  WORKR IS BIT IN BYTE                 60600000
*                                  WORK1 IS BYTE IN FIELD               60700000
         LA    EVEN,E1             GET BIT                              60800000
         SRDL  EVEN,E25(WORKR)     CREATE MASK                          60900000
         DROP  WQEBASE                                                  61000000
         USING WMJM,WQEBASE        BASE WQE                             61100000
         L     WQEBASE,CQEWQE      GET POINTER TO MAJOR WQE   MB Y02958 61200000
         LA    EVEN,WMJMCONS(WORK1) POINT TO FRAME FULL BITS     Y02958 61300000
         EX    ODD,INDFF           INDICATE FRAME FULL                  61400000
         BR    LINK1               RETURN FROM INDFRFL SUBROUTINE       61500000
         SPACE                                                          61600000
INDFF    OI    E0(EVEN),E0         INDICATE FRAME FULL                  61700000
         EJECT                                                          61800000
*********************************************************************** 61900000
*                                                                     * 62000000
* BUILD CONTROL LINE SUBROUTINE                                       * 62100000
*    THIS ROUTINE BUILDS THE CONTROL LINE IN THE DCM LINE             * 62200000
* INDICATED, INDICATES WRITE TO THE TOP LINE OF THE AREA, AND         * 62300000
* INDICATES WRITE ONE LINE.                                           * 62400000
*    INPUT - WORKR - POINTS TO THE DCM LINE IN WHICH THE CONTROL      * 62500000
*                   LINE IS TO BE BUILT                               * 62600000
*            BASE REGISTERS FOR MAJOR WQE, SACB, TDCM                 * 62700000
*    OUTPUT - CONTROL LINE BUILT WHERE INDICATED                      * 62800000
*            SETS FIELDS DCMBYTCT, DCMLINEN                           * 62900000
*    REGISTER USAGE - LINKR - LINK REGISTER                           * 63000000
*            DESTROYS CONTENTS OF FOLLOWING REGS: WORK1               * 63100000
*                                                                     * 63200000
*********************************************************************** 63300000
         SPACE 2                                                        63400000
BLDCNTRL EQU   *                                                        63500000
         MVC   DCMBYTCT(E2),DCMCORLN  INDICATE WRITE ONE LINE           63600000
         MVC   DCMLINEN(E1),DCMATOP  INDICATE WRITE TO TOP LINE        X63700000
                                        OF AREA                         63800000
         BAL   LINK1,BLNKLINE      BLANK OUT LINE IN WHICH             X63900000
                                        CONTROL LINE IS TO BE          X64000000
                                        BUILT                           64100000
         USING DCONTROL,WORKR      BASE CONTROL LINE DSECT              64200000
         L     WQEBASE,CQEWQE      BASE MAJOR WQE   MB Y02958           64300000
         LH    WORK1,WMJMTXTL      GET LENGTH OF TITLE                  64400000
         SH    WORK1,C5            SUBTRACT 4 FOR MLWTO ID AND         X64500000
                                        1 FOR EXECUTE                   64600000
         EX    WORK1,MOVTITLE      MOVE TITLE INTO CONTROL LINE         64700000
         SPACE                                                          64800000
MOVFRAME EQU   *                                                        64900000
         MVC   FRAME+E1(L'CFRAME),CFRAME  MOVE 'FRAME' IN               65000000
         TM    DCMAFLG1,DCMADEND   Q. LAST FRAME ON SCREEN              65100000
         BO    LAST                YES, BRANCH TO MOVE IN 'LAST'        65200000
         CLI   DCMAFR,F0           Q. IS FIRST DIGIT OF FRAME          X65300000
                                        NUMBER ZERO                     65400000
         BE    ONEDIGIT            YES, BRANCH TO MOVE ONE DIGIT        65500000
         MVC   FRAME+E7(E2),DCMAFR MOVE 2-DIGIT FRAME NUMBER IN         65600000
         B     MVCNTRL             BRANCH TO MOVE CONTROL CHAR          65700000
ONEDIGIT EQU   *                                                        65800000
         MVC   FRAME+E8(E1),DCMAFR+E1 MOVE 1-DIGIT FRAME NO. IN         65900000
         B     MVCNTRL             BRANCH TO MOVE CONTROL CHAR          66000000
LAST     EQU   *                                                        66100000
         MVC   FRAME+E7(L'CLAST),CLAST  MOVE 'LAST' IN                  66200000
         SPACE 2                                                        66300000
MVCNTRL  EQU   *                                                        66400000
         MVI   CNTRL2+E2,ASTERISK  PUT ASTERISK IN CONTROL 2            66500000
         MVI   CNTRL3+E2,ASTERISK  PUT ASTERISK IN CONTROL 3            66600000
         TM    DCMADFLG,DCMADD     Q. DYNAMIC DISPLAY                   66700000
         BO    CNTRLDD             BRANCH TO BUILD DYNAMIC             X66800000
                                        CONTROL CHARACTERS              66900000
*    STATIC DISPLAY -- MOVE IN 'F' AND 'E'                              67000000
         MVI   CNTRL2+E3,FORWARD   MOVE IN 'F' FOR FRAME FORWARD        67100000
         MVI   CNTRL3+E3,ERASE     MOVE IN 'E' FOR ERASE                67200000
         B     MVAID               BRANCH TO MOVE IN AREA ID            67300000
         SPACE                                                          67400000
CNTRLDD  EQU   *                                                        67500000
         TM    DCMADFLG,DCMAHOLD   Q. DYNAMIC DISPLAY IN               X67600000
                                        HOLD MODE                       67700000
         BO    MVHOLD              BRANCH TO MOVE HOLD OPTIONS          67800000
         SPACE                                                          67900000
*    DYNAMIC DISPLAY IN UPDATE MODE -- MOVE IN 'PT' AND 'H'   MB Y02958 68000000
         MVI   CNTRL2+E3,PT1       MOVE IN 'PT'               MB Y02958 68100000
         MVI   CNTRL2+E4,PT2            FOR STOPTR            MB Y02958 68200000
         MVI   CNTRL3+E3,HOLD      MOVE IN 'H' FOR HOLD                 68300000
         B     MVAID               BRANCH TO MOVE IN AREA ID            68400000
         SPACE                                                          68500000
MVHOLD   EQU   *                                                        68600000
*    DYNAMIC DISPLAY IN HOLD MODE -- MOVE IN 'F' AND 'U'                68700000
         MVI   CNTRL2+E3,FORWARD   MOVE IN 'F' FOR FRAME FORWARD        68800000
         MVI   CNTRL3+E3,UPDATE    MOVE IN 'U' FOR UPDATE               68900000
         SPACE 2                                                        69000000
MVAID    EQU   *                                                        69100000
* MOVE AREA ID IN -- CCA                                                69200000
*    GET CONSOLE ID -CC- AND CONVERT TO EBCDIC                          69300000
         SR    WORK1,WORK1         CLEAR REG                            69400000
         IC    WORK1,UCMID         GET CONSOLE ID                       69500000
         CVD   WORK1,DCMPACK       CONVERT IT TO DECIMAL                69600000
         UNPK  DCMPACK(E3),DCMPACK+E6(E2)  UNPACK IT                    69700000
         MVC   AREAID+E1(E2),DCMPACK+E1  MOVE IN THE CONSOLE ID         69800000
         OI    AREAID+E2,F0        CONVERT SIGN TO ZONE                 69900000
         CLI   AREAID+E1,F0        IS FIRST DIGIT ZERO                  70000000
         BNE   GETAID              NO, GET AREA ID                      70100000
         MVI   AREAID+E1,BLANK     YES, BLANK OUT ZERO                  70200000
GETAID   EQU   *                                                        70300000
*    GET AREA ID                                                        70400000
         MVC   AREAID+E3(E1),DCMAID  MOVE AREA ID IN                    70500000
         SPACE 2                                                        70600000
* RETURN FROM SUBROUTINE                                                70700000
         BR    LINKR               RETURN FROM SUBROUTINE               70800000
         SPACE 2                                                        70900000
* EXECUTED INSTRUCTION                                                  71000000
MOVTITLE MVC   TITLE(E0),WMJMTXT   MOVE TITLE INTO CONTROL LINE         71100000
         SPACE 2                                                        71200000
         DROP  WORKR                                                    71300000
         EJECT                                                          71400000
*********************************************************************** 71500000
*                                                                     * 71600000
* FINDSSCT SUBROUTINE                                                 * 71700000
*    COMPUTES ADDRESS OF SECONDARY SCREEN CONTROL TABLE (SSCT)        * 71800000
* ENTRY FOR LINE POINTED TO BY DCMAROW.                               * 71900000
*    INPUT - DCMAROW                                                  * 72000000
*            TDCMBASE                                                 * 72100000
*    OUTPUT- WORKR - POINTER TO SSCT ENTRY                            * 72200000
*    REGISTER USAGE - WORKR - REGISTER FOR OUTPUT                     * 72300000
*            LINK1 - LINK REGISTER                                    * 72400000
*                                                                     * 72500000
*********************************************************************** 72600000
         SPACE 2                                                        72700000
FINDSSCT EQU   *                                                        72800000
         SR    WORKR,WORKR         CLEAR REG                            72900000
         IC    WORKR,DCMAROW       GET LINE NUMBER                      73000000
         BCTR  WORKR,E0            SUBTRACT ONE                         73100000
         A     WORKR,DCMADSEC      ADD ADDRESS OF BEGINNING OF         X73200000
                                        SSCT                            73300000
         BR    LINK1                                                    73400000
         EJECT                                                          73500000
*********************************************************************** 73600000
*                                                                     * 73700000
* BLANK LINE                                                          * 73800000
*    THIS ROUTINE BLANKS ONE LINE OF THE SCREEN IMAGE BUFFER IN       * 73900000
* THE DCM                                                             * 74000000
*    INPUT - WORKR - ADDRESS OF LINE TO BE BLANKED                    * 74100000
*    OUTPUT - BLANKED LINE                                            * 74200000
*    REGISTER USAGE - DESTROYS CONTENTS OF FOLLOWING REGS:            * 74300000
*                        WORK1                                        * 74400000
*             LINK1 - LINK REGISTER                                   * 74500000
*                                                                     * 74600000
*********************************************************************** 74700000
BLNKLINE EQU   *                                                        74800000
         MVI   E0(WORKR),BLANK     MOVE IN ONE BLANK                    74900000
         LH    WORK1,DCMLGNTH      GET LENGTH OF LINE                   75000000
         SH    WORK1,C2            DECREMENT LENGTH BY 2                75100000
         EX    WORK1,PROP          PROPAGATE BLANK                      75200000
         BR    LINK1               RETURN FROM SUBROUTINE               75300000
PROP     MVC   E1(E0,WORKR),E0(WORKR)  PROPAGATE CHARACTER              75400000
         EJECT                                                          75500000
*                             EXITS                                     75600000
         SPACE 2                                                        75700000
INFDEXIT EQU   *                                                        75800000
         OI    DCMIOCM2,DCMWINFD   INDICATE WRITE INFORMATIONAL        X76000000
                                        DISPLAY                         76100000
IOEXIT   EQU   *                                                        76200000
         L     XFBRANCH,DCMIORTN   LOAD IO ROUTINE ADDRESS              76400000
         SPACE 2                                                        76500000
XCTL     EQU   *                                                        76600000
         L     X1PARM,DCMCXSVE     RESTORE CXSA ADDRESS                 76700000
         BR    XFBRANCH            EXIT TO IEECVET(H,P,R, OR U)         76800000
         EJECT                                                          76900000
*********************************************************************** 77000000
*                                                                     * 77100000
*                             CONSTANTS                               * 77200000
*                                                                     * 77300000
*********************************************************************** 77400000
         SPACE 2                                                        77500000
C2       DC    H'2'                CONSTANT                             77600000
C5       DC    H'5'                CONSTANT                             77700000
CFRAME   DC    CL5'FRAME'          FRAME                                77800000
CLAST    DC    CL4'LAST'           LAST                                 77900000
         EJECT                                                          78000000
*********************************************************************** 78100000
*                                                                     * 78200000
*                             EQUATES                                 * 78300000
*                                                                     * 78400000
*********************************************************************** 78500000
         SPACE 2                                                        78600000
ID1      EQU   C'F'                1ST CHARACTER OF CSECT ID            78700000
ID2      EQU   C'O'                2ND CHARACTER OF CSECT ID            78800000
E0       EQU   0                   NUMBER                               78900000
E1       EQU   1                   NUMBER                               79000000
E2       EQU   2                   NUMBER                               79100000
E3       EQU   3                   NUMBER                               79200000
E4       EQU   4                   NUMBER                               79300000
E6       EQU   6                   NUMBER                               79400000
E8       EQU   8                   NUMBER                               79500000
E20      EQU   20                  NUMBER                               79600000
E25      EQU   25                  NUMBER                               79700000
E7       EQU   7                   NUMBER                               79800000
         SPACE                                                          79900000
Z        EQU   C'Z'                MSG STREAM AREA ID                   80000000
BLANK    EQU   C' '                BLANK                                80100000
F0       EQU   C'0'                EBCDIC 0                             80200000
F1       EQU   C'1'                EBCDIC 1                             80300000
XFF      EQU   X'FF'               TO TURN OFF BITS                     80400000
N255     EQU   255                                                      80450000
         SPACE                                                          80500000
* DESCRIPTOR CODES                                                      80600000
DC8      EQU   X'01'               OUT OF LINE CANDIDATE                80700000
DC9      EQU   X'80'               INFORMATION REQUESTED BY            X80800000
                                        DISPLAY OR MONITOR              80900000
         EJECT                                                          81000000
DCONTROL DSECT                                                          81100000
* CONTROL LINE OF AN OUT OF LINE DISPLAY                                81200000
         DS    0XL74                                                    81300000
TITLE    DS    XL37                TITLE                                81400000
FRAME    DS    XL11                FRAME NUMBER                         81500000
CNTRL1   DS    XL7                 CONTROL CHARACTER 1                 X81600000
                                        (RESERVED FOR BACKWARD         X81700000
                                        FRAMING)                        81800000
ASTERISK EQU   C'*'                INDICATES DETECTABLE FIELD           81900000
CNTRL2   DS    XL8                 CONTROL CHARACTER 2                  82000000
FORWARD  EQU   C'F'                     FRAME FORWARD                   82100000
PT1      EQU   C'P'                     STOP                            82200000
PT2      EQU   C'T'                          TRACK            MB Y02958 82300000
CNTRL3   DS    XL7                 CONTROL CHARACTER 3                  82400000
ERASE    EQU   C'E'                     ERASE DISPLAY                   82500000
HOLD     EQU   C'H'                     HOLD DYNAMIC DISPLAY            82600000
UPDATE   EQU   C'U'                     UPDATE DYNAMIC DISPLAY          82700000
AREAID   DS    XL4                 AREA ID - CCA                        82800000
         EJECT                                                          82900000
         IHACTM  CXSA                                                   83000000
         EJECT                                                          83100000
         IHACTM CQE                                           MB Y02958 83200000
         EJECT                                                          83300000
         IEECUCM FORMAT=NEW                                             83400000
         EJECT                                                          83500000
         IHAWQE  DSECT=YES                                              83600000
         EJECT                                                          83700000
         IEERDCM                                                        83800000
         EJECT                                                          83900000
         IEETDCM                                                        84000000
         EJECT                                                          84100000
         END                                                            84200000
