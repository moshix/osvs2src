         TITLE 'IEEVSEND - OPERATOR SEND COMMAND INITIALIZATION        *00001000
                       '                                                00002000
IEEVSEND CSECT ,                                                   0001 00003000
@PROLOG  BALR  @11,0                                               0001 00004000
@PSTART  DS    0H                                                  0001 00005000
         USING @PSTART,@11                                         0001 00006000
         LR    @10,@01                                             0001 00007000
         L     @00,@SIZDATD                                        0001 00008000
         GETMAIN R,LV=(0)                                               00009000
         LR    @12,@01                                             0001 00010000
         USING @DATD,@12                                           0001 00011000
         LR    @01,@10                                             0001 00012000
         ST    @13,@SA00001+4                                      0001 00013000
         LR    @13,@12                                             0001 00014000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00015000
         MVC   @PC00001(4),0(@01)                                  0001 00016000
         MODID BRANCH=YES                                               00017000
REGS     DS    0H                                                  0038 00018000
*                                      RESTRICT REG 2  FOR INTERFACE    00019000
*                                      LIST TO STAE ROUTINE   Y01043 */ 00020000
*         R1SAV   = R1;             /* SAVE ADDR SEND CSCB FROM REG1 */ 00021000
         ST    R1,R1SAV                                            0048 00022000
*         R14SAV  = R14;            /* SAVE RETURN ADDRESS    Y01043 */ 00023000
         ST    R14,R14SAV                                          0049 00024000
*         R0 = PARMAR;              /* MOVE SP AND LENGTH FOR GETMAIN   00025000
*                                      INTO REG 0             Y01043 */ 00026000
         L     R0,PARMAR                                           0050 00027000
*        GEN(GETMAIN R,LV=(0));     /* GET CORE FOR STAE INTERFACE 0051 00028000
*                                      LIST                   Y01043 */ 00029000
         GETMAIN R,LV=(0)                                               00030000
*        REG2 = REG1;               /* SET BASE TO AREA       Y01043 */ 00031000
         LR    REG2,REG1                                           0052 00032000
*        COMMAND = ADDR(COMMNAME);  /* SET ADDR OF COMMANDNAME Y01043*/ 00033000
         LA    @10,COMMNAME                                        0053 00034000
         ST    @10,COMMAND(,REG2)                                  0053 00035000
*        CSCBADR = R1SAV;           /* SET ADDR OF CSCB       Y01043 */ 00036000
         MVC   CSCBADR(4,REG2),R1SAV                               0054 00037000
*        BASEADR = R11;             /* SAVE BASE ADDRESS      Y01043 */ 00038000
         ST    R11,BASEADR(,REG2)                                  0055 00039000
*        COMAREA = R12;             /* SAVE ADDRESS OF DATA        0056 00040000
*                                      AREA                   Y01043 */ 00041000
         ST    R12,COMAREA(,REG2)                                  0056 00042000
*        GEN(LOAD EP=IEECB860);     /* LOAD STAE ROUTINE      Y01043 */ 00043000
         LOAD EP=IEECB860                                               00044000
*        R15 = R0;                  /* SET UP FOR BALR        Y01043 */ 00045000
         LR    R15,R0                                              0058 00046000
*        REG1  = REG2;              /* INITIALIZE INTERFACE LIST   0059 00047000
*                                      ADDR                   Y01043 */ 00048000
         LR    REG1,REG2                                           0059 00049000
*        GEN(BALR   14,15);         /* INVOKE STAE MODULE     Y01043 */ 00050000
         BALR   14,15                                                   00051000
*        RESTRICT (R6);             /* RESTRICT REG 6 FOR RETURN   0061 00052000
*                                      CODE FROM STAE         Y01043 */ 00053000
*        R6 = R15;                  /* SAVE STAE RETURN CODE  Y01043 */ 00054000
         LR    R6,R15                                              0062 00055000
*        R11 = REG1->BASEADR;       /* RESTORE BASE ADDRESS   Y01043 */ 00056000
         L     R11,BASEADR(,REG1)                                  0063 00057000
*        R12 = REG1->COMAREA;       /* RESTORE DATA AREA ADDRESS   0064 00058000
*                                                             Y01043 */ 00059000
         L     R12,COMAREA(,REG1)                                  0064 00060000
*        R0 = PARMAR;               /* MOVE SP AND LENGTH OF STAE  0065 00061000
*                                      AREA INTO REG 0 FOR FREEMAIN     00062000
*                                                             Y01043 */ 00063000
         L     R0,PARMAR                                           0065 00064000
*        GEN(FREEMAIN R,LV=(0),A=(1));                             0066 00065000
         FREEMAIN R,LV=(0),A=(1)                                        00066000
*        IF R6 ^= 0                 /* WAS STAE SET UP?       Y01043 */ 00067000
*          THEN                     /* YES,CONTINUE TO PROCESS Y01043*/ 00068000
         LTR   R6,R6                                               0067 00069000
         BZ    @RF00067                                            0067 00070000
*            DO;                    /* NO, CLEANUP AND RETURN Y01043 */ 00071000
*                                   /* DELETE THE STAE ROUTINE Y01043*/ 00072000
*              GEN(DELETE EP=IEECB860); /*                    Y01043 */ 00073000
         DELETE EP=IEECB860                                             00074000
*              GOTO EXITCODE;       /* EXIT QUICKLY                  */ 00075000
         B     EXITCODE                                            0070 00076000
*            END;                   /*                        Y01043 */ 00077000
*         RELEASE (R6);             /*                        Y01043 */ 00078000
@RF00067 DS    0H                                                  0073 00079000
*         RELEASE (REG2);                                          0073 00080000
*  /*     GET CORE FOR COMMON DATA AREA TO BE USED BY                */ 00081000
*  /*     OPERATOR SEND PROCESSING MODULES.                          */ 00082000
*         R5 = LENGTH(COMMON);      /* SET REG 0 TO LENGTH OF COMMON    00083000
*                                      DATA AREA FOR USE IN GETMAIN  */ 00084000
         LA    R5,484                                              0074 00085000
*         GEN (GETMAIN R,LV=(R5));  /* OBTAIN 'COMMON'               */ 00086000
         GETMAIN R,LV=(R5)                                              00087000
*         COMPTR = R1;              /* SET 'COMMON' BASE             */ 00088000
*                                                                  0076 00089000
         LR    COMPTR,R1                                           0076 00090000
*         COMMONA = COMMONA && COMMONA; /* CLEAR FIRST SECTION OF  0077 00091000
*                                          COMMON DATA AREA          */ 00092000
         XC    COMMONA(160,COMPTR),COMMONA(COMPTR)                 0077 00093000
*         COMMONB = COMMONB && COMMONB; /* CLEAR SECOND SECTION OF 0078 00094000
*                                          COMMON DATA AREA          */ 00095000
         XC    COMMONB(124,COMPTR),COMMONB(COMPTR)                 0078 00096000
*         COMMONC = COMMONC && COMMONC; /* CLEAR THIRD SECTION OF  0079 00097000
*                                          COMMON DATA AREA          */ 00098000
         XC    COMMONC(200,COMPTR),COMMONC(COMPTR)                 0079 00099000
*         CSCBPTR = R1SAV;          /* SAVE CSCB ADDR IN COMMON      */ 00100000
         MVC   CSCBPTR(3,COMPTR),R1SAV+1                           0080 00101000
*         RETVATT1 = R14SAV;        /* SAVE RETURN ADDR IN COMMON    */ 00102000
         MVC   RETVATT1(3,COMPTR),R14SAV+1                         0081 00103000
*         GEN(EJECT);                                              0082 00104000
         EJECT                                                          00105000
*/*                                                                  */ 00106000
*/*       THE SYNTAX OF THE COMMAND IS:                              */ 00107000
*/*              -                                       -           */ 00108000
*/*             (                                         )          */ 00109000
*/*             (         |-                           -| )          */ 00110000
*/*             (         |                   |-     -| | )          */ 00111000
*/*             (         |,ALL               |,NOW   | | )          */ 00112000
*/*             (         |                   |,LOGON | | )          */ 00113000
*/*             (         |,USER=(USERID LIST)|,SAVE  | | )          */ 00114000
*/*             ( 'TEXT'  |                   |-     -| | )          */ 00115000
*/*             (         |                             | )          */ 00116000
*/*             (         |,BRDCST                      | )          */ 00117000
*/*             (         |                             | )          */ 00118000
*/*             (         |,OPERATOR=ROUTE CODE         | )          */ 00119000
*/*             ( MESSAGE |                             | )          */ 00120000
*/*       SEND -( NUMBER  |,CN=CONSOLE ID               | )-         */ 00121000
*/*        OR   (         |-                           -| )          */ 00122000
*/*        SE   (                                         )          */ 00123000
*/*             (         |-     -|                       )          */ 00124000
*/*             ( MESSAGE |,LIST  |                       )          */ 00125000
*/*             ( NUMBER  |,DELETE|                       )          */ 00126000
*/*             (         |-     -|                       )          */ 00127000
*/*             ( LIST                                               */ 00128000
*/*             (                                         )          */ 00129000
*/*              -                                       -           */ 00130000
*/*       ''TEXT'', 'MESSAGE NUMBER', OR 'LIST' MUST BE SPECIFIED.   */ 00131000
*/*       DEFAULTS ARE 'ALL' AND 'NOW'.                              */ 00132000
*/*                                                                  */ 00133000
*        GEN(EJECT);                                               0083 00134000
         EJECT                                                          00135000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00136000
* /*      SCAN COMMAND BUFFER FOR PARAMETERS.                        */ 00137000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00138000
*         KOMBUF= CHBUF;            /* MOVE COMMAND IMAGE FROM CSCB     00139000
*                                      TO BUFFER DATA AREA. QUOTES 0084 00140000
*                                      REMOVED HERE NOT IN CHBUF     */ 00141000
         MVI   KOMBUF+124,C' '                                     0084 00142000
         L     @10,CSCBPTR-1(,COMPTR)                              0084 00143000
         LA    @10,0(,@10)                                         0084 00144000
         MVC   KOMBUF(124),CHBUF(@10)                              0084 00145000
*         /* SCAN COMMAND BUFFER TO FIRST NON-BLANK CHARACTER        */ 00146000
*         I = 1;                    /* INIT. INDEX TO CIB(COMBUF)    */ 00147000
         LA    I,1                                                 0085 00148000
*         DO I = I TO CBLENG;       /* SCAN TO FIRST NONBLANK CHAR   */ 00149000
         B     @DE00086                                            0086 00150000
@DL00086 DS    0H                                                  0087 00151000
*           IF KOMBUF(I) ^= ' '     /* IS CHAR A NONBLANK            */ 00152000
*             THEN                                                 0087 00153000
         LA    @10,KOMBUF-1(I)                                     0087 00154000
         CLI   0(@10),C' '                                         0087 00155000
         BNE   @RT00087                                            0087 00156000
*               GOTO SCAN1;         /* YES, EXIT LOOP                */ 00157000
*         END;                                                     0089 00158000
         AH    I,@CH00047                                          0089 00159000
@DE00086 MVC   @ZT00003+3(1),CBLENG                                0089 00160000
         C     I,@ZT00003                                          0089 00161000
         BNH   @DL00086                                            0089 00162000
*         GOTO ERRSYN;              /* IF COMMAND BUFFER IS ALL BLANKS, 00163000
*                                      GIVE  'SYNTAX ERROR' MSG      */ 00164000
         B     ERRSYN                                              0090 00165000
* SCAN1:                  /* CHECK FIRST CHARACTER IN COMMAND BUF    */ 00166000
*         IF KOMBUF(I) = ''''       /* CHECK FIRST CHAR FOR A QUOTE  */ 00167000
*           THEN                    /* YES, QUOTE FOUND              */ 00168000
SCAN1    LA    @10,KOMBUF-1(I)                                     0091 00169000
         CLI   0(@10),C''''                                        0091 00170000
         BE    @RT00091                                            0091 00171000
*             GOTO TEXT;            /* GOTO CONTINUE SYNTAX SCAN     */ 00172000
*         IF KOMBUF(I:I+3) = 'LIST' /* IS 'LIST' SPECIFIED           */ 00173000
*           THEN                    /* YES, 'LIST' SPECIFIED         */ 00174000
         LA    @10,KOMBUF-1(I)                                     0093 00175000
         CLC   0(4,@10),@CC00361                                   0093 00176000
         BNE   @RF00093                                            0093 00177000
*             DO;                                                  0094 00178000
*               FLIST = '1'B;       /* INDICATE 'LIST' SPEC'D        */ 00179000
*               FLISTALL = '1'B;    /* INDICATE ALL NOTICES          */ 00180000
         OI    FLIST(COMPTR),B'01100000'                           0096 00181000
*               I = I + 4;          /* STEP OVER KEYWORD             */ 00182000
         AH    I,@CH00135                                          0097 00183000
*               GOTO OUTSCAN;       /* CHECK FINAL BYTE              */ 00184000
         B     OUTSCAN                                             0098 00185000
*             END;                                                 0099 00186000
* /* IF NEITHER 'LIST' NOR TEXT IS SPECIFIED, ASSUME COMMAND IS IN   */ 00187000
* /* MESSAGE NUMBER FORM                                             */ 00188000
*         FMN = '1'B;               /* SET FLAG FOR MSG NO. FORMAT   */ 00189000
@RF00093 OI    FMN(COMPTR),B'00010000'                             0100 00190000
*         J = 1;                    /* SET INDEX TO WORKER           */ 00191000
         MVI   J,X'01'                                             0101 00192000
*         WORKER = WORKER && WORKER;/* CLEAR WORK AREA               */ 00193000
         XC    WORKER(4),WORKER                                    0102 00194000
*         /* SCAN PAST LEADING ZEROES IN THE 'MSGNO' FIELD           */ 00195000
*         DO I = I TO CBLENG;       /* LOOP TO SCAN PAST LEADING 0'S */ 00196000
         B     @DE00103                                            0103 00197000
@DL00103 DS    0H                                                  0104 00198000
*           IF KOMBUF(I) ^= '0'     /* IS THIS CHAR A NON-ZERO?      */ 00199000
*             THEN                  /* YES, NOT A LEADING ZERO       */ 00200000
         LA    @10,KOMBUF-1(I)                                     0104 00201000
         CLI   0(@10),C'0'                                         0104 00202000
         BE    @RF00104                                            0104 00203000
*               DO;                 /* PREPARE FOR MSG NO. LOOP M1882*/ 00204000
*                 MAXMSGLN = I+3;   /* SET LIMITING 'TO' VALUE FOR 0106 00205000
*                                      MSG LENGTH TO 4 DIGITS   M1882*/ 00206000
         LA    @10,3                                               0106 00207000
         AR    @10,I                                               0106 00208000
         ST    @10,MAXMSGLN                                        0106 00209000
*                 GOTO MSGNOLP;     /* EXIT THIS SCAN LOOP           */ 00210000
         B     MSGNOLP                                             0107 00211000
*               END;                /* END DO GROUP FOR 1ST DIGIT OF    00212000
*                                        MSG NO.                M1882*/ 00213000
*             ELSE;                 /* NO, IT IS A LEADING ZERO,   0109 00214000
*                                        LOOP TO SCAN NEXT CHAR      */ 00215000
@RF00104 DS    0H                                                  0110 00216000
*         END;                      /* END OF LOOP FOR LEADING 0'S   */ 00217000
         AH    I,@CH00047                                          0110 00218000
@DE00103 MVC   @ZT00003+3(1),CBLENG                                0110 00219000
         C     I,@ZT00003                                          0110 00220000
         BNH   @DL00103                                            0110 00221000
*         GOTO ERRSYN;              /* GIVE 'SYNTAX ERROR' MSG       */ 00222000
*                                                                  0111 00223000
         B     ERRSYN                                              0111 00224000
* MSGNOLP: DO I = I TO MAXMSGLN;    /* LOOP TO MOVE MSG NO. TO WORK     00225000
*                                      AREA                     M1882*/ 00226000
MSGNOLP  B     @DE00112                                            0112 00227000
@DL00112 DS    0H                                                  0113 00228000
*         IF KOMBUF(I) > 'EF'X THEN /* IS THIS BYTE PART OF MSGNO    */ 00229000
         LA    @10,KOMBUF-1(I)                                     0113 00230000
         CLI   0(@10),X'EF'                                        0113 00231000
         BNH   @RF00113                                            0113 00232000
*           DO;                     /* YES,                          */ 00233000
*           WORKER(J) = KOMBUF(I);  /* MOVE DIGIT TO WORK AREA       */ 00234000
         SR    @10,@10                                             0115 00235000
         IC    @10,J                                               0115 00236000
         LA    @02,WORKER-1(@10)                                   0115 00237000
         LA    @01,KOMBUF-1(I)                                     0115 00238000
         MVC   0(1,@02),0(@01)                                     0115 00239000
*           J = J+1;                /* BUMP INDEX TO NEXT BYTE       */ 00240000
         AH    @10,@CH00047                                        0116 00241000
         STC   @10,J                                               0116 00242000
*           END;                                                   0117 00243000
*         ELSE                                                     0118 00244000
*           GOTO OUT2;              /* END OF MSGNO                  */ 00245000
*         END;                                                     0119 00246000
         AH    I,@CH00047                                          0119 00247000
@DE00112 C     I,MAXMSGLN                                          0119 00248000
         BNH   @DL00112                                            0119 00249000
*                                   /* MSG NUMBER IS CONVERTED TO HEX*/ 00250000
* OUT2:                             /* RIGHT ALIGN MSGNO IN WORKAREA */ 00251000
*         IF J = 1                  /* CHECK IF A VALID DIGIT        */ 00252000
*           THEN                    /* NO DIGIT WAS SPEC'D           */ 00253000
OUT2     CLI   J,1                                                 0120 00254000
         BE    @RT00120                                            0120 00255000
*             GOTO ERRSYN;          /* SYNTAX ERROR, GIVE WARNING    */ 00256000
*             J=J-1;                /* J = NO. DIGITS IN MSG NO.     */ 00257000
         SR    @10,@10                                             0122 00258000
         IC    @10,J                                               0122 00259000
         BCTR  @10,0                                               0122 00260000
         STC   @10,J                                               0122 00261000
*             WORK8 = WORK8 && WORK8;/* CLEAR WORK AREA              */ 00262000
         XC    WORK8(8),WORK8                                      0123 00263000
*             Z = 9-J;              /* SET 'TO' VALUE  FOR DO LOOP   */ 00264000
         LCR   @10,@10                                             0124 00265000
         AH    @10,@CH00299                                        0124 00266000
         STC   @10,Z                                               0124 00267000
*             DO K = 8 TO Z BY -1;  /* MOVE MSGNO TO WORK AREA       */ 00268000
         LA    @10,8                                               0125 00269000
         STC   @10,K                                               0125 00270000
         B     @DE00125                                            0125 00271000
@DL00125 DS    0H                                                  0126 00272000
*               WORK8(K) = WORKER(J);/* MOVE 1 CHAR OF MSGNO         */ 00273000
         LA    @02,WORK8-1(@10)                                    0126 00274000
         SR    @15,@15                                             0126 00275000
         IC    @15,J                                               0126 00276000
         LA    @14,WORKER-1(@15)                                   0126 00277000
         MVC   0(1,@02),0(@14)                                     0126 00278000
*               J=J-1;              /* DECREMENT WORKAREA POINTER    */ 00279000
         BCTR  @15,0                                               0127 00280000
         STC   @15,J                                               0127 00281000
*             END;                                                 0128 00282000
         BCTR  @10,0                                               0128 00283000
         STC   @10,K                                               0128 00284000
@DE00125 MVC   @ZT00003+3(1),Z                                     0128 00285000
         C     @10,@ZT00003                                        0128 00286000
         BNL   @DL00125                                            0128 00287000
*         GEN;                                                     0129 00288000
          PACK  WORK8(8),WORK8(8)   PACK THE MSG NUMBER                 00289000
          CVB   R5,WORK8            CONVERT MSG NO. TO BINARY           00290000
          STH   R5,MSGNO            STORE MESSAGE NUMBER                00291000
*         CBCMSGNO = MSGNO;         /* SAVE MSGNO IN COMMON          */ 00292000
         MVC   CBCMSGNO(2,COMPTR),MSGNO                            0130 00293000
*         DO I = I TO CBLENG;       /* SCAN FOR ZERO OR NON-BLANK    */ 00294000
         B     @DE00131                                            0131 00295000
@DL00131 DS    0H                                                  0132 00296000
*           IF KOMBUF(I) = '00'X    /* CHECK FOR END OF COMMAND BUFR */ 00297000
*             THEN                  /* END OF COMMAND BUFFER         */ 00298000
         LA    @10,KOMBUF-1(I)                                     0132 00299000
         CLI   0(@10),X'00'                                        0132 00300000
         BE    @RT00132                                            0132 00301000
*               GOTO ALLNOW;        /* TAKE DEFAULT OF ALL/NOW       */ 00302000
*         IF KOMBUF (I) = ' '       /*CHECK FOR BLANK                */ 00303000
*           THEN                    /* BLANK FOUND AFTER MSGNO       */ 00304000
         LA    @10,KOMBUF-1(I)                                     0134 00305000
         CLI   0(@10),C' '                                         0134 00306000
         BE    @RT00134                                            0134 00307000
*             GOTO ALLNOW;          /* TAKE DEFAULT OF ALL/NOW       */ 00308000
*               ELSE                /* NON-BLANK FOUND AFTER MSGNO   */ 00309000
*                 GOTO MN02;        /* SCAN NON-BLANK CHAR           */ 00310000
         B     MN02                                                0136 00311000
*         END;                      /* END OF DO LOOP                */ 00312000
         AH    I,@CH00047                                          0137 00313000
@DE00131 MVC   @ZT00003+3(1),CBLENG                                0137 00314000
         C     I,@ZT00003                                          0137 00315000
         BNH   @DL00131                                            0137 00316000
*         GOTO ALLNOW;              /* TAKE DEFAULT OF ALL/NOW       */ 00317000
         B     ALLNOW                                              0138 00318000
* MN02:                       /* I POINTS TO A NON-BLANK AFTER MSGNO */ 00319000
*         IF KOMBUF(I) = ','        /* IS COMMA SPEC'D               */ 00320000
*           THEN                    /* COMMA FOUND                   */ 00321000
MN02     LA    @10,KOMBUF-1(I)                                     0139 00322000
         CLI   0(@10),C','                                         0139 00323000
         BNE   @RF00139                                            0139 00324000
*             I = I+1;              /* BUMP INDEX PAST COMMA         */ 00325000
         AH    I,@CH00047                                          0140 00326000
*           ELSE                    /* INVALID CHAR AFTER MSGNO      */ 00327000
*             GOTO ERRSYN;          /* SYNTAX ERROR                  */ 00328000
*         IF KOMBUF(I:I+3) = 'LIST' /* IS 'LIST' SPECIFIED           */ 00329000
*           THEN                    /* YES,                          */ 00330000
         LA    @10,KOMBUF-1(I)                                     0142 00331000
         CLC   0(4,@10),@CC00361                                   0142 00332000
         BNE   @RF00142                                            0142 00333000
*             DO;                                                  0143 00334000
*               FLIST = '1'B;       /* INDICATE 'LIST' SPEC'D        */ 00335000
         OI    FLIST(COMPTR),B'00100000'                           0144 00336000
*               I = I + 4;          /* STEP OVER KEYWORD             */ 00337000
         AH    I,@CH00135                                          0145 00338000
*               GOTO OUTSCAN;       /* CHECK FINAL BYTE              */ 00339000
         B     OUTSCAN                                             0146 00340000
*             END;                                                 0147 00341000
*         IF KOMBUF(I:I+5) = 'DELETE' /* IS 'DELETE' SPEC'D          */ 00342000
*           THEN                    /* YES                           */ 00343000
@RF00142 LA    @10,KOMBUF-1(I)                                     0148 00344000
         CLC   0(6,@10),@CC00376                                   0148 00345000
         BNE   @RF00148                                            0148 00346000
*             DO;                                                  0149 00347000
*               FDEL = '1'B;        /* INDICATE 'DELETE' SPEC'D      */ 00348000
         OI    FDEL(COMPTR),B'10000000'                            0150 00349000
*               I = I + 6;          /* STEP OVER KEYWORD             */ 00350000
         AH    I,@CH00377                                          0151 00351000
*               GOTO OUTSCAN;       /* CHECK LAST BYTE               */ 00352000
         B     OUTSCAN                                             0152 00353000
*             END;                                                 0153 00354000
*         GOTO TE2;                 /* SCAN FOR RECIPIENT            */ 00355000
         B     TE2                                                 0154 00356000
* TEXT:                           /* MSG TEXT SPEC'D ON SEND COMMAND */ 00357000
*         I = I+1;                  /* BUMP INDEX TO CHAR AFTER QUOTE*/ 00358000
TEXT     AH    I,@CH00047                                          0155 00359000
*         TBEG = I;                 /* SET TEXT BEGINNING INDEX      */ 00360000
         STC   I,TBEG(,COMPTR)                                     0156 00361000
*  /* 'TEXTLENG' AND 'VALCNT' ARE SET TO ZERO WHEN COMMON IS CLEARED */ 00362000
*  /*     SCAN COMMAND BUFFER FOR CLOSING QUOTE TO MESSAGE TEXT      */ 00363000
*         DO I = I TO CBLENG;       /* SCAN FOR CLOSING QUOTE ON TEXT*/ 00364000
         B     @DE00157                                            0157 00365000
@DL00157 DS    0H                                                  0158 00366000
*         IF KOMBUF(I) = ''''       /* IS CHAR A SINGLE QUOTE        */ 00367000
*         THEN                                                     0158 00368000
         LA    @10,KOMBUF-1(I)                                     0158 00369000
         CLI   0(@10),C''''                                        0158 00370000
         BE    @RT00158                                            0158 00371000
*            GOTO QUOTE;            /* SINGLE QUOTE FOUND            */ 00372000
*TEXT3:                  /* TEXT HAS BEEN PACKED OVER DOUBLE QUOTE   */ 00373000
*         TEXTLENG = TEXTLENG+1;    /* NO, BUMP TEXT LENGTH BY 1     */ 00374000
TEXT3    LA    @10,1                                               0160 00375000
         MVC   @ZT00003+3(1),TEXTLENG(COMPTR)                      0160 00376000
         A     @10,@ZT00003                                        0160 00377000
         STC   @10,TEXTLENG(,COMPTR)                               0160 00378000
*         END;                                                     0161 00379000
         AH    I,@CH00047                                          0161 00380000
@DE00157 MVC   @ZT00003+3(1),CBLENG                                0161 00381000
         C     I,@ZT00003                                          0161 00382000
         BNH   @DL00157                                            0161 00383000
*         GOTO ERRSYN;              /* SYNTAX ERROR - NO CLOSING QUOTE  00384000
*                                      FOR MESSAGE TEXT              */ 00385000
         B     ERRSYN                                              0162 00386000
*QUOTE:                             /* CHECK FOR DOUBLE QUOTES       */ 00387000
*        IF KOMBUF(I+1) = ''''     /* IS NEXT CHAR A QUOTE           */ 00388000
*          THEN                    /* YES, DOUBLE QUOTES, REMOVE 1   */ 00389000
QUOTE    LA    @10,KOMBUF(I)                                       0163 00390000
         CLI   0(@10),C''''                                        0163 00391000
         BNE   @RF00163                                            0163 00392000
*            DO;                   /* SHIFT BUFFER 1 BYTE TO LEFT    */ 00393000
*              KOMBUF (I:CBLENG-1) = KOMBUF (I+1:CBLENG);          0165 00394000
         LA    @10,KOMBUF-1(I)                                     0165 00395000
         SR    @02,@02                                             0165 00396000
         IC    @02,CBLENG                                          0165 00397000
         LR    @15,@02                                             0165 00398000
         SR    @15,I                                               0165 00399000
         BCTR  @15,0                                               0165 00400000
         LA    @01,KOMBUF(I)                                       0165 00401000
         EX    @15,@SM00474                                        0165 00402000
*              KOMBUF(CBLENG) = KOMBUF(CBLENG) && KOMBUF (CBLENG); 0166 00403000
         LA    @10,KOMBUF-1(@02)                                   0166 00404000
         XC    0(1,@10),0(@10)                                     0166 00405000
*              GOTO TEXT3;         /* CONTINUE SCAN LOOP             */ 00406000
         B     TEXT3                                               0167 00407000
*            END;                                                  0168 00408000
*          ELSE;                   /* NEXT CHAR NOT A QUOTE, ASSUME     00409000
*                                     SINGLE QUOTE END OF MSG TEXT   */ 00410000
@RF00163 DS    0H                                                  0170 00411000
* /* SCAN COMMAND BUFFER FOR PARAMETERS FOLLOWING MESSAGE TEXT       */ 00412000
* ENDTEXT:                /* CLOSING QUOTE OF MSG TEXT WAS FOUND     */ 00413000
*         IF TEXTLENG = 0           /* TEST IF NULL TEXT SPEC'D      */ 00414000
*           THEN                    /* YES,                          */ 00415000
ENDTEXT  CLI   TEXTLENG(COMPTR),0                                  0170 00416000
         BE    @RT00170                                            0170 00417000
*             GOTO ERRSYN;          /* GIVE 'SYNTAX ERROR' MSG       */ 00418000
*           ELSE                    /* TEXT IS PRESENT               */ 00419000
*             DO;                                                  0172 00420000
*               FTEXT = '1'B;       /* INDICATE TEXT PRESENT         */ 00421000
         OI    FTEXT(COMPTR),B'00000010'                           0173 00422000
*               COMBUF = KOMBUF(1:CBLENG); /* COPY EDITED COMMAND    */ 00423000
         MVI   COMBUF+1(COMPTR),C' '                               0174 00424000
         MVC   COMBUF+2(122,COMPTR),COMBUF+1(COMPTR)               0174 00425000
         SR    @10,@10                                             0174 00426000
         IC    @10,CBLENG                                          0174 00427000
         BCTR  @10,0                                               0174 00428000
         EX    @10,@SM00477                                        0174 00429000
*             END;                                                 0175 00430000
*          I=I+1;                   /* BUMP INDEX PAST END QUOTE     */ 00431000
         AH    I,@CH00047                                          0176 00432000
*                                   /* SCAN CHAR AFTER MSG TEXT      */ 00433000
*          IF KOMBUF(I) = '00'X     /* TEST FOR END OF COMBUF        */ 00434000
*            THEN                   /* YES, NO PARMS AFTER MSG TEXT  */ 00435000
         LA    @10,KOMBUF-1(I)                                     0177 00436000
         CLI   0(@10),X'00'                                        0177 00437000
         BE    @RT00177                                            0177 00438000
*              GOTO ALLNOW;         /* TAKE DEFAULTS-'ALL AND'NOW'   */ 00439000
*         IF KOMBUF(I) = ' '        /* CHECK FOR BLANK               */ 00440000
*           THEN                    /* BLANK FOUND, STOP SCAN        */ 00441000
         LA    @10,KOMBUF-1(I)                                     0179 00442000
         CLI   0(@10),C' '                                         0179 00443000
         BE    @RT00179                                            0179 00444000
*             GOTO ALLNOW;          /* TAKE DEFAULTS OF ALL AND NOW  */ 00445000
*           ELSE;                   /* NON BLANK FOUND               */ 00446000
* TEXTEND:                /* CHECK FOR COMMA AFTER MSG TEXT ENDQUOTE */ 00447000
*         IF KOMBUF(I) = ','        /* CHECK FOR COMMA               */ 00448000
*           THEN                    /* COMMA FOUND                   */ 00449000
TEXTEND  LA    @10,KOMBUF-1(I)                                     0182 00450000
         CLI   0(@10),C','                                         0182 00451000
         BNE   @RF00182                                            0182 00452000
*             DO;                                                  0183 00453000
*               I = I+1;            /* BUMP INDEX PAST COMMA         */ 00454000
         AH    I,@CH00047                                          0184 00455000
*              GOTO TE2;            /* CONTINUE SCAN                 */ 00456000
         B     TE2                                                 0185 00457000
*             END;                                                 0186 00458000
*           ELSE                    /* NOT A COMMA                   */ 00459000
*             GOTO ERRSYN;          /* SYNTAX ERROR, COMMA MISSING   */ 00460000
* ALLNOW:                          /* DEFAULT TO 'ALL' AND 'NOW'    */  00461000
*         FALL = '1'B;              /* SET FLAG FOR 'ALL' SPEC'D     */ 00462000
ALLNOW   DS    0H                                                  0189 00463000
*         FNOW = '1'B;              /* SET FLAG FOR 'NOW'            */ 00464000
         OI    FALL(COMPTR),B'00010100'                            0189 00465000
*         GOTO ENDCB;               /* GO TO SET MSG AND SEND TO ALL */ 00466000
         B     ENDCB                                               0190 00467000
* TE2:                              /* CHECK FOR 'LOGON' OR 'NOW'    */ 00468000
*         IF KOMBUF(I:I+4) = 'LOGON'/* IS 'LOGON' SPECIFIED          */ 00469000
*           THEN                                                   0191 00470000
TE2      LA    @10,KOMBUF-1(I)                                     0191 00471000
         CLC   0(5,@10),@CC00390                                   0191 00472000
         BNE   @RF00191                                            0191 00473000
*           DO;                                                    0192 00474000
*              FLOGON = '1'B;      /* SET FLAG FOR LOGON             */ 00475000
*              FNOW = '1'B;        /* SET FLAG FOR NOW ALSO          */ 00476000
         OI    FLOGON(COMPTR),B'00011000'                          0194 00477000
*              I = I+5;            /* BUMP INDEX PAST 'LOGON'        */ 00478000
         AH    I,@CH00375                                          0195 00479000
*              GOTO SCANMOR;       /* CONTINUE SCAN FOR MORE PARMS   */ 00480000
         B     SCANMOR                                             0196 00481000
*           END;                                                   0197 00482000
*         IF KOMBUF(I:I+3) = 'SAVE' /* 'SAVE' SPEC'D                 */ 00483000
*           THEN                    /* YES, 'SAVE' SPEC'D            */ 00484000
@RF00191 LA    @10,KOMBUF-1(I)                                     0198 00485000
         CLC   0(4,@10),@CC00393                                   0198 00486000
         BNE   @RF00198                                            0198 00487000
*             DO;                                                  0199 00488000
*               FLOGON = '1'B;      /* INDICATE SAVE SPECIFIED       */ 00489000
         OI    FLOGON(COMPTR),B'00001000'                          0200 00490000
*               I = I + 4;          /* STEP OVER KEYWORD             */ 00491000
         AH    I,@CH00135                                          0201 00492000
*               GOTO SCANMOR;       /* CONTINUE SCAN                 */ 00493000
         B     SCANMOR                                             0202 00494000
*             END;                                                 0203 00495000
*         ELSE                                                     0204 00496000
*           IF KOMBUF(I:I+2) = 'NOW'/* IS 'NOW' SPECIFIED            */ 00497000
*             THEN                  /* YES, 'NOW' IS SPECIFIED       */ 00498000
@RF00198 LA    @10,KOMBUF-1(I)                                     0204 00499000
         CLC   0(3,@10),@CC00394                                   0204 00500000
         BNE   @RF00204                                            0204 00501000
*               DO;                                                0205 00502000
*                 FNOW ='1'B;       /* SET FLAG FOR 'NOW' SPEC'D     */ 00503000
         OI    FNOW(COMPTR),B'00010000'                            0206 00504000
*                 I = I+3;          /* BUMP INDEX PAST 'NOW'         */ 00505000
         AH    I,@CH00254                                          0207 00506000
*                 GOTO SCANMOR;     /* CONTINUE SCAN FOR MORE PARMS  */ 00507000
         B     SCANMOR                                             0208 00508000
*               END;                                               0209 00509000
*         IF KOMBUF (I:I+5) = 'USER=(' /* IS 'USER=(' SPECIFIED      */ 00510000
*           THEN                    /* YES, THEN                     */ 00511000
@RF00204 LA    @10,KOMBUF-1(I)                                     0210 00512000
         CLC   0(6,@10),@CC00395                                   0210 00513000
         BE    @RT00210                                            0210 00514000
*             GOTO TUSER;           /* GOTO SCAN USERID LIST         */ 00515000
*         IF KOMBUF (I:I+2) = 'ALL' /* IS 'ALL' SPECIFIED            */ 00516000
*           THEN                    /* YES, THEN                     */ 00517000
         LA    @10,KOMBUF-1(I)                                     0212 00518000
         CLC   0(3,@10),@CC00397                                   0212 00519000
         BE    @RT00212                                            0212 00520000
*             GOTO TALL;            /* GOTO CHECK FOR END OF COMMAND    00521000
*                                      BUFFER OR NEXT PARM           */ 00522000
*         IF KOMBUF(I:I+5) = 'BRDCST' /* 'BRDCST' SPEC'D             */ 00523000
*           THEN                    /* YES, 'BRDCST' SPEC'D          */ 00524000
         LA    @10,KOMBUF-1(I)                                     0214 00525000
         CLC   0(6,@10),@CC00399                                   0214 00526000
         BNE   @RF00214                                            0214 00527000
*             DO;                                                  0215 00528000
*               FBRDCST = '1'B;     /* INDICATE 'BRDCST' SPEC'D      */ 00529000
         OI    FBRDCST(COMPTR),B'00001000'                         0216 00530000
*               I = I + 6;          /* STEP OVER KEYWORD             */ 00531000
         AH    I,@CH00377                                          0217 00532000
*               GOTO OUTSCAN;       /* CHECK LAST BYTE               */ 00533000
         B     OUTSCAN                                             0218 00534000
*             END;                                                 0219 00535000
*         IF KOMBUF(I:I+8) = 'OPERATOR=' /* 'OPERATOR=' SPEC'D       */ 00536000
*           THEN                    /* YES, ROUTE CODE FOLLOWS       */ 00537000
@RF00214 LA    @10,KOMBUF-1(I)                                     0220 00538000
         CLC   0(9,@10),@CC00400                                   0220 00539000
         BE    @RT00220                                            0220 00540000
*             GOTO TROUTE;          /* FINISH KEYWORD SCAN           */ 00541000
*         IF KOMBUF(I:I+2) = 'CN='  /* 'CN=' SPEC'D                  */ 00542000
*           THEN                    /* YES, 'CN=' SPEC'D             */ 00543000
         LA    @10,KOMBUF-1(I)                                     0222 00544000
         CLC   0(3,@10),@CC00403                                   0222 00545000
         BE    @RT00222                                            0222 00546000
*             GOTO TOPER;           /* FINISH KEYWORD SCAN           */ 00547000
*             GOTO ERRSYN;          /*INVALID CHARACTER/ERROR EXIT   */ 00548000
         B     ERRSYN                                              0224 00549000
* SCANMOR:                       /* CHECK IF ANY MORE PARMS SPECIFIED*/ 00550000
*         IF KOMBUF(I) = '00'X      /* CHECK FOR END OF COMBUF       */ 00551000
*           THEN                    /* YES, END OF COMMAND           */ 00552000
SCANMOR  LA    @10,KOMBUF-1(I)                                     0225 00553000
         CLI   0(@10),X'00'                                        0225 00554000
         BE    @RT00225                                            0225 00555000
*             GOTO TANOW;           /* TAKE DEFAULTS IF NECESSARY    */ 00556000
*                                   /* NOT END OF BUFFER, SCAN ON    */ 00557000
*         IF KOMBUF(I) = ','        /* IS THERE ANOTHER PARAM TO SCAN*/ 00558000
*           THEN                    /* YES COMMA FOUND, CONTINUE SCAN*/ 00559000
         LA    @10,KOMBUF-1(I)                                     0227 00560000
         CLI   0(@10),C','                                         0227 00561000
         BNE   @RF00227                                            0227 00562000
*               DO;                                                0228 00563000
*                 I=I+1;            /* BUMP I TO NEXT CHAR           */ 00564000
         AH    I,@CH00047                                          0229 00565000
*                 GOTO SCANNEXT;    /*SCAN NEXT PARAM AT SCANNEXT    */ 00566000
         B     SCANNEXT                                            0230 00567000
*               END;                /*END TO POSITIVE DO LOOP        */ 00568000
*           IF KOMBUF(I) = ' '      /* IS CHAR A BLANK               */ 00569000
*             THEN                  /* BLANK FOUND, STOP SCAN        */ 00570000
@RF00227 LA    @10,KOMBUF-1(I)                                     0232 00571000
         CLI   0(@10),C' '                                         0232 00572000
         BE    @RT00232                                            0232 00573000
*               GOTO TANOW;          /* GO SET DEFAULTS              */ 00574000
*             ELSE                   /* NOT A BLANK, CHAR IS INVALID */ 00575000
*               GOTO ERRSYN;         /* SYNTAX ERROR, GIVE WARNING   */ 00576000
*                                                                  0234 00577000
         B     ERRSYN                                              0234 00578000
*  SCANNEXT:      /* COMMA FOUND, SCAN FOR KEYWORD, 'USER' OR 'ALL'  */ 00579000
*         IF KOMBUF(I:I+5) = 'USER=(' /* IS 'USER=(' SPECIFIED?      */ 00580000
*           THEN                                                   0235 00581000
SCANNEXT LA    @10,KOMBUF-1(I)                                     0235 00582000
         CLC   0(6,@10),@CC00395                                   0235 00583000
         BE    @RT00235                                            0235 00584000
*             GOTO TUSER;           /* YES, GOTO SCAN USERID LIST    */ 00585000
*         IF KOMBUF(I:I+2) = 'ALL'  /* IS 'ALL' SPEC'D               */ 00586000
*           THEN                    /* 'ALL' SPEC'D ON SEND CMD      */ 00587000
         LA    @10,KOMBUF-1(I)                                     0237 00588000
         CLC   0(3,@10),@CC00397                                   0237 00589000
         BE    @RT00237                                            0237 00590000
*             GOTO TALL;            /* SCAN FOR MORE PARMS           */ 00591000
*           ELSE                    /* INVALID PARM AFTER COMMA      */ 00592000
*             GOTO ERRSYN;          /* GIVE SYNTAX ERROR MESSAGE     */ 00593000
         B     ERRSYN                                              0239 00594000
*TROUTE:                            /* RECOVER ROUTE CODE            */ 00595000
*         I = I + 9;                /* STEP OVER 'OPERATOR='         */ 00596000
TROUTE   AH    I,@CH00299                                          0240 00597000
*         WORK8 = WORK8 && WORK8;   /* CLEAR WORKAREA                */ 00598000
         XC    WORK8(8),WORK8                                      0241 00599000
*         DO J = I TO I + 2;        /* SCAN ROUTING CODE             */ 00600000
         LR    @10,I                                               0242 00601000
         B     @DE00242                                            0242 00602000
@DL00242 DS    0H                                                  0243 00603000
*           IF KOMBUF(J) = '00'X    /* END OF BUFFER                 */ 00604000
*             THEN                  /* YES, END OF ID                */ 00605000
         LA    @02,KOMBUF-1(@10)                                   0243 00606000
         CLI   0(@02),X'00'                                        0243 00607000
         BE    @RT00243                                            0243 00608000
*               GOTO ENDRTE;        /* EXIT ROUTE ID SCAN            */ 00609000
*           IF KOMBUF(J) = ' '      /* BLANK DELIMETER               */ 00610000
*             THEN                  /* YES, END OF ROUTE CODE        */ 00611000
         LA    @02,KOMBUF-1(@10)                                   0245 00612000
         CLI   0(@02),C' '                                         0245 00613000
         BE    @RT00245                                            0245 00614000
*               GOTO ENDRTE;        /* EXIT ROUTE ID SCAN            */ 00615000
*           IF KOMBUF(J) < 'F0'X    /* NOT NUMERIC                   */ 00616000
*             THEN                  /* SYNTAX ERROR                  */ 00617000
         LA    @02,KOMBUF-1(@10)                                   0247 00618000
         CLI   0(@02),X'F0'                                        0247 00619000
         BL    @RT00247                                            0247 00620000
*               GOTO ERRSYN;        /* TERMINATE SCAN                */ 00621000
*           WORK8(7) = WORK8(8);    /* SHIFT DIGIT, IF PRESENT       */ 00622000
         MVC   WORK8+6(1),WORK8+7                                  0249 00623000
*           WORK8(8) = KOMBUF(J);   /* COPY 'NEXT' DIGIT             */ 00624000
         LA    @02,KOMBUF-1(@10)                                   0250 00625000
         MVC   WORK8+7(1),0(@02)                                   0250 00626000
*         END;                                                     0251 00627000
         AH    @10,@CH00047                                        0251 00628000
@DE00242 STC   @10,J                                               0251 00629000
         LA    @02,2                                               0251 00630000
         AR    @02,I                                               0251 00631000
         CR    @10,@02                                             0251 00632000
         BNH   @DL00242                                            0251 00633000
*         GOTO ERRSYN;              /* TOO MANY DIGITS OR          0252 00634000
*                                      INVALID DELIMITER             */ 00635000
         B     ERRSYN                                              0252 00636000
*ENDRTE:                                                           0253 00637000
*         IF J = I                  /* NO ROUTE CODE FOUND           */ 00638000
*           THEN                    /* SYNTAX ERROR                  */ 00639000
ENDRTE   MVC   @ZT00003+3(1),J                                     0253 00640000
         C     I,@ZT00003                                          0253 00641000
         BE    @RT00253                                            0253 00642000
*             GOTO ERRSYN;          /* EXIT SCAN                     */ 00643000
*         GEN;                      /* CONVERT ROUTE CODE TO BIN     */ 00644000
          PACK WORK8(8),WORK8(8)    PACK CONSOLE ID                     00645000
          CVB  R5,WORK8             CONVERT TO BINARY                   00646000
*         IF R5 > 15 |              /* ROUTE CODE OVER MAX           */ 00647000
*            R5 < 1                 /* ROUTE CODE UNDER MIN          */ 00648000
*           THEN                    /* SYNTAX ERROR                  */ 00649000
         CH    R5,@CH00108                                         0256 00650000
         BH    @RT00256                                            0256 00651000
         LTR   R5,R5                                               0256 00652000
         BNP   @RT00256                                            0256 00653000
*             GOTO ERRSYN;          /* EXIT SCAN                     */ 00654000
*         CBCCONID = R5;            /* SAVE ROUTE CODE               */ 00655000
         STH   R5,CBCCONID(,COMPTR)                                0258 00656000
*         GOTO ENDCB;               /* SCAN IS OVER                  */ 00657000
         B     ENDCB                                               0259 00658000
*TOPER:                             /* RECOVER CONSOLE ID            */ 00659000
*         I = I + 3;                /* STEP OVER 'CN='               */ 00660000
TOPER    AH    I,@CH00254                                          0260 00661000
*         FCNS = '1'B;              /* INDICATE 'CN=' SPECIFIED      */ 00662000
         OI    FCNS(COMPTR),B'00000001'                            0261 00663000
*         WORK8 = WORK8 && WORK8;   /* SET WORKAREA TO ZEROES        */ 00664000
         XC    WORK8(8),WORK8                                      0262 00665000
*         DO J = I TO I + 2;        /* SCAN CONSOLE ID               */ 00666000
         LR    @10,I                                               0263 00667000
         B     @DE00263                                            0263 00668000
@DL00263 DS    0H                                                  0264 00669000
*           IF KOMBUF(J) = '00'X    /* END OF BUFFER                 */ 00670000
*             THEN                  /* YES, END OF ID                */ 00671000
         LA    @02,KOMBUF-1(@10)                                   0264 00672000
         CLI   0(@02),X'00'                                        0264 00673000
         BE    @RT00264                                            0264 00674000
*               GOTO ENDCNS;        /* EXIT CONSOLE ID SCAN          */ 00675000
*           IF KOMBUF(J) = ' '      /* BLANK DELIMETER               */ 00676000
*             THEN                  /* YES, END OF CONSOLE ID        */ 00677000
         LA    @02,KOMBUF-1(@10)                                   0266 00678000
         CLI   0(@02),C' '                                         0266 00679000
         BE    @RT00266                                            0266 00680000
*               GOTO ENDCNS;        /* EXIT CONSOLE ID SCAN          */ 00681000
*           IF KOMBUF(J) < 'F0'X    /* NOT NUMERIC                   */ 00682000
*             THEN                  /* SYNTAX ERROR                  */ 00683000
         LA    @02,KOMBUF-1(@10)                                   0268 00684000
         CLI   0(@02),X'F0'                                        0268 00685000
         BL    @RT00268                                            0268 00686000
*               GOTO ERRSYN;        /* TERMINATE SCAN                */ 00687000
*           WORK8(7) = WORK8(8);    /* SHIFT DIGIT, IF PRESENT       */ 00688000
         MVC   WORK8+6(1),WORK8+7                                  0270 00689000
*           WORK8(8) = KOMBUF(J);   /* COPY 'NEXT' DIGIT             */ 00690000
         LA    @02,KOMBUF-1(@10)                                   0271 00691000
         MVC   WORK8+7(1),0(@02)                                   0271 00692000
*         END;                                                     0272 00693000
         AH    @10,@CH00047                                        0272 00694000
@DE00263 STC   @10,J                                               0272 00695000
         LA    @02,2                                               0272 00696000
         AR    @02,I                                               0272 00697000
         CR    @10,@02                                             0272 00698000
         BNH   @DL00263                                            0272 00699000
*         GOTO ERRSYN;              /* TOO MANY DIGITS OR          0273 00700000
*                                      INVALID DELIMETER             */ 00701000
         B     ERRSYN                                              0273 00702000
*ENDCNS:                                                           0274 00703000
*         IF J = I                  /* NO CONSOLE ID FOUND           */ 00704000
*           THEN                    /* SYNTAX ERROR                  */ 00705000
ENDCNS   MVC   @ZT00003+3(1),J                                     0274 00706000
         C     I,@ZT00003                                          0274 00707000
         BE    @RT00274                                            0274 00708000
*             GOTO ERRSYN;          /* EXIT SCAN                     */ 00709000
*         GEN;                      /* CONVERT CONSOLE ID TO BINARY  */ 00710000
          PACK WORK8(8),WORK8(8)    PACK CONSOLE ID                     00711000
          CVB   R5,WORK8            CONVERT TO BINARY                   00712000
*         IF R5 > 64                /* CONSOLE ID OVER MAXIMUM       */ 00713000
*           THEN                    /* SYNTAX ERROR                  */ 00714000
         CH    R5,@CH00416                                         0277 00715000
         BH    @RT00277                                            0277 00716000
*             GOTO ERRSYN;          /* EXIT SCAN                     */ 00717000
*         CBCCONID = R5;            /* SAVE CONSOLE ID               */ 00718000
         STH   R5,CBCCONID(,COMPTR)                                0279 00719000
*         GOTO ENDCB;               /* SCAN IS OVER                  */ 00720000
         B     ENDCB                                               0280 00721000
* TUSER:                          /* 'USER' SPEC'D. SCAN FOR USERIDS.*/ 00722000
*         FUSER = '1'B;             /* SET FLAG FOR 'USER' SPEC'D    */ 00723000
TUSER    OI    FUSER(COMPTR),B'00000100'                           0281 00724000
*         I = I+5;                  /* BUMP INDEX PAST 'USER='       */ 00725000
*                                                                  0282 00726000
         AH    I,@CH00375                                          0282 00727000
*ULSCAN6:       /* FIRST CHARACTER OF USERID IS CHECKED FOR ALPHABETIC  00728000
*                  OR NATIONAL CHARACTER                      A48271 */ 00729000
*         I = I+1;                  /* BUMP INDEX PAST THIS DELIMITER   00730000
*                                      CHARACTER                     */ 00731000
ULSCAN6  AH    I,@CH00047                                          0283 00732000
* VALOOP1:                          /* CHECK FIRST CHAR OF USERID FOR   00733000
*                                      ALPHABETIC OR NAT CHAR  A48271*/ 00734000
*         DO J = 1 TO VALEND1 BY 1; /* SCAN TABLE OF VALID CHARS   0284 00735000
*                                       FOR 1ST CHAR OF USERID A48271*/ 00736000
VALOOP1  LA    @10,1                                               0284 00737000
         STC   @10,J                                               0284 00738000
         B     @DE00284                                            0284 00739000
@DL00284 DS    0H                                                  0285 00740000
*            IF KOMBUF(I)=VALCHAR(J)/* IS CHAR EQUAL THIS VALID    0285 00741000
*                                         ONE IN TABLE         A48271*/ 00742000
*              THEN                 /* YES FIRST CHAR IS VALID A48271*/ 00743000
         LA    @02,KOMBUF-1(I)                                     0285 00744000
         LA    @01,VALCHAR-1(@10)                                  0285 00745000
         CLC   0(1,@02),0(@01)                                     0285 00746000
         BE    @RT00285                                            0285 00747000
*                GOTO ULS8;         /* SET BEGIN OF USERID AND MOVE     00748000
*                                      CHAR INTO WORKID        A48271*/ 00749000
*            ELSE;                  /* NOT EQUAL THIS ENTRY,       0287 00750000
*                                      LOOP AND TRY NEXT       A48271*/ 00751000
*         END VALOOP1;              /*CHAR IS NOT IN VALID TBL A48271*/ 00752000
         AH    @10,@CH00047                                        0288 00753000
         STC   @10,J                                               0288 00754000
@DE00284 MVC   @ZT00003+3(1),VALEND1                               0288 00755000
         C     @10,@ZT00003                                        0288 00756000
         BNH   @DL00284                                            0288 00757000
*         GOTO ULS7;                /* 1ST CHAR IS INVALID IN USERID    00758000
*                                                              A48271*/ 00759000
         B     ULS7                                                0289 00760000
* ERRUID:                           /* THIS USERRD IS IN ERROR       */ 00761000
*         L = L+ 1;                 /* INCREMENT INDEX PAST INVALID     00762000
*                                      CHARACTER               M0142 */ 00763000
ERRUID   LA    @10,1                                               0290 00764000
         MVC   @ZT00003+3(1),L                                     0290 00765000
         A     @10,@ZT00003                                        0290 00766000
         STC   @10,L                                               0290 00767000
*         FERRID = '1'B;            /* SET FLAG FOR ERROR            */ 00768000
         OI    FERRID(COMPTR),B'00000001'                          0291 00769000
*         GOTO ULS8A;               /* CONTINUE USERID SCAN          */ 00770000
         B     ULS8A                                               0292 00771000
* ULS7:                   /* FIRST CHAR OF THIS USERID IS INVALID    */ 00772000
*         FERRID = '1'B;            /* SET FLAG FOR INVALID USERID   */ 00773000
ULS7     OI    FERRID(COMPTR),B'00000001'                          0293 00774000
* ULS8:                   /* ENTRY IF USERID FIRST CHAR IS VALID     */ 00775000
*         ERRBEG = I;               /* SET BEGIN OF USERID IF ERROR  */ 00776000
ULS8     STC   I,ERRBEG                                            0294 00777000
*         WORKID = ' ';             /* BLANK OUT USERID WORK AREA    */ 00778000
         MVI   WORKID+1,C' '                                       0295 00779000
         MVC   WORKID+2(6),WORKID+1                                0295 00780000
         MVI   WORKID,C' '                                         0295 00781000
*         WORKID(1)  = KOMBUF(I);   /* ASSIGN FIRST CHAR OF USERID   */ 00782000
         LA    @10,KOMBUF-1(I)                                     0296 00783000
         MVC   WORKID(1),0(@10)                                    0296 00784000
*         L = 2;                    /* SET INDEX TO USERID WORK AREA */ 00785000
         MVI   L,X'02'                                             0297 00786000
*ULS8A:                             /* CONTINUE SCAN OF USERID       */ 00787000
*         I = I+1;                  /* BUMP INDEX TO COMMAND BUFFER  */ 00788000
ULS8A    AH    I,@CH00047                                          0298 00789000
*         DO I = I TO CBLENG;       /* SCAN COMMAND BUFFER FOR USERID*/ 00790000
         B     @DE00299                                            0299 00791000
@DL00299 DS    0H                                                  0300 00792000
*           IF KOMBUF(I) = ','      /* IS NEXT CHAR A COMMA          */ 00793000
*             THEN                                                 0300 00794000
         LA    @10,KOMBUF-1(I)                                     0300 00795000
         CLI   0(@10),C','                                         0300 00796000
         BE    @RT00300                                            0300 00797000
*               GOTO ULS9;          /* ADD USERID TO LIST            */ 00798000
*         IF KOMBUF(I) = ')'        /* IS IT END OF USERID LIST      */ 00799000
*           THEN                                                   0302 00800000
         LA    @10,KOMBUF-1(I)                                     0302 00801000
         CLI   0(@10),C')'                                         0302 00802000
         BE    @RT00302                                            0302 00803000
*             GOTO ULS9;            /* ADD USERID TO LIST            */ 00804000
*         IF KOMBUF(I) = '00'X      /* IS CHAR A HEX ZERO            */ 00805000
*           THEN                    /* YES, END OF BUFFER REACHED  0304 00806000
*                                      BEFORE CLOSING DELIMITERS     */ 00807000
         LA    @10,KOMBUF-1(I)                                     0304 00808000
         CLI   0(@10),X'00'                                        0304 00809000
         BE    @RT00304                                            0304 00810000
*             GOTO ERRSYN;          /* GIVE SYNTAX ERROR MESSAGE     */ 00811000
*         IF KOMBUF(I) = ' '        /* IS CHAR A BLANK               */ 00812000
*           THEN                                                   0306 00813000
         LA    @10,KOMBUF-1(I)                                     0306 00814000
         CLI   0(@10),C' '                                         0306 00815000
         BE    @RT00306                                            0306 00816000
*             GOTO ERRUID;          /* YES, INVALID USERID           */ 00817000
* VALOOP:                      /* CHECK IF CHAR IS VALID FOR USERID  */ 00818000
*          DO J = 1 TO VALEND;      /* SCAN ENTIRE TABLE OF VALIDS   */ 00819000
VALOOP   LA    @10,1                                               0308 00820000
         B     @DE00308                                            0308 00821000
@DL00308 DS    0H                                                  0309 00822000
*            IF KOMBUF(I) = VALCHAR(J)/* IS CHAR EQUAL THIS VALID 1  */ 00823000
*              THEN                 /* YES, CHAR IN USERID IS VALID  */ 00824000
         LA    @02,KOMBUF-1(I)                                     0309 00825000
         LA    @01,VALCHAR-1(@10)                                  0309 00826000
         CLC   0(1,@02),0(@01)                                     0309 00827000
         BE    @RT00309                                            0309 00828000
*                GOTO GOODCHAR;     /* MOVE CHAR INTO WORKID         */ 00829000
*              ELSE;                /* NOT EQUAL THIS ENTRY, LOOP    */ 00830000
*          END VALOOP;              /* CHAR IS NOT IN VALID TABLE    */ 00831000
         AH    @10,@CH00047                                        0312 00832000
@DE00308 STC   @10,J                                               0312 00833000
         MVC   @ZT00003+3(1),VALEND                                0312 00834000
         C     @10,@ZT00003                                        0312 00835000
         BNH   @DL00308                                            0312 00836000
*          GOTO ERRUID;             /* USERID HAS INVALID CHARACTER  */ 00837000
         B     ERRUID                                              0313 00838000
* GOODCHAR:                         /* CHARACTER IS VALID IN A USERID*/ 00839000
*         WORKID(L) = KOMBUF(I);    /* ASSIGN CHARACTER TO USERID    */ 00840000
GOODCHAR SR    @10,@10                                             0314 00841000
         IC    @10,L                                               0314 00842000
         LA    @02,WORKID-1(@10)                                   0314 00843000
         LA    @01,KOMBUF-1(I)                                     0314 00844000
         MVC   0(1,@02),0(@01)                                     0314 00845000
*         L = L+1;                  /* BUMP INDEX TO USERID WORK AREA*/ 00846000
         AH    @10,@CH00047                                        0315 00847000
         STC   @10,L                                               0315 00848000
*         IF L > 8                  /* HAVE MORE THAN 7 CHARS OF USERID 00849000
*                                      BEEN MOVED INTO WORK AREA?    */ 00850000
*           THEN                    /* YES,                          */ 00851000
         CLI   L,8                                                 0316 00852000
         BNH   @RF00316                                            0316 00853000
*             DO;                   /* THEN,                         */ 00854000
*               FERRID = '1'B;      /* SET FLAG FOR USERID ERROR   0318 00855000
*                                                               M6524*/ 00856000
         OI    FERRID(COMPTR),B'00000001'                          0318 00857000
*               L = L-1;            /* DECREMENT L FOR USERID LENGTH    00858000
*                                      CONTROL                  M6524*/ 00859000
         BCTR  @10,0                                               0319 00860000
         STC   @10,L                                               0319 00861000
*               GOTO ULS10;         /* BRANCH TO PUT USERID INTO   0320 00862000
*                                      ERROR MESSAGE.           M6524*/ 00863000
         B     ULS10                                               0320 00864000
*             END;                  /* END DO                   M6524*/ 00865000
*        END;                       /* LOOP TO SCAN NEXT CHAR        */ 00866000
@RF00316 AH    I,@CH00047                                          0322 00867000
@DE00299 MVC   @ZT00003+3(1),CBLENG                                0322 00868000
         C     I,@ZT00003                                          0322 00869000
         BNH   @DL00299                                            0322 00870000
*        GOTO ERRSYN;               /* IF END OF COMMAND BUFFER IS 0323 00871000
*                                      REACHED, SYNTAX ERROR         */ 00872000
         B     ERRSYN                                              0323 00873000
* ULS9:                             /* CHECK IF USERID IN ERROR      */ 00874000
*         IF FERRID = '1'B          /* IS THIS USERID IN ERROR       */ 00875000
*           THEN                    /* YES                           */ 00876000
ULS9     TM    FERRID(COMPTR),B'00000001'                          0324 00877000
         BO    @RT00324                                            0324 00878000
*             GOTO ULS9A;           /* PUT USERID INTO ERROR MSG AREA*/ 00879000
*         IF IDCNT = 20             /*TEST FOR MAX USERIDS ALLOWED-20*/ 00880000
*           THEN                    /* MAXIMUM NO. USERIDS           */ 00881000
         CLI   IDCNT(COMPTR),20                                    0326 00882000
         BNE   @RF00326                                            0326 00883000
*             DO;                                                  0327 00884000
*               FOVER20 = '1'B;     /* SET FLAG FOR WARNING MSG      */ 00885000
         OI    FOVER20(COMPTR),B'00000010'                         0328 00886000
*               GOTO ULS9B;         /* IGNORE USERID                 */ 00887000
         B     ULS9B                                               0329 00888000
*             END;                                                 0330 00889000
*         IDCNT = IDCNT+1;          /* BUMP COUNT OF USERIDS IN TABLE*/ 00890000
@RF00326 LA    @10,1                                               0331 00891000
         MVC   @ZT00003+3(1),IDCNT(COMPTR)                         0331 00892000
         A     @10,@ZT00003                                        0331 00893000
         STC   @10,IDCNT(,COMPTR)                                  0331 00894000
*         IDUSRID(IDCNT) = WORKID;  /* PUT USERID INTO USERID TABLE  */ 00895000
         SLA   @10,3                                               0332 00896000
         ALR   @10,COMPTR                                          0332 00897000
         MVC   IDUSRID-8(8,@10),WORKID                             0332 00898000
*ULS9B:                             /* SCAN FOR DELIMITER            */ 00899000
*         IF KOMBUF(I) = ')'        /* IS CHARACTER A RIGHT PAREN?   */ 00900000
*           THEN                    /* YES, ENDING DELIMITER FOUND   */ 00901000
ULS9B    LA    @10,KOMBUF-1(I)                                     0333 00902000
         CLI   0(@10),C')'                                         0333 00903000
         BE    @RT00333                                            0333 00904000
*             GOTO ENDUL;           /* BRANCH TO DETERMINE IF ANY  0334 00905000
*                                      DUPLICATE USERIDS WERE SPEC'D */ 00906000
*         IF KOMBUF(I) = ','        /* IS CHARACTER A COMMA?         */ 00907000
*           THEN                    /* YES, THEN THERE ARE MORE USERIDS 00908000
*                                      SPECIFIED                     */ 00909000
         LA    @10,KOMBUF-1(I)                                     0335 00910000
         CLI   0(@10),C','                                         0335 00911000
         BE    @RT00335                                            0335 00912000
*             GOTO ULSCAN6;         /* SCAN NEXT USERID SPEC'D       */ 00913000
*         GOTO ERRSYN;              /* NO, SYNTAX ERROR, DELIMITER 0337 00914000
*                                      MISSING                       */ 00915000
         B     ERRSYN                                              0337 00916000
* ULS9A:                            /* CHECK TO SEE IF THIS IS THE 0338 00917000
*                                      FIRST USERID IN ERROR         */ 00918000
*         IF FANYINV = '1'B         /* WAS THERE A PREVIOUS INSERT OF   00919000
*                                      A USERID INTO THE ERROR MSG?  */ 00920000
*           THEN                    /* YES, THEN THIS IS NOT THE FIRST  00921000
*                                      INVALID USERID ENCOUNTERED    */ 00922000
ULS9A    TM    FANYINV(COMPTR),B'01000000'                         0338 00923000
         BO    @RT00338                                            0338 00924000
*             GOTO MSG1A;           /* BRANCH AROUND INITIALIZATION     00925000
*                                      OF ERROR MESSAGE              */ 00926000
*         FANYINV = '1'B;           /* SET FLAG FOR INSERTION        */ 00927000
         OI    FANYINV(COMPTR),B'01000000'                         0340 00928000
*         MSG1EXT(1) = ' ';         /* INSERT BLANK BEFORE USERIDS   */ 00929000
         MVI   MSG1EXT(COMPTR),C' '                                0341 00930000
*         M1IND = 2;                /* INIT INDEX TO MSG1 INSERT     */ 00931000
         MVI   M1IND(COMPTR),X'02'                                 0342 00932000
* MSG1A:                            /* PUT USERID INTO WARN MSG TEXT */ 00933000
*         P = L-2;                  /* P = LENGTH OF THIS USERID     */ 00934000
MSG1A    SR    @10,@10                                             0343 00935000
         IC    @10,L                                               0343 00936000
         LR    @02,@10                                             0343 00937000
         BCTR  @02,0                                               0343 00938000
         BCTR  @02,0                                               0343 00939000
         STH   @02,P                                               0343 00940000
*                                   /* PUT ERRONEOUS USERID INTO MSG */ 00941000
*         MSG1EXT(M1IND:M1IND+P) = KOMBUF(ERRBEG:ERRBEG+P);        0344 00942000
         SR    @15,@15                                             0344 00943000
         IC    @15,M1IND(,COMPTR)                                  0344 00944000
         ALR   @15,COMPTR                                          0344 00945000
         SR    @01,@01                                             0344 00946000
         IC    @01,ERRBEG                                          0344 00947000
         LA    @14,KOMBUF-1(@01)                                   0344 00948000
         EX    @02,@SM00483                                        0344 00949000
*         MSG1EXT(M1IND+P+1) = ' '; /* INSERT BLANK AFTER USERID     */ 00950000
         SR    @15,@15                                             0345 00951000
         IC    @15,M1IND(,COMPTR)                                  0345 00952000
         AR    @02,@15                                             0345 00953000
         ALR   @02,COMPTR                                          0345 00954000
         MVI   MSG1EXT(@02),C' '                                   0345 00955000
*         M1IND = M1IND+L;          /* BUMP INDEX TO MSG USERID AREA */ 00956000
         AR    @15,@10                                             0346 00957000
         STC   @15,M1IND(,COMPTR)                                  0346 00958000
*         FERRID = '0'B;            /* TURN OFF FLAG FOR USERID ERROR*/ 00959000
         NI    FERRID(COMPTR),B'11111110'                          0347 00960000
*         GOTO ULS9B;               /* CONTINUE COMMAND BUFFER SCAN  */ 00961000
         B     ULS9B                                               0348 00962000
*ULS10:                             /* THIS LOOP ENTERED ONLY IF LENGTH 00963000
*                                      OF SPECIFIED USERID IS > 7  0349 00964000
*                                      CHARACTERS.              M6524*/ 00965000
*        DO I = I TO CBLENG;        /* SCAN COMMAND BUFFER FOR     0349 00966000
*                                      DELIMITER                M6524*/ 00967000
ULS10    B     @DE00349                                            0349 00968000
@DL00349 DS    0H                                                  0350 00969000
*         IF KOMBUF(I) = ','        /* IS THE NEXT CHARACTER A COMMA    00970000
*                                                               M6524*/ 00971000
*           THEN                    /* YES,                     M6524*/ 00972000
         LA    @10,KOMBUF-1(I)                                     0350 00973000
         CLI   0(@10),C','                                         0350 00974000
         BE    @RT00350                                            0350 00975000
*             GOTO ULS9;            /* BRANCH TO PUT USERID INTO ERROR  00976000
*                                      MESSAGE                  M6524*/ 00977000
*         IF KOMBUF(I) = ')'        /* IS IT END OF USERID LIST M6524*/ 00978000
*           THEN                    /* YES,                     M6524*/ 00979000
         LA    @10,KOMBUF-1(I)                                     0352 00980000
         CLI   0(@10),C')'                                         0352 00981000
         BE    @RT00352                                            0352 00982000
*             GOTO ULS9;            /* BRANCH TO PUT USERID INTO ERROR  00983000
*                                      MESSAGE                  M6524*/ 00984000
*         IF KOMBUF(I) = '00'X      /* IS CHAR A HEX ZERO       M6524*/ 00985000
*           THEN                    /*YES, END OF BUFFER REACHED BEFORE 00986000
*                                     CLOSING DELIMITER IS FOUNDM6524*/ 00987000
         LA    @10,KOMBUF-1(I)                                     0354 00988000
         CLI   0(@10),X'00'                                        0354 00989000
         BE    @RT00354                                            0354 00990000
*             GOTO ERRSYN;          /* GIVE SYNTAX ERROR MESSAGEM6524*/ 00991000
*         L = L+1;                  /*INCREMENT LENGTH OF USERIDM6524*/ 00992000
         LA    @10,1                                               0356 00993000
         MVC   @ZT00003+3(1),L                                     0356 00994000
         A     @10,@ZT00003                                        0356 00995000
         STC   @10,L                                               0356 00996000
*         END;                      /* END OF ULS10 LOOP. LOOP TO SCAN  00997000
*                                      NEXT CHARACTER           M6524*/ 00998000
         AH    I,@CH00047                                          0357 00999000
@DE00349 MVC   @ZT00003+3(1),CBLENG                                0357 01000000
         C     I,@ZT00003                                          0357 01001000
         BNH   @DL00349                                            0357 01002000
*          GOTO ERRSYN;             /* END OF COMMAND BUFFER HAS BEEN   01003000
*                                      REACHED WITHOUT ENCOUNTERING AN  01004000
*                                      ENDING DELIMITER. SYNTAX ERROR   01005000
*                                                               M6524*/ 01006000
         B     ERRSYN                                              0358 01007000
*ENDUL:                             /* COMBUF(I) = RIGHT PAREN       */ 01008000
*         I = I+1;                  /* BUMP INDEX PAST RIGHT PAREN   */ 01009000
ENDUL    LA    @10,1                                               0359 01010000
         AR    I,@10                                               0359 01011000
*           IF KOMBUF(I) = ','      /* IS CHAR A COMMA               */ 01012000
*             THEN                  /* YES, COMMA FOUND              */ 01013000
         LA    @02,KOMBUF-1(I)                                     0360 01014000
         CLI   0(@02),C','                                         0360 01015000
         BNE   @RF00360                                            0360 01016000
*               DO;                                                0361 01017000
*                 I = I+1;          /* BUMP INDEX PAST COMMA         */ 01018000
         AR    I,@10                                               0362 01019000
*                 GOTO LASTSCAN;    /* CHECK FOR MORE PARMS          */ 01020000
         B     LASTSCAN                                            0363 01021000
*               END;                                               0364 01022000
*           IF KOMBUF(I) = '00'X    /* IS IT END OF COMMAND BUFFER   */ 01023000
*             THEN                  /* YES, END OF COMMAND BUFFER    */ 01024000
@RF00360 LA    @10,KOMBUF-1(I)                                     0365 01025000
         CLI   0(@10),X'00'                                        0365 01026000
         BE    @RT00365                                            0365 01027000
*               GOTO LSTCK;         /* GO TO SET PARM FLAGS          */ 01028000
*           IF KOMBUF(I) ^= ' '     /* IS NEXT CHAR A NONBLANK       */ 01029000
*             THEN                  /* YES, SOME INVALID CHAR AFTER     01030000
*                                      THE USERID LIST               */ 01031000
         LA    @10,KOMBUF-1(I)                                     0367 01032000
         CLI   0(@10),C' '                                         0367 01033000
         BNE   @RT00367                                            0367 01034000
*               GOTO ERRSYN;        /* GO TO GIVE SYNTAX ERROR MSG   */ 01035000
*                                                                  0368 01036000
*LSTCK:   IF FLOGON = '0'B          /* TEST IF 'LOGON' SPEC'D        */ 01037000
*           THEN                    /* 'LOGON' NOT SPEC'D            */ 01038000
LSTCK    TM    FLOGON(COMPTR),B'00001000'                          0369 01039000
         BNZ   @RF00369                                            0369 01040000
*             FNOW = '1'B;          /* SET FLAG FOR DEFAULT OF 'NOW' */ 01041000
         OI    FNOW(COMPTR),B'00010000'                            0370 01042000
*         GOTO ENDCB;               /*                               */ 01043000
*                                                                  0371 01044000
         B     ENDCB                                               0371 01045000
* LASTSCAN:                   /* CHECK PARM SPEC'D AFTER USERID LIST */ 01046000
*         IF FLOGON = '1'B | FNOW = '1'B /* PARAMETER REPEATED       */ 01047000
*           THEN                    /* YES, SYNTAX ERROR             */ 01048000
LASTSCAN TM    FLOGON(COMPTR),B'00011000'                          0372 01049000
         BNZ   @RT00372                                            0372 01050000
*             GOTO ERRSYN;          /* EXIT FROM SCAN                */ 01051000
*         IF KOMBUF(I:I+4) = 'LOGON' /* IS 'LOGON' SPECIFIED         */ 01052000
*            THEN                                                  0374 01053000
         LA    @10,KOMBUF-1(I)                                     0374 01054000
         CLC   0(5,@10),@CC00390                                   0374 01055000
         BNE   @RF00374                                            0374 01056000
*              DO;                  /*   YES, 'LOGON' SPECIFIED      */ 01057000
*                FLOGON = '1'B;     /* SET FLAG FOR 'LOGON'          */ 01058000
*                FNOW = '1'B;       /* INDICATE NOW ALSO             */ 01059000
         OI    FLOGON(COMPTR),B'00011000'                          0377 01060000
*                I = I + 5;         /* STEP OVER KEYWORD             */ 01061000
         AH    I,@CH00375                                          0378 01062000
*                GOTO OUTSCAN;      /* CHECK LAST BYTE               */ 01063000
         B     OUTSCAN                                             0379 01064000
*              END;                                                0380 01065000
*         IF KOMBUF(I:I+3) = 'SAVE' /* 'SAVE' SPEC'D                 */ 01066000
*           THEN                    /* YES, 'SAVE' SPEC'D            */ 01067000
@RF00374 LA    @10,KOMBUF-1(I)                                     0381 01068000
         CLC   0(4,@10),@CC00393                                   0381 01069000
         BNE   @RF00381                                            0381 01070000
*             DO;                                                  0382 01071000
*               FLOGON = '1'B;      /* INDICATE 'SAVE' SPECIFIED     */ 01072000
         OI    FLOGON(COMPTR),B'00001000'                          0383 01073000
*               I = I + 4;          /* STEP OVER KEYWORD             */ 01074000
         AH    I,@CH00135                                          0384 01075000
*               GOTO OUTSCAN;       /* CHECK LAST BYTE               */ 01076000
         B     OUTSCAN                                             0385 01077000
*             END;                                                 0386 01078000
*         IF KOMBUF(I:I+2) = 'NOW'  /* IS NOW SPECIFIED?       M0684 */ 01079000
*           THEN                    /* YES                     M0684 */ 01080000
@RF00381 LA    @10,KOMBUF-1(I)                                     0387 01081000
         CLC   0(3,@10),@CC00394                                   0387 01082000
         BNE   @RF00387                                            0387 01083000
*             DO;                                                  0388 01084000
*               FNOW = '1'B;        /* SET FLAG FOR 'NOW'            */ 01085000
         OI    FNOW(COMPTR),B'00010000'                            0389 01086000
*               I = I + 3;          /* STEP OVER KEYWORD             */ 01087000
         AH    I,@CH00254                                          0390 01088000
*               GOTO OUTSCAN;       /* CHECK LAST BYTE               */ 01089000
         B     OUTSCAN                                             0391 01090000
*             END;                                                 0392 01091000
*               GOTO ERRSYN;        /* GO TO GIVE SYNTAX ERROR MSG 0393 01092000
*                                                              M0684 */ 01093000
         B     ERRSYN                                              0393 01094000
* TALL:                             /*'ALL' SPECIFIED ON SEND COMMAND*/ 01095000
*         FALL = '1'B;              /* SET FLAG FOR 'ALL' SPEC'D     */ 01096000
TALL     OI    FALL(COMPTR),B'00000100'                            0394 01097000
*         I = I + 3;                /* BUMP I TO CHAR AFTER 'ALL'    */ 01098000
         AH    I,@CH00254                                          0395 01099000
*         IF KOMBUF(I) = ' '        /* IS IT A BLANK                 */ 01100000
*            THEN                   /* YES, ASSUME END OF PARAMETERS */ 01101000
         LA    @10,KOMBUF-1(I)                                     0396 01102000
         CLI   0(@10),C' '                                         0396 01103000
         BE    @RT00396                                            0396 01104000
*              GOTO TANOW;          /* TAKE DEFAULT OF 'ALL NOW'     */ 01105000
*         IF KOMBUF(I) = '00'X      /* IS NEXT CHAR HEX'00'          */ 01106000
*            THEN                   /* YES, END OF PARAMETERS        */ 01107000
         LA    @10,KOMBUF-1(I)                                     0398 01108000
         CLI   0(@10),X'00'                                        0398 01109000
         BE    @RT00398                                            0398 01110000
*              GOTO TANOW;          /* TAKE DEFAULT OF 'ALL NOW'     */ 01111000
*         IF KOMBUF(I) = ','        /* IS NEXT CHAR A COMMA          */ 01112000
*            THEN                   /* YES, MORE PARMS TO SCAN       */ 01113000
         LA    @10,KOMBUF-1(I)                                     0400 01114000
         CLI   0(@10),C','                                         0400 01115000
         BNE   @RF00400                                            0400 01116000
*              I = I + 1;           /* BUMP INDEX PAST COMMA         */ 01117000
         AH    I,@CH00047                                          0401 01118000
*            ELSE                   /* NO, SYNTAX ERROR              */ 01119000
*             GOTO ERRSYN;          /* EXIT SCAN                     */ 01120000
*         GOTO LASTSCAN;            /* CHECK FOR MORE PARMS          */ 01121000
*                                                                  0403 01122000
         B     LASTSCAN                                            0403 01123000
* TANOW:                            /* CHECK FOR DEFAULTS            */ 01124000
*         IF FLOGON = '0'B          /* TEST IF 'LOGON' WAS SPEC'D    */ 01125000
*           THEN                    /* 'LOGON' NOT SPEC'D            */ 01126000
TANOW    TM    FLOGON(COMPTR),B'00001000'                          0404 01127000
         BNZ   @RF00404                                            0404 01128000
*             FNOW = '1'B;          /* TAKE DEFAULT OF 'NOW'         */ 01129000
         OI    FNOW(COMPTR),B'00010000'                            0405 01130000
*         IF FUSER = '0'B           /* WAS 'USER=' SPEC'D            */ 01131000
*           THEN                    /* 'USER' NOT SPECIFIED          */ 01132000
@RF00404 TM    FUSER(COMPTR),B'00000100'                           0406 01133000
         BNZ   @RF00406                                            0406 01134000
*             FALL = '1'B;          /* SET DEFAULT OF 'ALL'          */ 01135000
         OI    FALL(COMPTR),B'00000100'                            0407 01136000
*         GOTO ENDCB;               /* SET UP BUFFER FOR SEND MSG    */ 01137000
*                                                                  0408 01138000
*                                                                  0408 01139000
         B     ENDCB                                               0408 01140000
*OUTSCAN:                                                          0409 01141000
*         IF KOMBUF(I) = '00'X | KOMBUF(I) = ' ' /* VALID DELIMETER  */ 01142000
*           THEN                    /* YES, BLANK OR BUFFER END      */ 01143000
OUTSCAN  LA    @10,KOMBUF-1(I)                                     0409 01144000
         CLI   0(@10),X'00'                                        0409 01145000
         BE    @RT00409                                            0409 01146000
         LA    @10,KOMBUF-1(I)                                     0409 01147000
         CLI   0(@10),C' '                                         0409 01148000
         BE    @RT00409                                            0409 01149000
*             GOTO ENDCB;           /* CONTINUE PROCESSING           */ 01150000
*ERRSYN:                            /* HANDLE SYNTAX ERROR           */ 01151000
*         FMSG3 = '1'B;             /* SET ERROR MSG FLAG            */ 01152000
ERRSYN   OI    FMSG3(COMPTR),B'01000000'                           0411 01153000
*         GOTO CLNUP;               /* CLEANUP AND EXIT              */ 01154000
         B     CLNUP                                               0412 01155000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01156000
* /*      ROUTE CONTROL THRU THE APPROPRIATE HANDLERS.               */ 01157000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01158000
*ENDCB:                                                            0413 01159000
*         IF FUSER = '1'B & IDCNT = 0 /* 'USER=' SPEC'D BUT NO     0413 01160000
*                                      VALID USERIDS FOUND           */ 01161000
*           THEN                    /* NO HANDLING REQUIRED          */ 01162000
ENDCB    TM    FUSER(COMPTR),B'00000100'                           0413 01163000
         BNO   @RF00413                                            0413 01164000
         CLI   IDCNT(COMPTR),0                                     0413 01165000
         BE    @RT00413                                            0413 01166000
*             GOTO CLNUP;           /* BRANCH TO CLEANUP             */ 01167000
* /*******************************************************************/ 01168000
* /*                    DELETE NOTICE                                */ 01169000
* /*******************************************************************/ 01170000
*         IF FDEL = '1'B            /* 'DELETE' SPEC'D               */ 01171000
*           THEN                    /* YES, DELETE NOTICE            */ 01172000
@RF00413 TM    FDEL(COMPTR),B'10000000'                            0415 01173000
         BNO   @RF00415                                            0415 01174000
*             DO;                                                  0416 01175000
*               ACCESSOR = ADDR(IEEVSND8); /* INVOKE IEEVSND8        */ 01176000
         L     @10,@CV00164                                        0417 01177000
         ST    @10,@TF00001                                        0417 01178000
         MVC   ACCESSOR(3,COMPTR),@TF00001+1                       0417 01179000
*               R1 = COMPTR;        /* SET COMMON PTR PARM           */ 01180000
         LR    R1,COMPTR                                           0418 01181000
*               CALL IEEVSND9;      /* INVOKE ACCESS CONTROLLER      */ 01182000
         L     @15,@CV00165                                        0419 01183000
         BALR  @14,@15                                             0419 01184000
*               GOTO CLNUP;         /* PROCESSING DONE               */ 01185000
         B     CLNUP                                               0420 01186000
*             END;                                                 0421 01187000
* /*******************************************************************/ 01188000
* /*                   RECOVER/LIST NOTICES                          */ 01189000
* /*******************************************************************/ 01190000
*         IF FMN = '1'B | FLIST = '1'B                             0422 01191000
*           THEN                    /* NOTICE TO BE RECOVERED OR   0422 01192000
*                                      LISTED                        */ 01193000
@RF00415 TM    FMN(COMPTR),B'00010000'                             0422 01194000
         BO    @RT00422                                            0422 01195000
         TM    FLIST(COMPTR),B'00100000'                           0422 01196000
         BNO   @RF00422                                            0422 01197000
@RT00422 DS    0H                                                  0423 01198000
*             DO;                                                  0423 01199000
*               ACCESSOR = ADDR(IEEVSND3); /* INVOKE IEEVSND3        */ 01200000
         L     @10,@CV00161                                        0424 01201000
         ST    @10,@TF00001                                        0424 01202000
         MVC   ACCESSOR(3,COMPTR),@TF00001+1                       0424 01203000
*               R1 = COMPTR;        /* SET COMMON PTR PARM           */ 01204000
         LR    R1,COMPTR                                           0425 01205000
*               CALL IEEVSND9;      /* ENTER ACCESS CONTROLLER       */ 01206000
         L     @15,@CV00165                                        0426 01207000
         BALR  @14,@15                                             0426 01208000
*             END;                                                 0427 01209000
* /*******************************************************************/ 01210000
* /*                           ADD NOTICE                            */ 01211000
* /*******************************************************************/ 01212000
*SAVEMSG:                                                          0428 01213000
*         IF FLOGON = '1'B & FNOW = '0'B                           0428 01214000
*           THEN                    /* MSG TO BE SAVED IN          0428 01215000
*                                      SYS1.BRODCAST                 */ 01216000
@RF00422 DS    0H                                                  0428 01217000
SAVEMSG  TM    FLOGON(COMPTR),B'00001000'                          0428 01218000
         BNO   @RF00428                                            0428 01219000
         TM    FNOW(COMPTR),B'00010000'                            0428 01220000
         BNZ   @RF00428                                            0428 01221000
*             IF FALL = '1'B        /* 'ALL' SPEC'D                  */ 01222000
*               THEN                /* CREATE NOTICE                 */ 01223000
         TM    FALL(COMPTR),B'00000100'                            0429 01224000
         BNO   @RF00429                                            0429 01225000
*                 DO;                                              0430 01226000
*                   /* IF IN MSG NUMBER MODE, DO NOT CREATE NOTICE.  */ 01227000
*                   IF FMN = '1'B                                  0431 01228000
*                     THEN          /* MSG NUMBER MODE,              */ 01229000
         TM    FMN(COMPTR),B'00010000'                             0431 01230000
         BO    @RT00431                                            0431 01231000
*                       GOTO CLNUP; /* DO NOT CREATE NOTICE          */ 01232000
*                   ACCESSOR = ADDR(IEEVSND8); /* INVOKE IEEVSND8    */ 01233000
         L     @10,@CV00164                                        0433 01234000
         ST    @10,@TF00001                                        0433 01235000
         MVC   ACCESSOR(3,COMPTR),@TF00001+1                       0433 01236000
*                   FADDBC = '1'B;  /* CREATE NOTICE                 */ 01237000
         OI    FADDBC(COMPTR),B'00100000'                          0434 01238000
*                   R1 = COMPTR;    /* SET COMMON PTR PARM           */ 01239000
         LR    R1,COMPTR                                           0435 01240000
*                   CALL IEEVSND9;  /* ENTER ACCESS CONTROLLER       */ 01241000
         L     @15,@CV00165                                        0436 01242000
         BALR  @14,@15                                             0436 01243000
*                   GOTO CLNUP;     /* PROCESSING COMPLETE           */ 01244000
         B     CLNUP                                               0437 01245000
*                 END;                                             0438 01246000
* /*******************************************************************/ 01247000
* /*                         ADD MAIL                                */ 01248000
* /*******************************************************************/ 01249000
*               ELSE                /* NO, CREATE MAIL               */ 01250000
*                 DO;                                              0439 01251000
@RF00429 DS    0H                                                  0440 01252000
*                   R1 = COMPTR;    /* SET COMMON PTR PARM           */ 01253000
         LR    R1,COMPTR                                           0440 01254000
*                   CALL IEEVSND6;  /* GO SET OPERID FIELD & RETURN  */ 01255000
         L     @15,@CV00163                                        0441 01256000
         BALR  @14,@15                                             0441 01257000
*                   ACCESSOR = ADDR(IEEVSND2); /* INVOKE IEEVSND2    */ 01258000
         L     @10,@CV00160                                        0442 01259000
         ST    @10,@TF00001                                        0442 01260000
         MVC   ACCESSOR(3,COMPTR),@TF00001+1                       0442 01261000
*                   R1 = COMPTR;    /* SET COMMON PTR PARM           */ 01262000
         LR    R1,COMPTR                                           0443 01263000
*                   CALL IEEVSND9;  /* ENTER ACCESS CONTROLLER       */ 01264000
         L     @15,@CV00165                                        0444 01265000
         BALR  @14,@15                                             0444 01266000
*                   GOTO CLNUP;     /* PROCESSING COMPLETE           */ 01267000
         B     CLNUP                                               0445 01268000
*                 END;                                             0446 01269000
* /*******************************************************************/ 01270000
* /*                   SEND MESSAGE NOW                              */ 01271000
* /*******************************************************************/ 01272000
*         IF FTEXT = '1'B           /* TEXT PRESENT                  */ 01273000
*           THEN                    /* YES, ISSUE MSG NOW            */ 01274000
@RF00428 TM    FTEXT(COMPTR),B'00000010'                           0447 01275000
         BNO   @RF00447                                            0447 01276000
*             DO;                                                  0448 01277000
*               FTEXT = '0'B;       /* INDICATE 'NOW' HANDLED        */ 01278000
         NI    FTEXT(COMPTR),B'11111101'                           0449 01279000
*               R1 = COMPTR;        /* SET COMMON PTR PARM           */ 01280000
         LR    R1,COMPTR                                           0450 01281000
*               CALL IEEVSND6;      /* INVOKE 'NOW' PROCESSOR        */ 01282000
         L     @15,@CV00163                                        0451 01283000
         BALR  @14,@15                                             0451 01284000
*               GOTO SAVEMSG;       /* MSG MAY HAVE TO BE SAVED      */ 01285000
         B     SAVEMSG                                             0452 01286000
*             END;                                                 0453 01287000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01288000
* /*      PROVIDE FEEDBACK IF REQUIRED.                              */ 01289000
* /*      FREE THE COMMON DATA AREA AND RELEASE THE CSCB             */ 01290000
* /*      CREATED FOR THIS COMMAND.                                  */ 01291000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01292000
*CLNUP:                                                            0454 01293000
*         R1 = COMPTR;              /* SET COMMON PTR PARM           */ 01294000
@RF00447 DS    0H                                                  0454 01295000
CLNUP    LR    R1,COMPTR                                           0454 01296000
*         CALL IEEVSND4;            /* INVOKE CLEANUP ROUTINE        */ 01297000
         L     @15,@CV00162                                        0455 01298000
         BALR  @14,@15                                             0455 01299000
*         RESTRICT (R5,R6);                                        0456 01300000
*         R5 = LENGTH(COMMON);      /* SET LENGTH OF AREA TO FREE    */ 01301000
         LA    R5,484                                              0457 01302000
*         GEN (FREEMAIN R,LV=(R5),A=(COMPTR),SP=0);                0458 01303000
         FREEMAIN R,LV=(R5),A=(COMPTR),SP=0                             01304000
*                                   /* FREE COMMON DATA AREA         */ 01305000
*EXITCODE:                          /* RELEASE CSCB                  */ 01306000
*         R6 = R1SAV;               /* SET TEMP BASE FOR CSCB        */ 01307000
EXITCODE L     R6,R1SAV                                            0459 01308000
*         R6->CHAD = '0'B;          /* TURN OFF ADD BIT              */ 01309000
*         R6->CHABTERM = '0'B;      /* TURN OFF ABTERM FLAG          */ 01310000
*         R6->CHDL = '0'B;          /* TURN OFF DELETE FLAG          */ 01311000
*         R6->CHFC = '1'B;          /* INDICATE FREE CORE            */ 01312000
         OI    CHFC(R6),B'00000010'                                0463 01313000
         NI    CHAD(R6),B'11110010'                                0463 01314000
*         R1 = R6;                  /* SET PARM REG                  */ 01315000
         LR    R1,R6                                               0464 01316000
*         RELEASE (R5,R6);                                         0465 01317000
*         GEN(MGCR (1),CHAIN);      /* RELEASE CSCB                  */ 01318000
         MGCR (1),CHAIN                                                 01319000
*         R14 = R14SAV;             /* RESTORE RETURN ADDRESS        */ 01320000
         L     R14,R14SAV                                          0467 01321000
*         RETURN CODE(0);                                          0468 01322000
*                                                                  0468 01323000
*                                                                  0468 01324000
         L     @13,4(,@13)                                         0468 01325000
         L     @00,@SIZDATD                                        0468 01326000
         LR    @01,@12                                             0468 01327000
         FREEMAIN R,LV=(0),A=(1)                                        01328000
         SR    @15,@15                                             0468 01329000
         BR    @14                                                 0468 01330000
*         GEN;                                                     0469 01331000
SPARE    DC    50X'00'              PATCH AREA                          01332000
*          END   IEEVSEND                                          0470 01333000
*                                                                  0470 01334000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01335000
*/*%INCLUDE SYSLIB  (IEECHAIN)                                        * 01336000
*;                                                                 0470 01337000
@EL00001 L     @13,4(,@13)                                         0470 01338000
@EF00001 L     @00,@SIZDATD                                        0470 01339000
         LR    @01,@12                                             0470 01340000
         FREEMAIN R,LV=(0),A=(1)                                        01341000
@ER00001 BR    @14                                                 0470 01342000
@DATA    DS    0H                                                       01343000
@CH00047 DC    H'1'                                                     01344000
@CH00254 DC    H'3'                                                     01345000
@CH00135 DC    H'4'                                                     01346000
@CH00375 DC    H'5'                                                     01347000
@CH00377 DC    H'6'                                                     01348000
@CH00299 DC    H'9'                                                     01349000
@CH00108 DC    H'15'                                                    01350000
@CH00416 DC    H'64'                                                    01351000
@SM00474 MVC   0(0,@10),0(@01)                                          01352000
@SM00477 MVC   COMBUF(0,COMPTR),KOMBUF                                  01353000
@SM00483 MVC   MSG1EXT-1(0,@15),0(@14)                                  01354000
@DATD    DSECT                                                          01355000
         DS    0F                                                       01356000
@SA00001 DS    18F                                                      01357000
@PC00001 DS    1F                                                       01358000
@SAV001  EQU   @SA00001                                                 01359000
@TF00001 DS    F                                                        01360000
@ZTEMPS  DS    0F                                                       01361000
@ZT00003 DC    F'0'                                                     01362000
@ZTEMPND EQU   *                                                        01363000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         01364000
@TEMPS   EQU   @ZTEMPS                                                  01365000
@L       EQU   @ZLEN                                                    01366000
IEEVSEND CSECT                                                          01367000
         DS    0F                                                       01368000
@DATD    DSECT                                                          01369000
         DS    0D                                                       01370000
R1SAV    DS    A                                                        01371000
R14SAV   DS    A                                                        01372000
MAXMSGLN DS    F                                                        01373000
MSGNO    DS    H                                                        01374000
P        DS    H                                                        01375000
ERRBEG   DS    AL1                                                      01376000
J        DS    AL1                                                      01377000
K        DS    AL1                                                      01378000
Z        DS    AL1                                                      01379000
L        DS    AL1                                                      01380000
RETC     DS    AL1                                                      01381000
         DS    CL2                                                      01382000
KOMBUF   DS    CL125                                                    01383000
         DS    CL3                                                      01384000
WORK8    DS    CL8                                                      01385000
WORKID   DS    CL8                                                      01386000
WORKER   DS    CL4                                                      01387000
WORK4    DS    CL4                                                      01388000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01389000
@ENDDATD EQU   *                                                        01390000
@DATEND  EQU   *                                                        01391000
IEEVSEND CSECT                                                          01392000
         DS    0F                                                       01393000
@SIZDATD DC    AL1(0)                                                   01394000
         DC    AL3(@ENDDATD-@DATD)                                      01395000
@SIZ001  EQU   @SIZDATD                                                 01396000
@CV00160 DC    V(IEEVSND2)                                              01397000
@CV00161 DC    V(IEEVSND3)                                              01398000
@CV00162 DC    V(IEEVSND4)                                              01399000
@CV00163 DC    V(IEEVSND6)                                              01400000
@CV00164 DC    V(IEEVSND8)                                              01401000
@CV00165 DC    V(IEEVSND9)                                              01402000
         DS    0D                                                       01403000
PARMAR   DC    XL4'00000010'                                            01404000
NEXT     DC    AL1(1)                                                   01405000
VALEND1  DC    AL1(29)                                                  01406000
VALEND   DC    AL1(39)                                                  01407000
CBLENG   DC    AL1(124)                                                 01408000
@CC00394 DC    C'NOW'                                                   01409000
@CC00397 DC    C'ALL'                                                   01410000
@CC00403 DC    C'CN='                                                   01411000
@CC00361 DC    C'LIST'                                                  01412000
@CC00393 DC    C'SAVE'                                                  01413000
@CC00390 DC    C'LOGON'                                                 01414000
@CC00376 DC    C'DELETE'                                                01415000
@CC00395 DC    C'USER=('                                                01416000
@CC00399 DC    C'BRDCST'                                                01417000
@CC00400 DC    C'OPERATOR='                                             01418000
         DS    CL3                                                      01419000
COMMNAME DS    CL5                                                      01420000
         ORG   COMMNAME                                                 01421000
@NM00008 DC    XL1'04'                                                  01422000
@NM00009 DC    CL4'SEND'                                                01423000
         ORG   COMMNAME+5                                               01424000
BLNKID   DC    CL7' '                                                   01425000
VALCHAR  DC    CL1'A'                                                   01426000
         DC    CL1'B'                                                   01427000
         DC    CL1'C'                                                   01428000
         DC    CL1'D'                                                   01429000
         DC    CL1'E'                                                   01430000
         DC    CL1'F'                                                   01431000
         DC    CL1'G'                                                   01432000
         DC    CL1'H'                                                   01433000
         DC    CL1'I'                                                   01434000
         DC    CL1'J'                                                   01435000
         DC    CL1'K'                                                   01436000
         DC    CL1'L'                                                   01437000
         DC    CL1'M'                                                   01438000
         DC    CL1'N'                                                   01439000
         DC    CL1'O'                                                   01440000
         DC    CL1'P'                                                   01441000
         DC    CL1'Q'                                                   01442000
         DC    CL1'R'                                                   01443000
         DC    CL1'S'                                                   01444000
         DC    CL1'T'                                                   01445000
         DC    CL1'U'                                                   01446000
         DC    CL1'V'                                                   01447000
         DC    CL1'W'                                                   01448000
         DC    CL1'X'                                                   01449000
         DC    CL1'Y'                                                   01450000
         DC    CL1'Z'                                                   01451000
         DC    X'5B'                                                    01452000
         DC    X'7B'                                                    01453000
         DC    X'7C'                                                    01454000
         DC    CL1'1'                                                   01455000
         DC    CL1'2'                                                   01456000
         DC    CL1'3'                                                   01457000
         DC    CL1'4'                                                   01458000
         DC    CL1'5'                                                   01459000
         DC    CL1'6'                                                   01460000
         DC    CL1'7'                                                   01461000
         DC    CL1'8'                                                   01462000
         DC    CL1'9'                                                   01463000
         DC    CL1'0'                                                   01464000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01465000
@01      EQU   01                                                       01466000
@02      EQU   02                                                       01467000
@03      EQU   03                                                       01468000
@04      EQU   04                                                       01469000
@05      EQU   05                                                       01470000
@06      EQU   06                                                       01471000
@07      EQU   07                                                       01472000
@08      EQU   08                                                       01473000
@09      EQU   09                                                       01474000
@10      EQU   10                                                       01475000
@11      EQU   11                                                       01476000
@12      EQU   12                                                       01477000
@13      EQU   13                                                       01478000
@14      EQU   14                                                       01479000
@15      EQU   15                                                       01480000
@0       EQU   00                                                       01481000
@1       EQU   01                                                       01482000
@2       EQU   02                                                       01483000
@3       EQU   03                                                       01484000
@4       EQU   04                                                       01485000
@5       EQU   05                                                       01486000
@6       EQU   06                                                       01487000
@7       EQU   07                                                       01488000
@8       EQU   08                                                       01489000
@9       EQU   09                                                       01490000
@A       EQU   10                                                       01491000
@B       EQU   11                                                       01492000
@C       EQU   12                                                       01493000
@D       EQU   13                                                       01494000
@E       EQU   14                                                       01495000
@F       EQU   15                                                       01496000
COMPTR   EQU   @03                                                      01497000
REG1     EQU   @01                                                      01498000
REG2     EQU   @02                                                      01499000
R11      EQU   @11                                                      01500000
R12      EQU   @12                                                      01501000
R0       EQU   @00                                                      01502000
R1       EQU   @01                                                      01503000
I        EQU   @04                                                      01504000
R5       EQU   @05                                                      01505000
R6       EQU   @06                                                      01506000
R14      EQU   @14                                                      01507000
R15      EQU   @15                                                      01508000
R2       EQU   @02                                                      01509000
COMMON   EQU   0                                                        01510000
COMMONA  EQU   COMMON                                                   01511000
MSGFLAGS EQU   COMMONA+3                                                01512000
FMSG3    EQU   MSGFLAGS                                                 01513000
FLAGS    EQU   COMMONA+4                                                01514000
FANYINV  EQU   FLAGS                                                    01515000
FOVER20  EQU   FLAGS                                                    01516000
@NM00002 EQU   FLAGS+1                                                  01517000
FADDBC   EQU   @NM00002                                                 01518000
FMN      EQU   @NM00002                                                 01519000
FBRDCST  EQU   @NM00002                                                 01520000
FUSER    EQU   @NM00002                                                 01521000
FCNS     EQU   @NM00002                                                 01522000
@NM00003 EQU   FLAGS+2                                                  01523000
FDEL     EQU   @NM00003                                                 01524000
FLISTALL EQU   @NM00003                                                 01525000
FLIST    EQU   @NM00003                                                 01526000
FNOW     EQU   @NM00003                                                 01527000
FLOGON   EQU   @NM00003                                                 01528000
FALL     EQU   @NM00003                                                 01529000
FTEXT    EQU   @NM00003                                                 01530000
FERRID   EQU   @NM00003                                                 01531000
@NM00004 EQU   FLAGS+3                                                  01532000
FSOURCE  EQU   @NM00004                                                 01533000
M1IND    EQU   COMMONA+8                                                01534000
IDCNT    EQU   COMMONA+12                                               01535000
RETVATT1 EQU   COMMONA+17                                               01536000
TBEG     EQU   COMMONA+20                                               01537000
CSCBPTR  EQU   COMMONA+21                                               01538000
TEXTLENG EQU   COMMONA+28                                               01539000
ACCESSOR EQU   COMMONA+29                                               01540000
CBCMSGNO EQU   COMMONA+32                                               01541000
CBCCONID EQU   COMMONA+34                                               01542000
MSG1EXT  EQU   COMMONA+36                                               01543000
COMMONB  EQU   COMMON+160                                               01544000
COMBUF   EQU   COMMONB                                                  01545000
COMMONC  EQU   COMMON+284                                               01546000
IDUSRID  EQU   COMMONC                                                  01547000
SDIOPARM EQU   COMMONC+168                                              01548000
@NM00006 EQU   SDIOPARM                                                 01549000
@NM00007 EQU   SDIOPARM+1                                               01550000
PARMLST  EQU   0                                                        01551000
CSCBADR  EQU   PARMLST                                                  01552000
COMMAND  EQU   PARMLST+4                                                01553000
COMAREA  EQU   PARMLST+8                                                01554000
BASEADR  EQU   PARMLST+12                                               01555000
CHAIN    EQU   0                                                        01556000
CHFLG    EQU   CHAIN+4                                                  01557000
CHSTS    EQU   CHFLG+2                                                  01558000
CHAD     EQU   CHSTS                                                    01559000
CHDL     EQU   CHSTS                                                    01560000
CHFC     EQU   CHSTS                                                    01561000
CHABTERM EQU   CHSTS                                                    01562000
CHACT    EQU   CHFLG+3                                                  01563000
CHKEY    EQU   CHAIN+8                                                  01564000
CHPKE    EQU   CHAIN+28                                                 01565000
CHTJID   EQU   CHAIN+30                                                 01566000
CHACT1   EQU   CHAIN+35                                                 01567000
CHASM    EQU   CHAIN+40                                                 01568000
CHCIBP   EQU   CHASM+4                                                  01569000
CHRGNSZ  EQU   CHASM+8                                                  01570000
CHSHORT  EQU   CHASM+24                                                 01571000
CHSWT    EQU   CHSHORT                                                  01572000
SENDCSCB EQU   0                                                        01573000
CHAINS01 EQU   CHASM                                                    01574000
CHBUF    EQU   CHAINS01                                                 01575000
CHTYPE   EQU   CHAINS01+124                                             01576000
CHTRSTAT EQU   CHAINS01+125                                             01577000
CHCSYSO  EQU   CHAINS01+134                                             01578000
*                                      START UNREFERENCED COMPONENTS    01579000
CHLAST   EQU   CHAINS01+136                                             01580000
CHSPA    EQU   CHAINS01+135                                             01581000
CHUSERID EQU   CHCSYSO                                                  01582000
CHJB     EQU   CHCSYSO                                                  01583000
CHDUMP   EQU   CHCSYSO                                                  01584000
CHQUE    EQU   CHCSYSO                                                  01585000
CHHOLD   EQU   CHCSYSO                                                  01586000
CHOUT    EQU   CHCSYSO                                                  01587000
CHINN    EQU   CHCSYSO                                                  01588000
CHALL    EQU   CHCSYSO                                                  01589000
CHINC    EQU   CHAINS01+132                                             01590000
CHPEND   EQU   CHAINS01+128                                             01591000
CHARID   EQU   CHAINS01+127                                             01592000
CHCNID   EQU   CHAINS01+126                                             01593000
@NM00013 EQU   CHTRSTAT                                                 01594000
CHTSL    EQU   CHTRSTAT                                                 01595000
CHTS     EQU   CHTRSTAT                                                 01596000
CHINITL  EQU   CHTRSTAT                                                 01597000
CHINIT   EQU   CHTRSTAT                                                 01598000
CHJOBSL  EQU   CHTRSTAT                                                 01599000
CHJOBS   EQU   CHTRSTAT                                                 01600000
CHDEF    EQU   CHTYPE                                                   01601000
CHHIAR   EQU   CHTYPE                                                   01602000
CHARSV29 EQU   CHTYPE                                                   01603000
CHARSV28 EQU   CHTYPE                                                   01604000
CHARSV27 EQU   CHTYPE                                                   01605000
CHARSV26 EQU   CHTYPE                                                   01606000
CHARSV25 EQU   CHTYPE                                                   01607000
CHDSTAT  EQU   CHTYPE                                                   01608000
CHARSV16 EQU   CHSHORT+108                                              01609000
CHARSV15 EQU   CHSHORT+104                                              01610000
CHJSCBVS EQU   CHSHORT+100                                              01611000
CHUSCVS  EQU   CHSHORT+96                                               01612000
@NM00012 EQU   CHSHORT+92                                               01613000
@NM00011 EQU   CHSHORT+88                                               01614000
CHSQA    EQU   CHSHORT+52                                               01615000
CHQPA    EQU   CHSHORT+16                                               01616000
CHJCL    EQU   CHSHORT+12                                               01617000
CHSPC    EQU   CHSHORT+8                                                01618000
CHSPB    EQU   CHSHORT+4                                                01619000
CHTCB    EQU   CHSHORT+1                                                01620000
CHARSV23 EQU   CHSWT                                                    01621000
CHARSV22 EQU   CHSWT                                                    01622000
CHARSV21 EQU   CHSWT                                                    01623000
CHAC     EQU   CHSWT                                                    01624000
CHPSF    EQU   CHSWT                                                    01625000
CHPSD    EQU   CHSWT                                                    01626000
CHJCT    EQU   CHSWT                                                    01627000
CHARSV20 EQU   CHSWT                                                    01628000
CHCECB   EQU   CHASM+20                                                 01629000
CHECB    EQU   CHASM+16                                                 01630000
CHRGNAD  EQU   CHASM+12                                                 01631000
CHARSV18 EQU   CHRGNSZ+1                                                01632000
CHRPRTY  EQU   CHRGNSZ                                                  01633000
@NM00010 EQU   CHCIBP                                                   01634000
CHEND    EQU   CHCIBP                                                   01635000
CHECBP   EQU   CHASM                                                    01636000
CHDER    EQU   CHAIN+36                                                 01637000
CHARSV10 EQU   CHACT1                                                   01638000
CHARSV09 EQU   CHACT1                                                   01639000
CHARSV08 EQU   CHACT1                                                   01640000
CHARSV07 EQU   CHACT1                                                   01641000
CHARSV06 EQU   CHACT1                                                   01642000
CHARSV05 EQU   CHACT1                                                   01643000
CHARSV04 EQU   CHACT1                                                   01644000
CHRDWTR  EQU   CHACT1                                                   01645000
CHARSV30 EQU   CHAIN+34                                                 01646000
CHQID    EQU   CHAIN+32                                                 01647000
CHASID   EQU   CHTJID                                                   01648000
CHUCMP   EQU   CHAIN+29                                                 01649000
CHTRKID  EQU   CHPKE                                                    01650000
CHCIBCTR EQU   CHAIN+27                                                 01651000
CHUNIT   EQU   CHAIN+24                                                 01652000
CHCLS    EQU   CHAIN+16                                                 01653000
CHPARM   EQU   CHKEY                                                    01654000
CHIFY    EQU   CHACT                                                    01655000
CHAIFX   EQU   CHACT                                                    01656000
CHCLD    EQU   CHACT                                                    01657000
CHCL     EQU   CHACT                                                    01658000
CHDSI    EQU   CHACT                                                    01659000
CHDISC   EQU   CHACT                                                    01660000
CHTERM   EQU   CHACT                                                    01661000
CHSWAP   EQU   CHACT                                                    01662000
CHQSPC   EQU   CHSTS                                                    01663000
CHSOUT   EQU   CHSTS                                                    01664000
CHSYS    EQU   CHSTS                                                    01665000
CHAP     EQU   CHSTS                                                    01666000
CHSZE    EQU   CHFLG+1                                                  01667000
CHVCD    EQU   CHFLG                                                    01668000
CHPTR    EQU   CHAIN                                                    01669000
PARMRCD1 EQU   COMMONC+196                                              01670000
PARMDCB  EQU   COMMONC+192                                              01671000
PARMLMCT EQU   COMMONC+188                                              01672000
PARMDDNM EQU   SDIOPARM+12                                              01673000
PARMIOAD EQU   SDIOPARM+8                                               01674000
PARMRBA  EQU   SDIOPARM+4                                               01675000
PARMFDBK EQU   SDIOPARM+3                                               01676000
PARMKEY  EQU   SDIOPARM+2                                               01677000
P2DEVAD  EQU   @NM00007                                                 01678000
P2DEL    EQU   @NM00007                                                 01679000
P2CLOSE  EQU   @NM00007                                                 01680000
P2WRDAF  EQU   @NM00007                                                 01681000
P2WRDI   EQU   @NM00007                                                 01682000
P1READ1  EQU   @NM00006                                                 01683000
P1CREATE EQU   @NM00006                                                 01684000
P1READ   EQU   @NM00006                                                 01685000
P1OPEN   EQU   @NM00006                                                 01686000
@NM00005 EQU   COMMONC+167                                              01687000
OPERID   EQU   COMMONC+160                                              01688000
COMBUFP  EQU   COMMONA+25                                               01689000
COMI     EQU   COMMONA+24                                               01690000
SDIORC   EQU   COMMONA+16                                               01691000
IDTBL    EQU   COMMONA+13                                               01692000
MSG1EXTP EQU   COMMONA+9                                                01693000
FBADTPUT EQU   @NM00004                                                 01694000
FBADRITA EQU   @NM00004                                                 01695000
FBADIO   EQU   @NM00004                                                 01696000
FMSG1    EQU   @NM00004                                                 01697000
FWTO2    EQU   @NM00004                                                 01698000
FERRSYN  EQU   @NM00004                                                 01699000
FCONSOL  EQU   FSOURCE                                                  01700000
FTERM    EQU   FSOURCE                                                  01701000
FMAILFL  EQU   @NM00002                                                 01702000
FYESBCM  EQU   @NM00002                                                 01703000
FNOMSG   EQU   @NM00002                                                 01704000
FLISTING EQU   FLAGS                                                    01705000
FENDUSL  EQU   FLAGS                                                    01706000
FUPUSD   EQU   FLAGS                                                    01707000
FCHNMSG  EQU   FLAGS                                                    01708000
FBADSEND EQU   FLAGS                                                    01709000
FOPEN    EQU   FLAGS                                                    01710000
FMSGA    EQU   MSGFLAGS                                                 01711000
FMSG9    EQU   MSGFLAGS                                                 01712000
FMSG8    EQU   MSGFLAGS                                                 01713000
FMSG6    EQU   MSGFLAGS                                                 01714000
FMSG5    EQU   MSGFLAGS                                                 01715000
FMSG4    EQU   MSGFLAGS                                                 01716000
FMSG2    EQU   MSGFLAGS                                                 01717000
VALCNT   EQU   COMMONA+2                                                01718000
TPUTRC   EQU   COMMONA+1                                                01719000
@NM00001 EQU   COMMONA                                                  01720000
*                                      END UNREFERENCED COMPONENTS      01721000
@RT00087 EQU   SCAN1                                                    01722000
@RT00091 EQU   TEXT                                                     01723000
@RF00113 EQU   OUT2                                                     01724000
@RT00120 EQU   ERRSYN                                                   01725000
@RT00132 EQU   ALLNOW                                                   01726000
@RT00134 EQU   ALLNOW                                                   01727000
@RF00134 EQU   MN02                                                     01728000
@RF00139 EQU   ERRSYN                                                   01729000
@RF00148 EQU   TE2                                                      01730000
@RT00158 EQU   QUOTE                                                    01731000
@RT00170 EQU   ERRSYN                                                   01732000
@RT00177 EQU   ALLNOW                                                   01733000
@RT00179 EQU   ALLNOW                                                   01734000
@RF00182 EQU   ERRSYN                                                   01735000
@RT00210 EQU   TUSER                                                    01736000
@RT00212 EQU   TALL                                                     01737000
@RT00220 EQU   TROUTE                                                   01738000
@RT00222 EQU   TOPER                                                    01739000
@RT00225 EQU   TANOW                                                    01740000
@RT00232 EQU   TANOW                                                    01741000
@RF00232 EQU   ERRSYN                                                   01742000
@RT00235 EQU   TUSER                                                    01743000
@RT00237 EQU   TALL                                                     01744000
@RF00237 EQU   ERRSYN                                                   01745000
@RT00243 EQU   ENDRTE                                                   01746000
@RT00245 EQU   ENDRTE                                                   01747000
@RT00247 EQU   ERRSYN                                                   01748000
@RT00253 EQU   ERRSYN                                                   01749000
@RT00256 EQU   ERRSYN                                                   01750000
@RT00264 EQU   ENDCNS                                                   01751000
@RT00266 EQU   ENDCNS                                                   01752000
@RT00268 EQU   ERRSYN                                                   01753000
@RT00274 EQU   ERRSYN                                                   01754000
@RT00277 EQU   ERRSYN                                                   01755000
@RT00285 EQU   ULS8                                                     01756000
@RT00300 EQU   ULS9                                                     01757000
@RT00302 EQU   ULS9                                                     01758000
@RT00304 EQU   ERRSYN                                                   01759000
@RT00306 EQU   ERRUID                                                   01760000
@RT00309 EQU   GOODCHAR                                                 01761000
@RT00324 EQU   ULS9A                                                    01762000
@RT00333 EQU   ENDUL                                                    01763000
@RT00335 EQU   ULSCAN6                                                  01764000
@RT00338 EQU   MSG1A                                                    01765000
@RT00350 EQU   ULS9                                                     01766000
@RT00352 EQU   ULS9                                                     01767000
@RT00354 EQU   ERRSYN                                                   01768000
@RT00365 EQU   LSTCK                                                    01769000
@RT00367 EQU   ERRSYN                                                   01770000
@RF00369 EQU   ENDCB                                                    01771000
@RT00372 EQU   ERRSYN                                                   01772000
@RF00387 EQU   ERRSYN                                                   01773000
@RT00396 EQU   TANOW                                                    01774000
@RT00398 EQU   TANOW                                                    01775000
@RF00400 EQU   ERRSYN                                                   01776000
@RF00406 EQU   ENDCB                                                    01777000
@RT00409 EQU   ENDCB                                                    01778000
@RT00413 EQU   CLNUP                                                    01779000
@RT00431 EQU   CLNUP                                                    01780000
@EL01    EQU   @EL00001                                                 01781000
@ENDDATA EQU   *                                                        01782000
         END   IEEVSEND                                                 01783000
