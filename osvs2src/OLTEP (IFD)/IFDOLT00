         TITLE ' INITIALIZE IFDOLT.  IFDOLT00'                          00010000
         TITLE ' INITIALIZE IFDOLT.  IFDOLT00'                          00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT00 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT00 27 APR 77'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*  GEN(USING TCBRBP,R6);                 /* TCB BLOCK           X02008* 00160000
         USING TCBRBP,R6                                                00170000
         DS    0H                                                       00180000
*  GEN(USING CHASCT,2);                  /* COMMON AREA BASE REGISTER * 00190000
         USING CHASCT,2                                                 00200000
         DS    0H                                                       00210000
* GENERATE DATA;                                                        00220000
*  /************************************************************Y02008* 00230000
*  /*                   REGISTER DECLARES                       Y02008* 00240000
*  /************************************************************Y02008* 00250000
*  DCL R0 REG(0) PTR;                    /* REGISTER 0          Y02008* 00260000
*  DCL R1 REG(1) PTR;                    /* REGISTER 1          Y02008* 00270000
*  DCL R2 REG(2) PTR;                    /* COMMON AREA PTR     Y02008* 00280000
*  DCL R3 REG(3) PTR;                    /* REGISTER 3          Y02008* 00290000
*  DCL R4 REG(4) PTR;                    /* REGISTER 4          Y02008* 00300000
*  DCL R5 REG(5) PTR;                    /* CVT POINTER         Y02008* 00310000
*  DCL R6 REG(6) PTR;                    /* REGISTER 6          Y02008* 00320000
*  DCL R7 REG(7) PTR;                    /* REGISTER 7          Y02008* 00330000
*  DCL R8 REG(8) PTR;                    /* REGISTER 8          Y02008* 00340000
*  DCL R9 REG(9) PTR;                    /* REGISTER 9          Y02008* 00350000
*  DCL R10 REG(10) PTR;                  /* REGISTER 10         Y02008* 00360000
*  DCL R11 REG(11) PTR;                  /* REGISTER 11         Y02008* 00370000
*  DCL R12 REG(12) PTR;                  /* REGISTER 12         Y02008* 00380000
*  DCL R13 REG(13) PTR;                  /* SAVE AREA POINTER   Y02008* 00390000
*  DCL R14 REG(14) PTR;                  /* REGISTER 14         Y02008* 00400000
*  DCL R15 REG(15) PTR;                  /* REGISTER 15         Y02008* 00410000
*  /************************************************************Y02008* 00420000
*  /*                  COMMON AREA DECLARES                     Y02008* 00430000
*  /************************************************************Y02008* 00440000
*  DCL CHASCT CHAR(37) GENERATED;        /* SEC CONT TABLE    @ZA15468* 00450000
*  DCL PRTBUFR CHAR(124) GENERATED;      /* PRINT BUFFER        Y02008* 00460000
*  DCL EXPAND1 FIXED(31) GENERATED;      /* PARTITION SIZE      Y02008* 00470000
*  DCL ENDJOB PTR(31) GENERATED;         /* POINTER TO IFDOLT00 Y02008* 00480000
*                                        /* SAVE AREA           Y02008* 00490000
*  DCL TSTDEBAD PTR(31) GENERATED;       /* TEST DEB ADDRESS    Y02008* 00500000
*  DCL CESWT3 CHAR(1) GENERATED;         /* OLTEP SWITCH 3      Y02008* 00510000
*   DCL 1 * CHAR(1) BASED(ADDR(CESWT3)), /* OLTEP SWITCH 3      Y02008* 00520000
*        3 * BIT(1),                     /* NA                  Y02008* 00530000
*        3 NURUN BIT(1),                 /* NEW RUN             Y02008* 00540000
*          5 * BIT(1);                   /* NA                  Y02008* 00550000
*  DCL MCT CHAR(100) GENERATED;          /* MODULE CONTROL TABLEY02008* 00560000
*  DCL ROPT CHAR(12) GENERATED;          /* SVC PARAMETER LIST  Y02008* 00570000
*  DCL 1 * BDY(WORD) BASED(ADDR(ROPT)),  /* SVC PARAMETER LIST  Y02008* 00580000
*        3 ROPTPTR1 PTR(31),             /* 1ST WORD            Y02008* 00590000
*        3 ROPTPTR2 PTR(31),             /* 2ND WORD          @ZA15468* 00600000
*        3 ROPTPTR3 PTR(31);             /* 3RD WORD          @ZA15468* 00610000
*  DCL WKSVC CHAR(16) GENERATED;         /* SVC WORK AREA       Y02008* 00620000
*  DCL VID CHAR(2) BASED(ADDR(WKSVC)+2); /* MODULE ID FOR SVC   Y02008* 00630000
*  DCL MID1 CHAR(2) BASED(ADDR(MCT)+10); /* MODULE ID FOR 00    Y02008* 00640000
*  DCL CESWT7 CHAR(1) GENERATED;         /* OLTEP SWITCH 7      Y02008* 00650000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT7)),  /* OLTEP SWITCH 7      Y02008* 00660000
*        3 * BIT(2),                     /* NA                  Y02008* 00670000
*        3 REMOTE BIT(1),                /* REMOTE TERM FLAG    Y02008* 00680000
*        3 * BIT(3),                     /* NA                  Y02008* 00690000
*        3 VIRTSPC BIT(1),               /* VIRTUAL OR REAL MEM.Y02008* 00700000
*        3 * BIT(1);                     /* NA                  Y02008* 00710000
*  DCL CESWT10 CHAR(1) GENERATED;        /* INTERNAL FLAGS      Y02008* 00720000
*  DCL 1 * CHAR(1) BASED(ADDR(CESWT10)), /* INTERNAL FLAGS      Y02008* 00730000
*        3 MPSYS BIT(1);                 /* 1-MP   0-NOT MP     Y02008* 00740000
*  DCL MSGMOD PTR GENERATED;             /* PTR TO ROOT MSG MOD.Y02008* 00750000
*  DCL 1 * BASED(MSGMOD),                /* MESSAGE MODULE      Y02008* 00760000
*        3 * PTR(31),                    /* NOT REFERENCED PTR  Y02008* 00770000
*        3 IFD102 PTR(31),               /* PTR TO MSG IFD102I  Y02008* 00780000
*        3 * CHAR(28),                   /* NOT REFERENCED PTRS Y02008* 00790000
*        3 IFD134 PTR(31),               /* PTR TO MSG IED134I  Y02008* 00800000
*        3 * CHAR(88),                   /* NOT REFERENCED PTRS Y02008* 00810000
*        3 IFD899 PTR(31);               /* PTR TO MSG IFD899I  Y02008* 00820000
*  DCL 1 MSG102 BDY(WORD) BASED(R1),     /* MSG IFD102I         Y02008* 00830000
*        3 * CHAR(25),                   /* 1ST 25 BYTES OF MSG Y02008* 00840000
*        3 MPMSG CHAR(20);               /* MP TEXT OF MSG      Y02008* 00850000
*  DCL 1 * BASED(R1),                   /* MSG IFD899I FORMAT   Y02906* 00860000
*        3 * CHAR(65),                  /* 1ST 65 CHAR          Y02906* 00870000
*        3 MSG899ID CHAR(2);            /* MSG ERROR CODE       Y02906* 00880000
*  DCL PARTITEM CHAR(8) GENERATED;       /* OLT PARTITION INFO  Y02008* 00890000
*  DCL 1 * BASED(ADDR(PARTITEM)),        /* OLT PARTITION INFO  Y02008* 00900000
*        3 PARADR PTR(31),               /* START ADDRESS       Y02008* 00910000
*          5 * CHAR(3),                  /* NA                  Y02008* 00920000
*          5 PAR4 CHAR(1),               /* LAST BYTE           Y02008* 00930000
*        3 PARSZ PTR(31);                /* SIZE                Y02008* 00940000
*  DCL REIUCB GENERATED PTR(31);         /* 2955 UCB ADDRES     Y02008* 00950000
*  DCL APPTRS CHAR(12) GENERATED;        /* PTRS TO APPENDAGES  Y02008* 00960000
*  DCL 1 NAPAPTRS CHAR(12) BDY(WORD) BASED(R1), /* 1ST 12 BYTES Y02008* 00970000
*                                        /* OF IFDOLT58         Y02008* 00980000
*        3 * CHAR(4),                    /* ENTRY TO PCI EXIT   Y02008* 00990000
*        3 NORMABNM CHAR(8);             /* PTRS TO NORMAL &    Y02008* 01000000
*                                        /* ABNORMAL EXIT RTNS  Y02008* 01010000
*  DCL PCIEXIT PTR(31) GENERATED;        /* PTR TO PCI EXIT RTN Y02008* 01020000
*  DCL RESTAB CHAR(64) BASED(ADDR(IFDOLT00)+32); /* WORK AREA   Y02008* 01030000
*  DCL DIEPTR PTR(31) GENERATED;         /* PTR TO IFDOLT57-DIE Y02008* 01040000
*  /************************************************************Y02008* 01050000
*  /*                   MISC SYS CNTRL BLKS                     Y02008* 01060000
*  /************************************************************Y02008* 01070000
*  DCL TCBMSS PTR GENERATED;             /* BOUNDARY BOX PTR    Y02008* 01080000
*  DCL ADRCVT PTR BASED(16);             /* CVT ADDRESS         Y02008* 01090000
*  DCL TCBWPTR PTR BASED(R5);            /* TCB WORDS POINTER   Y02008* 01100000
*  DCL 1 * BASED(TCBWPTR),               /* TCB WORDS           Y02008* 01110000
*        3 * PTR,                        /* NA                  Y02008* 01120000
*        3 ADRTCB PTR;                   /* TCB ADDRESS         Y02008* 01130000
*  DCL TCBPQE PTR GENERATED;             /* DUMMY PQE MINUS 8   Y02008* 01140000
*  DCL 1 * BDY(WORD) BASED(TCBPQE),      /* DUMMY PQE MINUS 8   Y02008* 01150000
*        3 *(2) PTR,                     /* NA                  Y02008* 01160000
*        3 FPQE PTR;                     /* FIRST PQE PTR       Y02008* 01170000
*  DCL 1 * BDY(WORD) BASED(FPQE),        /* FIRST PQE           Y02008* 01180000
*        3 *(5) PTR,                     /* NA                  Y02008* 01190000
*        3 REGSZ FIXED;                  /* REGION SIZE         Y02008* 01200000
*  /************************************************************Y02008* 01210000
*  /*               GETMAIN REQUIRED DECLARES                   Y02008* 01220000
*  /************************************************************Y02008* 01230000
*  /* TWO CONSECUTIVE FULLWORDS WHICH CONTAIN THE MINIMUM AND   Y02008* 01240000
*  /* MAXIMUM LENGTHS ACCEPTABLE FOR THE GETMAIN REQUEST        Y02008* 01250000
*  /************************************************************Y02008* 01260000
*  DCL 1 CORELNGT BDY(WORD) CHAR(8),     /* GETMAIN REQUIREMENTSY02008* 01270000
*        3 MINLNGTH FIXED(31) INIT(4096), /* 4K MINIMUM         YM7255* 01280000
*        3 MAXLNGTH FIXED(31);           /* MAXIMUM VARIES      Y02008* 01290000
*  /************************************************************Y02008* 01300000
*  /* TWO CONSECUTIVE FULLWORDS WHICH CONTAIN THE RESULTS OF THEY02008* 01310000
*  /* GETMAIN REQUEST. THE 1ST WORD CONTAINS THE ADDRESS OF THE Y02008* 01320000
*  /* ALLOCATED STORAGE, THE 2ND WORD CONTAINS THE LENGTH OF THEY02008* 01330000
*  /* STORAGE AREA ALLOCATED.                                   Y02008* 01340000
*  /************************************************************Y02008* 01350000
*  DCL 1 RESULTS CHAR(8) BDY(WORD),      /* GETMAIN RESULTS     Y02008* 01360000
*        3 * CHAR(4),                    /* GETMAIN AREA PTR    Y02008* 01370000
*        3 AREASIZE FIXED(31);           /* GETMAIN AREA SIZE   Y02008* 01380000
*  DCL SCTOL CHAR(2) BASED(R2+34);       /* SIZE IN WORDS       X02008* 01390000
*  DCL 1 I FIXED INIT(0),                /* WORK WORD           X02008* 01400000
*         2 * CHAR(2),                   /* NA                  X02008* 01410000
*         2 OLTSP CHAR(2);               /* WORK BYTES          X02008* 01420000
*  DCL 1 STAEDT CHAR(104) BASED(R5),     /* STAE AREA DATA.     X02008* 01430000
*        3 * CHAR(4),                    /* NA.                 X03008* 01440000
*        3 ABNDCC CHAR(4);               /* ABEND COMP. CODE.   X03008* 01450000
*  DCL SYS222 CHAR(4) INIT('00222000'X); /* SYSTEM 222 CC       Y02008* 01460000
*  DCL SVSTAEDT CHAR(104) BASED(R11+2);  /* SAVE STAE AREA DATA X02008* 01470000
*  DCL CHNBK PTR BASED(R13+4);           /* CHAIN BACK SAVE AREA */     01480000
*         DCL 1 FUNC14 FIXED INIT(0),    /*                     S21052* 01490000
*           2 * CHAR(2),                 /*                     S21052* 01500000
*           2 * CHAR(2) INIT('0014'X);   /*                      21937* 01510000
*  DCL IFDOLT18 EXT ENTRY;               /* TRANSIENT MANAGER ROOT */   01520000
*  DCL IFDOLT23 EXT ENTRY;               /* COMMON AREA MODULE NAME */  01530000
*  DCL IFDOLT30 EXT ENTRY;               /* CE COMMUNICATIONS ROOT */   01540000
*  DCL TMRADR PTR INIT(ADDR(IFDOLT18));  /* TRANSIENT MANAGER ADDRESS * 01550000
*  DCL COMADR PTR INIT(ADDR(IFDOLT23));  /* COMMON AREA ADDRESS */      01560000
*  DCL CECOMRT PTR INIT(ADDR(IFDOLT30)); /* CE COMMUNICATIONS ADDRESS * 01570000
*  DCL STAERT LABEL;                     /* STAE ERROR ROUTINE */       01580000
*  DCL LSTADR FIXED BASED(ADDR(I));      /* END PARTITION       X02008* 01590000
*  DCL 1 H FIXED INIT(15),               /* WORK AREA           X02008* 01600000
*         2 * CHAR(2),                   /* NA                  X02008* 01610000
*         2 RHFWD FIXED(15),             /* RIGHT HALF WORD     X02008* 01620000
*           3 * CHAR(1),                 /* NA                  X02008* 01630000
*           3 LBYT4 CHAR(1);             /* LAST BYTE           X02008* 01640000
*  DCL J FIXED INIT(0);                  /* WORK WORD           X02008* 01650000
*  DCL 1 * CHAR(1) INIT('00'X),          /* WORK SWITCHES       X02008* 01660000
*         2 DMPIND BIT(2),               /* DUMP INDICATORS     X02008* 01670000
*           3 INLN BIT(1),               /* ALTER INITIAL LINE  X02008* 01680000
*           3 FNLN BIT(1),               /* ALTER FINAL LINE    X02008* 01690000
*             4 * BIT(1);                /* NA                  X02008* 01700000
*  DCL LIST CHAR(16) INIT('0123456789ABCDEF'); /* ALPHA-NUMERIC X02008* 01710000
*  DCL 1 * CHAR(32) BASED(R8),           /* WORDS IN CORE       X02008* 01720000
*         2 WORD1 CHAR(4),               /* WORD IN CORE        X02008* 01730000
*         2 NXTWD CHAR(4);               /* NEXT WORD           X02008* 01740000
*  DCL 1 * BASED(R3),                    /* CORE LOCATION       X02008* 01750000
*         2 WD1T8 CHAR(32),              /* GROUP OF WORDS      X02008* 01760000
*         2 NXWD1T8 CHAR(32);            /* NEXT GROUP OF WORDS X02008* 01770000
*  DCL WD1T8A CHAR(31) BASED(ADDR(WD1T8)+1);  /* NEXT LOCATION  X02008* 01780000
*  DCL LGWRTCT CHAR(2) GENERATED;        /* LARGE WRITE COUNT   X02008* 01790000
*  DCL LGWRTFD CHAR(8) BASED(R2+92);     /* LARGE WRITE INFO    Y02008* 01800000
*  DCL DUMPHDR CHAR(19)                  /* DUMP HEADING        X02008* 01810000
*         INIT('OLTS PARTITION AREA');   /* TEXT OF MESSAGE     X02008* 01820000
*  DCL 1 * BASED(ADDR(PRTBUFR)+1),       /* PRINT BUFFER        X02008* 01830000
*         2 LINE CHAR(11),               /* START PRINT LINE    X02008* 01840000
*         2 LNWD1 CHAR(37),              /* 1ST PART OF LINE    X02008* 01850000
*         2 MDWAY CHAR(37),              /* 2ND PART OF LINE    X02008* 01860000
*         2 ASTLN CHAR(1),               /* 1ST ASTERISK        X02008* 01870000
*         2 LNCORE CHAR(32),             /* CORE BYTES          X02008* 01880000
*         2 ASTFINIS CHAR(1),            /* LAST ASTERISK       X02008* 01890000
*           3 * CHAR(1);                 /* NA                  X02008* 01900000
*  DCL LNCOR1 CHAR(31) BASED(ADDR(LNCORE)+1); /* NEXT LOCATION  X02008* 01910000
*  DCL EBCD CHAR(1) BASED(R6);           /* BYTE TO PRINT       X02008* 01920000
*  DCL NXTR6 CHAR(1) BASED(R6+1);        /* NEXT BYTE           X02008* 01930000
*  DCL 1 CVT BASED(R5),                  /* COMM. VECTOR TABLE  X02008* 01940000
*        3 * CHAR(312),                  /* N/A                 X02008* 01950000
*        3 CVTEORM FIXED(31);            /* END OF REAL MEMORY  X02008* 01960000
*  DCL 1 PARMFLD BASED(R3),              /* PARM FIELD AND COUNTX02008* 01970000
*        3 COUNT FIXED(15),              /* FIELD LENGTH        X02008* 01980000
*        3 FLD CHAR(3);                  /* FIELD TEXT          X02008* 01990000
*  DCL PSWHDR CHAR(12)                   /* PSW HEADER                * 02000000
*         INIT('PSW AT ABEND');                                         02010000
*  DCL REGSHDR CHAR(13)                  /* REGISTER HEADER           * 02020000
*         INIT('REGS AT ABEND');                                        02030000
*  DCL REGID07 CHAR(9)                   /* REGS 0-7 ID               * 02040000
*         INIT('REGS 0-7 ');                                            02050000
*  DCL REGID8F CHAR(4)                   /* REGS 8-F ID               * 02060000
*         INIT('8-15');                                                 02070000
*  DCL STAEREG PTR(31) BASED(R3);        /* REGISTER IN STAE BLOCK    * 02080000
*  RESTRICT(2,3,4,5,6,7,8,9);            /* REGS IN USE         X02008* 02090000
*  /************************************************************Y02008* 02100000
*  /*                  PERFORM INITIALIZATION                   Y02008* 02110000
*  /************************************************************Y02008* 02120000
*  R2=COMADR;                            /* INITIALIZE COMMON   Y02008* 02130000
         L     @2,COMADR                                          0234  02140000
*                                        /* AREA BASE REGISTER. Y02008* 02150000
*  ENDJOB=R13;                           /* INITIALIZE POINTER  Y02008* 02160000
         ST    @D,ENDJOB                                          0236  02170000
*                                        /* TO FORCE RETURN TO  Y02008* 02180000
*                                        /* SYSTEM.             Y02008* 02190000
*  R1='08'X;                             /* MP CALL TO SVC 59   Y02008* 02200000
         LA    @1,X'08'                                           0239  02210000
*  GEN(SVC   59);                        /* ISSUE SVC CALL      Y02008* 02220000
         SVC   59                                                       02230000
         DS    0H                                                       02240000
*  GEN(STC   R1,CESWT10);                /* SET MP FLAG         Y02008* 02250000
         STC   R1,CESWT10                                               02260000
         DS    0H                                                       02270000
*  R1=IFD102;                            /* PLACE POINTER TO    Y02008* 02280000
         L     @C,MSGMOD                                          0242  02290000
         L     @1,4(0,@C)                                         0242  02300000
*                                        /* MSG IFD102I IN R1.  Y02008* 02310000
*  IF MPSYS='0'B THEN                    /* IS IT AN MP SYSTEM  Y02008* 02320000
         TM    A00008,B'10000000'                                 0244  02330000
         BC    05,@9FF                                            0244  02340000
*    MPMSG=MPMSG&&MPMSG;                 /* NO, ELIMINATE MP    Y02008* 02350000
         XC    25(20,@1),25(@1)                                   0245  02360000
*                                        /* PART OF MSG IFD102I Y02008* 02370000
*  GEN(PWTO  REG=(R1));                  /* PRINT MSG IFD102I   Y02008* 02380000
@9FF     EQU   *                                                  0247  02390000
         PWTO  REG=(R1)                                                 02400000
         DS    0H                                                       02410000
*  R1=IFD134;                            /* GET POINTER TO MSG  Y02008* 02420000
         L     @1,36(0,@C)                                        0248  02430000
*                                        /* IFD134I IN R1.      Y02008* 02440000
*  GEN(PWTO  REG=(R1));                  /* PRINT MSG IFD134I   Y02008* 02450000
         PWTO  REG=(R1)                                                 02460000
         DS    0H                                                       02470000
*  R15=TMRADR;                           /* GO TO TRANSIENT MGR Y02008* 02480000
         L     @F,TMRADR                                          0251  02490000
*  GEN(BALR  R14,R15);                   /* & INITIALIZE MCT.   Y02008* 02500000
         BALR  R14,R15                                                  02510000
         DS    0H                                                       02520000
*  R5=ADRCVT;                            /* PLACE CVT ADDR IN   Y02008* 02530000
         L     @5,ADRCVT                                          0253  02540000
*                                        /* REGISTER 5.         Y02008* 02550000
*  R6=ADRTCB;                            /* TCB ADDRESSABILITY  Y02008* 02560000
         L     @C,0(0,@5)                                         0255  02570000
         L     @6,4(0,@C)                                         0255  02580000
*  EXPAND1=REGSZ;                        /* SAVE REGION SIZE    Y02008* 02590000
         L     @C,TCBPQE                                          0256  02600000
         L     @C,8(0,@C)          A00021                         0256  02610000
         MVC   EXPAND1(4),20(@C)                                  0256  02620000
*                                        /* IN COMMON AREA.     Y02008* 02630000
*  /************************************************************Y02008* 02640000
*  /*       LOAD NORMAL, ABNORMAL, PCI APPENDAGE (NAPA)         Y02008* 02650000
*  /************************************************************Y02008* 02660000
*  GEN(LOAD  EP=IFDOLT58);               /* LOAD IFDOLT58(NAPA) Y02008* 02670000
         LOAD  EP=IFDOLT58                                              02680000
         DS    0H                                                       02690000
*  R1=R0;                                /* INTO OLTEP REGION.  Y02008* 02700000
         LR    @1,@0                                              0262  02710000
*  PCIEXIT=R1;                           /* SAVE PTR TO PCI EXITY02008* 02720000
         ST    @1,PCIEXIT                                         0263  02730000
*                                        /* ROUTINE IN COM AREA Y02008* 02740000
*  APPTRS(5:12)=NORMABNM;                /* SAVE PTRS TO NORMAL Y02008* 02750000
         MVC   APPTRS+4(8),4(@1)                                  0265  02760000
*                                        /* AND ABNORMAL EXIT   Y02008* 02770000
*                                        /* ROUTINES IN COM AREAY02008* 02780000
*  /************************************************************Y02008* 02790000
*  /*           LOAD DISABLED INTERRUPT EXIT (DIE)              Y02008* 02800000
*  /************************************************************Y02008* 02810000
*  GEN(LOAD  EP=IFDOLT57);               /* LOAD IFDOLT57(DIE)  Y02008* 02820000
         LOAD  EP=IFDOLT57                                              02830000
         DS    0H                                                       02840000
*                                        /* IN PREPARATION FOR  Y02008* 02850000
*                                        /* BEING MOVED BY SVC. Y02008* 02860000
*  /************************************************************Y02008* 02870000
*  /*     HAVE SVC 59 PERFORM TOTAL OLTER INITIALIZATION        Y02008* 02880000
*  /*         - CHECK FOR 2 OLTEPS                              Y02008* 02890000
*  /*         - MOVE IFDOLT57 TO PROTECTED CORE-SUBPOOL 245     Y02008* 02900000
*  /*         - OBTAIN & SET UP UCB MASK TABLE                  Y02008* 02910000
*  /*         - OBTAIN SPACE FOR REI IEB                        Y02008* 02920000
*  /*         - SET TCBOLTEP FLAG ON IN TCB                     Y02008* 02930000
*  /*         - FIND 2955 UCB IC ONE EXISTS                     Y02008* 02940000
*  /*         - TELL CALLER IF IT HAS BEEN INVOKED V=R OR V=V   Y02008* 02950000
*  /************************************************************Y02008* 02960000
*  ROPTPTR1=R0;                          /* PLACE ADDR OF WHERE Y02008* 02970000
         ST    @0,A00003                                          0284  02980000
*                                        /* IFDOLT57 WAS LOADED Y02008* 02990000
*                                        /* IN SVC 59 PARAMETER Y02008* 03000000
*                                        /* LIST.               Y02008* 03010000
*  ROPTPTR2=ADDR(DIEPTR);                /* PLACE ADDR OF WHERE Y02008* 03020000
         LA    @F,DIEPTR                                          0288  03030000
         ST    @F,A00003+4                                        0288  03040000
*                                        /* THE DIE ADDRESS IS  Y02008* 03050000
*                                        /* STORED IN COMMON    Y02008* 03060000
*                                        /* AREA IN SVC 59      Y02008* 03070000
*                                        /* PARAMETER LIST.     Y02008* 03080000
*  ROPTPTR3=ADDR(CHASCT);                /* PLACE ADDRESS OF  @ZA15468* 03090000
         LA    @F,CHASCT                                          0293  03100000
         ST    @F,A00003+8                                        0293  03110000
*                                        /* SCT IN SVC 59     @ZA15468* 03120000
*                                        /* PARAMETER LIST    @ZA15468* 03130000
*  R15=0;                                /* ZERO REGISTER 15.   Y02008* 03140000
         SR    @F,@F                                              0296  03150000
*  R1='58'X;                             /* PLACE CALLING CODE  Y02008* 03160000
         LA    @1,X'58'                                           0297  03170000
*                                        /* 58 HEX IN REG 1.    Y02008* 03180000
*  R0=ADDR(ROPT);                        /* PLACE PARAMETER LISTY02008* 03190000
         LA    @0,ROPT                                            0299  03200000
*                                        /* ADDRESS IN R0.      Y02008* 03210000
*  GEN(SVC   59);                        /* ISSUE SVC 59.       Y02008* 03220000
         SVC   59                                                       03230000
         DS    0H                                                       03240000
*  REIUCB=R15;                           /* SAVE 2955 UCB ADDR, Y02008* 03250000
         ST    @F,REIUCB                                          0302  03260000
*                                        /* IF ONE EXISTS.      Y02008* 03270000
*  R7=R15;                               /* SAVE RETURN CODE    Y02008* 03280000
         LR    @7,@F                                              0304  03290000
*                                        /* FROM SVC 59 IN R7.  Y02008* 03300000
*  TSTDEBAD=R0+4;                        /* SAVE DEB AREA ADDR  Y02008* 03310000
         LA    @F,4                                               0306  03320000
         AR    @F,@0                                              0306  03330000
         ST    @F,TSTDEBAD                                        0306  03340000
*                                        /* IN SUBPOOL 254,     Y02008* 03350000
*                                        /* ADJUSTED FOR DBCHK. Y02008* 03360000
*  VIRTSPC='1'B;                         /* INDICATE OLTEP IS   Y02008* 03370000
         OI    A00004,B'00000010'                                 0309  03380000
*                                        /* IN VIRTUAL.         Y02008* 03390000
*  IF R1=0 THEN                          /* IS OLTEP IN VIRTUAL.Y02008* 03400000
         LTR   @1,@1                                              0311  03410000
         BC    07,@9FE                                            0311  03420000
*    VIRTSPC='0'B;                       /* NO, RESET FLAG TO 0,Y02008* 03430000
         NI    A00004,B'11111101'                                 0312  03440000
*                                        /* INDICATING CLTEP IS Y02008* 03450000
*                                        /* IN REAL.            Y02008* 03460000
*  GEN(DELETE EP=IFDOLT57);              /* DELETE IFDOLT57, IT Y02008* 03470000
@9FE     EQU   *                                                  0315  03480000
         DELETE EP=IFDOLT57                                             03490000
         DS    0H                                                       03500000
*                                        /* HAS BEEN MOVED BY   Y02008* 03510000
*                                        /* SVC 59.             Y02008* 03520000
*  R1=IFD899;                           /* PTR TO MSG IFD899I   Y02906* 03530000
         L     @C,MSGMOD                                          0318  03540000
         L     @1,128(0,@C)                                       0318  03550000
*  IF R7=4|                             /* SHOULD MSG BE PRINTEDY02906* 03560000
*    R7=8 THEN                          /* SHOULD MSG BE PRINTEDY02906* 03570000
         CH    @7,@D1                                             0319  03580000
         BC    08,@9FD                                            0319  03590000
         CH    @7,@D2                                             0319  03600000
         BC    07,@9FC                                            0320  03610000
*      DO;                              /* YES, 2 OLTEPS OR     Y02906* 03620000
@9FD     EQU   *                                                  0321  03630000
*                                       /* CALLER NOT AUTHORIZEDY02906* 03640000
* INT001:                               /*                      Y02906* 03650000
*      GEN(PWTO  REG=(R1));             /* OUTPUT MSG IFD899I   Y02906* 03660000
INT001   PWTO  REG=(R1)                                                 03670000
         DS    0H                                                       03680000
*           IF MSG899ID(2)='1' & R7=8     /* IF SECOND OLTEP  @ZA17684* 03690000
* THEN GO TO INT014;          /* NO NEED TO CLEANUP           @ZA17684* 03700000
         CLI   66(@1),C'1'                                        0325  03710000
         BC    07,@9FB                                            0325  03720000
         CH    @7,@D2                                             0325  03730000
         BC    08,INT014                                          0326  03740000
*       GO TO INT013B;                   /* TERMINATE           YM5414* 03750000
         BC    15,INT013B                                         0327  03760000
*      END;                             /*                      Y02906* 03770000
*  /************************************************************Y02008* 03780000
*  /*                  OBTAIN STORAGE FOR OLT                   Y02008* 03790000
*  /************************************************************Y02008* 03800000
*  MAXLNGTH=1048576;                     /* SET DEFAULT OLTSIZE Y02008* 03810000
@9FC     MVC   CORELNGT+4(4),@D3                                  0332  03820000
*                                        /* TO 1 MEG MAX        Y02008* 03830000
*  IF VIRTSPC='0'B THEN                  /* IS OLTEP IN REAL    Y02008* 03840000
         TM    A00004,B'00000010'                                 0334  03850000
         BC    05,@9F9                                            0334  03860000
*    MAXLNGTH=EXPAND1-65536;             /* YES, DETERMINE MAX  Y02008* 03870000
         L     @F,EXPAND1                                         0335  03880000
         S     @F,@D4                                             0335  03890000
         ST    @F,CORELNGT+4                                      0335  03900000
*                                        /* OLT SIZE..........  Y02008* 03910000
*                                        /* OLTEP MUST HAVE 64K Y02008* 03920000
*  IF MAXLNGTH<4096 THEN                 /* IS THERE 4K FOR OLT YM7255* 03930000
@9F9     LH    @F,@D5                                             0338  03940000
         C     @F,CORELNGT+4                                      0338  03950000
*    GOTO INT002;                        /* NO, PRINT IFD899I   YM7255* 03960000
         BC    02,INT002                                          0339  03970000
*  GEN(GETMAIN VC,LA=CORELNGT,A=RESULTS,BNDRY=PAGE);                    03980000
         GETMAIN VC,LA=CORELNGT,A=RESULTS,BNDRY=PAGE                    03990000
         DS    0H                                                       04000000
*                                        /* OBTAIN OLT AREA.    Y02008* 04010000
*                                                                       04020000
*  IF R15^=0 THEN                        /* WAS CORE ALLOCATED. Y02008* 04030000
         LTR   @F,@F                                              0343  04040000
         BC    08,@9F8                                            0343  04050000
*    DO;                                /* NO, PRINT MSG IFD899IY02906* 04060000
*  INT002:                              /* AND TERMINATE        Y02906* 04070000
*    R1=IFD899;                         /* PTR TO MSG IFD899I   Y02906* 04080000
INT002   L     @C,MSGMOD                                          0345  04090000
         L     @1,128(0,@C)                                       0345  04100000
*    MSG899ID(2)='3';                   /* ID TO MSG IFD899I    Y02008* 04110000
         MVI   66(@1),C'3'                                        0347  04120000
*    GO TO INT001;                      /* GO PRINT MSG         Y02906* 04130000
         BC    15,INT001                                          0348  04140000
*    END;                               /* EXIT SYSTEM.         Y02906* 04150000
*  I=AREASIZE/4;                         /* PLACE SIZE OF OLT   Y02008* 04160000
@9F8     L     @E,RESULTS+4                                       0350  04170000
         SRDA  @E,32                                              0350  04180000
         LA    @0,4                                               0350  04190000
         DR    @E,@0                                              0350  04200000
         ST    @F,I                                               0350  04210000
*  SCTOL=OLTSP;                          /* AREA IN SCT.        Y02008* 04220000
         MVC   34(2,@2),I+2                                       0351  04230000
*  PARTITEM=RESULTS;                     /* PLACE GETMAIN       Y02008* 04240000
         MVC   PARTITEM(8),RESULTS                                0352  04250000
*                                        /* RESULTS IN COM AREA Y02008* 04260000
*  LGWRTFD(1:4)=PARTITEM(1:4);           /* LARGE WRITE FIELD   Y02008* 04270000
         MVC   92(4,@2),PARTITEM                                  0354  04280000
*                                        /* START ADDRESS.      Y02008* 04290000
*  LGWRTFD(5:6)=PARTITEM(7:8);           /* SIZE OF LARGE WRITE Y02008* 04300000
         MVC   96(2,@2),PARTITEM+6                                0356  04310000
*                                        /* FIELD IF IN REAL    Y02008* 04320000
*  IF VIRTSPC='1'B THEN                  /* IS OLTEP VIRTUAL    Y02008* 04330000
         TM    A00004,B'00000010'                                 0358  04340000
         BC    12,@9F7                                            0358  04350000
*    LGWRTFD(5:6)='7FFF'X;               /* YES, LARGE WRITE FLDY02008* 04360000
         MVC   96(2,@2),@X7                                       0359  04370000
*                                        /* SIZE IS 32K         Y02008* 04380000
*  /************************************************************Y02008* 04390000
*  /*                 PROVIDE DOUBLE ESTAE INTERFACE            Y02008* 04400000
*  /************************************************************Y02008* 04410000
*  GEN(ESTAE INT013A,XCTL=YES,PURGE=HALT,TERM=YES); /* 1ST ESTAEY02008* 04420000
@9F7     EQU   *                                                  0364  04430000
         ESTAE INT013A,XCTL=YES,PURGE=HALT,TERM=YES                     04440000
         DS    0H                                                       04450000
*  IF R15^=0 THEN                       /* WAS ESTAE OK.        Y02008* 04460000
         LTR   @F,@F                                              0365  04470000
         BC    08,@9F6                                            0365  04480000
*    DO;                                /* NO, TERMINATE WITH   Y02008* 04490000
* NOESTAE:                              /* CONFLICTS MESSAGE.   Y02008* 04500000
*    R1=IFD899;                         /* PTR TO MSG IFD899I   Y02008* 04510000
NOESTAE  L     @C,MSGMOD                                          0367  04520000
         L     @1,128(0,@C)                                       0367  04530000
*    MSG899ID(2)='5';                   /* ID TO MSG IFD899I    Y02008* 04540000
         MVI   66(@1),C'5'                                        0369  04550000
*    GO TO INT001;                      /* PRINT ERROR MSG      Y02008* 04560000
         BC    15,INT001                                          0370  04570000
*    END;                               /*                      Y02008* 04580000
*  GEN(ESTAE STAERT,XCTL=YES,PURGE=HALT,TERM=YES); /* 2ND ESTAE Y02008* 04590000
@9F6     EQU   *                                                  0372  04600000
         ESTAE STAERT,XCTL=YES,PURGE=HALT,TERM=YES                      04610000
         DS    0H                                                       04620000
*  IF R15^=0 THEN                       /* ESTAE OK             Y02008* 04630000
         LTR   @F,@F                                              0373  04640000
*    GO TO NOESTAE;                     /* NO-EXIT WITH CONFLICTY02008* 04650000
         BC    07,NOESTAE                                         0374  04660000
*  /************************************************************Y02008* 04670000
*  /*    GO TO DECODE MODULES, INITIALIZATION IS COMPLETE       Y02008* 04680000
*  /************************************************************Y02008* 04690000
*  RESTAB=RESTAB&&RESTAB;                /* ZERO RESIDENT TABLE.Y02008* 04700000
         L     @C,@A1              ADDRESS OF IFDOLT00            0378  04710000
         XC    32(64,@C),32(@C)                                   0378  04720000
*  R15=CECOMRT;                          /* PLACE CE COMM MODULEY02008* 04730000
         L     @F,CECOMRT                                         0379  04740000
*                                        /* ADDRESS IN R15.     Y02008* 04750000
*  GEN(BALR  R14,R15);                   /* GO TO COMMUNICATION Y02008* 04760000
         BALR  R14,R15                                                  04770000
         DS    0H                                                       04780000
*                                        /* ROOT MODULE.        Y02008* 04790000
*  GO TO INT014;                         /* GO TO EXIT ROUTINE. Y02008* 04800000
         BC    15,INT014                                          0383  04810000
* STAERT: ENTRY(X);                                                     04820000
STAERT   STM   @E,@C,12(@D)                                       0384  04830000
         BALR  @B,0                                               0384  04840000
         LA    @F,STAERT-IFDOLT00-24                              0384  04850000
         SR    @B,@F                                              0384  04860000
         ST    @D,@SAV001+4                                       0384  04870000
         LA    @F,@SAV001                                         0384  04880000
         ST    @F,8(0,@D)                                         0384  04890000
         LR    @D,@F                                              0384  04900000
@9F5     EQU   *                                                  0384  04910000
*         DCL UTENT PTR GENERATED;                                      04920000
*  DCL DEVICE CHAR(1) BASED(ADDR(CHASCT)+18);  /*ACTIVE DEVICE*/        04930000
*  DCL TAB28 PTR GENERATED;              /* TRANSIENT MANAGER ENTRY */  04940000
*  DCL ALOC CHAR(4) GENERATED;           /* PARAMETER LIST FOR ALOCAT * 04950000
*  DCL MCT1ADR PTR GENERATED;            /* MCT ADDRESS */              04960000
*  DCL 1 * CHAR(1) BASED(ADDR(MCT1ADR)+3), /* LAST BYTE MCT ADDRESS */  04970000
*         2 * BIT(7),                    /* NA */                       04980000
*         2 ABCOND BIT(1);               /* ABEND CONDITION */          04990000
*  DCL 1 * BASED(ADDR(CHASCT)+3),        /* CHASCT AREA         X02008* 05000000
*         2 * CHAR(1),                   /* NA                  X02008* 05010000
*           3 * BIT(3),                  /* NA                  X02008* 05020000
*           3 PARPRIN BIT(1),            /* PARALLEL PRINT BIT  X02008* 05030000
*             4 * BIT(1);                /* NA                  X02008* 05040000
*   DCL 1 * CHAR(1) BASED(ADDR(CHASCT)+33),   /*SWITCHES*/              05050000
*    2 * BIT(5),                                                        05060000
*   2 EXECKLEN BIT(1),              /* OLT EXECUTING CLEAN-UP   X03008* 05070000
*    2 * BIT(2);                                                        05080000
*  DCL 1 * CHAR(1) BASED(ADDR(CHASCT)+36),  /*SWITCHES*/                05090000
*    2 * BIT(1),                                                        05100000
*    2 CLEANUP BIT(1),                  /*OLT CLEANUP DESIRED*/         05110000
*    2 * BIT(6);                                                        05120000
*         DCL CESWT2 CHAR(1) GENERATED;  /*OLTEP SWITCHES*/             05130000
*   DCL 1 * CHAR(1) BASED(ADDR(CESWT2)),                                05140000
*    2 * BIT(6),                                                        05150000
*    2 TAPEHDR BIT(1),                                                  05160000
*    2 * BIT(1);                                                        05170000
*         DCL CESWT6 CHAR(1) GENERATED;                                 05180000
*         DCL 1 * BASED(ADDR(CESWT6)),                                  05190000
*          2 UTSCAL BIT(1),              /* MODULES CAN BE DELETED */   05200000
*          2 * BIT(6),                   /* NA */                       05210000
*           2 RTOSTAE BIT(1);                                           05220000
*  DCL CESWT8 CHAR(1) GENERATED;                                        05230000
*  DCL 1 * BASED(ADDR(CESWT8)),          /* SWITCHES FOR OLTEP        * 05240000
*        3 * BIT(5),                     /* NA                        * 05250000
*        3 SUTMSG BIT(1);                /* START MSG ISSUED          * 05260000
*         DCL CESWTR CHAR(1) GENERATED;  /* RETAIN 370 SWITCH   S20203* 05270000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),   /*             S20203* 05280000
*           3 RETAINAC BIT(1),           /* REI ACTIVE FLAG     S20203* 05290000
*           3 * BIT(7);                  /*                     S20203* 05300000
*  DCL SCHEDSA PTR GENERATED;            /* SCHEDULER AREA            * 05310000
*         DCL CHAINBK PTR BASED(R13+4);                                 05320000
*         DCL SAVER(18) FIXED BASED(CHAINBK);                           05330000
*         R2=COMADR;                    /* PUT ADDRESS OF COMMON AREA   05340000
*                                         IN R2*/                       05350000
         L     @2,COMADR                                          0427  05360000
*  R5=R1;                                /* STAE REG AREA       X02008* 05370000
         LR    @5,@1                                              0429  05380000
*  TMRADR=R5;                            /* SAVE STAE REG       X02008* 05390000
         ST    @5,TMRADR                                          0430  05400000
*  SVSTAEDT=STAEDT;                      /* SAVE STAE AREA DATA X02008* 05410000
         MVC   2(104,@B),0(@5)                                    0431  05420000
*  RTOSTAE='1'B;                         /* INDICATE STAE RETURN      * 05430000
         OI    A00054,B'00000001'                                 0432  05440000
*  EXECKLEN='0'B;                        /* CLEAR CLEAN UP      X03008* 05450000
         NI    A00045,B'11111011'                                 0433  05460000
*                                        /* EXECUTING FLAG      X03008* 05470000
* INT010:                                                               05480000
*  IF ABNDCC(2:4)=SYS222(2:4) THEN       /* IS THIS A SYSTEM    Y02008* 05490000
INT010   CLC   5(3,@5),SYS222+1                                   0435  05500000
*                                        /* 222 ABEND.          X03008* 05510000
*    GO TO INT013;                       /* YES, BYPASS DUMP.   X03008* 05520000
         BC    08,INT013                                          0438  05530000
*  PARPRIN='0'B;                         /* NO PARALLEL PRINT   X02008* 05540000
         NI    A00041,B'11101111'                                 0439  05550000
*  GEN(BAL   R10,INT012F);               /* CLEAR PRINT BUFFER        * 05560000
         BAL   R10,INT012F                                              05570000
         DS    0H                                                       05580000
*  PRTBUFR(1)='8B'X;                     /* INDICATE PAGE IS TO BE    * 05590000
         MVI   PRTBUFR,X'8B'                                      0441  05600000
*                                        /* EJECTED                   * 05610000
*  GEN(BAL   R10,INT012D);               /* EJECT PAGE                * 05620000
         BAL   R10,INT012D                                              05630000
         DS    0H                                                       05640000
*  PRTBUFR(3:14)=PSWHDR;                 /* PLACE PSW HEADER IN       * 05650000
         MVC   PRTBUFR+2(12),PSWHDR                               0444  05660000
*                                        /* PRINT BUFFER              * 05670000
*  R5=SVSTAEDT(9:12);                    /* PREPARE TO CONVERT FIRST  * 05680000
         MVC   @TEMP4(4),10(@B)                                   0446  05690000
         L     @5,@TEMP4                                          0446  05700000
*                                        /* HALF OF PSW AT TIME OF    * 05710000
*                                        /* ABEND                     * 05720000
*  R6=ADDR(PRTBUFR(16));                 /* INDICATE WHERE PSW SHOULD * 05730000
         LA    @6,PRTBUFR+15                                      0449  05740000
*                                        /* BE PLACED IN PRINT BUFFER * 05750000
*  GEN(BAL   R10,INT012);                /* CONVERT FIRST HALF OF PSW * 05760000
         BAL   R10,INT012                                               05770000
         DS    0H                                                       05780000
*  R5=SVSTAEDT(13:16);                   /* PREPARE TO CONVERT SECOND * 05790000
         MVC   @TEMP4(4),14(@B)                                   0452  05800000
         L     @5,@TEMP4                                          0452  05810000
*                                        /* HALF OF PSW               * 05820000
*  GEN(BAL   R10,INT012);                /* CONVERT SECOND HALF OF    * 05830000
         BAL   R10,INT012                                               05840000
         DS    0H                                                       05850000
*                                        /* PSW                       * 05860000
*  GEN(BAL   R10,INT012D);               /* PRINT LINE WITH PSW AT    * 05870000
         BAL   R10,INT012D                                              05880000
         DS    0H                                                       05890000
*                                        /* TIME OF ABEND             * 05900000
*  PRTBUFR(54:66)=REGSHDR;               /* PLACE REG HEADER IN       * 05910000
         MVC   PRTBUFR+53(13),REGSHDR                             0458  05920000
*                                        /* PRINT BUFFER              * 05930000
*  GEN(BAL   R10,INT012D);               /* PRINT REG HEADER LINE     * 05940000
         BAL   R10,INT012D                                              05950000
         DS    0H                                                       05960000
*  R3=ADDR(SVSTAEDT)+24;                 /* FIND BEGINNING OF COPY OF * 05970000
         LA    @3,26(0,@B)                                        0461  05980000
*                                        /* STAE REGISTERS            * 05990000
*  PRTBUFR(2:10)=REGID07;                /* PLACE REGS ID IN PRINT    * 06000000
         MVC   PRTBUFR+1(9),REGID07                               0463  06010000
*                                        /* BUFFER                    * 06020000
*  DO R12=2 TO 1 BY -1;                  /* ESTABLISH LOOP TO PRINT   * 06030000
         LA    @C,2                                               0465  06040000
*                                        /* TWO LINES OF REGISTERS    * 06050000
*  R6=ADDR(PRTBUFR(12));                 /* INDICATE WHERE LINE       * 06060000
@DO9F4   LA    @6,PRTBUFR+11                                      0467  06070000
*                                        /* SHOULD START              * 06080000
*    DO R9=8 TO 1 BY -1;                 /* ESTABLISH LOOP TO CONVERT * 06090000
         LA    @9,8                                               0469  06100000
*                                        /* 8 REGS AND PRINT THEM     * 06110000
*    R5=STAEREG;                         /* PREPARE TO CONVERT REG    * 06120000
@DO9F0   L     @5,0(0,@3)                                         0471  06130000
*    GEN(BAL   R10,INT012);              /* CONVERT REG AND PLACE IT  * 06140000
         BAL   R10,INT012                                               06150000
         DS    0H                                                       06160000
*                                        /* IN THE PRINT BUFFER       * 06170000
*    R6=6+R6;                            /* POINT TO WHERE NEXT REG   * 06180000
         AH    @6,@D6                                             0474  06190000
*                                        /* SHOULD BE PLACED IN PRINT * 06200000
*                                        /* BUFFER                    * 06210000
*    R3=4+R3;                            /* POINT TO WHERE NEXT REG   * 06220000
         AH    @3,@D1                                             0477  06230000
*                                        /* TO BE CONVERTED IS        * 06240000
*    END;                                                               06250000
*  GEN(BAL   R10,INT012D);               /* PRINT LINE OF REGS        * 06260000
         BCT   @9,@DO9F0                                          0479  06270000
         BAL   R10,INT012D                                              06280000
         DS    0H                                                       06290000
*  PRTBUFR(7:10)=REGID8F;                /* PLACE REGS ID IN PRINT    * 06300000
         MVC   PRTBUFR+6(4),REGID8F                               0481  06310000
*                                        /* BUFFER                    * 06320000
*  END;                                                                 06330000
*  GO TO INT013;                        /* BYPASS OLT DUMP      Y02906* 06340000
         BCT   @C,@DO9F4                                          0483  06350000
         BC    15,INT013                                          0484  06360000
*  R3=PARADR;                            /* PARTITION STARTS    X02008* 06370000
         L     @3,A00016                                          0485  06380000
*  LBYT4=LBYT4&PAR4;                     /* LAST HEX CHAR       X02008* 06390000
         NC    H+3(1),A00016+3                                    0486  06400000
*  IF LBYT4='00'X THEN                   /* TEST HEX CHAR       X02008* 06410000
         CLI   H+3,X'00'                                          0487  06420000
*    GOTO INT010A;                       /* MULTIPLE OF 16      X02008* 06430000
         BC    08,INT010A                                         0488  06440000
*  R3=R3-H;                              /* ADDRESS IN MULTIPLESX02008* 06450000
         S     @3,H                                               0489  06460000
*  DMPIND='11'B;                         /* DUMP INDICATORS     X02008* 06470000
         OI    A00032,B'11000000'                                 0490  06480000
* INT010A:                                                              06490000
*  LSTADR=R3+PARSZ;                      /* PARTITION ENDS      X02008* 06500000
INT010A  L     @F,A00016+4                                        0491  06510000
         AR    @F,@3                                              0491  06520000
         ST    @F,LSTADR                                          0491  06530000
*  GEN(BAL   R10,INT012F);               /* CLEAR BUFFER        X02008* 06540000
         BAL   R10,INT012F                                              06550000
         DS    0H                                                       06560000
*  PRTBUFR(1)='8B'X;                     /* PAGE EJECT          X02008* 06570000
         MVI   PRTBUFR,X'8B'                                      0494  06580000
*  GEN(BAL   R10,INT012D);               /* EJECT PAGE          X02008* 06590000
         BAL   R10,INT012D                                              06600000
         DS    0H                                                       06610000
*  PRTBUFR(40:58)=DUMPHDR;               /* HEADING OF DUMP     X02008* 06620000
         MVC   PRTBUFR+39(19),DUMPHDR                             0496  06630000
* INT011:                                                               06640000
*  GEN(BAL   R10,INT012D);               /* PRINT LINE OR EJECT X02008* 06650000
INT011   BAL   R10,INT012D                                              06660000
         DS    0H                                                       06670000
*  RESTRICT(12);                                                        06680000
*  DO R12=56 TO 1 BY -1;                 /* LINES PER PAGE      X02008* 06690000
         LA    @C,56                                              0500  06700000
* RELEASE(4,5,6);                                                       06710000
*  IF INLN='1'B THEN                     /* TEST DUMP BIT       X02008* 06720000
@DO9EC   TM    A00032,B'10000000'                                 0502  06730000
         BC    12,@9E8                                            0502  06740000
*    DO;                                 /* INITIAL LINE        X02008* 06750000
*      LNCOR1(H:31)=WD1T8A(H:31);        /* INIT WORDS PER LINE X02008* 06760000
         L     @6,H                                               0504  06770000
         LA    @E,0(@6,@3)                                        0504  06780000
         LA    @4,31                                              0504  06790000
         SR    @4,@6                                              0504  06800000
         LA    @A,LNCOR1-1(@6)                                    0504  06810000
         EX    @4,@MVC                                            0504  06820000
*      INLN='0'B;                        /* ZERO DUMP BIT       X02008* 06830000
         NI    A00032,B'01111111'                                 0505  06840000
*      GOTO INT011C;                     /* DUMP LINE           X02008* 06850000
         BC    15,INT011C                                         0506  06860000
*    END;                                /* END BIT TEST        X02008* 06870000
*  IF R3^<LSTADR THEN                    /* CHECK ADDRESS       X02008* 06880000
@9E8     C     @3,LSTADR                                          0508  06890000
         BC    04,@9E7                                            0508  06900000
*    IF FNLN='1'B THEN                   /* TEST DUMP BIT       X02008* 06910000
         TM    A00032,B'01000000'                                 0509  06920000
         BC    12,@9E6                                            0509  06930000
*      DO;                               /* FINAL LINE          X02008* 06940000
*        LNCORE(1:H)=WD1T8(1:H);         /* FINAL WORDS PER LINEX02008* 06950000
         LR    @E,@3                                              0511  06960000
         L     @6,H                                               0511  06970000
         BCTR  @6,0                                               0511  06980000
         LA    @A,A00036+86                                       0511  06990000
         EX    @6,@MVC                                            0511  07000000
*        FNLN='0'B;                      /* ZERO DUMP BIT       X02008* 07010000
         NI    A00032,B'10111111'                                 0512  07020000
*      END;                              /* END BIT TEST        X02008* 07030000
*    ELSE GOTO INT013;                   /* DUMP IS COMPLETE    X02008* 07040000
*  ELSE LNCORE=WD1T8;                    /* WORDS PER LINE      X02008* 07050000
         BC    15,@9E4                                            0515  07060000
@9E7     MVC   A00036+86(32),0(@3)                                0515  07070000
* INT011C:                                                              07080000
*  ASTLN='*';                            /* FIRST ASTERISK      X02008* 07090000
@9E4     EQU   *                                                  0516  07100000
INT011C  MVI   A00036+85,C'*'                                     0516  07110000
*  ASTFINIS='*';                         /* LAST ASTERISK       X02008* 07120000
         MVI   A00036+118,C'*'                                    0518  07130000
* RESTRICT(4,5,6);                                                      07140000
*  R5=R3;                                /* CORE ADDRESS        X02008* 07150000
         LR    @5,@3                                              0520  07160000
*  R6=ADDR(LINE);                        /* PRINT LINE ADR      X02008* 07170000
         LA    @6,A00036                                          0521  07180000
*  GEN(BAL   R10,INT012);                /* HEX ADDR TO EBCDIC  X02008* 07190000
         BAL   R10,INT012                                               07200000
         DS    0H                                                       07210000
*  R8=ADDR(LNCORE);                      /* CORE WORDS ADDRESS  X02008* 07220000
         LA    @8,A00036+86                                       0523  07230000
*  R6=ADDR(LNWD1);                       /* PRINT IMAGE ADDRESS X02008* 07240000
         LA    @6,A00036+11                                       0524  07250000
*  DO J=2 TO 1 BY -1;                    /* PARTS OF PRINT LINE X02008* 07260000
         LA    @F,2                                               0525  07270000
         ST    @F,J                                               0525  07280000
*    DO R9=4 TO 1 BY -1;                 /* WORDS PER PART      X02008* 07290000
@DO9E3   LA    @9,4                                               0526  07300000
*      R5=WORD1;                         /* WORD FROM CORE      X02008* 07310000
@DO9DF   MVC   @TEMP4(4),0(@8)                                    0527  07320000
         L     @5,@TEMP4                                          0527  07330000
*      GEN(BAL   R10,INT012);            /* HEX TO EBCDIC       X02008* 07340000
         BAL   R10,INT012                                               07350000
         DS    0H                                                       07360000
*      R8=ADDR(NXTWD);                   /* NEXT WORD TO PRINT  X02008* 07370000
         LA    @8,4(0,@8)                                         0529  07380000
*      R6=ADDR(NXTR6);                   /* NEXT PRINT LOCATION X02008* 07390000
         LA    @6,1(0,@6)                                         0530  07400000
*    END;                                /* END WORDS CHAECK    X02008* 07410000
*    R6=ADDR(MDWAY);                     /* NEXT PART OF LINE   X02008* 07420000
         BCT   @9,@DO9DF                                          0531  07430000
         LA    @6,A00036+48                                       0532  07440000
*  END;                                  /* END PARTS CHECK     X02008* 07450000
*  R3=ADDR(NXWD1T8);                     /* NEXT GROUP OF WORDS X02008* 07460000
         L     @F,J                                               0533  07470000
         BCTR  @F,0                                               0533  07480000
@DO9E2   ST    @F,J                                               0533  07490000
         CH    @F,@D7                                             0533  07500000
         BC    10,@DO9E3                                          0533  07510000
         LA    @3,32(0,@3)                                        0534  07520000
*  R6=ADDR(LNCORE);                      /* PRINT LOCATIONS     X02008* 07530000
         LA    @6,A00036+86                                       0535  07540000
*  DO R4=32 TO 1 BY -1;                  /* BYTES PER LINE      X02008* 07550000
         LA    @4,32                                              0536  07560000
*    IF EBCD=' ' THEN                    /* CHECK CHARACTER     X02008* 07570000
@DO9DB   CLI   0(@6),C' '                                         0537  07580000
*      GOTO INT011A;                     /* BLANK FOUND         X02008* 07590000
         BC    08,INT011A                                         0538  07600000
*    IF EBCD<'A'|                        /* CHECK CHARACTER     X02008* 07610000
*      EBCD>'9' THEN                     /* CHECK CHARACTER     X02008* 07620000
         CLI   0(@6),C'A'                                         0539  07630000
         BC    04,@9D7                                            0539  07640000
         CLI   0(@6),C'9'                                         0539  07650000
         BC    12,@9D6                                            0540  07660000
*        GOTO INT011D;                   /* NOT ALPHA-NUMERIC   X02008* 07670000
         BC    03,INT011D                                         0541  07680000
*    IF EBCD<'J'&                        /* CHECK CHARACTER     X02008* 07690000
*      EBCD>'I' THEN                     /* CHECK CHARACTER     X02008* 07700000
@9D6     CLI   0(@6),C'J'                                         0542  07710000
         BC    10,@9D5                                            0542  07720000
         CLI   0(@6),C'I'                                         0542  07730000
*        GOTO INT011D;                   /* NOT ALPHA-NUMERIC   X02008* 07740000
         BC    03,INT011D                                         0544  07750000
*    IF EBCD<'S'&                        /* CHECK CHARACTER     X02008* 07760000
*      EBCD>'R' THEN                     /* CHECK CHARACTER     X02008* 07770000
@9D4     EQU   *                                                  0545  07780000
@9D5     CLI   0(@6),C'S'                                         0545  07790000
         BC    10,@9D3                                            0545  07800000
         CLI   0(@6),C'R'                                         0545  07810000
*        GOTO INT011D;                   /* NOT ALPHA-NUMERIC   X02008* 07820000
         BC    03,INT011D                                         0547  07830000
*    IF EBCD<'0'&                        /* CHECK CHARACTER     X02008* 07840000
*      EBCD>'Z' THEN                     /* CHECK CHARACTER     X02008* 07850000
@9D2     EQU   *                                                  0548  07860000
@9D3     CLI   0(@6),C'0'                                         0548  07870000
         BC    10,@9D1                                            0548  07880000
         CLI   0(@6),C'Z'                                         0548  07890000
         BC    12,@9D0                                            0549  07900000
*        DO;                             /* NOT ALPHA-NUMERIC   X02008* 07910000
* INT011D:                                                              07920000
*          EBCD='.';                     /* REPLACE BYTE        X02008* 07930000
INT011D  MVI   0(@6),C'.'                                         0551  07940000
*        END;                            /* END CHARACTER CHECK X02008* 07950000
* INT011A:                                                              07960000
*    R6=ADDR(NXTR6);                     /* NEXT CHARACTER      X02008* 07970000
@9D0     EQU   *                                                  0554  07980000
@9D1     EQU   *                                                  0554  07990000
INT011A  LA    @6,1(0,@6)                                         0554  08000000
*  END;                                  /* END LINE CHECK      X02008* 08010000
*  GEN(BAL   R10,INT012D);               /* PRINT A LINE        X02008* 08020000
         BCT   @4,@DO9DB                                          0556  08030000
         BAL   R10,INT012D                                              08040000
         DS    0H                                                       08050000
*  END;                                  /* END LINES PER PAGE  X02008* 08060000
*  PRTBUFR(1)='8B'X;                     /* PAGE EJECT          X02008* 08070000
         BCT   @C,@DO9EC                                          0558  08080000
         MVI   PRTBUFR,X'8B'                                      0559  08090000
*  GOTO INT011;                          /* GO TO MAIN FLOW     X02008* 08100000
         BC    15,INT011                                          0560  08110000
*  RESTRICT(10);                         /* REG IN USE          X02008* 08120000
* INT012:                                                               08130000
*  DO R7=8 TO 1 BY -1;                   /* HEX CHAR PER WORD   X02008* 08140000
INT012   LA    @7,8                                               0562  08150000
*    R4=0;                               /* ZERO WORK REG       X02008* 08160000
@DO9CF   SR    @4,@4                                              0564  08170000
*    GEN(SLDL  R4,4);                    /* HEX CHAR TO CHECK   X02008* 08180000
         SLDL  R4,4                                                     08190000
         DS    0H                                                       08200000
*    GEN(IC    R4,LIST(R4));             /* EBCDIC CHARACTER    X02008* 08210000
         IC    R4,LIST(R4)                                              08220000
         DS    0H                                                       08230000
*    GEN(STC   R4,0(R6));                /* EBCDIC TO PRINT     X02008* 08240000
         STC   R4,0(R6)                                                 08250000
         DS    0H                                                       08260000
*    R6=ADDR(NXTR6);                     /* NEXT PRINT LOCATION X02008* 08270000
         LA    @6,1(0,@6)                                         0568  08280000
*  END;                                  /* END WORD CHECK      X02008* 08290000
*  GOTO R10;                             /* RETURN TO MAIN FLOW X02008* 08300000
         BCT   @7,@DO9CF                                          0569  08310000
         BCR   15,@A                                              0570  08320000
* INT012D:                                                              08330000
*  R1=121;                               /* PRINT LOCATIONS     X02008* 08340000
INT012D  LA    @1,121                                             0571  08350000
*  GEN(PWRT  SIZE=(1));                  /* PRINT A LINE        X02008* 08360000
         PWRT  SIZE=(1)                                                 08370000
         DS    0H                                                       08380000
* INT012F:                                                              08390000
*  PRTBUFR(1)=' ';                       /* CLEAR CONTROL CHAR  X02008* 08400000
INT012F  MVI   PRTBUFR,C' '                                       0574  08410000
*  PRTBUFR(2:124)=PRTBUFR(1:123);        /* CLEAR TOTAL BUFFER  X02008* 08420000
         MVC   PRTBUFR+1(123),PRTBUFR                             0576  08430000
*  GOTO R10;                             /* RETURN FROM ROUTINE X02008* 08440000
         BCR   15,@A                                              0577  08450000
*  RELEASE(3,4,5,6,7,8,9,10);                                           08460000
* INT013:                                                               08470000
*  IF RTOSTAE='0'B THEN                  /* TEST TERMINATION    X02008* 08480000
INT013   TM    A00054,B'00000001'                                 0579  08490000
*    GOTO INT014;                        /* NORMAL ENDING       X02008* 08500000
         BC    08,INT014                                          0581  08510000
*  UTSCAL='0'B;                          /* DELETE MODULES            * 08520000
         NI    A00054,B'01111111'                                 0582  08530000
*  NURUN='1'B;                           /* NEW RUN             YM3494* 08540000
         OI    A00000,B'01000000'                                 0583  08550000
*  IF SUTMSG='1'B THEN                   /* SHOULD SCHED RESUME       * 08560000
         TM    A00056,B'00000100'                                 0584  08570000
         BC    12,@9CB                                            0584  08580000
*  GEN(BAL   R14,RESUM48);               /* RESUME SCHEDULER          * 08590000
         BAL   R14,RESUM48                                              08600000
         DS    0H                                                       08610000
*  IF DEVICE='20'X THEN                  /* CHECK DEVICE              * 08620000
@9CB     CLI   DEVICE,X'20'                                       0586  08630000
         BC    07,@9CA                                            0586  08640000
*    DO;                                 /* DASD DEVICE INVOLVED      * 08650000
*          R1=ADDR(ALOC);                /* PARAMETER LIST FOR ALOCAT * 08660000
         LA    @1,ALOC                                            0588  08670000
*          R15=TAB28;                    /* TRANSIENT MANAGER ENTRY */  08680000
         L     @F,TAB28                                           0589  08690000
*          GEN(BALR  R14,R15);           /* LINK TO ALOCAT MODULE */    08700000
         BALR  R14,R15                                                  08710000
         DS    0H                                                       08720000
*           END;                                                        08730000
*  IF DEVICE='80'X THEN                  /* CHECK DEVICE              * 08740000
@9CA     CLI   DEVICE,X'80'                                       0592  08750000
         BC    07,@9C9                                            0592  08760000
*    DO;                                 /* TAPE DEVICE INVOLVED      * 08770000
*      TAPEHDR='1'B;                     /* INDICATE TAPE             * 08780000
         OI    A00051,B'00000010'                                 0594  08790000
*           CALL IFDOLT52;              /*GOTO DATA PROTECTION MODULE   08800000
*                                         FOR RESTORING TAPE LABEL*/    08810000
         L     @F,@V2              ADDRESS OF IFDOLT52            0595  08820000
         BALR  @E,@F                                              0595  08830000
*           END;                                                        08840000
*  IF RETAINAC='1'B THEN                 /* CHECK REI                 * 08850000
@9C9     TM    A00058,B'10000000'                                 0598  08860000
         BC    12,@9C8                                            0598  08870000
*           DO;                         /* REI ACTIVE           S20203* 08880000
*           GEN(IFDMOD CALL='56');      /* BRANCH TO REI TERM   S20203* 08890000
         IFDMOD CALL='56'                                               08900000
         DS    0H                                                       08910000
*           END;                         /*                     S20203* 08920000
*  IF REMOTE='1'B THEN                   /* REMOTE ENVOLVED           * 08930000
@9C8     TM    A00004,B'00100000'                                 0602  08940000
         BC    12,@9C7                                            0602  08950000
*           DO;                          /*YES -                        08960000
*      UTSCAL='0'B;                      /* DELETE MODULES            * 08970000
         NI    A00054,B'01111111'                                 0604  08980000
*             GEN(IFDMOD CALL='74');                                    08990000
         IFDMOD CALL='74'                                               09000000
         DS    0H                                                       09010000
*                                        /*BRANCH TO LINE DISABLING     09020000
*                                        /*  MODULE WITH PARAMETER ZERO 09030000
*           END;                                                        09040000
* INT013B:                               /*                     YM5414* 09050000
*      R1=FUNC14;                        /* FUNCTION CODE             * 09060000
@9C7     EQU   *                                                  0609  09070000
INT013B  L     @1,FUNC14                                          0609  09080000
*         R0=ADDR(ROPT);                 /* SET UP REG 0        S21052* 09090000
         LA    @0,ROPT                                            0611  09100000
*      VID=MID1;                    /* PLACE MODULE ID IN ROPT   21937* 09110000
         MVC   VID(2),MID1                                        0612  09120000
*      GEN(SVC   59);                    /* SVC CLEANUP               * 09130000
         SVC   59                                                       09140000
         DS    0H                                                       09150000
* INT014:                                                               09160000
*      SAVER(5)=0;                       /* RETURN CODE TO ABEND      * 09170000
INT014   SR    @F,@F                                              0614  09180000
         L     @3,4(0,@D)                                         0614  09190000
         ST    @F,16(0,@3)                                        0614  09200000
*  GEN;                                 /* CLOSE ALL DATA SETS  Y02008* 09210000
CLOSEM   CLOSE (0,,0,,0,,0,,0,,0,,0,)  DUMMY CLOSE               Y02008 09220000
         ORG   CLOSEM+4                RESOLVE DCB ADDRESSES     Y02008 09230000
         DC    V(OLTDCB)               OLTCDSDD DCB   IFDOLT12   Y02008 09240000
         DC    V(DPRDCB)               DIAGMSG DCB    IFDOLT39   Y02008 09250000
         DC    V(SYMLIB)               SYMSYM DCB     IFDOLT30   Y02008 09260000
         DC    V(CNTRLREC)             CNTRLIN DCB    IFDOLT30   Y02008 09270000
         DC    V(READDCB)              INPUT DCB      IFDOLT51   Y02008 09280000
         DC    V(XDCB)                 SERLOG DCB     IFDOLT46   Y02008 09290000
         DC    X'80'                   END OF LIST               Y02008 09300000
         DC    VL3(ACCUMDCB)           ACCIN DCB      IFDOLT46   Y02008 09310000
         ORG                                                            09320000
         DS    0H                                                       09330000
* INT005:                                                               09340000
*  RETURN;                               /* RETURN TO CALLER */         09350000
         BC    15,@EL01                                           0617  09360000
*  GEN(CNOP  0,4);                                                      09370000
         CNOP  0,4                                                      09380000
         DS    0H                                                       09390000
* INT013A:                               /* ESTAE EXIT          YM5414* 09400000
*  GENERATE;                                                            09410000
INT013A  EQU   *                                                  0620  09420000
         BALR  15,0                    LOCATE SELF               Y02008 09430000
         USING *,15                    ADDRESSABILITY            Y02008 09440000
         CH    0,*+16                  DID ESTAE PROVIDE SAVE    Y02008X09450000
                                       AREA                      Y02008 09460000
         BNE   *+86                    YES, CONTINUE             Y02008 09470000
         LA    13,18(15)               USE MY SAVE AREA          Y02008 09480000
         B     *+78                    CONTINUE                  Y02008 09490000
         DC    H'12'                   CODE 0C                   Y02008 09500000
         DC    18F'0'                  MY ESTAE SAVE AREA        Y02008 09510000
         DROP  15                                                       09520000
         DS    0H                                                       09530000
* GEN(STM   R14,R12,12(R13));            /* SAVE REGS           YM5414* 09540000
         STM   R14,R12,12(R13)                                          09550000
         DS    0H                                                       09560000
*  R1='14'X;                             /* TOTAL CLEANUP-SVC 59YM5414* 09570000
         LA    @1,X'14'                                           0623  09580000
*  GEN(SVC  59);                         /* GO CLEANUP          YM5414* 09590000
         SVC  59                                                        09600000
         DS    0H                                                       09610000
*  GEN(LM    R14,R12,12(R13));           /* RESTORE REGS        YM5414* 09620000
         LM    R14,R12,12(R13)                                          09630000
         DS    0H                                                       09640000
*  GEN(BR   R14);                        /* RETURN TO CALLER    YM5414* 09650000
         BR   R14                                                       09660000
         DS    0H                                                       09670000
* RESUM48:                                                              09680000
*  ABCOND='1'B;                          /* ABEND CONDITION           * 09690000
RESUM48  OI    A00039,B'00000001'                                 0627  09700000
*  GEN(STM   R14,R12,12(R13));           /* SAVE REGS                 * 09710000
         STM   R14,R12,12(R13)                                          09720000
         DS    0H                                                       09730000
*  R15=R13;                              /* SAVE AREA ADDRESS         * 09740000
         LR    @F,@D                                              0630  09750000
*  R13=SCHEDSA;                          /* SCHEDULER SAVE AREA       * 09760000
         L     @D,SCHEDSA                                         0631  09770000
*  CHNBK=R15;                            /* STAE SAVE AREA            * 09780000
         ST    @F,4(0,@D)                                         0632  09790000
*  GEN(LM    R14,R12,12(R13));           /* LOAD SCHEDULER REGS       * 09800000
         LM    R14,R12,12(R13)                                          09810000
         DS    0H                                                       09820000
*  GOTO R14;                             /* RETURN TO SCHEDULER       * 09830000
         BCR   15,@E                                              0634  09840000
*  GEN;                                                                 09850000
         CNOP  0,4                 ALIGNMENT                            09860000
ALOC     DC    XL2'02'                  MACRO LEVEL                     09870000
         DC    CL2'22'                  MACRO ID                        09880000
         DC    3F'00'                   NA                              09890000
         DC    AL1(2)                   SCRATCH FUNCTION                09900000
         DS    0H                                                       09910000
         DS    0H                                                       09920000
* END IFDOLT00;                                                         09930000
@EL01    L     @D,4(0,@D)                                         0636  09940000
         LM    @E,@C,12(@D)                                       0636  09950000
         BCR   15,@E                                              0636  09960000
@DATA1   EQU   *                                                        09970000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           09980000
@1       EQU   01                                                       09990000
@2       EQU   02                                                       10000000
@3       EQU   03                                                       10010000
@4       EQU   04                                                       10020000
@5       EQU   05                                                       10030000
@6       EQU   06                                                       10040000
@7       EQU   07                                                       10050000
@8       EQU   08                                                       10060000
@9       EQU   09                                                       10070000
@A       EQU   10                                                       10080000
@B       EQU   11                                                       10090000
@C       EQU   12                                                       10100000
@D       EQU   13                                                       10110000
@E       EQU   14                                                       10120000
@F       EQU   15                                                       10130000
@D3      DC    F'1048576'                                               10140000
@D4      DC    F'65536'                                                 10150000
@D1      DC    H'4'                                                     10160000
@D2      DC    H'8'                                                     10170000
@D5      DC    H'4096'                                                  10180000
@D6      DC    H'6'                                                     10190000
@D7      DC    H'1'                                                     10200000
@MVC     MVC   0(1,@A),0(@E)                                            10210000
@A1      DC    A(IFDOLT00)                                              10220000
@V2      DC    V(IFDOLT52)                                              10230000
         DS    0F                                                       10240000
@X7      DC    X'7FFF'                                                  10250000
         DS    0D                                                       10260000
@DATA    EQU   *                                                        10270000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   10280000
X        EQU   00000000            FULLWORD INTEGER                     10290000
R0       EQU   00000000            FULLWORD POINTER REGISTER            10300000
R1       EQU   00000001            FULLWORD POINTER REGISTER            10310000
R2       EQU   00000002            FULLWORD POINTER REGISTER            10320000
R3       EQU   00000003            FULLWORD POINTER REGISTER            10330000
R4       EQU   00000004            FULLWORD POINTER REGISTER            10340000
R5       EQU   00000005            FULLWORD POINTER REGISTER            10350000
R6       EQU   00000006            FULLWORD POINTER REGISTER            10360000
R7       EQU   00000007            FULLWORD POINTER REGISTER            10370000
R8       EQU   00000008            FULLWORD POINTER REGISTER            10380000
R9       EQU   00000009            FULLWORD POINTER REGISTER            10390000
R10      EQU   00000010            FULLWORD POINTER REGISTER            10400000
R11      EQU   00000011            FULLWORD POINTER REGISTER            10410000
R12      EQU   00000012            FULLWORD POINTER REGISTER            10420000
R13      EQU   00000013            FULLWORD POINTER REGISTER            10430000
R14      EQU   00000014            FULLWORD POINTER REGISTER            10440000
R15      EQU   00000015            FULLWORD POINTER REGISTER            10450000
A00009   EQU   00000000            132 BYTE(S) ON WORD                  10460000
A00010   EQU   A00009+00000000     FULLWORD POINTER                     10470000
IFD102   EQU   A00009+00000004     FULLWORD POINTER                     10480000
A00011   EQU   A00009+00000008     28 BYTE(S)                           10490000
IFD134   EQU   A00009+00000036     FULLWORD POINTER                     10500000
A00012   EQU   A00009+00000040     88 BYTE(S)                           10510000
IFD899   EQU   A00009+00000128     FULLWORD POINTER                     10520000
MSG102   EQU   00000000            45 BYTE(S) ON WORD                   10530000
A00013   EQU   MSG102+00000000     25 BYTE(S)                           10540000
MPMSG    EQU   MSG102+00000025     20 BYTE(S)                           10550000
A00014   EQU   00000000            67 BYTE(S) ON WORD                   10560000
A00015   EQU   A00014+00000000     65 BYTE(S)                           10570000
MSG899ID EQU   A00014+00000065     2 BYTE(S)                            10580000
NAPAPTRS EQU   00000000            12 BYTE(S) ON WORD                   10590000
A00018   EQU   NAPAPTRS+00000000   4 BYTE(S)                            10600000
NORMABNM EQU   NAPAPTRS+00000004   8 BYTE(S)                            10610000
RESTAB   EQU   IFDOLT00+00000032   64 BYTE(S)                           10620000
ADRCVT   EQU   00000016            FULLWORD POINTER                     10630000
TCBWPTR  EQU   00000000            FULLWORD POINTER                     10640000
A00019   EQU   00000000            8 BYTE(S) ON WORD                    10650000
A00020   EQU   A00019+00000000     FULLWORD POINTER                     10660000
ADRTCB   EQU   A00019+00000004     FULLWORD POINTER                     10670000
A00021   EQU   00000000            12 BYTE(S) ON WORD                   10680000
A00022   EQU   A00021+00000000     2*FULLWORD POINTER                   10690000
FPQE     EQU   A00021+00000008     FULLWORD POINTER                     10700000
A00023   EQU   00000000            24 BYTE(S) ON WORD                   10710000
A00024   EQU   A00023+00000000     5*FULLWORD POINTER                   10720000
REGSZ    EQU   A00023+00000020     FULLWORD INTEGER                     10730000
CORELNGT EQU   @DATA+00000072      8 BYTE(S) ON WORD                    10740000
         ORG   CORELNGT+00000000                                        10750000
MINLNGTH EQU   *                   FULLWORD INTEGER                     10760000
         DC    FL4'4096'                                                10770000
MAXLNGTH EQU   CORELNGT+00000004   FULLWORD INTEGER                     10780000
RESULTS  EQU   @DATA+00000080      8 BYTE(S) ON WORD                    10790000
A00025   EQU   RESULTS+00000000    4 BYTE(S)                            10800000
AREASIZE EQU   RESULTS+00000004    FULLWORD INTEGER                     10810000
SCTOL    EQU   00000034            2 BYTE(S)                            10820000
         ORG   @DATA+00000088                                           10830000
I        EQU   *                   FULLWORD INTEGER                     10840000
         DC    FL4'0'                                                   10850000
A00026   EQU   I+00000000          2 BYTE(S)                            10860000
OLTSP    EQU   I+00000002          2 BYTE(S)                            10870000
STAEDT   EQU   00000000            104 BYTE(S)                          10880000
A00027   EQU   STAEDT+00000000     4 BYTE(S)                            10890000
ABNDCC   EQU   STAEDT+00000004     4 BYTE(S)                            10900000
SYS222   EQU   *                   4 BYTE(S)                            10910000
         DC    X'00222000'                                              10920000
SVSTAEDT EQU   00000002            104 BYTE(S)                          10930000
CHNBK    EQU   00000004            FULLWORD POINTER                     10940000
FUNC14   EQU   *                   FULLWORD INTEGER                     10950000
         DC    FL4'0'                                                   10960000
A00028   EQU   FUNC14+00000000     2 BYTE(S)                            10970000
         ORG   FUNC14+00000002                                          10980000
A00029   EQU   *                   2 BYTE(S)                            10990000
         DC    X'0014'                                                  11000000
TMRADR   EQU   *                   FULLWORD POINTER                     11010000
         DC    VL4(IFDOLT18)                                            11020000
COMADR   EQU   *                   FULLWORD POINTER                     11030000
         DC    VL4(IFDOLT23)                                            11040000
CECOMRT  EQU   *                   FULLWORD POINTER                     11050000
         DC    VL4(IFDOLT30)                                            11060000
LSTADR   EQU   @DATA+00000088      FULLWORD INTEGER                     11070000
H        EQU   *                   FULLWORD INTEGER                     11080000
         DC    FL4'15'                                                  11090000
A00030   EQU   H+00000000          2 BYTE(S)                            11100000
RHFWD    EQU   H+00000002          HALFWORD INTEGER                     11110000
A00031   EQU   H+00000002          1 BYTE(S)                            11120000
LBYT4    EQU   H+00000003          1 BYTE(S)                            11130000
J        EQU   *                   FULLWORD INTEGER                     11140000
         DC    FL4'0'                                                   11150000
A00032   EQU   *                   1 BYTE(S)                            11160000
         DC    X'00'                                                    11170000
DMPIND   EQU   A00032+00000000     2 BIT(S)                             11180000
INLN     EQU   A00032+00000000     1 BIT(S)                             11190000
FNLN     EQU   A00032+00000000     1 BIT(S)                             11200000
A00033   EQU   A00032+00000000     1 BIT(S)                             11210000
LIST     EQU   *                   16 BYTE(S)                           11220000
         DC    C'0123456789ABCDEF'                                      11230000
A00034   EQU   00000000            32 BYTE(S)                           11240000
WORD1    EQU   A00034+00000000     4 BYTE(S)                            11250000
NXTWD    EQU   A00034+00000004     4 BYTE(S)                            11260000
A00035   EQU   00000000            64 BYTE(S) ON WORD                   11270000
WD1T8    EQU   A00035+00000000     32 BYTE(S)                           11280000
NXWD1T8  EQU   A00035+00000032     32 BYTE(S)                           11290000
WD1T8A   EQU   00000001            31 BYTE(S)                           11300000
LGWRTFD  EQU   00000092            8 BYTE(S)                            11310000
DUMPHDR  EQU   *                   19 BYTE(S)                           11320000
         DC    C'OLTS PARTITION AREA'                                   11330000
EBCD     EQU   00000000            1 BYTE(S)                            11340000
NXTR6    EQU   00000001            1 BYTE(S)                            11350000
CVT      EQU   00000000            316 BYTE(S) ON WORD                  11360000
A00038   EQU   CVT+00000000        312 BYTE(S)                          11370000
CVTEORM  EQU   CVT+00000312        FULLWORD INTEGER                     11380000
PARMFLD  EQU   00000000            5 BYTE(S) ON WORD                    11390000
COUNT    EQU   PARMFLD+00000000    HALFWORD INTEGER                     11400000
FLD      EQU   PARMFLD+00000002    3 BYTE(S)                            11410000
PSWHDR   EQU   *                   12 BYTE(S)                           11420000
         DC    C'PSW AT ABEND'                                          11430000
REGSHDR  EQU   *                   13 BYTE(S)                           11440000
         DC    C'REGS AT ABEND'                                         11450000
REGID07  EQU   *                   9 BYTE(S)                            11460000
         DC    C'REGS 0-7 '                                             11470000
REGID8F  EQU   *                   4 BYTE(S)                            11480000
         DC    C'8-15'                                                  11490000
STAEREG  EQU   00000000            FULLWORD POINTER                     11500000
CHAINBK  EQU   00000004            FULLWORD POINTER                     11510000
SAVER    EQU   00000000            18*FULLWORD INTEGER                  11520000
         ORG   @DATA                                                    11530000
         DS    00000194C                                                11540000
@TEMPS   DS    0F                                                       11550000
@TEMP4   DC    F'0'                                                     11560000
DSECT00  IFDCOM                                                         11570000
IFDTCB   IKJTCB SYS=BOTH,DSECT=YES      TCB MAP                X02008   11580000
IFDOLT00 CSECT                                                          11590000
A00000   EQU   CESWT3+00000000     1 BYTE(S)                            11600000
A00001   EQU   A00000+00000000     1 BIT(S)                             11610000
NURUN    EQU   A00000+00000000     1 BIT(S)                             11620000
A00002   EQU   A00000+00000000     1 BIT(S)                             11630000
A00003   EQU   ROPT+00000000       12 BYTE(S) ON WORD                   11640000
ROPTPTR1 EQU   A00003+00000000     FULLWORD POINTER                     11650000
ROPTPTR2 EQU   A00003+00000004     FULLWORD POINTER                     11660000
ROPTPTR3 EQU   A00003+00000008     FULLWORD POINTER                     11670000
VID      EQU   WKSVC+00000002      2 BYTE(S)                            11680000
MID1     EQU   MCT+00000010        2 BYTE(S)                            11690000
A00004   EQU   CESWT7+00000000     1 BYTE(S)                            11700000
A00005   EQU   A00004+00000000     2 BIT(S)                             11710000
REMOTE   EQU   A00004+00000000     1 BIT(S)                             11720000
A00006   EQU   A00004+00000000     3 BIT(S)                             11730000
VIRTSPC  EQU   A00004+00000000     1 BIT(S)                             11740000
A00007   EQU   A00004+00000000     1 BIT(S)                             11750000
A00008   EQU   CESWT10+00000000    1 BYTE(S)                            11760000
MPSYS    EQU   A00008+00000000     1 BIT(S)                             11770000
A00016   EQU   PARTITEM+00000000   8 BYTE(S) ON WORD                    11780000
PARADR   EQU   A00016+00000000     FULLWORD POINTER                     11790000
A00017   EQU   A00016+00000000     3 BYTE(S)                            11800000
PAR4     EQU   A00016+00000003     1 BYTE(S)                            11810000
PARSZ    EQU   A00016+00000004     FULLWORD POINTER                     11820000
A00036   EQU   PRTBUFR+00000001    119 BYTE(S) ON WORD                  11830000
LINE     EQU   A00036+00000000     11 BYTE(S)                           11840000
LNWD1    EQU   A00036+00000011     37 BYTE(S)                           11850000
MDWAY    EQU   A00036+00000048     37 BYTE(S)                           11860000
ASTLN    EQU   A00036+00000085     1 BYTE(S)                            11870000
LNCORE   EQU   A00036+00000086     32 BYTE(S)                           11880000
ASTFINIS EQU   A00036+00000118     1 BYTE(S)                            11890000
A00037   EQU   A00036+00000118     1 BYTE(S)                            11900000
LNCOR1   EQU   PRTBUFR+00000088    31 BYTE(S)                           11910000
DEVICE   EQU   CHASCT+00000018     1 BYTE(S)                            11920000
A00039   EQU   MCT1ADR+00000003    1 BYTE(S)                            11930000
A00040   EQU   A00039+00000000     7 BIT(S)                             11940000
ABCOND   EQU   A00039+00000000     1 BIT(S)                             11950000
A00041   EQU   CHASCT+00000003     1 BYTE(S) ON WORD                    11960000
A00042   EQU   A00041+00000000     1 BYTE(S)                            11970000
A00043   EQU   A00041+00000000     3 BIT(S)                             11980000
PARPRIN  EQU   A00041+00000000     1 BIT(S)                             11990000
A00044   EQU   A00041+00000000     1 BIT(S)                             12000000
A00045   EQU   CHASCT+00000033     1 BYTE(S)                            12010000
A00046   EQU   A00045+00000000     5 BIT(S)                             12020000
EXECKLEN EQU   A00045+00000000     1 BIT(S)                             12030000
A00047   EQU   A00045+00000000     2 BIT(S)                             12040000
A00048   EQU   CHASCT+00000036     1 BYTE(S)                            12050000
A00049   EQU   A00048+00000000     1 BIT(S)                             12060000
CLEANUP  EQU   A00048+00000000     1 BIT(S)                             12070000
A00050   EQU   A00048+00000000     6 BIT(S)                             12080000
A00051   EQU   CESWT2+00000000     1 BYTE(S)                            12090000
A00052   EQU   A00051+00000000     6 BIT(S)                             12100000
TAPEHDR  EQU   A00051+00000000     1 BIT(S)                             12110000
A00053   EQU   A00051+00000000     1 BIT(S)                             12120000
A00054   EQU   CESWT6+00000000     1 BYTE(S) ON WORD                    12130000
UTSCAL   EQU   A00054+00000000     1 BIT(S)                             12140000
A00055   EQU   A00054+00000000     6 BIT(S)                             12150000
RTOSTAE  EQU   A00054+00000000     1 BIT(S)                             12160000
A00056   EQU   CESWT8+00000000     1 BYTE(S) ON WORD                    12170000
A00057   EQU   A00056+00000000     5 BIT(S)                             12180000
SUTMSG   EQU   A00056+00000000     1 BIT(S)                             12190000
A00058   EQU   CESWTR+00000000     1 BYTE(S)                            12200000
RETAINAC EQU   A00058+00000000     1 BIT(S)                             12210000
A00059   EQU   A00058+00000000     7 BIT(S)                             12220000
@DATEND  EQU   *                                                        12230000
@9FB     EQU   INT013B                                                  12240000
@9FA     EQU   INT013B                                                  12250000
@9E6     EQU   INT013                                                   12260000
@9E5     EQU   @9E4                                                     12270000
@9D7     EQU   INT011D                                                  12280000
INT005   EQU   @EL01                                                    12290000
         END   IFDOLT00,(C'PL/S',1400,77117)                            12300000
