         TITLE 'IFDOLT06 - OLD WAITIO MODULE'                           00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT06 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT06 01 JUL 77'                             0001  00060000
         STM   @E,@C,12(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         TITLE 'IFDOLT06 - OLD WAITIO MODULE'                           00110000
         DS    0H                                                       00120000
*         GEN(USING  CHASCT,PNT2);       /* SET UP BASE FOR COMMON    * 00130000
         USING  CHASCT,PNT2                                             00140000
         DS    0H                                                       00150000
*         GENERATE DATA;                 /* COMMON AREA               * 00160000
*         DECLARE                                                       00170000
*               /****************************************************** 00180000
*               /*  TEST EVENT CONTROL BLOCK (TECB) MAP               * 00190000
*               /****************************************************** 00200000
*               1 TTECB BASED(R5),       /* BASED ADDRESS IN R5       * 00210000
*                3 TEVCB CHAR(4),        /* EVENT CONTROL BLOCK ECB   * 00220000
*                3 TCCPS CHAR(1),        /* CONDITION CODE POSTING    * 00230000
*                 5 TIMEOUT BIT(1),      /* TIME-OUT BYPASS SWITCH    * 00240000
*                 5 * BIT(7),            /* N/A                       * 00250000
*                3 TCCW1 CHAR(7),        /* 7 BYTE CSW                * 00260000
*                3 TSNS1 CHAR(35);       /* SENSE FIELD               * 00270000
*                                                                       00280000
*         /************************************************************ 00290000
*         /*          SVC 59 PARM LIST                          Y02008* 00300000
*         /************************************************************ 00310000
*                                                                       00320000
*         DCL ROPT CHAR(12) GEND;       /* SVC PRM LIST         Y02008* 00330000
*                                                                       00340000
*         DCL 1 * BASED(ADDR(ROPT)-4),  /* FORMAT OF LIST       Y02008* 00350000
*           3 * CHAR(2),                                                00360000
*           3 MODID CHAR(2),            /* MOD IDENTIFIER       Y02008* 00370000
*           3 SVCIOSB CHAR(4),          /* PTR TO ACTIVE IOSB   Y02008* 00380000
*           3 SVC16 CHAR(4);            /* PURGE ,SVC 16        Y02008* 00390000
*                                                                       00400000
*                                                                       00410000
*         DCL IODEVTAB PTR GEND;        /* I O DEVICE,IOSB,ECB  Y02008* 00420000
*                                                                       00430000
*          DCL 1 IOSBCB CHAR(36) BASED(R3),/* IOSB CNTRL BLOCK Y02008*/ 00440000
*          3 * CHAR(20),                                                00450000
*          3 IOSCC CHAR(1),             /* IOS SIO COMP CODE    Y02008* 00460000
*          3 IOSCSW CHAR(7),            /* LAST CSW BYTES       Y02008* 00470000
*          3 * CHAR(4),                                                 00480000
*          3 IOSUSE PTR;                /* PTR TO IOS USER CB   Y02008* 00490000
*                                                                       00500000
*        DCL 1 IOSUSECB CHAR(20) BASED(IOSUSE), /* OUR IOS CB   Y02008* 00510000
*          3 OECBPTR PTR,               /* PTR TO OLTEP ECB     Y02008* 00520000
*          3 TECBPTR PTR,               /* PTR TO OLT TECB      Y02008* 00530000
*          3 IODVTBPT PTR,              /* PTR TO ACTIVE DEVTAB Y02008* 00540000
*          3 TCCWPTR PTR,               /* PTR TO CCW XLATOR    Y02008* 00550000
*          3 USEFLGA CHAR(1),           /* FLAG BYTE A          Y02008* 00560000
*            5 INUSE BIT(1),            /* THIS IOSB IN USE     Y02008* 00570000
*            5 ATTN BIT(1),             /* ATTENTION INTERP RQSTY02008* 00580000
*            5 VIRTCCW BIT(1),          /* VIRTUAL CCW STRING   Y02008* 00590000
*             5 OLDTECB BIT(1),         /* OLD TECB INDICATOR   Y02008* 00600000
*            5 INTRNLCB BIT(1),         /* INTERNAL IOSB RQST   Y02008* 00610000
*            5 PURGED BIT(1);           /* THIS I/O EVENT PURGEDY02008* 00620000
*                                                                       00630000
*                                                                       00640000
*         DCL 1 OECB CHAR(4) BASED(OECBPTR), /* OLTEP/OLT STAT  Y02008* 00650000
*           3 OSNSCNT CHAR(1),          /* I/O EVENT SENSE COUNTY02008* 00660000
*           3 OINCNT CHAR(1),           /* OECB INTERRUPT COUNT Y02008* 00670000
*           3 * CHAR(2);                                                00680000
*         DCL 1 DEVECBX CHAR(12) BASED(IODVTBPT),  /* IOSB DEVS Y02008* 00690000
*           3 ACTVDEV PTR,              /* ACTIVE DEVICE FOR I/OY02008* 00700000
*           3 ACTVIOSB PTR,             /* ACTIVE IOSB FOR EVENTY02008* 00710000
*           3 ACTVDEVECB CHAR(4),       /* ECB POSTED FOR EVENT Y02008* 00720000
*             5 COMPCODE CHAR(1),       /* SIO COMPLETION CODE  Y02008* 00730000
*               7 ECBWAIT BIT(1),       /* WAIT BIT IN ECB      Y02008* 00740000
*               7 ECBDONE BIT(1),       /* ECB POST BIT         Y02008* 00750000
*               7 * BIT(6),             /* N A                  Y02008* 00760000
*             5 * CHAR(1),              /* N A                  Y02008* 00770000
*             5 ECBPOSTCODE CHAR(2);    /* ECB POST CODE        Y02008* 00780000
*         DCL IOTABPTR PTR;             /* BASE PRT FOR IOTABLEXY02008* 00790000
*         DCL 1 IOTABLEX CHAR(12) BASED(IOTABPTR),                      00800000
*           3 IODEVX PTR,               /* CURRENT IO DEVICE    Y02008* 00810000
*           3 IOSBPTRX PTR,             /* CURRENT IOSB PTR     Y02008* 00820000
*           3 IOECBX   PTR;             /* CURRENT ECB  PTR     Y02008* 00830000
*                                                                       00840000
*         DCL TIME30 CHAR(8)             /* VALUE FOR STIMER          * 00850000
*               INIT('F0F0F0F0F3F0F0C0'X)/* INITIAL VALUE             * 00860000
*               BDY(DWORD);              /* BOUNDARY                  * 00870000
*         DCL ECB5 FIXED INIT(0);        /* ECB FOR WTOR              * 00880000
*         DCL INBUFR CHAR(124) GENERATED;/* INPUT BUFFER              * 00890000
*         DCL IOSBPTR1 PTR GEND;        /* PTR TO 1ST IOSB USED Y02008* 00900000
*         DCL RESPONSE CHAR(1)           /* RESPONSE BUFFER           * 00910000
*               BASED(ADDR(INBUFR));     /* BASED ADDRESS             * 00920000
*         DCL CESWT CHAR(1) GENERATED;   /* OLTEP SWITCHES            * 00930000
*         /************************************************************ 00940000
*         /*    CESWT SWITCH STRUCTURE                                * 00950000
*         /************************************************************ 00960000
*         DCL 1 * CHAR(1)                                               00970000
*               BASED(ADDR(CESWT)),      /* BASED ADDRESS             * 00980000
*               3 * BIT(1),              /* N/A                       * 00990000
*               3 DPENTRY BIT(1),        /* ENTRY FROM DATA PROTECT   * 01000000
*               3 * BIT(6);              /* N/A                       * 01010000
*         DCL CESWT1 CHAR(1) GENERATED;  /* OLTEP SWITCHES            * 01020000
*         /************************************************************ 01030000
*         /*    CESWT1 SWITCH STRUCTURE                               * 01040000
*         /************************************************************ 01050000
*         DCL 1 * CHAR(1)                                               01060000
*               BASED(ADDR(CESWT1)),     /* BASED ADDRESS             * 01070000
*               3 * BIT(3),              /* N/A                       * 01080000
*               3 WAITFG BIT(1),         /* WAIT FLAG                 * 01090000
*               3 * BIT(3),              /* N/A                       * 01100000
*               3 TPFLAG BIT(1);         /* TP FLAG                   * 01110000
*         DCL CESWT7 CHAR(1) GENERATED;  /* OLTEP SWITCHES            * 01120000
*         /************************************************************ 01130000
*         /*    CESWT7 SWITCH STRUCTURE                               * 01140000
*         /************************************************************ 01150000
*         DCL 1 * CHAR(1)                                               01160000
*               BASED(ADDR(CESWT7)),     /* BASED ADDRESS             * 01170000
*               3 * BIT(6),              /* N/A                       * 01180000
*               3 TCBRV BIT(1);          /* REAL OR VIRTUAL           * 01190000
*       DCL CESWT8 CHAR(1) GEND ;             /* SWITCH 8       Y02008* 01200000
*       DCL 1 * CHAR(1) BASED(ADDR(CESWT8)),  /*                Y02008* 01210000
*         3 * BIT(4),                   /* UNUSED               Y02008* 01220000
*         3 OLTINVV BIT(1) ;            /* OLT IN VIRTUAL       Y02008* 01230000
*         /************************************************************ 01240000
*         /*    DEVTAB ENTRY MAP                                      * 01250000
*         /************************************************************ 01260000
*         DCL 1 * BASED(ACTVDEV),       /* DEVICE TABLE LAYOUT  Y02008* 01270000
*           2 EDEVAD CHAR(8),            /* DEV ADDR IN EBCDIC        * 01280000
*           2 * CHAR(4),                 /* N/A                       * 01290000
*           2 * CHAR(1),                 /* FLAGS                     * 01300000
*             3 * BIT(3),                /* N/A                       * 01310000
*             3 ACTVE BIT(1),            /* EXIO ACTIVE FLAG    Y02008* 01320000
*             3 * BIT(1);                /* N/A                       * 01330000
*         DCL IFDMSG06 EXT ENTRY;        /* MESSAGE MODULE            * 01340000
*         /************************************************************ 01350000
*         /*    PARAMETER LIST FOR PWTOR                              * 01360000
*         /************************************************************ 01370000
*         DCL 1 MSGPARM BASED(MSGPTR),                                  01380000
*           2 LENGTH CHAR(1),            /* LENGTH OF RESPONSE        * 01390000
*           2 BUFAD PTR(24),             /* BUFFER FOR RESPONSE       * 01400000
*           2 MECBAD PTR;                /* ECB ADDRESS               * 01410000
*         DCL MSGDEVAD CHAR(8)           /* DEVICE ADDRESS AREA       * 01420000
*               BASED(MSGPTR+47);        /* IN MESSAGE                * 01430000
*         DCL SVDEVPTR PTR(24) INIT(0);  /* SAVE DEVTAB PTR HEREY02008* 01440000
*         DCL TENTHSEC CHAR(8) BDY(DWORD)/* STIMER VALUE        Y02008* 01450000
*           INIT('F0F0F0F0F0F0F1C0'X);   /* 1 TENTH SECOND      Y02008* 01460000
*         DCL SAVE1(18) FIXED;           /* 1ST SAVEAREA              * 01470000
*         DCL SAVE2(18) FIXED;           /* 2ND SAVEAREA              * 01480000
*         DCL 1 IOFLAGS CHAR(1),        /* I/O EVENT STATUS FLGSY02008* 01490000
*           3 WAITQUE BIT(1),           /* REQUEST IN QUE       Y02008* 01500000
*           3 DEVBUSY BIT(1),           /* DEVICE IS BUSY       Y02008* 01510000
*           3 CUBUSY BIT(1);            /* CONTROL UNIT BUSY    Y02008* 01520000
*                                                                       01530000
*         DCL 1 CONDCODE CHAR(6),           /* ISOLATE IOS COND Y02008* 01540000
*           3 TEMPCC CHAR(1) INIT('00'X),   /* COND CODE=IOSCC  Y02008* 01550000
*           3 MASKCODE CHAR(1) INIT('70'X), /* COND CODE=MASK   Y02008* 01560000
*           3 ZEROCODE CHAR(1) INIT('00'X), /* COND CODE=0      Y02008* 01570000
*           3 CCODE0 CHAR(1) INIT('40'X),   /* COND CODE=1      Y02008* 01580000
*           3 CCODE1 CHAR(1) INIT('50'X),   /* COND CODE=2      Y02008* 01590000
*           3 CCODE2 CHAR(1) INIT('60'X);   /* COND CODE=3      Y02008* 01600000
*                                                                       01610000
*         DCL CKCC1 LABEL INTERNAL LOCAL; /* LABEL,CHECK CC=1   Y02008* 01620000
*         DCL CKCC2 LABEL INTERNAL LOCAL; /* LABEL,CHECK CC=2   Y02008* 01630000
*         DCL GOODEXIT LABEL LOCAL INTERNAL; /* NORMAL 06 EXIT  Y02008* 01640000
*         DCL PURGEXIT LABEL LOCAL INTERNAL; /*  PURGE 06 EXIT  Y02008* 01650000
*         DCL GOODST1  LABEL LOCAL INTERNAL; /*  RE ISSUE WAIT  Y02008* 01660000
*                                                                       01670000
*         DCL K FIXED(15);               /* COUNTER FOR LOOPING Y02008* 01680000
*         GENERATE;                      /* GENERATE ENTRY CODE       * 01690000
         ST    R13,SAVE1+4              SAVE @ OF CALLER'S SAVEAREA     01700000
         LA    R15,SAVE1                GET @ OF OWN SAVEAREA           01710000
         ST    R15,8(R13)               SAVE IT IN CALLER'S SAVEAREA    01720000
         LR    R13,R15                  PUT IT IN REGISTER 13           01730000
         DS    0H                                                       01740000
*         R5=PL;                         /* SAVE PARAMETER LIST PTR   * 01750000
         LR    @5,@1                                              0060  01760000
*         IOTABPTR=ADDR(IODEVTAB);      /* ADDR IO TABLES       Y02008* 01770000
         LA    @F,IODEVTAB                                        0061  01780000
         ST    @F,IOTABPTR                                        0061  01790000
*         DO I=1 TO 3 BY 1;              /* SEARCH TECBS FOR    Y02008* 01800000
         LA    @7,1                                               0062  01810000
*         IF IOSBPTRX ^= 0 THEN         /* IF IOSB PTR 0       ZA04295* 01820000
@DO9FF   SR    @F,@F                                              0063  01830000
         L     @1,IOTABPTR                                        0063  01840000
         MVC   @TEMP4(4),4(@1)                                    0063  01850000
         C     @F,@TEMP4                                          0063  01860000
         BC    08,@9FB                                            0063  01870000
*           DO;                         /* BYPASS THIS ENTRY   ZA04295* 01880000
*         R3=IOSBPTRX;                  /* ADDRESS AN IOSB      Y02008* 01890000
         MVC   @TEMP4(4),4(@1)                                    0065  01900000
         L     @3,@TEMP4                                          0065  01910000
*          IF R5=TECBPTR                /* MATCH, DOES OLT TECB Y02008* 01920000
*           THEN                         /* PTR MATCH THIS TECB Y02008* 01930000
         MVC   @TEMP4(4),32(@3)                                   0066  01940000
         L     @C,@TEMP4                                          0066  01950000
         MVC   @TEMP4(4),4(@C)                                    0066  01960000
         L     @F,@TEMP4                                          0066  01970000
         CR    @F,@5                                              0066  01980000
*            GO TO WAITIO01;             /* YES A MATCH, GO ON  Y02008* 01990000
         BC    08,WAITIO01                                        0067  02000000
*           END;                                            /* ZA04295* 02010000
*         IOTABPTR=IOTABPTR+12;         /* ADDR NEXT IO TABLES  Y02008* 02020000
@9FB     LA    @F,12                                              0069  02030000
         A     @F,IOTABPTR                                        0069  02040000
         ST    @F,IOTABPTR                                        0069  02050000
*         END;                                                          02060000
*                                                                       02070000
*         GO TO EXIT;                    /* ERROR IN OLT CALL   Y02008* 02080000
         AH    @7,@D1                                             0070  02090000
@DO9FE   CH    @7,@D2                                             0070  02100000
         BC    12,@DO9FF                                          0070  02110000
         BC    15,EXIT                                            0071  02120000
*                                                                       02130000
* WAITIO01:                                                             02140000
*         IF TPFLAG = '0'B               /* IF NO TP                  * 02150000
*            THEN                        /* AND NOT FROM DATA PROTECT * 02160000
WAITIO01 TM    A00011,B'00000001'                                 0072  02170000
*             GOTO WI0000X;              /* ALL SET UP                * 02180000
* WI0000X:                               /* BRANCH POINT              * 02190000
*         /* CHECK IF AN EXIO HAS BEEN ISSUED                         * 02200000
*         IF ACTVE= '0'B THEN           /* NO EXIO ISSUED       Y02008* 02210000
WI0000X  MVC   @TEMP4(4),32(@3)                                   0074  02220000
         L     @1,@TEMP4                                          0074  02230000
         MVC   @TEMP4(4),8(@1)                                    0074  02240000
         L     @1,@TEMP4           IOSUSECB                       0074  02250000
         MVC   @TEMP4(4),0(@1)                                    0074  02260000
         L     @1,@TEMP4           DEVECBX                        0074  02270000
         TM    12(@1),B'00010000'                                 0074  02280000
*           GOTO EXIT;                   /* RETURN TO CALLER          * 02290000
         BC    08,EXIT                                            0075  02300000
*         /* CHECK IF TIMEOUT IS TO BE BYPASSED                       * 02310000
*         IF TIMEOUT= '1'B THEN          /* IF FLAG IS ON             * 02320000
         TM    4(@5),B'10000000'                                  0076  02330000
*           GOTO WI0000;                 /* NO TIMER ISSUED           * 02340000
         BC    01,WI0000                                          0077  02350000
* /******************************************************************** 02360000
* /*  THE FOLLOWING SECTION OF CODE WILL ISSUE THE STIMER MACRO       * 02370000
* /*  INSTRUCTION IF AND ONLY IF THE SIO TO THE IOSB DEVICE HAS 'NOT' * 02380000
* /*  BEEN ISSUED BY THE OP SYSTEM. THIS WILL INSURE TIME OUT IN      * 02390000
* /* SYSTEM QUEUES DOES NOT OCCUR. THE MAXIMUM WAIT FOR SIO TO BE     * 02400000
* /*  ISSUED WILL BE THIRTY SECONDS IN INTERVALS OF ONE/TENTH SECONDS * 02410000
* /******************************************************************** 02420000
* WAITRTN:                                                              02430000
*         IOFLAGS='00'X;                 /* CLEAR I/O EVENT FLGSY02008* 02440000
WAITRTN  MVI   IOFLAGS,X'00'                                      0078  02450000
*         DO I=600 TO 1                  /* START LOOP TO CHECK FOR   * 02460000
*           BY  -1;                      /* SIO ISSUED                * 02470000
         LA    @7,600                                             0079  02480000
*            TEMPCC=IOSCC&MASKCODE;      /* IOSB SIO CCODE      Y02008* 02490000
@DO9FA   MVC   CONDCODE(1),CONDCODE+1                             0080  02500000
         NC    CONDCODE(1),20(@3)                                 0080  02510000
*            IF ZEROCODE=TEMPCC          /* IF SIO NOT ISSUED   Y02008* 02520000
*             THEN                       /* THEN SET FLG FOR WT Y02008* 02530000
         CLC   CONDCODE+2(1),CONDCODE                             0081  02540000
         BC    07,@9F6                                            0081  02550000
*             DO;                        /* IN IOS SIO QUE      Y02008* 02560000
*              WAITQUE=1;                /* SET LOCAL WAIT FLG  Y02008* 02570000
         MVI   IOFLAGS,1                                          0083  02580000
*              GO TO WTIME;              /* GO ISSUE STIMER     Y02008* 02590000
         BC    15,WTIME                                           0084  02600000
*             END;                                                      02610000
*                                                                       02620000
*           DO K=20 TO 1                 /* SIO CC IS NOT 0     Y02008* 02630000
*                  BY -1;                                               02640000
@9F6     LA    @F,20                                              0086  02650000
         STH   @F,K                                               0086  02660000
*            TEMPCC=IOSCC&MASKCODE;      /* WAIT FOR SIOF TO ENDY02008* 02670000
@DO9F5   MVC   CONDCODE(1),CONDCODE+1                             0087  02680000
         NC    CONDCODE(1),20(@3)                                 0087  02690000
*                                                                       02700000
*            IF CCODE0^=TEMPCC           /* GET SIOCC=0,2ND INT Y02008* 02710000
*             THEN                                                      02720000
         CLC   CONDCODE+3(1),CONDCODE                             0088  02730000
*            GO TO CKCC1;                /* NO, CHECK FOR CC=1  Y02008* 02740000
         BC    07,CKCC1                                           0089  02750000
*            END;                                                       02760000
*                                                                       02770000
* CKCC1:                                                                02780000
*         IF TEMPCC^=CCODE1              /* SIOCC NOT 1? CHECK  Y02008* 02790000
*          THEN                                                         02800000
         LH    @F,K                                               0090  02810000
         BCTR  @F,0                                               0090  02820000
@DO9F4   STH   @F,K                                               0090  02830000
         CH    @F,@D1                                             0090  02840000
         BC    10,@DO9F5                                          0090  02850000
CKCC1    CLC   CONDCODE(1),CONDCODE+4                             0091  02860000
*           GO TO CKCC2;                 /* CHECK FOR SIO CC=2  Y02008* 02870000
         BC    07,CKCC2                                           0092  02880000
*         IF OINCNT^=0                   /* SIOCC=1, 1ST INTERPTY02008* 02890000
*          THEN                                                         02900000
         MVC   @TEMP4(4),32(@3)                                   0093  02910000
         L     @1,@TEMP4                                          0093  02920000
         MVC   @TEMP4(4),0(@1)                                    0093  02930000
         L     @1,@TEMP4           IOSUSECB                       0093  02940000
         CLI   1(@1),0                                            0093  02950000
*           GO TO GOODST;                /* YES, GO ON WITH WAITY02008* 02960000
         BC    07,GOODST                                          0094  02970000
*                                                                       02980000
*         IF WAITQUE=1 |                 /* IF EVENT QUED OR IF Y02008* 02990000
*            CUBUSY=1                    /* CU IS BUSY THEN     Y02008* 03000000
*          THEN                                                         03010000
         CLI   IOFLAGS,1                                          0095  03020000
         BC    08,@9F1                                            0095  03030000
         CLI   IOFLAGS,1                                          0095  03040000
         BC    07,@9F0                                            0095  03050000
*           GO TO WAITRTN;               /* MUST RE-ISSUE WAIT  Y02008* 03060000
         BC    08,WAITRTN                                         0096  03070000
*         DEVBUSY=1;                     /* OR ELSE DEV IS BUSY Y02008* 03080000
@9F0     MVI   IOFLAGS,1                                          0097  03090000
         MVI   IOFLAGS+1,1                                        0097  03100000
*         GO TO WTIME;                   /* RE-ISSUE STIMER     Y02008* 03110000
         BC    15,WTIME                                           0098  03120000
*                                                                       03130000
* CKCC2:                                                                03140000
*         IF TEMPCC^=CCODE2              /* CHECK IOS CC=2. NO, Y02008* 03150000
*          THEN                                                         03160000
CKCC2    CLC   CONDCODE(1),CONDCODE+5                             0099  03170000
*           GO TO GOODST;                /* PROCESS EVENT       Y02008* 03180000
         BC    07,GOODST                                          0100  03190000
*                                                                       03200000
*         IF DEVBUSY=1 |                 /* IF DEV IS BUSY OR   Y02008* 03210000
*            CUBUSY=1                    /* IF CU IS BUSY       Y02008* 03220000
*          THEN                                                         03230000
         CLI   IOFLAGS,1                                          0101  03240000
         BC    08,@9EF                                            0101  03250000
         CLI   IOFLAGS,1                                          0101  03260000
         BC    07,@9EE                                            0101  03270000
*           GO TO WAITRTN;               /* GO TO WAIT AGAIN    Y02008* 03280000
         BC    08,WAITRTN                                         0102  03290000
*         CUBUSY=1;                      /* INDICATE CU IS BUSY Y02008* 03300000
@9EE     MVI   IOFLAGS,1                                          0103  03310000
         MVI   IOFLAGS+1,1                                        0103  03320000
*                                                                       03330000
* /*  ISSUE STIMER TO PAUSE FOR 1/10 TH SEC FOR I/O OPERATION TO START* 03340000
*                                                                       03350000
* WTIME:                                                                03360000
*         GEN(STIMER  WAIT,DINTVL=TENTHSEC);                            03370000
WTIME    STIMER  WAIT,DINTVL=TENTHSEC                                   03380000
         DS    0H                                                       03390000
*         END;                                                          03400000
*         GOTO PURGE;                    /* PURGE REQUEST             * 03410000
         BCT   @7,@DO9FA                                          0105  03420000
         BC    15,PURGE                                           0106  03430000
*                                                                       03440000
* /*     GET HERE IF IO OPERATION HAS STARTED SUCCESSFULLY      Y02008* 03450000
*                                                                       03460000
* GOODST:                                /* GOOD START ON SIC         * 03470000
*         IF ECBDONE = '1'B THEN        /* NAPA POSTED EVENT    Y02008* 03480000
GOODST   MVC   @TEMP4(4),32(@3)                                   0107  03490000
         L     @1,@TEMP4                                          0107  03500000
         MVC   @TEMP4(4),8(@1)                                    0107  03510000
         L     @1,@TEMP4           IOSUSECB                       0107  03520000
         TM    8(@1),B'01000000'                                  0107  03530000
*           GO TO GOODEXIT;             /* COMPLETE, RETURN     Y02008* 03540000
         BC    01,GOODEXIT                                        0108  03550000
* GOODST1:                                                              03560000
*          GENERATE;                                        /*@ZA17682* 03570000
GOODST1  EQU   *                                                  0109  03580000
         STM   PNT2,R3,SAVE2+28     SAVE REGS FOR TIMER EXIT   @ZA17682 03590000
         DS    0H                                                       03600000
*         GEN(STIMER REAL,TMNT30,DINTVL=TIME30);                        03610000
         STIMER REAL,TMNT30,DINTVL=TIME30                               03620000
         DS    0H                                                       03630000
* WI0000:                                /*                           * 03640000
*         R1=ADDR(ACTVDEVECB);           /* ADDRESS OF DEV ECB  Y02008* 03650000
WI0000   MVC   @TEMP4(4),32(@3)                                   0111  03660000
         L     @1,@TEMP4                                          0111  03670000
         MVC   @TEMP4(4),8(@1)                                    0111  03680000
         L     @1,@TEMP4           IOSUSECB                       0111  03690000
         LA    @1,8(0,@1)                                         0111  03700000
*         GEN(WAIT   ,ECB=(1));          /* WAIT FOR COMPLETION       * 03710000
         WAIT   ,ECB=(1)                                                03720000
         DS    0H                                                       03730000
*         GEN(TTIMER CANCEL);            /* CANCEL TIMER              * 03740000
         TTIMER CANCEL                                                  03750000
         DS    0H                                                       03760000
*          IF ECBPOSTCODE='00FF'X       /* IS ECB POSTED WITH A Y02008* 03770000
*           THEN                        /* 255 COMPLETION CODE? Y02008* 03780000
         MVC   @TEMP4(4),32(@3)                                   0114  03790000
         L     @1,@TEMP4                                          0114  03800000
         MVC   @TEMP4(4),8(@1)                                    0114  03810000
         L     @1,@TEMP4           IOSUSECB                       0114  03820000
         CLC   10(2,@1),@X4                                       0114  03830000
*            GO TO GOODST1;             /* YES, REISSUE WAIT    Y02008* 03840000
         BC    08,GOODST1                                         0115  03850000
*         IF ECBPOSTCODE ^= '0100'X THEN /* IS ECB SELF-POSTED  Y02008* 03860000
         CLC   10(2,@1),@X5                                       0116  03870000
*           GOTO GOODEXIT;               /* NO- NORMAL POSTING  Y02008* 03880000
         BC    07,GOODEXIT                                        0117  03890000
*                                                                       03900000
* PURGE:                                 /* PURGE ROUTINE       Y02008* 03910000
*                                                                       03920000
*         /*          ISSUE SVC 59 CALL CODE = 50, PURGE RQST   Y02008* 03930000
*                                                                       03940000
*         R1='50'X;                     /* CALL CODE FOR SVC FN Y02008* 03950000
PURGE    LA    @1,X'50'                                           0118  03960000
*         GO TO PURGEXIT;               /* ISSUE SVC FOR PURGE  Y02008* 03970000
         BC    15,PURGEXIT                                        0119  03980000
*                                                                       03990000
* /******************************************************************** 04000000
* /*      STIMER EXIT ROUTINE  - 30  SECOND  INTERRUPT                * 04010000
* /******************************************************************** 04020000
* TMNT30:                                                               04030000
*         ENTRY;                         /* EXIT ROUTINE  ENTRY       * 04040000
TMNT30   STM   @E,@C,12(@D)                                       0120  04050000
         BALR  @B,0                                               0120  04060000
         LA    @F,TMNT30-IFDOLT06-24                              0120  04070000
         SR    @B,@F                                              0120  04080000
@9ED     EQU   *                                                  0120  04090000
*         GENERATE;                      /* GEN ENTRY CODE            * 04100000
         ST    R13,SAVE2+4              SAVE @ OF CALLER'S SAVEAREA     04110000
         LA    R15,SAVE2                GET @ OF OWN SAVEAREA           04120000
         ST    R15,8(R13)               SAVE IT IN CALLER'S SAVEAREA    04130000
         LR    R13,R15                  PUT IT IN REGISTER 13           04140000
         LM    PNT2,R3,SAVE2+28     RESTORE SAVED REGS                  04150000
         DS    0H                                                       04160000
* TMNT30C:                               /* BRANCH POINT              * 04170000
*         ECB5= 0;                       /* ZERO ECB                  * 04180000
TMNT30C  SR    @F,@F                                              0122  04190000
         ST    @F,ECB5                                            0122  04200000
*         MSGPTR = ADDR(IFDMSG06)+4;     /* GET MSG ADDRESS           * 04210000
         L     @1,@V1              ADDRESS OF IFDMSG06            0123  04220000
         LA    @4,4(0,@1)                                         0123  04230000
*         LENGTH= '06'X;                 /* PUT LENGTH IN PARMLIST    * 04240000
         MVI   0(@4),X'06'                                        0124  04250000
*         BUFAD = ADDR(INBUFR);          /* BUFFER ADDRESS            * 04260000
         LA    @F,INBUFR                                          0125  04270000
         ST    @F,@TEMP4                                          0125  04280000
         MVC   1(3,@4),@TEMP4+1                                   0125  04290000
*         MECBAD = ADDR(ECB5);           /* ECB ADDRESS               * 04300000
         LA    @F,ECB5                                            0126  04310000
         ST    @F,4(0,@4)                                         0126  04320000
*         MSGDEVAD = EDEVAD;             /* DEVICE ADDR TO MSG        * 04330000
         MVC   @TEMP4(4),32(@3)                                   0127  04340000
         L     @C,@TEMP4                                          0127  04350000
         MVC   @TEMP4(4),8(@C)                                    0127  04360000
         L     @C,@TEMP4           IOSUSECB                       0127  04370000
         MVC   @TEMP4(4),0(@C)                                    0127  04380000
         L     @C,@TEMP4           DEVECBX                        0127  04390000
         MVC   47(8,@4),0(@C)                                     0127  04400000
*         GEN(PWTOR  REG=(4));           /* OUTPUT MSG                * 04410000
         PWTOR  REG=(4)                                                 04420000
         DS    0H                                                       04430000
*         /* CHECK FOR WAIT RESPONSE                                  * 04440000
*         IF RESPONSE= 'W'  THEN         /* IS RESPONSE'WAIT'         * 04450000
         CLI   RESPONSE,C'W'                                      0129  04460000
         BC    07,@9EC                                            0129  04470000
*          DO;                          /* SET UP WAIT COMPCOD  Y02008* 04480000
*           R0=255;                     /* FOR THIS RESPONSE    Y02008* 04490000
         LA    @0,255                                             0131  04500000
*           GO TO POSTECB;              /* AND POST ECB WITH IT Y02008* 04510000
         BC    15,POSTECB                                         0132  04520000
*          END;                                                         04530000
*         /* CHECK FOR CANCEL RESPONSE                                * 04540000
*         IF RESPONSE ^= 'C' THEN        /* IS RESPONSE CANCEL        * 04550000
@9EC     CLI   RESPONSE,C'C'                                      0134  04560000
*           GOTO TMNT30C;                /* NO- REPEAT THE MESSAGE    * 04570000
         BC    07,TMNT30C                                         0135  04580000
*         /* CHECK IF ECB HAS BEEN POSTED                             * 04590000
*         IF ECBDONE = '1'B THEN         /* IS ECB  POSTED      Y02008* 04600000
         MVC   @TEMP4(4),32(@3)                                   0136  04610000
         L     @1,@TEMP4                                          0136  04620000
         MVC   @TEMP4(4),8(@1)                                    0136  04630000
         L     @1,@TEMP4           IOSUSECB                       0136  04640000
         TM    8(@1),B'01000000'                                  0136  04650000
*           GOTO EXIT;                   /* YES RETURN                * 04660000
         BC    01,EXIT                                            0137  04670000
*         R0 = 256;                      /* 100 POST CODE             * 04680000
         LA    @0,256                                             0138  04690000
* POSTECB:                                                              04700000
*         R1= ADDR(ACTVDEVECB);          /* ADDR OF DEV ECB     Y02008* 04710000
POSTECB  MVC   @TEMP4(4),32(@3)                                   0139  04720000
         L     @1,@TEMP4                                          0139  04730000
         MVC   @TEMP4(4),8(@1)                                    0139  04740000
         L     @1,@TEMP4           IOSUSECB                       0139  04750000
         LA    @1,8(0,@1)                                         0139  04760000
*         GEN(POST (1),(0));             /* POST ECB                  * 04770000
         POST (1),(0)                                                   04780000
         DS    0H                                                       04790000
*         GO TO EXIT;                   /* RETURN TO MAIN CODE  Y02008* 04800000
         BC    15,EXIT                                            0141  04810000
*                                                                       04820000
* GOODEXIT:                                                             04830000
*         R1='8050'X;                   /* FREE UP I/0 BLOCKS   Y02008* 04840000
GOODEXIT L     @1,@X10                                            0142  04850000
*                                                                       04860000
* PURGEXIT:                                                             04870000
*         RESTRICT (R0,R1);                                             04880000
*         MODID='F0F6'X;                /* ID OF CALLING MOD    Y02008* 04890000
PURGEXIT MVC   A00001+2(2),@X11                                   0144  04900000
*         SVCIOSB=R3;                   /* PTR TO ACTIVE IOSB   Y02008* 04910000
         ST    @3,A00001+4                                        0145  04920000
*         SVC16=0;                      /* SVC 16 PURGE REQUEST Y02008* 04930000
         MVC   A00001+8(4),@D3                                    0146  04940000
*         R0=ADDR(ROPT);                /* ADDRESS SVC PARMLST  Y02008* 04950000
         LA    @0,ROPT                                            0147  04960000
*         GEN(  SVC 59);                /* ISSUE SVC 59 CALL    Y02008* 04970000
           SVC 59                                                       04980000
         DS    0H                                                       04990000
*         RELEASE (R0,R1);                                              05000000
*                                                                       05010000
*         WAITFG= '0'B;                  /* RESET FLAG                * 05020000
         NI    A00011,B'11101111'                                 0150  05030000
*         ACTVE='0'B;                   /* ZERO ACTV EXIO BIT   Y02008* 05040000
         MVC   @TEMP4(4),32(@3)                                   0151  05050000
         L     @1,@TEMP4                                          0151  05060000
         MVC   @TEMP4(4),8(@1)                                    0151  05070000
         L     @1,@TEMP4           IOSUSECB                       0151  05080000
         MVC   @TEMP4(4),0(@1)                                    0151  05090000
         L     @1,@TEMP4           DEVECBX                        0151  05100000
         NI    12(@1),B'11101111'                                 0151  05110000
*                                                                       05120000
* EXIT:                                  /* EXIT BRANCH               * 05130000
*         GEN(L R13,4(R13));             /* RESTORE REGISTER 13       * 05140000
EXIT     L R13,4(R13)                                                   05150000
         DS    0H                                                       05160000
*         END;                                                          05170000
@EL01    LM    @E,@C,12(@D)                                       0153  05180000
         BCR   15,@E                                              0153  05190000
@DATA1   EQU   *                                                        05200000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           05210000
@1       EQU   01                                                       05220000
@2       EQU   02                                                       05230000
@3       EQU   03                                                       05240000
@4       EQU   04                                                       05250000
@5       EQU   05                                                       05260000
@6       EQU   06                                                       05270000
@7       EQU   07                                                       05280000
@8       EQU   08                                                       05290000
@9       EQU   09                                                       05300000
@A       EQU   10                                                       05310000
@B       EQU   11                                                       05320000
@C       EQU   12                                                       05330000
@D       EQU   13                                                       05340000
@E       EQU   14                                                       05350000
@F       EQU   15                                                       05360000
@D3      DC    F'0'                                                     05370000
@D1      DC    H'1'                                                     05380000
@D2      DC    H'3'                                                     05390000
@V1      DC    V(IFDMSG06)                                              05400000
         DS    0F                                                       05410000
@X10     DC    X'00008050'                                              05420000
@X4      DC    X'00FF'                                                  05430000
@X5      DC    X'0100'                                                  05440000
@X11     DC    X'F0F6'                                                  05450000
         DS    0D                                                       05460000
@DATA    EQU   *                                                        05470000
R0       EQU   00000000            FULLWORD POINTER REGISTER            05480000
R1       EQU   00000001            FULLWORD POINTER REGISTER            05490000
PL       EQU   00000001            FULLWORD POINTER REGISTER            05500000
PNT2     EQU   00000002            FULLWORD POINTER REGISTER            05510000
R3       EQU   00000003            FULLWORD POINTER REGISTER            05520000
MSGPTR   EQU   00000004            FULLWORD POINTER REGISTER            05530000
R5       EQU   00000005            FULLWORD POINTER REGISTER            05540000
R6       EQU   00000006            FULLWORD POINTER REGISTER            05550000
I        EQU   00000007            FULLWORD INTEGER REGISTER            05560000
R13      EQU   00000013            FULLWORD POINTER REGISTER            05570000
R14      EQU   00000014            FULLWORD POINTER REGISTER            05580000
R15      EQU   00000015            FULLWORD POINTER REGISTER            05590000
TTECB    EQU   00000000            47 BYTE(S) ON WORD                   05600000
TEVCB    EQU   TTECB+00000000      4 BYTE(S)                            05610000
TCCPS    EQU   TTECB+00000004      1 BYTE(S)                            05620000
TIMEOUT  EQU   TTECB+00000004      1 BIT(S)                             05630000
A00000   EQU   TTECB+00000004      7 BIT(S)                             05640000
TCCW1    EQU   TTECB+00000005      7 BYTE(S)                            05650000
TSNS1    EQU   TTECB+00000012      35 BYTE(S)                           05660000
IOSBCB   EQU   00000000            36 BYTE(S)                           05670000
A00003   EQU   IOSBCB+00000000     20 BYTE(S)                           05680000
IOSCC    EQU   IOSBCB+00000020     1 BYTE(S)                            05690000
IOSCSW   EQU   IOSBCB+00000021     7 BYTE(S)                            05700000
A00004   EQU   IOSBCB+00000028     4 BYTE(S)                            05710000
IOSUSE   EQU   IOSBCB+00000032     4  BYTE  POINTER                     05720000
IOSUSECB EQU   00000000            20 BYTE(S)                           05730000
OECBPTR  EQU   IOSUSECB+00000000   4  BYTE  POINTER                     05740000
TECBPTR  EQU   IOSUSECB+00000004   4  BYTE  POINTER                     05750000
IODVTBPT EQU   IOSUSECB+00000008   4  BYTE  POINTER                     05760000
TCCWPTR  EQU   IOSUSECB+00000012   4  BYTE  POINTER                     05770000
USEFLGA  EQU   IOSUSECB+00000016   1 BYTE(S)                            05780000
INUSE    EQU   IOSUSECB+00000016   1 BIT(S)                             05790000
ATTN     EQU   IOSUSECB+00000016   1 BIT(S)                             05800000
VIRTCCW  EQU   IOSUSECB+00000016   1 BIT(S)                             05810000
OLDTECB  EQU   IOSUSECB+00000016   1 BIT(S)                             05820000
INTRNLCB EQU   IOSUSECB+00000016   1 BIT(S)                             05830000
PURGED   EQU   IOSUSECB+00000016   1 BIT(S)                             05840000
OECB     EQU   00000000            4 BYTE(S)                            05850000
OSNSCNT  EQU   OECB+00000000       1 BYTE(S)                            05860000
OINCNT   EQU   OECB+00000001       1 BYTE(S)                            05870000
A00005   EQU   OECB+00000002       2 BYTE(S)                            05880000
DEVECBX  EQU   00000000            12 BYTE(S)                           05890000
ACTVDEV  EQU   DEVECBX+00000000    4  BYTE  POINTER                     05900000
ACTVIOSB EQU   DEVECBX+00000004    4  BYTE  POINTER                     05910000
ACTVDEVE EQU   DEVECBX+00000008    4 BYTE(S)                            05920000
COMPCODE EQU   DEVECBX+00000008    1 BYTE(S)                            05930000
ECBWAIT  EQU   DEVECBX+00000008    1 BIT(S)                             05940000
ECBDONE  EQU   DEVECBX+00000008    1 BIT(S)                             05950000
A00006   EQU   DEVECBX+00000008    6 BIT(S)                             05960000
A00007   EQU   DEVECBX+00000009    1 BYTE(S)                            05970000
ECBPOSTC EQU   DEVECBX+00000010    2 BYTE(S)                            05980000
IOTABPTR EQU   @DATA+00000000      FULLWORD POINTER                     05990000
IOTABLEX EQU   00000000            12 BYTE(S)                           06000000
IODEVX   EQU   IOTABLEX+00000000   4  BYTE  POINTER                     06010000
IOSBPTRX EQU   IOTABLEX+00000004   4  BYTE  POINTER                     06020000
IOECBX   EQU   IOTABLEX+00000008   4  BYTE  POINTER                     06030000
         ORG   @DATA+00000008                                           06040000
TIME30   EQU   *                   8 BYTE(S) ON DWORD                   06050000
         DC    X'F0F0F0F0F3F0F0C0'                                      06060000
ECB5     EQU   *                   FULLWORD INTEGER                     06070000
         DC    FL4'0'                                                   06080000
A00018   EQU   00000000            13 BYTE(S) ON WORD                   06090000
EDEVAD   EQU   A00018+00000000     8 BYTE(S)                            06100000
A00019   EQU   A00018+00000008     4 BYTE(S)                            06110000
A00020   EQU   A00018+00000012     1 BYTE(S)                            06120000
A00021   EQU   A00018+00000012     3 BIT(S)                             06130000
ACTVE    EQU   A00018+00000012     1 BIT(S)                             06140000
A00022   EQU   A00018+00000012     1 BIT(S)                             06150000
MSGPARM  EQU   00000000            8 BYTE(S) ON WORD                    06160000
LENGTH   EQU   MSGPARM+00000000    1 BYTE(S)                            06170000
BUFAD    EQU   MSGPARM+00000001    3  BYTE  POINTER ON WORD+1           06180000
MECBAD   EQU   MSGPARM+00000004    FULLWORD POINTER                     06190000
MSGDEVAD EQU   00000047            8 BYTE(S)                            06200000
         ORG   @DATA+00000021                                           06210000
SVDEVPTR EQU   *                   3  BYTE  POINTER ON WORD+1           06220000
         DC    AL3(0)                                                   06230000
TENTHSEC EQU   *                   8 BYTE(S) ON DWORD                   06240000
         DC    X'F0F0F0F0F0F0F1C0'                                      06250000
SAVE1    EQU   @DATA+00000032      18*FULLWORD INTEGER                  06260000
SAVE2    EQU   @DATA+00000104      18*FULLWORD INTEGER                  06270000
IOFLAGS  EQU   @DATA+00000176      1 BYTE(S)                            06280000
WAITQUE  EQU   IOFLAGS+00000000    1 BIT(S)                             06290000
DEVBUSY  EQU   IOFLAGS+00000000    1 BIT(S)                             06300000
CUBUSY   EQU   IOFLAGS+00000000    1 BIT(S)                             06310000
CONDCODE EQU   @DATA+00000177      6 BYTE(S)                            06320000
         ORG   CONDCODE+00000000                                        06330000
TEMPCC   EQU   *                   1 BYTE(S)                            06340000
         DC    X'00'                                                    06350000
MASKCODE EQU   *                   1 BYTE(S)                            06360000
         DC    X'70'                                                    06370000
ZEROCODE EQU   *                   1 BYTE(S)                            06380000
         DC    X'00'                                                    06390000
CCODE0   EQU   *                   1 BYTE(S)                            06400000
         DC    X'40'                                                    06410000
CCODE1   EQU   *                   1 BYTE(S)                            06420000
         DC    X'50'                                                    06430000
CCODE2   EQU   *                   1 BYTE(S)                            06440000
         DC    X'60'                                                    06450000
K        EQU   @DATA+00000184      HALFWORD INTEGER                     06460000
         ENTRY TMNT30                                                   06470000
         ORG   @DATA                                                    06480000
         DS    00000186C                                                06490000
@TEMPS   DS    0F                                                       06500000
@TEMP4   DC    F'0'                                                     06510000
COMAREA  IFDCOM                                                         06520000
A00001   EQU   ROPT-00000004       12 BYTE(S) ON WORD                   06530000
A00002   EQU   A00001+00000000     2 BYTE(S)                            06540000
MODID    EQU   A00001+00000002     2 BYTE(S)                            06550000
SVCIOSB  EQU   A00001+00000004     4 BYTE(S)                            06560000
SVC16    EQU   A00001+00000008     4 BYTE(S)                            06570000
RESPONSE EQU   INBUFR+00000000     1 BYTE(S)                            06580000
A00008   EQU   CESWT+00000000      1 BYTE(S)                            06590000
A00009   EQU   A00008+00000000     1 BIT(S)                             06600000
DPENTRY  EQU   A00008+00000000     1 BIT(S)                             06610000
A00010   EQU   A00008+00000000     6 BIT(S)                             06620000
A00011   EQU   CESWT1+00000000     1 BYTE(S)                            06630000
A00012   EQU   A00011+00000000     3 BIT(S)                             06640000
WAITFG   EQU   A00011+00000000     1 BIT(S)                             06650000
A00013   EQU   A00011+00000000     3 BIT(S)                             06660000
TPFLAG   EQU   A00011+00000000     1 BIT(S)                             06670000
A00014   EQU   CESWT7+00000000     1 BYTE(S)                            06680000
A00015   EQU   A00014+00000000     6 BIT(S)                             06690000
TCBRV    EQU   A00014+00000000     1 BIT(S)                             06700000
A00016   EQU   CESWT8+00000000     1 BYTE(S)                            06710000
A00017   EQU   A00016+00000000     4 BIT(S)                             06720000
OLTINVV  EQU   A00016+00000000     1 BIT(S)                             06730000
@DATEND  EQU   *                                                        06740000
@9F1     EQU   WAITRTN                                                  06750000
@9EF     EQU   WAITRTN                                                  06760000
         END    ,(C'PL/S',1400,77182)                                   06770000
