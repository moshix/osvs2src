         TITLE '     IFDOLT08--OLD DPRINT  WRITE INTERFACE.'            00010000
         MACRO                                                          00020000
&NAME    OLDCONV &TYPE,&FROM,&TO,&CNT                                   00030000
         LCLA  &FLAG                                                    00040000
&NAME    LA    R14,R&SYSNDX .              RETURN ADDRESS               00050000
         L     R15,OLTTAB+12 .          TRANSIENT MANAGER ENTRY POINT   00060000
         CNOP  2,4 .                    BOUNDARY ALIGNMENT              00070000
         BALR  R1,R15  .                LINK TO TRANSIENT MANAGER       00080000
         DC    A(&FROM) .               FROM ADDRESS                    00090000
         DC    A(&TO) .                 TO ADDRESS                      00100000
         DC    A(*+4) .                 ADDRESS OF TYPE AND COUNT       00110000
         DC    XL2'00' .                BULL BYTES                      00120000
         AIF   ('&TYPE' EQ 'EH').SKP1                                   00130000
&FLAG    SETA  32768                                                    00140000
.SKP1    ANOP                                                           00150000
         DC    AL2(&CNT+&FLAG) .        TYPE AND COUNT                  00160000
R&SYSNDX DS    0H .                     RETURN POINT                    00170000
         MEND                                                           00180000
         TITLE '              IFDOLT08--OLD DPRINT  WRITE INTERFACE.'   00190000
         LCLA  &T,&SPN                                            0003  00200000
.@001    ANOP                                                     0003  00210000
IFDOLT08 CSECT ,                                                  0003  00220000
         BC    15,24(0,@F)                                              00230000
         DC    C'IFDOLT08 06 JUN 76'                             0003  00240000
         ST    @E,12(0,@D)                                        0003  00250000
         STM   @0,@C,20(@D)                                       0003  00260000
         BALR  @B,0                                               0003  00270000
@PSTART  DS    0H                                                 0003  00280000
         USING @PSTART+00000,@B                                   0003  00290000
         ST    @D,@SAV001+4                                       0003  00300000
         LA    @F,@SAV001                                         0003  00310000
         ST    @F,8(0,@D)                                         0003  00320000
         LR    @D,@F                                              0003  00330000
*   GEN(  USING CHASCT,2);               /* SET REG. 2 FOR DSECT      * 00340000
           USING CHASCT,2                                               00350000
         DS    0H                                                       00360000
*   GENERATE DATA;                                                      00370000
*         RESTRICT(2,3,5,6,7);           /* REGISTERS USED BY PROGRAM * 00380000
*         DCL R0 REG(0) PTR;                                            00390000
*         DCL R1 REG(1) PTR;             /* PARM LIST POINTER RECEIVED* 00400000
*         DCL R2 REG(2) PTR;             /* DSECT BASE REGISTER       * 00410000
*         DCL R3 REG(3) PTR;             /* ID AND ROUTINE NUMBER PTR * 00420000
*         DCL R4 REG(4) PTR;             /* CONTAIN SENSE COUNT       * 00430000
*         DCL R5 REG(5) PTR;             /* PRINT BUFFER POINTER      * 00440000
*         DCL R6 REG(6) PTR;             /* PARAMETER LIST POINTER    * 00450000
*         DCL R7 REG(7) PTR;                  /* WORK AREA POINTER    * 00460000
*         DCL R12 REG(12) PTR;                                          00470000
*         DCL R13 REG(13) PTR;           /* SAVE AREA POINTER         * 00480000
*         DCL R14 REG(14) PTR;                /* RETURN ADDR REGISTER * 00490000
*         DCL R15 REG(15) PTR;                /* RETURN CODE REGISTER * 00500000
*         DCL R9 REG(9) PTR;                  /* WORK REGISTER        * 00510000
*   GEN(EJECT);                                                         00520000
         EJECT                                                          00530000
         DS    0H                                                       00540000
*         /************************************************************ 00550000
*         /* THE FOLLOWING DEFINES AREAS REFERENCED EXTERNAL TO THIS  * 00560000
*         /* MODULE.                                                  * 00570000
*         /************************************************************ 00580000
*                                                                       00590000
*         DCL CESWT2 CHAR(1) GENERATED;  /* INTERNAL SWITCHES         * 00600000
*         DCL TAB28 PTR GENERATED;       /* LINK POINTER              * 00610000
*         DCL DEVDEPAD PTR GENERATED;         /* DEVICE ADDRESS       * 00620000
*         DCL CESWT CHAR(1) GENERATED;        /* FLAG AREA            * 00630000
*         DCL PRTBUFR CHAR(124) GENERATED;    /* PRINT BUFFER         * 00640000
*         DECLARE                                                       00650000
*             1 * BASED(ADDR(CESWT2)),                                  00660000
*               2 * BIT(2),                                             00670000
*               2 FECOND BIT(1);         /* FIRST ERROR CONDITION     * 00680000
*         DECLARE                                                       00690000
*             1 * BASED(ADDR(CESWT)),    /* FLAG AREA                 * 00700000
*               2 * BIT(6),              /* NOT REFERENCED            * 00710000
*               2 FERINT BIT(1);         /* FIRST ERROR SWITCH        * 00720000
*         DCL CESWT6 CHAR(1) GENERATED;  /*                      M4504* 00730000
*         DECLARE                                                       00740000
*             1 * BASED(DEVDEPAD),       /* DEVDEPAD POINTER TO AREA  * 00750000
*               2 * CHAR(6),             /* NOT REFERENCED            * 00760000
*               2 UNIT CHAR(2);          /* UNIT ADDRESS              * 00770000
*         DCL CHASCT CHAR(88) GENERATED; /* SECTION CONTROL TABLE     * 00780000
*         DECLARE                                                       00790000
*             1 * BASED(ADDR(CHASCT)),   /* SECTION CONTROL TABLE ADR.* 00800000
*               2 * CHAR(2),             /* NOT REFERENCED            * 00810000
*               2 * CHAR(1),                                            00820000
*                 3 * BIT(7),            /* NOT REFERENCED            * 00830000
*                 3 FERCOM BIT(1),       /* FIRST ERROR FLAG          * 00840000
*               2 CHASCT3 CHAR(1),       /* FIRST ERROR SWITCH        * 00850000
*                 3 CHASCTB BIT(1),                                     00860000
*                 3 * BIT(5),            /* NOT REFERENCED            * 00870000
*                 3 ERRLPB BIT(1);       /* ERROR LOOP FLAG           * 00880000
*         DCL COMMINT PTR GENERATED;     /* ADDRESS OF COMMUNICATIONS * 00890000
*         DECLARE                                                       00900000
*             1 BUFFERS BDY(DWORD),                                     00910000
*               2 * PTR,                 /* NOT USED                  * 00920000
*               2 FRMCON CHAR(1),        /* FORMS CONTROL CHARACTER   * 00930000
*               2 PRTBUFR1 CHAR(79),     /* BUFFER AREA               * 00940000
*               2 BUFFER2 CHAR(80);      /* BUFFER WORK AREA          * 00950000
*         DCL BUFR CHAR(79) BASED(R5);   /* BUFFER AREA               * 00960000
*  DCL CESWT5 CHAR(1) GENERATED;         /* OLTEP SWITCHES       M1390* 00970000
*  DCL 1 * BASED(ADDR(CESWT5)),          /* NA                   M1390* 00980000
*         2 * BIT(2),                    /* NA                   M1390* 00990000
*         2 FFEFLG BIT(1);               /* FIRST FIRST ERROR    M1390* 01000000
*   GEN(EJECT);                                                         01010000
         EJECT                                                          01020000
         DS    0H                                                       01030000
*         /************************************************************ 01040000
*         /* THE FOLLOWING MAP DESCRIBES THE PARAMETER LIST RECEIVED. * 01050000
*         /************************************************************ 01060000
*                                                                       01070000
*         DECLARE                                                       01080000
*             1 * BASED(R6),             /* REGISTER 6 CONTAINS THE   * 01090000
*               2 * CHAR(1),             /* ADDRESS OF THIS AREA.     * 01100000
*                 3 LASTFLG BIT(1),      /* LAST MESSAGE FLAG         * 01110000
*                 3 HEADFLG BIT(1),      /* HEADER REQUEST FLAG       * 01120000
*                 3 RSLTFLG BIT(1),      /* RESULT REQUEST FLAG       * 01130000
*                 3 OVRDFLG BIT(1),      /* OVER-RIDE REQUEST FLAG    * 01140000
*                 3 COMFLG BIT(1),       /* COMMENT REQUEST FLAG      * 01150000
*                 3 ERRFLG BIT(1),       /* ERROR MESSAGE FLAG        * 01160000
*                 3 * BIT(2),                                           01170000
*               2 FRMCNTL CHAR(1),       /* FORM CONTROL BYTE         * 01180000
*               2 * CHAR(1),                                            01190000
*               2 COUNT CHAR(1),         /* MESSAGE LENGTH            * 01200000
*               2 SUBCHK PTR;            /* POINTER TO SUBTASK OR     * 01210000
*                                        /* CHECKFIELDS               * 01220000
*   GEN(EJECT);                                                         01230000
         EJECT                                                          01240000
         DS    0H                                                       01250000
*         /************************************************************ 01260000
*         /* THE FOLLOWING MAP DESCRIBES THE SUBTASK AREA.            * 01270000
*         /************************************************************ 01280000
*                                                                       01290000
*         DECLARE                                                       01300000
*             1 * BASED(SUBCHK),         /* SUBCHK POINTS TO AREA.    * 01310000
*               2 * CHAR(1),             /* CONTAINS THE FOLLOWING    * 01320000
*                                        /* FLAGS:                    * 01330000
*                 3 DEVFLG BIT(1),       /* DEVICE INDICATOR          * 01340000
*                 3 LSTFLG BIT(1),       /* LAST PRINT INDICATOR      * 01350000
*                 3 * BIT(1),            /* NOT REFERENCED            * 01360000
*                 3 CCWFLG BIT(1),       /* CCW INDICATOR             * 01370000
*               2 LSTCCW CHAR(7);        /* CCW AREA                  * 01380000
*         DCL AREA CHAR(80) BASED(SUBCHK); /* COMMENT AREA            * 01390000
*   GEN(EJECT);                                                         01400000
         EJECT                                                          01410000
         DS    0H                                                       01420000
*         /************************************************************ 01430000
*         /* THE FOLLOWING MAP DESCRIBES THE CHECKFIELD AREA.         * 01440000
*         /************************************************************ 01450000
*                                                                       01460000
*         DECLARE                                                       01470000
*             1 * BASED(SUBCHK),                                        01480000
*               2 * CHAR(4),                                            01490000
*                 3 RELIF CHAR(1),       /* FLAG FIELDS INDICATING    * 01500000
*                                        /* AREAS TO BE PRINTED.      * 01510000
*                   4 RELAD BIT(1),      /* CSW COMMAND ADDRESS       * 01520000
*                   4 CC BIT(1),         /* CONDITION CODE            * 01530000
*                   4 CSWS1 BIT(1),      /* 1ST BYTE OF CSW STATUS    * 01540000
*                   4 CSWS2 BIT(1),      /* 2ND BYTE OF CSW STATUS    * 01550000
*                   4 CSWC BIT(1),       /* CSW COUNT                 * 01560000
*                   4 SNS BIT(1),        /* SENSE DATA                * 01570000
*                   4 * BIT(1),          /* NOT REFERENCED            * 01580000
*                   4 DATA BIT(1),       /* DATA FLAG                 * 01590000
*                 3 SNGLFLG BIT(1),      /* SINGLE LINE OF PRINT      * 01600000
*                 3 * BIT(7),            /* NOT USED                  * 01610000
*                 3 DTACNT CHAR(1),      /* DATA COUNT                * 01620000
*                 3 SCOUNT CHAR(1),      /* SENSE COUNT         Y02906* 01630000
*               2 TECBAD PTR,            /* TECB ADDRESS              * 01640000
*               2 EXPDINFO CHAR(16),     /* THIS FIELD CONTAINS       * 01650000
*                                        /* EXPECTED - CONDITION CODE * 01660000
*                                        /* CSW AND SENSE.            * 01670000
*               2 REDTADR PTR,           /* POINTER TO RECEIVED DATA  * 01680000
*               2 EXPDTADR PTR;          /* POINTER TO EXPECTED DATA  * 01690000
*         DCL RECEIV CHAR(256) BASED(REDTADR);  /* RECEIVED DATA AREA * 01700000
*         DCL EXPECT CHAR(256) BASED(EXPDTADR); /* EXPECTED DATA AREA * 01710000
*   GEN(EJECT);                                                         01720000
         EJECT                                                          01730000
         DS    0H                                                       01740000
*         /************************************************************ 01750000
*         /* THE FOLLOWING DEFINES INTERNAL WORK AREAS.               * 01760000
*         /************************************************************ 01770000
*                                                                       01780000
*         DCL WKARA1 CHAR(96);           /* WORK AREA                 * 01790000
*         DCL WKAREA CHAR(96) BASED(R7); /* REGISTER 7 POINTS TO AREA * 01800000
*         DECLARE                                                       01810000
*             1 * BASED(R13),            /* REG.13 POINTS TO SAVE AREA* 01820000
*               2 * PTR,                 /* NOT REFERENCED            * 01830000
*               2 OLTSVAD PTR;           /* POINTER TO OLT            * 01840000
*         DECLARE                                                       01850000
*             1 * BASED(OLTSVAD),                                       01860000
*               2 * CHAR(32),            /* NOT REFERENCED            * 01870000
*               2 IDAD PTR;              /* POINTER TO OLT ID         * 01880000
*         DECLARE                                                       01890000
*             1 * BASED(IDAD),                                          01900000
*               2 * CHAR(76),            /* NOT REFERENCED            * 01910000
*               2 ID CHAR(8),            /* OLT ID                    * 01920000
*               2 ROUTINE CHAR(1);       /* OLT ROUTINE NUMBER        * 01930000
*         DCL XLATE1 CHAR(10) INIT('0123456789');  /* TRANSLATE TABLE * 01940000
*   GEN(EJECT);                                                         01950000
         EJECT                                                          01960000
         DS    0H                                                       01970000
*         /************************************************************ 01980000
*         /* THE FOLLOWING MAPS DESCRIBE AREA'S REFERENCED FOR OPER-  * 01990000
*         /* ATOR COMMUNICATIONS                                      * 02000000
*         /************************************************************ 02010000
*                                                                       02020000
*         DCL IFDMSG08 EXT ENTRY;        /* IFDOLT08'S MESSAGE MODULE * 02030000
*         DCL MSGMOD08 PTR INIT(ADDR(IFDMSG08)); /* PTR. TO IFDMSG08  * 02040000
*         DECLARE                                                       02050000
*             1 * BASED(MSGMOD08),                                      02060000
*               2 MSG129 PTR;            /* ADDR OF MESSAGE IFD129I   * 02070000
*         DECLARE                                                       02080000
*             1 * BASED(MSG129),         /* MESSAGE IFD129I           * 02090000
*               2 * CHAR(39),            /* MESSAGE                   * 02100000
*               2 MSGID CHAR(6),         /* OLT ID                    * 02110000
*               2 * CHAR(1),             /* BLANK                     * 02120000
*               2 MSGRTN CHAR(2),        /* OLT ROUTINE NUMBER        * 02130000
*               2 * CHAR(6),             /* MESSAGE                   * 02140000
*               2 MSGUNIT CHAR(3);       /* UNIT ADDRESS              * 02150000
*   GEN(EJECT);                                                         02160000
         EJECT                                                          02170000
         DS    0H                                                       02180000
*         /************************************************************ 02190000
*         /* THE FOLLOWING MAP DESCRIBES THE TECB AREA                * 02200000
*         /************************************************************ 02210000
*                                                                       02220000
*         DECLARE                                                       02230000
*             1 * BASED(TECBAD),         /* TECB PTR IN CHECKFLD AREA * 02240000
*               2 * CHAR(4),             /* NOT REFERENCED            * 02250000
*               2 RCVDINFO CHAR(16);     /* THIS FIELD CONTAINS       * 02260000
*                                        /* RECEIVED - CONDITION CODE * 02270000
*                                        /* CSW AND SENSE.            * 02280000
*   GEN(EJECT);                                                         02290000
         EJECT                                                          02300000
         DS    0H                                                       02310000
*         /************************************************************ 02320000
*         /* THE FOLLOWING CODE WILL INITIALIZE REGISTERS AND DETER-  * 02330000
*         /* MINE THE FUNCTION OR FUNCTIONS TO BE PERFORMED.          * 02340000
*         /************************************************************ 02350000
*                                                                       02360000
*         R6 = R1;                       /* SET PARAMETER LIST PTR.   * 02370000
         LR    @6,@1                                              0061  02380000
* PRT000:                                                               02390000
*         R5 = ADDR(PRTBUFR1);           /* SET PRINT BUFFER PTR.     * 02400000
PRT000   LA    @5,BUFFERS+5                                       0062  02410000
*         R7 = ADDR(WKARA1);             /* SET WORK AREA PTR.        * 02420000
         LA    @7,WKARA1                                          0063  02430000
*          PRTBUFR(1:1)=' ';    /* CLEAR BUFFER               @ZA08978* 02440000
         MVI   PRTBUFR,C' '                                       0064  02450000
*          PRTBUFR(2:124)=PRTBUFR(1:123);                   /*@ZA08978* 02460000
         MVC   PRTBUFR+1(123),PRTBUFR                             0065  02470000
*          BUFFERS(1:1)=' ';    /* CLEAR BUFFERS              @ZA08978* 02480000
         MVI   BUFFERS,C' '                                       0066  02490000
*          BUFFERS(2:164)=BUFFERS(1:163);                   /*@ZA08978* 02500000
         MVC   BUFFERS+1(163),BUFFERS                             0067  02510000
*         IF FRMCNTL = 'D9'X THEN        /* FORMS CONTROL - RESTORE   * 02520000
         CLI   1(@6),X'D9'                                        0068  02530000
         BC    07,@9FF                                            0068  02540000
*           DO;                          /* DO THE FOLLOWING:         * 02550000
*           PRTBUFR(1:1) = '1B'X;        /* SET RESTORE CONTROL       * 02560000
         MVI   PRTBUFR,X'1B'                                      0070  02570000
*   GEN(  PWRT  SIZE=80);                /* INVOKE PRINT ROUTINE      * 02580000
           PWRT  SIZE=80                                                02590000
         DS    0H                                                       02600000
*           GO TO PRT0002;                                              02610000
         BC    15,PRT0002                                         0072  02620000
*           END;                         /* END OF RESTORE ROUTINE    * 02630000
*         IF FRMCNTL = 'F3'X THEN        /* FORMS CONTROL - SPACE 3   * 02640000
@9FF     CLI   1(@6),X'F3'                                        0074  02650000
         BC    07,@9FE                                            0074  02660000
*           DO;                          /* DO THE FOLLOWING:         * 02670000
*           FRMCON = '19'X;              /* SET SPACE 3 CONTROL       * 02680000
         MVI   BUFFERS+4,X'19'                                    0076  02690000
*           GO TO PRT0001;                                              02700000
         BC    15,PRT0001                                         0077  02710000
*           END;                         /* END OF SPACE 3 ROUTINE    * 02720000
*         IF FRMCNTL = 'F2'X THEN        /* FORMS CONTROL - SPACE 2   * 02730000
@9FE     CLI   1(@6),X'F2'                                        0079  02740000
         BC    07,@9FD                                            0079  02750000
*           DO;                          /* DO THE FOLLOWING:         * 02760000
*           FRMCON = '11'X;              /* SET SPACE 2 CONTROL       * 02770000
         MVI   BUFFERS+4,X'11'                                    0081  02780000
*           GO TO PRT0001;                                              02790000
         BC    15,PRT0001                                         0082  02800000
*           END;                         /* END OF SPACE 2 ROUTINE    * 02810000
* PRT0002:                                                              02820000
*         FRMCON = '09'X;                /* SET DEFAULT OF SPACE 1    * 02830000
@9FD     EQU   *                                                  0084  02840000
PRT0002  MVI   BUFFERS+4,X'09'                                    0084  02850000
* PRT0001:                                                              02860000
*         IF HEADFLG = '1'B THEN         /* REQUEST FOR HEADER PRINT  * 02870000
PRT0001  TM    0(@6),B'01000000'                                  0085  02880000
*           GO TO PRT003;                /* YES-GO TO HEADER ROUTINE  * 02890000
         BC    01,PRT003                                          0086  02900000
*         IF RSLTFLG = '1'B THEN         /* REQUEST FOR RESULT PRINT  * 02910000
         TM    0(@6),B'00100000'                                  0087  02920000
*           GO TO PRT010;                /* YES-GO TO RESULT ROUTINE  * 02930000
         BC    01,PRT010                                          0088  02940000
*         IF COMFLG = '1'B THEN          /* REQUEST FOR COMMENT PRINT * 02950000
         TM    0(@6),B'00001000'                                  0089  02960000
*           GO TO PRT022;                /* YES-GO TO COMMENT ROUTINE * 02970000
         BC    01,PRT022                                          0090  02980000
*         BUFR(2:4) = 'BUG';             /* NO- INDICATE ERROR        * 02990000
         MVC   1(3,@5),@C10                                       0091  03000000
*         PRTBUFR(1:80) = BUFFERS(5:84); /* SET PRINT BUFFER          * 03010000
         MVC   PRTBUFR(80),BUFFERS+4                              0092  03020000
*   GEN(  PWRT  SIZE=80);                /* INVOKE PRINT ROUTINE      * 03030000
           PWRT  SIZE=80                                                03040000
         DS    0H                                                       03050000
*                                                                       03060000
* PRT001:                                                               03070000
*  IF FFEFLG='1'B THEN                   /* CHECK SWITCH         M1390* 03080000
PRT001   TM    A00012,B'00100000'                                 0094  03090000
*    GOTO PRT002;                        /* PREVIOUS FIRST ERROR M1390* 03100000
         BC    01,PRT002                                          0095  03110000
*         IF FERCOM = '0'B THEN          /* 1ST ERROR COMMUNICATION   * 03120000
         TM    A00006+2,B'00000001'                               0096  03130000
*           GO TO PRT002;                /* GO CHECK ERROR LOOP       * 03140000
         BC    08,PRT002                                          0097  03150000
*         IF CHASCTB = '0'B THEN         /* FIRST ERROR COMMUNICATION * 03160000
         TM    A00006+3,B'10000000'                               0098  03170000
*           GO TO PRT002;                /* GO CHECK ERROR LOOP       * 03180000
         BC    08,PRT002                                          0099  03190000
* PRT001C:                                                              03200000
*         FERINT = '1'B;                 /* SET FIRST ERROR SWITCH    * 03210000
PRT001C  OI    A00002,B'00000010'                                 0100  03220000
*         MSGID = ID(1:6);               /* SET OLT ID IN MESSAGE     * 03230000
         L     @4,4(0,@D)                                         0101  03240000
         L     @4,32(0,@4)         A00027                         0101  03250000
         L     @C,MSGMOD08                                        0101  03260000
         L     @C,0(0,@C)          A00031                         0101  03270000
         MVC   39(6,@C),76(@4)                                    0101  03280000
*         R9 = ROUTINE;                  /* SETUP FOR TRANSLATE       * 03290000
         SR    @9,@9                                              0102  03300000
         IC    @9,84(0,@4)                                        0102  03310000
*   GENERATE;                                                           03320000
         CVD   R9,BUFFER2+4                                             03330000
         UNPK  BUFFER2(2),BUFFER2+10(2)                                 03340000
         NI    BUFFER2+1,X'0F'                                          03350000
         TR    BUFFER2+1(1),XLATE1                                      03360000
         DS    0H                                                       03370000
*         MSGRTN = BUFFER2(1:2);         /* SET OLT ROUTINE IN MESSAGE* 03380000
         MVC   46(2,@C),BUFFERS+84                                0104  03390000
*         BUFFER2(9:10) = UNIT;          /* SET UNIT ADDRESS IN BUFFER* 03400000
         L     @8,DEVDEPAD                                        0105  03410000
         MVC   BUFFERS+92(2),6(@8)                                0105  03420000
*         R9 = ADDR(LINK1);              /* SET LINK ADDRESS POINTER  * 03430000
         LA    @9,LINK1                                           0106  03440000
*         GO TO CONVERT1;                /* GO TO CONVERT ROUTINE     * 03450000
         BC    15,CONVERT1                                        0107  03460000
* LINK1:                                                                03470000
*         MSGUNIT = BUFFER2(28:30);      /* SET UNIT ADDRESS IN MSG.  * 03480000
LINK1    L     @4,MSGMOD08                                        0108  03490000
         L     @4,0(0,@4)          A00031                         0108  03500000
         MVC   54(3,@4),BUFFERS+111                               0108  03510000
*         R9 = MSG129;                   /* SET MESSAGE POINTER       * 03520000
         L     @C,MSGMOD08                                        0109  03530000
         L     @9,0(0,@C)                                         0109  03540000
*   GEN(  PWTO  REG=(R9));               /* INVOKE PARALLEL PRINT RTN * 03550000
           PWTO  REG=(R9)                                               03560000
         DS    0H                                                       03570000
*  FFEFLG='1'B;                          /* FIRST FIRST ERROR    M1390* 03580000
         OI    A00012,B'00100000'                                 0111  03590000
* PRT001B:                                                              03600000
*         FECOND = '1'B;                 /* SET FIRST ERROR CONDITION * 03610000
PRT001B  OI    A00000,B'00100000'                                 0112  03620000
*  CESWT6=CESWT6&'7F'X;                  /* CLEAR 1ST BIT IN SW  M4504* 03630000
         NI    CESWT6,X'7F'                                       0113  03640000
*         R15 = TAB28;                   /* SET LINK POINTER          * 03650000
         L     @F,TAB28                                           0114  03660000
*   GEN;                                                                03670000
         L     R13,4(R13)          RESTORE REGISTERS                    03680000
         L     R14,12(R13)         FOR RETURN TO TRANS. MANAGER         03690000
         LM    R0,R12,20(R13)                                           03700000
         DS    0H                                                       03710000
*         GOTO R15;                      /* RETURN TO TRANS. MANAGER  * 03720000
         BCR   15,@F                                              0116  03730000
*                                                                       03740000
* PRT002:                                                               03750000
*         IF ERRLPB = '0'B THEN          /* IF ERROR LOOP IS NOT ON   * 03760000
PRT002   TM    A00006+3,B'00000010'                               0117  03770000
*           GO TO FINISH;                /* GO TO EXIT ROUTINE        * 03780000
         BC    08,FINISH                                          0118  03790000
*         CHASCT3 = CHASCT3 & 'DF'X;     /* RESET CATASTROPHIC FLAG   * 03800000
         NI    A00006+3,X'DF'                                     0119  03810000
*         GO TO FINISH;             /* GO TO EXIT ROUTINE             * 03820000
         BC    15,FINISH                                          0120  03830000
*   GEN(EJECT);                                                         03840000
         EJECT                                                          03850000
         DS    0H                                                       03860000
*         /************************************************************ 03870000
*         /* THE FOLLOWING ROUTINE WILL PRINT HEADING REQUESTS        * 03880000
*         /************************************************************ 03890000
* PRT003:                                                               03900000
*         IF OVRDFLG = '1'B THEN         /* OVER-RIDE REQUEST         * 03910000
PRT003   TM    0(@6),B'00010000'                                  0122  03920000
*           GO TO PRT009;                /* YES - GO CHECK LAST ENTRY * 03930000
         BC    01,PRT009                                          0123  03940000
*         IF ERRFLG = '0'B THEN          /* ERROR PRINT REQUEST       * 03950000
         TM    0(@6),B'00000100'                                  0124  03960000
*           GO TO PRT004;                /* NO- GO TO HEADER SETUP    * 03970000
         BC    08,PRT004                                          0125  03980000
*         BUFR(1:1) = '*';               /* INDICATE ERROR MESSAGE    * 03990000
         MVI   0(@5),C'*'                                         0126  04000000
*         R5 = R5 + 1;                   /* INCREMENT PRT BUFFER PTR  * 04010000
         AH    @5,@D1                                             0127  04020000
* PRT004:                                                               04030000
*         BUFR(1:8) = ID;                /* SET ID IN HEADER          * 04040000
PRT004   L     @4,4(0,@D)                                         0128  04050000
         L     @4,32(0,@4)         A00027                         0128  04060000
         MVC   0(8,@5),76(@4)                                     0128  04070000
*         R5 = R5 + 9;                   /* INCREMENT PRT BUFFER PTR  * 04080000
         AH    @5,@D2                                             0129  04090000
*         R9 = ROUTINE;                  /* SETUP FOR TRANSLATE       * 04100000
         SR    @9,@9                                              0130  04110000
         IC    @9,84(0,@4)                                        0130  04120000
*   GENERATE;                                                           04130000
         CVD   R9,BUFFER2+4                                             04140000
         UNPK  BUFFER2(2),BUFFER2+10(2)                                 04150000
         NI    BUFFER2+1,X'0F'                                          04160000
         TR    BUFFER2+1(1),XLATE1                                      04170000
         DS    0H                                                       04180000
*         BUFR(1:2) = BUFFER2(1:2);      /* SET ROUTINE NUMBER IN MSG.* 04190000
         MVC   0(2,@5),BUFFERS+84                                 0132  04200000
*         R5 = R5 + 3;                   /* INCREMENT PRT BUFFER PTR  * 04210000
         AH    @5,@D3                                             0133  04220000
*         BUFFER2(2:8) = LSTCCW;         /* GET LISTING & CCW ADDRESS * 04230000
         L     @C,4(0,@6)                                         0134  04240000
         MVC   BUFFERS+85(7),1(@C)                                0134  04250000
*         BUFFER2(9:10) = UNIT;          /* GET UNIT ADDRESS          * 04260000
         L     @8,DEVDEPAD                                        0135  04270000
         MVC   BUFFERS+92(2),6(@8)                                0135  04280000
*         R9 = ADDR(LINK2);              /* SET LINK ADDRESS POINTER  * 04290000
         LA    @9,LINK2                                           0136  04300000
*         GO TO CONVERT1;                /* GO TO CONVERT ROUTINE     * 04310000
         BC    15,CONVERT1                                        0137  04320000
* LINK2:                                                                04330000
*         IF LSTFLG = '0'B THEN          /* IS LISTING ADDRESS PRESENT* 04340000
LINK2    L     @4,4(0,@6)                                         0138  04350000
         TM    0(@4),B'01000000'                                  0138  04360000
*           GO TO PRT005;                /* NO-GO CHECK FOR CCW       * 04370000
         BC    08,PRT005                                          0139  04380000
*         BUFR(1:3) = 'IC-';             /* SET PREFIX IN MESSAGE     * 04390000
         MVC   0(3,@5),@C15                                       0140  04400000
*         BUFR(4:8) = BUFFER2(14:18);    /* SET LISTING ADDRESS IN MSG* 04410000
         MVC   3(5,@5),BUFFERS+97                                 0141  04420000
*         R5 = R5 + 9;                   /* INCREMENT PRT BUFFER PTR  * 04430000
         AH    @5,@D2                                             0142  04440000
* PRT005:                                                               04450000
*         IF CCWFLG = '0'B THEN          /* CCW PRESENT               * 04460000
PRT005   L     @4,4(0,@6)                                         0143  04470000
         TM    0(@4),B'00010000'                                  0143  04480000
*           GO TO PRT006;                /* NO-GO CHECK FOR DEVICE    * 04490000
         BC    08,PRT006                                          0144  04500000
*         BUFR(1:4) = 'CCW-';            /* SET PREFIX IN MESSAGE     * 04510000
         MVC   0(4,@5),@C16                                       0145  04520000
*         BUFR(5:9) = BUFFER2(22:26);    /* SET CCW IN MESSAGE        * 04530000
         MVC   4(5,@5),BUFFERS+105                                0146  04540000
*         R5 = R5 + 10;                  /* INCREMENT PRT BUFFER PTR  * 04550000
         AH    @5,@D4                                             0147  04560000
* PRT006:                                                               04570000
*         IF DEVFLG = '0'B THEN          /* DEVICE PRESENT            * 04580000
PRT006   L     @4,4(0,@6)                                         0148  04590000
         TM    0(@4),B'10000000'                                  0148  04600000
*           GO TO PRT008;                /* NO-GO CHECK               * 04610000
         BC    08,PRT008                                          0149  04620000
*         BUFR(1:9) = 'I/O ADDR-';       /* SET I/O ADDRESS PREFIX    * 04630000
         MVC   0(9,@5),@C17                                       0150  04640000
*         BUFR(10:12) = BUFFER2(28:30);  /* SET UNIT ID               * 04650000
         MVC   9(3,@5),BUFFERS+111                                0151  04660000
*         R5 = R5+13;                    /* INCREMENT PRT BUFFER PTR. * 04670000
         AH    @5,@D5                                             0152  04680000
* PRT008:                                                               04690000
*         PRTBUFR(1:80) = BUFFERS(5:84); /* SET PRINT BUFFER          * 04700000
PRT008   MVC   PRTBUFR(80),BUFFERS+4                              0153  04710000
*   GEN(  PWRT  SIZE=80);                /* INVOKE PRINT ROUTINE      * 04720000
           PWRT  SIZE=80                                                04730000
         DS    0H                                                       04740000
* PRT009:                                                               04750000
*         IF LASTFLG = '1'B THEN         /* LAST ENTRY                * 04760000
PRT009   TM    0(@6),B'10000000'                                  0155  04770000
*           GO TO PRT001;                /* YES-GO CHECK FIRST ERROR  * 04780000
         BC    01,PRT001                                          0156  04790000
*         R6 = R6 + 8;                   /* SET POINTER TO NEXT ENTRY * 04800000
         AH    @6,@D6                                             0157  04810000
*           GO TO PRT000;                /* GO BACK TO THE BEGINNING  * 04820000
         BC    15,PRT000                                          0158  04830000
*   GEN(EJECT);                                                         04840000
         EJECT                                                          04850000
         DS    0H                                                       04860000
*         /************************************************************ 04870000
*         /* THE FOLLOWING ROUTINE WILL PRINT RESULT REQUESTS         * 04880000
*         /************************************************************ 04890000
* PRT010:                                                               04900000
*         IF OVRDFLG = '1'B THEN         /* OVER-RIDE ON              * 04910000
PRT010   TM    0(@6),B'00010000'                                  0160  04920000
*           GO TO PRT009;                /* YES-CHECK FOR LAST ENTRY  * 04930000
         BC    01,PRT009                                          0161  04940000
*         R5 = ADDR(PRTBUFR1);           /* SET PRINT BUFFER POINTER  * 04950000
         LA    @5,BUFFERS+5                                       0162  04960000
*         BUFR(1:5) = 'RCVD ';           /* SET RECEIVED PREFIX       * 04970000
         MVC   0(5,@5),@C18                                       0163  04980000
*         BUFFER2(1:5) = 'XPCTD';        /* SET EXPECTED PREFIX       * 04990000
         MVC   BUFFERS+84(5),@C19                                 0164  05000000
*         R5 = R5+6;                     /* INCREMENT PRT BUFFER PTR  * 05010000
         AH    @5,@D7                                             0165  05020000
*         WKAREA(1:16) = RCVDINFO;       /* SET RECEIVED CONDITION    * 05030000
         L     @4,4(0,@6)                                         0166  05040000
         L     @4,4(0,@4)          A00021                         0166  05050000
         MVC   0(16,@7),4(@4)                                     0166  05060000
*                                        /* CODE,CSW AND SENSE IN     * 05070000
*                                        /* WORK AREA.                * 05080000
*         WKAREA(17:32) = EXPDINFO;      /* SET EXPECTED CONDITION    * 05090000
         L     @C,4(0,@6)                                         0167  05100000
         MVC   16(16,@7),8(@C)                                    0167  05110000
*                                        /* CODE,CSW AND SENSE IN     * 05120000
*                                        /* WORK AREA.                * 05130000
*         R9 = ADDR(LINK3);              /* SET LINK ADDRESS POINTER  * 05140000
         LA    @9,LINK3                                           0168  05150000
*         GO TO CONVERT2;                /* GO TO CONVERT ROUTINE 2   * 05160000
         BC    15,CONVERT2                                        0169  05170000
* LINK3:                                                                05180000
*         IF CC = '0'B THEN              /* CONDITION CODE RELEVANT   * 05190000
LINK3    L     @4,4(0,@6)                                         0170  05200000
         TM    0(@4),B'01000000'                                  0170  05210000
*           GO TO PRT011;                /* NO-GO CHECK CSW           * 05220000
         BC    08,PRT011                                          0171  05230000
*         BUFR(1:3) = 'CC-';             /* SET CONDITION CODE PREFIX * 05240000
         MVC   0(3,@5),@C20                                       0172  05250000
*         BUFR(4:4) = WKAREA(33:33);     /* RECEIVED AND EXPECTED IN  * 05260000
         MVC   3(1,@5),32(@7)                                     0173  05270000
*         BUFR(83:83) = WKAREA(66:66);   /* PRINT BUFFER              * 05280000
         MVC   82(1,@5),65(@7)                                    0174  05290000
*         R5 = R5+5;                     /* INCREMENT PRT BUFFER PTR  * 05300000
         AH    @5,@D8                                             0175  05310000
* PRT011:                                                               05320000
*         R9 = ADDR(RELIF);              /* SET FLAG FIELD ADDRESS    * 05330000
PRT011   L     @4,4(0,@6)                                         0176  05340000
         LR    @9,@4                                              0176  05350000
*   GEN;                                                                05360000
         TM    0(R9),X'B8'              CSW RELEVANT                    05370000
         BZ    PRT016                      GO CHECK SENSE               05380000
         DS    0H                                                       05390000
*         BUFR(1:6) = 'CSW-XX';          /* SET CSW RECEIVED AND      * 05400000
         MVC   0(6,@5),@C21                                       0178  05410000
*         BUFR(80:85) = 'CSW-XX';        /* EXPECTED PREFIX IN BUF    * 05420000
         MVC   79(6,@5),@C21                                      0179  05430000
*                                                                       05440000
* PRT012:                                                               05450000
*         R5 = R5+7;                     /* INCREMENT PRT BUFFER PTR  * 05460000
PRT012   AH    @5,@D9                                             0180  05470000
*         BUFR(80:96)='XXXXXX XXXX XXXX '; /* ASSUME TEMPORARY FIELDS * 05480000
         MVC   79(17,@5),@C22                                     0181  05490000
*         BUFR(1:6) = WKAREA(35:40);     /* SET ADDRESS IN PRT BUFFER * 05500000
         MVC   0(6,@5),34(@7)                                     0182  05510000
*         BUFR(8:11) = WKAREA(41:44);    /* SET STATUS IN PRT BUFFER  * 05520000
         MVC   7(4,@5),40(@7)                                     0183  05530000
*         BUFR(13:16) = WKAREA(45:48);   /* SET COUNT IN PRT BUFFER   * 05540000
         MVC   12(4,@5),44(@7)                                    0184  05550000
*         IF SNGLFLG = '1'B THEN         /* SINGLE LINE PRINT         * 05560000
         L     @4,4(0,@6)                                         0185  05570000
         TM    1(@4),B'10000000'                                  0185  05580000
*           GO TO PRT015;                /* YES-GO CHECK SENSE        * 05590000
         BC    01,PRT015                                          0186  05600000
*         IF RELAD = '0'B THEN           /* CSW ADDRESS RELEVANT      * 05610000
         TM    0(@4),B'10000000'                                  0187  05620000
*           GO TO PRT013;                /* YES-GO CHECK STATUS       * 05630000
         BC    08,PRT013                                          0188  05640000
*         BUFR(80:85) = WKAREA(67:72);   /* SET ADDRESS IN PRT BUFFER * 05650000
         MVC   79(6,@5),66(@7)                                    0189  05660000
* PRT013:                                                               05670000
*         IF CSWS1 = '0'B &              /* STATUS RELEVANT           * 05680000
*           CSWS2 = '0'B THEN                                           05690000
PRT013   L     @4,4(0,@6)                                         0190  05700000
         TM    0(@4),B'00100000'                                  0190  05710000
         BC    05,@9FC                                            0190  05720000
         TM    0(@4),B'00010000'                                  0190  05730000
*             GO TO PRT014;              /* YES-GO CHECK COUNT        * 05740000
         BC    10,PRT014                                          0191  05750000
*         BUFR(87:90) = WKAREA(73:76);   /* SET STATUS IN PRT BUFFER  * 05760000
@9FB     EQU   *                                                  0192  05770000
@9FC     MVC   86(4,@5),72(@7)                                    0192  05780000
* PRT014:                                                               05790000
*         IF CSWC = '0'B THEN            /* CSW COUNT RELEVANT        * 05800000
PRT014   L     @4,4(0,@6)                                         0193  05810000
         TM    0(@4),B'00001000'                                  0193  05820000
*           GO TO PRT015;                /* YES-GO CHECK SENSE        * 05830000
         BC    08,PRT015                                          0194  05840000
*         BUFR(92:95) = WKAREA(77:80);   /* SET COUNT IN PRT BUFFER   * 05850000
         MVC   91(4,@5),76(@7)                                    0195  05860000
* PRT015:                                                               05870000
*         R5 = R5+17;                    /* INCREMENT PRT BUFFER PTR  * 05880000
PRT015   AH    @5,@D10                                            0196  05890000
* PRT016:                                                               05900000
*         IF SNS = '0'B THEN             /* SENSE RELEVANT            * 05910000
PRT016   L     @4,4(0,@6)                                         0197  05920000
         TM    0(@4),B'00000100'                                  0197  05930000
*           GO TO PRT018;                /* YES-GO CHECK DATA         * 05940000
         BC    08,PRT018                                          0198  05950000
*         BUFR(1:4) = 'SNS-';            /* SET SENSE PREFIX IN BUFFER* 05960000
         MVC   0(4,@5),@C23                                       0199  05970000
*         R5 = R5+4;                     /* INCREMENT PRT BUFFER PTR  * 05980000
         AH    @5,@D11                                            0200  05990000
* PRT017:                                                               06000000
*         RESTRICT(R4);                  /* RESTRICT SENSE COUNT REG. * 06010000
*         DO                                                            06020000
*           R4 = SCOUNT TO 1             /* SET SENSE COUNT     Y02906* 06030000
*           BY - 1;                                                     06040000
PRT017   L     @C,4(0,@6)                                         0202  06050000
         SR    @F,@F                                              0202  06060000
         IC    @F,3(0,@C)                                         0202  06070000
         LTR   @4,@F                                              0202  06080000
         BC    12,@DO9F9                                          0202  06090000
*           BUFR(1:2) = WKAREA(49:50);   /* MOVE SENSE RECEIVED       * 06100000
@DO9FA   MVC   0(2,@5),48(@7)                                     0203  06110000
*           BUFR(80:81) = WKAREA(81:82); /* MOVE SENSE EXPECTED       * 06120000
         MVC   79(2,@5),80(@7)                                    0204  06130000
*           R5 = R5+3;                   /* STEP PRINT BUFFER POINTER * 06140000
         AH    @5,@D3                                             0205  06150000
*           R7 = R7+2;                   /* STEP WORK AREA POINTER    * 06160000
         AH    @7,@D12                                            0206  06170000
*         END;                           /* END OF SENSE FORMAT RTN.  * 06180000
*         RELEASE(R4);                   /* RELEASE SENSE COUNT REG.  * 06190000
         BCT   @4,@DO9FA                                          0207  06200000
@DO9F9   EQU   *                                                  0207  06210000
* PRT018:                                                               06220000
*         IF DATA = '0'B THEN            /* DATA RELEVANT             * 06230000
PRT018   L     @4,4(0,@6)                                         0209  06240000
         TM    0(@4),B'00000001'                                  0209  06250000
*           GO TO PRT021;                /* YES-GO TO PRINT ROUTINE   * 06260000
         BC    08,PRT021                                          0210  06270000
*         BUFR(1:5) = 'DATA-';           /* SET DATA PREFIX           * 06280000
         MVC   0(5,@5),@C24                                       0211  06290000
*         R5 = R5+5;                     /* INCREMENT PRT BUFFER PTR  * 06300000
         AH    @5,@D8                                             0212  06310000
*         RESTRICT(R4,R9);                                              06320000
*         R4 = ADDR(BUFFER2);            /* SET MAXIMUM BUFFER SIZE   * 06330000
         LA    @4,BUFFERS+84                                      0214  06340000
*         R4 = R4-(R5);                  /* SET BUFFER RESIDUE        * 06350000
         LR    @F,@5                                              0215  06360000
         LCR   @F,@F                                              0215  06370000
         AR    @4,@F                                              0215  06380000
*         R4 = (R4-8)/2;                 /* DIVIDE RESIDUE BY 2       * 06390000
         LR    @E,@4                                              0216  06400000
         SH    @E,@D6                                             0216  06410000
         SRDA  @E,32                                              0216  06420000
         LA    @0,2                                               0216  06430000
         DR    @E,@0                                              0216  06440000
         LR    @4,@F                                              0216  06450000
*         R9 = DTACNT;                   /* SET DATA CNT              * 06460000
         L     @8,4(0,@6)                                         0217  06470000
         SR    @9,@9                                              0217  06480000
         IC    @9,2(0,@8)                                         0217  06490000
*         IF R4 ^< R9 THEN               /* DATA COUNT > RESIDUE      * 06500000
         CR    @4,@9                                              0218  06510000
*           GO TO PRT019;                /* NO-GO TO DATA CONVERT     * 06520000
         BC    10,PRT019                                          0219  06530000
*         R9 = R4;                       /* USED RESIDUE AS DATA CNT  * 06540000
         LR    @9,@4                                              0220  06550000
* PRT019:                                                               06560000
*         R9 = R9 + R9;                  /* DOUBLE COUNT              * 06570000
PRT019   AR    @9,@9                                              0221  06580000
*         WKAREA(1:30) = RECEIV(1:30);   /* GET RECEIVED DATA         * 06590000
         L     @8,4(0,@6)                                         0222  06600000
         L     @8,24(0,@8)         A00021                         0222  06610000
         MVC   0(30,@7),0(@8)                                     0222  06620000
*         R4 = R9;                                                      06630000
         LR    @4,@9                                              0223  06640000
*         R9 = ADDR(LINK4);              /* SET LINK POINTER          * 06650000
         LA    @9,LINK4                                           0224  06660000
*         GO TO CONVERT2;                /* GO TO CONVERT ROUTINE     * 06670000
         BC    15,CONVERT2                                        0225  06680000
* LINK4:                                                                06690000
*         BUFR(1:R4) = WKAREA(33:R4);    /* SET DATA IN PRINT BUFFER  * 06700000
LINK4    LA    @E,32(0,@7)                                        0226  06710000
         LR    @8,@4                                              0226  06720000
         BCTR  @8,0                                               0226  06730000
         LR    @A,@5                                              0226  06740000
         EX    @8,@MVC                                            0226  06750000
*         IF SNGLFLG = '1'B THEN         /* SINGLE LINE OF PRINT      * 06760000
         L     @8,4(0,@6)                                         0227  06770000
         TM    1(@8),B'10000000'                                  0227  06780000
*           GO TO PRT020;                /* YES-GO PRINT LINE         * 06790000
         BC    01,PRT020                                          0228  06800000
*         WKAREA(1:30) = EXPECT(1:30);   /* SET EXPECTED DATA IN WKARA* 06810000
         L     @C,28(0,@8)         A00021                         0229  06820000
         MVC   0(30,@7),0(@C)                                     0229  06830000
*         R9 = ADDR(LINK5);              /* SET LINK ADDRESS          * 06840000
         LA    @9,LINK5                                           0230  06850000
*         GO TO CONVERT2;                /* GO TO CONVERT ROUTINE     * 06860000
         BC    15,CONVERT2                                        0231  06870000
* LINK5:                                                                06880000
*         R5 = R5+79;                    /* SET DATA MOVE POINTER     * 06890000
LINK5    AH    @5,@D13                                            0232  06900000
*         BUFR(1:R4) = WKAREA(33:R4);    /* SET EXPECTED DATA IN BUFR * 06910000
         LA    @E,32(0,@7)                                        0233  06920000
         LR    @8,@4                                              0233  06930000
         BCTR  @8,0                                               0233  06940000
         LR    @A,@5                                              0233  06950000
         EX    @8,@MVC                                            0233  06960000
*         R5 = R5-(79);                  /* RESET DATA MOVE POINTER   * 06970000
         LA    @F,79                                              0234  06980000
         LCR   @F,@F                                              0234  06990000
         AR    @5,@F                                              0234  07000000
* PRT020:                                                               07010000
*         R5 = R4+R5+1;                  /* AJUST PRINT BUFFER POINTER* 07020000
PRT020   LA    @F,1                                               0235  07030000
         AR    @F,@5                                              0235  07040000
         AR    @F,@4                                              0235  07050000
         LR    @5,@F                                              0235  07060000
* PRT021:                                                               07070000
*         PRTBUFR(1:80) = BUFFERS(5:84); /* SET PRINT BUFFER          * 07080000
PRT021   MVC   PRTBUFR(80),BUFFERS+4                              0236  07090000
*   GEN(  PWRT  SIZE=80);                /* INVOKE PRINT ROUTINE      * 07100000
           PWRT  SIZE=80                                                07110000
         DS    0H                                                       07120000
*         IF SNGLFLG = '1'B THEN         /* SINGLE LINE PRINT         * 07130000
         L     @8,4(0,@6)                                         0238  07140000
         TM    1(@8),B'10000000'                                  0238  07150000
*           GO TO PRT009;                /* YES-CHECK LAST ENTRY      * 07160000
         BC    01,PRT009                                          0239  07170000
*         BUFFERS(6:77) = BUFFER2(1:72); /* SET NEXT LINE OF PRINT    * 07180000
         MVC   BUFFERS+5(72),BUFFERS+84                           0240  07190000
*         GO TO PRT008;                  /* GO PROCESS                * 07200000
         BC    15,PRT008                                          0241  07210000
*   GEN(EJECT);                                                         07220000
         EJECT                                                          07230000
         DS    0H                                                       07240000
*         /************************************************************ 07250000
*         /* THE FOLLOWING ROUTINE WILL PRINT COMMENT REQUESTS        * 07260000
*         /************************************************************ 07270000
* PRT022:                                                               07280000
*         IF OVRDFLG = '1'B THEN         /* OVER-RIDE ON              * 07290000
PRT022   TM    0(@6),B'00010000'                                  0243  07300000
*           GO TO PRT009;                /* YES-GO CHECK LAST ENTRY   * 07310000
         BC    01,PRT009                                          0244  07320000
*         IF COUNT ^> '50'X THEN         /* COUNT > 80                * 07330000
         CLI   3(@6),X'50'                                        0245  07340000
*           GO TO PRT023;                /* NO-SETUP FOR PRINT        * 07350000
         BC    12,PRT023                                          0246  07360000
*         COUNT = '50'X;                 /* SET COUNT TO 80           * 07370000
         MVI   3(@6),X'50'                                        0247  07380000
* PRT023:                                                               07390000
*         R9 = COUNT;                    /* SET NEEDED COUNT          * 07400000
PRT023   SR    @9,@9                                              0248  07410000
         IC    @9,3(0,@6)                                         0248  07420000
*         BUFR(1:R9) = AREA(1:R9);         /* SET PRINT BUFFER        * 07430000
         L     @8,4(0,@6)                                         0249  07440000
         LR    @E,@8                                              0249  07450000
         LR    @C,@9                                              0249  07460000
         BCTR  @C,0                                               0249  07470000
         LR    @A,@5                                              0249  07480000
         EX    @C,@MVC                                            0249  07490000
*         GO TO PRT008;                    /* GO TO PRINT ROUTINE     * 07500000
         BC    15,PRT008                                          0250  07510000
*   GEN(EJECT);                                                         07520000
         EJECT                                                          07530000
         DS    0H                                                       07540000
*         /************************************************************ 07550000
*         /* THE FOLLOWING ROUTINE CONTAIN COMMON CONVERT MACRO'S     * 07560000
*         /* REFERENCED BY THIS MODULE.                               * 07570000
*         /************************************************************ 07580000
* CONVERT1:                                   /* CONVERT BUFFER2 FROM * 07590000
*   GEN(  OLDCONV HE,BUFFER2,BUFFER2+10,10);                            07600000
CONVERT1   OLDCONV HE,BUFFER2,BUFFER2+10,10                             07610000
         DS    0H                                                       07620000
*         GO TO R9;                                                     07630000
         BCR   15,@9                                              0253  07640000
*                                                                       07650000
* CONVERT2:                                   /*CONVERT WKAREA FROM   * 07660000
*   GEN(  OLDCONV HE,WKARA1,WKARA1+32,32);                              07670000
CONVERT2   OLDCONV HE,WKARA1,WKARA1+32,32                               07680000
         DS    0H                                                       07690000
*         GO TO R9;                                                     07700000
         BCR   15,@9                                              0255  07710000
* FINISH:                                                               07720000
*         RETURN;                        /* RETURN TO CALLER          * 07730000
*         END   IFDOLT08;                                               07740000
@EL01    L     @D,4(0,@D)                                         0257  07750000
         L     @E,12(0,@D)                                        0257  07760000
         LM    @0,@C,20(@D)                                       0257  07770000
         BCR   15,@E                                              0257  07780000
@DATA1   EQU   *                                                        07790000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           07800000
@1       EQU   01                                                       07810000
@2       EQU   02                                                       07820000
@3       EQU   03                                                       07830000
@4       EQU   04                                                       07840000
@5       EQU   05                                                       07850000
@6       EQU   06                                                       07860000
@7       EQU   07                                                       07870000
@8       EQU   08                                                       07880000
@9       EQU   09                                                       07890000
@A       EQU   10                                                       07900000
@B       EQU   11                                                       07910000
@C       EQU   12                                                       07920000
@D       EQU   13                                                       07930000
@E       EQU   14                                                       07940000
@F       EQU   15                                                       07950000
@D1      DC    H'1'                                                     07960000
@D2      DC    H'9'                                                     07970000
@D3      DC    H'3'                                                     07980000
@D4      DC    H'10'                                                    07990000
@D5      DC    H'13'                                                    08000000
@D6      DC    H'8'                                                     08010000
@D7      DC    H'6'                                                     08020000
@D8      DC    H'5'                                                     08030000
@D9      DC    H'7'                                                     08040000
@D10     DC    H'17'                                                    08050000
@D11     DC    H'4'                                                     08060000
@D12     DC    H'2'                                                     08070000
@D13     DC    H'79'                                                    08080000
@MVC     MVC   0(1,@A),0(@E)                                            08090000
         DS    0F                                                       08100000
@C16     DC    C'CCW-'                                                  08110000
@C23     DC    C'SNS-'                                                  08120000
@C21     DC    C'CSW-XX'                                                08130000
@C10     DC    C'BUG'                                                   08140000
@C15     DC    C'IC-'                                                   08150000
@C17     DC    C'I/O ADDR-'                                             08160000
@C18     DC    C'RCVD '                                                 08170000
@C19     DC    C'XPCTD'                                                 08180000
@C20     DC    C'CC-'                                                   08190000
@C22     DC    C'XXXXXX XXXX XXXX '                                     08200000
@C24     DC    C'DATA-'                                                 08210000
         DS    0D                                                       08220000
@DATA    EQU   *                                                        08230000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   08240000
X        EQU   00000000            FULLWORD INTEGER                     08250000
R0       EQU   00000000            FULLWORD POINTER REGISTER            08260000
R1       EQU   00000001            FULLWORD POINTER REGISTER            08270000
R2       EQU   00000002            FULLWORD POINTER REGISTER            08280000
R3       EQU   00000003            FULLWORD POINTER REGISTER            08290000
R4       EQU   00000004            FULLWORD POINTER REGISTER            08300000
R5       EQU   00000005            FULLWORD POINTER REGISTER            08310000
R6       EQU   00000006            FULLWORD POINTER REGISTER            08320000
R7       EQU   00000007            FULLWORD POINTER REGISTER            08330000
R12      EQU   00000012            FULLWORD POINTER REGISTER            08340000
R13      EQU   00000013            FULLWORD POINTER REGISTER            08350000
R14      EQU   00000014            FULLWORD POINTER REGISTER            08360000
R15      EQU   00000015            FULLWORD POINTER REGISTER            08370000
R9       EQU   00000009            FULLWORD POINTER REGISTER            08380000
A00004   EQU   00000000            8 BYTE(S) ON WORD                    08390000
A00005   EQU   A00004+00000000     6 BYTE(S)                            08400000
UNIT     EQU   A00004+00000006     2 BYTE(S)                            08410000
BUFFERS  EQU   @DATA+00000072      164 BYTE(S) ON DWORD                 08420000
A00011   EQU   BUFFERS+00000000    FULLWORD POINTER                     08430000
FRMCON   EQU   BUFFERS+00000004    1 BYTE(S)                            08440000
PRTBUFR1 EQU   BUFFERS+00000005    79 BYTE(S)                           08450000
BUFFER2  EQU   BUFFERS+00000084    80 BYTE(S)                           08460000
BUFR     EQU   00000000            79 BYTE(S)                           08470000
A00014   EQU   00000000            8 BYTE(S) ON WORD                    08480000
A00015   EQU   A00014+00000000     1 BYTE(S)                            08490000
LASTFLG  EQU   A00014+00000000     1 BIT(S)                             08500000
HEADFLG  EQU   A00014+00000000     1 BIT(S)                             08510000
RSLTFLG  EQU   A00014+00000000     1 BIT(S)                             08520000
OVRDFLG  EQU   A00014+00000000     1 BIT(S)                             08530000
COMFLG   EQU   A00014+00000000     1 BIT(S)                             08540000
ERRFLG   EQU   A00014+00000000     1 BIT(S)                             08550000
A00016   EQU   A00014+00000000     2 BIT(S)                             08560000
FRMCNTL  EQU   A00014+00000001     1 BYTE(S)                            08570000
A00017   EQU   A00014+00000002     1 BYTE(S)                            08580000
COUNT    EQU   A00014+00000003     1 BYTE(S)                            08590000
SUBCHK   EQU   A00014+00000004     FULLWORD POINTER                     08600000
A00018   EQU   00000000            8 BYTE(S) ON WORD                    08610000
A00019   EQU   A00018+00000000     1 BYTE(S)                            08620000
DEVFLG   EQU   A00018+00000000     1 BIT(S)                             08630000
LSTFLG   EQU   A00018+00000000     1 BIT(S)                             08640000
A00020   EQU   A00018+00000000     1 BIT(S)                             08650000
CCWFLG   EQU   A00018+00000000     1 BIT(S)                             08660000
LSTCCW   EQU   A00018+00000001     7 BYTE(S)                            08670000
AREA     EQU   00000000            80 BYTE(S)                           08680000
A00021   EQU   00000000            32 BYTE(S) ON WORD                   08690000
A00022   EQU   A00021+00000000     4 BYTE(S)                            08700000
RELIF    EQU   A00021+00000000     1 BYTE(S)                            08710000
RELAD    EQU   A00021+00000000     1 BIT(S)                             08720000
CC       EQU   A00021+00000000     1 BIT(S)                             08730000
CSWS1    EQU   A00021+00000000     1 BIT(S)                             08740000
CSWS2    EQU   A00021+00000000     1 BIT(S)                             08750000
CSWC     EQU   A00021+00000000     1 BIT(S)                             08760000
SNS      EQU   A00021+00000000     1 BIT(S)                             08770000
A00023   EQU   A00021+00000000     1 BIT(S)                             08780000
DATA     EQU   A00021+00000000     1 BIT(S)                             08790000
SNGLFLG  EQU   A00021+00000001     1 BIT(S)                             08800000
A00024   EQU   A00021+00000001     7 BIT(S)                             08810000
DTACNT   EQU   A00021+00000002     1 BYTE(S)                            08820000
SCOUNT   EQU   A00021+00000003     1 BYTE(S)                            08830000
TECBAD   EQU   A00021+00000004     FULLWORD POINTER                     08840000
EXPDINFO EQU   A00021+00000008     16 BYTE(S)                           08850000
REDTADR  EQU   A00021+00000024     FULLWORD POINTER                     08860000
EXPDTADR EQU   A00021+00000028     FULLWORD POINTER                     08870000
RECEIV   EQU   00000000            256 BYTE(S)                          08880000
EXPECT   EQU   00000000            256 BYTE(S)                          08890000
WKARA1   EQU   @DATA+00000236      96 BYTE(S)                           08900000
WKAREA   EQU   00000000            96 BYTE(S)                           08910000
A00025   EQU   00000000            8 BYTE(S) ON WORD                    08920000
A00026   EQU   A00025+00000000     FULLWORD POINTER                     08930000
OLTSVAD  EQU   A00025+00000004     FULLWORD POINTER                     08940000
A00027   EQU   00000000            36 BYTE(S) ON WORD                   08950000
A00028   EQU   A00027+00000000     32 BYTE(S)                           08960000
IDAD     EQU   A00027+00000032     FULLWORD POINTER                     08970000
A00029   EQU   00000000            85 BYTE(S) ON WORD                   08980000
A00030   EQU   A00029+00000000     76 BYTE(S)                           08990000
ID       EQU   A00029+00000076     8 BYTE(S)                            09000000
ROUTINE  EQU   A00029+00000084     1 BYTE(S)                            09010000
         ORG   @DATA+00000332                                           09020000
XLATE1   EQU   *                   10 BYTE(S)                           09030000
         DC    C'0123456789'                                            09040000
         ORG   @DATA+00000344                                           09050000
MSGMOD08 EQU   *                   FULLWORD POINTER                     09060000
         DC    VL4(IFDMSG08)                                            09070000
A00031   EQU   00000000            4 BYTE(S) ON WORD                    09080000
MSG129   EQU   A00031+00000000     FULLWORD POINTER                     09090000
A00032   EQU   00000000            57 BYTE(S) ON WORD                   09100000
A00033   EQU   A00032+00000000     39 BYTE(S)                           09110000
MSGID    EQU   A00032+00000039     6 BYTE(S)                            09120000
A00034   EQU   A00032+00000045     1 BYTE(S)                            09130000
MSGRTN   EQU   A00032+00000046     2 BYTE(S)                            09140000
A00035   EQU   A00032+00000048     6 BYTE(S)                            09150000
MSGUNIT  EQU   A00032+00000054     3 BYTE(S)                            09160000
A00036   EQU   00000000            20 BYTE(S) ON WORD                   09170000
A00037   EQU   A00036+00000000     4 BYTE(S)                            09180000
RCVDINFO EQU   A00036+00000004     16 BYTE(S)                           09190000
         ORG   @DATA                                                    09200000
         DS    00000368C                                                09210000
@TEMPS   DS    0F                                                       09220000
DSECT08  IFDCOM                                                         09230000
A00000   EQU   CESWT2+00000000     1 BYTE(S) ON WORD                    09240000
A00001   EQU   A00000+00000000     2 BIT(S)                             09250000
FECOND   EQU   A00000+00000000     1 BIT(S)                             09260000
A00002   EQU   CESWT+00000000      1 BYTE(S) ON WORD                    09270000
A00003   EQU   A00002+00000000     6 BIT(S)                             09280000
FERINT   EQU   A00002+00000000     1 BIT(S)                             09290000
A00006   EQU   CHASCT+00000000     4 BYTE(S) ON WORD                    09300000
A00007   EQU   A00006+00000000     2 BYTE(S)                            09310000
A00008   EQU   A00006+00000002     1 BYTE(S)                            09320000
A00009   EQU   A00006+00000002     7 BIT(S)                             09330000
FERCOM   EQU   A00006+00000002     1 BIT(S)                             09340000
CHASCT3  EQU   A00006+00000003     1 BYTE(S)                            09350000
CHASCTB  EQU   A00006+00000003     1 BIT(S)                             09360000
A00010   EQU   A00006+00000003     5 BIT(S)                             09370000
ERRLPB   EQU   A00006+00000003     1 BIT(S)                             09380000
A00012   EQU   CESWT5+00000000     1 BYTE(S) ON WORD                    09390000
A00013   EQU   A00012+00000000     2 BIT(S)                             09400000
FFEFLG   EQU   A00012+00000000     1 BIT(S)                             09410000
@DATEND  EQU   *                                                        09420000
FINISH   EQU   @EL01                                                    09430000
         END   IFDOLT08,(C'PL/S',1400,76158)                            09440000
