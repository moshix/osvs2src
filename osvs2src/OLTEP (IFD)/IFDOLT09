         LCLA  &T,&SPN                                            0001  00010000
.@001    ANOP                                                     0001  00020000
IFDOLT09 CSECT ,                                                  0001  00030000
         BC    15,24(0,@F)                                              00040000
         DC    C'IFDOLT09 14 SEP 73'                             0001  00050000
         ST    @E,12(0,@D)                                        0001  00060000
         STM   @0,@C,20(@D)                                       0001  00070000
         BALR  @B,0                                               0001  00080000
@PSTART  DS    0H                                                 0001  00090000
         USING @PSTART+00000,@B                                   0001  00100000
         ST    @D,@SAV001+4                                       0001  00110000
         LA    @F,@SAV001                                         0001  00120000
         ST    @F,8(0,@D)                                         0001  00130000
         LR    @D,@F                                              0001  00140000
*         R5 = CHKFLD;                   /* SET REG 5 TO CHECKFLD PTR * 00150000
         L     @5,0(0,@1)                                         0018  00160000
*         R6 = TECBAD;                   /* SET REG 6 TO TECB PTR.    * 00170000
         L     @6,4(0,@5)                                         0019  00180000
*         ERRFLG = '00'X;                /* CLEAR ERROR FLAG FIELD    * 00190000
         MVI   ERRFLG,X'00'                                       0020  00200000
*   GENERATE;                                                           00210000
         TM    0(5),X'FC'                                               00220000
         BZ    CMP006                                                   00230000
         DS    0H                                                       00240000
*         IF RELVT2 = '0'B THEN          /* CONDITION CODE TEST       * 00250000
         TM    0(@5),B'01000000'                                  0022  00260000
*           GO TO CMP001;                /* NO-BRANCH TO COMMAND      * 00270000
         BC    08,CMP001                                          0023  00280000
*                                        /* ADDRESS TEST.             * 00290000
*         IF EXPCC = TRECC THEN          /* VALID CONDITION CODE      * 00300000
         CLC   8(1,@5),4(@6)                                      0024  00310000
*           GO TO CMP001;                /* YES-BRANCH TO COMMAND     * 00320000
         BC    08,CMP001                                          0025  00330000
*                                        /* ADDRESS TEST              * 00340000
*         ERRFLG = ERRFLG | '40'X;       /* NO-SET ERROR FLAG         * 00350000
         OI    ERRFLG,X'40'                                       0026  00360000
* CMP001:                                                               00370000
*         IF RELVT1 = '0'B THEN          /* COMMAND ADDRESS TEST      * 00380000
CMP001   TM    0(@5),B'10000000'                                  0027  00390000
*           GO TO CMP002;                /* NO-BRANCH TO 1ST CSW      * 00400000
         BC    08,CMP002                                          0028  00410000
*                                        /* STATUS TEST.              * 00420000
*         IF ADDR1 = TRECSW1 THEN        /* VALID COMMAND ADDRESS     * 00430000
         MVC   @TEMP3+1(3),5(@6)                                  0029  00440000
         L     @F,@TEMP3                                          0029  00450000
         MVC   @TEMP3+1(3),9(@5)                                  0029  00460000
         C     @F,@TEMP3                                          0029  00470000
*           GO TO CMP002;                /* YES-BRANCH TO 1ST CSW     * 00480000
         BC    08,CMP002                                          0030  00490000
*                                        /* STATUS TEST               * 00500000
*         ERRFLG = ERRFLG | '80'X;       /* NO-SET ERROR FLAG         * 00510000
         OI    ERRFLG,X'80'                                       0031  00520000
* CMP002:                                                               00530000
*         IF RELVT3 = '0'B THEN          /* 1ST CSW STATUS TEST       * 00540000
CMP002   TM    0(@5),B'00100000'                                  0032  00550000
*           GO TO CMP003;                /* NO-BRANCH TO 2ND CSW      * 00560000
         BC    08,CMP003                                          0033  00570000
*                                        /* STATUS TEST.              * 00580000
*         IF STATUS1 = RESTAT1 THEN      /* VALID CSW STATUS          * 00590000
         CLC   12(1,@5),8(@6)                                     0034  00600000
*           GO TO CMP003;                /* YES-BRANCH TO 2ND CSW     * 00610000
         BC    08,CMP003                                          0035  00620000
*                                        /* STATUS TEST.              * 00630000
*         ERRFLG = ERRFLG | '20'X;       /* NO-SET ERROR FLAG         * 00640000
         OI    ERRFLG,X'20'                                       0036  00650000
* CMP003:                                                               00660000
*         IF RELVT4 = '0'B THEN          /* 2ND CSW STATUS TEST       * 00670000
CMP003   TM    0(@5),B'00010000'                                  0037  00680000
*           GO TO CMP004;                /* NO-BRANCH TO CSW COUNT    * 00690000
         BC    08,CMP004                                          0038  00700000
*                                        /* TEST.                     * 00710000
*         IF STATUS2 = RESTAT2 THEN      /* VALID CSW STATUS          * 00720000
         CLC   13(1,@5),9(@6)                                     0039  00730000
*           GO TO CMP004;                /* YES-BRANCH TO CSW COUNT   * 00740000
         BC    08,CMP004                                          0040  00750000
*                                        /* TEST.                     * 00760000
*         ERRFLG = ERRFLG | '10'X;       /* NO-SET ERROR FLAG         * 00770000
         OI    ERRFLG,X'10'                                       0041  00780000
* CMP004:                                                               00790000
*         IF RELVT5 = '0'B THEN          /* CSW COUNT TEST            * 00800000
CMP004   TM    0(@5),B'00001000'                                  0042  00810000
*           GO TO CMP005;                /* NO-BRANCH TO SENSE DATA   * 00820000
         BC    08,CMP005                                          0043  00830000
*                                        /* TEST.                     * 00840000
*         IF COUNT = RECNT THEN          /* VALID CSW COUNT           * 00850000
         CLC   14(2,@5),10(@6)                                    0044  00860000
*           GO TO CMP005;                /* YES-BRANCH TO SENSE DATA  * 00870000
         BC    08,CMP005                                          0045  00880000
*                                        /* TEST.                     * 00890000
*         ERRFLG = ERRFLG | '08'X;       /* NO-SET ERROR FLAG         * 00900000
         OI    ERRFLG,X'08'                                       0046  00910000
* CMP005:                                                               00920000
*         IF RELVT6 = '0'B THEN          /* SENSE DATA TEST           * 00930000
CMP005   TM    0(@5),B'00000100'                                  0047  00940000
*           GO TO CMP006;                /* NO-BRANCH TO DATA COMPARE * 00950000
         BC    08,CMP006                                          0048  00960000
*                                        /* TEST.                     * 00970000
*         IF EXPSNS(1:SNSCNT) = RECSNS(1:SNSCNT) THEN  /* VALID SENSE * 00980000
         LA    @E,12(0,@6)                                        0049  00990000
         SR    @4,@4                                              0049  01000000
         IC    @4,3(0,@5)                                         0049  01010000
         BCTR  @4,0                                               0049  01020000
         LA    @A,16(0,@5)                                        0049  01030000
         EX    @4,@CLC                                            0049  01040000
*           GO TO CMP006;                /* DATA-YES-BRANCH TO DATA   * 01050000
         BC    08,CMP006                                          0050  01060000
*                                        /* COMPARE TEST.             * 01070000
*         ERRFLG = ERRFLG | '04'X;       /* NO-SET ERROR FLAG         * 01080000
         OI    ERRFLG,X'04'                                       0051  01090000
*                                                                       01100000
*         IF SNSERR ^= 'FF'X THEN        /* ERROR SENSE TEST VALID    * 01110000
         CLI   12(@6),X'FF'                                       0052  01120000
*           GO TO CMP006;                /* YES-BRANCH TO DATA COMPARE* 01130000
         BC    07,CMP006                                          0053  01140000
*                                        /* TEST.                     * 01150000
*         ERRFLG = ERRFLG | '02'X;       /* NO-SET ERROR FLAG.        * 01160000
         OI    ERRFLG,X'02'                                       0054  01170000
* CMP006:                                                               01180000
*         IF RELVT8 = '0'B THEN          /* DATA COMPARE TEST         * 01190000
CMP006   TM    0(@5),B'00000001'                                  0055  01200000
*           GO TO CMP007;                /* NO-BRANCH TO EXIT ROUTINE * 01210000
         BC    08,CMP007                                          0056  01220000
*         IF RECEIV(1:CNT) = EXPECT(1:CNT) THEN       /* VALID DATA   * 01230000
         L     @4,28(0,@5)                                        0057  01240000
         LR    @E,@4                                              0057  01250000
         SR    @7,@7                                              0057  01260000
         IC    @7,2(0,@5)                                         0057  01270000
         BCTR  @7,0                                               0057  01280000
         L     @C,24(0,@5)                                        0057  01290000
         LR    @A,@C                                              0057  01300000
         EX    @7,@CLC                                            0057  01310000
*           GO TO CMP007;                /* COMPARE-YES-BRANCH TO     * 01320000
         BC    08,CMP007                                          0058  01330000
*                                        /* EXIT ROUTINE              * 01340000
*         ERRFLG = ERRFLG | '01'X;       /* NO-SET ERROR FLAG         * 01350000
         OI    ERRFLG,X'01'                                       0059  01360000
* CMP007:                                                               01370000
*         IF ERRFLG = '00'X THEN         /* IF NO ERRORS OCCURRED     * 01380000
CMP007   CLI   ERRFLG,X'00'                                       0060  01390000
*           GO TO CMP008;                /* BRANCH TO NORMAL RETURN   * 01400000
         BC    08,CMP008                                          0061  01410000
*         SAVRTN = ERRTNAD;              /* ELSE-SET ERROR RETURN ADR.* 01420000
         L     @4,4(0,@D)                                         0062  01430000
         MVC   12(4,@4),4(@1)                                     0062  01440000
*         R15 = ERRFLG;             /* SET ERROR RETURN FLAGS         * 01450000
         SR    @F,@F                                              0063  01460000
         IC    @F,ERRFLG                                          0063  01470000
*           GO TO CMP009;                /* BRANCH TO RETURN          * 01480000
         BC    15,CMP009                                          0064  01490000
* CMP008:                                                               01500000
*         R15 = '00'X;                   /* SET NORMAL RETURN CODE    * 01510000
CMP008   LA    @F,X'00'                                           0065  01520000
* CMP009:                                                               01530000
*         RETURN;                        /* RETURN TO CALLER          * 01540000
*         END   IFDOLT09;                /* END OF COMPARE MODULE     * 01550000
@EL01    L     @D,4(0,@D)                                         0067  01560000
         L     @E,12(0,@D)                                        0067  01570000
         LM    @0,@C,20(@D)                                       0067  01580000
         BCR   15,@E                                              0067  01590000
@DATA1   EQU   *                                                        01600000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           01610000
@1       EQU   01                                                       01620000
@2       EQU   02                                                       01630000
@3       EQU   03                                                       01640000
@4       EQU   04                                                       01650000
@5       EQU   05                                                       01660000
@6       EQU   06                                                       01670000
@7       EQU   07                                                       01680000
@8       EQU   08                                                       01690000
@9       EQU   09                                                       01700000
@A       EQU   10                                                       01710000
@B       EQU   11                                                       01720000
@C       EQU   12                                                       01730000
@D       EQU   13                                                       01740000
@E       EQU   14                                                       01750000
@F       EQU   15                                                       01760000
@CLC     CLC   0(1,@A),0(@E)                                            01770000
         DS    0F                                                       01780000
         DS    0D                                                       01790000
@DATA    EQU   *                                                        01800000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   01810000
X        EQU   00000000            FULLWORD INTEGER                     01820000
R1       EQU   00000001            FULLWORD POINTER REGISTER            01830000
R5       EQU   00000005            FULLWORD POINTER REGISTER            01840000
R6       EQU   00000006            FULLWORD POINTER REGISTER            01850000
R13      EQU   00000013            FULLWORD POINTER REGISTER            01860000
R14      EQU   00000014            FULLWORD POINTER REGISTER            01870000
R15      EQU   00000015            FULLWORD POINTER REGISTER            01880000
A00000   EQU   00000000            8 BYTE(S) ON WORD                    01890000
A00001   EQU   A00000+00000000     FULLWORD POINTER                     01900000
CALLSA   EQU   A00000+00000004     FULLWORD POINTER                     01910000
A00002   EQU   00000000            16 BYTE(S) ON WORD                   01920000
A00003   EQU   A00002+00000000     12 BYTE(S)                           01930000
SAVRTN   EQU   A00002+00000012     FULLWORD POINTER                     01940000
A00004   EQU   00000000            8 BYTE(S) ON WORD                    01950000
CHKFLD   EQU   A00004+00000000     FULLWORD POINTER                     01960000
ERRTNAD  EQU   A00004+00000004     FULLWORD POINTER                     01970000
A00005   EQU   00000000            32 BYTE(S) ON WORD                   01980000
A00006   EQU   A00005+00000000     4 BYTE(S)                            01990000
RELVT    EQU   A00005+00000000     1 BYTE(S)                            02000000
RELVT1   EQU   A00005+00000000     1 BIT(S)                             02010000
RELVT2   EQU   A00005+00000000     1 BIT(S)                             02020000
RELVT3   EQU   A00005+00000000     1 BIT(S)                             02030000
RELVT4   EQU   A00005+00000000     1 BIT(S)                             02040000
RELVT5   EQU   A00005+00000000     1 BIT(S)                             02050000
RELVT6   EQU   A00005+00000000     1 BIT(S)                             02060000
RELVT7   EQU   A00005+00000000     1 BIT(S)                             02070000
RELVT8   EQU   A00005+00000000     1 BIT(S)                             02080000
A00007   EQU   A00005+00000001     1 BYTE(S)                            02090000
CNT      EQU   A00005+00000002     1 BYTE(S)                            02100000
SNSCNT   EQU   A00005+00000003     1 BYTE(S)                            02110000
TECBAD   EQU   A00005+00000004     FULLWORD POINTER                     02120000
A00008   EQU   A00005+00000008     4 BYTE(S)                            02130000
EXPCC    EQU   A00005+00000008     1 BYTE(S)                            02140000
ADDR1    EQU   A00005+00000009     3  BYTE  POINTER                     02150000
STATUS1  EQU   A00005+00000012     1 BYTE(S)                            02160000
STATUS2  EQU   A00005+00000013     1 BYTE(S)                            02170000
COUNT    EQU   A00005+00000014     2 BYTE(S)                            02180000
EXPSNS   EQU   A00005+00000016     8 BYTE(S)                            02190000
RECDATA  EQU   A00005+00000024     FULLWORD POINTER                     02200000
EXPDATA  EQU   A00005+00000028     FULLWORD POINTER                     02210000
RECEIV   EQU   00000000            256 BYTE(S)                          02220000
EXPECT   EQU   00000000            256 BYTE(S)                          02230000
A00009   EQU   00000000            20 BYTE(S) ON WORD                   02240000
A00010   EQU   A00009+00000000     4 BYTE(S)                            02250000
A00011   EQU   A00009+00000004     4 BYTE(S)                            02260000
TRECC    EQU   A00009+00000004     1 BYTE(S)                            02270000
TRECSW1  EQU   A00009+00000005     3 BYTE(S)                            02280000
RESTAT1  EQU   A00009+00000008     1 BYTE(S)                            02290000
RESTAT2  EQU   A00009+00000009     1 BYTE(S)                            02300000
RECNT    EQU   A00009+00000010     2 BYTE(S)                            02310000
RECSNS   EQU   A00009+00000012     8 BYTE(S)                            02320000
SNSERR   EQU   A00009+00000012     1 BYTE(S)                            02330000
A00012   EQU   A00009+00000013     7 BYTE(S)                            02340000
ERRFLG   EQU   @DATA+00000072      1 BYTE(S)                            02350000
         DS    00000073C                                                02360000
@TEMPS   DS    0F                                                       02370000
@TEMP3   DC    F'0'                                                     02380000
         IFDPATCH                      PATCH AREA                       02390000
@DATEND  EQU   *                                                        02400000
CMP009   EQU   @EL01                                                    02410000
         END   IFDOLT09                                                 02420000
