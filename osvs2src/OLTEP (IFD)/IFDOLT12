         TITLE 'IFDOLT12 - OLTEP LOADER'                                00100002
IFDOLT12 CSECT                                                          00200002
         ENTRY OLTDCB                   OLTCDSDD DCB             Y02008 00200402
*********************************************************************** 00200902
*                                                                     * 00201802
* MODULE NAME= IFDOLT12                                               * 00201902
*                                                                     * 00202002
* DESCRIPTIVE NAME= OLTEP LOADER                                      * 00202102
*                                                                     * 00202202
* COPYRIGHT= NONE                                                     * 00202302
*                                                                     * 00202402
* STATUS: CHANGE LEVEL 000     SUPPORT CODE: X02008                   * 00202702
*                                                                     * 00203602
* FUNCTION:                                                           * 00204502
*           1. CALCULATES THE SIZE OF THE MODULE (OLT AND PLINK).     * 00205402
*              IF IT IS NOT A CDS LOAD, IT WILL PASS THE SIZE BACK    * 00206302
*              TO THE CALLER. IF IT IS A CDS LOAD, IT WILL LOAD THE   * 00207202
*              REQUESTED NUMBER OF BYTES INTO CORE.                   * 00208102
*                                                                     * 00209002
*           2. LOADS THE REQUESTED OLT, PLINK OR CDS INFORMATION      * 00209902
*              AND RETURNS THE STARTING ADDRESS OF THE LOADED MODULE  * 00210802
*              TO THE CALLER.                                         * 00211702
*                                                                     * 00212602
* ENTRY POINTS: IFDOLT12                                              * 00213502
*                                                                     * 00214402
* INPUT: UPON ENTRY TO THIS MODULE REGISTER 1 POINTS TO A LIST WITH   * 00215302
*        THE FOLLOWING PARAMETERS:                                    * 00216202
*                   DS    C  INDICATORS FOR TRANSIENT MANAGER         * 00217102
*                   DS    C  MACRO LEVEL                              * 00218002
*                   DS    2C IDENTITY OF MACRO EXPANSION              * 00218902
*                   DS    F  POINTER TO PARAMETER LIST                * 00219802
*        THIS PARAMETER LIST HAS THE FOLLOWING FORMAT:                * 00220702
*                   DS    8C MODULE NAME                              * 00221602
*                   DS    F  POINTER TO WHERE MODULE SHOULD BE LOADED * 00222502
*                   DS    C  FLAGS                                    * 00223402
*                   DS    C  RESERVED FOR FUTURE USE                  * 00224302
*                   DS    H  CDS MODULE COUNT                         * 00225202
*                                                                     * 00226102
* OUTPUT:  REGISTER 0 WILL CONTAIN MODULE SIZE(FOR COMPUTE REQUEST)   * 00227002
*          REGISTER 1 WILL CONTAIN STARTING ADDRESS OF LOADED MODULE. * 00227902
*          REGISTER 15 WILL CONTAIN RETURN CODES:                     * 00228802
*                   X'00'   LOAD SUCCESSFUL/COMPUTE SUCCESSFUL        * 00229702
*                   X'04'   NO END CARD                               * 00230602
*                   X'08'   READ ERROR                                * 00231502
*                   X'0C'   MODULE NOT FOUND                          * 00232402
*                   X'10'   REP CARD ERROR                            * 00233302
*                   X'14'   LOAD CALLED BEFORE COMPUTE                * 00234202
*                   X'18'   ORDER ERROR                               * 00235102
*                                                                     * 00236002
*          THE FOLLOWING MESSAGES ARE OUTPUTTED:                      * 00236902
*                                                                     * 00237802
*                 1. IFD202I  -  THIS MESSAGE WILL INFORM THE USER    * 00238702
*                                THAT AN INVALID REP CARD EXISTS FOR  * 00239602
*                                THE SPECIFIED TEST SECTION.          * 00240502
*                 2. IFD203I  -  THIS MESSAGE TELLS THE USER THAT AN  * 00241402
*                                END OF FILE INDICATION OCCURED       * 00242302
*                                UNEXPECTANTLY. DATASET MAY HAVE BEEN * 00243202
*                                CREATED INCORRECTLY.                 * 00244102
*                 3. IFD205I  -  THIS MESSAGE TELLS THE USER THAT AN  * 00245002
*                                I/O ERROR OCCURED DURING THE LOADING * 00245902
*                                OF THE TEST SECTION.                 * 00246802
*                 4. IFD901I  -  THIS MESSAGE TELLS THE USER THAT THE * 00247702
*                                DD CARD NAMED XXXXXXXX COULD NOT BE  * 00248602
*                                OPENED, THEREFORE THE DATASET IS NOT * 00249502
*                                ACCESSIBLE.                          * 00250402
*                 5. IFD911I  -  THIS MESSAGE TELLS THE USER THAT AN  * 00251302
*                                INVALID OR UNRECOGNIZEABLE CONTROL   * 00252202
*                                CARD HAS BEEN DETECTED. DATASET MAY  * 00253102
*                                HAVE BEEN CREATED INCORRECTLY.       * 00254002
*                                                                     * 00254902
* EXTERNAL ROUTINES:                                                  * 00255802
*                                                                     * 00256702
*          THIS MODULE WILL ISSUE THE FOLLOWING SYSTEM MACROS:        * 00257602
*                                                                     * 00258502
*                 1. OPEN   TO INITIATE PROCESSING OF REQUIRED DATASET* 00259402
*                 2. CLOSE  TO COMPLETE PROCESSING OF DATA SETS       * 00260302
*                 3. FIND   TO DETERMINE IF A MODULE EXISTS           * 00261202
*                 4. POINT  TO FIND THE RECORD THAT MUST BE READ      * 00262102
*                 5. READ   TO GET THE CONTROL CARDS & MODULE TEXT    * 00263002
*                            INTO CORE                                * 00263902
*                 6. CHECK  TO WAIT FOR COMPLETION OF READ REQUEST    * 00264802
*                 7. NOTE   TO KEEP TRACK OF THE LAST RECORD READ     * 00265702
*                 8. DCB    TO DEFINE THE OLT LIB DCB                 * 00266602
*                 9. SAVE   TO SAVE REGISTERS                         * 00267502
*                 10.SYNADAFF  TO PERFORM SYNAD ANALYSIS       @ZA14111 00267737
*                 11.SYNADRLS  TO RELEASE SAVE AREA OBTAINED   @ZA14111 00267937
*                              BY SYNADAD                      @ZA14111 00268137
*                                                                     * 00268402
* NORMAL EXITS:                                                       * 00269302
*          TO CALLER WITH RETURN CODE EQUAL TO ZERO.                  * 00270202
*                                                                     * 00271102
* ERROR EXITS:                                                        * 00272002
*          TO CALLER WITH RETURN CODE NOT EQUAL TO ZERO               * 00272902
*                                                                     * 00273802
* TABLES/WORKAREAS:                                                   * 00274702
*          PATCH12 - PATCH AREA                                       * 00275602
*          SAVEAREA- SAVE AREA                                        * 00276502
*          BUFFER  - READ IN BUFFER FOR CONTROL RECORDS(IE ESD, ETC)  * 00277402
*          RLCOREAD- REAL CORE ADDRESS OF MODULE                      * 00278302
*          ASSEMAD - ASSEMBLED ADDRESS OF MODULE(RELATIVE TO ZERO)    * 00279202
*          B28WORK - WORK AREA                                        * 00280102
*          WORK    - WORK AREA                                        * 00281002
*          RELFT   - RELOCATION FACTOR FOR RLD DATA ITEMS             * 00281902
*          RDBUFAD - ADDRESS/POINTER TO READ IN AREA                  * 00282802
*          RDLNGTH - LENGTH OF READ                                   * 00283702
*          RETCODE - RETURN CODE SAVE AREA (DEBUG AID)                * 00284602
*          TTRZ    - TTRZ FOR READ ROUTINE                            * 00285502
*          SIZEAREA- AREA USED TO STORE MODULE SIZE                   * 00286402
*          OLTDCB  - DCB FOR OLT LIBRARY                              * 00287302
*          CHARTBL - TABLE USED TO VALIDATE REP DATA                  * 00288202
*          LDSWITCH- INTERNAL FLAG BYTE                               * 00289102
*             BIT 0- COMPUTE HAS BEEN DONE FOR REQUESTED MODULE       * 00290002
*             BIT 1- THIS IS A TRUNCATED(CDS) LOAD REQUEST            * 00290902
*             BIT 2- TXTHDR & TXT INFORMATION MUST BE PROCESSED       * 00291802
*             BIT 3- COMPUTE HAS BEEN STARTED                         * 00292702
*             BIT 4- FLAG USED TO INDICATE WHICH BYTE OF REP DATA     * 00293602
*                    BEING CONVERTED                                  * 00294502
*             BIT 5- I/O ERROR OCCURED ON LOAD                        * 00295402
*             BIT 6- UNUSED AT PRESENT TIME                           * 00296302
*             BIT 7- UNUSED AT PRESENT TIME                           * 00297202
*                                                                     * 00298102
* CHANGE ACTIVITY = AS FOLLOWS                                        * 00299002
*    PTM XM0088 ADDITION OF CDS EQUATING SUPPORT               XM0088 * 00299302
*    PTM XM0794 FIX MISSING BASE REG AND CORRECT PARMLIST LBLS XM0794 * 00299602
*    APAR XA29758 PROVIDE SUPPORT FOR SOSPC RELEASE 10         @ZA29758 00300000
*********************************************************************** 00400000
*                               EQUATES                               * 00500000
*********************************************************************** 00600002
*                              REGISTERS                              * 00700002
*********************************************************************** 00800002
R0       EQU   0                       REGISTER 0                       00900002
R1       EQU   1                       REGISTER 1                       01000002
R2       EQU   2                       REGISTER 2                       01100002
R3       EQU   3                       REGISTER 3                       01200002
R4       EQU   4                       REGISTER 4                       01300002
R5       EQU   5                       REGISTER 5                       01400002
R6       EQU   6                       REGISTER 6                       01500002
R7       EQU   7                       REGISTER 7                       01600002
R8       EQU   8                       REGISTER 8                       01700002
R9       EQU   9                       REGISTER 9                       01800002
R10      EQU   10                      REGISTER 10                      01900002
R11      EQU   11                      BASE REGISTER                    02000002
R12      EQU   12                      REGISTER 12                      02100002
R13      EQU   13                      REGISTER 13                      02200002
R14      EQU   14                      REGISTER 14                      02300002
R15      EQU   15                      REGISTER 15                      02400002
REPPTR   EQU   1                       POINTER TO WHERE REP STARTS      02500002
DEBREG   EQU   1                       POINTER TO NEEDED DEB     Y02008 02550002
PLISTREG EQU   3                       PARAMETER LIST POINTER           02600002
FROMADDR EQU   5                       FROM ADDRESS FOR CONVERT         02700002
TOADDR   EQU   6                       TO ADDRESS FOR CONVERT           02800002
LNGTHREG EQU   6                       LENGTH OF READ                   02900002
COUNT    EQU   7                       COUNT FOR CONVERSION ROUTINE     03000002
DATAPTR  EQU   8                       POINTER TO RLD DATA FIELD        03100002
CHAR     EQU   8                       CHARACTER TO BE MATCHED          03200002
NAMEPTR  EQU   8                       POINTER TO MODULE NAME           03300002
RLDBTCNT EQU   9                       NO OF 4 BYTE AREAS IN RLD CARD   03400002
DCBPTR   EQU   9                       POINTER TO NEEDED DCB            03500002
REPBYTE  EQU   9                       CHARACTER TO BE CONVERTED        03600002
TXTBTCNT EQU   9                       TXT BYTE COUNT                   03700002
ESDBTCNT EQU   9                       ESD BYTE COUNT                   03800002
AREAPTR  EQU   10                      POINTER TO READ BUFFER           03900002
TTRZPTR  EQU   10                      POINTER TO TTRZ FOR READ         04000002
INDEX    EQU   10                      INDEX REGISTER                   04100002
*********************************************************************** 04200002
*                       INTERNAL FLAG EQUATES                         * 04300002
*********************************************************************** 04400002
CPTSW    EQU   X'80'                   COMPUTE DONE                     04500002
TRNCL    EQU   X'40'                   TRUNCATED LOAD                   04600002
TWOREADS EQU   X'20'                   TWO READS REQUESTED              04700002
CMPTSTRT EQU   X'10'                   COMPUTE HAS BEEN STARTED         04800002
IOERROR  EQU   X'04'                   I/O ERROR FLAG                   04900002
*********************************************************************** 05000002
*                       PARAMETER LIST EQUATES                        * 05100002
*********************************************************************** 05200002
PLNK     EQU   X'80'                   PLINK REQUESTED                  05300002
CMPTE    EQU   X'40'                   COMPUTE REQUESTED                05400002
CDS      EQU   X'20'                   CDS LOAD                         05500002
SYMBOLIC EQU   X'08'                   SYMBOLIC CDS                     05550002
NAME     EQU   0                       MODULE NAME DISPLACEMENT         05600002
AD       EQU   8                       REAL CORE ADDRESS DISPLACEMENT   05700002
FLAG     EQU   12                      FLAG FIELD DISPLACEMENT          05800002
TCNT     EQU   14                      TRUNCATED COUNT DISPLACEMENT     05900002
*********************************************************************** 06000002
*                       MISCELLANEOUS EQUATES                         * 06100002
*********************************************************************** 06200002
TWICE    EQU   2                       MULTIPLY BY FOUR                 06300002
D0       EQU   0                       DISPLACEMENT ZERO                06400002
SAMEPTR  EQU   1                       SAME ESD ID                      06500002
D1       EQU   1                       DISPLACEMENT ONE                 06600002
D4       EQU   4                       DISPLACEMENT FOUR                06700002
L3       EQU   3                       LENGTH THREE                     06800002
TMFLG    EQU   X'01'                   TRANSIENT MANAGER FLAG           06900002
OFLGS    EQU   X'10'                   OPEN FLAG                        07000002
ZEROONE  EQU   X'01'                   HEX 01                           07200002
HIHALF   EQU   240                     HIGH HALF OF A BYTE              07300002
ALL      EQU   255                     WHOLE BYTE                       07400002
NEW      EQU   X'10'                   NEW OLT                          07500002
OLD      EQU   X'20'                   OLD OLT                          07600002
TYTST    EQU   X'04'                   ESD TYPE                         07700002
FIRST    EQU   X'F7'                   FIRST BYTE OF DATA FLAG          07800002
SECOND   EQU   X'08'                   SECOND BYTE OF DATA FLAG         07900002
RLDFLG   EQU   X'02'                   POS OR NEG RELOCATION            08000002
VIRTREAL EQU   X'01'                   OLT-VIRTUAL OR REAL       X03008 08000802
VIRTUAL  EQU   X'20'                   OLT CAN RUN IN VIRTUAL    X03008 08001602
REAL     EQU   X'DF'                   OLT MUST RUN IN REAL      X03008 08002402
ROOTID   EQU   C'T'                    FIRST LETTER OF A ROOT MOD NAME C08003202
                                       USED IN V=V V=R INIT      X03008 08004002
D44      EQU   44                      DISPLACEMENT 44           Y02008 08005002
D66      EQU   66                      DISPLACEMENT 66           Y02008 08007002
MSG202   EQU   100                      DISPLACEMENT TO MSG IFD202I     08010002
MSG203   EQU   104                      DISPLACEMENT TO MSG IFD203I     08020002
MSG205   EQU   108                      DISPLACEMENT TO MSG IFD205I     08030002
MSG911   EQU   112                     DISPLACEMENT TO MSG IFD911I      08040002
MSG901   EQU   116                      DISPLACEMENT TO MSG IFD901I     08050002
MSG899   EQU   128                     DISP TO MSG IFD899I       Y02008 08070002
         EJECT                                                          08100002
         SAVE  (14,12),,IFDOLT12&SYSDATE                                08200002
         BALR  R11,0                   ESTABLISH ADDRESSABILITY         08500002
         USING *,R11                                                    08600002
         ST    R13,SAVEAREA+4          SAVE CALLERS SAVE AREA POINTER  C08700002
                                       IN MY SAVE AREA                  08800002
         LA    R15,SAVEAREA            GET ADDRESS OF THE SAVE AREA     08900002
         ST    R15,8(0,R13)            STORE ADDRESS OF MY SAVE AREA   C09000002
                                       IN CALLERS SAVE AREA             09100002
         LR    R13,R15                 PLACE MY SAVE AREA ADDRESS IN   C09200002
                                       REGISTER 13                      09300002
         USING CHASCT,R2                                                09400002
*********************************************************************** 09500002
*                             INITIALIZE                              * 09600002
*********************************************************************** 09700002
         L     PLISTREG,4(R1)          PUT POINTER TO PARAMETER LIST   C09800002
                                       IN REG 3                         09900002
         MVC   RLCOREAD(4),AD(PLISTREG) GET REAL CORE ADDRESS OF WHERE C10000002
                                       MODULE SHOULD BE LOADED          10100002
         NI    LDSWITCH,CPTSW          TURN OFF ALL INTERNAL FLAGS     C10200002
                                       EXCEPT FOR COMPUTE               10300002
         MVI   CDSIND,X'00'             ZERO INDICATOR         XM0088   10303002
         TM    TABLNGTH+2,X'40'         TEST CDS EQUATE BIT    XM0088   10306002
         BZ    LDINIT08                 NO CDS EQUATE ENTRY    XM0088   10309002
         TM    FLAG(PLISTREG),CDS       TEST PARAMETER FLAG    XM0088   10312002
         BZ    LDINIT08                 NO CDS REQUEST         XM0088   10315002
         CLC   NAME+1(3,PLISTREG),=C'000' CHECK CDS NAME       XM0794   10318002
         BNE   LDINIT08                 NOT CREATED FROM DEVICEXM0088   10321002
         MVC   SREALDEV(4),NAME+4(PLISTREG) SAVE REAL DEVICE   XM0088   10324002
         LA    R1,EHLIST                CONVERT PARAMETER LIST XM0088   10327002
         L     R15,TAB28                TRANSIENT MANAGER      XM0088   10330002
         BALR  R14,R15                  GO TO ENTRY POINT      XM0088   10333002
         LA    R4,16                    MAXIMUM CDS ENTRIES    XM0088   10336002
         L     R5,MCT+128               ROOT MODULE ADDRESS    XM0088   10339002
         LA    R5,32(R5)                RESIDENT CDS TABLE     XM0088   10342002
LDINIT02 DS    0H                                              XM0088   10345002
         CLC   0(2,R5),SREALHEX         CHECK CDS DEVICE       XM0088   10348002
         BE    LDINIT03                 DEVICE IN TABLE        XM0088   10351002
         LA    R5,4(R5)                 NEXT DEVICE            XM0088   10354002
         BCT   R4,LDINIT02              CHECK NEXT ITEM        XM0088   10357002
         B     LDINIT08                 NORMAL CDS REQUEST     XM0088   10360002
LDINIT03 DS    0H                                              XM0088   10363002
         MVC   SCDSHEX(2),2(R5)         CDS EQUATE DEVICE      XM0088   10366002
         LA    R1,HELIST                CONVERT PARAMETER LIST XM0088   10369002
         L     R15,TAB28                TRANSIENT MANAGER      XM0088   10372002
         BALR  R14,R15                  GO TO ENTRY POINT      XM0088   10375002
         MVI   CDSIND,X'80'             EQUATED CDS NAME USED  XM0088   10378002
         MVC   NAME+4(4,PLISTREG),SCDSDEV NEW NAME TO USE      XM0088   10381002
LDINIT08 DS    0H                                              XM0088   10384002
         TM    FLAG(PLISTREG),CMPTE    IS THIS A COMPUTE REQUEST        10400002
         BNO   LDTXT006                NO, GO TO CODE THAT WILL LOAD   C10500002
                                       AND RELOCATE THE MODULE          10600002
         NI    LDSWITCH,0              TURN OFF INTERNAL COMPUTE SWITCHC10700002
                                       THIS IS A NEW REQUEST            10800002
         XC    BUFFER(80),BUFFER       CLEAR READ BUFFER                10900002
         SPACE 1                                                        11000002
*********************************************************************** 11100002
*                         ESD CARD HANDLING                           * 11200002
*********************************************************************** 11300002
LDESD001 EQU   *                                                        11400002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE TO READ     C11500002
                                       FIRST ESD CARD                   11600002
         CLC   BUFFER+1(L3),=C'ESD'    IS THIS AN ESD CARD              11700002
         BNE   LDESD001                NO, FIND FIRST ESD               11800002
         CLC   BUFFER+14(2),ONE1       IS THIS THE FIRST ESD CARD       11900002
         BNE   LDESD001                NO, FIND FIRST ESD               12000002
         SPACE 1                                                        12100002
LDESD006 EQU   *                                                        12200002
         CLC   BUFFER+16(8),NAME(PLISTREG) DOES THIS ESD CARD HAVE NAMEC12300002
                                       OF REQUESTED UNIT TEST MODULE    12400002
         BE    LDESD011                YES, GO TO ROUTINE THAT WILL    C12500002
                                       CONTINUE ESD PROCESSING          12600002
         CLC   BUFFER+32(8),NAME(PLISTREG) DOES THIS ESD CARD HAVE NAMEC12700002
                                       OF REQUESTED UNIT TEST MODULE    12800002
         BNE   LDESD001                NO, GO TO ROUTINE THAT WILL GET C12900002
                                       NEXT CARD                        13000002
         SPACE 1                                                        13100002
LDESD011 EQU   *                                                        13200002
         OI    LDSWITCH,CPTSW          TURN ON INTERNAL COMPUTE FLAG    13300002
         TM    FLAG(PLISTREG),CDS+PLNK IS THIS REQUEST FOR A CDS OR    C13400002
                                       PLINK MODULE                     13500002
         BM    LDESD021                YES, BYPASS DETERMINING IF THIS C13600002
                                       IS A NEW OLT                     13700002
         NI    CESWT,ALL-OLD-NEW       CLEAR OLD AND NEW TEST FLAGS     13800002
         CLC   BUFFER+32(3),=CL3'#OL'  IS THIS A NEW OLT       @ZA29758 13900000
         BNE   LDESD016                NO, GO TO ROUTINE THAT WILL SET C14000002
                                       OLD UNIT TEST FLAG               14100002
         OI    CESWT,NEW               SET NEW UNIT TEST FLAG           14200002
         CLI   NAME(PLISTREG),ROOTID   IS THIS A PLINK           X03008 14206002
         BC    2,LDESD021              YES,NO SET UP FOR V=V V=R X03008C14212002
                                       CAPABILITY                X03008 14218002
         TM    BUFFER+38,VIRTREAL      CAN OLT RUN VIRTUAL       X03008 14224002
         BNO   LDESD013                NO, GO ZERO FLAG IN COMMONX03008C14230002
                                       AREA, TELLING SCHED THAT  X03008C14236002
                                       OLT MUST RUN REAL         X03008 14242002
         OI    TABLNGTH+2,VIRTUAL      YES, SET FLAG IN COMMON   X03008C14248002
                                       AREA TO 1 TELLING SCHED   X03008C14254002
                                       OLT CAN RUN VIRTUAL       X03008 14260002
         B     LDESD021                CONTINUE                  X03008 14266002
LDESD013 EQU   *                                                 X03008 14272002
         NI    TABLNGTH+2,REAL         ZERO FLAG IN COMMON AREA  X03008C14278002
                                       TELLING SCHED THAT OLT    X03008C14284002
                                       MUST RUN REAL             X03008 14290002
         B     LDESD021                                                 14300002
         SPACE 1                                                        14400002
LDESD016 EQU   *                                                        14500002
         OI    CESWT,OLD               SET OLD UNIT TEST FLAG           14600002
         NI    TABLNGTH+2,REAL         ZERO FLAG IN COMMON AREA  X03008C14620002
                                       TELLING SCHED THAT OLT    X03008C14640002
                                       MUST RUN REAL             X03008 14660002
         SPACE 1                                                        14700002
LDESD021 EQU   *                                                        14800002
         MVC   B28WORK+1(L3),BUFFER+25 GET THE ADDR OF WHERE THIS      C14900002
                                       MODULE WAS ASSEMBLED AT INTO    C15000002
                                       WORK AREA                        15100002
         SR    R7,R7                   CLEAR ESD LENGTH REG             15200002
         L     R6,B28WORK              PUT ASSEMBLE ADDRESS INTO REG 6  15300002
         ST    R6,ASSEMAD              SAVE THE ASSEMBLED ADDRESS FOR  C15400002
                                       LATTER USE                       15500002
         SPACE 1                                                        15600002
LDESD026 EQU   *                                                        15700002
         SR    ESDBTCNT,ESDBTCNT       CLEAR ESD BYTE COUNT REG         15800002
         IC    ESDBTCNT,BUFFER+11      GET NUMBER OF BYTES OF ESD DATA C15900002
                                       ON THIS CARD                     16000002
         SR    R8,R8                   CLEAR REG 8                      16100002
         LA    R5,16                   SET REG 5 TO CONTAIN LENGTH OF  C16200002
                                       ESD DATA FIELD                   16300002
         DR    R8,R5                   DIVIDE NO. OF BYTES OF ESD DATA C16400002
                                       BY LNGTH OF ESD DATA FLD TO FINDC16500002
                                       NUMBER OF FLDS IN ESD CARD       16600002
         LA    R5,BUFFER+8             PRIME REG 5 WITH ADDRESS OF ESD C16700002
                                       CARD TO SIMPLIFY LOOPING ON     C16800002
                                       ESD DATA FIELDS ON ONE CARD      16900002
         SPACE 1                                                        17000002
LDESD031 EQU   *                                                        17100002
         LA    R5,16(R5)               BUMP POINTER TO ESD CARD TO     C17200002
                                       POINT TO MIDDLE OF ESD DATA     C17300002
                                       FIELD                            17400002
         TM    0(R5),ALL               IS THIS AN SD TYPE               17500002
         BZ    LDESD036                YES, GO TO ROUTINE WHICH WILL   C17600002
                                       SUM ESD LENGTH FIELDS            17700002
         TM    0(R5),TYTST             DOES THIS ESD HAVE ANY LENGTH   C17800002
                                       ATTRIBUTE                        17900002
         BZ    LDESD041                NO, GO TO ROUTINE WHICH         C18000002
                                       DETERMINES IF THERE ARE ANY MOREC18100002
                                       ESD DATA FIELDS                  18200002
         SPACE 1                                                        18300002
LDESD036 EQU   *                                                        18400002
         MVC   B28WORK+1(L3),5(R5)     MOVE LENGTH INTO WORK AREA       18500002
         A     R7,B28WORK              ADD THIS LENGTH TO SUM OF       C18600002
                                       PREVIOUS LENGTHS                 18700002
         SPACE 1                                                        18800002
LDESD041 EQU   *                                                        18900002
         BCT   ESDBTCNT,LDESD031       DECREMENT NUMBER OF ESD DATA    C19000002
                                       FIELDS BY ONE AND IF THERE ARE  C19100002
                                       ANY LEFT, PROCESS THIS ONE       19200002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE TO READ NEXTC19300002
                                       CARD                             19400002
         CLC   BUFFER+1(L3),=C'ESD'    IS THIS CARD AN ESD              19500002
         BE    LDESD026                YES, GO TO ROUTINE TO SUM LENGTHC19600002
                                       ON ESD CARDS                     19700002
         CLC   BUFFER+1(L3),=C'TXT'    IS THIS CARD A TXT               19800002
         BNE   LDRLD046                NO, ORDER ERROR OR GARBAGE,     C19900002
                                       GO TO ROUTINE THAT RETURNS 24   C20000002
                                       IN REG 15                        20100002
         EJECT                                                          20200002
*********************************************************************** 20300002
*                         TXT CARD HANDLING                           * 20400002
*********************************************************************** 20500002
LDTXT001 EQU   *                                                        20600002
         NI    LDSWITCH,ALL-TWOREADS   SET FLAG INDICATING TWO READS   C20700002
                                       ARE REQUIRED                     20800002
         LH    R5,TCNT(PLISTREG)       TAKE TRUNCATED LOAD COUNT AND    20900002
         LTR   R5,R5                   LOOK AT IT                       21000002
         BZ    CMPTDONE                IF ZERO, GO TO RETURN TO CALLER C21100002
                                       EXIT ROUTINE                     21200002
         OI    LDSWITCH,TRNCL          SET TRUNCATED LOAD FLAG ON       21300002
         SPACE 1                                                        21400002
LDTXT006 EQU   *                                                        21500002
         LA    R15,20                  PLACE ERROR CODE 20 IN REG 15   C21600002
                                       FOR FAILURE TO DO COMPUTE        21700002
         TM    LDSWITCH,CPTSW          HAS A COMPUTE BEEN DONE          21800002
         BNO   LDRETERR                NO, GO TO ROUTINE THAT          C21900002
                                       DETERMINES IF THIS IS OK         22000002
         L     R6,ASSEMAD              GET ASSEMBLED ADDRESS OF MODULE  22100002
         TM    FLAG(PLISTREG),PLNK     IS THIS MODULE A PLINK MODULE    22200002
         BNO   LDTXT011                NO, BYPASS UPDATING REAL CORE AD 22300002
         A     R6,PARTITEM             ADD ADDRESS OF OLT TO ASSEMBLED C22400002
                                       ADDRESS OF PLINK MODULE          22500002
         ST    R6,RLCOREAD             SAVE NEW REAL CORE ADDRESS       22600002
         SPACE 1                                                        22700002
LDTXT011 EQU   *                                                        22800002
         L     R6,RLCOREAD             GET REAL CORE ADDRESS OF MODULE  22900002
         S     R6,ASSEMAD              SUBTRACT ASSEMBLED ADDRESS FROM C23000002
                                       TARGET ADDRESS TO GET RELOCATIONC23100002
                                       FACTOR                           23200002
         ST    R6,RELFT                SAVE RELOCATION FACTOR           23300002
         SPACE 1                                                        23400002
LDTXT016 EQU   *                                                        23500002
         LH    TXTBTCNT,BUFFER+22      GET BYTE COUNT OF FOLLOWING DATAC23600002
                                       RECORD FROM TXTHDR CARD INTO    C23700002
                                       REG 9                            23800002
         TM    LDSWITCH,TRNCL          IS THIS A TRUNCATED LOAD- A CDS C23900002
                                       LOAD                             24000002
         BNO   LDTXT026                NO, GO TO ROUTINE THAT HANDLES  C24100002
                                       PLACING TXT CARDS INTO CORE      24200002
         LTR   R5,R5                   HAS IT BEEN DONE-LOOK AT        C24300002
                                       TRUNCATED COUNT IN PARM LIST     24400002
         BZ    LDRLD051                YES, GO TO SUCCESSFUL EXIT      C24500002
                                       SUBROUTINE                       24600002
         CR    R5,TXTBTCNT             CHECK BYTES REQUESTED VS LENGTH C24700002
                                       OF TXT RECORD                    24800002
         BH    LDTXT021                ANOTHER RECORD IS NEEDED, GO TO C24900002
                                       CODE THAT PREPARES FOR THIS      25000002
         LR    TXTBTCNT,R5             SET LENGTH EQUAL TO BYTES       C25100002
                                       REQUESTED                        25200002
         SPACE 1                                                        25300002
LDTXT021 EQU   *                                                        25400002
         SR    R5,TXTBTCNT             SET BYTES REQUESTED EQUAL TO    C25500002
                                       DIFFERENCE OF ORIGINAL REQUEST  C25600002
                                       AND LENGTH                       25700002
         SPACE 1                                                        25800002
LDTXT026 EQU   *                                                        25900002
         MVC   B28WORK+1(L3),BUFFER+17 PUT ASSEMBLED ADDR OF FOLLOWING C26000002
                                       TXT RECORD IN WORK AREA          26100002
         L     R6,B28WORK              GET THIS ASSEMBLED ADDR IN REG 6 26200002
         A     R6,RELFT                ADD RELOCATION FACTOR TO THIS   C26300002
                                       ASSEMBLED ADDRESS                26400002
         ST    R6,RDBUFAD              STORE THIS ADDR IN READ COMMAND  26500002
         ST    R9,RDLNGTH              STORE LENGTH IN READ COMMAND     26600002
         OI    LDSWITCH,TWOREADS       INDICATE 2 READS ARE NECESSARY   26700002
LDTXT031 EQU   *                                                        26800002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE TO READ     C26900002
                                       TXT DATA CARD INTO CORE AND     C27000002
                                       READ NEXT TXTHDR CARD            27100002
         CLC   BUFFER+1(L3),=C'TXT'    IS THIS A TXTHDR CARD            27200002
         BNE   LDREP011                NO, GO SEE IF IT IS A REP        27300002
         B     LDTXT016                YES, DECODE AND HANDLE THIS TXT C27400002
                                       CARD                             27500002
         EJECT                                                          27600002
*********************************************************************** 27700002
*                         REP CARD HANDLING                           * 27800002
*********************************************************************** 27900002
LDREP001 EQU   *                                                        28000002
         LA    COUNT,6                 PUT NUMBER OF CHARACTERS TO BE  C28100002
                                       CONVERTED INTO COUNT REG         28200002
         LA    FROMADDR,BUFFER+6       PUT STARTING ADDRESS OF THE     C28300002
                                       CONVERT IN THE FROMADDR REG      28400002
         LA    TOADDR,B28WORK+1        PUT THE TO ADDRESS OF CONVERT   C28500002
                                       IN TOADDR REG                    28600002
         BAL   R4,LDCNV001             GO TO CONVERT ROUTINE AND OBTAINC28700002
                                       WHERE REP SHOULD OCCUR           28800002
         L     REPPTR,B28WORK          PLACE ADDRESS OF WHERE REP      C28900002
                                       SHOULD START IN REPPTR           29000002
         A     REPPTR,RELFT            ADD RELOCATION FACTOR TO THIS   C29100002
                                       AND GET REAL CORE ADDRESS OF    C29200002
                                       WHERE REP SHOULD START           29300002
         LA    FROMADDR,BUFFER+16      PUT STARTING ADDRESS OF REP ON  C29400002
                                       THE REP CARD INTO THE FROMADDR  C29500002
                                       REG SO CONVERSION CAN BE DONE    29600002
         SPACE 1                                                        29700002
LDREP006 EQU   *                                                        29800002
         LA    COUNT,4                 PUT NUMBER OF CHARACTERS TO BE  C29900002
                                       CONERTED INTO COUNT REG          30000002
         LA    TOADDR,B28WORK+2        PUT TO ADDRESS OF CONVERT INTO  C30100002
                                       TOADDR REG                       30200002
         BAL   R4,LDCNV001             GO TO CONVERT ROUTINE AND       C30300002
                                       CONVERT TWO BYTES OF THE REP     30400002
         MVC   0(2,REPPTR),B28WORK+2   MOVE THIS TWO BYTES OF REP TO   C30500002
                                       WHERE IT BELONGS IN CORE         30600002
         CLI   0(FROMADDR),C','        IS A COMMA THE NEXT CHARACTER   C30700002
                                       ON THE REP CARD                  30800002
         BE    LDREP016                YES, GO TO ROUTINE WHICH WILL   C30900002
                                       SET UP TO CONVERT NEXT TWO BYTESC31000002
                                       OF REP DATA                      31100002
         CLI   0(FROMADDR),C' '        NO, IS THE REP FINISHED OR IS   C31200002
                                       THERE A BLANK AS NEXT CHARACTER C31300002
                                       ON THE REP CARD                  31400002
         BNE   LDREP021                NO, GO TO REP CARD ERROR EXIT   C31500002
                                       ROUTINE                          31600002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE AND READ    C31700002
                                       NEXT RECORD                      31800002
         SPACE 1                                                        31900002
LDREP011 EQU   *                                                        32000002
         CLC   BUFFER+1(L3),=C'REP'    IS THIS NEXT RECORD A REP CARD   32100002
         BE    LDREP001                YES, GO TO REP CARD HANDLING    C32200002
                                       ROUTINE                          32300002
         B     LDRLD041                GO TO RLD CARD HANDLING ROUTINE C32400002
                                       AND SEE IF IT IS AN RLD RECORD   32500002
         SPACE 1                                                        32600002
LDREP016 EQU   *                                                        32700002
         LA    FROMADDR,1(FROMADDR)    INCREMENT FROMADDR BY ONE TO    C32800002
                                       POINT TO NEXT TWO BYTES OF REP  C32900002
                                       DATA                             33000002
         LA    REPPTR,2(REPPTR)        INCREMENT REAL CORE ADDR OF REP C33100002
                                       BY TWO TO POINT TO WHERE NEXT   C33200002
                                       TWO BYTES OF REP DATA SHOULD GO  33300002
         B     LDREP006                GO TO ROUTINE TO DECODE NEXT    C33400002
                                       TWO BYTES OF REP DATA            33500002
         SPACE 1                                                        33600002
LDREP021 EQU   *                                                        33700002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   33800002
         L     R1,MSG202(R1)            GET POINTER TO MESSAGE IFD202I  33900002
         PWTO  REG=(R1)                WRITE MESSAGE IFD202I            34000002
         LA    R15,16                  PUT 16 IN RETURN CODE REGISTER, C34100002
                                       INDICATING REP CARD ERROR        34200002
         B     LDRETERR                GO TO ERROR EXIT LINKAGE         34300002
         EJECT                                                          34400002
*********************************************************************** 34500002
**********  CONVERT SUBROUTINE USED FOR REP CARD HANDLING    ********** 34600002
*********************************************************************** 34700002
         SPACE 1                                                        34800002
LDCNV001 EQU   *                                                        34900002
         SR    CHAR,CHAR               CLEAR REGISTER WHICH WILL BE    C35000002
                                       USED FOR SEARCH OF CHARACTER    C35100002
                                       TABLE                            35200002
         SPACE 1                                                        35300002
LDCNV006 EQU   *                                                        35400002
         NI    LDSWITCH,FIRST          ZERO FLAG WHICH TELLS WHICH BYTEC35500002
                                       OF DATA BEING CONVERTED. ZERO   C35600002
                                       IMPLIES 1ST BYTE, ONE - 2ND BYTE 35700002
         SR    REPBYTE,REPBYTE         CLEAR REGISTER WHICH WILL       C35800002
                                       CONTAIN BYTE OF REP DATA BEING  C35900002
                                       PROCESSED                        36000002
         SPACE 1                                                        36100002
LDCNV011 EQU   *                                                        36200002
         IC    REPBYTE,0(FROMADDR)     PUT CHARACTER TO BE CONVERTED   C36300002
                                       INTO REP DATA BYTE REG           36400002
         LA    INDEX,16                PUT 16 INTO INDEX REGISTER IN   C36500002
                                       PREPARATION FOR SEARCH OF TABLE  36600002
         SPACE 1                                                        36700002
LDCNV016 EQU   *                                                        36800002
         IC    CHAR,CHARTBL-1(INDEX)   GET A CHARACTER FROM TABLE AND  C36900002
                                       PUT IT IN REG USED FOR SEARCH    37000002
         CLR   CHAR,REPBYTE            DOES CHAR ON REP CARD EQUAL     C37100002
                                       THIS CHAR FROM TABLE             37200002
         BE    LDCNV021                YES, GO TO ROUTINE WHICH HANDLESC37300002
                                       A SUCCESSFUL MATCH               37400002
         BCT   INDEX,LDCNV016          TRY NEXT CHARACTER IN TABLE, IF C37500002
                                       ANY LEFT                         37600002
         B     LDREP021                IF NONE ARE LEFT, GO TO ROUTINE C37700002
                                       WHICH WILL INDICATE REP CARD    C37800002
                                       ERROR                            37900002
         SPACE 1                                                        38000002
LDCNV021 EQU   *                                                        38100002
         LA    FROMADDR,1(FROMADDR)    ADVANCE FROM ADDR REG BY ONE TO C38200002
                                       POINT TO NEXT CHARACTER TO BE   C38300002
                                       CONVERTED                        38400002
         BCTR  INDEX,0                 DECREMENT INDEX BY ONE AS THIS  C38500002
                                       IS THE HEX EQUIVALENT OF EBCDIC C38600002
                                       CHARACTER ON REP CARD            38700002
         SPACE 1                                                        38800002
LDCNV026 EQU   *                                                        38900002
         TM    LDSWITCH,SECOND         HAVE TWO BYTES OF REP DATA BEEN C39000002
                                       CONVERTED                        39100002
         BO    LDCNV031                YES, GO TO ROUTINE WHICH WILL   C39200002
                                       PLACE REP DATA IN SPECIFIED AREA 39300002
         LR    R14,INDEX               SAVE FIRST CONVERSION RESULT IN C39400002
                                       REG 14                           39500002
         SR    REPBYTE,REPBYTE         CLEAR REGISTER USED TO CONTAIN  C39600002
                                       BYTE OF REP DATA BEING PROCESSED 39700002
         OI    LDSWITCH,SECOND         SET FLAG WHICH INDICATES WHICH  C39800002
                                       BYTE OF DATA IS BEING CONVERTED C39900002
                                       TO 1, 1 IMPLIES THIS IS 2ND BYTE 40000002
         SLL   R14,4                   LEFT JUSTIFY FIRST CONVERTED    C40100002
                                       BYTE IN REG 14                   40200002
         BCT   COUNT,LDCNV011          GO CONVERT NEXT BYTE OF REP DATAC40300002
                                       IF THERE IS ANY                  40400002
         LA    COUNT,1                 SINCE THERE ARE NONE, SET COUNT C40500002
                                       TO 1 SO PROCESSING WILL NOT LOOPC40600002
                                       FOREVER BELOW                    40700002
         SPACE 1                                                        40800002
LDCNV031 EQU   *                                                        40900002
         OR    R14,INDEX               COMBINE TWO CONVERSIONS TO BE   C41000002
                                       ONE BYTE                         41100002
         STC   R14,0(TOADDR)           PUT TWO CONVERTED BY INTO AREA  C41200002
                                       SPECIFIED BY TO ADDR REG         41300002
         LA    TOADDR,1(TOADDR)        BUMP TO ADDR REG BY ONE TO POINTC41400002
                                       TO NEXT BYTE IN TOADDR FIELD     41500002
         BCT   R7,LDCNV006             GO CONVERT NEXT CHARACTER, IF   C41600002
                                       THERE IS ONE                     41700002
         BR    R4                      NONE LEFT, RETURN TO CALLER      41800002
         SPACE 3                                                        41900002
*********************************************************************** 42000002
*                TABLE USED TO VALIDATE REP INFORMATION               * 42100002
*********************************************************************** 42200002
CHARTBL  DC    C'0123456789ABCDEF'                                      42300002
         EJECT                                                          42400002
*********************************************************************** 42500002
*                         RLD CARD HANDLING                           * 42600002
*********************************************************************** 42700002
         SPACE 1                                                        42800002
LDRLD001 EQU   *                                                        42900002
         SR    RLDBTCNT,RLDBTCNT       CLEAR RLD BYTE COUNT REG         43000002
         IC    RLDBTCNT,BUFFER+11      GET RLD DATA BYTE COUNT          43100002
         SRL   RLDBTCNT,TWICE          DIVIDE COUNT BY FOUR AND GET    C43200002
                                       NUMBER OF POSSIBLE 4 BYTE RLD   C43300002
                                       DATA ITEMS                       43400002
         LA    DATAPTR,BUFFER+16       GET ADDRESS OF FIRST BYTE OF    C43500002
                                       RLD DATA                         43600002
         BCT   RLDBTCNT,LDRLD016       SINCE THIS IS FIRST DATA FIELD, C43700002
                                       DECREMENT NO. OF 4 BYTE RLD DATAC43800002
                                       ITEMS BY 1, GO DECODE RLD DATA   43900002
         SPACE 1                                                        44000002
LDRLD006 EQU   *                                                        44100002
         TM    D0(DATAPTR),SAMEPTR     DOES RLD HAVE SAME R OR P PTR    44200002
         BO    LDRLD016                BRANCH IF YES                    44300002
         SPACE 1                                                        44400002
LDRLD011 EQU   *                                                        44500002
         LA    DATAPTR,D4(DATAPTR)     BUMP RLD DATA POINTER BY 4 TO   C44600002
                                       AVOID THE ESD ID INDICATORS AND C44700002
                                       TO POINT TO DATA FIELD           44800002
         BCTR  RLDBTCNT,0              DECREMENT NUMBER OF 4 BYTE RLD  C44900002
                                       DATA ITEMS BY ONE                45000002
         SPACE 1                                                        45100002
LDRLD016 EQU   *                                                        45200002
         LA    DATAPTR,D4(DATAPTR)     BUMP RLD DATA POINTER BY 4       45300002
         MVC   B28WORK+1(L3),D1(DATAPTR) GET ADDRESS THAT MUST BE      C45400002
                                       UPDATED                          45500002
         L     R6,B28WORK              PLACE THIS ADDRESS IN REG 6      45600002
         A     R6,RELFT                ADD RELOCATION FACTOR            45700002
         SPACE 1                                                        45800002
LDRLD021 EQU   *                                                        45900002
         TM    D0(DATAPTR),HIHALF      IS THIS AN ADCON OR CCW          46000002
         BNZ   LDRLD036                NO, BRANCH TO DECODE NEXT RLD   C46100002
                                       DATA ITEM IF NECESSARY           46200002
         XC    WORK(4),WORK            CLEAR WORK AREA                  46300002
         IC    R7,D0(DATAPTR)          GET LENGTH OF DATA ITEM          46400002
         N     R7,FULL15               STRIP INDICATORS FROM LENGTH     46500002
         SRL   R7,TWICE                ADJUST LENGTH                    46600002
         EX    R7,MVC01                MOVE DATA REQUIRING UPDATE TO   C46700002
                                       WORK AREA                        46800002
         L     R5,WORK                 PUT DATA REQUIRING UPDATE IN    C46900002
                                       REG 5                            47000002
         LA    R1,3                    PLACE MAX SIZE ADDRESS THAT     C47100002
                                       COULD BE UPDATED, THREE IMPLIES C47200002
                                       A FOUR BYTE ADDRESS              47300002
         SR    R1,R7                   SUBTRACT LNGTH OF ITEM FROM MAX C47400002
                                       LNGTH, REMAINDER IS NO. OF BYTESC47500002
                                       NOT USED, I.E. 1 EQ. 3 BYTE ADDR 47600002
         SLL   R1,3                    TAKE REMAINDER AND CONVERT IT TOC47700002
                                       THE BIT SHIFT REQUIRED TO RIGHT C47800002
                                       JUSTIFY ADDR BEING WORKED ON     47900002
         SRL   R5,D0(R1)               RIGHT JUSTIFY THE ADDRESS IN    C48000002
                                       REG 5                            48100002
         TM    D0(DATAPTR),RLDFLG      TEST RLD FLAG BIT- POS OR NEG    48200002
         BO    LDRLD026                BRANCH IF NEGATIVE               48300002
         A     R5,RELFT                ADD RELOCATION FACTOR            48400002
         B     LDRLD031                GO TO ROUTINE THAT STORES       C48500002
                                       UPDATED ADDRESS IN THE PROGRAM   48600002
         SPACE 1                                                        48700002
LDRLD026 EQU   *                                                        48800002
         S     R5,RELFT                SUBTRACT RELOCATION FACTOR       48900002
         SPACE 1                                                        49000002
LDRLD031 EQU   *                                                        49100002
         SLL   R5,D0(R1)               LEFT JUSTIFY UPDATED ADDRESS     49200002
         ST    R5,WORK                 STORE UPDATED ADDRESS IN WORK   C49300002
                                       AREA                             49400002
         EX    R7,MVC02                MOVE UPDATED ADDRESS IN WORK    C49500002
                                       AREA TO ITS HOME IN PROGRAM      49600002
         SPACE 1                                                        49700002
LDRLD036 EQU   *                                                        49800002
         BCT   RLDBTCNT,LDRLD006       DECREMENT NUMBER OF 4 BYTE RLD  C49900002
                                       DATA ITEMS BY ONE, IF THERE ARE C50000002
                                       ANY LEFT, GO DECODE THEM         50100002
         SPACE 1                                                        50200002
         BAL   R4,LDIOSUB              GO TO IO SUBROUTINE AND GET     C50300002
                                       NEXT CARD                        50400002
         SPACE 1                                                        50500002
LDRLD041 EQU   *                                                        50600002
         CLC   BUFFER+1(L3),=C'RLD'    IS THIS CARD AN RLD CARD         50700002
         BE    LDRLD001                YES, GO TO RLD CARD HANDLER      50800002
         CLC   BUFFER+1(L3),=C'END'    IS THIS CARD AN END CARD         50900002
         BE    LDRLD051                YES, END LOADER, GO TO FINISH   C51000002
                                       ROUTINE                          51100002
         SPACE 1                                                        51200002
LDRLD046 EQU   *                                                        51300002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   51400002
         L     R1,MSG911(R1)           GET POINTER TO MESSAGE IFD911I   51500002
         MVC   31(8,R1),NAME(PLISTREG) PLACE MODULE NAME IN MESSAGE     51560002
         PWTO  REG=(R1)                WRITE MESSAGE IFD911I            51620002
         LA    R15,24                  PUT 24 IN RETURN CODE REGISTER, C51700002
                                       INDICATING ORDER ERROR OR       C51800002
                                       GARBAGE                          51900002
         B     LDRETERR                GO TO ERROR EXIT LINKAGE         52000002
         SPACE 1                                                        52100002
LDRLD051 EQU   *                                                        52200002
         L     R1,RLCOREAD             PLACE ADDRESS OF WHERE MODULE   C52300002
                                       WAS LOADED IN REGISTER ONE       52400002
         B     LDRET00                 GO TO SUCCESSFUL EXIT LINKAGE    52500002
MVC01    MVC   WORK(0),D0(R6)          MOVE ADDRESS TO WORK AREA        52600002
MVC02    MVC   D0(0,R6),WORK           MOVE UPDATED ADDRESS TO ITS     C52700002
                                       PLACE IN PROGRAM                 52800002
         EJECT                                                          52900002
*********************************************************************** 53000002
*                           IO SUBROUTINE                             * 53100002
*********************************************************************** 53200002
LDIOSUB  EQU   *                                                        53300002
         LA    DCBPTR,OLTDCB           GET POINTER TO DCB FOR OLT      C53400002
                                       LIBRARY IN DCB REG               53500002
         TM    48(DCBPTR),OFLGS        IS OLT LIB OPEN                  53600002
         BO    LDIO0010                YES, BYPASS DOING OPEN           53700002
         OPEN  ((DCBPTR),(INPUT))      ATTEMPT TO OPEN OLT DCB          53800002
         TM    48(DCBPTR),OFLGS        DID OLT LIB OPEN                 53900002
         BO    LDIO0010                YES, CONTINUE                    54000002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   54100002
         L     R1,MSG901(R1)            GET POINTER TO MESSAGE IFD901I  54200002
         MVC   12(8,R1),=C'OLTCDSDD'   PLACE DD CARD NAME IN MSG901I    54230002
LDIO0005 EQU   *                                                        54260002
         PWTO  REG=(R1)                WRITE MESSAGE IFD901I            54300002
         B     LDIO0030                RETURN ERROR CODE INDICATING    C54400002
                                       MODULE NOT FOUND                 54500002
         SPACE 1                                                        54600002
LDIO0010 EQU   *                                                        54700002
         USING DEBBASIC,DEBREG                                   YM4762 54709002
         L     DEBREG,D44(DCBPTR)      GET ASSOCIATED DEB ADDR   Y02008 54718002
         LA    DEBREG,D0(DEBREG)       CLEAR HIGH ORDER BYTE     Y02008 54727002
         TM    DEBFLGS1,DEBAPFIN       IS LIBRARY AUTHORIZED     Y02008 54736002
         BO    LDIO0015                YES, CONTINUE LOAD REQ    Y02008 54745002
LDIO0013 EQU   *                                                 Y02008 54754002
         L     R1,MSGMOD               GET POINTER TO MSG MODULE Y02008 54763002
         L     R1,MSG899(R1)           GET PTR TO MSG IFD899I    Y02008 54772002
         MVI   D66(R1),X'F4'           PUT 04 CODE IN MSG        Y02008 54776002
         B     LDIO0005                PRINT ERROR MESSAGE       Y02008 54781002
LDIO0015 EQU   *                                                 Y02008 54790002
         TM    FLAG(PLISTREG),SYMBOLIC IS THIS A SYMBOLIC CDS REQUEST   54800002
         BNO   LDIO0020                NO, PERFORM REQUESTED LOAD       54900002
         L     DCBPTR,SYMPTR           GET POINTER TO DCB FOR SYMBOLIC C55000002
                                       CDS IN DCB REG                   55100002
         L     R1,MSGMOD               GET POINTER TO MESSAGE MODULE    55120002
         L     R1,MSG901(R1)           GET POINTER TO MESSAGE IFD901I   55140002
         MVC   12(8,R1),=C'SYMSYM  '   PLACE DD CARD NAME IN MSG901I    55160002
         TM    48(DCBPTR),OFLGS        IS SYMBOLIC DCB OPEN             55200002
         BNO   LDIO0005                NO, INDICATE SYMSYM DD CARD     C55300002
                                       FAILED TO OPEN                   55400002
         L     DEBREG,D44(DCBPTR)      GET ASSOCIATED DEB ADDR   Y02008 55410002
         LA    DEBREG,D0(DEBREG)       CLEAR HIGH ORDER BYTE     Y02008 55420002
         TM    DEBFLGS1,DEBAPFIN       IS LIBRARY AUTHORIZED     Y02008 55430002
         BNO   LDIO0013                NO, PRINT ERROR MESSAGE   Y02008 55440002
         DROP  DEBREG                                                   55450002
         SPACE 1                                                        55500002
LDIO0020 EQU   *                                                        55600002
         TM    FLAG(PLISTREG),CMPTE    IS CALLER ASKING FOR A COMPUTE   55700002
         BNO   LDIO0040                NO, READ NEXT RECORD OF MODULE   55800002
         TM    LDSWITCH,CMPTSTRT       HAS COMPUTE BEEN STARTED         55900002
         BO    LDIO0040                YES, GO TO ROUTINE TO READ NEXT C56000002
                                       RECORD                           56100002
         LA    NAMEPTR,NAME(PLISTREG)  GET POINTER TO REQUESTED DATA   C56200002
                                       SET MEMBER NAME                  56300002
         FIND  (DCBPTR),(NAMEPTR),D    ISSUE FIND FOR REQUESTED MEMBER  56400002
         OI    LDSWITCH,CMPTSTRT       INDICATE COMPUTE HAS STARTED     56500002
         LTR   R15,R15                 WAS FIND SUCCESSFUL              56600002
         BZ    LDIO0050                SUCCESSFUL FIND, GO READ FIRST  C56700002
                                       CARD IN MODULE                   56800002
         SPACE 1                                                        56900002
LDIO0030 EQU   *                                                        57000002
         SR    R0,R0                   CLEAR REGISTER ZERO INDICATING  C57100002
                                       MODULE NOT FOUND                 57200002
         LA    R15,12                  PUT 0C IN REG 15 TO INDICATE    C57300002
                                       MODULE NOT FOUND                 57400002
         B     LDRESET                 RETURN TO CALLER                 57500002
         SPACE 1                                                        57600002
LDIO0040 EQU   *                                                        57700002
         LA    TTRZPTR,TTRZ            GET POINTER TO TTRZ FOR POINT    57800002
         POINT (DCBPTR),(TTRZPTR)      POINT TO RECORD THAT MUST BE    C57900002
                                       READ                             58000002
         SPACE 1                                                        58100002
LDIO0050 EQU   *                                                        58200002
         TM    LDSWITCH,TWOREADS       IS THIS REQUEST FOR TWO READS    58300002
         BNO   LDIO0060                NO, SET UP TO PERFORM ONE READ   58400002
         L     AREAPTR,RDBUFAD         GET POINTER TO BUFFER AREA IN   C58500002
                                       AREA POINTER REG                 58600002
         L     LNGTHREG,RDLNGTH        GET LENGTH OF READ IN LENGTH REG 58700002
         B     LDIO0070                GO TO READ ROUTINE               58800002
         SPACE 1                                                        58900002
LDIO0060 EQU   *                                                        59000002
         LA    AREAPTR,BUFFER          GET POINTER TO MY BUFFER AREA   C59100002
                                       IN  AREA POINTER REG             59200002
         LA    LNGTHREG,80             PUT LENGTH OF 80 IN LENGTH REG   59300002
         SPACE 1                                                        59400002
LDIO0070 EQU   *                                                        59500002
         READ  DECB,SF,(DCBPTR),(AREAPTR),(LNGTHREG) READ A RECORD      59600002
         CHECK DECB                    WAIT UNTIL READ COMPLETES        59700002
         TM    LDSWITCH,IOERROR        WAS THERE AN I/O ERROR           59800002
         BNO   LDIO0075                NO, CONTINUE NORMALLY            59900002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   60000002
         L     R1,MSG205(R1)            GET POINTER TO MESSAGE IFD205I  60100002
         PWTO  REG=(R1)                WRITE MESSAGE IFD205I INDICATINGC60200002
                                       AN I/O ERROR HAS OCCURED         60300002
         LA    R1,IOERRMSG         PRINT I/O ERROR REASON      @ZA14111 60330037
         PWTO  REG=(R1)                                        @ZA14111 60360037
         NI    LDSWITCH,ALL-IOERROR    CLEAR I/O ERROR FLAG             60400002
         LA    R15,8                   PLACE 08 RETURN CODE IN REG 15   60500002
         B     LDRETERR                RETURN TO CALLER INDICATING     C60600002
                                       READ ERROR                       60700002
         SPACE 1                                                        60800002
LDIO0075 EQU   *                                                        60900002
         NOTE  (DCBPTR)                FIND OUT WHERE THIS READ WAS     61000002
         ST    R1,TTRZ                 SAVE IT TO PERFORM NEXT READ     61100002
         MVI   TTRZ+3,X'01'            UPDATE TTRZ SO NEXT RECORD MAY  C61200002
                                       BE READ                          61300002
         AIF   ('&SYSPARM' NE 'DEBUG').BYPASS                           61350002
         MVC   MESSAGE+8(7),BUFFER                                      61400002
MESSAGE  WTO   '       '                                                61500002
.BYPASS  ANOP                                                           61550002
         TM    LDSWITCH,TWOREADS       IS THIS A REQUEST TO DO TWO     C61600002
                                       READS                            61700002
         BNO   LDIO0080                GO TO ROUTINE WHICH RETURNS TO  C61800002
                                       CALLER                           61900002
         NI    LDSWITCH,ALL-TWOREADS   CLEAR TWO READ REQUEST FLAG SO  C62000002
                                       NEXT READ WILL BE LAST           62100002
         B     LDIO0040                GO TO ROUTINE WHICH WILL POINT  C62200002
                                       TO NEXT RECORD AND READ IT       62300002
         SPACE 1                                                        62400002
LDIO0080 EQU   *                                                        62500002
         BR    R4                      RETURN TO CALLER                 62600002
         EJECT                                                          62700002
*********************************************************************** 62800002
*                    RETURN TO CALLER EXIT ROUTINE                    * 62900002
*********************************************************************** 63000002
CMPTDONE EQU   *                                                        63100002
         ST    R7,SIZEAREA             PLACE SIZE OF MODULE IN SIZE    C63200002
                                       AREA                             63300002
         TM    FLAG(PLISTREG),PLNK     IS THIS A REQUEST TO LOAD A     C63400002
                                       PLINK MODULE                     63500002
         BNO   LDEXT006                NO, BYPASS ADJUSTING MODULE     C63600002
                                       SIZE TO COMPENSATE FOR POSSIBLE C63700002
                                       NON ZERO ORIGIN                  63800002
         A     R7,ASSEMAD              ADD ORIGIN TO LENGTH OF PLINK   C63900002
                                       MODULE AND GET ADJUSTED LENGTH   64000002
         LR    R0,R7                   PLACE SIZE OF MODULE IN REGISTERC64100002
                                       ZERO                             64200002
         B     LDRET00                 INDICATE TO CALLER SUCCESSFUL   C64300002
                                       COMPUTE                          64400002
         SPACE 1                                                        64500002
LDEXT006 EQU   *                                                        64600002
         A     R7,ONE                  ADD ONE TO SIZE OF MODULE        64700002
         ST    R7,SIZEAREA             PLACE SIZE OF MODULE IN SIZE    C64800002
                                       AREA                             64900002
         TM    CESWT,OLD               IS THIS OLT AN OLD ONE           65000002
         BNO   LDEXT011                NO, IT MUST BE A NEW OLT         65100002
         OI    SIZEAREA+3,TMFLG        INDICATE TO TRANS. MGR. THAT    C65200002
                                       THIS IS AN OLD OLT BY SETTING   C65300002
                                       LAST BIT IN MOD. SIZE FLD TO 1   65400002
         L     R0,SIZEAREA             PLACE SIZE OF MODULE IN REGISTERC65500002
                                       ZERO                             65600002
         B     LDRET00                 RETURN TO CALLER INDICATING     C65700002
                                       COMPUTE FINISHED                 65800002
         SPACE 1                                                        65900002
LDEXT011 EQU   *                                                        66000002
         NI    SIZEAREA+3,ALL-TMFLG    INDICATE TO TRANS. MGR. THAT    C66100002
                                       THIS IS A NEW OLT BY SETTING    C66200002
                                       LAST BIT IN MOD. SIZE FLD TO 0   66300002
         L     R0,SIZEAREA             PLACE SIZE OF MODULE IN REGISTERC66400002
                                       ZERO                             66500002
         SPACE 1                                                        66600002
LDRET00  EQU   *                                                        66700002
         SR    R15,R15                 INDICATE TO CALLER SUCCESSFUL   C66800002
                                       LOAD                             66900002
         SPACE 1                                                        67000002
LDRETERR EQU   *                                                        67100002
         TM    FLAG(PLISTREG),CMPTE    IS THIS A COMPUTE REQUEST        67200002
         BO    LDEXTRET                YES, EVERYTHING OK               67300002
LDRESET  EQU   *                                                        67400002
         NI    LDSWITCH,ALL-CPTSW      CLEAR INTERNAL COMPUTE FLAG      67500002
         SPACE 1                                                        67600002
LDEXTRET EQU   *                                                        67700002
         TM    CDSIND,X'80'             TEST CDS INDICATOR     XM0088   67710002
         BZ    LDEXT04                  NO SUBSTITUTED NAME    XM0088   67720002
         MVC   NAME+4(4,PLISTREG),SREALDEV ORIGINAL NAME       XM0088   67730002
         CLC   TCNT(2,PLISTREG),FOUR    CHECK AREA FOR LOAD    XM0794   67740002
         BL    LDEXT04                  SIZE TOO SMALL         XM0088   67750002
         L     R7,AD(PLISTREG)          CDS ADDRESS            XM0088   67760002
         MVC   2(2,R7),SREALHEX         REAL DEVICE            XM0088   67770002
LDEXT04  DS    0H                                              XM0088   67780002
         ST    R15,RETCODE             SAVE RET CODE FOR DEBUGGING      67800002
         L     R13,SAVEAREA+4          RESTORE POINTER TO CALLERS SAVE C67900002
                                       AREA                             68000002
         L     R14,12(0,R13)           RESTORE RETURN ADDRESS OF CALLER 68100002
         LM    R2,R12,28(R13)          RESTORE CALLERS REGISTERS        68200002
         BR    R14                     RETURN TO CALLER                 68300002
         EJECT                                                          68400002
*********************************************************************** 68500002
*                           EODAD ROUTINE                             * 68600002
*********************************************************************** 68700002
ENDATA   EQU   *                                                        68800002
         CLOSE ((DCBPTR))              CLOSE OLT LIB DCB                68900002
         L     R1,MSGMOD                GET POINTER TO MESSAGE MODULE   69000002
         L     R1,MSG203(R1)            GET POINTER TO MESSAGE IFD203I  69100002
         PWTO  REG=(R1)                WRITE MESSAGE IFD203I            69200002
         LA    R15,24                  PLACE 24 RETURN CODE IN REG 15   69300002
         B     LDRETERR                RETURN TO CALLER INDICATING     C69400002
                                       ORDER ERROR OR GARBAGE           69500002
*********************************************************************** 69600002
*                           SYNAD ROUTINE                             * 69700002
*********************************************************************** 69800002
ERROR    EQU   *                                                        69900002
         SYNADAF   ACSMETH=BPAM    GET THE I/O ERROR           @ZA14111 69920037
         MVC   IOERRMSG+9(78),42(1)  MOVE IT TO BE PRINTED     @ZA14111 69940037
         ST    R14,SAVE14            SAVE RETURN ADDRESS       @ZA14111 69960037
         OI    LDSWITCH,IOERROR        INDICATE TO SELF THAT AN I/O    C70000002
                                       ERROR HAS OCCURRED               70100002
         SYNADRLS                                              @ZA14111 70200037
*                                   RELEASE THE SAVE AREA FROM SYNADAF  70230037
         L     R14,SAVE14          RESORE RETURN ADDR          @ZA14111 70260037
         BR    R14                     RETURN TO CALLER                 70300002
         EJECT                                                          70400002
*********************************************************************** 70500002
*                              DECLARES                               * 70600002
*********************************************************************** 70700002
SAVEAREA DC    18F'0'                  SAVE AREA                        70800002
BUFFER   DC    20F'0'                  READ BUFFER                      70900002
RLCOREAD DC    F'0'                    REAL CORE ADDRESS OF MODULE      71000002
ASSEMAD  DC    F'0'                    ASSEMBLED ADDRESS OF MODULE      71100002
B28WORK  DC    F'0'                    FULLWORD WORK AREA               71200002
WORK     DC    F'0'                    FULLWORD WORK AREA               71300002
RELFT    DC    F'0'                    RELOCATION FACTOR                71400002
RDBUFAD  DC    F'0'                    BUFFER ADDRESS                   71500002
RDLNGTH  DC    F'0'                    LENGTH OF READ                   71600002
RETCODE  DC    F'0'                    RETURN CODE AREA                 71700002
FULL15   DC    F'15'                   FULLWORD CONSTANT EQUAL 15       71800002
ONE      DC    F'1'                    FULLWORD CONSTANT EQUAL 1        71900002
ONE1     EQU   ONE+2                   HALFWORD CONSTANT EQUAL 1        72000002
TTRZ     DC    F'0'                    TTRZ FOR READ ROUTINE            72100002
SIZEAREA DC    F'0'                    SIZE WORK AREA                   72200002
LDSWITCH DC    X'00'                   INTERNAL FLAGS                   72400002
EHLIST   DS    0F                       EBCDIC TO HEX CONVERT  XM0794   72410002
         DC    XL2'02'                  MACRO LEVEL            XM0088   72420002
         DC    CL2'41'                  CONVERT MACRO ID       XM0088   72430002
         DC    A(SREALDEV)              FROM EBCDIC AREA       XM0088   72440002
         DC    A(SREALHEX)              TO HEX AREA            XM0088   72450002
         DC    AL2(4)                   COUNT AND TYPE         XM0088   72460002
SREALHEX DC    XL2'00'                  REAL DEVICE IN HEX     XM0088   72470002
SREALDEV DC    CL4' '                   SAVE REAL DEVICE       XM0088   72480002
HELIST   DS    0F                       HEX TO EBCDIC CONVERT  XM0794   72490002
         DC    XL2'02'                  MACRO LEVEL            XM0088   72500002
         DC    CL2'41'                  CONVERT MACRO ID       XM0088   72510002
         DC    A(SCDSHEX)               FROM HEX AREA          XM0088   72520002
         DC    A(SCDSDEV)               TO EBCDIC AREA         XM0088   72530002
         DC    AL2(2+32768)             COUNT AND TYPE         XM0088   72540002
SCDSHEX  DC    XL2'00'                  EQUATED DEVICE IN HEX  XM0088   72550002
FOUR     DC    H'4'                     HALFWORD 4             XM0794   72560002
SCDSDEV  EQU   WORK                     EQUATED DEVICE         XM0088   72570002
CDSIND   EQU   SCDSHEX                  CDS INDICATOR          XM0088   72580002
SAVE14   DC    F'0'                SAVE R14                    @ZA14111 72584037
IOERRMSG WTO   '                                               @ZA14111X72588037
                                                               @ZA14111X72592037
                        ',MF=L,ROUTCDE=10,DESC=7               @ZA14111 72596037
*********************************************************************** 72600002
*                           OLT LIB DCB                               * 72700002
*********************************************************************** 72800002
OLTDCB   DCB   BLKSIZE=3600,LRECL=80,DDNAME=OLTCDSDD,DSORG=PO,         C72900002
               MACRF=R,RECFM=UT,EODAD=ENDATA,SYNAD=ERROR                73000002
*********************************************************************** 73200002
*                         COMMON AREA DSECT                           * 73300002
*********************************************************************** 73400002
LOADER   IFDCOM                                                         73500002
         IEZDEB                        DSECT FOR DEB             Y02008 73550002
         END                                                            73600002
