         TITLE 'IFDOLT38 TEST ROUTINE DECODE'                           00010000
         TITLE 'IFDOLT38 TEST ROUTINE DECODE'                           00020000
         LCLA  &T,&SPN                                            0002  00030000
.@001    ANOP                                                     0002  00040000
IFDOLT38 CSECT ,                                                  0002  00050000
         BC    15,24(0,@F)                                              00060000
         DC    C'IFDOLT38 14 SEP 73'                             0002  00070000
         STM   @E,@C,12(@D)                                       0002  00080000
         BALR  @B,0                                               0002  00090000
@PSTART  DS    0H                                                 0002  00100000
         USING @PSTART+00000,@B                                   0002  00110000
         ST    @D,@SAV001+4                                       0002  00120000
         LA    @F,@SAV001                                         0002  00130000
         ST    @F,8(0,@D)                                         0002  00140000
         LR    @D,@F                                              0002  00150000
*         GEN(USING CHASCT,2);                                          00160000
         USING CHASCT,2                                                 00170000
         DS    0H                                                       00180000
*         GENERATE DATA;                                                00190000
*         /************************************************************ 00200000
*         /*                        REGISTERS                         * 00210000
*         /************************************************************ 00220000
*         DCL R1 REG(1) PTR(31);         /* REGISTER 1.               * 00230000
*         DCL R2 REG(2) PTR(31);         /* REGISTER 2.               * 00240000
*         DCL I REG(3) PTR(24);          /* REGISTER 3.               * 00250000
*         DCL RETCODE REG(3) PTR(24);    /* REGISTER 3.               * 00260000
*         DCL R5 REG(5) PTR(31);         /* REGISTER 5.               * 00270000
*         DCL R6 REG(6) PTR(31);         /* REGISTER 6.               * 00280000
*         DCL R7 REG(7) PTR(31);         /* REGISTER 7.               * 00290000
*         DCL FSTRTN REG(8) PTR(24);     /* REGISTER 8.               * 00300000
*         DCL R8 REG(8) PTR(31);         /* REGISTER 8.               * 00310000
*         DCL LSTRTN REG(9) PTR(24);     /* REGISTER 9.               * 00320000
*         DCL R13 REG(13) PTR(31);       /* REGISTER 13.              * 00330000
*         DCL R14 REG(14) PTR(31);       /* REGISTER 14.              * 00340000
*         DCL RC REG(15) PTR(24);        /* REGISTER 15.              * 00350000
*         DCL R15 REG(15) PTR(31);       /* REGISTER 15.              * 00360000
*         /************************************************************ 00370000
*         /*                       SAVE AREAS                         * 00380000
*         /************************************************************ 00390000
*         DCL 1 MYSAVE BASED(R13),                                      00400000
*               3 * CHAR(4),                                            00410000
*               3 YOURR13 PTR(31);                                      00420000
*         DCL 1 YOURSAVE BASED(YOURR13),                                00430000
*               3 * CHAR(12),                                           00440000
*               3 YOURR14 PTR(31);                                      00450000
*         /************************************************************ 00460000
*         /*                  SECTION CONTROL TABLE                   * 00470000
*         /************************************************************ 00480000
*         DCL CHASCT CHAR(88) GENERATED;                                00490000
*         DCL 1 SCT BASED(ADDR(CHASCT)), /*--------SCT FORMAT---------* 00500000
*               3 * CHAR(4),             /* NOT LOOKED AT.            * 00510000
*               3 RTNFLDXX CHAR(2),      /* NORMAL ROUTINE SELECTION  * 00520000
*                                        /* FIELD.                    * 00530000
*               3 * CHAR(27),            /* NOT LOOKED AT.            * 00540000
*               3 EXPGMFLG CHAR(1),      /* EXECUTIVE PROGRAM FLAGS.  * 00550000
*                 5 * BIT(2),            /* NOT LOOKED AT.            * 00560000
*                 5 RTNSLCTN BIT(1),     /* ROUTINES SELECTED FLAG.   * 00570000
*               3 * CHAR(6),             /* NOT LOOKED AT.            * 00580000
*               3 EXPANDED CHAR(30);     /* EXPANDED ROUTINE SELECTION* 00590000
*                                        /* FIELD.                    * 00600000
*         /************************************************************ 00610000
*         /*                        MESSAGES                          * 00620000
*         /************************************************************ 00630000
*         DCL IFDMSG38 LABEL NONLOCAL EXTERNAL;                         00640000
*         DCL 1 MSGPTR BASED(R1),        /* MESSAGE POINTERS.         * 00650000
*               3 MSGPTR12 PTR(31),      /* POINTER TO MESSAGE IFD112I* 00660000
*               3 MSGPTR61 PTR(31),      /* POINTER TO MESSAGE IFD161I* 00670000
*               3 MSGPTR55 PTR(31);      /* POINTER TO MESSAGE IFD155I* 00680000
*         DCL 1 MSG112 CHAR(41) BASED(R1),/* MESSAGE IFD112I FORMAT.  * 00690000
*               3 * CHAR(4),             /* LENGTH AND FLAGS.         * 00700000
*               3 MSG112I CHAR(37);      /* MESSAGE TEXT.             * 00710000
*         DCL 1 DOUBLEWD BDY(DWORD) CHAR(8),                            00720000
*               3 SAVR14 PTR(31);                                       00730000
*         DCL 1 FRSTRTN CHAR(4) BDY(WORD),                              00740000
*               2 LASTRTN CHAR(4),                                      00750000
*                 3 * CHAR(1),                                          00760000
*                 3 FRSTRTN1 CHAR(3),                                   00770000
*                   4 LASTRTN1 CHAR(3),                                 00780000
*                     5 * CHAR(1),                                      00790000
*                     5 FRSTRTN2 CHAR(2),                               00800000
*                       6 LASTRTN2 CHAR(2),                             00810000
*                         7 * CHAR(1),                                  00820000
*                         7 FRSTRTN3 CHAR(1),                           00830000
*                           8 LASTRTN3 CHAR(1);                         00840000
*         DCL J FIXED(15);                                              00850000
*         DCL NUMBERS CHAR(10) INITIAL('0123456789');                   00860000
*         DCL NUMBER CHAR(1) BASED(R6);                                 00870000
*         DCL 1 SWITCHES CHAR(1) INITIAL('00'X),                        00880000
*               3 SECTIONS BIT(3),                                      00890000
*                 5 SECT1 BIT(1),   /* TEST SECTION OF LENGTH 1 */      00900000
*                 5 SECT2 BIT(1),   /* TEST SECTION OF LENGTH 2 */      00910000
*                 5 SECT3 BIT(1),   /* TEST SECTION OF LENGTH 3 */      00920000
*               3 EXPFLG BIT(1),                                        00930000
*               3 DUBNUM BIT(1),                                        00940000
*               3 TRINUM BIT(1);                                        00950000
*         DCL MSKTABLE CHAR(8) INITIAL('0180402010080402'X);            00960000
*         DCL MASK CHAR(1) BASED(R6);                                   00970000
*         DCL ERRCODE CHAR(2);                                          00980000
*         DCL CECTST78 INTERNAL ENTRY;                                  00990000
*         DCL CECTST80 INTERNAL ENTRY;                                  01000000
*         DCL INPUTBUF CHAR(4) BASED(R5);                               01010000
*         DCL RTNFIELD CHAR(1) BASED(R7);                               01020000
*         DCL INBUFPTR PTR(31) GENERATED;                               01030000
*         DCL REDEFINE PTR(31) GENERATED;                               01040000
*         DCL ADSVAREA PTR(31) GENERATED;                               01050000
*         DCL HRTSEL FIXED(15) GENERATED;                               01060000
*         /************************************************************ 01070000
*         /*                        SWITCHES                          * 01080000
*         /************************************************************ 01090000
*         DCL CESWT CHAR(1) GENERATED;                                  01100000
*         DCL 1 OLTEPSW CHAR(1) BASED(ADDR(CESWT)),                     01110000
*               3 LEGALTST BIT(1),                                      01120000
*               3 * BIT(4),                                             01130000
*               3 REINT BIT(1);                                         01140000
*         DCL CESWT1 CHAR(1) GENERATED;                                 01150000
*         DCL 1 OLTEPSW1 CHAR(1) BASED(ADDR(CESWT1)),                   01160000
*               3 RTNFLD BIT(1);                                        01170000
*         DCL CESWTR CHAR(1) GENERATED;  /* REI SWITCHES        S20203* 01180000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR)),   /*             S20203* 01190000
*               3 RETAINAC BIT(1),       /* REI ACTIVE          S20203* 01200000
*               3 * BIT(1),              /*                     S20203* 01210000
*               3 REMNOMSG BIT(1),       /* REMOTE NO MSG       S20203* 01220000
*               3 * BIT(5);              /*                     S20203* 01230000
*                                                                       01240000
*         DCL CESWTR2 CHAR(1) GEND;     /* CE SWITCH IN COMAREA YM2273* 01250000
*         DCL 1 * CHAR(1) BASED(ADDR(CESWTR2)),              /* YM2273* 01260000
*           3 * BIT(7),                                      /* YM2273* 01270000
*           3 DPMSGREI BIT(1);          /* DP MSG FLG FOR REI   YM2273* 01280000
*         RESTRICT(2,3,5,6,7,8,9);                                      01290000
*         RESTRICT(1);                                                  01300000
*         R5=INBUFPTR;              /* PTR TO ROUTINE FIELD IN I/O BUF  01310000
         L     @5,INBUFPTR                                        0053  01320000
*         RTNFLD ='0'B;             /* RESET FLAG BEFORE DECODING RTNS  01330000
         NI    OLTEPSW1,B'01111111'                               0054  01340000
* CECTST38:                                                             01350000
*         /************************************************************ 01360000
*         /*                                                          * 01370000
*         /*                DECODE ROUTINES SELECTED                  * 01380000
*         /*                                                          * 01390000
*         /************************************************************ 01400000
*         FRSTRTN=FRSTRTN&&FRSTRTN; /* CLEAR AREA SET ASIDE FOR */      01410000
CECTST38 XC    FRSTRTN(4),FRSTRTN                                 0055  01420000
*         R6=ADDR(NUMBERS);         /* DECODING ROUTINE NUMBER  */      01430000
         LA    @6,NUMBERS                                         0056  01440000
*         DO I=10 TO 1 BY -1;       /* IS THE CHAR IN INBUFR NUMERIC */ 01450000
         LA    @3,10                                              0057  01460000
*           IF INPUTBUF(1)=NUMBER THEN /* YES, DECODE ROUTINE NUMBER  * 01470000
@DO9FF   CLC   0(1,@5),0(@6)                                      0058  01480000
*             GO TO CECTST39;       /* NO, SET ERROR CODE -09- AND   */ 01490000
         BC    08,CECTST39                                        0059  01500000
*           R6=R6+1;                /* PRINT ERROR MESSAGE IFD112I   */ 01510000
         AH    @6,@D1                                             0060  01520000
*         END;                                                          01530000
* CECTST36:                                                             01540000
*         ERRCODE='09';                                                 01550000
         BCT   @3,@DO9FF                                          0061  01560000
CECTST36 MVC   ERRCODE(2),@C2                                     0062  01570000
*         GO TO CECTST03;                                               01580000
         BC    15,CECTST03                                        0063  01590000
* CECTST39:/* IS DOUBLE NUMBER ROUTINE SELECTED */                      01600000
*         DUBNUM='1'B;              /* SET DOUBLE NUMBER INDICATOR */   01610000
CECTST39 OI    SWITCHES,B'00001000'                               0064  01620000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+1 */      01630000
         LA    @6,NUMBERS                                         0065  01640000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, CONTINUE TO*/      01650000
         LA    @3,10                                              0066  01660000
*           IF INPUTBUF(2)=NUMBER THEN /* DECODE. NO, CLEAR DOUBLE*/    01670000
@DO9FB   CLC   1(1,@5),0(@6)                                      0067  01680000
*             GO TO CECTST40;       /* NUMBER INDICATOR AND GO  */      01690000
         BC    08,CECTST40                                        0068  01700000
*           R6=R6+1;                /* TO ROUTINE WHICH SETS THE*/      01710000
         AH    @6,@D1                                             0069  01720000
*         END;                      /* SCT ROUTINE FLAGS        */      01730000
*         DUBNUM='0'B;                                                  01740000
         BCT   @3,@DO9FB                                          0070  01750000
         NI    SWITCHES,B'11110111'                               0071  01760000
*         GO TO CECTST42;                                               01770000
         BC    15,CECTST42                                        0072  01780000
* CECTST40:/* IS TRIPLE NUMBER ROUTINE SELECTED */                      01790000
*         TRINUM='1'B;              /* SET TRIPLE NUMBER INDICATOR */   01800000
CECTST40 OI    SWITCHES,B'00000100'                               0073  01810000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+2 */      01820000
         LA    @6,NUMBERS                                         0074  01830000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, CONTINUE TO*/      01840000
         LA    @3,10                                              0075  01850000
*           IF INPUTBUF(3)=NUMBER THEN /* DECODE. NO, CLEAR TRIPLE */   01860000
@DO9F7   CLC   2(1,@5),0(@6)                                      0076  01870000
*             GO TO CECTST41;       /* NUMBER INDICATOR.        */      01880000
         BC    08,CECTST41                                        0077  01890000
*           R6=R6+1;                                                    01900000
         AH    @6,@D1                                             0078  01910000
*         END;                                                          01920000
*         TRINUM='0'B;                                                  01930000
         BCT   @3,@DO9F7                                          0079  01940000
         NI    SWITCHES,B'11111011'                               0080  01950000
*         GO TO CECTST42;           /* BYPASS CLEARING DOUBLE   */      01960000
         BC    15,CECTST42                                        0081  01970000
*                                   /* NUMBER ROUTINE INDICATOR.*/      01980000
* CECTST41:/* CLEAR DOUBLE NUMBER INDICATOR */                          01990000
*         DUBNUM='0'B;              /* CLEAR DOUBLE NUMBER INDICATOR */ 02000000
CECTST41 NI    SWITCHES,B'11110111'                               0082  02010000
* CECTST42:/* DETERMINE WHICH TYPE OF ROUTINE SELECTED */               02020000
*         RTNFLD='1'B;              /* SET RTNFLD INDICATOR ON TO */    02030000
CECTST42 OI    OLTEPSW1,B'10000000'                               0083  02040000
*                                   /* INDICATE ROUTINES HAVE BEEN*/    02050000
*                                   /* SELECTED                   */    02060000
*         RTNSLCTN='1'B;            /* SET BIT IN EXECUTIVE PROGRAM   * 02070000
         OI    SCT+33,B'00100000'                                 0084  02080000
*                                   /* FLAGS TO 1 TO INDICATE OPERATOR* 02090000
*                                   /* HAS MADE A ROUTINE SELECTION.  * 02100000
*         IF DUBNUM='1'B THEN       /* HAS A DOUBLE NUMBER ROUTINE */   02110000
         TM    SWITCHES,B'00001000'                               0085  02120000
*           GO TO CECTST43;         /* BEEN ENTERED. YES, GO TO    */   02130000
         BC    01,CECTST43                                        0086  02140000
*                                   /* DOUBLE NUMBER ROUTINE       */   02150000
*         IF TRINUM='1'B THEN       /* HAS A TRIPLE NUMBER ROUTINE */   02160000
         TM    SWITCHES,B'00000100'                               0087  02170000
*           GO TO CECTST59;         /* BEEN ENTERED. YES, GO TO    */   02180000
         BC    01,CECTST59                                        0088  02190000
*                                   /* TRIPLE NUMBER ROUTINE       */   02200000
*         GO TO CECTST64;           /* GO TO SINGLE NUMBER ROUTINE */   02210000
         BC    15,CECTST64                                        0089  02220000
* CECTST43:/* ROUTINE TO HANDLE DOUBLE NUMBER ROUTINE SELECTED */       02230000
*         FRSTRTN2=INPUTBUF(1:2);   /* CONVERT DOUBLE NUMBER */         02240000
CECTST43 MVC   FRSTRTN+2(2),0(@5)                                 0090  02250000
*         GEN;                      /* ROUTINE TO BINARY     */         02260000
         PACK  DOUBLEWD(8),FRSTRTN(4)                                   02270000
         CVB   FSTRTN,DOUBLEWD                                          02280000
         DS    0H                                                       02290000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER */      02300000
         AH    @5,@D2                                             0092  02310000
*         DUBNUM='0'B;              /* RESET DOUBLE NUMBER INDICATOR */ 02320000
         NI    SWITCHES,B'11110111'                               0093  02330000
*         IF FSTRTN>16 THEN         /* IS FIRST ROUTINE > 16. YES, GO * 02340000
         CH    @8,@D3                                             0094  02350000
*           GO TO CECTST50;         /* TO ROUTINE FOR ROUTINES > 16.  * 02360000
         BC    02,CECTST50                                        0095  02370000
*         IF INPUTBUF(1)^='-' THEN  /* IS CHAR. IN INBUFR+0 A HYPHEN. * 02380000
         CLI   0(@5),C'-'                                         0096  02390000
*           GO TO CECTST46;         /* NO, CONTINUE BY FINDING OUT    * 02400000
         BC    07,CECTST46                                        0097  02410000
*                                   /* WHAT IT IS                     * 02420000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER */      02430000
         AH    @5,@D1                                             0098  02440000
*         DO J=1 TO 2;              /* ARE THE CHAR. IN INBUFR+0 AND */ 02450000
         LA    @F,1                                               0099  02460000
         STH   @F,J                                               0099  02470000
*         R6=ADDR(NUMBERS);         /* INBUFR+1 NUMERIC. YES, CONTINUE* 02480000
@DO9F3   LA    @6,NUMBERS                                         0100  02490000
*           DO I=10 TO 1 BY -1;     /* TO DECODE. NO, SET ERROR CODE */ 02500000
         LA    @3,10                                              0101  02510000
*           IF INPUTBUF(J)=NUMBER THEN /* -10- AND PRINT ERROR MESSAGE* 02520000
@DO9EF   LH    @4,J                                               0102  02530000
         LA    @A,0(@4,@5)                                        0102  02540000
         BCTR  @A,0                                               0102  02550000
         CLC   0(1,@A),0(@6)                                      0102  02560000
*             GO TO CECTST45;       /* IFD112I                       */ 02570000
         BC    08,CECTST45                                        0103  02580000
*           R6=R6+1;                                                    02590000
         AH    @6,@D1                                             0104  02600000
*           END;                                                        02610000
* CECTST44:                                                             02620000
*         /************************************************************ 02630000
*         /*                                                          * 02640000
*         /*       ERROR, INVALID INCLUSIVE RANGE OF ROUTINES         * 02650000
*         /*                                                          * 02660000
*         /************************************************************ 02670000
*         ERRCODE='10';                                                 02680000
         BCT   @3,@DO9EF                                          0105  02690000
CECTST44 MVC   ERRCODE(2),@C5                                     0106  02700000
*         GO TO CECTST03;                                               02710000
         BC    15,CECTST03                                        0107  02720000
* CECTST45:                                                             02730000
*         END;                                                          02740000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+2    */   02750000
CECTST45 LH    @F,J                                               0108  02760000
         AH    @F,@D1                                             0108  02770000
@DO9F2   STH   @F,J                                               0108  02780000
         CH    @F,@D2                                             0108  02790000
         BC    12,@DO9F3                                          0108  02800000
         LA    @6,NUMBERS                                         0109  02810000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, GO TO ROUTINE */   02820000
         LA    @3,10                                              0110  02830000
*           IF INPUTBUF(3)=NUMBER THEN /* THAT CONVERTS TRIPLE     */   02840000
@DO9EB   CLC   2(1,@5),0(@6)                                      0111  02850000
*             GO TO CECTST75;       /* NUMBER FOR LAST ROUTINE IN  */   02860000
         BC    08,CECTST75                                        0112  02870000
*           R6=R6+1;                /* AN INCLUSIVE SERIES OF      */   02880000
         AH    @6,@D1                                             0113  02890000
*         END;                      /* ROUTINES. NO, GO TO ROUTINE */   02900000
*         GO TO CECTST73;           /* THAT CONVERTS DOUBLE NUMBER */   02910000
         BCT   @3,@DO9EB                                          0114  02920000
         BC    15,CECTST73                                        0115  02930000
*                                   /* FOR LAST ROUTINE IN AN      */   02940000
*                                   /* INCLUSIVE SERIES OF ROUTINES*/   02950000
* CECTST46:/* FIRST ROUTINE EQUALS LAST ROUTINE. */                     02960000
*          /* NORMAL ROUTINE SELECTION FIELD.    */                     02970000
*         LSTRTN=FSTRTN;            /* SET LAST ROUTINE EQUAL TO FIRST* 02980000
CECTST46 LR    @9,@8                                              0116  02990000
*         CALL CECTST80;            /* ROUTINE AND GO TO SUB-ROUTINE  * 03000000
         BAL   @E,CECTST80                                        0117  03010000
*                                   /* THAT SETS ROUTINE FLAGS IN THE * 03020000
*                                   /* NORMAL ROUTINE AREA            * 03030000
*         GO TO CECTST58;           /* CONTINUE TO DECODE. */           03040000
         BC    15,CECTST58                                        0118  03050000
* CECTST50:/* ROUTINE FOR HANDLING ROUTINES IN */                       03060000
*          /* EXPANDED ROUTINE SELECTION FIELD.*/                       03070000
*         IF INPUTBUF(1)^='-' THEN  /* IS CHAR. IN INBUFR+0 A HYPHEN. * 03080000
CECTST50 CLI   0(@5),C'-'                                         0119  03090000
*           GO TO CECTST53;         /* NO, FIND OUT WHAT IT IS        * 03100000
         BC    07,CECTST53                                        0120  03110000
*         R5=R5+1;                  /* YES, INCREMENT INBUFR POINTER  * 03120000
         AH    @5,@D1                                             0121  03130000
*         DO J=1 TO 2;              /* ARE THE CHAR. IN INBUFR AND */   03140000
         LA    @F,1                                               0122  03150000
         STH   @F,J                                               0122  03160000
*         R6=ADDR(NUMBERS);         /* INBUFR+1 NUMERIC. NO, SET   */   03170000
@DO9E7   LA    @6,NUMBERS                                         0123  03180000
*           DO I=10 TO 1 BY -1;     /* ERROR CODE -10- AND PRINT   */   03190000
         LA    @3,10                                              0124  03200000
*           IF INPUTBUF(J)=NUMBER THEN /* ERROR MESSAGE IFD112I    */   03210000
@DO9E3   LH    @4,J                                               0125  03220000
         LA    @A,0(@4,@5)                                        0125  03230000
         BCTR  @A,0                                               0125  03240000
         CLC   0(1,@A),0(@6)                                      0125  03250000
*             GO TO CECTST51;       /* YES, CONTINUE TO DECODE     */   03260000
         BC    08,CECTST51                                        0126  03270000
*           R6=R6+1;                                                    03280000
         AH    @6,@D1                                             0127  03290000
*           END;                                                        03300000
*         GO TO CECTST44;                                               03310000
         BCT   @3,@DO9E3                                          0128  03320000
         BC    15,CECTST44                                        0129  03330000
* CECTST51:                                                             03340000
*         END;                                                          03350000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR IN INBUFR+2 NUMERIC* 03360000
CECTST51 LH    @F,J                                               0130  03370000
         AH    @F,@D1                                             0130  03380000
@DO9E6   STH   @F,J                                               0130  03390000
         CH    @F,@D2                                             0130  03400000
         BC    12,@DO9E7                                          0130  03410000
         LA    @6,NUMBERS                                         0131  03420000
*         DO I=10 TO 1 BY -1;       /* YES, GO TO ROUTINE THAT        * 03430000
         LA    @3,10                                              0132  03440000
*           IF INPUTBUF(3)=NUMBER THEN /* CONVERTS A TRIPLE NUMBER FOR* 03450000
@DO9DF   CLC   2(1,@5),0(@6)                                      0133  03460000
*             GO TO CECTST62;       /* A LAST ROUTINE IN AN INCLUSIVE * 03470000
         BC    08,CECTST62                                        0134  03480000
*           R6=R6+1;                /* RANGE. NO,                     * 03490000
         AH    @6,@D1                                             0135  03500000
*         END;                      /*    CONVERT A DOUBLE NUMBER FOR * 03510000
*                                   /* A LAST ROUTINE IN AN INCLUSIVE * 03520000
*                                   /* RANGE                          * 03530000
*         LASTRTN2=INPUTBUF(1:2);                                       03540000
         BCT   @3,@DO9DF                                          0136  03550000
         MVC   FRSTRTN+2(2),0(@5)                                 0137  03560000
*         GEN;                                                          03570000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   03580000
         CVB   LSTRTN,DOUBLEWD                                          03590000
         DS    0H                                                       03600000
*         IF LSTRTN<FSTRTN THEN     /* IS INCLUSIVE RANGE VALID. */     03610000
         CR    @9,@8                                              0139  03620000
*           GO TO CECTST44;         /* NO, SET ERROR CODE 10,    */     03630000
         BC    04,CECTST44                                        0140  03640000
*                                   /* PRINT MESSAGE IFD112I AND */     03650000
*                                   /* RETURN TO CALLER.         */     03660000
*                                   /* YES, CONTINUE.            */     03670000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER */      03680000
         AH    @5,@D2                                             0141  03690000
*         CALL CECTST78;            /* GO TO ROUTINE TO SET ROUTINE */  03700000
         BAL   @E,CECTST78                                        0142  03710000
*         GO TO CECTST58;           /* FLAGS IN EXPANDED AREA OF SCT*/  03720000
         BC    15,CECTST58                                        0143  03730000
*                                   /* AND UPON RETURN CONTINUE TO  */  03740000
*                                   /* DECODE                       */  03750000
* CECTST53:/* FIRST ROUTINE EQUALS LAST ROUTINE, */                     03760000
*          /* EXPANDED ROUTINE SELECTION FIELD.  */                     03770000
*         LSTRTN=FSTRTN;            /* SET LAST ROUTINE EQUAL TO FIRST* 03780000
CECTST53 LR    @9,@8                                              0144  03790000
*         CALL CECTST78;            /* CALL ROUTINE TO SET ROUTINE */   03800000
         BAL   @E,CECTST78                                        0145  03810000
*                                   /* FLAGS IN EXPANDED AREA OF SCT*/  03820000
* CECTST58:                                                             03830000
*         /************************************************************ 03840000
*         /*                                                          * 03850000
*         /*                   DECODE DELIMITERS                      * 03860000
*         /*                                                          * 03870000
*         /************************************************************ 03880000
*         IF INPUTBUF(1)^=',' THEN  /* IS CHAR. IN INBUFR+0 A COMMA.  * 03890000
CECTST58 CLI   0(@5),C','                                         0146  03900000
*           GO TO CECTST55;         /* NO, FIND OUT WHAT IT IS    */    03910000
         BC    07,CECTST55                                        0147  03920000
* CECTST54:/* DELIMITER IS LEGAL, CONTINUE TO DECODE */                 03930000
*         R5=R5+1;                  /* YES, INCREMENT INBUFR POINTER */ 03940000
CECTST54 AH    @5,@D1                                             0148  03950000
*         GO TO CECTST38;           /* AND CONTINUE TO DECODE        */ 03960000
         BC    15,CECTST38                                        0149  03970000
* CECTST55:/* IS THE DELIMITER A SLASH */                               03980000
*         IF INPUTBUF(1)='/' THEN   /* IS CHAR. IN INBUFR+0 A SLASH. */ 03990000
CECTST55 CLI   0(@5),C'/'                                         0150  04000000
*           GO TO CECTST99;         /* YES, RETURN TO CALLER. NO, */    04010000
         BC    08,CECTST99                                        0151  04020000
* CECTST56:                                                             04030000
*         /************************************************************ 04040000
*         /*                                                          * 04050000
*         /*                 ERROR, ILLEGAL DELIMITER                 * 04060000
*         /*                                                          * 04070000
*         /************************************************************ 04080000
*         ERRCODE='01';             /* SET ERROR CODE -01- AND    */    04090000
CECTST56 MVC   ERRCODE(2),@C8                                     0152  04100000
*         GO TO CECTST03;           /* PRINT ERROR MESSAGE IFD112I*/    04110000
         BC    15,CECTST03                                        0153  04120000
* CECTST59:/* ROUTINE TO HANDLE TRIPLE NUMBER ROUTINE SELECTED */       04130000
*         FRSTRTN1=INPUTBUF(1:3);   /* PUT TRIPLE NUMBER IN FRSTRTN */  04140000
CECTST59 MVC   FRSTRTN+1(3),0(@5)                                 0154  04150000
*         GEN;                      /* AND CONVERT IT TO BINARY     */  04160000
         PACK  DOUBLEWD(8),FRSTRTN(4)                                   04170000
         CVB   FSTRTN,DOUBLEWD                                          04180000
         DS    0H                                                       04190000
*         TRINUM='0'B;              /* CLEAR TRIPLE NUMBER INDICATOR */ 04200000
         NI    SWITCHES,B'11111011'                               0156  04210000
*         IF FSTRTN>255 THEN        /* IS ROUTINE NUMBER > 255. YES, */ 04220000
         CH    @8,@D4                                             0157  04230000
*           GO TO CECTST36;         /* SET ERROR CODE -09- AND PRINT */ 04240000
         BC    02,CECTST36                                        0158  04250000
*                                   /* ERROR MESSAGE IFD112I         */ 04260000
*         R5=R5+3;                  /* NO, INCREMENT INBUFR POINTER */  04270000
         AH    @5,@D5                                             0159  04280000
*         IF INPUTBUF(1)^='-' THEN  /* IS CHAR. IN INBUFR+0 A HYPHEN. * 04290000
         CLI   0(@5),C'-'                                         0160  04300000
*           GO TO CECTST53;         /* NO, FIND OUT WHAT IT IS        * 04310000
         BC    07,CECTST53                                        0161  04320000
*         R5=R5+1;                  /* YES, INCREMENT INBUFR POINTER */ 04330000
         AH    @5,@D1                                             0162  04340000
*         DO J=1 TO 3;              /* ARE THE CHAR. IN INBUFR+0,*/     04350000
         LA    @F,1                                               0163  04360000
         STH   @F,J                                               0163  04370000
*         R6=ADDR(NUMBERS);         /* INBUFR+1 AND INBUFR+2     */     04380000
@DO9DB   LA    @6,NUMBERS                                         0164  04390000
*           DO I=10 TO 1 BY -1;     /* NUMERIC. YES, CONTINUE    */     04400000
         LA    @3,10                                              0165  04410000
*           IF INPUTBUF(J)=NUMBER THEN /* NO, SET ERROR CODE -10-*/     04420000
@DO9D7   LH    @4,J                                               0166  04430000
         LA    @A,0(@4,@5)                                        0166  04440000
         BCTR  @A,0                                               0166  04450000
         CLC   0(1,@A),0(@6)                                      0166  04460000
*             GO TO CECTST61;       /* AND PRINT ERROR MESSAGE   */     04470000
         BC    08,CECTST61                                        0167  04480000
*           R6=R6+1;                /* IFD112I                   */     04490000
         AH    @6,@D1                                             0168  04500000
*           END;                                                        04510000
*         GO TO CECTST44;                                               04520000
         BCT   @3,@DO9D7                                          0169  04530000
         BC    15,CECTST44                                        0170  04540000
* CECTST61:                                                             04550000
*         END;                                                          04560000
* CECTST62:/* ROUTINE FOR INCLUSIVE ROUTINES IN */                      04570000
*          /* EXPANDED ROUTINE SELECTION FIELD  */                      04580000
*         LASTRTN1=INPUTBUF(1:3);   /* PUT TRIPLE NUMBER IN LASTRTN*/   04590000
CECTST61 LH    @F,J                                               0171  04600000
         AH    @F,@D1                                             0171  04610000
@DO9DA   STH   @F,J                                               0171  04620000
         CH    @F,@D5                                             0171  04630000
         BC    12,@DO9DB                                          0171  04640000
CECTST62 MVC   FRSTRTN+1(3),0(@5)                                 0172  04650000
*         GEN;                      /* AND CONVERT IT TO BINARY    */   04660000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   04670000
         CVB   LSTRTN,DOUBLEWD                                          04680000
         DS    0H                                                       04690000
*         IF LSTRTN<FSTRTN THEN     /* IS INCLUSIVE RANGE VALID. */     04700000
         CR    @9,@8                                              0174  04710000
*           GO TO CECTST44;         /* NO, SET ERROR CODE 10,    */     04720000
         BC    04,CECTST44                                        0175  04730000
*                                   /* PRINT MESSAGE IFD112I AND */     04740000
*                                   /* RETURN TO CALLER.         */     04750000
*                                   /* YES, CONTINUE.            */     04760000
*         IF LSTRTN>255 THEN        /* IS LAST ROUTINE OUTSIDE LIMITS * 04770000
         CH    @9,@D4                                             0176  04780000
*           GO TO CECTST44;         /* OF ALLOWED ROUTINES. YES, SET  * 04790000
         BC    02,CECTST44                                        0177  04800000
*                                   /* ERROR CODE -10- AND PRINT ERROR* 04810000
*                                   /* MESSAGE IFD112I . NO, INCREMENT* 04820000
*         R5=R5+3;                  /* INBUFR POINTER BY THREE        * 04830000
         AH    @5,@D5                                             0178  04840000
*         CALL CECTST78;            /* SET ROUTINE FLAGS IN EXPANDED */ 04850000
         BAL   @E,CECTST78                                        0179  04860000
*                                   /* AREA                          */ 04870000
*         GO TO CECTST58;           /* CONTINUE TO DECODE. */           04880000
         BC    15,CECTST58                                        0180  04890000
* CECTST64:/* ROUTINE TO HANDLE SINGLE NUMBER ROUTINE SELECTED */       04900000
*         FRSTRTN3=INPUTBUF(1);      /* PUT SINGLE NUMBER IN FRSTRTN  * 04910000
CECTST64 MVC   FRSTRTN+3(1),0(@5)                                 0181  04920000
*         GEN;                      /* AND CONVERT IT TO BINARY.      * 04930000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   04940000
         CVB   FSTRTN,DOUBLEWD                                          04950000
         DS    0H                                                       04960000
*         IF FSTRTN=0 THEN          /* IS ROUTINE 0 SPECIFIED. */       04970000
         LTR   @8,@8                                              0183  04980000
*           GO TO CECTST36;         /* YES, ERROR. */                   04990000
         BC    08,CECTST36                                        0184  05000000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER       * 05010000
         AH    @5,@D1                                             0185  05020000
*         IF INPUTBUF(1)='-' THEN   /* IS CHAR. IN INBUFR+0 A HYPHEN  * 05030000
         CLI   0(@5),C'-'                                         0186  05040000
*           GO TO CECTST68;         /* YES, DECODE NUMBER THAT FOLLOWS* 05050000
         BC    08,CECTST68                                        0187  05060000
*         LSTRTN=FSTRTN;            /* PUT FIRST ROUTINE IN LSTRTN */   05070000
         LR    @9,@8                                              0188  05080000
*         CALL CECTST80;            /* GO TO ROUTINE THAT SETS FLAGS */ 05090000
         BAL   @E,CECTST80                                        0189  05100000
*                                   /* IN NORMAL ROUTINE AREA        */ 05110000
*         GO TO CECTST58;           /* CONTINUE TO DECODE. */           05120000
         BC    15,CECTST58                                        0190  05130000
* CECTST68:/* ROUTINE TO HANDLE INCLUSIVE ROUTINES SELECTED THAT      * 05140000
*          /* CARRY OVER INTO BOTH THE NORMAL AND EXPANDED ROUTINE    * 05150000
*          /* SELECTION FIELD.                                        * 05160000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER */      05170000
CECTST68 AH    @5,@D1                                             0191  05180000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR NUMERIC * 05190000
         LA    @6,NUMBERS                                         0192  05200000
*         DO I=10 TO 1 BY -1;       /* NO, SET ERROR CODE -10- AND    * 05210000
         LA    @3,10                                              0193  05220000
*         IF INPUTBUF(1)=NUMBER THEN/* PRINT ERROR MESSAGE IFD112I.   * 05230000
@DO9D3   CLC   0(1,@5),0(@6)                                      0194  05240000
*           GO TO CECTST69;         /* YES, CONTINUE TO DECODE        * 05250000
         BC    08,CECTST69                                        0195  05260000
*         R6=R6+1;                                                      05270000
         AH    @6,@D1                                             0196  05280000
*         END;                                                          05290000
*         GO TO CECTST44;                                               05300000
         BCT   @3,@DO9D3                                          0197  05310000
         BC    15,CECTST44                                        0198  05320000
* CECTST69:                                                             05330000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+1 */      05340000
CECTST69 LA    @6,NUMBERS                                         0199  05350000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, CONTINUE TO*/      05360000
         LA    @3,10                                              0200  05370000
*         IF INPUTBUF(2)=NUMBER THEN/*DECODE. NO, PUT INCLUSIVE*/       05380000
@DO9CF   CLC   1(1,@5),0(@6)                                      0201  05390000
*           GO TO CECTST72;         /* ROUTINE NUMBER IN LASTRTN*/      05400000
         BC    08,CECTST72                                        0202  05410000
*         R6=R6+1;                  /* AND CONVERT IT TO BINARY */      05420000
         AH    @6,@D1                                             0203  05430000
*         END;                                                          05440000
*         LASTRTN3=INPUTBUF(1);     /* PUT SINGLE NUMBER IN LASTRTN   * 05450000
         BCT   @3,@DO9CF                                          0204  05460000
         MVC   FRSTRTN+3(1),0(@5)                                 0205  05470000
*         GEN;                      /* AND CONVERT IT TO BINARY.      * 05480000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   05490000
         CVB   LSTRTN,DOUBLEWD                                          05500000
         DS    0H                                                       05510000
*         IF LSTRTN<FSTRTN THEN     /* IS INCLUSIVE RANGE VALID. */     05520000
         CR    @9,@8                                              0207  05530000
*           GO TO CECTST44;         /* NO, SET ERROR CODE 10,    */     05540000
         BC    04,CECTST44                                        0208  05550000
*                                   /* PRINT MESSAGE IFD112I AND */     05560000
*                                   /* RETURN TO CALLER.         */     05570000
*                                   /* YES, CONTINUE.            */     05580000
*         R5=R5+1;                  /* INCREMENT INBUFR POINTER AND GO* 05590000
         AH    @5,@D1                                             0209  05600000
* CECTST70:                                                             05610000
*         CALL CECTST80;            /* TO ROUTINE WHICH FLAGS ROUTINES* 05620000
CECTST70 BAL   @E,CECTST80                                        0210  05630000
*         GO TO CECTST58;           /* SELECTED IN NORMAL AREA, THEN  * 05640000
         BC    15,CECTST58                                        0211  05650000
*                                   /* CONTINUE TO DECODE.            * 05660000
* CECTST72:                                                             05670000
*         R6=ADDR(NUMBERS);         /* IS THE CHAR. IN INBUFR+2 */      05680000
CECTST72 LA    @6,NUMBERS                                         0212  05690000
*         DO I=10 TO 1 BY -1;       /* NUMERIC. YES, HANDLE TRIPLE */   05700000
         LA    @3,10                                              0213  05710000
*         IF INPUTBUF(3)=NUMBER THEN/* NUMBER ROUTINE. NO, CONVERT */   05720000
@DO9CB   CLC   2(1,@5),0(@6)                                      0214  05730000
*           GO TO CECTST75;         /* DOUBLE NUMBER TO BINARY AND */   05740000
         BC    08,CECTST75                                        0215  05750000
*         R6=R6+1;                  /* SET ROUTINE FLAGS IN SCT    */   05760000
         AH    @6,@D1                                             0216  05770000
*         END;                                                          05780000
* CECTST73:/* ROUTINE THAT CONVERTS DOUBLE NUMBER FOR LAST */           05790000
*          /* ROUTINE IN AN INCLUSIVE SERIES OF ROUTINES   */           05800000
*         LASTRTN2=INPUTBUF(1:2);   /* CONVERT DOUBLE NUMBER */         05810000
         BCT   @3,@DO9CB                                          0217  05820000
CECTST73 MVC   FRSTRTN+2(2),0(@5)                                 0218  05830000
*         GEN;                      /* TO BINARY             */         05840000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   05850000
         CVB   LSTRTN,DOUBLEWD                                          05860000
         DS    0H                                                       05870000
*         R5=R5+2;                  /* INCREMENT INBUFR POINTER */      05880000
         AH    @5,@D2                                             0220  05890000
*         IF LSTRTN^>16 THEN        /* IS LSTRTN > 16. NO, GO TO */     05900000
         CH    @9,@D3                                             0221  05910000
*           GO TO CECTST70;         /* ROUTINE THAT SETS ROUTINE */     05920000
         BC    12,CECTST70                                        0222  05930000
*         LASTRTN=LSTRTN;           /* FLAGS IN NORMAL AREA.     */     05940000
         ST    @9,FRSTRTN                                         0223  05950000
*         LSTRTN=16;                /* YES, SET FLAGS IN BOTH    */     05960000
         LA    @9,16                                              0224  05970000
*         CALL CECTST80;            /* AREAS RESERVED FOR ROUTINE*/     05980000
         BAL   @E,CECTST80                                        0225  05990000
*         FSTRTN=17;                /* FLAGS                     */     06000000
         LA    @8,17                                              0226  06010000
*         LSTRTN=LASTRTN;                                               06020000
         L     @9,FRSTRTN                                         0227  06030000
*         CALL CECTST78;                                                06040000
         BAL   @E,CECTST78                                        0228  06050000
*         GO TO CECTST58;           /* CONTINUE TO DECODE       */      06060000
         BC    15,CECTST58                                        0229  06070000
* CECTST75:                                                             06080000
*         LSTRTN=16;                /* SETS ROUTINE FLAGS IN  */        06090000
CECTST75 LA    @9,16                                              0230  06100000
*         CALL CECTST80;            /* NORMAL AREA            */        06110000
         BAL   @E,CECTST80                                        0231  06120000
* CECTST76:                                                             06130000
*         LASTRTN1=INPUTBUF(1:3);   /* CONVERT TRIPLE NUMBER TO BINARY* 06140000
CECTST76 MVC   FRSTRTN+1(3),0(@5)                                 0232  06150000
*         GEN;                                                          06160000
         PACK  DOUBLEWD(8),LASTRTN(4)                                   06170000
         CVB   LSTRTN,DOUBLEWD                                          06180000
         DS    0H                                                       06190000
*         IF LSTRTN>255 THEN        /* IS LAST INCLUSIVE ROUTINE */     06200000
         CH    @9,@D4                                             0234  06210000
*           GO TO CECTST44;         /* OUTSIDE LEGAL LIMITS. YES,*/     06220000
         BC    02,CECTST44                                        0235  06230000
*         R5=R5+3;                  /* SET ERROR CODE -10- AND   */     06240000
         AH    @5,@D5                                             0236  06250000
*         FSTRTN=17;                /* PRINT ERROR MESSAGE IFD112I*/    06260000
         LA    @8,17                                              0237  06270000
*         CALL CECTST78;            /* NO, SET ROUTINE FLAGS ON  */     06280000
         BAL   @E,CECTST78                                        0238  06290000
*         GO TO CECTST58;           /* IN SCT                    */     06300000
         BC    15,CECTST58                                        0239  06310000
* CECTST99:/* EXIT ROUTINE */                                           06320000
*         INBUFPTR=R5;              /* SAVE INBUFR POINTER */           06330000
CECTST99 ST    @5,INBUFPTR                                        0240  06340000
*         RETURN;                   /* RETURN TO CALLER */              06350000
         BC    15,@EL01                                           0241  06360000
* CECTST03:                                                             06370000
*         /************************************************************ 06380000
*         /*                                                          * 06390000
*         /*          PWTO MESSAGES IFD112I AND IFD161I               * 06400000
*         /*                                                          * 06410000
*         /************************************************************ 06420000
*         R1=ADDR(IFDMSG38);        /* GET PTR TO MESSAGE MODULE        06430000
CECTST03 L     @4,@V1              ADDRESS OF IFDMSG38            0242  06440000
         LR    @1,@4                                              0242  06450000
*         R1=MSGPTR12;              /* GET POINTER TO MESSAGE IFD112I.* 06460000
         L     @1,0(0,@1)                                         0243  06470000
*         MSG112I(35:36)=ERRCODE;       /* PUT ERROR CODE IN MSG      * 06480000
         MVC   38(2,@1),ERRCODE                                   0244  06490000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 06500000
         PWTO  REG=(1)                                                  06510000
         DS    0H                                                       06520000
*         R1=ADDR(IFDMSG38);        /* GET PTR TO MESSAGE MODULE        06530000
         LR    @1,@4                                              0246  06540000
*         IF RETAINAC ='1'B THEN         /* IS REI ACTIVE?      S20203* 06550000
         TM    A00011,B'10000000'                                 0247  06560000
         BC    12,@9C7                                            0247  06570000
*           DPMSGREI='1'B;              /* NO REPLY TO DP MSGS  XM9156* 06580000
         OI    A00014,B'00000001'                                 0248  06590000
*         R1=MSGPTR61;              /* GET POINTER TO MESSAGE IFD161I * 06600000
@9C7     L     @1,4(0,@1)                                         0249  06610000
*         RELEASE(1);                                                   06620000
*         GEN(PWTO  REG=(1));       /* PRINT MESSAGE.                 * 06630000
         PWTO  REG=(1)                                                  06640000
         DS    0H                                                       06650000
*         DPMSGREI='0'B;                /* TURN OFF DP MSG FLAG XM9156* 06660000
         NI    A00014,B'11111110'                                 0252  06670000
*         YOURR14=REDEFINE;         /* CHANGE RETURN POINT SO THAT */   06680000
         L     @1,4(0,@D)                                         0253  06690000
         MVC   12(4,@1),REDEFINE                                  0253  06700000
*                                   /* TEST CAN BE REDEFINED.      */   06710000
*         RETURN;                   /* RETURN TO CALLER. */             06720000
* CECTST78:                                                             06730000
*         /************************************************************ 06740000
*         /*                                                          * 06750000
*         /* SUBROUTINE FOR SETTING ROUTINE FLAGS IN EXPANDED AND     * 06760000
*         /* NORMAL ROUTINE SELECTION FIELDS.                         * 06770000
*         /*                                                          * 06780000
*         /************************************************************ 06790000
*         PROC OPTIONS(NOSAVEAREA,DONTSAVE);                            06800000
@EL01    L     @D,4(0,@D)                                         0255  06810000
         LM    @E,@C,12(@D)                                       0255  06820000
         BCR   15,@E                                              0255  06830000
*         RESTRICT(2,3,5,6,7,8,9);                                      06840000
*         SAVR14=R14;               /* SAVE RETURN REGISTER */          06850000
CECTST78 ST    @E,DOUBLEWD                                        0257  06860000
*         EXPFLG='1'B;              /* SET INDICATOR SAYING FLAGS */    06870000
         OI    SWITCHES,B'00010000'                               0258  06880000
*                                   /* ARE IN EXPANDED AREA       */    06890000
* CECTST79:                                                             06900000
*         R7=ADDR(EXPANDED);        /* CALCULATE POINTER TO NEEDED */   06910000
CECTST79 LA    @7,SCT+40                                          0259  06920000
*         R7=(FSTRTN+7)/8-3+R7;     /* EXPANDED ROUTINE BYTE       */   06930000
         LA    @E,7                                               0260  06940000
         AR    @E,@8                                              0260  06950000
         SRDA  @E,32                                              0260  06960000
         LA    @0,8                                               0260  06970000
         DR    @E,@0                                              0260  06980000
         SH    @F,@D5                                             0260  06990000
         AR    @7,@F                                              0260  07000000
*         GO TO CECTST82;           /* SKIP TO NEXT NEEDED INSTRUCTION* 07010000
         BC    15,CECTST82                                        0261  07020000
* CECTST80:                                                             07030000
*         /************************************************************ 07040000
*         /*                                                          * 07050000
*         /*         SUBROUTINE FOR SETTING ROUTINE FLAGS IN          * 07060000
*         /*             NORMAL ROUTINE SELECTION FIELD               * 07070000
*         /*                                                          * 07080000
*         /************************************************************ 07090000
*         ENTRY;                                                        07100000
CECTST80 EQU   *                                                  0262  07110000
*         SAVR14=R14;               /* SAVE RETURN REGISTER. */         07120000
@9C6     ST    @E,DOUBLEWD                                        0263  07130000
* CECTST81:                                                             07140000
*         R7=ADDR(RTNFLDXX)-1;      /* CALCULATE POINTER TO NEEDED */   07150000
CECTST81 LH    @F,@D6                                             0264  07160000
         LA    @0,SCT+4                                           0264  07170000
         AR    @F,@0                                              0264  07180000
         LR    @7,@F                                              0264  07190000
*         R7=(FSTRTN+7)/8+R7;       /* NORMAL ROUTINE BYTE         */   07200000
         LA    @E,7                                               0265  07210000
         AR    @E,@8                                              0265  07220000
         SRDA  @E,32                                              0265  07230000
         LA    @0,8                                               0265  07240000
         DR    @E,@0                                              0265  07250000
         AR    @7,@F                                              0265  07260000
* CECTST82:                                                             07270000
*         R6=(FSTRTN//8)+ADDR(MSKTABLE); /* CALC. PTR */                07280000
CECTST82 LR    @E,@8                                              0266  07290000
         SRDA  @E,32                                              0266  07300000
         LA    @0,8                                               0266  07310000
         DR    @E,@0                                              0266  07320000
         LA    @0,MSKTABLE                                        0266  07330000
         AR    @E,@0                                              0266  07340000
         LR    @6,@E                                              0266  07350000
*         RTNFIELD=RTNFIELD|MASK;   /* SET BIT IN ROUTINE FIELD */      07360000
         OC    0(1,@7),0(@6)                                      0267  07370000
*         FSTRTN=FSTRTN+1;          /* INCREMENT FIRST ROUTINE */       07380000
         LA    @8,1(0,@8)                                         0268  07390000
*         IF FSTRTN>LSTRTN THEN     /* IS ROUTINE FINISHED. YES, CLEAN* 07400000
         CR    @8,@9                                              0269  07410000
*           GO TO CECTST83;         /* UP. NO, DETERMINE WHICH SUB-   * 07420000
         BC    02,CECTST83                                        0270  07430000
*         IF EXPFLG='1'B THEN       /* ROUTINE IS BEING USED AND DO   * 07440000
         TM    SWITCHES,B'00010000'                               0271  07450000
*           GO TO CECTST79;         /* IT AGAIN                       * 07460000
         BC    01,CECTST79                                        0272  07470000
*         GO TO CECTST81;                                               07480000
         BC    15,CECTST81                                        0273  07490000
* CECTST83:                                                             07500000
*         EXPFLG='0'B;              /* CLEANUP AND RETURN */            07510000
CECTST83 NI    SWITCHES,B'11101111'                               0274  07520000
*         HRTSEL=LSTRTN;            /* SAVE HIGHEST ROUTINE SELECTED. * 07530000
         STH   @9,HRTSEL                                          0275  07540000
*         R14=SAVR14;               /* RESTORE RETURN REGISTER */       07550000
         L     @E,DOUBLEWD                                        0276  07560000
*         RETURN;                                                       07570000
*         END CECTST78;                                                 07580000
@EL02    BCR   15,@E                                              0278  07590000
*         END IFDOLT38;                                                 07600000
@DATA1   EQU   *                                                        07610000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           07620000
@1       EQU   01                                                       07630000
@2       EQU   02                                                       07640000
@3       EQU   03                                                       07650000
@4       EQU   04                                                       07660000
@5       EQU   05                                                       07670000
@6       EQU   06                                                       07680000
@7       EQU   07                                                       07690000
@8       EQU   08                                                       07700000
@9       EQU   09                                                       07710000
@A       EQU   10                                                       07720000
@B       EQU   11                                                       07730000
@C       EQU   12                                                       07740000
@D       EQU   13                                                       07750000
@E       EQU   14                                                       07760000
@F       EQU   15                                                       07770000
@D1      DC    H'1'                                                     07780000
@D2      DC    H'2'                                                     07790000
@D3      DC    H'16'                                                    07800000
@D4      DC    H'255'                                                   07810000
@D5      DC    H'3'                                                     07820000
@D6      DC    H'-1'                                                    07830000
@V1      DC    V(IFDMSG38)                                              07840000
         DS    0F                                                       07850000
@C2      DC    C'09'                                                    07860000
@C5      DC    C'10'                                                    07870000
@C8      DC    C'01'                                                    07880000
         DS    0D                                                       07890000
@DATA    EQU   *                                                        07900000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   07910000
R1       EQU   00000001            FULLWORD POINTER REGISTER            07920000
R2       EQU   00000002            FULLWORD POINTER REGISTER            07930000
I        EQU   00000003            3  BYTE  POINTER REGISTER            07940000
RETCODE  EQU   00000003            3  BYTE  POINTER REGISTER            07950000
R5       EQU   00000005            FULLWORD POINTER REGISTER            07960000
R6       EQU   00000006            FULLWORD POINTER REGISTER            07970000
R7       EQU   00000007            FULLWORD POINTER REGISTER            07980000
FSTRTN   EQU   00000008            3  BYTE  POINTER REGISTER            07990000
R8       EQU   00000008            FULLWORD POINTER REGISTER            08000000
LSTRTN   EQU   00000009            3  BYTE  POINTER REGISTER            08010000
R13      EQU   00000013            FULLWORD POINTER REGISTER            08020000
R14      EQU   00000014            FULLWORD POINTER REGISTER            08030000
RC       EQU   00000015            3  BYTE  POINTER REGISTER            08040000
R15      EQU   00000015            FULLWORD POINTER REGISTER            08050000
MYSAVE   EQU   00000000            8 BYTE(S) ON WORD                    08060000
A00000   EQU   MYSAVE+00000000     4 BYTE(S)                            08070000
YOURR13  EQU   MYSAVE+00000004     FULLWORD POINTER                     08080000
YOURSAVE EQU   00000000            16 BYTE(S) ON WORD                   08090000
A00001   EQU   YOURSAVE+00000000   12 BYTE(S)                           08100000
YOURR14  EQU   YOURSAVE+00000012   FULLWORD POINTER                     08110000
MSGPTR   EQU   00000000            12 BYTE(S) ON WORD                   08120000
MSGPTR12 EQU   MSGPTR+00000000     FULLWORD POINTER                     08130000
MSGPTR61 EQU   MSGPTR+00000004     FULLWORD POINTER                     08140000
MSGPTR55 EQU   MSGPTR+00000008     FULLWORD POINTER                     08150000
MSG112   EQU   00000000            41 BYTE(S)                           08160000
A00006   EQU   MSG112+00000000     4 BYTE(S)                            08170000
MSG112I  EQU   MSG112+00000004     37 BYTE(S)                           08180000
DOUBLEWD EQU   @DATA+00000072      8 BYTE(S) ON DWORD                   08190000
SAVR14   EQU   DOUBLEWD+00000000   FULLWORD POINTER                     08200000
FRSTRTN  EQU   @DATA+00000080      4 BYTE(S) ON WORD                    08210000
LASTRTN  EQU   FRSTRTN+00000000    4 BYTE(S)                            08220000
A00007   EQU   FRSTRTN+00000000    1 BYTE(S)                            08230000
FRSTRTN1 EQU   FRSTRTN+00000001    3 BYTE(S)                            08240000
LASTRTN1 EQU   FRSTRTN+00000001    3 BYTE(S)                            08250000
A00008   EQU   FRSTRTN+00000001    1 BYTE(S)                            08260000
FRSTRTN2 EQU   FRSTRTN+00000002    2 BYTE(S)                            08270000
LASTRTN2 EQU   FRSTRTN+00000002    2 BYTE(S)                            08280000
A00009   EQU   FRSTRTN+00000002    1 BYTE(S)                            08290000
FRSTRTN3 EQU   FRSTRTN+00000003    1 BYTE(S)                            08300000
LASTRTN3 EQU   FRSTRTN+00000003    1 BYTE(S)                            08310000
J        EQU   @DATA+00000084      HALFWORD INTEGER                     08320000
         ORG   @DATA+00000086                                           08330000
NUMBERS  EQU   *                   10 BYTE(S)                           08340000
         DC    C'0123456789'                                            08350000
NUMBER   EQU   00000000            1 BYTE(S)                            08360000
SWITCHES EQU   *                   1 BYTE(S)                            08370000
         DC    X'00'                                                    08380000
SECTIONS EQU   SWITCHES+00000000   3 BIT(S)                             08390000
SECT1    EQU   SWITCHES+00000000   1 BIT(S)                             08400000
SECT2    EQU   SWITCHES+00000000   1 BIT(S)                             08410000
SECT3    EQU   SWITCHES+00000000   1 BIT(S)                             08420000
EXPFLG   EQU   SWITCHES+00000000   1 BIT(S)                             08430000
DUBNUM   EQU   SWITCHES+00000000   1 BIT(S)                             08440000
TRINUM   EQU   SWITCHES+00000000   1 BIT(S)                             08450000
MSKTABLE EQU   *                   8 BYTE(S)                            08460000
         DC    X'0180402010080402'                                      08470000
MASK     EQU   00000000            1 BYTE(S)                            08480000
ERRCODE  EQU   @DATA+00000105      2 BYTE(S)                            08490000
INPUTBUF EQU   00000000            4 BYTE(S)                            08500000
RTNFIELD EQU   00000000            1 BYTE(S)                            08510000
         ORG   @DATA                                                    08520000
         DS    00000107C                                                08530000
@TEMPS   DS    0F                                                       08540000
TESTCOMM IFDCOM                                                         08550000
SCT      EQU   CHASCT+00000000     70 BYTE(S) ON WORD                   08560000
A00002   EQU   SCT+00000000        4 BYTE(S)                            08570000
RTNFLDXX EQU   SCT+00000004        2 BYTE(S)                            08580000
A00003   EQU   SCT+00000006        27 BYTE(S)                           08590000
EXPGMFLG EQU   SCT+00000033        1 BYTE(S)                            08600000
A00004   EQU   SCT+00000033        2 BIT(S)                             08610000
RTNSLCTN EQU   SCT+00000033        1 BIT(S)                             08620000
A00005   EQU   SCT+00000034        6 BYTE(S)                            08630000
EXPANDED EQU   SCT+00000040        30 BYTE(S)                           08640000
OLTEPSW  EQU   CESWT+00000000      1 BYTE(S)                            08650000
LEGALTST EQU   OLTEPSW+00000000    1 BIT(S)                             08660000
A00010   EQU   OLTEPSW+00000000    4 BIT(S)                             08670000
REINT    EQU   OLTEPSW+00000000    1 BIT(S)                             08680000
OLTEPSW1 EQU   CESWT1+00000000     1 BYTE(S)                            08690000
RTNFLD   EQU   OLTEPSW1+00000000   1 BIT(S)                             08700000
A00011   EQU   CESWTR+00000000     1 BYTE(S)                            08710000
RETAINAC EQU   A00011+00000000     1 BIT(S)                             08720000
A00012   EQU   A00011+00000000     1 BIT(S)                             08730000
REMNOMSG EQU   A00011+00000000     1 BIT(S)                             08740000
A00013   EQU   A00011+00000000     5 BIT(S)                             08750000
A00014   EQU   CESWTR2+00000000    1 BYTE(S)                            08760000
A00015   EQU   A00014+00000000     7 BIT(S)                             08770000
DPMSGREI EQU   A00014+00000000     1 BIT(S)                             08780000
@DATEND  EQU   *                                                        08790000
         END   IFDOLT38                                                 08800000
