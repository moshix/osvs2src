         TITLE 'IFDOLT73 LINE CONNECTION MODULE'                        00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLT73 CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLT73 12 FEB 74'                             0001  00060000
         ST    @E,12(0,@D)                                        0001  00070000
         STM   @0,@C,20(@D)                                       0001  00080000
         BALR  @B,0                                               0001  00090000
@PSTART  DS    0H                                                 0001  00100000
         USING @PSTART+00000,@B                                   0001  00110000
         ST    @D,@SAV001+4                                       0001  00120000
         LA    @F,@SAV001                                         0001  00130000
         ST    @F,8(0,@D)                                         0001  00140000
         LR    @D,@F                                              0001  00150000
         TITLE 'OS OLTEP LINE CONNECTION MODULE IFDOLT73'               00160000
         DS    0H                                                       00170000
* GEN(EJECT);                                                           00180000
         EJECT                                                          00190000
         DS    0H                                                       00200000
* /******************************************************************** 00210000
* /*                 IFDOLT73 REGISTER DEFINITIONS BELOW                00220000
* /******************************************************************** 00230000
*         /* START                                                      00240000
*         DCL   R0 REG(0);               /*REG FOR POSTING TIMEOUT      00250000
*         DCL   R1 REG(1) PTR;           /*REG FOR MSG PTR              00260000
*         DCL   R2 REG(2) PTR;           /*REG PTR TO OLTEP COMMON AREA 00270000
*         DCL   R6 REG(6);               /*LINK REG FOR EXCP ROUTINE    00280000
*         DCL   R7 REG(7);               /*LINK REG FOR OUTPUT MESSAGE  00290000
*         DCL   R9 PTR REG(9);           /*MESSAGE MODULE POINTER       00300000
*         DCL   R14 REG(14) PTR;         /*LINK REG FOR CONVERT MODULE  00310000
*         DCL   R15 REG(15) PTR;         /*RETURN CODE REGISTER         00320000
*         DCL   DEVPT1 PTR(24) REG(3);   /*DEVTAB ENTRY                 00330000
*         DCL   DEVPT2 PTR(24) REG(4);   /*PTR TO DEVTAB SEARCH FOUND   00340000
*         DCL   CCWADR PTR(24) REG(4);   /*PTR TO NEXT CCW AREA         00350000
*         DCL   CDSPTR PTR(31) REG(5);   /*PTR TO OLT'S CDS             00360000
*         DCL   VARFLDPT PTR(24) REG(7); /*PTR TO EXTENDED FIELD IN CDS 00370000
*         DCL   IOSBPTR PTR(31) REG(8);   /*PTR TO IOSB          Y02008 00380000
*         GEN(EJECT);                                                   00390000
         EJECT                                                          00400000
         DS    0H                                                       00410000
* /******************************************************************** 00420000
* /*  DEFINITIONS OF INTERNAL FLAGS                                     00430000
* /******************************************************************** 00440000
*         /* START                                                      00450000
*         DCL   1 LCRFLAG CHAR(1),       /*INTERNAL FLAGS               00460000
*                3 TELNO BIT(1),         /*DIAL DIGITS IN CDS FLAG      00470000
*                3 OPERCALL BIT(1),      /*OPERATOR CALL FLAG           00480000
*                3 RETRY BIT(1),         /*RETRY FLAG                   00490000
*                3 UNSUCCES BIT(1),      /*EXCP UNSUCCESSFUL FLAG       00500000
*                3 HDRMSG BIT(1);       /* FLAG FOR HEADER MSG  X02008* 00510000
*                                                                       00520000
*         DCL R1SAVE FIXED;             /* REG 1 SAVE AREA      X02008* 00530000
*                                                                       00540000
* /******************************************************************** 00550000
* /*  DEFINITION OF INTERNAL WORK AREAS                                 00560000
* /******************************************************************** 00570000
*         /* START                                                      00580000
*         DCL   CAWPTR PTR(31);          /*PTR TO CHANNEL PROGRAM       00590000
*         /* FAILED CCW                                                 00600000
*         DCL   FAIL CHAR(8) BASED(CCWADR);                             00610000
*         /*                                                            00620000
*         DCL   1 DEC CHAR(40) BDY(WORD),/*EBCDIC SAVE AREA             00630000
*                3 DECCSW CHAR(14),      /*EBCDIC CSW                   00640000
*                3 DECCCW CHAR(16),      /*EBCDIC CCW                   00650000
*                3 DECSENSE CHAR(4);     /*EBCDIC SENSE                 00660000
*         /*                                                            00670000
*         DCL   1 HEX CHAR(17) BDY(WORD),/*SAVE AREA FOR HEX NUMBERS    00680000
*                3 HEXCSW CHAR(7),       /*HEX CSW                      00690000
*                 5 * CHAR(3),           /*NOT USED                     00700000
*                 5 * BIT(6),            /*NOT USED                     00710000
*                 5 SAVUNITCHK BIT(1),   /*UNIT CHECK FLAG              00720000
*                 5 * BIT(1),            /*NOT USED                     00730000
*                 5 * CHAR(1),           /*NOT USED                     00740000
*                3 HEXCCW CHAR(8),       /*FAILED CCW SAVE AREA         00750000
*                3 HEXSENSE CHAR(2);     /*SENSE BYTES                  00760000
*         /* CONVERT PARAMETER LIST                                     00770000
*         DCL   1 CONVERT CHAR(14) BDY(WORD),                           00780000
*                /* CONSTANT                                            00790000
*                3 * CHAR(2) INIT('0002'X),                             00800000
*                /* CONSTANT                                            00810000
*                3 * CHAR(2) INIT('41'),                                00820000
*                /* FROM ADDRESS                                        00830000
*                3 * PTR(31) INIT(ADDR(HEX)),                           00840000
*                /* TO ADDRESS                                          00850000
*                3 * PTR(31) INIT(ADDR(DEC)),                           00860000
*                /* FLAG AND COUNT                                      00870000
*                3 * CHAR(2) INIT('8011'X);                             00880000
*         /*                                                            00890000
*         DCL 1 ONES CHAR(80),           /*80 BYTES OF ONES FOR WRITE   00900000
*                3 *(80) CHAR(1) INIT((80)'FF'X);                       00910000
*         DCL 1 X20F0 CHAR(20),          /*20 BYTES OF F0 FOR DIAL DGTS 00920000
*              3 *(20) CHAR(1) INIT((20)'F0'X);                         00930000
*         /* SEARCH TABLE FOR CCW COMMAND CODE                          00940000
*         DCL 1 CODE CHAR(7),            /*COMMAND CODE                 00950000
*                3 * CHAR(1),            /*NOT USED                     00960000
*                /* SET MODE                                            00970000
*                3 SETMODE(2) CHAR(1) INIT((2)'23'X),                   00980000
*                /* SADXX                                               00990000
*                3 SADXX(4) CHAR(1) INIT('13'X,'17'X,'1B'X,'1F'X);      01000000
*         /************************************************************ 01010000
*         GEN(EJECT);                                                   01020000
         EJECT                                                          01030000
         DS    0H                                                       01040000
* /******************************************************************** 01050000
* /*                           COMMON CORE MAP                          01060000
* /******************************************************************** 01070000
*         /* START                                                      01080000
*         DCL   UNICTR CHAR(1) GEND;     /*NUMBER OF ENTRIES IN DEVTAB  01090000
*         DCL   TAB28 GEND;              /* COMMON AREA TABLE           01100000
*         DCL   DEVTBPTR PTR(31) GEND;   /*PTR TO DEVTAB                01110000
*         /* LENGTH OF DEVTAB ENTRY                                     01120000
*         DCL   TABLNGTH FIXED(15) BDY(WORD) GEND;                      01130000
*                                                                       01140000
*         DCL CESWT7 CHAR(1) GEND;       /* DIAGNOSTIC SWITCH    Y02008 01150000
*                                                                       01160000
*         DCL 1 * BASED(ADDR(CESWT7)),   /* FORMAT OF SWITCH     Y02008 01170000
*           3 * BIT(6),                  /* N A                  Y02008 01180000
*           3 VIRTUAL BIT(1);            /* OLTEP IS IN VIRTUAL  Y02008 01190000
*                                                                       01200000
*         /************************************************************ 01210000
*         GEN(USING CHASCT,2);                                          01220000
         USING CHASCT,2                                                 01230000
         DS    0H                                                       01240000
*         GENERATE DATA;                 /* COMMON AREA                 01250000
* /******************************************************************** 01260000
* /*                      MESSAGE MODULE MAP                            01270000
* /******************************************************************** 01280000
*         /* MESSAGE MODULE LABEL                                       01290000
*         DCL   IFDMSG73 LABEL NONLOCAL EXTERNAL;                       01300000
*         /* MESSAGES                                                   01310000
*         DCL   1 MSGPTR BASED(R9),                                     01320000
*                3 IFDXX1 PTR,           /* IFD413I                     01330000
*                3 IFDXX2 PTR,           /* IFD400I                     01340000
*                3 IFDXX3 PTR,           /* IFD415I                     01350000
*                3 IFDXX7 PTR,           /* IFD405I                     01360000
*                3 IFDXX8 PTR,           /* IFD406I                     01370000
*                3 IFDXX9 PTR,           /* IFD412I                     01380000
*                3 IFDXXA PTR,           /* IFD407I                     01390000
*                3 IFDXXB PTR,           /* IFD137I                     01400000
*                3 IFD408I PTR;          /* IFD408I MSG          Y02008 01410000
*         /* IFD400I                                                    01420000
*         DCL   1 MSG2 BASED(R1),                                       01430000
*                3 * CHAR(12),           /*NOT USED                     01440000
*                3 * CHAR(25),           /*NOT USED                     01450000
*                3 LINE CHAR(8),         /*LINE ADDRESS                 01460000
*                3 * CHAR(11),           /*NOT USED                     01470000
*                3 NAME CHAR(8);         /*TERMINAL SYMBOLIC NAME       01480000
*         /* IFD406I                                                    01490000
*         DCL   1 MSG8 BASED(R1),                                       01500000
*                3 * CHAR(4),            /* NOT USED                    01510000
*                3 * CHAR(41),           /* NOT USED                    01520000
*                3 DDGT CHAR(20);        /*DIAL DIGITS                  01530000
*         /* IFD412I                                                    01540000
*         DCL   1 MSG9 BASED(R1),                                       01550000
*                3 * CHAR(4),            /* NOT USED                    01560000
*                3 * CHAR(32),           /* NOT USED                    01570000
*                3 CCWFAIL CHAR(16);     /* CCW                         01580000
*         /* IFD137I                                                    01590000
*         DCL 1 MSG11 BASED(R1),                                        01600000
*                3 * CHAR(4),            /* NOT USED                    01610000
*                3 * CHAR(14),           /* NOT USED                    01620000
*                3 STATUS CHAR(14),      /* CSW                         01630000
*                3 * CHAR(5),            /* NOT USED                    01640000
*                3 SENSE CHAR(4);        /* SENSE                       01650000
*                                                                       01660000
*         DCL 1 MSG408 BASED(R1),        /* MESSAGE IFD408I      Y02008 01670000
*           3 * CHAR(12),                /* N A                  Y02008 01680000
*           3 ERRORLIN CHAR(8),          /* LINE IN ERROR        Y02008 01690000
*           3 * CHAR(50);                /* MSG TEXT             Y02008 01700000
*         GEN(EJECT);                    /* EJECT                       01710000
         EJECT                                                          01720000
         DS    0H                                                       01730000
* /******************************************************************** 01740000
* /*  THE FOLLOWING MAPS DEFINE THE IOSB-TECB-WAITLIST          Y02008* 01750000
* /******************************************************************** 01760000
*                                                                       01770000
*         DCL IORTNADR PTR GEND;         /* I/0 EFFECTOR ADDRESS Y02008 01780000
*                                                                       01790000
*                                                                       01800000
*         DCL EFCTRCB CHAR(20) GEND;    /* I O EFFECTOR PLIST   Y02008* 01810000
*                                                                       01820000
*         /* PTR TO CCWS FOR ENBL Y02008*/                              01830000
*         DCL IOCCWADR PTR BASED(ADDR(EFCTRCB));                        01840000
*                                                                       01850000
*         DCL DVTPTR PTR GEND;           /* PTR TO DEV TABLE     Y02008 01860000
*         DCL FLGA CHAR(1) GEND;         /* FLAG BYTE            Y02008 01870000
*         DCL GDP CHAR(1) GEND;          /* GUARANTEE DEV PATH   Y02008 01880000
*         DCL FLGB CHAR(1) GEND;         /* FLAG BYTE            Y02008 01890000
*         DCL INTERNAL CHAR(1) GEND;     /* INTERNAL IOSB CALL   Y02008 01900000
*         DCL ATTNIN CHAR(1) GEND;       /* ATTENTION INTERUPT   Y02008 01910000
*         DCL VIRTCCWS CHAR(1) GEND;     /* CCW STRING IN VIRTUALY02008 01920000
*         DCL FILEMSK CHAR(1) GEND;      /* DEV FILE MASK        Y02008 01930000
*         DCL OLDTECBX CHAR(1) GEND;     /* USE OLD TECB FORMAT  Y02008 01940000
*         DCL SNSCNT CHAR(1) GEND;          /* SNS BYTES EXPCTED Y02008 01950000
*         DCL TECBPTRX PTR GEND;         /* PTR TO ACTV TECB     Y02008 01960000
*                                                                       01970000
*         /************************************************************ 01980000
*         /* THE FOLLOWING MAPS THE WAIT I/O LIST                Y02008 01990000
*         /************************************************************ 02000000
*                                                                       02010000
*         DCL 1 WAITLIST CHAR BDY(WORD), /* WAIT LIST FOR WAITIO Y02008 02020000
*           3 XMGR CHAR(1) INIT('00'X),  /* OLTEP TRANSMNGR FLGS Y02008 02030000
*           3 LVL CHAR(1) INIT('02'X),   /* LEVEL 02 OF MACRO    Y02008 02040000
*           3 MODID CHAR(2) INIT('36'),  /* ID OF WAIT I/O MOD   Y02008 02050000
*           3 TECBPTR PTR INIT(ADDR(TECB)),  /* ADDR OF OLT TECB Y02008 02060000
*           3 CDSDATA PTR INIT('00'X),   /* ADDR OF CDS TO USE   Y02008 02070000
*           3 FLG CHAR(1) INIT('80'X),   /* FLAG BYTE            Y02008 02080000
*             5 WAITYES BIT(1),          /* WAIT REQ FOR EVENT   Y02008 02090000
*           3 TIME CHAR(2);              /* TIME PARM FOR WAIT   Y02008 02100000
*                                                                       02110000
*         DCL WAITRC FIXED;              /* WAIT IO RETURN CODE  Y02008 02120000
*         /************************************************************ 02130000
*         /* THE FOLLOWING MAPS THE NEW TECB FORMAT USED IN IO   Y02008 02140000
*         /************************************************************ 02150000
*                                                                       02160000
*         DCL 1 TECB CHAR,               /* NEW TECB FORMAT      Y02008 02170000
*           3 FLDCNT CHAR(1)  INIT('01'X),  /* EVENT FIELDS USED Y02008 02180000
*           3 FLDSIZE CHAR(1) INIT('0C'X),  /* SIZE OF EVENT FLD Y02008 02190000
*           3 *  CHAR(1) INIT('00'X),    /* NOT APPLICABLE       Y02008 02200000
*           3 SNSIZE CHAR(1) INIT('05'X),/* NUM OF SENS BYTES    Y02008 02210000
*           3 FLG1 CHAR(1) INIT('00'X),  /* FLAG BYTE            Y02008 02220000
*           3 SNSFIELD CHAR(1) INIT('01'X),/* NUM SENSE FIELDS   Y02008 02230000
*           3 CNTSNS CHAR(1) INIT('00'X),/* NUM SNS FIELDS FILLEDY02008 02240000
*           3 CNTINT CHAR(1) INIT('00'X),/* NUM INT FIELDS FILLEDY02008 02250000
*           3 SIOCC CHAR(1) INIT('00'X), /* START I/O COND CODE  Y02008 02260000
*           3 *  CHAR(1) INIT('00'X),    /* N A                  Y02008 02270000
*           3 DEVAD CHAR(2) INIT('0000'X),  /* DEVADR IN TECB    Y02008 02280000
*           3 *   CHAR(1) INIT('00'X),   /* N A                  Y02008 02290000
*           3 OUTBUFR(12) CHAR(1) INIT((12)'00'X),   /* DATA BUF Y02008 02300000
*             5 CSW1 CHAR(7),            /* EVENT CSW            Y02008 02310000
*               7 CCWPLUS8 CHAR(3),      /* NEXT CCW TO BE ISSUEDY02008 02320000
*               7 TECBFLGA CHAR(1),      /* CSW FLAG BYTE        Y02008 02330000
*                 9 * BIT(4),            /* N A                  Y02008 02340000
*                 9 CHANEND BIT(1),      /* CHANNEL END INDICATORY02008 02350000
*                 9 DEVICEND BIT(1),     /* DEVICE END INDICATOR Y02008 02360000
*                 9 UNITCHCK BIT(1),     /* UNIT CHECK INDICATOR Y02008 02370000
*               7 TECBFLGB CHAR(1),      /* FLAG BYTE            Y02008 02380000
*             5 * CHAR(3),               /* I/O DEV ADDR         Y02008 02390000
*             5 TSNS1 CHAR(2);           /* TECB EVENT SENSE     Y02008 02400000
*                                                                       02410000
*         GEN(EJECT);                                                   02420000
         EJECT                                                          02430000
         DS    0H                                                       02440000
* /******************************************************************** 02450000
* /*  THE FOLLOWING MAPS DEFINE DEVTAB ENTRIES                          02460000
* /******************************************************************** 02470000
*         /* START                                                      02480000
*         DCL   1 * BASED(DEVPT1),                                      02490000
*                3 DEVADDR1 CHAR(8),     /*LINE ADDR                    02500000
*                3 UCBADDR1 PTR(31),     /*UCB ADDR                     02510000
*                3 * CHAR(1),                                           02520000
*                 5 * BIT(1),            /*NOT USED                     02530000
*                 5 PRIMARY BIT(1),      /*PRIMARY DEVICE FLAG          02540000
*                 5 * BIT(6),            /*NOT USED                     02550000
*                3 * CHAR(2),            /*NOT USED                     02560000
*                3 * CHAR(1),            /*LINE STATUS FLAGS            02570000
*                 5 LNDSBL1 BIT(1),      /*LINE DISABLED BY OLTED FLAG  02580000
*                 5 LNENBL1 BIT(1),      /*LINE ENABLED FLAG            02590000
*                 5 * BIT(6),            /*NOT USED                     02600000
*                3 * CHAR(25),           /*NOT USED                     02610000
*                3 * CHAR(1),            /*CDS FLAG                     02620000
*                 5 * BIT(4),            /*NOT USED                     02630000
*                 5   NMPRSNT1 BIT(1),   /*SYMBOLICALLY NAMED TERMINAL  02640000
*                 5 * BIT(3),            /*NOT USED                     02650000
*                3 * CHAR(2),            /*NOT USED                     02660000
*                3 SYMBNM1 CHAR(8),      /*SYMBOLIC NAME                02670000
*                3 * CHAR(4);            /*NOT USED                     02680000
*         /* 2ND DEVICE POINTER                                         02690000
*         DCL   1 * BASED(DEVPT2),                                      02700000
*                3 DEVADDR2 CHAR(8),     /*LINE ADDR                    02710000
*                3 * CHAR(7),            /*NOT USED                     02720000
*                3 * CHAR(1),            /*LINE STATUS FLAGS            02730000
*                 5 LNDSBL2 BIT(1),      /*LINE DISABLED BY OLTEP FLAG  02740000
*                 5 LNENBL2 BIT(1),      /*LINE ENABLED FLAG            02750000
*                 5 * BIT(6),                                           02760000
*                 5 CHAR(40);            /* NOT USED            Y02008* 02770000
*         GEN(EJECT);                                                   02780000
         EJECT                                                          02790000
         DS    0H                                                       02800000
*         /************************************************************ 02810000
*         /*    THE FOLLOWING MAP DEFINES A CDS ENTRY           Y02008* 02820000
*         /************************************************************ 02830000
*                                                                       02840000
*         DCL   1 * BASED(CDSPTR),                                      02850000
*                3 * CHAR(9),            /*NOT USED                     02860000
*                3 * CHAR(1),            /*NOT USED                     02870000
*                 5 * BIT(4),            /* NOT USED                    02880000
*                 5 SYMNMFLG BIT(1),     /* SYMBOLIC NAME FLAG          02890000
*                 5 * BIT(2),            /* NOT USED                    02900000
*                 5 LCRFLG BIT(1),       /* LCR FLAG                    02910000
*                3 * CHAR(11),           /*NOT USED                     02920000
*                3 * CHAR(1),            /*NOT USED                     02930000
*                 5 SMPRSNT BIT(1),      /*SET MODE BYTES IN CDS FLAG   02940000
*                 5 AUTOCALL BIT(1),     /*AUTOCALL FEATURE FLAG        02950000
*                 5 SWITCHLN BIT(1),     /*SWITCHED LINE FLAG           02960000
*                 5 NSWTCHLN BIT(1),     /*NON SWITCHED LINE FLAG       02970000
*                 5 WORLDTRD BIT(1),     /*WORLD TRADE FLAG             02980000
*                 5 * BIT(3),            /*NOT USED                     02990000
*                3 * CHAR(1),            /*NOT USED                     03000000
*                3 CMDSEQ CHAR(1),       /* COMMAND SEQUENCE CODE       03010000
*                3 VARIABLE CHAR(23);    /*EXTENDED FIELD IN CDS        03020000
*         /* COMMON AREA POINTER                                        03030000
*         DCL   1 * BASED(VARFLDPT),                                    03040000
*                3 DIALCNT CHAR(1),      /*DIAL DIGIT COUNT IN CDS      03050000
*                3 DIALDGT CHAR(20);     /*DIAL DIGITS IN CDS           03060000
* /******************************************************************** 03070000
* /*  THE FOLLOWING MAP DEFINES THE PARAMETER LIST                      03080000
* /******************************************************************** 03090000
*         /* START                                                      03100000
*         DCL   1 * BASED(R1),                                          03110000
*                3 * CHAR(4),            /*NOT USED                     03120000
*                3 EXIOPTR PTR(31);      /*PTR TO PARAMETER LIST        03130000
*         /* PARAMETER LIST                                             03140000
*         DCL   1 * BASED(EXIOPTR),      /*PARAMETER LIST               03150000
*                3 DEVICE PTR(31),       /*PTR TO DEVTAB ENTRY          03160000
*                3 CDSADR PTR(31);       /*PTR TO OLT'S CDS             03170000
*         GEN(EJECT);                                                   03180000
         EJECT                                                          03190000
         DS    0H                                                       03200000
* /******************************************************************** 03210000
* /*  THE FOLLOWING DEFINES THE CHANNEL PROGRAM AREA                    03220000
* /******************************************************************** 03230000
*         /* LCR CCW AREA                                               03240000
*         DCL   1 CCWAREA CHAR(64) BDY(DWORD),                          03250000
*                /* DISABLE CCW                                         03260000
*                3 DISABLE CHAR(8) INIT('2F00000020000001'X),           03270000
*                3 TWOCCW CHAR(16),      /*SADXX, SET MODE, DIAL OR     03280000
*                /*                          ENABLE CCW AREA            03290000
*                3 WRITECCW(6) CHAR(8),  /*6 DATA-CHAINED WRITE CCW'S   03300000
*                 /* WRITE COMMAND CODE                                 03310000
*                 5 * CHAR(1) INIT((6)'01'X),                           03320000
*                 /* PTR TO 80 BYTES OF ONES                            03330000
*                 5 * PTR(24) INIT((6)ADDR(ONES)),                      03340000
*                 /* DC AND BYTE COUNT                                  03350000
*                 5 * CHAR(4) INIT((6)'E0000050'X),                     03360000
*                3 * CHAR(8),                                           03370000
*                 /* WRITE COMMAND CODE                                 03380000
*                 5 * CHAR(1) INIT('01'X),                              03390000
*                 /* PTR TO ONES                                        03400000
*                 5 * PTR(24) INIT(ADDR(ONES)),                         03410000
*                 /* NOT DC AND BYTE COUNT                              03420000
*                 5 * CHAR(4) INIT('20000050'X);                        03430000
* /******************************************************************** 03440000
* /*  THE FOLLOWING MAP DEFINES THE CCW                                 03450000
* /******************************************************************** 03460000
*         /* CCW BREAK DOWN                                             03470000
*         DCL   1 CCW CHAR(8) BASED(CCWADR),                            03480000
*                3 * CHAR(1),                                           03490000
*                3 DATAADDR PTR(24),     /*CCW PTR TO DATA AREA         03500000
*                3 * CHAR(4);                                           03510000
*         GEN(EJECT);                    /*EJECT PAGE                   03520000
         EJECT                                                          03530000
         DS    0H                                                       03540000
*         /* SAVE                                                       03550000
*                                                                       03560000
*                                                                       03570000
*         /************************************************************ 03580000
*         /*          RETAIN SWITCH FORMATS                           * 03590000
*         /************************************************************ 03600000
*                                                                       03610000
*         DCL CESWTR CHAR(1) GEND;      /* RETAIN SWITCH              * 03620000
*                                                                       03630000
*         DCL 1 * BASED(ADDR(CESWTR)),  /*    SWITCH STRUCTURE        * 03640000
*           3 RETAINAC BIT(1);          /* RETAIN ACTIVE              * 03650000
*                                                                       03660000
*                                                                       03670000
*         DCL CESWTR2 CHAR(1) GEND;     /* THIRD RETAIN FLAG          * 03680000
*                                                                       03690000
*         DCL 1 * BASED(ADDR(CESWTR2)), /* SWITCH STRUCTURE           * 03700000
*           3 * BIT(7),                                                 03710000
*           3 DPMSGREI BIT(1);          /* DATA PROT MSG TO REMOY00427* 03720000
*         RESTRICT(DEVPT1,IOSBPTR,CDSPTR,R2);     /*             Y02008 03730000
* /******************************************************************** 03740000
* /*                           INITIALIZATION                           03750000
* /******************************************************************** 03760000
*         /* START                                                      03770000
*         EFCTRCB=EFCTRCB&&EFCTRCB;     /* CLEAR EFFECTOR PLIST Y02008* 03780000
         XC    EFCTRCB(20),EFCTRCB                                0080  03790000
*         IF RETAINAC='1'B THEN         /* IF RETAIN ACTIVE           * 03800000
         TM    A00070,B'10000000'                                 0081  03810000
         BC    12,@9FF                                            0081  03820000
*         HDRMSG='0'B;                  /* DONT OUTPUT HDR MSG  X02008* 03830000
         NI    LCRFLAG,B'11110111'                                0082  03840000
*         DPMSGREI='1'B;                /* REM SITE GETS MSG   OY00427* 03850000
@9FF     OI    A00071,B'00000001'                                 0083  03860000
*         RESTRICT(R1);                                                 03870000
*         DEVPT1=DEVICE;                 /*SET DEVTAB SEARCH PARAMETER  03880000
         L     @4,4(0,@1)                                         0085  03890000
         L     @3,0(0,@4)                                         0085  03900000
*         CDSPTR=CDSADR;                 /*SET PTR TO CDS IN OLT        03910000
         L     @5,4(0,@4)                                         0086  03920000
*         RELEASE(R1);                   /* N/A                         03930000
*         R9=ADDR(IFDMSG73);             /*SET MESSAGE MODULE POINTER   03940000
         L     @1,@V1              ADDRESS OF IFDMSG73            0088  03950000
         LR    @9,@1                                              0088  03960000
*         /* SAVE IT                                                    03970000
*         RESTRICT(R9);                                                 03980000
*         R1=IFDXX1;                     /*SET MSG PTR                  03990000
         L     @1,0(0,@9)                                         0090  04000000
*         /* CHECK CDS PTR                                              04010000
*         IF CDSPTR=0 THEN               /*CDS ADDR SPECIFIED BY OLT    04020000
         LTR   @5,@5                                              0091  04030000
*           GOTO LCR4;                   /*NO - BRANCH TO ERROR RETURN  04040000
         BC    08,LCR4                                            0092  04050000
*         /* SAVE IT                                                    04060000
*         RESTRICT(R1);                                                 04070000
*         R1=IFDXX2;                     /*SET MSG PTR                  04080000
         L     @1,4(0,@9)                                         0094  04090000
*         LINE=DEVADDR1;                 /*MOVE LINE ADDR FROM DEVTAB   04100000
         MVC   37(8,@1),0(@3)                                     0095  04110000
*         /* CHECK DEVTAB                                               04120000
*         IF SYMNMFLG='0'B THEN          /*SYMBOLICALLY NAMED TERMINAL? 04130000
         TM    9(@5),B'00001000'                                  0096  04140000
*           GOTO LCR2A;                  /*NO - BRANCH TO ERROR RETURN  04150000
         BC    08,LCR2A                                           0097  04160000
*         NAME=NAME&&NAME;               /* CLEAR NAME BUFFR   AS13319* 04170000
         XC    56(8,@1),56(@1)                                    0098  04180000
*         NAME=SYMBNM1;                  /*MOVE SYMBOLIC NAME FROM      04190000
         MVC   56(8,@1),44(@3)                                    0099  04200000
*         HDRMSG='1'B;                  /* OUTPUT HDR MSG       X02008* 04210000
         OI    LCRFLAG,B'00001000'                                0100  04220000
*         /* RELEASE                                                    04230000
*         RELEASE(R1);                                                  04240000
*         /* CHECK FOR LINE ALREADY DISABLED                            04250000
*         IF LNENBL1='1'B THEN           /* YES                         04260000
         TM    15(@3),B'01000000'                                 0102  04270000
         BC    12,@9FE                                            0102  04280000
*           DO;                                                         04290000
*              LCRFLG='0'B;              /* RESET LCR FLAG IN CSWY02008 04300000
         NI    9(@5),B'11111110'                                  0104  04310000
*              GOTO LCR6;                /* RETURN                      04320000
         BC    15,LCR6                                            0105  04330000
*           END;                                                        04340000
*         /* CHECK SEQ CODE IN CDS                                      04350000
*         IF CMDSEQ='00'X THEN           /*BYPASS LINE CONNECTION ?     04360000
@9FE     CLI   23(@5),X'00'                                       0107  04370000
*           GOTO LCR6;                   /*YES - BRANCH TO RETURN       04380000
         BC    08,LCR6                                            0108  04390000
*         /* CHECK COMMAND SEQ IN CDS                                   04400000
*         IF CMDSEQ>='08'X THEN          /*VALID LINE CONNECTION ?      04410000
         CLI   23(@5),X'08'                                       0109  04420000
*           GOTO LCR3;                   /*BRANCH TO ERROR RETURN       04430000
         BC    10,LCR3                                            0110  04440000
*         RESTRICT(CCWADR);                                             04450000
*         LCRFLAG='00'X;                 /*CLEAR INTERNAL FLAGS         04460000
         MVI   LCRFLAG,X'00'                                      0112  04470000
*         TWOCCW=TWOCCW&&TWOCCW;         /*CLEAR CCW AREA               04480000
         XC    CCWAREA+8(16),CCWAREA+8                            0113  04490000
*         CAWPTR=ADDR(CCWAREA);          /*SET CHANNEL PROGRAM PTR      04500000
         LA    @F,CCWAREA                                         0114  04510000
         ST    @F,CAWPTR                                          0114  04520000
*         CCWADR=CAWPTR;                 /*SET PTR TO CHANNEL PROGRAM   04530000
         LR    @4,@F                                              0115  04540000
*         DISABLE(5)='60'X;              /*MAKE DISABLE CCW CHAINED     04550000
         MVI   CCWAREA+4,X'60'                                    0116  04560000
* /******************************************************************** 04570000
*         /* END                                                        04580000
*         GEN(EJECT);                                                   04590000
         EJECT                                                          04600000
         DS    0H                                                       04610000
*         /* CHECK SEQ CODE IN CDS                                      04620000
*         IF CMDSEQ='01'X THEN           /*/*COMMAND SEQUENCE CODE=01   04630000
         CLI   23(@5),X'01'                                       0118  04640000
*           GOTO LCR1;                   /*YES - BRANCH                 04650000
         BC    08,LCR1                                            0119  04660000
* /******************************************************************** 04670000
* /*  SET MODE OR SADXX COMMAND ?                                       04680000
* /******************************************************************** 04690000
*         /* START                                                      04700000
*         CCWADR=CCWADR+8;               /*SET POINTER TO NEXT CCW      04710000
         LA    @4,8(0,@4)                                         0120  04720000
*         CCW(1)=CODE(CMDSEQ);           /*SET COMMAND CODE BY SEQ CODE 04730000
         SR    @1,@1                                              0121  04740000
         IC    @1,23(0,@5)                                        0121  04750000
         LA    @E,CODE-1(@1)                                      0121  04760000
         MVC   0(1,@4),0(@E)                                      0121  04770000
*         CCW(5)='60'X;                  /*MAKE CCW COMMAND CHAINED     04780000
         MVI   4(@4),X'60'                                        0122  04790000
*         CCW(8)='01'X;                  /*SET BYTE COUNT TO 1          04800000
         MVI   7(@4),X'01'                                        0123  04810000
*         /* CHECK SEQ CODE IN CDS                                      04820000
*         IF CMDSEQ='02'X THEN           /*SET MODE CCW FOR SDA-I ?     04830000
         CLI   23(@5),X'02'                                       0124  04840000
         BC    07,@9FD                                            0124  04850000
*           DO;                          /* YES-                        04860000
*             CCW(5)='20'X;              /*NO COMMAND CHAINING          04870000
         MVI   4(@4),X'20'                                        0126  04880000
*             CCW(8)='02'X;              /*BYTE COUNT=2                 04890000
         MVI   7(@4),X'02'                                        0127  04900000
*           END;                         /*                             04910000
*         /* CHECK SEQ CODE IN CDS                                      04920000
*         IF CMDSEQ='02'X | CMDSEQ='03'X THEN/*                         04930000
*                                          SET MODE CCW ?               04940000
@9FD     CLI   23(@5),X'02'                                       0129  04950000
         BC    08,@9FC                                            0129  04960000
         CLI   23(@5),X'03'                                       0129  04970000
         BC    07,@9FB                                            0129  04980000
*           DO;                          /* YES                         04990000
*             /* CHECK CDS                                              05000000
*             IF SMPRSNT='0'B THEN       /*SET MODE BYTES IN CDS        05010000
@9FC     TM    21(@5),B'10000000'                                 0131  05020000
*               GOTO LCR3;               /*BRANCH TO ERROR RETURN       05030000
         BC    08,LCR3                                            0132  05040000
*             DATAADDR=ADDR(VARIABLE);   /*SET CCW PTR TO SET MODE BYTE 05050000
         LA    @F,24(0,@5)                                        0133  05060000
         ST    @F,@TEMP4                                          0133  05070000
         MVC   1(3,@4),@TEMP4+1                                   0133  05080000
*             /* CHECK CDS                                              05090000
*             IF CMDSEQ='02'X THEN       /*SET MODE CCW FOR SDA-I ?     05100000
         CLI   23(@5),X'02'                                       0134  05110000
         BC    07,@9FA                                            0134  05120000
*               DO;                      /*YES -                        05130000
*                 RESTRICT(R6);                                         05140000
*                 GEN(BAL   R6,IOSBRTN); /*BRANCH TO IOSB ROUTINEY02008 05150000
         BAL   R6,IOSBRTN                                               05160000
         DS    0H                                                       05170000
*                 /* RELEASE                                            05180000
*                 RELEASE(R6);                                          05190000
*                 /* CHECK ECB                                          05200000
*                 IF UNSUCCES='1'B THEN  /*EXCP SUCCESSFUL ?            05210000
         TM    LCRFLAG,B'00010000'                                0139  05220000
*                   GOTO LCR5;           /*NO - BRANCH TO RETURN        05230000
         BC    01,LCR5                                            0140  05240000
*                 CAWPTR=CCWADR+8;       /*RESET CHANNEL PROGRAM PTR    05250000
         LA    @F,8                                               0141  05260000
         AR    @F,@4                                              0141  05270000
         ST    @F,CAWPTR                                          0141  05280000
*               END;                                                    05290000
*           END;                                                        05300000
@9FA     EQU   *                                                  0143  05310000
*         /* EJECT PAGE                                                 05320000
*         GEN(EJECT);                                                   05330000
@9FB     EQU   *                                                  0144  05340000
         EJECT                                                          05350000
         DS    0H                                                       05360000
* /******************************************************************** 05370000
* /*  ENABLE OR DIAL COMMAND ?                                          05380000
* /******************************************************************** 05390000
* LCR1:                                  /* BUILD CCWS                  05400000
*         CCWADR=CCWADR+8;               /*POINT TO NEXT CCW            05410000
LCR1     LA    @4,8(0,@4)                                         0145  05420000
*         CCW(1)='27'X;                  /*ENABLE COMMAND CODE          05430000
         MVI   0(@4),X'27'                                        0146  05440000
*         CCW(5)='20'X;                  /*NO COMMAND CHAINING          05450000
         MVI   4(@4),X'20'                                        0147  05460000
*         CCW(8)='01'X;                  /* BYTE COUNT                  05470000
         MVI   7(@4),X'01'                                        0148  05480000
*         /* CHECK CDS                                                  05490000
*         IF SWITCHLN='0'B THEN          /*SWITCHED LINE ?              05500000
         TM    21(@5),B'00100000'                                 0149  05510000
*           GOTO LCR2;                   /* NO                          05520000
         BC    08,LCR2                                            0150  05530000
*         /* CHECK CDS                                                  05540000
*         IF AUTOCALL='0'B THEN          /*SWITCHED LINE W/AUTOCALL     05550000
         TM    21(@5),B'01000000'                                 0151  05560000
         BC    05,@9F9                                            0151  05570000
*           /* NO -  SDA-II AND WORLD TRADE ?                           05580000
*           IF CMDSEQ='03'X & WORLDTRD='1'B                             05590000
*             THEN                       /* YES                         05600000
         CLI   23(@5),X'03'                                       0152  05610000
         BC    07,@9F8                                            0152  05620000
         TM    21(@5),B'00001000'                                 0152  05630000
         BC    12,@9F7                                            0152  05640000
*               CCW(5)='60'X;            /*MAKE ENABLE COMMAND CHAUNED  05650000
         MVI   4(@4),X'60'                                        0153  05660000
*         /* RESTRICT                                                   05670000
*         RESTRICT(VARFLDPT);                                           05680000
@9F7     EQU   *                                                  0154  05690000
@9F8     EQU   *                                                  0154  05700000
*         VARFLDPT=ADDR(VARIABLE);       /*SET POINTER TO VARIABLE      05710000
@9F9     LA    @7,24(0,@5)                                        0155  05720000
*         /* FIELD IN OLTS CDS                                          05730000
*         /* CHECK CDS                                                  05740000
*         IF SMPRSNT='1'B THEN           /*SET MODE BYTES IN CDS ?      05750000
         TM    21(@5),B'10000000'                                 0156  05760000
         BC    12,@9F6                                            0156  05770000
*           VARFLDPT=VARFLDPT+2;         /*YES-RESET PTR TO DIAL        05780000
         LA    @7,2(0,@7)                                         0157  05790000
*         /* CHECK CDS                                                  05800000
*         IF DIALCNT>'14'X THEN          /*DIGIT COUNT 20  ?            05810000
@9F6     CLI   0(@7),X'14'                                        0158  05820000
*           GOTO LCR3;                   /*BRANCH TO ERROR RETURN       05830000
         BC    02,LCR3                                            0159  05840000
* /******************************************************************** 05850000
*         /* CHECK CDS                                                  05860000
*         IF AUTOCALL='0'B THEN          /*AUTOCALL ON SWITCHED LINE?   05870000
         TM    21(@5),B'01000000'                                 0160  05880000
         BC    05,@9F5                                            0160  05890000
*           DO;                          /*NO-                          05900000
*             OPERCALL='1'B;             /*SET OPERATOR CALL FLAG ON    05910000
         OI    LCRFLAG,B'01000000'                                0162  05920000
*             /* CHECK CDS                                              05930000
*             IF DIALCNT^='00'X THEN     /*DIAL DIGITS IN CDS ?         05940000
         CLI   0(@7),X'00'                                        0163  05950000
         BC    08,@9F4                                            0163  05960000
*               DO;                      /*YES-                         05970000
*                 TELNO='1'B;            /* SET FLAG                    05980000
         OI    LCRFLAG,B'10000000'                                0165  05990000
*                 /* RESTRICT                                           06000000
*                 RESTRICT(R1);                                         06010000
*                 R1=IFDXX8;             /*SET MSG PTR                  06020000
         L     @1,16(0,@9)                                        0167  06030000
*                 /*MOVE DIAL DIGITS INTO MESSAGE                       06040000
*                 DDGT=DIALDGT(1:DIALCNT);                              06050000
         SR    @6,@6                                              0168  06060000
         IC    @6,0(0,@7)                                         0168  06070000
         BCTR  @6,0                                               0168  06080000
         LA    @E,1(0,@7)                                         0168  06090000
         LA    @A,45(0,@1)                                        0168  06100000
         MVI   0(@A),C' '                                         0168  06110000
         MVC   1(019,@A),0(@A)                                    0168  06120000
         EX    @6,@MVC                                            0168  06130000
*                 DDGT(1:DIALCNT)=       /* OR IN F0'S                  06140000
*                 DDGT(1:DIALCNT) |      /* IN CASE NUMBER              06150000
*                 X20F0(1:DIALCNT);      /* NOT IN EBCDIC               06160000
         LA    @E,X20F0                                           0169  06170000
         SR    @6,@6                                              0169  06180000
         IC    @6,0(0,@7)                                         0169  06190000
         BCTR  @6,0                                               0169  06200000
         LA    @A,45(0,@1)                                        0169  06210000
         EX    @6,@OC                                             0169  06220000
*                 /* RELEASE                                            06230000
*                 RELEASE(R1);                                          06240000
*               END;                                                    06250000
*           END;                                                        06260000
         BC    15,@9F3                                            0173  06270000
*         ELSE                           /*YES - AUTOCALL ON SWITCHED   06280000
*           /*                             LINE                         06290000
*           DO;                                                         06300000
*             /* CHECK CDS                                              06310000
*             IF DIALCNT='00'X THEN      /*DIAL DIGITS IN CDS ?         06320000
@9F5     CLI   0(@7),X'00'                                        0174  06330000
*               GOTO LCR3;               /* ERROR                       06340000
         BC    08,LCR3                                            0175  06350000
*             CCW(1)='29'X;              /*CHANGE ENABLE TO DIAL        06360000
         MVI   0(@4),X'29'                                        0176  06370000
*             DATAADDR=ADDR(DIALDGT);    /*POINT TO DUAL DIGITS IN CDS  06380000
         LA    @F,1(0,@7)                                         0177  06390000
         ST    @F,@TEMP4                                          0177  06400000
         MVC   1(3,@4),@TEMP4+1                                   0177  06410000
*             CCW(5)='20'X;              /*NO CHAINING                  06420000
         MVI   4(@4),X'20'                                        0178  06430000
*             CCW(8)=DIALCNT;            /*BYTE COUNT                   06440000
         MVC   7(1,@4),0(@7)                                      0179  06450000
*           END;                                                        06460000
* /******************************************************************** 06470000
*         /* RELEASE                                                    06480000
*         RELEASE(VARFLDPT);                                            06490000
@9F3     EQU   *                                                  0181  06500000
*         /* RELEASE                                                    06510000
*         RELEASE(CCWADR);                                              06520000
* /******************************************************************** 06530000
*         /* EJECT                                                      06540000
*         GEN(EJECT);                                                   06550000
         EJECT                                                          06560000
         DS    0H                                                       06570000
* LCR2:                                  /*SET UP TO GO TO IOSB RTN     06580000
*         /* SAVE REG 6                                                 06590000
*         RESTRICT(R6);                                                 06600000
LCR2     EQU   *                                                  0184  06610000
*         GEN(BAL   R6,IOSBRTN);         /*BRANCH TO EXCP ROUTINE TO    06620000
         BAL   R6,IOSBRTN                                               06630000
         DS    0H                                                       06640000
*         RELEASE(R6);                   /*  ENABLE LINE                06650000
*         /* CHECK ECB                                                  06660000
*         IF UNSUCCES='1'B THEN          /* I/O SUCCESSFUL ?            06670000
         TM    LCRFLAG,B'00010000'                                0187  06680000
*           GOTO LCR5;                   /*NO - BRANCH TO RETURN        06690000
         BC    01,LCR5                                            0188  06700000
*         /* RELEASE REG 8                                              06710000
*         RELEASE(IOSBPTR);                                             06720000
* /******************************************************************** 06730000
*         LCRFLG='0'B;                   /*RESET LCR FLAG IN CDS        06740000
         NI    9(@5),B'11111110'                                  0190  06750000
*         LNENBL1='1'B;                  /*SET ENABLE FLAG ON IN DEVTAB 06760000
         OI    15(@3),B'01000000'                                 0191  06770000
*         LNDSBL1='0'B;                  /*SET DISABLE FLAG OFF         06780000
         NI    15(@3),B'01111111'                                 0192  06790000
*         /* EJECT                                                      06800000
*         GEN(EJECT);                                                   06810000
         EJECT                                                          06820000
         DS    0H                                                       06830000
* /******************************************************************** 06840000
* LCR6:                                  /* NORMAL RETURN               06850000
*         DPMSGREI='0'B;                /* TURN OFF REM MSG FLGOY00427* 06860000
LCR6     NI    A00071,B'11111110'                                 0194  06870000
*         R15=0;                         /*SET RETURN CODE=00           06880000
         SR    @F,@F                                              0195  06890000
*         RETURN;                        /*YES - RETURN TO EXIO MODULE  06900000
         BC    15,@EL01                                           0196  06910000
* /******************************************************************** 06920000
* LCR2A:                                 /*SET UP TO GO TO MESSAGE RTN  06930000
*         GEN(BAL   R7,MSGRTN);          /*BRANCH TO OUTPUT MESSAGE     06940000
LCR2A    BAL   R7,MSGRTN                                                06950000
         DS    0H                                                       06960000
* /******************************************************************** 06970000
* LCR3:                                  /* ERROR                       06980000
*         R1=IFDXX3;                     /*SET ERROR MSG PTR            06990000
LCR3     L     @1,8(0,@9)                                         0198  07000000
* /******************************************************************** 07010000
* LCR4:                                  /*SET UP TO GO TO MESSAGE RTN  07020000
*         GEN(BAL   R7,MSGRTN);          /*BRANCH TO OUTPUT MESSAGE     07030000
LCR4     BAL   R7,MSGRTN                                                07040000
         DS    0H                                                       07050000
* /******************************************************************** 07060000
* LCR5:                                  /* ERROR RETURN                07070000
*         DPMSGREI='0'B;                /* REM SITE GETS MSG   OY00427* 07080000
LCR5     NI    A00071,B'11111110'                                 0200  07090000
*         R15=20;                        /*SET RETURN CODE=14           07100000
         LA    @F,20                                              0201  07110000
*         RETURN;                        /*RETURN TO EXIO MODULE        07120000
         BC    15,@EL01                                           0202  07130000
*         RELEASE(DEVPT1,CDSPTR);                                       07140000
* /******************************************************************** 07150000
* /*  OUTPUT OPERATOR MESSAGE ROUTINE                                   07160000
* /******************************************************************** 07170000
* MSGRTN:                                /* MESSAGE ROUTINE             07180000
*                                                                       07190000
*         /* OUTPUT HEADER MESSAGE FOR IFDOLT73, LINE ADDR AND SYMNAM * 07200000
*         IF HDRMSG='1'B THEN           /* IF HDR MSG FLAG IS ONX02008* 07210000
MSGRTN   TM    LCRFLAG,B'00001000'                                0204  07220000
         BC    12,@9F2                                            0204  07230000
*          DO;                          /* SET UP FOR MSG OUTPUTX02008* 07240000
*           R1SAVE=R1;                  /* SAVE ERROR MSG PTR   X02008* 07250000
         ST    @1,R1SAVE                                          0206  07260000
*           R1=IFDXX2;                  /* ADDRESS HEADER MSG   X02008* 07270000
         L     @1,4(0,@9)                                         0207  07280000
*           GEN(PWTO REG=(1));          /* OUTPUT MESSAGE       X02008* 07290000
         PWTO REG=(1)                                                   07300000
         DS    0H                                                       07310000
*           R1=R1SAVE;                  /* RESTORE REG 1 VALUE  X02008* 07320000
         L     @1,R1SAVE                                          0209  07330000
*           HDRMSG='0'B;                /* DONT OUTPUT MSG AGAINX02008* 07340000
         NI    LCRFLAG,B'11110111'                                0210  07350000
*          END;                         /* END MSG LOOP         X02008* 07360000
*                                                                       07370000
*         GEN(PWTO  REG=(1));            /*WRITE OUTPUT MESSAGE         07380000
@9F2     EQU   *                                                  0212  07390000
         PWTO  REG=(1)                                                  07400000
         DS    0H                                                       07410000
*         GEN(BR    R7);                 /*BRANCH BACK                  07420000
         BR    R7                                                       07430000
         DS    0H                                                       07440000
*         /************************************************************ 07450000
*         GEN(EJECT);                                                   07460000
         EJECT                                                          07470000
         DS    0H                                                       07480000
* /******************************************************************** 07490000
* /*  EXECUTE CHANNEL PROGRAM TO CONDITION LINE                         07500000
* /******************************************************************** 07510000
* IOSBRTN:                               /* EXCP ROUTINE                07520000
*         RESTRICT(R6);                                                 07530000
*         /* SAVE REGS                                                  07540000
*         RESTRICT(IOSBPTR,DEVPT1,CCWADR,CDSPTR);                       07550000
*         FLGA='00'X;                    /* INIT FLAG BYTE TO 0  Y02008 07560000
IOSBRTN  MVI   FLGA,X'00'                                         0217  07570000
*         FLGB='00'X;                    /* INIT FLAG BYTE TO 0  Y02008 07580000
         MVI   FLGB,X'00'                                         0218  07590000
*         FILEMSK='00'X;                 /* INIT FILE MASK TO 0  Y02008 07600000
         MVI   FILEMSK,X'00'                                      0219  07610000
*         SNSCNT='02'X;                  /* INIT SENSE COUNT=02  Y02008 07620000
         MVI   SNSCNT,X'02'                                       0220  07630000
*         CNTSNS='00'X;                 /* CLEAR TECB SNS CNT   Y02008* 07640000
         MVI   TECB+6,X'00'                                       0221  07650000
*         CNTINT='00'X;                 /* CLEAR TECB INT CNT   Y02008* 07660000
         MVI   TECB+7,X'00'                                       0222  07670000
*         SIOCC='00'X;                  /* ZERO I/O CC IN TECB  Y02008* 07680000
         MVI   TECB+8,X'00'                                       0223  07690000
*         OUTBUFR=OUTBUFR&&OUTBUFR;     /* ZERO CSW,SNS IN TECB Y02008* 07700000
         XC    TECB+13(1),TECB+13                                 0224  07710000
*         TECBPTRX=ADDR(TECB);           /* PTR TO TECB FOR EVENTY02008 07720000
         LA    @F,TECB                                            0225  07730000
         ST    @F,TECBPTRX                                        0225  07740000
*         IOCCWADR=CAWPTR;               /* ADDRESS OF CCWS,ENABLY02008 07750000
         MVC   IOCCWADR(4),CAWPTR                                 0226  07760000
*         DVTPTR=DEVPT1;                 /* ADDRESS OF DEVICE TABY02008 07770000
         ST    @3,DVTPTR                                          0227  07780000
*         FLGA=FLGA|'20'X;              /* INVOKE GDP IO FCTN   Y02008* 07790000
         OI    FLGA,X'20'                                         0228  07800000
*         FLGB=FLGB|'80'X;              /* INTERNAL CALL FLAG   Y02008* 07810000
         OI    FLGB,X'80'                                         0229  07820000
*                                                                       07830000
*         IF VIRTUAL='1'B                /* IS OLTEP IN VIRTUAL? Y02008 07840000
*          THEN                          /* YES, SET BIT TELLING Y02008 07850000
         TM    A00012,B'00000010'                                 0230  07860000
         BC    12,@9F1                                            0230  07870000
*         FLGB=FLGB|'20'X;              /* VIRTUAL CCWS         Y02008* 07880000
         OI    FLGB,X'20'                                         0231  07890000
*                                                                       07900000
*         R15=IORTNADR;                  /* ADDRESS IO EFFECTOR  Y02008 07910000
@9F1     L     @F,IORTNADR                                        0232  07920000
*         GEN(BALR R14,R15);             /* GO PERFORM ENABLE    Y02008 07930000
         BALR R14,R15                                                   07940000
         DS    0H                                                       07950000
*                                                                       07960000
*         TIME=0120;                     /*SET TIMER FOR 2 MIN   Y02008 07970000
         MVC   WAITLIST+13(2),@D1                                 0234  07980000
*         /*     CHECK CDS                                              07990000
*         IF OPERCALL='1'B THEN          /*OPERATOR CALL ?              08000000
         TM    LCRFLAG,B'01000000'                                0235  08010000
         BC    12,@9F0                                            0235  08020000
*           DO;                          /*YES                          08030000
*             TIME=0240;                 /*SET TIMER FOR 4 MIN   Y02008 08040000
         MVC   WAITLIST+13(2),@D2                                 0237  08050000
*             /* SAVE REG                                               08060000
*             RESTRICT(R1);                                             08070000
*             R1=IFDXX7;                 /*SET MSG PTR                  08080000
         L     @1,12(0,@9)                                        0239  08090000
*             /* CHECK CDS                                              08100000
*             IF TELNO='1'B THEN         /*DIAL DIGITS IN CDS           08110000
         TM    LCRFLAG,B'10000000'                                0240  08120000
         BC    12,@9EF                                            0240  08130000
*               R1=IFDXX8;               /*YES - SET MSG PTR            08140000
         L     @1,16(0,@9)                                        0241  08150000
*             GEN(BAL   R7,MSGRTN);      /*BRANCH TO OUTPUT MESSAGE     08160000
@9EF     EQU   *                                                  0242  08170000
         BAL   R7,MSGRTN                                                08180000
         DS    0H                                                       08190000
*             /* FREE REG                                               08200000
*             RELEASE(R1);                                              08210000
*           END;                                                        08220000
*                                                                       08230000
*         R1=ADDR(WAITLIST);             /* ADDRESS WAIT LIST    Y02008 08240000
@9F0     LA    @1,WAITLIST                                        0245  08250000
*         R14=ADDR(CHKENABL);            /* ADDR OF RETURN POINT Y02008 08260000
         LA    @E,CHKENABL                                        0246  08270000
*         R15=TAB28;                     /* ADDRESS TRANS MNGR   Y02008 08280000
         L     @F,TAB28                                           0247  08290000
*         GO TO R15;                     /* PERFORM WAIT I/O     Y02008 08300000
         BCR   15,@F                                              0248  08310000
*                                                                       08320000
* CHKENABL:                                                             08330000
*         WAITRC=R15;                    /* SAVE WAITIO RET CODE Y02008 08340000
CHKENABL ST    @F,WAITRC                                          0249  08350000
*         IF WAITRC='08'X                /* DID EVENT TIMEOUT?   Y02008 08360000
*          THEN                          /* YES, MUST PRINT MSG  Y02008 08370000
         LA    @F,X'08'                                           0250  08380000
         C     @F,WAITRC                                          0250  08390000
         BC    07,@9EE                                            0250  08400000
*           DO;                          /* AND RE ISSUE EVENT   Y02008 08410000
*           IF OPERCALL='1'B THEN        /* OPERATOR CALL ?      Y02008 08420000
         TM    LCRFLAG,B'01000000'                                0252  08430000
         BC    12,@9ED                                            0252  08440000
*             DO;                        /*YES -                        08450000
*               R1=IFDXXA;               /*SET MSG PTR                  08460000
         L     @1,24(0,@9)                                        0254  08470000
*               GEN(BAL   R7,MSGRTN);    /*BRANCH TO OUTPUT MESSAGE     08480000
         BAL   R7,MSGRTN                                                08490000
         DS    0H                                                       08500000
*             END;                                                      08510000
*             UNSUCCES='1'B;             /*SET ENABLE FAILED FLAG ON    08520000
@9ED     OI    LCRFLAG,B'00010000'                                0257  08530000
*             GEN(BR    R6);             /*BRANCH BACK                  08540000
         BR    R6                                                       08550000
         DS    0H                                                       08560000
*           END;                                                        08570000
*         GEN(EJECT);                                                   08580000
@9EE     EQU   *                                                  0260  08590000
         EJECT                                                          08600000
         DS    0H                                                       08610000
* /******************************************************************** 08620000
* /*  LINE CONNECTION CHANNEL PROGRAM ERROR RECOVERY AND OUTPUT         08630000
* /******************************************************************** 08640000
*                                                                       08650000
*         IF SIOCC='F3'X                 /* IF SIO RESULTED IN   Y02008 08660000
*          THEN                          /* CC==3 THEN DEV IS NOTY02008 08670000
         CLI   TECB+8,X'F3'                                       0261  08680000
         BC    07,@9EC                                            0261  08690000
*           DO;                          /* MUST PRINT MESSAGE   Y02008 08700000
*            R1=IFD408I;                 /* ADDRESS ERROR MESSAGEY02008 08710000
         L     @1,32(0,@9)                                        0263  08720000
*            ERRORLINE=DEVADDR1;         /* PUT LINE ADDR IN MSG Y02008 08730000
         MVC   12(8,@1),0(@3)                                     0264  08740000
*            GEN (BAL  R7,MSGRTN);       /* PRINT MESSAGE        Y02008 08750000
         BAL  R7,MSGRTN                                                 08760000
         DS    0H                                                       08770000
*            UNSUCCES='1'B;              /* UNSUCCESSFUL ENABLE  Y02008 08780000
         OI    LCRFLAG,B'00010000'                                0266  08790000
*            GEN( BR R6);                /* RETURN TO MAINLINE   Y02008 08800000
          BR R6                                                         08810000
         DS    0H                                                       08820000
*           END;                         /* END MSG OUTPUT       Y02008 08830000
*                                                                       08840000
*         IF UNITCHCK='1'B |             /* IF UNIT CHECK OCCURD Y02008 08850000
*            TECBFLGB>'00'X &            /* OR STATUS SHOWS OTHR Y02008 08860000
*            TECBFLGB<'80'X              /* EXCEPTIONAL CONDITIONY02008 08870000
*          THEN                          /* MUST OUTPUT CSW AND  Y02008 08880000
@9EC     TM    TECB+16,B'00000010'                                0269  08890000
         BC    01,@9EB                                            0269  08900000
         CLI   TECB+17,X'00'                                      0269  08910000
         BC    12,@9EA                                            0269  08920000
         CLI   TECB+17,X'80'                                      0269  08930000
         BC    10,@9E9                                            0269  08940000
*           DO;                          /* POSSIBLE SENSE INFO. Y02008 08950000
*             HEX=HEX&&HEX;              /*CLEAR HEX SAVE AREA          08960000
@9EB     XC    HEX(17),HEX                                        0271  08970000
*             HEXCSW=CSW1;               /* SAVE CSW                    08980000
         MVC   HEX(7),TECB+13                                     0272  08990000
*             /* CHECK CSW                                              09000000
*             IF UNITCHCK='1'B THEN      /*UNIT CHECJ FLAG ON           09010000
         TM    TECB+16,B'00000010'                                0273  09020000
         BC    12,@9E8                                            0273  09030000
*               DO;                      /*YES -                        09040000
*                 HEXSENSE=TSNS1;        /*SAVE IOB SENSE BYTES  Y02008 09050000
         MVC   HEX+15(2),TECB+23                                  0275  09060000
*                 /* CHECK CDS                                          09070000
*                 IF OPERCALL='0'B & RETRY='0'B                         09080000
*                   THEN                 /* YES                         09090000
         TM    LCRFLAG,B'01000000'                                0276  09100000
         BC    05,@9E7                                            0276  09110000
         TM    LCRFLAG,B'00100000'                                0276  09120000
         BC    05,@9E6                                            0276  09130000
*                                                                       09140000
*                    DO;                 /*                             09150000
*                     RETRY='1'B;        /*SET RETRY FLAG ON            09160000
         OI    LCRFLAG,B'00100000'                                0278  09170000
*                     GOTO IOSBRTN;      /*BRANCH BACK TO RETRY  Y02008 09180000
         BC    15,IOSBRTN                                         0279  09190000
*                    END;                                               09200000
*                                                                       09210000
*               END;                     /* END UNIT CHECK DO-ENDY02008 09220000
@9E6     EQU   *                                                  0281  09230000
@9E7     EQU   *                                                  0281  09240000
*                                                                       09250000
*             CCWADR=CCWPLUS8;           /*PTR TO COMMAND ADDR INY02008 09260000
@9E8     MVC   @TEMP3+1(3),TECB+13                                0282  09270000
         L     @4,@TEMP3                                          0282  09280000
*             /* DECREMENT CCW PTR                                      09290000
*             CCWADR=CCWADR-8;           /*POINT TO FAILING CCW         09300000
         SH    @4,@D3                                             0283  09310000
*             HEXCCW=FAIL;               /*SAVE FAILED CCW              09320000
         MVC   HEX+7(8),0(@4)                                     0284  09330000
*             RESTRICT(R1);                                             09340000
*             R1=ADDR(CONVERT);          /*SET PTR TO CONVERT LIST      09350000
         LA    @1,CONVERT                                         0286  09360000
*             R15=TAB28;                 /*SET PTR TO CONVERT MODULE    09370000
         L     @F,TAB28                                           0287  09380000
*             GEN(BALR  R14,R15);        /*BRANCH TO CONVERT MODULE     09390000
         BALR  R14,R15                                                  09400000
         DS    0H                                                       09410000
*             R1=IFDXX9;                 /*SET MSG PTR                  09420000
         L     @1,20(0,@9)                                        0289  09430000
*             CCWFAIL=DECCCW;            /*MOVE FAILED CCW INTO MSG     09440000
         MVC   36(16,@1),DEC+14                                   0290  09450000
*             GEN(BAL   R7,MSGRTN);      /*BRANCH TO OUTPUT MESSAGE     09460000
         BAL   R7,MSGRTN                                                09470000
         DS    0H                                                       09480000
*             /* PTR TO ERROR MSG                                       09490000
*             R1=IFDXXB;                                                09500000
         L     @1,28(0,@9)                                        0292  09510000
*             STATUS=DECCSW;             /*MOVE STATUS INTO ERROR MSG   09520000
         MVC   18(14,@1),DEC                                      0293  09530000
*             /* CHECK CSW                                              09540000
*             IF UNITCHCK='1'B THEN      /*UNIT CHECK ?                 09550000
         TM    TECB+16,B'00000010'                                0294  09560000
         BC    12,@9E5                                            0294  09570000
*               SENSE=DECSENSE;          /*YES - MOVE SENSE BYTES INTO  09580000
         MVC   37(4,@1),DEC+30                                    0295  09590000
*             /* BRANCH TO MESSAGE ROUTINE                              09600000
*             GEN( BAL   R7,MSGRTN);                                    09610000
@9E5     EQU   *                                                  0296  09620000
          BAL   R7,MSGRTN                                               09630000
         DS    0H                                                       09640000
*             /* FREE REG                                               09650000
*             RELEASE(R1);                                              09660000
*           END;                                                        09670000
*                                                                       09680000
*         /* IHIS POINT REACHED IF LINE ENABLED OK               Y02008 09690000
*                                                                       09700000
*         IF TECBFLGA='0C'X &            /* IF CHAN/DEV END ARE  Y02008 09710000
*            TECBFLGB='00'X              /* ONLY STATUS INDICATRSY02008 09720000
*          THEN                          /* LINE IS ENABLED      Y02008 09730000
@9E9     EQU   *                                                  0299  09740000
@9EA     CLI   TECB+16,X'0C'                                      0299  09750000
         BC    07,@9E4                                            0299  09760000
         CLI   TECB+17,X'00'                                      0299  09770000
         BC    07,@9E3                                            0299  09780000
*           GEN(BR R6);                  /* RETURN TO MAINLINE   Y02008 09790000
         BR R6                                                          09800000
         DS    0H                                                       09810000
*                                                                       09820000
*         UNSUCCES='1'B;                /* UNSUCCESSFUL ENABLE  Y02008* 09830000
@9E3     EQU   *                                                  0301  09840000
@9E4     OI    LCRFLAG,B'00010000'                                0301  09850000
*         GEN( BR R6);                  /* BRANCH BACK TO MAINLINE    * 09860000
          BR R6                                                         09870000
         DS    0H                                                       09880000
*         END IFDOLT73;                                                 09890000
@EL01    L     @D,4(0,@D)                                         0303  09900000
         L     @E,12(0,@D)                                        0303  09910000
         LM    @0,@C,20(@D)                                       0303  09920000
         BCR   15,@E                                              0303  09930000
@DATA1   EQU   *                                                        09940000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           09950000
@1       EQU   01                                                       09960000
@2       EQU   02                                                       09970000
@3       EQU   03                                                       09980000
@4       EQU   04                                                       09990000
@5       EQU   05                                                       10000000
@6       EQU   06                                                       10010000
@7       EQU   07                                                       10020000
@8       EQU   08                                                       10030000
@9       EQU   09                                                       10040000
@A       EQU   10                                                       10050000
@B       EQU   11                                                       10060000
@C       EQU   12                                                       10070000
@D       EQU   13                                                       10080000
@E       EQU   14                                                       10090000
@F       EQU   15                                                       10100000
@D1      DC    H'120'                                                   10110000
@D2      DC    H'240'                                                   10120000
@D3      DC    H'8'                                                     10130000
@MVC     MVC   0(1,@A),0(@E)                                            10140000
@OC      OC    0(1,@A),0(@E)                                            10150000
@V1      DC    V(IFDMSG73)                                              10160000
         DS    0F                                                       10170000
         DS    0D                                                       10180000
@DATA    EQU   *                                                        10190000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   10200000
R0       EQU   00000000            FULLWORD INTEGER REGISTER            10210000
R1       EQU   00000001            FULLWORD POINTER REGISTER            10220000
R2       EQU   00000002            FULLWORD POINTER REGISTER            10230000
R6       EQU   00000006            FULLWORD INTEGER REGISTER            10240000
R7       EQU   00000007            FULLWORD INTEGER REGISTER            10250000
R9       EQU   00000009            FULLWORD POINTER REGISTER            10260000
R14      EQU   00000014            FULLWORD POINTER REGISTER            10270000
R15      EQU   00000015            FULLWORD POINTER REGISTER            10280000
DEVPT1   EQU   00000003            3  BYTE  POINTER REGISTER            10290000
DEVPT2   EQU   00000004            3  BYTE  POINTER REGISTER            10300000
CCWADR   EQU   00000004            3  BYTE  POINTER REGISTER            10310000
CDSPTR   EQU   00000005            FULLWORD POINTER REGISTER            10320000
VARFLDPT EQU   00000007            3  BYTE  POINTER REGISTER            10330000
IOSBPTR  EQU   00000008            FULLWORD POINTER REGISTER            10340000
LCRFLAG  EQU   @DATA+00000072      1 BYTE(S)                            10350000
TELNO    EQU   LCRFLAG+00000000    1 BIT(S)                             10360000
OPERCALL EQU   LCRFLAG+00000000    1 BIT(S)                             10370000
RETRY    EQU   LCRFLAG+00000000    1 BIT(S)                             10380000
UNSUCCES EQU   LCRFLAG+00000000    1 BIT(S)                             10390000
HDRMSG   EQU   LCRFLAG+00000000    1 BIT(S)                             10400000
R1SAVE   EQU   @DATA+00000076      FULLWORD INTEGER                     10410000
CAWPTR   EQU   @DATA+00000080      FULLWORD POINTER                     10420000
FAIL     EQU   00000000            8 BYTE(S)                            10430000
DEC      EQU   @DATA+00000084      40 BYTE(S) ON WORD                   10440000
DECCSW   EQU   DEC+00000000        14 BYTE(S)                           10450000
DECCCW   EQU   DEC+00000014        16 BYTE(S)                           10460000
DECSENSE EQU   DEC+00000030        4 BYTE(S)                            10470000
HEX      EQU   @DATA+00000124      17 BYTE(S) ON WORD                   10480000
HEXCSW   EQU   HEX+00000000        7 BYTE(S)                            10490000
A00000   EQU   HEX+00000000        3 BYTE(S)                            10500000
A00001   EQU   HEX+00000003        6 BIT(S)                             10510000
SAVUNITC EQU   HEX+00000003        1 BIT(S)                             10520000
A00002   EQU   HEX+00000003        1 BIT(S)                             10530000
A00003   EQU   HEX+00000004        1 BYTE(S)                            10540000
HEXCCW   EQU   HEX+00000007        8 BYTE(S)                            10550000
HEXSENSE EQU   HEX+00000015        2 BYTE(S)                            10560000
CONVERT  EQU   @DATA+00000144      14 BYTE(S) ON WORD                   10570000
         ORG   CONVERT+00000000                                         10580000
A00004   EQU   *                   2 BYTE(S)                            10590000
         DC    X'0002'                                                  10600000
A00005   EQU   *                   2 BYTE(S)                            10610000
         DC    C'41'                                                    10620000
A00006   EQU   *                   FULLWORD POINTER                     10630000
         DC    AL4(HEX)                                                 10640000
A00007   EQU   *                   FULLWORD POINTER                     10650000
         DC    AL4(DEC)                                                 10660000
A00008   EQU   *                   2 BYTE(S)                            10670000
         DC    X'8011'                                                  10680000
ONES     EQU   @DATA+00000158      80 BYTE(S)                           10690000
A00009   EQU   *                   80*1 BYTE(S)                         10700000
         DC    00080X'FF'                                               10710000
X20F0    EQU   @DATA+00000238      20 BYTE(S)                           10720000
A00010   EQU   *                   20*1 BYTE(S)                         10730000
         DC    00020X'F0'                                               10740000
CODE     EQU   @DATA+00000258      7 BYTE(S)                            10750000
A00011   EQU   CODE+00000000       1 BYTE(S)                            10760000
         ORG   CODE+00000001                                            10770000
SETMODE  EQU   *                   2*1 BYTE(S)                          10780000
         DC    00002X'23'                                               10790000
SADXX    EQU   *                   4*1 BYTE(S)                          10800000
         DC    X'13'                                                    10810000
         DC    X'17'                                                    10820000
         DC    X'1B'                                                    10830000
         DC    X'1F'                                                    10840000
MSGPTR   EQU   00000000            36 BYTE(S) ON WORD                   10850000
IFDXX1   EQU   MSGPTR+00000000     FULLWORD POINTER                     10860000
IFDXX2   EQU   MSGPTR+00000004     FULLWORD POINTER                     10870000
IFDXX3   EQU   MSGPTR+00000008     FULLWORD POINTER                     10880000
IFDXX7   EQU   MSGPTR+00000012     FULLWORD POINTER                     10890000
IFDXX8   EQU   MSGPTR+00000016     FULLWORD POINTER                     10900000
IFDXX9   EQU   MSGPTR+00000020     FULLWORD POINTER                     10910000
IFDXXA   EQU   MSGPTR+00000024     FULLWORD POINTER                     10920000
IFDXXB   EQU   MSGPTR+00000028     FULLWORD POINTER                     10930000
IFD408I  EQU   MSGPTR+00000032     FULLWORD POINTER                     10940000
MSG2     EQU   00000000            64 BYTE(S) ON WORD                   10950000
A00014   EQU   MSG2+00000000       12 BYTE(S)                           10960000
A00015   EQU   MSG2+00000012       25 BYTE(S)                           10970000
LINE     EQU   MSG2+00000037       8 BYTE(S)                            10980000
A00016   EQU   MSG2+00000045       11 BYTE(S)                           10990000
NAME     EQU   MSG2+00000056       8 BYTE(S)                            11000000
MSG8     EQU   00000000            65 BYTE(S) ON WORD                   11010000
A00017   EQU   MSG8+00000000       4 BYTE(S)                            11020000
A00018   EQU   MSG8+00000004       41 BYTE(S)                           11030000
DDGT     EQU   MSG8+00000045       20 BYTE(S)                           11040000
MSG9     EQU   00000000            52 BYTE(S) ON WORD                   11050000
A00019   EQU   MSG9+00000000       4 BYTE(S)                            11060000
A00020   EQU   MSG9+00000004       32 BYTE(S)                           11070000
CCWFAIL  EQU   MSG9+00000036       16 BYTE(S)                           11080000
MSG11    EQU   00000000            41 BYTE(S) ON WORD                   11090000
A00021   EQU   MSG11+00000000      4 BYTE(S)                            11100000
A00022   EQU   MSG11+00000004      14 BYTE(S)                           11110000
STATUS   EQU   MSG11+00000018      14 BYTE(S)                           11120000
A00023   EQU   MSG11+00000032      5 BYTE(S)                            11130000
SENSE    EQU   MSG11+00000037      4 BYTE(S)                            11140000
MSG408   EQU   00000000            70 BYTE(S) ON WORD                   11150000
A00024   EQU   MSG408+00000000     12 BYTE(S)                           11160000
ERRORLIN EQU   MSG408+00000012     8 BYTE(S)                            11170000
A00025   EQU   MSG408+00000020     50 BYTE(S)                           11180000
WAITLIST EQU   @DATA+00000268      1 BYTE(S) ON WORD                    11190000
         ORG   WAITLIST+00000000                                        11200000
XMGR     EQU   *                   1 BYTE(S)                            11210000
         DC    X'00'                                                    11220000
LVL      EQU   *                   1 BYTE(S)                            11230000
         DC    X'02'                                                    11240000
MODID    EQU   *                   2 BYTE(S)                            11250000
         DC    C'36'                                                    11260000
TECBPTR  EQU   *                   FULLWORD POINTER                     11270000
         DC    AL4(TECB)                                                11280000
CDSDATA  EQU   *                   FULLWORD POINTER                     11290000
         DC    XL4'00'                                                  11300000
FLG      EQU   *                   1 BYTE(S)                            11310000
         DC    X'80'                                                    11320000
WAITYES  EQU   WAITLIST+00000012   1 BIT(S)                             11330000
TIME     EQU   WAITLIST+00000013   2 BYTE(S)                            11340000
WAITRC   EQU   @DATA+00000284      FULLWORD INTEGER                     11350000
TECB     EQU   @DATA+00000288      1 BYTE(S)                            11360000
         ORG   TECB+00000000                                            11370000
FLDCNT   EQU   *                   1 BYTE(S)                            11380000
         DC    X'01'                                                    11390000
FLDSIZE  EQU   *                   1 BYTE(S)                            11400000
         DC    X'0C'                                                    11410000
A00026   EQU   *                   1 BYTE(S)                            11420000
         DC    X'00'                                                    11430000
SNSIZE   EQU   *                   1 BYTE(S)                            11440000
         DC    X'05'                                                    11450000
FLG1     EQU   *                   1 BYTE(S)                            11460000
         DC    X'00'                                                    11470000
SNSFIELD EQU   *                   1 BYTE(S)                            11480000
         DC    X'01'                                                    11490000
CNTSNS   EQU   *                   1 BYTE(S)                            11500000
         DC    X'00'                                                    11510000
CNTINT   EQU   *                   1 BYTE(S)                            11520000
         DC    X'00'                                                    11530000
SIOCC    EQU   *                   1 BYTE(S)                            11540000
         DC    X'00'                                                    11550000
A00027   EQU   *                   1 BYTE(S)                            11560000
         DC    X'00'                                                    11570000
DEVAD    EQU   *                   2 BYTE(S)                            11580000
         DC    X'0000'                                                  11590000
A00028   EQU   *                   1 BYTE(S)                            11600000
         DC    X'00'                                                    11610000
OUTBUFR  EQU   *                   12*1 BYTE(S)                         11620000
         DC    00012X'00'                                               11630000
CSW1     EQU   TECB+00000013       7 BYTE(S)                            11640000
CCWPLUS8 EQU   TECB+00000013       3 BYTE(S)                            11650000
TECBFLGA EQU   TECB+00000016       1 BYTE(S)                            11660000
A00029   EQU   TECB+00000016       4 BIT(S)                             11670000
CHANEND  EQU   TECB+00000016       1 BIT(S)                             11680000
DEVICEND EQU   TECB+00000016       1 BIT(S)                             11690000
UNITCHCK EQU   TECB+00000016       1 BIT(S)                             11700000
TECBFLGB EQU   TECB+00000017       1 BYTE(S)                            11710000
A00030   EQU   TECB+00000020       3 BYTE(S)                            11720000
TSNS1    EQU   TECB+00000023       2 BYTE(S)                            11730000
A00031   EQU   00000000            56 BYTE(S) ON WORD                   11740000
DEVADDR1 EQU   A00031+00000000     8 BYTE(S)                            11750000
UCBADDR1 EQU   A00031+00000008     FULLWORD POINTER                     11760000
A00032   EQU   A00031+00000012     1 BYTE(S)                            11770000
A00033   EQU   A00031+00000012     1 BIT(S)                             11780000
PRIMARY  EQU   A00031+00000012     1 BIT(S)                             11790000
A00034   EQU   A00031+00000012     6 BIT(S)                             11800000
A00035   EQU   A00031+00000013     2 BYTE(S)                            11810000
A00036   EQU   A00031+00000015     1 BYTE(S)                            11820000
LNDSBL1  EQU   A00031+00000015     1 BIT(S)                             11830000
LNENBL1  EQU   A00031+00000015     1 BIT(S)                             11840000
A00037   EQU   A00031+00000015     6 BIT(S)                             11850000
A00038   EQU   A00031+00000016     25 BYTE(S)                           11860000
A00039   EQU   A00031+00000041     1 BYTE(S)                            11870000
A00040   EQU   A00031+00000041     4 BIT(S)                             11880000
NMPRSNT1 EQU   A00031+00000041     1 BIT(S)                             11890000
A00041   EQU   A00031+00000041     3 BIT(S)                             11900000
A00042   EQU   A00031+00000042     2 BYTE(S)                            11910000
SYMBNM1  EQU   A00031+00000044     8 BYTE(S)                            11920000
A00043   EQU   A00031+00000052     4 BYTE(S)                            11930000
A00044   EQU   00000000            176 BYTE(S) ON WORD                  11940000
DEVADDR2 EQU   A00044+00000000     8 BYTE(S)                            11950000
A00045   EQU   A00044+00000008     7 BYTE(S)                            11960000
A00046   EQU   A00044+00000015     1 BYTE(S)                            11970000
LNDSBL2  EQU   A00044+00000015     1 BIT(S)                             11980000
LNENBL2  EQU   A00044+00000015     1 BIT(S)                             11990000
A00047   EQU   A00044+00000015     6 BIT(S)                             12000000
CHAR     EQU   A00044+00000016     40*4  BYTE  INTEGER                  12010000
A00048   EQU   00000000            47 BYTE(S) ON WORD                   12020000
A00049   EQU   A00048+00000000     9 BYTE(S)                            12030000
A00050   EQU   A00048+00000009     1 BYTE(S)                            12040000
A00051   EQU   A00048+00000009     4 BIT(S)                             12050000
SYMNMFLG EQU   A00048+00000009     1 BIT(S)                             12060000
A00052   EQU   A00048+00000009     2 BIT(S)                             12070000
LCRFLG   EQU   A00048+00000009     1 BIT(S)                             12080000
A00053   EQU   A00048+00000010     11 BYTE(S)                           12090000
A00054   EQU   A00048+00000021     1 BYTE(S)                            12100000
SMPRSNT  EQU   A00048+00000021     1 BIT(S)                             12110000
AUTOCALL EQU   A00048+00000021     1 BIT(S)                             12120000
SWITCHLN EQU   A00048+00000021     1 BIT(S)                             12130000
NSWTCHLN EQU   A00048+00000021     1 BIT(S)                             12140000
WORLDTRD EQU   A00048+00000021     1 BIT(S)                             12150000
A00055   EQU   A00048+00000021     3 BIT(S)                             12160000
A00056   EQU   A00048+00000022     1 BYTE(S)                            12170000
CMDSEQ   EQU   A00048+00000023     1 BYTE(S)                            12180000
VARIABLE EQU   A00048+00000024     23 BYTE(S)                           12190000
A00057   EQU   00000000            21 BYTE(S) ON WORD                   12200000
DIALCNT  EQU   A00057+00000000     1 BYTE(S)                            12210000
DIALDGT  EQU   A00057+00000001     20 BYTE(S)                           12220000
A00058   EQU   00000000            8 BYTE(S) ON WORD                    12230000
A00059   EQU   A00058+00000000     4 BYTE(S)                            12240000
EXIOPTR  EQU   A00058+00000004     FULLWORD POINTER                     12250000
A00060   EQU   00000000            8 BYTE(S) ON WORD                    12260000
DEVICE   EQU   A00060+00000000     FULLWORD POINTER                     12270000
CDSADR   EQU   A00060+00000004     FULLWORD POINTER                     12280000
CCWAREA  EQU   @DATA+00000328      64 BYTE(S) ON DWORD                  12290000
         ORG   CCWAREA+00000000                                         12300000
DISABLE  EQU   *                   8 BYTE(S)                            12310000
         DC    X'2F00000020000001'                                      12320000
TWOCCW   EQU   CCWAREA+00000008    16 BYTE(S)                           12330000
WRITECCW EQU   CCWAREA+00000024    6*8 BYTE(S)                          12340000
         ORG   CCWAREA+00000024                                         12350000
A00061   EQU   *                   1 BYTE(S)                            12360000
&T       SETA  00006                                                    12370000
.L099995 ANOP                                                           12380000
         DC    X'01'                                                    12390000
         DS    00007C                                                   12400000
&T       SETA  &T-1                                                     12410000
         AIF   (&T NE 0).L099995                                        12420000
         ORG   CCWAREA+00000025                                         12430000
A00062   EQU   *                   3  BYTE  POINTER                     12440000
&T       SETA  00006                                                    12450000
.L099994 ANOP                                                           12460000
         DC    AL3(ONES)                                                12470000
         DS    00005C                                                   12480000
&T       SETA  &T-1                                                     12490000
         AIF   (&T NE 0).L099994                                        12500000
         ORG   CCWAREA+00000028                                         12510000
A00063   EQU   *                   4 BYTE(S)                            12520000
&T       SETA  00006                                                    12530000
.L099993 ANOP                                                           12540000
         DC    X'E0000050'                                              12550000
         DS    00004C                                                   12560000
&T       SETA  &T-1                                                     12570000
         AIF   (&T NE 0).L099993                                        12580000
A00064   EQU   CCWAREA+00000072    8 BYTE(S)                            12590000
         ORG   CCWAREA+00000072                                         12600000
A00065   EQU   *                   1 BYTE(S)                            12610000
         DC    X'01'                                                    12620000
A00066   EQU   *                   3  BYTE  POINTER                     12630000
         DC    AL3(ONES)                                                12640000
A00067   EQU   *                   4 BYTE(S)                            12650000
         DC    X'20000050'                                              12660000
CCW      EQU   00000000            8 BYTE(S)                            12670000
A00068   EQU   CCW+00000000        1 BYTE(S)                            12680000
DATAADDR EQU   CCW+00000001        3  BYTE  POINTER                     12690000
A00069   EQU   CCW+00000004        4 BYTE(S)                            12700000
         ORG   @DATA                                                    12710000
         DS    00000412C                                                12720000
@TEMPS   DS    0F                                                       12730000
@TEMP3   DC    F'0'                                                     12740000
@TEMP4   DC    F'0'                                                     12750000
LCRO     IFDCOM                                                         12760000
A00012   EQU   CESWT7+00000000     1 BYTE(S) ON WORD                    12770000
A00013   EQU   A00012+00000000     6 BIT(S)                             12780000
VIRTUAL  EQU   A00012+00000000     1 BIT(S)                             12790000
IOCCWADR EQU   EFCTRCB+00000000    FULLWORD POINTER                     12800000
A00070   EQU   CESWTR+00000000     1 BYTE(S) ON WORD                    12810000
RETAINAC EQU   A00070+00000000     1 BIT(S)                             12820000
A00071   EQU   CESWTR2+00000000    1 BYTE(S) ON WORD                    12830000
A00072   EQU   A00071+00000000     7 BIT(S)                             12840000
DPMSGREI EQU   A00071+00000000     1 BIT(S)                             12850000
@DATEND  EQU   *                                                        12860000
@9F4     EQU   @9F3                                                     12870000
         END   IFDOLT73                                                 12880000
