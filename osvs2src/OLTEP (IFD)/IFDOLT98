         TITLE 'IFDOLT98  *** OLTEP OLT PUNCH ***'                      00050002
IFDOLT98 CSECT                                                          00100002
* TITLE: IFDOLT98 - OLT PUNCH FOR OLTEP                               * 00150002
*                                                                     * 00200002
* STATUS: CHANGE LEVEL  000                                           * 00250002
*                                                                     * 00300002
* FUNCTION: THIS MODULE IS USED BY OLTEP USERS TO PUNCH OLT'S AND/OR  * 00350002
*        CDS'S FROM THE TEST LIBRARY CREATED WITH THE OLTEP GEN       * 00400002
*        FUNCTION.                                                    * 00450002
*           INPUT IS FROM PUNCHED CARDS DEFINED IN THE OLTEP SRL.     * 00500002
*        EACH OLT/CDS TO BE PUNCHED IS NAMED BY THE USER. UPON        * 00550002
*        READING THIS INPUT,THIS MODULE WILL SEARCH THE LIBRARY       * 00600002
*        DEFINED ON THE INPUT JCL AND PUNCH THE OLT/CDS ONTO THE CARD * 00650002
*        PUNCH ALSO DEFINED BY THE INPUT JCL. THE PUNCHED OUTPUT IS   * 00700002
*        IN 80 BYTE-CARD IMAGE,OBJECT DECK FORMAT.                    * 00750002
*                                                                     * 00800002
* ENTRY POINT: THE MAIN AND ONLY ENTRY POINT IS AT IFDOLT98 CSECT.    * 00850002
*                                                                     * 00900002
* INPUT: 1. CARDS NAMING OLT'S/CDS'S TO BE FOUND AND PUNCHED;OBTAINED * 00950002
*           FROM DDNAME 'CNTRLIN'.                                    * 01000002
*        2. OLT/LOCAL CDS DATASET FROM WHICH SELECTED OLT'S/CDS'S     * 01050002
*           ARE PUNCHED;OBTAINED FROM DDNAME 'INDASD'.                * 01100002
*        3. REMOTE CDS DATASET FROM WHICH SELECTED REMOTE CDS'S ARE   * 01150002
*           PUNCHED;OBTAINED FROM DDNAME 'INDASD2'.                   * 01200002
*                                                                     * 01250002
* OUTPUT: 1. OBJECT DECKS FOR THE SELECTED OLT'S/CDS'S;OUTPUTTED TO   * 01300002
*        THE DATASET DEFINED BY THE DDNAME 'PUNCHDD'.                 * 01350002
*         2. DIAGNOSTIC MESSAGES INDICATING STATUS OF THE RUN; OUTPUT-* 01400002
*        TED TO THE DATA SET DEFINED BY THE DDNAME 'DIAGMSG'.         * 01450002
*                                                                     * 01500002
* EXTERNAL ROUTINES: NONE                                             * 01550002
*                                                                     * 01600002
* EXITS - NORMAL: SYSTEM MACRO'S; OPEN,GET,FIND,CHECK,NOTE,POINT,PUT. * 01650002
*            NORMAL RETURN TO SYSTEM AT END-OF-FILE FROM 'CNTRLIN'.   * 01700002
*                                                                     * 01750002
*       - ABNORMAL: FAILURE TO OPEN A REQUIRED DATASET.               * 01800002
*                                                                     * 01850002
* TABLES AND WORK AREAS: NO EXTERNAL ONES USED.                       * 01900002
*                                                                     * 01950002
* ATTRIBUTES: SERIALLY REUSEABLE                                      * 02000002
*                                                                     * 02050002
* MESSAGES: 1. IFD900I - OUTPUTTED WHEN AN INVALID INPUT CARD IS      * 02100002
*        READ.                                                        * 02150002
*           2. IFD901I - OUTPUTTED WHEN A DATASET CANNOT BE OPENED.   * 02200002
*           3. IFD902I - OUTPUTTED FOR EACH SUCCESSFULLY PUNCHED      * 02250002
*        OLT/CDS.                                                     * 02300002
*           4. IFD905I - OUTPUTTED FOR ANY OLT/CDS NOT FOUND.         * 02350002
*                                                                     * 02400002
*********************************************************************** 02450002
         EJECT                                                          02500002
*********************************************************************** 02550002
*                                                                     * 02600002
*                   EQUATES AND MASKS                                 * 02650002
*                                                                     * 02700002
*********************************************************************** 02750002
         SPACE 2                                                        02800002
R0       EQU   0                   GENERAL RESISTERS                    02850002
R1       EQU   1                                                        02900002
R2       EQU   2                                                        02950002
R3       EQU   3                                                        03000002
R4       EQU   4                                                        03050002
R5       EQU   5                                                        03100002
R6       EQU   6                                                        03150002
R7       EQU   7                                                        03200002
R8       EQU   8                                                        03250002
R9       EQU   9                                                        03300002
R10      EQU   10                                                       03350002
R11      EQU   11                                                       03400002
R12      EQU   12                                                       03450002
R13      EQU   13                                                       03500002
R14      EQU   14                                                       03550002
R15      EQU   15                                                       03600002
BASEREG  EQU   12                                                       03650002
SAVEREG  EQU   13                                                       03700002
WKREG1   EQU   1                                                        03750002
SW1ON    EQU   X'80'               SWITCH MASKS TO SET SWITCH ON (1)    03800002
SW2ON    EQU   X'40'                                                    03850002
SW3ON    EQU   X'20'                                                    03900002
SW4ON    EQU   X'10'                                                    03950002
SW5ON    EQU   X'08'                                                    04000002
SW6ON    EQU   X'04'                                                    04050002
SW7ON    EQU   X'02'                                                    04100002
SW8ON    EQU   X'01'                                                    04150002
SW1OFF   EQU   X'7F'               SWITCH MASKS TO SET SWITCH OFF (0)   04200002
SW2OFF   EQU   X'BF'                                                    04250002
SW3OFF   EQU   X'CF'                                                    04300002
SW4OFF   EQU   X'EF'                                                    04350002
SW5OFF   EQU   X'F7'                                                    04400002
SW6OFF   EQU   X'F8'                                                    04450002
SW7OFF   EQU   X'FC'                                                    04500002
SW8OFF   EQU   X'FE'                                                    04550002
D12      EQU   12                  DECIMAL CONSTANT  12                 04600002
D4       EQU   4                   DECIMAL CONSTANT  4                  04650002
D17      EQU   17                  DECIMAL CONSTANT OF 17               04700002
D240     EQU   240                 DECIMAL CONSTANT OF 240              04750002
L8       EQU   8                   LENGTH CONSTANT OF 8                 04800002
D8       EQU   8                   DECIMAL CONSTANT  8                  04850002
L5       EQU   5                   LENGTH CONSTANT   5                  04900002
RCREG    EQU   15                  RETURN CODE REG                      04950002
WORKREG1 EQU   1                   WORK REG GPR #1                      05000002
SWBYTAOF EQU   X'00'               MASK SWITCH BYTE A OFF               05050002
SWBYTAON EQU   X'FF'               MASK SWITCH BYTE A ON                05100002
DCBREG   EQU   5                   REG USED IN OPEN CHECKS              05150002
LINKREG1 EQU   4                   LINKAGE REG FOR INTERNAL ROUTINES    05200002
*                                  SWITCH A BIT DEFINITIONS             05250002
DCBOFLGS EQU   X'30'               DISPLACEMENT INTO UCB FOR OPEN FLAGS 05300002
OPENOK   EQU   X'10'               MASK TO CHECK IF OPEN WAS SUCCESSFUL 05350002
CHARREG  EQU   6                   CHARACTER POINTER REG                05400002
CHAREND  EQU   3                   NAME FIELD END REG                   05450002
TRTCODE  EQU   2                   TRT INSTR RETURN CODE REG            05500002
DATAAREA EQU   7                                                        05550002
D0       EQU   0                   DECIMAL CONSTANT OF 0                05600002
D193     EQU   193                 DECIMAL CONSTANT OF 193              05650002
D1       EQU   1                   DECIMAL CONSTANT OF 1                05700002
LGNTHREG EQU   8                   REG 8 TO HOLD DATA LENGTH FOR READ   05750002
D80      EQU   80                  ESD,END,RLD,TXTHDR DATA LENGTH CONST 05800002
NOTEREG  EQU   1                   NOTE SYS MACRO RETURNS DATA IN REG 1 05850002
TXTHDRON EQU   X'80'               TXTHDR SWITCH BIT IN SWITCH BYTE A   05900002
D2       EQU   2                   DECIMAL CONSTANT OF 2                05950002
D3       EQU   3                   DECIMAL CONSTANT OF 3                06000002
NXTRECUP EQU   X'01'               USED TO UPDATE TTRZ FROM NOTE FOR    06050002
*                                  POINT TO NEXT RECORD                 06100002
DATACNT  EQU   21                  OFSET INTO TXTHDR FOR TXT DATA SIZE  06150002
L3       EQU   3                   DECIMAL CONSTANT OF 3                06200002
L4       EQU   4                   LENGTH CONSTANT OF 4                 06250002
D76      EQU   76                  DECIMAL CONSTANT OF 76-START OF SEQ# 06300002
WORKREG9 EQU   9                   WORKREG 9                            06350002
ASMADREG EQU   3                   REG TO HOLD ASSEMBLED ADDR           06400002
L1       EQU   1                   LENGTH CONSTANT OF 1                 06450002
L2       EQU   2                   LENGTH CONSTANT OF 2                 06500002
D25      EQU   25                  DISPLACEMENT INTO TXTHDR FOR TXT ID  06550002
OBJREG   EQU   11                  POINTS TO TXT CARD FOR A DSECT       06600002
D32      EQU   32                  DECIMAL CONSTANT OF 32               06650002
D56      EQU   56                  DECIMAL CONSTANT OF 56 (TXT DATA CT) 06700002
WORKREGA EQU   10                  WORK REG 10                          06750002
TXTOUTCT EQU   9                   COUNT OF MAX TXT CARDS TO OUTPUT PER 06800002
*                                   BLOCKED TXT DATA RECORD READ        06850002
L56      EQU   56                  LENGTH OF 56                         06900002
REMANDER EQU   8                   REMAINDER REG FOR DIVISION OF TXT/56 06950002
D255     EQU   255                 DECIMAL CONSTANT 255 TO TURN SW OFF  07000002
WORKREG2 EQU   2                   WORK REG # 2                         07050002
RESTORE  EQU   X'8B'               PRINTER RESTORE COMMAND CODE         07100002
LINECTR  EQU   3                   PRINTER OUTPUT LINE COUNTER REG      07150002
D59      EQU   59                  59 LINES PER PAGE                    07200002
WRTSP1   EQU   X'09'               PRINTER COMMAND WRITE AND SPACE 1    07250002
L80      EQU   80                  DECIMAL CONSTANE OF 80               07300002
D40      EQU   40                  DECIMAL CONSTANT OF 40               07350002
         EJECT                                                          07400002
*********************************************************************** 07450002
*                        INITIALIZATION                               * 07500002
*        FIRST PERFORM LINKAGE CONVENTIONS THEN INITIALIZE SWITCHES   * 07550002
*                                                                     * 07600002
*                                                                     * 07650002
*********************************************************************** 07700002
         SPACE 3                                                        07750002
         SAVE  (14,12),,IFDOLT98&SYSDATE  SAVE THE SYSTEM'S REGS        07800002
         BALR  BASEREG,R0          ESTABLISH ADDRESSABILITY             07850002
         USING *,BASEREG                                                07900002
         ST    SAVEREG,SAVEAREA+D4 SAVE SYSTEM SAVEAREA POINTER         07950002
         LA    WORKREG1,SAVEAREA   PUT POINTER TO MY SAVE AREA          08000002
         ST    WORKREG1,D8(SAVEREG)   INTO SYSTEM'S SAVE AREA           08050002
         LR    SAVEREG,WORKREG1    SET UP SAVE REG TO POINT TO MY SAVE  08100002
         MVI   SWITCHA,SWBYTAOF    SET SWITCH BYTE A TO ZEROES (OFF)    08150002
         USING OBJCRDM,OBJREG      SET ADDRESSABILITY TO OBJECT DSECT   08200002
         LA    OBJREG,DASDAREA                                          08250002
         SPACE 5                                                        08300002
*********************************************************************** 08350002
*                                                                     * 08400002
*                        PERFORM OPENS TO NECESSARY DATA SETS         * 08450002
*        END JOB IF A NECESSARY DATASET FAILS TO OPEN                 * 08500002
*********************************************************************** 08550002
         SPACE 2                                                        08600002
         OPEN  (INCARD,INPUT,OUTCARD,(OUTPUT),INDASD,INPUT,PRINTER,    X08650002
               (OUTPUT))                                                08700002
         SPACE                                                          08750002
*  CHECK IF OPENS ARE SUCCESSFUL                                        08800002
         SPACE                                                          08850002
         LA    DCBREG,PRINTER      SET UP TO CHECK PRINTER DCB          08856002
         TM    DCBOFLGS(DCBREG),OPENOK  DID IT OPEN?                    08862002
         BO    OPEN0090            YES-GO CK ON.IF NOT ISSUE MSG 901    08868002
         WTO   'IFD901I DIAGMSG  DDCARD FAILED TO OPEN ****ERROR****'   08874002
         B     PCH00980            NOW GO END RUN                       08880002
         SPACE                                                          08886002
OPEN0090 EQU   *                                                        08892002
         LA    DCBREG,INCARD       SET   DCB FOR CARD INPUT             08900002
         BAL   LINKREG1,OPEN0100   GO CHECK IT                          08950002
         LA    DCBREG,OUTCARD      SET   DCB FOR PUNCHED OUTPUT         09000002
         BAL   LINKREG1,OPEN0100   GO CHECK IT                          09050002
         LA    DCBREG,INDASD       SET   DCB FOR OLT/CDS LIBRARY        09200002
         LA    LINKREG1,PCH00200   SET LINKREG TO PROCESS LOOP          09250002
         SPACE 2                                                        09300002
OPEN0100 EQU   *                   ROUTINE TO TEST OPEN SUCCESSFUL FLAG 09350002
         TM    DCBOFLGS(DCBREG),OPENOK  FLAGS IN DCB OK?                09400002
         BNO   PCHER900            NO - GO GIVE MSG AND ABORT           09450002
         BR    LINKREG1            OK-RESUME.                           09500002
         SPACE 3                                                        09550002
*********************************************************************** 09600002
*                                                                     * 09650002
*                   MAIN PROCESS ROUTINE                              * 09700002
*      1. READ CONTROL CARD AND VERIFY IT, ISSUE MSG IF BAD.          * 09750002
*      2. ISSUE SYSTEM FIND MACRO TO LOCATE SELECTED OLT/CDS.         * 09800002
*      3. READ THE OLT/CDS RECORDS INTO MAIN STOREAGE                 * 09850002
*      4. DEBLOCK ANY TXT RECORDS                                     * 09900002
*      5. OUTPUT 80 BYTE OBJECT DECK FORMAT RECORDS TO PUNCHED        * 09950002
*                                                                     * 10000002
*********************************************************************** 10050002
         SPACE 2                                                        10100002
PCH00200 EQU   *                                                        10150002
         GET   INCARD,INAREA1      READ A CONTROL RECORD                10200002
         CLC   CTRLID(L'CTRLID),CTRLCON   THIS A CONTROL CARD           10250002
         BE    PCH00210            YES- GO VERIFY IT                    10300002
         CLC   CTRLID(L'SYMBOLIC),SYMBOLIC  THIS A SYMBOLIC CDS BREAK   10350002
         BNE   PCHER910            NO-GO GIVE INVALID CARD MSG.         10400002
         OPEN  (SYMCDSDD,INPUT)    OPEN SYMBOLIC CDS DATASET            10450002
         LA    LINKREG1,PCH00200   SET UP TO START PROCESSING           10500002
         LA    DCBREG,SYMCDSDD     SET DCB ADDRESS                      10550002
         B     OPEN0100            GO SET IF OPEN OK                    10600002
         SPACE 3                                                        10650002
* VERIFY OLT/CDS ID ON CONTROL CARD                                     10700002
         SPACE                                                          10750002
PCH00210 EQU   *                                                        10800002
         LA    CHARREG,CTRLINFO    GET OLT/CDS NAME START               10850002
         LA    CHAREND,CTRLPAD     SET NAME FIELD END POINT             10900002
PCH00211 CLI   D0(CHARREG),C'$'    THIS CHAR A '$'                      10950002
         BE    PCH00213            YES-GO UPDATE TO NEXT CHAR           11000002
         CLI   D0(CHARREG),C'#'    THIS CHAR A '#'                      11050002
         BE    PCH00213            YES-UPDATE                           11100002
         CLI   D0(CHARREG),C'@'    THIS A '@'                           11150002
         BE    PCH00213            YES-UPDATE                           11200002
         CLI   D0(CHARREG),C' '    THIS A BLCNK                         11250002
         BE    PCH00216            YES-GO VERIFY IT'S OK                11300002
         CLI   D0(CHARREG),C'A'    IS CHAR LESS THAN 'A'                11350002
         BL    PCHER910            YES-GO OUTPUT BAD INPUT CARD MSG     11400002
         SR    TRTCODE,TRTCODE     CLEAR TRT RETURN CODE REG            11450002
         TRT   D0(1,CHARREG),TRTTABLE-D193   TEST CHAR AND BRANCH       11500002
         B     *(TRTCODE)          WHAT IS IT                           11550002
         B     PCH00213            IT'S ALPHA-GO UPDATE                 11600002
         B     PCH00219            IT'S NUMERIC-GO SEE IF OK            11650002
         B     PCHER910            IT'S BAD-GO GIVE MSG                 11700002
         SPACE                                                          11750002
PCH00213 EQU   *                   UPDATE AND CHECK LENGTH              11800002
         LA    CHARREG,D1(CHARREG) POINT TO NEXT CHARACTER              11850002
         CR    CHARREG,CHAREND     HAVE 8 CHARACTERS BEEN CHECKED       11900002
         BL    PCH00211            NO- RESUME CHECKING                  11950002
         CLI   D0(CHARREG),C' '    YES-IS NAME FOLLOWED BY A BLANK      12000002
         BNE   PCHER910            NO-GO GIVE BAD INPUT MSG             12050002
*                                  NAME OK-NOW SET CHAR COUNT FOR FIND  12100002
         SPACE                                                          12150002
PCH00216 EQU   *                   PROCESS BLANK                        12200002
         LA    WORKREG1,CTRLINFO   GET 1ST CHAR ADDR                    12250002
         CR    CHARREG,WORKREG1    IS FIRST CHAR A BLANK                12300002
         BE    PCHER910            YES-GO GIVE BAD INPUT MSG            12350002
         SR    CHARREG,WORKREG1    NAME OK-SET CHAR COUNT FOR FIND MVC  12400002
         B     PCH00300                                                 12450002
         SPACE                                                          12500002
PCH00219 EQU   *                   THIS ROUTINE INSURES A NUMERIC ISN'T 12550002
         LA    WORKREG1,CTRLINFO   THE FIRST CHAR. GET 1ST CHAR ADDRESS 12600002
         CR    CHARREG,WORKREG1    IS IT THE 1ST CHAR                   12650002
         BE    PCHER910            YES-GO GIVE ERROR MSG                12700002
         B     PCH00213            OK-GO UPDATE                         12750002
         EJECT                                                          12800002
PCH00300 EQU   *                   SET UP FIND MACRO                    12850002
         MVI   FINDLIST,C' '       CLEAR FINDLIST                       12900002
         MVC   FINDLIST+D1(L'FINDLIST-D1),FINDLIST                      12950002
         BCTR  CHARREG,R0          SUBTRACT 1 FROM CHAR REG             13000002
         EX    CHARREG,MVC1        MOVE OLT/CDS NAME TO FIND LIST       13050002
         FIND  (DCBREG),FINDLIST,D DOES OLT/CDS EXIST                   13100002
         LTR   RCREG,RCREG         OLT/CDS FOUND (R15=0)?               13150002
         BNZ   PCHER920            NO-GO GIVE MSG IFD905I-MODULE NOT    13200002
*                                   FOUND.                              13250002
         SPACE 2                                                        13300002
*  MODULE FOUND AND READY                                               13350002
         SPACE                                                          13400002
PCH00305 EQU   *                                                        13450002
         LA    DATAAREA,DASDAREA   SET INPUT OLT/CDS DATA ADDR FOR READ 13500002
         LA    LGNTHREG,080        SET MIN REC LENGTH-NOT TXT LENGTH    13550002
PCH00310 EQU   *                                                        13600002
         READ  DASDECB,SF,(DCBREG),(DATAAREA),(LGNTHREG) GO READ A REG  13650002
         CHECK DASDECB             WAIT FOR EVENT COMPLETE              13700002
         NOTE  (DCBREG)            GET DASD ADDR OF RECORD JUST READ    13750002
         ST    NOTEREG,RECRELAD                                         13800002
         MVI   RECRELAD+D3,NXTRECUP  POINT TO NEXT RECORD               13850002
         POINT (DCBREG),RECRELAD   POINT TO NEXT RECORD                 13900002
         TM    TXTHDRSW,TXTHDRON   WAS A TXT RECORD READ                13950002
         BO    PCH00350                                                 14000002
         CLC   D0(L'TXTHDRDC,DATAAREA),TXTHDRDC IS THIS A TXTHDR        14050002
         BNE   PCH00320            NO-GO PROCESS OTHER RECORD TYPES     14100002
         OI    TXTHDRSW,TXTHDRON   YES-SET TXTHDR SWITCH ON             14150002
         XC    WRKAREA1,WRKAREA1   CLEAR WORK AREA 1                    14200002
         MVC   WRKAREA1+D1(L3),DATACNT(DATAAREA)  GET SIZE OF TXT DATA  14250002
*                                  RECORD FROM TXTHDR RECORD            14300002
         L     LGNTHREG,WRKAREA1   SET TXT COUNT FOR READ               14350002
         LA    DATAAREA,TXTBFR     GET TXT BFR ADDEESS FOR REAR         14400002
         B     PCH00310            GO REAR THE TXT RECORD               14450002
         SPACE 3                                                        14500002
*  ROUTINE TO PROCESS ESD,RLD,END,AND REP CARDS/RECORDS                 14550002
PCH00320 EQU   *                                                        14600002
         CLC   OBJCRDID(L4),ESDCON IS THIS AN ESD CARD                  14650002
         BE    PCH00321            YES- GO SAVE SEQ #                   14700002
         CLC   OBJCRDID(L4),REPCON IS THIS AN RLD CARD                  14750002
         BE    PCH00322            YES-GO PUNCH IT-NO SEQ #'S IN REP'S  14800002
         CLC   SEQBFR(L4),BLANKS   DOES SEQ BFR HAVE BLANKS             14850002
         BE    PCH00322            YES - DON'T UPDATE SEQ #             14900002
         BAL   LINKREG1,PCH00700   GO UPDATE THE SEQ #                  14950002
         MVC   OBJSEQ#(L4),SEQBFR  MOVE SEQ #'S INTO TXT,RLD,AND END    15000002
         B     PCH00322            GO PUNCH IT                          15050002
         SPACE 2                                                        15100002
PCH00321 EQU   *                                                        15150002
         MVC   SEQBFR(L4),OBJSEQ#  SAVE THE SEQ NUMBER                  15200002
PCH00322 EQU   *                                                        15250002
         PUT   OUTCARD,DASDAREA    OUTPUT RECORD TO PUNCH               15300002
         TM    TXTHDRSW,TXTHDRON   IS TXTHDR SW ON                      15350002
         BO    PCH00360            GO CONTINUE TXT DEBLOCK LOOP         15400002
         CLC   DASDAREA(L4),ENDCON WAS AN END REC PROCESSED             15450002
         BNE   PCH00310            NO-GO READ NEXT RECORD               15500002
         LA    WORKREG9,D4         SET UP TO PUNCH 4 BLANK CARDS        15550002
         MVI   DASDAREA,C' '       CLEAR OUTPUT BFR                     15600002
         MVC   DASDAREA+D1(L'DASDAREA-D1),DASDAREA                      15650002
PCH00323 EQU   *                                                        15700002
         TM    OUTCARD+17,X'40'    ONLY PUT OUT BLANK CARDS      X03008 15710002
         BNO   PCH00330            TO A PUNCH.                   X03008 15720002
         PUT   OUTCARD,DASDAREA    OUTPUT A BLANK CARD                  15750002
         BCT   WORKREG9,PCH00323   PUT OUT 4 BLANK CARDS THEN           15800002
PCH00330 EQU   *                                                 X03008 15820002
         LA    WORKREG9,PCHOKMSG   OUTPUT MSG IFD902I FOR SUCCESSFOL    15850002
         MVC   MODOKNAM(L'FINDLIST),FINDLIST NOVE NAME TO MSG IFD902I   15900002
         BAL   LINKREG1,PCH00800   GO PUT OUT MSG                       15950002
         B     PCH00200            GO GET NEXT CONTOLL CARD             16000002
         EJECT                                                          16050002
*                                                                       16100002
*  ROUTINE TO DEBLOCK TXT RECORDS INTO 80 BYTE OBJECT DECK FORMAT CARDS 16150002
*                                                                       16200002
PCH00350 EQU   *                                                        16250002
         XC    WRKAREA1,WRKAREA1   ZERO WORK AREA 1                     16300002
         MVC   WRKAREA1+D1(L3),DASDAREA+D17  GET ASSEMBLED ADDRESS      16350002
         L     ASMADREG,WRKAREA1   INTO ASM ADDR REG                    16400002
         MVC   TXTIDBFR(L'TXTIDBFR),DASDAREA+D25 SAVE TXT RECORD ID     16450002
         MVC   DASDAREA(L'DASDAREA),TXTCONST INITIALIZE TXT RECORD CARD 16500002
         SRDL  LGNTHREG,D32        SET UP TO DIVIDE TXT REC DATA CNT    16550002
         LA    WORKREGA,D56         BY MAX TXT DATA COUNT OF 56         16600002
         DR    LGNTHREG,WORKREGA   DIVIDE                               16650002
PCH00353 EQU   *                                                        16700002
         LTR   TXTOUTCT,TXTOUTCT   IS QUOTIENT = 0                      16750002
         BZ    PCH00355            YES- GO MOVE REMAINDER OF TXT DATA   16800002
         MVC   TXTDATA(L'TXTDATA),D0(DATAAREA)  MOVE 56 BYTES OF TXT    16850002
         MVC   TXTDATCT(L'TXTDATCT),CON56  MOVE TXT CARD DATA COUNT     16900002
         B     PCH00359            GO COMPLETE TXT CARD                 16950002
         SPACE 5                                                        17000002
PCH00355 EQU   *                                                        17050002
         LTR   REMANDER,REMANDER   ANY REMAINDER OF TXT DATA            17100002
         BNZ   PCH00357            GO CREATE LAST TXT CARD FOR THIS REC 17150002
         NI    TXTHDRSW,D255-TXTHDRON  TURN TXT HDR SW OFF (0)          17200002
         B     PCH00305            GO SET UP TO READ NEXT RECORD        17250002
         SPACE 2                                                        17300002
PCH00357 EQU   *                                                        17350002
         MVC   DASDAREA(L'DASDAREA),TXTCONST INITIALIZE BASIC TXT CARD  17400002
         ST    REMANDER,WRKAREA1   STORE REMAINING BYTE COUNT OF TXT    17450002
         MVC   TXTDATCT(L'TXTDATCT),WRKAREA1+D2  MOVE TXT BYTE COUNT    17500002
         BCTR  REMANDER,R0         SUBTRACT 1 FROM BYTE COUNT FOR MVC   17550002
         EX    REMANDER,MVC2       MOVE REMAINING TXT DATA              17600002
         LA    TXTOUTCT,D1         SET QUOTIENT TO 1 TO CONTROL LOOP    17650002
         SR    REMANDER,REMANDER   CLEAR REMAINDER                      17700002
PCH00359 EQU   *                                                        17750002
         MVC   TXTESDID(L'TXTESDID),TXTIDBFR MOVE TXT DATA ESDID        17800002
         ST    ASMADREG,WRKAREA1   SET ASM ADDRESS FOR MOVE             17850002
         MVC   TXTASMAD(L'TXTASMAD),WRKAREA1+1 MOVE REL ASM ADR TO TXT  17900002
         LA    ASMADREG,D56(ASMADREG)   UPDATE REL ASM ADDR             17950002
         LA    DATAAREA,D56(DATAAREA)   UPDATE TXT DATA PTR             18000002
         B     PCH00320            GO OUTPUT CARD                       18050002
         SPACE 5                                                        18100002
PCH00360 EQU   *                   CONTINUE TXT DEBLOCK PROCESS LOOP    18150002
         BCTR  TXTOUTCT,R0         SUBTRACT 1 FROM QUOTIENT             18200002
         B     PCH00353            CONTINUE                             18250002
         EJECT                                                          18300002
*  THIS ROUTINE IS USED TO UPDATE THE OBJECT CARD SEQUENCE NUMBER TO    18310002
*  THE NEXT HIGHER NUMBER                                               18320002
         SPACE                                                          18330002
PCH00700 EQU   *                                                        18350002
         LA    WORKREG1,D4         SET NUMBER OF CHARS TO UPDATE        18400002
PCH00701 EQU   *                                                        18450002
         LA    WORKREG2,SEQBFR-D1(WORKREG1)  POINT TO CAAR TO UPDATE    18500002
         TR    D0(L1,WORKREG2),SEQUPCHR-D240 ADD EBCDIC 1 TO SEQ #      18550002
         CLI   D0(WORKREG2),C'0'   DID IT GO TO A ZERO                  18600002
         BNE   PCH00702            NO - RETURN                          18650002
         BCT   WORKREG1,PCH00701   YES - GO UPDATE NEXT CHAR            18700002
PCH00702 EQU   *                                                        18750002
         BR    LINKREG1            RETURN - NO MORE CHARS TO UPDATE     18800002
         EJECT                                                          18850002
*  THIS IS THE PRINTING ROUTINE. IT CONTROLS THE PRINTER CARRIAGE       18860002
*  AND OUTPUTS MESSAGES PASSED TO IT IN (ADDRESSED BY) REGISTER 9       18870002
         SPACE                                                          18880002
PCH00800 EQU   *                   PRINT OUT MSG AND CONTROL PRINTER    18900002
         MVI   PRTBFR,C' '         CLEAR OUT PRINT BFR                  18950002
         MVC   PRTBFR+D1(L'PRTBFR-D1),PRTBFR                            19000002
         MVI   PRTBFR,RESTORE      SET TO EJECT IF NEW PAGE NEEDED      19050002
         L     LINECTR,LINECNT     GET LINE COUNT                       19100002
         BCT   LINECTR,PCH00810    IS IT TIME TO EJECT                  19150002
         PUT   PRINTER,PRTBFR      YES EJECT                            19200002
         LA    LINECTR,D59         SET CTR FOR NEW PAGE                 19250002
         ST    LINECTR,LINECNT     SAVE IT                              19300002
PCH00810 EQU   *                                                        19350002
         MVI   PRTBFR,WRTSP1       SET CNTRL CMD TO WRITE AND SPACE 1   19400002
         IC    WORKREG2,D0(WORKREG9)  GET MSG SIZE                      19450002
         BCTR  WORKREG2,D0         SUBTRACT 1 FOR MSG LENGTH BYTE       19470002
         BCTR  WORKREG2,D0         SUBTRACT 1 FOR EXECUTE MVC3          19500002
         EX    WORKREG2,MVC3       MOVE MSG TO BFR                      19550002
         PUT   PRINTER,PRTBFR      PRINT IT                             19600002
         BR    LINKREG1            RETURN                               19650002
         EJECT                                                          19700002
*  HERE IF DATASET FAILED TO OPEN. GIVES MSG IFD901I WITH DDNAME THEN   19750002
*  END RUN                                                              19800002
         SPACE                                                          19850002
PCHER900 EQU   *                                                        19900002
         LA    WORKREG9,OPENFAIL   GET MSG ADDRESS                      19950002
         MVC   OPENNAME(L8),D40(DCBREG) GET DD NAME THAT FAILED TO OPEN 20000002
         BAL   LINKREG1,PCH00800   GO GIVE MSG                          20050002
         B     PCH00980            RETURN TO SYSTEM                     20100002
         SPACE 3                                                        20150002
*  HERE IF AN INVALID INPUT CONTROL CARD WAS READ. GIVE MSG IFD900I     20200002
*  THEN GO READ NEXT CONTROL CARD                                       20250002
         SPACE                                                          20300002
PCHER910 EQU   *                                                        20350002
         LA    WORKREG9,NVALINPT   GET MSG ADDR OF IFD900I              20400002
         MVC   NVALCARD(L80),INAREA1  MOVE INVALID CARD TO MSG          20450002
         BAL   LINKREG1,PCH00800   GO GIVE MSG                          20500002
         B     PCH00200            GO GET NEXT INPUT CARD               20550002
         SPACE 5                                                        20600002
*  HERE IF THE OLT DOES NOT EXIST ON THE ACCESSED DATASET               20610002
         SPACE                                                          20620002
PCHER920 EQU   *                                                        20650002
         LA    WORKREG9,OLTNOTON   GET MSG ADDR FOR OLT NOT FOUND MSG   20700002
         MVC   NOOLTNAM(L8),FINDLIST   MOVE OLT/CDS NAME TO MSG         20750002
         BAL   LINKREG1,PCH00800   GO GIVE MSG                          20800002
         B     PCH00200            GO GET NEXT CONTROL CARD             20850002
         EJECT                                                          20900002
*  ROUTINE TO END THIS RUN                                              20920002
PCH00980 EQU   *                                                        20950002
         CLOSE (SYMCDSDD,,PRINTER,,INCARD,,INDASD,,OUTCARD)             21000002
         L     SAVEREG,D4(SAVEREG)      RETURN TO SYSTEM                21050002
         LM    R14,R12,D12(SAVEREG)                                     21100002
         BR    R14                                                      21150002
         EJECT                                                          21200002
*********************************************************************** 21250002
*                                                                     * 21300002
*                        CONSTANTS                                    * 21350002
*                                                                     * 21400002
*********************************************************************** 21450002
MVC1     MVC   FINDLIST(D0),CTRLINFO   MOVE INSTR FOR AN EXECUTE        21500002
MVC2     MVC   TXTDATA(D0),D0(DATAAREA) MVC FOR EXECUTE TXT DATA MOVE   21550002
MVC3     MVC   PRTBFR+D1(D0),D1(WORKREG9)   MOVE MSG TO PRT BFR         21600002
SAVEAREA DC    18F'0'              MY SAVE AREA                         21650002
RECRELAD DC    F'00'               TRACK ADDRESS OF RECORD TO READ NEXT 21700002
SWITCHA  DC    XL1'00'             SWITCH BYTE A                        21750002
TXTHDRSW EQU   SWITCHA                                                  21800002
SWCH2    EQU   SWITCHA                                                  21850002
SWCH3    EQU   SWITCHA                                                  21900002
SWCH4    EQU   SWITCHA                                                  21950002
SWCH5    EQU   SWITCHA                                                  22000002
SWCH6    EQU   SWITCHA                                                  22050002
SWCH7    EQU   SWITCHA                                                  22100002
SWCH8    EQU   SWITCHA                                                  22150002
INAREA1  DS    0CL80               CONTRL INPUT BFR                     22200002
CTRLID   DC    CL5' '              CONTRL IDENT                         22250002
CTRLINFO DC    CL8' '              OLT/CDS NAME                         22300002
CTRLPAD  DC    CL67' '             PADDING AREA NOT USED                22350002
FINDLIST DC    CL8' '              LIST FOR FIND MACRO                  22400002
DASDAREA DC    CL80' '             READ IN AREA FOR ALL OLT/CDS NON TXT 22450002
TXTHDRDC DS    0CL7                TEXT HDR RECORD IDENTERFIER          22500002
         DC    XL1'02'                                                  22550002
         DC    CL6'TXTHDR'                                              22600002
CTRLCON  DC    CL5'NAME '                                               22650002
SYMBOLIC DC    C'SYMBOLIC CDS'                                          22700002
TRTTABLE EQU   *                   TABLE FOR TRANSLATE AND TEST         22750002
         DC    9X'04'              CHARACTERS 'A' TO 'I'                22800002
         DC    7X'0C'              CHARACTERS BETWEEN 'I' AND 'J'       22850002
         DC    9X'04'              CHARACTERS 'J' TO 'R'                22900002
         DC    8X'0C'              CHARACTERS BETWEEN 'R' AND 'S'       22950002
         DC    8X'04'              CHARACTERS 'S' TO 'Z'                23000002
         DC    6X'0C'              CHARACTERS BETWEEN 'Z' AND '0'       23050002
         DC    10X'08'             CHARACTERS '0' TO '9'                23100002
         DC    6X'0C'              CHARACTERS AFTER '9'                 23150002
WRKAREA1 DC    F'0'                A WORK AREA                          23200002
TXTIDBFR DC    XL2'0000'           TXT ID SAVE AREA                     23250002
SEQBFR   DC    CL4' '              BUFFER FOR SAVING SEQ NUMS           23300002
SEQUPCHR DC    C'1234567890'       CHARACTERS TO UPDATE SEQ #           23350002
ENDCON   DS    0CL4                CONSTANT FOR FIRST 4 CHARS OF END    23400002
         DC    X'02'                 RECORD                             23450002
         DC    C'END'                                                   23500002
TXTCONST DS    0CL80               BASIC TXT RECORD FORMAT-OBJECT CARD  23550002
         DC    XL1'02'              PUNCHED BY THIS MODULE              23600002
         DC    CL4'TXT '           CARD IDENTIFIER                      23650002
         DC    XL3'000000'         LOC FOR RELATIVE ASM ADDR            23700002
         DC    CL2'  '             BLANKS                               23750002
         DC    XL2'0000'           BYTE COUNT OF DATA ON THIS CARD      23800002
         DC    CL2'  '             BLANKS                               23850002
         DC    XL2'0000'           ESDID (TXTID)                        23900002
         DC    CL56' '             TXT DATA FIELD                       23950002
         DC    CL8' '              COL 73-80 SEQ #                      24000002
         SPACE 2                                                        24050002
CON56    DC    XL2'0038'           CONSTANT OF DEC 56 FOR MAX TXT DATA  24100002
         SPACE 3                                                        24150002
PCHOKMSG DC    C' IFD902I XXXXXXXX WAS CORRECTLY PUNCHED'               24200002
         ORG   PCHOKMSG                                                 24250002
         DC    AL1(L'PCHOKMSG)                                          24300002
         ORG   PCHOKMSG+L'PCHOKMSG                                      24350002
MODOKNAM EQU   PCHOKMSG+9                                               24400002
         SPACE 3                                                        24450002
OPENFAIL DC    C' IFD901I XXXXXXXX DDCARD FAILED TO OPEN ****ERROR****' 24500002
         ORG   OPENFAIL                                                 24550002
         DC    AL1(L'OPENFAIL)                                          24600002
         ORG   OPENFAIL+L'OPENFAIL                                      24650002
OPENNAME EQU   OPENFAIL+9                                               24700002
         SPACE 3                                                        24750002
OLTNOTON DC    C' IFD905I XXXXXXXX MODULE NOT ON DATASET, PUNCH BYPASSEX24800002
               D'                                                       24850002
         ORG   OLTNOTON                                                 24900002
         DC    AL1(L'OLTNOTON)                                          24950002
         ORG   OLTNOTON+L'OLTNOTON                                      25000002
NOOLTNAM EQU   OLTNOTON+9                                               25050002
         SPACE 3                                                        25100002
NVALINPT DC    C' IFD900I INVALID INPUT, REJECTED -                    X25150002
                                                                       X25200002
                   '                                                    25250002
         ORG   NVALINPT                                                 25300002
         DC    AL1(L'NVALINPT)                                          25350002
         ORG   NVALINPT+L'NVALINPT                                      25400002
NVALCARD EQU   NVALINPT+35                                              25450002
         EJECT                                                          25500002
PRTBFR   DC    CL121' '            THE PRINT BUFFER                     25550002
LINECNT  DC    F'1'                PRINTER LINE COUNTER                 25600002
BLANKS   DC    CL4' '              4 BLANKS FOR A COMPARE               25650002
ESDCON   DS    0CL4                                                     25700002
         DC    XL1'02'                                                  25750002
         DC    CL3'ESD'                                                 25800002
REPCON   DS    0CL4                                                     25850002
         DC    XL1'02'                                                  25900002
         DC    CL3'REP'                                                 25950002
         EJECT                                                          26000002
SYMCDSDD DCB   LRECL=80,DDNAME=SYMSYM,DSORG=PO,BLKSIZE=3600,MACRF=R,   X26050002
               RECFM=UT                                                 26100002
INCARD   DCB   DDNAME=CNTRLIN,BLKSIZE=80,RECFM=F,LRECL=80,DSORG=PS,    X26150002
               MACRF=GM,EODAD=PCH00980                                  26200002
OUTCARD  DCB   DDNAME=PUNCHDD,BLKSIZE=80,RECFM=FB,LRECL=80,DSORG=PS,   X26250002
               MACRF=PM                                                 26300002
INDASD   DCB   LRECL=80,DDNAME=OLTCDSDD,MACRF=R,RECFM=UT,BLKSIZE=3600, X26350002
               DSORG=PO                                                 26400002
PRINTER  DCB   DDNAME=DIAGMSG,DSORG=PS,MACRF=PM,BLKSIZE=121,RECFM=FBM, X26450002
               LRECL=121                                                26500002
         IFDPATCH                                                       26550002
TXTBFR   DS    100CL36             BFR TO HOLD MAX TXT DATA BLOCK       26600002
         EJECT                                                          26650002
         DSECT                                                          26700002
OBJCRDM  DS    0CL80               BASIC OBJECT CARD FORMAT             26750002
OBJCRDID DC    XL1'02'                                                  26800002
         DC    CL3'XXX'                                                 26850002
         DS    CL72                                                     26900002
OBJSEQ#  DC    CL4' '                                                   26950002
         SPACE 5                                                        27000002
         ORG   OBJCRDM                                                  27050002
         DSECT                                                          27100002
TXTCARDM DC    XL1'02'             MAP OF A TXT CARD                    27150002
         DC    CL4'TXT '                                                27200002
TXTASMAD DC    XL3'000000'         REL ASSEMBLED ADDRESS                27250002
         DC    CL2'  '                                                  27300002
TXTDATCT DC    XL2'0000'           TXT DATA COUNT                       27350002
         DC    CL2'  '                                                  27400002
TXTESDID DC    XL2'0000'           TXT ESD IDENT (CSECT NUMBER)         27450002
TXTDATA  DC    CL56' '             TXT DATA                             27500002
         DC    CL4' '                                                   27550002
TXTSEQ#  DC    CL4' '              SEQ NUMBER                           27600002
         END                                                            27650002
