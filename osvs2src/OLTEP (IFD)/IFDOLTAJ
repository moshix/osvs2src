         TITLE 'IFDOLTAJ--CUTEST MODULE'                                00010000
         LCLA  &T,&SPN                                            0001  00020000
.@001    ANOP                                                     0001  00030000
IFDOLTAJ CSECT ,                                                  0001  00040000
         BC    15,24(0,@F)                                              00050000
         DC    C'IFDOLTAJ 10 DEC 74'                             0001  00060000
         ST    @E,12(0,@D)                                        0001  00070000
         STM   @0,@C,20(@D)                                       0001  00080000
         BALR  @B,0                                               0001  00090000
@PSTART  DS    0H                                                 0001  00100000
         USING @PSTART+00000,@B                                   0001  00110000
         ST    @D,@SAV001+4                                       0001  00120000
         LA    @F,@SAV001                                         0001  00130000
         ST    @F,8(0,@D)                                         0001  00140000
         LR    @D,@F                                              0001  00150000
         TITLE 'IFDOLTAJ CUTEST MODULE'                                 00160000
         DS    0H                                                       00170000
         USING CHASCT,2                ADDRESS COMMON AREA              00180000
         DS    0H                                                       00190000
*         R7=R1;                        /* ADDRESS PARAMETER LIST     * 00200000
         LR    @7,@1                                              0074  00210000
*         R5=ADDR(IFDMSGAJ);            /* SET POINTER TO MSG MOD     * 00220000
         L     @C,@V1              ADDRESS OF IFDMSGAJ            0075  00230000
         LR    @5,@C                                              0075  00240000
*         MODFLAGS='00'X;               /* CLEAR OUT FLAG BYTE.       * 00250000
         MVI   MODFLAGS,X'00'                                     0076  00260000
*         MYCUTEXT=CUTEXT;             /* COPY EXTPTR IN OLT  @Y30LPAW* 00270000
         MVC   MYCUTEXT(4),4(@7)                                  0077  00280000
*         EXTLIMIT='01'X;              /* INIT CNTR TO 1 EXT  @Y30LPAW* 00290000
         MVI   EXTLIMIT,X'01'                                     0078  00300000
*  IF RESENTB='1'B THEN                  /* CHECK INDICATOR     XM0088* 00310000
         TM    A00030,B'01000000'                                 0079  00320000
         BC    12,@9FF                                            0079  00330000
*    DO;                                 /* CDS EQUATE          XM0088* 00340000
*      R1=MSG399;                        /* MESSAGE ADDRESS     XM0088* 00350000
         L     @1,20(0,@5)                                        0081  00360000
*      GEN(PWTO  REG=(1));               /* ISSUE WTO           XM0088* 00370000
         PWTO  REG=(1)                                                  00380000
         DS    0H                                                       00390000
*      GOTO CUTEST1A;                    /* SET RETURN CODE     XM0088* 00400000
         BC    15,CUTEST1A                                        0083  00410000
*    END;                                /* END INDICATOR TEST  XM0088* 00420000
*                                                                       00430000
* CUTEST00:                                                             00440000
*                                                                       00450000
*         NEWBASE=CUBASE;               /* EXTENT UPDATE AREA         * 00460000
@9FF     EQU   *                                                  0085  00470000
CUTEST00 L     @C,MYCUTEXT                                        0085  00480000
         MVC   NEWBASE(4),0(@C)                                   0085  00490000
*         CULAST=CUBASE+CUFINISH-1;     /* LAST DEV ON CNTRL UNIT     * 00500000
         LH    @F,@D1                                             0086  00510000
         SR    @0,@0                                              0086  00520000
         IC    @0,4(0,@C)                                         0086  00530000
         AR    @F,@0                                              0086  00540000
         A     @F,0(0,@C)                                         0086  00550000
         ST    @F,CULAST                                          0086  00560000
*         BUFCOUNT='00'X;               /* CLEAR BUFR COUNTER         * 00570000
         LA    @F,X'00'                                           0087  00580000
         STH   @F,BUFCOUNT                                        0087  00590000
*         ENDOFTAB=DEVTBPTR+(TABLNGTH*(UNICTR-1));                      00600000
         SR    @F,@F                                              0088  00610000
         IC    @F,UNICTR                                          0088  00620000
         BCTR  @F,0                                               0088  00630000
         MH    @F,TABLNGTH                                        0088  00640000
         A     @F,DEVTBPTR                                        0088  00650000
         ST    @F,ENDOFTAB                                        0088  00660000
*                                                                       00670000
*         IF RETAINAC='1'B THEN         /* IF RETAIN ACTIVE           * 00680000
         TM    A00020,B'10000000'                                 0089  00690000
         BC    12,@9FE                                            0089  00700000
*           DPMSGREI='1'B;              /* D P MSG TO REMOTE   OY00427* 00710000
         OI    A00021,B'00000001'                                 0090  00720000
*                                                                       00730000
* CUTEST01:                                                             00740000
*                                                                       00750000
*                                                                       00760000
*         /*          CHECK CUTEST MACRO LEVEL PARAMETER              * 00770000
*         IF CUTLEVL<'02'X |           /* MACRO LVL 2 OR MORE @Y30LPAW* 00780000
*           CUTLEVL>'03'X THEN           /* MAC LEVEL 2 OR 3  @Y30LPAW* 00790000
@9FE     EQU   *                                                  0091  00800000
CUTEST01 CLI   1(@7),X'02'                                        0091  00810000
         BC    04,@9FD                                            0091  00820000
         CLI   1(@7),X'03'                                        0091  00830000
         BC    12,@9FC                                            0091  00840000
*          DO;                          /* ERROR IN MACRO CALL.       * 00850000
@9FD     EQU   *                                                  0092  00860000
* CUTEST1A:                              /* LABEL               XM0088* 00870000
*           RETCODE='04'X;              /* SET RETURN CODE TO 04.     * 00880000
CUTEST1A LA    @F,X'04'                                           0093  00890000
*           GO TO CUTEST09;             /* NO, ERROR, SET RC=04.      * 00900000
         BC    15,CUTEST09                                        0094  00910000
*          END;                                                         00920000
*         GO TO CUTEST2A;               /* CHECK CUTEST CU DEVSSA53534* 00930000
*                                                                       00940000
* CUTEST02:                                                             00950000
*                                                                       00960000
*          DO;                          /* SET RC FOR CUTEST NOT      * 00970000
*           RETCODE='0C'X;              /* AVAILABLE. RETURN TO       * 00980000
CUTEST02 LA    @F,X'0C'                                           0098  00990000
*           GO TO CUTEST09;             /* OLT.                       * 01000000
         BC    15,CUTEST09                                        0099  01010000
*          END;                                                         01020000
*                                                                       01030000
* CUTEST2A:                                                             01040000
*                                                                       01050000
*                                                                       01060000
*         /*          ARE ZERO  DEVICES SPECIFIED ON CONTROL UNIT     * 01070000
*         IF CUFINISH='00'X THEN        /* ZERO DEVICES ON CU.        * 01080000
CUTEST2A L     @C,MYCUTEXT                                        0101  01090000
         CLI   4(@C),X'00'                                        0101  01100000
*          GO TO CUTEST02;              /* YES, SET ERROR RETCOD      * 01110000
         BC    08,CUTEST02                                        0102  01120000
*                                                                       01130000
*                                                                       01140000
*         /*      CHECK CODE PARAMETER FOR 0,1 OR 2 VALUE     @Y30LPAW* 01150000
*         IF CUCODE^<'03'X THEN     /* IF CODE PARM IS NOT    @Y30LPAW* 01160000
         CLI   8(@7),X'03'                                        0103  01170000
*          GO TO CUTEST02;              /* DEFINED SET RC=0C.         * 01180000
         BC    10,CUTEST02                                        0104  01190000
*         IF CUCODE='02'X &         /*   ALLOWED ONLY         @Y30LPAW* 01200000
*            CUTLEVL^='03'X THEN    /* WITH LEVEL 3 MACRO     @Y30LPAW* 01210000
         CLI   8(@7),X'02'                                        0105  01220000
         BC    07,@9FB                                            0105  01230000
         CLI   1(@7),X'03'                                        0105  01240000
*            GOTO CUTEST02;         /*                        @Y30LPAW* 01250000
         BC    07,CUTEST02                                        0106  01260000
*                                                                       01270000
*         /*          CHECK IF BASE ADDRESS IS LEGITIMATE      Y02008*/ 01280000
*                                                                       01290000
*         IF CUBASE>'0000FFFF'X |        /* BASE ADDRESS VALID Y02008*/ 01300000
*          CUBASE<'00000000'X            /* BOTH HI AND LOW ?  Y02008*/ 01310000
*           THEN                         /* ERROR, NO SVC CALL Y02008*/ 01320000
@9FA     EQU   *                                                  0107  01330000
@9FB     L     @F,@X8                                             0107  01340000
         L     @C,MYCUTEXT                                        0107  01350000
         C     @F,0(0,@C)                                         0107  01360000
         BC    04,@9F9                                            0107  01370000
         L     @F,@X9                                             0107  01380000
         C     @F,0(0,@C)                                         0107  01390000
         BC    12,@9F8                                            0107  01400000
*            GO TO CUTEST08;             /* ATTEMPT LOCATE CDS Y02008*/ 01410000
         BC    03,CUTEST08                                        0108  01420000
*                                                                       01430000
*         IF CUTLEVL='03'X &             /* LEVL 3 MACRO AND  @Y30LPAW* 01440000
*           NUMEXTS='00'X              /* ZERO EXTENTS ON CU  @Y30LPAW* 01450000
*           THEN                       /* INVALID CUTEST RQST @Y30LPAW* 01460000
@9F8     CLI   1(@7),X'03'                                        0109  01470000
         BC    07,@9F7                                            0109  01480000
         CLI   9(@7),X'00'                                        0109  01490000
*           GOTO CUTEST02;             /* ISSUE 04 RET CODE   @Y30LPAW* 01500000
         BC    08,CUTEST02                                        0110  01510000
*                                                                       01520000
*         /*          SET UP FOR SVC 59 FUNCTION                      * 01530000
*                                                                       01540000
*         MODNUM='AJ';                  /* MOD ID IN SVC PLIST        * 01550000
@9F6     EQU   *                                                  0111  01560000
@9F7     MVC   A00010+2(2),@C10                                   0111  01570000
*         CUBASEAD=CUBASE;              /* BASE CU ADDRESS.           * 01580000
         L     @C,MYCUTEXT                                        0112  01590000
         MVC   A00010+4(4),0(@C)                                  0112  01600000
*         CURANGE=CUFINISH;             /* NUM OF DEVS ON CU.         * 01610000
         MVC   A00010+9(1),4(@C)                                  0113  01620000
         MVI   A00010+8,X'00'                                     0113  01630000
*         CUTCODE=CUCODE;               /* CU CODE .                  * 01640000
         MVC   A00010+11(1),8(@7)                                 0114  01650000
         MVI   A00010+10,X'00'                                    0114  01660000
*         MSGMODAJ=R5;                  /* PTR TO IFDMSGAJ.           * 01670000
         ST    @5,A00010+12                                       0115  01680000
*                                                                       01690000
*                                                                       01700000
* CUTEST06:                                                             01710000
*                                                                       01720000
*         R0=ADDR(ROPT);                /* ADDRESS SVC PARM LIST.     * 01730000
CUTEST06 LA    @0,ROPT                                            0116  01740000
*         R1='04'X;                     /* SVC CALLING CODE.   XA     * 01750000
         LA    @1,X'04'                                           0117  01760000
*         /*          ISSUE SUC59 TO TEST DEV STATUS,CUCODE,RTAM CNTRL* 01770000
*         GEN(SVC 59);                  /* SVC FOR CUTEST MACRO       * 01780000
         SVC 59                                                         01790000
         DS    0H                                                       01800000
*                                                                       01810000
*                                                                       01820000
*         /*          TEST SVC 59 FOR RET CODE. RC^=0 MEANS DEV ERROR * 01830000
*         IF RC^='00'X THEN             /* RC MEANS ONLINE DEVS       * 01840000
         LA    @0,X'00'                                           0119  01850000
         CR    @0,@F                                              0119  01860000
         BC    08,@9F5                                            0119  01870000
*          DO;                          /* OUTPUT ONLINE DEVICES      * 01880000
*                                                                       01890000
*           /*        CHECK TO DETERMINE IF HEADER MESSAGE OUTPUT     * 01900000
*           IF ONLHEADR='0'B THEN       /* HEADR MSG OUTPUT YET?      * 01910000
         TM    MODFLAGS,B'01000000'                               0121  01920000
         BC    05,@9F4                                            0121  01930000
*            DO;                        /* NO, PRINT IT.              * 01940000
*             R3=ADONLHDR;              /* IN HEADR MSG,FOLLOWED      * 01950000
         L     @3,8(0,@5)                                         0123  01960000
*             GEN(PWTO REG=(R3));       /* BY ONLINE DEVS             * 01970000
         PWTO REG=(R3)                                                  01980000
         DS    0H                                                       01990000
*             ONLHEADR='1'B;            /* SET FLG, HEADR OUTPUT      * 02000000
         OI    MODFLAGS,B'01000000'                               0125  02010000
*            END;                                                       02020000
*                                                                       02030000
*          /*         OUTPUT ONLINE DEVICES FOUND BY SVC 59           * 02040000
*                                                                       02050000
*          R3=ADMSG244;                 /* SVC ONLINE BUFFER MSG      * 02060000
@9F4     L     @3,0(0,@5)                                         0127  02070000
*          GEN(PWTO REG=(R3));          /* OUTPUT ONLINE DEVS         * 02080000
         PWTO REG=(R3)                                                  02090000
         DS    0H                                                       02100000
*          SHARDBUF=SHARDBUF&&SHARDBUF; /* CLEAR BUFFER FOR SVC       * 02110000
         XC    12(60,@3),12(@3)                                   0129  02120000
*                                                                       02130000
*                                                                       02140000
*          /*         MORE DEVICES FOR SVC 59 TO LOOK AT?             * 02150000
*          IF CURANGE>'00'X THEN        /* MORE DEVS TO CHECK?        * 02160000
         LA    @F,X'00'                                           0130  02170000
         CH    @F,A00010+8                                        0130  02180000
*           GO TO CUTEST06;             /* YES, REISSUE SVC 59        * 02190000
         BC    04,CUTEST06                                        0131  02200000
*                                                                       02210000
*                                                                       02220000
* CUTEST07:                                                             02230000
*                                                                       02240000
*          DO;                          /* OR DATA SET ON CU. SET     * 02250000
*           RETCODE='08'X;              /* RET CODE=08. RETURN TO     * 02260000
CUTEST07 LA    @F,X'08'                                           0133  02270000
*           GO TO CUTEST09;             /* OLT.                       * 02280000
         BC    15,CUTEST09                                        0134  02290000
*          END;                                                         02300000
*          END;                                                         02310000
*                                                                       02320000
*         /*          HAVE ONLINE DEVICES BEEN OUTPUT?          XM5092* 02330000
*                                                                       02340000
*         IF ONLHEADR='1'B THEN         /* IF HEADR MSG OUTPUT  XM5089* 02350000
@9F5     TM    MODFLAGS,B'01000000'                               0137  02360000
*           GO TO CUTEST07;             /* HAVE ERROR COND. RTRNXM5089* 02370000
         BC    01,CUTEST07                                        0138  02380000
*                                                                       02390000
*                                                                       02400000
* CUTEST08:                                                             02410000
*                                                                       02420000
*                                                                       02430000
*         /*          SET UP FOR CONVERSION FROM HEX TO EBCDIC        * 02440000
*         HEXADDR=NEWBASE;              /* ADDRESS C U LINE.          * 02450000
CUTEST08 MVC   HEXADDR(4),NEWBASE                                 0139  02460000
*         FROMADDR=ADDR(HEXADDR);   /*                        @Y30LPAW* 02470000
         LA    @F,HEXADDR                                         0140  02480000
         ST    @F,CONVERT+4                                       0140  02490000
*         TOADDR=ADDR(EBCDICAD);    /*                        @Y30LPAW* 02500000
         LA    @F,EBCDICAD                                        0141  02510000
         ST    @F,CONVERT+8                                       0141  02520000
*         FLGCNT='8004'X;      /* SET FLAG AND COUNT          @Y30LPAW* 02530000
         MVC   CONVERT+12(2),@X13                                 0142  02540000
*         R1=ADDR(CONVERT);             /* CONVERT PARM LIST.         * 02550000
         LA    @1,CONVERT                                         0143  02560000
*         R15=TAB28;                    /* TRANS MNGR FOR BRANCH.     * 02570000
         L     @F,TAB28                                           0144  02580000
*         GENERATE;                                                     02590000
         BALR  R14,R15                 CONVERT, HEX TO EBCDIC           02600000
         DS    0H                                                       02610000
*         CDSNAME=EBCDICA7;             /* PREPARE FOR CDS LOAD.      * 02620000
         MVC   PARMLIST+1(7),EBCDICAD+1                           0146  02630000
*         LOADADDR=ADDR(CDSENTRY);      /* WHERE CDS LOADED     Y01008* 02640000
         LA    @F,CDSENTRY                                        0147  02650000
         ST    @F,PARMLIST+8                                      0147  02660000
*         PARMFLGS='60'X;               /* CDS LOAD, COMPUTE.   X02008* 02670000
         MVI   PARMLIST+12,X'60'                                  0148  02680000
*         CDSLNGTH='14'X;               /* SET TO 20 BYTES LNGTHY01008* 02690000
         LA    @F,X'14'                                           0149  02700000
         STH   @F,PARMLIST+14                                     0149  02710000
*                                                                       02720000
*         /* ISSUE CALL TO LOADER TO LOAD CDS FOR THIS DEVICE   Y01008* 02730000
*                                                                       02740000
*         GEN(IFDMOD CALL='12',LIST=PARMLIST);                          02750000
         IFDMOD CALL='12',LIST=PARMLIST                                 02760000
         DS    0H                                                       02770000
*                                                                       02780000
*         RESTRICT(R1);                                                 02790000
*                                                                       02800000
*                                                                       02810000
*         /*          CHECK ENTRY POINT ADDR, MAKE SURE CDS LOADED    * 02820000
*         IF RC^='00'X THEN             /* IF CDS NOT LOADED    Y02008* 02830000
         LA    @0,X'00'                                           0152  02840000
         CR    @0,@F                                              0152  02850000
         BC    08,@9F3                                            0152  02860000
*          DO;                          /* NO CDS , OUTPUT MSG  X01906* 02870000
*           R3=ADMSG127;                /* ADDRESS MSG IFD127I  X01906* 02880000
         L     @3,12(0,@5)                                        0154  02890000
*           MSG127I(12:19)=CDSNAME;     /* PLACE CDS NAME IN BUFX01906* 02900000
         MVC   23(7,@3),PARMLIST+1                                0155  02910000
         MVI   30(@3),C' '                                        0155  02920000
*           GEN(PWTO REG=(3));          /* OUTPUT MESSAGE.      X01906* 02930000
         PWTO REG=(3)                                                   02940000
         DS    0H                                                       02950000
*           GO TO CUTEST8A;             /* DEV ASSUMMED SHARED  Y02008* 02960000
         BC    15,CUTEST8A                                        0157  02970000
*          END;                                                         02980000
*                                                                       02990000
*                                                                       03000000
*         /*          CDS LOADED, CHECK DEV SHARED STATUS             * 03010000
*                                                                       03020000
*         IF DEVSHARD='1'B THEN         /* IS DEVICE SHARED           * 03030000
@9F3     TM    9(@1),B'01000000'                                  0159  03040000
         BC    12,@9F2                                            0159  03050000
*                                                                       03060000
*         /*          OUTPUT SHARED DEVICE HEADER MESSAGE.            * 03070000
*                                                                       03080000
*          DO;                          /* YES,                       * 03090000
* CUTEST8A:                                                             03100000
*          IF SHRHEADR='0'B THEN        /* IF SHARE BIT IS ON IN      * 03110000
CUTEST8A TM    MODFLAGS,B'10000000'                               0161  03120000
         BC    05,@9F1                                            0161  03130000
*           DO;                                                         03140000
*            R3=ADSHRHDR;               /* ADDRESS MESSAGE FORMAT     * 03150000
         L     @3,4(0,@5)                                         0163  03160000
*            GEN(PWTO REG=(R3));        /* OUTPUT HEADER MESSAGE.     * 03170000
         PWTO REG=(R3)                                                  03180000
         DS    0H                                                       03190000
*            SHRHEADR='1'B;             /* SET FLAG, HDR OUTPUT       * 03200000
         OI    MODFLAGS,B'10000000'                               0165  03210000
*            R3=ADMSG244;               /* ADDRESS SHARED DEV MSG     * 03220000
         L     @3,0(0,@5)                                         0166  03230000
*            SHARDBUF=SHARDBUF&&SHARDBUF;                               03240000
         XC    12(60,@3),12(@3)                                   0167  03250000
*            SHARPTR=ADDR(SHARDBUF);    /* ADDR SHARD MSG BUFR.       * 03260000
         LA    @F,12(0,@3)                                        0168  03270000
         ST    @F,SHARPTR                                         0168  03280000
*           END;                        /* END HEADR OUTPUT CODE.     * 03290000
*                                                                       03300000
*                                                                       03310000
*           DO;                         /* FILL SHARD BUFFER          * 03320000
*            SHARDDEV=EBCDICA7(5:7);                                    03330000
@9F1     L     @C,SHARPTR                                         0171  03340000
         MVC   0(3,@C),EBCDICAD+5                                 0171  03350000
         MVI   3(@C),C' '                                         0171  03360000
*            SHARDDEV(4)=',';           /* PUT DELIMETER IN BUFR      * 03370000
         MVI   3(@C),C','                                         0172  03380000
*            SHARPTR=SHARPTR+4;         /* UPDATE BUFR PTR.           * 03390000
         LA    @F,4                                               0173  03400000
         A     @F,SHARPTR                                         0173  03410000
         ST    @F,SHARPTR                                         0173  03420000
*            BUFCOUNT=BUFCOUNT+4;       /* UPDATE BUFR CNTR.          * 03430000
         LA    @F,4                                               0174  03440000
         AH    @F,BUFCOUNT                                        0174  03450000
         STH   @F,BUFCOUNT                                        0174  03460000
*           END;                                                        03470000
*          END;                                                         03480000
*                                                                       03490000
*         NEWBASE=NEWBASE+'01'X;        /* NEXT DEV ON C U            * 03500000
@9F2     LA    @F,X'01'                                           0177  03510000
         A     @F,NEWBASE                                         0177  03520000
         ST    @F,NEWBASE                                         0177  03530000
*                                                                       03540000
*                                                                       03550000
*         /*          OUTPUT SHARED DEVICES IF BUFFR IS FULL OR AT END* 03560000
*         IF NEWBASE>CULAST |           /* LAST DEV LOOKED AT OR      * 03570000
*          BUFCOUNT>=BUFMAX THEN        /* BUFR IS FULL,OUTPUT  XM5092* 03580000
         L     @F,CULAST                                          0178  03590000
         C     @F,NEWBASE                                         0178  03600000
         BC    04,@9F0                                            0178  03610000
         LH    @F,BUFMAX                                          0178  03620000
         CH    @F,BUFCOUNT                                        0178  03630000
         BC    02,@9EF                                            0178  03640000
*                                                                       03650000
*         /*          OUTPUT SHARED DEVICES IN MESSAGE BUFFER.        * 03660000
*                                                                       03670000
*          DO;                                                          03680000
*          IF SHRHEADR='1'B THEN        /* SHARED DEVS IF THEY        * 03690000
@9F0     TM    MODFLAGS,B'10000000'                               0180  03700000
         BC    12,@9EE                                            0180  03710000
*           DO;                         /* EXIST                      * 03720000
*            R3=ADMSG244;               /* ADDRESS MESSAGE            * 03730000
         L     @3,0(0,@5)                                         0182  03740000
*            GEN(PWTO REG=(R3));        /* OUTPUT SHARED DEVICES.     * 03750000
         PWTO REG=(R3)                                                  03760000
         DS    0H                                                       03770000
*            BUFCOUNT=0;                /* REINIT BUFR COUNTR         * 03780000
         SR    @F,@F                                              0184  03790000
         STH   @F,BUFCOUNT                                        0184  03800000
*            SHARDBUF=SHARDBUF&&SHARDBUF;                               03810000
         XC    12(60,@3),12(@3)                                   0185  03820000
*            SHARPTR=ADDR(SHARDBUF);    /* ADDR SHARD MSG BUFR.       * 03830000
         LA    @F,12(0,@3)                                        0186  03840000
         ST    @F,SHARPTR                                         0186  03850000
*           END;                                                        03860000
*          END;                                                         03870000
@9EE     EQU   *                                                  0188  03880000
*                                                                       03890000
*                                                                       03900000
*         /*          ALL DEVICES ON CONTROL UNIT CHECKED?            * 03910000
*         IF NEWBASE<=CULAST THEN       /* AT END OF EXTENT? NO,      * 03920000
@9EF     L     @F,CULAST                                          0189  03930000
         C     @F,NEWBASE                                         0189  03940000
*          GO TO CUTEST08;              /* LOOK AT NEXT DEVICE.       * 03950000
         BC    10,CUTEST08                                        0190  03960000
*                                                                       03970000
*         IF CUTLEVL='03'X &           /* LEVEL 3 MACRO       @Y30LPAW* 03980000
*           NUMEXTS>'01'X              /* MULTIPLE EXTENTS    @Y30LPAW* 03990000
*           THEN                       /* SET UP FOR NEXT     @Y30LPAW* 04000000
         CLI   1(@7),X'03'                                        0191  04010000
         BC    07,@9ED                                            0191  04020000
         CLI   9(@7),X'01'                                        0191  04030000
         BC    12,@9EC                                            0191  04040000
*           DO;                        /* EXTENT ON CU        @Y30LPAW* 04050000
*                                                                       04060000
*         IF NUMEXTS>EXTLIMIT       /* ALL EXTENTS CHECKED    @Y30LPAW* 04070000
*           THEN                       /* NO,PROCESS NEXT EXT @Y30LPAW* 04080000
         CLC   9(1,@7),EXTLIMIT                                   0193  04090000
         BC    12,@9EB                                            0193  04100000
*           DO;                        /* SETUP BASE AND CNT  @Y30LPAW* 04110000
*                                                                       04120000
*              EXTLIMIT=EXTLIMIT+'01'X; /* UPDATE CNTR        @Y30LPAW* 04130000
         LA    @F,X'01'                                           0195  04140000
         SR    @0,@0                                              0195  04150000
         IC    @0,EXTLIMIT                                        0195  04160000
         AR    @F,@0                                              0195  04170000
         STC   @F,EXTLIMIT                                        0195  04180000
*              MYCUTEXT=MYCUTEXT+'05'X; /* LOOK AT NEXT EXT   @Y30LPAW* 04190000
         LA    @F,X'05'                                           0196  04200000
         A     @F,MYCUTEXT                                        0196  04210000
         ST    @F,MYCUTEXT                                        0196  04220000
*              GOTO CUTEST00;           /* RET TO MAIN FLOW   @Y30LPAW* 04230000
         BC    15,CUTEST00                                        0197  04240000
*              END;                                                     04250000
*                                                                       04260000
*           END;                                                        04270000
@9EB     EQU   *                                                  0199  04280000
*                                                                       04290000
*         /*          OUTPUT PWTOR IF SHARED DEVICES ARE ON C U       * 04300000
*         IF SHRHEADR='1'B THEN         /* SHARD DEVS PRESENT         * 04310000
@9EC     EQU   *                                                  0200  04320000
@9ED     TM    MODFLAGS,B'10000000'                               0200  04330000
         BC    12,@9EA                                            0200  04340000
*          DO;                          /* YES, ASK OPERATOR IF       * 04350000
*           R3=ADMSG243;                /* ITS OK TO CONTINUE.        * 04360000
         L     @3,16(0,@5)                                        0202  04370000
*           ECB=ECB&&ECB;               /* CLEAR ECB FOR REPLY.       * 04380000
         XC    ECB(4),ECB                                         0203  04390000
*           INBUFAD=ADDR(INBUFR);       /* LOCATE REPLY BUFFER.       * 04400000
         LA    @F,INBUFR                                          0204  04410000
         ST    @F,WTORLIST                                        0204  04420000
*            WTORLNGT='03'X;            /* REPLY LENGTH.              * 04430000
         MVI   WTORLIST,X'03'                                     0205  04440000
*         ECBPTR=ADDR(ECB);             /* ADDRESS ECB FOR REPLY      * 04450000
         LA    @F,ECB                                             0206  04460000
         ST    @F,WTORLIST+4                                      0206  04470000
*            WTORPRFX=WTORLIST;         /* PLACE WTOR INFO IN MSG     * 04480000
         MVC   0(8,@3),WTORLIST                                   0207  04490000
*            REPLY=REPLY&&REPLY;        /* CLEAR REPLY BUFFER    M5092* 04500000
         XC    REPLY(3),REPLY                                     0208  04510000
*                                                                       04520000
*                                                                       04530000
*            /*            OUTPUT MESSAGE                             * 04540000
*            GEN(PWTOR REG=(R3),WAIT=YES);                              04550000
         PWTOR REG=(R3),WAIT=YES                                        04560000
         DS    0H                                                       04570000
*                                                                       04580000
*                                                                       04590000
*            /*       CHECK REPLY FROM OPERATOR                       * 04600000
*            IF REPLY ='YES' THEN       /* DEVS SHARD ARE NOT DIS     * 04610000
         CLC   REPLY(3),@C18                                      0210  04620000
*             GO TO CUTEST07;           /* CONNECTED. RC=08.          * 04630000
         BC    08,CUTEST07                                        0211  04640000
*           END;                                                        04650000
*         RETCODE='00'X;                /* CU TEST REQMNTS MET        * 04660000
@9EA     LA    @F,X'00'                                           0213  04670000
*         IF CUCODE^='02'X THEN     /* IF REQUEST IS NOT      @Y30LPAW* 04680000
         CLI   8(@7),X'02'                                        0214  04690000
*           GOTO CUTEST09;          /*   CODE 2, RETURN       @Y30LPAW* 04700000
         BC    07,CUTEST09                                        0215  04710000
* CUTEST8B:                    /*                             @Y30LPAW* 04720000
*         R3=ADMSG469;              /* POINT TO DSID MSG      @Y30LPAW* 04730000
CUTEST8B L     @3,28(0,@5)                                        0216  04740000
*         ECB=ECB&&ECB;             /* CLEAR ECB              @Y30LPAW* 04750000
         XC    ECB(4),ECB                                         0217  04760000
*         INBUFAD=ADDR(INBUFR);     /* SET UP                 @Y30LPAW* 04770000
         LA    @F,INBUFR                                          0218  04780000
         ST    @F,WTORLIST                                        0218  04790000
*         WTORLNGT='06'X;           /* PARM LIST              @Y30LPAW* 04800000
         MVI   WTORLIST,X'06'                                     0219  04810000
*         ECBPTR=ADDR(ECB);         /*    FOR REPLY           @Y30LPAW* 04820000
         LA    @F,ECB                                             0220  04830000
         ST    @F,WTORLIST+4                                      0220  04840000
*         WTORPRFX=WTORLIST;        /*                        @Y30LPAW* 04850000
         MVC   0(8,@3),WTORLIST                                   0221  04860000
*         REPLYID=REPLYID&&REPLYID;   /* CLEAR IT             @Y30LPAW* 04870000
         XC    REPLYID(6),REPLYID                                 0222  04880000
*         GEN(PWTOR REG=(R3),WAIT=YES);  /* ISSUE WTOR        @Y30LPAW* 04890000
         PWTOR REG=(R3),WAIT=YES                                        04900000
         DS    0H                                                       04910000
*         DSID=REPLYID;        /* SAVE REPLY                  @Y30LPAW* 04920000
         MVC   DSID(6),REPLYID                                    0224  04930000
*         IF DSID='CANCEL' THEN          /* REPLIED CANCEL?   @Y30LPAW* 04940000
         CLC   DSID(6),@C20                                       0225  04950000
         BC    07,@9E9                                            0225  04960000
*            DO;                    /* IF SO-DO THIS          @Y30LPAW* 04970000
*               RETCODE='08'X;           /* SET RETCODE 08    @Y30LPAW* 04980000
         LA    @F,X'08'                                           0227  04990000
*               GOTO CUTEST09;      /* AND GET OUT            @Y30LPAW* 05000000
         BC    15,CUTEST09                                        0228  05010000
*            END;                   /*                        @Y30LPAW* 05020000
*         DO ICALL=1 TO 3 BY 1;     /* LOOK FOR S8            @Y30LPAW* 05030000
@9E9     LA    @F,1                                               0230  05040000
         ST    @F,ICALL                                           0230  05050000
*            IF DSID(ICALL:ICALL+1)='S8' THEN  /* IN REPLY    @Y30LPAW* 05060000
@DO9E8   L     @C,ICALL                                           0231  05070000
         LA    @A,DSID-1(@C)                                      0231  05080000
         CLC   0(2,@A),@C21                                       0231  05090000
*            GO TO L1;              /*                        @Y30LPAW* 05100000
         BC    08,L1                                              0232  05110000
*         END;                      /*                        @Y30LPAW* 05120000
* L1:                               /*                        @Y30LPAW* 05130000
*         IF ICALL>3 THEN           /* IF NOT THERE,GO ISSUE  @Y30LPAW* 05140000
         L     @F,ICALL                                           0233  05150000
         AH    @F,@D2                                             0233  05160000
@DO9E7   ST    @F,ICALL                                           0233  05170000
         CH    @F,@D3                                             0233  05180000
         BC    12,@DO9E8                                          0233  05190000
L1       LA    @F,3                                               0234  05200000
         C     @F,ICALL                                           0234  05210000
*            GOTO CUTEST8B;         /* AGAIN                  @Y30LPAW* 05220000
         BC    04,CUTEST8B                                        0235  05230000
*         IDNUM(1:2)=DSID(ICALL+2:ICALL+3);  /* SAVE THE ID   @Y30LPAW* 05240000
         LR    @C,@F                                              0236  05250000
         A     @C,ICALL                                           0236  05260000
         LA    @8,2                                               0236  05270000
         A     @8,ICALL                                           0236  05280000
         SR    @C,@8                                              0236  05290000
         LA    @E,DSID-1(@8)                                      0236  05300000
         LA    @A,IDNUM                                           0236  05310000
         MVI   0(@A),C' '                                         0236  05320000
         MVC   1(001,@A),0(@A)                                    0236  05330000
         EX    @C,@MVC                                            0236  05340000
*         FROMADDR=ADDR(IDNUM);     /* IF IT IS,              @Y30LPAW* 05350000
         LA    @F,IDNUM                                           0237  05360000
         ST    @F,CONVERT+4                                       0237  05370000
*         TOADDR=ADDR(DSIDHEX2);    /*  SET UP TO CONVERT     @Y30LPAW* 05380000
         LA    @F,DSIDHEX+1                                       0238  05390000
         ST    @F,CONVERT+8                                       0238  05400000
*         FLGCNT='0002'X;           /*  THE ID FROM           @Y30LPAW* 05410000
         MVC   CONVERT+12(2),@X22                                 0239  05420000
*         R1=ADDR(CONVERT);         /* EBCDIC TO HEX          @Y30LPAW* 05430000
         LA    @1,CONVERT                                         0240  05440000
*         R15=TAB28;                /* GET CONVERT ADDR       @Y30LPAW* 05450000
         L     @F,TAB28                                           0241  05460000
*         GEN(BALR  R14,R15);       /*  AND GO THERE          @Y30LPAW* 05470000
         BALR  R14,R15                                                  05480000
         DS    0H                                                       05490000
*         IF R15^='00'X THEN        /*   IF CONVERT FAILS,    @Y30LPAW* 05500000
         LA    @0,X'00'                                           0243  05510000
         CR    @0,@F                                              0243  05520000
*            GO TO CUTEST8B;        /*   REISSUE MESSSAGE     @Y30LPAW* 05530000
         BC    07,CUTEST8B                                        0244  05540000
*         HEXDSID=DSIDHEX;          /* PUT DSID INTO SVC      @Y30LPAW* 05550000
         MVC   SVC59LST+4(2),DSIDHEX                              0245  05560000
*         EBCDSID=IDNUM;            /*   PARMLIST             @Y30LPAW* 05570000
         MVC   SVC59LST+6(2),IDNUM                                0246  05580000
*         MODID='AJ';                    /* MOVE IN ID        @Y60LPAW* 05590000
         MVC   SVC59LST+2(2),@C10                                 0247  05600000
*         R0=ADDR(ROPT);            /* SVC PARM LIST ADDR     @Y30LPAW* 05610000
         LA    @0,ROPT                                            0248  05620000
*         R1='0C'X;                 /* SVC CALL CODE          @Y30LPAW* 05630000
         LA    @1,X'0C'                                           0249  05640000
*         /*  ISSUE SVC 59 TO VARY OFF DSID                   @Y30LPAW* 05650000
*         GEN(SVC 59);              /*                        @Y30LPAW* 05660000
         SVC 59                                                         05670000
         DS    0H                                                       05680000
*         /*  TEST RETURN FROM SVC 59                         @Y30LPAW* 05690000
*         /*  R15='00'X MEANS OK                              @Y30LPAW* 05700000
*         /*  R15='04'X MEANS ONE DSID ALREADY VARIED OFF     @Y30LPAW* 05710000
*         /* OTHERWISE R15 HAS VARY ERROR CODE                @Y30LPAW* 05720000
*          IF R15=0 |            /*IF NO ERROR                @Y03LPMY* 05730000
*             R15='78'X THEN     /*OR ALREADY OFF THEN        @Y03LPMY* 05740000
         LTR   @F,@F                                              0251  05750000
         BC    08,@9E4                                            0251  05760000
         LA    @0,X'78'                                           0251  05770000
         CR    @0,@F                                              0251  05780000
         BC    07,@9E3                                            0251  05790000
*            GOTO CUTEST09;         /* IF 0 GO AROUND         @Y30LPAW* 05800000
         BC    08,CUTEST09                                        0252  05810000
*         IF R15='04'X THEN         /* IS RETURN 04           @Y30LPAW* 05820000
@9E3     LA    @0,X'04'                                           0253  05830000
         CR    @0,@F                                              0253  05840000
         BC    07,@9E2                                            0253  05850000
*            DO;                    /* IF 04 DO THIS          @Y30LPAW* 05860000
*               R3=ADMSG472;        /* POINT TO MSG472I       @Y30LPAW* 05870000
         L     @3,36(0,@5)                                        0255  05880000
*               GEN(PWTO REG=(R3));   /* GO WRITE IT          @Y30LPAW* 05890000
         PWTO REG=(R3)                                                  05900000
         DS    0H                                                       05910000
*               RETCODE='08'X;      /*  SET RETURN CODE 08    @Y30LPAW* 05920000
         LA    @F,X'08'                                           0257  05930000
*               GOTO CUTEST09;      /* AND RETURN             @Y30LPAW* 05940000
         BC    15,CUTEST09                                        0258  05950000
*            END;                   /*                        @Y30LPAW* 05960000
*         /*     R15=VARY ERROR CODE--PUT IT IN MSG           @Y30LPAW* 05970000
*         /*         IFD470I AND PRINT IT                     @Y30LPAW* 05980000
*         SVCRCODE=R15;             /* SAVE RETURN CODE       @Y30LPAW* 05990000
@9E2     ST    @F,SVCRCODE                                        0260  06000000
*         FROMADDR=ADDR(VARYCODE);  /* SET UP TO              @Y30LPAW* 06010000
         LA    @F,SVCRCODE+2                                      0261  06020000
         ST    @F,CONVERT+4                                       0261  06030000
*         TOADDR=ADDR(EBCCODE);          /* CONVERT CODE TO   @Y30LPAW* 06040000
         LA    @F,EBCCODE                                         0262  06050000
         ST    @F,CONVERT+8                                       0262  06060000
*         FLGCNT='8002'X;           /*  EBCDIC                @Y30LPAW* 06070000
         MVC   CONVERT+12(2),@X24                                 0263  06080000
*         R1=ADDR(CONVERT);         /* POINT TO PARMLIST      @Y30LPAW* 06090000
         LA    @1,CONVERT                                         0264  06100000
*         R15=TAB28;                /* POINT TO CONVERT       @Y30LPAW* 06110000
         L     @F,TAB28                                           0265  06120000
*         GEN(BALR  R14,R15);       /* AND GO CONVERT         @Y30LPAW* 06130000
         BALR  R14,R15                                                  06140000
         DS    0H                                                       06150000
*         ERRCODE=EBCCODE3;              /* PUT IT IN MSG     @Y30LPAW* 06160000
         L     @C,32(0,@5)                                        0267  06170000
         MVC   31(3,@C),EBCCODE+1                                 0267  06180000
*         R3=ADMSG470;              /* POINT TO MSG 470I      @Y30LPAW* 06190000
         L     @3,32(0,@5)                                        0268  06200000
*         GEN(PWTO REG=(R3));       /*  AND GO WRITE IT       @Y30LPAW* 06210000
         PWTO REG=(R3)                                                  06220000
         DS    0H                                                       06230000
*         RETCODE='08'X;            /* SET RERURN CODE 08     @Y30LPAW* 06240000
         LA    @F,X'08'                                           0270  06250000
*                                   /*  AND RETURN            @Y30LPAW* 06260000
*                                                                       06270000
*                                                                       06280000
* CUTEST09:                                                             06290000
*         DPMSGREI='0'B;                /* TURN OFF REM MSG FLGOY00427* 06300000
CUTEST09 NI    A00021,B'11111110'                                 0271  06310000
*                                                                       06320000
*         RETURN;                       /* RETURN TO OLT              * 06330000
*         END;                          /* END CU TEST MODULE         * 06340000
@EL01    L     @D,4(0,@D)                                         0273  06350000
         L     @E,12(0,@D)                                        0273  06360000
         LM    @0,@C,20(@D)                                       0273  06370000
         BCR   15,@E                                              0273  06380000
@DATA1   EQU   *                                                        06390000
@0       EQU   00                  EQUATES FOR REGISTERS 0-15           06400000
@1       EQU   01                                                       06410000
@2       EQU   02                                                       06420000
@3       EQU   03                                                       06430000
@4       EQU   04                                                       06440000
@5       EQU   05                                                       06450000
@6       EQU   06                                                       06460000
@7       EQU   07                                                       06470000
@8       EQU   08                                                       06480000
@9       EQU   09                                                       06490000
@A       EQU   10                                                       06500000
@B       EQU   11                                                       06510000
@C       EQU   12                                                       06520000
@D       EQU   13                                                       06530000
@E       EQU   14                                                       06540000
@F       EQU   15                                                       06550000
@D1      DC    H'-1'                                                    06560000
@D2      DC    H'1'                                                     06570000
@D3      DC    H'3'                                                     06580000
@MVC     MVC   0(1,@A),0(@E)                                            06590000
@V1      DC    V(IFDMSGAJ)                                              06600000
         DS    0F                                                       06610000
@X8      DC    X'0000FFFF'                                              06620000
@X9      DC    X'00000000'                                              06630000
@C10     DC    C'AJ'                                                    06640000
@X13     DC    X'8004'                                                  06650000
@C20     DC    C'CANCEL'                                                06660000
@C21     DC    C'S8'                                                    06670000
@X22     DC    X'0002'                                                  06680000
@X24     DC    X'8002'                                                  06690000
@C18     DC    C'YES'                                                   06700000
         DS    0D                                                       06710000
@DATA    EQU   *                                                        06720000
@SAV001  EQU   @DATA+00000000      72 BYTE(S) ON WORD                   06730000
R0       EQU   00000000            FULLWORD POINTER REGISTER            06740000
R1       EQU   00000001            FULLWORD POINTER REGISTER            06750000
R2       EQU   00000002            FULLWORD POINTER REGISTER            06760000
R3       EQU   00000003            FULLWORD POINTER REGISTER            06770000
R4       EQU   00000004            FULLWORD POINTER REGISTER            06780000
R5       EQU   00000005            FULLWORD POINTER REGISTER            06790000
DEVTABPT EQU   00000006            FULLWORD POINTER REGISTER            06800000
R7       EQU   00000007            FULLWORD POINTER REGISTER            06810000
R14      EQU   00000014            FULLWORD POINTER REGISTER            06820000
R15      EQU   00000015            FULLWORD POINTER REGISTER            06830000
RC       EQU   00000015            FULLWORD POINTER REGISTER            06840000
RETCODE  EQU   00000015            FULLWORD POINTER REGISTER            06850000
DEVTABLE EQU   00000000            36 BYTE(S) ON WORD                   06860000
A00000   EQU   DEVTABLE+00000000   12 BYTE(S)                           06870000
FLAG1    EQU   DEVTABLE+00000012   1 BYTE(S)                            06880000
A00001   EQU   DEVTABLE+00000012   1 BIT(S)                             06890000
PRIMDEV  EQU   DEVTABLE+00000012   1 BIT(S)                             06900000
A00002   EQU   DEVTABLE+00000012   3 BIT(S)                             06910000
GRABDEV  EQU   DEVTABLE+00000012   1 BIT(S)                             06920000
A00003   EQU   DEVTABLE+00000013   19 BYTE(S)                           06930000
DVHEXAD  EQU   DEVTABLE+00000032   FULLWORD INTEGER                     06940000
A00006   EQU   00000000            16 BYTE(S) ON WORD                   06950000
A00007   EQU   A00006+00000000     1 BYTE(S)                            06960000
CUTLEVL  EQU   A00006+00000001     1 BYTE(S)                            06970000
A00008   EQU   A00006+00000002     2 BYTE(S)                            06980000
CUTEXT   EQU   A00006+00000004     FULLWORD POINTER                     06990000
CUCODE   EQU   A00006+00000008     1 BYTE(S)                            07000000
NUMEXTS  EQU   A00006+00000009     1 BYTE(S)                            07010000
A00009   EQU   A00006+00000010     2 BYTE(S)                            07020000
CUDSMS   EQU   A00006+00000012     FULLWORD POINTER                     07030000
SVCRCODE EQU   @DATA+00000072      4 BYTE(S)                            07040000
A00014   EQU   SVCRCODE+00000000   2 BYTE(S)                            07050000
VARYCODE EQU   SVCRCODE+00000002   2 BYTE(S)                            07060000
CONVERT  EQU   @DATA+00000076      14 BYTE(S) ON WORD                   07070000
         ORG   CONVERT+00000000                                         07080000
A00015   EQU   *                   2 BYTE(S)                            07090000
         DC    X'0002'                                                  07100000
A00016   EQU   *                   2 BYTE(S)                            07110000
         DC    C'41'                                                    07120000
FROMADDR EQU   CONVERT+00000004    FULLWORD POINTER                     07130000
TOADDR   EQU   CONVERT+00000008    FULLWORD POINTER                     07140000
FLGCNT   EQU   CONVERT+00000012    2 BYTE(S)                            07150000
MYCUTEXT EQU   @DATA+00000092      FULLWORD POINTER                     07160000
A00017   EQU   00000000            5 BYTE(S) ON WORD                    07170000
CUBASE   EQU   A00017+00000000     FULLWORD INTEGER                     07180000
CUFINISH EQU   A00017+00000004     1 BYTE(S)                            07190000
CDSENTRY EQU   @DATA+00000096      20 BYTE(S) ON WORD                   07200000
PARMLIST EQU   @DATA+00000116      16 BYTE(S) ON WORD                   07210000
         ORG   PARMLIST+00000000                                        07220000
CDS1     EQU   *                   1 BYTE(S)                            07230000
         DC    C'G'                                                     07240000
CDSNAME  EQU   PARMLIST+00000001   7 BYTE(S)                            07250000
LOADADDR EQU   PARMLIST+00000008   FULLWORD POINTER                     07260000
PARMFLGS EQU   PARMLIST+00000012   1 BYTE(S)                            07270000
A00018   EQU   PARMLIST+00000013   1 BYTE(S)                            07280000
CDSLNGTH EQU   PARMLIST+00000014   HALFWORD INTEGER                     07290000
DEVCDS   EQU   00000000            20 BYTE(S)                           07300000
CDSDEVAD EQU   DEVCDS+00000000     4 BYTE(S)                            07310000
CDSDVDSC EQU   DEVCDS+00000004     4 BYTE(S)                            07320000
CDSSIZE  EQU   DEVCDS+00000008     1 BYTE(S)                            07330000
CDSFLAGS EQU   DEVCDS+00000009     1 BYTE(S)                            07340000
A00019   EQU   DEVCDS+00000009     1 BIT(S)                             07350000
DEVSHARD EQU   DEVCDS+00000009     1 BIT(S)                             07360000
MSGAJPTR EQU   00000000            40 BYTE(S) ON WORD                   07370000
ADMSG244 EQU   MSGAJPTR+00000000   FULLWORD POINTER                     07380000
ADSHRHDR EQU   MSGAJPTR+00000004   FULLWORD POINTER                     07390000
ADONLHDR EQU   MSGAJPTR+00000008   FULLWORD POINTER                     07400000
ADMSG127 EQU   MSGAJPTR+00000012   FULLWORD POINTER                     07410000
ADMSG243 EQU   MSGAJPTR+00000016   FULLWORD POINTER                     07420000
ADMSG399 EQU   MSGAJPTR+00000020   FULLWORD POINTER                     07430000
ADVARYMS EQU   MSGAJPTR+00000024   FULLWORD POINTER                     07440000
ADMSG469 EQU   MSGAJPTR+00000028   FULLWORD POINTER                     07450000
ADMSG470 EQU   MSGAJPTR+00000032   FULLWORD POINTER                     07460000
ADMSG472 EQU   MSGAJPTR+00000036   FULLWORD POINTER                     07470000
MSG244   EQU   00000000            72 BYTE(S) ON WORD                   07480000
A00023   EQU   MSG244+00000000     12 BYTE(S)                           07490000
SHARDBUF EQU   MSG244+00000012     60 BYTE(S)                           07500000
MSG127   EQU   00000000            31 BYTE(S) ON WORD                   07510000
A00024   EQU   MSG127+00000000     12 BYTE(S)                           07520000
MSG127I  EQU   MSG127+00000012     19 BYTE(S)                           07530000
MSG243   EQU   00000000            72 BYTE(S) ON WORD                   07540000
WTORPRFX EQU   MSG243+00000000     8 BYTE(S)                            07550000
A00025   EQU   MSG243+00000008     12 BYTE(S)                           07560000
A00026   EQU   MSG243+00000020     52 BYTE(S)                           07570000
MSG140   EQU   00000000            44 BYTE(S)                           07580000
MSG140I  EQU   MSG140+00000000     44 BYTE(S)                           07590000
A00027   EQU   MSG140+00000000     12 BYTE(S)                           07600000
VARYDEV  EQU   MSG140+00000012     8 BYTE(S)                            07610000
A00028   EQU   MSG140+00000020     24 BYTE(S)                           07620000
MSG470   EQU   00000000            34 BYTE(S) ON WORD                   07630000
A00029   EQU   MSG470+00000000     31 BYTE(S)                           07640000
ERRCODE  EQU   MSG470+00000031     3 BYTE(S)                            07650000
WTORLIST EQU   @DATA+00000132      8 BYTE(S) ON WORD                    07660000
INBUFAD  EQU   WTORLIST+00000000   FULLWORD POINTER                     07670000
WTORLNGT EQU   WTORLIST+00000000   1 BYTE(S)                            07680000
ECBPTR   EQU   WTORLIST+00000004   FULLWORD POINTER                     07690000
MSG399   EQU   00000020            FULLWORD POINTER                     07700000
MODFLAGS EQU   @DATA+00000140      1 BYTE(S)                            07710000
SHRHEADR EQU   MODFLAGS+00000000   1 BIT(S)                             07720000
ONLHEADR EQU   MODFLAGS+00000000   1 BIT(S)                             07730000
SHARPTR  EQU   @DATA+00000144      FULLWORD POINTER                     07740000
SHARDDEV EQU   00000000            4 BYTE(S)                            07750000
BUFCOUNT EQU   @DATA+00000148      HALFWORD INTEGER                     07760000
         ORG   @DATA+00000150                                           07770000
BUFMAX   EQU   *                   HALFWORD INTEGER                     07780000
         DC    FL2'60'                                                  07790000
NEWBASE  EQU   @DATA+00000152      FULLWORD INTEGER                     07800000
CULAST   EQU   @DATA+00000156      FULLWORD INTEGER                     07810000
ENDOFTAB EQU   @DATA+00000160      FULLWORD INTEGER                     07820000
HEXADDR  EQU   @DATA+00000164      4 BYTE(S)                            07830000
EXTLIMIT EQU   @DATA+00000168      1 BYTE(S)                            07840000
ECB      EQU   @DATA+00000172      4 BYTE(S) ON WORD                    07850000
EBCDICAD EQU   @DATA+00000176      8 BYTE(S)                            07860000
A00032   EQU   EBCDICAD+00000000   1 BYTE(S)                            07870000
EBCDICA7 EQU   EBCDICAD+00000001   7 BYTE(S)                            07880000
DSID     EQU   @DATA+00000184      6 BYTE(S)                            07890000
IDNUM    EQU   @DATA+00000190      2 BYTE(S)                            07900000
DSIDHEX  EQU   @DATA+00000192      2 BYTE(S)                            07910000
         ORG   DSIDHEX+00000000                                         07920000
DSIDHEX1 EQU   *                   1 BYTE(S)                            07930000
         DC    X'08'                                                    07940000
DSIDHEX2 EQU   DSIDHEX+00000001    1 BYTE(S)                            07950000
EBCCODE  EQU   @DATA+00000194      4 BYTE(S)                            07960000
A00033   EQU   EBCCODE+00000000    1 BYTE(S)                            07970000
EBCCODE3 EQU   EBCCODE+00000001    3 BYTE(S)                            07980000
ICALL    EQU   @DATA+00000200      FULLWORD INTEGER                     07990000
         ORG   @DATA                                                    08000000
         DS    00000204C                                                08010000
@TEMPS   DS    0F                                                       08020000
AJCOM    IFDCOM                                                         08030000
OLTEPSW3 EQU   CESWT3+00000000     1 BYTE(S)                            08040000
A00004   EQU   OLTEPSW3+00000000   4 BIT(S)                             08050000
SUSDEL   EQU   OLTEPSW3+00000000   1 BIT(S)                             08060000
OLTEPSW7 EQU   CESWT7+00000000     1 BYTE(S) ON WORD                    08070000
A00005   EQU   OLTEPSW7+00000000   7 BIT(S)                             08080000
CUTSTFLG EQU   OLTEPSW7+00000000   1 BIT(S)                             08090000
REPLY    EQU   INBUFR+00000000     3 BYTE(S)                            08100000
REPLYID  EQU   INBUFR+00000000     6 BYTE(S)                            08110000
A00010   EQU   ROPT-00000004       16 BYTE(S) ON WORD                   08120000
A00011   EQU   A00010+00000000     2 BYTE(S)                            08130000
MODNUM   EQU   A00010+00000002     2 BYTE(S)                            08140000
CUBASEAD EQU   A00010+00000004     FULLWORD INTEGER                     08150000
CURANGE  EQU   A00010+00000008     HALFWORD INTEGER                     08160000
CUTCODE  EQU   A00010+00000010     HALFWORD INTEGER                     08170000
A00012   EQU   A00010+00000010     1 BYTE(S)                            08180000
CDE      EQU   A00010+00000011     1 BYTE(S)                            08190000
MSGMODAJ EQU   A00010+00000012     FULLWORD POINTER                     08200000
SVC59LST EQU   ROPT-00000004       8 BYTE(S) ON WORD                    08210000
A00013   EQU   SVC59LST+00000000   2 BYTE(S)                            08220000
MODID    EQU   SVC59LST+00000002   2 BYTE(S)                            08230000
HEXDSID  EQU   SVC59LST+00000004   2 BYTE(S)                            08240000
EBCDSID  EQU   SVC59LST+00000006   2 BYTE(S)                            08250000
A00020   EQU   CESWTR+00000000     1 BYTE(S) ON WORD                    08260000
RETAINAC EQU   A00020+00000000     1 BIT(S)                             08270000
A00021   EQU   CESWTR2+00000000    1 BYTE(S) ON WORD                    08280000
A00022   EQU   A00021+00000000     7 BIT(S)                             08290000
DPMSGREI EQU   A00021+00000000     1 BIT(S)                             08300000
A00030   EQU   TABLNGTH+00000002   1 BYTE(S)                            08310000
CDSEQU   EQU   A00030+00000000     1 BIT(S)                             08320000
RESENTB  EQU   A00030+00000000     1 BIT(S)                             08330000
A00031   EQU   A00030+00000000     1 BIT(S)                             08340000
@DATEND  EQU   *                                                        08350000
@9FC     EQU   CUTEST2A                                                 08360000
@9F9     EQU   CUTEST08                                                 08370000
@9E4     EQU   CUTEST09                                                 08380000
         END    ,(C'PL/S',1400,74344)                                   08390000
