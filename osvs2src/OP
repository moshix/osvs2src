         MACRO                                                          00050000
&MNEM    OP    &IOP,                    INT OPCODE - OMITTED FOR ASMOPS*00100000
               &INPC=YES,               INITIATE PRIVATE CODE          *00150000
               &INHB=NO,                START,DSECT,CSECT,COM HAVE'YES'*00200000
               &DEF=YES,                STMT MAY AFFECT STOR ASS OR ESD*00250000
               &REF=YES,                OPND MAY CONTAIN SYMBOL REF    *00300000
               &REQOP=NO                OPERAND SCAN REQUIRED           00350000
.*                                                                      00400000
         GBLA  &SHIFT(8)                USED IN FOLDING MNEMONIC        00450000
         GBLA  &CHAIN(71)               STATISTICS FOR EACH CHAIN       00500000
         GBLC  &SEARCH(71)              CHAINS - FOR DOCUMENTATION ONLY 00550000
         GBLC  &TABLE(71)               NAME OF PREVIOUS ENTRY IN CHAIN 00600000
         GBLC  &CHARVAL                 VALID CHARACTERS FOR MNEMONICS  00650000
.*                                                                      00700000
         LCLA  &HASHVAL                 HASH VALUE                      00750000
         LCLA  &COUNT,&INDEX            SCRATCHPADS                     00800000
         LCLA  &TYP                     TYPE OF OP                      00850000
         LCLB  &FLAGA(8)                FLAGA                           00900000
         LCLC  &STRING                  SCRATCHPAD                      00950000
         LCLC  &COMMENT                 USED FOR GENERATING VAR CMTS    01000000
         LCLC  &MI                      MNEMONIC IN INTERNAL CODE       01050000
.*                                                                      01100000
.* CHECK PARAMETERS                                                     01150000
.*                                                                      01200000
         AIF   ('&IOP' EQ '').IOPOK     GO IF IOP OMITTED               01250000
         AIF   (T'&IOP EQ 'N' AND '&IOP'(1,1) EQ 'X' AND K'&IOP LT     *01300000
               8 ).IOPOK                GO IF MACHINE OP                01350000
         MNOTE '***  ERROR  *** - &IOP'                                 01400000
         MEXIT                                                          01450000
.IOPOK   AIF   ('&INPC' EQ 'YES' OR '&INPC' EQ 'NO').INPCOK             01500000
         MNOTE '***  ERROR  *** - INPC=&INPC'                           01550000
         MEXIT                                                          01600000
.INPCOK  AIF   ('&INHB' EQ 'YES' OR '&INHB' EQ 'NO').INHBOK             01650000
         MNOTE '***  ERROR  *** - INHB=&INHB'                           01700000
         MEXIT                                                          01750000
.INHBOK  AIF   ('&DEF' EQ 'YES' OR '&DEF' EQ 'NO').DEFOK                01800000
         MNOTE '***  ERROR  *** - DEF=&DEF'                             01850000
         MEXIT                                                          01900000
.DEFOK   AIF   ('&REF' EQ 'YES' OR '&REF' EQ 'NO').REFOK                01950000
         MNOTE '***  ERROR  *** - REF=&REF'                             02000000
         MEXIT                                                          02050000
.REFOK   AIF   ('&REQOP' EQ 'YES' OR '&REQOP' EQ 'NO').REQOPOK          02100000
         MNOTE '***  ERROR  *** - REQOP=&REQOP'                         02150000
         MEXIT                                                          02200000
.REQOPOK ANOP                                                           02250000
.*********************************************************************. 02300000
.*                                                                   *. 02350000
.* CALCULATE HASH NUMBER,GENERATE CHAIN POINTER AND UPDATE HASH TABLE*. 02400000
.*                                                                   *. 02450000
.*********************************************************************. 02500000
.*                                                                      02550000
.*   CALCULATE HASH NUMBER (AND BUILD MNEM IN INT CODE CONCURRENTLY)    02600000
.*                                                                      02650000
.HOUT    ANOP                           OUTER LOOP FOR HASHING          02700000
&COUNT   SETA  &COUNT+1                 POINT TO NEXT CHAR IN MNEMONIC  02750000
&MI      SETC  '&MI,J'.'&MNEM'(&COUNT,1) APPEND ',J' AND NEXT CHAR      02800000
&INDEX   SETA  1                        POINT TO FIRST CHAR IN CHARVAL  02850000
.HIN     AIF   ('&MNEM'(&COUNT,1) EQ '&CHARVAL'(&INDEX,1)).HFOUND       02900000
&INDEX   SETA  &INDEX+1                 NO MATCH - TRY NEXT CHAR        02950000
         AIF   (&INDEX LE K'&CHARVAL).HIN  ... IF THERE IS ONE          03000000
&STRING  SETC  '&MNEM'(&COUNT,1)        EXTRACT CHARACTER IN ERROR      03050000
         MNOTE '***  ERROR  *** - INVALID CHARACTER &STRING IN &MNEM'   03100000
         MEXIT                                                          03150000
.HFOUND  ANOP                                                           03200000
&HASHVAL SETA  &HASHVAL+(&INDEX+9)*&SHIFT(&COUNT) ADD WEIGHTED VALUE    03250000
         AIF   (&COUNT LT K'&MNEM).HOUT GO IF SCAN OF MNEM NOT COMPLETE 03300000
&HASHVAL SETA  &HASHVAL-&HASHVAL/71*71+1     HERE IS THE HASH NUMBER    03350000
&CHAIN(&HASHVAL) SETA &CHAIN(&HASHVAL)+1 COLLECT STATISTICS             03400000
.*                                                                      03450000
.*   GENERATE CHAIN POINTER                                             03500000
.*                                                                      03550000
&STRING  SETC  '&TABLE(&HASHVAL)-JOPTABLE'                              03600000
&COMMENT SETC  (20-K'&STRING)' '.'PTR TO PREV ENTRY IN CHAIN &HASHVAL'  03650000
&MNEM    DC    AL2(&STRING)&COMMENT                                     03700000
.*                                                                      03750000
.*   UPDATE HASH TABLE                                                  03800000
.*                                                                      03850000
&TABLE(&HASHVAL) SETC '&MNEM'           REMEMBER THIS ENTRY             03900000
&SEARCH(&HASHVAL) SETC '->&MNEM'.'&SEARCH(&HASHVAL)'   BUILD CHAIN      03950000
.*********************************************************************. 04000000
.*                                                                   *. 04050000
.* FIND TYPE OF OP BY LOOKING AT IOP,WHICH MUST BE SPECIFIED AS      *. 04100000
.* X'HH' OR X'HHHH' FOR MACHINE OPS, X'HHM' FOR EXTENDED MNEMONICS,  *. 04150000
.* AND OMITTED FOR ASSEMBLER OPS.THE TYPE IS SET TO                  *. 04200000
.*       0 - MACHINE OP, 1-BYTE OPCODE                               *. 04250000
.*       1 - EXTENDED MNEMONIC                                       *. 04300000
.*       2 - MACHINE OP, 2-BYTE OPCODE                               *. 04350000
.*       3 - ASSEMBLER OP                                            *. 04400000
.*                                                                   *. 04450000
.*********************************************************************. 04500000
&TYP     SETA  K'&IOP/K'&IOP            0 IF OMITTED,1 IF NOT           04550000
&TYP     SETA  &TYP*(K'&IOP-5)+(1-&TYP)*3 SET TYPE AS IN BOX ABOVE      04600000
.*********************************************************************. 04650000
.*                                                                   *. 04700000
.* GENERATE 'FLAGS' BYTE                                             *. 04750000
.*                                                                   *. 04800000
.*********************************************************************. 04850000
&INDEX   SETA  &TYP*(3-&TYP)+1          SHOWS THAT INDEX IS REDUNDANT   04900000
&COUNT   SETA  K'&MNEM-1                LENGTH OF MNEM -1               04950000
&STRING  SETC  'XL.2''&INDEX'',XL.2''&TYP'',XL.1''0'',XL.3''&COUNT'''   05000000
         DC    &STRING                            FLAGS                 05050000
.*********************************************************************. 05100000
.*                                                                   *. 05150000
.* GENERATE MNEMONIC IN INTERNAL CODE                                *. 05200000
.*                                                                   *. 05250000
.*********************************************************************. 05300000
&STRING  SETC  '&MI'(2,K'&MI-1)         REMOVE FIRST COMMA              05350000
         DC    AL1(&STRING)                       MNEMONIC IN INT CODE  05400000
.*********************************************************************. 05450000
.*                                                                   *. 05500000
.* GENERATE FLAGA                                                    *. 05550000
.*                                                                   *. 05600000
.*********************************************************************. 05650000
&FLAGA(1) SETB (&TYP EQ 3)              1 FOR ASM OPS                   05700000
&FLAGA(3) SETB ('&INPC' EQ 'YES')       INITIATE PRIVATE CODE           05750000
&FLAGA(4) SETB ('&INHB' EQ 'YES')       INHIBIT PRIVATE CODE            05800000
&FLAGA(5) SETB ('&DEF' EQ 'YES')        STMT MAY AFFECT STOR ASS OR ESD 05850000
&FLAGA(6) SETB ('&REF' EQ 'YES')        OPND MAY CONTAIN SYMBOL REF     05900000
         AIF   (NOT &FLAGA(1)).MOP      GO IF NOT ASM OP                05950000
&FLAGA(2) SETB ('&MNEM' EQ 'EXTRN' OR '&MNEM' EQ 'WXTRN' OR            *06000000
               '&MNEM' EQ 'ENTRY')                                      06050000
&FLAGA(7) SETB ('&REQOP' EQ 'YES')      OPND SCAN REQUIRED              06100000
&FLAGA(8) SETB ('&MNEM' EQ 'DC' OR '&MNEM' EQ 'DS' OR '&MNEM' EQ 'DXD') 06150000
         AGO   .FLAGA                                                   06200000
.MOP     ANOP                                                           06250000
&FLAGA(2) SETB (&TYP NE 0)              1 FOR EXT MNEM OR 2-BYTE OPCODE 06300000
.*   CALCULATE INSTRUCTION LENGTH FROM FIRST TWO BITS OF OPCODE         06350000
&COUNT   SETA  &IOP/B'1000000'          SHIFT RIGHT 6 BITS              06400000
         AIF   (&TYP EQ 0).MOPL         GO IF 1-BYTE OPCODE             06450000
&COUNT   SETA  &COUNT/B'10000'          SHIFT ANOTHER 4 BITS            06500000
         AIF   (&TYP EQ 1).MOPL         GO IF EXT MNEMONIC              06550000
&COUNT   SETA  &COUNT/B'10000'          2-BYTE OPCODE - SHIFT 4 MORE    06600000
.MOPL    ANOP                                                           06650000
&FLAGA(7) SETB (&COUNT EQ 3)            INSTR LENGTH IS 6 BYTES         06700000
&FLAGA(8) SETB (&COUNT EQ 1 OR &COUNT EQ 2)  INSTR LENGTH IS 4 BYTES    06750000
.FLAGA   ANOP                                                           06800000
&STRING  SETC  '&FLAGA(1)&FLAGA(2)&FLAGA(3)&FLAGA(4)&FLAGA(5)&FLAGA(6)&*06850000
               FLAGA(7)&FLAGA(8)'       SET FLAGA                       06900000
         DC    B'&STRING'                         FLAGA                 06950000
.*********************************************************************. 07000000
.*                                                                   *. 07050000
.* GENERATE INTERNAL OPCODE (INCLUDING MASK FOR EXT MNEMONICS)       *. 07100000
.*                                                                   *. 07150000
.*********************************************************************. 07200000
         AIF   (&TYP NE 3).T012                                         07250000
&STRING  SETC  'AL1(JT&MNEM)'           ASM OP - SET INTERNAL OPCODE    07300000
         AGO   .IOP                                                     07350000
.T012    ANOP                           MACHINE OP                      07400000
&COUNT   SETA  4*(&TYP+2)               SET BIT LENGTH                  07450000
&STRING  SETC  'XL.&COUNT'.'&IOP'(2,K'&IOP-1)                           07500000
.IOP     ANOP                                                           07550000
         DC    &STRING                            INTERNAL OPCODE       07600000
         SPACE                                                          07650000
         MEND                                                           07700000
