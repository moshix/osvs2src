         MACRO                                                          00100002
&TAG  RPTDSECT &T=,&TYPE=,&LIST=,&SCAN=,&GEN=,&DS=NO                    00200002
         GBLC  &IGAHVFC  THE OFFSET IN THE RPT HEADER TO THE ADDRESS OF*00300002
                         THE FIXEDHDR FOR THE INNER VERTEX SPACE CHAIN. 00400002
         GBLC  &IGABLST  THE OFFSET INTO THE TREE HEADER FOR THE LIST  *00500002
                         OF RPT ENTRY POINTS.                           00600002
         GBLC  &IGAGKW   THE OFFSET IN THE IGARPT01 MODULE TO THE      *00700002
                         ROUTINE TO GET A WORK AREA FOR COLLECTING     *00800002
                         KEYS.                                          00900002
         GBLC  &IGABFIN  THE SIZE OF THE RESERVED LIST OF ENTRY POINT  *01000002
                         ADDRESSES IN THE TREE HEADER.                  01100002
         GBLC  &IGASCH8  THE OFFSET IN THE RPT MODULE FOR THE TYPE 8   *01200002
                         SEARCH ROUTINE.                                01300002
         GBLC  &IGADEL8  THE OFFSET IN THE IGARPT01 MODULE TO THE TYPE *01400002
                         8 RPT DELETE ROUTINE.                          01500002
         GBLC  &IGAINS8  THE OFFSET IN THE MODULE IGARPT01 TO THE      *01600002
                         ROUTINE TO INSERT IN A TYPE 8 RPT.             01700002
         GBLC  &IGALSCN  THE OFFSET TO THE ROUTINE TO SCAN LEFT IN THE *01800002
                         MODULE IGARPT01.                               01900002
         GBLC  &IGARSCN  THE OFFSET TO THE ROUTINE TO SCAN RIGHT IN THE*02000002
                         MODULE IGARPT01.                               02100002
         GBLC  &IGASPV   THE OFFSET TO THE PARTIAL ORDER SEARCH ROUTINE*02200002
                         IN THE MODULE IGARPT01.                        02300002
         GBLC  &IGAPVG   THE OFFSET TO THE ROUTINE TO GET THE PARTIAL  *02400002
                         ORDER VALUE FOR THE CURRENT SINK IN THE MODULE*02500002
                         IGARPT01.                                      02600002
         GBLC  &IGAPVAJ   THE OFFSET TO THE ROUTINE TO ADJUST THE      *02700002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK IN   *02800002
                         THE IGARPT01 MODULE.                           02900002
         GBLC  &IGADSP8  THE OFFSET TO THE ROUTINE TO DISPLAY A TYPE 8 *03000002
                         RPT IN THE MODULE IGARPT01.                    03100002
         GBLC  &IGASRCH,&IGAINS,&IGADEL,&IGAFTRE                        03200002
         GBLC  &IGAKEYW  THE INDEX OF THE ADDRESS OF THE ROUTINE TO GET*03300002
                         A WORK AREA FOR COLLECTING KEYS FOR SEARCH.    03400002
         GBLC  &IGASCNL,&IGASCNR,&IGAFSP                                03500002
         GBLC  &IGAFSPS  OFFSET FOR THE BRANCH ENTRY TO THE FSPACE     *03600002
                         PROGRAM WHEN THE SPACE CONTROL ADDRESS IS     *03700002
                         CODED IN THE FSPACE MACRO-INSTRUCTION.         03800002
         GBLC  &IGAFSPF  BRANCH ENTRY OFFSET FOR FSPACE WITH A FIXED   *03900002
                         LENGTH ENTRY USING A FIXEDHDR.                 04000002
         GBLC  &IGAFS8,&IGAFS12,&IGAFS80  THE ENTRY POINTS TO RELEASE  *04100002
               ENTRIES OF THE RESPECTIVE LENGTHS USING THE FIXEDHDR IN *04200002
               A SPACE CONTROL AREA.                                    04300002
         GBLC  &IGASTRE,&IGAGSP                                         04400002
         GBLC  &IGAINS5,&IGADEL5                                        04500002
         GBLC  &IGAEOPV  THE OFFSET TO THE PATH CODE BYTE IN THE TYPE 8*04600002
                         RPT HEADER FOR THE PATH TO THE SINK CURRENTLY *04700002
                         SELECTED BY THE CURSOR.                        04800002
         GBLC  &IGACNT5  THE OFFSET TO THE USE COUNTER IN THE TYPE 5   *04900002
                         RPT HEADER.                                    05000002
         GBLC  &IGAMSK5  THE OFFSET TO THE TABLE OF MASKS FOR TYPE 5   *05100002
                         RPT.                                           05200002
         GBLC  &IGATOP5  THE OFFSET TO THE RPT SOURCE IN THE TYPE 5 RPT*05300002
                         HEADER.                                        05400002
         GBLC  &IGAMAX   THE OFFSET TO THE WORD CONTAINING THE MAXIMUM *05500002
                         PARTIAL ORDER VALUE.                           05600002
         GBLC  &IGADJPV    ENTRY OFFSET FOR PARTIAL ORDER ADJUSTMENT.   05700002
         GBLC  &IGAPVS     ENTRY POINT FOR PARTIAL ORDER SEARCH.        05800002
         GBLC  &IGAGPV     ENTRY OFFSET FOR GETTING PARTIAL ORDER VALUE 05900002
         GBLC  &IGAISP   BRANCH ENTRY OFFSET FOR SPACE CONTROL SETUP.   06000002
         GBLC  &IGAFRSC  BRANCH ENTRY OFFSET TO THE ROUTINE TO RELEASE *06100002
                         A SPACE CONTROL AREA AND ALL OF ITS RELATED   *06200002
                         SPACE VIA THE FREEMAIN MACRO-INSTRUCTION.      06300002
         GBLC  &IGAGSPF  BRANCH ENTRY OFFSET FOR FIXED LENGTH ENTRIES  *06400002
                         USING A FIXEDHDR FROM THE GSPACE MACRO OR FROM*06500002
                         INSIDE THE MODULE IGARPT01.                    06600002
         GBLC  &IGAGSPS  BRANCH ENTRY OFFSET FOR VARIABLE LENGTH SPACE *06700002
                         ALLOCATION WHEN THE SPACE CONTROL ADDRESS IS  *06800002
                         CODED IN THE GSPACE MACRO-INSTRUCTION.         06900002
         GBLC  &IGAGS8,&IGAGS12,&IGAGS80  THE BRANCH ENTRY OFFSETS FOR *07000002
                         THE ROUTINES TO ALLOCATE SPACE FOR THE        *07100002
                         RESPECTIVE FIXED LENGTHS IN A SPACE CONTROL A. 07200002
         GBLC  &IGACON   THE OFFSET TO THE CONTANT AREA.                07300002
         GBLC  &IGANAME    THE NAME OF THE PROGRAM.                     07400002
         GBLC  &IGADSP         BRANCH ENTRY FOR DSPRPT.                 07500002
         GBLC  &IGAISCN  THE INDEX OF THE ADDRESS OF THE ROUTINE TO USE*07600002
                         IN THE MODULE IGARPT01 TO INITIALIZE FOR      *07700002
                         SUBSEQUENT SCANNING OPERATIONS FOR SOME RPT'S. 07800002
         GBLC  &IGADDR   THE OFFSET TO THE ADDRESS OF THE MODULE       *07900002
                        IGARPT01 FROM THE BEGINNING OF THE TREE HEADER. 08000002
         GBLA  &IGALEFT(256)  GLOBAL INDEXED VARIABLE FOR LEFT EDGES    08100002
.*                             IN THE BINARY PARSE TREE.                08200002
         GBLA  &IGARGHT(256)   GLOBAL VECTOR FOR RIGHT EDGES.           08300002
         GBLB  &IGARL(256)     GLOBAL VECTOR FOR RIGHT/LEFT FLAGS.      08400002
         GBLB  &IGAIS(256)     GLOBAL VECTOR FOR INNER/SINK STATUS.     08500002
         GBLA  &IGAPATH(16)  PATH VECTOR TO ATOMIC ELEMENT IN PARSE.    08600002
         GBLA  &IGALEVL      PATH LENGTH TO ATOM IN PARSE TREE.         08700002
         GBLB  &IGAOKAY  GLOBAL FOR INDICATING VALID SYNTAX.            08800002
         GBLB  &IGAPGM   FOR USE IN IGARPTXX MODULES ONLY.              08900002
         GBLB  &IGALOAD  1 IF PGM IS LOADED VIA LOAD MACRO.             09000002
         GBLB  &IGAXTRN  1 IF THE EXTRN HAS BEEN GENERATED.             09100002
         GBLB  &IGALONE  ON FOR STAND-ALONE OPERATION OF THE RPTS      *09200002
               COMPONENT FOR UNIT TESTING.                              09300002
         GBLB  &IGAFTCH  ON TO FAKE OUT THE CVTRPT AND TCBRPT LOADS    *09400002
                         WHEN THE RPTS COMPONENT IS BEING UNIT TESTED.  09500002
         GBLC  &IGARPT#  RADIX PARTITION TREE TYPE.                     09600002
         GBLB  &RPTVNUM(16)    INDEXED GLOBAL LOGICAL VECTOR FOR C      09700002
.*                             CONTROLLING THE GENERATION OF DSECTS.    09800002
         GBLB  &IGASPDS  THIS BIT IS ON IF THE SPACE CONTROL DSECT HAS *09900002
                         ALREADY BEEN GENERATED.                        10000002
         GBLC  &IGASA0   OFFSET TO THE FIRST SAVE AREA.                 10100002
         GBLC  &IGASA1   OFFSET TO THE SECOND SAVE AREA IN THE SPACE   *10200002
                         CONTROL AREA.                                  10300002
         GBLC  &IGAS8    THE OFFSET TO THE 8-BYTE FREE SPACE CHAIN.     10400002
         GBLC  &IGAS12   THE OFFSET TO THE 12-BYTE FREE SPACE CHAIN.    10500002
         GBLC  &IGAS80   THE OFFSET TO THE 80-BYTE FREE SPACE CHAIN.    10600002
         GBLC  &IGASPZ   LENGTH OF THE SPACE CONTROL AREA.              10700002
         GBLA  &IGAMINP  THE MINIMUM SIZE NEEDED FOR A TYPE 8 TREE.     10800002
         GBLA  &IGAMINS  THE MINIMUM REFILL SIZE NEEDED FOR A TYPE 8.   10900002
         GBLA  &IGAX     TRIPLE FOR LEFT LIST SCAN OF THE BINARY PARSE  11000002
         GBLA  &IGAY     TREE THAT RESULTS FROM EXECUTING RPTDSECT WITH 11100002
         GBLA  &IGAZ     THE LIST PARAMETER CODED.                      11200002
         LCLA  &N        A LOCAL TEMPORARY INDEX FOR SUBSCRIPTING       11300002
.*                       INDEXED VARIABLES.                             11400002
.*A000000                                                        Y02147 11500002
.********************************************************************** 11600002
         LCLA  &X        STRING SCANNER.                                11700002
         LCLA  &Y        LIMIT OF NUMBER OF ELEMENTS.                   11800002
         LCLC  &CHAR     CURRENT LIST CHARACTER.                        11900002
         LCLA  &P        PREDECESSOR OF CURRENT VERTEX IN PARSE TREE.   12000002
         LCLA  &C        CURRENT VERTEX IN PARESE TREE.                 12100002
         LCLA  &S        SUCCESSOR OF CURRENT VERTEX IN PARSE TREE.     12200002
         LCLA  &NX       INDEX OF NEXT AVAILABLE VERTEX.                12300002
&IGAXTRN SETB  (0)   TURN OFF THE EXTRN SYMBOL IN STREE.                12400002
         AIF   (K'&GEN NE 0).GEN  GO IF THE GEN PARAMETER IS CODED.     12500002
         AIF   (K'&T EQ 0).OLDT  SEE IF THE NEW TYPE IS CODED.          12600002
&TAG  RPTDSECT TYPE=&T,LIST=&LIST,SCAN=&SCAN,DS=&DS,GEN=&GEN            12700002
         AGO   .FIN                                                     12800002
.OLDT    ANOP                                                           12900002
         AIF   (K'&TAG EQ 0).NOTAG  SEE IF THERE IS A LABEL ON IT.      13000002
&TAG     EQU   *                                                        13100002
.NOTAG   ANOP                                                           13200002
         AIF   ((K'&SCAN NE 0) OR (K'&TYPE NE 0)).GOOD  CHK 4 AT LEAST  13300002
.*                                                   1 OPERAND.         13400002
         MNOTE 12,'NO KEYWORDS CODED FOR RPTDSECT; &SCAN CODED.'        13500002
         MEXIT                                                          13600002
.GOOD    ANOP                                                           13700002
&IGARPT# SETC  '&TYPE'   SET THE RPT #.                                 13800002
         AIF   (K'&TYPE NE 0).VERSION  CHECK FOR RPT TYPE.              13900002
         AIF   (('&SCAN' EQ 'NEXT')OR('&SCAN' EQ 'ISCAN')).ITSCAN       14000002
         AIF   ('&SCAN' EQ 'PARSE').PARSE          CHECK FOR PARSE REQ. 14100002
         MNOTE 12,'SCAN PARAMTER INCORRECT IN RPTDSECT; &SCAN CODED.'   14200002
         MEXIT                                                          14300002
.PARSE   ANOP                                                           14400002
.*--------------------------------------------------------------------* 14500002
.*       PARSE THE LIST INTO A BINARY PARSE TREE.                     * 14600002
.*--------------------------------------------------------------------* 14700002
&X       SETA  (1)       SET &X TO THE INDEX OF THE FIRST CHARACTER IN  14800002
.*                       THE STRING TO BE PARSED.                       14900002
&Y       SETA  (1+K'&LIST)     SET &Y TO THE INDEX OF THE FIRST         15000002
.*                             CHARACTER POSITION AFTER THE LAST        15100002
.*                             CHARACTER IN THE STRING TO BE PARSED.    15200002
&P       SETA  1         SET &P TO THE SOURCE OF THE PARSE TREE.        15300002
&C       SETA  1         SET &C TO THE SOURCE OF THE PARSE TREE.        15400002
&NX      SETA  1         SET &NX TO ONE LESS THAN THE NEXT AVAILABLE    15500002
.*                       VERTEX.                                        15600002
&IGARL(&C)     SETB      (0)   SET THE SOURCE TO A LEFT SUCCESSOR.      15700002
&IGAIS(&C)     SETB      (1)   SET THE SOURCE AS AN INNER VERTEX.       15800002
.********************************************************************** 15900002
.*       IS THERE A LEFT EDGE FROM THE CURRENT VERTEX?                * 16000002
.********************************************************************** 16100002
.ISLEFT  ANOP                                                           16200002
         AIF   (&X EQ &Y).LEOS GO IF THE END OF STRING REACHED.         16300002
&CHAR    SETC  '&LIST'(&X,1)   EXTRACT THE CURRENT CHARACTER.           16400002
&X       SETA  (&X+1)          EKE THE INDEX TO THE NEXT CHARACTER.     16500002
         AIF   ('&CHAR' EQ '(').LLPAREN  AGO IF LEFT PAREN FOUND.       16600002
         AIF   ('&CHAR' EQ ')').LRPAREN  AGO IF RIGHT PAREN FOUND.      16700002
         AIF   ('&CHAR' EQ ',').LCOMMA   AGO IF COMMA FOUND.            16800002
.*--------------------------------------------------------------------* 16900002
.* THE LEFT EDGE GOES TO AN ATOMIC SYMBOL, COLLECT THE SYMBOL AND PUT * 17000002
.* THE LEFT EDGE OF THE CURRENT VERTEX GOING TO IT.                   * 17100002
.*--------------------------------------------------------------------* 17200002
&NX      SETA  (1+&NX)   ESTABLISH PLACE TO PUT THE DEFINITION OF ATOM. 17300002
&IGALEFT(&NX) SETA (&X-1)      INDEX OF FIRST CHARACTER OF ATOM.        17400002
.COLLECT ANOP                                                           17500002
         AIF   (&X EQ &Y).STORE2       SEE IF EOS AFTER ATOM.           17600002
&CHAR    SETC  '&LIST'(&X,1)   PICK OUT THE NEXT CHARACTER.             17700002
&X       SETA  (&X+1)    EKE INDEX TO NEXT CHARACTER.                   17800002
         AIF   ('&CHAR' EQ '(').STORE  AGO IF ATOM ALL COLLECTED.       17900002
         AIF   ('&CHAR' EQ ')').STORE  AGO IF ATOM ALL COLLECTED.       18000002
         AIF   ('&CHAR' NE ',').COLLECT  AGO IF ATOM NOT YET COLLECTED. 18100002
.STORE   ANOP                                                           18200002
&IGARGHT(&NX) SETA (&X-(1+&IGALEFT(&NX)))  COMPUTE LENGTH OF ATOM.      18300002
&IGALEFT(&C) SETA (&NX-&P)  FILL IN LEFT EDGE TO ATOM.                  18400002
&IGARL(&NX) SETB (0)     FLAG AS LEFT SUCCESSOR.                        18500002
&IGAIS(&NX)  SETB (0)    FLAG AS A SINK.                                18600002
         AGO   .RIGHTIN        INTERROGATE CHARACTER.                   18700002
.STORE2  ANOP                                                           18800002
&IGARGHT(&NX) SETA (&X-(&IGALEFT(&NX)))  COMPUTE LENGTH OF ATOM.        18900002
&IGALEFT(&C) SETA (&NX-&P)     FILL IN LEFT EDGE TO ATOM.               19000002
&IGARL(&NX) SETB (0)     FLAG ATOMIC VERTEX AS LEFT SUCCESSOR.          19100002
&IGAIS(&NX) SETB (0)     FLAG ATOMIC VERTEX AS A SINK.                  19200002
         AGO   .REOS     GO TO RIGHT EOS SEQUENCE.                      19300002
.*--------------------------------------------------------------------* 19400002
.* THE LEFT EDGE GOES TO AN EMPTY LIST, SINCE THE CURRENT CHARACTER   * 19500002
.* IS A COMMA.                                                        * 19600002
.*--------------------------------------------------------------------* 19700002
.LCOMMA  ANOP                                                           19800002
&IGALEFT(&C) SETA (0-&P)  SET THE LEFT EDGE EMPTY.                      19900002
         AGO   .MAKRGHT        GO ESTABLISH A RIGHT SUCCESSOR.          20000002
.*--------------------------------------------------------------------* 20100002
.* THERE IS A LIST FOR THE LEFT SUCCESSOR, BECAUSE THE CURRENT        * 20200002
.* CHARACTER IS A LEFT PARENTHESIS.                                   * 20300002
.*--------------------------------------------------------------------* 20400002
.LLPAREN ANOP                                                           20500002
&NX      SETA  (&NX+1)   ESTABLISH A LEFT SUCCESSOR INNER VERTEX.       20600002
&IGARL(&NX) SETB (0)  MAKE NEW INNER VERTEX A LEFT SUCCESSOR.           20700002
&IGAIS(&NX) SETB (1)  MAKE NEW VERTEX AN INNER VERTEX.                  20800002
&IGALEFT(&C) SETA (&NX-&P)     FILL IN LEFT SUBTRACTION INVERTIBLE EDGE 20900002
.*                             TO THE NEW LEFT INNER VERTEX.            21000002
&P       SETA  (&C)      TRACE THE EDGE TO THE NEW LEFT INNER VERTEX.   21100002
&C       SETA  (&NX)     XX                                             21200002
         AGO   .ISLEFT   GO BACK TO LOOK FOR A LEFT EDGE.               21300002
.*--------------------------------------------------------------------* 21400002
.* THERE IS NO LEFT EDGE, BECAUSE THE CURRENT CHARACTER IS A RIGHT    * 21500002
.* PARENTHESIS. NOW THE BACKPATH MUST BE TRACED TO THE MATCHING LEFT  * 21600002
.* PARENTHESIS.                                                       * 21700002
.*--------------------------------------------------------------------* 21800002
.LRPAREN ANOP                                                           21900002
&IGALEFT(&C) SETA (0-&P)  SET LEFT INVERTIBLE SUBTRACTION EDGE EMPTY.   22000002
.RRPAREN ANOP                                                           22100002
&IGARGHT(&C) SETA (0-&P)  ESTABLISH A NULL RIGHT EDGE TOO.              22200002
.*--------------------------------------------------------------------* 22300002
.* TRACE THE BACKPATH TO FIND THE FIRST LEFT SUCCESSOR ON THE WAY TO  * 22400002
.* THE SOURCE. THAT VERTEX SHOULD BE THE PREDECESSOR OF THE FIRST     * 22500002
.* VERTEX IN THE SUBLIST THAT STARTED WITH THE LEFT PARENTHESIS THAT  * 22600002
.* MATCHED THE CUURENT RIGHT PARENTHESIS.                             * 22700002
.*--------------------------------------------------------------------* 22800002
         AIF   (NOT &IGARL(&C)).RPISBAK  GO IF &C IS A LEFT SUCCESSOR.  22900002
.RPBACK  ANOP                                                           23000002
&S       SETA  (&C)      CYCLE THE THREE VERTICES UP THE BACKPATH.      23100002
&C       SETA  (&P)      XX                                             23200002
&P       SETA  (&S-&IGARGHT(&C))  TRACE THE RIGHT EDGE BACKWARD.        23300002
         AIF   (&IGARL(&C)).RPBACK     TRACE UNTIL IT FINDS A LEFT SIDE 23400002
.*--------------------------------------------------------------------* 23500002
.RPISBAK ANOP                                                           23600002
         AIF   (&C EQ 1).ERROR  SEE IF THE SOURCE WAS REACHED; I. E.    23700002
.*                              NO MATCHING LEFT PARENTHESIS.           23800002
&S       SETA  (&C)      TRACE THE EDGE BACK TO THE PREDECESSOR OF      23900002
&C       SETA  (&P)      THE FIRST LEFT SUCCESSOR FOUND ON THE          24000002
&P       SETA  (&S-&IGALEFT(&C))  BACKPATH.                             24100002
         AGO   .ISRIGHT                                                 24200002
.*--------------------------------------------------------------------* 24300002
.* THERE IS NO LEFT OR RIGHT EDGE, BECAUSE THE END OF THE STRING      * 24400002
.* HAS BEEN ENCOUNTERED.                                              * 24500002
.*--------------------------------------------------------------------* 24600002
.LEOS    ANOP                                                           24700002
&IGALEFT(&C) SETA (0-&P)  SET LEFT INVERTIBLE EDGE NULL.                24800002
.REOS    ANOP                                                           24900002
&IGARGHT(&C) SETA (0-&P)  SET RIGHT INVERTIBLE EDGE NULL.               25000002
         AIF   (NOT &IGARL(&C)).EOSBAK  CONTINUE UNTIL THE FIRST LEFT.  25100002
.EOSBACK ANOP                                                           25200002
&S       SETA  (&C)      TRACE THE BACKPATH TO THE FIRST LEFT           25300002
&C       SETA  (&P)            SUCCESSOR.                               25400002
&P       SETA  (&S-&IGARGHT(&C))                                        25500002
         AIF   (&IGARL(&C)).EOSBACK    CHECK FOR A RIGHT SUCCESSOR.     25600002
.EOSBAK  ANOP                                                           25700002
         AIF   (&C NE 1).ERROR                                          25800002
&IGAOKAY SETB  (1)       INDICATE VALID SYNTAX.                         25900002
         MEXIT                                                          26000002
.********************************************************************** 26100002
.* IS THERE A RIGHT EDGE?                                             * 26200002
.********************************************************************** 26300002
.ISRIGHT ANOP                                                           26400002
         AIF   (&X EQ &Y).REOS  GO IF END OF STRING REACHED.            26500002
&CHAR    SETC  '&LIST'(&X,1)   GET CURRENT CHARACTER.                   26600002
&X       SETA  (&X+1)    EKE TO NEXT CHARACTER.                         26700002
.RIGHTIN ANOP                                                           26800002
         AIF   ('&CHAR' EQ ',').MAKRGHT                                 26900002
         AIF   ('&CHAR' EQ ')').RRPAREN                                 27000002
         AGO   .ERROR                                                   27100002
.*--------------------------------------------------------------------* 27200002
.* THERE IS A RIGHT EDGE, THE CURRENT CHARACTER IS A COMMA.           * 27300002
.*--------------------------------------------------------------------* 27400002
.MAKRGHT ANOP                                                           27500002
&NX      SETA  (&NX+1)   GET A PLACE FOR THE NEW RIGHT SUCCESSOR.       27600002
&IGARL(&NX) SETB (1)     INDICATE RIGHT SUCCESSOR.                      27700002
&IGARGHT(&C) SETA (&NX-&P)  STORE RIGHT INVERTIBLE EDGE.                27800002
&IGAIS(&NX) SETB (1)     INDICATE AN INNER VERTEX.                      27900002
&P       SETA  (&C)      TRACE OVER TO THE NEW RIGHT SUCCESSOR.         28000002
&C       SETA  (&NX)     XX                                             28100002
         AGO   .ISLEFT                                                  28200002
.*--------------------------------------------------------------------* 28300002
.ERROR   ANOP                                                           28400002
&IGAOKAY SETB  (0)       INDICATE INVALID SYSNTAX.                      28500002
         MEXIT                                                          28600002
.********************************************************************** 28700002
.ITSCAN  AIF   ('&SCAN' NE 'ISCAN').TRYNEXT  GO IF NOT 1ST INITIALIZE.  28800002
.* INITIALIZE FOR LEFT LIST SCANNING.                                 * 28900002
.*--------------------------------------------------------------------* 29000002
&IGAX    SETA  (1)       SET IT TO THE SOURCE.                          29100002
&IGAY    SETA  (0)       SIGNAL THAT ISCAN HAS BEEN DONE.               29200002
&IGAZ    SETA  (0)       DON'T CAUSE ANY CONFUSION.                     29300002
&IGALEVL SETA  (0)                                                      29400002
         MEXIT                                                          29500002
.*--------------------------------------------------------------------* 29600002
.*  COME HERE FOR THE REAL SCANNING, AFTER THE ISCAN.                 * 29700002
.*--------------------------------------------------------------------* 29800002
.TRYNEXT AIF   ('&SCAN' EQ 'NEXT').DONEXT                               29900002
         MNOTE 12,'INVALID SCAN, NEXT OR ISCAN EXPECTED.'               30000002
&IGAZ    SETA  0         MAYBE IT WILL WORK ANYWAY.                     30100002
         MEXIT                                                          30200002
.DONEXT  AIF   (&IGAY NE 0).NOT1ST  CHECK FOR FIRST TIME.               30300002
.*--------------------------------------------------------------------* 30400002
.*  FIRST TIME INTO TREE FOR LEFT LIST SCAN.                          * 30500002
.*--------------------------------------------------------------------* 30600002
&IGAY    SETA  (1)       SET IT TO THE SOURCE.                          30700002
         AGO   .CHKLEFT  GO LOOK AT THE LEFT SUBTREE.                   30800002
.TREF    ANOP                                                           30900002
&IGAPATH(&IGALEVL) SETA (&IGAPATH(&IGALEVL)+1)  EKE PATH VECTOR ELEMENT 31000002
         AGO   .TEDGF                           ON THE SAME LEVEL.      31100002
.TLEF    ANOP                                                           31200002
&IGALEVL SETA  (1+&IGALEVL)  MAKE PATH VECTOR LONGER TO ATOM.           31300002
&IGAPATH(&IGALEVL) SETA (0)  SET PATH VECTOR ELEMENT TO ZERO.           31400002
.TEDGF   ANOP                                                           31500002
&IGAX    SETA  (&IGAY)   CYCLE THE THREE DOWN THE PATH.                 31600002
&IGAY    SETA  (&IGAZ)   XX                                             31700002
.CHKLEFT ANOP                                                           31800002
&IGAZ    SETA  (&IGAX+&IGALEFT(&IGAY))  TRACE LEFT EDGE (IF THERE IS 1) 31900002
         AIF   (&IGAZ NE 0).TRYLEFT    SEE IF THERE WAS A LEFT EDGE.    32000002
         MEXIT                                                          32100002
.TRYLEFT AIF   (&IGAIS(&IGAZ)).TLEF    SEE IF THE SINK WAS REACHED.     32200002
         AIF   (&IGARGHT(&IGAZ) NE 0).FINZ  SEE IF MT SINK.             32300002
&IGAZ    SETA  (0)       PRETEND EMPTY CHARACTER STRINGS AREN'T THERE.  32400002
.FINZ    MEXIT                                                          32500002
.*--------------------------------------------------------------------* 32600002
.*   INSPECT THE RIGHT SUBTREE.                                       * 32700002
.*--------------------------------------------------------------------* 32800002
.CHKRGHT ANOP                                                           32900002
.NOT1ST  ANOP                                                           33000002
&IGAZ    SETA  (&IGAX+&IGARGHT(&IGAY))  GET RIGHT SUCCESSOR (IF ANY).   33100002
         AIF   (&IGAZ NE 0).TREF       GO IF THERE IS ONE.              33200002
.CHKTOP  AIF   (&IGAY EQ 1).SOURCE     SEE IF SOURCE REACHED FROM RIGHT 33300002
         AIF   (&IGARL(&IGAY)).TREB  GO IF Y IS RIGHT SUCCESSOR.        33400002
&IGAZ    SETA  (&IGAY)   TRACE THE LEFT EDGE BACKWARD.                  33500002
&IGAY    SETA  (&IGAX)   BACKPATH TRACE.                                33600002
&IGAX    SETA  (&IGAZ-&IGALEFT(&IGAY))  BACKTRACE LEFT EDGE.            33700002
&IGALEVL SETA  (&IGALEVL-1)  GO BACK TO NEXT LOWER LEVEL.               33800002
         AGO   .CHKRGHT                                                 33900002
.TREB    ANOP                                                           34000002
&IGAPATH(&IGALEVL) SETA (&IGAPATH(&IGALEVL)-1)  DECREASE ELEMENT IN PV. 34100002
&IGAZ    SETA  (&IGAY)   BACKAPTH TRACE VIA THE RIGHT EDGE.             34200002
&IGAY    SETA  (&IGAX)   XX                                             34300002
&IGAX    SETA  (&IGAZ-&IGARGHT(&IGAY))  TRACE LEFT INVERTIBLE EDGE BACK 34400002
         AGO   .CHKTOP                                                  34500002
.SOURCE  ANOP                                                           34600002
&IGAX    SETA  (0)  SET THE EOP TRIPLE ACCORDINGLY.                     34700002
&IGAY    SETA  (0)  XX                                                  34800002
&IGAZ    SETA  (0)       THE WHOLE TREE HAS BEEN PROCESSED.             34900002
         MEXIT                                                          35000002
.********************************************************************** 35100002
.VERSION ANOP                                                           35200002
&IGABLST SETC  'X''20'''  SET THE OFFSET INTO THE TREE HEADER FOR THE  *35300002
                         LIST OF ENTRY POINTTS.                         35400002
         AIF   (K'&GEN NE 0).GEN  SEE IF THE GEN PARAMETER IS CODED.    35500002
         AIF   ('&IGARPT#' EQ 'SPACE').SPACNTL  SHOULD THE SPACE CONTROL35600002
                         DSECT BE GENERATED?                            35700002
&N       SETA  (&IGARPT#)  CONVERT THE TREE TYPE TO A #.                35800002
         AIF   (&RPTVNUM(&N)).FIN  IF IT'S ALREADY DONE, SKIP IT.       35900002
         AIF   (('&DS' EQ 'NO')OR('&DS' EQ '0')).LETIT  SEE IF THIS IS *36000002
                         NOT REALLY A REQUEST TO GENERATE THE DSECT.    36100002
&RPTVNUM(&N) SETB (1)          SET IT ON SO IT DOESN'T DO IT AGAIN.     36200002
.LETIT   ANOP                                                           36300002
         AIF   (&N EQ 8).RPTV8                                          36400002
         AIF   (&N EQ 5).RPTV5                                          36500002
         MNOTE 12,'INVALID TREE TYPE SPECIFIED.'                        36600002
         AGO   .FIN                                                     36700002
.RPTV5   ANOP                                                           36800002
&IGADDR  SETC  'X''00'''  THE OFFSET TO THE ADDRESS OF THE MODULE      *36900002
                         IGARPT01 FROM THE BEGINNING OF THE TREE HEADER.37000002
                                                                        37100002
&IGATOP5 SETC  'X''04'''  THE OFFSET TO THE SOURCE OF THE TYPE 5 RPT IN*37200002
                         THE TYPE 5 TREE HEADER.                        37300002
&IGACNT5 SETC  'X''0C'''  THE OFFSET TO THE USE COUNTER IN THE TYPE 5  *37400002
                         RPT HEADER.                                    37500002
&IGAMSK5 SETC  'X''80'''  OFFSET TO THE TABLE OF MASKS IN THE TYPE 5   *37600002
                         RPT HEADER.                                    37700002
         AIF   (('&DS'(1,1) EQ 'N')OR('&DS'(1,1) EQ '0')).RPT5END      *37800002
                         SEE IF THE DSECT IS NOT SUPPOSED TO BE        *37900002
                         GENERATED THIS TIME.                           38000002
IGARPTH5 DSECT 0         DSECT FOR SRCH5, INS5, DEL5.                   38100002
IGADDR5  DC    F'0'  THE ADDRESS OF IGARPT01.                           38200002
IGATOP5  DC    F'0'      SOURCE OF BINARY TREE.                         38300002
IGAHVFC5 DC    F'0'      HEAD OF INNER VERTEX FREE CHAIN.               38400002
IGACNT5  DC    F'0'      COUNTER FOR READ-ONLY VALIDATION.              38500002
IGAKEYI5 DC    H'0'      INDEX OF KEY IN RECORD.                        38600002
IGAKEYL5 DC    XL1'00'   THE NUMBER OF BYTES IN THE KEY.                38700002
IGASP5   DC    XL1'00'   THE SUBPOOL NUMBER FOR GETMAINS.               38800002
IGA5MARK EQU   *  THE BYTE JUST PAST THE LAST THING BEFORE THE B-LIST.  38900002
         DC    (&IGAMSK5-(IGA5MARK-IGARPTH5))XL1'00'  LEAVE ROOM.       39000002
IGAMASKS DC    128XL1'FF'  THIS IS FILLED IN BY STREE, TYPE=5.          39100002
IGAMASKZ EQU   *                                                        39200002
         CNOP  0,8       MAKE IT ON A DOUBLE WORD BOUNDARY.             39300002
IGAFIN5  EQU   *         FIRST BYTE PAST HEADER.                        39400002
IGATYP5S EQU   IGAFIN5-IGARPTH5  TREEHDR SIZE FOR TYPE 5 TREE.          39500002
&SYSECT CSECT                                                           39600002
IGAZERO  EQU   0         JUST A ZERO.                                   39700002
IGABASE5 EQU   1         THE ADDRESS OF THE TREEHDR.                    39800002
IGAP5    EQU   2         REGISTER CONTAINING ANTEPENULTIMATE VERTEX.    39900002
IGAC5    EQU   3         REGISTER CONTAINING THE PENULTIMATE VERTEX.    40000002
IGAS5    EQU   15        REGISTER CONTAINING THE SINK ADDRESS.          40100002
IGACREG5 EQU   14        REGISTER TO HOLD THE COUNTER DURING THE SEARCH 40200002
IGASARG5 EQU   0         REGISTER CONTAINING THE SEARCH ARGUMENT.       40300002
.RPT5END ANOP                                                           40400002
.RPTV8   ANOP                                                           40500002
&IGADDR  SETC  'X''00'''  THE OFFSET TO THE ADDRESS OF THE MODULE      *40600002
                         IGARPT01 FROM THE BEGINNING OF THE TREE HEADER.40700002
                                                                        40800002
&IGAHVFC SETC  'X''14'''  OFFSET TO THE IV FREE SPACE BLOCK ADDRESS.    40900002
&IGANAME SETC  'IGARPT01'  THE NAME OF THE MODULE.                      41000002
&IGASRCH SETC  'X''0'''                                                 41100002
&IGAINS  SETC  'X''04'''  SET THE INDEX OF THE ENTRY POINT TO INSERT A *41200002
                         KEY-ADDRESS PAIR IN THE RPT.                   41300002
&IGADEL  SETC  'X''08'''  SET THE INDEX OF THE DELETE ENTRY POINT.      41400002
&IGADSP  SETC  'X''0C'''  SET THE INDEX OF THE ENTRY POINT TO DISPLAY  *41500002
                         THE TREE.                                      41600002
&IGAKEYW SETC  'X''10'''  INDEX OF THE ENTRY POINT WORD FOR OBTAINING  *41700002
                         THE ADDRESS OF THE KEY WORK AREA.              41800002
&IGAISCN SETC  'X''14'''  INDEX OF THE ENTRY POINT WORD TO INITIALIZE  *41900002
                         FOR SCANNING.                                  42000002
&IGASCNL SETC  'X''18'''  ENTRY POINT FOR SCANNING LEFT.                42100002
&IGASCNR SETC  'X''1C'''  ENTRY POINT FOR SCANNING RIGHT.               42200002
&IGAPVS  SETC  'X''20'''  INDEX OF ENTRY POINT FOR PARTIAL ORDER VALUE *42300002
                         SEARCH.                                        42400002
&IGAGPV  SETC  'X''24'''  INDEX OF ENTRY POINT ADDRESS FOR GETTING THE *42500002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK.      42600002
&IGADJPV SETC  'X''28'''  ENTRY POINT ADDRESS FOR ADJUSTING THE PARTIAL*42700002
                         ORDER VALUE FOR THE CURRENT SINK.              42800002
&IGABFIN SETC  'X''40'''  THE SIZE OF THE LIST OF ENTRY POINT WORDS IN *42900002
                         THE RPT HEADER.                                43000002
&IGASCH8 SETC  'X''0'''  THE OFFSET INTO THE IGARPT01 MODULE FOR THE   *43100002
                         TYPE 8 RPT SEARCH ROUTINE.                     43200002
&IGADEL8 SETC  'X''180'''  THE OFFSET TO THE TYPE 8 RPT DELETE ROUTINE *43300002
                         IN THE IGARPT01 MODULE.                        43400002
&IGADEL5 SETC  'X''2A0'''                                               43500002
&IGAINS5 SETC  'X''300'''  BRANCH ENTRY OFFSET FOR INSERT INTO A TYPE 5*43600002
                         RPT.                                           43700002
&IGAINS8 SETC  'X''450'''  THE OFFSET TO THE TYPE 8 INSERT ROUTINE IN  *43800002
                         THE IGARPT01 MODULE.                           43900002
&IGALSCN SETC  'X''4B0'''  THE OFFSET TO THE ROUTINE TO SCAN LEFT IN   *44000002
                         THE IGARPT01 MODULE.                           44100002
&IGARSCN SETC  'X''4D0'''  THE OFFSET TO THE ROUTINE TO SCAN RIGHT IN  *44200002
                         THE IGARPT01 MODULE.                           44300002
&IGAISP  SETC  'X''640'''                                               44400002
&IGAFRSC SETC  'X''680'''                                               44500002
&IGAGSPS SETC  'X''780'''  LOCATION OF THE GSPACE ROUTINE FOR VARIABLE *44600002
                         LENGTH AREAS WHEN THE SPCA IS PROVIDED.        44700002
&IGAGSP  SETC  'X''790'''                                               44800002
&IGAGS8  SETC  'X''900'''                                               44900002
&IGAGS12 SETC  'X''920'''                                               45000002
&IGAGS80 SETC  'X''940'''                                               45100002
&IGAGSPF SETC  'X''960'''                                               45200002
&IGAFSP  SETC  'X''9E0'''                                               45300002
&IGAFSPS SETC  'X''A40'''  ENTRY LOCATION FOR VARIABLE LENGTH          *45400002
                         FSPACE WITH THE SPCA CODED.                    45500002
&IGAFS8  SETC  'X''BC0'''  BRANCH ENTRY OFFSET FOR FIXED LENGTH FSPACE *45600002
                         FOR 8 BYTES.                                   45700002
&IGAFS12 SETC  'X''BE0'''  BRANCH ENTRY OFFSET FOR FIXED LENGTH FSPACE *45800002
                         FOR 12 BYTES.                                  45900002
&IGAFS80 SETC  'X''C00'''  ENTRY POINT FOR FSPACE FOR FIXED LENGTH 80  *46000002
                         BYTES.                                         46100002
&IGAFSPF SETC  'X''C20'''  ENTRY POINT FOR FSPACE WITH A FIXEDHDR.      46200002
&IGASPV  SETC  'X''C40'''  THE OFFSET TO THE PARTIAL ORDER SEARCH      *46300002
                         ROUTINE IN THE MODULE IGARPT01.                46400002
&IGAPVG  SETC  'X''D20'''  THE OFFSET TO THE ROUTINE TO GET THE PARTIAL*46500002
                         ORDER VALUE FOR THE CURRENT SINK.              46600002
&IGAPVAJ  SETC 'X''DA0'''  THE OFFSET TO THE ROUTINE TO ADJUST THE     *46700002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK.      46800002
&IGADSP8 SETC  'X''ED8'''  THE OFFSET TO THE ROUTINE TO DISPLAY A TYPE *46900002
                         8 RPT.                                         47000002
&IGASTRE SETC  'X''EE8'''  ENTRY POINT TO SET UP A RADIX PARTITION     *47100002
                         TREE.                                          47200002
&IGACON  SETC  'X''F00'''                                               47300002
&IGAGKW  SETC  'X''F90'''  OFFSET TO ROUTINE TO GET A KEY WORK AREA.    47400002
&IGAEOPV SETC  'X''04'''  THE OFFSET TO THE PATH CODE BYTE IN THE TYPE *47500002
                         8 RPT HEADER.                                  47600002
&IGAMAX  SETC  'X''24'''  THE OFFSET TO THE WORD CONTAINING THE MAXIMUM*47700002
                         PARTIAL ORDER VALUE.                           47800002
         AIF   ('&IGARPT#' NE '8').FIN  SEE IF THIS IS NOT EVEN REALLY *47900002
               A TYPE 8 RADIX PARTITION TREE.                           48000002
         AIF   ('&DS'(1,1) EQ 'N').FIN  SEE IF THE DSECT SHOULD BE     *48100002
                         GENERATED THIS TIME.                           48200002
         AIF   ('&DS'(1,1) EQ '0').FIN  SEE IF IT ISN'T THIS TIME.      48300002
IGARPTH  DSECT 0  PARAMETER LIST FOR TREE ROUTINES.                     48400002
IGADDR   DC    XL4'00'  THIS IS THE BASE ADDRESS OF THE PROGRAM.        48500002
IGAPT    DC    F'0'  THE ADDRESS OF THE TREE SOURCE DOUBLE WORD.        48600002
         ORG   IGAPT                                                    48700002
IGAPATH  DC    XL1'00'  THE PATH CODE BYTE.                             48800002
         DC    AL3(0)  ADDRESS OF THE SOURCE OF THE TREE.               48900002
IGANTPEN DC    XL4'00'   ADDRESS OF ANTEPENULTIMATE VERTEX ON PATH.     49000002
IGAPENLT DC    F'0'      ADDRESS OF PENULTIMATE VERTEX ON PATH.         49100002
IGAFARG  DC    F'0'  THE ADDRESS OF THE KEY OF THE RECORD FOUND BY SRCH 49200002
IGAHVFC  DC    F'0'  THE ADDRESS OF THE INNER SPACE FIXEDHDR.           49300002
IGAKEYL  DC    H'0'  THE LENGTH OF A KEY IN BYTES.                      49400002
IGAKEYI  DC    H'0'  THE 0-ORIGIN INDEX OF THE FIRST BYTE OF THE KEY    49500002
*                    IN THE RECORD.                                     49600002
IGAMAP   DC    F'0'      THE ADDRESS OF THE SUBROUTINE TO MAP AN       *49700002
                         ASSOCIATED # TO AN ADDRESS OF AN AREA         *49800002
                         CONTAINING THE CORRESPONDING KEY.              49900002
IGA9FILL DC    F'0'      THE REFILL SUBPOOL AND LENGTH FOR TYPE 9      *50000002
                         VARIABLE LENGTH SPACE ALLOCATION TREES.        50100002
         CNOP  0,4   IGAMAX IS ON A 4-BYTE BOUNDARY.                    50200002
IGAMAX   DC    F'0'   MAXIMUM VALUE FOR PARTIALLY ORDERED TREES.        50300002
IGAVALUE DC    F'0'  THE PARTIAL ORDER VALUE FOR SEMILATTICE CONDITION. 50400002
IGAWORK  DC    F'0'  WORK AREA FOR TYPE 9 RPT POV.                      50500002
IGAPOV   EQU   8  INDEX OF PARTIAL ORDER VALUE IN INNER VERTEX.         50600002
         ORG   IGARPTH+&IGABLST  PUT THE LIST OF THE ENTRY POINTS FOR  *50700002
                         THE VARIOUS OPERATIONS IN THE RIGHT PLACE.     50800002
IGASRCH  DC    F'0'      THE ADDRESS OF THE SEARCH ROUTINE FOR THIS    *50900002
                         TYPE RPT.                                      51000002
IGAINS   DC    F'0'      THE ADDRESS OF THE INSERT ROUTINE FOR THE RPT. 51100002
IGADEL   DC    F'0'      THE ADDRESS OF THE DELETE ROUTINE FOR THE RPT. 51200002
IGADSP   DC    F'0'      THE ADDRESS OF THE ROUTINE TO DISPLAY THE RPT. 51300002
IGAKEYW  DC    F'0'      EITHER THE ADDRESS OF THE WORK AREA TO COLLECT*51400002
                         KEYS OR THE ADDRESS OF THE ROUTINE TO SET ONE *51500002
                         UP.                                            51600002
IGAISCN  DC    F'0'  THE ADDRESS TO LINK TO TO INITIALIZE FOR SCANNING. 51700002
IGASCNL  DC    F'0'      THE ADDRESS OF THE SCAN LEFT ROUTINE.          51800002
IGASCNR  DC    F'0'      THE ADDRESS OF THE SCAN RIGHT ROUTINE.         51900002
IGAPVS   DC    F'0'      THE ADDRESS OF THE PARTIAL ORDER VALUE SEARCH *52000002
                         ROUTINE.                                       52100002
IGAGPV   DC    F'0'      THE ADDRESS OF THE ROUTINE TO OBTAIN THE      *52200002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK.      52300002
IGADJPV  DC    F'0'      THE ADDRESS OF THE ROUTINE TO ADJUST THE      *52400002
                         PARTIAL ORDER VALUE FOR THE CURRENT SINK.      52500002
IGABFIN  EQU   *                                                        52600002
         DC    (X'40'+IGABFIN-IGARPTH)XL1'00'  FILL OUT THE REST OF THE*52700002
                         RPT ENTRY POINT AREA.                          52800002
IGAFIN8  EQU   *  BYTE PAST TREE HEADER FOR TYPE 8 AND 9 RPT.           52900002
IGATYP8S EQU   IGAFIN8-IGARPTH  TREE HEADER SIZE FOR TYPE 8 AND 9 RPT.  53000002
IGANEBIT EQU   B'00010000'  FLAG BIT TO INDICATE SUBTREE CONTAINS       53100002
*                           UNEQUAL KEYS.                               53200002
IGASTBIT EQU   B'00001000'  SUBTREE OF KNOWN ORDER SELECTION BIT.       53300002
IGARLBIT EQU   B'00000100'  RIGHT/LEFT SUCCESSOR FLAG BIT.              53400002
IGAT0BIT EQU   B'00000010'  LEFT INNER VERTEX FLAG BIT.                 53500002
IGAT1BIT EQU   B'00000001'  INNER VERTEX RIGHT EDGE FLAG BIT.           53600002
&SYSECT  CSECT                                                          53700002
         AIF   (NOT &IGAPGM).NOSHORT  SKIP THE SHORT LABELS IF NOT RPT. 53800002
         RASS  (APT,IGAPT,PATH,IGAPATH,FARG,IGAFARG)                    53900002
         RASS  (HVFC,IGAHVFC,KEYL,IGAKEYL)                              54000002
         RASS  (OFFSET,IGAKEYI,AP,IGANTPEN,AC,IGAPENLT)                 54100002
         RASS  (TREEHDR,IGARPTH,KEYWORK,IGAWORK,VALUE,IGAPOV)           54200002
         RASS  (TREEFIN,IGAFIN8,TREESZ,IGATYP8S)                        54300002
         RASS  (NE,IGANEBIT,IGAQBIT,IGASTBIT,Q,IGAQBIT,RL,IGARLBIT)     54400002
         RASS  (T0,IGAT0BIT,T1,IGAT1BIT,KEYI,IGAKEYI)                   54500002
.NOSHORT ANOP                                                           54600002
         AGO   .FIN      ALL DONE, NOW EXIT FROM RPTDSECT.              54700002
.SPACNTL AIF   (&IGASPDS OR ('&DS'(1,1) EQ 'N')).NOSPDS  SEE IF THE    *54800002
                         DSECT SHOULD BE GENERATED, OR JUST THE GLOBAL *54900002
                         VARIABLE SYMBOLS.                              55000002
&IGASPDS SETB  (1)     SET THE BIT SO THAT IT ONLY GETS GENERATED ONCE. 55100002
IGASPCTL DSECT 0         SPACE CONTROL DSECT FOR THE FSPACE AND GSPACE *55200002
                         MACRO-INSTRUCTIONS.                            55300002
IGARPT9  DC    12F'0'    THE TREE HEADER FOR THE TYPE 9 SPACE CONTROL  *55400002
                         FITS IN THESE 12 WORDS.                        55500002
IGASPEDG DC    F'0' THIS IS THE HEAD OF THE DEFINITION WORD CHAIN FOR * 55600002
*              SPACE CONTROL AREAS FOR SUBPOOLS OTHER THAN SUBPOOL    * 55700002
*              ZERO. THIS IS ONLY THE HEAD OF THE CHAIN FOR THE SPACE * 55800002
*              CONTROL AREA FOR SUBPOOL ZERO, HOWEVER; IN THE SPACE   * 55900002
*              CONTROL AREA FOR THE OTHER SUBPOOLS IT IS THE ADDRESS  * 56000002
*              OF THE SPACE CONTROL AREA FOR SUBPOOL ZERO.            * 56100002
IGAROUND DC    XL4'FFFFFFF0'  THIS IS THE MASK TO USE FOR ROUNDING     *56200002
                         REQUEST LENGTHS TO KEEP THE AREA ALLOCATED ON *56300002
                         THE PROPER ADDRESSING BOUNDARY.                56400002
IGABLOCK DC    F'0'      THIS IS THE HEAD OF THE BLOCK CHAIN OF BLOCK  *56500002
                         DEFINITION WORDS THAT DEFINE THE SPACE        *56600002
                         OBTAINED IN GSPACE FOR REFILLS.                56700002
IGASPLNG DC    XL4'00000000'  THE SUBPOOL NUMBER AND LENGTH OF THE SPACE56800002
                         CONTROL AREA.                                  56900002
IGASA0   DC    18F'0'    THIS IS THE INNER SPACE SAVE AREA.             57000002
IGASA1   DC    18F'0'    THIS IS THE OUTER SPACE SAVE AREA.             57100002
IGAS8    DC    4F'0'     THE FIXED LENGTH HEADER FOR THE FREE SPACE    *57200002
                         CHAIN OF 8-BYTE ENTRIES.                       57300002
IGAS12   DC    4F'0'     THE FIXEDHDR FOR THE 12-BYTE ENTRY FREE SPACE *57400002
                         CHAIN.                                         57500002
IGAS80   DC    4F'0'     THE FIXEDHDR FOR THE 80-BYTE FREE SPACE CHAIN. 57600002
IGASPC   DSECT 0                                                        57700002
IGANXSP  DC    F'0'  THE EDGE TO THE NEXT ONE.                          57800002
IGASPADR DC    F'0'  THE ADDRESS OF THE SPACE CONTROL AREA. THE SUBPOOL*57900002
                         NUMBER FOR THIS ONE IS IN THE LEFT BYTE OF THE*58000002
                         ADDRESS.                                       58100002
IGASPFIN EQU   B'10000000'  THIS BIT IS ON FOR THE LAST EDGE IN THE    *58200002
                         SPACE CONTROL AREA SUBPOOL CHAIN.              58300002
&SYSECT  CSECT                                                          58400002
.NOSPDS  ANOP                                                           58500002
&IGASA0  SETC  'X''40'''  THE OFFSET TO THE FIRST SAVE AREA IN THE SPACE58600002
                         CONTROL AREA.                                  58700002
&IGASA1  SETC  'X''88'''  THE OFFSET TO THE SECOND SAVE AREA IN THE    *58800002
                         SPACE CONTROL AREA.                            58900002
&IGAS8   SETC  'X''D0'''  SET THE OFFSET FROM THE BEGINNING OF THE     *59000002
                         SPACE CONTROL AREA TO THE FIXEDHDR FOR 8-BYTE *59100002
                         ENTRIES.                                       59200002
&IGAS12  SETC  'X''E0'''  SET THE OFFSET TO THE FIXEDHDR FOR 12-BYTE   *59300002
                         ENTRIES.                                       59400002
&IGAS80  SETC  'X''F0'''  SET THE OFFSET TO THE FIXEDHDR FOR 80-BYTE   *59500002
                         ENTRIES.                                       59600002
&IGASPZ  SETC  'X''100'''  SET THE LENGTH OF THE SPACE CONTROL AREA.    59700002
         AGO   .RPTV8  ALMOST ALL DONE, EXCEPT FOR THE GLOBAL VARIABLES*59800002
               FOR THE TYPE 8 AND 9 RADIX PARTITION TREES.              59900002
.********************************************************************** 60000002
.* COME HERE TO GENERATE MISCELLANEOUS GENERATA.                      * 60100002
.********************************************************************** 60200002
.GEN     AIF   ('&GEN(1)' EQ 'CVTRPT').LOADCVT  SEE IF THE SEQUENCE TO *60300002
                         LOAD THE CVTRPT WORD SHOULD BE GENERATED.      60400002
         AIF   ('&GEN(1)' EQ 'TCBRPT').LOADTCB  SEE IF THE SEQUENCE TO *60500002
                         LOAD THE TCBRPT WORD SHOULD BE GENERATED.      60600002
         AIF   ('&GEN(1)' EQ 'TCBRPTA').TCBADDR  SEE IF THE SEQUENCE TO*60700002
                         GET THE ADDRESS OF THE TCBRPT WORD SHOULD BE  *60800002
                         GENERATED.                                     60900002
         MNOTE 12,'INVALID GEN PARAMETER.'                              61000002
         AGO   .FIN      FORGET IT, CAN'T DO ANYTHING WITH THIS.        61100002
.********************************************************************** 61200002
.* GENERATE THE CODE TO LOAD THE ADDRESS OF THE MODULE IGARPT01 FROM  * 61300002
.* THE CVTRPT WORD INTO THE REGISTER SPECIFIED BY THE SECOND ELEMENT  * 61400002
.* IN THE GEN PARAMTER.                                               * 61500002
.********************************************************************** 61600002
.LOADCVT ANOP                                                           61700002
         AIF   (&IGAPGM).IGACVTL  SEE IF THIS IS THE IGARPT01 MODULE.   61800002
         AIF   (NOT(&IGALONE)).NOTLONE  SEE IF THIS IS REALLY IT.       61900002
&TAG     L     &GEN(2),=AL4(IGAFETCH)  ADDRESS OF THE FAKE TCBRPT WORD. 62000002
         BAL   &GEN(2),(X'10'+X'40'*(&GEN(2)-14))(,&GEN(2))  LINK TO   *62100002
                         REPLACE THIS INSTRUCTION WITH A LOAD OF THE   *62200002
                         ADDRESS OF IGARPT01.                           62300002
         AGO   .GENFIN   ALL DONE GENERATING IT NOW.                    62400002
.IGACVTL L     &GEN(2),ADDRESS  LOAD THE ADDRESS OF THE BEGINNING OF   *62500002
                         THE MODULE IGARPT01.                           62600002
         AGO   .GENFIN   ALL DONE NOW.                                  62700002
.NOTLONE ANOP                                                           62800002
&TAG     L     &GEN(2),X'10'  CVT PTR.                                  62900002
         USING CVT,&GEN(2)                                              63000002
         L     &GEN(2),CVTRPT  ADDRESS OF IGARPT01.                     63100002
         DROP  &GEN(2)                                                  63200002
         AGO   .GENFIN                                                  63300002
.********************************************************************** 63400002
.* GENERATE THE CODE TO LOAD THE TCBRPT WORD INTO THE REGISTER        * 63500002
.* SPECIFIED BY THE SECOND ELEMENT IN THE GEN PARAMETER.              * 63600002
.********************************************************************** 63700002
.LOADTCB ANOP                                                           63800002
         AIF   (NOT &IGALONE).LTCBWRD  SEE IF THIS IS UNIT TEST.        63900002
         AIF   (&IGAPGM).IGATCBL  SEE IF THIS IS THE PROGRAM IGARPT01.  64000002
         MNOTE 12,'CAN''T GET THE TBCRPT STUFF.'                        64100002
         AGO   .GENFIN   ALL DONE GENERATING IT NOW.                    64200002
.IGATCBL ANOP                                                           64300002
&TAG     BALR  &GEN(2),0                                                64400002
         AGO   .GENFIN                                                  64500002
         USING *,&GEN(2)                                                64600002
         L     &GEN(2),=AL4(IGATCB)                                     64700002
         DROP  &GEN(2)                                                  64800002
         AIF   ('&GEN(1)' EQ 'TCBRPTA').GENFIN                          64900002
         L     &GEN(2),0(,&GEN(2))                                      65000002
         AGO   .GENFIN   ALL DONE NOW.                                  65100002
.LTCBWRD ANOP                                                           65200002
&TAG     L     &GEN(2),X'10'  ADDRESS OF CVT.                           65300002
         AGO   .GENFIN                                                  65400002
         L     &GEN(2),0(&GEN(2))    ADDRESS OF TCB CHAIN.              65500002
         L     &GEN(2),X'04'(,&GEN(2))  CURRENT TCB ADDRESS.            65600002
         USING TCB,&GEN(2)                                              65700002
&CHAR    SETC  'A'       PREPARE FOR A LOAD ADDRESS INSTRUCTION.        65800002
         AIF   ('&GEN(1)' EQ 'TCBRPTA').NOWLOAD  SEE IF IT IS THE      *65900002
                         ADDRESS OF THE TCBRPT WORD, OR THE ACTUAL     *66000002
                         CONTENTS OF THE TCBRPT WORD.                   66100002
&CHAR    SETC  ''        IT IS THE ACTUAL CONTENTS OF THE WORD.         66200002
.NOWLOAD L&CHAR &GEN(2),TCBRPT  LOAD IGA'S WORD.                        66300002
         DROP  &GEN(2)                                                  66400002
         AGO   .GENFIN   ALL DONE NOW.                                  66500002
.********************************************************************** 66600002
.* GENERATE THE ADDRESS OF THE TCBRPT WORD IN THE REGISTER SPECIFIED  * 66700002
.* BY THE SECOND ELEMENT OF THE GEN PARAMETER.                        * 66800002
.********************************************************************** 66900002
.TCBADDR ANOP                                                           67000002
         AIF   (NOT &IGALONE).LTCBWRD  SEE IF THIS IS THE REAL THING,  *67100002
                         AND NOT JUST UNIT TEST.                        67200002
         AIF   (&IGAPGM).IGATCBL  SEE IF THIS IS THE MODULE IGARPT01.   67300002
         MNOTE 12,'CAN''T GET THE ADDRESS OF THE TCBRPT WORD.'          67400002
         AGO   .GENFIN   ALL DONE GENERATING IT NOW.                    67500002
.GENFIN  AIF   ((NOT &IGALONE)OR &IGAFTCH).FIN  SEE IF THE IGAFETCH    *67600002
                         CSECT IS NEEDED.                               67700002
         AIF   (&IGAPGM).FIN  DON'T GENERATE IT IN THE IGARPT01 MODULE. 67800002
&IGAFTCH SETB  (1)       DON'T GENERATE IT MORE THAN ONCE.              67900002
IGAFETCH CSECT                                                          68000002
IGACVT   DC    F'0'      THIS WILL BE THE ADDRESS OF THE MODULE        *68100002
                         IGARPT01 AFTER IT IS LOADED.                   68200002
&X       SETA  (14)      START BY GENERATING THE CODE FOR REGISTER 14.  68300002
.GOAGAIN ANOP                                                           68400002
         ORG   IGAFETCH+X'10'+(X'40'*(&X-14))  ORIGIN TO THE CORRECT   *68500002
                         OFFSET FOR THE BRANCH ENTRY.                   68600002
&Y       SETA  8                                                        68700002
.BCTRCTR BCTR  &X,0                                                     68800002
&Y       SETA  (&Y-1)                                                   68900002
         AIF (&Y GT 0).BCTRCTR GENERATE 8 BCTR INSTRUCTIONS TO BACK UP *69000002
                         THE LINKAGE ADDRESS TO THE LOAD INSTRUCTION.   69100002
         ST    2,4(,&X)  SAVE REGISTER 2 ON TOP OF THE BAL INSTRUCTION. 69200002
         BALR  2,0       ESTABLISH ADDRESSABILITY.                      69300002
         USING *,2                                                      69400002
         STM   0,1,IGASAVE0  SAVE REGISTERS 0 AND 1.                    69500002
         BAL   2,IGAGCVT  GO CHECK TO SEE IF THE MODULE IS LOADED.      69600002
         DROP  2                                                        69700002
         BALR  1,0       GET BACK ADDRESSABILITY.                       69800002
         USING *,1                                                      69900002
         AIF   (&X EQ 14).XIS14  SEE IF &X IS FOURTEEN.                 70000002
         L     0,IGA15AL1  LOAD THE INSTRUCTION "L 15,0(,15)".          70100002
         AGO   .XDONE    SKIP AROUND THE CASE FOR &X = 14.              70200002
.XIS14   L     0,IGA14AL1  LOAD THE INSTRUCTION "L 14,0(,14)".          70300002
.XDONE   ANOP                                                           70400002
         L     2,4(,&X)  RESTORE REGISTER 2.                            70500002
         ST    0,4(,&X)  OVERLAY THE BAL INSTRUCTION WITH A LOAD OF THE*70600002
                         ADDRESS OF IGARPT01.                           70700002
         LM    0,1,IGASAVE0  RESTORE REGISTERS ZERO AND ONE.            70800002
         BR    &X        RETUTN TO THE LOAD OF THE ADDRESS OF IGAFETCH. 70900002
         DROP  1                                                        71000002
&X       SETA  (&X+1)    EKE THE REGISTER.                              71100002
         AIF   (&X EQ 15).GOAGAIN  REPEAT IT FOR REGISTER 15.           71200002
         ORG   IGAFETCH+X'40'*2  ORIGIN TO THE RIGHT PLACE FOR THE     *71300002
                         SUBROUTINE TO LOAD THE MODULE.                 71400002
*********************************************************************** 71500002
* FETCH THE CONTENTS OF THE CVTRPT WORD, WHICH IS JUST THE ADDRESS OF * 71600002
* THE MODULE IGARPT01. DO THIS BY LOOKING TO SEE IF THE MODULE HAS    * 71700002
* BEEN LOADED ALREADY, AND IF IT HASN'T THEN LOAD IT FIRST.           * 71800002
*********************************************************************** 71900002
IGAGCVT  SLR   0,0                                                      72000002
         BALR  1,0                                                      72100002
         USING *,1                                                      72200002
IGASL0   SL    1,IGASL0A                                                72300002
         DROP  1                                                        72400002
         USING IGAFETCH,1                                               72500002
         CL    0,IGACVT  SEE IF THE MODULE IS ALREADY LOADED.           72600002
         BCR   8,2       RETURN IF IT IS ALREADY LOADED.                72700002
         LOAD  EP=IGARPT01  LOAD THE MODULE.                            72800002
         DROP  1                                                        72900002
         BALR  1,0                                                      73000002
         USING *,1                                                      73100002
IGASL1   SL    1,IGASL1A                                                73200002
         DROP  1                                                        73300002
         USING IGAFETCH,1                                               73400002
         ST    0,IGACVT  STORE THE ADDRESS OF THE LOADED MODULE.        73500002
         DROP  1                                                        73600002
         BR    2                                                        73700002
         CNOP  0,8                                                      73800002
IGASAVE0 DC    XL8'FFFFFFFFFFFFFFFF'                                    73900002
IGASL0A  DC    AL4(IGASL0-IGAFETCH)                                     74000002
IGASL1A  DC    AL4(IGASL1-IGAFETCH)                                     74100002
IGA14AL1 L     14,0(,14)                                                74200002
IGA15AL1 L     15,0(,15)                                                74300002
&SYSECT  CSECT                                                          74400002
.FIN     ANOP                                                           74500002
         MEND                                                           74600002
