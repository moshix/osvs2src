         TITLE 'AMASPZAP - INSPECTS AND MODIFIES DATA ON DA DEVICES'    00030002
*********************************************************************** 00060002
*                                                                       00090002
*TITLE - AMASPZAP                                                       00120002
*                                                                       00150002
*STATUS - CHANGE LEVEL 0                                                00180002
*                                                                       00210002
*FUNCTION - AMASPZAP WILL PERFORM THE FOLLOWING FUNCTIONS:              00240002
*              (1) INSPECT AND MODIFY INSTRUCTIONS AND DATA IN ANY      00270002
*                  LOAD MODULE THAT EXISTS AS A MEMBER OF A PARTITIONED 00300002
*                  DATA SET.                                            00330002
*                                                                       00360002
*              (2) INSPECT AND MODIFY DATA IN A SPECIFIC DATA RECORD    00390002
*                  THAT EXISTS IN A DIRECT ACCESS DATA SET              00420002
*                                                                       00450002
*              (3) DUMP AN ENTIRE D.A. DATA SET, A SPECIFIC MEMBER      00480002
*                  OF A PARTITIONED DATA SET, OR ANY PORTION OF A       00510002
*                  DATA SET ON A DIRECT ACCESS DEVICE.                  00540002
*                                                                       00570002
*              (4) UPDATE THE SYSTEM STATUS INFORMATION (SSI) IN THE    00600002
*                  DIRECTORY ENTRY FOR A LOAD MODULE.                   00630002
*                                                                       00660002
*              (5) UPDATES THE AMASPZAP CSECT IDENTIFICATIO RECORD      00690002
*                  (IDR) IN THE LOAD MODULE                             00720002
*                                                                       00750002
*INPUT -    CONTROL STATEMENTS ARE USED TO CONTROL THE FUNCTIONS OF     00780002
*           AMASPZAP. THESE STATEMENTS CAN BE PROVIDED VIA SYSIN OR     00810002
*           THROUGH THE CONSOLE IF A CONSOLE CONTROL STATEMENT IS       00840002
*           INCLUDED IN THE SYSIN INPUT. THE ACCEPTABLE CONTROL         00870002
*           STATEMENTS ARE AS FOLLOWS:                                  00900002
*                                                                       00930002
*        -KEYWORD-  -PARM1-       -PARM2-             -FUNCTION-        00960002
*                                                                       00990002
*        NAME       MEMBER        CSECT     ......IDENTIFIES A CSECT    01020002
*        VERIFY     HEX-OFFSET    HEX-DATA  ......INSPECTS DATA         01050002
*        REP        HEX-OFFSET    HEX-DATA  ......MODIFIES DATA         01080002
*        SETSSI     DATA (4 BYTES)          ......UPDATES SSI INFO      01110002
*        IDRDATA    DATA (8 BYTES)          ......SUPPLIES IDR DATA     01140002
*        DUMP       MEMBER        CSECT/ALL ......DUMPS CSECT(S)        01170002
*        DUMPT      (SAME PARMS AS DUMP)    ......TRANSLATED DUMP       01200002
*        CCHHR      DISK-ADDRESS IN HEX     ......IDENTIFIES A RECORD   01230002
*        ABSDUMP    START-CCHHR   STOP-CCHHR......DUMPS DATA RECORD(S)  01260002
*                       OR                                              01290002
*                   ALL                                                 01320002
*                       OR                                              01350002
*                   MEMBER NAME                                         01380002
*        ABSDUMPT   (SAME PARMS AS ABSDUMP) ......TRANSLATED ABSDUMP    01410002
*        BASE       HEX-OFFSET              ......SPECIFIES CSECT START 01440002
*        CONSOLE    (NONE)                  ......CONSOLE INPUT REQUEST 01470002
*        * (ASTERISK)             COMMENTS  ......NO OPERATION          01500002
*                                                                       01530002
*OUTPUT -   AS EACH CONTROL STATEMENT IS READ IT IS WRITTEN TO THE      01560002
*           SYSPRINT DEVICE AND THEN THE OPERATION IS PERFORMED         01590002
*           BEFORE OBTAINING THE NEXT STATEMENT. WHEN AN ERROR OCCURS   01620002
*           DURING AN OPERATION, AN ERROR MESSAGE IS WRITTEN TO THE     01650002
*           SYSPRINT DEVICE IMMEDIATELY BELOW THE CONTROL STATEMENT     01680002
*           IN ERROR. IF THE CONSOLE OPTION IS IN EFFECT, ERROR MESS-   01710002
*           AGES ARE WRITTEN TO THE CONSOLE AS WELL AS THE SYSPRINT     01740002
*           DEVICE.                                                     01770002
*                                                                       01800002
*           ALL DATA THAT IS DUMPED IS WRITTEN TO THE SYSPRINT DEVICE   01830002
*           IN HEXADECAMAL. IF TRANSLATION WAS SPECIFIED, THE MNEUMONIC 01860002
*           REPRESENTATION OF EACH HALFWORD OF DATA IS PRINTED BELOW    01890002
*           THE RESPECTIVE TWO BY8TES OF HEX DATA AND THE EBCDIC        01920002
*           REPRESENTATION OF THE HEX DATA IS TRANSLATED TO THE RIGHT   01950002
*           OF THE HEX DATA IN THE DUMP.                                01980002
*                                                                       02010002
*          IF A REP OPERATION IS PERFORMED ON A LOAD MODULE             02040002
*          THE SSI AND IDR ARE UPDATED AUTOMATICALLY.                   02070002
*                                                                       02100002
*ENTRY POINTS - AMASPZAP IS THE ONLY ENTRY                              02130002
*                                                                       02160002
*EXITS - AMASPZAP RETURNS CONTROL TO THE SYSTEM VIA A RETURN MACRO      02190002
*        AFTER PROCESSING ALL CONTROL STATEMENTS IN THE SYSIN DATA SET  02220002
*        OR WHEN A CRITICAL ERROR IS ENCOUNTERED SO PROCESSING CANNOT   02250002
*        CONTINUE.                                                      02280002
*                                                                       02310002
*EXTERNAL REFERENCES - NOT APPLICABLE                                   02340002
*                                                                       02370002
*TABLES - NOT APPLICABLE                                                02400002
*                                                                       02430002
*ATTRIBUTES - NONREUSEABLE PROBLEM PROGRAM                              02460002
*                                                                       02490002
*NOTES - (1) AMASPZAP UTILIZES SYSTEM OPEN. HENCE AMASPZAP CANNOT       02520002
*            MODIFY8 'READ-ONLY' OR INSPECT 'WRITE-ONLY' PASSWORD       02550002
*            PROTECTED DATA SETS UNLESS THE CORRECT PASSWORD IS         02580002
*            PROVIDED AT OPEN TIME. ALSO UNEXPIRED DATA SETS            02610002
*            CANNOT BE MODIFIED UNLESS THE OPERATOR REPLIES R 00,'U'    02640002
*            TO THE EXPIRATION MESSAGE THAT OCCURS DURING OPEN.         02670002
*                                                                       02700002
*        (2) AMASPZAP SUPPORTS ONLY THE 2311, 2314, 2301, 2302, 2303    02730002
*             2321, 3330, 3340, AND 3350 DASD DEVICES                   02760037
*             FOR THE SYSLIB DD UNIT.                                   02770037
*                                                                       02790002
*        (3) THE SYSLIB DD CANNOT SPECIFY A CONCATENATED DATA SET.      02820002
*                                                                       02850002
*        (4) THE SYSLIB DD MUST SPECIFY DSN=FORMAT4.DSCB IF OPERA-      02880002
*            TIONS ARE TO BE PERFORMED ON A VTOC.                       02910002
*                                                                       02940002
*********************************************************************** 02970002
         SPACE 3                                                        03000002
******************************FL/1************************************* 03030002
*/*AMASPZAP: CHART (AMODE,SEQ) */                                       03060002
*/* HEADER                                                              03090002
*/*AMASPZAP                                                             03120002
*/*                                     PAGE # */                       03150002
*/*AMASPZAP: E ENTRY */                                                 03180002
*/* P INITIALIZATION */                                                 03210002
*/* P CHECK INPUT PARAMETER LIST TO SEE IF DDNAMES ARE BEING PASSED */  03220002
*/* P IF SO, INSERT THEM INTO APPROPRIATE DCB */                        03230002
*/* P IF NOT, DDNAMES WILL DEFAULT TO SYSLIB, SYSIN, SYSPRINT */        03232002
*/* L OPEN SYSIN, SYSPRINT */                                           03240002
*/* L READJFCB SYSLIB */                                                03270002
*/* D (NO,GETDSCB,YES,) FORMAT 4 DSCB? */                               03300002
*/* P SET JFCBAREA TO X'04'S */                                         03330002
*/* L (,CKOPEN) OPEN SYSLIB FOR INPUT */                                03360002
*/*GETDSCB: L OBTAIN FMT1 DSCB */                                       03390002
*/* D (NO,OPEN1,YES,) TRACK OVERFLOW? */                                03420002
*/* P SET TRK OVRFL BIT IN DCB */                                       03450002
*/*OPEN1: L OPEN SYSLIB FOR INPUT */                                    03480002
*/*CKOPEN: P SET R1 TO LARGEST POSS BLKSIZE */                          03510002
*/* P R1=R1 + MAX KEYLEN AND COUNT */                                   03540002
*/* P SAVE MAX BLOK SIZE */                                             03570002
*/* P INCREASE GETMAIN SIZE BY TRUE KEYLEN */                           03600002
*/* L GET MAIN STORAGE FOR MAX SIZE */                                  03630002
*/* P SAVE ADDR OF RDAREA BUFFER */                                     03660002
*/* D (YES,%P2C2,NO,) SYSPRINT OPEN OK? */                              03690002
*/*WTOA: L  WTO MSG AMA118I */                                          03720002
*/* L (,EXIT) CLOSE FILES */                                            03750002
*/*%P2C2: S WRITE:PRINT AMASPZAP HEADER */                              03780002
*/* D (YES,%P2F2,NO,) SYSIN OPEN OK? */                                 03810002
*/*CLOSE2: S WRITEO:PRINT APPROPRIATE ERROR MSG */                      03840002
*/*CLOSE3: L CLOSE ALL DCBS */                                          03870002
*/* P (,EXIT) SET RETURN CODE 16 */                                     03900002
*/*%P2F2: D (NO,CLOSE2,YES,) SYSLIB2 OPEN OK? */                        03930002
*/* P SET LNKRG3 TO ADDR OF RDCARD1 */                                  03960002
*/*RDCARD: P INITIALIZE CONTROL BYTE */                                 03990002
*/*RDCARD1: P TURN OFF CONSW */                                         04020002
*/* S RDCARD2:GET A CONTROL CARD */                                     04050002
*/* S WRITE:PRINT CONTROL CARD */                                       04080002
*/* S SCANKEY:SCAN FOR BEGIN OF OPERATION */                            04110002
*/* D (YES,CONRTN,NO,) CONSOLE? */                                      04140002
*/*KEY01: D (NO,%P2F4,YES,) COMMENT CARD? */                            04170002
*/* R RETURN VIA LNKRG3 */                                              04200002
*/*%P2F4: P INITIALIZE READ AREA */                                     04230002
*/* D (ON,KEY03,OFF,) NAMEERR SW? */                                    04260002
*/* D (YES,SSIRTN,NO,) SSI? */                                          04290002
*/* D (YES,KEY02,NO,) IGNOP? */                                         04320002
*/* D (YES,REPRTN,NO,) REP? */                                          04350002
*/*KEY02: D (YES,VERYRTN,NO,) VERIFY? */                                04380002
*/* D (YES,IDRRTN,NO,) IDRDATA? */                                      04410002
*/* S INSMDFY:MODIFY SSI IF ANY REPS OCCURRED */                        04440002
*/*KEY03: D (YES,CCHHRTN,NO,) CCHHR? */                                 04470002
*/* D (YES,NAMERTN,NO,) NAME? */                                        04500002
*/* D (YES,BASERTN,NO,) BASE? */                                        04530002
*/* D (YES,DUMPRTN,NO,) DUMP? */                                        04560002
*/* D (YES,ABDMPRTN,NO,) ABSDUMP? */                                    04590002
*/* D (YES,EOD,NO,) SLASH AST? */                                       04620002
*/*IGNORE: P POINT TO MSG AMA105I */                                    04650002
*/*IGNORE2: S WRITEO:PRINT ERROR MSG */                                 04680002
*/* D (ON,,OFF,%P3E4) CONSW? */                                         04710002
*/* S WTORTN:MESSAGE TO CONSOLE */                                      04740002
*/*%P3E4: P SET RETCODE TO 8 */                                         04770002
*/* P TURN ON IGNOP SW */                                               04800002
*/* R RETURN VIA LNKRG3 */                                              04830002
*/*EOD: S INSMDFY:MODIFY SSI IF ANY REPS OCCURRED */                    04860002
*/* P POINT TO MSG AMA100I */                                           04890002
*/* S WRITEO:PRINT COMPLETED MSG */                                     04920002
*/* S CLOSE1:CLOSE ALL DCBS */                                          04950002
*/*EXIT: D (YES,,NO,GETOUT) WAS RESERVE ISSUED? */                      04980002
*/* L DEQUE ON DATA SET */                                              05010002
*/* P TURN OFF RESERVE SW */                                            05040002
*/*GETOUT: P HOUSEKEEPING */                                            05070002
*/* R RETURN TO SYSTEM */                                               05100002
*/*NAMERTN: P SAVE HIGHEST RETURN CODE FOR STEP */                      05130002
*/* S SCANKEY5:GET MEMBER AND CSECT NAMES */                            05160002
*/* P SET BASE2 TO ZERO */                                              05190002
*/* P MOVE 'NO IDENT' TO IDR DATA BUFFER */                             05220002
*/* P TURN OFF IDRDATA 1ST STMT INDICATOR */                            05250002
*/* P TURN OFF IGNOP AND NAMEERR SW */                                  05280002
*/* S NAME01A:EXAMINE CESDS */                                          05310002
*/* D (VEC1,,VEC2,NAME03B,VEC3,%21A2) RETURN VECTOR? */                 05340002
*/*NOCSECT: S WRITEO:PRINT ERROR MSG */                                 05370002
*/* D (ON,,OFF,%P4A4) CONSW? */                                         05400002
*/* S WTORTN:MSG TO CONSOLE */                                          05430002
*/*%P4A4: P SET RETCODE TO 8 */                                         05460002
*/* P (,DUMP04) TURN ON IGNOP & NAMEERR SW */                           05490002
*/*%21A2: D (NO,NAME04AA,YES,) WAS LOAD MOD READ? */                    05520002
*/* P (,NAME04AB) RESET LOAD MOD READ SW */                             05550002
*/*NAME04AA: D (YES,NOIDRL,NO,) IS LOAD MOD NE */                       05580002
*/*NAME04A: S RDDSK2:READ NEXT RECORD */                                05610002
*/*NAME04AB: D (YES,SPZAPIDR,NO,) IS THIS AN IDR? */                    05640002
*/* D (YES,NAME04A,NO,) SYM OR CESD? */                                 05670002
*/*NOIDRL: P POINT TO MSG AMA119I */                                    05700002
*/* P TURN OFF NENOIDR SW */                                            05730002
*/* S WRITEO:PRINT MESSAGE */                                           05760002
*/* P INDICATE NO IDR UPDATES REQD */                                   05790002
*/* P (,RDDSK4BB) SET LNKRG2 TO ADDR OF NAME04 + 4 */                   05820002
*/*SPZAPIDR: D (YES,,NO,NAME04A) AMASPZAP IDR? */                       05850002
*/* D (YES,SAVELOC,NO,) ANY SPACE LEFT? */                              05880002
*/* D (YES,NAME04A,NO,) ANY MORE SPZAP IDRS? */                         05910002
*/* P TURN ON IGNORE OPTION SW- NO REPS */                              05940002
*/* P POINT TO MSG AMA120I */                                           05970002
*/* S (,NAME04) WRITEO:PRINT MESSAGE */                                 06000002
*/*SAVELOC: S CCHNOTE:NOTE TTR & CONVERT TO MBBCCHHR */                 06030002
*/* P SAVE TTR IN IDRTTR FIELD */                                       06060002
*/* P SAVE MBBCCHHR IN IDRFSEEK FIELD */                                06090002
*/* P INDICATE IDR UPDATE REQUIRED */                                   06120002
*/*NAME04: S RDDSK4:SIFT THRU CONTROL RECORDS */                        06150002
*/* D (VEC1,,VEC2,%P4D5) RETURN VECTOR? */                              06180002
*/* N INVALID RETURN VECTOR */                                          06210002
*/* P NOP INSTR */                                                      06240002
*/*%P4D5: N VECT 2- FOUND CSECT */                                      06270002
*/* P SAVE CSECT TTR */                                                 06300002
*/* D (YES,%C13,NO,) ONE RECORD CSECT? */                               06330002
*/* S CCHNOTE:SET NOTE LIST */                                          06360002
*/* P  SAVE CSECT TTR */                                                06390002
*/*%C13: R RETURN VIA LNKRG3 */                                         06420002
*/*CCHHRTN: P SAVE HIGHEST RETURN CODE FOR STEP */                      06450002
*/* P TURN OFF IGNORE OPTION & NAMEERR SW */                            06480002
*/* S CCHHSUB:VERIFY LEGAL ABSOLUTE ADDR */                             06510002
*/* P ZERO BASE FIELDS */                                               06540002
*/* S OPENLIB:OPEN DS FOR UPDATE */                                     06570002
*/* S RDDISK:READ DESIRED RECORD */                                     06600002
*/* P SUBTRACT RESIDUAL COUNT FROM SIZE */                              06630002
*/* P SAVE AS MAX INSPECT AREA */                                       06660002
*/* R RETURN VIA LNKRG3 */                                              06690002
*/*VERYRTN: P INDICATE VERIFY PROCESSING */                             06720002
*/* S SETUP1:DECODE VERIFY CARD */                                      06750002
*/* P VERIFY PATCHES */                                                 06780002
*/* D (YES,,NO,%P21E2) SUCCESSFUL VERIFY? */                            06810002
*/* R RETURN VIA LNKRG3 */                                              06840002
*/*%P21E2: P POINT TO MSG AMA104I */                                    06870002
*/*VERY1: S WRITEO:PRINT ERROR MSG */                                   06900002
*/* D (YES,,NO,%P21H2) CONSOLE OPTION IN EFFECT? */                     06930002
*/* S WTORTN:WRITE MSG TO CONSOLE */                                    06960002
*/*%P21H2: P SET RETURN CODE OF 8 */                                    06990002
*/* P TURN ON IGNORE OPTION SW */                                       07020002
*/* P BLANK OUT MEMBER & CSECT NAME FIELDS */                           07050002
*/* S WRITEO:WRITE A BLANK LINE */                                      07080002
*/* P INITIALIZE TO DUMP CSECT OR RECORD */                             07110002
*/* S (,DUMP09) DUMP01AB:DUMP */                                        07140002
*/*REPRTN: P INDICATE REP OPERATION */                                  07170002
*/* S SETUP1:DECODE REP CARD */                                         07200002
*/* N TAKES THIS PATH IF CCHHR UPDATE */                                07230002
*/* S UNPATCH: FORMAT UNPATCH MESSAGE */                                07260002
*/* S WRITE:PRINT MESSAGE */                                            07290002
*/* P BLANK LAST 40 CHAR OF BUFFER */                                   07320002
*/* P MOVE IN REP DATA */                                               07350002
*/* S WRDISK:UPDATE RECORD ON DISK */                                   07380002
*/* P (,RESET) INDICATE CCHHR UPDATE OCCURRED- MODFYREC */              07410002
*/*BASERTN: S SCAN:DECODE BASE OFFSET */                                07440002
*/* P (,RESET) SAVE OFFSET */                                           07470002
*/*IDRRTN: D (YES,%21A1,NO,) 1ST IDRDATA THIS NAME? */                  07500002
*/* R RETURN VIA LNKRG3 */                                              07530002
*/*%21A1: S SCANKEY1:DECODE IDR STATEMENT */                            07560002
*/* P SAVE IDR DATA */                                                  07590002
*/* P INDICATE 1ST IDRDATA STMT READ */                                 07620002
*/* R RETURN VIA LNKRG3 */                                              07650002
*/*SSIRTN: D (YES,%P23B2,NO,) IS RETURN CODE ZERO? */                   07680002
*/* P (,SSI2) POINT TO MSG AMA111I */                                   07710002
*/*%P23B2: P INDICATE SSI PROCESSING */                                 07740002
*/* P TURN OFF SSI ERROR FLAGS */                                       07770002
*/* S OPENLIB:CHECK IF LIB OPEN FOR UPDATE */                           07800002
*/* S SCAN:DECODE SSI CARD */                                           07830002
*/* S INSM1A:GET SSI FIELD */                                           07860002
*/* D (YES,%P23G2,NO,) HAD WE FOUND THE MEMBER */                       07890002
*/* P (,SSI2) POINT TO MSG AMA112I */                                   07920002
*/*%P23G2: D (YES,SSI1,NO,) SSI MISSING FROM DIRECTORY ? */             07950002
*/* S UNPATCH: FORMAT UNPATCH MESSAGE */                                07980002
*/* S WRITE:PRINT MESSAGE */                                            08010002
*/* P BLANK LAST 40 CHAR OF BUFFER */                                   08040002
*/* P MOVE SSI TO DIRECTORY */                                          08070002
*/* S (,RESET) DIRWRITE:UPDATE DIRECTORY */                             08100002
*/*SSI1: P POINT TO MSG AMA110I */                                      08130002
*/*SSI2: P SET RETURN CODE OF 8 */                                      08160002
*/* S WRITEO:PRINT ERROR MSG */                                         08190002
*/* D (YES,,NO,RESET) CONSOLE OPTION IN EFFECT? */                      08220002
*/* S (,RESET) WTORTN:WRITE MSG TO CONSOLE */                           08250002
*/*DUMPRTN: D (YES,DUMPR1,NO,) TRANSLATED DUMP REQUEST ? */             08280002
*/* P INDICATE TRAN DUMP REQUIRED */                                    08310002
*/*DUMPR1: S SCANKEY5:GET MEMBER & CSECT NAME */                        08340002
*/* P TURN OFF ONE RECORD INDICATOR */                                  08370002
*/* P TURN ON NAMEERR SW- DONT ALLOW VERS OR REPS */                    08400002
*/* D (YES,DUMP04,NO,) ALL CSECTS REQUIRED ? */                         08430002
*/*DUMP01A: S NAME01A:FIND CSECT NAME */                                08460002
*/* D (VEC1,NOCSECT,VEC2,NAME03B,VEC3,DUMP01B) RETURN VECTOR ? */       08490002
*/*DUMP01B: S RDDSK4:READ CONTROL RECORD */                             08520002
*/* D (VEC1,,VEC2,%P28K2) RETURN VECTOR ? */                            08550002
*/* N (,DUMP09) END OF MODULE */                                        08580002
*/*%P28K2: N FOUND CONTROL RECORD WITH CSECTID */                       08610002
*/* D (YES,DUMP01D,NO,) ONE RECORD INDIC ON ? */                        08640002
*/* S DUMP01:TO DUMP CSECT */                                           08670002
*/* D (YES,DUMP09,NO,) DUMP COMPLETED ? */                              08700002
*/*DUMP01D: S DUMP01AA:DUMP ONE RECORD */                               08730002
*/* D (YES,DUMP09,NO,) DUMP COMPLETE ? */                               08760002
*/* D (YES,,NO,DUMP09) MULTIPLE REC INDIC ON ? */                       08790002
*/* P (,DUMP01B) RESET ONE RECORD INDIC */                              08820002
*/*DUMP04: P CLEAR CSECT ID SAVE AREA */                                08850002
*/*DUMP04A: S NAME01A:FIND FIRST CSECT */                               08880002
*/* D (VEC2,,VEC1,DUMP09,VEC3,%P29D2) RETURN VECTOR ? */                08910002
*/* P NOP */                                                            08940002
*/*%P29D2: D (YES,DUMP01D,NO,) ONE RECORD DUMP ? */                     08970002
*/* D (YES,,NO,DUMP09) ANY MORE CSECTS */                               09000002
*/* D (YES,,NO,NAME03B) HAVE WE FOUND NEXT ESD */                       09030002
*/* P SAVE NEW ESD ID */                                                09060002
*/* P SAVE CSECT NAME FROM ESD ENTRY */                                 09090002
*/*DUMP06B: S RDDSK4:READ CONTROL RECORD */                             09120002
*/* D (VEC1,DUMP04A,VEC2,) RETURN VECTOR ? */                           09150002
*/* S DUMP01:DUMP CSECT */                                              09180002
*/* D (NO,DUMP09:RLL,YES,DUMP04A:RL) LAST TXT REC DUMPED ? */           09210002
*/*DUMP09: N DUMP REQUIREMENT COMPLETE */                               09240002
*/* P POINT TO MSG AMA113I */                                           09270002
*/* S WRITEO:PRINT DUMP COMPLETE MSG */                                 09300002
*/* P RESET TRANS & END OF MOD INDICS */                                09330002
*/* S WRITEO:SKIP TO NEW PAGE */                                        09360002
*/* R RETURN VIA LNKRG3 */                                              09390002
*/*ABDMP1: P INCR 1 CHAR ON CONTROL CARD BUF */                         09420002
*/*ABDMPRTN: D (YES,ABDMP1,NO,) CHAR = BLANK ? */                       09450002
*/* P TURN ON NAMEERR SW- NO VERS OR REPS */                            09480002
*/* D (YES,,NO,ABDMP1B) TRANSLATE OPT REQUEST ? */                      09510002
*/* P INDICATE TRANSLATE REQUIRED */                                    09540002
*/*ABDMP1B: P INITIALIZE FOR DUMP */                                    09570002
*/* P GET CONVERT RTN OFFSET */                                         09600002
*/* D (YES,ABDMP3,NO,) DUMP OF ENTIRE PDS ? */                          09630002
*/* D (YES,,NO,ABDMP6) NUMERIC OPERAND ? */                             09660002
*/* S CCHHSUB:DECODE LOW CCHHR */                                       09690002
*/* S CHCONV:CONVERT TO TTR */                                          09720002
*/* P SAVE LOW TTR IN TTRSAVE */                                        09750002
*/* S CCHSUB2:DECODE HIGH CCHHR */                                      09780002
*/*ABDMP2: P GET CONVERT ROUTINE OFFSET */                              09810002
*/* S CHCONV:CONVERT TO TTR */                                          09840002
*/*CONTA: P MOVE LOW TTR TO STCSECT */                                  09870002
*/* P SAVE HIGH TTR IN TTRSAVE */                                       09900002
*/*ABDMP5: P BLANK MEMBER & CSECT NAME FIELDS */                        09930002
*/* S DUMP01AA:DUMP RECORD */                                           09960002
*/*CONTB: D (YES,DUMP09,NO,)  LO TTR >= HI TTR YET ? */                 09990002
*/* P RESET IFLAGS IN DCB IF ON DUE TO ERROR */                         10020002
*/* D (YES,DUMP09,NO,DUMP01) END OF EXTENT ? */                         10050002
*/*CONT: D (NO,,YES,DUMP09) END OF EXTENT? */                           10080002
*/* S DUMP01E:WRITE EOD RECORD FOR LIB2 */                              10110002
*/* D (YES,DUMP09,NO,) IS DUMP OF SEQUENTIAL D.S. */                    10140002
*/* S WRITEO:SKIP A LINE */                                             10170002
*/* P SET LNKRG2 TO ADDR OF CONTB */                                    10200002
*/* D (YES,,NO,CONTB) WAS IT MEM DUMP ONLY ? */                         10230002
*/* P (,DUMP09) TURN OFF MEMBDMP INDICATOR */                           10260002
*/*ABDMP3: P GET DEB ADDR */                                            10290002
*/* P TURN OFF NAMEOP & ONERECORD INICATOR */                           10320002
*/* S CHCONV:CONVERT TO TTR */                                          10350002
*/* P SAVE TTR IN STCSECT */                                            10380002
*/* P SET READ AREA ADDR FOR JFCB READ */                               10410002
*/* L READ JFCB */                                                      10440002
*/* P GET DEB ADDR AGAIN */                                             10470002
*/* P GET UCB ADDR FROM DEB */                                          10500002
*/* P SAVE ADDR OF VOLSER */                                            10530002
*/* P SET ADDR OF DSNAME IN OBTAIN LIST */                              10560002
*/* P ESTABLISH WORK AREA FOR OBTAIN */                                 10590002
*/* L OBTAIN- SET DSCB */                                               10620002
*/* M TURN OFF SEQUENTIAL INDICATOR */                                  10650002
*/* D (YES,,NO,TESTPO) IS DATA SET SEQUENTIAL */                        10680002
*/* M (,MAKEHI2) SET SEQUENTIAL INDICATOR */                            10710002
*/*TESTPO: D (NO,MAKEHI2,YES,) IS DATA SET PARTITIONED */               10740002
*/* P SAVE END OF DATA SET TTR */                                       10770002
*/* D (YES,,NO,ABDMP5) TTR = 0 ? */                                     10800002
*/*MAKEHI2: P (,ABDMP5) SET HIGH TTR TO FOXES & SAVE */                 10830002
*/*ABDMP6: S SCANKEY5:GET MEMBER NAME */                                10860002
*/* L FIND MEMBER */                                                    10890002
*/* D (YES,,NO,NAME03C) MEMBER FOUND ? */                               10920002
*/* P BLANK CSECT NAME FIELD */                                         10950002
*/* P INDICATE MEMBER DUMP */                                           10980002
*/* S DUMP01:DUMP MEMBER */                                             11010002
*/* N (,DUMP01) CONTINUE */                                             11040002
*/*SYND: N SYNAD EXIT FOR SYSIN */                                      11070002
*/* L SYNADAF- ANALYZE ERROR */                                         11100002
*/* P SAVE PARAMETER REG */                                             11130002
*/* P MOVE ERROR MSG TO BUFFER */                                       11160002
*/* S IOMSG:PRINT I/O ERROR MSG */                                      11190002
*/* L (,CLOSE3) RELEASE SYNADAF WORK AREA */                            11220002
*/*ABDMP4: N SYNAD EXIT FOR LIB2 */                                     11250002
*/* P SAVE REGS */                                                      11280002
*/* L SYNADAF- ANALYZE ERROR */                                         11310002
*/* P SAVE PARM REG */                                                  11340002
*/* P MOVE ERROR MSG TO BUFFER */                                       11370002
*/* S IOMSG:PRINT I/O ERROR MSG */                                      11400002
*/* P RESTORE LINK & PARM REGS */                                       11430002
*/* L RELEASE SYNADAF WORK AREA */                                      11460002
*/* P (,CLOSE3) RESTORE REGS */                                         11490002
*/*RESET: P TURN OFF IGNORE OPTION SW */                                11520002
*/* N GET NEXT CARD */                                                  11550002
*/* R RETURN VIA LNKRG3 */                                              11580002
*/*NAME01A: E SUBROUTINE */                                             11610002
*/* N USED BY NAMERTN & DUMPRTN- FIND MEMBER & CSECT */                 11640002
*/* P TURN MULREC SW OFF */                                             11670002
*/* L DO BLDL ON MEMBER NAME */                                         11700002
*/* D (YES,%L284,NO,) SUCCESS? */                                       11730002
*/*NAME03C: P TURN ON NAMEERR SW */                                     11760002
*/* P (,IGNORE2) POINT TO MSG AMA102I */                                11790002
*/*%L284: P SET ESD ID COUNTER TO ZERO */                               11820002
*/* P SET BASE FOR FIRST CSECT SEARCH */                                11850002
*/* L ISSUE FIND ON MEMBER NAME */                                      11880002
*/*NAME02: S RDDSK2:SEQUENTIALLY READ ONE REC */                        11910002
*/* D (YES,NAME02,NO,) IS IT A SYM RECORD? */                           11940002
*/* D (YES,NAME03,NO,) IS IT A CESD? */                                 11970002
*/* D (YES,NAME03E,NO,) L.E. ATTR+1 = X'08' (NE) */                     12000002
*/* D (YES,%C11,NO,) WAS SPECIFIC CSECT REQ? */                         12030002
*/* N USE CSECT FOUND WITH LOWEST DISPLACEMENT */                       12060002
*/* R RETURN VECTOR 3 */                                                12090002
*/*%C11: P SET LOAD MOD HAS BEEN READ SW */                             12120002
*/* R RETURN VECTOR 1 */                                                12150002
*/*NAME03: P ESD ID COUNT + 1 */                                        12180002
*/* D (YES,NAME03A,NO,) IS IT A SECT DEF? */                            12210002
*/* D (YES,NAME03A,NO,) IS IT PRIVATE CODE? */                          12240002
*/*NAME03B: P INCR TO NEXT ESD */                                       12270002
*/* D (YES,NAME02,NO,NAME03) END OF THIS CESD? */                       12300002
*/*NAME03E: P SET MULREC SW ON */                                       12330002
*/* P SET NENOIDR SW */                                                 12360002
*/*NAME03D: P SET BASE TO L.E. ASSD ORIGN OF 1ST TXT */                 12390002
*/* P SET START TO BASE */                                              12420002
*/* P SET STCSECT TO TTR OF 1ST TXT */                                  12450002
*/* P SET LENGTH TO LEN OF 1ST TXT */                                   12480002
*/* P SET CSECT FIELD TO BLANK */                                       12510002
*/* P  TURN ON ONEREC SW */                                             12540002
*/* R RETURN VECTOR 3 */                                                12570002
*/*NAME03A: D (YES,,NO,NAME03AA) WAS SPECIFIC CSECT REQ? */             12600002
*/* P SAVE DISPLACEMENT AND ESDID */                                    12630002
*/* D (NO,,YES,%P9L10) IS THIS REQ CSECT */                             12660002
*/* R RETURN VECTOR 2 */                                                12690002
*/*%P9L10: R RETURN VECTOR 3 */                                         12720002
*/*NAME03AB: P SAVE ESDID */                                            12750002
*/* P SAVE CSECT DISPLACEMENT */                                        12780002
*/* R RETURN VECTOR 3 */                                                12810002
*/*NAME03AA: D (YES,,NO,NAME03AC) THIS CSECT DISPLACEMENT ZERO */       12840002
*/* P (,NAME03AB) SAVE CSECT NAME */                                    12870002
*/*NAME03AC: D (NO,%C12,YES,) DISPLACEMENT .LT. BASE */                 12900002
*/* P SAVE CSECT DATA */                                                12930002
*/* R RETURN VECTOR 2 */                                                12960002
*/*%C12: R RETURN VECTOR 2 */                                           12990002
*/*RDDSK3: E SUBROUTINE */                                              13020002
*/* N READ DISK ROUTINES */                                             13050002
*/* S RDDSK2:SEQ READ ONE RECORD */                                     13080002
*/*RDDSK4: D (YES,,NO,%P7D2) ONE REC SW ON? */                          13110002
*/* R RETURN VIA VECTOR 2 */                                            13140002
*/*%P7D2: S RDDSK2:SEQ READ ONE RECORD */                               13170002
*/*RDDSK4BB: D (YES,,NO,RDDSK7) CONTROL RECORD? */                      13200002
*/* P SET STARTINC TO ZERO */                                           13230002
*/* P LOAD PTR TO ID FIELD */                                           13260002
*/* P SAVE STOP ADDR */                                                 13290002
*/*RDDSK4C: P LOAD CSECT ID */                                          13320002
*/* D (YES,RDDSK5,NO,) IS IT CSECT WE WANT? */                          13350002
*/* D (YES,RDDSK5,NO,) MULT TEXT CSECT? */                              13380002
*/* P ADD CSECT LEN TO STARTINC */                                      13410002
*/* P ADVANCE RECORD PTR */                                             13440002
*/* D (NO,RDDSK4C,YES,) OUTSIDE RECORD LIMIT? */                        13470002
*/* D (YES,,NO,RDDSK3) IS IT END OF MODULE? */                          13500002
*/* R RETURN VIA VECTOR 1 */                                            13530002
*/*RDDSK2: E SUBROUTINE */                                              13560002
*/* N BSAM- SEQUENTIAL READ */                                          13590002
*/* P INITIALIZE FOR READ */                                            13620002
*/* L READ RECORD BSAM */                                               13650002
*/* L CHECK READ COMPLETION */                                          13680002
*/* R RETURN */                                                         13710002
*/*RDDSK5: P INDICATE END OF MODULE- CTLBTE */                          13740002
*/* D (YES,RDDSK6,NO,) IS IT REALLY END OF MOD? */                      13770002
*/* P TURN OFF END MOD IND- CTLBTE */                                   13800002
*/*RDDSK6: P SAVE CSECT LENGTH */                                       13830002
*/* P SAVE START ADDR OF 1ST TEXT */                                    13860002
*/* R RETURN VIA VECTOR 2 */                                            13890002
*/*RDDSK7: D (YES,,NO,RDDSK4) LAST RECORD OF MOD? */                    13920002
*/* R RETURN VIA VECTOR 1 */                                            13950002
*/*CCHHNOTE: E SUBROUTINE */                                            13980002
*/* N CONVERT TTRS TO CCHHRS */                                         14010002
*/* L ISSUE NOTE ON LIB2 */                                             14040002
*/* P SAVE TTR */                                                       14070002
*/* P INITIALIZATION FOR CONVERT ROUTINE */                             14100002
*/*CHCONV: P SAVE REGS 8 - 13 */                                        14130002
*/* P FURTHER INIT FOR CONVERT ROUTINE */                               14160002
*/* P GET ADDR CONVERT ROUTIN FROM CVT */                               14190002
*/* L CONVERT TO CCHHR */                                               14220002
*/* N ABSOLUTE ADDR SAVED IN MBBCCHHR */                                14250002
*/* P RESTORE REGS 8 - 13 */                                            14280002
*/* R RETURN */                                                         14310002
*/*CCHHSUB: E SUBROUTINE */                                             14340002
*/* N CHECK ABSOLUTE ADDR IS WITHIN DATA SET */                         14370002
*/* P INITIALIZATION */                                                 14400002
*/* P TURN OFF NAMEOP & ONEREC SW */                                    14430002
*/*CCHSUB2: S SCAN:DEBLOCK DATA */                                      14460002
*/* P SAVE MBBCCHHR */                                                  14490002
*/* D (NO,CONTIN,YES,) MBBCCHHR = RECORD 0? */                          14520002
*/* P SET MBBCCHHR TO RECORD 1 */                                       14550002
*/*CONTIN: P GET PTR TO DEB EXTENTS */                                  14580002
*/* P GET NO. OF EXTENTS */                                             14610002
*/* P SUBTRACT 1 FROM NO. EXTENTS */                                    14640002
*/* P POINT TO 1ST EXTENT ENTRY */                                      14670002
*/*CCHSUB3: D (YES,CCHSUB4,NO,) MBBCCHHR < THIS EXTENT? */              14700002
*/* D (YES,CCHSUB4,NO,) MBBCCHHR > THIS EXTENT? */                      14730002
*/* P SET BB TO FDAD BB */                                              14760002
*/* R RETURN */                                                         14790002
*/*CCHSUB4: D (YES,NAME03C,NO,) OUT OF EXTENTS? */                      14820002
*/* P INCREMENT EXTENT COUNTER */                                       14850002
*/* P SAVE EXTENT M */                                                  14880002
*/* P (,CCHSUB3) INCREMENT TO NEXT EXTENT */                            14910002
*/*CONRTN: E SUBROUTINE */                                              14940002
*/* N FOR CONSOLE INPUT */                                              14970002
*/* P CLEAR WTOECB */                                                   15000002
*/* P CLEAR INPUT BUFFER */                                             15030002
*/* L ISSUE WTOR AMA116A */                                             15060002
*/* L WAIT FOR REPLY */                                                 15090002
*/* P INSURE REPLY WAS CAP LETTERS */                                   15120002
*/* S WRITE:PRINT REPLY */                                              15150002
*/* S SCANKEY:GET CONTROL VERB */                                       15180002
*/* D (YES,,NO,%P11J2) IS IT END STMT? */                               15210002
*/* P SET LNKRG3 TO ADDR OF RDCARD1 */                                  15240002
*/* R RETURN VIA LNKRG3 */                                              15270002
*/*%P11J2: P SET LNKRG3 TO ADDR OF CONRTN */                            15300002
*/* N (,KEY01) DETERMINE OPERATION */                                   15330002
*/*WTORTN: E SUBROUTINE */                                              15360002
*/* P GET PARMLIST FOR DESIRED MSG */                                   15390002
*/* P SET LEN,  RTE & DESCR CODES FOR THIS MSG */                       15420002
*/* L WRITE MSG TO OPERATOR */                                          15450002
*/* R RETURN */                                                         15480002
*/*SCANKEY: E SUBROUTINE */                                             15510002
*/* N SCAN FREE FORMAT CONTROL CARDS */                                 15540002
*/* P INITIALIZE FOR START OF SCAN */                                   15570002
*/* N ENTRY FOR CONTINUOUS SCAN */                                      15600002
*/*SCANKEY1: P POINT TO BEGIN OF NEXT SCAN */                           15630002
*/*SCANKEY2: D (NO,SCANKEY3,YES,) CHAR BLANK? */                        15660002
*/* P INCREMENT POSITION POINTER */                                     15690002
*/* D (YES,,NO,SCANKEY2) END OF CONTROL CARD? */                        15720002
*/* P SET UP BLANK INPUT DATA */                                        15750002
*/* R RETURN */                                                         15780002
*/*SCANKEY3: N FOUND FIELD- LOOK FOR NEXT BLANK */                      15810002
*/* P SET BEGIN MARKER */                                               15840002
*/*SCANKEY4: P INCREMENT POSITION POINTER */                            15870002
*/* P DECREMENT COUNTER */                                              15900002
*/* D (YES,,NO,SCANKEY4) CHAR BLANK? */                                 15930002
*/* P GET NO OF CHARS THIS PARM */                                      15960002
*/* D (YES,,NO,%P12G4) WITHIN LEGAL SIZE? */                            15990002
*/* R RETURN */                                                         16020002
*/*%P12G4: P TRUNCATE */                                                16050002
*/* R RETURN */                                                         16080002
*/*SCANKEY5: E SUBROUTINE */                                            16110002
*/* N SCAN FOR MEMBER & CSECT NAMES */                                  16140002
*/* P BLANK OUT MEMBER & CSECT NAME BUFFERS */                          16170002
*/* S SCANKEY1:SCAN FOR MEMBER NAME */                                  16200002
*/* P SAVE MEMBER NAME */                                               16230002
*/* S SCANKEY1:SCAN FOR CSECT NAME */                                   16260002
*/* P SAVE CSECT NAME */                                                16290002
*/* D (YES,NAME03C,NO,) WERE NAMES OVER 8 CHAR */                       16320002
*/* R RETURN */                                                         16350002
*/*SCAN: E SUBROUTINE */                                                16380002
*/* N DECODES NUMERIC FIELDS ON CONTROL CARDS */                        16410002
*/*%P13B4: D (YES,,NO,%P13C4) CHAR BLANK? */                            16440002
*/* P INCREMENT POSITION POINTER */                                     16470002
*/* D (YES,IGNORE,NO,%P13B4) REACHED END OF BUFFER? */                  16500002
*/*%P13C4: P CLEAR BUFFERS */                                           16530002
*/*SCAN4: P SAVE START OF DATA FIELD */                                 16560002
*/*SCAN1: D (YES,SCAN3,NO,) CHAR COMMA? */                              16590002
*/* D (YES,SCAN3,NO,) CHAR BLANK? */                                    16620002
*/* P (,SCAN1) INCREMENT POSITION POINTER */                            16650002
*/*SCAN3: P GET NO OF CHARS SCANNED */                                  16680002
*/* P SAVE THE DATA */                                                  16710002
*/* D (YES,SCAN5,NO,) END OF DATA YET? */                               16740002
*/* D (YES,,NO,%P13J3) BLANK FOLLOWING COMMA? */                        16770002
*/* N (,SCAN5) DISCARD THIS OPERAND */                                  16800002
*/*%P13J3: P (,SCAN4) INCREMENT POSITION POINTER */                     16830002
*/*SCAN5: D (YES,DIGITERR,NO,) ODD NUM DIGITS? */                       16860002
*/* D (YES,,NO,IGNORE) WAS ORIGINAL INPUT IN HEX */                     16890002
*/* P TRANSLATE TO BINARY */                                            16920002
*/* P SAVE START ADDR OF DATA */                                        16950002
*/*SCAN6: P CONVERT TO HEX */                                           16980002
*/* P INCREMENT TEMP & DATA BUF POINTERS */                             17010002
*/* D (YES,,NO,SCAN6) END OF DATA BLOCK? */                             17040002
*/* R RETURN */                                                         17070002
*/*DIGITERR: S SCANKEY:GET KEY WORD */                                  17100002
*/* D (YES,DIGERR2,NO,) WAS IT A REP CARD? */                           17130002
*/* P TURN ON IGNOP SW TO IGNORE REPS */                                17160002
*/*DIGERR2: P POINT TO MSG AMA109I */                                   17190002
*/* S WRITEO:PRINT ERROR MSG */                                         17220002
*/* D (ON,,OFF,%P14H3) CONSW? */                                        17250002
*/* S WTORTN:WRITE MSG TO CONSOLE */                                    17280002
*/*%P14H3: P SET RETURN CODE 8 */                                       17310002
*/* R RETURN VIA LNKRG3 */                                              17340002
*/*OPENLIB: E SUBROUTINE */                                             17370002
*/* D (YES,,NO,%P15C4) D.S. ALREADY OPEN? */                            17400002
*/* R RETURN */                                                         17430002
*/*%P15C4: L READ JFCB FOR LIB */                                       17460002
*/* D (YES,,NO,RSRV) UPDATE TO VTOC? */                                 17490002
*/* S UPVTRTN:ASK OPER TO UPDATE VTOC */                                17520002
*/* D (YES,,NO,NOF4MOD) IS IT OK WITH HIM? */                           17550002
*/*RSRV: P GET DEB ADDR FOR SYSLIB */                                   17580002
*/* P SAVE UCB ADDR FROM DEB */                                         17610002
*/* L RESERVE DEVICE WHERE SYSLIB RESIDES */                            17640002
*/* P TURN ON RSVSW- INDICATE RESV ISSUED */                            17670002
*/*OPEN2: L OPEN LIB FOR UPDATE */                                      17700002
*/* R RETURN */                                                         17730002
*/*NOF4MOD: N DONT ALLOW INSP OR MODIF */                               17760002
*/* P TURN ON NAMEERR SW */                                             17790002
*/* P POINT TO ERROR MSG AMA114I */                                     17820002
*/* S WRITEO:PRINT ERROR MSG */                                         17850002
*/* D (YES,,NO,%P16H2) CONSOLE OPTION IN EFFECT? */                     17880002
*/* S WTORTN:WRITE MSG TO CONSOLE */                                    17910002
*/*%P16H2: P SET RETURN CODE 8 */                                       17940002
*/* R RETURN VIA LNKRG3 */                                              17970002
*/*RDDISK: E SUBROUTINE */                                              18000002
*/* N XDAP READS FOR SPECIFIC RECORDS */                                18030002
*/* P GET MAX SIZE OF RECORD */                                         18060002
*/* L XDAP TO READ RECORD */                                            18090002
*/* L WAIT FOR COMPLETION OF READ */                                    18120002
*/*ERRTST: D (YES,,NO,%P17F2) SUCCESSFUL COMPLETION? */                 18150002
*/* R RETURN */                                                         18180002
*/*%P17F2: N TEST TYPE OF ERROR */                                      18210002
*/* D (YES,,NO,CLOSE2A) PERMANENT ERROR? */                             18240002
*/* D (YES,,NO,CLOSE2A) WRONG LENGTH RECORD? */                         18270002
*/* R RETURN */                                                         18300002
*/*CLOSE2A: P GET IOB ADDR */                                           18330002
*/* L SYNADAF- ANALYZE PERM I/O ERROR */                                18360002
*/* P SAVE ADDR OF SYNAD WORK AREA */                                   18390002
*/* P MOVE I/O ERR MSG TO MSG BUFFER */                                 18420002
*/* S IOMSG:PRINT I/O ERROR MSG */                                      18450002
*/* L SYNADRLS- RELEASE SYNADAF WORK AREAS */                           18480002
*/* P SET RETURN CODE 8 */                                              18510002
*/* P TURN ON IGNORE OPER & NAMEERR SW */                               18540002
*/* R RETURN */                                                         18570002
*/*WRDISK: E SUBROUTINE */                                              18600002
*/* N XDAP WRITES TO UPDATE SPECIFIC RECORDS */                         18630002
*/* P GET MAX SIZE OF RECORD */                                         18660002
*/* P TURN ON SLI IN XDAP SUPPLIED CH PROG */                           18690002
*/* L XDAP TO WRITE RECORD */                                           18720002
*/* L (,ERRTST) WAIT FOR COMPLETION OF WRITE */                         18750002
*/*UPVTRTN: E SUBROUTINE */                                             18780002
*/* N MSG AMA117D TO OPER- PERM TO UPDATE VTOC */                       18810002
*/* P HOUSEKEEPING */                                                   18840002
*/* L EXTRACT ADDR OF TIOT FOR ACT TASK */                              18870002
*/* P MOVE JOBNAME FROM TIOT TO MSG BUF */                              18900002
*/* P INCREMENT TO FIRST DD ENTRY */                                    18930002
*/*CHKLIB: D (YES,LIBUCB,NO,) DD ENTRY FOR SYSLIB? */                   18960002
*/* P (,CHKLIB) INCREMENT TO NEXT DD ENTRY */                           18990002
*/*LIBUCB: P GET POINTER TO SYSLIB UCB */                               19020002
*/* P MOVE VOLSER TO MSG BUF */                                         19050002
*/*UNITNAME: P MOVE UNIT ADDR TO MSG BUF */                             19080002
*/* L WRITE MSG AMA117D TO OPERATOR */                                  19110002
*/* L WAIT FOR HIS REPLY */                                             19140002
*/* P BLANK OUT MSG AREA */                                             19170002
*/* R RETURN */                                                         19200002
*/*IOMSG: E SUBROUTINE */                                               19230002
*/* N PRINTS SYNADAF I/O ERROR MSG */                                   19260002
*/* P INITIALIZE MSG BUF WITH SYNADAF ERROR INFO */                     19290002
*/* L PRINT MSG QSAM*/                                                  19320002
*/* L CHECK FOR COMPLETION OF WRITE */                                  19350002
*/* L PRTOV- SPACE TO NEW PAGE IF NECESSARY */                          19380002
*/* D (NO,,YES,%P20G2) CONSOLE OPTION IN EFFECT? */                     19410002
*/* R RETURN */                                                         19440002
*/*%P20G2: L WRITE MSG TO OPERATOR */                                   19470002
*/* R RETURN */                                                         19500002
*/*SETUP1: E SUBROUTINE */                                              19530002
*/* N PREPARE FOR VERYIFY OR REP */                                     19560002
*/* S SCAN:GET OFFSET */                                                19590002
*/* P SAVE OFFSET */                                                    19620002
*/* S SCAN:GET PATCHES */                                               19650002
*/* S OPENLIB:OPEN DATA SET FOR UPDATE IF NOT */                        19680002
*/* P POINT TO OFFSET INTO RECORD */                                    19710002
*/* P SUBTRACT BASE VALUE IF ANY */                                     19740002
*/* D (YES,NAME07,NO,) IS THIS A CSECT OPERATION? */                    19770002
*/* P CALCULATE END OF PATCH AREA */                                    19800002
*/* D (YES,%P22B4,NO,) DOES IT EXCEED END OF RECORD? */                 19830002
*/* R RETURN */                                                         19860002
*/*%P22B4: P (,VERY1) POINT TO MSG AMA106I */                           19890002
*/*NAME07: N ENTER HERE AFTER REP CARD WITH NAME OP */                  19920002
*/* P SET PATCH ADDR */                                                 19950002
*/* P RESTORE START ADDR */                                             19980002
*/* L POINT TO RECORD */                                                20010002
*/* D (YES,NAME07A,NO,) MULT TEXT REC SW ON ? */                        20040002
*/* D (YES,NAME08,NO,) ONE RECORD SW SET ? */                           20070002
*/*NAME07B: S RDDSK4:READ CONTROL RECORD */                             20100002
*/* D (VEC1,NAME12B,VEC2,) RETURN VECTOR ? */                           20130002
*/*NAME08: P POINT TO PATCH ADDR IN CORE */                             20160002
*/* D (YES,DSERROR,NO,) PATCH ADDR < ADDR TXT REC */                    20190002
*/* P COMPUTE END ADDR OF TXT REC */                                    20220002
*/* D (YES,NAME09,NO,) PATCH ADDR < END ADDR */                         20250002
*/* D (YES,NAME12B,NO,) ONE RECORD SW ON ? */                           20280002
*/*NAME08B: D (YES,NAME12B,NO,) END OF LOAD MODULE */                   20310002
*/* P SET LNKRG2 TO ADDR VECTOR1 */                                     20340002
*/* N (,RDDSK3) SKIP THIS TXT, READ NEXT CONTROL */                     20370002
*/*NAME07A: S NAME01A:SET MODULE ATTRIBUTES */                          20400002
*/* D (VEC1,%P41F5,VEC2,%P41F3,VEC3,%P41G4) RETURN VECTOR  */           20430002
*/*%P41F5: P (,%P41G4) NOP */                                           20460002
*/*%P41F3: P NOP */                                                     20490002
*/*%P41G4: S RDDSK2:GET 1ST TXT REC */                                  20520002
*/* P TURN OFF ONE RECORD INDIC IF ON */                                20550002
*/* L (,NAME08) POINT AT START OF TXT */                                20580002
*/*NAME09: S RDDSK2:GET TXT RECORD */                                   20610002
*/* P GET TXT START ADDR */                                             20640002
*/* P ADD NUM OF PATCH CHARS */                                         20670002
*/* P TURN OFF OVERFLOW SW IF ON */                                     20700002
*/* D (YES,NAME10,NO,) IS END PATCH IN REC */                           20730002
*/* D (YES,NAME12B,NO,) ONE RECORD SW ON */                             20760002
*/* P TURN ON OVERFLOW SW */                                            20790002
*/* P DETERMINE NUM OF CHARS OVER */                                    20820002
*/* P DETERMINE NUM OF PATCH CHARS IN THIS TXT */                       20850002
*/* P DECR BY ONE & SAVE */                                             20880002
*/*NAME10: S CCHNOTE:SET UP CCHHR */                                    20910002
*/* P COMPUTE OFFSET */                                                 20940002
*/* D (VER,NAME13,REP,) VERIFY OR REP */                                20970002
*/* D (NO,,YES,SPLIT) FIRST PASS SW ON? */                              21000002
*/* P TURN FIRST PASS SW ON */                                          21030002
*/* S (,NAME10A) UNPATCH: FORMAT UNPATCH MESSAGE */                     21060002
*/*SPLIT: P RESET OFFSET INTO MESSAGE */                                21090002
*/* S UNPK: COMPLETE UNPATCH MESSAGE */                                 21120002
*/*NAME10A: P SAVE OFFSET OF LAST DATA MOVED */                         21150002
*/* P MOVE THIS PART OF PATCH TO TXT */                                 21180002
*/*NAME11: S WRDISK:UPDATE DISK */                                      21210002
*/* P INDICATE MODIFICATION- MODIFY SW */                               21240002
*/*NAME12: D (YES,%P42H4,NO,) MORE PATCH- OVRFL? */                     21270002
*/*WRITEUN: D (NO,%P42H5,YES,) IS THIS A VERIFY OPERATION */            21300002
*/* R RETURN VIA LNKRG3 */                                              21330002
*/*%P42H5: S WRITE:PRINT MESSAGE */                                     21360002
*/* P BLANK LAST 40 CHAR OF BUFFER */                                   21390002
*/* P TURN OFF FIRST PASS SW */                                         21420002
*/* R RETURN VIA LNKRG3 */                                              21450002
*/*%P42H4: P (,NAME07B) UPDATE VARIABLES FOR REST OF PATCH */           21480002
*/*NAME12B: P (,NAME14) POINT TO MSG AMA106I */                         21510002
*/*NAME13: D (YES,NAME12,NO,) DOES PATCH COMPARE */                     21540002
*/* P POINT TO MSG AMA104I */                                           21570002
*/*NAME14: S WRITEO:PRINT ERROR MSG */                                  21600002
*/* D (YES,,NO,%P43G2) CONSOLE OPT IN EFFECT */                         21630002
*/* S WTORTN:WRITE MSG TO CONSOLE */                                    21660002
*/*%P43G2: P SET RETURN CODE 8 */                                       21690002
*/* P (,DUMP01A) TURN ON IGNOP SW- IGNORE REPS */                       21720002
*/*DSERROR: P (,NAME14) POINT TO MSG AMA107I */                         21750002
*/*INSMDFY: E SUBROUTINE */                                             21780002
*/* N UPDATE SSI TO INDICATE LOCAL MODIFY AFTER SUCCESSFUL REP */       21810002
*/* D (YES,CKIDR,NO,) NAME OPT REP- MODIFY?*/                           21840002
*/* D (YES,%21A6,NO,) CCHHR REP OCCURR? */                              21870002
*/* R RETURN */                                                         21900002
*/*%21A6: L READ JFCB FOR LIB2 */                                       21930002
*/* D (NO,MOVESER,YES,) IS UPDATE FOR VTOC */                           21960002
*/* P MAKE DSN 'FORMAT4.DSCB' */                                        21990002
*/*MOVESER: P MOVE VOLSER TO MSG BUF */                                 22020002
*/* P MOVE CCHHR TO MSG BUF */                                          22050002
*/* P DETERMINE LENGTH OF DSN */                                        22080002
*/* P MOVE DSN TO MSG BUF */                                            22110002
*/* P MOVE ROUTER/DESCR CODES TO MSG BUF */                             22140002
*/* P MOVE MSG LEN TO MSG BUF */                                        22170002
*/* L EXTRACT TIOT ADDRESS */                                           22200002
*/* P MOVE JOBNAME TO MSG BUF */                                        22230002
*/*WTO: L WRITE AMA121I TO CONSOLE */                                   22260002
*/* P TURN OFF CCHHR UPDATE SW- MODFYREC */                             22290002
*/* R RETURN */                                                         22320002
*/*CKIDR: D (YES,,NO,INSM1) IDR UPDATE REQUIRED ? */                    22350002
*/* L POINT TO IDR- IDRTTR */                                           22380002
*/* S RDDSK2:READ IDR RECORD */                                         22410002
*/* P POSITION TO NEXT SPZAP ENTRY IN IDR */                            22440002
*/* L GET DATE */                                                       22470002
*/* P MOVE DATE TO IDR */                                               22500002
*/* P MOVE CSECT ESDID TO IDR */                                        22530002
*/* P MOVE IDR USER DATA TO IDR */                                      22560002
*/* P PREPARE FOR DISK UPDATE- IDRFSEEK */                              22590002
*/* S WRDISK:UPDATE DISK */                                             22620002
*/* P TURN OFF IDR UPDATE SW */                                         22650002
*/*INSM1: P TURN OFF NAMEOP REP SW- MODIFY */                           22680002
*/*INSM1A: N INSPECT FOR A PDS REP HAVING OCCURRED */                   22710002
*/* S DIRREAD:GET DIR BLOCK WHICH SHOULD CONTAIN MEMBER */              22740002
*/* P SAVE STOP ADDR OF BLOCK */                                        22770002
*/* P POINT TO FIRST ENTRY */                                           22800002
*/* P TURN ON NO-MEMBER SW */                                           22830002
*/*INSM2: P GET LEN OF USER FIELD */                                    22860002
*/* D (YES,INSM3,NO,) DO WE HAVE THE MEMBER WE WANT? */                 22890002
*/* P POINT TO NEXT ENTRY */                                            22920002
*/* D (YES,,NO,INSM2) EXCEEDED LEN OF BLOCK? */                         22950002
*/* R RETURN */                                                         22980002
*/*INSM3: P TURN ON SSI MISSING SW */                                   23010002
*/* P TURN OFF MISSING MEMBER SW */                                     23040002
*/* D (NO,,YES,AOSPDS) WAS MODULE PRODUCED BY AOS LKED */               23070002
*/* P CONVERT LEN OF USER ENTRY TO NUM OF BYTES */                      23100002
*/* D (YES,,NO,%P24G4) IS NUM <= 22? */                                 23130002
*/* N USER FIELD CONTAINS NO SSI */                                     23160002
*/* R RETURN */                                                         23190002
*/*%P24G4: D (YES,,NO,%P24H4) IS NUM = 30? */                           23220002
*/* N USER FIELD CONTAINS NO SSI */                                     23250002
*/* R RETURN */                                                         23280002
*/*%P24H4: D (YES,,NO,%P24J4) IS NUM = 32? */                           23310002
*/* N USER FIELD CONTAINS NO SSI */                                     23340002
*/* R RETURN */                                                         23370002
*/*%P24J4: D (YES,,NO,%P25A2) IS NUM = 40? */                           23400002
*/* N USER FIELD CONTAINS NO SSI */                                     23430002
*/* R RETURN */                                                         23460002
*/*%P25A2: P POINT TO SSI BYTES */                                      23490002
*/*INSM4: P TURN OFF NO-SSI SW */                                       23520002
*/* D (YES,,NO,%P25D2) SSI OPERATION BEING PERFORMED ? */               23550002
*/* R RETURN */                                                         23580002
*/*%P25D2: P TURN ON LOCAL MODIFY BITS */                               23610002
*/* S DIRWRITE:UPDATE DIRECTORY */                                      23640002
*/* S SCANKEY:RESET POINTERS */                                         23670002
*/* R RETURN */                                                         23700002
*/*AOSPDS: D (NO,,YES,%HASSSI) IS SSI PRESENT */                        23730002
*/* R RETURN */                                                         23760002
*/*%HASSSI: P SET SSI PTR TO END OF BASIC SECTION */                    23790002
*/* D (YES,,NO,NOSCTR) IS MEMBER SCATTER LOADABLE */                    23820002
*/* P ADD 8 TO SSI PTR */                                               23850002
*/*NOSCTR: D (YES,,NO,NOALIAS) IS MEMBER NAME AN ALIAS */               23880002
*/* P ADD 11 TO SSI PTR */                                              23910002
*/*NOALIAS: P (,INSM4) PUT SSIPTR IN PROPER REGISTER */                 23940002
*/*WRITEO: E SUBROUTINE */                                              23970002
*/* N PRINTS INPUT CARD OR ERROR MSGS */                                24000002
*/* P MOVE MSG TO MSG BUFFER */                                         24030002
*/*WRITE1: P PAD REST OF BUFFER WITH BLANKS */                          24060002
*/*WRITE: L ISSUE WRITE- QSAM */                                        24090002
*/* L CHECK FOR COMPLETION */                                           24120002
*/* L SPACE TO NEW PAGE IF NECESSARY- PRTOV */                          24150002
*/* P BLANK OUT END OF BUFFER */                                        24180002
*/* R RETURN VIA LNKRG1 */                                              24210002
*/*RDCARD2: E SUBROUTINE */                                             24240002
*/* N QSAM READS TO CARD READER */                                      24270002
*/* L GET A CARD */                                                     24300002
*/* R RETURN */                                                         24330002
*/*DIRREAD: E SUBROUTINE */                                             24360002
*/* N SIMULATES BLDL- READ SPECIFIC DIRECTORY BLOCK */                  24390002
*/* P MOVE IN TIC TO EXTENDED CH PROGM */                               24420002
*/* P MOVE IN READ AREA ADDRESS */                                      24450002
*/* P GET DEB ADDR */                                                   24480002
*/* P SET SEEK ADDR FROM DEB IN 1ST CCW */                              24510002
*/*UPDATEIO: P SET ADDR IOB FOR EXCP */                                 24540002
*/* N SEARCH FOR DIRECTORY, READ COUNT, */                              24570002
*/* N SEARCH ON KEY, READ APPR DIR BLOK */                              24600002
*/* L ISSUE SVC 0- EXCP */                                              24630002
*/* L (,ERRTST) WAIT FOR COMPLETION */                                  24660002
*/*DIRWRITE: E SUBROUTINE */                                            24690002
*/* N SIMULATES STOW- UPDATE DIRECTORY BLOCK */                         24720002
*/* P EXTEND XDAP CH PROG WITH UPDATE CCW */                            24750002
*/* P MOVE IN WRITE AREA ADDR */                                        24780002
*/* P (,UPDATEIO) SET SEARCH ARG */                                     24810002
*/*DUMP01AA: E SUBROUTINE */                                            24840002
*/* L POINT AT TEXT RECORD */                                           24870002
*/*DUMP01: S WRITEO:SKIP A LINE */                                      24900002
*/* S RDDSK2:READ TEXT RECORD */                                        24930002
*/*DUMP01E: S CCHNOTE:SET UP CCHHR */                                   24960002
*/* P MOVE HEADER TO MSG BUFFER */                                      24990002
*/* P POINT TO DATA TO BE DUMPED */                                     25020002
*/* P GET KEYLEN FROM DCB */                                            25050002
*/* P ADD MAX SIZE OF RECORD */                                         25080002
*/* P MINUS RESIDUAL = LEN OF DATA */                                   25110002
*/* D (YES,DUMP01AC,NO,) MEMBER DUMP ONLY ? */                          25140002
*/* D (YES,,NO,DUMP01AB) ABSOLUTE DUMP ? */                             25170002
*/* P BLANK OUT CSECT LABEL FROM HEADER */                              25200002
*/*DUMP01AC: P BLANK OUT CSECT NAME FIELD FROM HEADER */                25230002
*/* P SAVE LEN OF DATA TO BE DUMPED */                                  25260002
*/*DUMP01AB: P COMPUTE STOP ADDR OF DATA */                             25290002
*/* P STORE NEW LEN */                                                  25320002
*/* P XLATE & MOVE REC ADDR TO MSG BUF */                               25350002
*/* P XLATE & MOVE REC LEN TO MSG BUF */                                25380002
*/* S WRITE:PRINT HEADER */                                             25410002
*/* D (YES,,NO,%P30J4) WAS RECORD LEN ZERO ? */                         25440002
*/* R RETURN VIA LNKRG2 */                                              25470002
*/*%P30J4: N DETERMINE OFFSET OF 1ST LINE OF DUMP */                    25500002
*/* P SUBTRACT BASE OFFSET FROM START ADDR */                           25530002
*/*DUMP02: S DUMPCOM1:INITIALIZE FOR DUMP */                            25560002
*/* P SAVE LOCATION OF LINE START- TBUF */                              25590002
*/* P SAVE OFFSET THIS LINE- TBUF */                                    25620002
*/*DUMP02B: P INITIALIZE CHAR COUNTER TO 4 */                           25650002
*/*DUMP02C: P XLATE & MOVE 1 DATA BYTE TO 2 MSG BYTES */                25680002
*/* P INCREMENT MSG BUF PTR BY 2 */                                     25710002
*/* D (YES,DUMP08,NO,) END OF DATA ? */                                 25740002
*/* D (YES,DUMP03B,NO,) TRANSLATE OPTION ? */                           25770002
*/*DUMP03A: P DECR CHAR COUNT BY 1 */                                   25800002
*/* D (YES,,NO,DUMP02C) IS CHAR COUNT ZERO ?*/                          25830002
*/* D (YES,DUMP03,NO,) WORD COUNT = 5 ? */                              25860002
*/* P SPACE 3 BLANKS BETWEEN WORDS */                                   25890002
*/* D (YES,,NO,DUMP02D) TRANSLATE OPTION ? */                           25920002
*/* P CHANGE SPACE BTWN WORDS TO 2 BLNKS */                             25950002
*/*DUMP02D: P DECR WORD COUNTER BY 1 */                                 25980002
*/* D (YES,,NO,DUMP02B) IS WORD COUNT ZERO ? */                         26010002
*/* D (YES,GRAP1,NO,) TRANSLATE OPTION ? */                             26040002
*/* S WRITE:PRINT LINE */                                               26070002
*/*DUMP02E: P ADD 32 TO OFFSET FIELD */                                 26100002
*/* N (,DUMP02) PROCESS NEXT LINE */                                    26130002
*/*DUMP03B: D (YES,,NO,DUMP03A) CHAR COUNT = 3 ? */                     26160002
*/* P INCR MSG BUF PTR BY 1 */                                          26190002
*/* P DECR CHAR COUNT BY 1 */                                           26220002
*/* D (YES,,NO,DUMP02C) IS CHAR COUNT ZERO ? */                         26250002
*/*DUMP03: P INCR MSG BUF PTR BY 5- MID PAGE */                         26280002
*/* P DECR WORD COUNTER BY 1 */                                         26310002
*/* D (YES,,NO,DUMP02B) IS WORD COUNT ZERO ? */                         26340002
*/*DUMP08: D (YES,GRAP1,NO,) TRANSLATE OPTION ? */                      26370002
*/* S WRITE:PRINT LAST LINE */                                          26400002
*/* P SET CONDITION CODE TO 3 IF END OF MOD */                          26430002
*/* R RETURN VIA LNKRG2 */                                              26460002
*/*GRAP1: P SET LNKRG1 TO ADDR OF INSTR0 */                             26490002
*/* P SET PTR TO BEGIN OF DATA THIS LINE */                             26520002
*/*GRAP1B: P MOVE LEFT DELIM * TO MSG BUF */                            26550002
*/* P POINT TO TRANSLATE FIELD OF BUF */                                26580002
*/* P SET CHAR COUNTER = 16 */                                          26610002
*/*GRAP2: D (YES,GRAP3,NO,) DATA BYTE = BLANK ? */                      26640002
*/* D (YES,GRAP5,NO,) DATA BYTE <= X'7F' ? */                           26670002
*/* P LOAD ADDR OF ALPHANUM XLATE TABLE */                              26700002
*/* D (YES,GRAP6,NO,) DATA BYTE >= C'A' ? */                            26730002
*/*GRAP3: P MOVE A PERIOD TO MSG BUF FOR THIS BYTE */                   26760002
*/*GRAP3B: P INCR DATA PTR */                                           26790002
*/* D (YES,GRAP8,NO,) REACHED END DATA YET ? */                         26820002
*/* P INCR MSG BUF PTR */                                               26850002
*/* P DECR CHAR COUNT BY 1 */                                           26880002
*/* D (YES,,NO,GRAP2) CHAR COUNT = 0 ? */                               26910002
*/* P (,WRITE) MOVE RIGHT DELIM * TO MSG BUF */                         26940002
*/*GRAP5: P LOAD ADDR OF SPECIAL SYM XLATE TABLE */                     26970002
*/*GRAP6: P (,GRAP3B) MOVE & XLATE DATA BYTE TO MSG BUF */              27000002
*/*GRAP8: D (YES,,NO,WRITE) DID WE XLATE OPCODS YET */                  27030002
*/* S WRITE:PRINT LINE */                                               27060002
*/* P SET COND CODE 3 IF END OF MODULE */                               27090002
*/* R RETURN */                                                         27120002
*/*INSTR0: E SUBROUTINE */                                              27150002
*/* N MNEMONIC XLATION PART OF DUMP01 RTN */                            27180002
*/* S DUMPCOM:INITIALIZATION */                                         27210002
*/*INSTR1: P SET INSTR COUNTER = 2 */                                   27240002
*/*INSTR2: P GET DATA BYTE- OPCODE */                                   27270002
*/* P INCR TO NEXT DATA BYTE */                                         27300002
*/* D (YES,INSTR5,NO,) END OF DATA ? */                                 27330002
*/* P GET INDEX TO XLATE TABLE */                                       27360002
*/* D (YES,TWOBYTES,NO,) LOOK AT 2ND BYTE ? */                          27390002
*/*TABCHK: D (YES,TRANS5,NO,) FIVE CHAR OPCODE ? */                     27420002
*/* D (YES,INSTR7,NO,) FOUR CHAR OPCODE ? */                            27450002
*/* N TWO CHAR OPCODE */                                                27480002
*/* P POINT TO MNEMONIC IN TWO CHAR TABLE */                            27510002
*/* P MOVE MNEMONIC TO MSG BUF */                                       27540002
*/*INSTR3: P INCR PAST HALFWORD */                                      27570002
*/* D (YES,INSTR5,NO,) END OF DATA ? */                                 27600002
*/* P INCR MSG BUF PTR BY 4 */                                          27630002
*/* P DECR INSTR COUNTER */                                             27660002
*/* D (YES,,NO,INSTR8) INSTR COUNTER = 0 ? */                           27690002
*/* D (YES,INSTR6,NO,) WORD COUNTER = 5 ? */                            27720002
*/* P SPACE 3 BETWEEN WORDS */                                          27750002
*/* P DECR WORD COUNTER BY 1 */                                         27780002
*/* D (YES,,NO,INSTR1) WORD COUNTER = 0 ? */                            27810002
*/*INSTR5: P SET DATA PTR BACK TO BEGIN OF LINE */                      27840002
*/* P INCR DATA PTR TO SECOND HALF OF LINE */                           27870002
*/* P (,GRAP1B) SET LNKRG1 TO ADDR OF DUMP02E */                        27900002
*/*INSTR7: P POINT TO MNEMONIC IN FOUR CHAR TABLE */                    27930002
*/* P (,INSTR3) MOVE MNEMONIC TO MSG BUF */                             27960002
*/*TRANS5: P POINT TO MNEMONIC IN FIVE CHAR TABLE */                    27990002
*/* N IS THIS THE 2ND HWORD OF A PAIR ? */                              28020002
*/* D (YES,MOVE5,NO,) IS INSTR COUNTER = 1 ? */                         28050002
*/* N BACK UP ONE POS IN MSG BUF */                                     28080002
*/* P DECR MSG BUF PTR BY 1 */                                          28110002
*/* P MOVE MNEMONIC TO MSG BUF */                                       28140002
*/* P (,INSTR3) RESET MSG BUF PTR  +1 */                                28170002
*/*MOVE5: P (,INSTR3) MOVE MNEMONIC TO MSG BUF */                       28200002
*/*INSTR6: P INCR MSG BUF PTR BY 5- MID PAGE */                         28230002
*/* P DECR WORD COUNTER BY 1 */                                         28260002
*/* D (YES,,NO,INSTR1) IS WORD COUNT = 0 ? */                           28290002
*/*INSTR8: P (,INSTR2) INCR MSG BUF PTR BY 1- SPACE BTWN HWORDS */      28320002
*/*TWOBYTES: P GET 2ND BYTE OF INSTR */                                 28350002
*/* P RESET DATA BUF PTR TO BEGIN OF OPCODE */                          28380002
*/* D (YES,,NO,BYTE29C) 1ST BYTE = X'B2' ? */                           28410002
*/* D (YES,DXRCK,NO,) 2ND BYTE TOO HIGH */                              28440002
*/* P GET INDEX TO B2 XLATE TABLE */                                    28470002
*/*BYTE2EX: P (,TABCHK) INCR DATA BUF PTR BY 1 AGAIN */                 28500002
*/*DXRCK: D (NO,TOOHI,YES,BYTE2EX) DXR INSTRUCTION ? */                 28530002
*/*TOOHI: P (,BYTE2EX) NO MNEMONIC - ZERO INDEX */                      28560002
*/*BYTE29C: D (YES,,NO,BYTE29E) 1ST BYTE = X'9C' ? */                   28590002
*/* P (,BYTE2EX) GET INDEX TO 9C XLATE TABLE */                         28620002
*/*BYTE29E: D (YES,,NO,BYTE2XX) 1ST BYTE = X'9E' ? */                   28650002
*/* P (,BYTE2EX) GET INDEX TO 9E XLATE TABLE */                         28680002
*/*BYTE2XX: N NO MNEMONIC */                                            28710002
*/* P (,BYTE2EX) ZERO INDEX */                                          28740002
*/*DUMPCOM: E SUBROUTINE */                                             28770002
*/* P GET START LOC OF LINE */                                          28800002
*/*DUMPCOM1: N INITIALIZATION FOR DUMPING */                            28830002
*/* P BLANK MSG BUFFER */                                               28860002
*/* P LOAD LOC OF MSG BUFFER */                                         28890002
*/* P SET WORD COUNTER TO 8 */                                          28920002
*/* R RETURN */                                                         28950002
*/*SETBLKSI: E SUBROUTINE */                                            28980002
*/* N SETS SYSIN BLKSIZE TO 80 IF NOT PROVIDED */                       29010002
*/* P GET BLKSIZE FROM INPUT DCB */                                     29040002
*/* D (YES,,NO,%P44D1) WAS BLKSIZE PROVIDED */                          29070002
*/* R RETURN TO OPEN */                                                 29100002
*/*%P44D1: P MOVE BLKSIZE OF 80 TO DCB */                               29130002
*/* R RETURN TO OPEN */                                                 29160002
*/*UNPATCH: E SUBROUTINE */                                             29190002
*/* P MOVE UNPATCH MESSAGE TO BUFFER */                                 29220002
*/*UNPK: P TRANSLATE DATA TO BE REPLACED */                             29250002
*/* R RETURN */                                                         29280002
*/*OPTCDCK: E SUBROUTINE */                                             29310002
*/* N SUPPRESS OPTCD FROM SYSLIB DSCB */                                29340002
*/* R RETURN TO OPEN */                                                 29370002
*/*AMASPZAP: END */                                                     29400002
AMASPZAP CSECT                                                          29430002
*A472300-472420,535300-535420,578800-578920                     YA01766 29430502
*A588700-588820,633020-633060                                   YA01766 29431002
*C534300                                                        YA01767 29431502
*A301000,316300,330300-331034,719100,724000                      Y02160 29431702
*A783400-783520,803400,815400,892300-892480,898300-898420        Y02160 29432002
*C778900-779400                                                  Y02160 29436002
*C888300,888400,888520,888560,888592                             YM5257 29440002
*A537000                                                         YM5531 29445002
*A714300                                                         YM5532 29450002
*C683700-685200,745800,746100,746800,750300,754800,755700,760500,YM5533 29452002
*C761100                                                         YM5533 29452402
*A685600-685740                                                  YM5533 29454002
*D341800-341960,807100-807284                                    YM5534 29456002
*C343500                                                         YM5534 29458002
*A823300-823760                                                  YM5534 29458402
*D418440-418460                                                  YM5148 29458802
*A422400-423000,425500                                           YM5148 29459202
*A421100,421140,576200-576220,600700,633100,638800,639400,642400 YM5146 29459602
*A808300-809020                                                  YM5146 29459702
*D848400,848700,896400896700,897000,897300,897600                YM5147 29459802
*A848100-848320,848420-848640,848740,848840,896600,897100,897200,YM5147 29459902
*A897700,897800                                                  YM5147 29469902
*A318700,538200-539400,547500-548700,585300-589200,592800-594300,X01979 29480002
*A599700-602700,753900-754800,765900-766800,79770                X01979 29490002
*A578200,578300,705100-705248,767800,768400,775300,775400        X01979 29520002
*C591300,703800,704200,767700,775800,777900,779100,780900,781200 X01979 29550002
         SPACE 1                                                        29580002
*********************************************************************** 29610002
*                  REGISTER DEFINITIONS                                 29640002
*********************************************************************** 29670002
RG0      EQU   0                                                        29700002
RG1      EQU   7                                                        29730002
RG2      EQU   2                                                        29760002
RG3      EQU   3                                                        29790002
RG4      EQU   4                                                        29820002
RG5      EQU   5                                                        29850002
RG6      EQU   6                                                        29880002
WK1      EQU   RG1                                                      29910002
WK2      EQU   RG2                                                      29940002
WK3      EQU   RG3                                                      29970002
WK4      EQU   RG4                                                      30000002
WK5      EQU   RG5                                                      30030002
WK6      EQU   RG6                                                      30060002
WK7      EQU   1                        MISC REGISTER FOR DUMP ROUTINE  30090002
R0       EQU   0                                                 Y02160 30100002
R1       EQU   1                                                        30120002
LNKRG1   EQU   8                                                        30150002
LNKRG2   EQU   9                                                        30180002
LNKRG3   EQU   13                                                       30210002
R13      EQU   13                                                       30240002
BASREG3  EQU   10                       RDAREA1 BASE REGISTER           30270002
BASREG2  EQU   11                                                       30300002
BASREG   EQU   12                                                       30330002
R14      EQU   14                                                       30360002
R15      EQU   15                                                       30390002
*******************                                                     30420002
*                  EQUATES                                              30450002
*******************                                                     30480002
OPENED   EQU   X'10'                    DCB OPENED BIT                  30510002
OPENBIT  EQU   48                       OFFSET FOR OPEN BIT             30540002
MULTXT   EQU   X'08'                    NOT EDITABLE                    30570002
MODTTR   EQU   8             .(PDS-DIRECTORY) TTR OF 1ST RECD. @ZA19029 30600037
TXTTTR   EQU   14            .(PDS-DIRECTORY) TTR OF 1ST TXT.  @ZA19029 30610037
ATTR     EQU   22                       PDS ATTRIBUTE FIELD             30630002
AOS      EQU   X'80'                    AOS LKED PDS FLAG        Y01979 30640002
SSIB     EQU   X'10'                    SSI PDS FLAG BIT         Y01979 30650002
SCTR     EQU   X'04'                    PDS SCTR SECTION FLAG    Y01979 30652002
ALIAS    EQU   X'80'                    PDS ALIAS FLAG BIT       Y01979 30654002
LNGTH    EQU   27                       POD LENGTH OF TEXT              30660002
ORGIN    EQU   32                       POD LOC FOR TEST ORIGIN         30690002
NEXTS    EQU   X'10'                    NO. OF EXTENTS IN DATA SET      30720002
DEBEXT   EQU   X'20'                    EXTENT FIELD IN DEB             30750002
STEXT    EQU   X'26'                    START ADDR IN EXTENT            30780002
ENDEXT   EQU   X'0A'                    END ADDR IN EXTENT              30810002
COMMA    EQU   X'6B'                                                    30840002
BLANK    EQU   X'40'                                                    30870002
AST      EQU   X'5C'                    COMMENT KEY WORK                30900002
SSIMDFY  EQU   X'01'                    OFFSET IN SSI BYTES FOR MODIFY  30930002
SSIOP    EQU   X'80'                    SSI ACTION FLAG                 30960002
NAMEIDR  EQU   X'40'                    IDR CARD AFTER NAME CARD S21016 30990002
IDRRD    EQU   X'20'                    LOAD MOD HAS IDR RECORDS S21016 31020002
MODFYREC EQU   X'10'                    CCHHR REP HAS BEEN DONE  S21016 31050002
NOSSI    EQU   X'08'                    SSI FIELD MISSING FLAG          31080002
NOMEM    EQU   X'04'                    NO MEMBER FOUND FLAG            31110002
LMREAD   EQU   X'02'                    NEXT LOAD MOD REC READ   S21016 31140002
NENOIDR  EQU   X'01'                    MODULE IS NE SO NO IDR   S21016 31170002
MODIFY   EQU   X'01'                    REP ACTION FLAG                 31200002
TRAN     EQU   X'02'                    TRANSLATE DUMP                  31230002
FIRSTPCH EQU   X'10'                    UNPATCH FIRST PASS SW    X01979 31260002
PSIND    EQU   X'80'                    ON IF DUMP IS OF A SAM D.S.     31290002
MEMDMP   EQU   X'08'                    MEMBER DUMP OF DATA SDT         31320002
MULREC   EQU   X'04'                    MORE THAN ONE TEXT REC          31350002
ONEREC   EQU   X'01'                    INDICATOR FOR ONE RECORD MEM    31380002
NAMEOP   EQU   X'02'                    OPERATION USING NAME CARD       31410002
IGNOP    EQU   X'04'                    VERIFY OPERATION NEGATIVE       31440002
VERYOP   EQU   X'08'                    VERIFY OPTION IN PROGRESS       31470002
OVFLOW   EQU   X'10'                    OVERFLOW PATCH                  31500002
ENDMOD   EQU   X'20'                    END OF MODULE RECORD            31530002
NAMEERR  EQU   X'40'                    ERROR IN NAME OR CCHHR OF.      31560002
BLKSZE   EQU   X'3E'                    DCB BLKSIZE OFFSET              31590002
KEYLEN   EQU   16                       DCB KEYLENGTH OFFSET     A48718 31620002
DDNAM    EQU   X'28'                                             Y02160 31630002
MAK1     EQU   X'01'                    BYTE UPDATE                     31650002
CMD      EQU   31                       OFFSET IN XDAP MACRO     S21995 31680002
RSVON    EQU   X'FF'                                                    31710002
DS1DSORG EQU   82-44                    DISPLACEMENT OF DSORG IN F1DSCB 31740002
PO       EQU   X'02'                    DSORG FOR PARTITIONED           31770002
PS       EQU   X'40'                    DSORG FOR SEQUENTIAL            31800002
OVER8    EQU   X'08'                    NAME OVER 8 CHAR         A48705 31830002
OPTCD    EQU   52                       OPTCD OFFSET INTO LIB2   A49131 31860002
*********************************************************************** 31890002
*        THE FOLLOWING ARE INDEX VALUES FOR BRANCHING TO I/O CSCET      31920002
*********************************************************************** 31950002
ARDCARD2 EQU   0                                                 S21995 31980002
ACLOSE1  EQU   4                                                 S21995 32010002
AWRITEA  EQU   8                                                 S21995 32040002
AWRITE0A EQU   12                                                S21995 32070002
ADIRREAD EQU   16                                                S21995 32100002
ADIRWRIT EQU   20                                                S21995 32130002
ARDDSK2  EQU   24                                                S21995 32160002
AOPENLIB EQU   28                                                S21995 32190002
ARDDISK  EQU   32                                                S21995 32220002
AWRDISK  EQU   36                                                S21995 32250002
AWTO     EQU   40                                                S21995 32280002
ACLOSE2  EQU   44                                                S21995 32310002
AEOD     EQU   48                                                S21995 32340002
AINSMDFY EQU   52                                                X01979 32370002
AINSM1A  EQU   56                                                X01979 32400002
ACLOSE4  EQU   60                      .FOR PARM-ERR EXIT.     @ZA06024 32410000
ACLOSE5  EQU   64                      .FOR INVAL-RECD EXIT.   @ZA09673 32420000
*********************************************************************** 32430002
*        THE FOLLOWING ARE INDEX VALUES FOR BRANCHING TO DUMP CSECT     32460002
*********************************************************************** 32490002
ADMP1AA  EQU   0                                                 S21995 32520002
ADMP01   EQU   4                                                 S21995 32550002
ADMP1E   EQU   8                                                 S21995 32580002
ADMP1AB  EQU   12                                                S21995 32610002
  EJECT                                                                 32640002
*********************************************************************** 32670002
         SAVE  (14,12)                                                  32700002
         BALR  BASREG,0                                                 32730002
         USING *,BASREG                                                 32760002
         USING RDAREA1,BASREG3                                          32790002
BEGIN    L     BASREG2,ACONSTS                                   S21995 32820002
         USING AMASZCON,BASREG2                                  S21995 32850002
         ST    R13,REGSAVE+4                                            32880002
         LR    WK6,R13                                                  32910002
         LA    R13,REGSAVE                                              32940002
         ST    R13,8(WK6)                                               32970002
         B     ARROND                                                   33000002
IDENT    DC    CL8'REL/03.7'                                   @ZA09683 33030000
ACONSTS  DC    V(AMASZCON)             .BASE FOR CONSTS CSECT. @ZA02788 33035000
* TEST FOR PARAMETER SPECIFICATIONS.                           @ZA06024 33040000
ARROND   LTR   R1,R1                                           @ZA06024 33040500
         BZ    OPENUP                  .B IF NO PARAMETERS.    @ZA06024 33041000
         L     WK1,0(R1)               .PARAM-LIST POINTER.    @ZA06024 33041500
         LA    WK1,0(WK1)              .DROP HIGH BYTE.        @ZA06024 33042000
         LTR   WK1,WK1                                         @ZA06024 33042500
         BZ    ALTDDNAM                .B IF ADDR-PART ZERO.   @ZA06024 33043000
         LH    WK2,0(WK1)              .FIRST COUNT FIELD.     @ZA06024 33043500
         LTR   WK2,WK2                                         @ZA06024 33044000
         BZ    ALTDDNAM                .B OF ZERO (DYNAM ONLY) @ZA06024 33044500
* TEST FOR PARAM TO IGNORE IDR-FULL CONDITION.                 @ZA06024 33045000
         CLC   2(ZPRM0LEN,WK1),PARM0STR .TEST PARAM VALUE.     @ZA06024 33045500
         BE    IGNIDRFL                .B IF CORRECT.          @ZA06024 33046000
* INCORRECT PARAMETER VALUE. SET FLAG FOR MSG AFTER OPEN.      @ZA06024 33046500
         OI    PARMBITS,QPARMERR       .SET PARM-ERR FLAG.     @ZA06024 33047000
         B     ALTDDNAM                                        @ZA06024 33047500
* OPTION TO OVERRIDE IDR-FULL INHIBITION ON CSECT 'REP'S.      @ZA06024 33048000
IGNIDRFL OI    PARMBITS,QIGNIDRF       .SET BIT FOR OPTION.    @ZA06024 33048500
ALTDDNAM TM    0(R1),X'80'             .ELSE TEST FOR ALT DD.  @ZA06024 33049000
         BO    OPENUP                  .B IF NONE.             @ZA06024 33049500
* ALTERNATE DDNAMES SPECIFIED (SECND PARAM LIST OF DYNAM INV). @ZA06024 33050000
         L     R1,4(R1)          IF 2ND WORD OF PARM LIST IS     Y02160 33056002
         LTR   R1,R1               0, THEN NO DDNAMES            Y02160 33058002
         BZ    OPENUP                                            Y02160 33058402
         LH    WK1,0(R1)         IF LENGTH IS LT 25, THEN        Y02160 33058802
         CH    WK1,TWENTY4         NO SPZAP DDNAMES              Y02160 33059202
         BNH   OPENUP                                            Y02160 33059602
         CLC   24+2(8,R1),ZERO   IF DDNAME IS HEX 00, THEN       Y02160 33059702
         BE    SYSINTST          DEFAULT SYSLIB DD TO SYSLIB     Y02160 33059802
         MVC   LIB2+DDNAM(8),24+2(R1) ELSE, MOVE DDNAME INTO     Y02160 33059902
         MVC   LIB+DDNAM(8),24+2(R1)  LIB2 AND LIB DCBS          Y02160 33069902
         MVC   SYSLIB(8),24+2(R1)      .ALSO FOR VTOC UPDATE.  @ZA04271 33074900
SYSINTST CH    WK1,THIRTY2       IF LENGTH IS LT 33, THEN        Y02160 33079902
         BNH   OPENUP              NO MORE SPZAP DDNAMES         Y02160 33083202
         CLC   32+2(8,R1),ZERO   IF DDNAME IS HEX 00, THEN       Y02160 33085202
         BE    SYSPNTST          DEFAULT SYSIN TO SYSIN          Y02160 33085602
         MVC   INPUT+DDNAM(8),32+2(R1) ELSE, MOVE DDN TO INPUT   Y02160 33086002
SYSPNTST CH    WK1,FOURTY        IF LENGTH IS LT 41, THEN        Y02160 33086402
         BNH   OPENUP              NO MORE SPZAP DDNAMES         Y02160 33086502
         CLC   40+2(8,R1),ZERO   IF DDNAME IS HEX 00, THEN       Y02160 33086602
         BE    OPENUP              DEFAULT SYSPRINT TO SYSPRINT  Y02160 33094902
         MVC   OUTPUT+DDNAM(8),40+2(R1) ELSE, MOVE DDN TO OUTPUT Y02160 33096902
         DROP  BASREG                                          @ZA06024 33103400
OPENUP   BALR  BASREG,0             ***.(NEW ADDRESS BASE).*** @ZA06024 33103500
         USING *,BASREG                                        @ZA06024 33103600
ZAPBASE2 DS    0H                                              @ZA09678 33103700
         OPEN (INPUT,(INPUT),OUTPUT,(OUTPUT))                  @ZA06024 33103800
         RDJFCB LIB2                                                    33111702
         LA    RG4,JFCBAREA             ADDRESS OF JFCB                 33120002
         CLC   0(12,RG4),F4DSCB         JFCB FOR FORMAT 4 REQUEST       33150002
         BC    7,GETDSCB           NO, GO CHECK FOR TRKOVFL             33180002
         MVC   0(44,RG4),DSCBDS         MOVE IN 12-9-4 PUNCHES          33210002
         MVC    102(2,RG4),F4BLKSZ      MOVE IN NON-0 BLKSIZE    XM5390 33220002
         OPEN  (LIB2,(INPUT)),TYPE=J                                    33240002
         BC    15,CKOPEN                CHECK RESULTS OF OPEN           33270002
         SPACE 1                                                        33300002
*********************************************************************** 33330002
* THIS IS AN OPEN EXIT ROUTINE TO INVALIDATE THE OPTCD FROM THE DSCB    33360002
*********************************************************************** 33390002
OPTCDCK  MVI   LIB2+OPTCD,X'00'    SUPPRESS OPTCD                A49131 33420002
         BR    R14                 RETURN TO OPEN                A49131 33450002
         SPACE 1                                                        33480002
*******************                                                     33510002
*                                                                       33540002
*  THE FOLLOWING CODE CHECKS IF THE SYSLIB DATA SET HAS TRACK OVERFLOW  33570002
*  RECORDS. IF THERE ARE OVERFLOW RECORDS, THE RECFM FIELD IN THE DCB   33600002
*  IS SET TO INDICATE TRKIVFL BEFORE OPENING THE DATA SET. TRACK OVER-  33630002
*  FLOW DATA SETS ARE SUPPORTED ONLY FOR DUMP OPERATIONS (I.E. ABSDUMP, 33660002
*  AND DUMP STATEMENTS).                                                33690002
*                                                                       33720002
*******************                                                     33750002
GETDSCB  MVC   JFCBAREA+44(6),JFCBAREA+118   MOVE VOL SER               33780002
         ST    RG4,OBLIST+4        PUT ADDRESS OF DSNAME IN PARMLST     33810002
         LA    RG4,JFCBAREA+44     GET ADDRESS OF VOL SER               33840002
         ST    RG4,OBLIST+8        PUT ADDRESS OF VOL SER IN PARMLST    33870002
         LA    RG4,JFCBAREA+52     GET ADDRESS OF WRKAREA               33900002
         ST    RG4,OBLIST+12       PUT ADDRESS IN PARMLST               33930002
         OBTAIN OBLIST             GET THE FMT1 DSCB                    33960002
         TM    84-44(RG4),X'20'    DOES RECFM INDICATE TRKOVFL          33990002
         BNO   OPEN1               NO, OPEN SYSLIB                      34020002
         OI    LIB2+36,X'20'       SET TRKOVFL BIT IN DCBRECFM          34050002
*******************                                                     34080002
         SPACE 1                                                        34110002
OPEN1    OPEN  (LIB2,(INPUT))                                           34140002
CKOPEN   LH    RG1,LIB2+BLKSZE          GET BLKSIZE FROM DCB            34170002
         LTR   RG1,RG1                 .TEST FOR ZERO.         @ZA02777 34200000
         BNZ   CKOPEN2                 .B IF BLKSIZE IN DCB.   @ZA02777 34205000
         DEVTYPE SYSLIB,DEVBUF,DEVTAB                          @ZA02777 34210000
         LH    RG1,TRKSIZE             .ELSE                   @ZA02777 34215000
         STH   RG1,LIB2+BLKSZE         . SET TO TRACK SIZE.    @ZA02777 34220000
CKOPEN2  LA    RG2,X'0C00'             .MIN DASD BLOCKSIZE.    @ZA02777 34225000
         CR    RG2,RG1                  IS SPEC LARGER                  34230002
         BC    4,NRMREC                 SPEC LARGER-SKIP                34260002
         LR    RG1,RG2                  USE LARGEST                     34290002
NRMREC   AR    RG1,RG2                                                  34350002
         N     RG1,CLER                 REG. POSITIVE                   34380002
         LR    0,RG1                    INPUT REGISTER FOR GETMAIN      34440002
         SR    RG1,RG1                  CLEAR REGISTER           A48718 34470002
         IC    RG1,LIB2+KEYLEN          GET KEYLENGTH            A48718 34500002
         AR    RG0,RG1                  INCREASE GETMAIN STORAGE A48718 34530002
         ST    RG0,SIZE                .STORE BUFFER SIZE.     @ZM40094 34535000
         LA    R1,8                    .EXT FOR UNPK BEY BUFF  @ZM40094 34540000
         AR    R0,R1                   . IN CASE BUFF FILLED.  @ZM40094 34545000
         GETMAIN     R,LV=(0)                                           34560002
         L     R15,AIORTNS             SET ADDRESS OF IORTN      S21995 34590002
         ST    1,RDAREA                 SAVE START OF READ IN AREA      34620002
         TM    OUTPUT+OPENBIT,OPENED    OUTPUT DCB                      34650002
         LA    R1,AWTO                  MSG PRT. ON CONSOLE      S21995 34680002
         BCR   8,R15                                             S21995 34710002
         BAL   LNKRG1,WRITE             PRINT OUT SUPERZAP MESSAGE      34740002
         MVI   CDBUF-1,X'40'            SET FOR NORMAL SKIP             34770002
         TM    PARMBITS,QPARMERR        .TEST PARM-ERR FLAG.   @ZA06024 34800000
         BZ    NOPARMER                 .B IF NO PARM ERR.     @ZA06024 34802500
         MVC   RETCODE(1),RETCOD12      .SET RETURN CODE.      @ZA06024 34805000
         LA    RG5,MSGEPARM             .SELECT ERROR MSG.     @ZA06024 34807500
         LA    R1,ACLOSE4               .SELECT EXIT ADDR.     @ZA06024 34810000
         BR    R15                      .GO TO 'IOR' CSECT.    @ZA06024 34812500
* SYSPRINT OPENED AND NO PARAMETER ERROR.                      @ZA06024 34815000
NOPARMER LA    RG5,INERR                .ADDR NO-SYSIN MSG.    @ZA06024 34817500
         TM    INPUT+OPENBIT,OPENED     INPUT DCB                       34830002
         LA    R1,ACLOSE2               NOT OPENED-EXIT          S21995 34860002
         BCR   8,R15                                             S21995 34890002
         TM    LIB2+OPENBIT,OPENED        LIB 2 DCB                     34920002
         LA    RG5,MSGNOLIB            .NO-SYSLIB MESSAGE.     @ZA06023 34950000
         LA    R1,ACLOSE2               BC IF NOT OPENED         S21995 34980002
         BCR   8,R15                                             S21995 35010002
         LA    LNKRG3,RDCARD1           SET RETURN ADDRESS              35040002
RDCARD   NI    CTLBTE,X'FF'-IGNOP       RESET IGNORE OP                 35070002
RDCARD1  MVI   CONSW,X'00'              CLEAR CONSOLE SWITCH            35100002
         MVI   DMPSW,X'00'             .RESET DUMP INDICATOR.  @ZA26077 35110037
         LA    R1,ARDCARD2           GET CARD                    S21995 35130002
         BALR  R14,R15                                           S21995 35160002
         L     BASREG3,ACCISCAN        .ADDR INIT-SCAN RTNE.   @ZA17658 35190037
         BALR  LNKRG1,BASREG3          .TEST FOR IMMED PRINT.  @ZA17658 35195037
*        (RETURN WITH KEYWORD LOCATED BY 'SCANKEY').           @ZA00409 35200003
         CLC   0(7,RG1),CONSOLE         IS CONSOLE TO BE USED           35250002
         BC    8,CONRTN                 YES-GO WTO                      35280002
KEY01    CLI   0(RG1),AST               COMMENT CARD                    35310002
         BCR   8,LNKRG3                 YES-GET NEXT CARD               35340002
         CLC   0(8,RG1),CHECKSUM                               @ZA17660 35350037
         BE    CHSUMRTN                .B IF 'CHECKSUM' STMT.  @ZA17660 35360037
         L     BASREG3,RDAREA           SET READ AREA BASE              35370002
         XC    STARTINC(4),STARTINC     CLEAR IMBEDDED OFFSET           35400002
         TM    CTLBTE,NAMEERR           CAN VERIFY BE PERFORMED         35430002
         BC    1,KEY03                  NO-SKIP                         35460002
         CLC   0(6,RG1),SSI              SSI CARD                       35490002
         BC    8,SSIRTN                                                 35520002
         TM    CTLBTE,IGNOP             CHECK FOR PREV.VERIFY ERROR     35550002
         BC    1,KEY02                  FLAG SET-SKIP REP CHECK         35580002
         CLC   0(3,RG1),REP                                             35610002
         BC    8,REPRTN                 REPCARD                         35640002
KEY02    CLC   0(3,RG1),VERIFY                                          35670002
         BC    8,VERYRTN                VERIFY OPTION                   35700002
         CLC   0(7,RG1),IDRDATAC        IDR CARD                 S21016 35730002
         BE    IDRRTN                                            S21016 35760002
         LA    R1,AINSMDFY              GET INDEX                X01979 35790002
         BALR  R14,R15                  INSPECT FOR PROG MODIFY  X01979 35820002
         BAL   LNKRG1,SCANKEY           RESET POINTERS                  35850002
KEY03    CLC   0(5,RG1),CCHHR           ABSOLUTE UPDATE                 35880002
         BC    8,CCHHRTN                ABSOLUTE UPDATE                 35910002
         CLC   0(4,RG1),NAME                                            35940002
         BC    8,NAMERTN                CSECT UPDATE                    35970002
         CLC   0(4,RG1),BASEO                                           36000002
         BC    8,BASERTN                BASE OFFSET                     36030002
         CLC   0(4,RG1),DUMP            DUMP DISK                       36060002
         BC    8,DUMPRTN                DUMP DISK                       36090002
         CLC   0(7,RG1),ABSDUMP         ABSOLUTE DUMP CARD              36120002
         BC    8,ABDMPRTN               YES-DUMP RECORDS                36150002
         CLC   0(3,RG1),SLAST           END OF INPUT                    36180002
         BC    7,IGNORE                 NO-IGNORE                       36210002
         LA    R1,AINSMDFY              GET INDEX                X01979 36240002
         BALR  R14,R15                  INSPECT FOR PROG MODIFY  X01979 36270002
         LA    R1,AEOD                 YES-END                   S21995 36300002
         BR    R15                                               S21995 36330002
         SPACE 1                                                        36360002
IGNORE   L     RG5,AMSG105I            .SELECT MESSAGE.        @ZA17658 36390037
IGNORE2  BAL   LNKRG1,WRITE0            PRINT OUT MESSAGE               36420002
         MVC   RETCODE(1),RETCOD08     .INDIC SPZAP-INP ERROR. @ZA06023 36510000
         OI    CTLBTE,IGNOP             IGNORE ANY FOLLOWING REPS       36540002
         BCR   15,LNKRG3                GET NEXT CARD                   36570002
         SPACE 1                                                        36600002
*********************************************************************** 36630002
* THIS SUBROUTINE READS AMASPZAP CONTROL STATEMENTS FROM THE CONSOLE    36660002
*******************                                                     36690002
CONRTN   XC    WTOECB(4),WTOECB         CLEAR ECB                       36720002
         MVI   DMPSW,X'00'             .RESET DUMP INDICATOR.  @ZA26077 36730037
         MVI   CDBUF,C' '               CLEAR INPUT BUFFER              36750002
         MVC   CDBUF+1(79),CDBUF                                        36780002
         ST    LNKRG3,LNKSAVE           SAVE LINK REGISTER              36810002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           36840002
         WTOR  'AMA116A ENTER AMASPZAP CONTROL STATEMENT OR END',CDBUF,X36870002
               80,WTOECB,ROUTCDE=1,DESC=2                               36900002
         WAIT  ECB=WTOECB                                               36930002
         L     R15,AIORTNS             RESET R15                 S21995 36960002
         L     LNKRG3,LNKSAVE           RESTORE LNKRG3                  36990002
         OC    CDBUF(40),BLANKS    INSURE CAPITAL LETTERS ARE USED      37020002
         OC    CDBUF+40(40),BLANKS                                      37050002
         MVI   CONSW,X'FF'              SET CONSOLE SWITCH              37080002
         L     BASREG3,ACCISCAN        .ADDR INIT-SCAN RTNE.   @ZA17658 37110037
         BALR  LNKRG1,BASREG3          .TEST FOR IMMED PRINT.  @ZA17658 37115037
*        (RETURN WITH KEYWORD LOCATED BY 'SCANKEY').           @ZA00409 37120003
         CLC   0(3,RG1),END             END OF CONSOLE INPUT            37170002
         LA    LNKRG3,RDCARD1                                           37200002
         BC    8,RDCARD1                YES-GET NEXT CARD FROM RDR      37230002
         LA    LNKRG3,CONRTN            SET RETURN ADDRESS              37260002
         BC    15,KEY01                 GO CHECK KEYWORD                37290002
         SPACE 2                                                        37320002
WTORTN   LA    WK7,PREFIX          GET PARMLIST FOR WTO                 37350002
         MVC   CDBUF+40(4),DESCR   MOVE RTE CODE & DESCR INTO WTO BUF   37380002
         MVC   PREFIX(2),ERRMGLNG  MOVE IN LENGTH OF WTO MSG            37410002
         ST    LNKRG3,LNKSAVE           SAVE LINK REGISTER              37440002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           37470002
         WTO   MF=(E,(1))                                               37500002
         L     R15,AIORTNS             RESET R15                 S21995 37530002
         L     LNKRG3,LNKSAVE           RESTORE LNKRG3                  37560002
         BR    LNKRG1                  .RETURN TO CALLER.      @ZA17658 37590037
         SPACE 4                                                        37711003
         SPACE 2                                                        37770002
*********************************************************************** 37800002
* THIS SUBROUTINE SCANS CONTROL CARDS WHICH ARE FREE FORMAT             37830002
* SCAN UNTIL FIRST CHAR IS FOUND                                        37860002
*******************                                                     37890002
SCANKEY  LA    RG3,CDBUF                INIT START OF SCAN              37920002
         LA    RG2,72                    MAX SCAN LENGTH       @YA02260 37950002
SCANKEY1 LR    RG1,RG3                  ENTRY FOR CONTIN.SCAN           37980002
SCANKEY2 CLI   0(RG1),BLANK             BLANK                           38010002
* FIRST CHAR ON CARD NOT FOUND                                          38040002
         BC    7,SCANKEY3               NO-SCAN TO NXT BLANK            38070002
         LA    RG1,1(RG1)               INC CHAR POS.                   38100002
         BCT   RG2,SCANKEY2             DECR.ALLOWABLE                  38130002
         LA    RG1,BLANKS               SET UP BLANK INPUT DATA         38160002
         LA    RG4,7                    CHAR-1                          38190002
         LA    RG3,BLANKS+8                                             38220002
         BCR   15,LNKRG1                RETURN                          38250002
         SPACE 1                                                        38280002
* SCAN   UNTIL FIRST BLANK IS FOUND                                     38310002
SCANKEY3 LR    RG3,RG1                                                  38340002
SCANKEY4 LA    RG3,1(RG3)               INC TO NEXT CHAR                38370002
         BCTR  RG2,0                    DECR. MAX                       38400002
         CLI   0(RG3),BLANK             BLANK                           38430002
         BC    7,SCANKEY4               NO-CONTINUE                     38460002
* FOUND FIRST BLANK AFTER PARAMETER                                     38490002
         LR    RG4,RG3                  PASS TO WK REG                  38520002
         SR    RG4,RG1                  GET NO OF CHAR.                 38550002
         BCTR  RG4,0                    DEC COUNT                       38580002
         CH    RG4,SEVEN                                                38610002
         BCR   8+4,LNKRG1               OKAY-RETURN                     38640002
         LA    RG4,7                    SET AS MAX                      38670002
         OI    SCANSW,OVER8             INDICATE OVER 8 CHAR.    A48705 38700002
         BCR   15,LNKRG1                RETURN                          38730002
         SPACE 1                                                        38760002
*  SCAN FOR MEMBER NAME AND CSECT NAME                                  38790002
         SPACE 1                                                        38820002
SCANKEY5 MVC   MEMNAME(8),BLANKS        CLEAR KEY WORDS                 38850002
         MVC   CSECT(8),BLANKS                                          38880002
         NI    SCANSW,X'FF'-OVER8       RESET OVER 8 CHAR SW     A48705 38910002
         BAL   LNKRG1,SCANKEY1          TO GET MEMBER NAME              38940002
         EX    RG4,SAVE2                SAVE MEMBER NAME                38970002
         BAL   LNKRG1,SCANKEY1          TO GET CSECT NAME               39000002
         EX    RG4,SAVE3                SAVE CSECT NAME                 39030002
         TM    SCANSW,OVER8             WAS NAME TOO BIG         A48705 39060002
         BCR   8,LNKRG2                 RETURN IF BOTH NAMES OK  A48705 39090002
         B     NAME03C                  GO SET UP TO PRINT MSG   A48705 39120002
         SPACE 1                                                        39150002
SAVE2    MVC   MEMNAME(1),0(RG1)                                        39180002
SAVE3    MVC   CSECT(1),0(RG1)                                          39210002
         SPACE 2                                                        39240002
*********************************************************************** 39270002
* THIS SUBROUTINE DECODE NUMERIC FIELDS ON CONTROL CARDS                39300002
*******************                                                     39330002
SCAN2    LA    RG1,1(RG1)               ADVANCE PAST BLANK              39360002
         C     RG1,CDBUFEND             ARE WE AT END OF BUFFER  A36172 39390002
         BNL   IGNORE                   YES - INVALID CARD       A36172 39420002
SCAN     CLI   0(RG1),BLANK             IS THIS CHAR BLANK              39450002
         BC    8,SCAN2                  YES- ADVANCE                    39480002
         MVI   TBUF,C'1'               INIT TBUF TO X'F1'        A43687 39510002
         MVC   TBUF+1(71),TBUF   FOR TR TABLES ON HEX TEST       A43687 39540002
         LA    RG4,TBUF                 INIT STORAGE ADDRESS            39570002
SCAN4    LR    RG2,RG1                  START OF DATA FIELD             39600002
SCAN1    CLI   0(RG1),COMMA             DELIMITER                       39630002
         BC    8,SCAN3                  YES-SAVE TEMP                   39660002
         CLI   0(RG1),BLANK             END OF DATA                     39690002
         BC    8,SCAN3                  YES-SAVE AND EXIT               39720002
         LA    RG1,1(RG1)               NO-INC PTR                      39750002
         BC    15,SCAN1                 CONTINUE                        39780002
         SPACE 1                                                        39810002
SCAN3    LR    RG5,RG1                  TURN TO WK REG                  39840002
         SR    RG5,RG2                  GET NO OF CHAR SCANNED          39870002
         BZ    SCAN3A                   SKIP MOVE IF ZERO         M2816 39900002
         BCTR  RG5,0                    DECR. BY 1                      39930002
         EX    RG5,SAVE                 STORE IN TEMP BUF               39960002
SCAN3A   CLI   0(RG1),BLANK             EXIT ON BLANK             M2816 39990002
         BC    8,SCAN5                  YES-RIGHT JUSTIFY               40020002
         CLI   1(RG1),BLANK             BLANK FLOOWING COMMA            40050002
         BC    8,SCAN5                  YES, DISCARD                    40080002
         LA    RG1,1(RG1)               INC CDBUF PTR                   40110002
         LTR   RG5,RG5                  IF MULTIPLE COMMAS     @AZ30821 40120037
         BZ    IGNORE                   INVALID CARD           @AZ30821 40130037
         LA    RG4,1(RG5,RG4)           ADVANCE TEMP BUFFER             40140002
         BC    15,SCAN4                 CONTINUE                        40170002
         SPACE 1                                                        40200002
SCAN5    AR    RG4,RG5                  LAST POSITION TEMP-1            40230002
         S     RG4,CON1                 GET NO OF CHAR                  40260002
         LR    RG2,RG4                  COPY REGISTER                   40290002
         SRL   RG2,1                    DIVIDE BY 2                     40320002
         SLL   RG2,1                    MULTIPLY BY 2                   40350002
         CR    RG4,RG2                  COMPARE WITH ORIGNIAL           40380002
         BC    7,DIGITERR               PRINT MSG                       40410002
         SRL   RG4,1                    DIVIDE BY 2                     40440002
         MVC   DBUF(72),TBUF           SAVE ORIGINAL HEX INPUT   A43687 40470002
         NC    TBUF(72),CON2           NORMALIZE FOR TRANSLATE   A43687 40500002
         TR    TBUF(72),TRANTBL        TRANSLATE TO BINARY       A43687 40530002
         TR    TBUF(72),TRANTBL2-X'F0'  RETRANSLATE TO HEX       A43687 40560002
         CLC   DBUF(72),TBUF           SAME AS ORIGINAL          A43687 40590002
         BNE   IGNORE                  NO-IGNORE THIS CARD       A43687 40620002
         XC    DBUF(72),DBUF           YES-CLEAR BUFFER          A43687 40650002
         NC    TBUF(72),CON2            NORMALIZE FOR TRANSLATE         40680002
         TR    TBUF(72),TRANTBL         TRANSLATE TO BINARY             40710002
         LA    RG2,TBUF                 POINTER TO TEMP START           40740002
         LA    RG5,DBUFEND              DATA BUFFER END                 40770002
         SR    RG5,RG4                  START OF SAVE DATA              40800002
         LR    RG6,RG5                  SAVE START ADDR OF DATA         40830002
SCAN6    PACK  0(7,RG5),0(13,RG2)       CONVERT TO HEX                  40860002
         LA    RG5,6(RG5)               INC DATA STG                    40890002
         LA    RG2,12(RG2)              INC TEMP STG                    40920002
         CL    RG5,CON3                 END OF DATA BLOCK               40950002
         BC    4,SCAN6                  CONTINUE IF NOT AT END          40980002
* ADD TO CHECKSUM.                                             @ZA17660 40981037
         L     RG2,CHSUMACC            .PREV CHECKSUM VALUE.   @ZA17660 40982037
         LR    RG5,RG6                 .ADDR FIRST DIGIT-PAIR. @ZA17660 40983037
         LH    R1,CHSUMSLL             .PREV SHIFT AMOUNT.     @ZA17660 40984037
SCAN7    SH    R1,EIGHT                .DECR BY ONE BYTE.      @ZA17660 40985037
         BNM   SCAN8                   .B IF NOT NEGATIVE.     @ZA17660 40986037
         LH    R1,TWENTY4              .ELSE SET HIGH BYTE.    @ZA17660 40987037
SCAN8    SR    R15,R15                 .CLEAR DIGIT-PAIR REG.  @ZA17660 40988037
         IC    R15,0(RG5)              .LOAD DIGIT-PAIR.       @ZA17660 40989037
         SLL   R15,0(R1)               .SHIFT TO PROPER BYTE.  @ZA17660 40990037
         AR    RG2,R15                 .ADD INTO CHECKSUM.     @ZA17660 40991037
         LA    RG5,1(RG5)              .ADDR NEXT DIGIT-PAIR.  @ZA17660 40992037
         CL    RG5,CON3                . IF ANY.               @ZA17660 40993037
         BL    SCAN7                   .B IF MORE.             @ZA17660 40994037
         ST    RG2,CHSUMACC            .ELSE STORE CHECKSUM,   @ZA17660 40995037
         STH   R1,CHSUMSLL             . SAVE LAST SHIFT AMT.  @ZA17660 40996037
         L     R15,AIORTNS             .RESTORE EP FOR 'IOR'.  @ZA17660 40997037
         BCR   15,LNKRG1                                                41010002
         SPACE 1                                                        41040002
DIGITERR BAL   LNKRG1,SCANKEY           GET DEY WORD                    41070002
         CLC   0(3,RG1),REP             REP                             41100002
         BC    8,DIGERR2                YES-DONT SET FLUSH SWITCH       41130002
         OI    CTLBTE,IGNOP             SET SWITCH TO IGNORE ANY REPS   41160002
DIGERR2  LA    RG5,DGERROR              YES-IGNORE IT                   41190002
         BAL   LNKRG1,WRITE0            PRINT OUT MESSAGE               41220002
         MVC   RETCODE(1),RETCOD08     .INDIC SPZAP-INP ERROR. @ZA06023 41310000
         BCR   15,LNKRG3                GET NEXT CARD                   41340002
         SPACE 1                                                        41370002
SAVE     MVC   0(1,RG4),0(RG2)          SAVE DATA IN TBUF               41400002
         SPACE 2                                                        41430002
*********************************************************************** 41460002
* SUBROUTINE FOR NAMERTN AND DUMPRTN                                    41490002
* POINT AT MEMBER OF DATA SET                                           41520002
*******************                                                     41550002
NAME01A  MVC   LIST+4(8),MEMNAME        SET UP MEMBER NAME              41580002
         NI    CTLBTE2,X'FF'-MULREC     RESET INDICATOR FOR MULTIPLE    41610002
         ST    LNKRG3,LNKSAVE           SAVE LINK REGISTER              41640002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           41670002
         BLDL  LIB2,LIST                READ DIRECTORY                  41700002
         L     LNKRG3,LNKSAVE           RESTORE LNKRG3                  41730002
         LTR   15,15                    TEST FOR ERROR RETURN CODE      41760002
         L     R15,AIORTNS              RESET R15                S21995 41790002
         BC    7,NAME03C                YES - EXIT                      41820002
         NI    LIST+17,X'1F'            0 OUT HIGH ORDER BITS     M5099 41830002
         CLI   LIST+17,X'0B'            CHK LNGTH FOR 11 OR MORE  M5099 41840002
         BL    NAME03C                 < MEANS NOT LKED OUTPUT    M5099 41842002
         SR    RG4,RG4                  ESD ID COUNTER                  41850002
         MVC   BASE(4),CLER            INIT BASE HIGH FOR        A42310 41880002
         MVI   BASE+1,X'FF'             SEARCH FIRST CSECT       A42310 41910002
         ST    LNKRG3,LNKSAVE           SAVE LINK REGISTER              41940002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           41970002
         FIND  LIB2,MEMNAME,D                                           42000002
         L     R15,AIORTNS              RESET R15                S21995 42030002
         L     LNKRG3,LNKSAVE           RESTORE LNKRG3                  42060002
NAME02   LA    R1,ARDDSK2               READ CONTROL RECORD      S21995 42090002
         BALR  R14,R15                                           S21995 42120002
         CLI   RDAREA1,X'40'            SYM. RECORD                     42150002
         BC    8,NAME02                 YES-SKIP                        42180002
         CLI   RDAREA1,X'20'            CESD RECORD                     42210002
         BE    NAME02A                  YES-GO SEARCH IT         A42310 42240002
         TM    LIST+4+ATTR+1,MULTXT    NO ESD BUT MULTI TEXT REC YM5148 42290002
         BC    1,NAME03E               SET UP PROPER INDICATORS  YM5148 42300002
         CLC   CSECT(8),BLANKS         NO-WANT LOWEST CSECT      A42310 42330002
         BCR   7,LNKRG2                NO-RETURN NOT FOUND       A42310 42360002
         MVC   CSECT(8),TEMP           YES-MOVE ITS NAME         A42310 42390002
         OI    CTLBTE3,LMREAD          SET LOAD MODULE READ      S21016 42420002
         B     8(LNKRG2)               RETURN FOUND              A42310 42450002
NAME02A  LA    RG3,RDAREA1+8            YES-STARTOFESD                  42480002
         LH    RG1,RDAREA1+6            BYTES OF ESD DATA               42510002
         LA    RG1,0(RG1,RG3)           STOP ADDRESS                    42540002
         NI    LIST+4+ATTR+1,X'FF'-MULTXT SET NON EDIT BIT OFF   YM5148 42550002
NAME03   LA    RG4,1(RG4)               INCR. ESD ID COUNTER            42570002
         TM    8(RG3),X'0F'             SECTION DEFN.                   42600002
         BC    8,NAME03A                YES-EXIT                        42630002
         NI    8(RG3),X'17'             TURN OFF HI ORDER BITS   A41005 42660002
         CLI   8(RG3),X'04'             TEST FOR PRIVATE CODE    A41005 42690002
         BC    7,NAME03B                NO-GET NXT ESD           A41005 42720002
NAME03A  CLC   CSECT(8),BLANKS         WAS A CSECT SPECIFIED     A42310 42750002
         BE    NAME03AA                N0-LOOP FOR LOWEST CSECT  A42310 42780002
         MVC   BASE+1(3),9(RG3)        SET CSECTS DISPLACEMENT          42810002
         ST    RG4,CSECTID             SAVE ESDID                       42840002
         CLC   CSECT(8),0(RG3)         YES-IS THIS IT            A42310 42870002
         BNE   4(LNKRG2)               N0-RETURN VECTOR2         A42310 42900002
         B     8(LNKRG2)               RETURN FOUND                     42930002
NAME03AA CLC   ZERO(3),9(RG3)          IS THIS FIRST CSECT       A42310 42960002
         BNE   NAME03AC                NO-GO TEST FOR SAVING     A42310 42990002
         MVC   CSECT(8),0(RG3)         YES-MOVE IN ITS NAME      A42310 43020002
NAME03AB MVC   BASE+1(3),9(RG3)        SET CSECTS DISPLACEMENT   A42310 43050002
         ST    RG4,CSECTID             SAVE ESDID                A42310 43080002
         B     8(LNKRG2)               RETURN FOUND              A42310 43110002
NAME03AC CLC   BASE+1(3),9(RG3)        IS THIS LOWEST CSECT YET  A42310 43140002
         BL    4(LNKRG2)               NO-RETURN VECTOR2         A42310 43170002
         MVC   BASE+1(3),9(RG3)        YES-SAVE ITS DISPLACEMNT  A42310 43200002
         ST    RG4,CSECTID             SAVE ESDID                A42310 43230002
         MVC   TEMP(8),0(RG3)          SAVE CSECT NAME           A42310 43260002
         B     4(LNKRG2)               RETURN VECTOR2            A42310 43290002
         SPACE 1                                                        43320002
* CONTINUE RETURNS HERE                                                 43350002
NAME03B  LA    RG3,16(RG3)              NO-TO NXT ESD                   43380002
         CR    RG3,RG1                  ANY LEFT IN RECORD              43410002
         BC    8+2,NAME02               NO-READ NEXT RECORD             43440002
         BC    15,NAME03                CONTINUE                        43470002
         SPACE 1                                                        43500002
NAME03C  OI    CTLBTE,NAMEERR           SET ERROR FLAG                  43530002
         L     RG5,AMSG102I            .SELECT MESSAGE.        @ZA17658 43560037
         BC    15,IGNORE2               TO PRINT MSG                    43590002
         SPACE 1                                                        43620002
NAME03E  OI    CTLBTE3,NENOIDR        .INIDCATE NON-EDITABLITY @ZA19029 43650037
         CLC   LIST+4+MODTTR(3),LIST+4+TXTTTR                  @ZA19029 43660037
         BE    NAME03D                .B IF NO CESD (ERGO NE). @ZA19029 43670037
         OI    CTLBTE2,MULREC         .INIDC MULT-TXT & NO RLD @ZA19029 43680037
NAME03D  MVC   BASE+1(3),LIST+4+ORGIN   SET UP BASE ADDR                43710002
         MVC   START+1(3),LIST+4+ORGIN                                  43740002
         MVC   STCSECT(4),LIST+4+TXTTTR SAVE TEXT ADDR                  43770002
         MVC   LENGTH+2(2),LIST+4+LNGTH SET TXT LENGTH                  43800002
         MVC   CSECT(8),BLANKS          CLEAR FIELD                     43830002
         OI    CTLBTE,ONEREC            SET INDICATOR                   43860002
         B     8(LNKRG2)               RETURN FOUND CSECT               43890002
         SPACE 2                                                        43920002
*********************************************************************** 43950002
* THESE SUBROUTINES ARE USED BY THE DUMP PROGRAMS.                      43980002
*******************                                                     44010002
RDDSK3   LA    R1,ARDDSK2               READ TEXT                S21995 44040002
         BALR  R14,R15                                           S21995 44070002
RDDSK4   TM    CTLBTE,ONEREC            SPECIAL RECORD                  44100002
         BC    1,4(LNKRG2)                                              44130002
RDDSK4B  LA    R1,ARDDSK2               READ CONTROL RECORD      S21995 44160002
         BALR  R14,R15                                           S21995 44190002
RDDSK4BB TM    RDAREA1,X'01'           .CONTROL-RECD BIT.      @ZA09673 44220000
         BZ    RDDSK4BC                .B IF ZERO.             @ZA09673 44221000
         TM    RDAREA1,X'F0'           .HIGH 4 BITS OF RECDID. @ZA09673 44222000
         BZ    RDDSK4BZ                .B IF ALL ZERO (VALID). @ZA09673 44223000
         B     RDDSK4BE                .ELSE INVALID RECORD.   @ZA09673 44224000
* NOT A CONTROL RECORD. TEST FOR INVALID ID BYTE.              @ZA09673 44225000
RDDSK4BC TM    RDAREA1,X'0F'           .LOW 4 BITS OF RECDID.  @ZA09673 44226000
         BZ    RDDSK4BD                .B IF ALL ZERO.         @ZA09673 44227000
         TM    RDAREA1,X'F0'           .HIGH 4 BITS OF RECDID. @ZA09673 44228000
         BZ    RDDSK7                  .B IF ALL ZERO (VALID). @ZA09673 44229000
         B     RDDSK4BE                .ELSE INVALID RECORD.   @ZA09673 44230000
RDDSK4BD TM    RDAREA1,X'F0'           .(LOW 4 BITS ZERO).     @ZA09673 44231000
         BNZ   RDDSK7                  .B IF HIGH 4 NOT ALL 0. @ZA09673 44232000
* INVALID RECORD TYPE. ISSUE MESSAGE AND DUMP RECORD.          @ZA09673 44233000
RDDSK4BE MVC   RETCODE(1),RETCOD16     .SET ERROR CODE.        @ZA09673 44234000
         L     RG5,AMSG131I            .SELECT MESSAGE.        @ZA09673 44235000
         MVC   8(8,RG5),MEMNAME        .INSERT MEMBER NAME.    @ZA09673 44236000
         L     R15,AIORTNS             .INVOKE                 @ZA09673 44237000
         BAL   LNKRG1,WRITE0           . MESSAGE WRITER.       @ZA09673 44238000
* SET UP 'ABSDUMP' COMMAND IN CARD BUFFER FOR DUMPING RECORD.  @ZA09673 44241000
         BAL   LNKRG1,CCHNOTE          .GET CCHHR.             @ZA09673 44242000
         MVC   CDBUF+0(7),ABSDUMP      .SET KEYWORD            @ZA09673 44243000
         MVI   CDBUF+7,BLANK           . FOLL BY BLANK.        @ZA09673 44244000
         UNPK  CDBUF+8(11),MBBCCHHR+3(6)  .EDIT AND INSERT     @ZA09673 44245000
         TR    CDBUF+8(10),TRANTBL2-X'F0' . START ADDRESS.     @ZA09673 44246000
         MVI   CDBUF+18,BLANK          .SEPARATING BLANK.      @ZA09673 44247000
         MVC   CDBUF+19(11),CDBUF+8    .SET ENDADDR=STARTADDR. @ZA09673 44248000
         BAL   LNKRG1,SCANKEY          .SET REGISTERS AND      @ZA09673 44249000
         B     ABDMPRTN                . PROCESS 'ABSDUMP'.    @ZA09673 44250000
* CONTROL RECORD FOUND.                                        @ZA09673 44251000
RDDSK4BZ DS    0H                                              @ZA09673 44252000
         XC    STARTINC(4),STARTINC     ZERO INC AMOUNT                 44280002
         LH    RG2,RDAREA1+6            GET ID OFFSET                   44310002
         LA    RG2,RDAREA1+16(RG2)      POINT AT ID FIELD               44340002
         LH    RG3,RDAREA1+4            GET LENGTH                      44370002
         LA    RG3,0(RG3,RG2)           FORM S TO P ADDR                44400002
         ST    RG3,TBUF                 SAVE FOR CONPANE                44430002
RDDSK4C  LH    RG3,0(RG2)               ESDID                           44460002
         CL    RG3,CSECTID              ARE THEY EQUAL                  44490002
         BC    8,RDDSK5                 YES-SET UP SAVE                 44520002
         TM    CTLBTE2,MULREC           BUT IS IT A MULTIPLE TEXT CSECT 44550002
         BC    1,RDDSK5                 YES-ID NOT VALID                44580002
         L     RG3,STARTINC             GET INC                         44610002
         AH    RG3,2(RG2)               ADD LENGTH OF CSECT             44640002
         ST    RG3,STARTINC             SAVE NEXT INC                   44670002
         LA    RG2,4(RG2)               ADVANCE RECORD PTR              44700002
         CL    RG2,TBUF                 OUTSIDE RECORD                  44730002
         BC    4,RDDSK4C                NO-CONTINUE                     44760002
         TM    RDAREA1,X'0D'            END OF MODULE                   44790002
         BCR   1,LNKRG2                 YES-VECTOR 1                    44820002
         BC    15,RDDSK3                CONTINUE                        44850002
         SPACE 1                                                        44880002
RDDSK5   OI    CTLBTE,ENDMOD            SET INDICATOR                   44910002
         TM    RDAREA1,X'0D'            LAST CONTROL OF MODULE          44940002
         BC    1,RDDSK6                 YES-LEAVE ENDMOD SET            44970002
         NI    CTLBTE,X'FF'-ENDMOD      RESET INDICATOR                 45000002
RDDSK6   MVC   LENGTH+2(2),2(RG2)       SAVE CSECT LENGTH               45030002
         L     RG3,STARTINC             GET ACC OFFSET                  45060002
         A     RG3,RDAREA1+8            ADD TO RECORD OFFSET ADDR       45090002
         LA    RG3,0(0,RG3)             CLEAR HIGH BYTE                 45120002
         ST    RG3,START                SET AS CSECT OFFSET             45150002
         BC    15,4(LNKRG2)             VECTOR 2-CONTR. RECD FOUND      45180002
         SPACE 1                                                        45210002
RDDSK7   CLI   RDAREA1,X'0E'            LAST RECORD OF MODULE           45240002
         BC    7,RDDSK4                 NO-CONTINUE                     45270002
         BCR   15,LNKRG2                VECTOR 1 - END RETURN           45300002
         SPACE 2                                                        45330002
*********************************************************************** 45360002
* THIS SUBROUTINE OBTAINS THE TEXT TTR AND CONVERTS IT TO CCHHR         45390002
*******************                                                     45420002
CCHNOTE  ST    LNKRG3,LNKSAVE           SAVE LINK REGISTER              45450002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           45480002
         NOTE  LIB2                                                     45510002
         L     R15,AIORTNS              RESET R15                S21995 45540002
         L     LNKRG3,LNKSAVE           RESTORE LNKRG3                  45570002
         ST    1,STCSECT                SAVE TTR                        45600002
         LR    0,1                      CONVERT TTR INPUT REG           45630002
         LA    14,X'1C'                 TTR CONV RTN OFFSET             45660002
CHCONV   STM   8,13,TBUF+32             SAVE REGS THAT GET CLOBBERED    45690002
         LA    8,TBUF+32                GET ADDRESSIBILITY              45720002
         LA    2,MBBCCHHR               CONVERT STG ADDR.               45750002
         L     1,LIB2+44                DEB ADDRESS                     45780002
         L     15,16                    CVT POINTER                     45810002
         L     15,0(14,15)              CONVERT RTN ADDR                45840002
         BALR  14,15                    TO CONVERT TO CCHHR             45870002
         LM    8,13,0(8)                RESTORE REGISTERS               45900002
         L     R15,AIORTNS              RESET R15                S21995 45930002
         BCR   15,LNKRG1                RETURN                          45960002
         SPACE 1                                                        45990002
CCHHSUB  LR    RG1,RG3                  SET DATA POINTER                46020002
         NI    CTLBTE,X'FF'-NAMEOP-ONEREC  RESET INDICATORS             46050002
         XC    BASE2(4),BASE2           RESET BASE                      46080002
CCHSUB2  BAL   LNKRG1,SCAN              DEBLOCK DATA                    46110002
         MVC   MBBCCHHR(8),DBUFEND-8    SAVE                            46140002
         CLI   MBBCCHHR+7,X'00'         RECORD ZERO                     46170002
         BC    7,CONTIN                 NO-DON'T UPDATE                 46200002
         OI    MBBCCHHR+7,MAK1          CHANGE RECORD TO ONE            46230002
CONTIN   L     RG2,LIB2+44              DEB EXTENTS                     46260002
         SR    RG4,RG4                  CLEAR WK REGS                   46290002
         SR    RG5,RG5                                                  46320002
         IC    RG4,NEXTS(RG2)           GET NO OF EXTENTS               46350002
         BCTR  RG4,0                    COMPUTE M                       46380002
         LA    RG2,DEBEXT(RG2)          POINT AT FIRST EXTENT           46410002
CCHSUB3  CLC   MBBCCHHR+3(4),6(RG2)     TEST FOR LOW                    46440002
         BC    4,CCHSUB4                YES-TEST NEXT EXTENT            46470002
         CLC   MBBCCHHR+3(4),10(RG2)    TEST FOR HIGH                   46500002
         BC    2,CCHSUB4           YES - CHK NEXT EXTENT                46530002
         MVC   MBBCCHHR+1(2),LIB2+6 SET BB EQU TO FDAD BB               46560002
         BCR   15,LNKRG2           OKAY - EXIT                          46590002
*   SWITCH TO A DIFFERENT EXTENT                                        46620002
CCHSUB4  CR    RG4,RG5                  TEST FOR NO MORE EXTENTS        46650002
         BC    8,NAME03C                YES-ERROR                       46680002
         LA    RG5,1(RG5)               NO-INCREMENT TO NXT.            46710002
         STC   RG5,MBBCCHHR             SAVE EXTENT M                   46740002
         LA    RG2,16(RG2)              INCR.BY SIZE                    46770002
         BC    15,CCHSUB3               CONTINUE                        46800002
         SPACE 2                                                        46830002
*********************************************************************** 46860002
* THIS SUBROUTINE SETS UP MEMBER AND CSECT NAMES.                       46890002
*******************                                                     46920002
NAMERTN  CLC   RETCODE(1),LASTRET       WHICH CODE IS HIGHEST           46950002
         BL    CLEAR1                   IF LAST ONE--DON'T CHANGE       46980002
         MVC   LASTRET(1),RETCODE       SAVE HIGHEST STEP RET CODE      47010002
CLEAR1   MVC   RETCODE(1),RETCOD00     .RESET RETURN CODE.     @ZA06023 47040000
         BAL   LNKRG2,SCANKEY5          TO SET UP NAME AND SCECT        47070002
         XC    BASE2(4),BASE2           ZERO OUT OFFSET                 47100002
         MVC   IDRDATA(8),IDRDFLT      PRIME IDR DATA            S21016 47130002
         NI    CTLBTE3,X'FF'-NAMEIDR-IDRRD-LMREAD-NENOIDR        S21016 47160002
         NI    CTLBTE,X'FF'-ONEREC-IGNOP-NAMEERR                        47190002
         XC    IDRNRECS(4),IDRNRECS     .INIT # IDR-S.         @ZA00409 47200003
         XC    IDRNENTS(4),IDRNENTS     .INIT # IDR ENTRIES.   @ZA00409 47206003
         XC    IDRMENTS(4),IDRMENTS     .INIT MAX ENTRIES.     @ZA00409 47212003
         OI    CTLBTE,NAMEOP            SET NAME OPTION                 47220002
         LA    R15,NOCSECT    IN CASE OF BAD INPUT, WE HAVE TO  YA01766 47230002
         STM   0,15,DMPSAVE   SAVE THE REGS AND POINT REG15 TO  YA01766 47236002
         L     R15,AIORTNS    LABEL 'NOCSECT'                   YA01766 47242002
         BAL   LNKRG2,NAME01A           TO EXAMIN CESD'S                47250002
* RETURN VECTOR1-ERROR                                                  47280002
         BC    15,NOCSECT               ERROR MESSAGE                   47310002
         SPACE 1                                                        47340002
* RETURN VECTOR 2-NOT FOUND                                             47370002
         BC    15,NAME03B               CONTINUE                        47400002
         SPACE 1                                                        47430002
* RETURN VECTOR 3-FOUND CSECT                                           47460002
         TM    CTLBTE3,LMREAD          WAS RECORD READ           S21016 47490002
         BZ    NAME04AA                NO-CHECK NONEDITABLE      S21016 47520002
         NI    CTLBTE3,X'FF'-LMREAD    YES RESET SW              S21016 47550002
         B     NAME04AB                SKIP READ                 S21016 47580002
NAME04AA TM    CTLBTE3,NENOIDR         IS MODULE NE              S21016 47610002
         BO    NOIDRL                  YES-NO IDR                S21016 47640002
NAME04A  LA    R1,ARDDSK2              READ LOAD MODULE          S21016 47670002
         BALR  R14,R15                                           S21016 47700002
NAME04AB CLI   RDAREA1,X'80'           IDR RECORD                S21016 47730002
         BE    SPZAPIDR                YES-CHECK FOR SPZAP       S21016 47760002
         CLI   RDAREA1,X'20'           CESD RECORD               S21016 47790002
         BE    NAME04A                 YES-SKIP                  S21016 47820002
         CLI   RDAREA1,X'40'           SYM RECORD                S21016 47850002
         BE    NAME04A                 YES-SKIP                  S21016 47880002
         CLI   RDAREA1,X'28'           LAST RECORD OF MODULE?    SM4165 47890002
         BCR   8,LNKRG2                YES,RETURN                SM4165 47900002
NOIDRL   LA    RG5,NOIDR               PRINT MSG-NO IDR RECORDS  S21016 47910002
         NI    CTLBTE3,X'FF'-NENOIDR   RESET SW                  S21016 47940002
         MVC   NOIDR+26(8),MEMNAME                               S21016 47970002
         BAL   LNKRG1,WRITE0                                     S21016 48000002
         NI    CTLBTE3,X'FF'-IDRRD     SET NO IDR RECORDS SW     S21016 48030002
         LA    LNKRG2,NAME04+4         SET RETURN REG            S21016 48060002
         CLC   LIST+4+MODTTR(3),LIST+4+TXTTTR                  @ZA19029 48070037
         BE    4(LNKRG2)              .B IF NO CESD (ERGO NE). @ZA19029 48080037
         B     RDDSK4BB                BRANCH INTO RDDSK4        S21016 48090002
SPZAPIDR NI    RDAREA1+2,X'0F'         CLEAR HIGH ORDER BITS     S21016 48120002
         CLI   RDAREA1+2,X'01'         IS SUBTYPE SPZAP          S21016 48150002
         BNE   NAME04A                 NO-READ NEXT RECORD       S21016 48180002
         MVC   TEMP(1),RDAREA1+3       SAVE NUMBER OF ENTRIES    S21016 48210002
         NI    TEMP,X'3F'              CLEAR HIGH ORDER BITS     S21016 48240002
         LA    RG5,1                    .ADD TO                @ZA00409 48242003
         A     RG5,IDRNRECS             . # OF                 @ZA00409 48244003
         ST    RG5,IDRNRECS             . RECORDS.             @ZA00409 48246003
         M     RG4,IDRMENTR             .SET                   @ZA00409 48248003
         ST    RG5,IDRMENTS             . MAX ENTS SO FAR.     @ZA00409 48250003
         XR    RG5,RG5                                         @ZA00409 48252003
         IC    RG5,TEMP                 .ADD  TO               @ZA00409 48254003
         A     RG5,IDRNENTS             . # OF                 @ZA00409 48256003
         ST    RG5,IDRNENTS             . IDR ENTRIES.         @ZA00409 48258003
         CLI   TEMP,19                 IS SPZAP IDR FULL         S21016 48270002
         BL    IDRNOTFL                .B IF IDR NOT FULL:     @ZA00409 48300003
         TM    RDAREA1+3,X'40'         ANOTHER SPZAP REC?        S21016 48330002
         BO    NAME04A                 YES-READ NEXT RECORD      S21016 48360002
* SET UP AND ISSUE 'NO IDR SPACE' MESSAGE.                     @ZA00409 48420003
         MVC   NOSPACE1(8),MEMNAME     .INSERT NAME.           @ZA00409 48425003
         LA    RG5,NOSPACE             SET POINTER               S21016 48450002
         BAL   LNKRG1,WRITE0                                     S21016 48480002
* TEST FOR OVERRIDE OF INHIBITION ON UPDATES.                  @ZA06024 48542000
         TM    PARMBITS,QIGNIDRF                               @ZA06024 48544000
         BZ    ERRIDRFL                 .B IF NO OVERRIDE.     @ZA06024 48546000
* REP-INHIBITION OVERRIDDEN. SET WARNING AND SELECT MESSAGE.   @ZA06024 48548000
         MVC   RETCODE(1),RETCOD04      .SET WARNING RETCODE,  @ZA06024 48550000
         LA    RG5,MSGUDACC             . AND SELECT MESSAGE.  @ZA06024 48552000
         B     IDRFMSG2                                        @ZA06024 48554000
* NO OVERRIDE. SET 'NO GO' AND ISSUE MESSAGE.                  @ZA06024 48556000
ERRIDRFL OI    CTLBTE,IGNOP             .SET 'NO GO' SWITCH.   @ZA06024 48558000
         MVC   RETCODE(1),RETCOD08      .SET ERROR CODE.       @ZA07967 48558100
         LA    RG5,MSGUDINH             . AND SELECT MESSAGE.  @ZA06024 48560000
* ISSUE SECOND MESSAGE FOR IDR-SPACE-FOUND-FULL CONDITION.     @ZA06024 48562000
IDRFMSG2 BAL   LNKRG1,WRITE0            .MSG TO SYSPRINT.      @ZA06024 48564000
         B     NAME04                  CONTINUE PROCESSING       S21016 48570002
* CURRENT  IDR HAS SPACE FOR NEW ENTRY.                        @ZA00409 48571003
IDRNOTFL TM    CTLBTE3,IDRRD           .IDR BIT.               @ZA00409 48572003
         BO    IDRAVAIL                .B IF SPACE ALREADY.    @ZA00409 48573003
* FIRST IDR WITH ENPTY ENTRY.                                  @ZA00409 48574003
SAVELOC  BAL   LNKRG1,CCHNOTE            GET TTR OF IDR REC    @YA02256 48600003
         MVC   IDRTTR(4),STCSECT       SAVE TTR                  S21016 48630002
         MVC   IDRFSEEK(8),MBBCCHHR    SAVE MBBCCHHR             S21016 48660002
         OI    CTLBTE3,IDRRD           INDICATE IDR RECORD       S21016 48690002
IDRAVAIL TM    RDAREA1+3,X'40'                                 @ZA00409 48700003
         BO    NAME04A                 .B IF NOT LAST IDR.     @ZA00409 48710003
* CSECT FOUND-SIFT THROUGH CONTROL RECORDS                              48720002
NAME04   BAL   LNKRG2,RDDSK4            READ NXT CTL RECORD             48750002
* RETURN VECTOR 1 - NOT VALID                                           48780002
         BC    0,0                                                      48810002
* RETURN VECTOR 2 - CONTROL RECORD FOR LSECT FOUND                      48840002
* RETURN-FOUND CSECT ID                                                 48870002
         MVC   IDSAVE(4),STCSECT        SAVE FOR NEXT POINT             48900002
         TM    CTLBTE,ONEREC            WAS IT NECESSARY                48930002
         BCR   1,LNKRG3                 YES-GET NEXT CARD               48960002
         BAL   LNKRG1,CCHNOTE           TO SET NOTE LIST                48990002
         MVC   IDSAVE(4),STCSECT        SAVE FOR NEXT POINT             49020002
         BCR   15,LNKRG3                GET NEXT CARD                   49050002
         SPACE 2                                                        49080002
*********************************************************************** 49110002
* THIS SUBROUTINE SETS UP FOR ABSOLUTE UPDATE.                          49140002
*******************                                                     49170002
CCHHRTN  CLC   RETCODE(1),LASTRET       WHICH CODE IS HIGHEST           49200002
         BL    CLEAR2                   IF LAST ONE--DON'T CHANGE       49230002
         MVC   LASTRET(1),RETCODE       SAVE HIGHEST STEP RET CODE      49260002
CLEAR2   MVC   RETCODE(1),RETCOD00     .RESET RETURN CODE.     @ZA06023 49290000
         NI    CTLBTE,X'FF'-IGNOP-NAMEERR   RESET CTLBTE                49320002
         BAL   LNKRG2,CCHHSUB                                           49350002
         XC    BASE(4),BASE             RESET FIELDS                    49380002
         XC    BASE2(4),BASE2                                           49410002
         XC    START(4),START           RESET TO ZERO             M2817 49440002
         LA    R1,AOPENLIB                                       S21995 49470002
         BALR  R14,R15                                           S21995 49500002
         LA    R1,ARDDISK               GET RECORD FOR UPDATE    S21995 49530002
         BALR  R14,R15                                           S21995 49560002
         L     15,SIZE                  CALCULATE RECORD LENGTH         49590002
         SH    15,DECB4+X'12'           GET RESIDUAL COUNT              49620002
         ST    15,LENGTH                STORE MAX INSPECT AREA          49650002
         L     R15,AIORTNS             RESET R15                 S21995 49680002
         BCR   15,LNKRG3                    GET NEXT OPERATION          49710002
         SPACE 2                                                        49740002
*********************************************************************** 49770002
* THIS SUBROUTINE SETS FOR A VERIFY OPERATION.                          49800002
*******************                                                     49830002
VERYRTN  OI    CTLBTE,VERYOP            SET VERIFY OPTION               49860002
         BAL   LNKRG2,SETUP1            DECODE VERIFY CARD              49890002
         EX    RG4,VERPTCH                                              49920002
         BCR   8,LNKRG3           GET NEXT CARD.  DON'T RESET IGNORE SW 49950002
* VERIFY NOT CONFIRMED                                                  49980002
         L     RG5,AMSG104I            .SELECT MESSAGE.        @ZA17658 50010037
VERY1    BAL   LNKRG1,WRITE0            SEND ERROR MSG                  50040002
         MVC   RETCODE(1),RETCOD08     .INDIC SPZAP-INP ERROR. @ZA06023 50130000
         TM    CTLBTE,IGNOP             HAS DUMP BEEN DONE?    @YM4508P 50131002
         BCR   1,LNKRG3                 YES, GET NEXT CARD     @YM4508P 50141002
         OI    CTLBTE,IGNOP             SET INVALID CARD SWITCH         50160002
         MVC   MEMNAME(8),BLANKS        CLEAR FIELDS                    50190002
         MVC   CSECT(8),BLANKS                                          50220002
         LA    RG5,BLANKS               SKIP LINE                       50250002
         BAL   LNKRG1,WRITE0                                            50280002
         MVC   CDBUF(100),TITLE1        SET-UP TITLE                    50310002
         LA    WK6,RDAREA1              BUFFER START ADDR               50340002
         L     WK1,LENGTH               LENGTH OF SECTION               50370002
         LA    R1,ADMP1AB              DUMP FORMATTED            S21995 50400002
         L     R15,ADMP                                          S21995 50430002
         BALR  R14,R15                                           S21995 50460002
         BC    15,DUMP09                EXIT AND SKIP PAGE              50490002
         SPACE 1                                                        50520002
VERPTCH  CLC   0(1,RG1),0(RG6)          VERIFY PATCHES                  50550002
         SPACE 2                                                        50580002
*********************************************************************** 50610002
* THIS SUBROUTINE SETS UP FOR A REPLACE OPERATION.                      50640002
*******************                                                     50670002
REPRTN   NI    CTLBTE,X'FF'-VERYOP      REP CARD INDICATE               50700002
* IF REP IS FOR NAME CARD, SETUP1 DOES NOT RETURN BUT GOES TO NAME07    50730002
         BAL   LNKRG2,SETUP1            DECODE REP CARD                 50760002
         LR    WK2,RG1                  LOAD ADDRESS OF OLD DATA X01979 50790002
         LA    WK5,1(RG4)               LOAD LENGTH OF PATCH     X01979 50820002
         BAL   LNKRG2,UNPATCH           FORMAT UNPATCH MESSAGE   X01979 50850002
         BAL   LNKRG1,WRITE3           .WRITE 'OLD DATA' MSG.  @ZA17659 50880037
         MVC   CDBUF+80(40),BLANKS      CLEAR END OF BUFFER      X01979 50910002
         EX    RG4,PATCH                MOVE IN REP DATA                50940002
         LA    R1,AWRDISK               UPDATE DISK              S21995 50970002
         BALR  R14,R15                                           S21995 51000002
         OI    CTLBTE3,MODFYREC        INDICATE CCHHR UPDATE     S21016 51030002
         BR    LNKRG3                  . ON TO GET NEXT INPUT. @ZM30902 51060003
         SPACE 1                                                        51090002
PATCH    MVC   0(1,RG1),0(RG6)          INSERT PATCH DATA               51120002
         SPACE 2                                                        51150002
*********************************************************************** 51180002
* THIS SUBROUTINE WILL UPDATE THE SSI ENTRY.                            51210002
*******************                                                     51240002
SSIRTN   LR    RG1,RG3                  POINTER TO END OF KEYWORD       51270002
         CLC   RETCODE(1),RETCOD08     .TEST FOR PREV ERROR.   @ZA06023 51300000
         LA    RG5,IGNORSSI             ERROR MSG                       51330002
         BNL   SSI3                    .B IF PREV ERROR.       @ZA06023 51360000
         OI    CTLBTE3,SSIOP            SET SSI OPERATION FLAG          51390002
         NI    CTLBTE3,X'FF'-NOSSI-NOMEM  RESET SWS              S21995 51420002
         LA    R1,AOPENLIB              LIB OPEN FOR UPDATE      S21995 51450002
         BALR  R14,R15                                           S21995 51480002
         BAL   LNKRG1,SCAN              DECODE SSI CARD                 51510002
         LA    R1,AINSM1A         GET INDEX                      X01979 51540002
         BALR  R14,R15            GET SSI FIELD                  X01979 51570002
         TM    CTLBTE3,NOMEM            MEMBER NOT FOUND                51600002
         LA    RG5,NONAME               ERROR MSG                       51630002
         BC    1,SSI2                   YES-SEND ERROR MSG              51660002
         TM    CTLBTE3,NOSSI            SSI FIELD MISSING               51690002
         BC    1,SSI1                   YES-SEND ERROR MSG              51720002
         LR    WK2,RG4                  LOAD ADDRESS OF OLD SSI  X01979 51750002
         LA    WK5,4                    LOAD LENGTH OF SSI       X01979 51780002
         BAL   LNKRG2,UNPATCH           FORMAT UNPATCH MESSAGE   X01979 51810002
         BAL   LNKRG1,WRITE3           .WRITE 'OLD DATA' MSG.  @ZA17659 51840037
         MVC   CDBUF+80(40),BLANKS      CLEAR END OF BUFFER      X01979 51870002
         MVC   0(4,RG4),0(RG6)          MOVE SSI TO DIRECTROY           51900002
         LA    R1,ADIRWRIT              UPDATE DIRECTORY         S21995 51930002
         BALR  R14,R15                                           S21995 51960002
         BR    LNKRG3                  . ON TO GET NEXT INPUT. @ZM30902 51990003
         SPACE 1                                                        52020002
SSI1     LA    RG5,SSIERR               ERROR MSG                       52050002
SSI2     MVC   RETCODE(1),RETCOD04    .ELSE SET RETCODE = 4,   @ZA19023 52080037
SSI3     BAL   LNKRG1,WRITE0           .ISSUE ERROR MESSAGE.   @ZA06023 52110000
         BR    LNKRG3                  . ON TO GET NEXT INPUT. @ZM30902 52200003
         SPACE 2                                                        52230002
*********************************************************************** 52260002
*  THIS SUBROUTINE DECODES & SAVES THE IDRDATA STATEMENT                52290002
*********************************************************************** 52320002
IDRRTN   TM    CTLBTE3,NAMEIDR         FIRST IDR CARD THIS NAME  S21016 52350002
         BCR   1,LNKRG3                N0-IGNOR IT               S21016 52380002
         BAL   LNKRG1,SCANKEY1         FIND IDR DATA             S21016 52410002
         MVC   IDRDATA(8),BLANKS       CLEAR IDR DATA AREA       S21016 52440002
         EX    RG4,SAVE4               MOVE IDR DATA TO BEGIN    S21016 52470002
         OI    CTLBTE3,NAMEIDR         INDICATE IDR CD THIS NAME S21016 52500002
         BR    LNKRG3                  READ NEXT CARD            S21016 52530002
         SPACE 1                                                        52560002
SAVE4    MVC   IDRDATA(0),0(RG1)       SAVE IDRDATA              S21016 52590002
*********************************************************************** 52620002
SETUP1   LR    RG1,RG3                  KEYWORD END POINTER             52650002
         BAL   LNKRG1,SCAN              GET OFFSET                      52680002
         MVC   OFFSET(4),DBUFEND-4      SAVE OFFSET                     52710002
         BAL   LNKRG1,SCAN              GET PATCHES                     52740002
         LA    R1,AOPENLIB                                       S21995 52770002
         BALR  R14,R15                                           S21995 52800002
         L     RG1,OFFSET                                               52830002
         LA    RG1,RDAREA1(RG1)         PATCH AREA ADDRESS              52860002
         S     RG1,BASE2                ADDITIONAL OFFSET SUPPLIED      52890002
         BCTR  RG4,0                    DECR. BY 1                      52920002
         ST    RG4,SVLNGTH              SAVE LENGTH OF FIELD      M0509 52950002
         TM    CTLBTE,NAMEOP            CSECT OPERATION                 52980002
         BC    1,NAME07                 YES-GET PROPER TEXT RECORD      53010002
         LA    15,1(RG4,RG1)            CALCULATE END OF INSPECT        53040002
         L     14,LENGTH                LENGTH OF RECORD                53070002
         LA    14,RDAREA1(14)           POSITION IN CORE                53100002
         CR    15,14                                                    53130002
         L     R15,AIORTNS              RESET R15                S21995 53160002
         BCR   8+4,LNKRG2               CONTINUE PROCESSING             53190002
         L     RG5,AMSG106I            .SELECT ERROR MESSAGE.  @ZA09679 53220000
         BC    15,VERY1                 SEND MESSAGE AND DUMP           53250002
         SPACE 2                                                        53280002
*********************************************************************** 53310002
BASERTN  LR    RG1,RG3                  KEYWORD END PTR                 53340002
         BAL   LNKRG1,SCAN              DEBLOCK BASE OFFSET             53370002
         MVC   BASE2(4),DBUFEND-4       MOVE IN OFFSET                  53400002
         BCR   15,LNKRG3                RETURN TO CALLER        YA01767 53430002
         SPACE 3                                                        53460002
*********************************************************************** 53490002
NAME07A  DS    0C                                                       53520002
         LA    R15,NOCSECT    IN CASE OF BAD INPUT, WE HAVE TO  YA01766 53530002
         STM   0,15,DMPSAVE   SAVE THE REGS AND POINT REG15 TO  YA01766 53536002
         L     R15,AIORTNS    LABEL 'NOCSECT'                   YA01766 53542002
         BAL   LNKRG2,NAME01A           SET MODULE ATTRIBUTES           53550002
         BC    0,0                      DUMMY VERTOR                    53580002
         BC    0,0                      DUMMY VERTOR                    53610002
         LA    R1,ARDDSK2               GET FIRST TEXT RECORD    S21995 53640002
         BALR  R14,R15                                           S21995 53670002
         NI    CTLBTE,X'FF'-ONEREC-ENDMOD-OVFLOW                 YM5531 53700002
         ST    LNKRG3,LNKSAVE           SAVE LINK REGISTER              53730002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           53760002
         POINT LIB2,STCSECT             REPOSITION AT START OF TXT      53790002
         L     R15,AIORTNS              RESET R15                S21995 53820002
         L     LNKRG3,LNKSAVE           RESTORE LNKRG3                  53850002
         BC    15,NAME08                CONTINUE WITH INSPECT           53880002
         SPACE 1                                                        53910002
* ENTER HERE AFTER REP CARD IS READ AND NAME OPTION SPEC.               53940002
NAME07   A     RG1,BASE                 MODULE PATCH ADDRESS            53970002
         MVC   STCSECT(4),IDSAVE        RESTORE START ADDR              54000002
         ST    LNKRG3,LNKSAVE           SAVE LINK REGISTER              54030002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           54060002
         POINT LIB2,STCSECT             POSITION TO RECORD              54090002
         L     R15,AIORTNS              RESET R15                S21995 54120002
         L     LNKRG3,LNKSAVE           RESTORE LNKRG3                  54150002
         TM    CTLBTE2,MULREC           MULTIPLE TEXT RECORDS           54180002
         BC    1,NAME07A                YES-READ FIRST TEXT RECOD       54210002
         TM    CTLBTE,ONEREC            SPECIAL RECORD                  54240002
         BC    1,NAME08                 YES-SKIP                        54270002
* ENTER HERE IF OVERFLOW IS INDICATED                                   54300002
NAME07B  BAL   LNKRG2,RDDSK4            READ CONTROL RECORD             54330002
* VECTOR 1 - PATCH NOT IN MODULE                                        54360002
         BC    15,NAME12B               PRINT ERROR MESSAGE             54390002
         SPACE 1                                                        54420002
* VECTOR 2 - CSECT CONTROL RECORD READ INTO CORE                        54450002
NAME08   L     RG2,START                FOLLOWING TEXT START ADDR.      54480002
         LA    RG2,RDAREA1(RG2)         PATCH ADDRESS IN CORE           54510002
         CR    RG1,RG2                  PATCH WITHIN TEXT RECORD        54540002
         BC    4,DSERROR                LOW-DSERROR                     54570002
         LR    RG3,RG2                                                  54600002
         A     RG3,LENGTH               ADD LENGTH TO START             54630002
         CR    RG1,RG3                  PATCH IN TEXT                   54660002
         BC    4,NAME09                 YES-GET TEXT RECORD             54690002
         TM    CTLBTE,ONEREC            NO-SPECIAL RECORD               54720002
         BC    1,NAME12B                YES-ERROR MSG + DUMP     A41634 54750002
* PATCH IN SUCCEEDING TEXT RECORDS                                      54780002
NAME08B  TM    CTLBTE,ENDMOD            HAS END OF MODULE BEEN REACHED  54810002
         BO    NAME12B                  YES--PRINT MESSAGE              54840002
         LA    LNKRG2,NAME07B+4         SET LINK REGISTER               54870002
         BC    15,RDDSK3                 SKIP TEXT AND READ NEXT C+U    54900002
         SPACE 1                                                        54930002
* PREPARE TO PATCH THE TEXT RECORD                                      54960002
NAME09   LA    R1,ARDDSK2               GET TEXT RECORD          S21995 54990002
         BALR  R14,R15                                           S21995 55020002
         LR    RG2,RG1                  TEXT START ADDRESS              55050002
         L     RG4,SVLNGTH              GET LENGTH OF FIELD       M0509 55080002
         LA    RG2,0(RG4,RG2)           ADD NO. OF PATCH CHAR (-1)      55110002
         NI    CTLBTE,X'FF'-OVFLOW      RESET OVERFLOW BIT              55140002
         CR    RG2,RG3                  END OF PATCH WITHIN RECORD      55170002
         BC    4,NAME10                 YES-SKIP                        55200002
         TM    CTLBTE,ONEREC            SPECIAL RECORD                  55230002
         BC    1,NAME12B                ERROR MSG + DUMP         A41634 55260002
         OI    CTLBTE,OVFLOW            SET OVERFLOW BIT                55290002
         SR    RG2,RG3                  NO OF CHAR'S OVER (-1)          55320002
         SR    RG4,RG2                  ACTUAL NO IN PATCH              55350002
         BCTR  RG4,0                    DECR. BY 1                      55380002
         LR    RG5,RG2                  SAVE NO. OF CHARS               55410002
         ST    RG2,SVLNGTH              SAVE NO. OF CHARS        A51987 55420002
NAME10   BAL   LNKRG1,CCHNOTE           TO SET UP CCHHR  ADDR           55440002
         A     RG1,STARTINC             RECORD OFFSET                   55470002
         S     RG1,START                TEXT START -ABS                 55500002
         TM    CTLBTE,VERYOP            VERY OPTION                     55530002
         BC    1,NAME13                 YES-COMPARE ONLY                55560002
         ST    RG3,TEMPRG3              SAVE RG3                 X01979 55590002
         ST    RG5,TEMPRG5              SAVE RG5                 X01979 55620002
         LR    WK2,RG1                  LOAD ADDRESS OF OLD DATA X01979 55650002
         LA    WK5,1(RG4)               LOAD LENGTH OF PATCH     X01979 55680002
         TM    CTLBTE2,FIRSTPCH         IS THIS FIRST PASS       X01979 55710002
         BO    SPLIT                    NO-DONT MOVE MESSAGE     X01979 55740002
         OI    CTLBTE2,FIRSTPCH         YES-SET FIRST PASS SW    X01979 55770002
         BAL   LNKRG2,UNPATCH           FORMAT UNPATCH MESSAGE   X01979 55800002
         B     NAME10A                  SKIP                     X01979 55830002
SPLIT    L     RG3,MSGOFSET             RESET OFFSET INTO MSG    X01979 55860002
         BAL   LNKRG2,UNPK              COMPLETE MESSAGE FORMAT  X01979 55890002
NAME10A  ST    RG3,MSGOFSET             SAVE OFFSET INTO MESSAGE X01979 55920002
         L     RG3,TEMPRG3              RELOAD RG3               X01979 55950002
         L     RG5,TEMPRG5              RELOAD RG5               X01979 55980002
         EX    RG4,PATCH                MOVE IN PATCHES                 56010002
NAME11   LA    R1,AWRDISK               UPDATE DISK              S21995 56040002
         BALR  R14,R15                                           S21995 56070002
         OI    CTLBTE2,MODIFY           SET MODIFY FLAG ON              56100002
         NI    CTLBTE3,X'FF'-SSIOP     TURN OFF SSI OPERATION    S21995 56130002
NAME12   TM    CTLBTE,OVFLOW            PATCH SPLIT                     56160002
         BZ    WRITEUN                  NO-WRITE UNPATCH         X01979 56190002
         LA    RG6,1(RG6,RG4)           UPDATE REP DATA                 56220002
         LR    RG1,RG3                  START OF ADDITIONL PATCH        56250002
         LR    RG4,RG5                  NEW NO. OF CHARS                56280002
         TM    CTLBTE,ENDMOD            CHECK FOR END OF MODULE  X01979 56310002
         BNO   NAME07B                  NO--READ NEXT TEXT REC   X01979 56340002
         TM    CTLBTE,VERYOP            IS THIS A VERIFY         X01979 56370002
         BO    NAME12B                  YES--UNABLE TO FINISH    X01979 56400002
         BAL   LNKRG1,WRITE3           .WRITE 'OLD DATA' MSG.  @ZA17659 56430037
         MVC   CDBUF+80(40),BLANKS      CLEAR END OF BUFFER      X01979 56460002
         NI    CTLBTE2,X'FF'-FIRSTPCH   TURN OFF FIRST PASS SW   X01979 56490002
         B     NAME12B                  NOW ERROR-PATCH OVERLAP  X01979 56520002
WRITEUN  TM    CTLBTE,VERYOP            FOR VERIFY OPERATION     X01979 56550002
         BCR   1,LNKRG3                 YES-GET NEXT CARD        X01979 56580002
         BAL   LNKRG1,WRITE3           .WRITE 'OLD DATA' MSG.  @ZA17659 56610037
         MVC   CDBUF+80(40),BLANKS      CLEAR END OF BUFFER      X01979 56640002
         NI    CTLBTE2,X'FF'-FIRSTPCH   RESET FIRST PASS SW      X01979 56670002
         BR    LNKRG3                   GET NEXT CARD            X01979 56700002
         SPACE 2                                                        56730002
* PATCH OPERATION INCOMPLETE                                            56760002
NAME12B  L     RG5,AMSG106I            .SELECT ERROR MESSAGE.  @ZA09679 56790000
         BC    15,NAME14                PRINT MSG AND DUMP              56820002
         SPACE 1                                                        56850002
*    VERIFY DATA                                                        56880002
NAME13   EX    RG4,VERPTCH              COMPARE PATCH                   56910002
         BC    8,NAME12                 ALL COMPARE-YES                 56940002
* VERIFY OPERATION NOT CONFIRMED                                        56970002
         L     RG5,AMSG104I            .SELECT MESSAGE.        @ZA17658 57000037
NAME14   BAL   LNKRG1,WRITE0            TO PRINT MESSAGE                57030002
         MVC   RETCODE(1),RETCOD08     .INDIC SPZAP-INP ERROR. @ZA06023 57120000
         TM    CTLBTE,IGNOP             HAS DUMP BEEN DONE?    @YM4508P 57120102
         BCR   1,LNKRG3                 YES, GET NEXT CARD     @YM4508P 57130102
         OI    CTLBTE,IGNOP             SET TO IGNORE REP CARD          57150002
         B     SETDUMP                 .(ADDRESSING DETOUR).   @ZA09679 57180000
         SPACE 3                                                        57210002
UNPATCH  MVC   CDBUF(20),UNPATMSG       MOVE UNPATCH MSG         X01979 57240002
         MVI   CDBUF+20,C' '            SET BLANK TO CLEAR       X01979 57270002
         MVC   CDBUF+21(100),CDBUF+20      TO END OF BUFFER      X01979 57300002
         LA    RG3,CDBUF+21             POINT TO REP AREA        X01979 57330002
UNPK     UNPK  0(3,RG3),0(2,WK2)        UNPACK OLD REP DATA      X01979 57360002
         TR    0(2,RG3),TRANTBL2-X'F0'  AND TRANSLATE TO EBCIDIC X01979 57390002
         MVI   2(RG3),BLANK             CLEAR LAST BYTE          X01979 57420002
         LA    RG3,2(RG3)               ADVANCE AREA PTR         X01979 57450002
         LA    WK2,1(WK2)               ADVANCE DATA PTR         X01979 57480002
         BCT   WK5,UNPK                 LOOP FOR LENGTH OF DATA  X01979 57510002
         BR    LNKRG2                   DONE-RETURN              X01979 57540002
*********************************************************************** 57570002
DUMPRTN  NI    CTLBTE,X'FF'-NAMEOP      SET NAME OPTION SW OFF   YM5146 57620002
         MVI   DMPSW,X'FF'             .SET DUMP INDICATOR.    @ZA26077 57620537
        NI    CTLBTE2,X'FF'-TRAN      .RESET 'TRANSLATE' FLAG. @ZA02775 57621000
         CLI   4(RG1),C'T'              TRANSLATE MODE                  57622002
         BC    7,DUMPR1                 NO-SKIP                         57630002
         OI    CTLBTE2,TRAN             YES-SET CONTROL BIT             57660002
DUMPR1   BAL   LNKRG2,SCANKEY5          TO GET MEMBER & CSECT NAME      57690002
         NI    CTLBTE,X'FF'-ONEREC  RESET INDICATOR                     57720002
         OI    CTLBTE,NAMEERR  DON'T ALLOW VER'S AND REPS               57750002
         CLC   CSECT(4),ALL           .TEST FOR 'ALL' REQUEST. @ZA19021 57780037
         BC    8,DUMP04                 YES-MULTIPLE DUMP               57810002
* ENTRY POINT FROM NON-COMPARE ON VERIFY OPERATION                      57840002
DUMP01A  NI    CTLBTE,X'FF'-ENDMOD           RESET END OF MODULE A42720 57870002
         LA    R15,NOCSECT    IN CASE OF BAD INPUT, WE HAVE TO  YA01766 57880002
         STM   0,15,DMPSAVE   SAVE THE REGS AND POINT REG15 TO  YA01766 57886002
         L     R15,AIORTNS    LABEL 'NOCSECT'                   YA01766 57892002
         BAL   LNKRG2,NAME01A           FIND CSECT NAME          A42720 57900002
* RETURN VECTOR-ERROR MSG                                               57930002
         BC    15,NOCSECT                                               57960002
         SPACE 1                                                        57990002
         BC    15,NAME03B               TRY NEXT ESD                    58020002
         SPACE 1                                                        58050002
* FOUND ESD - CSECT NAME - FIND         CONTROL RECORD WITH ID          58080002
DUMP01B  BAL   LNKRG2,RDDSK4            READ CONTROL RECORD             58110002
* RETURN VECTOR 1 - END OF MODULE                                       58140002
         BC    15,DUMP09                END OF DUMP                     58170002
         SPACE 1                                                        58200002
* RETURN VECTOR2 - FOUND CONTROL RECORD WITH CSECT ID                   58230002
         TM    CTLBTE,ONEREC            SPECIAL RECORD                  58260002
         BC    1,DUMP01D                YES-PREPARE TO POINT            58290002
         BAL   LNKRG2,DUMP1             TO DUMP CSECT            S21995 58320002
* CONDITION CODE SET FOR LAST RECORD                                    58350002
         BC    1,DUMP09                 TO PRINT COMPLETE MESSAGE       58380002
         BC    15,DUMP01B               NO-CONTINUE                     58410002
         SPACE 1                                                        58440002
DUMP01D  LA    R1,ADMP1AA              DUMP CSECT                S21995 58470002
         L     R15,ADMP                                          S21995 58500002
         BALR  R14,R15                                           S21995 58530002
*   CONDITION CODE SET FOR LAST RECORD                                  58560002
         BC    1,DUMP09                 TO PRINT COMPLETE MESSAGE       58590002
         TM    CTLBTE2,MULREC           MULTIPLE TEXT                   58620002
         BC    8,DUMP09                 TO PRINT COMPLETE MESSAGE       58650002
         NI    CTLBTE,X'FF'-ONEREC      YES-RESET INDICATORS            58680002
         BC    15,DUMP01B               TO CONTINUE DUMP                58710002
         SPACE 2                                                        58740002
*********************************************************************** 58770002
* THIS ROUTINE HANDLES DUNPING OF ALL THE CSECTS IN THE MEMBER          58800002
*******************                                                     58830002
DUMP04   XC    IDSAVE2(4),IDSAVE2       CLEAR SAVE AREA                 58860002
DUMP04A  L     R15,ACONT      IN CASE OF BAD INPUT, WE HAVE TO  YA01766 58870002
         STM   0,15,DMPSAVE   SAVE THE REGS AND POINT REG15 TO  YA01766 58876002
         L     R15,AIORTNS    LABEL 'CONT '                     YA01766 58882002
         BAL   LNKRG2,NAME01A           TO FIND FIRST CSECT             58890002
* RETURN VECTOR - END OF ESD SEARCH                                     58920002
         BC    15,DUMP09                END MSG                         58950002
         SPACE 1                                                        58980002
*   RETURN VECTOR- CSECT NON-COMPARE                                    59010002
         BC    0,0                                                      59040002
*   RETURN VECTOR-  CSECT COMPARE                                       59070002
         TM    CTLBTE,ONEREC            IS IT A SPECIAL DUMP            59100002
         BC    1,DUMP01D                YES-DUMP ONE RECORD             59130002
         CLI   RDAREA1,X'20'           MAY HAVE LOWEST CSECT     A42310 59160002
         BNE   DUMP09                  YES-DUMP DOESNOT WANT IT  A42310 59190002
         CL    RG4,IDSAVE2              IS IT EQUAL TO LAST             59220002
         BC    8+4,NAME03B              SKIP UNTIL EXCEED LAST ID       59250002
         ST    RG4,IDSAVE2              SAVE ID FOR COMPARE             59280002
         MVC   CSECT(8),0(RG3)          USE AS DUMP NAME                59310002
DUMP06B  BAL   LNKRG2,RDDSK4            READ CONTROL RECORD             59340002
* RETURN VECTOR 1 - END OF MODULE                                       59370002
         B     DUMP07                  .TO NEXT RECD OF DUMP.  @ZA02788 59400000
         SPACE 1                                                        59430002
* RETURN VECTOR2 - FOUND CONTROL RECORD WITH CSECT ID                   59460002
         BAL   LNKRG2,DUMP1             TO DUMP CSECT            S21995 59490002
* CONDITION CODE SET FOR LAST RECORD                                    59520002
         BZ    DUMP06B                 .B IF NOT 'ENDMOD'.     @ZA02788 59550000
DUMP07   CLC   CSECT(8),BLANKS                                 @ZA02788 59555000
         BNE   DUMP04A                 .IF NO CSECT NAME,      @ZA02788 59560000
         MVC   CSECT(8),IDRDFLT        . SET TO 'NO IDENT'.    @ZA02788 59565000
         B     DUMP04A                 . AND GO TO NEXT CSECT. @ZA02788 59570000
         SPACE 1                                                        59610002
DUMP09   LA    RG5,DMPCMP                                               59640002
         MVI   DMPSW,X'00'             .ALLOW WRITE TO CONSOLE @ZA26077 59650037
         BAL   LNKRG1,WRITE0            WITE OUT COMPLETE MSG           59670002
         NI    CTLBTE2,X'FF'-TRAN      RESET IF BIT ON                  59700002
         NI    CTLBTE,X'FF'-ENDMOD     RESET IF BIT ON                  59730002
         LA    RG5,BLANKS               SKIP PAGE                       59760002
         MVI   CDBUF-1,X'F1'            SET TO SKIP TO NEW PAGE         59790002
         MVI   DMPSW,X'FF'             .RESTORE DUMP INDICATOR @ZA26077 59800037
         BAL   LNKRG1,WRITE0            SKIP LINE                       59820002
         MVI   CDBUF-1,X'40'            SET TO NORMAL                   59850002
* ADDRESSABILITY DETOUR.                                       @ZA09673 59880000
         B     DUMP09Z                 .TEST FOR RETCODE GE 12 @ZA09673 59890000
         SPACE 2                                                        59910002
*********************************************************************** 59940002
ABDMP1   LA    RG3,1(RG3)               INCR. TO NEXT CHAR              59970002
ABDMPRTN CLI   1(RG3),BLANK             IS THIS CHAR A BLANK            60000002
         BC    8,ABDMP1                 YES-TO INCR.                    60030002
         MVI   DMPSW,X'FF'             .SET DUMP INDICATOR.    @ZA26077 60040037
         OI    CTLBTE,NAMEERR  DON'T ALLOW VER'S AND REPS               60060002
         NI    CTLBTE,X'FF'-NAMEOP   TURN OFF NAME OPTION        YM5146 60070002
        NI    CTLBTE2,X'FF'-TRAN      .RESET 'TRANSLATE' FLAG. @ZA02775 60080000
         CLI   7(RG1),C'T'              TRANSLATE DESIRED               60090002
         BC    7,ABDMP1B                NO-SKIP                         60120002
         OI    CTLBTE2,TRAN             SET TRANSLATE FLAG              60150002
ABDMP1B  XC    BASE(4),BASE             RESET FIELDS                    60180002
         XC    BASE2(4),BASE2                                           60210002
         XC    START(4),START                                           60240002
         LA    14,X'20'                 CONV RTN OFFSET                 60270002
         CLC   1(4,RG3),ALL           .TEST FOR 'ALL' REQUEST. @ZA19021 60300037
         BC    8,ABDMP3                 YES-SKIP TO SET LIMITS          60330002
         TM    1(RG3),X'F0'             IS THIS FIRST CHAR NUMERIC      60360002
         BC    8+4,ABDMP6               NO-MEMBER DUMP ONLY             60390002
         BAL   LNKRG2,CCHHSUB           DECODE INPUT CCHHR              60420002
         BAL   LNKRG1,CHCONV            CONVERT TO TTR                  60450002
         ST    0,TTRSAVE                SAVE TEMP                       60480002
         BAL   LNKRG2,CCHSUB2           DECODE 2ND CCH                  60510002
ABDMP2   LA    14,X'20'                 CONVERT RTN OFFSET              60540002
         BAL   LNKRG1,CHCONV            CONVERT ABS TO TTR              60570002
CONTA    MVC   STCSECT(4),TTRSAVE       EXCHANGE TTR'S                  60600002
         ST    0,TTRSAVE                SAVE FOR COMPARE                60630002
ABDMP5   DS    0C                                                       60660002
         MVC   MEMNAME(8),BLANKS        ZERO OUT FIRST LINE INFO        60690002
         MVC   CSECT(8),BLANKS                                          60720002
         LA    R1,ADMP1AA              TO DUMP RECORD            S21995 60750002
         L     R15,ADMP                                          S21995 60780002
         BALR  R14,R15                                           S21995 60810002
CONTB    CLC   STCSECT(3),TTRSAVE       COMPLETED                       60840002
         BC    8+2,DUMP09               YES-PRINT MSG.                  60870002
         NI    LIB2+44,X'3F'            RESET IFLAGS IF ON DUE TO ERROR 60900002
         CLI   DECB5,X'42'              END OF EXTENT                   60930002
         BC    8,DUMP09                 YES-END OPERATION               60960002
         LA    LNKRG2,CONTB             RESET LINK REG           S21995 60990002
         BC    15,DUMP1                 PRINT NEXT RECORD        S21995 61020002
         SPACE 1                                                        61050002
CONT     L     R15,AIORTNS                                       S21995 61080002
         CLI   DECB5,X'42'             EOD BECAUSE END OF EXTENT A43688 61110002
         BE    DUMP09                  YES-END OPERATION         A43688 61140002
         LA    R1,ADMP1E               WRITE EOD RECORD          S21995 61170002
         L     R15,ADMP                                          S21995 61200002
         BALR  R14,R15                                           S21995 61230002
         TM    CTLBTE2,PSIND            IS IT A SEQUENTIAL DUMP         61260002
         BO    DUMP09                   YES--DONE                       61290002
         LA    RG5,BLANKS                                               61320002
         BAL   LNKRG1,WRITE0            TO SKIP LINE                    61350002
         LA    LNKRG2,CONTB             RESET LINK REGISTER             61380002
         TM    CTLBTE2,MEMDMP           BUT WAS IT ONLY ONE MEMBER      61410002
         BCR   8,LNKRG2                 NO-FULL DATASET                 61440002
         NI    CTLBTE2,X'FF'-MEMDMP     REST INDICATOR                  61470002
         BC    15,DUMP09                TO PRINT ENDING MESSAGE         61500002
         SPACE 1                                                        61530002
ABDMP3   L     RG2,LIB2+44              GET DEB ADDR                    61560002
         NI    CTLBTE,X'FF'-NAMEOP-ONEREC  RESET INDICATORS             61590002
         XC    MBBCCHHR(8),MBBCCHHR     RESET ADDRESS                   61620002
         MVC   MBBCCHHR+3(4),STEXT(RG2) SET START ADDR.                 61650002
         MVI   MBBCCHHR+7,X'01'         SET FOR RECORD ONE READ         61680002
         BAL   LNKRG1,CHCONV            CONVERT ABS TO TTR              61710002
         ST    0,STCSECT                START ADDR (TTR)                61740002
         MVC   JFCB(3),RDAREA+1         SET ADDR OF JFCB READ     M2820 61770002
         ST    LNKRG3,LNKSAVE      SAVE LINK REGISTER                   61800002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           61830002
         RDJFCB  (LIB2,(INPUT))         GET DDNAME                      61860002
         MVC   JFCB(3),JFCBAD+1         RESET EXIT LIST ADDR      M2820 61890002
         L     R15,AIORTNS              RESET R15                S21995 61920002
         L     RG2,LIB2+44              GET DEB ADDR AGAIN              61950002
         L     RG2,X'20'(RG2)           GET UCB ADDR                    61980002
         LA    RG2,X'1C'(RG2)           POINT AT VOL SER                62010002
         ST    RG2,OBLIST+8             SET ADDR IN LIST                62040002
         L     RG2,RDAREA               DSNAME POINTER                  62070002
         ST    RG2,OBLIST+4             SET POINTER                     62100002
         LA    RG4,160(RG2)             SET WORK AREA                   62130002
         ST    RG4,OBLIST+12            SET WK AREA IN LIST             62160002
         OBTAIN  OBLIST                 SET DSCB                        62190002
         L     R15,AIORTNS             RESET R15                 S21995 62220002
         L     LNKRG3,LNKSAVE      RESTORE LNKRG3                       62250002
         NI    CTLBTE2,X'FF'-PSIND      RESET PHYSICAL SEQ DUMP         62280002
         TM    DS1DSORG(RG4),PS         IS DATA SET SEQUENTIAL          62310002
         BNO   TESTPO                   NO--TEST FOR PARTITIONED        62340002
         OI    CTLBTE2,PSIND            YES--INDICATE SEQUENTIAL        62370002
MAKEHI1  SR    RG5,RG5                  CLEAR REG FRO TTR               62400002
         B     MAKEHI2                  GO SAVE TTR                     62430002
TESTPO   TM    DS1DSORG(RG4),PO         IS DATA SET PARTITIONED         62460002
         BNO   MAKEHI1                  NO--DUMP TO END OF EXTENT       62490002
         MVC   TTRSAVE(3),98-44(RG4)    SAVE END OF DATA SET            62520002
         MVI   TTRSAVE+3,0              ZERO CONC. NO.                  62550002
         L     RG5,TTRSAVE              GET CONTENTS                    62580002
         LTR   RG5,RG5                  ZERO                            62610002
         BC    7,ABDMP5                 NO-USE                          62640002
MAKEHI2  BCTR  RG5,0               YES - MAKE END TTR HIGH              62670002
         ST    RG5,TTRSAVE              YES - MAKE HIGH                 62700002
         MVI   TTRSAVE+3,0              ZERO OUT CONC NO.               62730002
         BC    15,ABDMP5                DUMP ALL OF D.S.                62760002
         SPACE 1                                                        62790002
ABDMP6   BAL   LNKRG2,SCANKEY5          TO GET MEMBER NAME              62820002
         ST    LNKRG3,LNKSAVE           SAVE LINK REGISTER              62850002
         LA    LNKRG3,REGSAVE           ADDR OF REG SAVE AREA           62880002
         FIND  LIB2,MEMNAME,D           POSITION AT FIRST RECORD        62910002
         L     LNKRG3,LNKSAVE           RESTORE LNKRG3                  62940002
         LTR   15,15                    FOUND MEMBER                    62970002
         L     R15,AIORTNS             RESET R15                 S21995 63000002
         BC    7,NAME03C                NO -TO PRINT MESSAGE            63030002
         MVC   CSECT(8),BLANKS          CLDAR FIELD                     63060002
         OI    CTLBTE2,MEMDMP           SET CONTROL FLAG                63090002
         BAL   LNKRG2,DUMP1             TO DUMP                  S21995 63120002
         BC    15,DUMP1                 CONTINUE                 S21995 63150002
         SPACE 1                                                        63180002
DSERROR  LA    RG5,DSMSG                DS NOT IN TEXT                  63210002
         BC    15,NAME14                                                63240002
         SPACE 1                                                        63270002
NOCSECT  L     RG5,AMSG103I            .SELECT MESSAGE.        @ZA17658 63300037
         L     R15,ACONT      IN CASE OF BAD INPUT, WE HAVE TO  YA01766 63302002
         STM   0,15,DMPSAVE   SAVE THE REGS AND POINT REG15 TO  YA01766 63304002
         L     R15,AIORTNS    LABEL 'CONT '                     YA01766 63306002
         L     R15,AIORTNS              RESTORE R15              YM5146 63310002
         BAL   LNKRG1,WRITE0                                            63330002
         MVC   RETCODE(1),RETCOD08     .INDIC SPZAP-INP ERROR. @ZA06023 63420000
         OI    CTLBTE,IGNOP+NAMEERR     IGNORE NXT REP AND VERIFY       63450002
         BC    15,DUMP04                                                63480002
         EJECT                                                          63810002
AMASZDMP CSECT                                                          63840002
         USING AMASZCON,BASREG2                                  S21995 63870002
         L     R15,ACONT               PUT RETURN FROM EOF IN 15 YM5146 63880002
         STM   0,15,DMPSAVE                                      S21995 63930002
         L     R15,AIORTNS             RESET R15                 YM5146 63940002
         BALR  BASREG,0                                          S21995 63960002
         USING *,BASREG                                          S21995 63990002
DMPBASE  DS    0H                      .('SZDMP' BASE ADDR).   @ZA09678 63991000
         LA    R13,REGSAVE             SET REG SAVE AREA         S21995 64020002
         LA    LNKRG2,GOBACK2          SET DUMP RETURN           S21995 64050002
         B     VECTOR2(R1)             BRANCH ON INDEX R1        S21995 64080002
VECTOR2  B     DUMP01AA                                          S21995 64110002
         B     DUMP01                                            S21995 64140002
         B     DUMP01E                                           S21995 64170002
         B     DUMP01AB                                          S21995 64200002
GOBACK2  LM    0,15,DMPSAVE            RESTORE REGS              S21995 64230002
         L     R15,AIORTNS             RESET R15                 YM5146 64240002
         BR    R14                     RETURN                    S21995 64260002
*      INITIALIZE  REGISTERS  FOR  DUMP  FORMAT  PROGRAMS               64290002
DUMPCOM  L     WK6,TBUF+8               INIT TO DATA PTR                64320002
DUMPCOM1 MVC   CDBUF(48),BLANKS         CLEAR BUFFER                    64350002
         MVC   CDBUF+48(32),BLANKS                                      64380002
         LA    WK3,CDBUF+10             SET INITIAL BUFFER PTR          64410002
         LA    WK4,8                    SET WORD COUNTER                64440002
         BCR   15,LNKRG1                RETURN                          64470002
         SPACE 1                                                        64500002
DUMP01AA POINT LIB2,STCSECT             POSITION AT TXT RECORD          64530002
         L     R15,AIORTNS             RESET R15                 S21995 64560002
         SPACE 2                                                        64590002
*********************************************************************** 64620002
DUMP01   LA    RG5,BLANKS                                               64650002
         LA    R1,AWRITE0A             TO SKIP LINE              S21995 64680002
         BALR  R14,R15                                           S21995 64710002
         LA    R1,ARDDSK2               READ TXT RECORD          S21995 64740002
         BALR  R14,R15                                           S21995 64770002
DUMP01E  BAL   LNKRG1,CCHNOTEA          TO SET UP CCHHR ADDR     S21995 64800002
         SPACE 1                                                        64830002
         MVC   CDBUF(100),TITLE1                                        64860002
         L     WK6,STARTINC             GET OFFSET                      64890002
         LA    WK6,RDAREA1(WK6)         ADD TO RDAREA1                  64920002
         L     RG3,DECB5+16             GET IOB POINTER                 64950002
         SR    WK2,WK2                  CLEAR REGISTER                  64980002
         IC    WK2,LIB2+16              GET KEY LENGTH                  65010002
         L     WK1,SIZE                 GET MAX SIZE OF RECORD          65040002
         AR    WK1,WK2                  ADD TO BUFFER ADDR              65070002
         XC    TBUF(2),TBUF             SET BEGINNING TO 0       A41640 65100002
         MVC   TBUF+2(2),14(RG3)        MOVE RESIDUAL COUNT      A41640 65130002
         S     WK1,TBUF                 GET SIZE READ            A41640 65160002
         TM    CTLBTE2,MEMDMP           MEMBER DUMP ONLY                65190002
         BC    1,DUMP01AC               YES-SKIP AROUND                 65220002
         CLC   MEMNAME(8),BLANKS        ABSOLUTE DUMP                   65250002
         BC    7,DUMP01AB               NO -SKIP LENGTH CALC            65280002
* ABSDUMP. TEST FOR EXTRA RECD DUE TO ENDADDR RECD# GT LAST    @ZA09678 65282000
         CLC   STCSECT(3),TTRSAVE      . RECD OF TRACK.        @ZA09678 65284000
         BNH   DUMP01F                 .IF NOT, CONTINUE DUMP. @ZA09678 65286000
         LM    0,15,DMPSAVE            .IF SO,                 @ZA09678 65288000
         L     R15,AIORTNS             . TERMINATE DUMP.       @ZA09678 65290000
         USING ZAPBASE2,BASREG         .('SPZAP' ADDRESSING).  @ZA09678 65292000
         B     DUMP09                                          @ZA09678 65294000
         DROP  BASREG                  .(END 'SPZAP' ADDRING). @ZA09678 65296000
         USING DMPBASE,BASREG          .(RESUME 'DMP' ADDRNG). @ZA09678 65298000
DUMP01F  DS    0H                      .(CONTINUE ABSDUMP).    @ZA09678 65300000
         MVC   CDBUF+X'32'(37),BLANKS   WIPE OUT CSECT LABEL            65310002
DUMP01AC DS    0C                                                       65340002
         MVC   CDBUF+X'49'(14),BLANKS    BLANK OUT CSECT TITLE   S21995 65370002
         ST    WK1,LENGTH               STORE RECORD COUNT              65400002
DUMP01AB LR    WK2,WK6                                                  65430002
         A     WK2,LENGTH               STOP ADDRESS                    65460002
         ST    WK1,LENGTH               STORE NEW COUNT IF ABS DUMP     65490002
         UNPK  CDBUF+9(11),MBBCCHHR+3(6)                                65520002
         TR    CDBUF+9(10),TRANTBL2-X'F0'                               65550002
         MVI   CDBUF+19,BLANK                                           65580002
         UNPK  CDBUF+37(5),LENGTH+2(3)                                  65610002
         TR    CDBUF+37(4),TRANTBL2-X'F0'                               65640002
         MVI   CDBUF+41,BLANK                                           65670002
         BAL   LNKRG1,WRITEB            PRINT HEADER             S21995 65700002
         OC    LENGTH+2(2),LENGTH+2     END OF FILE                     65730002
         BCR   8,LNKRG2                 YES- RETURN                     65760002
         L     WK1,START                                                65790002
         S     WK1,BASE                                                 65820002
DUMP02   BAL   LNKRG1,DUMPCOM1          INITIALIZE REGISTERS            65850002
         ST    WK6,TBUF+8               SAVE LOC OF LINE START          65880002
         ST    WK1,TBUF                 OFFSET ADDRESS                  65910002
         UNPK  CDBUF+1(7),TBUF+1(4)     CSECT OFFSET                    65940002
         TR    CDBUF+1(6),TRANTBL2-X'F0'                                65970002
         MVI   CDBUF+7,BLANK            RESET LAST UNPACK               66000002
DUMP02B  LA    WK5,4                    CHAR COUNT                      66030002
DUMP02C  UNPK  0(3,WK3),0(2,WK6)        UNPACK CHAR.                    66060002
         TR    0(2,WK3),TRANTBL2-X'F0'                                  66090002
         MVI   2(WK3),BLANK             RESET SIGN OF UNPACK            66120002
         LA    WK3,2(WK3)               CDBUF ADDRESS                   66150002
         LA    WK6,1(WK6)               TEXT ADDRESS                    66180002
         CR    WK6,WK2                  STOP ADDR                       66210002
         BC    8+2,DUMP08               DONE-YES EXIT                   66240002
         TM    CTLBTE2,TRAN             CHECK FOR HALFWORD SEP          66270002
         BC    1,DUMP03B                YES-OUT TO CHECK                66300002
DUMP03A  BCT   WK5,DUMP02C              CONTINUE WITH FIRST LOOP        66330002
         CH    WK4,FIVE                 MIDDLE OF PAGE                  66360002
         BC    8,DUMP03                 YES - SET ADDRESS IN DUMP       66390002
         LA    WK3,3(WK3)               INC PAST BLANKS                 66420002
         TM    CTLBTE2,TRAN             TRAN DUMP                       66450002
         BC    8,DUMP02D                NO-LET INCR STAND               66480002
         BCTR  WK3,0                    YES-CHANGE FORMAT               66510002
DUMP02D  DS    0C                                                       66540002
         BCT   WK4,DUMP02B              SECOND LOOP                     66570002
         TM    CTLBTE2,TRAN             TEST FOR TRANSLATE OPTION       66600002
         BC    1,GRAP1                  YES-CONTINIUE WITH LINE         66630002
         BAL   LNKRG1,WRITEB            NO-PRINT THIS ONE        S21995 66660002
DUMP02E  LA    WK1,32(WK1)              INCR. READ POINTER              66690002
         BC    15,DUMP02                NEXT LINE                       66720002
         SPACE 1                                                        66750002
DUMP03B  CH    WK5,THREE                HALFWORD SEPARATOR              66780002
         BC    7,DUMP03A                NO-CONTINUE WITH WORD           66810002
         LA    WK3,1(WK3)               LEAVE BLANK SEP.                66840002
         BCT   WK5,DUMP02C              CONTINUE                        66870002
         SPACE 1                                                        66900002
DUMP03   LA    WK3,5(WK3)               INCR PAST MIDDLE OF PAGE        66930002
         BCT   WK4,DUMP02B              DECR. COUNTER                   66960002
         SPACE 2                                                        66990002
DUMP08   TM    CTLBTE2,TRAN             TEST FOR TRANSLATE OPTION       67020002
         BC    1,GRAP1                  TO DECODE GRAPHICS              67050002
         BAL   LNKRG1,WRITEB            PRINT LAST LINE          S21995 67080002
         TM    CTLBTE,ENDMOD            TEST FOR LAST TEXT RECORD       67110002
         BCR   15,LNKRG2                END OF SUBROUTINE               67140002
*      THIS  SUBROUTINE  TRANSLATES  DATA  INTO  INSTRUCTIONS           67170002
         SPACE 1                                                        67200002
INSTR7   AR    WK7,WK7                  MULTIPLY AGAIN BY2              67230002
         AR    WK7,WK7                  DOUBLE AGAIN =X4                67260002
         LA    WK7,FOURC-X'108'(WK7)    GET MNEMONIC                    67290002
         MVC   0(4,WK3),0(WK7)          MOVE INTO OUTPUT BUFFER         67320002
         BC    15,INSTR3                BACK                            67350002
TRANS5   MH    WK7,FIVE            MULTIPLY OFFSET BY 5           M1148 67380002
         LA    WK7,FIVEC-X'410'(WK7)   GET ADDR OF MNEMONIC       M1148 67410002
         CH    WK5,ONE             IN MIDDLE OF HALFWORD PAIR     M1148 67440002
         BE    MOVE5               YES,RUN MNEMONIC OVER END      M1148 67470002
         BCTR  WK3,0               NO,BACK UP POSITION            M1148 67500002
         MVC   0(5,WK3),0(WK7)     MOVE MNEMONIC INTO BUFFER      M1148 67530002
         LA    WK3,1(WK3)          MOVE BUFFER PTR BACK TO ORIGIN M1148 67560002
         B     INSTR3              BACK                           M1148 67590002
MOVE5    MVC   0(5,WK3),0(WK7)     MOVE MNEMONIC TO BUFFER        M1148 67620002
         B     INSTR3                                             M1148 67650002
         SPACE 1                                                        67680002
INSTR6   LA    WK3,5(WK3)               INCR BUFFER PTR                 67710002
         BCT   4,INSTR1                 BAD WITH REST OF PAGE           67740002
         SPACE 1                                                        67770002
INSTR8   LA    WK3,1(WK3)               SPACE BETWEEN HALF WORDS        67800002
         BC    15,INSTR2                CONTINUE WITH WORD              67830002
TWOBYTES IC    WK7,0(WK6)          GET 2ND BYTE                   M1148 67860002
         BCTR  WK6,0               GET BACK TO OP CODE            M1148 67890002
         CLI   0(WK6),X'B2'        IS IT A B2XX OP CODEP          M1148 67920002
         BNE   BYTE29C                 NO, TRY ANOTHER TWO BYTER  M1148 67950002
         CLC   1(1,WK6),MAXB2          CHECK MAX SIZE OF BYTE 2  S21995 67980002
         BH    DXRCK                   CHECK FOR DXR INSTRUCTION X01979 68010002
         IC    WK7,B2TAB(WK7)          GET TABLE INCREMENT        M1148 68040002
BYTE2EX  LA    WK6,1(WK6)              RESET POINTER              M1148 68070002
         B     TABCHK                  GO GET MNEMONIC            M1148 68100002
DXRCK    CLI   1(WK6),X'2D'            IS IT A DXR               X01979 68130002
         BNE   TOOHI                   NO--2ND BYTE IS TOO BIG   X01979 68160002
         LA    WK7,X'AA'               YES--SET OFFSET INTO TABLEX01979 68190002
         B     BYTE2EX                 GO GET MNEMONIC           X01979 68220002
TOOHI    SR    WK7,WK7                 SET WK7 TO NO OP          S21995 68250002
         B     BYTE2EX                 GO GET BLANK MNEMONIC     S21995 68280002
BYTE29C  N     WK7,BYTE2MSK            REMOVE 7 HI BITS OF OPCODE BYTE2 68310002
         CLI   0(WK6),X'9C'            IS IT 9CXX                 M1148 68340002
         BNE   BYTE29D                 NO, TRY NEXT              YM5533 68370002
         IC    WK7,TAB9C(WK7)          GET TABLE INCREMENT        M1148 68400002
         B     BYTE2EX                 GO GET MNEMONIC            M1148 68430002
BYTE29D  CLI   0(WK6),X'9D'            IS IT 9DXX                YM5533 68460002
         BNE   BYTE29E                 NO,TRY NEXT               YM5533 68490002
         IC    WK7,TAB9D(WK7)          GET TABLE OFFSET          YM5533 68520002
         B     BYTE2EX                 GO GET MNEMONIC           YM5533 68550002
BYTE29E  CLI   0(WK6),X'9E'            IS IT 9EXX                YM5533 68560002
         BNE   BYTE2XX                 NO,TRY NEXT               YM5533 68570002
         IC    WK7,TAB9E(WK7)          GET TABLE OFFSET          YM5533 68572002
         B     BYTE2EX                 GO GET MNEMONIC           YM5533 68574002
BYTE2XX  SR    WK7,WK7                 DEAD END .. NO MNEMONIC    M1148 68580002
         B     BYTE2EX                 RETURN                     M1148 68610002
         SPACE 1                                                        68640002
INSTR0   BAL   LNKRG1,DUMPCOM           INITIALIZE REGISTERS            68700002
INSTR1   LA    WK5,2                    INSTR. COUNTER                  68730002
INSTR2   SR    WK7,WK7                  CLEAR REGISTER                  68760002
         IC    WK7,0(WK6)               GET INSTR. OP CODE              68790002
         LA    WK6,1(WK6)               INCR. DATA LIST                 68820002
         CR    WK6,WK2                  STOP                            68850002
         BC    8+2,INSTR5               YES-DONT UNPACK ONE BYTE INSTR. 68880002
         IC    WK7,TRAN2(WK7)           GET INDEX TO TABLE              68910002
         CH    WK7,TWOBYTOP        SHOULD WE LOOK AT 2ND BYTE     M1148 68940002
         BE    TWOBYTES            YES - PROCESS 2ND BYTE         M1148 68970002
TABCHK   CH    WK7,FIVECHAR        FIVE CHARACTER OP CODE         M1148 69000002
         BC    8+2,TRANS5          YES,MOVE 5 CHARS               M1148 69030002
         CH    WK7,TWOHIGH              TEST FOR WHICH TABLE            69060002
         BC    8+2,INSTR7               GET FOUR CHARATER TABLE         69090002
         AR    WK7,WK7                  DOUBLE INDEX                    69120002
         LA    WK7,TWOC(WK7)            GET ADDRESS                     69150002
         MVC   0(2,WK3),0(WK7)          SET IN MNEMONIC                 69180002
INSTR3   LA    WK6,1(WK6)               INCR. PAST HALF WORD            69210002
         CR    WK6,WK2                  END                             69240002
         BC    8+2,INSTR5               YES - TO PRINT LINE             69270002
         LA    WK3,4(WK3)               INCR. OUTPUT BUFFER             69300002
         BCT   WK5,INSTR8               SPACE TO SEPR. HALFWORDS        69330002
         CH    WK4,FIVE                 MIDDLE OF PAGE                  69360002
         BC    8,INSTR6                 YES - SET TITLE                 69390002
         LA    WK3,2(WK3)               NO-INCR TO NXT WORD             69420002
         BCT   WK4,INSTR1               END OF LINE - NO NXTWORD        69450002
INSTR5   L     WK6,TBUF+8               GET DATA POINTER                69480002
         LA    WK6,X'10'(WK6)           INCR BY ONE LINE                69510002
         LA    LNKRG1,DUMP02E           RETURN ADDRESS                  69540002
         CR    WK6,WK2                  STOP ADDRESS           @ZA28392 69550037
         BC    8+2,GRAP8                YES, THEN EXIT         @ZA28392 69560037
         BC    15,GRAP1B                                                69570002
GRAP1    LA    LNKRG1,INSTR0            INIT. RET REG-2ND LINE          69600002
         L     WK6,TBUF+8               INITIAL DATA POINTER            69630002
GRAP1B   MVI   CDBUF+102,C'*'           SET DELIMITER                   69660002
         MVI   CDBUF+119,C'*'    PLACE ASTERISK AT END OF LINE @ZA28392 69670037
         LA    WK3,CDBUF+103            INITIALIZE TO BUFFER POSITION   69690002
         LA    WK5,16                   CHAR COUNTER                    69720002
GRAP2    CLI   0(WK6),BLANK             TEST CHARACTER                  69750002
         BC    4,GRAP3                  INVALID GRAPIC - YES            69780002
         CLI   0(WK6),X'7F'             WITHIN SECTION                  69810002
         BC    8+4,GRAP5                YES - TRANSLATE                 69840002
         LA    WK7,GRAPT2-C'A'          TRANSLATE TABLE                 69870002
         CLI   0(WK6),C'A'              NORMAL GRAPHICS                 69900002
         BC    8+2,GRAP6                YES - TRANSLATE                 69930002
GRAP3    MVI   0(WK3),C'.'              NO-SET AS INVALID               69960002
GRAP3B   LA    WK6,1(WK6)               INCR DATA POINTER               69990002
         CR    WK6,WK2                  STOP ADDR                       70020002
         BC    8+2,GRAP8                DONE - YES EXIT                 70050002
         LA    WK3,1(WK3)               INCR. BUFFER PTR                70080002
         BCT   WK5,GRAP2                CONTINUE WITH LINE              70110002
         BC    15,WRITEB                WRITE & RETURN ON LK2    S21995 70170002
         SPACE 1                                                        70200002
GRAP5    LA    WK7,GRAPT1-BLANK         TRANSLATE TABLE ADDR            70230002
GRAP6    MVC   0(1,WK3),0(WK6)          SET IN BUFFER                   70260002
         TR    0(1,WK3),0(WK7)          SET IN BUFFER                   70290002
         BC    15,GRAP3B                CONTINE                         70320002
         SPACE 1                                                        70350002
GRAP8    C     LNKRG1,RETAD        TO SEE IF HAVE TO TRANS OP CDS M1149 70380002
         BC    8,WRITEB  YES - PRINT LINE AND RETURN ON LKRG1     M1149 70410002
         BAL   LNKRG1,WRITEB     NO - PRINT LINE AND RETURN HERE  M1149 70440002
         TM    CTLBTE,ENDMOD            TEXT FOR LAST TEXT RECORD       70470002
         BCR   15,LNKRG2                RETURN                          70500002
         SPACE 1                                                        70530002
WRITEB   LA    R1,AWRITEA              SET INDEX FOR WRITE       S21995 70560002
         LR    R14,LNKRG1              SET RETURN REG            S21995 70590002
         BR    R15                     BRANCH TO WRITE           S21995 70620002
         SPACE 2                                                        70650002
*********************************************************************** 70680002
* THIS SUBROUTINE OBTAINS THE TEXT TTR AND CONVERTS IT TO CCHHR         70710002
*********************************************************************** 70740002
CCHNOTEA NOTE  LIB2                                              S21995 70770002
         L     R15,AIORTNS             RESET R15                 S21995 70800002
         ST    1,STCSECT                SAVE TTR                 S21995 70830002
         LR    0,1                      CONVERT TTR INPUT REG    S21995 70860002
         LA    14,X'1C'                 TTR CONV RTN OFFSET      S21995 70890002
         STM   8,13,TBUF+32             SAVE REGS                S21995 70920002
         LA    8,TBUF+32                GET ADDRESSIBILITY       S21995 70950002
         LA    2,MBBCCHHR               CONVERT STG ADDR.        S21995 70980002
         L     1,LIB2+44                DEB ADDRESS              S21995 71010002
         L     15,16                    CVT POINTER              S21995 71040002
         L     15,0(14,15)              CONVERT RTN ADDR         S21995 71070002
         BALR  14,15                    TO CONVERT TO CCHHR      S21995 71100002
         LM    8,13,0(8)                RESTORE REGISTERS        S21995 71130002
         L     R15,AIORTNS              RESET R15                S21995 71160002
         BCR   15,LNKRG1                RETURN                   S21995 71190002
         EJECT                                                          71220002
*********************************************************************** 71250002
AMASZCON CSECT                                                          71280002
*********************************************************************** 71310002
TEMPDBLW DC    D'0'                    .(ALIGNED DOUBLEWORD).  @ZA00409 71320003
RDAREA   DC    A(0)                     START OF DSECT                  71340002
SIZE     DC    A(0)                     LENGTH OF RECORD                71370002
SCARG    DC    XL8'0'                   SEARCH ARGUMENT                 71400002
TTRSAVE  DC    F'0'                       SAVE AREA FOR TTR      YM5532 71430002
IDSAVE   DC    A(0)                     SECONDARY SAVE FOR ALL DUMP     71460002
IDSAVE2  DC    A(0)                     SAVE AREA FOR ALL DUMP          71490002
STARTINC DC    A(0)                     ACCM1 OFFSET                    71520002
BASE2    DC    A(0)                     ADDITIONAL OFFSET SUPPLIED      71550002
CSECTID  DC    A(0)                     CSECT IO INDEX                  71580002
START    DC    A(0)                     TEXT START ADDRESS              71610002
LENGTH   DC    A(0)                     LENGTH OF TEXT                  71640002
BASE     DC    A(0)                     CSECT BASE ADDRESS              71670002
STCSECT  DC    A(0)                     CSECT NOTE ADDRESS              71700002
AIORTNS  DC    V(AMASZIOR)              ADDR OF I/O SUBRTN CSECT S21995 71730002
ACHSUM   DC    A(CHSUM)      .ADDR CHECKSUM-STMT PROCESSOR.    @ZA17660 71740037
CON1     DC    A(TBUF-1)                INIT ADDR OF BUF                71760002
CON3     DC    A(DBUFEND)               CONST FOR LOOP CONTL.           71790002
OFFSET   DC    A(0)                     PATCH OFFSET FROM RECORD START  71820002
RETAD    DC    A(INSTR0)                                          M1149 71850002
CDBUFEND DC    A(CDBUF+72)              END OF BUFFER          @YA02260 71880002
ZERO     DC    2F'0'                                             Y02160 71910002
TEMP     DS    2F                      SAVEAREA FOR CSECT NAME   A42310 71940002
ADMP     DC    V(AMASZDMP)              ADDRESS OF DUMP CSECT    S21995 71970002
ACONT    DC    A(CONT)                 LIB2 EOD IN MAIN CSECT    S21995 72000002
AIOBASE  DC    A(IOBASE)               I/O CSECT BASE ADDRESS    S21995 72030002
AINSM2   DC    A(INSM2)                 ADDR OF GET SSI RTN      X01979 72060002
JFCBAD   DC    A(JFCBAREA)              TO RESET ADDR IN EXITLIST M1733 72090002
AWTORTN  DC    A(WTORTN)               .ADDR 'WTO' INTERFACE.  @ZA00409 72095003
ACCISCAN DC    A(CCISCAN)    .ADDR INIT-CARD-SCAN SUBROUTINE.  @ZA17658 72096037
IDRNRECS DC    F'0'                    .CURR # IDR RECORDS.    @ZA00409 72100003
IDRNENTS DC    F'0'                    .CURR # IDR ENTRIES.    @ZA00409 72105003
IDRMENTS DC    F'0'                    .MAX # IDR ENTRIES.     @ZA00409 72110003
IDRMENTR DC    F'19'                   .MAX ENTS PER RECD.     @ZA00409 72115003
         DS    0F                                                       72120002
BYTE2MSK DC    X'00000001'             MASK FOR BYTE2 9C 9E OPCD S21995 72150002
CLER     DC    X'0000FFFF'                                              72180002
MBBCCHHR DC    XL8'0'                   SEEK ADDRESS                    72210002
MSK      DC    X'0C40'                  CSW STATUS                      72240002
ONE      DC    H'1'                                               M1148 72270002
THREE    DC    H'3'                     HALFWORD COUNTER                72300002
FIVE     DC    H'5'                     MIDDLE OF PAGE COUNTER          72330002
EIGHT    DC    H'8'                                            @ZA17660 72340037
TW2      DC    H'22'                                                    72360002
THIRTY   DC    H'30'                                                    72390002
TWENTY4  DC    H'24'                                             Y02160 72400002
THIRTY2  DC    H'32'                                                    72420002
FOURTY   DC    H'40'                                                    72450002
SEVEN    DC    AL2(7)                   CONSTANT                        72480002
TWOHIGH  DC    X'0042'                  HIGHEST TWO CHAR INDEX          72510002
TWOBYTOP DC    X'00FF'                 TWO BYTE OP CODE INDICATOR M1148 72540002
DESCR    DC    X'0800'                 DESCR CODE 5 FOR WTORTN          72570002
RTCD     DC    X'4000'             ROUTING CODE 2 FOR WTORTN            72600002
IOMSGLNG DC    H'64'               LENGTH OF I/O ERROR MSGS             72630002
ERRMGLNG DC    H'45'               LENGTH OF OPERATION ERROR MSGS       72660002
TITLE1   DC    CL9'**CCHHR-'                                            72690002
CCHHRP   DC    XL10'0'                                                  72720002
         DC    CL18'   RECORD LENGTH- '                                 72750002
RCLGTH   DC    XL4'0'                                                   72780002
         DC    CL9' '                                                   72810002
         DC    CL15'  MEMBER NAME  '                                    72840002
MEMNAME  DC    XL8'0'                                                   72870002
         DC    CL14'  CSECT NAME  '                                     72900002
CSECT    DC    XL8'0'                                                   72930002
         DC    CL5' '                                                   72960002
BLANKS   DC    2CL24' '                                                 72990002
IDRSIZE  DC    H'251'                  LENGTH OF SPZAP IDR REC   S21016 73020002
IDRDATA  DS    2F                      IDRDATA CARD SAVE AREA    S21016 73050002
IDRTTR   DS    F                       IDR REC TTR               S21016 73080002
IDRFSEEK DS    2F                      IDR REC MBBCCHHR          S21016 73110002
COUNT    DC    XL8'00'            FOR READING COUNT              YM5534 73120002
TEMPRG3  DS    F                        TEMPORARY STORAGE FOR RG3X01979 73140002
TEMPRG5  DS    F                        TEMPORARY STORAGE FOR RG5X01979 73170002
MSGOFSET DC    F'0'                     STORAGE FOR UNPATCH MESSAGE     73200002
*                                         OFFSET                 X01979 73230002
CON2     DC    18XL4'1F1F1F1F'          MASK FORTRAN                    73260002
CTLBTE   DC    X'40'         CONTROL  BYTE                              73290002
CTLBTE2  DC    X'00'                    MODIFY MEMBER BYTE              73320002
CTLBTE3  DC    X'00'                                                    73350002
PARMBITS DC    X'00'                    .PARM/PARAM BITS.      @ZA06024 73360000
QIGNIDRF EQU   X'80'                    .1 = IGNORE FULL IDR.  @ZA06024 73370000
QPARMERR EQU   X'01'                    .1 = PARAM-VAL ERROR.  @ZA06024 73372000
CONSW    DC    X'00'                                                    73380002
CONSW2   DC    X'00'         .X'FF' IF MSG SYSPRINT AND WTO.   @ZA17659 73390037
DMPSW    DC    X'00'         .X'FF' TO INHIBIT WTO DUR DUMPS.  @ZA26077 73400037
RSVSW    DC    X'00'                                                    73410002
SCANSW   DC    X'00'               SW SET IN SCAN MBR/CSECT NAME A48705 73440002
* RETURN-CODE STORAGE AND CONSTANTS.                           @ZA06023 73470000
RETCODE  DC    X'00'                    .CODE FOR LATEST EVENT @ZA06023 73475000
RETCOD00 DC    X'00'                    .(NO ERROR OR WARNING) @ZA06023 73480000
RETCOD04 DC    X'04'                    .(WARNING ONLY).       @ZA06023 73485000
RETCOD08 DC    X'08'                    .(SPZAP-INPUT ERROR).  @ZA06023 73490000
RETCOD12 DC    X'0C'                    .(JCL OR PARAM ERROR). @ZA06023 73495000
RETCOD16 DC    X'10'                    .(PERM I/O ERROR).     @ZA06023 73500000
LASTRET  DC    X'00'                    STEP RETURN CODE                73530002
*  RESERVE PARMLIST                                             A41228* 73560002
UCBAD    DS    1F                                                       73590002
QNAME    DC    CL8'SYSVTOC '       MAJOR NAME FOR RESERVE        YM5147 73640002
RNAME    DS    6C                  MINOR NAME FOR RESERVE        YM5147 73642002
         DS    0F                                                       73650002
MAJOR    DC    CL8'SPZAPLIB'                                            73660002
JFCBAREA DS    176C                44 BYTE DSNAME USED FOR MINOR        73680002
DBUF     DS    CL36                                                     73710002
DBUFEND  DS    0C                       END OF DATA BUFFER              73740002
         DS    CL36                     PAD                             73770002
         DS    0F                                                       73800002
LIST     DC    H'01'                    NO OF ENTRIES                   73830002
         DC    H'70'                    MAX LENGTH OF DIR ENTRIES       73860002
TBUF     DS    CL72                     TEMP STG OF DATA                73890002
         DS    CL7                      OVERLAP AREA FROM MOVE          73920002
WTOECB   DC    F'0'                                                     73950002
LNKSAVE  DC    F'0'                                                     73980002
REGSAVE  DS    18F                                                      74010002
DMPSAVE  DS    16F                     DUMP CSECT SAVE AREA      S21995 74040002
XFERSAVE DS    16F                     I/O CSECT SAVEAREA        S21995 74070002
TEMPSAV  DC    6F'0'               TEMPORARY SAVE AREA           S21995 74100002
ADDRSV   DC    F'0'                    TIOT ADDR SAVE AREA       A38645 74130002
DEVBUF   DC    5F'0'                   .DATA FROM 'DEVTYPE'.   @ZA02777 74160000
TRKSIZE  EQU   DEVBUF+12               .TRACKSIZE.             @ZA02777 74170000
LNKSAVE2 DC    F'0'                    TEMP SAVE AREA FOR LNKRG1 A38645 74190002
LNKSAVE3 DC    F'0'                    TEMP SAVE AREA FOR LNKRG1 A38645 74220002
SVLNGTH  DC    F'0'                    LENGTH OF SCAN FIELD       M0509 74250002
CHSUMACC DC    F'0'          .CHECKSUM ACCUMULATOR.            @ZA17660 74260037
CHSUMSLL DC    H'0'          .VAR SHIFT AMT FOR CHECKSUM.      @ZA17660 74270037
         DS    0F                                                       74280002
PREFIX   DC    H'0'                PREFIX FOR WTO BUFFER CDBUF          74310002
         DC    X'8000'             ROUTER AND DESCR CODES FOLLOW        74340002
         DC    C'1'                     ASA CONTROL CHAR                74370002
CDBUF    DC    CL32'AMASPZAP  INSPECTS, MODIFIES, AN'            X01979 74400002
         DC    CL32'D DUMPS CSECTS OR SPECIFIC DATA '            X01979 74430002
         DC    CL32'RECORDS ON DIRECT ACCESS STORAGE'            X01979 74460002
         DC    CL24'.'                                           X01979 74490002
         DS    5C                                                       74520002
FIVECHAR DC    X'00D0'                 OFFSET FOR 5 CHAR OPS      M1148 74550002
B2TAB    DC    X'0000D1D29A9BA7D4A8A9B2B100A50000'               YM5533 74580002
         DC    X'ACAFAEA6'             B2XX MNEMONIC OFFSETS     YM5533 74610002
*              DXR INSTRUCTION IS VALIDATED AT LABEL 'DXRCK'            74640002
TAB9C    DC    X'83AB'                 9CXX MNEMONIC OFFSETS      M1148 74670002
TAB9D    DC    X'84D3'                 9DXX MNEMONIC OFFSETS     YM5533 74680002
TAB9E    DC    X'85A1'                 9EXX MNEMONIC OFFSETS      M1148 74700002
MAXB2    DC    X'13'                   NO OF ENTRIES IN 'B2TAB'  X01979 74730002
TRANTBL  DC    X'00FAFBFCFDFEFF'                                        74760002
         DS    9C                                                       74790002
TRANTBL2 DC    C'0123456789ABCDEF'                                      74820002
         DS    0H                                                       74850002
****  INSTRUCTION MNEMONICS - TWO CHARACTERS                            74880002
TWOC     DC    C'  NRORXRLRCRARSRMRDRLAICEXBCLHCH'                      74910002
         DC    C'AHSHMHSTN CLO X L C A S M D ALSL'                      74940002
         DC    C'LDCDADSDMDDDAWSWLECEAESEMEDEAUSU'                      74970002
         DC    C'TMTSNIOIXILMNCOCXCTREDCPAPSPMPDP'                      75000002
         DC    C'MCCS'                                           YM5533 75030002
****  INSTRUCTION MNEMONICS - FOUR CHARACTERS                           75060002
FOURC    DC    C'SPM BALRBCTRBCR SSK ISK SVC LPR '                      75090002
         DC    C'LNR LTR LCR CLR ALR SLR LPDRLNDR'                      75120002
         DC    C'LTDRLCDRHDR LDR CDR ADR SDR MDR '                M1148 75150002
         DC    C'DDR AWR SWR LPERLNERLTERLCERHER '                M1148 75180002
         DC    C'LER CER AER SER MER DER AUR SUR '                      75210002
         DC    C'STH STC BAL BCT CVD CVB STD STE '                      75240002
         DC    C'SSM LPSWWRD RDD BXH BXLESRL SLL '                      75270002
         DC    C'SRA SLA SRDLSLDLSRDASLDASTM MVI '                      75300002
         DC    C'CLI SIO TIO HIO TCH MVN MVC MVZ '                      75330002
         DC    C'CLC TRT EDMKMVO PACKUNPKZAP MVCL'                M1148 75360002
         DC    C'CLCLLRDRMXR MXDRLRERAXR SXR MXD '                M1148 75390002
         DC    C'SCK STCKLCTLCLM STCMICM SRP HDV '                M1148 75420002
         DC    C'BAS BASRLRA PTLBRRB SCKCSPT STPT'               X01979 75450002
         DC    C'DXR SIOFSPX SIGPSTAPSTPXCDS IPK '               YM5533 75480002
         DC    C'SPKA'                                           YM5533 75500002
****  INSTRUCTION MNEMONICS - FIVE CHARACTERS                           75510002
*****    BLANK SLOT IN FIVEC TABLE MAY BE REUSED                        75540002
FIVEC    DC    C'STCTLSTIDPSTIDCCLRIOSTCKCSTNSMSTOSM'            YM5533 75570002
****  INDEXES FOR MNEMONIC TABLES                                       75600002
*        A. 00 IS BLANK MNEMONIC                                        75630002
*        B. 01 TO 40 IS TWO CHARACTER                                   75660002
*        C. 42 TO CF IS FOUR CHARACTER                                  75690002
*        D. D0 TO FE IS FIVE CHARACTER                                  75720002
*        E. FF INDICATES TWO BYTE OP CODE                               75750002
TRAN2    DC    X'00000000424344454647480000A39192'               X01979 75780002
         DC    X'494A4B4C014D02030405060708094E4F'                M1148 75810002
         DC    X'505152535493949555565758595A5B5C'                M1148 75840002
         DC    X'5D5E5F60619697986263646566676869'                M1148 75870002
         DC    X'6A0A6B0B0C6C6D0D0E0F101112A26E6F'               X01979 75900002
         DC    X'130000001415161718191A1B1C1D1E1F'                      75930002
         DC    X'70000000000000992021222324252627'                M1148 75960002
         DC    X'710000000000000028292A2B2C2D2E2F'                      75990002
         DC    X'720073007475767778797A7B7C7D7E7F'                      76020002
         DC    X'803081313282333435000000FFFFFF86'               YM5533 76050002
         DC    X'000000000000000000000000D5D6AD40'               YM5533 76080002
         DC    X'00A4FF000000D09C000041B0009D9E9F'               YM5533 76110002
         DC    X'00000000000000000000000000000000'                      76140002
         DC    X'00878889368A373800000000398B3A8C'                      76170002
         DC    X'00000000000000000000000000000000'                      76200002
         DC    X'A08D8E8F00000000903B3C3D3E3F0000'                M1148 76230002
GRAPT1   DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'                      76260002
         DC    X'504B4B4B4B4B4B4B4B4B5A5B5C5D5E5F'                      76290002
         DC    X'60614B4B4B4B4B4B4B4B4B6B6C6D6E6F'                      76320002
         DC    X'4B4B4B4B4B4B4B4B4B4B7A7B7C7D7E7F'                      76350002
GRAPT2   DC    C'ABCDEFGHI.......JKLMNOPQR'                             76380002
         DC    C'........STUVWXYZ......012'                             76410002
         DC    C'3456789.......'                                        76440002
*                                                              @ZA00409 76450003
CARDSAVE DC    CL80' '        .SAVE CARD IMAGE OVER INSMDFY.   @ZA00409 76460003
         SPACE 2                                                        76470002
*********************************************************************** 76500002
*                       KEYWORD CONSTANTS                               76530002
         SPACE 1                                                        76560002
ALL      DC    CL4'ALL '     .(DUMP/ABSDUMP) ALL (CSECTS/MEMS) @ZA19021 76590037
END      DC    CL3'END'                 END CONSOLE INPUT               76620002
REP      DC    CL3'REP'                 REPLACE KEY WORD                76650002
SLAST    DC    CL3'/*'                  END OF INPUT KEY WORD           76680002
BASEO    DC    CL4'BASE'                BASE KEY WORD                   76710002
DUMP     DC    CL4'DUMP'                DUMP KEY WORD                   76740002
NAME     DC    CL4'NAME'                NAME KEY WORD                   76770002
CCHHR    DC    CL5'CCHHR'               ABSOLUTE UPDATE KEY WORD        76800002
SSI      DC    CL6'SETSSI'              SSI KEY WORD                    76830002
VERIFY   DC    CL6'VERIFY'              VERIFY KEY WORD                 76860002
ABSDUMP  DC    CL7'ABSDUMP'             ABSOLUTE DUMP KEY WORD          76890002
CONSOLE  DC    CL7'CONSOLE'             CONSOLE KEY WORD                76920002
CHECKSUM DC    CL8'CHECKSUM'                                   @ZA17660 76930037
F4DSCB   DC    CL12'FORMAT4.DSCB'       VTOC KEY WORD                   76950002
DSCBDS   DC    44XL1'04'                VTOC DSNAME                     76980002
F4BLKSZ  DC    H'144'                   NON-0 BLKSIZE            XM5390 76990002
SYSLIB   DC    CL8'SYSLIB'                                       A38645 77010002
IDRDFLT  DC    C'NO IDENT'             DEFAULT IDR DATA          S21016 77040002
IDRDATAC DC    C'IDRDATA'              IDRDATA KEYWORD           S21016 77070002
* PARAMETER TO OVERRIDE IDR-FULL INHIBITION ON CSECT 'REP'S.   @ZA06024 77075000
PARM0STR DC    C'IGNIDRFULL'            .(CODED-VALUE STRING). @ZA06024 77080000
PARM0LEN DC    H'10'                    .(LENGTH)              @ZA06024 77085000
ZPRM0LEN EQU   10                       .(LENGTH EQUATE).      @ZA06024 77090000
         SPACE 2                                                        77100002
*********************************************************************** 77130002
*                       MESSAGES                                        77160002
         SPACE 1                                                        77190002
DSMSG    DC    CL40'AMA107I DS AREA NOT INCLUDED IN TEXT'               77430002
INERR    DC    CL40'AMA108I SYSIN SPECIFICATION ERROR'           S21995 77460002
DGERROR  DC    CL40'AMA109I ERROR - ODD NO. DIGITS - IGNORED'           77490002
SSIERR   DC    CL40'AMA110I NO DIRECTORY SSI- SETSSI IGNORED'           77520002
IGNORSSI DC    CL40'AMA111I PREVIOUS ERROR - SETSSI IGNORED'            77550002
NONAME   DC    CL40'AMA112I MEMBER NOT FOUND- SETSSI IGNORED'           77580002
DMPCMP   DC    CL40'AMA113I COMPLETED DUMP REQUIREMENTS'                77610002
NOVTOC   DC    CL40'AMA114I PERMISSION TO UPDATE VTOC DENIED'           77640002
INPUTERR DC    CL26'AMA115I SYSIN I/O ERROR  '                   S21995 77670002
NOIDR    DC    CL40'AMA119I NO IDR FOR MODULE'                   S21016 77700002
NOSPACE  DC    CL8'AMA120I '          .'NO IDR SPACE' MESSAGE. @ZA00409 77730003
NOSPACE1 DC    CL32'XXXXXXXX NO IDR SPACE - RE-LINK '          @ZA00409 77732003
MSGIDRUD DC    CL28'AMA125I XXXXXXXX IDR COUNT ='  .IDR        @ZA00409 77734003
IDRNENTZ DC    CL8' NN (MAX'                       . UPDATE    @ZA00409 77736003
IDRMENTZ DC    CL4'=MM)'                           . MESSAGE.  @ZA00409 77738003
IDRFULL  DC    CL40'AMA126I XXXXXXXX IDR(S) FILLED - RE-LINK'  @ZA00409 77740003
UNPATMSG DC    CL20'AMA122I OLD DATA WAS'                        X01979 77760002
BLKSZERR DC    CL40'AMA124I INVALID SYSLIB DCB BLOCKSIZE'        SM1465 77770002
MSGUDINH DC    CL40'AMA127I UPDATES INHIBITED (NO OVERRIDE) '  @ZA06024 77772500
MSGUDACC DC    CL40'AMA128I UPDATES ENABLED BY OVERRIDE PARM'  @ZA06024 77775000
MSGEPARM DC    CL40'AMA129I INVALID PARAMETER SPECIFICATION '  @ZA06024 77777500
MSGNOLIB DC    CL40'AMA130I SYSLIB DATA SET NOT OPENED      '  @ZA06023 77780000
* ADCONS FOR MESSAGES STORED BEYOND AMASZCON ADDRESSABILITY.   @ZA09673 77781000
AMSG100I DC    A(COMPMSG)    .(SPZAP COMPLETION).              @ZA17658 77781137
AMSG101I DC    A(LIBERR)     .(SYSLIB I/O ERROR).              @ZA17658 77781237
AMSG102I DC    A(DDERROR)    .(SYSLIB DD ERROR).               @ZA17658 77781337
AMSG103I DC    A(NOCSMSG)    .(CSECT NOT FOUND).               @ZA17658 77781437
AMSG104I DC    A(VERYERR)    .(VERIFY REJECT).                 @ZA17658 77781537
AMSG105I DC    A(IGNOREM)    .(INV CARD OR NO-GO SET).         @ZA17658 77781637
AMSG106I DC    A(PATCHERR)             .DATA OUT OF RANGE.     @ZA09679 77781700
AMSG131I DC    A(MSGERECD) 'XXXXXXXX INVALID RECORD-TYPE ID.'  @ZA09673 77782000
         SPACE 2                                                        77790002
*********************************************************************** 77820002
INPUT    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),RECFM=FB,LRECL=80,     X77850002
               EODAD=EODC,SYNAD=SYND,EXLST=XITLIST               S21995 77880002
*** OUTPUT DCB HAS BEEN CHANGED TO QSAM                          Y02160 77890002
OUTPUT   DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,RECFM=FBA,    Y02160X77910002
               LRECL=121,SYNAD=SYNOUT,EXLST=XITLIST1             Y02160 77940002
LIB      DCB   DDNAME=SYSLIB,MACRF=(E),EXLST=EXLIST              S21995 77970002
LIB2     DCB   DSORG=PO,MACRF=(R),DDNAME=SYSLIB,EODAD=EOD1,            X78000002
               RECFM=U,BLKSIZE=0,SYNAD=ABDMP4,EXLST=EXLIST2      S21995 78030002
OBLIST   CAMLST  SEARCH,0,0,0           CONTAINS PTRS TO INFO    S21995 78060002
EXLIST   DC    X'87'                    RD JFCB SIST             S21995 78090002
         DC     AL3(JFCBAREA)                                    S21995 78120002
EXLIST2  DC    X'05'               OPEN EXIT LIST                A49131 78150002
         DC    AL3(OPTCDCK)        SUPPRESS OPTCD                A49131 78180002
         DC    X'87'               READ JFCB EXIT                A49131 78210002
JFCB     DC    AL3(JFCBAREA)       AREA FOR JFCB                  M2820 78240002
XITLIST  DS    0F                                                S21995 78270002
         DC    X'85'              OPEN EXITLST.                  S21995 78300002
         DC    AL3(SETBLKSI)      CHK BLKSIZE.                   S21995 78330002
XITLIST1 DS    0F                                                Y02160 78337002
         DC    X'85'              SYSPRINT OPEN EXITLIST         Y02160 78344002
         DC    AL3(STBLKSI1)      CHECK BLOCK SIZE               Y02160 78351002
*********************************************************************** 78360002
*          **** XDAP CONTROL BLOCK  ****                                78390002
*********************************************************************** 78420002
         XDAP  DECB4,RI,LIB,,,,MBBCCHHR,MF=L                     S21995 78450002
         SPACE 1                                                 S21995 78480002
SCHARG   EQU   DECB4+4+X'20'            SEARCH ARGUMENT - CCHHR  S21995 78510002
IOCCW1   EQU   DECB4+4+X'28'            FIRST EXECUTED CCW       S21995 78540002
IOCCW3   EQU   DECB4+4+X'38'            UPDATE CCW OR TIC        S21995 78570002
         SPACE 1                                                        78600002
MTRDCNT  EQU   X'92'                    MULTITRACK READ COUNT    S21995 78630002
SKEYGTE  EQU   X'E9'                    SEARCH KEY GT. OR EQUAL  S21995 78660002
TIC      EQU   X'08'                    TIC OP CODE              S21995 78690002
RDDATA   EQU   X'06'                    READ DATA OP CODE        S21995 78720002
WRDATA   EQU   X'05'                    WRITE DATA               S21995 78750002
         SPACE 1                                                        78780002
* THESE CCW'S EXTEND THE XDAP EXCP CHANNEL PROGRAM FOR DIRECTORY UPDATE 78810002
*        THIS SEQUENCE OF CCW'S ARE TIC TO BY PLACING IOCCW6 AT IOCCW3  78840002
IOCCW4   CCW   MTRDCNT,TBUF+1,X'60',8   READ COUNT OF RECORD     S21995 78870002
IOCCW5   CCW   SKEYGTE,MEMNAME,X'40',8  SEARCH ON KEY            S21995 78900002
IOCCW6   CCW   TIC,IOCCW4,0,0           BACK TO COUNT IF LT      S21995 78930002
IOCCW7   CCW   RDDATA,0,X'20',256       READ IF CORRECT ENTRY    S21995 78960002
         SPACE 1                                                        78990002
*             THIS CCW IS EXECUTED AT LOCATION IOCCW3                   79020002
IOCCW3B  CCW   WRDATA,0,X'20',256       UPDATE DIRECTORY-CMD     S21995 79050002
         READ  DECB5,SF,LIB2,0,0,,,,MF=L                         S21995 79080002
         EJECT                                                          79090000
* ADDRESSABILITY INTERFACES.                                   @ZM40094 79090500
WRITE0   LA    R1,AWRITE0A             .OFFSET FOR 'WRITE0A'.  @ZM40094 79091000
         B     WRITE2                                          @ZM40094 79091500
WRITE3   MVC   CONSW2(1),CONSW         .(FOR 'OLD DATA' MSG).  @ZA17659 79091837
WRITE    LA    R1,AWRITEA              .OFFSET FOR 'WRITEA'.   @ZM40094 79092000
WRITE2   LR    R14,LNKRG1              .SET RETURN REG.        @ZM40094 79092500
         BR    R15                     .TO 'IOR' CSECT.        @ZM40094 79093000
DUMP1    LA    R1,ADMP01                                       @ZM40094 79093500
         L     R15,ADMP                .ADDR 'DMP' CSECT.      @ZM40094 79094000
         LR    R14,LNKRG2                                      @ZM40094 79094500
         BR    R15                     .TO 'DMP' CSECT.        @ZM40094 79095000
         SPACE 1                                               @ZM40094 79095500
* (AFTER DUMP COMPLETION) TERMINATE IF RETCODE GE 12.          @ZA09673 79096000
DUMP09Z  CLC   RETCODE(1),RETCOD12     .IF RETCODE LE 8,       @ZA09673 79096500
         BCR   4,LNKRG3                . GET NEXT INPUT STMT.  @ZA09673 79097000
         L     R15,AIORTNS             .ELSE                   @ZA09673 79097500
         LA    R1,ACLOSE5              . SET UP                @ZA09673 79098000
         BR    R15                     . SPZAP TERMINATION.    @ZA09673 79098500
*                                                              @ZA09673 79099000
* SET UP COMMAND TO DUMP CSECT.                                @ZA09679 79099500
SETDUMP  MVC   CDBUF+0(4),DUMP         .INSERT KEYWORD         @ZA09679 79100000
         MVC   CDBUF+4(19),BLANKS      . AND BLANKS.           @ZA09679 79100500
         MVC   CDBUF+5(8),MEMNAME      .INSERT MEMBER NAME     @ZA09679 79101000
         MVC   CDBUF+14(8),CSECT       . AND CSECT NAME.       @ZA09679 79101500
         USING ZAPBASE2,BASREG                                 @ZA09679 79102000
         BAL   LNKRG1,SCANKEY          .SET REGISTERS AND      @ZA09679 79102500
         L     BASREG3,RDAREA          .ADDR SYSLIB BUFFER.    @ZA09679 79103000
         XC    STARTINC(4),STARTINC    .RESET IMBEDDED OFFSET. @ZA09679 79103200
         B     DUMP01A                 .PROCESS 'DUMP' STMT.   @ZA09679 79103400
         DROP  BASREG                                          @ZA09679 79103500
*                                                              @ZA09679 79104000
* INTERFACE WITH CHECKSUM-STATEMENT ROUTINE.                   @ZA17660 79104137
CHSUMRTN L     BASREG3,ACHSUM                                  @ZA17660 79104237
         BR    BASREG3                                         @ZA17660 79104337
*                                                              @ZA17660 79104437
* PATCH AREA.                                                  @ZA09673 79110000
         SPACE 1                                               @ZA09673 79112000
PTCHA    DC    F'0'                    .BEGIN PATCH AREA.      @ZA09673 79114000
         ORG   AMASZCON+X'0FFF'                                @ZA09673 79116000
         DC    X'00'                   .END PATCH AREA.        @ZA09673 79118000
         SPACE 1                                               @ZA09673 79120000
*** END OF AMASZCON ADDRESSABILITY ***                         @ZA09673 79122000
         SPACE 1                                               @ZA09673 79124000
* FOLLOWING MESSAGES BEYOND AMASZCON ADDRESSABILITY.           @ZA09673 79126000
         SPACE 1                                               @ZA09673 79128000
COMPMSG  DC    CL40'AMA100I AMASPZAP PROCESSING COMPLETED'       S21995 79128137
LIBERR   DC    CL26'AMA101I SYSLIB I/O ERROR  '                         79128237
DDERROR  DC    CL40'AMA102I SYSLIB DD SPECIFICATION ERROR'              79128337
NOCSMSG  DC    CL40'AMA103I CSECT ABSENT - ALL CSECTS FOLLOW'           79128437
VERYERR  DC    CL40'AMA104I VERIFY REJECT - SET NO GO SWITCH'           79128537
IGNOREM  DC    CL40'AMA105I INVALID CARD OR NO GO SWITCH SET'           79128637
PATCHERR DC    CL40'AMA106I PATCH OVERLAPS - CHECK DUMP'       @ZA09679 79128700
MSGERECD DC    CL40'AMA131I XXXXXXXX INVALID RECORD-TYPE ID.'  @ZA09673 79130000
         EJECT                                                          79132000
AMASZIOR CSECT                                                          79140002
         USING AMASZCON,BASREG2                                  S21995 79170002
         STM   0,15,XFERSAVE           SAVE MAIN PROG REGS       S21995 79200002
         BALR  BASREG,0                SET BASE REG              S21995 79230002
         USING *,BASREG                                          S21995 79260002
         LA    R13,REGSAVE             SET REG SAVE AREA         S21995 79290002
IOBASE   LA    LNKRG1,GOBACK           SET LINKAGE TO RETURN     S21995 79320002
         LA    LNKRG2,GOBACK2A          SET LINKAGE TO RETURN    X01979 79350002
         B     VECTOR(R1)              BRANCH INTO BRANCH TABLE  S21995 79380002
VECTOR   B     RDCARD2                                           S21995 79410002
         B     CLOSE1                                            S21995 79440002
         B     WRITEA                                            S21995 79470002
         B     WRITE0A                                           S21995 79500002
         B     DIRREAD                                           S21995 79530002
         B     DIRWRITE                                          S21995 79560002
         B     RDDSK2                                            S21995 79590002
         B     OPENLIB                                           S21995 79620002
         B     RDDISK                                            S21995 79650002
         B     WRDISK                                            S21995 79680002
         B     WTOA                                              S21995 79710002
         B     CLOSE2                                            S21995 79740002
         B     EOD                                               S21995 79770002
         B     INSMDFY                                           X01979 79800002
         B     INSM1A                                            X01979 79830002
         B     CLOSE4                   .TO PARM-ERR EXIT.     @ZA06024 79840000
         B     CLOSE5                  .TO INVAL-RECD EXIT.    @ZA09673 79841000
GOBACK   LM    0,15,XFERSAVE           RESTORE REGS              S21995 79860002
         BR    R14                     EXIT                      S21995 79890002
GOBACK2A L     BASREG,XFERSAVE+BASREG*4  RELOAD BASE REGISTER           79920002
         LM    R13,R15,XFERSAVE+52      RESET RETURN AND ENTRY REGS     79950002
         BR    R14                      RETURN WITHOUT DESTROYING REGS  79980002
*********************************************************************** 80010002
* THIS READ USES QSAM TO ACCESS THE CARD READER.                        80040002
*********************************************************************** 80070002
RDCARD2  GET   INPUT,CDBUF                                              80100002
         BCR   15,LNKRG1                                                80130002
         SPACE 2                                                        80160002
*********************************************************************** 80190002
*   THIS WRITE SUBROUTINE PRINTS THE INPUT CARD OR A MESSAGE TO THE PRI 80220002
*******************                                                     80250002
WRITE0A  MVC   CDBUF(40),0(RG5)    MOVE IN MESSAGE               S21995 80280002
WRITE1   MVC   CDBUF+40(40),BLANKS FILL WITH BLANKS                     80310002
         MVC   CDBUF+80(40),BLANKS      RESET REST WITH BLANK    YM1470 80320002
         TM    DMPSW,X'FF'             .IF LINE IS FOR DUMP,   @ZA26077 80320537
         BO    WRITEA                  . DISALLOW WTO.         @ZA26077 80321037
         TM    CONSW,X'FF'             .Q CONSOLE INPUT.       @ZA17659 80322037
         BZ    WRITEA                  .B IF NO.               @ZA17659 80324037
         MVI   CONSW2,X'FF'            .ELSE SET WTO INDIC.    @ZA17659 80326037
* ENTRY POINT IF TEXT ALREADY IN 'CDBUF'.                      @ZA17659 80328037
WRITEA   PUT   OUTPUT,CDBUF-1                                    Y02160 80340002
         PRTOV OUTPUT,12                CHECK FOR END OF PAGE           80400002
         MVC   CDBUF+80(40),BLANKS      RESET REST WITH BLANK           80450002
         TM    CONSW2,X'FF'            .Q MESSAGE TO CONSOLE.  @ZA17659 80460037
         BCR   8,LNKRG1                .B IF NO.               @ZA17659 80461037
         MVI   CONSW2,X'00'            .ELSE RESET 'WTO',      @ZA17659 80462037
         L     WK7,AWTORTN             . FIND 'WTORTN',        @ZA17659 80463037
         BR    WK7                     . AND ENTER IT.         @ZA17659 80464037
         SPACE 2                                                        80490002
*********************************************************************** 80520002
* THIS SUBROUTINE USES BSAM TO SEQ RETRIEVE RECORDS                     80550002
*******************                                                     80580002
RDDSK2   ST    BASREG3,DECB5+12         SET READ IN AREA                80610002
         MVC   DECB5+6(2),SIZE+2        SET MAX RECORD                  80640002
         READ  DECB5,SF,,,,,,,MF=E                               S21995 80670002
         CHECK DECB5                                                    80700002
         BCR   15,LNKRG1                SUBROUTINE RETURN               80730002
*********************************************************************** 80760002
*        END OF DATA ROUTINE FOR LIB2                                   80790002
*********************************************************************** 80820002
EOD1     EQU   *                                                 YM5146 80830002
         LM    0,15,DMPSAVE            RESTORE REGS              S21995 80840002
* REG 15 WILL NOW POINT TO THE CONTINUATION SPOT, EITHER         YM5146 80900002
* LABEL  'CONT'  OR LABEL  'NOCSECT'                             YM5146 80902002
         BR    R15                                               S21995 80910002
         SPACE 1                                                        80940002
*  THIS IS THE SYNAD ROUTINE FOR THE LIB2 DCB                           80970002
ABDMP4   STM   RG0,RG2,TEMPSAV     SAVE PARM REGS                       81000002
         ST    R14,TEMPSAV+12      SAVE RETIRN REGISTER                 81030002
         ST    LNKRG1,TEMPSAV+16   SAVE LINK REGISTER                   81060002
         SYNADAF ACSMETH=BPAM                                           81090002
         LR    RG2,WK7             SAVE PTR TO SYNADAF WRKAREA          81120002
         L     LNKRG1,AMSG101I         .SELECT MESSAGE AND     @ZA17658 81150037
         MVC   CDBUF(26),0(LNKRG1)     . COPY INTO BUFFER.     @ZA17658 81160037
         BAL   LNKRG1,IOMSG        GOTO BLDL AND PRNT ERROR MSG         81180002
         L     LNKRG1,TEMPSAV+16   RESTORE LINK REGISTER                81210002
         LR    WK7,RG2             RESTORE PARM REGISTER 1              81240002
         SYNADRLS                  RELEASE SYNADAF WRKAREA              81270002
         L     R14,TEMPSAV+12      RESTORE RETURN REGISTER              81300002
         LM    RG0,RG2,TEMPSAV     RESTORE SYNAD PARM REGS              81330002
         B     CLOSE3                  GET OUT                          81360002
IOMSG    MVC   CDBUF+26(4),68(RG2)  MOVE UNIT TO MESSAGE                81390002
         MVC   CDBUF+30(23),84(RG2)  MOVE IN ERROR DESCRIPTION          81420002
         MVC   CDBUF+53(6),122(RG2)  MOVE IN ACSMETH                    81450002
         MVC   CDBUF+59(21),BLANKS  PAD REMAINDER OF BUFFER             81480002
         MVC   CDBUF+80(40),BLANKS                                      81510002
         PUT   OUTPUT,CDBUF-1                                    Y02160 81540002
         PRTOV OUTPUT,12                                                81600002
         TM    CONSW,X'FF'         SHOULD WTO BE ISSUED?                81630002
         BCR   14,LNKRG1           NO - RETURN TO SYNAD ROUTINE         81660002
         MVC   PREFIX(2),IOMSGLNG  MOVE IN WTO MSG LENGTH               81690002
         MVC   CDBUF+59(4),DESCR   MOVE IN DESCR & ROUTE CODES          81720002
         LA    WK7,PREFIX                                               81750002
         WTO   MF=(E,(1))                                               81780002
         BCR   15,LNKRG1           RETURN TO SYNAD THET CALLED          81810002
**********************************************************************  81840002
*  THIS IS THE SYNAD ROUTINE FOR SYSPRINT                               81870002
**********************************************************************  81900002
SYNOUT   SYNADAF ACSMETH=BSAM                                    A45017 81930002
         LR    RG2,WK7            SAVE REGISTER 1                A45017 81960002
         MVC   WTOOUT+8+27(4),68(RG2)  MOVE UNIT                 A45017 81990002
         MVC   WTOOUT+8+31(23),84(RG2) MOVE ERROR DESCRIPTION    A45017 82020002
         MVC   WTOOUT+8+54(6),122(RG2) MOVE ACSMETH              A45017 82050002
WTOOUT   WTO   'AMA123I SYSPRINT I/O ERROR UUUUDDDDDDDDDDDDDDDDDDDDDDDAX82080002
               AAAAA',ROUTCDE=(2,11),DESC=7                      A45017 82110002
         LR    WK7,RG2             RESTORE REGISTER 1            A45017 82140002
         SYNADRLS                                                A45017 82170002
         B     CLOSE3              CLOSE FILES AND EXIT          A45017 82200002
         SPACE 2                                                        82230002
*******************                                                     82260002
*   THIS WRITE USES XDAP TO UPDATE A SPECIFIC RECORD FOR THE DISK       82290002
*******************                                                     82320002
WRDISK   SR    R15,R15              PREPARE R15 FOR 'R'          YM5534 82350002
         IC    R15,MBBCCHHR+7      VALUE OF MBBCCHHR             YM5534 82351002
         SH    R15,ONE             DECREMENT TO PREV. CHR        YM5534 82352002
         STC   R15,MBBCCHHR+7      STORE PREV. CCHHR             YM5534 82353002
         XDAP  DECB4,RI,LIB,COUNT,8,,MBBCCHHR,MF=E  RD. COUNT    YM5534 82354002
         SPACE 1                                                        82354202
*********************************************************************** 82354402
*                                                                     * 82354602
*   NOTE- THE FOLLOWING 3 INSTRUCTIONS ARE DEPENDENT ON THE EXPANSION * 82354802
*       OF THE XDAP MACRO.  THE OPCODE OF CCW 3 IS CHANGED FROM       * 82355002
*       READ KEY,DATA TO READ COUNT,KEY,DATA.                         * 82358002
*                                                                     * 82358602
*********************************************************************** 82359202
         SPACE 1                                                        82360002
         ORG   *-13               INSERT RD COUNT INTO IOB       YM5534 82361002
         DC    XL1'1E'            READ COUNT OPCODE              YM5534 82362002
         ORG                                                            82365002
         WAIT  1,ECB=DECB4                                       YM5534 82367002
         IC    R15,MBBCCHHR+7      VALUE OF MBBCCHHR             YM5534 82370002
         AH    R15,ONE             INCREMEMENT TO PRES. CCHHR    YM5534 82371002
         STC   R15,MBBCCHHR+7      RESTORE PRES. CCHHR           YM5534 82375002
         SR    R15,R15              PREPARE R15 FOR 'COUNT'      YM5534 82376002
         IC    R15,COUNT+5         PUT KEYLENG INTO R15          YM5534 82380002
         L     RG5,COUNT+4             .COUNT IN LOW HALFWORD. @ZA09683 82382000
         N     RG5,CLER                .CLEAR HIGH HALFWORD.   @ZA09683 82383000
         AR    R15,RG5                 .ADD TO KEY.            @ZA09683 82384000
         L     R14,SIZE                .BUFFER SIZE.           @ZA09683 82385000
         CR    R14,R15              COMPARE BLOCKSIZE AND KEY    YM5534 82386002
*                                   LENGTH IN DCB TO THAT JUST   YM5534 82388002
*                                   READ                         YM5534 82390002
         L     R15,AIORTNS        INIT R15                       YM5534 82392002
         LA    R1,ACLOSE2         INIT BNCH TABLE ENTRY          YM5534 82394002
         LA    RG5,BLKSZERR       ERROR MSG                      YM5534 82396002
         BCR   4,R15              EXIT IF SZ GRTR THAN DCB INFO  YM5534 82398002
         L     R15,SIZE                .BUFFER SIZE.           @ZA09683 82400000
         SPACE 1                                                        82402002
*********************************************************************** 82404002
*                                                                     * 82410002
*   NOTE- THE FOLLOWING INSTRUCTION IS DEPENDENT ON THE EXPANSION     * 82413002
*       OF THE XDAP MACRO.  THE FLAGS FIELD OF CCW3 IS MODIFIED TO    * 82416002
*       SUPPRESS INCORRECT LENGTH INDICATION.                         * 82419002
*                                                                     * 82422002
*********************************************************************** 82425002
         SPACE 1                                                        82428002
         OI    WRDISK1+CMD,X'20'       SET OFF WLR               S21995 82431002
WRDISK1  XDAP  DECB4,WI,LIB,(BASREG3),(15),,MBBCCHHR,MF=E        S21995 82434002
         WAIT  1,ECB=DECB4                                              82440002
         BC    15,ERRTST                                                82470002
         SPACE 1                                                        82500002
*******************                                                     82530002
*   THIS READ USES XDAP TO GET A SPECIFIC RECORD FROM THE DISK          82560002
*******************                                                     82590002
RDDISK   L     R15,SIZE                .BUFFER SIZE.           @ZA09683 82620000
         XDAP  DECB4,RI,LIB,(BASREG3),(15),,MBBCCHHR,MF=E               82650002
         WAIT  1,ECB=DECB4                                              82680002
ERRTST   TM    DECB4,X'20'              CHECK ECB PERMANENT             82710002
         BCR   1,LNKRG1                 BIT SET-OKAY                    82740002
         CLI   DECB4,X'41'              TEST TYPE ERROR                 82770002
         BC    7,CLOSE2A                NOT NORMAL-CLOSE                82800002
         CLC   DECB4+X'10'(2),MSK       WRONG LENGTH RECORD             82830002
         BCR   8,LNKRG1                 YES-OK                          82860002
CLOSE2A  STM   RG0,RG2,TEMPSAV                                   S21995 82890002
         ST    LNKRG1,TEMPSAV+16   SAVE LINK REGISTER                   82920002
         LA    WK7,DECB4+4         GET IOB ADDRESS                      82950002
         SYNADAF ACSMETH=EXCP                                           82980002
         LR    RG2,WK7             SAVE ADDR OF SYNADAF WRKAREAA        83010002
         L     LNKRG1,AMSG101I         .SELECT MESSAGE AND     @ZA17658 83040037
         MVC   CDBUF(26),0(LNKRG1)     . COPY INTO BUFFER.     @ZA17658 83050037
         BAL   LNKRG1,IOMSG        GOTO BLDL AND PRNT ERROR MSG         83070002
         SYNADRLS                  RELEASE SYNADAF WRKAREA              83100002
         LM    RG0,RG2,TEMPSAV     RESTORE REGISTERS                    83130002
         L     LNKRG1,TEMPSAV+16                                        83160002
         MVC   RETCODE(1),RETCOD16     .INDIC PERM-I/O ERROR.  @ZA06023 83190000
         OI    CTLBTE,IGNOP+NAMEERR  TURN ON NO GO SWITCH               83220002
         BCR   15,LNKRG1           RETURN FOR NEXT OPERATION            83250002
         SPACE 2                                                        83280002
*******************                                                     83310002
WTOA     WTO   'AMA118I SYSPRINT DD NOT IN INPUT',                     X83340002
               ROUTCDE=(2,11),DESC=7                             S21995 83370002
         MVC   RETCODE(1),RETCOD12     .INDIC JCL-STMT ERROR.  @ZA06023 83400000
         B     CLOSE5                                          @ZA06023 83410000
*******************                                                     83430002
         SPACE 1                                                        83460002
*******************                                                     83490002
CLOSE2   MVC   RETCODE(1),RETCOD12     .INDIC JCL-STMT ERROR.  @ZA06023 83520000
         B     CLOSE4                                          @ZA06023 83530000
CLOSE3   MVC   RETCODE(1),RETCOD16     .INDIC PERM-I/O ERROR.  @ZA06023 83540000
CLOSE4   BAL   LNKRG1,WRITE0A          .ISSUE MESSAGE.         @ZA06023 83550000
CLOSE5   BAL   LNKRG1,CLOSE1                                   @ZA06023 83560000
         BC    15,EXIT                                                  83610002
         SPACE 1                                                        83640002
*******************                                                     83670002
*           THIS ROUTINE SIMULATES BLDL. AND STOW USING, EXCP           83700002
*              TO READ THE DIRECTORY AND WRITE THE DIRECTORY            83730002
*******************                                                     83760002
         SPACE 1                                                        83790002
*      THIS CODE SETS UP THE CCW'S FOR THE READING OF THE DIRECTORY     83820002
DIRREAD  MVC   IOCCW3(4),IOCCW6         SET UP TIC TO RD C.P.           83850002
         MVC   IOCCW7+1(3),RDAREA+1     SET INPUT BUFFER                83880002
         XC    SCHARG(8),SCHARG         ZERO OUT M AND R                83910002
         L     WK7,LIB+44          GET DEB ADDRESS                      83940002
         MVC   SCHARG+1(6),STEXT-2(WK7)  SET SEEK ADDRESS               83970002
         MVC   SCHARG+1(2),LIB2+6  SET BB IN SRCH MBBCCHHR              84000002
UPDATEIO LA    1,DECB4+4                IOB ADDR                        84030002
         SVC   0                        EXCP                            84060002
         WAIT  1,ECB=DECB4              WAIT ON I/O                     84090002
         BC    15,ERRTST                                                84120002
         SPACE 1                                                        84150002
*        THIS CODE SET UP THE CCW'S FOR THE DIRECTORY UPDATE            84180002
DIRWRITE MVC   IOCCW3(8),IOCCW3B        SET UP UPDATE CCW               84210002
         MVC   IOCCW3+1(3),RDAREA+1     SET OUTPUT AREA ADDR            84240002
         MVC   SCHARG+3(5),TBUF+1       SET SEARCH ARG                  84270002
         BC    15,UPDATEIO              TO UPDATE DIRECTORY             84300002
         SPACE 1                                                        84330002
OPENLIB  TM    LIB+OPENBIT,OPENED       HAS IT BEEN OPENED YET   S21995 84360002
         BCR   1,LNKRG1                 YES,LNKRG1  RETURN       S21995 84390002
         RDJFCB LIB                                              S21995 84420002
         LA    RG5,JFCBAREA       GET ADDRESS OF JFCB            S21995 84450002
         CLC   0(44,RG5),DSCBDS   JFCB FOR FORMAT4?              S21995 84480002
         BC    7,RSRV              NO, ISSUE RESERVE AND OPEN    S21995 84510002
ASKOP    ST    LNKRG1,LNKSAVE2         SAVE LINK REGISTER        A38645 84540002
         BAL   LNKRG1,UPVTRTN          REQUEST TO UPDATE VTOC    A38645 84570002
         L     LNKRG1,LNKSAVE2         RESTORE LINK REGISTER     A38645 84600002
         OI    CDBUF,X'40'         INSURE A CAPITAL LETTER       S21995 84630002
         MVC   JFCBAREA(12),F4DSCB    MOVE FORMAT4.DSCB INTO DSN S21995 84660002
         MVC   JFCBAREA+12(32),BLANKS   PAD REMAINDER OF DSNAME  S21995 84690002
         CLI   CDBUF,C'N'               OKAY TO MODIFY           A53326 84740002
         BC    8,NOF4MOD                NO-NOTIFY USER           A53326 84750002
         CLI   CDBUF,C'Y'          CHECK FOR Y                   A53326 84760002
         BC    7,ASKOP             NO, REISSUE MSG               A53326 84770002
RSRV     L     RG5,LIB2+44         GET DEB ADDR FOR SYSLIB       S21995 84780002
         LA    RG5,0(RG5)          CLEAR HI BYTE                 S21995 84810002
         L     RG5,32(RG5)         PUT UCB AD IN RG5             YM5147 84820002
         ST    RG5,UCBAD           PUT IN UCBAD FOR RESERVE      YM5147 84830002
         MVC   RNAME(6),28(RG5)    MOVE MINOR NAME FROM UCB      YM5147 84832002
         CLC   JFCBAREA(12),F4DSCB JFCB FOR FORMAT4?             YM5147 84842002
         BE    VTOCRSRV            RESERVE 'SYSVTOC'             YM5147 84852002
         RESERVE (MAJOR,JFCBAREA,E,44,SYSTEMS),RET=HAVE,UCB=UCBAD 21995 84862002
         B     RESERVED           BRANCH AROUND RESERVE FOR VTOC YM5147 84864002
VTOCRSRV RESERVE (QNAME,RNAME,E,6,SYSTEMS),RET=HAVE,UCB=UCBAD    YM5147 84874002
RESERVED EQU  *                                                  YM5147 84884002
         MVI   RSVSW,X'FF'         INDICATE RESERVE ISSUED       S21995 84900002
OPEN2    OPEN  (LIB,(UPDATE))           OPEN                     S21995 84930002
         BCR   15,LNKRG1                DONE                     S21995 84960002
         SPACE 1                                                        84990002
NOF4MOD  OI    CTLBTE,NAMEERR                                    S21995 85020002
         LA    RG5,NOVTOC               ERROR MSG                S21995 85050002
         BAL   LNKRG1,WRITE0A            PRINT OUT ERROR MSG     S21995 85080002
OPENRT   MVC   RETCODE(1),RETCOD08     .INDIC SPZAP-INP ERROR. @ZA06023 85290000
         LM    0,15,XFERSAVE           RESTORE REGS              S21995 85320002
         BCR   15,LNKRG3               GET NEXT CARD             S21995 85350002
         SPACE 2                                                        85380002
**********************************************************************  85410002
* THIS ROUTINE CHECKS FOR SUCCESSFUL MODIFICATIONS.  IF A NAME          85440002
* UPDATE WAS PERFORMED, THE IDR (IF PRESENT) IS UPDATED AND THE         85470002
* LOCAL MODIFY FLAG IN THE SSI IS TURNED ON (UNLESS THE LAST OPERATION  85500002
* WAS A SETSSI). IF A CCHHR UPDATE WAS PERFORMED THIS ROUTINE ISSUES    85530002
* WTO FOR AMA121I.                                                      85560002
**********************************************************************  85590002
INSMDFY  TM    CTLBTE2,MODIFY           REP OPERATION COMPELETED        85620002
         BO    CKIDR                   YES-CHECK IDR UPDATE      S21016 85650002
         TM    CTLBTE3,MODFYREC        CCHHR REP COMPLETED       S21016 85680002
         BCR   8,LNKRG2                N0-RETURN                 S21016 85710002
         RDJFCB LIB2                                              M1733 85740002
         CLC   JFCBAREA(44),DSCBDS      JFCB FOR FORMAT4?         M1733 85770002
         BC    7,MOVESER                NO-SKIP NAME CHANGE       M1733 85800002
         MVC   JFCBAREA(12),F4DSCB    MOVE FORMAT4.DSCB INTO DSN  M1733 85830002
         MVC   JFCBAREA+12(32),BLANKS   PAD REMAINDER OF DSNAME   M1733 85860002
MOVESER  MVC   WTO+8+36(6),JFCBAREA+118 MOVE VOLSER TO MSG       S21016 85890002
         UNPK  WTO+8+43(11),MBBCCHHR+3(6)  MOVE CCHHR TO MSG     S21016 85920002
         TR    WTO+8+43(10),TRANTBL2-X'F0'                       S21016 85950002
         MVI   WTO+8+53,C','                                     S21016 85980002
         LA    RG4,44                  SET MAX FOR DSNAME        S21016 86010002
         LA    RG5,JFCBAREA            ADDR OF DSN IN JFCB       S21016 86040002
TESTL    CLI   0(RG5),BLANK            END OF DSN                S21016 86070002
         BE    PRPMVC                  YES-CALCULATE LENGTH      S21016 86100002
         LA    RG5,1(RG5)              NO-ADD ONE                S21016 86130002
         BCT   RG4,TESTL               BRANCH BACK               S21016 86160002
PRPMVC   LA    RG4,JFCBAREA            START OF DSN              S21016 86190002
         SR    RG5,RG4                 GET LENGTH OF DSN         S21016 86220002
         LA    RG5,4+54(RG5)           LENGTH FOR WTO            S21016 86250002
         STH   RG5,WTO+4               STORE IN WTO              S21016 86280002
         LA    RG4,WTO+4(RG5)          ADDR OF ENN OF DSN IN MSG S21016 86310002
         MVC   WTO+8+54(44),JFCBAREA   MOVE DSN TO MSG           S21016 86340002
         MVC   0(4,RG4),WTO+8+98       MOVE ROUT & DESC TO MSG   S21016 86370002
         ST    LNKRG3,LNKSAVE          SAVE LINK REGISTER        S21016 86400002
         LA    LNKRG3,REGSAVE          SET SAVE AREA ADDR        S21016 86430002
         EXTRACT   TBUF,FIELDS=(TIOT)                            S21016 86460002
         L     RG5,TBUF                LOAD ADDR OF TIOT         S21016 86490002
         MVC   WTO+8+24(8),0(RG5)      MOVE JOBNAME TO MSG       S21016 86520002
WTO      WTO   'AMA121I CCHHR UPDATE BY          ON       ,          , X86550002
                                                          ',           X86580002
               ROUTCDE=(2,9),DESC=3                              S21016 86610002
         L     LNKRG3,LNKSAVE          RESTORE LINK REG          S21016 86640002
         NI    CTLBTE3,X'FF'-MODFYREC                            S21016 86670002
         BR    LNKRG2                   RETURN                   S21016 86700002
CKIDR    TM    CTLBTE3,IDRRD           ARE THERE IDR RECORDS     S21016 86730002
         BZ    INSM1                   N0-SKIP UPDATE            S21016 86760002
         ST    LNKRG3,LNKSAVE          YES-SAVE LINKREG          S21016 86790002
         LA    LNKRG3,REGSAVE          SET SAVEAREA              S21016 86820002
         POINT LIB2,IDRTTR             POINT TO IDR              S21016 86850002
         L     LNKRG3,LNKSAVE          RESTORE LINKREG           S21016 86880002
         BAL   LNKRG1,RDDSK2      READ IDR                       X01979 86910002
         MVI   TEMP,X'00'              CALC LOC FOR IDR DATA     S21016 86940002
         MVC   TEMP+1(1),RDAREA1+3     LOCATION =                S21016 86970002
         NI    TEMP+1,X'3F'              (NO. OF ENTRIES)*13+4   S21016 87000002
         LA    RG5,13                                            S21016 87030002
         MH    RG5,TEMP                                          S21016 87060002
         LA    RG5,RDAREA1+4(RG5)                                S21016 87090002
         TIME                                                           87120002
         ST    R1,TEMP                 STORE TODAYS DATE         S21016 87150002
         MVC   2(3,RG5),TEMP+1         MOVE DATE TO IDR          S21016 87180002
         MVC   0(2,RG5),CSECTID+2      MOVE ESDID TO IDR         S21016 87210002
         MVC   5(8,RG5),IDRDATA        MOVE IDRDATA TO IDR       S21016 87240002
         SR    RG5,RG5                                           S21016 87270002
         IC    RG5,RDAREA1+3           INSERT NO. OF ENTRIES     S21016 87300002
         LA    RG5,1(RG5)              AND INCREASE BY ONE       S21016 87330002
         STC   RG5,RDAREA1+3           STORE IN IDR              S21016 87360002
         MVC   MBBCCHHR(8),IDRFSEEK    MOVE IDR DISK ADDR        S21016 87390002
         MVC   TEMP(2),SIZE+2          SAVE SIZE                 S21016 87420002
         MVC   SIZE+2(2),IDRSIZE       SET TO IDR SIZE           S21016 87450002
         BAL   LNKRG1,WRDISK      WRITE UPDATED IDR RECORD       X01979 87480002
         MVC   SIZE+2(2),TEMP          RESET SIZE                S21016 87510002
         NI    CTLBTE3,X'FF'-IDRRD     TURN OFF IDR RECORD SW    S21016 87540002
* SET UP AND ISSUE IDR-UPDATE MESSAGE.                         @ZA00409 87541003
         MVC   CARDSAVE(80),CDBUF       .SAVE CARD IMAGE.      @ZA00409 87541503
         L     RG5,IDRNENTS             .CURR # ENTRIES        @ZA00409 87542003
         LA    RG5,1(RG5)               . INCR FOR             @ZA00409 87542503
         ST    RG5,IDRNENTS             . ADDED ENTRY.         @ZA00409 87543003
         CVD   RG5,TEMPDBLW             .STORE INTO            @ZA00409 87543503
         UNPK  IDRNENTZ+1(2),TEMPDBLW+6(2)   . MESSAGE.        @ZA00409 87544003
         OI    IDRNENTZ+2,X'F0'              .(SET SIGN).      @ZA00409 87544503
         L     RG5,IDRMENTS             .MAX  IDR ENTRIES      @ZA00409 87545003
         CVD   RG5,TEMPDBLW                  . INTO            @ZA00409 87545503
         UNPK  IDRMENTZ+1(2),TEMPDBLW+6(2)   . MESSAGE.        @ZA00409 87546003
         OI    IDRMENTZ+2,X'F0'              .(SET SIGN).      @ZA00409 87546503
         MVC   MSGIDRUD+8(8),MEMNAME    .INSERT NAME.          @ZA00409 87547003
         LA    RG5,MSGIDRUD             .ISSUE                 @ZA00409 87547503
         BAL   LNKRG1,WRITE0A           . MESSAGE.             @ZA00409 87548003
         CLC   IDRNENTS(4),IDRMENTS     .CHECK IDR  SPACE.     @ZA00409 87549503
         BL    IDRQEOD                 .B IF MORE.             @ZM30901 87550003
         MVC   IDRFULL+8(8),MEMNAME     .ELSE                  @ZA00409 87550503
         LA    RG5,IDRFULL              . ISSUE                @ZA00409 87551003
         BAL   LNKRG1,WRITE0A           . MESSAGE.             @ZA00409 87551503
         CLC   RETCODE(1),RETCOD04      .IF RETCODE GE 4,      @ZA07967 87552200
         BNL   IDRQEOD                  . LEAVE ALONE.         @ZA07967 87552300
         MVC   RETCODE(1),RETCOD04      .ELSE SET IT TO 4.     @ZA07967 87552400
IDRQEOD  CLC   CARDSAVE(2),SLAST                               @ZM30901 87552703
         BE    INSM1                   .B IF EOD REACHED.      @ZM30901 87552903
IDRRESCD MVC   CDBUF(80),CARDSAVE       .RESTORE CARD IMAGE    @ZA00409 87553003
         BAL   LNKRG1,WRITEA            . AND PRINT CARD.      @ZA00409 87553503
INSM1    NI    CTLBTE2,X'FF'-MODIFY     RESET REP FLAG           S21016 87570002
*              THIS PROCEDURE INSPECTS FOR A PDS REP. HAVING OCCURRED   87600002
INSM1A   BAL   LNKRG1,DIRREAD     GET DIRECTORY BLOCK            X01979 87630002
         LH    RG5,0(0,BASREG3)    GET SIZE OF ENTRY                    87660002
         LA    RG5,0(RG5,BASREG3)  DETERMINE STOP ADDR                  87690002
         LR    RG0,RG5             SAVE STOP ADDRESS                    87720002
         LA    RG4,2(0,BASREG3)         POINT AT FIRST ENTRY            87750002
         SR    RG5,RG5                  CLEAR REGISTER                  87780002
         OI    CTLBTE3,NOMEM                                            87810002
*********************************************************************** 87840002
* THIS SUBROUTINE WILL UPDATE SSI BYTES TO INDICATE LOCAL MODIFY        87870002
* AFTER A SUCCESSFUL REP HAS BEEN COMPLETED.                            87900002
INSM2    MVC   TBUF(1),11(RG4)          MOVE OUT USER LENGTH            87930002
         NI    TBUF,X'1F'               RESET LEADING BITS              87960002
         IC    RG5,TBUF                 GET USER LENGTH DW              87990002
         CLC   0(8,RG4),MEMNAME         CORRECT MEMBER                  88020002
         BC    8,INSM3                  YES-SET ON MODIFY               88050002
         LA    RG4,12(RG5,RG4)          NO-INCR.                        88080002
         AR    RG4,RG5                  POINT AT NEXT MEMBER            88110002
         CR    RG4,RG0             TOO FAR?                             88140002
         BCR   8+2,LNKRG2               YES-THE HECK WITH IT            88170002
         BC    15,INSM2                 NO-CONTINUE                     88200002
         SPACE 1                                                        88230002
INSM3    OI    CTLBTE3,NOSSI            SET SSI MISSING FLAG            88260002
         NI    CTLBTE3,X'FF'-NOMEM      RESET MISSING MEMBER FLAG       88290002
         TM    30(RG4),AOS              WAS AOS LKED USED        YM5257 88300002
         BO    AOSPDS                   YES--GO TO AOS RTN       Y01979 88310002
         AR    RG5,RG5                  DOUBLE TO BYTE SIZE             88320002
         CH    RG5,TW2                  22                              88350002
         BCR   8+4,LNKRG2               YES-EXIT                        88380002
         CH    RG5,THIRTY               30                              88410002
         BCR   8,LNKRG2                 YES- NO SSI BYTES               88440002
         CH    RG5,THIRTY2              32                              88470002
         BCR   8,LNKRG2                 YES- NO SSI BYTES               88500002
         CH    RG5,FOURTY               40                              88530002
         BCR   8,LNKRG2                 YES- NO SSI BYTES               88560002
         LA    RG4,12-4(RG5,RG4)        POINT AT SSI BYTES              88620002
INSM4    NI    CTLBTE3,X'FF'-NOSSI      RESET NO SSI FIELD FLAG  Y01979 88630002
         TM    CTLBTE3,SSIOP            SSI OPERATION BEING PERFORMED   88650002
         BCR   1,LNKRG2                 YES-RETURN TO SET SSI RTN       88680002
         LA    RG4,SSIMDFY(RG4)         NO-POINT AT MODIFY OFFSET       88710002
         OI    0(RG4),X'20'             SET ON LOCAL MODIFY BITS        88740002
*         UPDATE DIRECTORY ENTRY  SSI  BYTES FOR LOCAL MODIFY           88770002
         BAL   LNKRG1,DIRWRITE           UPDATE DIRECTORY               88800002
         BCR   15,LNKRG2                RETURN                          88830002
AOSPDS   TM    30(RG4),SSIB        IS THERE AN SSI               YM5257 88840002
         BCR   8,LNKRG2            NO--RETURN                    Y01979 88850002
         LA    RG5,34(RG4)         POINT TO END OF BASIC SECTION YM5257 88852002
         TM    20(RG4),SCTR        DOES DIR HAVE SCTR SECTION    YM5257 88856002
         BZ    NOSCTR              NO--SKIP ADD                  Y01979 88858402
         LA    RG5,8(RG5)          YES--UPDATE PTR               Y01979 88858802
NOSCTR   TM    11(RG4),ALIAS       IS THERE AN ALIAS             YM5257 88859202
         BZ    NOALIAS             NO--SKIP ADD                  Y01979 88859602
         LA    RG5,10(RG5)              YES, UPDATE POINTER    @YM4509P 88859702
NOALIAS  LR    RG4,RG5             PUT PTR IN PROPER REG         Y01979 88859802
         B     INSM4                GO UPDATE SSI                       88859903
         SPACE 4                                                        88879903
SYND     SYNADAF ACSMETH=QSAM                                           88884903
         LR    RG2,WK7             SAVE PARM REG                 S21995 88920002
         MVC   CDBUF(26),INPUTERR  MOVE MSG ID TO BUFFER         S21995 88950002
         BAL   LNKRG1,IOMSG        GOTO BLDL AND PRNT ERROR MSG  S21995 88980002
         SYNADRLS                  FREE SYNADAF  WRKAREA         S21995 89010002
         MVC   RETCODE(1),RETCOD16     .INDIC PERM-I/O ERROR.  @ZA06023 89040000
         B     CLOSE5                  .GO TO CLOSE.           @ZA06023 89050000
SETBLKSI SR    RG4,RG4                                           S21995 89070002
         LH    RG4,INPUT+62       GET BLKSIZE FOR SYSIN          S21995 89100002
         LTR   RG4,RG4            WAS BLKSIZE PROVIDED?          S21995 89130002
         BCR   2+4,R14            YES, RETURN TO OPEN.           S21995 89160002
         MVC   INPUT+62(2),INPUT+82  SET BLKSIZE=80.             S21995 89190002
         BR    R14                RETURN TO OPEN                 S21995 89220002
STBLKSI1 SR    RG4,RG4                                           Y02160 89224002
         LH    RG4,OUTPUT+62      GET BLKSIZE FOR SYSPRINT       Y02160 89228002
         LTR   RG4,RG4            WAS BLKSIZE PROVIDED?          Y02160 89232002
         BCR   2+4,R14            YES, RETURN TO OPEN.           Y02160 89236002
         MVC   OUTPUT+62(2),OUTPUT+82  SET BLKSIZE=80.           Y02160 89240002
         BR    R14                RETURN TO OPEN                 Y02160 89244002
CLOSE1   CLOSE (INPUT,,OUTPUT,,LIB2)                                    89250002
         CLOSE (LIB)                                                    89280002
         TM    INPUT+23,X'03'          .LOW BITS BFCB ADDR.    @ZA00408 89285003
* FREE BUFFER POOLS.                                           @ZA06027 89290000
         BNZ   FPOOLPRT                .IF SYSIN OPENED,       @ZA06027 89292000
         FREEPOOL INPUT                . FREE ITS BUFFER POOL. @ZA06027 89294000
FPOOLPRT TM    OUTPUT+23,X'03'         .LOW BITS BFCB ADDR.    @ZA06027 89296000
         BNZ   CLOSE1ZZ                .IF SYSPRINT OPENED,    @ZA06027 89298000
         FREEPOOL OUTPUT               . FREE ITS BUFFER POOL. @ZA06027 89300000
* RETURN FROM 'CLOSE1' SUBROUTINE.                             @ZA06027 89302000
CLOSE1ZZ BR    LNKRG1                  .LEAVE 'CLOSE1' SUBRTE. @ZA06027 89304000
*********************************************************************** 89340002
* AMASPZAP COMPLETE                                                     89370002
*********************************************************************** 89400002
EODC     MVC   CDBUF(2),SLAST          .INDICATE EOD.          @ZM30901 89430003
         BAL   LNKRG2,INSMDFY          .CHECK FOR UPDATE.      @ZM30901 89440003
EOD      L     RG5,AMSG100I            .SELECT MESSAGE.        @ZA17658 89460037
         BAL   LNKRG1,WRITE0A                                    S21995 89490002
         BAL   LNKRG1,CLOSE1                                     S21995 89520002
EXIT     CLI   RSVSW,RSVON         WAS RESERVE ISSUED?           S21995 89550002
         BNE   GETOUT              NO, EXIT                      S21995 89580002
         CLC   JFCBAREA(12),F4DSCB     .IF 'FORMAT4.DSCB',     @ZA02784 89610000
         BE    DEQVTOC             DEQ VTOC NAMES                YM5147 89660002
         DEQ   (MAJOR,JFCBAREA,44,SYSTEMS),RET=HAVE              YM5147 89710002
         B     ENDDEQ              DONE DEQ OF NON-VTOC NAMES    YM5147 89720002
DEQVTOC  DEQ   (QNAME,RNAME,6,SYSTEMS),RET=HAVE                  YM5147 89770002
ENDDEQ   MVI   RSVSW,X'00'         RESET RESERVE SWITCH          S21995 89780002
GETOUT   ST    R13,LNKSAVE                                       S21995 89790002
         L     R13,REGSAVE+4                                     S21995 89820002
         L     R0,SIZE                 .BUFFER SIZE.           @ZA09683 89830000
         LA    R1,8                    .EXT FOR UNPK BEY BUFF  @ZM40094 89832000
         AR    R0,R1                   . IN CASE BUFF FILLED.  @ZM40094 89834000
         L     R1,RDAREA            LOAD 1R WITH ADDR OF GETMAIN Y02160 89840002
         FREEMAIN R,LV=(0),A=(1)    FREE FOR CLEANUP             Y02160 89842002
         CLC   RETCODE(1),LASTRET       WHICH CODE IS HIGHEST           89850002
         BL    USELAST                  IF LAST ONE--DON'T CHANGE       89880002
         MVC   LASTRET(1),RETCODE       SAVE HIGHEST STEP RET CODE      89910002
USELAST  SR    R15,R15                  CLEAR RET CODE REG              89940002
         IC    R15,LASTRET              LOAD RETURN CODE                89970002
         RETURN (14,12),RC=(15)           EXIT FROM AMASPZAP     A35657 90000002
*********************************************************************** 90030002
         SPACE 1                                                        90060002
         SPACE 1                                                        90090002
*********************************************************************** 90120002
*                                                                     * 90150002
*  THIS ROUTINE WRITES MESSAGE AMA117D TO OPERATOR TO REQUEST         * 90180002
*  PERMISSION TO UPDATE VTOC                                          * 90210002
*                                                                     * 90240002
*********************************************************************** 90270002
UPVTRTN  ST    LNKRG1,LNKSAVE3         SAVE LINK REGISTER        A38645 90300002
         BALR  LNKRG1,0                ESTABLISH                 A38645 90330002
         USING *,LNKRG1                 ADDRESSABILITY           A38645 90360002
         EXTRACT ADDRSV,'S',FIELDS=(TIOT) GET ADDR ACT TASK      A38645 90390002
         L     RG5,ADDRSV              RG5 POINTS TO TIOT        A38645 90420002
         MVC   UPVTMSG+66(8),0(RG5)    MOVE JOBNAME TO MSG BUFFERA38645 90450002
         LA    RG5,24(RG5)             INCREMENT TO FIRST DD ENT A38645 90480002
CHKLIB   CLC   4(6,RG5),SYSLIB         SYSLIB DD                 A38645 90510002
         BC    8,LIBUCB                GET SYSLIB UCB ADDR       A38645 90540002
         XC    ADDRSV(4),ADDRSV        CLEAR ADDRESS AREA        A38645 90570002
         MVC   ADDRSV+3(1),0(RG5)      MOVE LEN OF DD ENTRY      A38645 90600002
         A     RG5,ADDRSV              RG5 POINTS TO NEXT DD ENT A38645 90630002
         BC    15,CHKLIB               CHECK IF ITS SYSLIB       A38645 90660002
LIBUCB   L     RG5,16(RG5)             REL ADDR OF SYSLIBS UCB   A38645 90690002
         DEVTYPE SYSLIB,DEVBUF         GET SYSLIB DEVICE TYPE    A38645 90720002
         CLI   DEVBUF+3,X'05'          IS IT A 2321 DATA CELL    A38645 90750002
         BC    7,NOT2321               NOT 2321                  A38645 90780002
*  DEVICE IS A 2321 DATA CELL                                         * 90810002
         MVC   UPVTMSG+53(6),4(RG5)    2321 VOLSER TO MSG BUFFER A38645 90840002
         MVC   UPVTMSG+64(1),1(RG5)    BIN NUMBER TO MSG BUFFER  A38645 90870002
         OI    UPVTMSG+64,X'F0'        CONVERT TO EBCDIC         A38645 90900002
         MVI   UPVTMSG+63,C'/'         INSERT DELIMETER          A38645 90930002
*  FIND BEGINNING OF 2321 UCB FOR UNIT ADDRESS FIELD                  * 90960002
         ST    RG5,ADDRSV              SAVE ADDR OF CELL DESCR   A38645 90990002
         LH    RG5,0(RG5)              LOAD BIN NUMBER           A38645 91020002
         SLA   RG5,4                   TIMES BYTES/CELL ENTRY    A38645 91050002
         LA    RG5,56(RG5)             PLUS DISP TO BIN0 DESCR   A38645 91080002
         LCR   RG5,RG5                                           A38645 91110002
         A     RG5,ADDRSV              RG5 POINTS TO BEGIN OF UCBA38645 91140002
         BC    15,UNITNAME             MOVE UNIT NAME            A38645 91170002
NOT2321  MVC   UPVTMSG+53(6),28(RG5)   NON 2321 VOLSER TO MSG BUFA38645 91200002
UNITNAME MVC   UPVTMSG+60(3),13(RG5)   MOVE UNIT NAME TO MSG BUF A38645 91230002
         XC    WTOECB(4),WTOECB        CLEAR ECB                 A38645 91260002
UPVTMSG  WTOR  'AMA117D REPLY Y OR N TO UPDATE VTOC                    X91290002
                  ',CDBUF,1,WTOECB,ROUTCDE=1,DESC=2                     91320002
         WAIT  ECB=WTOECB                                        A38645 91350002
         MVC   UPVTMSG+53(21),UPVTMSG+52 BLANK DYNAM AREA        A38645 91380002
         L     LNKRG1,LNKSAVE3         RESTORE LINK REGISTER     A38645 91410002
         BR    LNKRG1                  .RETURN TO CALLER.      @ZA17658 91410237
         EJECT                                                 @ZA17658 91410437
* SUBROUTINES WITH OWN ADDRESSING (OVERFLOW FROM MAIN CSECT).  @ZA17658 91410637
         USING ZAPBASE2,BASREG                                 @ZA17658 91410837
************************************************************** @ZA00409 91440037
* SUBROUTINE TO SCAN CONTROL CARD, PRINT IT UNLESS IT CAUSES * @ZA00409 91441037
* AN IDR-UPDATE MESSAGE, AND RETURN TO CALLER WITH KEYWORD   * @ZA00409 91442037
* POINTERS (REGISTERS) SET BY 'SCANKEY'.                     * @ZA00409 91443037
************************************************************** @ZA00409 91444037
         USING CCISCAN,BASREG3                                 @ZA17658 91444537
CCISCAN  ST    LNKRG1,CCISSAVE          .SAVE RET REG.         @ZA00409 91445037
         TM    CTLBTE2,MODIFY           .PRINT CARD IF         @ZA00409 91446037
         BZ    CCISPRNT                 . NO SUCC 'NAME' REP   @ZA00409 91447037
         TM    CTLBTE3,IDRRD            . OR                   @ZA00409 91448037
         BZ    CCISPRNT                 . NO IDR SPACE.        @ZA00409 91449037
         BAL   LNKRG1,SCANKEY           .LOCATE KEYWORD.       @ZA00409 91450037
         TM    CTLBTE,IGNOP            .IF 'NO GO' SET,        @ZM30901 91451037
         BO    CCISCAN2                . 'REP' IS INVALID.     @ZM30901 91452037
         CLC   0(3,RG1),REP            .ELSE                   @ZM30901 91453037
         BE    CCISPRNT                . PRINT IF 'REP' CARD.  @ZM30901 91454037
* NOT A REJECTED REP AFTER PREV ACCEPTED REP(S).               @ZM30901 91455037
CCISCAN2 CLC   0(3,RG1),VERIFY         .PRINT                  @ZM30901 91456037
         BE    CCISPRNT                . IF 'VER' CARD,        @ZM30901 91457037
         CLC   0(6,RG1),SSI                                    @ZA00409 91458037
         BE    CCISPRNT                 . OR 'SETSSI' CARD,    @ZA00409 91459037
         CLC   0(7,RG1),IDRDATAC                               @ZA00409 91460037
         BE    CCISPRNT                 . OR 'IDRDATA' CARD,   @ZA00409 91461037
         CLI   0(RG1),AST                                      @ZA00409 91462037
         BE    CCISPRNT                 . OR COMMENT CARD,     @ZA00409 91463037
         CLC   0(7,RG1),CONSOLE                                @ZA00409 91464037
         BE    CCISPRNT                 . OR 'CONSOLE' CARD,   @ZA00409 91465037
         CLC   0(8,RG1),CHECKSUM       .OR 'CHECKSUM' STMT,    @ZA17660 91465337
         BE    CCISPRNT                                        @ZA17660 91465637
         CLC   0(3,RG1),END                                    @ZA00409 91466037
         BNE   CCISEXIT                 . OR 'END' CARD.       @ZA00409 91467037
CCISPRNT BAL   LNKRG1,WRITE             .(ELSE DEFER PRINT).   @ZA00409 91468037
         BAL   LNKRG1,SCANKEY           .RESTORE KEYWORD PTRS. @ZA00409 91469037
CCISEXIT L     LNKRG1,CCISSAVE          .RESTORE RET REG,      @ZA00409 91470037
         L     BASREG3,RDAREA          .RESTORE BUFFER BASE.   @ZA17658 91470537
         BR    LNKRG1                   . AND RETURN.          @ZA00409 91471037
CCISSAVE DC    F'0'                     .(RET-REG SAVE WORD).  @ZA00409 91472037
         SPACE 1                                                        91473037
         DROP  BASREG3                                         @ZA17658 91474037
         SPACE 1                                               @ZA17660 91474537
* PROCESS 'CHECKSUM' STATEMENT.                                @ZA17660 91475037
         USING CHSUM,BASREG3                                   @ZA17660 91475537
CHSUM    UNPK  CHSUMBCD(9),CHSUMACC(5) .UNPACK HEX CHECKSUM.   @ZA17660 91476037
         TR    CHSUMBCD(8),TRANTBL2-X'F0' .CONV TO BCD.        @ZA17660 91476537
         MVI   CHSUMCMA,COMMA          .RESTORE COMMA AFT VAL. @ZA17660 91477037
         XC    CHSUMACC(4),CHSUMACC    .RESET HEX CHECKSUM.    @ZA17660 91477537
         XC    CHSUMSLL(2),CHSUMSLL    .RESET CHECKSUM SHIFT.  @ZA17660 91478037
         BAL   LNKRG1,SCANKEY1         .GET OPERAND, IF ANY.   @ZA17660 91478537
         LTR   RG2,RG2                 .Q ANY OPERAND.         @ZA17660 91479037
         BZ    CHSUMWAS                .B OF NONE.             @ZA17660 91479537
         SR    RG3,RG1                 .OPERAND LENGTH.        @ZA17660 91480037
         CH    RG3,EIGHT               .(MUST BE 8 DIGITS).    @ZA17660 91480537
         BNE   CHSUMINV                .B IF NOT 8 DIGITS.     @ZA17660 91481037
         CLC   CHSUMBCD(8),0(RG1)      .COMPARE CHECKSUMS.     @ZA17660 91481537
         BNE   CHSUMERR                .B IF UNEQUAL.          @ZA17660 91482037
         MVC   CHSUMBCD(8),CORRECT     .ELSE INSERT 'CORRECT ' @ZA17660 91482537
         B     CHSUMWAS                . INTO MESSAGE.         @ZA17660 91483037
* CHECKSUM ERROR.                                              @ZA17660 91483537
CHSUMERR OI    CTLBTE,IGNOP            .SET NO=GO SWITCH.      @ZA17660 91484037
         MVC   RETCODE(1),RETCOD08     .SET RETURN CODE.       @ZA17660 91484537
         LA    RG5,MSGCHERR            .SELECT MESSAGE         @ZA17660 91485037
         BAL   LNKRG1,WRITE0           .WRITE MESSAGE.         @ZA17660 91485537
         B     CHSUMWAS                                        @ZA17660 91486037
* OPERAND ERROR.                                               @ZA17660 91486537
CHSUMINV OI    CTLBTE,IGNOP            .SET NO=GO SWITCH.      @ZA17660 91487037
         MVC   RETCODE(1),RETCOD08     .SET RETURN CODE.       @ZA17660 91487537
         LA    RG5,MSGCHINV            .SELECT MESSAGE         @ZA17660 91488037
         BAL   LNKRG1,WRITE0           .WRITE MESSAGE.         @ZA17660 91488537
* WRITE CHECKSUM-VALUE MESSAGE.                                @ZA17660 91489037
CHSUMWAS LA    RG5,MSGCHWAS            .SELECT MESSAGE.        @ZA17660 91489537
         BAL   LNKRG1,WRITE0           .WRITE MESSAGE.         @ZA17660 91490037
         L     BASREG3,RDAREA          .RESTORE BUFFER BASE.   @ZA17660 91490537
         BR    LNKRG3                  .GO TO NEXT INPUT STMT. @ZA17660 91491037
         SPACE 1                                               @ZA17660 91491537
CORRECT  DC    CL8'CORRECT '                                   @ZA17660 91492037
MSGCHWAS DC    CL40'AMA132I CHECKSUM WAS XXXXXXXX, IS NOW 0.'  @ZA17660 91492537
CHSUMBCD EQU   MSGCHWAS+21                                     @ZA17660 91493037
CHSUMCMA EQU   CHSUMBCD+8                                      @ZA17660 91493537
MSGCHERR DC    CL40'AMA133I CHECKSUM ERROR. NO-GO SWITCH SET.' @ZA17660 91494037
MSGCHINV DC    CL40'AMA134I  OPERAND ERROR. NO-GO SWITCH SET.' @ZA17660 91494537
         SPACE 1                                               @ZA17660 91495037
         DROP  BASREG3                                         @ZA17660 91495537
         EJECT                                                 @ZA17658 91500037
* DSECT FOR SYSLIB BUFFER.                                     @ZA17658 91505037
PROG4    DSECT                                                 @ZA17658 91510037
RDAREA1  DS    0C                                                       91530002
PCHOFFST EQU   PTCHA-AMASZCON           BASEREG=BASEREG2=11      Y02006 91540002
         END                                                            91560002
