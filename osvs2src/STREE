         MACRO                                                          00200002
&TAG     STREE &TREE,&TSP=,&T=,&TYPE=,&FIX=NO,&K=,&IVS=,&S=,&MAP=,&C=, *00400002
               &TSPACE=,&RSPACE=,&RSP=,&KEYL=,&OFFSET=,&RECL=           00600002
.********************************************************************** 00800002
.*               ****** SEPTEMBER 27,1973.  *******                     01000002
.********************************************************************** 01200002
.* THE STREE MACRO-INSTRUCTION IS USED TO CREATE A RADIX PARTITION    * 01400002
.* TREE FOR SUBSEQUENT USE. THE STREE SUBROUTINE IN THE MODULE        * 01600002
.* IGARPT01 OBTAINS SPACE FOR THE RPT, AND STORES THE INFORMATION     * 01800002
.* SUPPLIED IN A CONTROL BLOCK FOR THE RPT. THE ADDRESS OF THIS       * 02000002
.* CONTROL BLOCK IS RETURNED IN REGISTER 1, AND IS (OPTIONALLY) STORED* 02200002
.* IN THE MAIN STORAGE LOCATION SPECIFIED BY THE TREE PARAMETER.      * 02400002
.*                                                                    * 02600002
.* THE ADDRESS RETURNED BY THE STREE MACRO-INSTRUCTION MUST BE USED   * 02800002
.* FOR ALL SUBSEQUENT OPERATIONS WITH IT USING THE OTHER RPT          * 03000002
.* MACRO-INSTRUCTIONS, SUCH AS SRCH, DEL, INS, SCANL, SCANR, FTREE,   * 03200002
.* ETC. THE ADDRESS CAN BE STORED EITHER IN A MAIN STORAGE LOCATION   * 03400002
.* VIA THE TREE PARAMETER, OR MAY BE PUT IN A REGISTER BY CODING      * 03600002
.* "(GPR)" FOR THE TREE PARAMETER, WHERE "GPR" IS THE REGISTER NAME OR* 03800002
.* NUMBER.                                                            * 04000002
.*                                                                    * 04200002
.* THE SPACE FOR THE RPT CAN BE OBTAINED VIA THE GSPACE               * 04400002
.* MACRO-INSTRUCTION USING A PREVIOUSLY ESTABLISHED SPACE CONTROL     * 04600002
.* AREA, OR MAY BE OBTAINED IMPLICITLY VIA THE GSPACE                 * 04800002
.* MACRO-INSTRUCTION USING THE APPROPRIATE SPACE CONTROL AREA FROM THE* 05000002
.* TCB (SEE THE DESCRIPTION OF THE GSPACE MACRO-INSTRUCTION FOR THE   * 05200002
.* USE OF SPACE CONTROL AREAS).                                       * 05400002
.*                                                                    * 05600002
.* THERE ARE DIFFERENT TYPES OF RADIX PARTITION TREES, WHICH ARE      * 05800002
.* DIFFERENTIATED FROM ONE ANOTHER BY CODING THE T PARAMETER ON ALL   * 06000002
.* THE MACRO-INSTRUCTIONS THAT DEAL WITH RPTS. THERE ARE LIMITATIONS  * 06200002
.* ON THE OPERATIONS THAT MAY BE INVOKED WITH THE DIFFERENT RPT TYPES,* 06400002
.* DEPENDING ON THE RPT TYPE.                                         * 06600002
.*                                                                    * 06800002
.* THE ALLOCATION OF SPACE, AS DESCRIBED ABOVE, APPLIES TO TYPE 8     * 07000002
.* RADIX PARTITION TREES. THE GSPACE MACRO-INSTRUCTION IS ALWAYS USED * 07200002
.* TO ALLOCATE THE SPACE FOR A TYPE 8 RPT.                            * 07400002
.* THE SPACE FOR THE RPT CAN BE OBTAINED EITHER CONDITIONALLY OR      * 07600002
.* UNCONDITIONALLY, DEPENDING ON THE C PARAMETER. IF "C=C" IS CODED,  * 07800002
.* THEN THE ALLOCATION IS VIA A CONDITIONAL GSPACE OPERATION, WHICH   * 08000002
.* HAS A RETURN CODE FOR THE STREE MACRO-INSTRUCTION OF -1 IF THE     * 08200002
.* SPACE COULD NOT BE ALLOCATED, OR HAS A RETURN CODE IN REGISTER 15  * 08400002
.* WHICH IS THE ADDRESS OF THE RPT'S CONTROL BLOCK (CALLED THE TREE   * 08600002
.* HEADER, OR THE ADDRESS OF THE RPT).                                * 08800002
.* FOR TYPE 5 RADIX PARTITION TREE, THE SPACE IS ALWAYS OBTAINED VIA  * 09000002
.* THE GETMAIN MACRO-INSTRUCTION, AND A CONDITIONAL GETMAIN IS ALWAYS * 09200002
.* USED, UNLESS THE C PARAMETER IS CODED "C=U".                       * 09400002
.*                                                                    * 09600002
.********************************************************************** 09800002
.* WITH TYPE 8 RADIX PARTITION TREES, THE FOLLOWING OPERATIONS ARE    * 10000002
.* EFFECTIVE:                                                         * 10200002
.*                                                                    * 10400002
.* SRCH: SEARCH FOR A GIVEN KEY.                                      * 10600002
.* INS:  INSERT A NEW KEY-ADDRESS ASSOCIATION PAIR.                   * 10800002
.* DEL:  DELETE A KEY-ADDRESS ASSOCIATION PAIR SELECTED BY THE CURRENT* 11000002
.*       SETTING OF THE CURSOR (SEE THE DESCRIPTION OF THE CURSOR     * 11200002
.*       UNDER THE ISCAN MACRO-INSTRUCTION DESCRIPTION).              * 11400002
.* ISCAN:INITIALIZE THE CURSOR FOR SUBSEQUENT SCANNING OPERATIONS.    * 11600002
.* SCANL:SCAN LEFT TO THE NEXT KEY IN DESCENDING ORDER.               * 11800002
.* SCANR:SCAN RIGHT TO THE NEXT KEY IN ASCENDING ORDER.               * 12000002
.* FTREE:RELEASE ALL THE SPACE FOR THE RPT TO THE SYSTEM VIA THE      * 12200002
.*       FSPACE MACRO-INSTRUCTION.                                    * 12400002
.*                                                                    * 12600002
.* THE MAXIMUM KEY LENGTH THAT CAN BE SUPPORTED WITH TYPE 8 RADIX     * 12800002
.* PARTITION TREES IS 256 BYTES.                                      * 13000002
.********************************************************************** 13200002
.*                                                                    * 13400002
.* WITH TYPE 5 RADIX PARTITION TREES, THE FOLLOWING OPERATIONS ARE    * 13600002
.* VALID:                                                             * 13800002
.*                                                                    * 14000002
.* SRCH: SEARCH FOR A GIVEN KEY AND SET THE CURSOR TO THE             * 14200002
.*       CORRESPONDING KEY-ADDRESS PAIR.                              * 14400002
.* INS:  INSERT A NEW KEY-ADDRESS PAIR.                               * 14600002
.* DEL:  DELETE A KEY-ADDRESS PAIR BASED ON THE CURRENT SETTING OF THE* 14800002
.*       CURSOR.                                                      * 15000002
.* FTREE:FREE THE SPACE FOR THE TREE BY RELEASING IT TO THE SYSTEM VIA* 15200002
.*       THE FREEMAIN MACRO-INSTRUCTION.                              * 15400002
.*       NO OTHER OPERATIONS ARE VALID FOR TYPE 5 TREES.              * 15600002
.*                                                                    * 15800002
.*       THE MAXIMUM SIZE KEY PERMITTED WITH TYPE 5 TREES IS 16 BYTES.* 16000002
.*       THE KEY MUST ALWAYS BE PRESENTED AS A SINGLE FIELD FOR THE   * 16200002
.*       SRCH AND INS MACRO-INSTRUCTIONS, UNLIKE TYPE 8 TREES, WHERE  * 16400002
.*       THE KEY IS PERMITTED TO BE COMPOSED OF A NUMBER OF SCATTERED * 16600002
.*       FIELDS.                                                      * 16800002
.*                                                                    * 17000002
.* THE MAIN REASON FOR HAVING TYPE 5 RADIX PARTITION TREES IS TO ALLOW* 17200002
.* SEARCHES TO PROCEED IN A MULTIPROCESSING SITUATION SIMULTANEOUSLY  * 17400002
.* WITH AN INSERT OR DELETE IN PROGRESS. THIS IS ACCOMPLISHED WITHOUT * 17600002
.* NEEDING TO LOCK THE RPT HEADER.                                    * 17800002
.********************************************************************** 18000002
.* THE MEANING AND USE OF THE VARIOUS PARAMETERS FOR THE STREE        * 18200002
.* MACRO-INSTRUCTION ARE AS FOLLOWS:                                  * 18400002
.*                                                                    * 18600002
.* TREE: THIS PARAMETER SPECIFIES WHERE TO PUT THE ADDRESS OF THE     * 18800002
.*       RADIX PARTITION TREE AFTER IT HAS BEEN ESTABLISHED. IT MAY   * 19000002
.*       SPECIFY EITHER A MAIN STORAGE LOCATION OR A GENERAL REGISTER.* 19200002
.*                                                                    * 19400002
.* TSP:  THIS PARAMETER SPECIFIES THE SUBPOOL TO BE USED FOR          * 19600002
.*       ALLOCATING SPACE FOR THR RPT, BOTH INITIALLY AND LATER WHEN  * 19800002
.*       SPACE IS NEEDED FOR INSERTIONS.                              * 20000002
.*                                                                    * 20200002
.* T:    THIS SPECIFIES THE RPT TYPE. IT MAY BE 5 OR 8. IF IT IS      * 20400002
.*       ELIDED, THE RPT TYPE IS 8.                                   * 20600002
.*                                                                    * 20800002
.* FIX:  THIS PARAMETER SPECIFIES WHETHER A PGFIX OPERATION MUST BE   * 21000002
.*       PERFORMED ON THE PAGES CONTAINING THE IGARPT01 MODULE. IF    * 21200002
.*       "FIX=YES" IS CODED, THEN THE PGFIX OPERATION IS GENERATED AS * 21400002
.*       PART OF THE STREE MACRO EXPANSION.                           * 21600002
.*                                                                    * 21800002
.* K:    THIS SPECIFIES THE DISPLACEMENT AND LENGTH OF THE KEY, AS A  * 22000002
.*       DISPLACEMENT-LENGTH PAIR. IT IS CODED AS "K=(D,L)", WHERE D  * 22200002
.*       IS THE DISPLACEMENT FROM THE START OF ANY ADDRESS ASSOCIATED * 22400002
.*       WITH A KEY AND THE FIRST BYTE OF THE KEY. THE DISPLACEMENT   * 22600002
.*       MAY NOT EXCEED 4095 BYTES.                                   * 22800002
.*       L IS THE LENGTH OF THE KEYS, IN BYTES. IF VARIABLE LENGTH    * 23000002
.*       KEYS ARE USED, THEY ARE TREATED AS IF THEY ARE ALL THE SAME  * 23200002
.*       LENGTH, I. E. L BYTES LONG. AS LONG AS THE SET OF KEYS DO NOT* 23400002
.*       CONTAIN TWO BYTE STRINGS SUCH THAT ONE IS A PROPER SUBSTRING * 23600002
.*       OF THE OTHER ONE, THIS WILL NOT CAUSE A PROBLEM, SINCE THE   * 23800002
.*       COMPARISONS DO NOT EXTEND PAST THE POINT OF INEQUALITY OF ANY* 24000002
.*       TWO KEYS.                                                    * 24200002
.*                                                                    * 24400002
.* S:    THIS SPECIFIES THE ADDRESS OF THE SPACE CONTROL AREA IF A    * 24600002
.*       SPACE CONTROL AREA IS EXPLICITLY USED TO ALLOCATE AND RELEASE* 24800002
.*       THE STORAGE FOR THE RPT. THE SPACE CONTROL ADDRESS IS THE    * 25000002
.*       WORD THAT IS RETURNED FROM THE GSPACE MACRO-INSTRUCTION WHEN * 25200002
.*       "GSPACE S,..ETC. " IS CODED. SEE THE DESCRIPTION OF THE      * 25400002
.*       GSPACE MACRO-INSTRUCTION FOR A MORE COMPLETE DISCUSSION OF   * 25600002
.*       THE USE OF THE SPACE CONTROL WORD.                           * 25800002
.*                                                                    * 26000002
.* C:    THIS IS USED TO SPECIFY A CONDITIONAL OR UNCONDITIONAL       * 26200002
.*       ATTEMPT TO ALLOCATE THE SPACE FOR THE RPT INITIALLY. IF "C=C"* 26400002
.*       IS CODED, THE REQUEST IS A CONDITIONAL REQUEST. IF "C=U" IS  * 26600002
.*       CODED THE REQUEST IS UNCONDITIONAL. IF THE C PARAMETER IS NOT* 26800002
.*       CODED, THE REQUEST IS CONDITIONAL.                           * 27000002
.*                                                                    * 27200002
.* MAP:  THIS PARAMETER IS USED WHEN THE ADDRESSES ASSOCIATED WITH    * 27400002
.*       KEYS IN THE RPT ARE NOT ADDRESSES OF AREAS CONTAINING THE    * 27600002
.*       CORRESPONDING KEYS. THIS PARAMETER SPECIFIES THE ADDRESS OF A* 27800002
.*       SUBROUTINE TO BE EXECUTED WHEN THE RPT MODULE (IGARPT01) MUST* 28000002
.*       ACCESS A KEY USING ONE OF THE ADDRESSES FROM A KEY-ADDRESS   * 28200002
.*       PAIR. THE ADDRESS SPECIFIED BY THE MAP PARAMETER IS STORED IN* 28400002
.*       THE TREE HEADER, AND WHENEVER THE IGARPT01 MODULE MUST ACCESS* 28600002
.*       A KEY FROM ONE OF THE ADDRESSES THE ADDRESS ASSOCIATED WITH  * 28800002
.*       THE KEY IS PLACED IN REGISTER 1, AND A LINK IS MADE TO THE   * 29000002
.*       SUBROUTINE SPECIFIED BY THE MAP PARAMETER. UPON ENTRY TO THIS* 29200002
.*       ROUTINE A REGISTER SAVE AREA IS AVAILABLE USING THE ADDRESS  * 29400002
.*       IN REGISTER 13. THE MAPPING SUBROUTINE MAY STORE IT'S        * 29600002
.*       REGISTERS IN THE SAVE AREA PROVIDED. THE MAPPING SUBROUTINE  * 29800002
.*       MUST RESTORE ALL REGISTERS EXCEPT 0, 14, AND 15 TO THEIR     * 30000002
.*       CONTENTS UPON ENTRY.                                         * 30200002
.*                                                                    * 30400002
.*       THE MAPPING SUBROUTINE MUST COMPUTE THE ADDRESS OF THE       * 30600002
.*       CORRESPONDING KEY FROM THE ADDRESS FURNISHED IN REGISTER 1,  * 30800002
.*       AND LEAVE IT IN REGISTER 0 UPON RETURN TO THE IGARPT01       * 31000002
.*       MODULE. IF THE K PARAMETER HAS BEEN CODED "K=(D,L)" IN THE   * 31200002
.*       STREE MACRO-INSTRUCTION, THEN THE ADDRESS LEFT IN REGISTER 0 * 31400002
.*       MUST BE EQUAL TO THE ADDRESS OF THE CORRECT KEY MINUS THE    * 31600002
.*       DISPLACEMENT D, SINCE THE IGARPT01 MODULE WILL ADD THE       * 31800002
.*       DISPLACEMENT D TO THE ADDRESS IN REGISTER 0 TO FORM THE      * 32000002
.*       ADDRESS OF THE FIRST BYTE OF THE KEY.                        * 32200002
.*                                                                    * 32400002
.*       A TYPICAL USE OF THIS FEATURE WOULD BE TO STORE RECORDS ON A * 32600002
.*       DISK USING A BDAM ORGANIZATION, WHERE THE ADDRESSES          * 32800002
.*       ASSOCIATED WITH THE KEYS ARE THE BDAM BLOCK NUMBERS OF THE   * 33000002
.*       CORRESPONDING RECORDS. THEN THE MAPPING SUBROUTINE TAKES THE * 33200002
.*       BDAM BLOCK NUMBER IN REGISTER 1, READS THE CORRESPONDIN BDAM * 33400002
.*       BLOCK, AND PUTS THE MAIN STORAGE ADDRESS OF THE REOCRD READ  * 33600002
.*       IN REGISTER 0 PRIOR TO RETURNING TO THE IGARPT01 MODULE. IN  * 33800002
.*       THIS WAY THE ADDRESSES ASSOCIATED WITH THE KEYS IN THE RPT   * 34000002
.*       CAN BE COMPLETELY ARBITRARY, TO BE RESOLVED WHEN NEEDED BY   * 34200002
.*       THE MAPPING SUBROUTINE.                                      * 34400002
.*                                                                    * 34600002
.*       THE ADDRESS OF THE MAPPING SUBROUTIE CAN BE IN A REGISTER BY * 34800002
.*       CODING "MAP=(GPR)", WHERE "GPR" IS THE NAME OR NUMBER OF THE * 35000002
.*       REGISTER CONTAINING THE ADDRESS OF THE MAPPING SUBROUTINE. IF* 35200002
.*       "MAP=LABEL" IS CODED, THE ADDRESS OF THE MAPPING SUBROUTINE  * 35400002
.*       IS AT THE LOCATION "LABEL". A BRANCH TO THE SPECIFIED LABEL  * 35600002
.*       SHOULD RESULT IN EXECUTION OF THE MAPPING SUBROUTINE. THE    * 35800002
.*       ADDRESS IS FORMED BY EXECUTINNG A LOAD-ADDRESS INSTRUCTION   * 36000002
.*       WITH THE SPECIFIED LABEL.                                    * 36200002
.*                                                                    * 36400002
.*       IF THE MAP PARAMETER IS NOT CODED THERE IS NO ATTEMPT MADE TO* 36600002
.*       EXECUTE A MAPPING SUBROUTINE BY THE IGARPT01 MODULE. IN THIS * 36800002
.*       CASE EVERY ADDRESS ASSOCIATED WITH A KEY MUST BE THE MAIN    * 37000002
.*       STORAGE ADDRESS OF AN AREA CONTAINING THE KEY.               * 37200002
.*                                                                    * 37400002
.*       THE PARAMETERS IVS, TYPE, TSPACE, RSPACE, RSP, KEYL, OFFSET, * 37600002
.*       AND RECL ARE ONLY PRESENT FOR COMPATIBILITY WITH EARLIER     * 37800002
.*       VERSIONS OF THE STREE MACRO-INSTRUCTION, AND SHOULD NOT BE   * 38000002
.*       USED, AS THEY ARE NOT SUPPORTED IN ANY CONTEXT OTHER THAN THE* 38200002
.*       ONE THEY WERE USED IN ORIGINALLY.                            * 38400002
         GBLA  &IGALEFT(256)   LEFT EDGES FOR BINARY TREE PARSE.        38600002
         GBLA  &IGARGHT(256)   RIGHT EDGES FOR BINARY TREE PARSE.       38800002
         GBLB  &IGARL(256)     LEFT/RIGHT FLAG BITS FOR BINARY PARSE.   39000002
         GBLB  &IGAIS(256)     INNER/SINK BIT FLAGS FOR PARSE TREE.     39200002
         GBLB  &IGAOKAY        1 IF PARSE DISCOVERED BAD SYNTAX.        39400002
         GBLA  &IGAX     TRIPLE FOR SCANNING OPERATION.                 39600002
         GBLA  &IGAY     XX                                             39800002
         GBLA  &IGAZ     XX                                             40000002
         GBLC  &IGASTRE                                                 40200002
         GBLB  &IGALONE  ON TO RUN THE RPT PROGRAMS STANDALONE.         40400002
         GBLC  &IGARPT#  THE RADIX PARTITION TREE TYPE.                 40600002
         GBLB  &IGAPGM  ON IF THIS IS IGARPT01.                         40800002
         LCLC  &X        LOCAL CHARACTER STRING.                        41000002
         LCLA  &N        LOCAL VARIABLE.                                41200002
         LCLA  &I        LOCAL INDEX VARIABLE.                          41400002
         LCLA  &J        LOCAL VARIABLE.                                41600002
.*A000000                                                        Y02147 41800002
.********************************************************************** 42000002
.* CHECK TO SEE IF ANY OF THE OLD PARAMETERS OF THE STREE MACRO ARE   * 42200002
.* SPECIFIED, AND IF THEY ARE TRANSLATE THEM TO THE NEW PARAMETERS VIA* 42400002
.* THE MACRO RECURSION TECHNIQUE.                                     * 42600002
.********************************************************************** 42800002
         AIF   ((K'&KEYL EQ 0)AND(K'&OFFSET EQ 0)).NEW  SEE IF THEY ARE*43000002
                         BOTH NOT SPECIFIED.                            43200002
&TAG     STREE &TREE,TSP=&TSP,T=&T,TYPE=&TYPE,FIX=&FIX,IVS=&IVS,S=&S,  *43400002
               MAP=&MAP,K=(&OFFSET,&KEYL)                               43600002
         AGO   .FIN      ALL DONE WITH THE MAPPING FROM THE OLD TO THE *43800002
                         NEW FORMATS, NOW EXIT FROM THE STREE MACRO.    44000002
.NEW     ANOP                                                           44200002
.********************************************************************** 44400002
.* CHECK THE TYPE AND T PARAMETERS TO SEE IF A VALID RPT TYPE IS      * 44600002
.* SPECIFIED. IF NEITHER IS SPECIFIED, ASSUME IT IS TYPE 8 RPT. THE   * 44800002
.* TYPE IS PUT INTO THE GLOBAL VARIABLE &IGARPT# AT THE END OF THE    * 45000002
.* TYPE CHECKING SECTION.                                             * 45200002
.********************************************************************** 45400002
.RPT#    AIF   (K'&T EQ 0).RPT#TMT  SEE IF THE T PARAMETER IS CODED.    45600002
         AIF   (K'&TYPE EQ 0).RPT#TCK  USE THE T PARAMETER IF IT IS    *45800002
                         CODED AND THE TYPE PARAMETER IS NOT CODED.     46000002
.********************************************************************** 46200002
.* BOTH THE T AND TYPE PARAMETERS ARE CODED; SEE IF THEY ARE THE SAME,* 46400002
.* AND IF THEY ARE NOT THEN USE T.                                    * 46600002
.********************************************************************** 46800002
         AIF   ('&T' EQ '&TYPE').RPT#TCK  IF THEY ARE THE SAME THEN USE*47000002
                         T.                                             47200002
         MNOTE 4,'TYPE CONFLICT, ONLY T OR TYPE SHOULD BE CODED.'       47400002
.RPT#TCK ANOP                                                           47600002
&IGARPT# SETC  '&T'      GET THE RPT TYPE.                              47800002
         AGO   .RPT#CHK  GO TO CHECK THE VALIDITY OF THE RADIX         *48000002
                         PARTITION TREE TYPE.                           48200002
.********************************************************************** 48400002
.* THE T PARAMETER IS NOT CODED, SEE IF THE TYPE PARAMETER IS CODED.  * 48600002
.********************************************************************** 48800002
.RPT#TMT AIF   (K'&TYPE EQ 0).RPT#8  IF BOTH ARE LEFT OUT USE TYPE 8   *49000002
                         RPT.                                           49200002
&IGARPT# SETC  '&TYPE'   SET THE TYPE TO THE TYPE THAT IS SPECIFIED BY *49400002
                         THE TYPE PARAMETER.                            49600002
         AGO   .RPT#CHK  GO CHECK IT FOR VALIDITY.                      49800002
.RPT#8   ANOP                                                           50000002
&IGARPT# SETC  '8'       SET THE RPT TYPE TO 8.                         50200002
.RPT#CHK AIF   (('&IGARPT#' EQ '8')OR('&IGARPT#' EQ '5')OR('&IGARPT#' E*50400002
               Q '4')).RPT#FIN                                          50600002
         MNOTE 4,'INVALID RPT TYPE, TYPE 8 ASSUMED.'                    50800002
&IGARPT# SETC  '8'       USE TYPE 8 RPT.                                51000002
.RPT#FIN ANOP                                                           51200002
      RPTDSECT T=&IGARPT#,DS=NO                                         51400002
.********************************************************************** 51600002
.* GET THE ADDRESS OF THE MODULE IGARPT01 IN REGISTER 14 FOR THE LINK * 51800002
.* TO THE APPROPRIATE ROUTINE TO SET UP THE RPT.                      * 52000002
.********************************************************************** 52200002
         AIF   (K'&S NE 0).USE@S  SEE IF THE SPACE CONTROL ADDRESS IS  *52400002
                         CODED; BECAUSE IF IT IS THE ADDRESS CAN BE    *52600002
                         LOADED DIRECTLY FROM IT.                       52800002
         AIF   (&IGALONE).LOAD  IF THIS IS THE STAND-ALONE CASE USE THE*53000002
               LOAD MACRO TO LOAD THE MODULE IGARPT01.                  53200002
&TAG   RPTDSECT GEN=(CVTRPT,14)  GET THE ADDRESS FROM THE CVT.          53400002
         AGO   .LOADED   THE ADDRESS IS IN GPR 14.                      53600002
.LOAD    LOAD  EP=IGARPT01  LOAD THE MODULE.                            53800002
         LR    14,0                                                     54000002
         AGO   .LOADED   ALL DONE GETTING THE ADDRESS IN R14.           54200002
.USE@S   AIF   ('&S'(1,1) EQ '(').USESGPR  SEE IF THE SPACE CONTROL    *54400002
               ADDRESS IS IN A GENERAL PURPOSE REGISTER.                54600002
         L     15,&S     LOAD THE ADDRESS OF THE SPACE CONTROL AREA.    54800002
         L     14,0(,15) ADDRESS OF IGARPT01.                           55000002
         AGO   .LOADED   ALL LOADED NOW.                                55200002
.USESGPR AIF   ('&S' EQ '(15').LOAD14  SEE IF IT IS ALREADY IN R15.     55400002
         LR    15,&S(1)  SPACE CONTROL ADDRESS.                         55600002
.LOAD14  L     14,0(,15)  ADDRESS OF IGARPT01.                          55800002
.LOADED  ANOP                                                           56000002
.********************************************************************** 56200002
.* CHECK TO SEE IF A PGFIX OPERATION MUST BE DONE ON THE RPT MODULE.  * 56400002
.********************************************************************** 56600002
         AIF   (K'&FIX EQ 0).NOFIX  GO AROUND THE PGFIX IF IT IS NOT   *56800002
               CODED IN THE STREE MACRO-INSTRUCTION.                    57000002
         AIF   (('&FIX'(1,1) NE 'Y')AND('&FIX'(1,1) NE '1')).NOFIX      57200002
         STM   14,3,12(13) SAVE REGS.                                   57400002
         LR    2,14                                                     57600002
         LA    3,(3*X'C')(13) ECB ADDRESS.                              57800002
         MVI   0(3),X'00'                                               58000002
         PGFIX R,A=(2),ECB=(3)                                          58200002
         WAIT  ECB=(3)                                                  58400002
         LM    14,12,12(13)  RESTORE REGISTERS.                         58600002
.NOFIX   ANOP                                                           58800002
.********************************************************************** 59000002
.* NOW PUT THE STREE PARAMETERS IN REGISTERS 0, 1, AND 15, AND LINK TO* 59200002
.* THE MODULE IGARPT01 TO SET UP THE RADIX PARTITION TREE OF THE      * 59400002
.* INDICATED TYPE.                                                    * 59600002
.* THE REGISTER CONTENTS UPON LINKING TO THE MODULE IGARPT01 ARE:     * 59800002
.* R0    KEYI, TYPE, AND KEY LENGTH. THE KEY INDEX IS A HALFWORD      * 60000002
.*       OFFSET, THE TREE TYPE IS A 7-BIT #, AND THE KEY LENGTH IS A  * 60200002
.*       9-BIT #.                                                     * 60400002
.* R1    THE ADDRESS OF THE MAPPING SUBROUTINE (IF THERE IS A MAPPING * 60600002
.*       SUBROUTINE).                                                 * 60800002
.* 14    THE ADDRESS OF THE MODULE IGARPT01.                          * 61000002
.* R15   TSP,S - THE TREE SUBPOOL AND THE ADDRESS OF THE SPACE CONTROL* 61200002
.*       AREA (IF THERE IS ONE).                                      * 61400002
.********************************************************************** 61600002
         AIF   (K'&TSP EQ 0).SPZERO  SEE IF THE SUBPOOL IS NOT CODED.   61800002
         AIF   ('&TSP' EQ '0').SPZERO  SEE IF SUBPOOL ZERO IS          *62000002
                         EXPLICITLY CODED.                              62200002
         AIF   (K'&S EQ 0).SELIDED  SEE IF THE SPACE CONTROL ADDRESS IS*62400002
                         NOT CODED.                                     62600002
         AIF   ('&S'(1,1) EQ '(').SINGPR  SEE IF THE SPACE CONTROL     *62800002
                         ADDRESS IS IN A GPR.                           63000002
         LA    15,0(,15)                                                63200002
.S15AL   AL    15,=AL1(&TSP,0,0,0)  RPT SUBPOOL.                        63400002
         AGO   .GOT15    GOT REGISTER 15 SET UP NOW.                    63600002
.SINGPR  LA    15,0(,&S(1))  SPACE CONTROL ADDRESS.                     63800002
         AGO   .S15AL    NOW GO ADD IN THE SUBPOOL NUMBER.              64000002
.SELIDED LA    15,&TSP   RPT SUBPOOL.                                   64200002
         SLL   15,24                                                    64400002
         AGO   .GOT15    GOT REGISTER 15 ALL SET UP NOW.                64600002
.SPZERO  AIF   (K'&S EQ 0).NOSORSP  SEE IF THERE IS NEITHER A SPACE    *64800002
                         CONTROL ADDRESS NOR A SUBPOOL CODED.           65000002
         LA    15,0(,15)                                                65200002
         AGO   .GOT15    ALL DONE SETTING UP REGISTER 15 NOW.           65400002
.NOSORSP SLR   15,15     SUBPOOL ZERO.                                  65600002
.GOT15   ANOP                                                           65800002
.********************************************************************** 66000002
.* NOW PUT THE KEY INDEX, THE RPT TYPE #, AND THE KEY LENGTH IN       * 66200002
.* REGISTER 0.                                                        * 66400002
.********************************************************************** 66600002
         AIF   (K'&K NE 0).KNOTMT  SEE IF THE K PARAMETER IS CODED.     66800002
.KMNOTE  MNOTE 12,'"K=(DISPLACEMENT,KEY LENGTH)" MUST BE CODED.'        67000002
         AGO   .FIN      CAN'T DO ANY MORE WITH THIS, EXIT.             67200002
.KNOTMT  AIF   (N'&K EQ 2).KHAS2  SEE IF THERE ARE EXACTLY 2 OPERANDS  *67400002
                         IN THE K PARAMETER.                            67600002
         AIF   (N'&K NE 1).KMNOTE  SEE IF THERE IS JUST ONE.            67800002
&X       SETC  '&K(1)'(1,1)  GET THE FIRST CHARACTER OF THE FIRST      *68000002
                         ELEMENT IN THE K PARAMETER.                    68200002
         AIF   ((('&X' EQ '0')OR('&X' EQ '1')OR('&X' EQ '2')OR('&X' EQ *68400002
               '3')OR('&X' EQ '4')OR('&X' EQ '5')OR('&X' EQ '6')OR('&X'*68600002
                EQ '7')OR('&X' EQ '8')OR('&X' EQ '9'))).K1#             68800002
         LA    0,&K                                                     69000002
         LH    1,*-2     OFFSET TO KEY + BASE REGISTER.                 69200002
         N     1,=XL4'00000FFF'  ELIMINATE BASE REGISTER.               69400002
         SLL   1,7                                                      69600002
         LA    0,&IGARPT#.(,1)  RPT TYPE.                               69800002
&X       SETC  'L'''                                                    70000002
         LA    1,&X&K                                                   70200002
         SLL   0,16                                                     70400002
         ALR   0,1                                                      70600002
         AGO   .GETMAP   GO SEE IF THE MAP IS CODED.                    70800002
.K1#     L     0,=AL4(B'1000000000'*&IGARPT#+&K)  RPT# &KL.             71000002
         MNOTE 0,'DISPLACEMENT TO KEY ASSUMED ZERO.'                    71200002
         AGO   .GETMAP   ALL DONE WITH K NOW.                           71400002
.KHAS2   ANOP                                                           71600002
         AIF   (K'&K(1) EQ 0).KDSP0  CHECK FOR A ZERO DISPLACEMENT.     71800002
         AIF   ('&K(1)' EQ '0').KDSP0  SEE IF THE ZERO DISPLACEMENT IS *72000002
                         EXPLICITLY CODED.                              72200002
         LA    1,&K(1)   DISPLACEMENT TO THE KEY.                       72400002
         SLL   1,7                                                      72600002
         LA    0,&IGARPT#.(,1)  RPT TYPE.                               72800002
         AGO   .GOTKDSP  ALL FINISHED SETTING UP DISPLACEMENT AND RPT  *73000002
                         TYPE NOW.                                      73200002
.KDSP0   LA    0,&IGARPT#  RPT TYPE.                                    73400002
.GOTKDSP SLL   0,9                                                      73600002
         LA    1,&K(2)   KEY LENGTH IN BYTES.                           73800002
         ALR   0,1                                                      74000002
.GETMAP  ANOP                                                           74200002
         AIF   (K'&MAP EQ 0).NOMAP  SEE IF THE ADDRESS OF THE MAPPING  *74400002
                         SUBROUTINE IS SPECIFIED.                       74600002
         AIF   ('&MAP' EQ '0').NOMAP  SEE IF IT IS EXPLICITLY CODED AS *74800002
                         ZERO.                                          75000002
         AIF   ('&MAP'(1,1) EQ '(').MAPGPR  SEE IF THE ADDRESS OF THE  *75200002
                         MAPPING SUBROUTINE IS IN A GENERAL REGISTER.   75400002
         L     1,=AL4(&MAP)  ADDRESS OF MAPPING SUBROUTINE.             75600002
         AGO   .GOTMAP   ALL FINISHED SETTING UP REGISTER 1 NOW.        75800002
.MAPGPR  LR    1,&MAP(1)  ADDRESS OF MAPPING SUBROUTINE.                76000002
         AGO   .GOTMAP   ALL DONE WITH R1 NOW.                          76200002
.NOMAP   SLR   1,1       INDICATE NO MAPPING SUBROUTINE PRESENT.        76400002
.GOTMAP  ANOP                                                           76600002
.********************************************************************** 76800002
.* CHECK THE INNER VERTEX SIZE FOR 8 OR 12 BYTES, AND SET BIT 0 OF    * 77000002
.* REGISTER R1 TO 0 IF IT IS 8 BYTES, OR TO 1 IF IT IS 12 BYTES. IF IT* 77200002
.* IS NEITHER 8 NOR 12 BYTES GENERATE THE MNOTE.                      * 77400002
.********************************************************************** 77600002
         AIF   ('&IGARPT#' NE '8').SKIPIVS  SEE IF THIS IS A TYPE 8    *77800002
                         RPT.                                           78000002
         AIF   (K'&IVS EQ 0).IVSIS8  THE DEFAULT INNER VERTEX SIZE IS 8*78200002
                         BYTES.                                         78400002
         AIF   ('&IVS' EQ '8').IVSIS8  SEE IF THE INNER VERTEX SIZE IS *78600002
                         8 BYTES.                                       78800002
         AIF   ('&IVS' EQ '12').IVSIS12  SEE IF THE INNER VERTEX SIZE  *79000002
                         IS 12 BYTES.                                   79200002
         MNOTE 12,'INVALID INNER VERTEX SIZE, CAN ONLY BE 8 OR 12.'     79400002
         AGO   .IVSFIN   GO ON AND CHECK OTHER THINGS.                  79600002
.IVSIS8  LA    1,0(,1)   SET BIT 0 TO 0 FOR IVS=8.                      79800002
         AGO   .IVSFIN   ALL DONE SETTING UP R1 NOW.                    80000002
.IVSIS12 O     1,=XL4'80000000'  INDICATE IVS=12.                       80200002
.IVSFIN  ANOP                                                           80400002
.SKIPIVS ANOP                                                           80600002
.********************************************************************** 80800002
.* LINK TO THE STREE SUBROUTINE IN THE MODULE IGARPT01. IF THE C      * 81000002
.* PARAMETER IS CODED "C=Y", "C=1", OR "C=" THEN A BAL IS GENERATED TO* 81200002
.* INDICATE CONDITIONAL GSPACE/GETMAIN OPERATIONS. IF "C=N" OR "C=0"  * 81400002
.* IS CODED THE REQUEST IS UNCONDITIONAL, AND A BALR IS GENERATED FOR * 81600002
.* THE LINK TO THE STREE ROUTINE IN THE MODULE IGARPT01.              * 81800002
.********************************************************************** 82000002
         AIF   (K'&C EQ 0).LINKC  SEE IF THE C PARAMETER IS NOT CODED.  82200002
         AIF   ('&C' EQ 'C').LINKC  SEE IF IT A CONDITIONAL REQUEST.    82400002
         AIF   (('&C'(1,1) NE 'Y')AND('&C' NE '1')).LINKU  SEE IF THE  *82600002
                         REQUEST IS UNCONDITIONAL.                      82800002
.LINKC   BAL   14,&IGASTRE.(,14)  INDICATE CONDITIONAL GSPACE/GETMAIN.  83000002
         AGO   .TREE     ALL DONE NOW, EXCEPT FOR THE REGISTER TO      *83200002
                         CONTAIN THE TREE ADDRESS.                      83400002
.LINKU   LA    14,&IGASTRE.(,14)                                        83600002
         BALR  14,14     INDICATE UNCONDITIONAL GSPACE/GETMAIN.         83800002
.TREE    ANOP                                                           84000002
         AIF   (K'&TREE EQ 0).STR5R1   GO IF IT'S TO BE LEFT IN R1.     84200002
         AIF   ('&TREE'(1,1) NE '(').STR5L   GO IF IT'S NOT A REGISTER. 84400002
         AIF   ('&TREE' EQ '(1)').STR5R1  GO IF IT'S ALREADY THERE.     84600002
         LR    &TREE(1),1      SAVE THE TREE ADDRESS.                   84800002
         AGO   .STR5R1         MERGE.                                   85000002
.STR5L   ST    1,&TREE(1)  STORE THE TREE ADDRESS.                      85200002
.STR5R1  ANOP                                                           85400002
         AIF   ('&IGARPT#' NE '5').END  SEE IF THIS IS A TYPE 5 TREE.   85600002
      RPTDSECT T=5,DS=YES  GENERATE THE DSECT FOR TYPE 5 TREES.         85800002
.END     ANOP                                                           86000002
.FIN     ANOP                                                           86200002
         MEND                                                           86400002
