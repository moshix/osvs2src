         TITLE 'AMDPRAPP-EDIT FORMAT APPENDAGE INTERFACE               *00001000
                        '                                               00002000
AMDPRAPP CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRAPP  74.298'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @11,0                                               0001 00012000
@PSTART  LA    @05,4095(,@11)                                      0001 00013000
         USING @PSTART,@11                                         0001 00014000
         USING @PSTART+4095,@05                                    0001 00015000
         ST    @13,@SA00001+4                                      0001 00016000
         LA    @14,@SA00001                                        0001 00017000
         ST    @14,8(,@13)                                         0001 00018000
         LR    @13,@14                                             0001 00019000
         EQUATES                        AMDPRDMP EQU MACRO              00020000
         COMMON                         EXPANDS TO AMDPRCOM TABLE       00021000
AMDPRAPP CSECT                          RE-ESTABLISH AMDPRAPP CSECT     00022000
         USING COMMON,COMBASE           SET UP DSECT FOR AMDPRCOM       00023000
*   AEDITCBR=AEDITCB;               /* INITIALIZE AMDPRTAB PTR       */ 00024000
         L     AEDITCBR,AEDITCB                                    0085 00025000
*   APP='1'B;                       /* SET ON AMDPRAPP BIT           */ 00026000
         OI    APP(AEDITCBR),B'10000000'                           0086 00027000
*   LDSW=0;                         /* INIT SW TO ZERO               */ 00028000
         SLR   LDSW,LDSW                                           0087 00029000
*   WKAREA=WKAREA&&WKAREA;          /* ZERO WORK AREA          Y02014*/ 00030000
         L     @08,REENTWKA(,AEDITCBR)                             0088 00031000
         XC    WKAREA(200,@08),WKAREA(@08)                         0088 00032000
*   ABDPLPTR=REENTWKA;              /* PARMLIST IN WORK AREA   Y02014*/ 00033000
         LR    ABDPLPTR,@08                                        0089 00034000
*   ADPLSBPL='80'X;                 /* SET PARMLIST FLAGS      Y02014*/ 00035000
         MVI   ADPLSBPL(ABDPLPTR),X'80'                            0090 00036000
*   NSISAVE=COMPTR;                 /* SAVE ADDRS OF AMDPRCOM        */ 00037000
         ST    COMPTR,NSISAVE                                      0091 00038000
*   SPIESAVE=SVAREA;                /* FOR SPIE RECOVERY             */ 00039000
         L     @08,SVAREA(,AREAPTR)                                0092 00040000
         ST    @08,SPIESAVE                                        0092 00041000
*   IF(INREC(OFSTEID)&'F0'X)        /* IF EID INDICATES X'E'         */ 00042000
*       ='E0'X THEN                 /* THEN                          */ 00043000
         LH    @08,OFSTEID(,AEDITCBR)                              0093 00044000
         L     @03,CURREC(,AEDITCBR)                               0093 00045000
         ALR   @03,@08                                             0093 00046000
         AL    @03,@CF00475                                        0093 00047000
         MVC   @TS00001(1),INREC(@03)                              0093 00048000
         NI    @TS00001,X'F0'                                      0093 00049000
         CLI   @TS00001,X'E0'                                      0093 00050000
         BNE   @RF00093                                            0093 00051000
*     DO;                           /* DO THE FOLLOWING              */ 00052000
*       EXITNM=USRCON;              /* INSERT 'AMDUSR' INTO SLOT     */ 00053000
         MVI   EXITNM+6(AEDITCBR),C' '                             0095 00054000
         MVI   EXITNM+7(AEDITCBR),C' '                             0095 00055000
         MVC   EXITNM(6,AEDITCBR),USRCON                           0095 00056000
*       FIDTBPTR=ADDR(USRTABL);     /* INITIALIZE FID TBL PTR TO   0096 00057000
*                                      USRTABL                       */ 00058000
         LA    @08,USRTABL                                         0096 00059000
         ST    @08,FIDTBPTR                                        0096 00060000
*       LDSW=1;                     /* INDICATE 'AMDUSR' LOAD        */ 00061000
         LA    LDSW,1                                              0097 00062000
*       GOTO AMDPAPP2;              /* CONTINUE PROCESS              */ 00063000
         B     AMDPAPP2                                            0098 00064000
*     END;                                                         0099 00065000
*   IF INREC(6)>'05'X               /* IF SYSTEM FID> X'05'          */ 00066000
*     THEN                          /* THEN                          */ 00067000
@RF00093 L     @08,CURREC(,AEDITCBR)                               0100 00068000
         CLI   INREC+5(@08),X'05'                                  0100 00069000
         BNH   @RF00100                                            0100 00070000
*     DO;                           /* DO THE FOLLOWING              */ 00071000
*AMDPRTN:                                                          0102 00072000
*       APP='0'B;                   /* TURN OFF AMDPRAPP BIT         */ 00073000
AMDPRTN  NI    APP(AEDITCBR),B'01111111'                           0102 00074000
*       RETURN;                     /* RETURN TO AMDPRFLT            */ 00075000
@EL00001 L     @13,4(,@13)                                         0103 00076000
@EF00001 DS    0H                                                  0103 00077000
@ER00001 L     @14,12(,@13)                                        0103 00078000
         LM    @00,@12,20(@13)                                     0103 00079000
         BR    @14                                                 0103 00080000
*     END;                                                         0104 00081000
*   EXITNM=SYSCON;                  /* INSERT 'AMDSYS' INTO SLOT     */ 00082000
@RF00100 MVI   EXITNM+6(AEDITCBR),C' '                             0105 00083000
         MVI   EXITNM+7(AEDITCBR),C' '                             0105 00084000
         MVC   EXITNM(6,AEDITCBR),SYSCON                           0105 00085000
*   FIDTBPTR=ADDR(SYSTAB);          /* INITIALIZE FID TBL PTR TO   0106 00086000
*                                      SYSTAB                        */ 00087000
         LA    @08,SYSTAB                                          0106 00088000
         ST    @08,FIDTBPTR                                        0106 00089000
*AMDPAPP2:                                                         0107 00090000
*   INDEX=INREC(6)+1;               /* CALCULATE INDEX INTO FIDTB    */ 00091000
AMDPAPP2 L     @08,CURREC(,AEDITCBR)                               0107 00092000
         LA    @03,1                                               0107 00093000
         SLR   @00,@00                                             0107 00094000
         IC    @00,INREC+5(,@08)                                   0107 00095000
         ALR   @03,@00                                             0107 00096000
         ST    @03,INDEX                                           0107 00097000
*   IF ERRBIT(INDEX)='1'B           /* IF APPROPRIATE ERROR BIT      */ 00098000
*     THEN                          /* IS ON, THEN                   */ 00099000
         L     @08,FIDTBPTR                                        0108 00100000
         ALR   @03,@08                                             0108 00101000
         AL    @03,@CF00475                                        0108 00102000
         TM    ERRBIT(@03),B'00001000'                             0108 00103000
         BO    @RT00108                                            0108 00104000
*     GOTO AMDPRTN;                 /* RETURN TO AMDPRFLT            */ 00105000
*   IF HEXBIT(INDEX)='1'B           /* IF HEX BIT IS ON              */ 00106000
*     THEN                          /* THEN                          */ 00107000
         L     @03,INDEX                                           0110 00108000
         ALR   @08,@03                                             0110 00109000
         AL    @08,@CF00475                                        0110 00110000
         TM    HEXBIT(@08),B'10000000'                             0110 00111000
         BNO   @RF00110                                            0110 00112000
*     DO;                           /* DO THE FOLLOWING              */ 00113000
*       EXITADDR=AHEX;              /* SAVE ADDRS OF AMDPRHEX        */ 00114000
         L     @10,AFRMAD(,AEDITCBR)                               0112 00115000
         L     @10,AHEX(,@10)                                      0112 00116000
         ST    @10,EXITADDR(,AEDITCBR)                             0112 00117000
*       EXITNM='AMDPRHEX';          /* MOVE AMDPRHEX INTO EXITNM     */ 00118000
         MVC   EXITNM(8,AEDITCBR),@CC00391                         0113 00119000
*       GOTO AMDNOSPI;              /* NO SPIE AND CONTINUE SETUP    */ 00120000
         B     AMDNOSPI                                            0114 00121000
*     END;                                                         0115 00122000
*   RFY                                                            0116 00123000
*    (WREG6,                        /* NEED REG 6              Y02014*/ 00124000
*     WREG7) RSTD;                  /* NEED REG 7              Y02014*/ 00125000
*                                                                  0116 00126000
@RF00110 DS    0H                                                  0117 00127000
*   /*****************************************************************/ 00128000
*   /*                                                               */ 00129000
*   /* CALCULATE OUTPUT AREA ADDRESS                                 */ 00130000
*   /*                                                               */ 00131000
*   /*****************************************************************/ 00132000
*                                                                  0117 00133000
*   WREG6=ADDR(EXITNM)+6;                                          0117 00134000
*                                                                  0117 00135000
         LA    WREG6,EXITNM(,AEDITCBR)                             0117 00136000
         AL    WREG6,@CF00110                                      0117 00137000
*   /*****************************************************************/ 00138000
*   /*                                                               */ 00139000
*   /* OBTAIN FID ADDRESS ACCOUNTING FOR 0-ORIGIN OFFSET             */ 00140000
*   /*                                                               */ 00141000
*   /*****************************************************************/ 00142000
*                                                                  0118 00143000
*   WREG7=CURREC+6-1;                                              0118 00144000
         L     WREG7,CURREC(,AEDITCBR)                             0118 00145000
         SL    WREG7,@CF00463                                      0118 00146000
*   GEN(HEXCNVT  (6),(7),2);        /* CONVERT TO EBCDIC             */ 00147000
         HEXCNVT  (6),(7),2                                             00148000
*   IF LDSW=0 THEN                  /* SYS FORMAT APP          Y02014*/ 00149000
         LTR   LDSW,LDSW                                           0120 00150000
         BZ    @RT00120                                            0120 00151000
*     GOTO AMDPLOAD;                /* GO ATTEMP LOAD          Y02014*/ 00152000
*   IF HMDUSED(INDEX)='1'B THEN     /* VS1 VERSION FOUND       Y02014*/ 00153000
         L     @08,FIDTBPTR                                        0122 00154000
         L     @03,INDEX                                           0122 00155000
         ALR   @03,@08                                             0122 00156000
         AL    @03,@CF00475                                        0122 00157000
         TM    HMDUSED(@03),B'00100000'                            0122 00158000
         BO    @RT00122                                            0122 00159000
*     GO TO USEHMD;                 /* GO LOAD VS1 VERSION     Y02014*/ 00160000
*   IF IMDUSED(INDEX)='1'B THEN     /* OS VERSION FOUND        Y02014*/ 00161000
         L     @03,INDEX                                           0124 00162000
         ALR   @08,@03                                             0124 00163000
         AL    @08,@CF00475                                        0124 00164000
         TM    IMDUSED(@08),B'00010000'                            0124 00165000
         BNO   @RF00124                                            0124 00166000
*     DO;                           /* YES                     Y02014*/ 00167000
*       LDSW=2;                     /* INDICATE OS VERSION     Y02014*/ 00168000
         LA    LDSW,2                                              0126 00169000
*       GOTO USEIMD;                /* GO LOAD OS VERSION      Y02014*/ 00170000
         B     USEIMD                                              0127 00171000
*     END;                          /*                         Y02014*/ 00172000
*AMDPLOAD:                                                         0129 00173000
*   PARMPTR=-ADDR(EXITNM);          /* PARM FOR CALL TO AMDPRSEG     */ 00174000
@RF00124 DS    0H                                                  0129 00175000
AMDPLOAD LA    PARMPTR,EXITNM(,AEDITCBR)                           0129 00176000
         LCR   PARMPTR,PARMPTR                                     0129 00177000
*   RFY                                                            0130 00178000
*    (WREG6,                                                       0130 00179000
*     WREG7) UNRSTD;                /*                         Y02014*/ 00180000
*   CALL AMDPRSEG;                  /* ATTEMPT TO HAVE FORMAT      0131 00181000
*                                      APPENDAGE LOADED              */ 00182000
         L     @15,ALOADER                                         0131 00183000
         BALR  @14,@15                                             0131 00184000
*   RFY                                                            0132 00185000
*    (CODEREG) RSTD;                /*                         Y02014*/ 00186000
*   IF CODEREG=0 THEN               /* SUCCESSFUL LOAD OR MODULE     */ 00187000
         LTR   CODEREG,CODEREG                                     0133 00188000
         BZ    @RT00133                                            0133 00189000
*     GOTO AMDPAPP5;                /* ALREADY IN CORE               */ 00190000
*   IF CODEREG=4 THEN                                              0135 00191000
         C     CODEREG,@CF00099                                    0135 00192000
         BNE   @RF00135                                            0135 00193000
*     DO;                           /* UNSUCCESSFUL LOAD             */ 00194000
*       SYNMSGA=ADDR(AMDPRE12);     /* ADDR OF MSG AMD229I           */ 00195000
         L     @14,AFMG(,AEDITCBR)                                 0137 00196000
         LA    @14,AMDPRE12(,@14)                                  0137 00197000
         ST    @14,SYNMSGA                                         0137 00198000
*       ERRBUF(20:27)=EXITNM;       /* MOVE IN RTN NAME              */ 00199000
         L     @14,MSGADDR(,@14)                                   0138 00200000
         MVC   ERRBUF+19(8,@14),EXITNM(AEDITCBR)                   0138 00201000
*       GEN(OI SWD,NOSTDMG);        /* NO STND MSG BIT               */ 00202000
         OI SWD,NOSTDMG                                                 00203000
*       CALL AMDPRSYN;              /* OUTPUT MSG FOR > 10K RTN      */ 00204000
         L     @15,ASYNTAX                                         0140 00205000
         BALR  @14,@15                                             0140 00206000
*       GOTO AMDPAPP3;              /* CHECK TYPE OF DATA SET        */ 00207000
         B     AMDPAPP3                                            0141 00208000
*     END;                                                         0142 00209000
*   IF CODEREG=8 THEN               /* MODULE NOT FOUND              */ 00210000
@RF00135 C     CODEREG,@CF00044                                    0143 00211000
         BNE   @RF00143                                            0143 00212000
*     DO;                           /* DO THE FOLLOWING              */ 00213000
*USEHMD:                                                           0145 00214000
*       IF LDSW=1 THEN              /* TRY LOADING VS1 VERSION Y02014*/ 00215000
USEHMD   C     LDSW,@CF00046                                       0145 00216000
         BNE   @RF00145                                            0145 00217000
*         DO;                                                      0146 00218000
*           EXITNM(1:1)=HMDPREF;    /* USE VS1 NAME            Y02014*/ 00219000
         MVC   EXITNM(1,AEDITCBR),HMDPREF                          0147 00220000
*           LDSW=2;                 /* INDICATE LOAD VS1       Y02014*/ 00221000
         LA    LDSW,2                                              0148 00222000
*           WHOUSED(INDEX)='10'B;   /* INDICATE VS1            Y02014*/ 00223000
         L     @14,FIDTBPTR                                        0149 00224000
         AL    @14,INDEX                                           0149 00225000
         AL    @14,@CF00475                                        0149 00226000
         NI    WHOUSED(@14),B'11101111'                            0149 00227000
         OI    WHOUSED(@14),B'00100000'                            0149 00228000
*           GOTO AMDPLOAD;          /* GO ATTEMPT LOAD         Y02014*/ 00229000
         B     AMDPLOAD                                            0150 00230000
*         END;                      /*                         Y02014*/ 00231000
*USEIMD:                                                           0152 00232000
*       IF LDSW=2 THEN              /* TRY LOADING OS VERSION  Y02014*/ 00233000
@RF00145 DS    0H                                                  0152 00234000
USEIMD   C     LDSW,@CF00079                                       0152 00235000
         BNE   @RF00152                                            0152 00236000
*         DO;                       /*                         Y02014*/ 00237000
*           EXITNM(1:1)=IMDPREF;    /* INDICATE IMD VERSION    Y02014*/ 00238000
         MVC   EXITNM(1,AEDITCBR),IMDPREF                          0154 00239000
*           LDSW=3;                 /* OS VERSION TRIED        Y02014*/ 00240000
         LA    LDSW,3                                              0155 00241000
*           WHOUSED(INDEX)='01'B;   /* INDICATE OS VERSION     Y02014*/ 00242000
         L     @14,FIDTBPTR                                        0156 00243000
         AL    @14,INDEX                                           0156 00244000
         AL    @14,@CF00475                                        0156 00245000
         NI    WHOUSED(@14),B'11011111'                            0156 00246000
         OI    WHOUSED(@14),B'00010000'                            0156 00247000
*           GO TO AMDPLOAD;         /* GO ATTEMPT LOAD         Y02014*/ 00248000
         B     AMDPLOAD                                            0157 00249000
*         END;                                                     0158 00250000
*       IF LDSW=3 THEN              /* AMD|HMD|IMD VERSIONS    Y02014*/ 00251000
@RF00152 C     LDSW,@CF00169                                       0159 00252000
         BNE   @RF00159                                            0159 00253000
*         DO;                       /* NOT FOUND               Y02014*/ 00254000
*           EXITNM(1:1)=AMDPREF;    /* AMD NAME FOR MSG        Y02014*/ 00255000
         MVC   EXITNM(1,AEDITCBR),AMDPREF                          0161 00256000
*           WHOUSED(INDEX)='00'B;   /* INDICATE NONE FOUND     Y02014*/ 00257000
         L     @14,FIDTBPTR                                        0162 00258000
         AL    @14,INDEX                                           0162 00259000
         AL    @14,@CF00475                                        0162 00260000
         NI    WHOUSED(@14),B'11001111'                            0162 00261000
*         END;                                                     0163 00262000
*AMDPHDMP:                                                         0164 00263000
*       SYNMSGA=ADDR(AMDPRE06);     /* ADDRS OF ADDRS OF MSG         */ 00264000
@RF00159 DS    0H                                                  0164 00265000
AMDPHDMP L     @14,AFMG(,AEDITCBR)                                 0164 00266000
         LA    @14,AMDPRE06(,@14)                                  0164 00267000
         ST    @14,SYNMSGA                                         0164 00268000
*       ERRBUF(37:44)=              /* MOVE IN NAME OF MODULE IN     */ 00269000
*           EXITNM;                 /* ERROR                         */ 00270000
         L     @14,MSGADDR(,@14)                                   0165 00271000
         MVC   ERRBUF+36(8,@14),EXITNM(AEDITCBR)                   0165 00272000
*       GEN(OI  SWD,NOSTDMG);       /* TURN ON NO STANDARD MSG BT    */ 00273000
         OI  SWD,NOSTDMG                                                00274000
*       CALL AMDPRSYN;              /* OUTPUT HEX DUMP MESSAGE       */ 00275000
         L     @15,ASYNTAX                                         0167 00276000
         BALR  @14,@15                                             0167 00277000
*       HEXBIT(INDEX)='1'B;         /* SET ON HEX DUMP BIT           */ 00278000
         L     @14,FIDTBPTR                                        0168 00279000
         AL    @14,INDEX                                           0168 00280000
         AL    @14,@CF00475                                        0168 00281000
         OI    HEXBIT(@14),B'10000000'                             0168 00282000
*       CALL PRHEX;                 /* DUMP RECORD IN HEX            */ 00283000
         L     @10,AFRMAD(,AEDITCBR)                               0169 00284000
         L     @15,AHEX(,@10)                                      0169 00285000
         BALR  @14,@15                                             0169 00286000
*       GOTO AMDPRTN;               /* PREPARE FOR RETURN            */ 00287000
         B     AMDPRTN                                             0170 00288000
*     END;                                                         0171 00289000
*   RFY                                                            0172 00290000
*    (CODEREG) UNRSTD;              /*                         Y02014*/ 00291000
*   GOTO AMDPAPP4;                  /* CODE OF 12 OR 16, SO TERM     */ 00292000
         B     AMDPAPP4                                            0173 00293000
*AMDPAPP3:                                                         0174 00294000
*   IF DDNAME=BLANK1 THEN           /* IF NO DDNAME (DUMP DATA       */ 00295000
AMDPAPP3 CLC   DDNAME(8,AEDITCBR),BLANK1                           0174 00296000
         BE    @RT00174                                            0174 00297000
*     GOTO AMDPHDMP;                /* SET), HEX DUMP BIT ON         */ 00298000
*AMDPAPP4:                                                         0176 00299000
*   TERM='1'B;                      /* SET ON TERMINATION BIT        */ 00300000
AMDPAPP4 OI    TERM(AEDITCBR),B'01000000'                          0176 00301000
*   SYNMSGA=ADDR(AMDPRE05);         /* ADDRS OF ADDRS OF MSG         */ 00302000
         L     @10,AFMG(,AEDITCBR)                                 0177 00303000
         LA    @10,AMDPRE05(,@10)                                  0177 00304000
         ST    @10,SYNMSGA                                         0177 00305000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00306000
         OI  SWD,NOSTDMG                                                00307000
*   CALL AMDPRSYN;                  /* OUTPUT APPRORIATE ERR MSG     */ 00308000
         L     @15,ASYNTAX                                         0179 00309000
         BALR  @14,@15                                             0179 00310000
*   GOTO AMDPRTN;                   /* PREPARE FOR RETURN            */ 00311000
         B     AMDPRTN                                             0180 00312000
*AMDPAPP5:                                                         0181 00313000
*   EXITADDR=PARMPTR;               /* SAVE ENTRY POINT ADDRS        */ 00314000
AMDPAPP5 ST    PARMPTR,EXITADDR(,AEDITCBR)                         0181 00315000
*   ITEMPREC(1:256)='';             /* BLANK TEMP REC          Y02014*/ 00316000
         MVI   ITEMPREC,C' '                                       0182 00317000
         MVC   ITEMPREC+1(255),ITEMPREC                            0182 00318000
*   ITEMPREC(257:284)='';           /* BLANK TEMP REC          Y02014*/ 00319000
         MVI   ITEMPREC+256,C' '                                   0183 00320000
         MVC   ITEMPREC+257(27),ITEMPREC+256                       0183 00321000
*   IF RECDLL<=256 THEN             /* ONE MOVE NEEDED         Y02014*/ 00322000
         L     @10,RECDLL-1(,AEDITCBR)                             0184 00323000
         LA    @10,0(,@10)                                         0184 00324000
         C     @10,@CF00121                                        0184 00325000
         BH    @RF00184                                            0184 00326000
*     ITEMPREC(1:RECDLL)=INREC(1:RECDLL);/*                    Y02014*/ 00327000
         BCTR  @10,0                                               0185 00328000
         L     @08,CURREC(,AEDITCBR)                               0185 00329000
         EX    @10,@SM00483                                        0185 00330000
*   ELSE                                                           0186 00331000
*     DO;                           /* TWO MOVES NEEDED        Y02014*/ 00332000
         B     @RC00184                                            0186 00333000
@RF00184 DS    0H                                                  0187 00334000
*       ITEMPREC(1:256)=INREC(1:256);/* MOVE 256 BYTES         Y02014*/ 00335000
         L     @10,CURREC(,AEDITCBR)                               0187 00336000
         MVC   ITEMPREC(256),INREC(@10)                            0187 00337000
*       ITEMPREC(257:RECDLL)=INREC(257:RECDLL);/* MOVE REST          */ 00338000
         L     @08,RECDLL-1(,AEDITCBR)                             0188 00339000
         LA    @08,0(,@08)                                         0188 00340000
         SL    @08,@CF00414                                        0188 00341000
         EX    @08,@SM00485                                        0188 00342000
*     END;                          /* OF RECORD               Y02014*/ 00343000
*                                                                  0189 00344000
*   /*****************************************************************/ 00345000
*   /*                                                               */ 00346000
*   /* CONSTRUCT PARAMETER LIST                                      */ 00347000
*   /*                                                               */ 00348000
*   /*****************************************************************/ 00349000
*                                                                  0190 00350000
*   RECPTR=ADDR(ITEMPREC);          /* WORD 1 OF PARAMETER LIST    0190 00351000
*                                                              Y02014*/ 00352000
@RC00184 LA    @10,ITEMPREC                                        0190 00353000
         ST    @10,RECPTR                                          0190 00354000
*   BUFPTR=CURBUF+11;               /* WORD 2 OF PARAMETER LIST      */ 00355000
         LA    @08,11                                              0191 00356000
         L     @03,CURBUF                                          0191 00357000
         ALR   @03,@08                                             0191 00358000
         ST    @03,BUFPTR                                          0191 00359000
*   GTFOPTR=GTFWDPTR;               /* WORD 3 OF PARAMETER LIST      */ 00360000
         L     @03,GTFWDPTR(,AEDITCBR)                             0192 00361000
         ST    @03,GTFOPTR                                         0192 00362000
*   EIDPTR=RECPTR+OFSTEID-1;        /* WORD 4 OF PARAMETER LIST      */ 00363000
         LH    @03,OFSTEID(,AEDITCBR)                              0193 00364000
         LR    @00,@10                                             0193 00365000
         ALR   @00,@03                                             0193 00366000
         BCTR  @00,0                                               0193 00367000
         ST    @00,EIDPTR                                          0193 00368000
*   IF(INREC(OFSTEID)&'F0'X)='E0'X THEN/*                    @YM07434*/ 00369000
         L     @15,CURREC(,AEDITCBR)                               0194 00370000
         ALR   @15,@03                                             0194 00371000
         AL    @15,@CF00475                                        0194 00372000
         MVC   @TS00001(1),INREC(@15)                              0194 00373000
         NI    @TS00001,X'F0'                                      0194 00374000
         CLI   @TS00001,X'E0'                                      0194 00375000
         BNE   @RF00194                                            0194 00376000
*     DATAPTR=RECPTR+OFSTDATA+11;   /* WORD 5 OF PARAMETER LIST    0195 00377000
*                                                            @YM07434*/ 00378000
         AH    @10,OFSTDATA(,AEDITCBR)                             0195 00379000
         ALR   @10,@08                                             0195 00380000
         ST    @10,DATAPTR                                         0195 00381000
*   ELSE                                                           0196 00382000
*     DATAPTR=RECPTR+OFSTDATA-1;    /* WORD 5 OF PARAMETER LIST    0196 00383000
*                                                            @YM07434*/ 00384000
         B     @RC00194                                            0196 00385000
@RF00194 LH    @10,OFSTDATA(,AEDITCBR)                             0196 00386000
         AL    @10,RECPTR                                          0196 00387000
         BCTR  @10,0                                               0196 00388000
         ST    @10,DATAPTR                                         0196 00389000
*   FRMADDR=PRFMTADD;               /* ADDR AMDPRFMT           Y02014*/ 00390000
@RC00194 L     @10,PRFMTADD(,AEDITCBR)                             0197 00391000
         ST    @10,FRMADDR                                         0197 00392000
*   ADPLFRMT=PRFMTADD;              /* ADDR AMDPRFMT           Y02014*/ 00393000
         ST    @10,ADPLFRMT(,ABDPLPTR)                             0198 00394000
*   WKAREADD=REENTWKA+LENGTH(ABDPL);/* ADDR WORK AREA          Y02014*/ 00395000
         L     @10,REENTWKA(,AEDITCBR)                             0199 00396000
         LA    @08,56                                              0199 00397000
         ALR   @08,@10                                             0199 00398000
         ST    @08,WKAREADD                                        0199 00399000
*   SNAPPARM=REENTWKA;              /* ADDR SNAP PARMS         Y02014*/ 00400000
         ST    @10,SNAPPARM                                        0200 00401000
*   ADPLBUF=CURBUF+1;               /* SNAP PARM PTRS TO BUF   Y02014*/ 00402000
         LA    @10,1                                               0201 00403000
         AL    @10,CURBUF                                          0201 00404000
         ST    @10,ADPLBUF(,ABDPLPTR)                              0201 00405000
*AMDPREDR:                                                         0202 00406000
*   IF EDITER=3 THEN                /* IF ER PARM =3, THEN     Y02014*/ 00407000
AMDPREDR CLI   EDITER,3                                            0202 00408000
         BE    @RT00202                                            0202 00409000
*     GOTO AMDNOSPI;                /* BYPASS SPIE             Y02014*/ 00410000
*AMDPCAL:                                                          0204 00411000
*   GENERATE;                                                      0204 00412000
AMDPCAL  DS    0H                                                  0204 00413000
*                                       /* ISSUE SPIE                */ 00414000
         SPIE  AMDPRSPI,((1,15)) SPIE FOR ALL PGM CHECKS                00415000
*AMDPPCA:                                                          0205 00416000
*   PICASAVE=PARMPTR;               /* SAVE ADDRS OF PREV PICA       */ 00417000
AMDPPCA  ST    PARMPTR,PICASAVE                                    0205 00418000
*AMDNOSPI:                                                         0206 00419000
*   PARMPTR=ADDR(PLIST);            /* REG1 PTR PARM LIST      Y02014*/ 00420000
AMDNOSPI LA    PARMPTR,PLIST                                       0206 00421000
*   GEN(STM  R0,R14,LOCAREA);       /* SAVE OWN REGISTERS            */ 00422000
         STM  R0,R14,LOCAREA                                            00423000
*   CALL USERRTN;                   /* CALL EXIT, FMT APP, OR PRHEX  */ 00424000
         L     @15,EXITADDR(,AEDITCBR)                             0208 00425000
         BALR  @14,@15                                             0208 00426000
*   GENERATE;                                                      0209 00427000
         BALR  R7,R0                    ESTABLISH TEMP ADDRESSABILITY   00428000
         USING *,R7                     IN CASE USR RTN DESTROYED REGS  00429000
         LM  R0,R14,LOCAREA             RESTORE REGS                    00430000
         DROP  R7                       RE-ESTABLISH ORIG BASE REG      00431000
         ST    CODEREG,CODESAVE         SAVE RETURN CODE                00432000
*   IF EDITER^=3                    /* WAS SPIE ISSUED         Y02014*/ 00433000
*       &EXITNM^='AMDPRHEX' THEN                                   0210 00434000
         CLI   EDITER,3                                            0210 00435000
         BE    @RF00210                                            0210 00436000
         CLC   EXITNM(8,AEDITCBR),@CC00391                         0210 00437000
         BE    @RF00210                                            0210 00438000
*     DO;                           /*                         Y02014*/ 00439000
*       PARMPTR=PICASAVE;           /* RESTORE PICA ADDR       Y02014*/ 00440000
         L     PARMPTR,PICASAVE                                    0212 00441000
*       GEN(SPIE MF=(E,(R1)));      /* RESTORE SPIE            Y02014*/ 00442000
         SPIE MF=(E,(R1))                                               00443000
*     END;                                                         0214 00444000
*   IF CODESAVE=0 THEN              /* RETURN CODE OF 0 INDICATES    */ 00445000
@RF00210 L     @10,CODESAVE                                        0215 00446000
         LTR   @10,@10                                             0215 00447000
         BNZ   @RF00215                                            0215 00448000
*     DO;                           /* ANOTHER CALL TO ROUTINE       */ 00449000
*       CALL AMDPRDNT;              /* ALIGN OUTPUT CORRECTLY        */ 00450000
         BAL   @14,AMDPRDNT                                        0217 00451000
*       GEN(BRWRITE 1);             /* OUTPUT BUFFER CONTENTS        */ 00452000
         BRWRITE 1                                                      00453000
*       BUFPTR=CURBUF+11;           /* NEW OUTPUT BUFFER IN USE      */ 00454000
         L     @10,CURBUF                                          0219 00455000
         LA    @08,11                                              0219 00456000
         ALR   @08,@10                                             0219 00457000
         ST    @08,BUFPTR                                          0219 00458000
*       ADPLBUF=CURBUF+1;           /* UPDATE SNAP PARM        Y02014*/ 00459000
         AL    @10,@CF00046                                        0220 00460000
         ST    @10,ADPLBUF(,ABDPLPTR)                              0220 00461000
*       GOTO AMDPREDR;              /* CALL FMT APPENDAGE AGAIN      */ 00462000
         B     AMDPREDR                                            0221 00463000
*     END;                                                         0222 00464000
*   IF CODESAVE=4 THEN              /* RETURN CODE OF 4 INDICATES    */ 00465000
@RF00215 CLC   CODESAVE(4),@CF00099                                0223 00466000
         BNE   @RF00223                                            0223 00467000
*     DO;                           /* CURRENT OUTPUT COMPLETE       */ 00468000
*       CALL AMDPRDNT;              /* ALIGN OUTPUT CORRECTLY        */ 00469000
         BAL   @14,AMDPRDNT                                        0225 00470000
*       GEN(BRWRITE 1);             /* OUTPUT BUFFER CONTENTS        */ 00471000
         BRWRITE 1                                                      00472000
*       IF OPTTIME='0'B THEN        /* IF NO TIME STAMP IN REC Y02014*/ 00473000
         L     @10,GTFWDPTR(,AEDITCBR)                             0227 00474000
         TM    OPTTIME(@10),B'00000001'                            0227 00475000
         BZ    @RT00227                                            0227 00476000
*         GOTO AMDPRTN;             /* THEN PREPARE FOR RETURN       */ 00477000
*       CALL PRTME;                 /* HAVE TIME STAMP FORMATTED     */ 00478000
         L     @10,AFRMAD(,AEDITCBR)                               0229 00479000
         L     @15,ATME(,@10)                                      0229 00480000
         BALR  @14,@15                                             0229 00481000
*       GEN(BRWRITE 1);             /* OUTPUT BUFFER CONTENTS        */ 00482000
         BRWRITE 1                                                      00483000
*       GOTO AMDPRTN;               /* PREPARE FOR RETURN            */ 00484000
         B     AMDPRTN                                             0231 00485000
*     END;                                                         0232 00486000
*   IF CODESAVE=8                   /* IF RETURN CODE OF 8, THEN     */ 00487000
*     THEN                                                         0233 00488000
@RF00223 CLC   CODESAVE(4),@CF00044                                0233 00489000
         BNE   @RF00233                                            0233 00490000
*     DO;                           /* DO THE FOLLOWING              */ 00491000
*       RET='0'B;                   /* RESET INDENTING SWITCH        */ 00492000
         NI    RET(AEDITCBR),B'11110111'                           0235 00493000
*       BLDBUF=BLANK1;              /* BLANK OUTPUT BUFFER           */ 00494000
         L     @10,CURBUF                                          0236 00495000
         MVI   BLDBUF+10(@10),C' '                                 0236 00496000
         MVC   BLDBUF+11(109,@10),BLDBUF+10(@10)                   0236 00497000
         MVC   BLDBUF(10,@10),BLANK1                               0236 00498000
*       GOTO AMDPRTN;               /* IGNORE THIS RECORD            */ 00499000
         B     AMDPRTN                                             0237 00500000
*     END;                                                         0238 00501000
*   IF CODESAVE=12 THEN             /* RC =12                  Y02014*/ 00502000
@RF00233 CLC   CODESAVE(4),@CF00076                                0239 00503000
         BNE   @RF00239                                            0239 00504000
*     DO;                           /* YES                     Y02014*/ 00505000
*       CALL PRHEX;                 /* DUMP RECORD IN HEX      Y02014*/ 00506000
         L     @10,AFRMAD(,AEDITCBR)                               0241 00507000
         L     @15,AHEX(,@10)                                      0241 00508000
         BALR  @14,@15                                             0241 00509000
*       RET='0'B;                   /* RESET IDENT SWITCH      Y02014*/ 00510000
         NI    RET(AEDITCBR),B'11110111'                           0242 00511000
*       BLDBUF=BLANK1;              /* BLANK OUTPUT BUFF       Y02014*/ 00512000
         L     @10,CURBUF                                          0243 00513000
         MVI   BLDBUF+10(@10),C' '                                 0243 00514000
         MVC   BLDBUF+11(109,@10),BLDBUF+10(@10)                   0243 00515000
         MVC   BLDBUF(10,@10),BLANK1                               0243 00516000
*       GOTO AMDPRTN;               /* PREPARE FOR RETURN      Y02014*/ 00517000
         B     AMDPRTN                                             0244 00518000
*     END;                          /*                         Y02014*/ 00519000
*   SYNMSGA=ADDR(AMDPRE03);         /* ADDRS OF ADDRS OF MSG         */ 00520000
@RF00239 L     @10,AFMG(,AEDITCBR)                                 0246 00521000
         LA    @10,AMDPRE03(,@10)                                  0246 00522000
         ST    @10,SYNMSGA                                         0246 00523000
*   RFY                                                            0247 00524000
*    (WREG6,                                                       0247 00525000
*     WREG7) RSTD;                  /*                         Y02014*/ 00526000
*   WREG6=MSGADDR;                  /* OBTAIN ADDRESS OF MESSAGE     */ 00527000
         L     WREG6,MSGADDR(,@10)                                 0248 00528000
*   GEN(BRWRITE SKIP);              /* SKIP TO NEW PAGE              */ 00529000
         BRWRITE SKIP                                                   00530000
*   GENERATE;                                                      0250 00531000
         LA  WREG6,39(WREG6)         OBTAIN ADDRESS OF RC PLACEMENT     00532000
         LA  WREG7,CODESAVE             OBTAIN INPUT ADDRESS            00533000
         HEXCNVT (6),(7),4              CONVERT TO EBCDIC               00534000
*   ERRBUF(64:71)                   /* MOVE IN FMT APPENDAGE NAME    */ 00535000
*       =EXITNM;                                                   0251 00536000
         L     @10,SYNMSGA                                         0251 00537000
         L     @10,MSGADDR(,@10)                                   0251 00538000
         MVC   ERRBUF+63(8,@10),EXITNM(AEDITCBR)                   0251 00539000
*   GENERATE;                                                      0252 00540000
         L     R6,PAGENUMB              PREPARE FOR CVD                 00541000
         CVD   R6,DBLWORD               CONVERT PAGE NO TO DECIMAL      00542000
         UNPK  COMP4(4),DBLWORD+6(2) CONVERT TO EBCDIC                  00543000
         OI    COMP4+3,X'F0'      STRIP '0'B ZONE                       00544000
*   ERRBUF(24:27)                   /* MOVE PRINTABLE RETURN CODE    */ 00545000
*       =COMP4;                     /* INTO RC MSG                   */ 00546000
         L     @10,SYNMSGA                                         0253 00547000
         L     @10,MSGADDR(,@10)                                   0253 00548000
         MVC   ERRBUF+23(4,@10),COMP4                              0253 00549000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00550000
         OI  SWD,NOSTDMG                                                00551000
*   CALL AMDPRSYN;                  /* OUTPUT INVALID RC MSG         */ 00552000
         L     @15,ASYNTAX                                         0255 00553000
         BALR  @14,@15                                             0255 00554000
*   RFY                                                            0256 00555000
*    (WREG6,                                                       0256 00556000
*     WREG7) UNRSTD;                /*                         Y02014*/ 00557000
*   IF EDITER^=0 THEN               /* IF 'ER=0' NOT SPECIFIED,      */ 00558000
         CLI   EDITER,0                                            0257 00559000
         BNE   @RT00257                                            0257 00560000
*     GOTO AMDPERR;                 /* CHECK FURTHER                 */ 00561000
*   ERRBIT(INDEX)='1'B;             /* SET ON APPROP ERROR BIT       */ 00562000
         L     @10,FIDTBPTR                                        0259 00563000
         AL    @10,INDEX                                           0259 00564000
         AL    @10,@CF00475                                        0259 00565000
         OI    ERRBIT(@10),B'00001000'                             0259 00566000
*   SYNMSGA=ADDR(AMDPRE04);         /* ADDRS OF ADDRS OF MSG         */ 00567000
         L     @10,AFMG(,AEDITCBR)                                 0260 00568000
         LA    @10,AMDPRE04(,@10)                                  0260 00569000
         ST    @10,SYNMSGA                                         0260 00570000
*   ERRBUF(54:61)                   /* MOVE IN RTN NAME TO           */ 00571000
*       =EXITNM;                    /* INTERFACE IGNORED MSG         */ 00572000
         L     @10,MSGADDR(,@10)                                   0261 00573000
         MVC   ERRBUF+53(8,@10),EXITNM(AEDITCBR)                   0261 00574000
*AMDPERMG:                                                         0262 00575000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00576000
AMDPERMG OI  SWD,NOSTDMG                                                00577000
*   CALL AMDPRSYN;                  /* OUTPUT ERROR MESSAGE          */ 00578000
         L     @15,ASYNTAX                                         0263 00579000
         BALR  @14,@15                                             0263 00580000
*   CALL PRHEX;                     /* DUMP RECORD IN HEX            */ 00581000
         L     @10,AFRMAD(,AEDITCBR)                               0264 00582000
         L     @15,AHEX(,@10)                                      0264 00583000
         BALR  @14,@15                                             0264 00584000
*   GEN(BRWRITE SKIP);              /* SKIP TO NEW PAGE              */ 00585000
         BRWRITE SKIP                                                   00586000
*   GOTO AMDPRTN;                   /* PREPARE FOR RETURN            */ 00587000
         B     AMDPRTN                                             0266 00588000
*AMDPERR:                                                          0267 00589000
*   IF EDITER^=1 THEN               /* IF 'ER=1' NOT SPECIFIED,      */ 00590000
AMDPERR  CLI   EDITER,1                                            0267 00591000
         BE    @RF00267                                            0267 00592000
*     DO;                           /* DO THE FOLLOWING              */ 00593000
*       TERM='1'B;                  /* SET ON TERM BIT               */ 00594000
         OI    TERM(AEDITCBR),B'01000000'                          0269 00595000
*       SYNMSGA=ADDR(AMDPRE05);     /* ADDRS OF ADDRS OF MSG         */ 00596000
         L     @10,AFMG(,AEDITCBR)                                 0270 00597000
         LA    @10,AMDPRE05(,@10)                                  0270 00598000
         ST    @10,SYNMSGA                                         0270 00599000
*       GOTO AMDPERMG;              /* OUTPUT ERROR MESSAGE          */ 00600000
         B     AMDPERMG                                            0271 00601000
*     END;                                                         0272 00602000
*   HEXBIT(INDEX)='1'B;             /* 'ER=1' SO SET ON HEX BIT      */ 00603000
@RF00267 L     @10,FIDTBPTR                                        0273 00604000
         AL    @10,INDEX                                           0273 00605000
         AL    @10,@CF00475                                        0273 00606000
         OI    HEXBIT(@10),B'10000000'                             0273 00607000
*   SYNMSGA=ADDR(AMDPRE06);         /* ADDRS OF ADDRS OF MSG         */ 00608000
         L     @10,AFMG(,AEDITCBR)                                 0274 00609000
         LA    @10,AMDPRE06(,@10)                                  0274 00610000
         ST    @10,SYNMSGA                                         0274 00611000
*   ERRBUF(37:44)                   /* MOVE IN RTN NAME              */ 00612000
*       =EXITNM;                                                   0275 00613000
         L     @10,MSGADDR(,@10)                                   0275 00614000
         MVC   ERRBUF+36(8,@10),EXITNM(AEDITCBR)                   0275 00615000
*   GOTO AMDPERMG;                  /* OUTPUT ERROR MSG              */ 00616000
         B     AMDPERMG                                            0276 00617000
*/********************************************************************/ 00618000
*/*  THE FOLLOWING SUBROUTINE ACCOMPLISHES THE IDENTIFICATION OF USER*/ 00619000
*/*  TRACE RECORDS, AND THE INSERTION OF THE EID IN PRINTABLE FORMAT */ 00620000
*/*  AT THE BEGINNING OF EACH USER TRACE RECORD.  OUTPUT LINES       */ 00621000
*/*  BEYOND THE FIRST LINE ARE INDENTED TO ALLOW EASY IDENTIFICATION */ 00622000
*/*  OF COMPLETE USER RECORDS.                                       */ 00623000
*/********************************************************************/ 00624000
*                                                                  0277 00625000
*AMDPRDNT:                                                         0277 00626000
*   PROC;                                                          0277 00627000
AMDPRDNT STM   @14,@12,@SA00002                                    0277 00628000
*   DCL                                                            0278 00629000
*     AMDPNSI LABEL;                /* LABEL IN SPIE ROUTINE         */ 00630000
*   RFY                                                            0279 00631000
*    (PARMPTR,                      /* PARM LIST POINTER             */ 00632000
*     WREG6,                        /* WORK REGISTER                 */ 00633000
*     WREG7,                        /* WORK REGISTER                 */ 00634000
*     AEDITCBR,                     /* POINTER TO AMDPRTAB           */ 00635000
*     COMPTR) RSTD;                 /* POINTER TO COM          Y02014*/ 00636000
*   CALL AMDTMCHK;                  /* OUTPUT TIME STAMP, IF NEC     */ 00637000
         BAL   @14,AMDTMCHK                                        0280 00638000
*   IF(INREC(OFSTEID)&'F0'X)        /* IF EID IS NOT X'E' (USR       */ 00639000
*       ^='E0'X THEN                /* EID), THEN                    */ 00640000
         LH    @10,OFSTEID(,AEDITCBR)                              0281 00641000
         L     @08,CURREC(,AEDITCBR)                               0281 00642000
         ALR   @10,@08                                             0281 00643000
         AL    @10,@CF00475                                        0281 00644000
         MVC   @TS00001(1),INREC(@10)                              0281 00645000
         NI    @TS00001,X'F0'                                      0281 00646000
         CLI   @TS00001,X'E0'                                      0281 00647000
         BNE   @RT00281                                            0281 00648000
*     RETURN;                       /* RETURN TO CALLER              */ 00649000
*   IF RET='1'B THEN                /* IF FORMATTING MULTIPLE        */ 00650000
         TM    RET(AEDITCBR),B'00001000'                           0283 00651000
         BO    @RT00283                                            0283 00652000
*     GOTO AMDPDNT1;                /* LINES, SPECIAL ACTION         */ 00653000
*   OTEMPREC=USRINFO;               /* COPY USER OUTPUT        Y02014*/ 00654000
         L     @10,CURBUF                                          0285 00655000
         MVC   OTEMPREC(110),USRINFO(@10)                          0285 00656000
*   USRINFO='';                     /* BLANK OUTPUT BUFFER     Y02014*/ 00657000
         MVI   USRINFO(@10),C' '                                   0286 00658000
         MVC   USRINFO+1(109,@10),USRINFO(@10)                     0286 00659000
*   ASCBPTR=CURREC+OFSTDATA-1;      /* ASCBPTR                 Y02014*/ 00660000
         LH    @10,OFSTDATA(,AEDITCBR)                             0287 00661000
         ALR   @10,@08                                             0287 00662000
         BCTR  @10,0                                               0287 00663000
         ST    @10,ASCBPTR                                         0287 00664000
*   JOBNPTR=ASCBPTR+4;              /* JOBNAME PTR             Y02014*/ 00665000
         AL    @10,@CF00099                                        0288 00666000
         ST    @10,JOBNPTR                                         0288 00667000
*   DATAPTR5=CURREC+OFSTEID-1;      /* INITIALIZE THE DATA PTR       */ 00668000
         LH    @10,OFSTEID(,AEDITCBR)                              0289 00669000
         ALR   @08,@10                                             0289 00670000
         BCTR  @08,0                                               0289 00671000
         ST    @08,DATAPTR5                                        0289 00672000
*   PARMPTR=ADDR(USRFMT);           /* OBTAIN ADDRS OF FMT PTRN      */ 00673000
         LA    PARMPTR,USRFMT                                      0290 00674000
*   CALL AMDPRGFR;                  /* FORMAT OUTPUT LINE            */ 00675000
         L     @15,AFMTLINE                                        0291 00676000
         BALR  @14,@15                                             0291 00677000
*   BLDBUF(4:5)=EXITNM(7:8);        /* MOVE IN FID TO OUTPUT LINE    */ 00678000
         L     @10,CURBUF                                          0292 00679000
         MVC   BLDBUF+3(2,@10),EXITNM+6(AEDITCBR)                  0292 00680000
*   BLDBUF(6)=' ';                  /* OMIT X'E' FOR READABILITY     */ 00681000
         MVI   BLDBUF+5(@10),C' '                                  0293 00682000
*   GEN(BRWRITE 1);                 /* WRITE BUFFER            Y02014*/ 00683000
         BRWRITE 1                                                      00684000
*   USRINFO=OTEMPREC;               /* RESTORE USER DATA       Y02014*/ 00685000
         L     @10,CURBUF                                          0295 00686000
         MVC   USRINFO(110,@10),OTEMPREC                           0295 00687000
*   BLDBUF(1:10)=BLANK1;            /* BLANK 1ST 10 BYTES      Y02014*/ 00688000
         MVC   BLDBUF(10,@10),BLANK1                               0296 00689000
*AMDPDNT0:                                                         0297 00690000
*   IF CODESAVE=0 THEN              /* IF ZERO RETURN CODE, THEN     */ 00691000
AMDPDNT0 L     @10,CODESAVE                                        0297 00692000
         LTR   @10,@10                                             0297 00693000
         BNZ   @RF00297                                            0297 00694000
*     RET='1'B;                     /* WILL NEED MORE FORMATTING     */ 00695000
         OI    RET(AEDITCBR),B'00001000'                           0298 00696000
*   RETURN;                         /* RETURN TO CALLER              */ 00697000
@EL00002 DS    0H                                                  0299 00698000
@EF00002 DS    0H                                                  0299 00699000
@ER00002 LM    @14,@12,@SA00002                                    0299 00700000
         BR    @14                                                 0299 00701000
*AMDPDNT1:                                                         0300 00702000
*   BLDBUF(1:10)=BLANK1;            /* INDENT LINE                   */ 00703000
AMDPDNT1 L     @10,CURBUF                                          0300 00704000
         MVC   BLDBUF(10,@10),BLANK1                               0300 00705000
*   IF CODESAVE^=0 THEN             /* IF NON-ZERO RETURN CODE,      */ 00706000
         L     @10,CODESAVE                                        0301 00707000
         LTR   @10,@10                                             0301 00708000
         BZ    @RF00301                                            0301 00709000
*     RET='0'B;                     /* NO MORE FORMATTING            */ 00710000
         NI    RET(AEDITCBR),B'11110111'                           0302 00711000
*   RETURN;                         /* RETURN TO CALLER              */ 00712000
         B     @EL00002                                            0303 00713000
*   RFY                                                            0304 00714000
*    (WREG6,                                                       0304 00715000
*     REG2) RSTD;                   /*                         Y02014*/ 00716000
*AMDPRSPI:                                                         0305 00717000
*   GENERATE;                                                      0305 00718000
AMDPRSPI DS    0H                                                  0305 00719000
         DROP R11                                                       00720000
         DROP R5                                                        00721000
         BALR  R2,R0                    ESTABLISH ADDRESSABILITY        00722000
         USING *,R2                     USE REGISTER 2                  00723000
         STM R0,R15,LOCAREA             STORE REGS IN LOCAL SAVE AREA   00724000
         L     COMBASE,NSISAVE          OBTAIN ADDRS OF AMDPRCOM        00725000
*   AEDITCBR=AEDITCB;               /* ESTABLISH DSECT FOR PRTAB     */ 00726000
         L     AEDITCBR,AEDITCB                                    0306 00727000
*   PIESAVE=PARMPTR;                /* SAVE ADDRS OF PIE             */ 00728000
         LR    PIESAVE,PARMPTR                                     0307 00729000
*   SPIE='1'B;                      /* SPIE ROUTINE INDICATION       */ 00730000
         OI    SPIE(AEDITCBR),B'00100000'                          0308 00731000
*   SYNMSGA=ADDR(AMDPRE07);         /* ADRS OF ADRS OF PGM CK MSG    */ 00732000
         L     @08,AFMG(,AEDITCBR)                                 0309 00733000
         LA    @08,AMDPRE07(,@08)                                  0309 00734000
         ST    @08,SYNMSGA                                         0309 00735000
*   AREAPTR=ADDR(SAVECALL);         /* SAVE AREA FOR USE OF CALLED 0310 00736000
*                                      ROUTINES                      */ 00737000
         LA    AREAPTR,SAVECALL                                    0310 00738000
*   RETSAVE=RETPTR;                 /* SAVE SYSTEM RETURN ADDRS      */ 00739000
         LR    RETSAVE,RETPTR                                      0311 00740000
*   GENERATE;                                                      0312 00741000
         ST    AREAPTR,SAVECALL+4               ESTABLISH BACKWARD PTR  00742000
         BRWRITE SKIP                   SKIP TO NEW PAGE                00743000
*   RET='0'B;                       /* INDENTING OK IN FUTURE        */ 00744000
         NI    RET(AEDITCBR),B'11110111'                           0313 00745000
*   ERRBUF(66:73)                   /* MOVE IN RTN NAME              */ 00746000
*       =EXITNM;                                                   0314 00747000
         L     @08,SYNMSGA                                         0314 00748000
         L     @08,MSGADDR(,@08)                                   0314 00749000
         MVC   ERRBUF+65(8,@08),EXITNM(AEDITCBR)                   0314 00750000
*   GENERATE;                                                      0315 00751000
         L     R6,PAGENUMB              PREPARE FOR CVD                 00752000
         CVD   R6,DBLWORD               CONVERT PAGE NO TO DECIMAL      00753000
         UNPK  COMP4(4),DBLWORD+6(2) CONVERT TO EBCDIC                  00754000
         OI    COMP4+3,X'F0'      STRIP '0'B ZONE                       00755000
*   ERRBUF(39:42)                   /* MOVE IN PG NO TO PGM CK       */ 00756000
*       =COMP4;                     /* MSG                           */ 00757000
         L     @08,SYNMSGA                                         0316 00758000
         L     @08,MSGADDR(,@08)                                   0316 00759000
         MVC   ERRBUF+38(4,@08),COMP4                              0316 00760000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00761000
         OI  SWD,NOSTDMG                                                00762000
*   CALL AMDPRSYN;                  /* OUTPUT ERROR MESSAGE          */ 00763000
         L     @15,ASYNTAX                                         0318 00764000
         BALR  @14,@15                                             0318 00765000
*   IF EOFINPRO='1'B THEN           /* EOF IN PROCESS          Y02014*/ 00766000
         TM    EOFINPRO(AEDITCBR),B'01000000'                      0319 00767000
         BO    @RT00319                                            0319 00768000
*     GOTO NOEDITER;                /* YES BYPASS TESTS        Y02014*/ 00769000
*   RFY                                                            0321 00770000
*    (WREG6) UNRSTD;                /*                         Y02014*/ 00771000
*   IF EDITER=0 THEN                /* TAKE ERROR ACTIONS            */ 00772000
         CLI   EDITER,0                                            0322 00773000
         BE    @RT00322                                            0322 00774000
*     GOTO AMDPSPI1;                                               0323 00775000
*   IF EDITER=1 THEN                /* TAKE HEX DUMP ACTIONS         */ 00776000
         CLI   EDITER,1                                            0324 00777000
         BE    @RT00324                                            0324 00778000
*     GOTO AMDPSPI2;                                               0325 00779000
*   SYNMSGA=ADDR(AMDPRE05);         /* ADDRS OF ADDRS OF TRM MSG     */ 00780000
         L     @08,AFMG(,AEDITCBR)                                 0326 00781000
         LA    @08,AMDPRE05(,@08)                                  0326 00782000
         ST    @08,SYNMSGA                                         0326 00783000
*   TERM='1'B;                      /* SET ON TERMINATION BIT        */ 00784000
         OI    TERM(AEDITCBR),B'01000000'                          0327 00785000
*   IF REXT='1'B THEN               /* IF FROM USER EXIT, THEN       */ 00786000
         TM    REXT(AEDITCBR),B'00000001'                          0328 00787000
         BNO   @RF00328                                            0328 00788000
*     USEREXIT=' ';                 /* BLANK IT OUT                  */ 00789000
         MVI   USEREXIT+1(AEDITCBR),C' '                           0329 00790000
         MVC   USEREXIT+2(6,AEDITCBR),USEREXIT+1(AEDITCBR)         0329 00791000
         MVI   USEREXIT(AEDITCBR),C' '                             0329 00792000
*   GOTO AMDPSPI3;                  /* IN ANY CASE, CLEANUP          */ 00793000
         B     AMDPSPI3                                            0330 00794000
*AMDPSPI1:                                                         0331 00795000
*   SYNMSGA=ADDR(AMDPRE04);         /* ADDRS OF ADDRS OF INTRFACE  0331 00796000
*                                      IGNORED MESSAGE               */ 00797000
AMDPSPI1 L     @08,AFMG(,AEDITCBR)                                 0331 00798000
         LA    @08,AMDPRE04(,@08)                                  0331 00799000
         ST    @08,SYNMSGA                                         0331 00800000
*   ERRBUF(54:61)                   /* MOVE IN RTN NAME              */ 00801000
*       =EXITNM;                                                   0332 00802000
         L     @08,MSGADDR(,@08)                                   0332 00803000
         MVC   ERRBUF+53(8,@08),EXITNM(AEDITCBR)                   0332 00804000
*   IF REXT='1'B THEN               /* IF FROM USER EXIT, THEN       */ 00805000
         TM    REXT(AEDITCBR),B'00000001'                          0333 00806000
         BNO   @RF00333                                            0333 00807000
*     DO;                           /* DO THE FOLLOWING              */ 00808000
*       USEREXIT=' ';               /* BLANK USER EXIT SLOT          */ 00809000
         MVI   USEREXIT+1(AEDITCBR),C' '                           0335 00810000
         MVC   USEREXIT+2(6,AEDITCBR),USEREXIT+1(AEDITCBR)         0335 00811000
         MVI   USEREXIT(AEDITCBR),C' '                             0335 00812000
*       REXT='0'B;                  /* TURN OF EXIT INDIC      Y02014*/ 00813000
         NI    REXT(AEDITCBR),B'11111110'                          0336 00814000
*       GOTO AMDPSPI3;              /* CONTINUE CLEANUP              */ 00815000
         B     AMDPSPI3                                            0337 00816000
*     END;                                                         0338 00817000
*   ERRBIT(INDEX)='1'B;             /* ERROR BIT ON FOR FMT APP      */ 00818000
@RF00333 L     @08,FIDTBPTR                                        0339 00819000
         AL    @08,INDEX                                           0339 00820000
         AL    @08,@CF00475                                        0339 00821000
         OI    ERRBIT(@08),B'00001000'                             0339 00822000
*   GOTO AMDPSPI3;                  /* CONTINUE CLEANUP              */ 00823000
         B     AMDPSPI3                                            0340 00824000
*AMDPSPI2:                                                         0341 00825000
*   IF REXT='1'B THEN                                              0341 00826000
AMDPSPI2 TM    REXT(AEDITCBR),B'00000001'                          0341 00827000
         BNO   @RF00341                                            0341 00828000
*     DO;                           /* IF FROM USER EXIT, WON'T      */ 00829000
*       REXT='0'B;                  /* TURN OFF EXIT INDIC     Y02014*/ 00830000
         NI    REXT(AEDITCBR),B'11111110'                          0343 00831000
*       GOTO AMDPSPI1;              /* DUMP IN HEX/IGNORE INTRFC     */ 00832000
         B     AMDPSPI1                                            0344 00833000
*     END;                                                         0345 00834000
*   SYNMSGA=ADDR(AMDPRE06);         /* ADDRS OF ADDRS OF HEX DUMP  0346 00835000
*                                      MESSAGE                       */ 00836000
@RF00341 L     @08,AFMG(,AEDITCBR)                                 0346 00837000
         LA    @08,AMDPRE06(,@08)                                  0346 00838000
         ST    @08,SYNMSGA                                         0346 00839000
*   HEXBIT(INDEX)='1'B;             /* SET ON HEX DUMP BIT           */ 00840000
         L     @06,FIDTBPTR                                        0347 00841000
         AL    @06,INDEX                                           0347 00842000
         AL    @06,@CF00475                                        0347 00843000
         OI    HEXBIT(@06),B'10000000'                             0347 00844000
*   ERRBUF(37:44)                   /* MOVE IN RTN NAME TO           */ 00845000
*       =EXITNM;                    /* HEX DUMP MSG                  */ 00846000
         L     @08,MSGADDR(,@08)                                   0348 00847000
         MVC   ERRBUF+36(8,@08),EXITNM(AEDITCBR)                   0348 00848000
*AMDPSPI3:                                                         0349 00849000
*   GEN(OI  SWD,NOSTDMG);           /* TURN ON NO STANDARD MSG BT    */ 00850000
AMDPSPI3 OI  SWD,NOSTDMG                                                00851000
*   CALL AMDPRSYN;                  /* OUTPUT INFORMATIONAL MSG      */ 00852000
         L     @15,ASYNTAX                                         0350 00853000
         BALR  @14,@15                                             0350 00854000
*   CALL PRHEX;                     /* DUMP ERROR REC IN HEX         */ 00855000
         L     @08,AFRMAD(,AEDITCBR)                               0351 00856000
         L     @15,AHEX(,@08)                                      0351 00857000
         BALR  @14,@15                                             0351 00858000
*   GEN(BRWRITE 2);                 /* SKIP TWO LINES                */ 00859000
         BRWRITE 2                                                      00860000
*NOEDITER:                                                         0353 00861000
*   BLDBUF=PSWMSG;                  /* MOVE PSW INFO MSG TO PRINTER     00862000
*                                      DATA SET                Y02014*/ 00863000
NOEDITER L     @08,CURBUF                                          0353 00864000
         MVI   BLDBUF+78(@08),C' '                                 0353 00865000
         MVC   BLDBUF+79(41,@08),BLDBUF+78(@08)                    0353 00866000
         MVC   BLDBUF(78,@08),PSWMSG                               0353 00867000
*   BLDBUF(61:68)=EXITNM;           /* MOVE MODNM TO PGM CHK MSG     */ 00868000
         MVC   BLDBUF+60(8,@08),EXITNM(AEDITCBR)                   0354 00869000
*   RFY                                                            0355 00870000
*    (WREG6,                                                       0355 00871000
*     WREG7) RSTD;                  /*                         Y02014*/ 00872000
*   WREG6=ADDR(BLDBUF);             /* OBTAIN ADDRS OF BUFFER        */ 00873000
         LA    WREG6,BLDBUF(,@08)                                  0356 00874000
*   WREG7=ADDR(OPSW);               /* OBTAIN ADDRS OF OLD PSW       */ 00875000
         LA    WREG7,OPSW(,PIESAVE)                                0357 00876000
*   GENERATE;                                                      0358 00877000
         LA    WREG6,18(WREG6)          OBTAIN OFFSET ADDRESS           00878000
         HEXCNVT (6),(7),8              CONVERT TO PRINTABLE EBCDIC     00879000
*   WREG6=ADDR(BLDBUF);             /* OBTAIN ADDRS OF BUFFER        */ 00880000
         L     WREG6,CURBUF                                        0359 00881000
         LA    WREG6,BLDBUF(,WREG6)                                0359 00882000
*   WREG7=ADDR(EXITADDR);           /* OBTAIN ADDRS OF ENTRY PT @    */ 00883000
         LA    WREG7,EXITADDR(,AEDITCBR)                           0360 00884000
*   GENERATE;                                                      0361 00885000
         LA    WREG6,72(WREG6)          OFFSET INTO BUFFER              00886000
         LA    WREG7,1(WREG7)         IGNORE HI-ORDER BYTE              00887000
         HEXCNVT (6),(7),3              CONVERT TO PRINTABLE EBCDIC     00888000
         BRWRITE 1                    PRINT LINE AND SPACE 1 LINE       00889000
*   RFY                                                            0362 00890000
*    (WREG6,                                                       0362 00891000
*     WREG7) UNRSTD;                /*                         Y02014*/ 00892000
*   LOCAREA(57:64)=SVRGEF;          /* MOVE REGS 14 AND 15 INTO LOCAL   00893000
*                                      SAVE AREA                     */ 00894000
         MVC   LOCAREA+56(8),SVRGEF(PIESAVE)                       0363 00895000
*   LOCAREA(1:12)=SVRG012;          /* MOVE REGS 0, 1, AND 2 INTO  0364 00896000
*                                      LOCAL SAVE AREA               */ 00897000
         MVC   LOCAREA(12),SVRG012(PIESAVE)                        0364 00898000
*   DATAPTR3=ADDR(LOCAREA);         /* INITIALIZE THE DATA PTR       */ 00899000
         LA    @08,LOCAREA                                         0365 00900000
         ST    @08,DATAPTR3                                        0365 00901000
*   PARMPTR=ADDR(REGLINE1);         /* OBTAIN ADDRS OF FMT PTRN      */ 00902000
         LA    PARMPTR,REGLINE1                                    0366 00903000
*   CALL AMDPRGFR;                  /* FORMAT 1ST LINE OF REGS       */ 00904000
         L     @15,AFMTLINE                                        0367 00905000
         BALR  @14,@15                                             0367 00906000
*   GEN(BRWRITE 1);                 /* PRINT LINE AND SPACE 1 LN     */ 00907000
         BRWRITE 1                                                      00908000
*   DATAPTR4=ADDR(LOCAREA)          /* UPDATE THE DATA PTR           */ 00909000
*       +32;                                                       0369 00910000
         LA    @08,LOCAREA                                         0369 00911000
         AL    @08,@CF00092                                        0369 00912000
         ST    @08,DATAPTR4                                        0369 00913000
*   PARMPTR=ADDR(REGLINE2);         /* OBTAIN ADDRS OF FMT PTRN      */ 00914000
         LA    PARMPTR,REGLINE2                                    0370 00915000
*   CALL AMDPRGFR;                  /* FORMAT 2ND LINE OF REGS       */ 00916000
         L     @15,AFMTLINE                                        0371 00917000
         BALR  @14,@15                                             0371 00918000
*   GEN(BRWRITE SKIP);              /* OUTPUT LINE AND SKIP TO NEW 0372 00919000
*                                      PAGE                          */ 00920000
         BRWRITE SKIP                                                   00921000
*   OPSW(5:8)=ADDR                  /* MODIFY PSW IN PIE TO          */ 00922000
*       (AMDPNSI);                  /* POINT TO AMDPNSI              */ 00923000
         LA    @08,AMDPNSI                                         0373 00924000
         STCM  @08,15,OPSW+4(PIESAVE)                              0373 00925000
*   SPIE='0'B;                      /* TURN OFF SPIE BIT             */ 00926000
         NI    SPIE(AEDITCBR),B'11011111'                          0374 00927000
*   GENERATE;                                                      0375 00928000
         L     AREAPTR,SAVECALL+4       RELOAD REGISTER 13 CONTENTS     00929000
         L     RETPTR,RETSAVE           RELOAD RETURN REGISTER          00930000
         BR    RETPTR                   RETURN TO SYSTEM                00931000
*AMDPNSI:                                                          0376 00932000
*   GENERATE;                                                      0376 00933000
AMDPNSI  DS    0H                                                  0376 00934000
         BALR  R2,R0                    ESTABLISH ADDRESSABILITY        00935000
         USING *,R2                     FOR ERROR RECOVERY              00936000
         L     R6,PICASAVE              OBTAIN PICA ADDRS               00937000
         SPIE  MF=(E,(R6))              RESTORE PREVIOUS PICA           00938000
*   AREAPTR=SPIESAVE;               /* PNT TO SV AREA AMDPRFLT       */ 00939000
         L     AREAPTR,SPIESAVE                                    0377 00940000
*   GENERATE;                                                      0378 00941000
*                                       /* RETURN PROCEDURES         */ 00942000
         LM R14,R12,12(R13)         RESTORE REGISTERS                   00943000
         BR    R14                      RETURN TO AMDPRFLT              00944000
         DROP   R2                                                      00945000
         USING @PSTART,@11                                              00946000
         USING @PSTART+4095,@05                                         00947000
*   END AMDPRDNT;                   /* END OF INTERNAL PROCEDURE     */ 00948000
*                                                                  0379 00949000
         B     @EL00002                                            0379 00950000
*   /*****************************************************************/ 00951000
*   /*                                                               */ 00952000
*   /* THIS SUBROUTINE DETERMINES IF A TIME STAMP RECORD IS TO BE    */ 00953000
*   /* OUTPUTTED BEFORE THE CURRENT TRACE RECORD                     */ 00954000
*   /*                                                               */ 00955000
*   /*****************************************************************/ 00956000
*                                                                  0380 00957000
*AMDTMCHK:                                                         0380 00958000
*   PROC;                           /*                         Y02014*/ 00959000
AMDTMCHK STM   @14,@12,@SA00003                                    0380 00960000
*   DCL                                                            0381 00961000
*     TEMPBUF REG(2) PTR(31);       /* TS RECORD BUFFER        Y02014*/ 00962000
*   IF TS='0'B THEN                 /* TS PENDING              Y02014*/ 00963000
         TM    TS(AEDITCBR),B'10000000'                            0382 00964000
         BZ    @RT00382                                            0382 00965000
*     GOTO AMDEND;                  /* RETURN TO CALLER        Y02014*/ 00966000
*   GEN(BRWRITE 2,IMM);             /* 2 BLNK LINES PRINTED    Y02014*/ 00967000
         BRWRITE 2,IMM                                                  00968000
*   TEMPBUF=CURBUF;                 /* SAVE CURBUF PTR         Y02014*/ 00969000
         L     TEMPBUF,CURBUF                                      0385 00970000
*   CURBUF=ADTSBUF;                 /* PTR TO TS RECORD        Y02014*/ 00971000
         L     @10,ADTSBUF(,AEDITCBR)                              0386 00972000
         ST    @10,CURBUF                                          0386 00973000
*   GEN(BRWRITE 2);                 /* TS AND SPACE OUTPUTTED  Y02014*/ 00974000
         BRWRITE 2                                                      00975000
*   TS='0'B;                        /* TURN OF TS PENDING SWITCH   0388 00976000
*                                                              Y02014*/ 00977000
         NI    TS(AEDITCBR),B'01111111'                            0388 00978000
*   CURBUF=TEMPBUF;                 /* RESTORE CURBUF PTR      Y02014*/ 00979000
         ST    TEMPBUF,CURBUF                                      0389 00980000
*AMDEND:                                                           0390 00981000
*   RETURN;                         /* RETURN TO CALLER        Y02014*/ 00982000
@EL00003 DS    0H                                                  0390 00983000
@EF00003 DS    0H                                                  0390 00984000
@ER00003 LM    @14,@12,@SA00003                                    0390 00985000
         BR    @14                                                 0390 00986000
*   END;                            /* END PROCEDURE           Y02014*/ 00987000
         B     @EL00003                                            0391 00988000
*   END AMDPRAPP                    /* END OF MAIN PROCEDURE         */ 00989000
*                                                                  0392 00990000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00991000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00992000
*/*%INCLUDE SYSLIB  (AMDOPTWD)                                       */ 00993000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 00994000
*                                                                  0392 00995000
*       ;                                                          0392 00996000
@DATA    DS    0H                                                       00997000
@SM00483 MVC   ITEMPREC(0),INREC(@08)                                   00998000
@SM00485 MVC   ITEMPREC+256(0),INREC+256(@10)                           00999000
         DS    0F                                                       01000000
@SA00001 DS    18F                                                      01001000
@SA00002 DS    15F                                                      01002000
@SA00003 DS    15F                                                      01003000
         DS    0F                                                       01004000
@CF00046 DC    F'1'                                                     01005000
@CF00079 DC    F'2'                                                     01006000
@CF00169 DC    F'3'                                                     01007000
@CF00099 DC    F'4'                                                     01008000
@CF00110 DC    F'6'                                                     01009000
@CF00044 DC    F'8'                                                     01010000
@CF00076 DC    F'12'                                                    01011000
@CF00092 DC    F'32'                                                    01012000
@CF00121 DC    F'256'                                                   01013000
@CF00414 DC    F'257'                                                   01014000
@CF00463 DC    F'-5'                                                    01015000
@CF00475 DC    F'-1'                                                    01016000
         DS    0D                                                       01017000
SPIESAVE DS    A                                                        01018000
NSISAVE  DS    A                                                        01019000
FIDTBPTR DS    A                                                        01020000
INDEX    DS    F                                                        01021000
PICASAVE DS    A                                                        01022000
CODESAVE DS    F                                                        01023000
DISPL    DS    F                                                        01024000
@TS00001 DS    CL1                                                      01025000
@CC00391 DC    C'AMDPRHEX'                                              01026000
         DS    CL3                                                      01027000
SAVECALL DS    CL72                                                     01028000
PLIST    DS    CL32                                                     01029000
         ORG   PLIST                                                    01030000
RECPTR   DS    AL4                                                      01031000
BUFPTR   DS    AL4                                                      01032000
GTFOPTR  DS    AL4                                                      01033000
EIDPTR   DS    AL4                                                      01034000
DATAPTR  DS    AL4                                                      01035000
FRMADDR  DS    AL4                                                      01036000
WKAREADD DS    AL4                                                      01037000
SNAPPARM DS    AL4                                                      01038000
         ORG   PLIST+32                                                 01039000
ITEMPREC DS    CL284                                                    01040000
OTEMPREC DS    CL110                                                    01041000
USRCON   DC    CL6'AMDUSR'                                              01042000
AMDPREF  DC    CL1'A'                                                   01043000
USRCONI  DC    CL6'IMDUSR'                                              01044000
IMDPREF  DC    CL1'I'                                                   01045000
USRCONH  DC    CL6'HMDUSR'                                              01046000
HMDPREF  DC    CL1'H'                                                   01047000
SYSCON   DC    CL6'AMDSYS'                                              01048000
         DS    CL3                                                      01049000
LOCAREA  DS    CL64                                                     01050000
COMP4    DS    CL4                                                      01051000
PSWMSG   DC    CL78'PGM CHECK OLD PSW XXXXXXXX XXXXXXXX.  ENTRY POINT OC01052000
               F MODULE XXXXXXXX IS XXXXXX'                             01053000
BLANK1   DC    CL10'          '                                         01054000
APPPTCH  DC    CL256'APPPTCH'                                           01055000
         DC    CL256' '                                                 01056000
         DC    CL88' '                                                  01057000
         DS    CL4                                                      01058000
DBLWORD  DS    CL8                                                      01059000
SYSTAB   DC    256B'00000000'                                           01060000
USRTABL  DC    X'80'                                                    01061000
         DC    255B'00000000'                                           01062000
AMDPRAPP CSECT                                                          01063000
FMTPTN8  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),4,4,10,18,                   *01064000
               TIMELAB,(DATAPTR2,0),LAST                                01065000
TIMELAB  DC    C'TIME'                                                  01066000
FMTPTNF  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),4,4,10,18,                   *01067000
               TIMELAB,(DATAPTR1,0),LAST                                01068000
REGLINE1 FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),5,4,0,7,REG1LAB,             *01069000
               (DATAPTR3,0)                                             01070000
         FMTPTRN (DTA,DTAC),,4,,16,,,                                   01071000
         FMTPTRN (DTA,DTAC),,4,,25,,,                                   01072000
         FMTPTRN (DTA,DTAC),,4,,34,,,                                   01073000
         FMTPTRN (DTA,DTAC),,4,,43,,,                                   01074000
         FMTPTRN (DTA,DTAC),,4,,52,,,                                   01075000
         FMTPTRN (DTA,DTAC),,4,,61,,,                                   01076000
         FMTPTRN (DTA,DTAC),,4,,70,,,LAST                               01077000
REGLINE2 FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),6,4,0,7,REG2LAB,             *01078000
               (DATAPTR4,0)                                             01079000
         FMTPTRN (DTA,DTAC),,4,,16,,,                                   01080000
         FMTPTRN (DTA,DTAC),,4,,25,,,                                   01081000
         FMTPTRN (DTA,DTAC),,4,,34,,,                                   01082000
         FMTPTRN (DTA,DTAC),,4,,43,,,                                   01083000
         FMTPTRN (DTA,DTAC),,4,,52,,,                                   01084000
         FMTPTRN (DTA,DTAC),,4,,61,,,                                   01085000
         FMTPTRN (DTA,DTAC),,4,,70,,,LAST                               01086000
REG1LAB  DC    C'R0/R7'                                                 01087000
         DS    0F                                                       01088000
REG2LAB  DC    C'R8/R15'                                                01089000
         DS    0F                                                       01090000
USRFMT   FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),3,2,0,5,USRLAB,              *01091000
               (DATAPTR5,0)                                             01092000
         FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),4,4,10,15,                   *01093000
               ASCBLAB,(ASCBPTR,0)                                      01094000
         FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC,DTAE),4,8,25,30,              *01095000
               JOBNLAB,(JOBNPTR,0),LAST                                 01096000
         DS    0F                                                       01097000
USRLAB   DC    C'USR'                                                   01098000
         DS    0F                                                       01099000
ASCBLAB  DC    C'ASCB'                                                  01100000
JOBNLAB  DC    C'JOBN'                                                  01101000
AMDPRAPP CSECT                                                          01102000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01103000
@01      EQU   01                                                       01104000
@02      EQU   02                                                       01105000
@03      EQU   03                                                       01106000
@04      EQU   04                                                       01107000
@05      EQU   05                                                       01108000
@06      EQU   06                                                       01109000
@07      EQU   07                                                       01110000
@08      EQU   08                                                       01111000
@09      EQU   09                                                       01112000
@10      EQU   10                                                       01113000
@11      EQU   11                                                       01114000
@12      EQU   12                                                       01115000
@13      EQU   13                                                       01116000
@14      EQU   14                                                       01117000
@15      EQU   15                                                       01118000
PIESAVE  EQU   @10                                                      01119000
LDSW     EQU   @10                                                      01120000
RETSAVE  EQU   @04                                                      01121000
ABDPLPTR EQU   @04                                                      01122000
AEDITCBR EQU   @09                                                      01123000
COMPTR   EQU   @12                                                      01124000
AREAPTR  EQU   @13                                                      01125000
PARMPTR  EQU   @01                                                      01126000
CODEREG  EQU   @15                                                      01127000
REG2     EQU   @02                                                      01128000
SPIEREG  EQU   @02                                                      01129000
RETPTR   EQU   @14                                                      01130000
WREG6    EQU   @06                                                      01131000
WREG7    EQU   @07                                                      01132000
TEMPBUF  EQU   @02                                                      01133000
         ENTRY APPPTCH                                                  01134000
         ENTRY AMDPRSPI                                                 01135000
         ENTRY SPIESAVE                                                 01136000
         ENTRY NSISAVE                                                  01137000
         ENTRY PICASAVE                                                 01138000
AMDPRTAB EQU   0                                                        01139000
AFMG     EQU   AMDPRTAB                                                 01140000
CURREC   EQU   AMDPRTAB+4                                               01141000
DEBGFLGS EQU   AMDPRTAB+8                                               01142000
PTHFLGS1 EQU   DEBGFLGS                                                 01143000
REXT     EQU   PTHFLGS1                                                 01144000
PTHFLGS2 EQU   DEBGFLGS+1                                               01145000
APP      EQU   PTHFLGS2                                                 01146000
INRFCFGS EQU   DEBGFLGS+2                                               01147000
TERM     EQU   INRFCFGS                                                 01148000
SPIE     EQU   INRFCFGS                                                 01149000
RET      EQU   INRFCFGS                                                 01150000
IOFLGS   EQU   DEBGFLGS+3                                               01151000
GTFWDPTR EQU   AMDPRTAB+20                                              01152000
USEREXIT EQU   AMDPRTAB+24                                              01153000
DDNAME   EQU   AMDPRTAB+32                                              01154000
STARTIME EQU   AMDPRTAB+40                                              01155000
STOPTIME EQU   AMDPRTAB+52                                              01156000
NAMES    EQU   AMDPRTAB+64                                              01157000
ADS      EQU   AMDPRTAB+104                                             01158000
AADS     EQU   ADS                                                      01159000
SIF      EQU   AMDPRTAB+124                                             01160000
SIOFLGS  EQU   SIF                                                      01161000
DVADS1   EQU   AMDPRTAB+128                                             01162000
IO       EQU   AMDPRTAB+228                                             01163000
IOFLGS2  EQU   IO                                                       01164000
DVADS2   EQU   AMDPRTAB+232                                             01165000
VCF      EQU   AMDPRTAB+332                                             01166000
SVCFLGS  EQU   VCF                                                      01167000
USR      EQU   AMDPRTAB+368                                             01168000
USRFLGS  EQU   USR                                                      01169000
USRTAB   EQU   AMDPRTAB+372                                             01170000
PI       EQU   AMDPRTAB+452                                             01171000
PIFLGS   EQU   PI                                                       01172000
PGMNGEN  EQU   AMDPRTAB+456                                             01173000
GENFLAGS EQU   PGMNGEN+3                                                01174000
GENFLGS1 EQU   AMDPRTAB+460                                             01175000
TS       EQU   GENFLGS1                                                 01176000
EOFINPRO EQU   GENFLGS1                                                 01177000
RECDLL   EQU   AMDPRTAB+461                                             01178000
EXITNM   EQU   AMDPRTAB+464                                             01179000
EXITADDR EQU   AMDPRTAB+472                                             01180000
PRFMTADD EQU   AMDPRTAB+480                                             01181000
REENTWKA EQU   AMDPRTAB+484                                             01182000
AFRMAD   EQU   AMDPRTAB+488                                             01183000
OFSTEID  EQU   AMDPRTAB+492                                             01184000
OFSTDATA EQU   AMDPRTAB+494                                             01185000
ADTSBUF  EQU   AMDPRTAB+496                                             01186000
ESTARTME EQU   AMDPRTAB+500                                             01187000
ESTOPTME EQU   AMDPRTAB+509                                             01188000
AMDOPTWD EQU   0                                                        01189000
OPTS1    EQU   AMDOPTWD                                                 01190000
OPTS2    EQU   AMDOPTWD+1                                               01191000
OPTS3    EQU   AMDOPTWD+2                                               01192000
OPTS4    EQU   AMDOPTWD+3                                               01193000
OPTTIME  EQU   OPTS4                                                    01194000
ABDPL    EQU   0                                                        01195000
ADPLSBPL EQU   ABDPL+6                                                  01196000
ADPLFLAG EQU   ABDPL+7                                                  01197000
ADPLBUF  EQU   ABDPL+8                                                  01198000
ADPLFRMT EQU   ABDPL+24                                                 01199000
FRMATAB  EQU   0                                                        01200000
AGET     EQU   FRMATAB                                                  01201000
AHEX     EQU   FRMATAB+4                                                01202000
ACON     EQU   FRMATAB+8                                                01203000
AFLT     EQU   FRMATAB+12                                               01204000
AAPP     EQU   FRMATAB+16                                               01205000
AEXT     EQU   FRMATAB+20                                               01206000
ASPI     EQU   FRMATAB+28                                               01207000
ATME     EQU   FRMATAB+32                                               01208000
PRHEX    EQU   0                                                        01209000
PRTME    EQU   0                                                        01210000
FIDTAB   EQU   0                                                        01211000
HEXBIT   EQU   FIDTAB                                                   01212000
WHOUSED  EQU   FIDTAB                                                   01213000
HMDUSED  EQU   WHOUSED                                                  01214000
IMDUSED  EQU   WHOUSED                                                  01215000
ERRBIT   EQU   FIDTAB                                                   01216000
PREFIXMP EQU   0                                                        01217000
INREC    EQU   0                                                        01218000
WKAREA   EQU   0                                                        01219000
USRINFO  EQU   11                                                       01220000
AMDPRSEG EQU   0                                                        01221000
AMDPRSYN EQU   0                                                        01222000
MSGADDR  EQU   0                                                        01223000
ERRBUF   EQU   0                                                        01224000
AMDFMGMS EQU   32                                                       01225000
AMDPRE03 EQU   AMDFMGMS                                                 01226000
AMDPRE04 EQU   AMDFMGMS+4                                               01227000
AMDPRE05 EQU   AMDFMGMS+8                                               01228000
AMDPRE06 EQU   AMDFMGMS+12                                              01229000
AMDPRE07 EQU   AMDFMGMS+16                                              01230000
AMDPRE12 EQU   AMDFMGMS+24                                              01231000
USERRTN  EQU   0                                                        01232000
AMDPRGFR EQU   0                                                        01233000
BLDBUF   EQU   1                                                        01234000
PIE      EQU   0                                                        01235000
OPSW     EQU   PIE+4                                                    01236000
SVRGEF   EQU   PIE+12                                                   01237000
SVRG012  EQU   PIE+20                                                   01238000
SVAREA   EQU   4                                                        01239000
PRAPP    EQU   0                                                        01240000
PRCON    EQU   0                                                        01241000
PREXT    EQU   0                                                        01242000
PRFLT    EQU   0                                                        01243000
PRGET    EQU   0                                                        01244000
PRSPI    EQU   0                                                        01245000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01246000
PICAAD   EQU   PIE+1                                                    01247000
PIERES   EQU   PIE                                                      01248000
AMDPRE11 EQU   AMDFMGMS+20                                              01249000
RECTIME  EQU   PREFIXMP+6                                               01250000
RECFID   EQU   PREFIXMP+5                                               01251000
RECAID   EQU   PREFIXMP+4                                               01252000
RECRES1  EQU   PREFIXMP+2                                               01253000
RECLL    EQU   PREFIXMP                                                 01254000
NOUSE2   EQU   FIDTAB                                                   01255000
RESVRD   EQU   FIDTAB                                                   01256000
FRMRES1  EQU   FRMATAB+36                                               01257000
APRFMG   EQU   FRMATAB+24                                               01258000
ADPLEXT  EQU   ABDPL+52                                                 01259000
ADPLFMT2 EQU   ABDPL+48                                                 01260000
ADPLFMT1 EQU   ABDPL+44                                                 01261000
ADPLCOM4 EQU   ABDPL+40                                                 01262000
ADPLCOM3 EQU   ABDPL+36                                                 01263000
ADPLCOM2 EQU   ABDPL+32                                                 01264000
ADPLCOM1 EQU   ABDPL+28                                                 01265000
ADPLMEMA EQU   ABDPL+20                                                 01266000
ADPLCVT  EQU   ABDPL+16                                                 01267000
ADPLPRNT EQU   ABDPL+12                                                 01268000
@NM00002 EQU   ADPLFLAG                                                 01269000
ADPLSYTM EQU   ADPLFLAG                                                 01270000
ADPLSNPR EQU   ADPLFLAG                                                 01271000
ADPLASID EQU   ABDPL+4                                                  01272000
ADPLTCB  EQU   ABDPL                                                    01273000
OPTRES3  EQU   OPTS4                                                    01274000
OPTIOSIO EQU   OPTS3                                                    01275000
OPTRES2  EQU   OPTS3                                                    01276000
OPTRR    EQU   OPTS3                                                    01277000
OPTSRM   EQU   OPTS3                                                    01278000
OPTRNIO  EQU   OPTS3                                                    01279000
OPTEXT   EQU   OPTS3                                                    01280000
OPTIOP   EQU   OPTS2                                                    01281000
OPTIO    EQU   OPTS2                                                    01282000
OPTPIP   EQU   OPTS2                                                    01283000
OPTPI    EQU   OPTS2                                                    01284000
OPTSIOP  EQU   OPTS2                                                    01285000
OPTSIO   EQU   OPTS2                                                    01286000
OPTSVCP  EQU   OPTS2                                                    01287000
OPTSVC   EQU   OPTS2                                                    01288000
OPTPCI   EQU   OPTS1                                                    01289000
OPTRES1  EQU   OPTS1                                                    01290000
OPTDSP   EQU   OPTS1                                                    01291000
OPTTRC   EQU   OPTS1                                                    01292000
OPTUSR   EQU   OPTS1                                                    01293000
OPTSYS   EQU   OPTS1                                                    01294000
OPTSYSP  EQU   OPTS1                                                    01295000
OPTSYSM  EQU   OPTS1                                                    01296000
RESERVED EQU   AMDPRTAB+522                                             01297000
CVTTZONE EQU   AMDPRTAB+518                                             01298000
ESPSEC   EQU   ESTOPTME+7                                               01299000
ESPMIN   EQU   ESTOPTME+5                                               01300000
ESPHR    EQU   ESTOPTME+3                                               01301000
ESPDAY   EQU   ESTOPTME                                                 01302000
ESSEC    EQU   ESTARTME+7                                               01303000
ESMIN    EQU   ESTARTME+5                                               01304000
ESHR     EQU   ESTARTME+3                                               01305000
ESDAY    EQU   ESTARTME                                                 01306000
AEIOCT   EQU   AMDPRTAB+476                                             01307000
@NM00001 EQU   GENFLGS1                                                 01308000
FIRSTHSW EQU   GENFLGS1                                                 01309000
TSFOUND  EQU   GENFLGS1                                                 01310000
EOF      EQU   GENFLAGS                                                 01311000
RR       EQU   GENFLAGS                                                 01312000
SRM      EQU   GENFLAGS                                                 01313000
RNIO     EQU   GENFLAGS                                                 01314000
SYSM     EQU   GENFLAGS                                                 01315000
SYS      EQU   GENFLAGS                                                 01316000
DSP      EQU   GENFLAGS                                                 01317000
EXT      EQU   GENFLAGS                                                 01318000
PICODEA  EQU   PGMNGEN+2                                                01319000
PICODES  EQU   PGMNGEN                                                  01320000
Q        EQU   PI+1                                                     01321000
P01R     EQU   PIFLGS                                                   01322000
SELP     EQU   PIFLGS                                                   01323000
ALLP     EQU   PIFLGS                                                   01324000
USRNGTAB EQU   USRTAB                                                   01325000
O        EQU   USR+1                                                    01326000
N01R     EQU   USRFLGS                                                  01327000
SELU     EQU   USRFLGS                                                  01328000
ALLU     EQU   USRFLGS                                                  01329000
SVCNUMS  EQU   AMDPRTAB+336                                             01330000
M        EQU   VCF+1                                                    01331000
L        EQU   SVCFLGS                                                  01332000
SELV     EQU   SVCFLGS                                                  01333000
ALLV     EQU   SVCFLGS                                                  01334000
IODVADS  EQU   DVADS2                                                   01335000
K01RES   EQU   IO+1                                                     01336000
JJ       EQU   IOFLGS2                                                  01337000
SELI     EQU   IOFLGS2                                                  01338000
ALLI     EQU   IOFLGS2                                                  01339000
SIODVADS EQU   DVADS1                                                   01340000
II       EQU   SIF+1                                                    01341000
H        EQU   SIOFLGS                                                  01342000
NOEQU    EQU   SIOFLGS                                                  01343000
EQUIV    EQU   SIOFLGS                                                  01344000
SELS     EQU   SIOFLGS                                                  01345000
ALLS     EQU   SIOFLGS                                                  01346000
ASCBADDR EQU   AADS                                                     01347000
JOBNAMES EQU   NAMES                                                    01348000
DAY2     EQU   STOPTIME+10                                              01349000
F        EQU   STOPTIME+8                                               01350000
TIME2    EQU   STOPTIME                                                 01351000
DAY      EQU   STARTIME+10                                              01352000
D        EQU   STARTIME+8                                               01353000
TIME     EQU   STARTIME                                                 01354000
C        EQU   DEBGFLGS+4                                               01355000
B        EQU   IOFLGS                                                   01356000
GETEOF   EQU   IOFLGS                                                   01357000
DMDFMT   EQU   INRFCFGS                                                 01358000
EDITSTOP EQU   INRFCFGS                                                 01359000
EXTTRC   EQU   INRFCFGS                                                 01360000
FMT      EQU   INRFCFGS                                                 01361000
FLMODE   EQU   INRFCFGS                                                 01362000
REMAIN   EQU   PTHFLGS2                                                 01363000
FRM      EQU   PTHFLGS1                                                 01364000
FLT      EQU   PTHFLGS1                                                 01365000
HEX      EQU   PTHFLGS1                                                 01366000
CON      EQU   PTHFLGS1                                                 01367000
GET      EQU   PTHFLGS1                                                 01368000
SCN      EQU   PTHFLGS1                                                 01369000
ROOT     EQU   PTHFLGS1                                                 01370000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01371000
@RT00108 EQU   AMDPRTN                                                  01372000
@RT00120 EQU   AMDPLOAD                                                 01373000
@RT00122 EQU   USEHMD                                                   01374000
@RT00133 EQU   AMDPAPP5                                                 01375000
@RF00143 EQU   AMDPAPP4                                                 01376000
@RT00174 EQU   AMDPHDMP                                                 01377000
@RT00202 EQU   AMDNOSPI                                                 01378000
@RT00227 EQU   AMDPRTN                                                  01379000
@RT00257 EQU   AMDPERR                                                  01380000
@RT00281 EQU   @EL00002                                                 01381000
@RT00283 EQU   AMDPDNT1                                                 01382000
@RF00297 EQU   @EL00002                                                 01383000
@RF00301 EQU   @EL00002                                                 01384000
@RT00319 EQU   NOEDITER                                                 01385000
@RT00322 EQU   AMDPSPI1                                                 01386000
@RT00324 EQU   AMDPSPI2                                                 01387000
@RF00328 EQU   AMDPSPI3                                                 01388000
AMDEND   EQU   @EL00003                                                 01389000
@RT00382 EQU   AMDEND                                                   01390000
@ENDDATA EQU   *                                                        01391000
         END   AMDPRAPP,(C'PLS2041',0603,74298)                         01392000
