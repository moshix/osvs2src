         TITLE 'AMDPRCOM - CONTROL/SCAN SERVICE ROUTINES'               00060002
*********************************************************************** 00120002
*                                                                     * 00180002
* D 535800-537000,552600,561000-562800                           Y02006 00182002
* D 689400-691800,692400-693600,699600,954600-955200             Y02006 00190002
* C 505800,511200,522000,525600,553200,583800,585000             Y02006 00192002
* C 614400,616800-617400,648600,688800,693600,694200             Y02006 00200002
* C 697800-699000,712800,721800,765600,802800-803400,839400      Y02006 00200402
* A 491300-491340,508700,523700,585500-585520,615500-615592      Y02006 00202002
* A 509300-509320,521900-521997,552500-553180,596300-596320      Y02006 00204002
* A 597120-597498,611300-611320                                  Y02006 00206002
* A 597520-598575,696500-696560,699500-700000,688700-688740      Y02006 00210002
* A 712700,715100,721700,723500,724100                           Y02006 00212002
* A 727100-727140,760700-760740                                  Y02006 00220002
* C 754200                                                       Y01980 00230002
* A 954600-955200                                                Y01980 00232002
* A 651100,715000,734600,772600,863100,918100,963699             X01980 00240002
*                                                                     * 00300002
**    ***  AMDPRCOM - COMMON AND RESIDENT SERVICE ROUTINES  ***      ** 00360002
*                                                                     * 00420002
* STATUS --   AOS/2  RELEASE 1                                        * 00480002
*                                                                     * 00540002
* FUNCTION --                                                         * 00600002
*                                                                     * 00660002
*         THIS MODULE CONTAINS THE AMDPRDMP MAIN COMMUNICATIONS AREA  * 00720002
*    AMDPRCOM.  IN ADDITION, SIX AMDPRDMP SERVICE ROUTINES ARE        * 00780002
*    CONTAINED IN THIS MODULE.  THESE ROUTINES MUST BE PERMANENTLY    * 00840002
*    RESIDENT IN THE AMDPRDMP REGION.                                 * 00900002
*                                                                     * 00960002
*         AMDPRWTR                                                    * 01020002
*                                                                     * 01080002
*         THIS ROUTINE CONTROLS ALL OUTPUT TO THE PRINTER DATA SET.   * 01140002
*         QSAM IS USED.  THE OUTPUT DCB IS OPENED ON THE FIRST CALL.  * 01200002
*         IF THE PRINTER DD STATEMENT IS MISSING, THE TERMINATION     * 01260002
*         ROUTINE AMDPRXIT IS INVOKED.  A DCB EXIT IS TAKEN SO THAT   * 01320002
*         THE OUTPUT BLOCKSIZE MAY BE ADJUSTED BY THE PRINTER DD      * 01380002
*         STATEMENT.  MAIN STORAGE IS OBTAINED FOR AN OUTPUT BUFFER   * 01440002
*         AND THE ADDRESS OF THE BUFFER IS STORED IN AMDPRCOM.        * 01500002
*         SPACING AND PAGING, INCLUDING PRINTING OF THE TITLE ON      * 01560002
*         EACH NEW PAGE, ARE ALSO HANDLED BY THIS ROUTINE.            * 01620002
*                                                                     * 01680002
*         AMDPRSYN                                                    * 01740002
*                                                                     * 01800002
*         THIS IS THE AMDPRDMP MESSAGE WRITER.  MESSAGES ARE          * 01860002
*         WRITTEN TO THE SYSPRINT DATA SET USING THE AMDPRMSG         * 01920002
*         SERVICE ROUTINE.  IF CONTROL STATEMENTS ARE BEING ENTERED   * 01980002
*         FROM THE CONSOLE, MESSAGES ARE ALSO WRITTEN TO THE CONSOLE. * 02040002
*         CSECT AMDPRSYN ALSO CONTAINS TWO CONVERSION ROUTINES        * 02100002
*         WHICH ARE SHARED BY ALL AMDPRDMP ROUTINES.  ONE CONVERTS    * 02160002
*         A THREE BYTE BINARY FIELD (USUALLY AN ADDRESS) TO ITS       * 02220002
*         HEX CHARACTER REPRESENTATION, THE OTHER CONVERTS A FULL     * 02280002
*         WORD OF BINARY DATA TO ITS HEX REPRESENTATION.              * 02340002
*                                                                     * 02400002
*         AMDPRMSG                                                    * 02460002
*                                                                     * 02520002
*         THIS CSECT ACCOMPLISHES ALL I/O TO THE SYSPRINT DATA        * 02580002
*         SET.  QSAM IS USED.  THE SYSPRINT DCB IS OPENED ON THE      * 02640002
*         FIRST CALL TO THIS ROUTINE.  IF THE SYSPRINT DD STATEMENT   * 02700002
*         IS MISSING, SUBSEQUENT CALLS TO AMDPRMSG RESULTS IN AN      * 02760002
*         IMMEDIATE RETURN.                                           * 02820002
*                                                                     * 02880002
*         AMDPRGFR                                                    * 02940002
*                                                                     * 03000002
*         THIS IS THE GENERAL FORMAT ROUTINE OF AMDPRDMP.  INPUT      * 03060002
*         TO THIS ROUTINE IS A LIST OF FORMAT PATTERNS, EACH          * 03120002
*         DESCRIBES THE POSITION OF A DATA ITEM IN THE OUTPUT         * 03180002
*         LINE AND A LABEL WHICH IDENTIFIES THAT DATA ITEM.  THE      * 03240002
*         ENTIRE LIST THUS DESCRIBES THE FORMAT OF A LINE OF          * 03300002
*         OUTPUT.  AMDPRGFR FORMATS SUCH A LINE IN THE CURRENT        * 03360002
*         OUTPUT BUFFER, READY FOR PRINTING BY THE CALLER.  THE       * 03420002
*         FOLLOWING IS THE FORMAT OF A PATTERN ENTRY...               * 03480002
*                                                                     * 03540002
*            0 ****************************************               * 03600002
*              *  CODE  * LBL* DTA*  LABEL  *  DATA   *               * 03660002
*              *  BYTE  * LN * LN * OFFSET  * OFFSET  *               * 03720002
*            4 ****************************************               * 03780002
*              *   POINTER TO LABEL                   *               * 03840002
*              *    (IF PRESENT)                      *               * 03900002
*            8 ****************************************               * 03960002
*              *   POINTER TO DATA                    *               * 04020002
*              *    (IF PRESENT)                      *               * 04080002
*              ****************************************               * 04140002
*                                                                     * 04200002
*          CODE BYTE DESCRIPTION...                                   * 04260002
*           BIT   MEANING                                             * 04320002
*            0    UNUSED                                              * 04380002
*            1    UNUSED                                              * 04440002
*            2    DATA IS EBCDIC                                      * 04500002
*            3    DATA IS IN CORE                                     * 04560002
*            4    THERE IS A DATA POINTER                             * 04620002
*            5    DATA IS TO BE PLACED ON PRINT LINE                  * 04680002
*            6    THERE IS A LABEL POINTER                            * 04740002
*            7    A LABEL IS TO BE INCLUDED ON PRINT LINE             * 04800002
*                                                                     * 04860002
*         IF LABEL AND DATA POINTERS DON'T EXIST THE PATTERN ENTRY    * 04920002
*         WILL ONLY BE 4 BYTES LONG.  IF EITHER POINTER IS OMITTED THE* 04980002
*         ROUTINE WILL USE THE ADDRESS OF THE LAST LABEL OR PLUS IT'S * 05040002
*         LENGTH FOR THE NEXT LABEL OR DATA ADDRESS.                  * 05100002
*         THE LAST ENTRY IN A PATTERN WILL BE FOLLOWED BY A BYTE OF   * 05160002
*         ZEROS.                                                      * 05220002
*                                                                     * 05280002
*         AMDPRTSV                                                    * 05340002
*                                                                     * 05400002
*         THIS SERVICE ROUTINE CONTAINS THE MANAGEMENT ROUTINES       * 05460002
*         FOR THE TCBLIST.  THE TCBLIST IS A QUEUE OF TCB ADDRESSES   * 05520002
*         WHICH IS INPUT TO THE FORMAT SERVICE MODULE AMDPRFSR        * 05580002
*         AND THE REGION BOUNDARY ROUTINE AMDPRFUB.  EACH ENTRY IN    * 05640002
*         THE TCBLIST HAS THE FOLLOWING FORMAT:                       * 05700002
*                                                                     * 05760002
*              *************************************                  * 05820002
*              *                  *                *                  * 05880002
*              *      LINK        *   TCB ADDRESS  *                  * 05940002
*              *                  *                *                  * 06000002
*              *************************************                  * 06060002
*              0                  4                                   * 06120002
*                                                                     * 06180002
*         THE TCBLIST IS BASED IN COMMON CSECT, AMDPRCOM.  AMDPRTSV   * 06240002
*         CONSISTS OF THREE ROUTINES- (1) THE TCB SAVE ROUTINE,       * 06300002
*         WHICH ENQUEUES A TCB ADDRESS ON THE TCBLIST; (2) A TCB      * 06360002
*         ADDRESS RETRIEVE ROUTINE, WHICH RETURNS TO THE CALLER       * 06420002
*         A TCB ADDRESS BASED ON THE TCBLIST POSITION NUMBER; AND     * 06480002
*         (3) THE TCBLIST DEQUEUE ROUTINE.                            * 06540002
*                                                                     * 06600002
*         AMDPRSTP                                                    * 06660002
*                                                                     * 06720002
*         THIS CSECT EXECUTES THE STOP OPTION OF AMDPRDMP.  IF THE    * 06780002
*         STOP OPTION HAS BEEN SELECTED AND AMDPRDMP IS NOT EXECUTING * 06840002
*         UNDER PCP, AMDPRWTP CALLS AMDPRSTP AS EACH LINE OF OUTPUT   * 06900002
*         IS PRINTED.  ON THE FIRST CALL TO AMDPRSTP, MESSAGE AMD165I * 06960002
*         IS ISSUED BY WTOR; HOWEVER, A WAIT IS NOT ISSUED TO WAIT    * 07020002
*         FOR A REPLY.  INSTEAD, ON EACH SUBSEQUENT ENTRY TO          * 07080002
*         AMDPRSTP, THE REPLY ECB IS TESTED FOR COMPLETION.  IF THE   * 07140002
*         ECB HAS BEEN POSTED, THE REPLY AREA IS CHECKED FOR 'STOP',  * 07200002
*         OTHERWISE CONTROL RETURNS TO AMDPRWTR.  IF STOP IS          * 07260002
*         REQUESTED, THEN AMDPRSTP BRANCHES TO THE CURRENT            * 07320002
*         STOP-EXIT ROUTINE AS ADDRESSED BY AMDPRCOM.  THE            * 07380002
*         STOP-EXIT ROUTINE IN EACH MODULE FACILITATES TERMIN-        * 07440002
*         ATION OF THE CURRENT FUNCTION AND THEN BRANCHES TO          * 07500002
*         THE STOP-EXIT ROUTINE OF THE CALLING MODULE.  THIS          * 07560002
*         CHAIN OF STOP-EXIT ROUTINES ENDS WITH THE FINAL STOP-       * 07620002
*         EXIT IN CSECT AMDPRMSC (MODULE AMDPRCTL).  IF A REPLY       * 07680002
*         OTHER THAN 'STOP' IS GIVEN, MESSAGE AMD165I IS REISSUED.    * 07740002
*                                                                     * 07800002
* ENTRY POINTS --                                                     * 07860002
*                                                                     * 07920002
*         STANDARD SUBROUTINE LINKAGE IS USED BY ALL ROUTINES         * 07980002
*    (EXCEPT ADRCNVT AND WRDCNVT).                                    * 08040002
*                                                                     * 08100002
*         AMDPRWTR                                                    * 08160002
*                                                                     * 08220002
*         CALLING SEQUENCE TO AMDPRWTR IS GENERATED BY THE BRWRITE    * 08280002
*         PRIVATE MACRO INSTRUCTION.  ANY AMDPRDMP ROUTINE MAY        * 08340002
*         USE BRWRITE TO CAUSE A LINE OF OUTPUT TO BE WRITTEN TO      * 08400002
*         THE OUTPUT LISTING.                                         * 08460002
*                                                                     * 08520002
*         AMDPRSYN                                                    * 08580002
*                                                                     * 08640002
*         THE MESSAGE WRITER AMDPRSYN HAS SIX ENTRY POINTS.           * 08700002
*         EACH ENTRY POINT CORRESPONDS TO A PARTICULAR MESSAGE        * 08760002
*         IN AN ARRAY OF MESSAGE ADDRESSES POINTED TO BY              * 08820002
*         SYNMSGA IN AMDPRCOM.  MODULE AMDPRSYN ISSUES THE            * 08880002
*         MESSAGE WHICH CORRESPONDS TO THE ENTRY POINT AT WHICH       * 08940002
*         IT IS ENTERED.  MESSAGE AMD165I MAY BE ISSUED AS A          * 09000002
*         STANDARD MESSAGE PRECEDING THE MESSAGE ADDRESSED BY         * 09060002
*         THE MESSAGE ARRAY DEPENDING ON THE VALUE OF THE NOSTDMG     * 09120002
*         SWITCH IN SWD OF AMDPRCOM.  IF THE NOSTDMG SWITCH IS ON,    * 09180002
*         MESSAGE AMD165I IS SUPPRESSED.  THE ENTRY POINTS OF         * 09240002
*         AMDPRSYN ARE AS FOLLOWS:                                    * 09300002
*                                                                     * 09360002
*              SYNTAX & NOSTDMG OFF - ONLY MESSAGE AMD165I            * 09420002
*              SYNTAX & NOSTDMG ON - MESSAGE 1 IN ARRAY               * 09480002
*              SYNTAXA - MESSAGE 1 IN ARRAY                           * 09540002
*              SYNTAXB - MESSAGE 2 IN ARRAY                           * 09600002
*              SYNTAXC - MESSAGE 3 IN ARRAY                           * 09660002
*              SYNTAXD - MESSAGE 4 IN ARRAY                           * 09720002
*              SYNTAXE - MESSAGE 5 IN ARRAY                           * 09780002
*                                                                     * 09840002
*         A MAPPING MACRO, SYNEPS, IS PROVIDED TO DEFINE THE ENTRY    * 09900002
*         POINTS OF AMDPRSYN FOR CALLING ROUTINES.  IF THE ARRAY      * 09960002
*         ADDRESS, SYNMSGA, IS ZERO, AMDPRSYN SETS THE FLSHMODE       * 10020002
*         SWITCH IN SWD OF AMDPRCOM, AND RETURNS TO THE CALLER.       * 10080002
*         THE EFFECT OF THIS SWITCH IS TO CAUSE REMAINING CONTROL     * 10140002
*         STATEMENTS TO BE SCANNED FOR SYNTAX ERRORS BUT NONE OF      * 10200002
*         THESE STATEMENTS ARE EXECUTED.                              * 10260002
*                                                                     * 10320002
*         AMDPRSYN CONTAINS TWO CONVERSION ROUTINES -                 * 10380002
*                                                                     * 10440002
*              ADRCNVT - THREE BYTE,BINARY TO HEX,CONVERSION ROUTINE  * 10500002
*              WRDCNVT - WORD,BINARY TO HEX,CONVERSION ROUTINE        * 10560002
*                                                                     * 10620002
*         AMDPRMSG                                                    * 10680002
*                                                                     * 10740002
*         CALLING SEQUENCE FOR THIS CSECT IS GENERATED BY THE         * 10800002
*         BRPRTMSG PRIVATE MACRO INSTRUCTION.  THIS MACRO MAY         * 10860002
*         BE USED BY ANY AMDPRDMP MODULE WHICH ISSUES A MESSAGE       * 10920002
*         TO THE SYSPRINT DATA SET.                                   * 10980002
*                                                                     * 11040002
*         AMDPRGFR                                                    * 11100002
*                                                                     * 11160002
*         CSECT AMDPRGFR IS USED BY ANY AMDPRDMP MODULE WHICH         * 11220002
*         REQUIRES DATA TO BE FORMATTED FOR OUTPUT TO THE PRINTER     * 11280002
*         DATA SET.  CALLERS OF THIS ROUTINE USE THE FMTPTRN          * 11340002
*         PRIVATE MACRO INSTRUCTION TO DESCRIBE THE DATA TO BE        * 11400002
*         FORMATTED AND THE EXACT FORMAT.                             * 11460002
*                                                                     * 11520002
*         AMDPRTSV                                                    * 11580002
*                                                                     * 11640002
*         THIS CSECT CONTAINS THE MANAGEMENT ROUTINES FOR THE         * 11700002
*         TCBLIST.  AMDPRTSV HAS THREE ENTRY POINTS.                  * 11760002
*                                                                     * 11820002
*              TCBQSAVE - ENQUEUE AN ELEMENT ON THE TCB QUEUE         * 11880002
*                                                                     * 11940002
*              TCBREMV - DEQUEUE A SINGLE ELEMENT OR ALL ELEMENTS     * 12000002
*                        FROM THE TCB QUEUE                           * 12060002
*                                                                     * 12120002
*              TCBRTRV - RETRIEVE THE DATA FROM A SPECIFIC            * 12180002
*                        ELEMENT IN THE TCB QUEUE                     * 12240002
*                                                                     * 12300002
*         AMDPRSTP                                                    * 12360002
*                                                                     * 12420002
*         AMDPRSTP IS CALLED BY MODULE AMDPRWTR AS EACH LINE OF       * 12480002
*         OUTPUT IS WRITTEN, PROVIDED THE STOP OPTION HAS BEEN        * 12540002
*         SELECTED BY THE PARM FIELD OF THE EXEC CARD IN THE          * 12600002
*         AMDPRDMP JCL.                                               * 12660002
*                                                                     * 12720002
* INPUT --                                                            * 12780002
*                                                                     * 12840002
*    AMDPRWTR                                                         * 12900002
*                                                                     * 12960002
*    REGISTER 1, ON ENTRY TO AMDPRWTR, DETERMINES WHETHER             * 13020002
*    INITIALIZATION IS TO TAKE PLACE, THE CARRIAGE CONTROL WHICH IS   * 13080002
*    APPLIED TO THE OUTPUT LINE, OR, IF AN IMMEDIATE SPACE       S21014 13140002
*    OPERATION IS TO BE PERFORMED                                S21014 13200002
*                                                                     * 13260002
*        -5    - SPACE THREE LINES IMMEDIATELY                   S21014 13320002
*        -4    - SPACE TWO LINES IMMEDIATELY                     S21014 13380002
*        -3    - SPACE ONE LINE IMMEDIATELY                      S21014 13440002
*        -2    - SKIP TO CHANNEL 1 IMMEDIATLEY                   S21014 13500002
*        -1    - SKIP TO CHANNEL 1 AFTER PRINTING.                    * 13560002
*         0    - OPEN DCB AND GET CORE FOR BUFFER IF NOT ALREADY      * 13620002
*                DONE - NOTHING IS TO BE PRINTED.                     * 13680002
*         1    - SPACE ONE LINE AFTER PRINTING.                       * 13740002
*         2    - SPACE TWO LINES AFTER PRINTING.                      * 13800002
*         3    - SPACE THREE LINES AFTER PRINTING.                    * 13860002
*         GT 3 - SPACE ONE LINE AFTER PRINTING.                       * 13920002
*                                                                     * 13980002
*    IF AN IMMEDIATE SPACE OPERATION IS TO BE PREFORMED,         S21014 14040002
*    AMDPRWTR ISSUES THE GETMAIN MACRO INSTRUCTION TO OBTAIN     S21014 14100002
*    STORAGE FOR A TEMPORARY BUFFER.  THIS AREA IS THEN CLEARED  S21014 14160002
*    TO BLANKS AND THE CONTROL CHARACTER FOR 1, 2, OR 3 SPACES,  S21014 14220002
*    OR SKIP TO CHANNEL 1 AFTER PRINTING IS INSERTED,            S21014 14280002
*    DEPENDING ON THE VALUE IN REGISTER 1.  AFTER THIS BUFFER    S21014 14340002
*    IS PRINTED, IT IS FREED.                                    S21014 14400002
*                                                                     * 14460002
*    IF AN OUTPUT LINE IS TO BE WRITTEN, THE LABEL               S21014 14520002
*    CURBUF IN AMDPRCOM IS THAT OF A FULL WORD WHICH             S21014 14580002
*    CONTAINS THE ADDRESS OF THE OUTPUT LINE WHICH IS WRITTEN         * 14640002
*    TO THE PRINTER DATA SET.                                         * 14700002
*                                                                     * 14760002
*    AMDPRSYN                                                         * 14820002
*                                                                     * 14880002
*    INPUT TO AMDPRSYN IS MESSAGE ARRAY ADDRESS AT ADDRESS AT         * 14940002
*    LABEL SYNMSGA.  THIS ARRAY CONSISTS OF FROM 1 TO 5 FULLWORD      * 15000002
*    ADDRESS, EACH OF WHICH IS THE ADDRESSOF A WTO PARAMETER LIST.    * 15060002
*    IF SYNMSGA IS ZERO, AMDPRSYN SETS THE FLSHMODE SWITCH AND        * 15120002
*    RETURNS TO THE CALLER.                                           * 15180002
*                                                                     * 15240002
*    NOSTDMG IN SWD OF AMDPRCOM IS TESTED, IF THIS BIT IS ON,         * 15300002
*    MESSAGE AMD165I IS NOT ISSUED PRIOR TO ISSUING THE SELECTED      * 15360002
*    MESSAGE IN THE ARRAY.                                            * 15420002
*                                                                     * 15480002
*    AMDPRSYN CONVERSION ROUTINES-                                    * 15540002
*                                                                     * 15600002
*         ADRCNVT                                                     * 15660002
*              R1 - ADDRESS OF DATA TO BE CONVERTED                   * 15720002
*              R4 - ADDRESS OF WHERE TO PLACE RESULT                  * 15780002
*              R5 - CLOBBERED BY ADRCNVT                              * 15840002
*                                                                     * 15900002
*         WRDCNVT                                                     * 15960002
*                                                                     * 16020002
*              R1 - ADDRESS IF DATA TO BE CONVERTED                   * 16080002
*              R4 - ADDRESS OF WHERE TO PLACE RESULT                  * 16140002
*              R5 - CLOBBERED BY WRDCNVT                              * 16200002
*                                                                     * 16260002
*    AMDPRMSG                                                         * 16320002
*                                                                     * 16380002
*    THE BRPRTMSG MACRO INSTRUCTION LOADS REGISTERS 1 AND 2 WITH      * 16440002
*    THE FOLLOWING PARAMETERS:                                        * 16500002
*                                                                     * 16560002
*         R1 - ADDRESS OF MESSAGE TO BE PRINTED                       * 16620002
*         R2 - LENGTH OF MESSAGE (RANGE 1 TO 112)                     * 16680002
*                                                                     * 16740002
*    AMDPRFGR                                                         * 16800002
*                                                                     * 16860002
*    INPUT TO THIS ROUTINE IS A LIST OF FMTPTRN MACRO INSTRUCTIONS.   * 16920002
*    EACH FMTPTRN DESCRIBES A DATA ITEM TO BE FORMATTED, THE          * 16980002
*    POSITION OF THE DATA ITEM IN THE OUTPUT BUFFER AND THE LABEL     * 17040002
*    THAT IDENTIFIES THAT DATA ITEM.                                  * 17100002
*                                                                     * 17160002
*    AMDPRTSV                                                         * 17220002
*                                                                     * 17280002
*         TCBQSAVE - ENQUEUE                                          * 17340002
*                                                                     * 17400002
*              R2 - TCB ADDRESS TO BE STORED IN LIST ELEMENT          * 17460002
*                                                                     * 17520002
*         TCBREMV - DEQUEUE                                           * 17580002
*                                                                     * 17640002
*              R2 - 0 - DEQUEUE ALL TCB QUEUE ELEMENTS                * 17700002
*                 - TCB ADDRESS WHOSE ELEMENT IS TO BE DEQUEUED       * 17760002
*                   FROM THE TCBLIST                                  * 17820002
*                                                                     * 17880002
*         TCBRTRV - RETRIEVE                                          * 17940002
*                                                                     * 18000002
*              R2 - POSITION (1 ORIGIN) OF ELEMENT IN TCBLIST FOR     * 18060002
*                   WHICH THE TCB IS TO BE RETURNED TO THE CALLER     * 18120002
*                                                                     * 18180002
*    AMDPRSTP                                                         * 18240002
*                                                                     * 18300002
*    INPUT TO AMDPRSTP IS THE OPERATORS RESPONSE TO MESSAGE           * 18360002
*    AMD156I.  THE ONLY VALID REPLY TO THIS MESSAGE IS THE            * 18420002
*    CHARACTER STRING 'STOP'.  MESSAGE AMD156I IS REISSUED IF         * 18480002
*    THE REPLY IS INVALID.                                            * 18540002
*                                                                     * 18600002
* OUTPUT --                                                           * 18660002
*                                                                     * 18720002
*    AMDPRWTR                                                         * 18780002
*                                                                     * 18840002
*    THE OUTPUT LINE POINTED TO BY THE ADDRESS AT CURBUF IN           * 18900002
*    AMDPRCOM IS WRITTEN TO THE PRINTER DATA SET, OR IN THE      S21014 18960002
*    CASE OF AN IMMDEIATE OPERATION, A BLANK LINE WITH           S21014 19020002
*    PROPER CONTROL CHARACTER IS WRITTEN TO THE PRINTER          S21014 19080002
*    DATA SET.  IF THE VALUE OF THE LINECNT                      S21014 19140002
*    PARAMETER IN AMDPRCOM INDICATES THE OUTPUT                       * 19200002
*    LISTING IS POSITIONED TO THE TOP OF A PAGE, AMDPRWTR TITLES      * 19260002
*    THE NEW PAGE WITH THE STANDARD AMDPRDMP PAGE TITLES.             * 19320002
*                                                                     * 19380002
*    AMDPRSYN                                                         * 19440002
*                                                                     * 19500002
*    MESSAGE AMD165I (IF NOT SUPPRESSED BY NOSTDMG) AND THE           * 19560002
*    MESSAGE REQUESTED BY THE CALLER ARE ISSUED TO THE SYSPRINT       * 19620002
*    DATA SET BY MEANS OF THE BRPRTMSG PRIVATE MACRO.  IF THE         * 19680002
*    RDRSW IN SWA OF AMDPRCOM IS OFF, AMDPRDMP CONTROL STATEMENTS     * 19740002
*    ARE BEING ENTERED FROM THE CONSOLE AND HENCE AMD165I (IF         * 19800002
*    NOT SUPPRESSED) IS ISSUED TO THE CONSOLE.                        * 19860002
*                                                                     * 19920002
*    IF THE NOSTMSG SWITCH IS OFF OR IF SYNMSGA IS ZERO AND           * 19980002
*    CONTROL STATEMENTS ARE NOT BEING ENTERED FROM THE CONSOLE,       * 20040002
*    THE FLSHMODE SWITCH IN SWD OF AMDPRCOM IS TURNED ON.             * 20100002
*    IF FLSHMODE WAS PREVIOUSLY OFF, MESSAGE AMD171I IS ISSUED        * 20160002
*    TO INDICATE THAT THE INPUT CONTROL CARDS ARE NOT BEING           * 20220002
*    EXECUTED.                                                        * 20280002
*                                                                     * 20340002
*    THE TWO CONVERT ROUTINES IN AMDPRSYN, ADRCNVT AND WRDCNVT,       * 20400002
*    PLACE THE RESULT OF THE CONVERSION PROCESS AT THE ADDRESS        * 20460002
*    CONTAINED IN REGISTER 4 ON ENTRY                                 * 20520002
*                                                                     * 20580002
*    AMDPRMSG                                                         * 20640002
*                                                                     * 20700002
*    THE MESSAGE ADDRESSED BY REGISTER 1 ON ENTRY IS WRITTEN TO THE   * 20760002
*    SYSPRINT DATA SET.  ON THE FIRST CALL TO AMDPRMSG, THE ROUTINE   * 20820002
*    THE ROUTINE TITLES THE FIRST PAGE OF THE SYSPRINT DATA SET.      * 20880002
*                                                                     * 20940002
*    AMDPRGFR                                                         * 21000002
*                                                                     * 21060002
*    THE OUTPUT LINE ADDRESSED BY CURBUF IN AMDPRCOM IS FORMATTED     * 21120002
*    AS DIRECTED BY THE FMTPTRN LIST PASSED TO AMDPRGFR.              * 21180002
*                                                                     * 21240002
*    AMDPRTSV                                                         * 21300002
*                                                                     * 21360002
*         TCBQSAVE - NONE                                             * 21420002
*                                                                     * 21480002
*         TCBREMV - NONE                                              * 21540002
*                                                                     * 21600002
*         TCBRTRV - THE TCB ADDRESS FROM THE REQUESTED TCBLIST        * 21660002
*                   ELEMENT IS RETURNED IN REGISTER 7.                * 21720002
*                                                                     * 21780002
*    AMDPRSTP                                                         * 21840002
*                                                                     * 21900002
*    IF THE SYSTEM OPERATOR ENTERS 'STOP' IN RESPONSE TO MESSAGE      * 21960002
*    AMD156I, MESSAGE AMD172I IS ISSUED TO THE SYSPRINT AND THE       * 22020002
*    PRINTER DATA SETS TO MARK THE POINT AT WHICH THE AMDPRDMP        * 22080002
*    FUNCTION WAS TERMINATED.                                         * 22140002
*                                                                     * 22200002
* EXTERNAL REFERENCES --                                              * 22260002
*                                                                     * 22320002
*    AMDPRWTR                                                         * 22380002
*                                                                     * 22440002
*         DEVTYPE - TO VERIFY PRINTER DD STATEMENT HAS BEEN           * 22500002
*                   SUPPLIED WITH THE AMDPRDMP JCL AND TO             * 22560002
*                   DETERMINE THE MAXIMUM RECORD SIZE FOR THE         * 22620002
*                   ALLOCATED DEVICE                                  * 22680002
*                                                                     * 22740002
*         OPEN  -   TO OPEN THE PRINTER DATA SET.                     * 22800002
*                                                                     * 22860002
*         GETMAIN - TO OBTAIN MAIN STORAGE FOR A 133 CHARACTER        * 22920002
*                   OUTPUT BUFFER                                     * 22980002
*                                                                     * 23040002
*         FREEMAIN - TO FREE THE TEMPORARY BUFFER USED           S21014 23100002
*                    FOR AN IMMDEIATE SPACE OPERATION            S21014 23160002
*                                                                     * 23220002
*         PUT  -    TO CAUSE OUTPUT TO BE WRITTEN TO THE PRINTER      * 23280002
*                   DATA SET                                          * 23340002
*                                                                     * 23400002
*    AMDPRSYN                                                         * 23460002
*                                                                     * 23520002
*         BRPRTMSG - TO WRITE REQUESTED MESSAGES TO THE SYSPRINT      * 23580002
*                    DATA SET                                         * 23640002
*                                                                     * 23700002
*         WTO  -     TO WRITE REQUESTED MESSAGES TO THE OPERATOR'S    * 23760002
*                    CONSOLE                                          * 23820002
*                                                                     * 23880002
*    AMDPRMSG                                                         * 23940002
*                                                                     * 24000002
*         OPEN - TO OPEN THE SYSPRINT DATA SET                        * 24060002
*                                                                     * 24120002
*         PUT -  TO CAUSE OUTPUT TO BE WRITTEN TO THE SYSPRINT        * 24180002
*                DATA SET                                             * 24240002
*                                                                     * 24300002
*    AMDPRGFR                                                         * 24360002
*                                                                     * 24420002
*         BRREAD - TO READ DATA TO BE FORMATTED FROM THE DUMP         * 24480002
*                  DATA SET                                           * 24540002
*                                                                     * 24600002
*    AMDPTTSV                                                         * 24660002
*                                                                     * 24720002
*         GETMAIN - TO OBTAIN MAIN STORAGE FOR TCBLIST ELEMENTS       * 24780002
*                                                                     * 24840002
*         FREEMAIN - TO FREE MAIN STORAGE USED FOR A TCBLIST ELEMENT  * 24900002
*                                                                     * 24960002
*    AMDPRSTP                                                         * 25020002
*                                                                     * 25080002
*         BRPRTMSG - TO WRITE MESSAGES TO THE SYSPRINT DATA SET       * 25140002
*                                                                     * 25200002
*         BRWRITE  - TO WRITE MESSAGE AMD172I TO THE PRINTER DATA SET * 25260002
*                                                                     * 25320002
*         WTOR  -    TO WRITE MESSAGE AMD156I TO THE OPERATOR'S       * 25380002
*                    CONSOLE                                          * 25440002
*                                                                     * 25500002
* EXITS,NORMAL --                                                     * 25560002
*                                                                     * 25620002
*    AMDPRWTR  - RETURN TO CALLER                                     * 25680002
*                                                                     * 25740002
*    AMDPRSYN  - RETURN TO CALLER                                     * 25800002
*                                                                     * 25860002
*    AMDPRMSG  - RETURN TO CALLER                                     * 25920002
*                                                                     * 25980002
*    AMDPRTSV  - RETURN TO CALLER WITH CODE 0                         * 26040002
*                                                                     * 26100002
*    AMDPRSTP  - IF STOP HAS NOT BEEN ENTERED IN RESPONSE TO          * 26160002
*                MESSAGE AMD156I, AMDPRSTP RETURNS TO THE CALLER,     * 26220002
*                AMDPRWTR.  IF STOP HAS BEEN ENTERED, AMDPRSTP        * 26280002
*                BRANCHES TO THE CURRENT STOP-EXIT ROUTINE            * 26340002
*                AS ADDRESSED BY THE WORD AT STOPEXIT IN AMDPRCOM     * 26400002
*                                                                     * 26460002
* EXITS,ERROR --                                                      * 26520002
*                                                                     * 26580002
*    AMDPRWTR  - IF THE PRINTER DD STATEMENT HAS NOT BEEN SUP-        * 26640002
*                PLIED WITH THE AMDPRDMP JCL, AMDPRWTR BRANCHES       * 26700002
*                TO THE TERMINATION ROUTINE AMDPRXIT.                 * 26760002
*                                                                     * 26820002
*    AMDPRSYN  - NONE                                                 * 26880002
*                                                                     * 26940002
*    AMDPRMSG  - NONE (IF THE SYSPRINT DD STATEMENT IS NOT SUP-       * 27000002
*                PLIED WITH THE AMDPRDMP JCL, THE ACTION OF           * 27060002
*                AMDPRMSG BECOMES AN IMMEDIATE RETURN)                * 27120002
*                                                                     * 27180002
*    AMDPRGFR  - NONE                                                 * 27240002
*                                                                     * 27300002
*    AMDPRTSV                                                         * 27360002
*                                                                     * 27420002
*         TCBQSAVE - NONE                                             * 27480002
*                                                                     * 27540002
*         TCBREMV - THE TCB DEQUEUE ROUTINE EXITS WITH RETURN         * 27600002
*                   CODE 4 IN CASE THE TCBLIST IS EMPTY WHEN          * 27660002
*                   THE ROUTINE IS ENTERED                            * 27720002
*                                                                     * 27780002
*         TCBRTRV - THIS ROUTINE EXITS WITH RETURN CODE 4 IN CASE     * 27840002
*                   THE ELEMENT FOR WHICH INFORMATION IS REQUESTED    * 27900002
*                   (BY POSITION NUMBER) IS NOT ON THE TCBLIST        * 27960002
*                                                                     * 28020002
*    AMDPRSTP - NONE                                                  * 28080002
*                                                                     * 28140002
* TABLES/WORK AREAS --                                                * 28200002
*                                                                     * 28260002
*    AMDPRCOM, THE FIRST CSECT IN THIS MODULE IS THE MAIN AMDPRDMP    * 28320002
*    COMMUNICATIONS AREA.  REGISTER 12 IN ALL MODULES ADDRESSES       * 28380002
*    THIS AREA.                                                       * 28440002
*                                                                     * 28500002
* ATTRIBUTES --   NON-REUSABLE                                        * 28560002
*                                                                     * 28620002
* CHARACTER CODE DEPENDENCY --   EBCDIC                               * 28680002
*                                                                     * 28740002
* NOTES --   NONE                                                     * 28800002
*                                                                     * 28860002
*********************************************************************** 28920002
         EJECT                                                          28980002
*********************************************************************** 29040002
***                 ***  FL/1 STATEMENTS  ***                       *** 29100002
*********************************************************************** 29160002
         SPACE                                                          29220002
*/*AMDPRCOM: CHART (AMODE,SEQ) */                                       29280002
*/*HEADER                                                               29340002
*/*AMDPRCOM - CONTROL/SCAN SERVICE ROUTINE FLOWCHARTS                   29400002
*/*                                                      PAGE #    */   29460002
*/*AMDPRWTR: E AMDPRWTR */                                              29520002
*/* N THIS ROUTINE WRITES LINES TO THE DATA SET DEFINED BY PRINTER DD   29580002
*/**/                                                                   29640002
*/* M SET UP ADDRESSABILITY */                                          29700002
*/* D (YES,WRITE1,NO,) IS OUTDCB OPEN */                                29760002
*/* L ISSUE DEVTYPE FOR PRINTER DD */                                   29820002
*/* D (NO,WRTABEND,YES,) IS THERE A PRINTER DD CARD */                  29880002
*/* L OPEN OUTDCB */                                                    29940002
*/* D (NO,WRTABEND,YES,) DID IT OPEN */                                 30000002
*/* P SAVE ADDR OF OUTDCB IN COMMON CSECT */                            30060002
*/* P SAVE ADDR OF BUFFER IN COMMON */                                  30180002
*/* P BLANK OUT THE BUFFER */                                           30240002
*/* P RESTORE REGS 1 AND 2 */                                           30300002
*/*WRITE1: P LOAD BUFREG WITH ADDR OF BUFFER */                         30360002
*/* D (YES,PREFMDMP,NO,) PREFORMATTED DUMP */                           30370002
*/*WRITE12: P SET RETURN ADDRESS EQUAL TO WRITECLR */                   30410002
*/* D (<0,WRITEIMM,0,WRITERET,>0,) TEST PREG */                         30420002
*/* D (NO,WRITE2,YES,) IS PREG > 3 */                                   30480002
*/* P (,WRITE2) SET PREG = 1 */                                         30540002
*/*WRITE2: D (NO,WRITE3,YES,) AT TOP OF PAGE */                         30590002
*/* D (YES,WRITESTP,NO,) IS LINE TO BE PRINTED ALL BLANKS */            30592002
*/*WRITE3: P DECREMENT LINECNT BY VALUE IN PREG */                      30600002
*/* D (NO,WRTSKIPA,YES,) IS RESULTS > 0 */                              30660002
*/* P REPLACE LINECNT IN COMMON */                                      30720002
*/* P PUT CONTROL CHAR IN 1ST BYTE OF BUFFER */                         30770002
*/* P GET ANSI CODE BASED ON VALUE IN PREG */                           30780002
*/* P SAVE CONTROL CHAR FOR NEXT PRINT OPERATION */                     30840002
*/*WRITEPUT: P PUT ADDR OF BUFREG IN REG 0 */                           30900002
*/* I PRINT THE BUFFER */                                               30960002
*/* R RETURN TO ADDRESS IN R9 */                                        31010002
*/*WRITECLR: P BLANK OUT THE BUFFER */                                  31020002
*/*WRITETST: D (YES,PRTTITLE,NO,) IS THIS TOP OF PAGE */                31080002
*/*WRITESTP: D (NO,WRITERET,YES,) STOPSW ON */                          31140002
*/* L AMDPRSTP   -  GO SEE IF 'STOP' IS REQUESTED */                    31200002
*/* N WILL NOT RETURN IF 'STOP' REQUESTED */                            31260002
*/*WRITERET: M RESTORE REGS */                                          31320002
*/* R RETURN */                                                         31380002
*/*WRTSKIP: P GET PRESENT LINECNT */                                    31440002
*/* D (YES,WRTIGNR,NO,) IS TTLSW ON */                                  31500002
*/* D (NO,WRTSKIPA,YES,) 1ST. LINE AFTER PAGE TITLE */                  31560002
*/*WRTIGNR: M TURN OFF TTLSW */                                         31620002
*/* P LOAD REG 2 WITH ADDR OF BUFFER */                                 31680002
*/* P LOAD REG 5 WITH ADDR OF END OF BUFFER */                          31740002
*/* P LOAD REG 4 WITH 8 */                                              31800002
*/*WRTSKIPB: D (YES,WRTSKIPA,NO,) A NON BLANK IN BUFFER */              31860002
*/* D (YES,WRITESTP,NO,WRTSKIPB) END OF BUFFER */                       31920002
*/*WRTSKIPA: P MOVE SKIP - TO - CHAN 1 CODE TO SAVEAREA */              31980002
*/* P (,WRITEPUT) SET LINECNT TO LINENUMB */                            32040002
*/*PRTTITLE: N PRINT TITLE AT TOP OF EACH PAGE */                       32100002
*/* P ADD 1 TO PAGENUMB */                                              32160002
*/* P CONVERT THE PAGE NUMBER TO PRINTABLE DIGITS */                    32220002
*/* P MOVE PAGE NUMBER TO TITLE */                                      32280002
*/* P MOVE TITLE TO BUFFER */                                           32340002
*/* D (YES,PREFMTTL,NO,) PREFORMATTED DUMP */                           32390002
*/* P (,WRITE12) SET PREG UP TO SPACE 2 LINES */                        32400002
*/*WRITEIMM: P CONVERT PARM COUNT TO POSITIVE NUMBER */                 32450002
*/* P SUBTRACT 1 FROM COUNT */                                          32452002
*/* D (YES,WRTSKIP,NO,) IS COUNT NOW ZERO */                            32454002
*/* D (NO,WRTIMM1,YES,) IS TTLSW ON */                                  32456002
*/* M (,WRITESTP) TURN OFF SWITCH */                                    32456402
*/*WRTIMM1: D (YES,WRITESTP,NO,) AT TOP OF PAGE */                      32456802
*/* P BLANK OUT TEMPORARY BUFFER */                                     32457202
*/* P PUT BUFFER ADDR IN R6 */                                          32458002
*/* P BLANK BUFFER */                                                   32458402
*/* P SUBTRACT 1 FROM CURRENT COUNT */                                  32458802
*/* D (NO,WRITELIN,YES,) IS COUNT NOW ZERO */                           32459202
*/*WRITESKP: S (,WRITETST) WRTSKIPA: SKIP TO CHANNEL 1 AFTER PRINTING   32459802
*/*TEMPORARY BUFFER */                                                  32459902
*/*WRITELIN: P PUT SPACE COUNT IN PREG */                               32479902
*/* S (,WRITETST) WRITE12: GO PRINT TEMPORARY BUFFER */                 32489902
*/*PREFMDMP: D (YES,PREFMSKP,NO,) LINECNT = LINENUM */                  32499902
*/* D (YES,PREFMSKP,NO,) IS CNTRL CHAR A '1' (SKIP TO CHAN 1) */        32506602
*/* P SET PREG TO 3 */                                                  32508602
*/* D (YES,PREFMCTL,NO,) IS CNTRL CHAR A '-' (SPACE 3) */               32510602
*/* P SET PREG TO 2 */                                                  32512602
*/* D (YES,PREFMCTL,NO,) IS CNTRL CHAR A '0' (SPACE 2) */               32513002
*/* P SET PREG TO 1 */                                                  32513102
*/* P OVERLAY CNTRL CHAR WITH A BLANK (SPACE 1) */                      32513202
*/*PREFMCTL: P DECREMENT LINECNT IN REGISTER */                         32529902
*/* D (YES,,NO,PREFMSKP) LINECNT GREATER THAN ZERO */                   32539902
*/* P UPDATE LINECNT IN COMMON */                                       32541902
*/*PREFMOUT: S (,WRITESTP) WRITEPUT: OUTPUT LINE */                     32543902
*/*PREFMSKP: P SET LINECNT */                                           32545902
*/* P INITIALIZE BUFREG TO POINT TO TEMP BUF */                         32546302
*/* P (,PRTTITLE) MOVE IN CONTROL CHARACTER (SKIP) */                   32546402
*/*PREFMTTL: S WRITEPUT: OUTPUT TITLE */                                32546502
*/* P CLEAR BUFFER */                                                   32552102
*/* P RESTORE BUFFER POINTER */                                         32554102
*/* P (,PREFMOUT) SET CONTROL CHAR (SPACE 2) */                         32556102
*/*PERROR: N OUTDCB SYNAD ROUTINE */                                    32557702
*/* P SET REG 0 = 0 */                                                  32563302
*/* P (,PEXIT) SET REG 1 = 12 FOR MSG AMD153I */                        32580002
*/*WRTABEND: P SET REG 0 = 0 */                                         32640002
*/* P SET REG 1 = 0 FOR OPEN ERROR MSG */                               32700002
*/*PEXIT: P GET EXIT ROUTINE ADDR FROM COMMON */                        32760002
*/* R GO TO EXIT ROUTINE */                                             32820002
*/*OUTEXIT: E OUTEXIT */                                                32880002
*/* N OUTDCB EXIT ROUTINE DURING OPEN */                                32940002
*/* M SET UP ADDRESSABILITY */                                          33000002
*/* P INIT. DEFAULT BLKSIZE & LRECL VALUE */                            33060002
*/* D (YES,OUTEXIT1,NO,) WAS LRECL GIVEN ON DD CARD */                  33120002
*/* P PUT DEFAULT LRECL IN OUTDCB */                                    33180002
*/*OUTEXIT1: D (YES,OUTEXIT2,NO,) WAS BLKSIZE GIVEN ON DD CARD */       33240002
*/* P PUT DEFAULT BLKSIZE IN OUTDCB */                                  33300002
*/*OUTEXIT2: P GET BLKSIZE FROM DCB */                                  33360002
*/* D (NO,OUTEXIT7,YES,) IS IT > MAX RECORD SIZE FOR THE DEVICE */      33420002
*/* P PUT MAX RECORD SIZE FOR THE DEVICE IN BLKSIZE */                  33480002
*/*OUTEXIT7: D (=BLK,OUTEXIT4,>BLK,OUTEXIT3,<BLK,) COMPARE LRECL TO     33540002
*/*BLKSIZE */                                                           33600002
*/* P ADJUST BLKSIZE TO A MULTIPLE OF LRECL */                          33660002
*/* P PUT RESULTS IN BLKSIZE OF OUTDCB */                               33720002
*/* D (YES,OUTEXIT4,NO,) WAS BUFNO GIVEN ON DD CARD */                  33780002
*/* D (NO,OUTEXIT5,YES,) BLK FACTOR > 10 */                             33840002
*/* P (,OUTEXIT6) SET BUFNO = 2 */                                      33900002
*/*OUTEXIT4: R RETURN */                                                33960002
*/*OUTEXIT3: P STORE LRECL VALUE IN BLKSIZE OF OUTDCB */                34020002
*/* R RETURN */                                                         34080002
*/*OUTEXIT5: P SET BUFNO = 3 */                                         34140002
*/*OUTEXIT6: P PUT BUFNO IN OUTDCB */                                   34200002
*/* R RETURN */                                                         34260002
*/*AMDPRSYN: E AMDPRSYN */                                              34320002
*/* N SYNTAX MESSAGE WRITER WITH 6 ENTRY POINTS */                      34380002
*/*SYNTAX: E SYNTAX */                                                  34440002
*/* P (,SYNTAX4) INDICATE ONLY STANDARD ERROR MSG DESIRED */            34500002
*/*SYNTAXA: E SYNTAXA */                                                34560002
*/* P (,SYNTAX4) GET FIRST MSG PTR FROM SYNMSGA */                      34620002
*/*SYNTAXB: E SYNTAXB */                                                34680002
*/* P (,SYNTAX4) GET 2ND. MSG PTR FROM SYNMSGA */                       34740002
*/*SYNTAXC: E SYNTAXC */                                                34800002
*/* P (,SYNTAX4) GET 3RD. MSG PTR FROM SYNMSGA */                       34860002
*/*SYNTAXD: E SYNTAXD */                                                34920002
*/* P (,SYNTAX4) GET 4TH. MSG PTR FROM SYNMSGA */                       34980002
*/*SYNTAXE: E SYNTAXE */                                                35040002
*/* P GET 5TH. MSG PTR FROM SYNMSGA */                                  35100002
*/*SYNTAX4: M SAVE REGS AND SET UP ADDRESSABILITY */                    35160002
*/* D (YES,SYNTAX6,NO,) REQUEST FOR STANDARD MSG ONLY */                35220002
*/* D (YES,SYNTAX7,NO,) IS NOSTDMG SWITCH ON */                         35280002
*/* D (NO,SYNTAX5,YES,) COMMANDS FROM CONSOLE */                        35340002
*/* P POINT REG 1 TO WTO LIST (PTRSYN) */                               35400002
*/* I WRITE STANDARD MSG TO THE OPERATOR'S CONSOLE */                   35460002
*/*SYNTAX5: P SET UP TO WRITE STANDARD MSG TO SYSPRINT */               35520002
*/* L (,SYNTAX7) BRPRTMSG - WRITE MSG TO SYSPRINT */                    35580002
*/*SYNTAX6: D (YES,SYNTAX6A,NO,) NOSTDMG SW. ON */                      35640002
*/* D (YES,SYNTAX2,NO,) IS SYNMSGA = 0 */                               35700002
*/* P (,SYNTAX7) POINT TO STANDARD MESSAGE */                           35760002
*/*SYNTAX6A: P GET FIRST MSG PTR FROM SYNMSGA */                        35820002
*/*SYNTAX7: P SET UP TO WRITE MSG TO SYSPRINT */                        35880002
*/* L BRPRTMSG - WRITE MSG TO SYSPRINT */                               35940002
*/* SYNTAX1: M TURN OFF PRNTSW & GOSW SWITCHES */                       36240002
*/* M TURN OFF SWB & PRSW SWITCHES */                                   36300002
*/* D (YES,SYNTAX2,NO,) IS RDRSW ON?*/                                  36360002
*/* I (,SYNDONE) WRITE MSG TO OPERATOR'S CONSOLE */                     36420002
*/*SYNTAX2: D (YES,SYNDONE,NO,) IS NOSTDMG SW ON? */                    36480002
*/*  L BRPRTMSG WRITE FLUSH MESSAGE */                                  36600002
*/*SYNDONE: M TURN OFF NOSTDMG SWITCH */                                36660002
*/*  M RESTORE REGISTERS */                                             36720002
*/*  R RETURN  */                                                       36780002
*/*ARDCNVT: E ARDCNVT */                                                36840002
*/*  N ROUTINE TO CONVERT A 3 BYTE ADDRESS */                           36900002
*/*  N ENTRY POINT IN COMMON */                                         36960002
*/*  P PUT ADDRESS OF VALUE TO BE CONVERTED IN REG 5 */                 37020002
*/*  P SAVE REG 1 */                                                    37080002
*/*  N REG 4 POINTS TO AREA TO CONTAIN CONVERTED VALUE */               37140002
*/*  P HEXCNVT: MACRO TO CONVERT 3 BYTES TO PRINTABLE HEX */            37200002
*/*  P RESTORE REG 1 */                                                 37260002
*/*  R RETURN  */                                                       37320002
*/*WRDCNVT: E WRDCNVT */                                                37380002
*/*  N ROUTINE TO CONVERT A WORD (ENTRY PT. IN COMMON) */               37440002
*/*  P PUT ADDRESS OF WORD TO BE CONVERTED IN REG 5 */                  37500002
*/*  N REG 4 POINTS TO AREA TO CONTAIN CONVERTED WORD */                37560002
*/*  P HEXCNVT: MACRO TO CONVERT 4 BYTES TO PRINTABLE HEX */            37620002
*/*  P RESTORE REG 1 */                                                 37680002
*/*  R RETURN  */                                                       37740002
*/*AMDPRMSG: E AMDPRMSG */                                              37800002
*/*  N ROUTINE THAT WRITES MESSAGES TO THE SYSOUT DATA SET */           37860002
*/*  M SET UP ADDRESSABILITY */                                         37920002
*/*PRTMSG: P THIS IS A NOP THAT GOES TO PRTRET IF NO SYSPRINT DD */     37980002
*/*  D (YES,PRTMSG1,NO,) IS SYSPRINT DCB OPEN? */                       38040002
*/*  P SAVE REG 1 THROUGH OPENING PROCESS */                            38100002
*/*  L OPEN SYSPRINT DCB */                                             38160002
*/*  D (,,N0,PRTMSG3) DID DCB OPEN? */                                  38220002
*/*  P (,%L1) PUT SYSPRINT DCB ADDRESS IN COMMON */                     38280002
*/*PRTMSG3: P SET NOP AT PRTMSG TO BRANCH TO PRTRET */                  38340002
*/*%L1: P MOVE 'MSG LOG' TITLE TO BUFFER */                             38400002
*/*  I PRINT THE TITLE */                                               38460002
*/*  P CLEAR THE BUFFER */                                              38520002
*/*  I PRINT A BLANK LINE */                                            38580002
*/*  P RESTORE REG 1 */                                                 38640002
*/*PRTMSG1: P CLEAR THE BUFFER */                                       38700002
*/*  D (YES,PRTMSG2,NO,) IS LENGTH OF MSG = 0? */                       38760002
*/*  P MOVE THE MESSAGE TO MSGBUF */                                    38820002
*/*PRTMSG2: I PRINT THE MESSAGE */                                      38880002
*/*PRTRET: M RESTORE THE REGISTERS */                                   38940002
*/*  R RETURN  */                                                       39000002
*/*AMDPRGFR: E AMDPRGFR */                                              39060002
*/*  N THIS ROUTINE FORMATS A LINE USING A FORMAT PATTERN */            39120002
*/*  M SET UP ADDRESSABILITY */                                         39180002
*/*  P SAVE ASID PASSED IN REG 0 */                                     39240002
*/*  P PUT PATTERN ADDRESS IN REG 8 FOR BASING */                       39300002
*/*  P GET OUTPUT BUFFER ADDRESS FROM COMMON */                         39360002
*/*FMTLNLP: P ZERO INDEX REG FOR PATTERN */                             39420002
*/*  D (YES,FMTLNRT,NO,) IS PATTERN CODE = 0? */                        39480002
*/*  D (YES,FMTLN1,NO,) IS THERE A LABEL? */                            39540002
*/*FMTLNA: D (YES,FMTLN2,NO,) IS THERE DATA? */                         39600002
*/*FMTLNB: P (,FMTLNLP) UPDATE PATTERN BASE TO POINT TO NEXT PATTERN */ 39660002
*/*FMTLN1: N MOVE LABEL TO OUTPUT BUFFER */                             39720002
*/*  P GET LABEL LENGTH FROM PATTERN AND POSITION IT */                 39780002
*/*  D (YES,%L2,NO,) IS THERE A LABEL POINTER? */                       39840002
*/*FMTLN1A: P (,FMTLN1B) P GET ADDRESS OF THE NEXT LABEL */             39900002
*/*%L2: P GET LABEL PTR FROM PATTERN */                                 39960002
*/*   P ADD 4 TO INDEX REGISTER */                                      40020002
*/*FMTLN1B: P UPDATE ADDRESS OF THE NEXT LABEL AND SAVE IT */           40080002
*/*  P GET LABEL OFFSET FROM PATTERN */                                 40140002
*/*  P ADD OFFSET TO ADDRESS OF BUFFER */                               40200002
*/*  P (,FMTLNA) MOVE LABEL TO BUFFER */                                40260002
*/*FMTLN2: N PUT DATA IN PRINT LINE */                                  40320002
*/*  P GET DATA LENGTH FROM PATTERN AND ADJUST IT */                    40380002
*/*  D (YES,,NO,FMTLN2A) IS THERE A DATA PTR? */                        40440002
*/*  P GET DATA PTR FROM PATTERN */                                     40500002
*/*  P (,FMTLN2B) ADD 4 TO INDEX REGISTER */                            40560002
*/*FMTLN2A: P GET ADDRESS OF NEXT DATA */                               40620002
*/*FMTLN2B: P UPDATE ADDRESS OF NEXT DATA AND SAVE IT */                40680002
*/*  P GET DATA OFFSET FROM PATTERN */                                  40740002
*/*  D (YES,FMTLN3,NO,) IS DATA IN STORAGE? */                          40800002
*/*  P GET ADDRESS OF WORK AREA */                                      40860002
*/*  D (YES,,NO,FMTLN2C) IS DATA TO BE EBCDIC? */                       40920002
*/*  P GET ADDRESS OF WHERE TO PUT DATA IN BUFFER */                    40980002
*/*FMTLN2C: P SAVE REGS 2 - 7 */                                        41040002
*/*  P PUT ASID VALUE IN REG 0 */                                       41100002
*/*FMTLN2D: L BRREAD    - READ FOR THE DATA */                          41160002
*/*  N AT MOST ONLY 4 BYTES OF DATA ARE ASSURED TO BE VALID */          41220002
*/*  P CALCULATE NUMBER OF BYTES THAT CAN BE MOVED */                   41280002
*/*  D (YES,FMTLN2F,NO,) IS NUMBER OF BYTES < 4? */                     41340002
*/*  P PUT 4 IN LENGTH REGISTER */                                      41400002
*/*FMTLN2E: P DECREMENT LENGTH TO BE MOVED FROM REMAINING LENGTH */     41460002
*/*  D (YES,,NO,FMTLN2F) RESULTS > 0? */                                41520002
*/*  P INCREMENT 'FROM' ADDRESS */                                      41580002
*/*  P MOVE DATA TO AREA */                                             41640002
*/*  P (,FMTLN2D) INCREMENT 'TOO' ADDRESS */                            41700002
*/*FMTLN2F: P ADD SUBTRACTED VALUE BACK TO LENGTH */                    41760002
*/*  D (YES,FMTLN2G,NO,) IS RESULTS = 0? */                             41820002
*/*  P MOVE LAST PART OF DATA */                                        41880002
*/*FMTLN2G: P RESTORE REGISTERS 2 - 7 */                                41940002
*/*  D (YES,FMTLNB,NO,) IS DATA EBCDID? */                              42000002
*/*FMTLN2H: P GET ADDRESS OF WHERE TO PUT DATA IN BUFFER */             42060002
*/*  P (,FMTLNB) HEXCVNT:MACRO TO CONVERT DATA TO PRINTABLE HEX */      42120002
*/*FMTLN3: P MOVE DATA 'FROM' ADDRESS TO REG 7 */                       42180002
*/*  D (YES,,NO,FMTLN2H) IS DATA TO BE EBCDIC? */                       42240002
*/*  P GET DATA 'TOO' ADDRESS */                                        42300002
*/*  P MOVE DATA 'FROM' ADDRESS TO PREG */                              42360002
*/*  P DECREMENT LENGTH FOR MOVING DATA */                              42420002
*/*  P (,FMTLNB) MOVE EBCDIC DATA TO BUFFER */                          42480002
*/*FMTLN4: P HEXCVNT: MACRO TO CONVERT DATA TO PRINTABLE HEX */         42540002
*/*  R RETURN VIA REG 9 */                                              42600002
*/*FMTLNRT: M RESTORE REGS */                                           42660002
*/*  R RETURN */                                                        42720002
*/*AMDPRTSV: E (SAVE,TCBQSAVE,REMV,TCBREMV,RTRV,) AMDPRTSV */           42780002
*/*TCBRTRV: E TCBRTRV */                                                42840002
*/*  N ENTER HERE TO GET A TCB ADDRESS FROM THE LIST */                 42900002
*/*  M SAVE REGISTERS */                                                42960002
*/*  P SET ENTRY CODE = 0 */                                            43020002
*/*BASETCB: P SET UP BASE REG AND CHAIN SAVE AREA */                    43080002
*/*  D (0,RTRV,4,REMV,8,) BRANCH ON ENTRY CODE */                       43140002
*/*SAVE: D (YES,TCBRET,NO,) IS TCB ADDR IN REG 2 = 0? */                43200002
*/*  P GET ADDRESS OF TCB LIST PTR */                                   43260002
*/*TCBSVLP: P GET TCB LIST PTR */                                       43320002
*/*  D (YES,TCBSAVE2,NO,) IS PTR = 0? */                                43380002
*/*  D (YES,,NO,%L4) ADDR IN LIST = REG 2? */                           43440002
*/*TCBSAVE3: P (,TCBRET1) SET RETURN CODE FOR DUPLICATE TCB */          43500002
*/*%L4: P (,TCBSVLP) UPDATE LIST PTR ADDRESS */                         43560002
*/*TCBSAVE2: L GETMAIN    - GET STORAGE FOR TCB LIST ENTRY */           43620002
*/*  P PUT NEW ENTRY ON TCB LIST */                                     43680002
*/*  P (,TCBRET) PUT TCB ADDRESS IN ENTRY */                            43740002
*/*TCBQSAVE: E TCBQSAVE */                                              43800002
*/*  N ENTER HERE TO SAVE TCB ADDRESS ON TCB LIST */                    43860002
*/*  M SAVE REGISTERS */                                                43920002
*/*  P (,BASETCB) SET ENTRY CODE = 8 */                                 43980002
*/*TCBREMV: E TCBREMV */                                                44040002
*/*  N ENTER HERE TO REMOVE A TCB ENTRY FROM TCB LIST */                44100002
*/*  M SAVE REGISTERS */                                                44160002
*/*  P (,BASETCB) SET ENTRY CODE = 4 */                                 44220002
*/*REMV: D (YES,,NO,TCBREMV1) REG 2 = 0? */                             44280002
*/*  M SET SWITCH TO REMOVE ALL TCB ENTRIES */                          44340002
*/*TCBREMV1: P GET ADDRESS OF TCB LIST PTR */                           44400002
*/*TCBRMLP: P GET TCB LIST PTR */                                       44460002
*/*  D (YES,TCBRET,NO,) IS PTR = 0? */                                  44520002
*/*  D (YES,,NO,%L5) REG 1 = TCB ADDR IN ENTRY? */                      44580002
*/*TCBREMV2: P REMOVE ENTRY FROM LIST */                                44640002
*/*  P (,TCBRMLP) FREE STORAGE FOR ENTRY */                             44700002
*/*%L5: P (,TCBRMLP) UPDATE ADDRESS OF TCB LIST PTR */                  44760002
*/*TCBRET: P SET RETURN CODE = 0 */                                     44820002
*/*TCBRET1: M RESET REMOVE ALL SWITCH */                                44880002
*/*  M RESTORE REGISTERS */                                             44940002
*/*  R RETURN */                                                        45000002
*/*RTRV: D (YES,,NO,%L6) REG 2 =0? */                                   45060002
*/*  R RETURN */                                                        45120002
*/*%L6: P GET ADDRESS OF TCB LIST PTR */                                45180002
*/*TCBRTVLP: P GET TCB LIST PTR */                                      45240002
*/*  D (YES,TCBRTRV1,NO,) IS PTR = 0? */                                45300002
*/*  P POINT TO NEXT ENTRY */                                           45360002
*/*  D (YES,,NO,TCBRTVLP) REG 2 = 0? */                                 45420002
*/*  P (,TCBRET) PUT TCB ADDRESS IN REG 2 */                            45480002
*/*TCBRTRV1: P (,TCBRET) ZERO REG 2 FOR NO MORE TCB ADDRESSES IN LIST   45540002
*/**/                                                                   45600002
*/*AMDPRSTP: E AMDPRSTP */                                              45660002
*/*  N THIS ROUTINE ALLOWS THE OPERATOR TO STOP THE DUMP PROCESSING */  45720002
*/*  D (YES,,NO,%L7) IS RECURSION SW ON? */                             45780002
*/*  R RETURN */                                                        45840002
*/*%L7: M SAVE REGS AND SET UP ADDRESSABILITY */                        45900002
*/*  D (YES,,NO,STOPWTOR) HAS WTOR BEEN ISSUED? */                      45960002
*/*  D (YES,,NO,STOPRET) IS IT COMPLETE? */                             46020002
*/*  M TURN OFF STPWTOR SWITCH */                                       46080002
*/*  P MAKE REPLY ALL CAPITALS */                                       46140002
*/*  L BRPRTMSG PRINT REPLY IN MESSAGE LOG */                           46200002
*/*  D (YES,,NO,STOPWTOR) REPLY = 'STOP'? */                            46260002
*/*  D (YES,,NO,STPRT1) IS OUTDCB OPEN? */                              46320002
*/*  M SET ON RECURSION SWITCH */                                       46380002
*/*  L BRWRITE  -  SPACE A LINE */                                      46440002
*/*  P MOVE STOP MESSAGE TO BUFFER */                                   46500002
*/*  L BRWRITE  -  PRINT THE MESSAGE */                                 46560002
*/*  M (,STPRT1) TURN OFF RECURSION SWITCH */                           46620002
*/*STPRT1: L BRPRTMSG - WRITE STOP MESSAGE TO SYSPRINT */               46680002
*/*  L TCBREMV REMOVE ALL TCBS FROM TCB LIST */                         46740002
*/*  P GET STOPEXIT ROUTINE ADDRESS FROM COMMON */                      46800002
*/*  R GO TO STOPEXIT ROUTINE */                                        46860002
*/*STOPWTOR: P CLEAR FLAGS IN STOP ECB */                               46920002
*/*  P BLANK REPLY BUFFER */                                            46980002
*/*STPWTORM: I WRITE STOP MESSAGE TO OPERATOR */                        47040002
*/*  M INDICATE WTOR DONE */                                            47100002
*/*STOPRET: M RESTORE REGISTERS */                                      47160002
*/*  R RETURN */                                                        47220002
*/*AMDPRCOM: END */                                                     47280002
         EJECT                                                          47340002
         COMMON  MF=L                                                   47400002
         EQUATES                                                        47460002
*********************************************************************** 47520002
*                                                                     * 47580002
**           ***  ROUTINE FOR WRITING TO OUTDCB  ***                 ** 47640002
*                                                                     * 47700002
*                                                                     * 47760002
*   PREG UPON ENTRY WILL DETERMINE WHAT CHARIAGE CONTROL IS TO BE     * 47820002
*   PERFORMED AS FOLLOWS....                                          * 47880002
*                                                                     * 47940002
*       -5    - SPACE THREE LINES IMMEDIATELY                    S21014 48000002
*       -4    - SPACE TWO LINES IMMEDIATELY                      S21014 48060002
*       -3    - SPACE ONE LINE IMMEDIATELY                       S21014 48120002
*       -2    - SKIP TO CHANNEL 1 IMMEDIATELY                    S21014 48180002
*       -1    - SKIP TO CHANNEL 1 AFTER PRINTING                 S21014 48240002
*        0    - OPEN OUTDCB AND GET CORE FOR BUFFER IF NOT ALREADY    * 48300002
*               AND DON'T PRINT                                       * 48360002
*        1    - SPACE ONE LINE AFTER PRINTING                         * 48420002
*        2    - SPACE TWO LINES AFTER PRINTING                        * 48480002
*        3    - SPACE THREE LINES AFTER PRINTING                      * 48540002
*        GT 3 - SPACE ONE LINE AFTER PRINTING                         * 48600002
*                                                                     * 48660002
*                                                                     * 48720002
*********************************************************************** 48780002
         SPACE                                                          48840002
*                                                                 M3179 48900002
         OUTBUFM                                                        48960002
DCBOFLGS EQU   48                                                       49020002
AMDPRWTR CSECT                                                          49080002
         USING *,R15                                             Y02006 49130002
         MODID                                                   Y02006 49132002
         DROP  R15                                               Y02006 49134002
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              49140002
         BALR  BASE1,0             SET UP REG 11 AS BASE                49200002
         USING *,BASE1                                                  49260002
         LA    R2,WTRSAVE          SAVE AREA CHAINING                   49320002
         ST    R13,WTRSAVE+4                                            49380002
         ST    R2,8(R13)                                                49440002
         LR    R13,R2              ESTABLISH WTR'S SAVE AREA            49500002
         SPACE                                                          49560002
         L     COMBASE,ACOMMON     GET ADDRESS COMMON CSECT             49620002
         USING COMMON,COMBASE      BASE COMMON                          49680002
         USING OUTBUF,BUFREG       USING DSECT FOR OUTPUT BUFFER -      49740002
*                                  BASED ON REGISTER 6                  49800002
         SPACE                                                          49860002
         TM    OUTDCB+DCBOFLGS,DCBOPEN IS THE OUTDCB ALREADY OPEN       49920002
         BO    WRITE1              IF IT IS BR AROUND OPEN AND GETMAIN  49980002
*                                  GET MAXIMUM BLOCKSIZE FOR     S21014 50040002
         DEVTYPE  PRNTNM,DEVAREA   ALLOCATED DEVICE              S21014 50100002
         LTR   R15,R15             WAS THERE A DD CARD           S21014 50160002
         BNZ   WRTABEND            GIVE MESSAGE IF NO DD CARD    S21014 50220002
         OPEN  (OUTDCB,OUTPUT)                                          50280002
         TM    OUTDCB+DCBOFLGS,DCBOPEN DID IT OPEN                      50340002
         BZ    WRTABEND            ABEND WITH U100 IF NOT               50400002
         LA    R3,OUTDCB           GET ADDR OF PRINTER DCB        M0732 50460002
         ST    R3,AOUTDCB          STORE IN COMMON CSECT FOR END  M0732 50520002
         LA    R1,OUTBUFR          GET ADDRESS OF OUTPUT BUFFER  Y02006 50580002
         ST    R1,CURBUF           STORE BUFFER ADDR                    50640002
         MVI   1(R1),X'40'         CLEAR                                50700002
         MVC   2(207,R1),1(R1) BUFFER                          @Z40MI3F 50760000
         LM    R0,R1,WTRSAVE+20    RESTORE R0 AND R1                    50820002
         MVI   PRNTCLCR,C'+'       DEFAULT = SUPPRESS SPACE      Y02006 50870002
WRITE1   L     BUFREG,CURBUF       LOAD BUFFER ADDR                     50880002
         TM    BUFSW,PREFM         PREFORMATTED DUMP             Y02006 50930002
         BO    PREFMDMP            GO TO PREFORMAT ROUTINE       Y02006 50932002
WRITE12  LA    R9,WRITECLR         SET RETURN ADDRESS FOR         M0870 50940002
*                                  PUT SUBROUTINE - RETURN       S21014 51000002
*                                  TO CLEAR BUFFER FOR NEXT USER S21014 51060002
WRITE12A LTR   PREG,PREG           TEST PARM REG                 Y02006 51120002
         BZ    WRITERET            RETURN IF ZERO                       51180002
         BM    WRITEIMM            NEG MEANS POSSIBLE            S21014 51240002
*                                  IMMEDIATE OPERATION BRANCH    S21014 51300002
*                                  TEST FURTHER                  S21014 51360002
***  FALL THROUGH MEANS SPACE AFTER PRINT  ***                          51420002
         CH    PREG,THREE          IS IT GT THREE                       51480002
         BNH   WRITE2              NO--OK                               51540002
         LA    PREG,1              YES--SET TO 1                        51600002
         SPACE 2                                                        51660002
*********************************************************************** 51720002
*                                                                     * 51780002
*  PUT SUBROUTINE.  SELECT PROPER CONTROL CHARACTER BASED OF REG 1,   * 51840002
*  AND PUT OUTPUT LINE ADDRESSED BY BUFREG.                           * 51900002
*                                                                     * 51960002
*********************************************************************** 52020002
         SPACE                                                          52080002
WRITE2   L     LINEREG,LINECNT     DECR LINE COUNT                      52140002
         CH    LINEREG,LINENUM     AT TOP OF PAGE                Y02006 52190002
         BNE   WRITE3              NO, GO PRINT LINE             Y02006 52192002
         LA    R2,ADDR             ADDR OF BEGINNING OF BUFFER   Y02006 52194002
         LA    R5,ADDR+200     LOAD END ADDR (COMPARITOR         Y02006 52196000
*                                  FOR BXLE)                     Y02006 52196402
         LA    R4,8                LOAD INCR VALUE FOR BXLE      Y02006 52198002
WRITE2A  CLC   0(8,R2),BLANKS      COMPARE FOR BLANKS            Y02006 52198402
         BNE   PRTHDR              BR TO OUTPUT PAGE HEADER      Y02006 52198802
         BXLE  R2,R4,WRITE2A       LOOP TO END OF BUFFER         Y02006 52199202
         B     WRITESTP            ALL BLANK BUFFER--RETURN FOR  Y02006 52199602
*                                  AN EFFECTIVE NOP              Y02006 52199702
WRITE3   SR    LINEREG,PREG                                      Y02006 52200002
         BNP   WRTSKIPA            SKIP TO CH 1 IF ZERO OR NEG          52260002
         ST    LINEREG,LINECNT     UPDT LINECNT                         52320002
         MVC   CNTLCHAR(1),PRNTCLCR  PUT CONTROL CHAR IN BUFFER  Y02006 52370002
         LA    R3,PTROP-1          DEVELOP CORRECT                      52380002
         AR    R3,PREG             MACHINE OP                           52440002
         IC    R3,0(R3)            CODE IN R3                           52500002
         STC   R3,PRNTCLCR         PLACE IN SAVE AREA            Y02006 52560002
WRITEPUT LR    R0,BUFREG           ADDR OF BUFFER TO R0                 52620002
         PUT   OUTDCB,(0)          PRINT BUFFER                         52680002
         BR    R9                  RETURN TO CALLER OF PUT       S21014 52740002
         SPACE 2                                                        52800002
*********************************************************************** 52860002
*                                                                     * 52920002
*  BRANCH HERE TO CLEAR BUFFER, TEST FOR TOP OF PAGE, TEST FOR STOP   * 52980002
*  OPTION, AND EXIT                                                   * 53040002
*                                                                     * 53100002
*********************************************************************** 53160002
         SPACE                                                          53220002
WRITECLR MVI   ADDR,X'40'          CLEAR                         S21014 53280002
         MVC   ADDR+1(203),ADDR BUFFER                         @Z40MI3F 53340000
*** TEST FOR AT TOP OF PAGE  ***                                        53400002
WRITETST CH    LINEREG,LINENUMB    AM I AT THE TOP OF THE PAGE          53460002
         BE    PRTTITLE            YES--PRINT TITLE AT TOP              53520002
WRITESTP TM    SWE,STOPSW          IS STOP ENABLED                M0870 53760002
         BZ    WRITERET            NO--RETURN                           53820002
         L     R15,ASTPROUT        LOAD ADDR OF STOPROUT                53880002
         BALR  RETREG,R15          BR TO IT                             53940002
         SPACE                                                          54000002
WRITERET L     R13,4(R13)          GET ADDRESS OF CALLER'S SAVE AREA    54060002
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS           54120002
         BR    RETREG                                                   54180002
         EJECT                                                          54240002
**************************************************************** S21014 54300002
*                                                                S21014 54360002
*  THE FOLLOWING CODE SERVICES IMMEDIATE SPACE OPERATIONS.       S21014 54420002
*  A TEMPORARY BUFFER IS OBTAINED, CLEARED TO BLANKS, AND        S21014 54480002
*  PRINTED ON THE PRINTER DATA SET TO CAUSE THE IMMEDIATE        S21014 54540002
*  OPERATION.                                                    S21014 54600002
*                                                                S21014 54660002
**************************************************************** S21014 54720002
         SPACE                                                          54780002
WRITEIMM LPR   R3,PREG             PARM COUNT IS NEGATIVE -      S21014 54840002
*                                  GET POSTIVE COUNT             S21014 54900002
         BCTR  R3,0                SUBTRACT ONE FROM COUNT       S21014 54960002
         LTR   R3,R3               IS COUNT NOW ZERO             S21014 55020002
         BZ    WRTSKIP             IF SO, MEANS PARM WAS -1      S21014 55080002
*                                  BRANCH TO SKIP TO CHANNEL 1   S21014 55140002
*                                  AFTER PRINTING CURRENT BUFFER S21014 55200002
         TM    PRSW,TTLSW          IS DUMP TITLE SWITCH ON       Y02006 55250002
         BZ    WRTIMM1             NO,CHECK IF AT TOP OF PAGE    Y02006 55300002
         NI    PRSW,XFF-TTLSW      YES, TURN OFF SWITCH          Y02006 55310002
         B     WRITESTP            RETURN AFTER CHECKING STOPSW  Y02006 55312002
WRTIMM1  L     LINEREG,LINECNT     GET LINE COUNT                Y02006 55314002
         CH    LINEREG,LINENUM     AT TOP OF PAGE                Y02006 55316002
         BE    WRITESTP            YES, RETURN                   Y02006 55318002
         LA    BUFREG,TEMPBUF      POINT BUFFER REG TO TEMPORARY Y02006 55320002
*                                  BUFFER                        S21014 55380002
         MVI   1(BUFREG),C' '      CLEAR TEMP BUFFER TO BLANKS   S21014 55440002
         MVC   2(207,BUFREG),1(BUFREG)                           S21014 55500000
         BCTR  R3,0                SUBTRACT 1 FROM NEW COUNT     S21014 55560002
         LTR   R3,R3               TEST COUNT FOR ZERO WHICH     S21014 55620002
*                                  MEANS PARM WAS -2 OR SKIP TO  S21014 55680002
*                                  CHANNEL 1 IMMEDIATELY         S21014 55740002
         BNZ   WRITELIN            BRANCH TO SPACE NUMBER OF     S21014 55800002
*                                  LINES IMMEDIATELY, REG 3      S21014 55860002
*                                  NOW CONTAINS NUMBER OF LINES  S21014 55920002
*                                  TO SPACE AFTER PRINTING TEMP  S21014 55980002
*                                  BUFFER                        S21014 56040002
WRITESKP BAL   R9,WRTSKIPA         LINK TO SKIP TO CHANNEL 1      M0870 56340002
*                                  AFTER PRINTING TEMP BUF -     S21014 56400002
*                                  BUFREG POINTS TO TEMP BUFFER  S21014 56460002
         B     WRITETST            ON RETURN, BRANCH TO FREE      M0870 56520002
*                                  TEMP BUF                      S21014 56580002
WRITELIN LR    PREG,R3             PUT SPACE COUNT IN PREG FOR   S21014 56640002
*                                  FOR BRANCH BACK TO CONTROL    S21014 56700002
*                                  CHARACTER SELECTION           S21014 56760002
         BAL   R9,WRITE2           GO PRINT TEMP BUFFER          S21014 56820002
*                                  FREE TEMPORARY BUFFER         S21014 56880002
         B     WRITETST            IMMEDIATE OPERATION COMPLETE  S21014 56940002
*                                  BRANCH TO TEST FOR AT TOP OF  S21014 57000002
*                                  PAGE                          S21014 57060002
         EJECT                                                          57120002
*********************************************************************** 57180002
*                                                                     * 57240002
*   SKIP TO CHANNEL 1 UNLESS BLANK BUFFER AND ALREADY AT TOP OF PAGE  * 57300002
*                                                                     * 57360002
*********************************************************************** 57420002
         SPACE                                                          57480002
WRTSKIP  L     LINEREG,LINECNT     LOAD PRESENT LINE COUNT              57540002
         TM    PRSW,TTLSW          SVC DUMP TITLE SWITCH SET            57600002
         BO    WRTIGNR             YES - DO NOT SKIP TO TOP OF PAGE     57660002
         CH    LINEREG,LINENUM     IS THIS FIRST LINE OF PAGE           57720002
*                                   (EXCLUDING TITLE)                   57780002
         BL    WRTSKIPA             NO - DO SKIP THEN          @ZA28209 57840000
*                                  YES--TEST FOR BUFFER ALL BLANK       57900002
WRTIGNR  NI    PRSW,XFF-TTLSW      TURN OFF SVC DUMP TITLE SWITCH       57960002
         LA    R2,ADDR             ADDR OF BEGINNING OF BUFFER          58020002
         LA    R5,ADDR+200         LOAD END ADDR (COMPARITOR FOR BXLE)  58080000
*                                                              @Z40MI3F 58110000
         LA    R4,8                LOAD INCR VALUE FOR BXLE             58140002
WRTSKIPB CLC   0(8,R2),BLANKS      COMPARE FOR BLANKS                   58200002
         BNE   WRTSKIPA            BR TO DO SKIP IF NONBLANK FOUND      58260002
         BXLE  R2,R4,WRTSKIPB      LOOP TO END OF BUFFER                58320002
         B     WRITETST             ALL BLANK BUFFER-RETURN FOR         58380000
*                                  AN EFFECTIVE NOP                     58440002
WRTSKIPA MVC   CNTLCHAR,PRNTCLCR   MOVE CONTROL CHAR TO BUFFER   Y02006 58500002
         MVI   PRNTCLCR,C'1'       SET UP TO SKIP TO CHAN 1 ON   Y02006 58550002
*                                  NEXT CALL                     Y02006 58552002
         LH    LINEREG,LINENUMB    SET LINECNT                          58560002
         ST    LINEREG,LINECNT                                          58620002
         B     WRITEPUT            GO PRINT AND SKIP                    58680002
         SPACE 2                                                        58740002
*********************************************************************** 58800002
*                                                                     * 58860002
*   PRINT TITLE AT TOP OF EACH PAGE                                   * 58920002
*                                                                     * 58980002
*********************************************************************** 59040002
         SPACE                                                          59100002
PRTTITLE L     R1,PAGENUMB         LOAD PAGE NUMBER                     59160002
         AH    R1,ONEA             ADD ONE TO IT                        59220002
         ST    R1,PAGENUMB         UPDATE PAGENUMB                      59280002
         CVD   R1,WORK1            CONVERT TO DECIMAL                   59340002
         UNPK  WREDWRK(6),WORK1+5(3)  MAKE PAGE NUMBER PRINTABLE        59400002
         OI    WREDWRK+5,X'F0'        OR ON ZONE IN SIGN DIGIT          59460002
         MVC   TITLEPGE+5(4),WREDWRK+2 MOVE PAGE NUMBER TO TITLE        59520002
         TM    I3800SW,I3800204    CONDENSED DUMP IN PROGRESS? @Z40MI3F 59523000
         BZ    PRTTITL1            NO,120 COLUMN TITLE         @Z40MI3F 59526000
         MVC   ADDR(64),TITLEMSG   YES, 204 COLUMN TITLE       @Z40MI3F 59529000
         MVI   ADDR+64,X'40'                                   @Z40MI3F 59532000
         TM    I3800SW,I3800KEY    KEY MSG NEEDED              @Z40MI3F 59535000
         BNO   PRTTITL3            NO, SKIP SPECIAL CODE       @Z40MI3F 59538000
         MVC   ADDR+65(67),ADDR+64 BLANK UNUSED FIELD          @Z40MI3F 59541000
         MVC   ADDR+132(16),TITLEKEY STORAGE KEY MSG           @Z40MI3F 59544000
         B     PRTTITL4            SKIP NON-KEY MSG CODE       @Z40MI3F 59547000
PRTTITL3 DS    0H                  NO KEY MSG FOR PGE TITLE    @Z40MI3F 59550000
         MVC   ADDR+65(83),ADDR+64                             @Z40MI3F 59553000
PRTTITL4 DS    0H                  END SEPARATE KEY MSG CODE   @Z40MI3F 59556000
         MVC   ADDR+148(56),TITLEMOD                           @Z40MI3F 59559000
         B     PRTTITL2            SKIP 120-COLUMN-TITLE CODE  @Z40MI3F 59562000
PRTTITL1 DS    0H                  120 COLUMN TITLE PROCESSING @Z40MI3F 59565000
         MVC   ADDR(120),TITLEMSG  MOVE TITLE TO BUFFER                 59580002
PRTTITL2 DS    0H                  END TITLE BUFFER PREPARATION         59600000
         TM    BUFSW,PREFM         PREFORMATTED DUMP             Y02006 59630002
         BO    PREFMTTL        YES - RETURN TO PREFORMAT ROUTINE Y02006 59632002
         LA    PREG,2              SPACE TWO LINES                      59640002
         B     WRITE12             GO PRINT TITLE                       59700002
         EJECT                                                          59710002
*********************************************************************** 59710402
*                                                                     * 59710802
*   PRINT HEADER AT TOP OF EACH PAGE IF THERE IS ONE TO BE PRINTED    * 59711202
*                                                                     * 59711602
*********************************************************************** 59711702
PRTHDR   ST    PREG,SAVPREG        SAVE PREG                     Y02006 59712002
         ST    R9,SAVER9           SAVE R9                       Y02006 59714002
         LA    BUFREG,TEMPBUF      GET TEMP BUFFER ADDR          Y02006 59716002
         MVI   ADDR,X'40'          CLEAR                         Y02006 59720002
         MVC   ADDR+1(203),ADDR    BUFFER                      @Z40MI3F 59730000
         CLC   TOPICHDR(10),ADDR   SHOULD HDR BE PRINTED         Y02006 59740002
         BE    PRTLINE             NO, PRINT LINE                Y02006 59742002
         MVC   ADDR+55(10),TOPICHDR  MOVE IN PAGE HEADER         Y02006 59744002
         LA    PREG,2              SPACE TWO LINES               Y02006 59746002
         LA    R9,HDRRTRN          SET UP RETURN ADDR            Y02006 59746402
         B     WRITE3              GO PRINT HEADER               Y02006 59748002
HDRRTRN  MVI   ADDR,X'40'          CLEAR TEMP                    Y02006 59748402
         MVC   ADDR+1(203),ADDR    BUFFER                      @Z40MI3F 59748800
PRTLINE  L     BUFREG,CURBUF       RESTORE R6                    Y02006 59749202
         L     PREG,SAVPREG        RESTORE R1                    Y02006 59749602
         L     R9,SAVER9           RESTORE R9                    Y02006 59749702
         B     WRITE3              GO OUTPUT LINE                Y02006 59749802
         EJECT                                                          59750002
*********************************************************************** 59752002
*                                                                     * 59752402
*        THIS ROUTINE HANDLES A PREFORMATTED DUMP                     * 59752502
*                                                                     * 59752802
*********************************************************************** 59754002
         SPACE                                                          59756002
PREFMDMP L     LINEREG,LINECNT     LOAD PRESENT LINE COUNT       Y02006 59758002
         CH    LINEREG,LINENUM     IS THIS FIRST LINE OF PAGE    Y02006 59758402
         BE    PREFMSKP            GO HANDLE SKIP TO CHANNEL 1   Y02006 59758802
         CLI   CNTLCHAR,SKP2CHN1   IS CONTROL CHAR A '1' (SKIP)  Y02006 59759202
         BE    PREFMSKP            YES -GO HANDLE SKIP TO CHAN 1 Y02006 59759602
         LH    PREG,THREE          SET PREG TO THREE             Y02006 59759702
         CLI   CNTLCHAR,SPACE3     IS CONTROL CHAR A '-' (SP 3)  Y02006 59759802
         BE    PREFMCTL            YES - GO HANDLE               Y02006 59759902
         LH    PREG,TWO            SET PREG TO TWO               Y02006 59779902
         CLI   CNTLCHAR,SPACE2     IS CONTROL CHAR A '0' (SP 2)  Y02006 59789902
         BE    PREFMCTL            YES - GO HANDLE               Y02006 59799902
         LH    PREG,ONEA           SET PREG TO ONE               Y02006 59806602
         MVI   CNTLCHAR,SPACE1     SET CONTROL CHAR =' ' (SP 1)  Y02006 59808602
PREFMCTL SR    LINEREG,PREG        CEDREMENT LIN COUNT           Y02006 59810602
         BM    PREFMSKP            MINUS - SKIP TO NEXT PAGE     Y02006 59812602
         ST    LINEREG,LINECNT     UPDATE LINECNT                Y02006 59813002
PREFMOUT BAL   R9,WRITEPUT         OUTPUT LINE                   Y02006 59813102
         MVI   ADDR,X'40'          CLEAR                         Y02006 59813202
         MVC   ADDR+1(203),ADDR    BUFFER                      @Z40MI3F 59829900
         B     WRITESTP            RETURN TO CALLER              Y02006 59839902
         SPACE                                                          59841902
PREFMSKP LH    LINEREG,LINENUMB    SET LINECNT                   Y02006 59843902
         SH    LINEREG,THREE       SUBTRACT THREE                Y02006 59845902
         ST    LINEREG,LINECNT     STORE IN COMMON               Y02006 59846302
         LA    BUFREG,TEMPBUF      OUTPUT TITLE USING TEMP BUF   Y02006 59846402
         MVI   CNTLCHAR,SKP2CHN1   SET CONTROL CHAR (SKIP)       Y02006 59846502
         B     PRTTITLE            PREPARE TO OUTPUT TITLE       Y02006 59852102
*  AFTER TITLE IS FORMATTED, RETURN TO HERE TO OUTPUT                   59854102
PREFMTTL BAL   R9,WRITEPUT         OUTPUT TITLE                  Y02006 59856102
         MVI   ADDR,X'40'          CLEAR                         Y02006 59856502
         MVC   ADDR+1(203),ADDR    BUFFER                      @Z40MI3F 59856900
         L     BUFREG,CURBUF       RESTORE PTR TO OUTPUT LINE    Y02006 59857302
         MVI   CNTLCHAR,SPACE2     SET CONTROL CHAR (SP 2)       Y02006 59857402
         B     PREFMOUT            GO OUTPUT LINE                Y02006 59857502
         EJECT                                                          59857702
*********************************************************************** 59863302
*                                                                     * 59880002
*   OUTDCB ERROR...WRITE MSG AND TERMINATE                            * 59940002
*                                                                     * 60000002
*********************************************************************** 60060002
         SPACE                                                          60120002
PERROR   SR    R0,R0               CODE FOR PRINTER DDNAME              60180002
         LA    R1,12               CODE FOR MESSAGE AMD153I             60240002
         B     PEXIT               BRANCH TO BRANCH TO MESSAGE WRITER   60300002
         SPACE                                                          60360002
WRTABEND SR    R0,R0               LOAD CODE FOR PRINTER  DDNAME        60420002
         SR    R1,R1               LOAD CODE FOR OPEN ERROR MSG         60480002
PEXIT    L     R15,AEREXIT         EXIT TO END ROUTINE TO WRITE         60540002
         BR    R15                 MESSAGE AND TERMINATE                60600002
         SPACE 2                                                        60660002
*********************************************************************** 60720002
*                                                                     * 60780002
*   CONSTANTS FOR WRITE ROUTINE                                       * 60840002
*                                                                     * 60900002
*********************************************************************** 60960002
         SPACE                                                          61020002
WTRSAVE  DC    18F'0'              WTR'S SAVE AREA                      61080002
SAVER9   DC    F'0'                TEMP REG SAVE AREA            Y02006 61130002
SAVPREG  DC    F'0'                TEMP REG SAVE AREA            Y02006 61132002
         DS    0F                                                       61140002
ACOMMON  DC    A(AMDPRCOM)         LINK-EDIT WITH COMMON                61320002
WREDWRK  DC    CL8' '                                                   61380002
PTROP    DC    C' 0-'           ANSI CODES FOR SPACE 1, 2, AND 3 Y02006 61440002
PRNTNM   DC    CL8'PRINTER'        DDNAME FOR DEVTYPE            S21014 61500002
PRNTCLCR DC    C'+'                DEFAULT CONTROL CHAR AND      Y02006 61550002
*                                  CONTROL CHAR SAVEAREA         Y02006 61552002
*        OUTBUFR AND TEMPBUF ARE GIVEN 209 BYTES INSTEAD OF 205 TO      61554000
*        ALLOW FOR BLANK-BUFFER CHECKING 8 BYTES AT A TIME AND TO       61554600
*        ALLOW FOR FUTURE CONTROL CHARACTERS AND STATUS BYTES. @Z40M13F 61555200
OUTBUFR  DC    CL209' '            OUTPUT BUFFER               @Z40MI3F 61556000
TEMPBUF  DC    CL209' '            TEMPORARY BUFFER            @Z40MI3F 61557000
SKP2CHN1 EQU   C'1'                SKIP TO CHANNEL 1 CODE        Y02006 61558002
SPACE1   EQU   C' '                SPACE 1 CONTROL CHAR          Y02006 61558402
SPACE2   EQU   C'0'                SPACE 2 CONTROL CHAR          Y02006 61558802
SPACE3   EQU   C'-'                SPACE 3 CONTROL CHAR          Y02006 61559202
         EJECT                                                          61560002
OUTDCB   DCB   DSORG=PS,DDNAME=PRINTER,MACRF=PM,                       X61620002
               EROPT=ACC,RECFM=FBA,EXLST=OUTLIST,                      X61680002
               SYNAD=PERROR                                      Y02006 61740002
         SPACE                                                          61800002
DEVAREA  DC    F'0'                RETURN AREA FOR DEVTYPE       S21014 61860002
MAXBLK   DC    F'0'                THESE TWO CARDS MUST BE       S21014 61920002
*                                  TOGETHER BECAUSE 2-ND WORD    S21014 61980002
*                                  RETURNED BY DEVTYPE IS MAX    S21014 62040002
*                                  BLKSIZE FOR DEVICE.  CARDS    S21014 62100002
*                                  ARE AFTER DCB SO AS TO BE     S21014 62160002
*                                  ADDRESSABLE FROM OPEN EXIT    S21014 62220002
*                                  ROUTINE                       S21014 62280002
*                                                              @Z40MI3F 62286000
*        NOTE: HAVING THE FOURTH BIT OF THE FIRST BYTE SET TO ONE IN    62292000
*        THE OUTEXIT ENTRY OF OUTLIST, CAUSES REG 0 TO POINT TO A       62298000
*        LIST OF FORMAT PARAMETERS FOR THE PRINTER DEVICE ON ENTRY      62304000
*        TO THE OUTEXIT ROUTINE.                               @Z40MI3F 62310000
*                                                              @Z40MI3F 62316000
OUTLIST  DC    X'15'               3800 PRINTER EXIT           @OZ12029 62322000
         DC    AL3(OUTEXIT)        PROCESSING ADDRESS          @OZ12029 62324000
         DC    X'85'               DCB EXIT                    @OZ12029 62326000
         DC    AL3(OUTEXIT)        OUTDCB EXIT ROUTINE         @Z40MI3F 62328000
BLKRECSZ DC    F'121'              DEFAULT BLKSIZE & LRECL     @Z40MI3F 62334000
WTRPATCH DC    13F'0'              PATCH AREA                    X01980 62340002
         EJECT                                                          62400002
*********************************************************************** 62460002
*                                                                     * 62520002
**                 ***  OUTDCB EXIT ROUTINE  ***                     ** 62580002
*                                                                     * 62640002
*                                                                     * 62700002
*   TEST BLKSIZE AND LRECL TO SEE IF SUPPLIED, IF NOT SET TO 121.  IF * 62760002
*   THEY ARE SUPPLIED TEST TO BE CERTAIN THAT BLKSIZE IS AN EVEN      * 62820002
*   MULTIPLE OF LRECL AND CORRECT IT IF NOT.  ALSO IF BLOCKING FACTOR * 62880002
*   IS GREATER THAN 10 SET BUFNO TO 2 INSTEAD OF 3.                   * 62940002
*                                                                     * 63000002
*********************************************************************** 63060002
         SPACE                                                          63120002
         DROP  BASE1,BUFREG                                             63180002
OUTEXIT  LR    BASE1,R15           LOAD BASE REG FOR ROUTINE            63240002
         LR    BASE2,R1            LOAD DCB ADDR FOR BASE               63300002
         USING OUTEXIT,BASE1                                            63360002
         USING OUTDCB,BASE2                                             63420002
         BAL   R4,PRTFORM      FIND WHAT 3800 PRT FORMATS WERE SELECTED 63480000
         L     R3,BLKRECSZ     LOAD DEFAULT BLKSIZE & LRECL    @Z40MI3F 63510000
         LH    R4,OUTDCB+LRECL     LOAD LRECL VALUE                     63540002
         LTR   R4,R4               WAS IT PROVIDED                      63600002
         BNZ   OUTEXIT1            YES--LEAVE IT BE                     63660002
         STH   R3,OUTDCB+LRECL     NO--STORE DEFAULT VALUE OF 121       63720002
OUTEXIT1 LH    R4,OUTDCB+BLKSIZE   LOAD BLKSIZE VALUE                   63780002
         LTR   R4,R4               WAS IT PROVIDED                      63840002
         BNZ   OUTEXIT2            YES--LEAVE IT BE                     63900002
         STH   R3,OUTDCB+BLKSIZE   NO--STORE DEFAULT VALUE OF 121       63960002
OUTEXIT2 LH    R5,OUTDCB+BLKSIZE   LOAD BLKSIZE VALUE                   64020002
         C     R5,MAXBLK           COMPARE SPECIFIED BLKSIZE     S21014 64080002
*                                  TO MAX RECORD SIZE FOR ALLOC. S21014 64140002
*                                  DEVICE                        S21014 64200002
         BNH   OUTEXIT7            BRANCH IF SPECIFIED BLKSZ IS  S21014 64260002
*                                  OF - LESS THAN OR EQUAL MAX   S21014 64320002
         L     R5,MAXBLK           OTHERWISE, USE MAX FOR DEVICE S21014 64380002
         STH   R5,OUTDCB+BLKSIZE   STORE NEW BLOCK SIZE          S21014 64440002
OUTEXIT7 SR    R4,R4               CLEAR R4 FOR DIVIDE                  64500002
         LH    R6,OUTDCB+LRECL     LOAD LRECL VALUE                     64560002
         CR    R5,R6               COMPARE LRECL TO BLKSIZE             64620002
         BL    OUTEXIT3            LRECL GT BLKSIZE                     64680002
         BE    OUTEXIT4            LRECL EQ BLKSIZE                     64740002
         DR    R4,R6               DIVIDE BLKSIZE BY LRECL              64800002
         LR    R7,R5               SAVE QUOTIENT AS BLOCKING FACTOR     64860002
*                                                                Y02006 64910002
         MR    R4,R6               MULTIPLY RESULT BY LRECL TO BE       64920002
*                                  CERTAIN BLKSIZE IS AN EVEN MULTIPLE  64980002
*                                  OF LRECL                             65040002
         STH   R5,OUTDCB+BLKSIZE   STORE CORRECTED BLKSIZE BACK TO DCB  65100002
         CLI   OUTDCB+BUFNOA,0     WAS BUFNO SPECIFIED IN DD CARD       65160002
         BNE   OUTEXIT4            YES--LEAVE IT AS IS                  65220002
         CH    R7,HTEN             IS BLOCKING FACTOR GT 10             65280002
         BNH   OUTEXIT5            NO--SET BUFNO TO 3 BUFFERS           65340002
         LA    R7,2                YES--SET BUFNO TO 2 BUFFERS          65400002
         B     OUTEXIT6            BR AROUND                            65460002
OUTEXIT5 LA    R7,3                LOAD FOR 3 BUFFERS                   65520002
OUTEXIT6 STC   R7,OUTDCB+BUFNOA    STORE IN DCB                         65580002
OUTEXIT4 BR    R14                 RETURN TO OPEN                       65640002
         SPACE                                                          65700002
OUTEXIT3 STH   R6,OUTDCB+BLKSIZE   MAKE BLKSIZE EQ TO LRECL             65760002
         BR    R14                 RETURN TO OPEN                       65820002
         EJECT                                                 @Z40MI3F 65821000
*********************************************************************** 65822000
*                                                                     * 65823000
*              ***  OUTDCB PRINTER-FORMAT ROUTINE  ***                * 65824000
*                                                                     * 65825000
*  THIS ROUTINE ENTERED FROM OUTEXIT ROUTINE DURING                   * 65826000
*  OPENING  OF  OUTDCB.      ON ENTRY REG 0 POINTS TO A LIST          * 65827000
*  PRINTER FORMAT INFO. IN PARTICULAR, BYTES 176-179 CONTAIN THE      * 65828000
*  FORMS CONTROL BUFFER (FCB) VALUE AND BYTES 20-23  CONTAIN THE      * 65829000
*  CHARACTER SET VALUE (CHARS).                                       * 65830000
*                                                                     * 65831000
*                                                                     * 65832000
*        1. DETERMINE WHETHER FCB=STD3 WAS SPECIFIED                  * 65833000
*        2. IFSO, SET PARMS FOR LONG PAGE FORMAT (80 LINES/PAGE)      * 65834000
*        3. IFNOT, ENSURE LINE COUNT LESS THAN 66                     * 65835000
*        4. DETERMINE WHETHER CHARS=DUMP WAS SPECIFIED                * 65836000
*        5. IFSO, SET PARMS FOR A CONDENSED DUMP                      * 65837000
*                                                                     * 65838000
*                                                                     * 65839000
*********************************************************************** 65840000
         SPACE 1                                               @Z40MI3F 65841000
PRTFORM  NI    I3800SW,XFF-I3800204-I380080-I3800KEY          @Z40MI3F  65842000
*                                  ZERO FLAGS FOR 3800 SUPPORT@Z40MI3F  65843000
         MVC   TITLEKEY+12(2),=C'  ' BLANK KEY IN KEY MSG     @Z40MI3F  65844000
         LR    R3,R0               ADDR PRINTER FORMAT LIST    @Z40MI3F 65845000
         LTR    R3,R3                  TEST FOR JFCB EXTENSION @ZM4001P 65846000
         BZ    PRTFORM3            BRANCH ON NO                @ZA04272 65847000
         CLC   176(4,3),=C'STD3'   8 LINES PER INCH?           @Z40MI3F 65848000
         BNE   PRTFORM3            NOT FCB=STD3                @ZA04272 65849000
         BAL   5,STD3SET           FCB=STD3,SET PARMS FOR 80 L/P        65850000
PRTFORM3 LTR    R3,R3                  TEST FOR JFCB EXTENSION @ZM4001P 65851000
         BZ     PRTFORM2                  BRANCH ON NO         @ZM4001P 65852000
         CLC    20(4,3),=C'DUMP' CHECK CHARS= PARM OF PRINTER DD        65853000
         BNE   PRTFORM2            NOT CHARS=DUMP              @Z40MI3F 65854000
         BAL   5,DUMPSET           CHARS=DUMP,SET PARMS 204 C/L         65855000
         B     PRTFORM4            BR AROUND SUBROUTINES       @Z40MI3F 65856000
STD3SET  OI    I3800SW,I380080     SET 80 LIN/PG MAX           @Z40MI3F 65857000
         TM    I3800SW,I3800ULN    DID USER SPEC LINES/PAGE?   @Z40MI3F 65858000
         BO    0(R5)               YES,RETURN TO MAIN PRINT-FORMAT RTN  65859000
         MVI   LINENUMB+1,80       MODEL 3800 LINES/PAGE       @Z40MI3F 65860000
         MVI   LINENUM+1,78        MODEL 3800 LINES/PAGE - 2   @Z40MI3F 65861000
         BR    R5                  RETURN TO MAIN PRINT-FORMAT RTN      65862000
DUMPSET  OI    I3800SW,I3800204    SET CONDENSED DUMP SWITCH   @Z40MI3F 65863000
         MVI   BLKRECSZ+3,205      CONDSD DUMP DEFAULT BLKSIZ,LRECL     65864000
         BR    R5                  RETURN TO MAIN PRINT-FORMAT RTN      65865000
PRTFORM2 MVI   BLKRECSZ+3,121      NON-CONDENSED DUMP DEFAULT  @Z40MI3F 65866000
PRTFORM4 BR    R4                  RETURN TO MAIN STREAM OF OUTEXIT RTN 65867000
         DROP  BASE1,BASE2                                              65880002
         EJECT                                                          65940002
AMDPRSYN CSECT                                                          66000002
*********************************************************************** 66060002
*                                                                     * 66120002
**     ***  SYNTAX ERROR IN REPLY...RE-GROUP AND TRY AGAIN  ***      ** 66180002
*                                                                     * 66240002
*********************************************************************** 66300002
         SPACE                                                          66360002
         USING SYNTAX,R15                                               66420002
         SYNEPS  MF=L                                                   66480002
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             66540002
         USING *,BASE1                                                  66600002
         LA    R5,SYNSAVE          SAVE AREA CHAINNING                  66660002
         ST    R13,SYNSAVE+4                                            66720002
         ST    R5,8(R13)                                                66780002
         LR    R13,R5              POINT TO OUR SAVE AREA               66840002
         LTR   R5,R1               TEST FOR STANDARD MSG ONLY           66900002
         BZ    SYNTAX6             YES-BRANCH TO PRINT IT               66960002
         TM    SWD,NOSTDMG         TEST FOR NO STANDARD MESSAGE, S21014 67020002
*                                  I.E., MESSAGE AMD165I NOT     S21014 67080002
*                                  REQUIRED                      S21014 67140002
         BO    SYNTAX7             BRANCH TO ISSUE ONLY          S21014 67200002
*                                  CALLER'S MESSAGE              S21014 67260002
         TM    SWA,RDRSW           COMMANDS FROM CONSOLE?               67320002
         BO     SYNTAX5            NO-DON'T WTO                         67380002
         LA    R1,PTRSYN           LOAD ADDRESS OF WTO LIST             67440002
         WTO   MF=(E,(1))                                               67500002
SYNTAX5  LA    R2,PTRSYN           SET UP TO PRINT STANDARD MSG         67560002
         LA    R1,4(R2)            MSG ADDRESS                          67620002
         LH    R2,0(R2)                                                 67680002
         SH    R2,FOUR             LENGTH OF MESSAGE                    67740002
         BRPRTMSG  (R1),(R2)       WRITE MESSAGE ON SYSPRINT            67800002
         B     SYNTAX7             PRINT DIAGNOSTIC MESSAGE             67860002
SYNTAX6  TM    SWD,NOSTDMG         TEST FOR NO STANDARD MSG      S21014 67920002
         BO    SYNTAX6A            BRANCH IF SO TO POINT TO      S21014 67980002
*                                  CALLER'S MESSAGE              S21014 68040002
         L     R5,SYNMSGA          PICK UP MESSAGE ARRAY ADDRESS S21014 68100002
         LTR   R5,R5               TEST FOR SWITCH SET CALL      S21014 68160002
         BZ    SYNTAX2             ZERO INDICATES SUCH A CALL    S21014 68220002
*                                  SO BRANCH TO SET FLUSH MODE   S21014 68280002
*                                  SWITCH                        S21014 68340002
         LA    R5,PTRSYN           LOAD STANDARD MSG ADDR        S21014 68400002
*                                  ISSUING ONLY THIS MESSAGE     S21014 68460002
         B     SYNTAX7             BRANCH AROUND NO-STD CODE     S21014 68520002
SYNTAX6A L     R5,SYNMSGA          GET ADDR OF MSG POINTER       S21014 68580002
         L     R5,0(R5)            GET ADDR MESSAGE              S21014 68640002
SYNTAX7  LH    R2,0(R5)            LOAD MESSAGE LENGTH                  68700002
         SH    R2,FOUR             SUBTRACT 4 FOR LENGTH OF JUST MSG    68760002
         LA    R1,4(R5)            LOAD MSG ADDR                        68820002
         CLC   0(8,R1),BLANKS      DOES MSG HAVE ID              Y02006 68870002
         BNE   SYNTAX8             YES - GO OUTPUT IT            Y02006 68872002
         MVC   0(7,R1),PTRSYN+4    MOVE IN MSG ID                Y02006 68874002
SYNTAX8  BRPRTMSG  (R1),(R2)        WRITE MESSAGE TO SYSPRINT    Y02006 68880002
SYNTAX1  TM    SWA,RDRSW           IS RDR SW ON                         69420002
         BO    SYNTAX2             YES--DON'T DO WTO TO OPERATOR        69480002
         LR    R1,R5               MSG ADDR TO R1 FOR WTO               69540002
         WTO   MF=(E,(1))                                               69600002
         TM    SWC,SETFLSH         IS FLUSHMODE TO BE SET        Y02006 69650002
         BZ    SYNDONE             NO--DONE                      Y02006 69652002
         NI    SWC,XFF-SETFLSH     RESET SETFLSH INDICATOR       Y02006 69654002
         OI    SWD,FLSHMODE        SET FLUSHMODE                 Y02006 69656002
         B     SYNDONE             CLOSE OUT SYNTAX ROUTINE             69660002
         SPACE                                                          69720002
***  TEST FOR FLUSH MODE  ***                                    Y02006 69780002
SYNTAX2  TM    SWC,SETFLSH         IS FLUSHMODE TO BE SET        Y02006 69840002
         BZ    SYNDONE             NO--DONE                      Y02006 69900002
         NI    SWC,XFF-SETFLSH     RESET SETFLSH INDICATOR       Y02006 69950002
         TM    SWD,FLSHMODE        IS FLSHMODE ALREADY SET       Y02006 69960002
         BO    SYNDONE             YES - DON'T ISSUE MESSAGE     Y02006 69970002
         OI    SWD,FLSHMODE        SET FLUSHMODE                 Y02006 70000002
         BRPRTMSG  FLUSHMSG,48     PRINT FLUSH MSG               X01980 70020002
         SPACE                                                          70080002
SYNDONE  NI    SWD,XFF-NOSTDMG     TURN OFF NO STANDARD MSG SW   S21014 70140002
         L     R13,4(R13)          POINT TO CALLER'S SAVE AREA   S21014 70200002
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGS                70260002
         BR    RETREG              RETURN                               70320002
         SPACE                                                          70380002
SYNSAVE  DC    18F'0'              SAVE AREA FOR SYNTAX ERROR ROUTINE   70440002
FLUSHMSG DC    C'AMD171I PROCESSING FOR CURRENT DUMP DISCONTINUED'      70500002
         SPACE                                                          70560002
PTRSYN   WTO 'AMD165I ERROR IN PRECEDING CONTROL STATEMENT',           L70620002
               MF=L,ROUTCDE=(2),DESC=7                                  70680002
         DROP  BASE1                                                    70740002
         EJECT                                                          70800002
*********************************************************************** 70860002
*                                                                     * 70920002
**        ***  ROUTINE TO CONVERT A THREE BYTE ADDRESS  ***          ** 70980002
*                                                                     * 71040002
*********************************************************************** 71100002
         SPACE                                                          71160002
         USING ADRCNVT,R15                                              71220002
ADRCNVT  ST    R5,R5SAVE           SAVE REGISTER 5               Y02006 71270002
         LA    R5,1(PREG)          ADDR OF VALUE TO BE CONVERTED Y02006 71280002
         ST    R1,ADRCSV           SAVE R1                              71340002
         HEXCNVT (4),(5),3         CONVERT IT                           71400002
         L     R1,ADRCSV           RESTORE R1                           71460002
         L     R5,R5SAVE           RESTORE REGISTER 5            Y02006 71510002
         BR    RETREG              RETURN TO CALLER                     71520002
ADRCSV   DC    F'0'                SAVE AREA FOR REG 1                  71580002
         DROP  R15                                                      71640002
         SPACE 3                                                        71700002
*********************************************************************** 71760002
*                                                                     * 71820002
**                ***  ROUTINE TO CONVERT A WORD  ***                ** 71880002
*                                                                     * 71940002
*********************************************************************** 72000002
         SPACE                                                          72060002
         USING WRDCNVT,R15                                              72120002
WRDCNVT  ST    R5,R5SAVE           SAVE REGISTER 5               Y02006 72170002
         LR    R5,PREG             ADDR OF WORD TO BE CONVERTED  Y02006 72180002
         HEXCNVT (4),(5),4         CONVERT IT                           72240002
         LR    PREG,R5             RESTORE PREG                         72300002
         L     R5,R5SAVE           RESTORE REGISTER 5            Y02006 72350002
         BR    RETREG              RETURN TO CALLER                     72360002
R5SAVE   DC    F'0'                REGISTER 5 SAVE AREA          Y02006 72410002
SYNPATCH DC    13F'0'              PATCH AREA                    X01980 72420002
         DROP  R15                                                      72480002
         EJECT                                                          72540002
AMDPRMSG CSECT                                                          72600002
         SPACE                                                          72660002
         USING *,R15                                             Y02006 72710002
         MODID                                                   Y02006 72712002
         DROP  R15                                               Y02006 72714002
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              72720002
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             72780002
         USING *,BASE1                                                  72840002
         LA    R3,PMSGSAVE         SAVE AREA CHAINNING                  72900002
         ST    R13,PMSGSAVE+4                                           72960002
         ST    R3,8(R13)                                                73020002
         LR    R13,R3                                                   73080002
         SPACE                                                          73140002
PRTMSG   NOP   PRTRET              RETURN IF SWITCH SET           P     73200002
*                                  (NO SYSPRINT DD CARD)          P     73260002
*                                  DD CARD)                             73320002
         TM    PTRDCB+DCBOFLGS,DCBOPEN IS SYSPRINT DCB OPEN             73380002
         BO    PRTMSG1             YES--BYPASS OPEN                     73440002
         LR    R3,R1               SAVE REG 1 CONTENT ARROUND OPEN      73500002
         OPEN  (PTRDCB,OUTPUT)                                          73560002
         TM    PTRDCB+DCBOFLGS,DCBOPEN DID IT OPEN                      73620002
         BZ    PRTMSG3             NO DD CARD...SET SWITCH TO RETURN    73680002
         LA    R4,PTRDCB           GET ADDR SYSPRINT DCB          M0732 73740002
         ST    R4,APTRDCB          STORE IN COMMON CSECT FOR END  M0732 73800002
***  PRINT TITLE FOR MESSAGE DATA SET  ***                              73860002
         MVC   MSGBUF(L'MSGTITLE),MSGTITLE                              73920002
         PUT   PTRDCB,MSGBUF                                            73980002
         MVI   MSGBUF,C' '         CLEAR MESSAGE BUFFER                 74040002
         MVC   MSGBUF+1(119),MSGBUF                                     74100002
         PUT   PTRDCB,MSGBUF       SPACE AFTER TITLE                    74160002
         LR    R1,R3               RESTORE REG 1                        74220002
PRTMSG1  MVI   MSGBUF,X'40'        CLEAR BUFFER                         74280002
         MVC   MSGBUF+1(119),MSGBUF                                     74340002
         LTR   R2,R2               TEST LENGTH                          74400002
         BZ    PRTMSG2             ZERO--PRINT BLANKS                   74460002
         BCTR  R2,0                DECR LENGTH FOR EXECUTE              74520002
         EX    R2,MSGMOVE          MOVE MESSAGE TO BUFFER               74580002
PRTMSG2  PUT   PTRDCB,MSGBUF       PRINT MESSAGE                        74640002
PRTRET   L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          74700002
         SPACE                                                          74760002
         LM    R14,R12,12(R13)     RESTORE HIS REGS                     74820002
         BR    RETREG              RETURN TO CALLER                     74880002
         SPACE                                                          74940002
PRTMSG3  OI    PRTMSG+1,X'F0'      NO SYSPRINT DD CARD--SET SW TO       75000002
*                                  RETURN ON ALL SUBSEQUENT ENTRIES     75060002
         B     PRTRET              RETURN                               75120002
         SPACE                                                          75180002
***  CONSTANTS AND SAVE AREA FOR PRTMSG ROUTINE  **                     75240002
PMSGSAVE DC    18F'0'              REGISTER SAVE AREA                   75300002
MSGBUF   DC    CL120' '                                                 75360002
MSGTITLE DC    C'* * * *    A M D P R D M P  M E S S A G E  L O G    * X75420002
               * * *'                                            Y01980 75480002
***  INSTRUCTION TO BE EXECUTED  ***                                    75540002
MSGMOVE  MVC   MSGBUF(0),0(R1)                                          75600002
         EJECT                                                          75660002
PTRDCB   DCB   DDNAME=SYSPRINT,MACRF=(PM),DSORG=PS,                    X75720002
               RECFM=F,LRECL=120,BLKSIZE=120                            75780002
MSGPATCH DC    13F'0'              PATCH AREA                    X01980 75840002
         EJECT                                                          75900002
AMDPRGFR CSECT                                                          75960002
         SPACE                                                          76020002
         USING *,R15                                             Y02006 76070002
         MODID                                                   Y02006 76072002
         DROP  R15                                               Y02006 76074002
         STM   R14,R12,12(R13)     STORE CALLER'S REGS                  76080002
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             76140002
         USING *,BASE1                                                  76200002
         LA    R2,FMTLNSA          SAVE AREA CHAINNING                  76260002
         ST    R13,FMTLNSA+4                                            76320002
         ST    R2,8(R13)                                                76380002
         LR    R13,R2              ENTRY COMPLETE                       76440002
         SPACE                                                          76500002
         STH   R0,ASIDSV           SAVE ASID NUMBER              Y02006 76560002
         LR    R8,PREG             PATTERN ADDR TO R8 FOR BASE          76620002
         USING FMTPTRN,R8                                               76680002
         L     BUFREG,CURBUF       LOAD BUFFER ADDR                     76740002
         USING OUTBUF,BUFREG                                            76800002
         SPACE                                                          76860002
FMTLNLP  SR    R10,R10             ZERO INDEX REG                       76920002
         TM    PTRNCD,X'FF'        TEST FOR END OF PATTERN              76980002
         BZ    FMTLNRT             YES--RETURN TO CALLER                77040002
         TM    PTRNCD,LBL          TEST FOR LABEL FOR THIS ENTRY        77100002
         BO    FMTLN1              YES--GO MOVE TO LABEL TO OUTPUT BUFF 77160002
FMTLNA   TM    PTRNCD,DTA          TEST FOR DATA FOR THIS ENTRY         77220002
         BO    FMTLN2              YES--PUT DATA INTO OUTPUT BUFFER     77280002
FMTLNB   LA    R8,4(R10,R8)        UPDATE PATTERN BASE TO NEXT ENTRY    77340002
         B     FMTLNLP             LOOP FOR ALL PATTERN ENTRIES         77400002
         SPACE 2                                                        77460002
*                                                                       77520002
*   MOVE LABEL TO OUTPUT BUFFER                                         77580002
*                                                                       77640002
         SPACE                                                          77700002
FMTLN1   IC    R3,PTRNLN           GET LENGTHS                          77760002
         N     R3,LN1MSK           AND FOR LABEL LN ONLY                77820002
         SRL   R3,4                SHIFT TO LOW DIGIT OF REG            77880002
         TM    PTRNCD,LBLP         IS THERE A LABEL POINTER             77940002
         BZ    FMTLN1A             NO--BR AROUND                        78000002
         L     R7,PTRNPTR          YES--LOAD IT INTO R7                 78060002
         AH    R10,FOUR            ADD LN OF PTR TO INDEX               78120002
         B     FMTLN1B             BR AROUND                            78180002
FMTLN1A  L     R7,NXTLBL           LOAD ADDR OF NEXT LABEL              78240002
FMTLN1B  LA    R4,1(R7,R3)         INCR NEXT LABEL ADDR                 78300002
         ST    R4,NXTLBL           STORE IT BACK                        78360002
         SR    R4,R4               CLEAR FOR IC                         78420002
         IC    R4,PTRNOFF1         GET OFFSET INTO LINE OF LABEL        78480002
         LA    R4,ADDR(R4)         ADDR OF WHERE TO PUT LABEL ON LINE   78540002
         EX    R3,LBLMOVE          MOVE LABEL TO PRINT LINE             78600002
         B     FMTLNA              CONTINUE                             78660002
         SPACE 2                                                        78720002
*                                                                       78780002
*   PLACE DATA INTO PRINT LINE                                          78840002
*                                                                       78900002
         SPACE                                                          78960002
FMTLN2   IC    R3,PTRNLN           GET LENGTHS                          79020002
         N     R3,LN2MSK           AND OFF ALL BUT LAST DIGIT           79080002
         AH    R3,ONEA             INCR TO REAL LENGTH                  79140002
         TM    PTRNCD,DTAP         IS THERE A DATA PTR                  79200002
         BZ    FMTLN2A             BR IF NOT                            79260002
         L     R7,PTRNPTR(R10)     YES--LOAD PTR TO DATA                79320002
         AH    R10,FOUR            ADD LN OF PTR TO INDEX REG           79380002
         B     FMTLN2B             BR AROUND                            79440002
FMTLN2A  L     R7,NXTDTA           LOAD ADDR OF NEXT DATA               79500002
FMTLN2B  LA    R4,0(R7,R3)         UPDATE TO NEXT DATA ADDR             79560002
         ST    R4,NXTDTA           PUT IT BACK                          79620002
         SR    R4,R4               CLEAR OFFSET REG                     79680002
         IC    R4,PTRNOFF2         LOAD OFFSET OF DATA INTO PRINT LINE  79740002
         TM    PTRNCD,DTAC         TEST FOR DATA FROM CORE OR DUMP      79800002
         BO    FMTLN3              BR IF DIRECTLY FROM CORE             79860002
         TM    PTRNCD,DTAE         IS DATA TO BE EBCDIC                 79920002
         LA    R2,FMTLNWK          LOAD ADDR OF WORK AREA TO R2         79980002
         BZ    FMTLN2C             BR IF NOT EBCDIC                     80040002
         LA    R2,ADDR(R4)         LOAD TO R2 ADDR OF WHERE IN          80100002
*                                  BUFFER TO PUT DATA                   80160002
FMTLN2C  STM   R2,R7,FMTLNSV       SAVE REGS R2 - R7                    80220002
         LH    R0,ASIDSV           PICK UP ASID FOR BRREAD       Y02006 80280002
FMTLN2D  BRREAD  (R7),DATA,ASID=(R0)                             Y02006 80340002
         LCR   R5,R7               COMPLIMENT ADDR                      80400002
         N     R5,LN3MSK           AND OFF ALL BUT LAST 2 BITS          80460002
         BNZ   FMTLN2E             BR IF NOT ZERO (LN IN R5)            80520002
         LA    R5,4                ZERO--USE A LN OF 4                  80580002
FMTLN2E  SR    R3,R5               SUBTRACT LN TO BE MOVED FROM         80640002
*                                  REMAINING LENGTH                     80700002
         BNP   FMTLN2F             BR IF REMAINING LN EQ OR LT 0 FOR    80760002
*                                  LAST MOVE                            80820002
         AR    R7,R5               INCR 'FROM' ADDR                     80880002
         BCTR  R5,0                DECR LN OF MOVE FOR EX               80940002
         EX    R5,DTAMOVE1         MOVE DATA                            81000002
         LA    R2,1(R5,R2)         INCR 'TOO' ADDR                      81060002
         B     FMTLN2D             LOOP FOR ALL DATA TO BE MOVED        81120002
         SPACE                                                          81180002
FMTLN2F  AR    R3,R5               ADD BACK SUBTRACTED VAL TO LN        81240002
         BZ    FMTLN2G             ALL DONE IF ZERO                     81300002
         BCTR  R3,0                DECR 1 FOR EX                        81360002
         EX    R3,DTAMOVE1         DO LAST MOVE                         81420002
FMTLN2G  LM    R2,R7,FMTLNSV       RESTORE REGS R2 - R7                 81480002
         TM    PTRNCD,DTAE         IS DATA EBCDIC                       81540002
         BO    FMTLNB              YES--DONE WITH DATA FOR THIS PATTERN 81600002
*                                  ENTRY IF SO                          81660002
FMTLN2H  LA    R5,ADDR(R4)         ADDR OF WHERE IN BUFFER TO PUT       81720002
*                                  DATA                                 81780002
         BAL   R9,FMTLN4           CONVERT DATA TO PRINTABLE HEX        81840002
         B     FMTLNB              DONE WITH DATA FOR THIS PTRN ENTRY   81900002
         SPACE                                                          81960002
FMTLN3   LR    R2,R7               DATA 'FROM' ADDR TO R2               82020002
         TM    PTRNCD,DTAE         IS DATA TO BE EBCDIC                 82080002
         BZ    FMTLN2H             NO--GO CONVERT TO HEX                82140002
         LA    R2,ADDR(R4)         DATA 'TOO' ADDR TO R2                82200002
         LR    PREG,R7             DATA 'FROM' ADDR TO PREG             82260002
         BCTR  R3,0                DECR LN FOR EXECUTE                  82320002
         EX    R3,DTAMOVE1         MOVE EBCDIC DATA TO BUFFER           82380002
         B     FMTLNB              CONTINUE WITH NEXT ENTRY IN PATTERN  82440002
         SPACE                                                          82500002
FMTLN4   HEXCNVT (5),(2),(3)       CONVERT DATA TO PRINTABLE HEX        82560002
         BR    R9                  RETURN TO CALLER                     82620002
         SPACE                                                          82680002
*   EXECUTABLE INSTRUCTIONS                                             82740002
DTAMOVE1 MVC   0(0,R2),0(PREG)                                          82800002
LBLMOVE  MVC   0(0,R4),0(R7)                                            82860002
         SPACE 2                                                        82920002
FMTLNRT  L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          82980002
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGS                83040002
         BR    RETREG              RETURN TO CALLER                     83100002
         SPACE 3                                                        83160002
*                                                                       83220002
*   CONSTANTS FOR FORMAT LINE ROUTINE                                   83280002
*                                                                       83340002
         SPACE                                                          83400002
FMTLNSA  DC    18F'0'              FORMAT LINE RTN SAVE AREA            83460002
FMTLNSV  DC    6F'0'               TEMP REG SAVE AREA                   83520002
LN1MSK   DC    F'240'                                                   83580002
LN2MSK   DC    F'15'                                                    83640002
LN3MSK   DC    F'3'                                                     83700002
FMTLNWK  DC    4F'0'                                                    83760002
NXTLBL   DC    F'0'                                                     83820002
NXTDTA   DC    F'0'                                                     83880002
ASIDSV   DC    H'0'                SAVE AREA FOR ASID VALUE      Y02006 83940002
         DROP  BUFREG,R8,BASE1                                          84000002
GFRPATCH DC    13F'0'              PATCH AREA                    X01980 84050002
         EJECT                                                          84170002
FMTPTRN  DSECT                     DSECT FOR LINE FORMAT ROUTINE        84172002
PTRNCD   DS    BL1                                                      84180002
PTRNLN   DS    XL1                                                      84240002
PTRNOFF1 DS    XL1                                                      84300002
PTRNOFF2 DS    XL1                                                      84360002
PTRNPTR  DS    F                                                        84420002
         EJECT                                                          84540002
AMDPRTSV CSECT                                                          84600002
         SPACE                                                          84660002
         USING TCBQSAVE,R15        SAVE TCB EP                          84720002
TCBQSAVE STM   R14,R12,12(R13)                                          84780002
         LA    R14,8               ENTRY CODE 8                         84840002
         B     BASETCB             GO ESTABLISH BASE                    84900002
         DROP  R15                                                      84960002
         USING TCBREMV,R15                                              85020002
TCBREMV  STM   R14,R12,12(R13)     REMOVE TCB EP                        85080002
         LA    R14,4               ENTRY CODE 4                         85140002
         B     BASETCB             GO ESTABLISH BASE                    85200002
         DROP  R15                                                      85260002
         USING TCBRTRV,R15                                              85320002
TCBRTRV  STM   R14,R12,12(R13)     RETRIEVE TCB EP                      85380002
         SR    R14,R14             ENTRY CODE 0                         85440002
         DROP  R15                                                      85500002
         SPACE                                                          85560002
BASETCB  BALR  BASE1,0             ESTABLISH REG 11 AS BASE             85620002
         USING *,BASE1                                                  85680002
         LA    R3,TCBSVREG         SAVE AREA CHAINING                   85740002
         ST    R13,TCBSVREG+4                                           85800002
         ST    R3,8(R13)                                                85860002
         LR    R13,R3                                                   85920002
         SPACE                                                          85980002
         USING COMMON,COMBASE                                           86040002
         SPACE                                                          86100002
         B     *+4(R14)            BRANCH ON ENTRY CODE                 86160002
         B     RTRV                0 - RETRIEVE                         86220002
         B     REMV                4 - REMOVE                           86280002
*                                  8 - SAVE (FALL THROUGH)              86340002
         SPACE                                                          86400002
SAVE     LA    R2,0(R2)            ZERO HIGH ORDER BYTE                 86460002
         LTR   R2,R2               IS ADDR ZERO                         86520002
         BZ    TCBRET              YES--RETURN                          86580002
         LA    R4,TCBLIST          ADDR OF TCB LIST POINTER             86640002
TCBSVLP  L     R3,0(R4)            TCB LIST PTR                         86700002
         LTR   R3,R3               IS PTR ZERO                          86760002
         BZ    TCBSAVE2            YES--SAVE TCB ADDR                   86820002
         C     R2,4(R3)            COMPARE TCB ADDRESSES                86880002
         BE    TCBSAVE3            TCB ADDRESS ALREADY ON THE LIST      86940002
         LR    R4,R3                                                    87000002
         B     TCBSVLP             LOOP THROUGH LIST                    87060002
TCBSAVE2 LA    R0,8                8 BYTES FOR TCBLIST ENTRY            87120002
         GETMAIN R,LV=(0)                                               87180002
         MVC   0(4,R1),TCBLIST     PLACE NEW ENTRY                      87240002
         ST    R1,TCBLIST          ON TOP OF LIST                       87300002
         ST    R2,4(R1)            PLACE TCB ADDR IN NEW ENTRY          87360002
         B     TCBRET              RETURN TO CALLER                     87420002
         SPACE                                                          87480002
TCBSAVE3 LA    R15,4               LOAD RETURN CODE TO INDICATE TCB     87540002
*                                  ALREADY ON THE TCBLIST               87600002
         B     TCBRET1             RETURN TO CALLER                     87660002
         SPACE 2                                                        87720002
REMV     LA    R2,0(R2)            CLEAR HIGH ORDER BYTE                87780002
         LTR   R2,R2               IS REG 2 ZERO                        87840002
         BC    7,TCBREMV1          NO--BR AROUND NEXT INSTRUCTION       87900002
         OI    ALTCBSW+1,X'F0'     SET SW TO REMOVE ALL TCB ENTRIES     87960002
*                                  FROM LIST                            88020002
TCBREMV1 LA    R4,TCBLIST          ADDR OF TCB LIST PTR                 88080002
TCBRMLP  L     R3,0(R4)            TCB LIST PTR                         88140002
         LTR   R3,R3               IS IT ZERO                           88200002
         BZ    TCBRET              YES--RETURN                          88260002
         C     R2,4(R3)            ARE TCB ADDRESSES EQUAL              88320002
ALTCBSW  BE    TCBREMV2            YES--REMOVE ENTRY FROM LIST          88380002
         LR    R4,R3                                                    88440002
         B     TCBRMLP             NO--LOOP                             88500002
TCBREMV2 LA    R0,8                8 BYTES FOR TCB LIST ENTRY           88560002
         LR    R1,R3               AREA TO BE FREED TO R1               88620002
         MVC   0(4,R4),0(R3)       REMOVE ENTRY FROM LIST               88680002
         FREEMAIN R,LV=(0),A=(1)                                        88740002
         B     TCBRMLP             LOOP THROUGH ALL ENTRIES             88800002
         SPACE                                                          88860002
TCBRET   SR    R15,R15             ZERO RETURN CODE                     88920002
TCBRET1  NI    ALTCBSW+1,X'80'     RESET ALL TCB REMOVE SWITCH          88980002
         L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          89040002
         L     R14,12(R13)                                              89100002
         LM    R0,R1,20(R13)       DON'T RESTORE REG 2 - TCB ADDR OR    89160002
         LM    R3,R12,32(R13)      REG 15 - RETURN CODE                 89220002
         BR    RETREG              RETURN TO CALLING PROGRAM            89280002
         SPACE                                                          89340002
RTRV     LTR   R2,R2               IS REG 2 ZERO                        89400002
         BCR   8,RETREG            YES--RETURN                          89460002
         LA    R4,TCBLIST          ADDR OF TCBLIST PTR                  89520002
TCBRTVLP L     R3,0(R4)            ADDR OF TCBLIST ENTRY                89580002
         LTR   R3,R3               IS IT ZERO                           89640002
         BZ    TCBRTRV1            YES--ZERO R2 AND RETURN              89700002
         LR    R4,R3               STEP TO NEXT ENTRY                   89760002
         BCT   R2,TCBRTVLP         LOOP FOR COUNT IN R2                 89820002
         L     R2,4(R3)            LOAD TCB ADDR INTO R2                89880002
         B     TCBRET              AND RETURN                           89940002
TCBRTRV1 SR    R2,R2               ZERO R2 TO INDICATE NO MORE TCB      90000002
*                                  ADDRESSES IN LIST                    90060002
         B     TCBRET              RETURN                               90120002
         SPACE 3                                                        90180002
*****    TCB ROUTINE SAVE AREA                                          90240002
         SPACE                                                          90300002
TCBSVREG DC    18F'0'                                                   90360002
TSVPATCH DC   13F'0'               PATCH AREA                    X01980 90420002
         SPACE                                                          90480002
         DROP  BASE1,COMBASE                                            90540002
         EJECT                                                          90600002
AMDPRSTP CSECT                                                          90660002
         SPACE                                                          90720002
STPWTOR  EQU   128                 WTOR ISSUED INDICATOR                90780002
STPRECUR EQU   64                  RECURSION THROUGH STOP ROUTINE       90840002
         USING *,R15                                                    90900002
         TM    STOPFLGS,STPRECUR   TEST FOR RECURSION THROUGH STOP      90960002
*                                  ROUTINE - STOP ISSUING BRWRITE       91020002
*                                  WHICH THEN CALLS STOP                91080002
         BCR   1,RETREG            RETURN IF SO                         91140002
         SPACE                                                          91200002
         STM   R14,R12,12(R13)     SAVE CALLER'S REGS                   91260002
         BALR  BASE1,0             BASE STOP ROUTINE ON REG 11          91320002
         USING *,BASE1                                                  91380002
         LA    R2,STOPSAVE         SAVE AREA CHAINING                   91440002
         ST    R13,STOPSAVE+4                                           91500002
         ST    R2,8(R13)                                                91560002
         LR    R13,R2              ENTRY COMPLETE                       91620002
         SPACE                                                          91680002
         USING COMMON,COMBASE                                           91740002
         USING OUTBUF,BUFREG       BASE OUTPUT LINE DSECT               91800002
         SPACE                                                          91860002
         TM    STOPFLGS,STPWTOR    HAS WTOR BEEN ISSUED                 91920002
         BZ    STOPWTOR            NO--GO ISSUE IT                      91980002
         TM    STOPECB,CMPLT       IS IT COMPLETE                       92040002
         BZ    STOPRET             BRANCH TO RETURN IF NOT              92100002
         NI    STOPFLGS,XFF-STPWTOR RESET WTOR SW                       92160002
         TR    STOPRPLY(8),CAPTABL TRANSLATE SMALL LETTERS TO     M3993 92220002
*                                  CAPITALS                       M3993 92280002
         BRPRTMSG  STOPRPLY,8      PRINT REPLY IN MESSAGE LOG           92340002
         CLC   STOPRPLY(4),STOP    WAS REPLY 'STOP'                     92400002
         BNE   STOPWTOR            NO--GO REISSUE WTOR AND RETURN       92460002
         L     R7,AOUTDCB          LOAD ADDR OF OUTDCB FOR BASE         92520002
         USING OUTDCB,R7                                                92580002
         TM    OUTDCB+DCBOFLGS,DCBOPEN IS OUTDCB OPEN                   92640002
         DROP  R7                                                       92700002
         BZ    STPRT1              BR IF NOT                            92760002
         OI    STOPFLGS,STPRECUR   INDICATE RECURSION                   92820002
         BRWRITE 1                 SPACE A LINE                         92880002
         L     BUFREG,CURBUF       RESTORE BUFFER ADDR                  92940002
         MVC   ADDR(39),STOPMSG    MOVE MESSAGE TO BUFFR                93000002
         BRWRITE 1                 PRINT STOP MESSAGE                   93060002
         NI    STOPFLGS,XFF-STPRECUR  RESET RECURSION SWITCH            93120002
*                                  PRINT DUMP TERMINATED MSG ON         93180002
STPRT1   BRPRTMSG  STOPMSG,39      SYSPRINT                             93240002
         SR    R2,R2               INDICATE REMOVAL OF ALL TCBS         93300002
         L     R15,ATCBREMV        POINT TO TCB REMOVE ROUTINE          93360002
         BALR  RETREG,R15          LINK TO IT                           93420002
         L     R15,STOPEXIT        POINT TO LATEST STOP ROUTINE IN      93480002
*                                  CHAIN                                93540002
         BR    R15                 GO TO IT TO CLOSE OUT                93600002
         SPACE 2                                                        93660002
*********************************************************************** 93720002
*                                                                     * 93780002
*   ISSUE WTOR TO ENABLE OPERATOR TO TERMINATE DUMP                   * 93840002
*                                                                     * 93900002
*********************************************************************** 93960002
         SPACE                                                          94020002
STOPWTOR MVI   STOPECB,0           CLEAR ECB                            94080002
         MVI   STOPRPLY,X'40'      BLANK REPLY BUFFER                   94140002
         MVC   STOPRPLY+1(7),STOPRPLY                                   94200002
         CNOP  0,4                                                      94260002
*                                                                S21014 94320002
STPWTORM WTOR  'AMD156I REPLY WITH STOP TO TERMINATE CURRENT FUNCTION',*94380002
               STOPRPLY,8,STOPECB,ROUTCDE=(1),DESC=2                    94440002
         BRPRTMSG  STPWTORM+16,53                                       94500002
         OI    STOPFLGS,STPWTOR    INDICATE WTOR DONE                   94560002
         SPACE                                                          94620002
STOPRET  L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          94680002
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGS                94740002
         BR    RETREG              RETURN TO BRRWRITE                   94800002
         SPACE 2                                                        94860002
*   CONSTANTS FOR STOPROUT                                              94920002
         SPACE                                                          94980002
STOPSAVE DC    18F'0'              STOP ROUTINE SAVE AREA               95040002
STOPECB  DC    F'0'                                                     95100002
STOPRPLY DC    CL8' '                                                   95160002
STOPMSG  DC    C'AMD172I FUNCTION TERMINATED BY OPERATOR'        S21014 95220002
STOPFLGS DC    X'00'                                                    95280002
STPPATCH DC    13F'0'              PATCH AREA                    X01980 95340002
         SPACE                                                          95400002
         DROP  BASE1,BUFREG,COMBASE                                     95640002
         END   AMDPRCOM                                                 95700002
