         TITLE 'AMDPRDPS -- STORAGE PRINT SERVICE MODULE               *00001000
                        '                                               00002000
AMDPRDPS CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(17)                                          01S0001 00008000
         DC    C'AMDPRDPS 12/19/72'                             01S0001 00009000
PRNTSTG  DS    0H                                               01S0001 00010000
         USING *,@15                                            01S0001 00011000
         B     @PROLOG                                          01S0001 00012000
         DC    AL2(@EP00032-PRNTSTG)                                    00013000
         ENTRY PRNTSTG                                                  00014000
PCBRTN   DS    0H                                               01S0001 00015000
         USING *,@15                                            01S0001 00016000
         B     @PROLOG                                          01S0001 00017000
         DC    AL2(@EP00254-PCBRTN)                                     00018000
         ENTRY PCBRTN                                                   00019000
         DROP  @15                                                      00020000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00021000
         BALR  @11,0                                            01S0001 00022000
@PSTART  DS    0H                                               01S0001 00023000
         USING @PSTART,@11                                      01S0001 00024000
         ST    @13,@SA00001+4                                   01S0001 00025000
         LA    @14,@SA00001                                     01S0001 00026000
         ST    @14,8(,@13)                                      01S0001 00027000
         LR    @13,@14                                          01S0001 00028000
         AH    @15,4(,@15)                                      01S0001 00029000
         BR    @15                                              01S0001 00030000
@EP00001 DS    0H                                               01S0002 00031000
*/*------------------------------------------------------------------*/ 00032000
*/* THE FOLLOWING INSTRUCTIONS ONLY GET EXECUTED ONCE WHEN DPS IS    */ 00033000
*/* CALLED BY AMDPRSEG FOR INITIALIZATION                    @Y02006P*/ 00034000
*/*------------------------------------------------------------------*/ 00035000
*  APRTSTG = ADDR(PRNTSTG);        /* SUPPLY ENTRY ADDR IN COMMON    */ 00036000
         L     @10,@CA00367                                     01S0029 00037000
         ST    @10,APRTSTG(,COMBASE)                            01S0029 00038000
*  APCBENQ = ADDR(PCBRTN);         /* SUPPLY PCB ENTRY IN COMMON     */ 00039000
         L     @10,@CA00368                                     01S0030 00040000
         ST    @10,APCBENQ(,COMBASE)                            01S0030 00041000
*  RETURN;                                                 /*@Y02006P*/ 00042000
@EL00001 L     @13,4(,@13)                                      01S0031 00043000
@EF00001 DS    0H                                               01S0031 00044000
@ER00001 LM    @14,@12,12(@13)                                  01S0031 00045000
         BR    @14                                              01S0031 00046000
*/*------------------------------------------------------------------*/ 00047000
*/* THE FOLLOWING IS THE MAIN LINE CODE WHICH SERVICES PCB REQUESTS  */ 00048000
*/*------------------------------------------------------------------*/ 00049000
*PRNTSTG: ENTRY;                   /* ENTRY POINT FOR FORMAT ROUTINES*/ 00050000
@EP00032 DS    0H                                               01S0033 00051000
*  RESPECIFY R13 RESTRICTED;                               /*@Y02006P*/ 00052000
*  DPSSAVEA = R13;                 /* SAVE AREA ADDR FOR ASYNC RTNS  */ 00053000
         ST    R13,DPSSAVEA                                     01S0034 00054000
*  RESPECIFY R13 UNRESTRICTED;                             /*@Y02006P*/ 00055000
*  LSTERRTN = ERRADDR;             /* SAVE PREVIOUS READ ERROR RTN   */ 00056000
         L     LSTERRTN,ERRADDR(,COMBASE)                       01S0036 00057000
*  ERRADDR = ADDR(DPSREAD);        /* ADDR OF MY READ ERROR RTN      */ 00058000
         LA    @09,DPSREAD                                      01S0037 00059000
         ST    @09,ERRADDR(,COMBASE)                            01S0037 00060000
*  LSTSTOP = STOPEXIT;             /* SAVE PREVIOUS STOP RTN ADDR    */ 00061000
         L     LSTSTOP,STOPEXIT(,COMBASE)                       01S0038 00062000
*  STOPEXIT = ADDR(DPSSTOP);       /* ADDR OF MY STOP RTN    @Y02006P*/ 00063000
         LA    @09,DPSSTOP                                      01S0039 00064000
         ST    @09,STOPEXIT(,COMBASE)                           01S0039 00065000
*  OUTBUFAD = CURBUF;              /* ADDRESS OF OUTPUT BUFFER       */ 00066000
         L     OUTBUFAD,CURBUF(,COMBASE)                        01S0040 00067000
*  LASTASID = 'FFFF'X;                                     /*@Y02006P*/ 00068000
*                                                               01S0041 00069000
         MVC   LASTASID(2),@CB00429                             01S0041 00070000
*  IF PCBPTR ^= 0 THEN             /* THERE ARE PCBS TO SERVICE      */ 00071000
         ICM   @09,15,PCBPTR(COMBASE)                           01S0042 00072000
         BZ    @RF00042                                         01S0042 00073000
*    DO;                                                   /*@Y02006P*/ 00074000
*      IF I3800204=ON THEN I3800KEY=ON; /* KEY MSG IN DUMP  @Z40MI3F */ 00075000
         TM    I3800204(COMBASE),B'00000001'                    01S0044 00076000
         BNO   @RF00044                                         01S0044 00077000
         OI    I3800KEY(COMBASE),B'00001000'                    01S0045 00078000
*                                  /* CONDENSED DUMP ONLY   @Z40MI3F */ 00079000
*      IF GPRSFND = YES THEN       /* A PRINTOUT OF REGS IS REQUESTED*/ 00080000
@RF00044 TM    GPRSFND(COMBASE),B'00000010'                     01S0046 00081000
         BNO   @RF00046                                         01S0046 00082000
*/*------------------------------------------------------------------*/ 00083000
*/* REGPRINT OBTAINS AND FORMATS THE PSW, GENERAL PURPOSE REGISTERS, */ 00084000
*/* CONTROL REGISTERS, AND FLOATING POINT REGISTERS          @Y02006P*/ 00085000
*/*------------------------------------------------------------------*/ 00086000
*DO;                                                       /*@Y02006P*/ 00087000
*  RESPECIFY (CPUADDR,R1) RESTRICTED;                      /*@Y02006P*/ 00088000
*  CPUADDR = IPLCPU;               /* WANT REGS FOR DUMP CPU @Y02006P*/ 00089000
         SLR   CPUADDR,CPUADDR                                  02S0049 00090000
         ICM   CPUADDR,3,IPLCPU(COMBASE)                        02S0049 00091000
*  SUBERRTN = ADDR(REGREAD);       /* BRREAD ERROR RTN FOR REGISTERS */ 00092000
         LA    SUBERRTN,REGREAD                                 02S0050 00093000
*  GEN FLOWS(DPSREAD) REFS(CPUADDR,BRRDDATA) (BRREAD (CPUADDR),CPU);    00094000
         BRREAD (CPUADDR),CPU                                           00095000
*  CPUSTATP = R1;                  /* ADDRESS OF STATUS RECD @Y02006P*/ 00096000
         LR    CPUSTATP,R1                                      02S0052 00097000
*  RESPECIFY (CPUADDR,R1) UNRESTRICTED;                    /*@Y02006P*/ 00098000
*  IF CPUGPRS = OFF THEN           /* ALL REGS AND PSW ARE GOOD      */ 00099000
         TM    CPUGPRS(CPUSTATP),B'00100000'                    02S0054 00100000
         BNZ   @RF00054                                         02S0054 00101000
*    DO;                           /* FORMAT THE PSW         @Y02006P*/ 00102000
*      PSWHEADR = PSWMSG;          /* PSW LABEL              @Y02006P*/ 00103000
         MVC   PSWHEADR(11,OUTBUFAD),PSWMSG                     02S0056 00104000
*      AREAPTR = ADDR(PSWWORD1);                           /*@Y02006P*/ 00105000
         LA    AREAPTR,PSWWORD1(,OUTBUFAD)                      02S0057 00106000
*      FROMPTR = ADDR(CPUPSW1);                            /*@Y02006P*/ 00107000
         LA    FROMPTR,CPUPSW1(,CPUSTATP)                       02S0058 00108000
*      DO I = 1 TO 2;              /* TRANSLATE TWO WORDS OF PSW     */ 00109000
         LA    I,1                                              02S0059 00110000
@DL00059 DS    0H                                               02S0060 00111000
*        UNPK(TOAREA,FROM);                                /*@Y02006P*/ 00112000
         UNPK  TOAREA(9,AREAPTR),FROM(5,FROMPTR)                02S0060 00113000
*        TOAREA(9) = BLANK;                                /*@Y02006P*/ 00114000
         MVI   TOAREA+8(AREAPTR),C' '                           02S0061 00115000
*        TR(TOAREA(1:8),EBCTABL);                          /*@Y02006P*/ 00116000
         TR    TOAREA(8,AREAPTR),EBCTABL(COMBASE)               02S0062 00117000
*        AREAPTR = ADDR(PSWWORD2); /* SECOND OUTPUT WORD     @Y02006P*/ 00118000
         LA    AREAPTR,PSWWORD2(,OUTBUFAD)                      02S0063 00119000
*        FROMPTR = ADDR(CPUPSW2);  /* SECOND HALF OF PSW     @Y02006P*/ 00120000
         LA    FROMPTR,CPUPSW2(,CPUSTATP)                       02S0064 00121000
*      END;                                                /*@Y02006P*/ 00122000
         AH    I,@CH00041                                       02S0065 00123000
         CH    I,@CH00078                                       02S0065 00124000
         BNH   @DL00059                                         02S0065 00125000
*      CALL WRITERTN(2);           /* PRINT PSW AND SKIP LINE        */ 00126000
         LA    @01,@AL00066                                     02S0066 00127000
         BAL   @14,WRITERTN                                     02S0066 00128000
*      DO I = 1 TO 4;              /* TRANSLATE GENRL AND CONTRL REGS*/ 00129000
         LA    I,1                                              02S0067 00130000
@DL00067 DS    0H                                               02S0068 00131000
*        REGHEADR(1:LENGTH(REGMSG(1))) = REGMSG(I);        /*@Y02006P*/ 00132000
         LR    @09,I                                            02S0068 00133000
         SLA   @09,3                                            02S0068 00134000
         LA    @07,REGMSG-8(@09)                                02S0068 00135000
         MVC   REGHEADR(8,OUTBUFAD),0(@07)                      02S0068 00136000
*        AREAPTR = ADDR(REGWORD);  /* OUTPUT AREA FOR REGS   @Y02006P*/ 00137000
         LA    AREAPTR,REGWORD(,OUTBUFAD)                       02S0069 00138000
*        FROMPTR = ADDR(CPUREGS(I)); /* REGISTER DATA        @Y02006P*/ 00139000
         LR    @09,I                                            02S0070 00140000
         SLA   @09,5                                            02S0070 00141000
         LA    FROMPTR,CPUREGS-32(@09,CPUSTATP)                 02S0070 00142000
*        CALL REGFORMT;            /* FORMAT REGISTERS       @Y02006P*/ 00143000
         BAL   @14,REGFORMT                                     02S0071 00144000
*        IF I = 1 | I = 3 THEN                                  02S0072 00145000
         CH    I,@CH00041                                       02S0072 00146000
         BE    @RT00072                                         02S0072 00147000
         CH    I,@CH00169                                       02S0072 00148000
         BNE   @RF00072                                         02S0072 00149000
@RT00072 DS    0H                                               02S0073 00150000
*          CALL WRITERTN(1);       /* PRINT LINE OF REGS - NO SKIP   */ 00151000
         LA    @01,@AL00073                                     02S0073 00152000
         BAL   @14,WRITERTN                                     02S0073 00153000
*        ELSE                                                   02S0074 00154000
*          CALL WRITERTN(2);       /* PRINT LINE OF REGS - SKIP 1    */ 00155000
         B     @RC00072                                         02S0074 00156000
@RF00072 LA    @01,@AL00074                                     02S0074 00157000
         BAL   @14,WRITERTN                                     02S0074 00158000
*      END;                                                /*@Y02006P*/ 00159000
@RC00072 AH    I,@CH00041                                       02S0075 00160000
         CH    I,@CH00047                                       02S0075 00161000
         BNH   @DL00067                                         02S0075 00162000
*      DO I = 1 TO 2;              /* FORMAT FLOATING POINT REGS     */ 00163000
         LA    I,1                                              02S0076 00164000
@DL00076 DS    0H                                               02S0077 00165000
*        REGHEADR(1:LENGTH(FPRMSG(1))) = FPRMSG(I);        /*@Y02006P*/ 00166000
         LR    @09,I                                            02S0077 00167000
         SLA   @09,3                                            02S0077 00168000
         LA    @07,FPRMSG-8(@09)                                02S0077 00169000
         MVC   REGHEADR(8,OUTBUFAD),0(@07)                      02S0077 00170000
*        FROMPTR = ADDR(CPUFLPT(I)); /* REGISTER DATA        @Y02006P*/ 00171000
         LR    @09,I                                            02S0078 00172000
         SLA   @09,4                                            02S0078 00173000
         AL    @09,@CF00642                                     02S0078 00174000
         LA    FROMPTR,CPUFLPT-4(@09,CPUSTATP)                  02S0078 00175000
*        AREAPTR = ADDR(FREG1);    /* OUTPUT AREA FOR FLOATING PT REG*/ 00176000
         LA    AREAPTR,FREG1(,OUTBUFAD)                         02S0079 00177000
*        DO J = 1 TO 2;                                    /*@Y02006P*/ 00178000
         LA    J,1                                              02S0080 00179000
@DL00080 DS    0H                                               02S0081 00180000
*          DO K = 1 TO 2;          /* TRANSLATE FLOATING PT REGS     */ 00181000
         LA    K,1                                              02S0081 00182000
@DL00081 DS    0H                                               02S0082 00183000
*            UNPK(TOAREA,FROM);                            /*@Y02006P*/ 00184000
         UNPK  TOAREA(9,AREAPTR),FROM(5,FROMPTR)                02S0082 00185000
*            TOAREA(9) = BLANK;                            /*@Y02006P*/ 00186000
         MVI   TOAREA+8(AREAPTR),C' '                           02S0083 00187000
*            TR(TOAREA(1:8),EBCTABL);                      /*@Y02006P*/ 00188000
         TR    TOAREA(8,AREAPTR),EBCTABL(COMBASE)               02S0084 00189000
*            AREAPTR = AREAPTR + LENGTH(TOAREA); /* NEXT OUTPUT AREA */ 00190000
         AH    AREAPTR,@CH00189                                 02S0085 00191000
*            FROMPTR = FROMPTR + 4; /* NEXT REGISTER         @Y02006P*/ 00192000
         AH    FROMPTR,@CH00047                                 02S0086 00193000
*          END;                                            /*@Y02006P*/ 00194000
         AH    K,@CH00041                                       02S0087 00195000
         CH    K,@CH00078                                       02S0087 00196000
         BNH   @DL00081                                         02S0087 00197000
*          AREAPTR = ADDR(FREG2);  /* AREA FOR NEXT REGISTER @Y02006P*/ 00198000
         LA    AREAPTR,FREG2(,OUTBUFAD)                         02S0088 00199000
*        END;                                              /*@Y02006P*/ 00200000
         AH    J,@CH00041                                       02S0089 00201000
         CH    J,@CH00078                                       02S0089 00202000
         BNH   @DL00080                                         02S0089 00203000
*        IF I = 1 THEN                                          02S0090 00204000
         CH    I,@CH00041                                       02S0090 00205000
         BNE   @RF00090                                         02S0090 00206000
*          CALL WRITERTN(1);       /* PRINT LINE - NO SKIP   @Y02006P*/ 00207000
         LA    @01,@AL00091                                     02S0091 00208000
         BAL   @14,WRITERTN                                     02S0091 00209000
*        ELSE                                                   02S0092 00210000
*          CALL WRITERTN(2);       /* PRINT LINE AND SKIP    @Y02006P*/ 00211000
         B     @RC00090                                         02S0092 00212000
@RF00090 LA    @01,@AL00092                                     02S0092 00213000
         BAL   @14,WRITERTN                                     02S0092 00214000
*      END;                                                /*@Y02006P*/ 00215000
@RC00090 AH    I,@CH00041                                       02S0093 00216000
         CH    I,@CH00078                                       02S0093 00217000
         BNH   @DL00076                                         02S0093 00218000
*    END;                                                  /*@Y02006P*/ 00219000
*  ELSE                            /* ONLY GENERAL REGISTERS ARE GOOD*/ 00220000
*    DO;                                                   /*@Y02006P*/ 00221000
         B     @RC00054                                         02S0095 00222000
@RF00054 DS    0H                                               02S0096 00223000
*      DO I = 1 TO 2;              /* FORMAT GENERAL REGS    @Y02006P*/ 00224000
         LA    I,1                                              02S0096 00225000
@DL00096 DS    0H                                               02S0097 00226000
*        AREAPTR = ADDR(REGWORD);  /* REGISTER OUTPUT AREA   @Y02006P*/ 00227000
         LA    AREAPTR,REGWORD(,OUTBUFAD)                       02S0097 00228000
*        REGHEADR(1:LENGTH(REGMSG(1))) = REGMSG(I);        /*@Y02006P*/ 00229000
         LR    @09,I                                            02S0098 00230000
         SLA   @09,3                                            02S0098 00231000
         LA    @07,REGMSG-8(@09)                                02S0098 00232000
         MVC   REGHEADR(8,OUTBUFAD),0(@07)                      02S0098 00233000
*        FROMPTR = ADDR(CPUREGS(I)); /* REGISTER DATA        @Y02006P*/ 00234000
         LR    @09,I                                            02S0099 00235000
         SLA   @09,5                                            02S0099 00236000
         LA    FROMPTR,CPUREGS-32(@09,CPUSTATP)                 02S0099 00237000
*        CALL REGFORMT;            /* TRANSLATE REGS TO PRINTABLE    */ 00238000
         BAL   @14,REGFORMT                                     02S0100 00239000
*        IF I = 1 THEN                                          02S0101 00240000
         CH    I,@CH00041                                       02S0101 00241000
         BNE   @RF00101                                         02S0101 00242000
*          CALL WRITERTN(1);       /* PRINT A LINE AND DONT SKIP     */ 00243000
         LA    @01,@AL00102                                     02S0102 00244000
         BAL   @14,WRITERTN                                     02S0102 00245000
*        ELSE                                                   02S0103 00246000
*          CALL WRITERTN(2);       /* PRINT A LINE AND SKIP ONE      */ 00247000
         B     @RC00101                                         02S0103 00248000
@RF00101 LA    @01,@AL00103                                     02S0103 00249000
         BAL   @14,WRITERTN                                     02S0103 00250000
*      END;                                                /*@Y02006P*/ 00251000
@RC00101 AH    I,@CH00041                                       02S0104 00252000
         CH    I,@CH00078                                       02S0104 00253000
         BNH   @DL00096                                         02S0104 00254000
*      MESSAGE(1:LENGTH(NOSTRMSG)) = NOSTRMSG;             /*@Y02006P*/ 00255000
         MVC   MESSAGE(40,OUTBUFAD),NOSTRMSG                    02S0105 00256000
*      CALL WRITERTN(3);           /* TELL ONLY GENRL REGS AVAILABLE */ 00257000
         LA    @01,@AL00106                                     02S0106 00258000
         BAL   @14,WRITERTN                                     02S0106 00259000
*    END;                                                  /*@Y02006P*/ 00260000
*REGEND: GPRSFND = OFF;            /* REGISTER FORMATTING ALL DONE   */ 00261000
@RC00054 DS    0H                                               02S0108 00262000
REGEND   NI    GPRSFND(COMBASE),B'11111101'                     02S0108 00263000
*  END;                                                    /*@Y02006P*/ 00264000
*      DO WHILE PCBPTR ^= 0;                               /*@Y02006P*/ 00265000
@RF00046 B     @DE00110                                         01S0110 00266000
@DL00110 DS    0H                                               01S0111 00267000
*/*------------------------------------------------------------------*/ 00268000
*/* GETPCB CALLS AMDPRPCB TO GET THE NEXT PCB ON THE QUEUE   @Y02006P*/ 00269000
*/*------------------------------------------------------------------*/ 00270000
*DO;                                                       /*@Y02006P*/ 00271000
*  RESPECIFY PREG RESTRICTED;                              /*@Y02006P*/ 00272000
*  PREG = ADDR(PCBDATA);           /* AREA FOR COPY OF PCB   @Y02006P*/ 00273000
         LA    @09,PCBDATA                                      02S0113 00274000
         LR    PREG,@09                                         02S0113 00275000
*  RESPECIFY PCBPL BASED(ADDR(PCBDATA));                   /*@Y02006P*/ 00276000
*  PCBPFUNC = PCBPDEQ;             /* INDICATE DEQUEUE FUNCTION      */ 00277000
         OI    PCBPFUNC(@09),B'10000000'                        02S0115 00278000
*  CALL AMDPRPCB;                  /* GET PCB                @Y02006P*/ 00279000
         BAL   @14,AMDPRPCB                                     02S0116 00280000
*  RESPECIFY PREG UNRESTRICTED;                            /*@Y02006P*/ 00281000
*  DO;                                                     /*@Y02006P*/ 00282000
*    IF PCBPREAL = YES THEN        /* VIRTUAL REQUEST        @Y02006P*/ 00283000
         LA    @09,PCBDATA                                      02S0119 00284000
         TM    PCBPREAL(@09),B'01000000'                        02S0119 00285000
         BNO   @RF00119                                         02S0119 00286000
*      PRNTREAL = REAL;            /* INDICATE VIRTUAL READS @Y02006P*/ 00287000
         OI    PRNTREAL(COMBASE),B'00000100'                    02S0120 00288000
*    ELSE                          /* REAL REQUEST           @Y02006P*/ 00289000
*      PRNTREAL = VIRTUAL;         /* INDICATE REAL READS    @Y02006P*/ 00290000
         B     @RC00119                                         02S0121 00291000
@RF00119 NI    PRNTREAL(COMBASE),B'11111011'                    02S0121 00292000
*  END;                                                    /*@Y02006P*/ 00293000
@RC00119 DS    0H                                               02S0123 00294000
*  IF PCBPASID^=LASTASID & PCBPTOPC=ON THEN  /* TOPICHDR FIELD IN       00295000
*                                     COMMON NEEDS TO BE UPDATED     */ 00296000
         LA    @09,PCBDATA                                      02S0123 00297000
         CLC   PCBPASID(2,@09),LASTASID                         02S0123 00298000
         BE    @RF00123                                         02S0123 00299000
         TM    PCBPTOPC(@09),B'00010000'                        02S0123 00300000
         BNO   @RF00123                                         02S0123 00301000
*    DO;                           /* SET UP HEADER          @Y02006P*/ 00302000
*      TOPICHDR(1:4) = 'ASID';                             /*@Y02006P*/ 00303000
         MVC   TOPICHDR(4,COMBASE),@CC00581                     02S0125 00304000
*      UNPK(ASIDPLC,INPASIDC);                             /*@Y02006P*/ 00305000
         UNPK  ASIDPLC(5,COMBASE),INPASIDC(3,@09)               02S0126 00306000
*      TR(ASIDPLC,EBCTABL);                                /*@Y02006P*/ 00307000
         TR    ASIDPLC(5,COMBASE),EBCTABL(COMBASE)              02S0127 00308000
*      ASIDPLC(LENGTH(ASIDPLC)) = ' ';                     /*@Y02006P*/ 00309000
         MVI   ASIDPLC+4(COMBASE),C' '                          02S0128 00310000
*      GEN(BRWRITE SKIP);          /* START THIS REQUEST ON NEW PAGE */ 00311000
         BRWRITE SKIP                                                   00312000
*    END;                                                  /*@Y02006P*/ 00313000
*  LASTASID = PCBPASID;            /* REMEMBER ASID          @Y02006P*/ 00314000
@RF00123 LA    @09,PCBDATA                                      02S0131 00315000
         MVC   LASTASID(2),PCBPASID(@09)                        02S0131 00316000
*END;                                                      /*@Y02006P*/ 00317000
*/*------------------------------------------------------------------*/ 00318000
*/* FORMSTOR OBTAINS THE DATA REQUESTED IN THE PCB FROM THE DUMP AND */ 00319000
*/* FORMATS THE PRINTED DUMP OUTPUT                          @Y02006P*/ 00320000
*/*------------------------------------------------------------------*/ 00321000
*DO;                                                       /*@Y02006P*/ 00322000
*  IF I3800204=ON THEN             /* IF CONDENSED DUMP REQUESTED    */ 00323000
         TM    I3800204(COMBASE),B'00000001'                    02S0134 00324000
         BNO   @RF00134                                         02S0134 00325000
*    DO;                                                   /*@Z40MI3F*/ 00326000
*      LINELGT=64;                 /* BYTES PER LINE OF DUMP @Z40MI3F*/ 00327000
         MVC   LINELGT(4),@CF00180                              02S0136 00328000
*      LINEMASK='FFFFFFC0'X;       /* 64-BYTE MASK           @Z40MI3F*/ 00329000
         MVC   LINEMASK(4),@CF00582                             02S0137 00330000
*    END;                                                  /*@Z40MI3F*/ 00331000
*    ELSE                          /* IF NOT A CONDENSED DUMP        */ 00332000
*    DO;                                                   /*@Z40MI3F*/ 00333000
         B     @RC00134                                         02S0139 00334000
@RF00134 DS    0H                                               02S0140 00335000
*      LINELGT=32;                 /* BYTES PER LINE OF DUMP @Z40MI3F*/ 00336000
         MVC   LINELGT(4),@CF00362                              02S0140 00337000
*      LINEMASK='FFFFFFE0'X;       /* 32-BYTE MASK           @Z40MI3F*/ 00338000
         MVC   LINEMASK(4),@CF00532                             02S0141 00339000
*    END;                                                  /*@Z40MI3F*/ 00340000
*  PREVREAD = GOOD;                /* TURNED OFF IF READ FAILS       */ 00341000
@RC00134 DS    0H                                               02S0144 00342000
*  FIRSTLIN = YES;                 /* INDICATES FIRST LINE OF OUTPUT */ 00343000
*  FRSTDUPE = YES;                 /* NO DUPE LINES FOUND YET        */ 00344000
         OI    FIRSTLIN,B'01100000'                             02S0145 00345000
         NI    PREVREAD,B'01111111'                             02S0145 00346000
*  CRNTLINE = PCBPBGN & LINEMASK;  /* ROUND TO 32 BYTE MULTIPLE      */ 00347000
         LA    @09,PCBDATA                                      02S0146 00348000
         L     @09,PCBPBGN(,@09)                                02S0146 00349000
         N     @09,LINEMASK                                     02S0146 00350000
         ST    @09,CRNTLINE                                     02S0146 00351000
*  RESPECIFY BLOCKADR RESTRICTED;                          /*@Y02006P*/ 00352000
*  BLOCKADR = CRNTLINE & BLOCKMSK; /* ROUND TO 4K BOUNDARY   @Y02006P*/ 00353000
*                                                               02S0148 00354000
         N     @09,BLOCKMSK                                     02S0148 00355000
         LR    BLOCKADR,@09                                     02S0148 00356000
*  DO BLOCKADR = BLOCKADR TO PCBPEND-1 BY BLOCKSIZ;        /*@Y02006P*/ 00357000
         B     @DE00149                                         02S0149 00358000
@DL00149 DS    0H                                               02S0150 00359000
*    SUBERRTN = ADDR(BLOCKRD);     /* BRREAD ERROR RTN FOR THIS READ */ 00360000
         LA    SUBERRTN,BLOCKRD                                 02S0150 00361000
*    RESPECIFY (R1,R9) RESTRICTED;                         /*@Y02006P*/ 00362000
*    R9 = PCBPASID;                                        /*@Y02006P*/ 00363000
         LA    @03,PCBDATA                                      02S0152 00364000
         SLR   R9,R9                                            02S0152 00365000
         ICM   R9,3,PCBPASID(@03)                               02S0152 00366000
*    GEN REFS(BLOCKADR,BRRDDATA) FLOWS(DPSREAD)                 02S0153 00367000
*         (BRREAD (BLOCKADR),DATA,ASID=(9));               /*@Y02006P*/ 00368000
         BRREAD (BLOCKADR),DATA,ASID=(9)                                00369000
*    BUFFADDR = R1;                /* ADDRESS RETURNED BY BRREAD     */ 00370000
         LR    BUFFADDR,R1                                      02S0154 00371000
*    RESPECIFY (R1,R9) UNRESTRICTED;                       /*@Y02006P*/ 00372000
*    IF PREVREAD = FAILED THEN     /* BRREAD(S) BEFORE THIS FAILED   */ 00373000
         TM    PREVREAD,B'10000000'                             02S0156 00374000
         BNO   @RF00156                                         02S0156 00375000
*      DO;                                                 /*@Y02006P*/ 00376000
*        HEXDATA1 = BLOCKADR;      /* ADDRESS OF SUCCESSFUL READ     */ 00377000
         ST    BLOCKADR,HEXDATA1                                02S0158 00378000
*        CALL UNAVAIL;             /* DESCRIBE MISSING RECORDS       */ 00379000
         BAL   @14,UNAVAIL                                      02S0159 00380000
*        CRNTLINE = BLOCKADR;      /* SKIP OVER MISSING RECORDS      */ 00381000
         ST    BLOCKADR,CRNTLINE                                02S0160 00382000
*      END;                                                /*@Y02006P*/ 00383000
*    IF PCBPVIRT=YES & REALMAP^=0 THEN /* GET REAL ADDR OF BLOCK     */ 00384000
@RF00156 LA    @09,PCBDATA                                      02S0162 00385000
         TM    PCBPVIRT(@09),B'10000000'                        02S0162 00386000
         BNO   @RF00162                                         02S0162 00387000
         SLR   @09,@09                                          02S0162 00388000
         C     @09,REALMAP(,COMBASE)                            02S0162 00389000
         BE    @RF00162                                         02S0162 00390000
*/*------------------------------------------------------------------*/ 00391000
*/* REALADDR FOR A VIRTUAL REQUEST WITH REAL INPUT PRINTS OUT THE    */ 00392000
*/*  REAL ADDRESS OF THE FOUR K BLOCK                        @Y02006P*/ 00393000
*/*------------------------------------------------------------------*/ 00394000
*DO;                                                       /*@Y02006P*/ 00395000
*  IF BUFASID=0 THEN               /* REAL INPUT & VIRTUAL REQUEST   */ 00396000
         LR    @07,BUFFADDR                                     03S0164 00397000
         SH    @07,@CH00064                                     03S0164 00398000
         SLR   @05,@05                                          03S0164 00399000
         ICM   @05,3,BUFASID(@07)                               03S0164 00400000
         CR    @09,@05                                          03S0164 00401000
         BNE   @RF00164                                         03S0164 00402000
*    DO;                                                   /*@Y02006P*/ 00403000
*      REALADW = REALAD +(CRNTLINE & OFFSTMSK); /*ADDR OF PRESNT LINE*/ 00404000
         L     @09,CRNTLINE                                     03S0166 00405000
         N     @09,OFFSTMSK                                     03S0166 00406000
         AL    @09,REALAD(,@07)                                 03S0166 00407000
         ST    @09,REALADW                                      03S0166 00408000
*      MESSAGE(8:34) = RELADMSG;   /* REAL ADDR MSG TEXT     @Y02006P*/ 00409000
         MVC   MESSAGE+7(27,OUTBUFAD),RELADMSG                  03S0167 00410000
*      UNPK(MESSAGE(25:31),ADDR1(2:5)); /* VIRTUAL ADDRESS   @Y02006P*/ 00411000
         UNPK  MESSAGE+24(7,OUTBUFAD),ADDR1+1(4)                03S0168 00412000
*      MESSAGE(31) = BLANK;                                /*@Y02006P*/ 00413000
         MVI   MESSAGE+30(OUTBUFAD),C' '                        03S0169 00414000
*      TR(MESSAGE(25:30),EBCTABL);                         /*@Y02006P*/ 00415000
*                                                               03S0170 00416000
         TR    MESSAGE+24(6,OUTBUFAD),EBCTABL(COMBASE)          03S0170 00417000
*      UNPK(MESSAGE(35:41),RECADDR1); /* REAL ADDRESS OF BLOCK       */ 00418000
         UNPK  MESSAGE+34(7,OUTBUFAD),RECADDR1(4)               03S0171 00419000
*      MESSAGE(41) = BLANK;                                /*@Y02006P*/ 00420000
         MVI   MESSAGE+40(OUTBUFAD),C' '                        03S0172 00421000
*      TR(MESSAGE(35:40),EBCTABL); /* TRANSLATE TO PRINTABLE @Y02006P*/ 00422000
         TR    MESSAGE+34(6,OUTBUFAD),EBCTABL(COMBASE)          03S0173 00423000
*      CALL WRITERTN(1);           /* ISSUE OUTPUT COMMENT   @Y02006P*/ 00424000
         LA    @01,@AL00174                                     03S0174 00425000
         BAL   @14,WRITERTN                                     03S0174 00426000
*    END;                                                  /*@Y02006P*/ 00427000
*  ELSE ;                                                  /*@Y02006P*/ 00428000
@RF00164 DS    0H                                               03S0177 00429000
*END;                                                      /*@Y02006P*/ 00430000
*    IF BLOCKADR+BLOCKSIZ < PCBPEND THEN                        02S0178 00431000
@RF00162 LR    @09,BLOCKADR                                     02S0178 00432000
         AH    @09,@CH00360                                     02S0178 00433000
         LA    @07,PCBDATA                                      02S0178 00434000
         C     @09,PCBPEND(,@07)                                02S0178 00435000
         BNL   @RF00178                                         02S0178 00436000
*      BUFFEND = BLOCKADR + BLOCKSIZ; /* PRINT ENTIRE 4K     @Y02006P*/ 00437000
         LR    BUFFEND,@09                                      02S0179 00438000
*    ELSE                                                       02S0180 00439000
*      BUFFEND = PCBPEND;          /* PRINT TO END OF REQUEST        */ 00440000
*                                                               02S0180 00441000
         B     @RC00178                                         02S0180 00442000
@RF00178 LA    @09,PCBDATA                                      02S0180 00443000
         L     BUFFEND,PCBPEND(,@09)                            02S0180 00444000
*    DO CRNTLINE = CRNTLINE TO BUFFEND-1 BY LINELGT;       /*@Y02006P*/ 00445000
@RC00178 L     @09,CRNTLINE                                     02S0181 00446000
         B     @DE00181                                         02S0181 00447000
@DL00181 DS    0H                                               02S0182 00448000
*      CRNTOFF = CRNTLINE & OFFSTMSK; /* OFFSET INTO BUFFER  @Y02006P*/ 00449000
         N     @09,OFFSTMSK                                     02S0182 00450000
         ST    @09,CRNTOFF                                      02S0182 00451000
*/*------------------------------------------------------------------*/ 00452000
*/* KEYPRINT PRINTS THE STORAGE KEY FOR A 2K BLOCK IF IT IS DIFFERENT*/ 00453000
*/*  FROM THAT OF THE PREVIOUS 2K BLOCK                      @Y02006P*/ 00454000
*/*------------------------------------------------------------------*/ 00455000
*DO;                                                       /*@Y02006P*/ 00456000
*  IF WORK1(1:1) = PROTNRQ THEN     /* PAGE NOT RECLAIMED    @YM08224*/ 00457000
         SLR   @09,@09                                          03S0184 00458000
         IC    @09,WORK1(,COMBASE)                              03S0184 00459000
         SLR   @07,@07                                          03S0184 00460000
         IC    @07,PROTNRQ                                      03S0184 00461000
         CR    @09,@07                                          03S0184 00462000
         BE    @RT00184                                         03S0184 00463000
*    GO TO NRCLMD;                                         /*@YM08224*/ 00464000
*  IF WORK1(1:1) = PROTKF THEN      /* GET PROTECT KEY FROM XPTE     */ 00465000
         SLR   @07,@07                                          03S0186 00466000
         IC    @07,PROTKF                                       03S0186 00467000
         CR    @09,@07                                          03S0186 00468000
         BNE   @RF00186                                         03S0186 00469000
*    DO;                                                   /*@YM08224*/ 00470000
*      THISKEY = WORK1(2:2);        /* STOR PROT KEY FROM XPTE       */ 00471000
         MVC   THISKEY(1),WORK1+1(COMBASE)                      03S0188 00472000
*      GO TO PGERCLMD;              /* BYPASS SADMP HDR      @YM08224*/ 00473000
         B     PGERCLMD                                         03S0189 00474000
*    END;                                                  /*@YM08224*/ 00475000
*NRCLMD:                                                        03S0191 00476000
*  IF CRNTOFF<HALFBLCK THEN        /* FIRST HALF OF 4K BLOCK @Y02006P*/ 00477000
@RF00186 DS    0H                                               03S0191 00478000
NRCLMD   L     @09,CRNTOFF                                      03S0191 00479000
         CH    @09,@CH00364                                     03S0191 00480000
         BNL   @RF00191                                         03S0191 00481000
*    THISKEY = KEY1;                                       /*@Y02006P*/ 00482000
         LR    @09,BUFFADDR                                     03S0192 00483000
         AL    @09,@CF00647                                     03S0192 00484000
         MVC   THISKEY(1),KEY1(@09)                             03S0192 00485000
*  ELSE                            /* SECOND HALF OF 4K BLOCK        */ 00486000
*    THISKEY = KEY2;                                       /*@Y02006P*/ 00487000
         B     @RC00191                                         03S0193 00488000
@RF00191 LR    @09,BUFFADDR                                     03S0193 00489000
         AL    @09,@CF00648                                     03S0193 00490000
         MVC   THISKEY(1),KEY2-1(@09)                           03S0193 00491000
*PGERCLMD:                                                      03S0194 00492000
*  IF THISKEY ^= LASTKEY | FIRSTLIN=YES |                       03S0194 00493000
*                          (I3800204=ON & CRNTLINE=BLOCKADR) THEN       00494000
@RC00191 DS    0H                                               03S0194 00495000
PGERCLMD CLC   THISKEY(1),LASTKEY                               03S0194 00496000
         BNE   @RT00194                                         03S0194 00497000
         TM    FIRSTLIN,B'00100000'                             03S0194 00498000
         BO    @RT00194                                         03S0194 00499000
         TM    I3800204(COMBASE),B'00000001'                    03S0194 00500000
         BNO   @RF00194                                         03S0194 00501000
         C     BLOCKADR,CRNTLINE                                03S0194 00502000
         BNE   @RF00194                                         03S0194 00503000
@RT00194 DS    0H                                               03S0195 00504000
*                                  /* FIRST LINE OF PCB OR KEY HAS      00505000
*                                     CHANGED OR IS FIRST LINE OF BLOCK 00506000
*                                     IN A CONDENSED DUMP   @Z40MI3F */ 00507000
*    DO;                                                   /*@Y02006P*/ 00508000
*      UNPK(DATAPART(51:57),ADDR1(2:5)); /* ADDR OF NEXT LINE        */ 00509000
         UNPK  DATAPART+50(7,OUTBUFAD),ADDR1+1(4)               03S0196 00510000
*      MESSAGE(8:49) = STORKMSG;   /* STORAGE KEY MSG TEXT   @Y02006P*/ 00511000
         MVC   MESSAGE+7(42,OUTBUFAD),STORKMSG                  03S0197 00512000
*      MESSAGE(57) = BLANK;                                /*@Y02006P*/ 00513000
         MVI   MESSAGE+56(OUTBUFAD),C' '                        03S0198 00514000
*      TR(DATAPART(51:56),EBCTABL);                        /*@Y02006P*/ 00515000
         TR    DATAPART+50(6,OUTBUFAD),EBCTABL(COMBASE)         03S0199 00516000
*      UNPK(MESSAGE(23:25),THISKEY1); /* STORAGE KEY         @Y02006P*/ 00517000
         UNPK  MESSAGE+22(3,OUTBUFAD),THISKEY1(2)               03S0200 00518000
*      MESSAGE(25) = BLANK;                                /*@Y02006P*/ 00519000
         MVI   MESSAGE+24(OUTBUFAD),C' '                        03S0201 00520000
*      TR(MESSAGE(23:24),EBCTABL);                         /*@Y02006P*/ 00521000
         TR    MESSAGE+22(2,OUTBUFAD),EBCTABL(COMBASE)          03S0202 00522000
*      TITLESTK=MESSAGE(23:24);    /* KEY VALUE IN KEY MSG  @Z40MI3F */ 00523000
         MVC   TITLESTK(2,COMBASE),MESSAGE+22(OUTBUFAD)         03S0203 00524000
*      IF WORK1(1:1) = PROTKF THEN  /* INDICATE RECLAIMABLE PAGE     */ 00525000
         CLC   WORK1(1,COMBASE),PROTKF                          03S0204 00526000
         BNE   @RF00204                                         03S0204 00527000
*        MESSAGE(59:74) = RECLMPGE;                        /*@YM08224*/ 00528000
         MVC   MESSAGE+58(16,OUTBUFAD),RECLMPGE                 03S0205 00529000
*      CALL WRITERTN(1);                                   /*@Y02006P*/ 00530000
@RF00204 LA    @01,@AL00206                                     03S0206 00531000
         BAL   @14,WRITERTN                                     03S0206 00532000
*      LASTKEY = THISKEY;          /* REMEMBER THIS KEY      @Y02006P*/ 00533000
         MVC   LASTKEY(1),THISKEY                               03S0207 00534000
*    END;                                                  /*@Y02006P*/ 00535000
*  ELSE ;                          /* KEY HASN'T CHANGED  DON'T PRINT*/ 00536000
@RF00194 DS    0H                                               03S0210 00537000
*END;                                                      /*@Y02006P*/ 00538000
*      IF  FIRSTLIN = NO           /* NOT THE FIRST LINE     @Y02006P*/ 00539000
*           & PREVREAD=GOOD        /* BLOCKS WERE NOT SKIPPED        */ 00540000
*           & PRESLINE(1:LINELGT)=LASTLINE(1:LINELGT) THEN /*@Z40MI3F*/ 00541000
         TM    FIRSTLIN,B'10100000'                             02S0211 00542000
         BNZ   @RF00211                                         02S0211 00543000
         LR    @09,BUFFADDR                                     02S0211 00544000
         AL    @09,CRNTOFF                                      02S0211 00545000
         L     @07,LINELGT                                      02S0211 00546000
         LR    @05,@07                                          02S0211 00547000
         BCTR  @05,0                                            02S0211 00548000
         EX    @05,@SC00649                                     02S0211 00549000
         BNE   @RF00211                                         02S0211 00550000
*        DO;                                               /*@Y02006P*/ 00551000
*          IF CRNTLINE + LINELGT ^< PCBPEND THEN /* LAST LINE OF PCB */ 00552000
         AL    @07,CRNTLINE                                     02S0213 00553000
         LA    @09,PCBDATA                                      02S0213 00554000
         C     @07,PCBPEND(,@09)                                02S0213 00555000
         BL    @RF00213                                         02S0213 00556000
*            CALL LFORMAT;         /* PRINT LINE ANYWAY      @Y02006P*/ 00557000
         BAL   @14,LFORMAT                                      02S0214 00558000
*          ELSE                    /* NOT LAST LINE OF PCB   @Y02006P*/ 00559000
*            IF FRSTDUPE = YES THEN /* FIRST CONSECUTIVE DUPLICATE   */ 00560000
         B     @RC00213                                         02S0215 00561000
@RF00213 TM    FRSTDUPE,B'01000000'                             02S0215 00562000
         BNO   @RF00215                                         02S0215 00563000
*              DO;                                         /*@Y02006P*/ 00564000
*/*------------------------------------------------------------------*/ 00565000
*/* DUPEPRNT ISSUES AN OUTPUT COMMENT DESCRIBING DUPLICATE LINES     */ 00566000
*/*------------------------------------------------------------------*/ 00567000
*DO;                                                       /*@Y02006P*/ 00568000
*  UNPK(DATAPART(1:7),ADDR1(2:5)); /* ADDRESS OF DUPLICATE LINE      */ 00569000
         UNPK  DATAPART(7,OUTBUFAD),ADDR1+1(4)                  03S0218 00570000
*  DATAPART(7) = BLANK;                                    /*@Y02006P*/ 00571000
         MVI   DATAPART+6(OUTBUFAD),C' '                        03S0219 00572000
*  TR(ADDRESS,EBCTABL);            /* TRANSLATE TO PRINTABLE @Y02006P*/ 00573000
         TR    ADDRESS(6,OUTBUFAD),EBCTABL(COMBASE)             03S0220 00574000
*  MESSAGE(8:41) = DUPEMSG;        /* DUPLICATE MESSAGE TEXT @Y02006P*/ 00575000
         MVC   MESSAGE+7(34,OUTBUFAD),DUPEMSG                   03S0221 00576000
*  CALL WRITERTN(1);               /* PRINT MESSAGE - NO SKIP        */ 00577000
         LA    @01,@AL00222                                     03S0222 00578000
         BAL   @14,WRITERTN                                     03S0222 00579000
*END;                                                      /*@Y02006P*/ 00580000
*                FRSTDUPE = NO;    /* INDICATE PREVIOUS LINE WAS DUPE*/ 00581000
         NI    FRSTDUPE,B'10111111'                             02S0224 00582000
*              END;                                        /*@Y02006P*/ 00583000
*            ELSE ;                /* IS SECONDARY DUPLICATE - IGNORE*/ 00584000
@RF00215 DS    0H                                               02S0227 00585000
*        END;                                              /*@Y02006P*/ 00586000
*      ELSE                        /* LINE IS NOT A DUPLICATE        */ 00587000
*        DO;                                               /*@Y02006P*/ 00588000
         B     @RC00211                                         02S0228 00589000
@RF00211 DS    0H                                               02S0229 00590000
*          LASTLINE(1:LINELGT)=PRESLINE(1:LINELGT); /*SAVE   @Z40MI3F*/ 00591000
         L     @09,LINELGT                                      02S0229 00592000
         BCTR  @09,0                                            02S0229 00593000
         LR    @07,BUFFADDR                                     02S0229 00594000
         AL    @07,CRNTOFF                                      02S0229 00595000
         EX    @09,@SM00652                                     02S0229 00596000
*          FRSTDUPE = YES;         /* INDICATE THIS LINE NOT DUPE    */ 00597000
         OI    FRSTDUPE,B'01000000'                             02S0230 00598000
*          CALL LFORMAT;           /* FORMAT LINE OF OUTPUT  @Y02006P*/ 00599000
         BAL   @14,LFORMAT                                      02S0231 00600000
*        END;                                              /*@Y02006P*/ 00601000
*      FIRSTLIN = NO;              /* FIRST LINE HAS BEEN PROCESSED  */ 00602000
@RC00211 DS    0H                                               02S0234 00603000
*      PREVREAD = GOOD;                                    /*@Y02006P*/ 00604000
         NI    FIRSTLIN,B'01011111'                             02S0234 00605000
*    END;                          /* END OF CRNTLINE LOOP   @Y02006P*/ 00606000
         L     @09,CRNTLINE                                     02S0235 00607000
         AL    @09,LINELGT                                      02S0235 00608000
         ST    @09,CRNTLINE                                     02S0235 00609000
@DE00181 LR    @07,BUFFEND                                      02S0235 00610000
         BCTR  @07,0                                            02S0235 00611000
         CR    @09,@07                                          02S0235 00612000
         BNH   @DL00181                                         02S0235 00613000
*BLOCKEND:                         /* BRREAD RTN RETURNS HERE        */ 00614000
*  END;                            /* END OF BLOCKADR LOOP   @Y02006P*/ 00615000
BLOCKEND AH    BLOCKADR,@CH00360                                02S0236 00616000
@DE00149 LA    @09,PCBDATA                                      02S0236 00617000
         L     @09,PCBPEND(,@09)                                02S0236 00618000
         BCTR  @09,0                                            02S0236 00619000
         CR    BLOCKADR,@09                                     02S0236 00620000
         BNH   @DL00149                                         02S0236 00621000
*  RESPECIFY BLOCKADR UNRESTRICTED;                        /*@Y02006P*/ 00622000
*  IF PREVREAD = FAILED THEN       /* SOME RECORDS ARE MISSING       */ 00623000
         TM    PREVREAD,B'10000000'                             02S0238 00624000
         BNO   @RF00238                                         02S0238 00625000
*    DO;                                                   /*@Y02006P*/ 00626000
*      HEXDATA1 = PCBPEND;                                 /*@Y02006P*/ 00627000
         LA    @09,PCBDATA                                      02S0240 00628000
         MVC   HEXDATA1(4),PCBPEND(@09)                         02S0240 00629000
*      CALL UNAVAIL;               /* DESCRIBE MISSING RECORDS       */ 00630000
         BAL   @14,UNAVAIL                                      02S0241 00631000
*    END;                                                  /*@Y02006P*/ 00632000
*END;                                                      /*@Y02006P*/ 00633000
@RF00238 DS    0H                                               02S0244 00634000
*        IF PCBPTR^=0 THEN         /* THERE IS MORE TO BE PRINTED    */ 00635000
         ICM   @09,15,PCBPTR(COMBASE)                           01S0244 00636000
         BZ    @RF00244                                         01S0244 00637000
*          CALL WRITERTN(2);       /* SKIP 2 LINES AFTER EVERY PCB   */ 00638000
         LA    @01,@AL00245                                     01S0245 00639000
         BAL   @14,WRITERTN                                     01S0245 00640000
*      END;                                                /*@Y02006P*/ 00641000
@RF00244 DS    0H                                               01S0246 00642000
@DE00110 ICM   @09,15,PCBPTR(COMBASE)                           01S0246 00643000
         BNZ   @DL00110                                         01S0246 00644000
*    END;                                                  /*@Y02006P*/ 00645000
*  I3800KEY=OFF;                   /* STORAGE KEY MSG FOR   @Z40MI3F */ 00646000
@RF00042 NI    I3800KEY(COMBASE),B'11110111'                    01S0248 00647000
*                                  /* STORAGE DUMP ONLY     @Z40MI3F */ 00648000
*  TITLESTK='  ';                  /* RESET KEY VALUE       @Z40MI3F */ 00649000
         MVC   TITLESTK(2,COMBASE),@CC00600                     01S0249 00650000
*  ERRADDR = LSTERRTN;             /* RESTORE PREVIOUS READ ERR RTN  */ 00651000
         ST    LSTERRTN,ERRADDR(,COMBASE)                       01S0250 00652000
*  STOPEXIT = LSTSTOP;             /* RESTORE PREVIOUS STOP RTN      */ 00653000
         ST    LSTSTOP,STOPEXIT(,COMBASE)                       01S0251 00654000
*  PRNTREAL = VIRTUAL;             /* RESET PRNTREAL SWITCH  @Y02006P*/ 00655000
         NI    PRNTREAL(COMBASE),B'11111011'                    01S0252 00656000
*  RETURN;                                                 /*@Y02006P*/ 00657000
         B     @EL00001                                         01S0253 00658000
*PCBRTN: ENTRY;                                            /*@Y02006P*/ 00659000
@EP00254 DS    0H                                               01S0255 00660000
*  CALL AMDPRPCB;                                          /*@Y02006P*/ 00661000
         BAL   @14,AMDPRPCB                                     01S0255 00662000
*  RETURN CODE(RETCODE);                                   /*@Y02006P*/ 00663000
         L     @15,RETCODE                                      01S0256 00664000
         L     @13,4(,@13)                                      01S0256 00665000
         L     @14,12(,@13)                                     01S0256 00666000
         LM    @00,@12,20(@13)                                  01S0256 00667000
         BR    @14                                              01S0256 00668000
*/*------------------------------------------------------------------*/ 00669000
*/* DPSREAD IS THE BRREAD ERROR ROUTINE. IT GETS CONTROL     @Y02006P*/ 00670000
*/*     ASYNCHRONOUSLY FROM RDC WHEN AN I/O ERROR OCCURS OR IF THE   */ 00671000
*/*     DATA IS NOT IN THE DUMP                              @Y02006P*/ 00672000
*/*------------------------------------------------------------------*/ 00673000
*DPSREAD:                                                       02S0257 00674000
*  GEN REFS(DPSSAVEA);                                     /*@Y02006P*/ 00675000
DPSREAD  DS    0H                                               02S0257 00676000
         USING *,R15               SET UP ADDRESSABILITY       @Y02006P 00677000
         L     R13,DPSSAVEA                                    @Y02006P 00678000
         LM    R14,R12,12(R13)                                 @Y02006P 00679000
         DROP R15                                              @Y02006P 00680000
*  GO TO ERRORRTN;                 /* GO TO APPRORIATE ERROR RTN     */ 00681000
*                                                               02S0258 00682000
         BR    SUBERRTN                                         02S0258 00683000
*  /*----------------------------------------------------------------*/ 00684000
*  /* BRREAD ERROR ROUTINE FOR REGISTER READS                @Y02006P*/ 00685000
*  /*----------------------------------------------------------------*/ 00686000
*REGREAD:                                                       02S0259 00687000
*  MESSAGE(1:LENGTH(NOREGMSG)) = NOREGMSG; /* MSG TEXT FOR MISSING      00688000
*                                             REGS           @Y02006P*/ 00689000
REGREAD  MVC   MESSAGE(30,OUTBUFAD),NOREGMSG                    02S0259 00690000
*  CALL WRITERTN(3);               /* PRINT MESSAGE AND SKIP 2 LINES */ 00691000
         LA    @01,@AL00260                                     02S0260 00692000
         BAL   @14,WRITERTN                                     02S0260 00693000
*  GO TO REGEND;                   /* RETURN TO MAINLINE     @Y02006P*/ 00694000
*                                                               02S0261 00695000
         B     REGEND                                           02S0261 00696000
*  /*----------------------------------------------------------------*/ 00697000
*  /* BRREAD ERROR ROUTINE FOR STORAGE READS                 @Y02006P*/ 00698000
*  /*----------------------------------------------------------------*/ 00699000
*BLOCKRD:                                                       02S0262 00700000
*  PREVREAD = FAILED;              /* INDICATE READ FAILLED  @Y02006P*/ 00701000
BLOCKRD  OI    PREVREAD,B'10000000'                             02S0262 00702000
*  IF IOERR = YES THEN             /* I/O ERR ON FIRST FAILURE       */ 00703000
         TM    IOERR(COMBASE),B'10000000'                       02S0263 00704000
         BNO   @RF00263                                         02S0263 00705000
*    DO;                                                   /*@Y02006P*/ 00706000
*      MESSAGE(8:30) = IOERRMSG;   /* I/O ERROR MESSAGE TEXT @Y02006P*/ 00707000
         MVC   MESSAGE+7(23,OUTBUFAD),IOERRMSG                  02S0265 00708000
*      UNPK(MESSAGE(33:39),ADDR1(2:5)); /* ADDR OF FAILING READ      */ 00709000
         UNPK  MESSAGE+32(7,OUTBUFAD),ADDR1+1(4)                02S0266 00710000
*      MESSAGE(39) = BLANK;                                /*@Y02006P*/ 00711000
         MVI   MESSAGE+38(OUTBUFAD),C' '                        02S0267 00712000
*      TR(MESSAGE(33:38),EBCTABL); /* TRANSLATE TO PRINTABLE @Y02006P*/ 00713000
         TR    MESSAGE+32(6,OUTBUFAD),EBCTABL(COMBASE)          02S0268 00714000
*      CALL WRITERTN(1);           /* PRINT MESSAGE AND NO SKIP      */ 00715000
         LA    @01,@AL00269                                     02S0269 00716000
         BAL   @14,WRITERTN                                     02S0269 00717000
*    END;                                                  /*@Y02006P*/ 00718000
*  GO TO BLOCKEND;                 /* END OF FORMSTOR OUTER LOOP     */ 00719000
         B     BLOCKEND                                         02S0271 00720000
*/*------------------------------------------------------------------*/ 00721000
*/* DPSSTOP IS ENTERED ASYNCHRONOUSLY AFTER A BRWRITE IF THE OPERATOR*/ 00722000
*/*  REQUESTED THAT PRDMP STOP PROCESSING                    @Y02006P*/ 00723000
*/*------------------------------------------------------------------*/ 00724000
*DPSSTOP:                                                       02S0272 00725000
*  GEN REFS(DPSSAVEA);                                     /*@Y02006P*/ 00726000
DPSSTOP  DS    0H                                               02S0272 00727000
         USING *,R15               SET UP ADDRESSABILITY       @Y02006P 00728000
         L     R13,DPSSAVEA                                    @Y02006P 00729000
         LM    R14,R12,12(R13)                                 @Y02006P 00730000
         DROP R15                                              @Y02006P 00731000
*  DO WHILE PCBPTR ^= 0;           /* PURGE THE PCB QUEUE    @Y02006P*/ 00732000
         B     @DE00273                                         02S0273 00733000
@DL00273 DS    0H                                               02S0274 00734000
*    RESPECIFY PREG RESTRICTED;                            /*@Y02006P*/ 00735000
*    PREG = ADDR(PCBDATA);         /* PARAMETER LIST         @Y02006P*/ 00736000
         LA    @09,PCBDATA                                      02S0275 00737000
         LR    PREG,@09                                         02S0275 00738000
*    PCBPFUNC = PCBPDEQ;           /* REQUEST DEQUEUE FUNCTION       */ 00739000
         OI    PCBPFUNC(@09),B'10000000'                        02S0276 00740000
*    CALL AMDPRPCB;                /* DEQUEUE A PCB          @Y02006P*/ 00741000
         BAL   @14,AMDPRPCB                                     02S0277 00742000
*    RESPECIFY PREG UNRESTRICTED;                          /*@Y02006P*/ 00743000
*  END;                                                    /*@Y02006P*/ 00744000
@DE00273 ICM   @09,15,PCBPTR(COMBASE)                           02S0279 00745000
         BNZ   @DL00273                                         02S0279 00746000
*  ERRADDR = LSTERRTN;             /* RESTORE PREVIOUS READ RTN      */ 00747000
         ST    LSTERRTN,ERRADDR(,COMBASE)                       02S0280 00748000
*  STOPEXIT = LSTSTOP;             /* RESTORE PREVIOUS STOP EXIT     */ 00749000
         ST    LSTSTOP,STOPEXIT(,COMBASE)                       02S0281 00750000
*  RESPECIFY R15 RESTRICTED;                               /*@Y02006P*/ 00751000
*  R15 = LSTSTOP;                                          /*@Y02006P*/ 00752000
         LR    R15,LSTSTOP                                      02S0283 00753000
*  GO TO R15;                      /* PERCOLATE TO NEXT STOP EXIT    */ 00754000
         BR    R15                                              02S0284 00755000
*  RESPECIFY R15 UNRESTRICTED;                             /*@Y02006P*/ 00756000
*/*------------------------------------------------------------------*/ 00757000
*/* LFORMAT FORMATS ONE LINE OF DUMP OUTPUT                  @Y02006P*/ 00758000
*/*------------------------------------------------------------------*/ 00759000
*LFORMAT: PROCEDURE;                                       /*@Y02006P*/ 00760000
LFORMAT  STM   @14,@12,@SA00002                                 03S0286 00761000
*  IF PCBPLOWC = ON THEN           /* GCD REQUEST OF 0 TO 4K @Y02006P*/ 00762000
         LA    @09,PCBDATA                                      03S0287 00763000
         TM    PCBPLOWC(@09),B'00100000'                        03S0287 00764000
         BNO   @RF00287                                         03S0287 00765000
*    UNPK(DATAPART(1:7),ADDR2(2:5)); /* CONVERT ADDR TO PRINTABLE HEX*/ 00766000
         UNPK  DATAPART(7,OUTBUFAD),ADDR2+1(4)                  03S0288 00767000
*  ELSE                            /* NORMAL REQUEST         @Y02006P*/ 00768000
*    UNPK(DATAPART(1:7),ADDR1(2:5)); /* CONVERT ADDR TO PRINTABLE HEX*/ 00769000
         B     @RC00287                                         03S0289 00770000
@RF00287 UNPK  DATAPART(7,OUTBUFAD),ADDR1+1(4)                  03S0289 00771000
*  DATAPART(7) = BLANK;                                    /*@Y02006P*/ 00772000
@RC00287 MVI   DATAPART+6(OUTBUFAD),C' '                        03S0290 00773000
*  TR(ADDRESS,EBCTABL);            /* TRANSLATE ADDRESS      @Y02006P*/ 00774000
         TR    ADDRESS(6,OUTBUFAD),EBCTABL(COMBASE)             03S0291 00775000
*  IF I3800204=ON THEN             /* IF CONDENSED DUMP REQUESTED    */ 00776000
         TM    I3800204(COMBASE),B'00000001'                    03S0292 00777000
         BNO   @RF00292                                         03S0292 00778000
*    DO;                           /* FORMAT LINE DIFFERENTLY        */ 00779000
*      AREAPTR=ADDR(AFIELD1);      /* FIRST FIELD OF PRINTABLE HEX   */ 00780000
         LA    AREAPTR,AFIELD1(,OUTBUFAD)                       03S0294 00781000
*      FROMPTR=ADDR(PRESLINE);     /* CURRENT STORAGE TO BE DUMPED   */ 00782000
         LR    FROMPTR,BUFFADDR                                 03S0295 00783000
         AL    FROMPTR,CRNTOFF                                  03S0295 00784000
*      DO HALF = 1 TO 4;           /* FOUR FIELDS OF FOUR WORDS      */ 00785000
         LA    HALF,1                                           03S0296 00786000
@DL00296 DS    0H                                               03S0297 00787000
*        DO WORD = 1 TO 4;         /* TRANSLATE TO PRINTABLE HEX     */ 00788000
         LA    WORD,1                                           03S0297 00789000
@DL00297 DS    0H                                               03S0298 00790000
*           UNPK(TOAREA,FROM);     /* ONE WORD TO ZONED FORMAT       */ 00791000
         UNPK  TOAREA(9,AREAPTR),FROM(5,FROMPTR)                03S0298 00792000
*           TR(TOAREA(1:8),EBCTABL); /* TRANSLATE TO PRINTABLE HEX   */ 00793000
         TR    TOAREA(8,AREAPTR),EBCTABL(COMBASE)               03S0299 00794000
*           TOAREA(1)=TOAREA(1)&'3F'X;       /* UNDERLINE 1ST NIBBLE */ 00795000
         NI    TOAREA(AREAPTR),X'3F'                            03S0300 00796000
*           AREAPTR=AREAPTR+8;     /* ADVANCE 8 BUFFER POSITIONS     */ 00797000
         AH    AREAPTR,@CH00064                                 03S0301 00798000
*           FROMPTR=FROMPTR+4;     /* ADVANCE 4 STORAGE BYTES        */ 00799000
         AH    FROMPTR,@CH00047                                 03S0302 00800000
*        END;                      /* ONE WORD  FORMATTED    @Z40MI3F*/ 00801000
         AH    WORD,@CH00041                                    03S0303 00802000
         CH    WORD,@CH00047                                    03S0303 00803000
         BNH   @DL00297                                         03S0303 00804000
*        TOAREA(1)=BLANK;          /* BLANK BETWEEN FIELDS   @Z40MI3F*/ 00805000
         MVI   TOAREA(AREAPTR),C' '                             03S0304 00806000
*        AREAPTR=AREAPTR+1;        /* ADVANCE PASSED BLANK   @Z40MI3F*/ 00807000
         AH    AREAPTR,@CH00041                                 03S0305 00808000
*      END;                        /* ONE FIELD FORMATTED    @Z40MI3F*/ 00809000
*                                                               03S0306 00810000
         AH    HALF,@CH00041                                    03S0306 00811000
         CH    HALF,@CH00047                                    03S0306 00812000
         BNH   @DL00296                                         03S0306 00813000
*      AEBCDIC(1:32)=PRESLINE(1:32); /* 1ST 32 BYTES IN EBCDIC BUFFR */ 00814000
         LR    @09,BUFFADDR                                     03S0307 00815000
         AL    @09,CRNTOFF                                      03S0307 00816000
         MVC   AEBCDIC(32,OUTBUFAD),PRESLINE(@09)               03S0307 00817000
*      AEBCDIC(33)=BLANK;          /* BLANK SEPARATOR COLUMN @Z40MI3F*/ 00818000
         MVI   AEBCDIC+32(OUTBUFAD),C' '                        03S0308 00819000
*      AEBCDIC(34:65)=PRESLINE(33:64); /* LAST 32 BYTES IN BUFFER    */ 00820000
         MVC   AEBCDIC+33(32,OUTBUFAD),PRESLINE+32(@09)         03S0309 00821000
*      TR(AEBCDIC,TABLE);          /* ELIMINATE UNPRINTABLES @Z40MI3F*/ 00822000
         TR    AEBCDIC(65,OUTBUFAD),TABLE(COMBASE)              03S0310 00823000
*    END;                          /* END CONDENSED DUMP SPECIAL ACTS*/ 00824000
*    ELSE                          /* NOT CONDENSED DUMP,DO FOLLOWING*/ 00825000
*    DO;                                                   /*@Z40MI3F*/ 00826000
         B     @RC00292                                         03S0312 00827000
@RF00292 DS    0H                                               03S0313 00828000
*  UNPK(STOKEY1,THISKEY1);         /* STORAGE KEY            @Y02006P*/ 00829000
         UNPK  STOKEY1(3,OUTBUFAD),THISKEY1(2)                  03S0313 00830000
*  STOKEY1(3) = BLANK;                                     /*@Y02006P*/ 00831000
         MVI   STOKEY1+2(OUTBUFAD),C' '                         03S0314 00832000
*  TR(STOKEY,EBCTABL);             /* TRANSLATE STORAGE KEY  @Y02006P*/ 00833000
         TR    STOKEY(2,OUTBUFAD),EBCTABL(COMBASE)              03S0315 00834000
*  AREAPTR = ADDR(FIELD1);         /* BUFFER LOCATION        @Y02006P*/ 00835000
         LA    AREAPTR,FIELD1(,OUTBUFAD)                        03S0316 00836000
*  FROMPTR = ADDR(DATAHLF1);       /* ADDR OF DATA LINE      @Y02006P*/ 00837000
         LR    FROMPTR,BUFFADDR                                 03S0317 00838000
         AL    FROMPTR,CRNTOFF                                  03S0317 00839000
*  DO HALF = 1 TO 2;               /* CONVERT STORAGE TO PRNTABLE HEX*/ 00840000
         LA    HALF,1                                           03S0318 00841000
@DL00318 DS    0H                                               03S0319 00842000
*    DO WORD = 1 TO 4;                                     /*@Y02006P*/ 00843000
         LA    WORD,1                                           03S0319 00844000
@DL00319 DS    0H                                               03S0320 00845000
*      UNPK(TOAREA,FROM);          /* ONE WORD OF STORAGE    @Y02006P*/ 00846000
         UNPK  TOAREA(9,AREAPTR),FROM(5,FROMPTR)                03S0320 00847000
*      TOAREA(9) = BLANK;                                  /*@Y02006P*/ 00848000
         MVI   TOAREA+8(AREAPTR),C' '                           03S0321 00849000
*      TR(TOAREA(1:8),EBCTABL);    /* TRANSLATE STORAGE      @Y02006P*/ 00850000
         TR    TOAREA(8,AREAPTR),EBCTABL(COMBASE)               03S0322 00851000
*      AREAPTR = AREAPTR + LENGTH(TOAREA);                 /*@Y02006P*/ 00852000
         AH    AREAPTR,@CH00189                                 03S0323 00853000
*      FROMPTR = FROMPTR + 4;      /* GET NEXT WORD OF STORAGE       */ 00854000
         AH    FROMPTR,@CH00047                                 03S0324 00855000
*    END;                                                  /*@Y02006P*/ 00856000
         AH    WORD,@CH00041                                    03S0325 00857000
         CH    WORD,@CH00047                                    03S0325 00858000
         BNH   @DL00319                                         03S0325 00859000
*    AREAPTR = ADDR(FIELD2);       /* ADDR OF SECOND HALF    @Y02006P*/ 00860000
         LA    AREAPTR,FIELD2(,OUTBUFAD)                        03S0326 00861000
*  END;                                                    /*@Y02006P*/ 00862000
         AH    HALF,@CH00041                                    03S0327 00863000
         CH    HALF,@CH00078                                    03S0327 00864000
         BNH   @DL00318                                         03S0327 00865000
*  ASTR1 = STAR;                                           /*@Y02006P*/ 00866000
         MVI   ASTR1(OUTBUFAD),C'*'                             03S0328 00867000
*  EBCDIC = PRESLINE(1:LINELGT);   /* EBCDIC OF DATA LINE    @Z40MI3F*/ 00868000
         MVI   EBCDIC+1(OUTBUFAD),C' '                          03S0329 00869000
         MVC   EBCDIC+2(30,OUTBUFAD),EBCDIC+1(OUTBUFAD)         03S0329 00870000
         L     @09,LINELGT                                      03S0329 00871000
         BCTR  @09,0                                            03S0329 00872000
         LR    @07,BUFFADDR                                     03S0329 00873000
         AL    @07,CRNTOFF                                      03S0329 00874000
         EX    @09,@SM00656                                     03S0329 00875000
*  TR(EBCDIC,TABLE);               /* ELIMINATE UNPRINTABLES @Y02006P*/ 00876000
         TR    EBCDIC(32,OUTBUFAD),TABLE(COMBASE)               03S0330 00877000
*  ASTR2 = STAR;                                           /*@Y02006P*/ 00878000
         MVI   ASTR2(OUTBUFAD),C'*'                             03S0331 00879000
*    END;                          /* END NOT-CONDENSED SEPARATE ACTS*/ 00880000
*  CALL WRITERTN(1);               /* PRINT LINE OF OUTPUT   @Y02006P*/ 00881000
@RC00292 LA    @01,@AL00333                                     03S0333 00882000
         BAL   @14,WRITERTN                                     03S0333 00883000
*END LFORMAT;                                              /*@Y02006P*/ 00884000
@EL00002 DS    0H                                               03S0334 00885000
@EF00002 DS    0H                                               03S0334 00886000
@ER00002 LM    @14,@12,@SA00002                                 03S0334 00887000
         BR    @14                                              03S0334 00888000
*/*------------------------------------------------------------------*/ 00889000
*/* WRITERTN ISSUES BRWRITES                                 @Y02006P*/ 00890000
*/*------------------------------------------------------------------*/ 00891000
*WRITERTN: PROCEDURE (LINESKIP);                           /*@Y02006P*/ 00892000
WRITERTN STM   @14,@12,@SA00003                                 03S0335 00893000
         MVC   @PC00003(4),0(@01)                               03S0335 00894000
*  DECLARE LINESKIP FIXED(31);                             /*@Y02006P*/ 00895000
*  IF LINESKIP = 1 THEN                                         03S0337 00896000
         L     @09,@PC00003                                     03S0337 00897000
         CLC   LINESKIP(4,@09),@CF00041                         03S0337 00898000
         BNE   @RF00337                                         03S0337 00899000
*    GEN FLOWS(DPSSTOP) REFS(AWRITE) (BRWRITE 1);          /*@Y02006P*/ 00900000
         BRWRITE 1                                                      00901000
*  ELSE                                                         03S0339 00902000
*    IF LINESKIP = 2 THEN                                       03S0339 00903000
         B     @RC00337                                         03S0339 00904000
@RF00337 L     @09,@PC00003                                     03S0339 00905000
         CLC   LINESKIP(4,@09),@CF00078                         03S0339 00906000
         BNE   @RF00339                                         03S0339 00907000
*      GEN FLOWS(DPSSTOP) (BRWRITE 2);                     /*@Y02006P*/ 00908000
         BRWRITE 2                                                      00909000
*    ELSE                                                       03S0341 00910000
*      GEN FLOWS(DPSSTOP) (BRWRITE 3);                     /*@Y02006P*/ 00911000
         B     @RC00339                                         03S0341 00912000
@RF00339 DS    0H                                               03S0341 00913000
         BRWRITE 3                                                      00914000
*END WRITERTN;                                             /*@Y02006P*/ 00915000
@EL00003 DS    0H                                               03S0342 00916000
@EF00003 DS    0H                                               03S0342 00917000
@ER00003 LM    @14,@12,@SA00003                                 03S0342 00918000
         BR    @14                                              03S0342 00919000
*/*------------------------------------------------------------------*/ 00920000
*/* REGFORMAT CONVERTS GENERAL AND CONTROL REGISTERS TO PRINTABLE HEX*/ 00921000
*/*------------------------------------------------------------------*/ 00922000
*REGFORMT: PROCEDURE;                                      /*@Y02006P*/ 00923000
REGFORMT STM   @14,@12,12(@13)                                  03S0343 00924000
*  DO J = 1 TO 2;                                          /*@Y02006P*/ 00925000
         LA    J,1                                              03S0344 00926000
@DL00344 DS    0H                                               03S0345 00927000
*    DO M = 1 TO 4;                /* TRANSLATE REGISTER CONTENTS    */ 00928000
         LA    M,1                                              03S0345 00929000
@DL00345 DS    0H                                               03S0346 00930000
*      UNPK(TOAREA,FROM);          /* ONE REGISTER           @Y02006P*/ 00931000
         UNPK  TOAREA(9,AREAPTR),FROM(5,FROMPTR)                03S0346 00932000
*      TOAREA(9) = BLANK;                                  /*@Y02006P*/ 00933000
         MVI   TOAREA+8(AREAPTR),C' '                           03S0347 00934000
*      TR(TOAREA(1:8),EBCTABL);    /* TRANSLATE CONTENTS TO PRINTABLE*/ 00935000
         TR    TOAREA(8,AREAPTR),EBCTABL(COMBASE)               03S0348 00936000
*      AREAPTR = AREAPTR + 13;     /* OUTPUT AREA FOR NEXT REGISTER  */ 00937000
         AH    AREAPTR,@CH00184                                 03S0349 00938000
*      FROMPTR = FROMPTR + 4;      /* NEXT REGISTER          @Y02006P*/ 00939000
         AH    FROMPTR,@CH00047                                 03S0350 00940000
*    END;                                                  /*@Y02006P*/ 00941000
         AH    M,@CH00041                                       03S0351 00942000
         CH    M,@CH00047                                       03S0351 00943000
         BNH   @DL00345                                         03S0351 00944000
*    AREAPTR = ADDR(REGWORD2);     /* SECOND HALF OF LINE FOR REGS   */ 00945000
         LA    AREAPTR,REGWORD2(,OUTBUFAD)                      03S0352 00946000
*  END;                                                    /*@Y02006P*/ 00947000
         AH    J,@CH00041                                       03S0353 00948000
         CH    J,@CH00078                                       03S0353 00949000
         BNH   @DL00344                                         03S0353 00950000
*END REGFORMT;                                             /*@Y02006P*/ 00951000
@EL00004 DS    0H                                               03S0354 00952000
@EF00004 DS    0H                                               03S0354 00953000
@ER00004 LM    @14,@12,12(@13)                                  03S0354 00954000
         BR    @14                                              03S0354 00955000
*/*------------------------------------------------------------------*/ 00956000
*/* UNAVAIL ISSUES AN OUTPUT COMMENT SPECIFYING THAT AN ADDRESS RANGE*/ 00957000
*/*  COULD NOT BE PRINTED                                    @Y02006P*/ 00958000
*/*------------------------------------------------------------------*/ 00959000
*UNAVAIL: PROCEDURE;                                       /*@Y02006P*/ 00960000
UNAVAIL  STM   @14,@12,@SA00005                                 03S0355 00961000
*  UNPK(DATAPART(1:7),ADDR1(2:5)); /* FIRST FAILING ADDRESS  @Y02006P*/ 00962000
         UNPK  DATAPART(7,OUTBUFAD),ADDR1+1(4)                  03S0356 00963000
*  MESSAGE(7:14) = THRU;                                   /*@Y02006P*/ 00964000
         MVC   MESSAGE+6(8,OUTBUFAD),THRU                       03S0357 00965000
*  TR(ADDRESS,EBCTABL);                                    /*@Y02006P*/ 00966000
         TR    ADDRESS(6,OUTBUFAD),EBCTABL(COMBASE)             03S0358 00967000
*  UNPK(MESSAGE(16:22),HEXDATA(2:5)); /* END OF FAILING ADDRESS RANGE*/ 00968000
         UNPK  MESSAGE+15(7,OUTBUFAD),HEXDATA+1(4)              03S0359 00969000
*  MESSAGE(22:42) = RESTOMSG;      /* REMAINING MESSAGE TEXT @Y02006P*/ 00970000
         MVC   MESSAGE+21(21,OUTBUFAD),RESTOMSG                 03S0360 00971000
*  TR(MESSAGE(16:21),EBCTABL);                             /*@Y02006P*/ 00972000
         TR    MESSAGE+15(6,OUTBUFAD),EBCTABL(COMBASE)          03S0361 00973000
*  CALL WRITERTN(1);               /* PRINT MESSAGE          @Y02006P*/ 00974000
         LA    @01,@AL00362                                     03S0362 00975000
         BAL   @14,WRITERTN                                     03S0362 00976000
*END UNAVAIL;                                              /*@Y02006P*/ 00977000
@EL00005 DS    0H                                               03S0363 00978000
@EF00005 DS    0H                                               03S0363 00979000
@ER00005 LM    @14,@12,@SA00005                                 03S0363 00980000
         BR    @14                                              03S0363 00981000
*/*------------------------------------------------------------------*/ 00982000
*/* AMDPRPCB MANIPULATES THE PCB QUEUE                       @Y02006P*/ 00983000
*/*------------------------------------------------------------------*/ 00984000
*AMDPRPCB: PROCEDURE;                                      /*@Y02006P*/ 00985000
AMDPRPCB STM   @14,@12,@SA00006                                 03S0364 00986000
*  RESPECIFY PCBPL BASED(PCBPLPTR);                        /*@Y02006P*/ 00987000
*  RESPECIFY R1 RESTRICTED;                                /*@Y02006P*/ 00988000
*  PCBPLPTR = R1;                  /* ADDRESS OF CALLER SUPPLIED AREA*/ 00989000
         LR    PCBPLPTR,R1                                      03S0367 00990000
*  PCBADDR = ADDR(PCBPTR);         /* ADDRESS OF FIRST PCB LINK FIELD*/ 00991000
         LA    PCBADDR,PCBPTR(,COMBASE)                         03S0368 00992000
*  RESPECIFY R1 UNRESTRICTED;                              /*@Y02006P*/ 00993000
*  IF PCBPFUNC = PCBPENQ THEN      /* ENQUEUE REQUEST        @Y02006P*/ 00994000
         TM    PCBPFUNC(PCBPLPTR),B'10000000'                   03S0370 00995000
         BNZ   @RF00370                                         03S0370 00996000
*    DO;                                                   /*@Y02006P*/ 00997000
*      MERGE = NOTDONE;            /* INIT LOOP CONTROL SWITCH       */ 00998000
         OI    MERGE,B'10000000'                                03S0372 00999000
*      IF PCBPBGN < PCBPEND THEN   /* VALID RANGE            @Y02006P*/ 01000000
         CLC   PCBPBGN(4,PCBPLPTR),PCBPEND(PCBPLPTR)            03S0373 01001000
         BNL   @RF00373                                         03S0373 01002000
*        DO WHILE MERGE=NOTDONE;   /* POSITION THE NEW PCB   @Y02006P*/ 01003000
         B     @DE00374                                         03S0374 01004000
@DL00374 DS    0H                                               03S0375 01005000
*          IF PCBLINK = 0 THEN     /* LAST PCB IS REACHED    @Y02006P*/ 01006000
         ICM   @10,15,PCBLINK(PCBADDR)                          03S0375 01007000
         BNZ   @RF00375                                         03S0375 01008000
*            DO;                                           /*@Y02006P*/ 01009000
*DO;                                                       /*@Y02006P*/ 01010000
*DO;                                                       /*@Y02006P*/ 01011000
*  RESPECIFY (R0,R1) RESTRICTED;                           /*@Y02006P*/ 01012000
*  R0 = LENGTH(PCB);               /* SIZE OF GETMAIN        @Y02006P*/ 01013000
         LA    R0,16                                            05S0380 01014000
*  GEN(GETMAIN R,LV=(0));          /* GET SPACE FOR NEW PCB  @Y02006P*/ 01015000
         GETMAIN R,LV=(0)                                               01016000
*  NEWPCB = R1;                    /* ADDRESS OF NEW SPACE   @Y02006P*/ 01017000
         LR    NEWPCB,R1                                        05S0382 01018000
*  RESPECIFY (R0,R1) UNRESTRICTED;                         /*@Y02006P*/ 01019000
*  EVAL(NEWPCB+4)->PCBPL = PCBPL;  /* COPY PCB INTO GOTTEN AREA      */ 01020000
         LA    @10,4                                            05S0384 01021000
         ALR   @10,NEWPCB                                       05S0384 01022000
         MVC   PCBPL(12,@10),PCBPL(PCBPLPTR)                    05S0384 01023000
*END;                                                      /*@Y02006P*/ 01024000
*  NEWPCB->PCBLINK = 0;            /* INDICATE END OF QUEUE  @Y02006P*/ 01025000
         SLR   @10,@10                                          04S0386 01026000
         ST    @10,PCBLINK(,NEWPCB)                             04S0386 01027000
*  PCBLINK = NEWPCB;               /* ADD NEW PCB TO CHAIN   @Y02006P*/ 01028000
         ST    NEWPCB,PCBLINK(,PCBADDR)                         04S0387 01029000
*END;                                                      /*@Y02006P*/ 01030000
*              MERGE = DONE;       /* ENQUEUE IS COMPLETE    @Y02006P*/ 01031000
         NI    MERGE,B'01111111'                                03S0389 01032000
*            END;                                          /*@Y02006P*/ 01033000
*          ELSE                    /* THIS PCB IS NOT THE LAST       */ 01034000
*DO;                                                       /*@Y02006P*/ 01035000
         B     @RC00375                                         04S0391 01036000
@RF00375 DS    0H                                               04S0392 01037000
*  LASTPCB = PCBADDR;              /* REMEMBER THIS PCB      @Y02006P*/ 01038000
         LR    LASTPCB,PCBADDR                                  04S0392 01039000
*  PCBADDR = PCBLINK;              /* LOOK AT NEXT PCB       @Y02006P*/ 01040000
         L     PCBADDR,PCBLINK(,PCBADDR)                        04S0393 01041000
*  IF PCBPASID = PCBASID THEN      /* IF STORAGE IS FOR SAME ID      */ 01042000
         CLC   PCBPASID(2,PCBPLPTR),PCBASID(PCBADDR)            04S0394 01043000
         BNE   @RF00394                                         04S0394 01044000
*    DO;                                                   /*@Y02006P*/ 01045000
*      IF PCBPBGN <= PCBSTART THEN /* NEW PCB STARTS BEFORE THIS ONE */ 01046000
         L     @10,PCBSTART(,PCBADDR)                           04S0396 01047000
         C     @10,PCBPBGN(,PCBPLPTR)                           04S0396 01048000
         BL    @RF00396                                         04S0396 01049000
*        DO;                                               /*@Y02006P*/ 01050000
*          IF PCBPEND < PCBSTART THEN /* NEW PCB IS ENTIRELY BEFORE     01051000
*                                     THIS ONE               @Y02006P*/ 01052000
         C     @10,PCBPEND(,PCBPLPTR)                           04S0398 01053000
         BNH   @RF00398                                         04S0398 01054000
*            DO;                                           /*@Y02006P*/ 01055000
*DO;                                                       /*@Y02006P*/ 01056000
*DO;                                                       /*@Y02006P*/ 01057000
*  RESPECIFY (R0,R1) RESTRICTED;                           /*@Y02006P*/ 01058000
*  R0 = LENGTH(PCB);               /* SIZE OF GETMAIN        @Y02006P*/ 01059000
         LA    R0,16                                            06S0403 01060000
*  GEN(GETMAIN R,LV=(0));          /* GET SPACE FOR NEW PCB  @Y02006P*/ 01061000
         GETMAIN R,LV=(0)                                               01062000
*  NEWPCB = R1;                    /* ADDRESS OF NEW SPACE   @Y02006P*/ 01063000
         LR    NEWPCB,R1                                        06S0405 01064000
*  RESPECIFY (R0,R1) UNRESTRICTED;                         /*@Y02006P*/ 01065000
*  EVAL(NEWPCB+4)->PCBPL = PCBPL;  /* COPY PCB INTO GOTTEN AREA      */ 01066000
         LA    @10,4                                            06S0407 01067000
         ALR   @10,NEWPCB                                       06S0407 01068000
         MVC   PCBPL(12,@10),PCBPL(PCBPLPTR)                    06S0407 01069000
*END;                                                      /*@Y02006P*/ 01070000
*  NEWPCB->PCBLINK = PCBADDR;      /* LINK TO NEXT PCB       @Y02006P*/ 01071000
         ST    PCBADDR,PCBLINK(,NEWPCB)                         05S0409 01072000
*  LASTPCB->PCBLINK = NEWPCB;      /* ADD NEW PCB TO CHAIN   @Y02006P*/ 01073000
         ST    NEWPCB,PCBLINK(,LASTPCB)                         05S0410 01074000
*END;                                                      /*@Y02006P*/ 01075000
*              MERGE = DONE;       /* STOP MERGE             @Y02006P*/ 01076000
         NI    MERGE,B'01111111'                                04S0412 01077000
*            END;                                          /*@Y02006P*/ 01078000
*          ELSE                    /* NEW PCB OVERLAPS THIS PCB      */ 01079000
*            DO;                                           /*@Y02006P*/ 01080000
         B     @RC00398                                         04S0414 01081000
@RF00398 DS    0H                                               04S0415 01082000
*              PCBSTART = PCBPBGN; /* INCLUDE NEW RANGE IN THIS PCB  */ 01083000
         MVC   PCBSTART(4,PCBADDR),PCBPBGN(PCBPLPTR)            04S0415 01084000
*              IF PCBPEND <= PCBSTOP THEN /* RANGE IS ALREADY ENQD   */ 01085000
         CLC   PCBPEND(4,PCBPLPTR),PCBSTOP(PCBADDR)             04S0416 01086000
         BH    @RF00416                                         04S0416 01087000
*                MERGE = DONE;     /* STOP SCAN              @Y02006P*/ 01088000
         NI    MERGE,B'01111111'                                04S0417 01089000
*              ELSE                /* THIS PCB IS SPANNED BY NEW PCB */ 01090000
*                DO;                                       /*@Y02006P*/ 01091000
         B     @RC00416                                         04S0418 01092000
@RF00416 DS    0H                                               04S0419 01093000
*                  PCBSTOP = PCBPEND; /* EXPAND PRESENT PCB  @Y02006P*/ 01094000
         MVC   PCBSTOP(4,PCBADDR),PCBPEND(PCBPLPTR)             04S0419 01095000
*                  CALL NEXTCHCK;  /* CHECK FOR OVERLAP WITH NEXT PCB*/ 01096000
         BAL   @14,NEXTCHCK                                     04S0420 01097000
*                END;                                      /*@Y02006P*/ 01098000
*            END;                                          /*@Y02006P*/ 01099000
*        END;                                              /*@Y02006P*/ 01100000
*      ELSE                        /* NEW PCB STARTS AFTER THIS ONE  */ 01101000
*        IF PCBPBGN <= PCBSTOP THEN /* NEW PCB OVERLAPS THIS ONE     */ 01102000
         B     @RC00396                                         04S0424 01103000
@RF00396 L     @10,PCBSTOP(,PCBADDR)                            04S0424 01104000
         C     @10,PCBPBGN(,PCBPLPTR)                           04S0424 01105000
         BL    @RF00424                                         04S0424 01106000
*          DO;                                             /*@Y02006P*/ 01107000
*            IF PCBPEND <= PCBSTOP THEN /* RANGE IS ALREADY INCLUDED */ 01108000
         C     @10,PCBPEND(,PCBPLPTR)                           04S0426 01109000
         BL    @RF00426                                         04S0426 01110000
*              MERGE = DONE;       /* STOP SCAN              @Y02006P*/ 01111000
         NI    MERGE,B'01111111'                                04S0427 01112000
*            ELSE                  /* NEW PCB OVERFLOWS CURRENT RANGE*/ 01113000
*              DO;                                         /*@Y02006P*/ 01114000
         B     @RC00426                                         04S0428 01115000
@RF00426 DS    0H                                               04S0429 01116000
*                PCBSTOP = PCBPEND; /* EXPAND CURRENT PCB    @Y02006P*/ 01117000
         MVC   PCBSTOP(4,PCBADDR),PCBPEND(PCBPLPTR)             04S0429 01118000
*                CALL NEXTCHCK;    /* CHECK FOR OVERLAP WITH NEXT PCB*/ 01119000
         BAL   @14,NEXTCHCK                                     04S0430 01120000
*              END;                                        /*@Y02006P*/ 01121000
*          END;                                            /*@Y02006P*/ 01122000
*        ELSE ;                    /* NEW RANGE EXCEEDS THIS ONE     */ 01123000
@RF00424 DS    0H                                               04S0434 01124000
*    END;                          /* CONTINUE SCAN          @Y02006P*/ 01125000
*   ELSE                           /* ASIDS NOT THE SAME     @Y02006P*/ 01126000
*    IF PCBPASID<PCBASID THEN                                   04S0435 01127000
         B     @RC00394                                         04S0435 01128000
@RF00394 CLC   PCBPASID(2,PCBPLPTR),PCBASID(PCBADDR)            04S0435 01129000
         BNL   @RF00435                                         04S0435 01130000
*      DO;                                                 /*@Y02006P*/ 01131000
*DO;                                                       /*@Y02006P*/ 01132000
*DO;                                                       /*@Y02006P*/ 01133000
*  RESPECIFY (R0,R1) RESTRICTED;                           /*@Y02006P*/ 01134000
*  R0 = LENGTH(PCB);               /* SIZE OF GETMAIN        @Y02006P*/ 01135000
         LA    R0,16                                            06S0440 01136000
*  GEN(GETMAIN R,LV=(0));          /* GET SPACE FOR NEW PCB  @Y02006P*/ 01137000
         GETMAIN R,LV=(0)                                               01138000
*  NEWPCB = R1;                    /* ADDRESS OF NEW SPACE   @Y02006P*/ 01139000
         LR    NEWPCB,R1                                        06S0442 01140000
*  RESPECIFY (R0,R1) UNRESTRICTED;                         /*@Y02006P*/ 01141000
*  EVAL(NEWPCB+4)->PCBPL = PCBPL;  /* COPY PCB INTO GOTTEN AREA      */ 01142000
         LA    @10,4                                            06S0444 01143000
         ALR   @10,NEWPCB                                       06S0444 01144000
         MVC   PCBPL(12,@10),PCBPL(PCBPLPTR)                    06S0444 01145000
*END;                                                      /*@Y02006P*/ 01146000
*  NEWPCB->PCBLINK = PCBADDR;      /* LINK TO NEXT PCB       @Y02006P*/ 01147000
         ST    PCBADDR,PCBLINK(,NEWPCB)                         05S0446 01148000
*  LASTPCB->PCBLINK = NEWPCB;      /* ADD NEW PCB TO CHAIN   @Y02006P*/ 01149000
         ST    NEWPCB,PCBLINK(,LASTPCB)                         05S0447 01150000
*END;                                                      /*@Y02006P*/ 01151000
*        MERGE = DONE;                                     /*@Y02006P*/ 01152000
         NI    MERGE,B'01111111'                                04S0449 01153000
*      END;                                                /*@Y02006P*/ 01154000
*END;                                                      /*@Y02006P*/ 01155000
@RF00435 DS    0H                                               04S0451 01156000
@RC00394 DS    0H                                               04S0452 01157000
*        END;                                              /*@Y02006P*/ 01158000
@RC00375 DS    0H                                               03S0452 01159000
@DE00374 TM    MERGE,B'10000000'                                03S0452 01160000
         BO    @DL00374                                         03S0452 01161000
*      ELSE ;                      /* INVALID PCB DO NOTHING @Y02006P*/ 01162000
@RF00373 DS    0H                                               03S0454 01163000
*    END;                                                  /*@Y02006P*/ 01164000
*  ELSE                            /* DEQUEUE REQUEST        @Y02006P*/ 01165000
*    DO;                                                   /*@Y02006P*/ 01166000
         B     @RC00370                                         03S0455 01167000
@RF00370 DS    0H                                               03S0456 01168000
*      IF PCBPTR = 0 THEN          /* NONE TO BE DEQUEUED    @Y02006P*/ 01169000
         ICM   @10,15,PCBPTR(COMBASE)                           03S0456 01170000
         BNZ   @RF00456                                         03S0456 01171000
*        RETCODE = 4;              /* INDICATE NONE RETURNED @Y02006P*/ 01172000
         MVC   RETCODE(4),@CF00047                              03S0457 01173000
*      ELSE                                                     03S0458 01174000
*        DO;                                               /*@Y02006P*/ 01175000
         B     @RC00456                                         03S0458 01176000
@RF00456 DS    0H                                               03S0459 01177000
*          PCBPL = EVAL(PCBPTR+4)->PCBPL; /* COPY PCB        @Y02006P*/ 01178000
         L     @10,PCBPTR(,COMBASE)                             03S0459 01179000
         LA    @07,4                                            03S0459 01180000
         ALR   @07,@10                                          03S0459 01181000
         MVC   PCBPL(12,PCBPLPTR),PCBPL(@07)                    03S0459 01182000
*          DEQADDR = PCBPTR;                               /*@Y02006P*/ 01183000
         LR    DEQADDR,@10                                      03S0460 01184000
*          PCBPTR = PCBPTR->PCBLINK; /* CHAIN AROUND DEQD PCB        */ 01185000
         L     @10,PCBLINK(,@10)                                03S0461 01186000
         ST    @10,PCBPTR(,COMBASE)                             03S0461 01187000
*DO;                                                       /*@Y02006P*/ 01188000
*  RESPECIFY (R0,R1) RESTRICTED;                           /*@Y02006P*/ 01189000
*  R0 = LENGTH(PCB);                                       /*@Y02006P*/ 01190000
         LA    R0,16                                            04S0464 01191000
*  R1 = DEQADDR;                                           /*@Y02006P*/ 01192000
         LR    R1,DEQADDR                                       04S0465 01193000
*  GEN(FREEMAIN R,LV=(0),A=(1));                           /*@Y02006P*/ 01194000
         FREEMAIN R,LV=(0),A=(1)                                        01195000
*END;                                                      /*@Y02006P*/ 01196000
*          RETCODE = 0;            /* INDICATE PCB RETURNED  @Y02006P*/ 01197000
         SLR   @10,@10                                          03S0468 01198000
         ST    @10,RETCODE                                      03S0468 01199000
*        END;                                              /*@Y02006P*/ 01200000
*    END;                                                  /*@Y02006P*/ 01201000
*END AMDPRPCB;                                             /*@Y02006P*/ 01202000
@EL00006 DS    0H                                               03S0471 01203000
@EF00006 DS    0H                                               03S0471 01204000
@ER00006 LM    @14,@12,@SA00006                                 03S0471 01205000
         BR    @14                                              03S0471 01206000
*/*------------------------------------------------------------------*/ 01207000
*/* NEXTCHCK CHECKS FOR OVERLAP OF THE NEW PCB WITH NEXT ONE ON THE  */ 01208000
*/*   QUEUE                                                  @Y02006P*/ 01209000
*/*------------------------------------------------------------------*/ 01210000
*NEXTCHCK: PROCEDURE;                                      /*@Y02006P*/ 01211000
NEXTCHCK STM   @14,@03,@SA00007                                 03S0472 01212000
         STM   @05,@12,@SA00007+24                              03S0472 01213000
*  LASTPCB = PCBADDR;              /* REMEMBER PREVIOUS PCB  @Y02006P*/ 01214000
         LR    LASTPCB,PCBADDR                                  03S0473 01215000
*  DO WHILE MERGE=NOTDONE;         /* SCAN PCB QUEUE         @Y02006P*/ 01216000
         B     @DE00474                                         03S0474 01217000
@DL00474 DS    0H                                               03S0475 01218000
*    IF PCBLINK = 0 THEN           /* END OF QUEUE - NO OVERLAP      */ 01219000
         ICM   @10,15,PCBLINK(PCBADDR)                          03S0475 01220000
         BNZ   @RF00475                                         03S0475 01221000
*      MERGE = DONE;               /* STOP SCAN              @Y02006P*/ 01222000
         NI    MERGE,B'01111111'                                03S0476 01223000
*    ELSE                                                       03S0477 01224000
*      DO;                                                 /*@Y02006P*/ 01225000
         B     @RC00475                                         03S0477 01226000
@RF00475 DS    0H                                               03S0478 01227000
*        PCBADDR = PCBLINK;        /* GET NEXT PCB           @Y02006P*/ 01228000
         L     PCBADDR,PCBLINK(,PCBADDR)                        03S0478 01229000
*        IF PCBPASID = PCBASID THEN /* IF PCBS ARE FOR SAME MEMORY   */ 01230000
         CLC   PCBPASID(2,PCBPLPTR),PCBASID(PCBADDR)            03S0479 01231000
         BNE   @RF00479                                         03S0479 01232000
*          DO;                                             /*@Y02006P*/ 01233000
*            IF LASTPCB->PCBSTOP < PCBSTART THEN /* NO OVERLAP       */ 01234000
         CLC   PCBSTOP(4,LASTPCB),PCBSTART(PCBADDR)             03S0481 01235000
         BNL   @RF00481                                         03S0481 01236000
*              MERGE = DONE;       /* STOP SCAN              @Y02006P*/ 01237000
         NI    MERGE,B'01111111'                                03S0482 01238000
*            ELSE                                               03S0483 01239000
*              IF LASTPCB->PCBSTOP = PCBSTART                   03S0483 01240000
*                   | LASTPCB->PCBSTOP <= PCBSTOP THEN          03S0483 01241000
         B     @RC00481                                         03S0483 01242000
@RF00481 L     @10,PCBSTOP(,LASTPCB)                            03S0483 01243000
         C     @10,PCBSTART(,PCBADDR)                           03S0483 01244000
         BE    @RT00483                                         03S0483 01245000
         C     @10,PCBSTOP(,PCBADDR)                            03S0483 01246000
         BH    @RF00483                                         03S0483 01247000
@RT00483 DS    0H                                               03S0484 01248000
*                                  /* THIS IS FINAL OVERLAPPED PCB   */ 01249000
*                DO;                                       /*@Y02006P*/ 01250000
*                  LASTPCB->PCBSTOP = PCBSTOP;             /*@Y02006P*/ 01251000
         MVC   PCBSTOP(4,LASTPCB),PCBSTOP(PCBADDR)              03S0485 01252000
*                  LASTPCB->PCBLINK = PCBLINK; /* CHAIN AROUND PCB   */ 01253000
         MVC   PCBLINK(4,LASTPCB),PCBLINK(PCBADDR)              03S0486 01254000
*                  DEQADDR = PCBADDR; /* ADDR OF PCB TO FREE @Y02006P*/ 01255000
         LR    DEQADDR,PCBADDR                                  03S0487 01256000
*DO;                                                       /*@Y02006P*/ 01257000
*  RESPECIFY (R0,R1) RESTRICTED;                           /*@Y02006P*/ 01258000
*  R0 = LENGTH(PCB);                                       /*@Y02006P*/ 01259000
         LA    R0,16                                            04S0490 01260000
*  R1 = DEQADDR;                                           /*@Y02006P*/ 01261000
         LR    R1,DEQADDR                                       04S0491 01262000
*  GEN(FREEMAIN R,LV=(0),A=(1));                           /*@Y02006P*/ 01263000
         FREEMAIN R,LV=(0),A=(1)                                        01264000
*END;                                                      /*@Y02006P*/ 01265000
*                  MERGE = DONE;   /* STOP SCAN              @Y02006P*/ 01266000
         NI    MERGE,B'01111111'                                03S0494 01267000
*                END;                                      /*@Y02006P*/ 01268000
*              ELSE                /* MORE OVERLAP TO FOLLOW @Y02006P*/ 01269000
*                DO;                                       /*@Y02006P*/ 01270000
         B     @RC00483                                         03S0496 01271000
@RF00483 DS    0H                                               03S0497 01272000
*                  LASTPCB->PCBLINK = PCBLINK; /* CHAIN AROUND PCB   */ 01273000
         MVC   PCBLINK(4,LASTPCB),PCBLINK(PCBADDR)              03S0497 01274000
*                  DEQADDR = PCBADDR; /* ADDR OF PCB TO BE FREED     */ 01275000
         LR    DEQADDR,PCBADDR                                  03S0498 01276000
*                  PCBADDR = LASTPCB; /* SET UP TO GET LINK FIELD    */ 01277000
         LR    PCBADDR,LASTPCB                                  03S0499 01278000
*DO;                                                       /*@Y02006P*/ 01279000
*  RESPECIFY (R0,R1) RESTRICTED;                           /*@Y02006P*/ 01280000
*  R0 = LENGTH(PCB);                                       /*@Y02006P*/ 01281000
         LA    R0,16                                            04S0502 01282000
*  R1 = DEQADDR;                                           /*@Y02006P*/ 01283000
         LR    R1,DEQADDR                                       04S0503 01284000
*  GEN(FREEMAIN R,LV=(0),A=(1));                           /*@Y02006P*/ 01285000
         FREEMAIN R,LV=(0),A=(1)                                        01286000
*END;                                                      /*@Y02006P*/ 01287000
*                END;              /* CONTINUE SCAN          @Y02006P*/ 01288000
*          END;                                            /*@Y02006P*/ 01289000
@RC00483 DS    0H                                               03S0507 01290000
@RC00481 DS    0H                                               03S0508 01291000
*      END;                                                /*@Y02006P*/ 01292000
@RF00479 DS    0H                                               03S0509 01293000
*  END;                                                    /*@Y02006P*/ 01294000
@RC00475 DS    0H                                               03S0509 01295000
@DE00474 TM    MERGE,B'10000000'                                03S0509 01296000
         BO    @DL00474                                         03S0509 01297000
*END NEXTCHCK;                                             /*@Y02006P*/ 01298000
@EL00007 DS    0H                                               03S0510 01299000
@EF00007 DS    0H                                               03S0510 01300000
@ER00007 LM    @14,@03,@SA00007                                 03S0510 01301000
         LM    @05,@12,@SA00007+24                              03S0510 01302000
         BR    @14                                              03S0510 01303000
*END AMDPRDPS                                              /*@Y02006P*/ 01304000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01305000
*/*%INCLUDE SYSUT5  (DPSPROLG)                                        * 01306000
*/*%INCLUDE SYSUT5  (DPSFL1  )                                        * 01307000
*/*%INCLUDE SYSUT5  (DPSDCLS )                                        * 01308000
*/*%INCLUDE SYSLIB  (AMDPCBPL)                                        * 01309000
*/*%INCLUDE SYSLIB  (COMMON  )                                        * 01310000
*/*%INCLUDE SYSUT5  (PCBDCLS )                                        * 01311000
*/*%INCLUDE SYSUT5  (REGPRINT)                                        * 01312000
*/*%INCLUDE SYSUT5  (GETPCB  )                                        * 01313000
*/*%INCLUDE SYSUT5  (FORMSTOR)                                        * 01314000
*/*%INCLUDE SYSUT5  (REALADDR)                                        * 01315000
*/*%INCLUDE SYSUT5  (KEYPRINT)                                        * 01316000
*/*%INCLUDE SYSUT5  (DUPEPRNT)                                        * 01317000
*/*%INCLUDE SYSUT5  (DPSREAD )                                        * 01318000
*/*%INCLUDE SYSUT5  (DPSSTOP )                                        * 01319000
*/*%INCLUDE SYSUT5  (INTRTNS )                                        * 01320000
*/*%INCLUDE SYSUT5  (LFORMAT )                                        * 01321000
*/*%INCLUDE SYSUT5  (WRITERTN)                                        * 01322000
*/*%INCLUDE SYSUT5  (REGFORMT)                                        * 01323000
*/*%INCLUDE SYSUT5  (UNAVAIL )                                        * 01324000
*/*%INCLUDE SYSUT5  (AMDPRPCB)                                        * 01325000
*/*%INCLUDE SYSUT5  (ENQAFTER)                                        * 01326000
*/*%INCLUDE SYSUT5  (GETAREA )                                        * 01327000
*/*%INCLUDE SYSUT5  (GETAREA )                                        * 01328000
*/*%INCLUDE SYSUT5  (GETAREA )                                        * 01329000
*/*%INCLUDE SYSUT5  (COMPNEXT)                                        * 01330000
*/*%INCLUDE SYSUT5  (ENQBEFOR)                                        * 01331000
*/*%INCLUDE SYSUT5  (ENQBEFOR)                                        * 01332000
*/*%INCLUDE SYSUT5  (FREERTN )                                        * 01333000
*/*%INCLUDE SYSUT5  (FREERTN )                                        * 01334000
*/*%INCLUDE SYSUT5  (FREERTN )                                        * 01335000
*/*%INCLUDE SYSUT5  (NEXTCHCK)                                        * 01336000
*;                                                              01S0511 01337000
@DATA    DS    0H                                                       01338000
@CH00064 DC    H'8'                                                     01339000
@CH00189 DC    H'9'                                                     01340000
@CH00184 DC    H'13'                                                    01341000
@CH00364 DC    H'2048'                                                  01342000
@CH00360 DC    H'4096'                                                  01343000
@SC00649 CLC   PRESLINE(0,@09),LASTLINE                                 01344000
@SM00652 MVC   LASTLINE(0),PRESLINE(@07)                                01345000
@SM00656 MVC   EBCDIC(0,OUTBUFAD),PRESLINE(@07)                         01346000
         DS    0F                                                       01347000
@AL00066 EQU   *                       LIST WITH   1 ARGUMENT(S)        01348000
@AL00074 EQU   *                       LIST WITH   1 ARGUMENT(S)        01349000
@AL00092 EQU   *                       LIST WITH   1 ARGUMENT(S)        01350000
@AL00103 EQU   *                       LIST WITH   1 ARGUMENT(S)        01351000
@AL00245 DC    A(@CF00078)             LIST WITH   1 ARGUMENT(S)        01352000
@AL00073 EQU   *                       LIST WITH   1 ARGUMENT(S)        01353000
@AL00091 EQU   *                       LIST WITH   1 ARGUMENT(S)        01354000
@AL00102 EQU   *                       LIST WITH   1 ARGUMENT(S)        01355000
@AL00174 EQU   *                       LIST WITH   1 ARGUMENT(S)        01356000
@AL00206 EQU   *                       LIST WITH   1 ARGUMENT(S)        01357000
@AL00222 EQU   *                       LIST WITH   1 ARGUMENT(S)        01358000
@AL00269 EQU   *                       LIST WITH   1 ARGUMENT(S)        01359000
@AL00333 EQU   *                       LIST WITH   1 ARGUMENT(S)        01360000
@AL00362 DC    A(@CF00041)             LIST WITH   1 ARGUMENT(S)        01361000
@AL00106 EQU   *                       LIST WITH   1 ARGUMENT(S)        01362000
@AL00260 DC    A(@CF00169)             LIST WITH   1 ARGUMENT(S)        01363000
         DS    0F                                                       01364000
@SA00001 DS    18F                                                      01365000
@SA00003 DS    15F                                                      01366000
@PC00003 DS    1F                                                       01367000
@SA00006 DS    15F                                                      01368000
@SA00005 DS    15F                                                      01369000
@SA00002 DS    15F                                                      01370000
@SA00007 DS    14F                                                      01371000
         DS    0F                                                       01372000
@CF00041 DC    F'1'                                                     01373000
@CH00041 EQU   @CF00041+2                                               01374000
@CF00078 DC    F'2'                                                     01375000
@CH00078 EQU   @CF00078+2                                               01376000
@CF00169 DC    F'3'                                                     01377000
@CH00169 EQU   @CF00169+2                                               01378000
@CF00047 DC    F'4'                                                     01379000
@CH00047 EQU   @CF00047+2                                               01380000
@CF00362 DC    F'32'                                                    01381000
@CF00180 DC    F'64'                                                    01382000
@CF00642 DC    F'-12'                                                   01383000
@CF00647 DC    F'-8'                                                    01384000
@CF00648 DC    F'-7'                                                    01385000
@CF00532 DC    XL4'FFFFFFE0'                                            01386000
@CF00582 DC    XL4'FFFFFFC0'                                            01387000
@CA00367 DC    A(PRNTSTG)                                               01388000
@CA00368 DC    A(PCBRTN)                                                01389000
         DS    0D                                                       01390000
LINELGT  DC    F'32'                                                    01391000
DPSSAVEA DS    A                                                        01392000
CRNTOFF  DS    F                                                        01393000
REALADW  DS    AL4                                                      01394000
         ORG   REALADW                                                  01395000
@NM00075 DS    CL1                                                      01396000
RECADDR  DS    CL3                                                      01397000
         ORG   RECADDR                                                  01398000
RECADDR1 DS    CL4                                                      01399000
         ORG   REALADW+5                                                01400000
         DS    CL3                                                      01401000
LINEMASK DC    XL4'FFFFFFE0'                                            01402000
BLOCKMSK DC    XL4'FFFFF000'                                            01403000
OFFSTMSK DC    XL4'00000FFF'                                            01404000
CRNTLINE DS    A                                                        01405000
RETCODE  DS    F                                                        01406000
PROTNRQ  DC    AL1(0)                                                   01407000
PROTKF   DC    AL1(1)                                                   01408000
@CC00581 DC    C'ASID'                                                  01409000
@CC00600 DC    C'  '                                                    01410000
@CB00429 DC    X'FFFF'                                                  01411000
PCBDATA  DS    CL12                                                     01412000
PSWMSG   DC    CL11'CURRENT PSW'                                        01413000
LASTASID DC    X'FFFF'                                                  01414000
         DS    CL1                                                      01415000
HEXDATA  DS    CL5                                                      01416000
         ORG   HEXDATA                                                  01417000
HEXDATA1 DS    AL4                                                      01418000
         ORG   HEXDATA+5                                                01419000
DPSSWITC DS    CL1                                                      01420000
         ORG   DPSSWITC                                                 01421000
PREVREAD DS    BL1                                                      01422000
FRSTDUPE EQU   DPSSWITC+0                                               01423000
FIRSTLIN EQU   DPSSWITC+0                                               01424000
@NM00074 EQU   DPSSWITC+0                                               01425000
         ORG   DPSSWITC+1                                               01426000
NOSTRMSG DC    CL40'ONLY GENERAL PURPOSE REGISTERS AVAILABLE'           01427000
THRU     DC    CL8' THROUGH'                                            01428000
RESTOMSG DC    CL21' COULD NOT BE PRINTED'                              01429000
RELADMSG DC    CL27'REAL ADDRESS FOR        IS '                        01430000
STORKMSG DC    CL42'STORAGE KEY IS    FOR STORAGE BEGINNING AT'         01431000
NOREGMSG DC    CL30'REGISTERS COULD NOT BE PRINTED'                     01432000
IOERRMSG DC    CL23'I/O ERROR READING BLOCK'                            01433000
RECLMPGE DC    CL16'RECLAIMABLE PAGE'                                   01434000
DUPEMSG  DC    CL34'TO NEXT LINE ADDRESS SAME AS ABOVE'                 01435000
LASTLINE DS    CL64                                                     01436000
THISKEY  DS    CL1                                                      01437000
LASTKEY  DS    CL1                                                      01438000
PCBSWICH DS    CL1                                                      01439000
         ORG   PCBSWICH                                                 01440000
MERGE    DS    BL1                                                      01441000
         ORG   PCBSWICH+1                                               01442000
REGMSG   DC    CL8'GPRS 0-7'                                            01443000
         DC    CL8'GPRS 8-F'                                            01444000
         DC    CL8'CTRS 0-7'                                            01445000
         DC    CL8'CTRS 8-F'                                            01446000
FPRMSG   DC    CL8'FPRS 0-2'                                            01447000
         DC    CL8'FPRS 4-6'                                            01448000
         DS    CL2                                                      01449000
PATCH    DC    80F'0'                                                   01450000
AMDPRDPS CSECT                                                          01451000
DTAE     EQU   32                  DATA EBCDIC BIT                      01452000
DTAC     EQU   16                  DATA IN CORE BIT                     01453000
DTAP     EQU   8                   DATA PTR BIT                         01454000
DTA      EQU   4                   DATA INCLUDED BIT                    01455000
LBLP     EQU   2                   LABEL PTR BIT                        01456000
LBL      EQU   1                   LABEL INCLUDED BIT                   01457000
AMDPRDPS CSECT                                                          01458000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01459000
@01      EQU   01                                                       01460000
@02      EQU   02                                                       01461000
@03      EQU   03                                                       01462000
@04      EQU   04                                                       01463000
@05      EQU   05                                                       01464000
@06      EQU   06                                                       01465000
@07      EQU   07                                                       01466000
@08      EQU   08                                                       01467000
@09      EQU   09                                                       01468000
@10      EQU   10                                                       01469000
@11      EQU   11                                                       01470000
@12      EQU   12                                                       01471000
@13      EQU   13                                                       01472000
@14      EQU   14                                                       01473000
@15      EQU   15                                                       01474000
DEQADDR  EQU   @06                                                      01475000
NEWPCB   EQU   @06                                                      01476000
PCBPLPTR EQU   @05                                                      01477000
LASTPCB  EQU   @07                                                      01478000
PCBADDR  EQU   @04                                                      01479000
BUFFEND  EQU   @03                                                      01480000
BUFFADDR EQU   @06                                                      01481000
WORD     EQU   @07                                                      01482000
HALF     EQU   @03                                                      01483000
M        EQU   @03                                                      01484000
K        EQU   @09                                                      01485000
J        EQU   @07                                                      01486000
I        EQU   @03                                                      01487000
FROMPTR  EQU   @05                                                      01488000
AREAPTR  EQU   @02                                                      01489000
CPUSTATP EQU   @06                                                      01490000
OUTBUFAD EQU   @04                                                      01491000
SUBERRTN EQU   @05                                                      01492000
LSTSTOP  EQU   @08                                                      01493000
LSTERRTN EQU   @10                                                      01494000
R0       EQU   @00                                                      01495000
R1       EQU   @01                                                      01496000
R9       EQU   @09                                                      01497000
R13      EQU   @13                                                      01498000
R15      EQU   @15                                                      01499000
COMBASE  EQU   @12                                                      01500000
PREG     EQU   @01                                                      01501000
CPUADDR  EQU   @02                                                      01502000
BLOCKADR EQU   @02                                                      01503000
BASE1    EQU   @11                                                      01504000
BASE2    EQU   @10                                                      01505000
BASE3    EQU   @09                                                      01506000
BEGINADR EQU   @01                                                      01507000
BUFREG   EQU   @06                                                      01508000
CNTREG   EQU   @03                                                      01509000
LINEREG  EQU   @08                                                      01510000
R10      EQU   @10                                                      01511000
R11      EQU   @11                                                      01512000
R12      EQU   @12                                                      01513000
R14      EQU   @14                                                      01514000
R2       EQU   @02                                                      01515000
R3       EQU   @03                                                      01516000
R4       EQU   @04                                                      01517000
R5       EQU   @05                                                      01518000
R6       EQU   @06                                                      01519000
R7       EQU   @07                                                      01520000
R8       EQU   @08                                                      01521000
STOPBASE EQU   @05                                                      01522000
PCBPL    EQU   0                                                        01523000
PCBPBGN  EQU   PCBPL                                                    01524000
PCBPEND  EQU   PCBPL+4                                                  01525000
PCBPASID EQU   PCBPL+8                                                  01526000
PCBPFLG1 EQU   PCBPL+10                                                 01527000
PCBPVIRT EQU   PCBPFLG1                                                 01528000
PCBPREAL EQU   PCBPFLG1                                                 01529000
PCBPLOWC EQU   PCBPFLG1                                                 01530000
PCBPTOPC EQU   PCBPFLG1                                                 01531000
PCBPFLG2 EQU   PCBPL+11                                                 01532000
PCBPFUNC EQU   PCBPFLG2                                                 01533000
COMMON   EQU   0                                                        01534000
ERRADDR  EQU   COMMON                                                   01535000
WORK1    EQU   COMMON+24                                                01536000
CURBUF   EQU   COMMON+48                                                01537000
PCBPTR   EQU   COMMON+60                                                01538000
SWA      EQU   COMMON+122                                               01539000
SWB      EQU   COMMON+123                                               01540000
IOERR    EQU   SWB                                                      01541000
SWC      EQU   COMMON+124                                               01542000
SWD      EQU   COMMON+125                                               01543000
GPRSFND  EQU   SWD                                                      01544000
SWE      EQU   COMMON+126                                               01545000
SWF      EQU   COMMON+127                                               01546000
BUFSW    EQU   COMMON+128                                               01547000
PRSW     EQU   COMMON+129                                               01548000
PRNTREAL EQU   PRSW                                                     01549000
TABLE    EQU   COMMON+659                                               01550000
HEXTABL  EQU   TABLE+63                                                 01551000
EBCTABL  EQU   HEXTABL+10                                               01552000
AWRITE   EQU   COMMON+1500                                              01553000
STOPEXIT EQU   COMMON+1528                                              01554000
APCBENQ  EQU   COMMON+1560                                              01555000
APRTSTG  EQU   COMMON+1572                                              01556000
DCBADDRS EQU   COMMON+1608                                              01557000
@NM00044 EQU   DCBADDRS+16                                              01558000
@NM00045 EQU   @NM00044                                                 01559000
REALMAP  EQU   COMMON+1644                                              01560000
IPLCPU   EQU   COMMON+1666                                              01561000
BRRDDATA EQU   COMMON+1984                                              01562000
TOPICHDR EQU   COMMON+2060                                              01563000
I3800SW  EQU   COMMON+2076                                              01564000
I3800KEY EQU   I3800SW                                                  01565000
I3800204 EQU   I3800SW                                                  01566000
TITLEKEY EQU   COMMON+2077                                              01567000
TITLESTK EQU   TITLEKEY+12                                              01568000
ERRORRTN EQU   0                                                        01569000
OUTBUFR  EQU   0                                                        01570000
DATAPART EQU   OUTBUFR+1                                                01571000
ADDRESS  EQU   DATAPART                                                 01572000
STOKEY   EQU   DATAPART+7                                               01573000
STOKEY1  EQU   STOKEY                                                   01574000
FIELD1   EQU   DATAPART+10                                              01575000
FIELD2   EQU   DATAPART+48                                              01576000
ASTR1    EQU   DATAPART+86                                              01577000
EBCDIC   EQU   DATAPART+87                                              01578000
ASTR2    EQU   DATAPART+119                                             01579000
AOUTBUFR EQU   0                                                        01580000
ADATAPRT EQU   AOUTBUFR+1                                               01581000
AFIELD1  EQU   ADATAPRT+7                                               01582000
AEBCDIC  EQU   ADATAPRT+139                                             01583000
CPUSTAT  EQU   0                                                        01584000
CPUFLAGS EQU   CPUSTAT                                                  01585000
CPUGPRS  EQU   CPUFLAGS                                                 01586000
CPUFLPT  EQU   CPUSTAT+4                                                01587000
CPUREGS  EQU   CPUSTAT+36                                               01588000
CPUPSW1  EQU   CPUSTAT+164                                              01589000
CPUPSW2  EQU   CPUSTAT+168                                              01590000
TOAREA   EQU   0                                                        01591000
FROM     EQU   0                                                        01592000
BUFPRFX  EQU   0                                                        01593000
KEY1     EQU   BUFPRFX                                                  01594000
KEY2     EQU   BUFPRFX+1                                                01595000
BUFASID  EQU   BUFPRFX+2                                                01596000
REALAD   EQU   BUFPRFX+4                                                01597000
PRESLINE EQU   0                                                        01598000
DATAHLF1 EQU   PRESLINE                                                 01599000
PCB      EQU   0                                                        01600000
PCBLINK  EQU   PCB                                                      01601000
PCBSTART EQU   PCB+4                                                    01602000
PCBSTOP  EQU   PCB+8                                                    01603000
PCBASID  EQU   PCB+12                                                   01604000
LINESKIP EQU   0                                                        01605000
MESSAGE  EQU   DATAPART                                                 01606000
PSW      EQU   DATAPART                                                 01607000
PSWHEADR EQU   PSW                                                      01608000
PSWWORD1 EQU   PSW+13                                                   01609000
PSWWORD2 EQU   PSW+23                                                   01610000
REGS     EQU   DATAPART                                                 01611000
REGHEADR EQU   REGS                                                     01612000
@NM00062 EQU   REGS+13                                                  01613000
REGWORD  EQU   @NM00062                                                 01614000
@NM00065 EQU   REGS+72                                                  01615000
REGWORD2 EQU   @NM00065                                                 01616000
FLPTREGS EQU   DATAPART                                                 01617000
FREG1    EQU   FLPTREGS+13                                              01618000
FREG2    EQU   FLPTREGS+35                                              01619000
ASIDPLC  EQU   TOPICHDR+5                                               01620000
INPASIDC EQU   PCBPASID                                                 01621000
ADDR1    EQU   CRNTLINE                                                 01622000
ADDR2    EQU   CRNTOFF                                                  01623000
THISKEY1 EQU   THISKEY                                                  01624000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01625000
@NM00067 EQU   FLPTREGS+31                                              01626000
FLHDR    EQU   FLPTREGS                                                 01627000
@NM00066 EQU   @NM00065+9                                               01628000
@NM00064 EQU   REGS+65                                                  01629000
@NM00063 EQU   @NM00062+9                                               01630000
@NM00061 EQU   PSW+22                                                   01631000
@NM00060 EQU   PSW+11                                                   01632000
PCBRESV  EQU   PCB+15                                                   01633000
PCBFLAG  EQU   PCB+14                                                   01634000
DATAHLF2 EQU   PRESLINE+16                                              01635000
@NM00073 EQU   CPUSTAT+172                                              01636000
@NM00072 EQU   CPUREGS                                                  01637000
@NM00071 EQU   CPUFLPT                                                  01638000
CPUCPU   EQU   CPUSTAT+2                                                01639000
@NM00070 EQU   CPUSTAT+1                                                01640000
@NM00069 EQU   CPUFLAGS                                                 01641000
@NM00068 EQU   CPUFLAGS                                                 01642000
AFIELD4  EQU   ADATAPRT+106                                             01643000
AFIELD3  EQU   ADATAPRT+73                                              01644000
AFIELD2  EQU   ADATAPRT+40                                              01645000
@NM00059 EQU   ADATAPRT+6                                               01646000
AADDRESS EQU   ADATAPRT                                                 01647000
APRCNTRL EQU   AOUTBUFR                                                 01648000
@NM00058 EQU   DATAPART+120                                             01649000
@NM00057 EQU   DATAPART+9                                               01650000
@NM00056 EQU   DATAPART+6                                               01651000
PRCONTRL EQU   OUTBUFR                                                  01652000
@NM00055 EQU   TITLEKEY                                                 01653000
I380080  EQU   I3800SW                                                  01654000
I3800ULN EQU   I3800SW                                                  01655000
@NM00054 EQU   I3800SW                                                  01656000
@NM00053 EQU   I3800SW                                                  01657000
@NM00052 EQU   I3800SW                                                  01658000
@NM00051 EQU   I3800SW                                                  01659000
CSADDR   EQU   COMMON+2072                                              01660000
@NM00050 EQU   COMMON+2070                                              01661000
DFLTCSA  EQU   COMMON+2056                                              01662000
LPAMAX   EQU   COMMON+2052                                              01663000
DNUCTOP  EQU   COMMON+2048                                              01664000
XLMAX    EQU   COMMON+2044                                              01665000
DQEMAX   EQU   COMMON+2042                                              01666000
ASCBMAX  EQU   COMMON+2040                                              01667000
TCBMAX   EQU   COMMON+2038                                              01668000
SRBMAX   EQU   COMMON+2036                                              01669000
DDMAX    EQU   COMMON+2034                                              01670000
DEBMAX   EQU   COMMON+2032                                              01671000
JPQMAX   EQU   COMMON+2030                                              01672000
LLEMAX   EQU   COMMON+2028                                              01673000
PQEMAX   EQU   COMMON+2026                                              01674000
RBMAX    EQU   COMMON+2024                                              01675000
@NM00049 EQU   COMMON+2023                                              01676000
EXITFLAG EQU   COMMON+2022                                              01677000
AUSRASID EQU   COMMON+2020                                              01678000
AUSRTCBA EQU   COMMON+2016                                              01679000
AUSRDEL  EQU   COMMON+2012                                              01680000
AUSREXIT EQU   COMMON+2008                                              01681000
AUSRINIT EQU   COMMON+2004                                              01682000
ASRBFMT  EQU   COMMON+2000                                              01683000
AASCBFMT EQU   COMMON+1996                                              01684000
BRRDADJ  EQU   COMMON+1992                                              01685000
BRRDINIT EQU   COMMON+1988                                              01686000
BUFERMAP EQU   COMMON+1980                                              01687000
ASCBMAP  EQU   COMMON+1976                                              01688000
CPUMAP   EQU   COMMON+1972                                              01689000
ASIDNDX  EQU   COMMON+1968                                              01690000
@NM00048 EQU   COMMON+1964                                              01691000
HDRTITLE EQU   COMMON+1864                                              01692000
HDRREGS  EQU   COMMON+1696                                              01693000
SACSWCAW EQU   COMMON+1684                                              01694000
ASVTADDR EQU   COMMON+1680                                              01695000
PREFXRGV EQU   COMMON+1676                                              01696000
PREFXRGR EQU   COMMON+1672                                              01697000
CURASCB  EQU   COMMON+1668                                              01698000
QASID    EQU   COMMON+1664                                              01699000
QAPFT    EQU   COMMON+1660                                              01700000
@NM00047 EQU   COMMON+1656                                              01701000
REALMAX  EQU   COMMON+1652                                              01702000
SEGTABOR EQU   COMMON+1648                                              01703000
@NM00046 EQU   COMMON+1641                                              01704000
EDITER   EQU   COMMON+1640                                              01705000
AROOT    EQU   COMMON+1636                                              01706000
AEDITCB  EQU   COMMON+1632                                              01707000
TRCCOUNT EQU   COMMON+1628                                              01708000
ASYSUDCB EQU   @NM00044+1                                               01709000
ENDLIST  EQU   @NM00045                                                 01710000
AINDCB   EQU   DCBADDRS+12                                              01711000
ARDRDCB  EQU   DCBADDRS+8                                               01712000
APTRDCB  EQU   DCBADDRS+4                                               01713000
AOUTDCB  EQU   DCBADDRS                                                 01714000
ATCBSMRY EQU   COMMON+1604                                              01715000
ATCBSMFR EQU   COMMON+1600                                              01716000
ONGOPTR  EQU   COMMON+1596                                              01717000
AEND     EQU   COMMON+1592                                              01718000
AERRMSGA EQU   COMMON+1584                                              01719000
BUFREINT EQU   COMMON+1580                                              01720000
BUFSUM   EQU   COMMON+1576                                              01721000
AFORMAT  EQU   COMMON+1568                                              01722000
ASTPROUT EQU   COMMON+1564                                              01723000
ATCBRTRV EQU   COMMON+1556                                              01724000
ATCBREMV EQU   COMMON+1552                                              01725000
ATCBSAVE EQU   COMMON+1548                                              01726000
QATMERTN EQU   COMMON+1544                                              01727000
ALOADER  EQU   COMMON+1540                                              01728000
AEREXIT  EQU   COMMON+1536                                              01729000
SYNMSGA  EQU   COMMON+1532                                              01730000
ARGNBND  EQU   COMMON+1524                                              01731000
AWRDCNVT EQU   COMMON+1520                                              01732000
AADRCNVT EQU   COMMON+1516                                              01733000
AFMTLINE EQU   COMMON+1512                                              01734000
ASYNTAX  EQU   COMMON+1508                                              01735000
APRTMSG  EQU   COMMON+1504                                              01736000
NONBLNK  EQU   COMMON+1244                                              01737000
BLNK     EQU   COMMON+988                                               01738000
@NM00043 EQU   COMMON+972                                               01739000
@NM00042 EQU   COMMON+915                                               01740000
@NM00041 EQU   HEXTABL                                                  01741000
@NM00040 EQU   TABLE                                                    01742000
CAPTABL  EQU   COMMON+403                                               01743000
TITLEPGE EQU   COMMON+394                                               01744000
@NM00039 EQU   COMMON+392                                               01745000
TITLETME EQU   COMMON+379                                               01746000
@NM00038 EQU   COMMON+377                                               01747000
TITLEDTE EQU   COMMON+364                                               01748000
@NM00037 EQU   COMMON+362                                               01749000
TITLEMOD EQU   COMMON+347                                               01750000
TITLEMSG EQU   COMMON+283                                               01751000
MSG2     EQU   COMMON+257                                               01752000
MSG1     EQU   COMMON+231                                               01753000
STOP     EQU   COMMON+227                                               01754000
TITLE    EQU   COMMON+222                                               01755000
BLANKS   EQU   COMMON+214                                               01756000
WTORMSG  EQU   COMMON+133                                               01757000
@NM00036 EQU   COMMON+130                                               01758000
@NM00035 EQU   PRSW                                                     01759000
@NM00034 EQU   PRSW                                                     01760000
PRNTRL   EQU   PRSW                                                     01761000
TTLSW    EQU   PRSW                                                     01762000
@NM00033 EQU   PRSW                                                     01763000
QSEGTBSW EQU   PRSW                                                     01764000
@NM00032 EQU   PRSW                                                     01765000
@NM00031 EQU   BUFSW                                                    01766000
PREFM    EQU   BUFSW                                                    01767000
@NM00030 EQU   BUFSW                                                    01768000
@NM00029 EQU   BUFSW                                                    01769000
@NM00028 EQU   BUFSW                                                    01770000
@NM00027 EQU   BUFSW                                                    01771000
@NM00026 EQU   BUFSW                                                    01772000
@NM00025 EQU   BUFSW                                                    01773000
@NM00024 EQU   SWF                                                      01774000
QUT1LOD  EQU   SWF                                                      01775000
@NM00023 EQU   SWF                                                      01776000
PAGEOK   EQU   SWF                                                      01777000
DMPIC    EQU   SWF                                                      01778000
QSADMP   EQU   SWF                                                      01779000
NUCTFRMC EQU   SWF                                                      01780000
QPRDINIT EQU   SWF                                                      01781000
@NM00022 EQU   SWE                                                      01782000
@NM00021 EQU   SWE                                                      01783000
@NM00020 EQU   SWE                                                      01784000
BUILDMAP EQU   SWE                                                      01785000
TITLESW  EQU   SWE                                                      01786000
RESPC    EQU   SWE                                                      01787000
@NM00019 EQU   SWE                                                      01788000
STOPSW   EQU   SWE                                                      01789000
@NM00018 EQU   SWD                                                      01790000
CONTSW   EQU   SWD                                                      01791000
NOLOADSW EQU   SWD                                                      01792000
NOSTDMG  EQU   SWD                                                      01793000
@NM00017 EQU   SWD                                                      01794000
@NM00016 EQU   SWD                                                      01795000
FLSHMODE EQU   SWD                                                      01796000
@NM00015 EQU   SWC                                                      01797000
@NM00014 EQU   SWC                                                      01798000
@NM00013 EQU   SWC                                                      01799000
EDITSW   EQU   SWC                                                      01800000
TREADIN  EQU   SWC                                                      01801000
POSITSW  EQU   SWC                                                      01802000
SETFLSH  EQU   SWC                                                      01803000
MSTRSW   EQU   SWC                                                      01804000
@NM00012 EQU   SWB                                                      01805000
@NM00011 EQU   SWB                                                      01806000
QSYSUT2  EQU   SWB                                                      01807000
ENDSW    EQU   SWB                                                      01808000
@NM00010 EQU   SWB                                                      01809000
@NM00009 EQU   SWB                                                      01810000
FMTERR   EQU   SWB                                                      01811000
RDRSW    EQU   SWA                                                      01812000
SETCVTSW EQU   SWA                                                      01813000
@NM00008 EQU   SWA                                                      01814000
GOSW     EQU   SWA                                                      01815000
@NM00007 EQU   SWA                                                      01816000
@NM00006 EQU   SWA                                                      01817000
@NM00005 EQU   SWA                                                      01818000
@NM00004 EQU   SWA                                                      01819000
LINENUM  EQU   COMMON+120                                               01820000
LINENUMB EQU   COMMON+118                                               01821000
SIXTEEN  EQU   COMMON+116                                               01822000
TWELVE   EQU   COMMON+114                                               01823000
ELEVEN   EQU   COMMON+112                                               01824000
HTEN     EQU   COMMON+110                                               01825000
EIGHT    EQU   COMMON+108                                               01826000
SEVEN    EQU   COMMON+106                                               01827000
FIVE     EQU   COMMON+104                                               01828000
FOUR     EQU   COMMON+102                                               01829000
THREE    EQU   COMMON+100                                               01830000
TWO      EQU   COMMON+98                                                01831000
ONEA     EQU   COMMON+96                                                01832000
READTM   EQU   COMMON+92                                                01833000
RDERCNT  EQU   COMMON+88                                                01834000
READNO   EQU   COMMON+84                                                01835000
RDENTRY  EQU   COMMON+80                                                01836000
@NM00003 EQU   COMMON+78                                                01837000
FILESEQ  EQU   COMMON+76                                                01838000
INDD     EQU   COMMON+68                                                01839000
STORSIZE EQU   COMMON+64                                                01840000
CVTADDR  EQU   COMMON+56                                                01841000
TCBLIST  EQU   COMMON+52                                                01842000
PAGENUMB EQU   COMMON+44                                                01843000
LINECNT  EQU   COMMON+40                                                01844000
SIX      EQU   COMMON+36                                                01845000
NUCTOP   EQU   COMMON+32                                                01846000
DELIMCD  EQU   COMMON+20                                                01847000
KYWDEND  EQU   COMMON+16                                                01848000
KYWDBGN  EQU   COMMON+12                                                01849000
VERBEND  EQU   COMMON+8                                                 01850000
VERBGN   EQU   COMMON+4                                                 01851000
@NM00002 EQU   PCBPFLG2                                                 01852000
@NM00001 EQU   PCBPFLG1                                                 01853000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01854000
@RT00184 EQU   NRCLMD                                                   01855000
@RC00213 EQU   @RC00211                                                 01856000
@RF00263 EQU   BLOCKEND                                                 01857000
@RC00339 EQU   @EL00003                                                 01858000
@RC00337 EQU   @EL00003                                                 01859000
@RC00424 EQU   @RC00394                                                 01860000
@RC00396 EQU   @RC00394                                                 01861000
@RC00370 EQU   @EL00006                                                 01862000
@RC00456 EQU   @EL00006                                                 01863000
@RC00398 EQU   @RC00396                                                 01864000
@RC00416 EQU   @RC00396                                                 01865000
@RC00426 EQU   @RC00424                                                 01866000
@ENDDATA EQU   *                                                        01867000
         END   AMDPRDPS,(C'PLS1823',0603,76069)                         01868000
