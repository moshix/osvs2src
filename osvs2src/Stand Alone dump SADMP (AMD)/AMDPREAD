         TITLE 'AMDPREAD - AMDPRDMP READ ROUTINE                       *00001000
                        '                                               00002000
AMDPREAD CSECT ,                                                   0001 00003000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00004000
         BALR  @11,0                                               0001 00005000
@PSTART  DS    0H                                                  0001 00006000
         USING @PSTART,@11                                         0001 00007000
         ST    @13,@SA00001+4                                      0001 00008000
         LA    @14,@SA00001                                        0001 00009000
         ST    @14,8(,@13)                                         0001 00010000
         LR    @13,@14                                             0001 00011000
         DCBD  DSORG=BS,DEVD=(DA,TA)                                    00012000
AMDPREAD CSECT                                                          00013000
         USING IHADCB,R3                                                00014000
*   PARMPTR=REG1;                   /* SET UP PARM LIST PTR          */ 00015000
         LR    PARMPTR,REG1                                        0091 00016000
*   RESPECIFY                                                      0092 00017000
*     REG1 UNRESTRICTED;            /* UNRESTRICT PARM REGISTER    0092 00018000
*                                      Y02006                        */ 00019000
*   SWITCHES=BYTEOFF;               /* TURN OFF ALL SWITCHES         */ 00020000
         MVI   SWITCHES,X'00'                                      0093 00021000
*   IF BUILDMAP=SWTCHOFF THEN       /* IS THIS A MAPBUILD REQUEST    */ 00022000
         TM    BUILDMAP(COMPTR),B'00001000'                        0094 00023000
         BZ    @RT00094                                            0094 00024000
*     GO TO TYPEREAD;               /* NO--THEN READ REQUESTED RECORD*/ 00025000
*                                                                  0096 00026000
*/********************************************************************/ 00027000
*/*                                                                  */ 00028000
*/*           PERFORM TAPE OR DA INITIALIZATION FOR MAP BUILD.       */ 00029000
*/*           CHECK FILE SEQUENCE NUMBER                             */ 00030000
*/*           AND DDNAME SPECIFIED IN COMMON. OPEN                   */ 00031000
*/*           INPUT DCB.                                             */ 00032000
*/*                                                                  */ 00033000
*/********************************************************************/ 00034000
*                                                                  0096 00035000
*TAPEINIT:                                                         0096 00036000
*   REG3=ADDR(INDCB);               /* BASE TAPE INPUT DCB           */ 00037000
TAPEINIT LA    REG3,INDCB                                          0096 00038000
*   VOLINDD=VOLNO1;                 /* RESET INDD VOLUME NUMBER      */ 00039000
         MVI   VOLINDD,X'01'                                       0097 00040000
*   IF TREADIN=SWTCHOFF THEN                                       0098 00041000
         TM    TREADIN(COMPTR),B'00010000'                         0098 00042000
         BNZ   @RF00098                                            0098 00043000
*     FIRSTTTR=DATTR;               /* SET FIRST TTR FOR DA Y02006   */ 00044000
         MVC   FIRSTTTR(4),@CF00061                                0099 00045000
*   ELSE                                                           0100 00046000
*     FIRSTTTR=TAPETTR;             /* SET FIRST TTR FOR TAPE        */ 00047000
         B     @RC00098                                            0100 00048000
@RF00098 MVC   FIRSTTTR(4),@CF00063                                0100 00049000
*   AINDCB=REG3;                    /* STORE INDCB ADDR IN COMMON    */ 00050000
@RC00098 ST    REG3,AINDCB(,COMPTR)                                0101 00051000
*   INDDREC=0;                      /* INIT. INDD REC/TRK VALUE      */ 00052000
         SLR   @10,@10                                             0102 00053000
         STH   @10,INDDREC                                         0102 00054000
*   DCBDDNAM=INDD;                  /* MOVE DDNAME FROM COMMON IN  0103 00055000
*                                      CASE OF NEWDUMP STATEMENT     */ 00056000
         MVC   DCBDDNAM(8),INDD(COMPTR)                            0103 00057000
*/********************************************************************/ 00058000
*/*                                                                  */ 00059000
*/*           READ JFCB TO DETERMINE PROPER POSITIONING              */ 00060000
*/*           IN CASE OF NEWDUMP STATEMENT WITH                      */ 00061000
*/*           DIFFERENT FILE SEQUENCE NUMBER.  OVERRIDE              */ 00062000
*/*           JFCB BUFFER NUMBER BY SETTING TO 0. OPEN               */ 00063000
*/*           DATA SET AND PERFORM SOME INITIALIZATION.              */ 00064000
*/*                                                                  */ 00065000
*/********************************************************************/ 00066000
*                                                                  0104 00067000
*   GEN(RDJFCB MF=(E,DCBLST));      /* READ JFCB FOR FILE POSITIONING*/ 00068000
         RDJFCB MF=(E,DCBLST)                                           00069000
*   IF FILESEQ^=0 THEN              /* TEST TO INSURE THAT A FILE  0105 00070000
*                                      SEQ-NO ON DD IS NOT IGNORED   */ 00071000
         LH    @10,FILESEQ(,COMPTR)                                0105 00072000
         LTR   @10,@10                                             0105 00073000
         BZ    @RF00105                                            0105 00074000
*     JFCBFLSQ=FILESEQ;             /* MOVE FILE SEQ-NO FROM COMMON  */ 00075000
         LA    @04,JFCBBUF                                         0106 00076000
         STH   @10,JFCBFLSQ+68(,@04)                               0106 00077000
*   JFCBUFNO=BYTEOFF;               /* SET BUFFER NO. TO ZERO        */ 00078000
@RF00105 LA    @10,JFCBBUF                                         0107 00079000
         MVI   JFCBUFNO+88(@10),X'00'                              0107 00080000
*   JFCBMASK(33)=SWTCHOFF;          /* SUPPRESS WRITING JFCB         */ 00081000
         NI    JFCBMASK+76(@10),B'01111111'                        0108 00082000
*   JFCBTSDM='08'X;                 /* BACK TO JOB QUEUE             */ 00083000
         MVI   JFCBTSDM+52(@10),X'08'                              0109 00084000
*   GEN;                                                           0110 00085000
         OPEN  (,(INPUT,REREAD)),MF=(E,DCBLST),TYPE=J                   00086000
*   OPENJ=SWITCHON;                 /* INDICATE OPEN TYPE=J REQUIRED */ 00087000
         OI    OPENJ,B'00000100'                                   0111 00088000
*                                                                  0112 00089000
*/********************************************************************/ 00090000
*/*                                                                  */ 00091000
*/*           PERFORM INITIALIZATION FOR MAP BUILD                   */ 00092000
*/*                                                                  */ 00093000
*/********************************************************************/ 00094000
*                                                                  0112 00095000
*MAPINIT:                                                          0112 00096000
*   CURVOL=0;                       /* SET CURRENT VOLUME TO ZERO    */ 00097000
MAPINIT  SLR   @08,@08                                             0112 00098000
         STH   @08,CURVOL                                          0112 00099000
*   CURASID=INITASID;               /* INITIALIZE LAST ASID SO NEW 0113 00100000
*                                      MAP ENTRY WILL BE OBTAINED  0113 00101000
*                                      Y02006                        */ 00102000
         MVC   CURASID(2),@CB00067                                 0113 00103000
*   CURADDR=INITADDR;               /* INITALIZE LAST ADDRESS SO NEW    00104000
*                                      MAP ENTRY WILL BE OBTAINED  0114 00105000
*                                      Y02006                        */ 00106000
         MVC   CURADDR(4),@CB00069                                 0114 00107000
*   MAPERROR=0;                     /* ZERO ERROR COUNT              */ 00108000
         STH   @08,MAPERROR                                        0115 00109000
*   POSTIPL=0;                      /* ZERO POST IPL REC COUNT Y02006*/ 00110000
         STH   @08,POSTIPL                                         0116 00111000
*   SVCTTR=0;                       /* INITIALIZE SVC TTR FIELD    0117 00112000
*                                      Y02006                        */ 00113000
         ST    @08,SVCTTR                                          0117 00114000
*   RESPECIFY                                                      0118 00115000
*    (REG0,                                                        0118 00116000
*     REG1) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00117000
*   REG0=BUFFSIZE;                  /* SET SIZE FOR GETMAIN Y02006   */ 00118000
         LH    REG0,@CH00038                                       0119 00119000
*   GENERATE(GETMAIN R,LV=(0));     /* ISSUE GETMAIN FOR BUFFER TO 0120 00120000
*                                      KEEP SVC BUFFER RECORD IN   0120 00121000
*                                      Y02006                        */ 00122000
         GETMAIN R,LV=(0)                                               00123000
*   SVCBUFAD=REG1;                  /* SAVE ADDRESS OF BUFFER Y02006 */ 00124000
         ST    REG1,SVCBUFAD                                       0121 00125000
*   RESPECIFY                                                      0122 00126000
*    (REG0,                                                        0122 00127000
*     REG1) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 00128000
*   QPRDINIT=SWITCHON;              /* INDICATE PREAD INITIALIZATION    00129000
*                                      HAS BEEN PERFORMED AFTER A  0123 00130000
*                                      NEWDUMP/NEWTAPE OPERATION   0123 00131000
*                                      Y02006                        */ 00132000
         OI    QPRDINIT(COMPTR),B'10000000'                        0123 00133000
*   LASTMAP=0;                      /* FOR PLS OPTIMIZATION Y02006   */ 00134000
         SLR   LASTMAP,LASTMAP                                     0124 00135000
*   CURMAP=0;                       /* FOR PLS OPTIMIZATION Y02006   */ 00136000
         SLR   CURMAP,CURMAP                                       0125 00137000
*/********************************************************************/ 00138000
*/*                                                                  */ 00139000
*/*           PURGE ANY EXISTING DUMP MAPS, AND                      */ 00140000
*/*           THE ASID INDEX, IF IT EXISTS.                          */ 00141000
*/*                                                                  */ 00142000
*/********************************************************************/ 00143000
*                                                                  0126 00144000
*DUMPMAP:                                                          0126 00145000
*   MAPSW=SWITCHON;                 /* INDICATE DUMPMAP IN PROCESS 0126 00146000
*                                      Y02006                        */ 00147000
DUMPMAP  OI    MAPSW,B'10000000'                                   0126 00148000
*   IF REALMAP^=0 THEN              /* IS THERE A REAL MAP Y02006    */ 00149000
         L     @08,REALMAP(,COMPTR)                                0127 00150000
         LTR   @08,@08                                             0127 00151000
         BZ    @RF00127                                            0127 00152000
*     DO;                           /* YES                           */ 00153000
*       MAPPTR=REALMAP;             /* POINT TO REAL MAP             */ 00154000
         LR    MAPPTR,@08                                          0129 00155000
*       CALL MAPPRG;                /* PURGE REAL MAP ENTRIES        */ 00156000
         BAL   @14,MAPPRG                                          0130 00157000
*       REALMAP=0;                  /* SET REALMAP PTR IN COMMON TO 0*/ 00158000
         SLR   @08,@08                                             0131 00159000
         ST    @08,REALMAP(,COMPTR)                                0131 00160000
*     END;                                                         0132 00161000
*   IF CPUMAP^=0 THEN               /* IS THERE A CPU MAP Y02006     */ 00162000
@RF00127 L     @08,CPUMAP(,COMPTR)                                 0133 00163000
         LTR   @08,@08                                             0133 00164000
         BZ    @RF00133                                            0133 00165000
*     DO;                           /* YES                           */ 00166000
*       MAPPTR=CPUMAP;              /* POINT TO CPU MAP Y02006       */ 00167000
         LR    MAPPTR,@08                                          0135 00168000
*       CALL MAPPRG;                /* PURGE CPU MAP ENTRIES         */ 00169000
         BAL   @14,MAPPRG                                          0136 00170000
*       CPUMAP=0;                   /* SET CPUMAP PTR IN COMMON TO 0    00171000
*                                      Y02006                        */ 00172000
         SLR   @08,@08                                             0137 00173000
         ST    @08,CPUMAP(,COMPTR)                                 0137 00174000
*     END;                                                         0138 00175000
*   INDXADDR=ASIDNDX;               /* SET PTR TO FIRST ASID INDEX 0139 00176000
*                                      Y02006                        */ 00177000
@RF00133 MVC   INDXADDR(4),ASIDNDX(COMPTR)                         0139 00178000
*   ASIDNDX=0;                      /* SET ASID INDEX PTR IN COMMON     00179000
*                                      TO ZERO Y02006                */ 00180000
         SLR   @08,@08                                             0140 00181000
         ST    @08,ASIDNDX(,COMPTR)                                0140 00182000
*CHKASID:                                                          0141 00183000
*   IF INDXADDR=0 THEN              /* ASID INDEX EXIST Y02006       */ 00184000
CHKASID  ICM   @08,15,INDXADDR                                     0141 00185000
         BZ    @RT00141                                            0141 00186000
*     GO TO MAPREAD;                /* NO - BEGIN MAP BUILD PROCESS  */ 00187000
*   DO I=1 TO ASIDCNT;                                             0143 00188000
         LA    I,1                                                 0143 00189000
@DL00143 DS    0H                                                  0144 00190000
*     MAPPTR=ASDXMAP(I);            /* POINT TO FIRST DUMPMAP ENTRY     00191000
*                                      Y02006                        */ 00192000
         LR    @08,I                                               0144 00193000
         SLA   @08,2                                               0144 00194000
         L     @06,INDXADDR                                        0144 00195000
         L     MAPPTR,ASDXMAP-4(@08,@06)                           0144 00196000
*     IF MAPPTR^=0 THEN             /* ANY MAP TO PURGE Y02006       */ 00197000
         LTR   MAPPTR,MAPPTR                                       0145 00198000
         BZ    @RF00145                                            0145 00199000
*       CALL MAPPRG;                /* PURGE VIRTUAL DUMP MAP ENTRIES*/ 00200000
         BAL   @14,MAPPRG                                          0146 00201000
*   END;                                                           0147 00202000
@RF00145 AH    I,@CH00042                                          0147 00203000
         CH    I,@CH00065                                          0147 00204000
         BNH   @DL00143                                            0147 00205000
*   RESPECIFY                                                      0148 00206000
*    (REG0,                                                        0148 00207000
*     REG1) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00208000
*   REG0=LENGTH(ASIDLIST);          /* SIZE OF ASID INDEX Y02006     */ 00209000
         LA    REG0,112                                            0149 00210000
*   REG1=INDXADDR;                  /* ADDRESS OF ASID INDEX Y02006  */ 00211000
         L     @08,INDXADDR                                        0150 00212000
         LR    REG1,@08                                            0150 00213000
*   INDXADDR=ASDXLNK;               /* SAVE PTR TO NEXT ASID INDEX 0151 00214000
*                                      Y02006                        */ 00215000
         L     @08,ASDXLNK(,@08)                                   0151 00216000
         ST    @08,INDXADDR                                        0151 00217000
*   GENERATE(FREEMAIN R,LV=(0),A=(1));/* FREE ASID INDEX Y02006      */ 00218000
         FREEMAIN R,LV=(0),A=(1)                                        00219000
*   RESPECIFY                                                      0153 00220000
*    (REG0,                                                        0153 00221000
*     REG1) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 00222000
*   GO TO CHKASID;                  /* LOOP TO FREE ALL ASID INDESES    00223000
*                                      Y02006                        */ 00224000
         B     CHKASID                                             0154 00225000
*                                                                  0155 00226000
*/********************************************************************/ 00227000
*/*                                                                  */ 00228000
*/*           MAP PURGE ROUTINE -                                    */ 00229000
*/*                                                                  */ 00230000
*/*                   PURGE MAP BEGINNING WITH CURRENT               */ 00231000
*/*                   ENTRY, FOLLOWING LINK FIELD TILL               */ 00232000
*/*                   END OF MAP. MAPPTR IS INPUT,                   */ 00233000
*/*                   POINTING TO THE FIRST MAP ENTRY TO             */ 00234000
*/*                   BE PURGED.                                     */ 00235000
*/*                                                                  */ 00236000
*/********************************************************************/ 00237000
*                                                                  0155 00238000
*MAPPRG:                                                           0155 00239000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0155 00240000
MAPPRG   DS    0H                                                  0156 00241000
*   N1=1;                           /* SET LOOP CONTROL TO NON-ZERO  */ 00242000
         LA    N1,1                                                0156 00243000
*   DO WHILE(N1^=0);                /* LOOP TO FREE EACH ENTRY Y02006*/ 00244000
         B     @DE00157                                            0157 00245000
@DL00157 DS    0H                                                  0158 00246000
*     N1=DUMPLINK;                  /* NO - SAVE LINK FIELD          */ 00247000
         SLR   N1,N1                                               0158 00248000
         ICM   N1,7,DUMPLINK(MAPPTR)                               0158 00249000
*     RESPECIFY                                                    0159 00250000
*      (REG0,                                                      0159 00251000
*       REG1) RESTRICTED;           /* RESTRICT REGISTERS Y02006     */ 00252000
*     REG1=MAPPTR;                                                 0160 00253000
         LR    REG1,MAPPTR                                         0160 00254000
*     REG0=DUMPFRMS;                /* FREE CURRENT DUMP MAP ENTRY   */ 00255000
         LA    REG0,16                                             0161 00256000
*     GENERATE(FREEMAIN R,LV=(0),A=(1));                           0162 00257000
         FREEMAIN R,LV=(0),A=(1)                                        00258000
*     RESPECIFY                                                    0163 00259000
*      (REG0,                                                      0163 00260000
*       REG1) UNRESTRICTED;         /* UNRESTRICT REGISTERS Y02006   */ 00261000
*     MAPPTR=N1;                    /* MAKE NEXT ENTRY CURRENT       */ 00262000
         LR    MAPPTR,N1                                           0164 00263000
*   END;                                                           0165 00264000
@DE00157 LTR   N1,N1                                               0165 00265000
         BNZ   @DL00157                                            0165 00266000
*   END MAPPRG;                     /* RETURN TO CALLER              */ 00267000
@EL00002 DS    0H                                                  0166 00268000
@EF00002 DS    0H                                                  0166 00269000
@ER00002 BR    @14                                                 0166 00270000
*                                                                  0167 00271000
*/********************************************************************/ 00272000
*/*                                                                  */ 00273000
*/*           SCAN FOR HEADER RECORD, AND WHEN FOUND,                */ 00274000
*/*           BEGIN BUILDING MAP OF DATA RECORDS.                    */ 00275000
*/*                                                                  */ 00276000
*/********************************************************************/ 00277000
*                                                                  0167 00278000
*MAPREAD:                                                          0167 00279000
*   IF HDRSW=SWITCHON&BUFFLINK^=0 THEN/* USE NEXT BUFFER ONLY IF A 0167 00280000
*                                      HEADER HAS BEEN READ AND THERE   00281000
*                                      IS ANOTHER BUFFER       Y02006*/ 00282000
MAPREAD  TM    HDRSW,B'01000000'                                   0167 00283000
         BNO   @RF00167                                            0167 00284000
         L     @08,BUFFLINK(,PARMPTR)                              0167 00285000
         LTR   @08,@08                                             0167 00286000
         BZ    @RF00167                                            0167 00287000
*     DO;                                                          0168 00288000
*       PARMPTR=BUFFLINK;           /* SET POINTER TO NEXT BUFFER MAP   00289000
*                                      ENTRY Y02006                  */ 00290000
         LR    PARMPTR,@08                                         0169 00291000
*       IOERR=SWTCHOFF;             /* RESET I/O ERROR SWITCH ONLY ON   00292000
*                                      USE OF A NEW BUFFER (NEEDED 0170 00293000
*                                      FOR CPU RECS) Y02006          */ 00294000
         NI    IOERR(COMPTR),B'01111111'                           0170 00295000
*     END;                                                         0171 00296000
*   ELSE                                                           0172 00297000
*     DO;                                                          0172 00298000
         B     @RC00167                                            0172 00299000
@RF00167 DS    0H                                                  0173 00300000
*       BUFFREAL=ALLFOX;            /* RESET REAL ADDRESS Y02006     */ 00301000
         SLR   @08,@08                                             0173 00302000
         BCTR  @08,0                                               0173 00303000
         ST    @08,BUFFREAL(,PARMPTR)                              0173 00304000
*       BUFFVIRT=ALLFOX;            /* RESET VIRTUAL ADDRESS Y02006  */ 00305000
         ST    @08,BUFFVIRT(,PARMPTR)                              0174 00306000
*       BUFFASID=ALLFOX2;           /* RESET ASID Y02006             */ 00307000
         MVC   BUFFASID(2,PARMPTR),@CB00053                        0175 00308000
*       BUFFCPU=ALLFOX2;            /* RESET CPU ADDRESS Y02006      */ 00309000
         MVC   BUFFCPU(2,PARMPTR),@CH00053                         0176 00310000
*       BUFFFLAG=BYTEOFF;           /* RESET FLAGS Y02006            */ 00311000
         MVI   BUFFFLAG(PARMPTR),X'00'                             0177 00312000
*       DMPIC=SWTCHOFF;             /* INDICATE DUMP DOES NOT FIT  0178 00313000
*                                      INTO ALL THE BUFFERS Y02006   */ 00314000
         NI    DMPIC(COMPTR),B'11101111'                           0178 00315000
*     END;                          /* NOW REUSE THE SAME BUFFER   0179 00316000
*                                      Y02006                        */ 00317000
*   RESPECIFY                                                      0180 00318000
*    (REG0,                                                        0180 00319000
*     REG1) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00320000
@RC00167 DS    0H                                                  0181 00321000
*MAPREAD1:                                                         0181 00322000
*   REG0=BUFFPTR;                   /* SET INPUT BUFFER ADDRESS      */ 00323000
MAPREAD1 SLR   REG0,REG0                                           0181 00324000
         ICM   REG0,7,BUFFPTR(PARMPTR)                             0181 00325000
*   GENERATE FLOWS(IOERROR);                                       0182 00326000
         READ  MAPDECB,SF,(R3),(REG0),'S' READ RECORD INTO BUFFER       00327000
         CHECK MAPDECB                                                  00328000
         NOTE  (R3)                    NOTE POSITION OF RECORD READ     00329000
*   TTRNO=REG1;                     /* SAVE NOTED POSITION           */ 00330000
         ST    REG1,TTRNO                                          0183 00331000
*   RESPECIFY                                                      0184 00332000
*    (REG0,                                                        0184 00333000
*     REG1) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 00334000
*   LASTVOL=CURVOL;                 /* SAVE LAST VOLUME NUMBER TO  0185 00335000
*                                      TEST IF IT CHANGED Y02006     */ 00336000
         LH    @04,CURVOL                                          0185 00337000
         LR    LASTVOL,@04                                         0185 00338000
*   IF TTRNO=FIRSTTTR THEN          /* DID VOLUME SWITCH OCCUR Y02006*/ 00339000
         L     @15,TTRNO                                           0186 00340000
         C     @15,FIRSTTTR                                        0186 00341000
         BNE   @RF00186                                            0186 00342000
*     CURVOL=CURVOL+1;              /* YES - INCREMENT CURRENT VOLUME*/ 00343000
         LA    @04,1(,@04)                                         0187 00344000
         STH   @04,CURVOL                                          0187 00345000
*   IF SYNADSW=SWTCHOFF THEN        /* I/O ERROR ON LAST READ Y02006 */ 00346000
@RF00186 TM    SYNADSW,B'00100000'                                 0188 00347000
         BZ    @RT00188                                            0188 00348000
*     GO TO MAPZERO;                /* NO - CONTINUE PROCESSING      */ 00349000
*/********************************************************************/ 00350000
*/*                                                                  */ 00351000
*/*       I/O ERROR OCCURRED. CHECK IF THE MAXIMUM NUMBER OF         */ 00352000
*/*       CONSECUTIVE I/O ERRORS DURING THE MAP BUILD HAS OCCURRED.  */ 00353000
*/*       IF SO, THEN STOP THE MAP BUILD PROCESS. TERMINATE AMDPRDMP */ 00354000
*/*       PROCESSING IF A HEADER RECORD HAS NOT YET BEEN FOUND.      */ 00355000
*/*       OTHERWISE PROCEED AS IF END OF FILE HAS BEEN REACHED.      */ 00356000
*/*                                                                  */ 00357000
*/********************************************************************/ 00358000
*                                                                  0190 00359000
*   SYNADSW=SWTCHOFF;               /* TURN OFF SYNAD SWITCH Y02006  */ 00360000
         NI    SYNADSW,B'11011111'                                 0190 00361000
*   SVCTTR=0;                       /* INVALIDATE SVC BUFFER TTR   0191 00362000
*                                      Y02006                        */ 00363000
         SLR   @08,@08                                             0191 00364000
         ST    @08,SVCTTR                                          0191 00365000
*   CURADDR=INITADDR;               /* REINITIALIZE LAST ADDRESS   0192 00366000
*                                      Y02006                        */ 00367000
         MVC   CURADDR(4),@CB00069                                 0192 00368000
*   MAPERROR=MAPERROR+1;            /* BUMP CONSECUTIVE I/O ERROR CNT*/ 00369000
         LA    @08,1                                               0193 00370000
         AH    @08,MAPERROR                                        0193 00371000
         STH   @08,MAPERROR                                        0193 00372000
*   IF MAPERROR<MAXIOERR THEN       /* EXCEEDED MAXIMUM NUMBER       */ 00373000
         LA    @04,3                                               0194 00374000
         CR    @08,@04                                             0194 00375000
         BL    @RT00194                                            0194 00376000
*     GO TO MAPREAD;                /* NO - CONTINUE READING         */ 00377000
*   RDERCNT=RDERCNT+MAXIOERR;       /* BUMP I/O ERROR COUNT IN COMMON*/ 00378000
         AL    @04,RDERCNT(,COMPTR)                                0196 00379000
         ST    @04,RDERCNT(,COMPTR)                                0196 00380000
*/********************************************************************/ 00381000
*/*                                                                  */ 00382000
*/*           END OF FILE ROUTINE -                                  */ 00383000
*/*                                                                  */ 00384000
*/*                THIS ROUTINE IS ENTERED AT END                    */ 00385000
*/*                OF FILE ON THE DUMP DATA SET,                     */ 00386000
*/*                WHEN THE MAXIMUM NUMBER OF                        */ 00387000
*/*                CONSECUTIVE I/O ERRORS HAS                        */ 00388000
*/*                OCCURRED DURING THE MAP BUILD,                    */ 00389000
*/*                WHEN A SECOND HEADER RECORD IS FOUND,             */ 00390000
*/*                OR WHEN FIVE RECORDS HAVE BEEN READ               */ 00391000
*/*                WITHOUT FINDING A HEADER RECORD.                  */ 00392000
*/*                                                                  */ 00393000
*/********************************************************************/ 00394000
*                                                                  0197 00395000
*EOF:                                                              0197 00396000
*   CALL DSOPEN;                    /* CLOSE AND RE-OPEN INPUT D.S.  */ 00397000
EOF      BAL   @14,DSOPEN                                          0197 00398000
*   CURVOL=0;                       /* RESET CURRENT VOLUME NUMBER   */ 00399000
         SLR   @10,@10                                             0198 00400000
         STH   @10,CURVOL                                          0198 00401000
*   IF MAPSW=SWTCHOFF THEN          /* DUMPMAP IN PROCESS Y02006     */ 00402000
         TM    MAPSW,B'10000000'                                   0199 00403000
         BZ    @RT00199                                            0199 00404000
*     GO TO ERREXT;                 /* MARK BUFFER INVALID           */ 00405000
*   RESPECIFY                                                      0201 00406000
*    (REG0,                                                        0201 00407000
*     REG1) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00408000
*   REG1=SVCBUFAD;                  /* SET ADDRESS OF STORAGE USED TO   00409000
*                                      SAVE SVC BUFFER Y02006        */ 00410000
         L     REG1,SVCBUFAD                                       0202 00411000
*   REG0=BUFFSIZE;                  /* SET SIZE OF STORAGE TO FREE 0203 00412000
*                                      Y02006                        */ 00413000
         LH    REG0,@CH00038                                       0203 00414000
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREE STORAGE IN WHICH SVC   0204 00415000
*                                      BUFFER WAS SAVED Y02006       */ 00416000
         FREEMAIN R,LV=(0),A=(1)                                        00417000
*   RESPECIFY                                                      0205 00418000
*    (REG0,                                                        0205 00419000
*     REG1) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 00420000
*   MAPSW=SWTCHOFF;                 /* INDICATE DUMPMAP COMPLETE   0206 00421000
*                                      Y02006                        */ 00422000
         NI    MAPSW,B'01111111'                                   0206 00423000
*   RETURN;                         /* RETURN TO AMDPRRDC            */ 00424000
@EL00001 L     @13,4(,@13)                                         0207 00425000
@EF00001 DS    0H                                                  0207 00426000
@ER00001 LM    @14,@12,12(@13)                                     0207 00427000
         BR    @14                                                 0207 00428000
*                                                                  0208 00429000
*/********************************************************************/ 00430000
*/*                                                                  */ 00431000
*/*           THIS CODE IS ENTERED IF A SUCCESSFUL READ              */ 00432000
*/*           HAS BEEN COMPLETED.                                    */ 00433000
*/*           THE LENGTH OF THE RECORD IS CHECKED TO                 */ 00434000
*/*           SEE IF IT IS A PREFORMATTED RECORD, IN                 */ 00435000
*/*           WHICH CASE THE PREFMT ROUTINE IS PASSED                */ 00436000
*/*           CONTROL.  IF THE RECORD IS NOT A                       */ 00437000
*/*           PREFORMATTED RECORD, BUT THE PREFMT                    */ 00438000
*/*           SWITCH IS SET, INDICATING PREVIOUS                     */ 00439000
*/*           PREFORMATTED RECORDS HAVE BEEN FOUND,                  */ 00440000
*/*           THEN CONTROL IS PASSED TO THE ERROR                    */ 00441000
*/*           ROUTINE.                                               */ 00442000
*/*           IF NONE OF THE ABOVE IS TRUE, THE                      */ 00443000
*/*           RECORD IS CHECKED TO SEE IF IT IS A                    */ 00444000
*/*           HEADER RECORD, IN WHICH CASE THE                       */ 00445000
*/*           CONSTRUCTION OF A MAP BEGINS. IF IT                    */ 00446000
*/*           IS NOT A HEADER RECORD, IT IS ASSUMED                  */ 00447000
*/*           TO BE A DATA RECORD OR CPU STATUS RECORD.              */ 00448000
*/*                                                                  */ 00449000
*/********************************************************************/ 00450000
*                                                                  0208 00451000
*MAPZERO:                                                          0208 00452000
*   MAPERROR=0;                     /* RESET I/O ERROR COUNT Y02006  */ 00453000
MAPZERO  SLR   @04,@04                                             0208 00454000
         STH   @04,MAPERROR                                        0208 00455000
*   IF(BUFFSIZE-IOBCSWCT)<=133 THEN /* PREFORMATTED RECORD Y02006    */ 00456000
         L     @01,DCBIOBA                                         0209 00457000
         LH    @15,IOBCSWCT+22(,@01)                               0209 00458000
         LH    @14,@CH00038                                        0209 00459000
         SLR   @14,@15                                             0209 00460000
         CH    @14,@CH00208                                        0209 00461000
         BNH   @RT00209                                            0209 00462000
*     GO TO PREFMT;                 /* YES - PROCESS IT              */ 00463000
*   IF PREFMTSW=SWITCHON THEN       /* IS PREFORMAT SWITCH ON Y02006 */ 00464000
         TM    PREFMTSW,B'00010000'                                0211 00465000
         BO    @RT00211                                            0211 00466000
*     GO TO ERREXT;                 /* YES - ERROR (MIXED RECORDS)   */ 00467000
*   IF IOBCSWCT^=0 THEN             /* SHORT BLOCK Y02006            */ 00468000
         CR    @15,@04                                             0213 00469000
         BE    @RF00213                                            0213 00470000
*     DO;                           /* YES                           */ 00471000
*       POSTIPL=POSTIPL+1;          /* INCREMENT POST IPL COUNT    0215 00472000
*                                      Y02006                        */ 00473000
         LH    @08,POSTIPL                                         0215 00474000
         LA    @08,1(,@08)                                         0215 00475000
         STH   @08,POSTIPL                                         0215 00476000
*       SVCTTR=0;                   /* INDICATE INVALID SVC BUFFER 0216 00477000
*                                      (JUST IN CASE) Y02006         */ 00478000
         ST    @04,SVCTTR                                          0216 00479000
*       CURADDR=INITADDR;           /* REINITIALIZE LAST ADDRESS   0217 00480000
*                                      Y02006                        */ 00481000
         MVC   CURADDR(4),@CB00069                                 0217 00482000
*       GO TO MAPREAD;              /* YES, IGNORE THE RECORD        */ 00483000
         B     MAPREAD                                             0218 00484000
*     END;                                                         0219 00485000
*   IF PRDHDRID^=PRDHDR|PRDRECID^=PRDHDREC THEN/* IS THIS A HEADER 0220 00486000
*                                      RECORD Y02006                 */ 00487000
@RF00213 SLR   @04,@04                                             0220 00488000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0220 00489000
         CLI   PRDHDRID(@04),X'FF'                                 0220 00490000
         BNE   @RT00220                                            0220 00491000
         CLI   PRDRECID(@04),X'FF'                                 0220 00492000
         BNE   @RT00220                                            0220 00493000
*     GO TO NOTHEADR;               /* NO - PROCESS DUMP DATA RECORD */ 00494000
*                                                                  0222 00495000
*/********************************************************************/ 00496000
*/*                                                                  */ 00497000
*/*           A HEADER RECORD HAS BEEN FOUND. IF THIS IS THE         */ 00498000
*/*           FIRST HEADER, THE TYPE OF HEADER IS DETERMINED         */ 00499000
*/*           AND THE CORRESPONDING FIELDS IN COMMON ARE             */ 00500000
*/*           FILLED IN.  IF A HEADER RECORD HAS PREVIOUSLY BEEN     */ 00501000
*/*           FOUND, CONTROL IS PASSED TO THE END OF FILE ROUTINE    */ 00502000
*/*           TO PROCESS THE DUMP UP TO THIS POINT.                  */ 00503000
*/*                                                                  */ 00504000
*/********************************************************************/ 00505000
*                                                                  0222 00506000
*HEADER:                                                           0222 00507000
*   IF HDRSW=SWITCHON THEN          /* IS THIS A SECOND HEADER Y02006*/ 00508000
HEADER   TM    HDRSW,B'01000000'                                   0222 00509000
         BO    @RT00222                                            0222 00510000
*     GO TO EOF;                    /* YES--USE DUMP INFORMATION UP     00511000
*                                      TO SECOND HEADER Y02006       */ 00512000
*   HDRSW=SWITCHON;                 /* TURN ON HEADER FOUND SWITCH 0224 00513000
*                                      Y02006                        */ 00514000
         OI    HDRSW,B'01000000'                                   0224 00515000
*   DMPIC=SWITCHON;                 /* INDICATE ALL OF DUMP HAS BEEN    00516000
*                                      READ INTO THE BUFFERS (RESET     00517000
*                                      WHEN THIS IS NOT TRUE) Y02006 */ 00518000
         OI    DMPIC(COMPTR),B'00010000'                           0225 00519000
*   POSITSW=SWTCHOFF;               /* SET DUMP DATA SET NOT EMPTY SW   00520000
*                                      Y02006                        */ 00521000
         NI    POSITSW(COMPTR),B'11011111'                         0226 00522000
*   QASID=PRDASID;                  /* MOVE COMMON HEADER DATA TO  0227 00523000
*                                      COMMON Y02006                 */ 00524000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0227 00525000
         MVC   QASID(2,COMPTR),PRDASID(@04)                        0227 00526000
*   IF QASID=ALLFOX2 THEN           /* IS ASID FFFF IN HEADER Y02006 */ 00527000
         CLC   QASID(2,COMPTR),@CB00053                            0228 00528000
         BNE   @RF00228                                            0228 00529000
*     QASID=0;                      /* YES-THEN CHANGE IT TO ZERO FOR   00530000
*                                      USE BY AMDPRRDC Y02006        */ 00531000
         SLR   @04,@04                                             0229 00532000
         STH   @04,QASID(,COMPTR)                                  0229 00533000
*   TITLEMOD(8:15)=PRDMODNM;        /* MODULE NAME Y02006            */ 00534000
@RF00228 SLR   @04,@04                                             0230 00535000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0230 00536000
         MVC   TITLEMOD+7(8,COMPTR),PRDMODNM(@04)                  0230 00537000
*   TITLETME(6:13)=PRDTODVL;        /* TIME OF DAY Y02006            */ 00538000
         MVC   TITLETME+5(8,COMPTR),PRDTODVL(@04)                  0231 00539000
*   HDRTITLE=PRDTITLE;              /* USER TITLE SUPPLIED AT DUMP 0232 00540000
*                                      TIME Y02006                   */ 00541000
         MVC   HDRTITLE(100,COMPTR),PRDTITLE(@04)                  0232 00542000
*   IF PRDMODNM=SADMP THEN          /* IS THIS AMDSADMP INPUT Y02006 */ 00543000
         CLC   PRDMODNM(8,@04),@CC00071                            0233 00544000
         BNE   @RF00233                                            0233 00545000
*     DO;                           /* YES                           */ 00546000
*       SACSWCAW(1:8)=PRDCSW;       /* SAVE CSW FROM HEADER Y02006   */ 00547000
         MVC   SACSWCAW(8,COMPTR),PRDCSW(@04)                      0235 00548000
*       SACSWCAW(9:12)=PRDCAW;      /* SAVE CAW FROM HEADER Y02006   */ 00549000
         MVC   SACSWCAW+8(4,COMPTR),PRDCAW(@04)                    0236 00550000
*       QSADMP=SWITCHON;            /* SET SWITCH TO INDICATE      0237 00551000
*                                      AMDSADMP Y02006               */ 00552000
         OI    QSADMP(COMPTR),B'00100000'                          0237 00553000
*       GO TO MAPREAD1;             /* GO READ NEXT RECORD Y02006    */ 00554000
         B     MAPREAD1                                            0238 00555000
*     END;                                                         0239 00556000
*   ELSE                            /* UZ81700                       */ 00557000
*     DO;                           /* LOOK FOR SVC DUMP UZ81700     */ 00558000
@RF00233 DS    0H                                                  0241 00559000
*       Z9ERRID(1:10)=PRDERRID;     /* SAVE ERRORID UZ81700          */ 00560000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0241 00561000
         MVC   Z9ERRID(10,COMPTR),PRDERRID(@04)                    0241 00562000
*       IF Z9ERRID(1:10)='00000000000000000000'X THEN/* NO ERRID   0242 00563000
*                                      UZ81700                       */ 00564000
         CLC   Z9ERRID(10,COMPTR),@CB00575                         0242 00565000
         BNE   @RF00242                                            0242 00566000
*         Z9ERRID(1:1)='FE'X;       /* INDICATE SO UZ81700           */ 00567000
         MVI   Z9ERRID(COMPTR),X'FE'                               0243 00568000
*     END;                          /* UZ81700                       */ 00569000
@RF00242 DS    0H                                                  0245 00570000
*   HDRREGS=PRDREGS;                /* MOVE ALL REGS (FL PT, GEN,  0245 00571000
*                                      CTL) AND CURRENT PSW Y02006   */ 00572000
         SLR   @04,@04                                             0245 00573000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0245 00574000
         MVC   HDRREGS(168,COMPTR),PRDREGS(@04)                    0245 00575000
*   IF SETCVTSW=SWTCHOFF THEN       /* HAS A CVT= CARD BEEN READ   0246 00576000
*                                      Y02006                        */ 00577000
         TM    SETCVTSW(COMPTR),B'00000010'                        0246 00578000
         BNZ   @RF00246                                            0246 00579000
*     CVTADDR=PRDCVT;               /* NO--THEN SET CVT ADDR FROM  0247 00580000
*                                      HEADER Y02006                 */ 00581000
         MVC   CVTADDR(4,COMPTR),PRDCVT(@04)                       0247 00582000
*   IF SVCTTR=0 THEN                /* IS THERE AN SVC BUFFER Y02006 */ 00583000
@RF00246 ICM   @04,15,SVCTTR                                       0248 00584000
         BZ    @RT00248                                            0248 00585000
*     GO TO MAPREAD1;               /* READ NEXT RECORD Y02006       */ 00586000
*   DO I=1 TO BUFFSIZE-255 BY 256;  /* MOVE 256 BYTES AT A TIME (PLS    00587000
*                                      REST RICTION) Y02006          */ 00588000
         LA    I,1                                                 0250 00589000
@DL00250 DS    0H                                                  0251 00590000
*     PRDINPUT(I:I+255)=SVCBUF(I:I+255);/* MOVE DATA INTO BUFFER   0251 00591000
*                                      CONTAINING HEADER Y02006      */ 00592000
         ICM   @06,7,PRDINPTR(PARMPTR)                             0251 00593000
         ALR   @06,I                                               0251 00594000
         BCTR  @06,0                                               0251 00595000
         L     @04,SVCBUFAD                                        0251 00596000
         ALR   @04,I                                               0251 00597000
         BCTR  @04,0                                               0251 00598000
         MVC   PRDINPUT(256,@06),SVCBUF(@04)                       0251 00599000
*   END;                                                           0252 00600000
         AH    I,@CH00391                                          0252 00601000
         CH    I,@CH00665                                          0252 00602000
         BNH   @DL00250                                            0252 00603000
*   IF BUFFSIZE//256^=0 THEN        /* MOVE REMAINDER IF NOT MULTIPLE   00604000
*                                      OF 256 Y02006                 */ 00605000
*     PRDINPUT(BUFFSIZE+1-BUFFSIZE//256:BUFFSIZE)=SVCBUF(BUFFSIZE+1-    00606000
*         BUFFSIZE//256:BUFFSIZE);  /* MOVE DATA Y02006              */ 00607000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0254 00608000
         AL    @04,@CF00040                                        0254 00609000
         L     @01,SVCBUFAD                                        0254 00610000
         AL    @01,@CF00040                                        0254 00611000
         MVC   PRDINPUT(8,@04),SVCBUF(@01)                         0254 00612000
*   TTRNO=SVCTTR;                   /* ALSO RESET THE TTR TO THE SVC    00613000
*                                      BUFFER TTR Y02006             */ 00614000
         MVC   TTRNO(4),SVCTTR                                     0255 00615000
*   CALL MAPBUILD;                  /* GO BUILD MAP FOR SVC BUFFER 0256 00616000
*                                      Y02006                        */ 00617000
         BAL   @14,MAPBUILD                                        0256 00618000
*   IF BADREC=SWITCHON THEN         /* WAS RECORD PLACED INTO MAP  0257 00619000
*                                      Y02006                        */ 00620000
         TM    BADREC,B'00000010'                                  0257 00621000
         BO    @RT00257                                            0257 00622000
*     GO TO MAPREAD1;               /* NO--READ INTO SAME BUFFER   0258 00623000
*                                      Y02006                        */ 00624000
*   ELSE                                                           0259 00625000
*     GO TO MAPREAD;                /* CONTINUE TO BUILD MAP Y02006  */ 00626000
         B     MAPREAD                                             0259 00627000
*                                                                  0260 00628000
*/********************************************************************/ 00629000
*/*                                                                  */ 00630000
*/*           THIS CODE IS ENTERED WHEN A DATA RECORD IS             */ 00631000
*/*           FOUND.  IF A HEADER RECORD HAS NOT YET BEEN FOUND,     */ 00632000
*/*           THE RECORD IS SAVED IN CASE IT IS THE SVC BUFFER       */ 00633000
*/*           THEN CONTROL IS PASSED BACK TO MAPREAD TO              */ 00634000
*/*           CONTINUE SCANNING THE INPUT DATA SET. IF A HEADER HAS  */ 00635000
*/*           BEEN FOUND, THE DATA RECORD IS PLACED IN THE DUMP MAP. */ 00636000
*/*                                                                  */ 00637000
*/********************************************************************/ 00638000
*                                                                  0260 00639000
*NOTHEADR:                                                         0260 00640000
*   IF HDRSW=SWITCHON THEN          /* HEADER RECORD FOUND YET Y02006*/ 00641000
NOTHEADR TM    HDRSW,B'01000000'                                   0260 00642000
         BNO   @RF00260                                            0260 00643000
*     DO;                                                          0261 00644000
*       CALL MAPBUILD;              /* YES--GO BUILD MAP FOR THIS  0262 00645000
*                                      DATA RECORD OR CPU STATUS   0262 00646000
*                                      RECORD Y02006                 */ 00647000
         BAL   @14,MAPBUILD                                        0262 00648000
*       IF BADREC=SWITCHON THEN     /* WAS RECORD PLACED INTO MAP  0263 00649000
*                                      Y02006                        */ 00650000
         TM    BADREC,B'00000010'                                  0263 00651000
         BO    @RT00263                                            0263 00652000
*         GO TO MAPREAD1;           /* NO--READ INTO SAME BUFFER   0264 00653000
*                                      Y02006                        */ 00654000
*       ELSE                                                       0265 00655000
*         GO TO MAPREAD;            /* CONTINUE READING Y02006       */ 00656000
         B     MAPREAD                                             0265 00657000
*     END;                                                         0266 00658000
*   IF POSTIPL=5 THEN               /* HAVE 5 RECORDS BEEN READ    0267 00659000
*                                      WITHOUT FINDING A HEADER    0267 00660000
*                                      Y02006                        */ 00661000
@RF00260 LH    @08,POSTIPL                                         0267 00662000
         CH    @08,@CH00255                                        0267 00663000
         BE    @RT00267                                            0267 00664000
*     GO TO EOF;                    /* YES--THEN GIVE UP, IT IS NOT A   00665000
*                                      NORMAL DUMP DATA SET Y02006   */ 00666000
*   POSTIPL=POSTIPL+1;              /* INCREMENT POSTIPL COUNT Y02006*/ 00667000
         LA    @04,1                                               0269 00668000
         ALR   @08,@04                                             0269 00669000
         STH   @08,POSTIPL                                         0269 00670000
*   DO I=1 TO BUFFSIZE-255 BY 256;  /* MOVE 256 BYTES AT A TIME (PLS    00671000
*                                      REST RICTION) Y02006          */ 00672000
         LR    I,@04                                               0270 00673000
@DL00270 DS    0H                                                  0271 00674000
*     SVCBUF(I:I+255)=PRDINPUT(I:I+255);/* SAVE RECORD IN CASE ITS AN   00675000
*                                      SVC BUFFER Y02006             */ 00676000
         L     @08,SVCBUFAD                                        0271 00677000
         ALR   @08,I                                               0271 00678000
         BCTR  @08,0                                               0271 00679000
         ICM   @06,7,PRDINPTR(PARMPTR)                             0271 00680000
         ALR   @06,I                                               0271 00681000
         BCTR  @06,0                                               0271 00682000
         MVC   SVCBUF(256,@08),PRDINPUT(@06)                       0271 00683000
*   END;                                                           0272 00684000
         AH    I,@CH00391                                          0272 00685000
         CH    I,@CH00665                                          0272 00686000
         BNH   @DL00270                                            0272 00687000
*   IF BUFFSIZE//256^=0 THEN        /* MOVE REMAINDER IF NOT MULTIPLE   00688000
*                                      OF 256 Y0 2006                */ 00689000
*     SVCBUF(BUFFSIZE+1-BUFFSIZE//256:BUFFSIZE)=PRDINPUT(BUFFSIZE+1-    00690000
*         BUFFSIZE//256:BUFFSIZE);  /* MOVE DATA Y02006              */ 00691000
         L     @08,SVCBUFAD                                        0274 00692000
         AL    @08,@CF00040                                        0274 00693000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0274 00694000
         AL    @04,@CF00040                                        0274 00695000
         MVC   SVCBUF(8,@08),PRDINPUT(@04)                         0274 00696000
*   SVCTTR=TTRNO;                   /* ALSO SAVE THE TTR FOR THE SVC    00697000
*                                      BUFFER Y02006                 */ 00698000
         MVC   SVCTTR(4),TTRNO                                     0275 00699000
*   GO TO MAPREAD;                  /* CONTINUE READING DUMP Y02006  */ 00700000
         B     MAPREAD                                             0276 00701000
*                                                                  0277 00702000
*/********************************************************************/ 00703000
*/*                                                                  */ 00704000
*/*  MAP BUILD ROUTINE.  THIS ROUTINE PLACES THE ADDRESS AND TTR OF  */ 00705000
*/* EACH RECORD INTO THE DUMP MAP.  THERE ARE UP TO 3 SETS OF        */ 00706000
*/* DUMP MAPS.  'REALMAP' POINTS TO DUMP MAP ENTRIES FOR REAL        */ 00707000
*/* DUMP INPUT, 'CPUMAP' POINTS TO DUMP MAP ENTRIES FOR CPU          */ 00708000
*/* STATUS RECORDS.  FOR VIRTUAL DUMPS 'ASIDNDX' POINTS TO A         */ 00709000
*/* TABLE OF ASID'S AND MAP POINTERS.  FOR EACH ASID DUMPED THERE    */ 00710000
*/* EXISTS A SET OF DUMP MAP ENTRIES.                                */ 00711000
*/* THIS ROUTINE BUILDS BOTH THE DUMP MAP ENTRIES AND THE ASID       */ 00712000
*/* TABLES.  WHEN RECORD ADDRESSES ARE IN SEQUENCE THEN THE LAST     */ 00713000
*/* MAP ENTRY IS JUST UPDATED.                                       */ 00714000
*/*                                                                  */ 00715000
*/********************************************************************/ 00716000
*                                                                  0277 00717000
*MAPBUILD:                                                         0277 00718000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0277 00719000
MAPBUILD DS    0H                                                  0278 00720000
*   RESPECIFY                                                      0278 00721000
*     REG14 RESTRICTED;             /* RESTRICT RETURN REG Y02006    */ 00722000
*   TEMPSAVE=REG14;                 /* SAVE RETURN REG IN CASE     0279 00723000
*                                      ASIDSRCH IS CALLED Y02006     */ 00724000
         ST    REG14,TEMPSAVE                                      0279 00725000
*   RESPECIFY                                                      0280 00726000
*     REG14 UNRESTRICTED;           /* UNRESTRICT RETURN REG Y02006  */ 00727000
*   BADREC=SWTCHOFF;                /* RESET BAD RECORD SWITCH Y02006*/ 00728000
         NI    BADREC,B'11111101'                                  0281 00729000
*   IF PRDHDRID=PRDHDR&PRDRECID=PRDCPUID THEN/* IS THS A CPU STATUS     00730000
*                                      RECORD Y02006                 */ 00731000
         SLR   @04,@04                                             0282 00732000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0282 00733000
         CLI   PRDHDRID(@04),X'FF'                                 0282 00734000
         BNE   @RF00282                                            0282 00735000
         CLI   PRDRECID(@04),X'0F'                                 0282 00736000
         BE    @RT00282                                            0282 00737000
*     GO TO CPUREC;                 /* YES--GO TO CPU ROUTINE Y02006 */ 00738000
*   IF PRDADDR//DUMPBLK^=0 THEN     /* IS THE DATA ADDRESS A MULTIPLE   00739000
*                                      OF 4K Y0 2006                 */ 00740000
@RF00282 ICM   @04,7,PRDINPTR(PARMPTR)                             0284 00741000
         L     @04,PRDADDR(,@04)                                   0284 00742000
         N     @04,@CF00677                                        0284 00743000
         LTR   @04,@04                                             0284 00744000
         BZ    @RF00284                                            0284 00745000
*     DO;                                                          0285 00746000
*       CURADDR=INITADDR;           /* NO--IGNORE THIS RECORD,     0286 00747000
*                                      REINITIALIZE LAST ADDRESS   0286 00748000
*                                      Y02006                        */ 00749000
         MVC   CURADDR(4),@CB00069                                 0286 00750000
*       BADREC=SWITCHON;            /* INDICATE RECORD NOT PLACED IN    00751000
*                                      MAP Y02006                    */ 00752000
         OI    BADREC,B'00000010'                                  0287 00753000
*       GO TO MAPRET;               /* RETURN TO CALLER              */ 00754000
         B     MAPRET                                              0288 00755000
*     END;                                                         0289 00756000
*   IF PRDASID=CURASID&PRDADDR=CURADDR+DUMPBLK&(DUMPLINK=0|DUMPLINK->   00757000
*       DUMPFADD^=PRDADDR) THEN     /* IS THIS BLOCK IN THE SAME   0290 00758000
*                                      MEMORY, THE NEXT PAGE AFTER 0290 00759000
*                                      THE LAST BLOCK & NOT DUPLICATE   00760000
*                                                             YM00653*/ 00761000
@RF00284 SLR   @04,@04                                             0290 00762000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0290 00763000
         CLC   PRDASID(2,@04),CURASID                              0290 00764000
         BNE   @RF00290                                            0290 00765000
         L     @04,PRDADDR(,@04)                                   0290 00766000
         LH    @15,@CH00040                                        0290 00767000
         AL    @15,CURADDR                                         0290 00768000
         CLR   @04,@15                                             0290 00769000
         BNE   @RF00290                                            0290 00770000
         SLR   @15,@15                                             0290 00771000
         ICM   @15,7,DUMPLINK(MAPPTR)                              0290 00772000
         LTR   @15,@15                                             0290 00773000
         BZ    @RT00290                                            0290 00774000
         CL    @04,DUMPFADD(,@15)                                  0290 00775000
         BNE   @RT00290                                            0290 00776000
*     GO TO CHKVOLS;                /* YES--THEN GO CHECK IF THE   0291 00777000
*                                      VOLUME HAS CHANGED Y02006     */ 00778000
*   IF PRDASID=CURASID THEN         /* WHILE THE ADDRESS IS NOT NEXT,   00779000
*                                      IS THE ASID STILL THE SAME  0292 00780000
*                                      Y02006                        */ 00781000
@RF00290 SLR   @08,@08                                             0292 00782000
         ICM   @08,7,PRDINPTR(PARMPTR)                             0292 00783000
         CLC   PRDASID(2,@08),CURASID                              0292 00784000
         BE    @RT00292                                            0292 00785000
*     GO TO SCANMAP;                /* YES--THEN USE THE CURRENT MAP    00786000
*                                      AND GO SCAN IT Y02006         */ 00787000
*   IF PRDASID=0 THEN               /* IS THIS A REAL DUMP RECORD  0294 00788000
*                                      Y02006                        */ 00789000
         ICM   @10,3,PRDASID(@08)                                  0294 00790000
         BNZ   @RF00294                                            0294 00791000
*     DO;                                                          0295 00792000
*       CURMAP=REALMAP;             /* YES--THEN POINT TO THE REAL 0296 00793000
*                                      MAP Y02006                    */ 00794000
         L     CURMAP,REALMAP(,COMPTR)                             0296 00795000
*       LASTMAP=ADDR(REALMAP);      /* ALSO SET UP THE LINK POINTER     00796000
*                                      (THIS IS USED IF THE NEW MAP     00797000
*                                      ENTRY GOES FIRST Y02006       */ 00798000
         LA    LASTMAP,REALMAP(,COMPTR)                            0297 00799000
*       GO TO SCANMAP;              /* NOW GO SCAN THE REAL MAP    0298 00800000
*                                      Y02006                        */ 00801000
         B     SCANMAP                                             0298 00802000
*     END;                                                         0299 00803000
*   IF ASIDNDX=0 THEN               /* IS THERE AN ASID INDEX YET  0300 00804000
*                                      Y02006                        */ 00805000
@RF00294 ICM   @10,15,ASIDNDX(COMPTR)                              0300 00806000
         BNZ   @RF00300                                            0300 00807000
*     DO;                                                          0301 00808000
*       RESPECIFY                                                  0302 00809000
*        (REG0,                                                    0302 00810000
*         REG4) RESTRICTED;         /* RESTRICT REGISTERS Y02006     */ 00811000
*       REG4=ADDR(INDXADDR);        /* NO--SO SET UP TO GET FIRST ONE   00812000
*                                      Y02006                        */ 00813000
         LA    REG4,INDXADDR                                       0303 00814000
*       REG0=LENGTH(ASIDLIST);      /* SET LENGTH FOR GETMAIN Y02006 */ 00815000
         LA    REG0,112                                            0304 00816000
*       GEN(GETMAIN EU,LV=(0),A=(R4));/* ISSUE GETMAIN FOR FIRST ASID   00817000
*                                      INDEX Y02006                  */ 00818000
         GETMAIN EU,LV=(0),A=(R4)                                       00819000
*       RESPECIFY                                                  0306 00820000
*        (REG0,                                                    0306 00821000
*         REG4) UNRESTRICTED;       /* UNRESTRICT REGISTERS Y02006   */ 00822000
*       ASIDNDX=INDXADDR;           /* SET POINTER IN COMMON TO ASID    00823000
*                                      INDEX Y02006                  */ 00824000
         L     @10,INDXADDR                                        0307 00825000
         ST    @10,ASIDNDX(,COMPTR)                                0307 00826000
*       ASIDLIST=ASIDLIST&&ASIDLIST;/* SET NEW INDEX TO ZERO Y02006  */ 00827000
         XC    ASIDLIST(112,@10),ASIDLIST(@10)                     0308 00828000
*       INDEX=1;                    /* SET INDEX TO ONE FOR FIRST NEW   00829000
*                                      ENTRY Y02006                  */ 00830000
         LA    INDEX,1                                             0309 00831000
*       GO TO INSERT;               /* GO INSERT THE NEW ASID INTO 0310 00832000
*                                      THE INDEX Y02006              */ 00833000
         B     INSERT                                              0310 00834000
*     END;                                                         0311 00835000
*   REQASID=PRDASID;                /* SET ASID FOR ASIDSRCH       0312 00836000
*                                      SUBROUTINE Y02006             */ 00837000
@RF00300 ICM   @10,7,PRDINPTR(PARMPTR)                             0312 00838000
         MVC   REQASID(2),PRDASID(@10)                             0312 00839000
*   CALL ASIDSRCH;                  /* SEARCH ASIDLIST FOR NEW ASID     00840000
*                                      Y02006                        */ 00841000
         BAL   @14,ASIDSRCH                                        0313 00842000
*   IF INDEX=0 THEN                 /* ARE ALL TABLES FULL AND NEW 0314 00843000
*                                      ASID NOT FOUND Y02006         */ 00844000
         LTR   INDEX,INDEX                                         0314 00845000
         BNZ   @RF00314                                            0314 00846000
*     DO;                                                          0315 00847000
*       RESPECIFY                                                  0316 00848000
*        (REG0,                                                    0316 00849000
*         REG4) RESTRICTED;         /* RESTRICT REGISTERS Y02006     */ 00850000
*       REG4=ADDR(ASDXLNK);         /* YES--NEED TO GET STORAGE FOR     00851000
*                                      NEW TABLE Y02006              */ 00852000
         L     REG4,INDXADDR                                       0317 00853000
*       REG0=LENGTH(ASIDLIST);      /* GET LENGTH FOR TABLE Y02006   */ 00854000
         LA    REG0,112                                            0318 00855000
*       GENERATE(GETMAIN EU,LV=(0),A=(R4));/* GET STORAGE FOR TABLE     00856000
*                                      Y02006                        */ 00857000
         GETMAIN EU,LV=(0),A=(R4)                                       00858000
*       RESPECIFY                                                  0320 00859000
*        (REG0,                                                    0320 00860000
*         REG4) UNRESTRICTED;       /* UNRESTRICT REGISTERS Y02006   */ 00861000
*       INDXADDR=ASDXLNK;           /* SET PTR TO NEW TABLE Y02006   */ 00862000
         L     @10,INDXADDR                                        0321 00863000
         L     @10,ASDXLNK(,@10)                                   0321 00864000
         ST    @10,INDXADDR                                        0321 00865000
*       ASIDLIST=ASIDLIST&&ASIDLIST;/* ZERO OUT NEW TABLE      Y02006*/ 00866000
         XC    ASIDLIST(112,@10),ASIDLIST(@10)                     0322 00867000
*       INDEX=1;                    /* SET INDEX TO FIRST ENTRY    0323 00868000
*                                      Y02006                        */ 00869000
         LA    INDEX,1                                             0323 00870000
*       GO TO INSERT;               /* GO INSERT NEW ASID INTO TABLE    00871000
*                                      Y02006                        */ 00872000
         B     INSERT                                              0324 00873000
*     END;                                                         0325 00874000
*   IF ASDXASID(INDEX)=PRDASID THEN /* CHECK TO VERIFY ASID WAS FOUND   00875000
*                                      IN TABLE Y02006               */ 00876000
@RF00314 L     @10,INDXADDR                                        0326 00877000
         LR    @06,INDEX                                           0326 00878000
         ALR   @06,@06                                             0326 00879000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0326 00880000
         ALR   @06,@10                                             0326 00881000
         CLC   ASDXASID-2(2,@06),PRDASID(@04)                      0326 00882000
         BNE   @RF00326                                            0326 00883000
*     DO;                                                          0327 00884000
*       CURMAP=ASDXMAP(INDEX);      /* YES--SET PTR TO MAPS FOR    0328 00885000
*                                      EXISTING ASID Y02006          */ 00886000
         L     @08,INDXADDR                                        0328 00887000
         LR    @06,INDEX                                           0328 00888000
         SLA   @06,2                                               0328 00889000
         L     CURMAP,ASDXMAP-4(@06,@08)                           0328 00890000
*       LASTMAP=ADDR(ASDXMAP(INDEX));/* ALSO SET PTR TO LOCATION   0329 00891000
*                                      POINTING TO MAP Y02006        */ 00892000
         LA    LASTMAP,ASDXMAP-4(@06,@08)                          0329 00893000
*       GO TO SCANMAP;              /* NOW GO SCAN MAP Y02006        */ 00894000
         B     SCANMAP                                             0330 00895000
*     END;                                                         0331 00896000
*INSERT:                                                           0332 00897000
*   ASDXASID(INDEX)=PRDASID;        /* INSERT NEW ASID INTO TABLE  0332 00898000
*                                      Y02006                        */ 00899000
@RF00326 DS    0H                                                  0332 00900000
INSERT   L     @08,INDXADDR                                        0332 00901000
         LR    @06,INDEX                                           0332 00902000
         ALR   @06,@06                                             0332 00903000
         ALR   @06,@08                                             0332 00904000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0332 00905000
         MVC   ASDXASID-2(2,@06),PRDASID(@04)                      0332 00906000
*   CURMAP=ASDXMAP(INDEX);          /* SET CURRENT MAP POINTER TO NEW   00907000
*                                      MAP Y02006                    */ 00908000
         LR    @06,INDEX                                           0333 00909000
         SLA   @06,2                                               0333 00910000
         L     CURMAP,ASDXMAP-4(@06,@08)                           0333 00911000
*   LASTMAP=ADDR(ASDXMAP(INDEX));   /* ALSO SET POINTER TO ADDRESS OF   00912000
*                                      MAP Y02006                    */ 00913000
         LA    LASTMAP,ASDXMAP-4(@06,@08)                          0334 00914000
*/********************************************************************/ 00915000
*/*                                                                  */ 00916000
*/* THIS SECTION SCANS THE MAP POINTED TO BY 'CURMAP' FOR THE        */ 00917000
*/* LOCATION TO PLACE THE NEW MAP ENTRY.                             */ 00918000
*/*                                                                  */ 00919000
*/********************************************************************/ 00920000
*                                                                  0335 00921000
*SCANMAP:                                                          0335 00922000
*   MAPPTR=CURMAP;                  /* SET POINTER TO CURRENT MAP  0335 00923000
*                                      ENTRY Y02006                  */ 00924000
SCANMAP  LR    MAPPTR,CURMAP                                       0335 00925000
*   LASTENTY=LASTMAP;               /* SAVE PTR TO LAST ENTRY IN CASE   00926000
*                                      THE NEW ENTRY GOES FIRST    0336 00927000
*                                      Y02006                        */ 00928000
         LR    LASTENTY,LASTMAP                                    0336 00929000
*   DO WHILE MAPPTR^=0;             /* LOOP UNTIL PROPER ENTRY IS  0337 00930000
*                                      FOUND OR LAST ENTRY IS CHECKED   00931000
*                                      Y02006                        */ 00932000
         B     @DE00337                                            0337 00933000
@DL00337 DS    0H                                                  0338 00934000
*     IF DUMPLADD<PRDADDR THEN      /* IS ADDRESS IN THIS MAP ENTRY     00935000
*                                      Y02006                        */ 00936000
         ICM   @08,7,PRDINPTR(PARMPTR)                             0338 00937000
         CLC   DUMPLADD(4,MAPPTR),PRDADDR(@08)                     0338 00938000
         BNL   @RF00338                                            0338 00939000
*       DO;                                                        0339 00940000
*         LASTENTY=MAPPTR;          /* NO--SAVE PTR TO THIS ENTRY  0340 00941000
*                                      Y02006                        */ 00942000
         LR    LASTENTY,MAPPTR                                     0340 00943000
*         MAPPTR=DUMPLINK;          /* AND SET PTR TO NEXT MAP ENTRY    00944000
*                                      Y02006                        */ 00945000
         SLR   @08,@08                                             0341 00946000
         ICM   @08,7,DUMPLINK(MAPPTR)                              0341 00947000
         LR    MAPPTR,@08                                          0341 00948000
*       END;                                                       0342 00949000
*     ELSE                                                         0343 00950000
*       IF DUMPFADD>PRDADDR THEN    /* ITS BEFORE THIS ENTRY, BE SURE   00951000
*                                      ITS NOT IN THIS ENTRY Y02006  */ 00952000
         B     @RC00338                                            0343 00953000
@RF00338 ICM   @08,7,PRDINPTR(PARMPTR)                             0343 00954000
         CLC   DUMPFADD(4,MAPPTR),PRDADDR(@08)                     0343 00955000
         BH    @RT00343                                            0343 00956000
*         GO TO SETDATA;            /* GO PUT DATA IN NEW MAP ENTRY     00957000
*                                      Y02006                        */ 00958000
*       ELSE                                                       0345 00959000
*         DO;                       /* THIS RECORD IS A            0345 00960000
*                                      DUPLICATE--IGNORE IT Y02006   */ 00961000
*           CURADDR=INITADDR;       /* REINITIALIZE ADDRESS Y02006   */ 00962000
         MVC   CURADDR(4),@CB00069                                 0346 00963000
*           GO TO MAPRET;           /* RETURN IGNORING DUPLICATE   0347 00964000
*                                      Y02006                        */ 00965000
         B     MAPRET                                              0347 00966000
*         END;                                                     0348 00967000
*   END;                                                           0349 00968000
@RC00338 DS    0H                                                  0349 00969000
@DE00337 LTR   MAPPTR,MAPPTR                                       0349 00970000
         BNZ   @DL00337                                            0349 00971000
*   GO TO SETDATA;                  /* NOW GO SET DATA INTO NEW ENTRY   00972000
*                                      Y02006                        */ 00973000
         B     SETDATA                                             0350 00974000
*/********************************************************************/ 00975000
*/*                                                                  */ 00976000
*/* THE DATA RECORD OR CPU STATUS RECORD IS IN PROPER SEQUENCE.      */ 00977000
*/* THIS SECTION CHECKS TO VERIFY THAT A VOLUME SWITCH HAS NOT       */ 00978000
*/* OCCURED.  IF IT HAS, A NEW ENTRY IS INSERTED AT THE POINT OF THE */ 00979000
*/* CURRENT MAP.                                                     */ 00980000
*/*                                                                  */ 00981000
*/********************************************************************/ 00982000
*                                                                  0351 00983000
*CHKVOLS:                                                          0351 00984000
*   IF CURVOL=LASTVOL THEN          /* HAS A VOLUME SWITCH OCCURRED     00985000
*                                      Y02006                        */ 00986000
CHKVOLS  CH    LASTVOL,CURVOL                                      0351 00987000
         BE    @RT00351                                            0351 00988000
*     GO TO SAVELAST;               /* NO--THEN GO UPDATE LAST     0352 00989000
*                                      ADDRESS IN CURRENT ENTRY Y020    00990000
*                                      06                            */ 00991000
*   RESPECIFY                                                      0353 00992000
*    (REG0,                                                        0353 00993000
*     REG4) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00994000
*   REG4=ADDR(NEWENTRY);            /* VOLUME SWITCHED SO NEED NEW 0354 00995000
*                                      MAP ENTRY Y02006              */ 00996000
         LA    REG4,NEWENTRY                                       0354 00997000
*   REG0=DUMPFRMS;                  /* SET SIZE OF ENTRY Y02006      */ 00998000
         LA    REG0,16                                             0355 00999000
*   GENERATE(GETMAIN EU,LV=(0),A=(R4));/* GET STORAGE FOR NEW ENTRY     01000000
*                                      Y02006                        */ 01001000
         GETMAIN EU,LV=(0),A=(R4)                                       01002000
*   RESPECIFY                                                      0357 01003000
*    (REG0,                                                        0357 01004000
*     REG4) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 01005000
*   NEWENTRY->DUMPLINK=DUMPLINK;    /* SET LINK FIELD OF NEWENTRY TO    01006000
*                                      LINK OF LAST ENTRY Y02006     */ 01007000
         L     @08,NEWENTRY                                        0358 01008000
         MVC   DUMPLINK(3,@08),DUMPLINK(MAPPTR)                    0358 01009000
*   DUMPLINK=NEWENTRY;              /* SET LINK FIELD OF LAST ENTRY     01010000
*                                      TO NEW ENTRY Y02006           */ 01011000
         STCM  @08,7,DUMPLINK(MAPPTR)                              0359 01012000
*   GO TO SETDATA1;                 /* PUT DATA IN NEW ENTRY  YM00656*/ 01013000
         B     SETDATA1                                            0360 01014000
*/********************************************************************/ 01015000
*/*                                                                  */ 01016000
*/* THIS SECTION INSERTS DATA INTO THE NEW DUMP MAP ENTRIES.         */ 01017000
*/*                                                                  */ 01018000
*/********************************************************************/ 01019000
*                                                                  0361 01020000
*SETDATA:                                                          0361 01021000
*   RESPECIFY                                                      0361 01022000
*    (REG0,                                                        0361 01023000
*     REG4) RESTRICTED;             /* RESTRICT REGISTERS     YM00656*/ 01024000
SETDATA  DS    0H                                                  0362 01025000
*   REG4=ADDR(NEWENTRY);            /* SET RETURN FOR ADDRESS OF NEW    01026000
*                                      DUMP MAP BLOCK         YM00656*/ 01027000
         LA    REG4,NEWENTRY                                       0362 01028000
*   REG0=DUMPFRMS;                  /* SET SIZE FOR A NEW BLOCK    0363 01029000
*                                                             YM00656*/ 01030000
         LA    REG0,16                                             0363 01031000
*   GEN(GETMAIN EU,LV=(0),A=(R4));  /* ISSUE GETMAIN FOR A NEW DUMP     01032000
*                                      MAP BLOCK              YM00656*/ 01033000
         GETMAIN EU,LV=(0),A=(R4)                                       01034000
*   RESPECIFY                                                      0365 01035000
*    (REG0,                                                        0365 01036000
*     REG4) UNRESTRICTED;           /* UNRESTRICT REGISTERS   YM00656*/ 01037000
*   LASTENTY->DUMPLINK=NEWENTRY;    /* INSERT NEW MAP ENTRY AT END OF   01038000
*                                      CHAIN                  YM00656*/ 01039000
         L     @08,NEWENTRY                                        0366 01040000
         STCM  @08,7,DUMPLINK(LASTENTY)                            0366 01041000
*   NEWENTRY->DUMPLINK=MAPPTR;      /* SET LINK FIELD TO NULL YM00656*/ 01042000
         STCM  MAPPTR,7,DUMPLINK(@08)                              0367 01043000
*   IF LASTENTY=LASTMAP THEN        /* IS THIS ALSO THE FIRST (ONLY)    01044000
*                                      ENTRY ON CHAIN         YM00656*/ 01045000
         CR    LASTENTY,LASTMAP                                    0368 01046000
         BNE   @RF00368                                            0368 01047000
*     CURMAP=NEWENTRY;              /* YES--THEN ALSO UPDATE CURRENT    01048000
*                                      PTR ENTRY              YM00656*/ 01049000
         LR    CURMAP,@08                                          0369 01050000
*SETDATA1:                                                         0370 01051000
*   MAPPTR=NEWENTRY;                /* SET POINTER TO NEW ENTRY    0370 01052000
*                                      Y02006                        */ 01053000
@RF00368 DS    0H                                                  0370 01054000
SETDATA1 L     MAPPTR,NEWENTRY                                     0370 01055000
*   DUMPVOLN=CURVOL;                /* SET VOLUME NUMBER INTO ENTRY     01056000
*                                      Y02006                        */ 01057000
         MVC   DUMPVOLN(1,MAPPTR),CURVOL+1                         0371 01058000
*   IF TREADIN=SWITCHON THEN        /* SET DUMPDEV TO TREADIN Y02006 */ 01059000
         TM    TREADIN(COMPTR),B'00010000'                         0372 01060000
         BNO   @RF00372                                            0372 01061000
*     DUMPDEV=SWITCHON;                                            0373 01062000
         OI    DUMPDEV(MAPPTR),B'10000000'                         0373 01063000
*   ELSE                                                           0374 01064000
*     DUMPDEV=SWTCHOFF;                                            0374 01065000
         B     @RC00372                                            0374 01066000
@RF00372 NI    DUMPDEV(MAPPTR),B'01111111'                         0374 01067000
*   DUMPFADD=PRDADDR;               /* SET BEGINNING ADDRESS INTO  0375 01068000
*                                      ENTRY Y02006                  */ 01069000
@RC00372 ICM   @08,7,PRDINPTR(PARMPTR)                             0375 01070000
         MVC   DUMPFADD(4,MAPPTR),PRDADDR(@08)                     0375 01071000
*   DUMPTTR=TTRNO;                  /* AND SET TTR (OR BLOCK NUMBER)    01072000
*                                      INTO ENTRY Y02006             */ 01073000
         MVC   DUMPTTR(4,MAPPTR),TTRNO                             0376 01074000
*SAVELAST:                                                         0377 01075000
*   CURADDR=PRDADDR;                /* SAVE CURRENT ADDRESS Y02006   */ 01076000
SAVELAST SLR   @08,@08                                             0377 01077000
         ICM   @08,7,PRDINPTR(PARMPTR)                             0377 01078000
         MVC   CURADDR(4),PRDADDR(@08)                             0377 01079000
*   IF PRDHDRID^=PRDHDR THEN        /* IS THIS A CPU STATUS RECORD 0378 01080000
*                                      Y02006                        */ 01081000
         CLI   PRDHDRID(@08),X'FF'                                 0378 01082000
         BE    @RF00378                                            0378 01083000
*     CURASID=PRDASID;              /* NO--THEN SAVE ASID Y02006     */ 01084000
         MVC   CURASID(2),PRDASID(@08)                             0379 01085000
*   DUMPLADD=CURADDR;               /* SET ENDING ADDRESS INTO ENTRY    01086000
*                                      Y02006                        */ 01087000
@RF00378 L     @08,CURADDR                                         0380 01088000
         ST    @08,DUMPLADD(,MAPPTR)                               0380 01089000
*   IF PRDHDRID^=PRDHDR THEN        /* AGAIN IS THIS A CPU STATUS  0381 01090000
*                                      RECORD Y02006                 */ 01091000
         ICM   @04,7,PRDINPTR(PARMPTR)                             0381 01092000
         CLI   PRDHDRID(@04),X'FF'                                 0381 01093000
         BE    @RF00381                                            0381 01094000
*     IF CURASID=0 THEN             /* NO--IS IT A REAL DUMP RECORD     01095000
*                                      Y02006                        */ 01096000
         ICM   @04,3,CURASID                                       0382 01097000
         BNZ   @RF00382                                            0382 01098000
*       BUFFREAL=CURADDR;           /* YES-- UPDATE REAL ADDRESS IN     01099000
*                                      BUFFER AMP ENTRY Y020006      */ 01100000
         ST    @08,BUFFREAL(,PARMPTR)                              0383 01101000
*     ELSE                                                         0384 01102000
*       DO;                                                        0384 01103000
         B     @RC00382                                            0384 01104000
@RF00382 DS    0H                                                  0385 01105000
*         BUFFVIRT=CURADDR;         /* NO--UPDATE VIRTUAL ADDRESS IN    01106000
*                                      BUFFER MAP ENTRY Y02006       */ 01107000
         MVC   BUFFVIRT(4,PARMPTR),CURADDR                         0385 01108000
*         IF CURASID=ALLFOX2 THEN   /* IS ASID FOR COMMON DATA Y02006*/ 01109000
         CLC   CURASID(2),@CB00053                                 0386 01110000
         BNE   @RF00386                                            0386 01111000
*           DO;                                                    0387 01112000
*             BUFFASID=0;           /* YES--SET ASID TO ZERO FOR   0388 01113000
*                                      AMDPRRDC Y02006               */ 01114000
         SLR   @08,@08                                             0388 01115000
         STH   @08,BUFFASID(,PARMPTR)                              0388 01116000
*             BUFFCOM=SWITCHON;     /* SET FLAG TO INDICATE DATA FROM   01117000
*                                      COMMON Y02006                 */ 01118000
         OI    BUFFCOM(PARMPTR),B'01000000'                        0389 01119000
*           END;                                                   0390 01120000
*         ELSE                                                     0391 01121000
*           BUFFASID=CURASID;       /* NO--PUT ASID INTO BUFFER AS IS   01122000
*                                      Y02006                        */ 01123000
         B     @RC00386                                            0391 01124000
@RF00386 MVC   BUFFASID(2,PARMPTR),CURASID                         0391 01125000
*       END;                                                       0392 01126000
*   ELSE                                                           0393 01127000
*     BUFFCPU=PRDCPUAD;             /* ITS A CPU STATUS RECORD SO  0393 01128000
*                                      UPDATE CPU ADDRES S IN BUFFER    01129000
*                                      MAP ENTRY Y02006              */ 01130000
         B     @RC00381                                            0393 01131000
@RF00381 ICM   @08,7,PRDINPTR(PARMPTR)                             0393 01132000
         MVC   BUFFCPU(2,PARMPTR),PRDCPUAD(@08)                    0393 01133000
*MAPRET:                                                           0394 01134000
*   RESPECIFY                                                      0394 01135000
*     REG14 RESTRICTED;             /* RESTRICT RETURN REG Y02006    */ 01136000
@RC00381 DS    0H                                                  0394 01137000
MAPRET   DS    0H                                                  0395 01138000
*   REG14=TEMPSAVE;                 /* RESTORE RETURN REG Y02006     */ 01139000
         L     REG14,TEMPSAVE                                      0395 01140000
*   RESPECIFY                                                      0396 01141000
*     REG14 UNRESTRICTED;           /* UNRESTRICT RETURN REG Y02006  */ 01142000
*   RETURN;                         /* RETURN WITH MAP BUILT Y02006  */ 01143000
@EL00003 DS    0H                                                  0397 01144000
@EF00003 DS    0H                                                  0397 01145000
@ER00003 BR    @14                                                 0397 01146000
*/********************************************************************/ 01147000
*/*                                                                  */ 01148000
*/* THIS SECTION OBTAINS NEW MAP ENTRIES FOR CPU STATUS RECORDS      */ 01149000
*/* IF THE RECORDS ARE NOT IN CPU ADDRESS SEQUENCE.                  */ 01150000
*/*                                                                  */ 01151000
*/********************************************************************/ 01152000
*                                                                  0398 01153000
*CPUREC:                                                           0398 01154000
*   IF PRDADDR>MAXCPUAD THEN        /* IS CPU ADDR VALID Y02006      */ 01155000
CPUREC   ICM   @04,7,PRDINPTR(PARMPTR)                             0398 01156000
         CLC   PRDADDR(4,@04),@CB00055                             0398 01157000
         BNH   @RF00398                                            0398 01158000
*     DO;                                                          0399 01159000
*       CURADDR=INITADDR;           /* REINITIALIZE CURRENT ADDRESS     01160000
*                                      Y02006                        */ 01161000
         MVC   CURADDR(4),@CB00069                                 0400 01162000
*       BADREC=SWITCHON;            /* INDICATE RECORD NOT PLACED  0401 01163000
*                                      INTO MAP Y02006               */ 01164000
         OI    BADREC,B'00000010'                                  0401 01165000
*       GO TO MAPRET;               /* RETURN TO CALLER Y02006       */ 01166000
         B     MAPRET                                              0402 01167000
*     END;                                                         0403 01168000
*   IF PRDADDR=CURADDR+1 THEN       /* IS CPU ADDRESS IN SEQUENCE  0404 01169000
*                                      Y02006                        */ 01170000
@RF00398 ICM   @04,7,PRDINPTR(PARMPTR)                             0404 01171000
         LA    @15,1                                               0404 01172000
         AL    @15,CURADDR                                         0404 01173000
         CL    @15,PRDADDR(,@04)                                   0404 01174000
         BE    @RT00404                                            0404 01175000
*     GO TO CHKVOLS;                /* YES--GO CHECK FOR VOLUME    0405 01176000
*                                      SWITCH Y02006                 */ 01177000
*   RESPECIFY                                                      0406 01178000
*    (REG0,                                                        0406 01179000
*     REG4) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 01180000
*   REG4=ADDR(NEWENTRY);            /* NOT IN SEQUENCE, GET STORAGE     01181000
*                                      FOR NEW ENTRY Y02 0006        */ 01182000
         LA    REG4,NEWENTRY                                       0407 01183000
*   REG0=DUMPFRMS;                  /* SET SIZE OF NEW ENTRY Y02006  */ 01184000
         LA    REG0,16                                             0408 01185000
*   GENERATE(GETMAIN EU,LV=(0),A=(R4));/* GET STORAGE FOR NEW ENTRY     01186000
*                                      Y02006                        */ 01187000
         GETMAIN EU,LV=(0),A=(R4)                                       01188000
*   RESPECIFY                                                      0410 01189000
*    (REG0,                                                        0410 01190000
*     REG4) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 01191000
*   IF CPUMAP=0 THEN                /* IS THIS FIRST CPU STATUS    0411 01192000
*                                      RECORD Y02006                 */ 01193000
         ICM   @10,15,CPUMAP(COMPTR)                               0411 01194000
         BNZ   @RF00411                                            0411 01195000
*     DO;                                                          0412 01196000
*       IF IOERR=SWITCHON THEN      /* WAS LAST RECORD IN ERROR    0413 01197000
*                                      Y02006                        */ 01198000
         TM    IOERR(COMPTR),B'10000000'                           0413 01199000
         BNO   @RF00413                                            0413 01200000
*         IPLCPU=256;               /* INDICATE IPLED CPU STATUS   0414 01201000
*                                      UNAVAINLABLE Y02006           */ 01202000
         MVC   IPLCPU(2,COMPTR),@CH00391                           0414 01203000
*       ELSE                                                       0415 01204000
*         IPLCPU=PRDCPUAD;          /* SAVE IPLED CPU ADDRESS Y02006 */ 01205000
         B     @RC00413                                            0415 01206000
@RF00413 ICM   @10,7,PRDINPTR(PARMPTR)                             0415 01207000
         MVC   IPLCPU(2,COMPTR),PRDCPUAD(@10)                      0415 01208000
*     END;                                                         0416 01209000
@RC00413 DS    0H                                                  0417 01210000
*   CURMAP=CPUMAP;                  /* SET PTR TO CPU STATUS MAPS  0417 01211000
*                                      Y02006                        */ 01212000
@RF00411 L     CURMAP,CPUMAP(,COMPTR)                              0417 01213000
*   LASTMAP=ADDR(CPUMAP);           /* ALSO SET PTR TO ADDR OF     0418 01214000
*                                      CURRENT MAP Y02006            */ 01215000
         LA    LASTMAP,CPUMAP(,COMPTR)                             0418 01216000
*   GO TO SCANMAP;                  /* NOW GO SCAN MAP Y02006        */ 01217000
         B     SCANMAP                                             0419 01218000
*   END MAPBUILD;                                                  0420 01219000
*                                                                  0421 01220000
*/********************************************************************/ 01221000
*/********************************************************************/ 01222000
*/*                                                                  */ 01223000
*/*           READ REQUESTS - MAP BUILD COMPLETE                     */ 01224000
*/*                                                                  */ 01225000
*/********************************************************************/ 01226000
*/********************************************************************/ 01227000
*/*                                                                  */ 01228000
*/*           DETERMINE TYPE OF READ REQUESTED.                      */ 01229000
*/*                                                                  */ 01230000
*/********************************************************************/ 01231000
*                                                                  0421 01232000
*TYPEREAD:                                                         0421 01233000
*   IOERR=SWTCHOFF;                 /* RESET IOERR SWITCH Y02006     */ 01234000
TYPEREAD NI    IOERR(COMPTR),B'01111111'                           0421 01235000
*   REQVOL=0;                       /* ZERO REQUESTED VOLUME         */ 01236000
         MVI   REQVOL,X'00'                                        0422 01237000
*   TTRNO=0;                        /* SET TTR VALUE TO 0            */ 01238000
         SLR   @10,@10                                             0423 01239000
         ST    @10,TTRNO                                           0423 01240000
*   IF BUFFVIRT^=ALLFOX THEN        /* VIRTUAL STORAGE READ REQUEST  */ 01241000
         SLR   @10,@10                                             0424 01242000
         BCTR  @10,0                                               0424 01243000
         C     @10,BUFFVIRT(,PARMPTR)                              0424 01244000
         BNE   @RT00424                                            0424 01245000
*     GO TO VIRTPROC;               /* YES - FIND TTR FOR POINT      */ 01246000
*   IF BUFFREAL^=ALLFOX THEN        /* REAL STORAGE READ REQUEST     */ 01247000
         C     @10,BUFFREAL(,PARMPTR)                              0426 01248000
         BNE   @RT00426                                            0426 01249000
*     GO TO REALPROC;               /* YES - FIND TTR FOR POINT      */ 01250000
*   GO TO CPUPROC;                  /* NO - CPU REQUEST TYPE         */ 01251000
         B     CPUPROC                                             0428 01252000
*/********************************************************************/ 01253000
*/*                                                                  */ 01254000
*/*           THIS IS ENTERED AFTER FINDING THE REQUESTED            */ 01255000
*/*           ADDRESS ON THE APPROPRIATE MAP.  THE POSITION          */ 01256000
*/*           HAS BEEN COMPUTED AND THE RECORD CAN BE POINTED        */ 01257000
*/*           TO AND READ. ANY VOLUME SWITCHING REQUIRED IS          */ 01258000
*/*           PERFORMED. THE READ COUNT IS UPDATED.                  */ 01259000
*/*                                                                  */ 01260000
*/********************************************************************/ 01261000
*                                                                  0429 01262000
*POINT:                                                            0429 01263000
*   IF VOLNO=BYTEOFF THEN           /* CURRENT VOLUME = 0            */ 01264000
POINT    CLI   VOLNO(VOLADDR),X'00'                                0429 01265000
         BE    @RT00429                                            0429 01266000
*     GO TO VOLRESET;               /* YES - RESET VOLUMES           */ 01267000
*   IF VOLNO=REQVOL THEN            /* REQUESTED VOLUME CURRENT      */ 01268000
         CLC   VOLNO(1,VOLADDR),REQVOL                             0431 01269000
         BE    @RT00431                                            0431 01270000
*     GO TO POINT2;                 /* YES - CONTINUE PROCESSING     */ 01271000
*   IF VOLNO>REQVOL THEN            /* REQ. VOL. LESS THAN CURRENT   */ 01272000
         CLC   VOLNO(1,VOLADDR),REQVOL                             0433 01273000
         BNH   @RF00433                                            0433 01274000
*     DO;                           /* YES - RESET VOLUMES           */ 01275000
*VOLRESET:                                                         0435 01276000
*       CALL DSOPEN;                /* CLOSE AND RE-OPEN D.S.        */ 01277000
VOLRESET BAL   @14,DSOPEN                                          0435 01278000
*       IF REQVOL=VOLNO1 THEN       /* FIRST VOLUME REQUESTED        */ 01279000
         CLI   REQVOL,1                                            0436 01280000
         BE    @RT00436                                            0436 01281000
*         GO TO POINT1;             /* YES - NO VOLUME SWITCHING     */ 01282000
*       VOLNO=VOLNO1;               /* SET VOLUME TO 1 FOR DIFFERENCE*/ 01283000
         MVI   VOLNO(VOLADDR),X'01'                                0438 01284000
*     END;                                                         0439 01285000
*   DO I=1 TO(REQVOL-VOLNO);        /* GET TO REQUESTED VOLUME       */ 01286000
@RF00433 LA    I,1                                                 0440 01287000
         B     @DE00440                                            0440 01288000
@DL00440 DS    0H                                                  0441 01289000
*     GENERATE(FEOV (R3),REWIND);   /* FORCE EOV UNTIL REQUESTED VOL */ 01290000
         FEOV (R3),REWIND                                               01291000
*   END;                                                           0442 01292000
         AH    I,@CH00042                                          0442 01293000
@DE00440 SLR   @10,@10                                             0442 01294000
         IC    @10,REQVOL                                          0442 01295000
         SLR   @06,@06                                             0442 01296000
         IC    @06,VOLNO(,VOLADDR)                                 0442 01297000
         SLR   @10,@06                                             0442 01298000
         CR    I,@10                                               0442 01299000
         BNH   @DL00440                                            0442 01300000
*POINT1:                                                           0443 01301000
*   VOLNO=REQVOL;                   /* MAKE REQUESTED VOLUME CURRENT */ 01302000
POINT1   MVC   VOLNO(1,VOLADDR),REQVOL                             0443 01303000
*POINT2:                                                           0444 01304000
*   SYNADSW=SWTCHOFF;               /* TURN OFF SYNAD SWITCH         */ 01305000
POINT2   NI    SYNADSW,B'11011111'                                 0444 01306000
*   GENERATE(POINT (R3),TTRNO);     /* POINT TO REQ. RECORD          */ 01307000
         POINT (R3),TTRNO                                               01308000
*   RESPECIFY                                                      0446 01309000
*     REG0 RESTRICTED;              /* RESTRICT REGISTERS Y02006     */ 01310000
*   REG0=BUFFPTR;                   /* ADDR OF INPUT BUFFER          */ 01311000
         SLR   REG0,REG0                                           0447 01312000
         ICM   REG0,7,BUFFPTR(PARMPTR)                             0447 01313000
*   GENERATE;                                                      0448 01314000
         READ  RDDECB,SF,(R3),(R0),'S' READ REQUESTED RECORD            01315000
         CHECK RDDECB                                                   01316000
*   RESPECIFY                                                      0449 01317000
*     REG0 UNRESTRICTED;            /* UNRESTRICT REGISTERS Y02006   */ 01318000
*   READNO=READNO+1;                /* INCREMENT READ COUNT          */ 01319000
         LA    @10,1                                               0450 01320000
         L     @08,READNO(,COMPTR)                                 0450 01321000
         ALR   @08,@10                                             0450 01322000
         ST    @08,READNO(,COMPTR)                                 0450 01323000
*   IF SYNADSW=SWTCHOFF THEN        /* SYNAD ENTERED                 */ 01324000
         TM    SYNADSW,B'00100000'                                 0451 01325000
         BZ    @RT00451                                            0451 01326000
*     GO TO CHKREQ;                 /* NO - CONTINUE PROCESSING      */ 01327000
*   RDERCNT=RDERCNT+1;              /* INCREMENT I/O ERROR COUNT     */ 01328000
         AL    @10,RDERCNT(,COMPTR)                                0453 01329000
         ST    @10,RDERCNT(,COMPTR)                                0453 01330000
*   GO TO ERREXT;                   /* MARK BUFFER INVALID           */ 01331000
         B     ERREXT                                              0454 01332000
*/********************************************************************/ 01333000
*/*                                                                  */ 01334000
*/* THE RECORD READ IS CHECKED TO VERIFY IT IS THE ONE REQUESTED.    */ 01335000
*/* IF LOCATION 0 WAS READ FOR AMDSADMP INPUT, THE CAW AND CSW       */ 01336000
*/* ARE UPDATED THEN CONTROL IS RETURNED TO AMDPRRDC.                */ 01337000
*/*                                                                  */ 01338000
*/********************************************************************/ 01339000
*                                                                  0455 01340000
*CHKREQ:                                                           0455 01341000
*   IF IOBCSWCT^=0 THEN             /* SHORT RECORD READ             */ 01342000
CHKREQ   SLR   @10,@10                                             0455 01343000
         L     @08,DCBIOBA                                         0455 01344000
         CH    @10,IOBCSWCT+22(,@08)                               0455 01345000
         BNE   @RT00455                                            0455 01346000
*     GO TO ERREXT;                 /* YES - MARK BUFFER INVALID     */ 01347000
*   IF PRDADDR^=REQADDR THEN        /* READ REQUESTED ADDR           */ 01348000
         SLR   @08,@08                                             0457 01349000
         ICM   @08,7,PRDINPTR(PARMPTR)                             0457 01350000
         CL    REQADDR,PRDADDR(,@08)                               0457 01351000
         BNE   @RT00457                                            0457 01352000
*     GO TO ERREXT;                 /* NO - MARK BUFFER INVALID      */ 01353000
*   IF QSADMP=SWITCHON&BUFFREAL=0 THEN/* READ FOR LOCATION 0 WITH  0459 01354000
*                                      SADMP INPUT Y02006            */ 01355000
         TM    QSADMP(COMPTR),B'00100000'                          0459 01356000
         BNO   @RF00459                                            0459 01357000
         C     @10,BUFFREAL(,PARMPTR)                              0459 01358000
         BNE   @RF00459                                            0459 01359000
*     PRDDATA(65:76)=SACSWCAW;      /* YES--THEN RESTORE CAW AND CSW    01360000
*                                      Y02006                        */ 01361000
         MVC   PRDDATA+64(12,@08),SACSWCAW(COMPTR)                 0460 01362000
*   RETURN;                         /* RETURN TO AMDPRRDC            */ 01363000
         B     @EL00001                                            0461 01364000
*                                                                  0462 01365000
*/********************************************************************/ 01366000
*/*                                                                  */ 01367000
*/*           ENTERED WHEN A REAL STORAGE ADDRESS IS REQUESTED.      */ 01368000
*/*           WHEN THE ADDRESS IS FOUND, THE POSITION OF THE RECORD  */ 01369000
*/*           WITHIN THE INPUT DATA SET IS COMPUTED AND CONTROL      */ 01370000
*/*           PASSED TO POINT.                                       */ 01371000
*/*                                                                  */ 01372000
*/********************************************************************/ 01373000
*                                                                  0462 01374000
*REALPROC:                                                         0462 01375000
*   REQADDR=BUFFREAL;               /* REQUESTED ADDRESS IS REAL     */ 01376000
REALPROC L     REQADDR,BUFFREAL(,PARMPTR)                          0462 01377000
*   MAPPTR=REALMAP;                 /* POINT TO REAL DUMP MAP        */ 01378000
         L     MAPPTR,REALMAP(,COMPTR)                             0463 01379000
*   CALL MAPSCAN;                   /* SEARCH FOR REQUESTED ADDRESS     01380000
*                                      Y020 06                       */ 01381000
         BAL   @14,MAPSCAN                                         0464 01382000
*   IF NOTFOUND=SWITCHON THEN       /* WAS REQUESTED ADDRESS FOUND IN   01383000
*                                      MAPS Y02006                   */ 01384000
         TM    NOTFOUND,B'00001000'                                0465 01385000
         BO    @RT00465                                            0465 01386000
*     GO TO ERREXT;                 /* NO--RETURN ERROR CONDITION  0466 01387000
*                                      Y02006                        */ 01388000
*   GO TO CALCBLK;                  /* YES--GO CALCULATE BLOCK     0467 01389000
*                                      POSITION Y02006               */ 01390000
         B     CALCBLK                                             0467 01391000
*/********************************************************************/ 01392000
*/*                                                                  */ 01393000
*/*           ENTERED WHEN A VIRTUAL STORAGE ADDRESS IS REQUESTED.   */ 01394000
*/*           WHEN THE ADDRESS IS FOUND, THE POSITION OF THE RECORD  */ 01395000
*/*           WITHIN THE INPUT DATA SET IS COMPUTED AND CONTROL      */ 01396000
*/*           PASSED TO POINT.                                       */ 01397000
*/*                                                                  */ 01398000
*/********************************************************************/ 01399000
*                                                                  0468 01400000
*VIRTPROC:                                                         0468 01401000
*   REQASID=BUFFASID;               /* SET REQUESTED ASID Y02006     */ 01402000
VIRTPROC MVC   REQASID(2),BUFFASID(PARMPTR)                        0468 01403000
*   REQADDR=BUFFVIRT;               /* REQUESTED ADDRESS IS VIRTUAL  */ 01404000
         L     REQADDR,BUFFVIRT(,PARMPTR)                          0469 01405000
*   IF ASIDNDX=0 THEN               /* ARE THERE ANY VIRTUAL MAPS  0470 01406000
*                                      Y02006                        */ 01407000
         L     @10,ASIDNDX(,COMPTR)                                0470 01408000
         LTR   @10,@10                                             0470 01409000
         BZ    @RT00470                                            0470 01410000
*     GO TO ERREXT;                 /* NO--EXIT NOT FOUND Y02006     */ 01411000
*   INDXADDR=ASIDNDX;               /* SET PTR TO ASID LIST Y02006   */ 01412000
         ST    @10,INDXADDR                                        0472 01413000
*   CALL ASIDSRCH;                  /* SEARCH FOR REQUESTED ASID   0473 01414000
*                                      Y02006                        */ 01415000
         BAL   @14,ASIDSRCH                                        0473 01416000
*   IF INDEX=0|ASDXASID(INDEX)=0 THEN/* WAS AN EMPTY SLOT FOUND    0474 01417000
*                                      INSTEAD Y02006                */ 01418000
         SLR   @10,@10                                             0474 01419000
         CR    INDEX,@10                                           0474 01420000
         BE    @RT00474                                            0474 01421000
         L     @08,INDXADDR                                        0474 01422000
         LR    @06,INDEX                                           0474 01423000
         ALR   @06,@06                                             0474 01424000
         ALR   @06,@08                                             0474 01425000
         SLR   @04,@04                                             0474 01426000
         ICM   @04,3,ASDXASID-2(@06)                               0474 01427000
         CR    @10,@04                                             0474 01428000
         BE    @RT00474                                            0474 01429000
*     GO TO FFFFCHK;                /* YES--THEN GO CHECK FOR ASID 0475 01430000
*                                      FFFF Y02006                   */ 01431000
*   MAPPTR=ASDXMAP(INDEX);          /* POINT TO VIRTUAL MAP Y02006   */ 01432000
         LR    @10,INDEX                                           0476 01433000
         SLA   @10,2                                               0476 01434000
         L     MAPPTR,ASDXMAP-4(@10,@08)                           0476 01435000
*   CALL MAPSCAN;                   /* GO SCAN FOR REQUESTED ADDRESS    01436000
*                                      Y02006                        */ 01437000
         BAL   @14,MAPSCAN                                         0477 01438000
*   IF NOTFOUND=SWTCHOFF THEN       /* WAS ADDRESS FOUND Y02006      */ 01439000
         TM    NOTFOUND,B'00001000'                                0478 01440000
         BZ    @RT00478                                            0478 01441000
*     GO TO CALCBLK;                /* YES--GO CALCULATE BLOCK     0479 01442000
*                                      POSITION Y02006               */ 01443000
*FFFFCHK:                                                          0480 01444000
*   REQASID=ALLFOX;                 /* TRY TO FIND COMMON ASID FFFF     01445000
*                                      Y02006                        */ 01446000
FFFFCHK  MVC   REQASID(2),@CB00051                                 0480 01447000
*   INDXADDR=ASIDNDX;               /* RESET PTR TO BEGINNING OF   0481 01448000
*                                      TABLES Y02006                 */ 01449000
         MVC   INDXADDR(4),ASIDNDX(COMPTR)                         0481 01450000
*   CALL ASIDSRCH;                  /* SEARCH FOR ASID FFFF Y02006   */ 01451000
         BAL   @14,ASIDSRCH                                        0482 01452000
*   IF ASDXASID(INDEX)=0|INDEX=0 THEN/* WAS AN EMPTY SLOT FOUND    0483 01453000
*                                      INSTEAD Y02006                */ 01454000
         SLR   @10,@10                                             0483 01455000
         L     @08,INDXADDR                                        0483 01456000
         LR    @06,INDEX                                           0483 01457000
         ALR   @06,@06                                             0483 01458000
         ALR   @06,@08                                             0483 01459000
         SLR   @04,@04                                             0483 01460000
         ICM   @04,3,ASDXASID-2(@06)                               0483 01461000
         CR    @10,@04                                             0483 01462000
         BE    @RT00483                                            0483 01463000
         CR    INDEX,@10                                           0483 01464000
         BE    @RT00483                                            0483 01465000
*     GO TO ERREXT;                 /* YES--THEN EXIT ERROR Y02006   */ 01466000
*   MAPPTR=ASDXMAP(INDEX);          /* POINT TO VIRTUAL MAP Y02006   */ 01467000
         LR    @10,INDEX                                           0485 01468000
         SLA   @10,2                                               0485 01469000
         L     MAPPTR,ASDXMAP-4(@10,@08)                           0485 01470000
*   CALL MAPSCAN;                   /* GO SCAN FOR REQUESTED ADDRESS    01471000
*                                      Y02006                        */ 01472000
         BAL   @14,MAPSCAN                                         0486 01473000
*   IF NOTFOUND=SWITCHON THEN       /* WAS ADDRESS FOUND Y02006      */ 01474000
         TM    NOTFOUND,B'00001000'                                0487 01475000
         BO    @RT00487                                            0487 01476000
*     GO TO ERREXT;                 /* NO--EXIT NOT FOUND Y02006     */ 01477000
*   BUFFCOM=SWITCHON;               /* YES--INDICATE DATE FROM COMMON   01478000
*                                      ASID Y02006                   */ 01479000
         OI    BUFFCOM(PARMPTR),B'01000000'                        0489 01480000
*   GO TO CALCBLK;                  /* GO CALCULATE BLOCK POSITION 0490 01481000
*                                      Y02006                        */ 01482000
         B     CALCBLK                                             0490 01483000
*/********************************************************************/ 01484000
*/*                                                                  */ 01485000
*/* ENTERED WHEN A CPU STATUS RECORD IS REQUESTED.                   */ 01486000
*/* WHEN THE CPU ADDRESS IS FOUND, THE POSITION OF THE RECORD        */ 01487000
*/* WITHIN THE INPUT DATA SET IS COMPUTED AND CONTROL                */ 01488000
*/* PASSED TO POINT.                                                 */ 01489000
*/*                                                                  */ 01490000
*/********************************************************************/ 01491000
*                                                                  0491 01492000
*CPUPROC:                                                          0491 01493000
*   REQADDR=BUFFCPU;                /* SET REQUESTED CPU ADDRESS   0491 01494000
*                                      Y02006                        */ 01495000
CPUPROC  LH    REQADDR,BUFFCPU(,PARMPTR)                           0491 01496000
*   MAPPTR=CPUMAP;                  /* SET PTR TO CPU MAP Y02006     */ 01497000
         L     MAPPTR,CPUMAP(,COMPTR)                              0492 01498000
*   CALL MAPSCAN;                   /* SEARCH FOR REQUESTED ADDRESS     01499000
*                                      Y02006                        */ 01500000
         BAL   @14,MAPSCAN                                         0493 01501000
*   IF NOTFOUND=SWITCHON THEN       /* WAS ADDRESS FOUND Y02006      */ 01502000
         TM    NOTFOUND,B'00001000'                                0494 01503000
         BO    @RT00494                                            0494 01504000
*     GO TO ERREXT;                 /* NO--EXIT NOT FOUND Y02006     */ 01505000
*   RELBLK=REQADDR-DUMPFADD;        /* COMPUTE RELATIVE BLOCK Y02006 */ 01506000
         LR    RELBLK,REQADDR                                      0496 01507000
         SL    RELBLK,DUMPFADD(,MAPPTR)                            0496 01508000
*   GO TO DCBGET;                   /* GO GET DCB Y02006             */ 01509000
         B     DCBGET                                              0497 01510000
*                                                                  0498 01511000
*/********************************************************************/ 01512000
*/*                                                                  */ 01513000
*/* THIS SECTION CALCULATES THE RELATIVE BLOCK FOR DATA RECORDS      */ 01514000
*/* AND SETS UP THE POINTER TO THE PROPER DCB.                       */ 01515000
*/*                                                                  */ 01516000
*/********************************************************************/ 01517000
*                                                                  0498 01518000
*CALCBLK:                           /* CALCULATE POSITION OF       0498 01519000
*                                      REQUESTED ADDRESS             */ 01520000
*   RELBLK=(REQADDR-DUMPFADD)/DUMPBLK;/* COMPUTE RELATIVE BLOCK    0498 01521000
*                                      Y02006                        */ 01522000
CALCBLK  LR    @00,REQADDR                                         0498 01523000
         SL    @00,DUMPFADD(,MAPPTR)                               0498 01524000
         SRDA  @00,32                                              0498 01525000
         D     @00,@CF00040                                        0498 01526000
         LR    RELBLK,@01                                          0498 01527000
*DCBGET:                                                           0499 01528000
*   CALL GETDCB;                    /* GET DCB ADDR AND REC/TRK VALUE*/ 01529000
DCBGET   BAL   @14,GETDCB                                          0499 01530000
*   IF RECTRK=0 THEN                /* TAPE INPUT                    */ 01531000
         ICM   @10,3,RECTRK                                        0500 01532000
         BZ    @RT00500                                            0500 01533000
*     GO TO TTRTAPE;                /* YES-COMPUTE TAPE BLOCK NUMBER */ 01534000
*/********************************************************************/ 01535000
*/*                                                                  */ 01536000
*/*            COMPUTE TTR OF DESIRED RECORD ON DIRECT ACCESS.       */ 01537000
*/*                                                                  */ 01538000
*/********************************************************************/ 01539000
*                                                                  0502 01540000
*TTRDA:                                                            0502 01541000
*   RELRECN=RELBLK-1+DUMPR;         /* COMPUTE RELATIVE RECORD NUMBER   01542000
*                                      Y02006                        */ 01543000
TTRDA    LR    RELRECN,RELBLK                                      0502 01544000
         BCTR  RELRECN,0                                           0502 01545000
         SLR   @10,@10                                             0502 01546000
         IC    @10,DUMPR(,MAPPTR)                                  0502 01547000
         ALR   RELRECN,@10                                         0502 01548000
*   R=RELRECN//RECTRK+1;            /* COMPUTE RECORD R Y02006       */ 01549000
         LH    @10,RECTRK                                          0503 01550000
         LR    @00,RELRECN                                         0503 01551000
         SRDA  @00,32                                              0503 01552000
         DR    @00,@10                                             0503 01553000
         AH    @00,@CH00042                                        0503 01554000
         STC   @00,R                                               0503 01555000
*   TT=DUMPTT+RELRECN/RECTRK;       /* COMPUTE RECORD TT Y02006      */ 01556000
         LR    @00,RELRECN                                         0504 01557000
         SRDA  @00,32                                              0504 01558000
         DR    @00,@10                                             0504 01559000
         AH    @01,DUMPTT(,MAPPTR)                                 0504 01560000
         STH   @01,TT                                              0504 01561000
*   GO TO POINT;                    /* GO TO READ REQUESTED RECORD   */ 01562000
         B     POINT                                               0505 01563000
*/********************************************************************/ 01564000
*/*                                                                  */ 01565000
*/*            COMPUTE BLOCK NUMBER OF DESIRED RECORD ON TAPE        */ 01566000
*/*                                                                  */ 01567000
*/********************************************************************/ 01568000
*                                                                  0506 01569000
*TTRTAPE:                                                          0506 01570000
*   TTRNO=RELBLK+DUMPTTR;           /* COMPUTE BLOCK NUMBER OR RECORD   01571000
*                                      Y02006                        */ 01572000
TTRTAPE  LR    @10,RELBLK                                          0506 01573000
         AL    @10,DUMPTTR(,MAPPTR)                                0506 01574000
         ST    @10,TTRNO                                           0506 01575000
*   GO TO POINT;                    /* GO TO READ REQUESTED RECORD   */ 01576000
         B     POINT                                               0507 01577000
*                                                                  0508 01578000
*/********************************************************************/ 01579000
*/*                                                                  */ 01580000
*/* THE FOLLOWING ROUTINE SEARCHES THE ASID LISTS FOR THE ASID       */ 01581000
*/* IN REQASID OR AN ASID OF ZERO.  ZERO INDICATES NO MORE ENTRIES   */ 01582000
*/* OR TABLES ARE USED.  WHEN FOUND 'INDEX' IS SET TO THAT ASID.     */ 01583000
*/* AN INDEX RETURNED OF ZERO INDICATES ALL ASID LISTS ARE FULL      */ 01584000
*/* AND THE REQUESTED ASID COULD NOT BE FOUND.                       */ 01585000
*/*                                                                  */ 01586000
*/********************************************************************/ 01587000
*                                                                  0508 01588000
*ASIDSRCH:                                                         0508 01589000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0508 01590000
ASIDSRCH DS    0H                                                  0509 01591000
*LOOP:                                                             0509 01592000
*   DO INDEX=1 TO ASIDCNT;          /* LOOP TO SEARCH ALL ASIDLISTS     01593000
*                                      Y02006                        */ 01594000
LOOP     LA    INDEX,1                                             0509 01595000
@DL00509 DS    0H                                                  0510 01596000
*     IF ASDXASID(INDEX)=REQASID|ASDXASID(INDEX)=0 THEN/* IS THIS THE   01597000
*                                      REQUESTED ASID OR 0 Y02006    */ 01598000
         L     @10,INDXADDR                                        0510 01599000
         LR    @08,INDEX                                           0510 01600000
         ALR   @08,@08                                             0510 01601000
         ST    @08,@TF00001                                        0510 01602000
         ALR   @08,@10                                             0510 01603000
         CLC   ASDXASID-2(2,@08),REQASID                           0510 01604000
         BE    @RT00510                                            0510 01605000
         AL    @10,@TF00001                                        0510 01606000
         SLR   @08,@08                                             0510 01607000
         ICM   @08,3,ASDXASID-2(@10)                               0510 01608000
         LTR   @08,@08                                             0510 01609000
         BZ    @RT00510                                            0510 01610000
*       RETURN;                     /* YES--THEN RETURN Y02006       */ 01611000
*   END;                            /* NO--KEEP LOOPING Y02006       */ 01612000
         AH    INDEX,@CH00042                                      0512 01613000
         CH    INDEX,@CH00065                                      0512 01614000
         BNH   @DL00509                                            0512 01615000
*   IF ASDXLNK^=0 THEN              /* IS THERE ANOTHER TABLE Y02006 */ 01616000
         L     @10,INDXADDR                                        0513 01617000
         L     @10,ASDXLNK(,@10)                                   0513 01618000
         LTR   @10,@10                                             0513 01619000
         BZ    @RF00513                                            0513 01620000
*     DO;                                                          0514 01621000
*       INDXADDR=ASDXLNK;           /* YES--SET PTR TO IT Y02006     */ 01622000
         ST    @10,INDXADDR                                        0515 01623000
*       GO TO LOOP;                 /* LOOP THROUGH THIS TABLE Y02006*/ 01624000
         B     LOOP                                                0516 01625000
*     END;                                                         0517 01626000
*   INDEX=0;                        /* INDICATE ASID NOT FOUND AND 0518 01627000
*                                      ALL TABLES FULL Y02006        */ 01628000
@RF00513 SLR   INDEX,INDEX                                         0518 01629000
*   END ASIDSRCH;                   /* RETURN TO CALLER Y02006       */ 01630000
@EL00004 DS    0H                                                  0519 01631000
@EF00004 DS    0H                                                  0519 01632000
@ER00004 BR    @14                                                 0519 01633000
*/********************************************************************/ 01634000
*/*                                                                  */ 01635000
*/*           THIS ROUTINE SCANS THE INPUT DUMP MAP FOR THE          */ 01636000
*/*           REQUESTED ADDRESS.  IF THE ADDRESS IS BETWEEN THE      */ 01637000
*/*           'FIRST' AND 'LAST' ADDRESSES REPRESENTED BY AN ENTRY,  */ 01638000
*/*           THEN CONTROL IS RETURNED TO THE CALLER.  IF THE        */ 01639000
*/*           REQUESTED ADDRESS IS NOT ON THE MAP, THE NOTFOUND      */ 01640000
*/*           SWITCH IS SET. MAPPTR POINTS TO THE FIRST              */ 01641000
*/*           MAP ENTRY FOR THE SEARCH.                              */ 01642000
*/*                                                                  */ 01643000
*/********************************************************************/ 01644000
*                                                                  0520 01645000
*MAPSCAN:                                                          0520 01646000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0520 01647000
MAPSCAN  DS    0H                                                  0521 01648000
*   NOTFOUND=SWTCHOFF;              /* RESET ERROR SWITCH OFF Y02006 */ 01649000
         NI    NOTFOUND,B'11110111'                                0521 01650000
*   IF MAPPTR=0 THEN                /* IS THERE A MAP TO SEARCH    0522 01651000
*                                      Y02006                        */ 01652000
         LTR   MAPPTR,MAPPTR                                       0522 01653000
         BNZ   @RF00522                                            0522 01654000
*     DO;                                                          0523 01655000
*       NOTFOUND=SWITCHON;          /* NO--RETURN NOT FOUND Y02006   */ 01656000
         OI    NOTFOUND,B'00001000'                                0524 01657000
*       RETURN;                     /* RETURN Y02006                 */ 01658000
@EL00005 DS    0H                                                  0525 01659000
@EF00005 DS    0H                                                  0525 01660000
@ER00005 BR    @14                                                 0525 01661000
*     END;                                                         0526 01662000
*MAPSCN1:                                                          0527 01663000
*   IF DUMPLADD<REQADDR THEN        /* ADDR IN THIS MAP ENTRY        */ 01664000
@RF00522 DS    0H                                                  0527 01665000
MAPSCN1  C     REQADDR,DUMPLADD(,MAPPTR)                           0527 01666000
         BNH   @RF00527                                            0527 01667000
*     DO;                                                          0528 01668000
*       MAPPTR=DUMPLINK;            /* NO - POINT TO NEXT ENTRY      */ 01669000
         SLR   @10,@10                                             0529 01670000
         ICM   @10,7,DUMPLINK(MAPPTR)                              0529 01671000
         LR    MAPPTR,@10                                          0529 01672000
*       IF MAPPTR^=0 THEN           /* END OF MAP LIST Y02006        */ 01673000
         LTR   MAPPTR,MAPPTR                                       0530 01674000
         BNZ   @RT00530                                            0530 01675000
*         GO TO MAPSCN1;            /* NO-- CONTINUE SCAN OF MAP   0531 01676000
*                                      Y02006                        */ 01677000
*       ELSE                                                       0532 01678000
*         DO;                                                      0532 01679000
*           NOTFOUND=SWITCHON;      /* YES--INDICATE ADDRESS NOT   0533 01680000
*                                      FOUND Y02006                  */ 01681000
         OI    NOTFOUND,B'00001000'                                0533 01682000
*           RETURN;                 /* RETURN NOT FOUND Y02006       */ 01683000
         B     @EL00005                                            0534 01684000
*         END;                                                     0535 01685000
*     END;                                                         0536 01686000
*   IF DUMPFADD>REQADDR THEN        /* ADDR IN THIS MAP ENTRY Y02006 */ 01687000
@RF00527 C     REQADDR,DUMPFADD(,MAPPTR)                           0537 01688000
         BNL   @RF00537                                            0537 01689000
*     DO;                                                          0538 01690000
*       NOTFOUND=SWITCHON;          /* NO--INDICATE ADDRESS NOT FOUND   01691000
*                                      Y02006                        */ 01692000
         OI    NOTFOUND,B'00001000'                                0539 01693000
*       RETURN;                     /* RETURN NOT FOUND Y02006       */ 01694000
         B     @EL00005                                            0540 01695000
*     END;                                                         0541 01696000
*   REQVOL=DUMPVOLN;                /* REQUEST VOLUME NUMBER IN MAP  */ 01697000
@RF00537 MVC   REQVOL(1),DUMPVOLN(MAPPTR)                          0542 01698000
*   REQVOLD=SWTCHOFF;               /* RESET FLAG BIT IN CASE ITS ON    01699000
*                                      Y02006                        */ 01700000
         NI    REQVOLD,B'01111111'                                 0543 01701000
*   END MAPSCAN;                    /* RETURN TO CALLER Y02006       */ 01702000
         B     @EL00005                                            0544 01703000
*                                                                  0545 01704000
*/********************************************************************/ 01705000
*/*                                                                  */ 01706000
*/*           THIS ROUTINE OBTAINS THE APPROPRIATE DCB ADDRESS       */ 01707000
*/*           FOR THE CURRENT READ OPERATION.  THE RECORDS           */ 01708000
*/*           PER TRACK VALUE AND CURRENT VOLUME NUMBER FOR          */ 01709000
*/*           THAT DATA SET IS OBTAINED.                             */ 01710000
*/*                                                                  */ 01711000
*/********************************************************************/ 01712000
*                                                                  0545 01713000
*GETDCB:                                                           0545 01714000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0545 01715000
GETDCB   DS    0H                                                  0546 01716000
*   RESPECIFY                                                      0546 01717000
*     REG14 RESTRICTED;             /* RESTRICT RETURN REG Y02006    */ 01718000
*   TEMPSAVE=REG14;                 /* SAVE RETURN REG SINCE GETRK IS   01719000
*                                      CALLED Y02006                 */ 01720000
         ST    REG14,TEMPSAVE                                      0547 01721000
*   RESPECIFY                                                      0548 01722000
*     REG14 UNRESTRICTED;           /* UNRESTRICT RETURN REG Y02006  */ 01723000
*   OPENJ=SWTCHOFF;                 /* INDICATE NORMAL OPEN REQUIRED */ 01724000
         NI    OPENJ,B'11111011'                                   0549 01725000
*   RECTRK=0;                       /* ZERO REC/TRK VALUE            */ 01726000
         SLR   @10,@10                                             0550 01727000
         STH   @10,RECTRK                                          0550 01728000
*   IF QPRDINIT=SWTCHOFF THEN       /* HAS PREAD INITIALIZED Y02006  */ 01729000
         TM    QPRDINIT(COMPTR),B'10000000'                        0551 01730000
         BNZ   @RF00551                                            0551 01731000
*     DO;                                                          0552 01732000
*       QPRDINIT=SWITCHON;          /* NO--SET SWITCH ON AND       0553 01733000
*                                      INITIALIZE Y02006             */ 01734000
         OI    QPRDINIT(COMPTR),B'10000000'                        0553 01735000
*       VOLSYSUT=BYTEOFF;           /* INIT. SYSUT1 VOLUME NUMBER    */ 01736000
         MVI   VOLSYSUT,X'00'                                      0554 01737000
*       VOLINDD=BYTEOFF;            /* INIT. INDD VOLUME NUMBER      */ 01738000
         MVI   VOLINDD,X'00'                                       0555 01739000
*       AINDCB=ADDR(INDCB);         /* SET IN DCB ADDRESS IN COMMON  */ 01740000
         LA    @10,INDCB                                           0556 01741000
         ST    @10,AINDCB(,COMPTR)                                 0556 01742000
*       ASYSUDCB=ADDR(SYSUDCB);     /* SET SYSUT1 DCB ADDR IN COMMON */ 01743000
         LA    @08,SYSUDCB                                         0557 01744000
         STCM  @08,7,ASYSUDCB(COMPTR)                              0557 01745000
*       REG3=AINDCB;                /* LOAD DCB REGISTER             */ 01746000
         LR    REG3,@10                                            0558 01747000
*       DCBDDNAM=INDD;              /* SET DDNAME INTO DCB Y02006    */ 01748000
         MVC   DCBDDNAM(8),INDD(COMPTR)                            0559 01749000
*       GEN(RDJFCB MF=(E,DCBLST));  /* READ JFCB FOR FILE POSITIONING*/ 01750000
         RDJFCB MF=(E,DCBLST)                                           01751000
*       IF FILESEQ^=0 THEN          /* TEST TO INSURE THAT A FILE  0561 01752000
*                                      SEQ-NO ON DD IS NOT IGNORED   */ 01753000
         LH    @10,FILESEQ(,COMPTR)                                0561 01754000
         LTR   @10,@10                                             0561 01755000
         BZ    @RF00561                                            0561 01756000
*         JFCBFLSQ=FILESEQ;         /* MOVE FILE SEQ-NO FROM COMMON  */ 01757000
         LA    @08,JFCBBUF                                         0562 01758000
         STH   @10,JFCBFLSQ+68(,@08)                               0562 01759000
*       JFCBUFNO=BYTEOFF;           /* SET BUFFER NO. TO ZERO        */ 01760000
@RF00561 LA    @10,JFCBBUF                                         0563 01761000
         MVI   JFCBUFNO+88(@10),X'00'                              0563 01762000
*       JFCBMASK(33)=SWTCHOFF;      /* SUPPRESS WRITING JFCB         */ 01763000
         NI    JFCBMASK+76(@10),B'01111111'                        0564 01764000
*       JFCBTSDM='08'X;             /* BACK TO JOB QUEUE             */ 01765000
         MVI   JFCBTSDM+52(@10),X'08'                              0565 01766000
*     END;                                                         0566 01767000
*   IF DUMPDEV=SWITCHON THEN        /* IS MAP ENTRY FOR A TAPE DEVICE   01768000
*                                      Y02006                        */ 01769000
@RF00551 TM    DUMPDEV(MAPPTR),B'10000000'                         0567 01770000
         BNO   @RF00567                                            0567 01771000
*     DO;                                                          0568 01772000
*       REG3=AINDCB;                /* YES--SET DCB ADDRESS Y02006   */ 01773000
         L     REG3,AINDCB(,COMPTR)                                0569 01774000
*       VOLADDR=ADDR(VOLINDD);      /* MAKE INDD VOLUME CURRENT    0570 01775000
*                                      Y02006                        */ 01776000
         LA    VOLADDR,VOLINDD                                     0570 01777000
*       CURDDNAM=INDD;              /* MAKE INDD DDNAME CURRENT    0571 01778000
*                                      Y02006                        */ 01779000
         MVC   CURDDNAM(8),INDD(COMPTR)                            0571 01780000
*       OPENJ=SWITCHON;             /* INDICATE OPEN TYPE=J REQUIRED    01781000
*                                      Y02006                        */ 01782000
         OI    OPENJ,B'00000100'                                   0572 01783000
*       GO TO DCBRET;               /* RETURN Y02006                 */ 01784000
         B     DCBRET                                              0573 01785000
*     END;                                                         0574 01786000
*   IF QUT1LOD=SWITCHON THEN        /* IS SYSUT1 BEING USED Y02006   */ 01787000
@RF00567 TM    QUT1LOD(COMPTR),B'00000010'                         0575 01788000
         BO    @RT00575                                            0575 01789000
*     GO TO RDSYSUT1;               /* YES--GO TO SYSUT1 ROUTINE   0576 01790000
*                                      Y02006                        */ 01791000
*   REG3=AINDCB;                    /* GET INDCB ADDRESS             */ 01792000
         L     REG3,AINDCB(,COMPTR)                                0577 01793000
*   VOLADDR=ADDR(VOLINDD);          /* MAKE INDD VOLUME CURRENT      */ 01794000
         LA    VOLADDR,VOLINDD                                     0578 01795000
*   CURDDNAM=INDD;                  /* MAKE INDD DDNAME CURRENT      */ 01796000
         MVC   CURDDNAM(8),INDD(COMPTR)                            0579 01797000
*   IF INDDREC=0 THEN               /* INITIALIZED INDD REC/TRK      */ 01798000
         ICM   @10,3,INDDREC                                       0580 01799000
         BNZ   @RF00580                                            0580 01800000
*     DO;                           /* NO -                          */ 01801000
*       CALL GETRCTK;               /* COMPUTE REC/TRK VALUE         */ 01802000
         BAL   @14,GETRCTK                                         0582 01803000
*       INDDREC=RECTRK;             /* SAVE INDD REC/TRK VALUE       */ 01804000
         MVC   INDDREC(2),RECTRK                                   0583 01805000
*     END;                                                         0584 01806000
*   ELSE                            /* YES -                         */ 01807000
*     RECTRK=INDDREC;               /* GET INDD REC/TRK VALUE        */ 01808000
         B     @RC00580                                            0585 01809000
@RF00580 MVC   RECTRK(2),INDDREC                                   0585 01810000
*   GO TO DCBRET;                   /* RETURN TO CALLER Y02006       */ 01811000
         B     DCBRET                                              0586 01812000
*RDSYSUT1:                                                         0587 01813000
*   REG3=ADDR(SYSUDCB);             /* GET SYSUT1 DCB ADDRESS        */ 01814000
RDSYSUT1 LA    REG3,SYSUDCB                                        0587 01815000
*   VOLADDR=ADDR(VOLSYSUT);         /* MAKE SYSUT1 VOLUME CURRENT    */ 01816000
         LA    VOLADDR,VOLSYSUT                                    0588 01817000
*   CURDDNAM=NAMSYSUT;              /* MAKE SYSUT1 DDNAME CURRENT    */ 01818000
         MVC   CURDDNAM(8),NAMSYSUT                                0589 01819000
*   IF SYSUTREC=0 THEN              /* INITIALIZED SYSUT1 REC/TRK    */ 01820000
         ICM   @10,3,SYSUTREC                                      0590 01821000
         BNZ   @RF00590                                            0590 01822000
*     DO;                           /* NO -                          */ 01823000
*       CALL GETRCTK;               /* COMPUTE REC/TRK VALUE         */ 01824000
         BAL   @14,GETRCTK                                         0592 01825000
*       SYSUTREC=RECTRK;            /* SAVE SYSUT1 REC/TRK VALUE     */ 01826000
         MVC   SYSUTREC(2),RECTRK                                  0593 01827000
*     END;                                                         0594 01828000
*   ELSE                            /* YES -                         */ 01829000
*     RECTRK=SYSUTREC;              /* GET SYSUT1 REC/TRK VALUE      */ 01830000
         B     @RC00590                                            0595 01831000
@RF00590 MVC   RECTRK(2),SYSUTREC                                  0595 01832000
*DCBRET:                                                           0596 01833000
*   RESPECIFY                                                      0596 01834000
*     REG14 RESTRICTED;             /* RESTRICT RETURN REG Y02006    */ 01835000
@RC00590 DS    0H                                                  0596 01836000
DCBRET   DS    0H                                                  0597 01837000
*   REG14=TEMPSAVE;                 /* RESTORE RETURN REG Y02006     */ 01838000
         L     REG14,TEMPSAVE                                      0597 01839000
*   RESPECIFY                                                      0598 01840000
*     REG14 UNRESTRICTED;           /* UNRESTRICT RETURN REG Y02006  */ 01841000
*   END GETDCB;                     /* RETURN TO CALLER Y02006       */ 01842000
@EL00006 DS    0H                                                  0599 01843000
@EF00006 DS    0H                                                  0599 01844000
@ER00006 BR    @14                                                 0599 01845000
*/********************************************************************/ 01846000
*/*                                                                  */ 01847000
*/*           COMPUTE NUMBER OF BUFFSIZE RECORDS PER TRACK           */ 01848000
*/*           ON THE DIRECT ACCESS DEVICE ASSOCIATED WITH            */ 01849000
*/*           THE CURRENT DATA SET.  THE ALGORITHM USED IS           */ 01850000
*/*           THE SAME AS DESCRIBED IN THE DATA MANAGEMENT FOR SYSTEM*/ 01851000
*/*           PROGRAMMERS SRL UNDER THE DEVTYPE MACRO                */ 01852000
*/*           INSTRUCTION, USING THE INFORMATION RETURNED BY         */ 01853000
*/*           THE DEVTYPE MACRO INSTRUCTION.  REGISTER 3             */ 01854000
*/*           CONTAINS THE DCB ADDRESS.                              */ 01855000
*/*                                                                  */ 01856000
*/********************************************************************/ 01857000
*                                                                  0600 01858000
*GETRCTK:                                                          0600 01859000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0600 01860000
GETRCTK  DS    0H                                                  0601 01861000
*   GENERATE;                                                      0601 01862000
         DEVTYPE CURDDNAM,DEVAREA,DEVTAB ISSUE DEVTYPE FOR DEVICE       01863000
*                                      CHARACTERISTICS                  01864000
*   IF DEVAREA(3)^='20'X THEN       /* TAPE INPUT                    */ 01865000
         CLI   DEVAREA+2,X'20'                                     0602 01866000
         BNE   @RT00602                                            0602 01867000
*     RETURN;                       /* RETURN TO CALLER Y02006       */ 01868000
*   IF DEVTOLRB=SWITCHON THEN       /* DEVICE TOLERANCE REQUIRED     */ 01869000
         TM    DEVTOLRB,B'00000001'                                0604 01870000
         BNO   @RF00604                                            0604 01871000
*     DO;                                                          0605 01872000
*       N2=BUFFSIZE*DEVTOLR;        /* YES - FIGURE IN TOLERANCE     */ 01873000
         LH    N2,DEVTOLR                                          0606 01874000
         MH    N2,@CH00038                                         0606 01875000
*       N2=N2/512;                                                 0607 01876000
         SRL   N2,9                                                0607 01877000
*     END;                                                         0608 01878000
*   ELSE                                                           0609 01879000
*     N2=BUFFSIZE;                  /* NO - SET UP DATA RECORD LENGTH*/ 01880000
         B     @RC00604                                            0609 01881000
@RF00604 LH    N2,@CH00038                                         0609 01882000
*   IF DEV2BOV=SWTCHOFF THEN        /* TWO BYTE OVERHEAD REQUIRED    */ 01883000
@RC00604 TM    DEV2BOV,B'00001000'                                 0610 01884000
         BNZ   @RF00610                                            0610 01885000
*     N2=N2+(DEVADOVH-DEVOVRHD);    /* NO - ADD OVERHEAD     @ZA00400*/ 01886000
         SLR   @10,@10                                             0611 01887000
         IC    @10,DEVADOVH                                        0611 01888000
         SLR   @06,@06                                             0611 01889000
         IC    @06,DEVOVRHD                                        0611 01890000
         SLR   @10,@06                                             0611 01891000
         ALR   N2,@10                                              0611 01892000
*   ELSE                                                           0612 01893000
*     N2=N2+DEVKYOVH;               /* ADD 2 BYTE OVERHEAD           */ 01894000
         B     @RC00610                                            0612 01895000
@RF00610 AH    N2,DEVKYOVH                                         0612 01896000
*   RECTRK=1+(DEVMAXTK-N2)/N2;      /* COMPUTE THE NUMBER OF       0613 01897000
*                                      RECORDS/TRACK                 */ 01898000
@RC00610 LH    @00,DEVMAXTK                                        0613 01899000
         SLR   @00,N2                                              0613 01900000
         SRDA  @00,32                                              0613 01901000
         DR    @00,N2                                              0613 01902000
         LA    @01,1(,@01)                                         0613 01903000
         STH   @01,RECTRK                                          0613 01904000
*   END GETRCTK;                    /* RETURN TO GETDCB ROUTINE    0614 01905000
*                                      Y02006                        */ 01906000
@EL00007 DS    0H                                                  0614 01907000
@EF00007 DS    0H                                                  0614 01908000
@ER00007 BR    @14                                                 0614 01909000
*                                                                  0615 01910000
*/********************************************************************/ 01911000
*/*                                                                  */ 01912000
*/*           THIS ROUTINE CLOSES THE CURRENT DATA SET               */ 01913000
*/*           AND THEN RE-OPENS IT IN ORDER TO RE-POSITION           */ 01914000
*/*           IT TO THE BEGINNING.  IT PERFORMS A NORMAL             */ 01915000
*/*           OPEN FOR SYSUT1, AND AN OPEN TYPE=J FOR                */ 01916000
*/*           INDD.  REGISTER 3 CONTAINS THE CURRENT DCB ADDRESS.    */ 01917000
*/*                                                                  */ 01918000
*/********************************************************************/ 01919000
*                                                                  0615 01920000
*DSOPEN:                                                           0615 01921000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0615 01922000
DSOPEN   DS    0H                                                  0616 01923000
*   GENERATE;                                                      0616 01924000
         CLOSE ((R3),REREAD)           POSITION DATA SET TO BEGINNING   01925000
*   IF OPENJ=SWTCHOFF THEN          /* OPEN TYPE=J REQUIRED          */ 01926000
         TM    OPENJ,B'00000100'                                   0617 01927000
         BNZ   @RF00617                                            0617 01928000
*     GENERATE;                                                    0618 01929000
*                                   /* NO - PERFORM NORMAL OPEN      */ 01930000
         OPEN  ((R3),(INPUT,REREAD))   RE-OPEN DATA SET                 01931000
*   ELSE                            /* YES -                         */ 01932000
*     GENERATE;                                                    0619 01933000
         B     @RC00617                                            0619 01934000
@RF00617 DS    0H                                                  0619 01935000
*                                   /* PERFORM OPEN TYPE=J           */ 01936000
         OPEN  (,(INPUT,REREAD)),MF=(E,DCBLST),TYPE=J                   01937000
*     END DSOPEN;                   /* RETURN TO CALLER Y02006       */ 01938000
@EL00008 DS    0H                                                  0620 01939000
@EF00008 DS    0H                                                  0620 01940000
@ER00008 BR    @14                                                 0620 01941000
*                                                                  0621 01942000
*/********************************************************************/ 01943000
*/*                                                                  */ 01944000
*/*           ENTERED WHEN A PREFORMATTED RECORD IS                  */ 01945000
*/*           FOUND IN THE INPUT DATA SET. THE RECORD                */ 01946000
*/*           IS MOVED TO THE BUFFER POINTED TO BY                   */ 01947000
*/*           CUFBUF IN COMMON AND WRITTEN TO THE                    */ 01948000
*/*           PRINTER DATA SET.                                      */ 01949000
*/*                                                                  */ 01950000
*/********************************************************************/ 01951000
*                                                                  0621 01952000
*PREFMT:                                                           0621 01953000
*   IF PREFMTSW=SWITCHON THEN       /* FIRST TIME THRU Y02006        */ 01954000
PREFMT   TM    PREFMTSW,B'00010000'                                0621 01955000
         BO    @RT00621                                            0621 01956000
*     GO TO PRINT;                  /* NO - WRITE RECORD             */ 01957000
*   PREFMTSW=SWITCHON;              /* SET PREFORMATTED DUMP SW    0623 01958000
*                                      Y02006                        */ 01959000
         OI    PREFMTSW,B'00010000'                                0623 01960000
*   PREFM=SWITCHON;                 /* INDICATE PREFORMATTED DUMP  0624 01961000
*                                      Y02006                        */ 01962000
         OI    PREFM(COMPTR),B'00000010'                           0624 01963000
*   STOPSAVE=STOPEXIT;              /* SAVE CALLER'S STOP RTN.       */ 01964000
         MVC   STOPSAVE(4),STOPEXIT(COMPTR)                        0625 01965000
*   STOPEXIT=ADDR(TREADSTP);        /* SET UP STOP EXIT CLEAR TITLE     01966000
*                                      FIELDS                        */ 01967000
         LA    @08,TREADSTP                                        0626 01968000
         ST    @08,STOPEXIT(,COMPTR)                               0626 01969000
*   TITLEMOD(8:15)='PREFORM';                                      0627 01970000
         MVI   TITLEMOD+14(COMPTR),C' '                            0627 01971000
         MVC   TITLEMOD+7(7,COMPTR),@CC00660                       0627 01972000
*   TITLEDTE(6:13)=' ';                                            0628 01973000
         MVI   TITLEDTE+6(COMPTR),C' '                             0628 01974000
         MVC   TITLEDTE+7(6,COMPTR),TITLEDTE+6(COMPTR)             0628 01975000
         MVI   TITLEDTE+5(COMPTR),C' '                             0628 01976000
*   TITLETME(6:13)=' ';                                            0629 01977000
         MVI   TITLETME+6(COMPTR),C' '                             0629 01978000
         MVC   TITLETME+7(6,COMPTR),TITLETME+6(COMPTR)             0629 01979000
         MVI   TITLETME+5(COMPTR),C' '                             0629 01980000
*   GEN REFS(AWRITE) FLOWS(TREADSTP)(BRWRITE SKIP);/* STA RT ON NEW     01981000
*                                      PAGE Y02006                   */ 01982000
         BRWRITE SKIP                                                   01983000
*PRINT:                                                            0631 01984000
*   OUTBUF=PRDINPUT(1:BUFFSIZE-IOBCSWCT);/* MOVE RECORD TO BUFFER  0631 01985000
*                                      Y02006                        */ 01986000
PRINT    L     @08,CURBUF(,COMPTR)                                 0631 01987000
         MVI   OUTBUF+1(@08),C' '                                  0631 01988000
         MVC   OUTBUF+2(131,@08),OUTBUF+1(@08)                     0631 01989000
         LH    @04,@CH00038                                        0631 01990000
         L     @01,DCBIOBA                                         0631 01991000
         SH    @04,IOBCSWCT+22(,@01)                               0631 01992000
         BCTR  @04,0                                               0631 01993000
         ICM   @01,7,PRDINPTR(PARMPTR)                             0631 01994000
         EX    @04,@SM00682                                        0631 01995000
*   GEN REFS(AWRITE) FLOWS(TREADSTP)(BRWRITE 1);/* WRITE RECORD    0632 01996000
*                                      Y02006                        */ 01997000
         BRWRITE 1                                                      01998000
*   GO TO MAPREAD;                  /* LOOP TO GET NEXT SHORT RECORD */ 01999000
         B     MAPREAD                                             0633 02000000
*/********************************************************************/ 02001000
*/*                                                                  */ 02002000
*/*    STOP EXIT - TO GET CONTROL IF STOP IS ENTERED BY OPERATOR     */ 02003000
*/*                                                                  */ 02004000
*/********************************************************************/ 02005000
*                                                                  0634 02006000
*TREADSTP:                                                         0634 02007000
*   GEN;                                                           0634 02008000
TREADSTP DS    0H                                                  0634 02009000
         USING *,R15           TEMPORARILY USE REG 15 AS BASE           02010000
         LA    R13,@SA00001        POINT TO SAVE AREA          Y02006   02011000
         LM    R14,R12,12(R13)     RELOAD REGS                          02012000
         DROP  R15                 SHIFT BACK TO REGULAR BASE           02013000
*   GO TO ERREXT;                   /* PREPARE FOR EXIT TO AMDPRRDC  */ 02014000
         B     ERREXT                                              0635 02015000
*                                                                  0636 02016000
*/********************************************************************/ 02017000
*/*                                                                  */ 02018000
*/*           ERROR EXIT ENTERED ON VARIOUS ERROR CONDITIONS.        */ 02019000
*/*           IF A PREFORMATTED DUMP WAS BEING PROCESSED, THE        */ 02020000
*/*           STOP EXIT ADDRESS IN COMMON IS RESTORED.  THE          */ 02021000
*/*           BUFFER IS MARKED INVALID AND CONTROL IS RETURNED       */ 02022000
*/*           TO AMDPRRDC.                                           */ 02023000
*/*                                                                  */ 02024000
*/********************************************************************/ 02025000
*                                                                  0636 02026000
*ERREXT:                                                           0636 02027000
*   IF PREFMTSW=SWITCHON THEN       /* PREFORMATTED DUMP Y02006      */ 02028000
ERREXT   TM    PREFMTSW,B'00010000'                                0636 02029000
         BNO   @RF00636                                            0636 02030000
*     STOPEXIT=STOPSAVE;            /* YES - RESTORE STOP EXIT       */ 02031000
         MVC   STOPEXIT(4,COMPTR),STOPSAVE                         0637 02032000
*   BUFFINVL=SWITCHON;              /* MARK BUFFER INVALID Y02006    */ 02033000
@RF00636 OI    BUFFINVL(PARMPTR),B'10000000'                       0638 02034000
*   RETURN;                         /* RETURN TO AMDPRRDC Y02006     */ 02035000
         B     @EL00001                                            0639 02036000
*/********************************************************************/ 02037000
*/*                                                                  */ 02038000
*/*           ENTERED WHEN AN I/O ERROR OCCURS READING THE           */ 02039000
*/*           INPUT DATA SET.  THE SYNAD SWITCH IS SET AND           */ 02040000
*/*           CONTROL PASSED TO THE INSTRUCTION FOLLOWING            */ 02041000
*/*           THE LAST CHECK ISSUED.                                 */ 02042000
*/*                                                                  */ 02043000
*/********************************************************************/ 02044000
*                                                                  0640 02045000
*IOERROR:                                                          0640 02046000
*   SYNADSW=SWITCHON;               /* SET SYNAD SWITCH Y02006       */ 02047000
IOERROR  OI    SYNADSW,B'00100000'                                 0640 02048000
*   IOERR=SWITCHON;                 /* SIGNAL I/O ERROR Y02006       */ 02049000
         OI    IOERR(COMPTR),B'10000000'                           0641 02050000
*   GEN( BR 14 );                   /* RETURN TO LAST CHECK Y02006   */ 02051000
          BR 14                                                         02052000
*   GEN;                                                           0643 02053000
DCBLST   RDJFCB  (INDCB),MF=L                                           02054000
INDCB    DCB   EXLST=EXITLIST,                                         *02055000
               DSORG=PS,                                               *02056000
               RECFM=U,                                                *02057000
               MACRF=(RP),                                             *02058000
               BLKSIZE=4104,                                           *02059000
               LRECL=4104,                                             *02060000
               SYNAD=IOERROR,                                          *02061000
               EODAD=EOF                                                02062000
SYSUDCB  DCB   DSORG=PS,                                               *02063000
               DDNAME=SYSUT1,                                          *02064000
               RECFM=U,                                                *02065000
               MACRF=(RP),                                             *02066000
               BLKSIZE=4104,                                           *02067000
               LRECL=4104,                                             *02068000
               SYNAD=IOERROR,                                          *02069000
               EODAD=EOF                                                02070000
*   END AMDPREAD                                                   0644 02071000
*                                                                  0644 02072000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02073000
*/*%INCLUDE SYSLIB  (AMDDATA )                                       */ 02074000
*/*%INCLUDE SYSLIB  (COMMON  )                                       */ 02075000
*                                                                  0644 02076000
*       ;                                                          0644 02077000
         B     @EL00001                                            0644 02078000
@DATA    DS    0H                                                       02079000
@CH00042 DC    H'1'                                                     02080000
@CH00255 DC    H'5'                                                     02081000
@CH00065 DC    H'18'                                                    02082000
@CH00208 DC    H'133'                                                   02083000
@CH00391 DC    H'256'                                                   02084000
@CH00665 DC    H'3849'                                                  02085000
@CH00038 DC    H'4104'                                                  02086000
@CH00053 DC    XL2'FFFF'                                                02087000
@SM00682 MVC   OUTBUF(0,@08),PRDINPUT(@01)                              02088000
         DS    0F                                                       02089000
@SA00001 DS    18F                                                      02090000
@TF00001 DS    F                                                        02091000
         DS    0F                                                       02092000
@CF00677 DC    F'4095'                                                  02093000
@CF00040 DC    F'4096'                                                  02094000
@CH00040 EQU   @CF00040+2                                               02095000
@CF00061 DC    XL4'00000100'                                            02096000
@CF00063 DC    XL4'00000001'                                            02097000
         DS    0D                                                       02098000
INDXADDR DS    A                                                        02099000
TEMPSAVE DS    A                                                        02100000
STOPSAVE DC    A(0)                                                     02101000
TTRNO    DS    FL4                                                      02102000
         ORG   TTRNO                                                    02103000
TT       DS    FL2                                                      02104000
R        DS    CL1                                                      02105000
Z        DS    CL1                                                      02106000
         ORG   TTRNO+4                                                  02107000
NEWENTRY DS    A                                                        02108000
FIRSTTTR DC    F'0'                                                     02109000
SVCBUFAD DS    A                                                        02110000
MAPERROR DS    H                                                        02111000
RECTRK   DC    H'0'                                                     02112000
INDDREC  DC    H'0'                                                     02113000
SYSUTREC DC    H'0'                                                     02114000
CURVOL   DC    H'0'                                                     02115000
POSTIPL  DS    H                                                        02116000
REQVOL   DS    FL1                                                      02117000
         ORG   REQVOL                                                   02118000
REQVOLD  DS    BL1                                                      02119000
@NM00012 EQU   REQVOL+0                                                 02120000
         ORG   REQVOL+1                                                 02121000
@CC00071 DC    C'AMDSADMP'                                              02122000
@CC00660 DC    C'PREFORM'                                               02123000
@CB00575 DC    X'00000000000000000000'                                  02124000
@CB00051 DC    X'FFFFFFFF'                                              02125000
@CB00055 DC    X'0000003F'                                              02126000
@CB00069 DC    X'0000FFFF'                                              02127000
@CB00053 EQU   @CB00051                                                 02128000
@CB00067 DC    X'8000'                                                  02129000
REQASID  DS    CL2                                                      02130000
         DS    CL6                                                      02131000
DEVAREA  DS    CL20                                                     02132000
         ORG   DEVAREA                                                  02133000
@NM00005 DS    FL4                                                      02134000
@NM00006 DS    FL4                                                      02135000
@NM00007 DS    FL4                                                      02136000
DEVMAXTK DS    FL2                                                      02137000
DEVKYOVH DS    FL2                                                      02138000
DEVOVRHD DS    CL1                                                      02139000
DEVFLAGS DS    BL1                                                      02140000
         ORG   DEVFLAGS                                                 02141000
@NM00008 DS    BL1                                                      02142000
DEV2BOV  EQU   DEVFLAGS+0                                               02143000
@NM00009 EQU   DEVFLAGS+0                                               02144000
DEVTOLRB EQU   DEVFLAGS+0                                               02145000
         ORG   DEVAREA+18                                               02146000
DEVTOLR  DS    FL2                                                      02147000
         ORG   DEVAREA+20                                               02148000
EXITLIST DS    CL4                                                      02149000
         ORG   EXITLIST                                                 02150000
@NM00010 DC    X'87'                                                    02151000
JFCBAD   DC    AL3(JFCBBUF)                                             02152000
         ORG   EXITLIST+4                                               02153000
JFCBBUF  DS    CL176                                                    02154000
SWITCHES DS    BL1                                                      02155000
         ORG   SWITCHES                                                 02156000
MAPSW    DS    BL1                                                      02157000
HDRSW    EQU   SWITCHES+0                                               02158000
SYNADSW  EQU   SWITCHES+0                                               02159000
PREFMTSW EQU   SWITCHES+0                                               02160000
NOTFOUND EQU   SWITCHES+0                                               02161000
OPENJ    EQU   SWITCHES+0                                               02162000
BADREC   EQU   SWITCHES+0                                               02163000
@NM00011 EQU   SWITCHES+0                                               02164000
         ORG   SWITCHES+1                                               02165000
         DS    CL3                                                      02166000
CURADDR  DS    CL4                                                      02167000
CURASID  DS    CL2                                                      02168000
VOLINDD  DC    X'00'                                                    02169000
VOLSYSUT DC    X'00'                                                    02170000
NAMSYSUT DC    CL8'SYSUT1'                                              02171000
CURDDNAM DC    CL8' '                                                   02172000
SVCTTR   DS    CL4                                                      02173000
PATCH    DC    40F'0'                                                   02174000
AMDPREAD CSECT                                                          02175000
*                                                                       02176000
DTAE     EQU   32                  DATA EBCDIC BIT                      02177000
DTAC     EQU   16                  DATA IN CORE BIT                     02178000
DTAP     EQU   8                   DATA PTR BIT                         02179000
DTA      EQU   4                   DATA INCLUDED BIT                    02180000
LBLP     EQU   2                   LABEL PTR BIT                        02181000
LBL      EQU   1                   LABEL INCLUDED BIT                   02182000
AMDPREAD CSECT                                                          02183000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02184000
@01      EQU   01                                                       02185000
@02      EQU   02                                                       02186000
@03      EQU   03                                                       02187000
@04      EQU   04                                                       02188000
@05      EQU   05                                                       02189000
@06      EQU   06                                                       02190000
@07      EQU   07                                                       02191000
@08      EQU   08                                                       02192000
@09      EQU   09                                                       02193000
@10      EQU   10                                                       02194000
@11      EQU   11                                                       02195000
@12      EQU   12                                                       02196000
@13      EQU   13                                                       02197000
@14      EQU   14                                                       02198000
@15      EQU   15                                                       02199000
VOLADDR  EQU   @08                                                      02200000
RELRECN  EQU   @04                                                      02201000
RELBLK   EQU   @07                                                      02202000
INDEX    EQU   @07                                                      02203000
LASTENTY EQU   @07                                                      02204000
LASTMAP  EQU   @09                                                      02205000
CURMAP   EQU   @10                                                      02206000
LASTVOL  EQU   @08                                                      02207000
N2       EQU   @04                                                      02208000
N1       EQU   @08                                                      02209000
REQADDR  EQU   @09                                                      02210000
I        EQU   @07                                                      02211000
MAPPTR   EQU   @02                                                      02212000
REG0     EQU   @00                                                      02213000
REG1     EQU   @01                                                      02214000
REG3     EQU   @03                                                      02215000
REG4     EQU   @04                                                      02216000
REG14    EQU   @14                                                      02217000
COMPTR   EQU   @12                                                      02218000
PARMPTR  EQU   @05                                                      02219000
BASE1    EQU   @11                                                      02220000
BASE2    EQU   @10                                                      02221000
BASE3    EQU   @09                                                      02222000
BUFREG   EQU   @06                                                      02223000
CNTREG   EQU   @03                                                      02224000
COMBASE  EQU   @12                                                      02225000
LINEREG  EQU   @08                                                      02226000
PREG     EQU   @01                                                      02227000
R0       EQU   @00                                                      02228000
R1       EQU   @01                                                      02229000
R10      EQU   @10                                                      02230000
R11      EQU   @11                                                      02231000
R12      EQU   @12                                                      02232000
R13      EQU   @13                                                      02233000
R14      EQU   @14                                                      02234000
R15      EQU   @15                                                      02235000
R2       EQU   @02                                                      02236000
R3       EQU   @03                                                      02237000
R4       EQU   @04                                                      02238000
R5       EQU   @05                                                      02239000
R6       EQU   @06                                                      02240000
R7       EQU   @07                                                      02241000
R8       EQU   @08                                                      02242000
R9       EQU   @09                                                      02243000
STOPBASE EQU   @05                                                      02244000
DUMPFORM EQU   0                                                        02245000
@NM00001 EQU   DUMPFORM                                                 02246000
DUMPVOLN EQU   @NM00001                                                 02247000
DUMPDEV  EQU   DUMPVOLN                                                 02248000
DUMPLINK EQU   @NM00001+1                                               02249000
DUMPFADD EQU   DUMPFORM+4                                               02250000
DUMPLADD EQU   DUMPFORM+8                                               02251000
DUMPTTR  EQU   DUMPFORM+12                                              02252000
DUMPTT   EQU   DUMPTTR                                                  02253000
DUMPR    EQU   DUMPTTR+2                                                02254000
ASIDLIST EQU   0                                                        02255000
ASDXLNK  EQU   ASIDLIST                                                 02256000
ASDXASID EQU   ASIDLIST+4                                               02257000
ASDXMAP  EQU   ASIDLIST+40                                              02258000
BUFFMAP  EQU   0                                                        02259000
BUFFLINK EQU   BUFFMAP                                                  02260000
@NM00003 EQU   BUFFMAP+4                                                02261000
BUFFFLAG EQU   @NM00003                                                 02262000
BUFFINVL EQU   BUFFFLAG                                                 02263000
BUFFCOM  EQU   BUFFFLAG                                                 02264000
BUFFPTR  EQU   @NM00003+1                                               02265000
BUFFREAL EQU   BUFFMAP+8                                                02266000
BUFFVIRT EQU   BUFFMAP+12                                               02267000
BUFFASID EQU   BUFFMAP+16                                               02268000
BUFFCPU  EQU   BUFFMAP+18                                               02269000
JFCBTSDM EQU   0                                                        02270000
JFCBFLSQ EQU   0                                                        02271000
JFCBMASK EQU   0                                                        02272000
JFCBUFNO EQU   0                                                        02273000
VOLNO    EQU   0                                                        02274000
SVCBUF   EQU   0                                                        02275000
IOBCSWCT EQU   0                                                        02276000
OUTBUF   EQU   0                                                        02277000
PRDINPUT EQU   0                                                        02278000
PRDHDRID EQU   PRDINPUT                                                 02279000
PRDRECID EQU   PRDINPUT+1                                               02280000
PRDASID  EQU   PRDINPUT+2                                               02281000
PRDMODNM EQU   PRDINPUT+4                                               02282000
PRDTODVL EQU   PRDINPUT+12                                              02283000
PRDTITLE EQU   PRDINPUT+20                                              02284000
PRDREGS  EQU   PRDINPUT+120                                             02285000
PRDFPR   EQU   PRDREGS                                                  02286000
PRDCVT   EQU   PRDINPUT+288                                             02287000
PRDERRID EQU   PRDINPUT+324                                             02288000
COMMON   EQU   0                                                        02289000
CURBUF   EQU   COMMON+48                                                02290000
CVTADDR  EQU   COMMON+56                                                02291000
INDD     EQU   COMMON+68                                                02292000
FILESEQ  EQU   COMMON+76                                                02293000
READNO   EQU   COMMON+84                                                02294000
RDERCNT  EQU   COMMON+88                                                02295000
SWA      EQU   COMMON+122                                               02296000
SETCVTSW EQU   SWA                                                      02297000
SWB      EQU   COMMON+123                                               02298000
IOERR    EQU   SWB                                                      02299000
SWC      EQU   COMMON+124                                               02300000
POSITSW  EQU   SWC                                                      02301000
TREADIN  EQU   SWC                                                      02302000
SWD      EQU   COMMON+125                                               02303000
SWE      EQU   COMMON+126                                               02304000
BUILDMAP EQU   SWE                                                      02305000
SWF      EQU   COMMON+127                                               02306000
QPRDINIT EQU   SWF                                                      02307000
QSADMP   EQU   SWF                                                      02308000
DMPIC    EQU   SWF                                                      02309000
QUT1LOD  EQU   SWF                                                      02310000
BUFSW    EQU   COMMON+128                                               02311000
PREFM    EQU   BUFSW                                                    02312000
PRSW     EQU   COMMON+129                                               02313000
TITLEMOD EQU   COMMON+347                                               02314000
TITLEDTE EQU   COMMON+364                                               02315000
TITLETME EQU   COMMON+379                                               02316000
TABLE    EQU   COMMON+659                                               02317000
HEXTABL  EQU   TABLE+63                                                 02318000
AWRITE   EQU   COMMON+1500                                              02319000
STOPEXIT EQU   COMMON+1528                                              02320000
DCBADDRS EQU   COMMON+1608                                              02321000
AINDCB   EQU   DCBADDRS+12                                              02322000
@NM00065 EQU   DCBADDRS+16                                              02323000
@NM00066 EQU   @NM00065                                                 02324000
ASYSUDCB EQU   @NM00065+1                                               02325000
REALMAP  EQU   COMMON+1644                                              02326000
QASID    EQU   COMMON+1664                                              02327000
IPLCPU   EQU   COMMON+1666                                              02328000
SACSWCAW EQU   COMMON+1684                                              02329000
HDRREGS  EQU   COMMON+1696                                              02330000
HDRTITLE EQU   COMMON+1864                                              02331000
ASIDNDX  EQU   COMMON+1968                                              02332000
CPUMAP   EQU   COMMON+1972                                              02333000
I3800SW  EQU   COMMON+2076                                              02334000
TITLEKEY EQU   COMMON+2077                                              02335000
Z9ERRID  EQU   COMMON+2116                                              02336000
PRDINPTR EQU   BUFFPTR                                                  02337000
DEVADOVH EQU   DEVKYOVH+1                                               02338000
PRDFLC   EQU   PRDFPR                                                   02339000
PRDCSW   EQU   PRDFLC                                                   02340000
PRDCAW   EQU   PRDFLC+8                                                 02341000
@NM00016 EQU   PRDHDRID                                                 02342000
PRDADDR  EQU   @NM00016+4                                               02343000
PRDDATA  EQU   @NM00016+8                                               02344000
@NM00018 EQU   PRDHDRID                                                 02345000
PRDFLAGS EQU   @NM00018+2                                               02346000
PRDCPUAD EQU   @NM00018+6                                               02347000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02348000
@NM00024 EQU   @NM00018+8                                               02349000
@NM00023 EQU   @NM00018+4                                               02350000
@NM00022 EQU   @NM00018+3                                               02351000
@NM00021 EQU   PRDFLAGS                                                 02352000
PRDGPRVL EQU   PRDFLAGS                                                 02353000
PRDSSINV EQU   PRDFLAGS                                                 02354000
PRDUNIPR EQU   PRDFLAGS                                                 02355000
@NM00020 EQU   @NM00018+1                                               02356000
@NM00019 EQU   @NM00018                                                 02357000
@NM00017 EQU   @NM00016+2                                               02358000
PRDKEY2  EQU   @NM00016+1                                               02359000
PRDKEY1  EQU   @NM00016                                                 02360000
@NM00015 EQU   PRDFLC+12                                                02361000
Z9SUFLG  EQU   COMMON+2115                                              02362000
Z9SUBITS EQU   COMMON+2100                                              02363000
Z9SVCBUF EQU   COMMON+2096                                              02364000
TITLESTK EQU   TITLEKEY+12                                              02365000
@NM00076 EQU   TITLEKEY                                                 02366000
I3800204 EQU   I3800SW                                                  02367000
I380080  EQU   I3800SW                                                  02368000
I3800ULN EQU   I3800SW                                                  02369000
I3800KEY EQU   I3800SW                                                  02370000
@NM00075 EQU   I3800SW                                                  02371000
@NM00074 EQU   I3800SW                                                  02372000
@NM00073 EQU   I3800SW                                                  02373000
@NM00072 EQU   I3800SW                                                  02374000
CSADDR   EQU   COMMON+2072                                              02375000
@NM00071 EQU   COMMON+2070                                              02376000
TOPICHDR EQU   COMMON+2060                                              02377000
DFLTCSA  EQU   COMMON+2056                                              02378000
LPAMAX   EQU   COMMON+2052                                              02379000
DNUCTOP  EQU   COMMON+2048                                              02380000
XLMAX    EQU   COMMON+2044                                              02381000
DQEMAX   EQU   COMMON+2042                                              02382000
ASCBMAX  EQU   COMMON+2040                                              02383000
TCBMAX   EQU   COMMON+2038                                              02384000
SRBMAX   EQU   COMMON+2036                                              02385000
DDMAX    EQU   COMMON+2034                                              02386000
DEBMAX   EQU   COMMON+2032                                              02387000
JPQMAX   EQU   COMMON+2030                                              02388000
LLEMAX   EQU   COMMON+2028                                              02389000
PQEMAX   EQU   COMMON+2026                                              02390000
RBMAX    EQU   COMMON+2024                                              02391000
@NM00070 EQU   COMMON+2023                                              02392000
EXITFLAG EQU   COMMON+2022                                              02393000
AUSRASID EQU   COMMON+2020                                              02394000
AUSRTCBA EQU   COMMON+2016                                              02395000
AUSRDEL  EQU   COMMON+2012                                              02396000
AUSREXIT EQU   COMMON+2008                                              02397000
AUSRINIT EQU   COMMON+2004                                              02398000
ASRBFMT  EQU   COMMON+2000                                              02399000
AASCBFMT EQU   COMMON+1996                                              02400000
BRRDADJ  EQU   COMMON+1992                                              02401000
BRRDINIT EQU   COMMON+1988                                              02402000
BRRDDATA EQU   COMMON+1984                                              02403000
BUFERMAP EQU   COMMON+1980                                              02404000
ASCBMAP  EQU   COMMON+1976                                              02405000
@NM00069 EQU   COMMON+1964                                              02406000
ASVTADDR EQU   COMMON+1680                                              02407000
PREFXRGV EQU   COMMON+1676                                              02408000
PREFXRGR EQU   COMMON+1672                                              02409000
CURASCB  EQU   COMMON+1668                                              02410000
QAPFT    EQU   COMMON+1660                                              02411000
@NM00068 EQU   COMMON+1656                                              02412000
REALMAX  EQU   COMMON+1652                                              02413000
SEGTABOR EQU   COMMON+1648                                              02414000
@NM00067 EQU   COMMON+1641                                              02415000
EDITER   EQU   COMMON+1640                                              02416000
AROOT    EQU   COMMON+1636                                              02417000
AEDITCB  EQU   COMMON+1632                                              02418000
TRCCOUNT EQU   COMMON+1628                                              02419000
ENDLIST  EQU   @NM00066                                                 02420000
ARDRDCB  EQU   DCBADDRS+8                                               02421000
APTRDCB  EQU   DCBADDRS+4                                               02422000
AOUTDCB  EQU   DCBADDRS                                                 02423000
ATCBSMRY EQU   COMMON+1604                                              02424000
ATCBSMFR EQU   COMMON+1600                                              02425000
ONGOPTR  EQU   COMMON+1596                                              02426000
AEND     EQU   COMMON+1592                                              02427000
AERRMSGA EQU   COMMON+1584                                              02428000
BUFREINT EQU   COMMON+1580                                              02429000
BUFSUM   EQU   COMMON+1576                                              02430000
APRTSTG  EQU   COMMON+1572                                              02431000
AFORMAT  EQU   COMMON+1568                                              02432000
ASTPROUT EQU   COMMON+1564                                              02433000
APCBENQ  EQU   COMMON+1560                                              02434000
ATCBRTRV EQU   COMMON+1556                                              02435000
ATCBREMV EQU   COMMON+1552                                              02436000
ATCBSAVE EQU   COMMON+1548                                              02437000
QATMERTN EQU   COMMON+1544                                              02438000
ALOADER  EQU   COMMON+1540                                              02439000
AEREXIT  EQU   COMMON+1536                                              02440000
SYNMSGA  EQU   COMMON+1532                                              02441000
ARGNBND  EQU   COMMON+1524                                              02442000
AWRDCNVT EQU   COMMON+1520                                              02443000
AADRCNVT EQU   COMMON+1516                                              02444000
AFMTLINE EQU   COMMON+1512                                              02445000
ASYNTAX  EQU   COMMON+1508                                              02446000
APRTMSG  EQU   COMMON+1504                                              02447000
NONBLNK  EQU   COMMON+1244                                              02448000
BLNK     EQU   COMMON+988                                               02449000
@NM00064 EQU   COMMON+972                                               02450000
@NM00063 EQU   COMMON+915                                               02451000
EBCTABL  EQU   HEXTABL+10                                               02452000
@NM00062 EQU   HEXTABL                                                  02453000
@NM00061 EQU   TABLE                                                    02454000
CAPTABL  EQU   COMMON+403                                               02455000
TITLEPGE EQU   COMMON+394                                               02456000
@NM00060 EQU   COMMON+392                                               02457000
@NM00059 EQU   COMMON+377                                               02458000
@NM00058 EQU   COMMON+362                                               02459000
TITLEMSG EQU   COMMON+283                                               02460000
MSG2     EQU   COMMON+257                                               02461000
MSG1     EQU   COMMON+231                                               02462000
STOP     EQU   COMMON+227                                               02463000
TITLE    EQU   COMMON+222                                               02464000
BLANKS   EQU   COMMON+214                                               02465000
WTORMSG  EQU   COMMON+133                                               02466000
@NM00057 EQU   COMMON+130                                               02467000
@NM00056 EQU   PRSW                                                     02468000
@NM00055 EQU   PRSW                                                     02469000
PRNTREAL EQU   PRSW                                                     02470000
PRNTRL   EQU   PRSW                                                     02471000
TTLSW    EQU   PRSW                                                     02472000
@NM00054 EQU   PRSW                                                     02473000
QSEGTBSW EQU   PRSW                                                     02474000
@NM00053 EQU   PRSW                                                     02475000
@NM00052 EQU   BUFSW                                                    02476000
@NM00051 EQU   BUFSW                                                    02477000
@NM00050 EQU   BUFSW                                                    02478000
@NM00049 EQU   BUFSW                                                    02479000
@NM00048 EQU   BUFSW                                                    02480000
@NM00047 EQU   BUFSW                                                    02481000
@NM00046 EQU   BUFSW                                                    02482000
@NM00045 EQU   SWF                                                      02483000
@NM00044 EQU   SWF                                                      02484000
PAGEOK   EQU   SWF                                                      02485000
NUCTFRMC EQU   SWF                                                      02486000
@NM00043 EQU   SWE                                                      02487000
@NM00042 EQU   SWE                                                      02488000
@NM00041 EQU   SWE                                                      02489000
TITLESW  EQU   SWE                                                      02490000
RESPC    EQU   SWE                                                      02491000
@NM00040 EQU   SWE                                                      02492000
STOPSW   EQU   SWE                                                      02493000
@NM00039 EQU   SWD                                                      02494000
GPRSFND  EQU   SWD                                                      02495000
CONTSW   EQU   SWD                                                      02496000
NOLOADSW EQU   SWD                                                      02497000
NOSTDMG  EQU   SWD                                                      02498000
@NM00038 EQU   SWD                                                      02499000
@NM00037 EQU   SWD                                                      02500000
FLSHMODE EQU   SWD                                                      02501000
@NM00036 EQU   SWC                                                      02502000
@NM00035 EQU   SWC                                                      02503000
SEGRD    EQU   SWC                                                      02504000
EDITSW   EQU   SWC                                                      02505000
SETFLSH  EQU   SWC                                                      02506000
MSTRSW   EQU   SWC                                                      02507000
@NM00034 EQU   SWB                                                      02508000
@NM00033 EQU   SWB                                                      02509000
QSYSUT2  EQU   SWB                                                      02510000
ENDSW    EQU   SWB                                                      02511000
@NM00032 EQU   SWB                                                      02512000
@NM00031 EQU   SWB                                                      02513000
FMTERR   EQU   SWB                                                      02514000
RDRSW    EQU   SWA                                                      02515000
@NM00030 EQU   SWA                                                      02516000
GOSW     EQU   SWA                                                      02517000
@NM00029 EQU   SWA                                                      02518000
@NM00028 EQU   SWA                                                      02519000
@NM00027 EQU   SWA                                                      02520000
@NM00026 EQU   SWA                                                      02521000
LINENUM  EQU   COMMON+120                                               02522000
LINENUMB EQU   COMMON+118                                               02523000
SIXTEEN  EQU   COMMON+116                                               02524000
TWELVE   EQU   COMMON+114                                               02525000
ELEVEN   EQU   COMMON+112                                               02526000
HTEN     EQU   COMMON+110                                               02527000
EIGHT    EQU   COMMON+108                                               02528000
SEVEN    EQU   COMMON+106                                               02529000
FIVE     EQU   COMMON+104                                               02530000
FOUR     EQU   COMMON+102                                               02531000
THREE    EQU   COMMON+100                                               02532000
TWO      EQU   COMMON+98                                                02533000
ONEA     EQU   COMMON+96                                                02534000
READTM   EQU   COMMON+92                                                02535000
RDENTRY  EQU   COMMON+80                                                02536000
@NM00025 EQU   COMMON+79                                                02537000
RETCODE  EQU   COMMON+78                                                02538000
STORSIZE EQU   COMMON+64                                                02539000
PCBPTR   EQU   COMMON+60                                                02540000
TCBLIST  EQU   COMMON+52                                                02541000
PAGENUMB EQU   COMMON+44                                                02542000
LINECNT  EQU   COMMON+40                                                02543000
SIX      EQU   COMMON+36                                                02544000
NUCTOP   EQU   COMMON+32                                                02545000
WORK1    EQU   COMMON+24                                                02546000
DELIMCD  EQU   COMMON+20                                                02547000
KYWDEND  EQU   COMMON+16                                                02548000
KYWDBGN  EQU   COMMON+12                                                02549000
VERBEND  EQU   COMMON+8                                                 02550000
VERBGN   EQU   COMMON+4                                                 02551000
ERRADDR  EQU   COMMON                                                   02552000
@NM00014 EQU   PRDINPUT+334                                             02553000
@NM00013 EQU   PRDINPUT+292                                             02554000
PRDPSW   EQU   PRDREGS+160                                              02555000
PRDCR    EQU   PRDREGS+96                                               02556000
PRDGPR   EQU   PRDREGS+32                                               02557000
@NM00004 EQU   BUFFFLAG                                                 02558000
DUMPZ    EQU   DUMPTTR+3                                                02559000
DUMPVOL  EQU   DUMPVOLN                                                 02560000
@NM00002 EQU   DUMPVOLN                                                 02561000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02562000
@RT00094 EQU   TYPEREAD                                                 02563000
@RT00141 EQU   MAPREAD                                                  02564000
@RT00188 EQU   MAPZERO                                                  02565000
@RT00194 EQU   MAPREAD                                                  02566000
@RT00199 EQU   ERREXT                                                   02567000
@RT00209 EQU   PREFMT                                                   02568000
@RT00211 EQU   ERREXT                                                   02569000
@RT00220 EQU   NOTHEADR                                                 02570000
@RT00222 EQU   EOF                                                      02571000
@RT00248 EQU   MAPREAD1                                                 02572000
@RT00257 EQU   MAPREAD1                                                 02573000
@RF00257 EQU   MAPREAD                                                  02574000
@RT00263 EQU   MAPREAD1                                                 02575000
@RF00263 EQU   MAPREAD                                                  02576000
@RT00267 EQU   EOF                                                      02577000
@RT00282 EQU   CPUREC                                                   02578000
@RT00290 EQU   CHKVOLS                                                  02579000
@RT00292 EQU   SCANMAP                                                  02580000
@RT00343 EQU   SETDATA                                                  02581000
@RT00351 EQU   SAVELAST                                                 02582000
@RC00382 EQU   @RC00381                                                 02583000
@RC00386 EQU   @RC00381                                                 02584000
@RT00404 EQU   CHKVOLS                                                  02585000
@RT00424 EQU   VIRTPROC                                                 02586000
@RT00426 EQU   REALPROC                                                 02587000
@RT00429 EQU   VOLRESET                                                 02588000
@RT00431 EQU   POINT2                                                   02589000
@RT00436 EQU   POINT1                                                   02590000
@RT00451 EQU   CHKREQ                                                   02591000
@RT00455 EQU   ERREXT                                                   02592000
@RT00457 EQU   ERREXT                                                   02593000
@RF00459 EQU   @EL00001                                                 02594000
@RT00465 EQU   ERREXT                                                   02595000
@RT00470 EQU   ERREXT                                                   02596000
@RT00474 EQU   FFFFCHK                                                  02597000
@RT00478 EQU   CALCBLK                                                  02598000
@RT00483 EQU   ERREXT                                                   02599000
@RT00487 EQU   ERREXT                                                   02600000
@RT00494 EQU   ERREXT                                                   02601000
@RT00500 EQU   TTRTAPE                                                  02602000
@RT00510 EQU   @EL00004                                                 02603000
@RT00530 EQU   MAPSCN1                                                  02604000
@RT00575 EQU   RDSYSUT1                                                 02605000
@RC00580 EQU   DCBRET                                                   02606000
@RT00602 EQU   @EL00007                                                 02607000
@RC00617 EQU   @EL00008                                                 02608000
@RT00621 EQU   PRINT                                                    02609000
@ENDDATA EQU   *                                                        02610000
         END   AMDPREAD,(C'PLS1317',0701,77069)                         02611000
