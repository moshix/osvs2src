         GBLB  &PARMLST                                                 00020001
AMDPRFSR START                                                          00040001
         TITLE 'AMDPRFSR - FORMAT SERVICE ROUTINE'                      00060001
*********************************************************************** 00080001
*                                                                     * 00080401
* A 713100,718500,730900-730920,738500-738560,754900            SA55854 00082201
* C 713000,738400                                               SA55854 00082601
* C 243800                                                       YM1468 00084001
* A 557220,569100-569120,590900-591192,593100-593120            SA53335 00085801
* A 594599-597599,626700,636100-636120                          SA53335 00087601
* C 556800,556600,557000-557200,614000                          SA53335 00089401
* D 591000,594200                                               SA53335 00091201
* A 188210,200210,200220,243210-243230,269610-270010           Y01980 * 00093001
* A 322722-322728,355000-355470,355810,358010,388610           Y01980 * 00094801
* A 389410,389810,390410,390420,391000-391030,403410           Y01980 * 00096601
* A 415010,415020,480210,790810,829010,415810,419010           Y01980 * 00098401
* A 419020,479100,485610,580010-580040,633010,702402           Y01980 * 00100201
* A 681022-681048,702404,391040-391110,485620-485640           Y01980 * 00102001
* A 374210                                                     Y01980 * 00103801
* C 243240,303000,355800,356800,358000,358200,394000           Y01980 * 00105601
* C 399600,402200,403600,419200,480800,481600,482800           Y01980 * 00107401
* C 483200,546600,550400,791800,792600,810600,820610           Y01980 * 00109201
* C 820800,825210,828400-829000,829200,831200,419200           Y01980 * 00111001
* C 681010,681049,391200                                       Y01980 * 00112801
*                                                                     * 00114601
*                                                                     * 00116401
*          *** AMDPRFSR - FORMAT SERVICE ROUTINE ***                  * 00118201
*                                                                     * 00120001
* STATUS--OS/VS2 RELEASE 1.0                                          * 00140001
*                                                                     * 00160001
* FUNCTION--                                                          * 00180001
*    THIS ROUTINE BUILDS A LIST OF TCB ADDRESSES THAT REPRESENT       * 00200001
*    THE FAMILY TREE OF EACH TCB ON THE TCBLIST AS BUILT BY AMDPRFUR. * 00220001
*    IT THEN LINKS TO AMDPRFSB, AMDPRFMS, AMDPRFLD, AMDPRFDB, AND     * 00240001
*    AMDPRFIO TO FORMAT AND PRINT THE CONTROL BLOCKS CHAINED OFF      * 00260001
*    OF EACH TCB.  EACH TCB THAT IS ALSO FORMATTED IS ENTERED IN      * 00280001
*    THE TCB SUMMARY TABLE.                                           * 00300001
*    INTRODUCTORY COMMENTS FOR EACH CONTROL BLOCK FORMATTING          * 00320001
*    ROUTINE PRECEEDS THE RESPECTIVE CSECT.                           * 00340001
*                                                                     * 00360001
* ENTRY POINTS--                                                      * 00380001
*    AMDPRFSR IS THE ONLY ENTRY POINT.  CONTROL IS RECEIVED FROM      * 00400001
*    AMDPRFXT AFTER A 'FORMAT' CONTROL STATEMENT IS READ, FROM        * 00420001
*    AMDPRPJB AFTER A 'PRINT JOBNAME', FROM AMDPRPDR AFTER A 'PRINT   * 00440001
*    F03', FROM AMDPRPCR AFTER A 'PRINT CURRENT', OR FROM AMDPRTSO    * 00460001
*    AFTER A 'TSO SYSTEM=YES', 'TSO USER=PRINT', OR 'TSO USER=FORMAT' * 00480001
*    CONTROL STATEMENT IS READ.  STANDARD LINKAGE IS USED.            * 00500001
*                                                                     * 00520001
* INPUTS--                                                            * 00540001
*         REGISTER 0 - TERMINAL JOB IDENTIFICATION(TJID)              * 00560001
*         REGISTER 12 - ADDRESS OF COMMON CSECT                       * 00580001
*         FMTSW - 0 FOR INITIALIZATION (FIRST TIME ENTERED)           * 00600001
*                 1 FOR FORMATTING CONTROL BLOCKS                     * 00620001
*         TCBLIST - LIST OF TCB'S WHOSE FAMILIES ARE TO BE FORMATTED  * 00640001
*                                                                     * 00660001
* OUTPUT--                                                            * 00680001
*    WRITES FIRST LINE CONTAINING JOBNAME, STEPNAME, AND PROCSTEPNAME.* 00700001
*    WRITES ERROR MESSAGE 'ERROR IN TCB CHAIN'.                       * 00720001
* EXTERNAL REFERENCES--                                               * 00740001
*         GETMAIN - TO OBTAIN STORAGE FOR TABLE OF TCB'S THAT HAVE    * 00760001
*                   BEEN FORMATTED.                                   * 00780001
*         FREEMAIN - TO FREE ABOVE STORAGE.                           * 00800001
*         BRREAD - TO OBTAIN DATA FROM THE INPUT DUMP.                * 00820001
*         BRWRITE - TO WRITE DATA TO THE 'PRINTER' DATA SET.          * 00840001
*         AMDPRFTC - TO FORMAT THE TCB                                * 00860001
*         AMDPRFRB - TO FORMAT THE RB CHAIN                           * 00880001
*         AMDPRFMS - TO FORMAT THE MSS                                * 00900001
*         AMDPRFLD - TO FORMAT THE LOAD LIST                          * 00920001
*         AMDPRFDB - TO FORMAT THE DEB CHAIN                          * 00940001
*         AMDPRFIO - TO FORMAT THE TIOT                               * 00960001
*         AMDPRTSM - TO OBTAIN STORAGE FOR THE TCB SUMMARY TABLE      * 00980001
*         AMDPRTSV - FROM ADDRESSES IN COMMON, THIS CSECT IS USED     * 01000001
*                    TO RETRIEVE AND REMOVE TCB'S FROM THE TCBLIST    * 01020001
*         ADRCNVT - FROM ADDRESS IN COMMON, TO CONVERT 3 BYTES TO     * 01040001
*                   PRINTABLE HEX.                                    * 01060001
*                                                                     * 01080001
* EXITS,NORMAL--                                                      * 01100001
*    RETURN TO CALLER THROUGH STANDARD LINKAGE UNLESS 'STOP' HAS      * 01120001
*    BEEN ENTERED BY OPERATOR IN WHICH CASE CONTROL RETURNS TO        * 01140001
*    STOP ROUTINE WITHOUT RESTORING REGISTERS.                        * 01160001
*                                                                     * 01180001
* EXITS,ERROR--                                                       * 01200001
*    NONE--PROCESSING CONTINUES AFTER AN ERROR MESSAGE IS PRINTED     * 01220001
*                                                                     * 01240001
* TABLES/WORK AREAS--                                                 * 01260001
*    TABLE OF FORMATTED TCB'S.  TABLE CONTAINS ADDRESS OF EACH        * 01280001
*    TCB AS IT IS FORMATTED.  THIS IS TO AVOID FORMATTING THE SAME    * 01300001
*    TCB TWICE.                                                       * 01320001
*    'FMTEDP' CONTAINS ADDRESS OF FIRST FORMAT TABLE.                 * 01340001
*    TABLE FORMAT FOLLOWS:                                            * 01360001
*         ******************************                              * 01380001
*         * PTR TO NEXT TABLE OR ZEROS *                              * 01400001
*         ******************************                              * 01420001
*         * COUNT OF TCB'S IN TABLE    *                              * 01440001
*         ******************************                              * 01460001
*         * ADDRESS OF TCB FORMATTED   *                              * 01480001
*         * (UP TO 10 TCB ADDRESSES)   *                              * 01500001
*         ******************************                              * 01520001
*                                                                     * 01540001
*   ALSO A TCBLIST IS PASSED TO THIS MODULE THROUGH AN ADDRESS IN     * 01560001
*   COMMON. A SISTER TCBLIST IS BUILT BY THIS MODULE IN THE SAME      * 01580001
*   FORMAT AS THE TCBLIST.  THIS FORMAT IS AS FOLLOWS:                * 01600001
*         ************************************                        * 01620001
*         * PTR TO NEXT TCB ELEMENT OR ZEROS *                        * 01640001
*         ************************************                        * 01660001
*         * ADDRESS OF TCB                   *                        * 01680001
*         ************************************                        * 01700001
*                                                                     * 01720001
* ATTRIBUTES-- REUSABLE                                               * 01740001
*                                                                     * 01760001
* CHARACTER CODE DEPENDENCY-- NONE                                    * 01780001
*                                                                     * 01800001
* NOTES--                                                             * 01820001
*   BRREAD ERROR HANDLER:  IF A TCB CANNOT BE READ FROM THE INPUT     * 01840001
*   DUMP, A MESSAGE IS PRINTED, AND PROCESSING CONTINUES WITH THE     * 01860001
*   NEXT TCB ON THE DAUGHTER OR SISTER CHAIN.                         * 01880001
*                                                                     * 01920001
*********************************************************************** 01940001
*/*AMDPRFSR: CHART (SEQ) */                                             01960001
*/*HEADER                                                               01980001
*/*AMDPRFSR - FORMAT SERVICE ROUTINE FLOWCHARTS                         02000001
*/*                                                      PAGE #     */  02020001
*/*AMDPRFSR: E START */                                                 02040001
*/* P SAVE REGISTERS */                                                 02060001
*/* P GET ADDR OF OUTPUT BUFFER */                                      02080001
*/* D  (YES,FMTINIT,NO,) INIT. PASS */                                  02100001
*/* P PUT ADDR OF FSR AND SUMMARY RTNS IN COMMON */                     02120001
*/* M (,FMTDONE1) INDICATE INIT. PASS DONE */                           02140001
*/*FMTINIT: M RESET SAVE TCB SWITCH FOR TSO PASS */                     02180001
*/*FMTINT1: P SAVE TJID VALUE */                                        02200001
*/* M RESET FMTSW - INIT = 0 */                                         02220001
*/* P SET UP ERROR AND STOP ROUTINE ADDRS */                            02240001
*/* S FMTCBPG: PURGE FORMAT TCB LISTS */                                02260001
*/* P COMPUTE COUNT FOR TCB'S ON TCBLIST & POINT TO LAST ON LIST */     02280001
*/*FORMAT1: P SAVE TCB COUNT */                                         02300001
*/*FMTLOOP2: D (YES,FMTDONE,NO,) TCB COUNT = 0 */                       02320001
*/* P DECREASE TCB COUNT BY ONE */                                      02340001
*/* S TCBRTRV: GET A TCB ADDR STARTING WITH LAST ON LIST */             02360001
*/*FAMTREE4: P SAVE ORIGINAL TCB ADDR */                                02380001
*/* D (NO,TCBTOP,YES,) TJID = 0 */                                      02400001
*/* D (NO,TCBTOP,YES,) ARE ALL TCBS IN DUMP */                          02420001
*/* D (NO,FMTLOOP1,YES,) IS IT MASTER SCHEDULER */                      02480001
*/*FAMTREE5: S (,FAMDONE) FMTCBSAV: PUT TCB ON FORMAT TCBLIST */        02500001
*/*FMTLOOP1: S BRREAD: GET ADDR OF MOTHER TCB */                        02520001
*/* D (YES,TCBTOP,NO,) PTR TO MOTHER = 0 */                             02540001
*/* D (YES,TCBTOP,NO,) IS IT MASTER SCHEDULER */                        02560001
*/* P (,FMTLOOP1) SET UP TO GET NEXT MOTHER */                          02580001
*/*TCBTOP: P SAVE PTR TO TOP TCB IN TREE */                             02600001
*/*FAMLOOP1: S BRREAD: GET ADDR OF DAUGHTER TCB */                      02620001
*/* S FMTCBSAV: SAVE THIS TCB ON FORMAT TCBLIST */                      02640001
*/* D (YES,FAMTREE1,NO,) TCB IN R2 = TOPTCB */                          02660001
*/* S BRREAD: GET ADDR OF SISTER TCB */                                 02680001
*/* S SISSAVE: SAVE ADDR OF SISTER ON SISLIST */                        02700001
*/*FAMTREE1: D (NO,FAMTREE2,YES,) WAS THERE A DAUGHTER */               02720001
*/* P (,FAMLOOP1) PUT DAUGHTER ADDR IN R2 */                            02740001
*/*FAMTREE2: S SISGET: GET LAST SISTER TCB SAVED */                     02760001
*/* D (NO,FAMDONE,YES,FAMLOOP1) WERE THERE ANY */                       02780001
*/*FAMDONE: S BRREAD: GET TIOT PTR FROM ORIGINAL TCB */                 02800001
*/* D (YES,FAMDONE1,NO,) IS TIOT PTR = 0 */                             02820001
*/* D (YES,FAMDONE1,NO,) IS TIOT PTR > MACHINE ADDR */                  02840001
*/* S BRREAD: GET THE JOBNAME FROM TIOT */                              02860001
*/* P MOVE JOBNAME TO TITLE */                                          02880001
*/* S BRREAD: GET THE STEP NAME FROM TIOT */                            02900001
*/* P MOVE STEP NAME TO TITLE */                                        02920001
*/* S BRREAD: GET THE PROC STEP NAME FROM TIOT */                       02940001
*/* P MOVE PROC STEP NAME TO TITLE */                                   02960001
*/*FAMDONE2: P GET COUNT OF TCB'S IN THE FAMILY */                      02980001
*/* P GET TJID FOR SUMMARY ROUTINE */                                   03000001
*/* S TCBSMGT: GET CORE AND BUILD TCB SUMMARY TABLE */                  03020001
*/*FMTPRTLP: S FMTGET: GET A TCB ADDR */                                03040001
*/* D (YES,FMTCBC,NO,) WAS THERE ONE */                                 03060001
*/* N (,FMTLOOP2) END OF 1 FAMILY; GET NEXT TCB ADDR ON TCBLIST */      03080001
*/*FAMDONE1: P (,FAMDONE2) BLANK OUT JOB,STEP AND PROC STEP NAMES IN    03100001
*/*THE TITLE */                                                         03120001
*/*FMTCBC: D (NO,FMTCBS1,YES,) CORE FOR FORMAT TCB TABLE GOTTEN */      03140001
*/*FMTCBC1: D (YES,FMTCBC5,NO,) FORMATTED SWITCH ON */                  03160001
*/* P INITIALIZE FIRST TCB TABLE */                                     03180001
*/* D (YES,FMTCBS,NO,) ONLY ONE TABLE */                                03200001
*/*FMTCBC2: L FREE STORAGE FOR TABLE */                                 03220001
*/* D (NO,FMTCBC2,YES,FMTCBS) ALL DONE */                               03240001
*/*FMTCBC5: D (YES,FMTCBS,NO,) IS TABLE PTR = 0 */                      03260001
*/* D (YES,FMTCBC3,NO,) IS CNT OF TCB IN THIS TABLE = 0 */              03280001
*/*FMTCBC4: D (YES,FMTCBR0,NO,) DUPLICATE TCB ADDR IN TABLE */          03300001
*/* P UPDATE TCB COMPARE ADDRESS */                                     03320001
*/* D (NO,FMTCBC4,YES,) ALL TCB'S COMPARED */                           03340001
*/*FMTCBC3: P (,FMTCBC5) STEP TO NEXT TABLE */                          03360001
*/*FMTCBR0: M (,FMTPRTLP) TURN ON FORMATTED SWITCH */                   03380001
*/*FMTCBS: P GET ADDR OF TABLE PTR */                                   03400001
*/*FMTCBSLP: D (YES,FMTCBS1,NO,) ADDR OF TCB ADDR TABLE = 0 */          03420001
*/* D (NO,FMTCBS2,YES,) CNT OF TCB IN TABLE = 10 (FULL) */              03440001
*/* P (,FMTCBSLP) STEP TO NEXT TABLE */                                 03460001
*/*FMTCBS1: L GET STORAGE FOR NEW TABLE */                              03480001
*/* P ADD NEW TABLE TO CHAIN AND INIT IT */                             03500001
*/*FMTCBS2: P CALCULATE NEXT TABLE SLOT USING COUNT */                  03520001
*/* P PUT TCB ADDR INTO NEXT TABLE SLOT */                              03540001
*/* P ADD ONE TO TCB ADDR COUNT */                                      03560001
*/* P PUT NEW COUNT IN TABLE */                                         03580001
*/* M (,FMTPRTL1) TURN ON FORMATTED SWITCH */                           03600001
*/*FMTPRTL1: N THIS RTN CALLS OTHER RTNS TO FORMAT TCB AND ITS ASSOC.   03620001
*/*BLOCKS */                                                            03640001
*/* D (NO,FMTPRTL2,YES,) SKIP SWITCH ON */                              03660001
*/* S BRWRITE: SKIP TO NEW PAGE */                                      03680001
*/*FMTPRTL2: M TURN ON SKIP SWITCH */                                   03700001
*/* P MOVE TCB TITLE TO BUFFER */                                       03720001
*/* S BRWRITE: PRINT THE TITLE */                                       03740001
*/* S FMTSUMS: ADD TCB TO SUMMARY TABLE */                              03760001
*/* P GET TJID OF TCB */                                                03780001
*/* S TCBPRNT: PRINT THE TCB */                                         03800001
*/* D (NO,FMTPRTLP,YES,) RETURN CODE = 0 */                             03820001
*/* S RBPRNT: PRINT THE RB CHAIN */                                     03840001
*/* S MSSPRNT: PRINT MAIN STORAGE BLOCKS FOR TCB */                     03860001
*/* S LOADPRT: PRINT LOAD LIST */                                       03880001
*/* S DEBPRNT: PRINT DEBS */                                            03900001
*/* S TIOTPRT: PRINT TIOT */                                            03920001
*/* N (,FMTPRTLP) LOOP  FOR ALL TCB'S ON FORMAT TCBLIST */              03940001
*/*FMTDONE: P RESTORE CALLER'S ERROR RTN ADDRESS */                     03960001
*/* P RESTORE CALLER'S STOP RTN ADDR */                                 03980001
*/* S FMTCBPG: FREE TCBLISTS */                                         04000001
*/*FMTDONE1: R RETURN */                                                04020001
*/*FMTERR1: N ROUTINE FOR ERROR IN TCB CHAIN */                         04040001
*/* P SET UP ADDRESSABILITY */                                          04060001
*/* D (YES,,NO,%Z) ERR BUILDING SUMMARY INFO */                         04061001
*/* R RETURN VIA REG9 */                                                04062001
*/*%Z: D (YES,,NO,FMTERR1A) WAS ERROR READING TIOT */                   04080001
*/* P (,FAMDONE2) MOVE 'UNKNOWN' TO JOBNAME */                          04100001
*/*FMTERR1A: S BRWRITE: SPACE A LINE */                                 04120001
*/* S ADRCNVT: CONVERT TCB ADDR TO PRINTABLE HEX */                     04140001
*/* P MOVE ERROR MSG TO BUFFER */                                       04160001
*/* M TURN OFF ERROR SWITCHES */                                        04180001
*/* S (,FAMTREE1) BRWRITE: WRITE THE ERROR MSG */                       04200001
*/*FMTCBSAV: N RTN SAVE ADDRS IN R2 ON FORMAT TCBLIST */                04220001
*/* D (YES,%A,NO,) ADDR IN R2 */                                        04240001
*/* R RETURN VIA R9 */                                                  04260001
*/*%A: P SAVE REAL TCBLIST PTR */                                       04280001
*/* P MOVE IN FORMAT TCBLIST PTR */                                     04300001
*/* S TCBSAVE: SAVE TCB ADDR IN R2 ON FORMAT TCBLIST */                 04320001
*/* P RESTORE FORMAT TCBLIST PTR & REAL TCBLIST PTR */                  04340001
*/* D (YES,%B,NO,) RETURN CODE = 0 */                                   04360001
*/* R RETURN VIA R9 */                                                  04380001
*/*%B: P ADD 1 TO CNT OF TCB ADDR ON FORMAT TCBLIST */                  04400001
*/* R RETURN VIA R9 */                                                  04420001
*/*FMTGET: D (NO,%C,YES,) CNT FOR TCB ON FORMAT TCBLIST1= 0 */          04440001
*/*FMTGET1: P ZERO OUT R2 */                                            04460001
*/* R RETURN VIA R9 */                                                  04480001
*/*%C: P SAVE TCBLIST PTR */                                            04500001
*/* P TCBLIST PTR = FORMAT TCBLIST PTR */                               04520001
*/*FMTGET3: S TCBPTRV: GET A TCB ADDR */                                04540001
*/* D (YES,FMTGET2,NO,) R2 = 0 */                                       04560001
*/* S TCBREMV: REMOVE THIS TCB ADDR FROM LIST */                        04580001
*/* P DECREMENT COUNT BY 1 */                                           04600001
*/*FMTGET4: P SAVE FORMAT TCBLIST PTR */                                04620001
*/* P RESTORE TCB LIST PTR */                                           04640001
*/* R RETURN VIA R9 */                                                  04660001
*/*FMTGET2: P REDUCE COUNT BY ONE */                                    04680001
*/* D (YES,FMTGET3,NO,) COUNT > 0 */                                    04700001
*/* P (,FMTGET4) SET R2 = 0; NO MORE TCBS ON LIST */                    04720001
*/*FMTSTP: P SET UP ADDRESSABILITY */                                   04740001
*/* P SET RETURN ADDR TO FMSTPOUT */                                    04760001
*/*FMTCBPG: P FTCBSAV = TCBLIST; TCBLIST = FTCBLIST */                  04780001
*/* S TCBREMV: REMOVE ALL TCBS FROM LIST */                             04800001
*/* P FTCBLIST = TCBLIST; TCBLIST = SISLIST */                          04820001
*/* R RETURN VIA R9 */                                                  04840001
*/*FMSTPOUT: P RESTORE ERROR HANDLER'S ADDR */                          04860001
*/* P PUT CALLER'S STOP RTN ADDR IN COMMON */                           04880001
*/* R GO TO CALLER'S STOP RTN */                                        04900001
*/*SISSAVE: P SAVE REAL TCBLIST PTR */                                  04920001
*/* P TCBLIST = SISLIST */                                              04940001
*/* S TCBSAVE: PUT SISTER ADDR ON SISTER TCBLIST */                     04960001
*/* P SISLIST = TCBLIST */                                              04980001
*/* P TCBLIST = FTCBSAV */                                              05000001
*/* R RETURN VIA R9 */                                                  05020001
*/*SISGET: P FTCBSAV = TCBLIST; TCBLIST = SISLIST */                    05040001
*/* S TCBRTRV: GET A TCB ADDR */                                        05060001
*/* D (NO,SISGET1,YES,) WAS THERE ONE */                                05080001
*/* S TCBREMV: REMOVE TCB FROM THE LIST */                              05100001
*/*SISGET1: P SISLIST = TCBLIST; TCBLIST = FTCBSAV */                   05120001
*/* R RETURN VIA R9 */                                                  05140001
*/*FMTSUMS: P GET ADDR OF TCB SUMMARY TABLE PTRS */                     05160001
*/* P POINT TO FIRST TABLE */                                           05180001
*/* D (NO,%D,YES,) CNT FOR TCB IN FAMILY = 0 */                         05200001
*/* R RETURN VIA R9 */                                                  05220001
*/*%D: P POINT TO FIRST TCB IN TABLE */                                 05240001
*/*FMTSUM2: D (YES,FMTSUM1,NO,) TCB ENTRY = 0 */                        05260001
*/* P BUMP TO NEXT TCB ENTRY */                                         05280001
*/* D (NO,FMTSUM2,YES,) END OF TABLE */                                 05300001
*/*%E: R RETURN VIA R9 */                                               05320001
*/*FMTSUM1: P PUT TCB, CMP, NTC, OTC, LTC, &TID IN SUMMARY TABLE */     05340001
*/* P (,%E) MOVE PAGE # TO TABLE */                                     05360001
*/*AMDPRFTC: E TCBPRNT */                                               05380001
*/* P SET UP ADDRESSABILITY */                                          05400001
*/* P PUT ERROR RTN ADDR IN COMMON */                                   05420001
*/* M TURN OFF THE TCBPRNT SWITCH */                                    05440001
*/*TCBPRNTA: D (NO,TCBPRNT5,YES,) TJID = 0 */                           05500001
*/* D (NO,TCBPRNT5,YES,) IS TCB CURRENT TCB */                          05520001
*/* S BRWRITE: WRITE CURRENT TASK MSG */                                05540001
*/*TCBPRNT5: P PUT TCB ADDR IN FORMAT PATTERN */                        05560001
*/* S TCBFMPR: FORMAT AND PRINT FIRST LINE OF TCB */                    05580001
*/*TCBPRNT1: S TCBFMPR: FORMAT AND PRINT LINE 7 OF TCB */               05720001
*/* S TCBFMPR: FORMAT AND PRINT LINE 8 OF TCB */                        05740001
*/* S TCBFMPR: FORMAT AND PRINT LINE 9 OF TCB */                        05760001
*/* S TCBFMPR: FORMAT AND PRINT LINE 10 OF TCB */                       05780001
*/* S BRREAD: GET ADDRESS OF AOS/1-AOS/2 TCB EXTENSION */               05800001
*/* S (,TCBPRNTC) TCBFMPR: FORMAT AND PRINT LINE 1 OF AOS EXTENSION */  05820001
*/*TCBPRTV: N ROUTINE TO FORMAT AND PRINT AOS/2 TCB */                  05940001
*/* S TCBFMPR: FORMAT AND PRINT LINE 2 OF TCB */                        05960001
*/* S TCBPTRG: FORMAT AND PRINT REGS */                                 05980001
*/* S TCBFMPR: FORMAT AND PRINT LINE 5 OF TCB */                        06000001
*/* S (,TCBPRNT1) TCBFMPR: FORMAT AND PRINT LINE 6 OF TCB */            06020001
*/*TCBFMPR: S FMTLINE: FORMAT THE LINE FOR PRINTING */                  06040001
*/* S BRWRITE: PRINT THE LINE */                                        06060001
*/* R RETURN VIA R9 */                                                  06080001
*/*TCBPRNTC: S BRREAD: GET FIFTH FLAG BYTE OF TCB */                    06100001
*/* D (NO,TCBPRNT8,YES,) TASK TERMINATION FLAG ON */                    06120001
*/* S BRWRITE: SPACE A LINE */                                          06140001
*/* S BRWRITE: WRITE TERMINATED MSG */                                  06160001
*/* P (,TCBPRDN1) SET RETURN CODE = 4 */                                06180001
*/*TCBPRNT8: S BRWRITE: SPACE 2 LINES */                                06200001
*/*TCBPRDN: P SET RETURN CODE = 0 */                                    06220001
*/*TCBPRDN1: P RESTORE PREVIOUS ERROR RTN ADDR */                       06240001
*/* P RESTORE CALLER'S REGS */                                          06260001
*/* R RETURN */                                                         06280001
*/*TCBPRER: N ROUTINE FOR FORMAT OR I/O ERROR */                        06300001
*/* P SET UP ADDRESSABILITY */                                          06320001
*/* S (,TCBPRDN) BRWRITE: WRITE TCB FORMAT ERROR MSG */                 06340001
*/*TCBPTRG: N ROUTINE TO PRINT REGS FOR TCBPRNT & RBPRNT RTNS */        06360001
*/* P SET UP ADDRESSABILITY */                                          06380001
*/* D (NO,TCBPTRG4,YES,) PCP/MFT SYSTEM */                              06400001
*/* P (,TCBPTRG5) MOVE PCP/MFT REG 10 - 1 HEADING TO BUFFER */          06420001
*/*TCBPTRG4: P MOVE AOS/2 REG HEADING 0 - 7 TO BUFFER */                06440001
*/*TCBPTRG5: P LOAD OUTER LOOP COUNT */                                 06460001
*/*TCBPTRG1: P LOAD WHERE-TO-PUT-IT ADDR & INNER LOOP CNT */            06480001
*/*TCBPTRG2: P LOAD ADDR OF REGS */                                     06500001
*/* S BRREAD: GET THE REGS */                                           06520001
*/* S WRDCNVT: CONVERT REG TO PRINTABLE HEX */                          06540001
*/* P UPDATE WORD INDEX & WHERE-TO-PUT-IT ADDR */                       06560001
*/* D (NO,TCBPTRG2,YES,) 8 REGS DONE */                                 06580001
*/* S BRWRITE: PRINT ALINE */                                           06600001
*/* D (NO,TCBPTRG3,YES,) 2 LINES DONE */                                06620001
*/* R RETURN */                                                         06640001
*/*TCBPTRG3: D (NO,TCBPTRG6,YES,) PCP/MFT */                            06660001
*/* P MOVE IN PCP/MFT REGS HEADING 2 - 9 */                             06680001
*/* P (,TCBPTRG1) TURN OFF PCP/MFT SWITCH */                            06700001
*/*TCBPTRG6: P (,TCBPTRG1) MOVE IN AOS/2 HEADING 8 - 15 */              06720001
*/*AMDPRFRB: E RBPRNT */                                                06740001
*/* P SET UP ADDRESSABILITY */                                          06760001
*/* P SET UP ERROR AND STOP ROUTINE ADDRS */                            06780001
*/* S RBPRGE: PURGE ALL RB ADDRS ON RBLIST */                           06800001
*/* P POINT TO RB ADDR IN TCB */                                        06820001
*/*RBLOOP1: S BRREAD: GET NEXT RB ADDR */                               06840001
*/* D (YES,RBPRNT1,NO,) IS RB ADDR = 0 */                               06860001
*/* D (YES,RBPRNT1,NO,) IS NEXT RB ADDR = TCB */                        06880001
*/* S RBSAVE: SAVE RB ADDR ON RBLIST */                                 06900001
*/* P (,RBLOOP1) BUMP PTR TO NEXT RB */                                 06920001
*/*RBPRNT1: P MOVE 'ACTIVE RBS' HEADING TO BUFFER */                    06940001
*/* S BRWRITE: WRITE THE HEADING */                                     06960001
*/* S RBGET: GET NEXT RB */                                             06980001
*/* D (NO,RBDONE,YES,) WAS THERE ONE */                                 07000001
*/*RBPRNT2: S BRREAD: GET RB SIZE/STATUS WORD */                        07020001
*/* S ADRCNVT: CONVERT RB ADDR TO PRINTABLE HEX */                      07040001
*/* D (SVRB,RBSVRB,IRB,RBIRB,PRB,) BR TYPE = ? */                       07080001
*/* P (,RBPRNT4) GET ADDR OF PRB INDEX */                               07100001
*/*RBSVRB: D (YES,RBTSVRB,NO,) TRANSIENT SVRB */                        07120001
*/* P (,RBPRNT4) GET ADDR OF RESIDENT SVRB INDEX */                     07140001
*/*RBTSVRB: P  (,RBPRNT4) GET ADDR OF TRANSIENT SVRB INDEX */           07160001
*/*RBIRB: D (YES,RBSIRB,NO,) SIRB */                                    07180001
*/* D (YES,RBTIRB,NO,) TIRB */                                          07200001
*/* P (,RBPRNT4) GET ADDR OF IRB INDEX */                               07220001
*/*RBTIRB: P (,RBPRNT4) GET ADDR OF TIRB INDEX */                       07240001
*/*RBSIRB: P GET ADDR OF SIRB INDEX */                                  07260001
*/*RBPRNT4: P GET ADDR OF BEGIN FIELD IN RB PREFIX */                   07261001
*/* P SET UP FOR FORMAT ROUTINE */                                      07262001
*/* S FMTLINE: FORMAT THE LINE */                                       07263001
*/* S BRWRITE: PRINT THE LINE */                                        07264001
*/* P MOVE 'RESV', 'NM', OR 'FL-CDE'  TO BUFFER */                      07280001
*/* S BRREAD: GET FIRST FIELD OF RB */                                  07300001
*/* S WRDCNVT: CONVERT THE FIRST FIELD OF RB */                         07320001
*/* P MOVE 'APSW' TO BUFFER */                                          07340001
*/* S BRREAD: GET THE DATA FOR 'APSW' */                                07360001
*/* S WRDCNVT: CONVERT THE DATA TO PRINTABLE HEX */                     07380001
*/* P MOVE 'SZ-STAB' TO BUFFER */                                       07400001
*/* S BRREAD: GET THE DATA FOR THAT FIELD */                            07420001
*/* S WRDCNVT: CONVERT THE DATA */                                      07440001
*/* P MOVE 'FL-CDE', 'LPDE', 'RESV', OR 'EPA' TO BUFFER */              07460001
*/* S BRREAD: GET THE DATA FOR THE FIELD */                             07480001
*/* S WRDCNVT: CONVERT THE DATA */                                      07500001
*/* P MOVE 'PSW' TO BUFFER */                                           07520001
*/* S BRREAD: GET DATA FOR 1ST HALF OF PSW */                           07540001
*/* S WRDCNVT: CONVERT THE DATA */                                      07560001
*/* S BRREAD: GET 2ND HALF OF PSW */                                    07580001
*/* S WRDCNVT: CONVERT THE PSW DATA */                                  07600001
*/* S BRWRITE: WRITE THE FIRST LINE OF RB */                            07620001
*/* P MOVE 'Q' TO BUFFER */                                             07640001
*/* S BRREAD: GET DATA FOR 'Q' */                                       07660001
*/* S WRDCNVT: CONVERT THE 'Q' DATA */                                  07680001
*/* P MOVE 'WT-LNK' TO BUFFER */                                        07700001
*/* S BRREAD: GET DATA FOR 'WT-LNK' */                                  07720001
*/* S WRDCNVT: CONVERT THE DATA */                                      07740001
*/* D (SVRB,PRBPRT,PRB,PRBPRT,IRB,) TEST RB TYPE */                     07760001
*/* D (YES,RBPRNT3,NO,) IRB ? */                                        07780001
*/* S BRREAD: GET NAME FIELD OF SIRB */                                 07800001
*/* P MOVE 'NM' TOBUFFER */                                             07820001
*/* P (,RBPRNT3) MOVE RTN NAME FROM SIRB TO BUFFER */                   07840001
*/*RBPRNT3: S TCBPTRG: FORMAT AND PRINT REGS IN THE RB */               07860001
*/* D (NO,RBPRTDN,YES,) DOES RB HAVE EXT. SAVE AREA */                  07880001
*/* S (,RBPRTDN) EXTSAPT: PRINT EXTENDED SAVE AREA */                   07900001
*/*PRBPRT: N RTN TO COMPLETE THE FORMAT FOR PRBS & SVRBS */             07920001
*/* S BRREAD: GET CDE/LPDE PTR FROM RB */                               07940001
*/* D (YES,RBPRT3,NO,) IS CDE/LPDE PTR = 0 */                           07960001
*/* S BRREAD: GET FIRST FIELD OF CDE/LPDE */                            07980001
*/* P SAVE CDE/LPDE ATTRIBUTES */                                       08000001
*/* S BRREAD: GET NAME FIELD OF CDE/LPDE */                             08020001
*/* P MOVE 'NM' TO BUFFER */                                            08040001
*/* P MOVE NAME FROM CDE/LPDE TO BUFFER */                              08060001
*/* S BRREAD: GET ENTRY POINT FROM CDE/LPDE */                          08080001
*/* P MOVE 'EPA' TO BUFFER */                                           08100001
*/* S ADRCNVT: CONVERT ENTRY POINT ADDR TO PRINTABLE HEX */             08120001
*/* D (NO,CDE,YES,RBPRNT3) TRANS. SVRB */                               08140001
*/*CDE: S BRREAD: GET PTR TO MAJOR CDE OR EXTENT LIST */                08160001
*/* P SAVE THE PTR */                                                   08180001
*/* D (YES,RBPRT1,NO,) IS CURRENT CDE A MINOR */                        08200001
*/*RBPRT2: P MOVE 'STA' TO BUFFER */                                    08220001
*/* S BRREAD: GET STARTING ADDR FROM MAJOR CDE */                       08240001
*/* S ADRCNVT: CONVERT THE STARTING ADDRESS */                          08260001
*/* P MOVE 'LN' TO BUFFER */                                            08280001
*/* S BRREAD: GET SIZE OF MODULE FROM CDE */                            08300001
*/* S ADRCNVT: CONVERT SIZE */                                          08320001
*/*NOMAJOR: P MOVE 'ATR1' TO BUFFER */                                  08340001
*/* S HEXCNVT: CONVERT ATTRIBUTE FIELD */                               08360001
*/*RBPRT3: D (YES,RBPRNT3,NO,) SVRB */                                  08380001
*/* S (,RBPRTDN) BRWRITE: PRINT LAST LINE OF RB */                      08400001
*/*RBPRT1: N RTN TO GET EXTENT LIST PTR FROM MAJOR CDE */               08420001
*/* S BRREAD: GET XTENT LIST PTR FROM CDE */                            08440001
*/* P (,RBPRT2) SAVE XTENT LIST PTR */                                  08460001
*/*RBFMPR: S FMTLINE: FORMAT THE LINE FOR PRINTING */                   09180001
*/* S BRWRITE: PRINT THE LINE */                                        09200001
*/* R RETURN VIA R9 */                                                  09220001
*/*RBPRTDN: N DONE PRINTING RB... LOOK FOR ANOTHER */                   09240001
*/* S RBGET: GET NEXT RB ADDR */                                        09260001
*/* D (NO,RBDONE,YES,) WAS THERE ONE */                                 09280001
*/* S (,RBPRNT2) BRWRITE: SPACE 1 LINE */                               09300001
*/*RBDONE: N DONE WITH RB CHAIN ... RETURN TO FORMAT RTN */             09320001
*/* S BRWRITE: SPACE 2 LINES */                                         09340001
*/* P RESTORE CALLER'S STOP RTN ADDR */                                 09360001
*/* P RESTORE REGS */                                                   09380001
*/* R RETURN */                                                         09400001
*/*TOOMANY: N MORE THAN 50 RBS ON RB CHAIN */                           09420001
*/* P MOVE INFINITE LOOP MSG TO BUFFER */                               09440001
*/* S (,RBPRNT1) BRWRITE: WRITE MSG AND SPACE 2 LINES */                09460001
*/*EXTSAPT: N PRINT RB EXTENDED SAVE AREA */                            09480001
*/* P SET INDEX */                                                      09500001
*/*EXTLOOP2: P GET INIT. WHERE-TO-PUT-IT ADDR */                        09520001
*/* P LOAD LOOP COUNT */                                                09540001
*/*EXTLOOP1: S BRREAD: GET A WORD FROM EXTENDED SAVE AREA */            09560001
*/* S WRDCNVT: CONVERT THE WORD */                                      09580001
*/* P DECREMENT BYTES TO PRINT COUNT */                                 09600001
*/* D (NO,EXTDONE,YES,) ANY LEFT */                                     09620001
*/* P INCREMENT WHERE-TO-PUT-IT ADDR */                                 09640001
*/* P INCREMENT INDEX */                                                09660001
*/* D (NO,EXTLOOP1,YES,) LINE COMPLETE */                               09680001
*/* S (,EXTLOOP2) BRWRITE: PRINT THE LINE */                            09700001
*/*EXTDONE: S BRWRITE: PRINT LAST LINE */                               09720001
*/* R RETURN VIA R9 */                                                  09740001
*/*RBERROR: N ROUTINE FOR ERROR IN RB FORMAT */                         09760001
*/* P SET UP ADDRESSABILITY */                                          09780001
*/* S BRWRITE: SPACE A LINE */                                          09800001
*/* P MOVE ERROR MSG TO BUFFER */                                       09820001
*/* S BRWRITE: PRINT MSG */                                             09840001
*/* M (,RBPRTDN) RESET ERROR SWITCHES */                                09860001
*/*RBSAVE: P ADD ONE TO TOTAL RB COUNT */                               09880001
*/* D (YES,TOOMANY,NO,) 50 RBS ON CHAIN */                              09900001
*/* P SAVE TOTAL RB COUNT */                                            09920001
*/* P RBTLIST = TCBLIST */                                              09940001
*/* P TCBLIST = RBLIST */                                               09960001
*/* S TCBSAVE: SAVE RB ADDR ON RBLIST */                                09980001
*/* D (YES,RBSAVE1,NO,) WAS RB ADDR ALREADY ON RBLIST */                10000001
*/* P ADD ONE TO CNT FOR RBS ON RBLIST */                               10020001
*/*RBSAVE1: P RBLIST = TCBLIST; TCBLIST = RBTLIST */                    10040001
*/* R RETURN VIA R9 */                                                  10060001
*/*RBSTPOUT: P RESTORE ERROR HANDLER'S ADDR */                          10080001
*/* P RESTORE CALLER'S STOP RTN ADDR IN COMMON */                       10100001
*/* R CALLER'S STOP RTN */                                              10120001
*/*RBGET: P RBTLIST = TCBLIST; TCBLIST = RBLIST */                      10140001
*/* P INDICATE FIRST RB ON LIST DESIRED */                              10160001
*/* S TCBRTRV: GET FIRST RB ADDR FROM RBLIST */                         10180001
*/* D (NO,RBGET1,YES,) WAS THERE ONE */                                 10200001
*/* S TCBREMV: REMOVE RB FROM RBLIST */                                 10220001
*/* P REDUCE RB COUNT FOR RBLIST BY ONE */                              10240001
*/*RBGET1: P RBLIST = TCBLIST; TCBLIST = RBTLIST */                     10260001
*/* R RETURN VIA R9 */                                                  10280001
*/*RBSTP: N PURGE ROUTINE FOR STOP REQUEST */                           10300001
*/* P SET UP ADDRESSABILITY */                                          10320001
*/* P SET RETURN ADDR TO RBSTPOUT */                                    10340001
*/* P RBTLIST = TCBLIST; TCBLIST = RBLIST */                            10360001
*/* S TCBREMV: REMOVE ALL RBS FROM RBLIST */                            10380001
*/* P RBLIST = TCBLIST; TCBLIST = RBTLIST */                            10400001
*/* R RETURN VIA R9 */                                                  10420001
*/*AMDPRFMS: E MSSPRNT */                                               10440001
*/* P SET UP ADDRESSABILITY */                                          10460001
*/* P SET UP ERROR RTN ADDR */                                          10480001
*/* P SET PQE COUNTER */                                                10520001
*/* S BRREAD: GET DUMMY PQE PTR FROM TCB */                             10540001
*/* D (YES,MSSPRDNA,NO,) IS PTR = 0 */                                  10560001
*/* S MSSTITLE: PRINT MSS TITLE */                                      10580001
*/* S BRREAD: GET PQE POINTERS FROM DUMMY PQE */                        10600001
*/* S MSSFMPR2: FORMAT AND PRINT D-PQE LINE */                          10620001
*/*MSSPRLP1: D (YES,MSSPRDN,NO,) PQE ADDR = 0 */                        10640001
*/* P PUT ADDR IN PATTERN */                                            10660001
*/* S MSSFMPR1: FORMAT AND PRINT LINE 1 OF PQE */                       10680001
*/* S MSSFMPR2: FORMAT AND PRINT 2ND LINE OF PQE */                     10700001
*/* P GET ADDR OF PTR TO NEXT PQE */                                    10720001
*/* P ADD 1 TO PQE CNT */                                               10740001
*/* D (YES,MSSLOOP,NO,) PQE CNT > 50 */                                 10760001
*/* P SAVE PQE CNT */                                                   10780001
*/* S (,MSSPRLP1) BRREAD: GET PTR TO NEXT PQE */                        10800001
*/*MSSLOOP: P MOVE PQE LOOP MSG TO BUFFER */                            10820001
*/* S (,MSSPRDNA) BRWRITE: PRINT THE MSG */                             10840001
*/*MSSTITLE: D (NO,MSSTTL1,YES,) AOS/2 DUMP */                          10860001
*/* P MOVE AOS/2 MSS TITLE TO BUFFER */                                 10880001
*/*MSSTTL2: S BRWRITE: PRINT TITLE AND SPACE 2 LINES */                 10900001
*/* R RETURN VIA R9 */                                                  10920001
*/*MSSTTL1: P (,MSSTTL2) MOVE PCP/MFT MSS TITLE TO BUFFER */            10940001
*/*MSSFMPR1: P INDICATE SPACE 1 LINE */                                 10960001
*/*MSSFMPRA: S FMTLINE: FORMAT THE LINE */                              10980001
*/* P LOAD LINES-TO-SPACE INDICATOR */                                  11000001
*/* S BRREAD: PRINT THE LINE */                                         11020001
*/* R RETURN VIA R9 */                                                  11040001
*/*MSSFMPR3: P (,MSSFMPRA) INDICATE SPACE 3 LINES AFTER WRITE */        11060001
*/*MSSFMPR2: P (,MSSFMPRA) INDICAT SPACE 2 LINES AFTER PRINT */         11080001
*/*MSSPRDN: N ALL DONE .. RETURN TO FORMAT ROUTINE */                   11280001
*/* S BRWRITE: SPACE 1 LINE */                                          11300001
*/*MSSPRDNA: P RESTORE PREVIOUS ERROR RTN ADDR */                       11320001
*/* P RESTORE REGS */                                                   11340001
*/* R RETURN */                                                         11360001
*/*MSSERR: N MSS PRINT FORMAT ERROR */                                  11380001
*/* P SET UP ADDRESSABILITY */                                          11400001
*/* S BRWRITE: SPACE 1 LINE */                                          11420001
*/* P MOVE ERROR MSG TO BUFFER */                                       11440001
*/* S (,MSSPRDNA) BRWRITE: WRITE MSG AND SPACE 3 LINES */               11460001
*/*AMDPRFLD: E LOADPRT */                                               11480001
*/* N LOAD LIST PRINT ROUTINE */                                        11500001
*/* P SET UP ADDRESSABILITY */                                          11520001
*/* P SAVE TJID AND TCB ADDR */                                         11540001
*/* M LDSW = 0 */                                                       11560001
*/* P SET UP ERROR RTN ADDR */                                          11580001
*/* P MOVE TITLE TO BUFFER */                                           11600001
*/* S BRWRITE: PRINT TITLE */                                           11620001
*/* S BRREAD: GET LOAD LIST PTR FROM TCB */                             11640001
*/*LOADLP3A: P SET LOOP COUNTER TO 255 */                               11650001
*/*LOADLP3: D (YES,LOADDONE,NO,) IS PTR = 0 */                          11660001
*/* S BRREAD: GET LOAD LIST */                                          11680001
*/* P SAVE ADDR OF NEXT LOAD LIST ELEMENT */                            11700001
*/* S BRREAD: GET CDE PTR */                                            11740001
*/* P SAVE RESP. COUNT */                                               11760001
*/* D (YES,LOADPRT6,NO,) CDE PTR = 0 */                                 11780001
*/*LOADPRT8: M SET SWITCH TO INDICATE SOMETHING ON LOAD LIST */         11800001
*/* P MOVE 'CDE' TO BUFFER */                                           11820001
*/* S ADRCNVT: CONVERT CDE ADDR */                                      11840001
*/* P MOVE 'NM' TO BUFFER */                                            11860001
*/* S BRREAD: GET THE CDE */                                            11880001
*/* P SAVE ATR1 AND NEXT PTR */                                         11900001
*/* S BRREAD: GET FIRST HALF OF NAME */                                 11920001
*/* P MOVE 1ST HALF OF NAME TO BUFFER */                                11940001
*/* S BRREAD: GET 2ND HALF OF NAME */                                   11960001
*/* P MOVE IT TO BUFFER */                                              11980001
*/* P MOVE 'USE' TO BUFFER */                                           12000001
*/* S BRREAD: GET USE/EPA FIELD */                                      12020001
*/* S BYTECNVT: CONVERT USE COUNT */                                    12040001
*/* P MOVE 'RESP' TO BUFFER */                                          12060001
*/* D (NO,LOADPRT9,YES,) PRINTING JOB PACK Q */                         12080001
*/* P (,LOADPRTD) MOVE 'NA' TO BUFFER */                                12100001
*/*LOADPRT9: S BYTECNVT: CONVERT RESP. CNT */                           12120001
*/*LOADPRTD: P MOVE 'EPA' TO BUFFER */                                  12140001
*/* S ADRCNVT: CONVERT ENTRY POINT ADDR */                              12160001
*/* P MOVE 'ATR1' TO BUFFER */                                          12180001
*/* S BYTECNVT: CONVERT ATR1 */                                         12200001
*/*LOADPRT7: S BRREAD: GET EXTENT LIST OR MAJOR CDE PTR */              12220001
*/* D (YES,LOADPRT1,NO,LOADPRT2) WAS IT A MINOR CDE */                  12240001
*/*LOADPRT2: D (NO,NOXLST,YES,) IS THERE AN EXTENT LIST */              12260001
*/* S BRREAD: GET NO. OF RELOC. FACTORS */                              12280001
*/* D (YES,XLSTER,NO,) > 25 */                                          12300001
*/* D (YES,XLSTER,NO,) = 0 */                                           12320001
*/* P CALCULATE ADDR OF FIRST BLOCK */                                  12340001
*/*LOADLP1: P ZERO INDEXREG; LOAD NO. OF ENTRIES / LINE CNT */          12360001
*/* P MOVE 'STA' & 'LN' TO BUFFER */                                    12380001
*/*LOADLP2: S BRREAD: GET BLOCK ADDR */                                 12400001
*/* S ADRCNVT: CONVERT STARTING ADDR */                                 12420001
*/* S BRREAD: GET BLOCK LENGTH */                                       12440001
*/* S ADRCNVT: CONVERT LENGTH OF BLOCK */                               12460001
*/* P INCR. INDEX AND COUNTERS */                                       12480001
*/* D (YES,LOADPRT5,NO,) REMAINING REL FACTORS = 0 */                   12500001
*/* S (,LOADLP1) BRWRITE: PRINT THE LINE */                             12540001
*/*XLSTER: P (,LOADPRT5) MOVE EXTENT LIST ERROR MSG TO BUFFER */        12580001
*/*NOXLST: P MOVE NO EXTENT LIST MSG TO BUFFER */                       12600001
*/*LOADPRT5: S BRWRITE: PRINT THE LINE FOR CDE OR MSG */                12620001
*/* D (YES,JPQPRT,NO,) IS JOB PACK Q. BEING PRINTED */                  12640001
*/*LOADPRT6: P  GET  ADDR OF NEXT LOAD LIST ELEMENT */                  12660001
*/* D (YES,,NO,RESTCTR1) INFINITE LOOP? */                              12670001
*/* P (,LOOPPRT1) ISSUE INFINITE LOOP IN LOAD LIST MESSAGE */           12672001
*/*RESTCTR1: P (,LOADLP3) UPDATE COUNTER */                             12674001
*/*RESTCTR2: P (,LOADPRT8) UPDATE COUNTER */                            12676001
*/*LOADPRT1: M (,LOADPRT7) RESET MINOR FLAG */                          12680001
*/*JPQPRTA: P SET LOOP COUNTER TO 256 */                                12690001
*/*JPQPRT: P GET ADDR OF NEXT CDE */                                    12700001
*/* D (YES,LOADDONE,NO,) END OF QUEUE */                                12720001
*/* P  PUT ADDR OF CDE IN PARM. REG. */                                 12740001
*/* D (YES,,NO,RESTCTR2) INFINITE LOOP? */                              12790001
*/* P (,LOADDONE) ISSUE LOOP IN JOB PACK QUEUE MESSAGE */               12840001
*/*LOADDONE: D (YES,LDDONE2,NO,) HAS JOB PACK Q. BEEN PRINTED */        13220001
*/* D (YES,LDDONE1,NO,) WAS ANYTHING ON LOAD LIST */                    13240001
*/* S (,LDDONE1) BRWRITE: PRINT NO LLE MSG */                           13260001
*/*LDDONE1: S BRWRITE: SPACE 2 LINES */                                 13280001
*/* D (YES,LDDONED, NO,) PCP DUNP */                                    13300001
*/* M INDICATE PRINTING JOB PACK QUEUE */                               13320001
*/* S BRWRTIE: PRINT JOB PACK QUEUE TITLE */                            13340001
*/* M RESET GOT ONE SWITCH */                                          13360001
*/* D (YES,LOADPRTF,NO,) MFT DUMP */                                    13380001
*/* S BRREAD: GET JOB PACK Q. PTR */                                    13400001
*/* P (,JPQPRT) SAVE ADDR OF 1ST CDE IN THE QUEUE */                    13420001
*/*LDDONE2: D (YES,LDDONE3,NO,) WAS ANY THING ON JOB PACK Q. */         13440001
*/* S  BRWRITE: PRINT NO JOB PACK QUEUE MSG */                          13460001
*/*LDDONE3: S BRWRITE: SPACE 2 LINES */                                 13480001
*/*LDDONED: P RESTORE PREVIOUS ERROR RTN ADDR */                        13500001
*/* P RESTORE REGS */                                                   13520001
*/* R RETURN */                                                         13540001
*/*BYTECNVT: N RTN TO CONVERT ONE BYTE TO PRINTABLE HEX */              13560001
*/* P SAVE REG 1 */                                                     13580001
*/* S HEXCNVT: CONVERT ONE BYTE */                                      13600001
*/* P RESTORE REG 1 */                                                  13620001
*/* R RETURN VIA R9 */                                                  13640001
*/*LOADERR: N ERROR WHILE PRINTING LOAD LIST */                         13660001
*/* P SET UP ADDRESSABILITY */                                          13680001
*/* S BRWRITE: SPACE A LINE */                                          13700001
*/* D (YES,LOADERR1,NO,) PRINTING JOB PACK Q. */                        13720001
*/* P MOVE 'ERROR IN LOAD LIST' MSG TO BUFFER */                        13740001
*/*LOADERR2: S BRWRITE: PRINT THE ERROR MSG */                          13760001
*/* M (,LOADDONE) RESET ERROR SWITCHES */                               13780001
*/*LOADERR1: P (,LOADERR2) MOVE JOB PACK QUEUE ERROR MSG TO BUFFER */   13800001
*/*AMDPRFDB: E DEBPRNT */                                               13820001
*/* P SET UP ADDRESSABILITY */                                          13840001
*/* M CLEAR DEB SWITCH; ZERO DEB COUNT */                               13860001
*/* P SET UP ERROR RTN ADDRESS */                                       13880001
*/*DEBPRNT8: S BRREAD: GET DEB CHAIN PTR */                             13900001
*/* D (YES,NODEB,NO,) IS DEB PTR = 0 */                                 13920001
*/* M INDICATE DEB FOUND */                                             13940001
*/* P MOVE 'DEB' TO BUFFER */                                           13960001
*/* S ADRCNVT: CONVERT DEB PTR */                                       13980001
*/* P MOVE APPENDAGE IDS TO BUFFER */                                   14000001
*/* S BRREAD: GET APP VECTOR TABLE */                                   14020001
*/* D (YES,DEBPRNT1,NO,) IS I/O APP VEC TAB ADDR = 0 */                 14040001
*/* S BRREAD: GET END OF EXT APP ADDR */                                14060001
*/* S WRDCNVT: CONVERT END OF APP ADDR */                               14080001
*/* S BRREAD: GET SIO APP ADDR */                                       14100001
*/* S WRDCNVT: CONVERT SIO APP ADDR */                                  14120001
*/* S BRREAD: GET PCI APP ADDR */                                       14140001
*/* S WRDCNVT: CONVERT PCI APP ADDR */                                  14160001
*/* S BRREAD: GET CHAN END APP ADDR */                                  14180001
*/* S WRDCNVT: CONVERT CHAN END APP ADDR */                             14200001
*/* S BRREAD: GET ABNORMAL END APP ADDR */                              14220001
*/* S WRDCNVT: CONVERT ABNORMAL END APP ADDR */                         14240001
*/*DEBPRNT1: S BRWRITE: PRINT LINE OF APP ADDRESSES */                  14260001
*/* P MOVE 'PFX' TO BUFFER */                                           14280001
*/* P CALCULATE ADDR OF DEB PREFIX */                                   14300001
*/* D (NO,DEBERR,YES,) ADDR > 0 */                                      14320001
*/*DEBPRNT2: S BRREAD: GET DEB PREFIX */                                14340001
*/* S WRDCNVT: CONVERT A WORD OF PREFIX */                              14360001
*/* D (NO,DEBPRNT2,YES,) 4 WORDS DONE */                                14380001
*/* S BRWRITE: PRINT LINE OF DEB PREFIX */                              14400001
*/* P MOVE 'TCB' TO BUFFER */                                           14420001
*/* S BRREAD: GET DEB TCB PTR */                                        14440001
*/* S WRDCNVT: CONVERT TCB ADDR */                                      14460001
*/* P MOVE 'NDEB' TO BUFFER */                                          14480001
*/* S BRREAD: GET NEXT DEB PTR */                                       14500001
*/* S WRDCNVT: CONVERT NEXT DEB PTR */                                  14520001
*/* P MOVE 'ASYN' TO BUFFER */                                          14540001
*/* S BRREAD: GET ASYN EXIT ADDR */                                     14560001
*/* S WRDCNVT: CONVERT ASYN EXIT ADDR */                                14580001
*/* P MOVE 'SPRG' TO BUFFER */                                          14600001
*/* S BRREAD: GET SYSTEM IOB PURGE CHAIN PTR */                         14620001
*/* S WRDCNVT: CONVERT SYS PURGE CHAIN ADDR */                          14640001
*/* P MOVE 'UPRG' TO BUFFER */                                          14660001
*/* S BRREAD: GET USER IOB PURGE CHAIN PTR */                           14680001
*/* S WRDCNVT: CONVERT USER PURGE CHAIN ADDR */                         14700001
*/* P MOVE 'PLST' TO BUFFER */                                          14720001
*/* S BRREAD: GET PARM LIST PTR FOR PURGE ECB */                        14740001
*/* S WRDCNVT: CONVERT PARM LIST PTR */                                 14760001
*/* P MOVE 'DCB' TO BUFFER */                                           14780001
*/* S BRREAD: GET DCB PTR */                                            14800001
*/* S WRDCNVT: CONVERT DCB ADDR */                                      14820001
*/* S BRWRITE: PRINT LINE OF DEB */                                     14840001
*/* P MOVE 'AVT' TO BUFFER */                                           14860001
*/* S BRREAD: GET I/O APP VECT TABLE ADDR */                            14880001
*/* D (NO,DEBPRNT3,YES,) IS IT DIRECT ACCESS (ESCALE = 04)*/            14900001
*/* P (,DEBPRNT3) SET D. A. FLAGS */                                    14920001
*/*DEBPRNT3: S WRDCNVT: CONVERT I/O APP VECT TABLE ADDR */              14940001
*/* S BRWRITE: PRINT THE LINE */                                        14960001
*/* D (YES,,NO,XNTTEST) IS DEB FOR ISAM */                              14980001
*/* P REDUCE EXTENTS BY 1 */                                            15000001
*/* P TURN ON ISAM SW */                                                15020001
*/*XNTTEST: D (YES,DEBDONE,NO,) NUMBER OF EXTENTS = 0 */                15040001
*/* D (YES,DEBPRNT5,NO,) DEB FOR D. A. */                               15060001
*/* P MOVE 'OP-UCB' TO BUFFER */                                        15080001
*/* S BRWRITE: PRINT THE LINE */                                        15100001
*/*DEBPRNT4: S BRREAD: GET AN EXTENT */                                 15120001
*/* S WRDCNVT: CONVERT THE EXTENT */                                    15140001
*/* S BRWRITE: PRINT THE EXTENT */                                      15160001
*/* D (YES,DEBDONE,NO,DEBPRNT4) NUMBER OF EXTENT = 0 */                 15180001
*/*DEBPRNT5: N ROUTINE TO PRINT 4-WORD EXTENT (DIRECT ACCESS) */        15200001
*/* D (NO,,YES,HAVE3525) IS 4-WORD EXTENT FOR 3525 */                   15220001
*/* P MOVE EXTENT IDS TO BUFFER */                                      15240001
*/* S BRWRITE: PRINT IDS */                                             15260001
*/* D (YES,,NO,DEBPRNT5) IS THIS DEB FOR ISAM */                        15280001
*/* P SKIP EXTENT 0 */                                                  15300001
*/*DEBPRNT7: S BRREAD: GET AN EXTENT */                                 15320001
*/* S WRDCNVT: CONVERT FILE MASK AND UCB ADDR */                        15340001
*/*DEBPRNT6: P INCR. TO NEXT WORD OF EXTENT */                          15360001
*/* S BRREAD: GET AN EXTENT WORD */                                     15380001
*/* P MOVE WORD TO WORK AREA */                                         15400001
*/* D (NO,DEBPRNT6,YES,) 3 WORDS GOTTEN */                              15420001
*/* S WRDCNVT: CONVERT STARTING CCHH OF EXTENT */                       15440001
*/* S WRDCNVT: CONVERT ENDING CCHH OF EXTENT */                         15460001
*/* S HEXCNVT: CONVERT NUMBER OF TRACKS FOR THIS EXTENT */              15480001
*/* S BRWRITE: PRINT EXTENT */                                          15500001
*/* D (NO,DEBPRNT7,YES,DEBDONE) NUMBER OF EXTENTS = 0 */                15520001
*/*HAVE3525: N ROUTINE TO PRINT EXTENT FOR 3525 MULTI-FUNCTION */       15540001
*/* P MOVE IDS TO BUFFER */                                             15560001
*/* S BRWRITE: PRINT IDS */                                             15580001
*/* P FORMAT 3525 LINE */                                               15600001
*/* S (,DEBDONE) BRWRITE: PRINT DATA LINE */                            15620001
*/*DEBDONE: N DONE WITH THIS DEB ... LOOK FOR ANOTHER */                15640001
*/* M RESET D. A. FLAGS AND ISAM SW */                                  15660001
*/* S BRWRITE: SPACE A LINE */                                          15680001
*/* P ADD ONE TO DEB COUNT */                                           15700001
*/* D (YES,DEBINF,NO,) COUNT > 200 */                                   15720001
*/* P (,DEBPRNT8) POINT TO NEXT DEB */                                  15740001
*/*DEBERR: N ERROR IN DEB CHAIN ... WRITE MSG AND RETURN */             15760001
*/* P SET UP ADDRESSABILITY */                                          15780001
*/* S BRWRITE: SPACE A LINE */                                          15800001
*/* P MOVE ERROR MSG TO BUFFER */                                       15820001
*/* P (,NODEB3) RESET ERROR SWITCHES */                                 15840001
*/*NODEB: N DONE WITH DEB CHAIN */                                      15860001
*/* D (NO,NODEB1,YES,) WAS THERE A DEB */                               15880001
*/* S BRWRITE: SPACE A LINE */                                          15900001
*/*NODEB2: P RESTORE PREVIOUS ERROR RTN ADDR AND REGS */                15920001
*/* R RETURN */                                                         15940001
*/*NODEB1: P MOVE NO OPEN DEB MSG TO BUFFER */                          15960001
*/*NODEB3: S (,NODEB2) BRWRITE: PRINT THE MSG */                        15980001
*/*DEBINF: P (,NODEB3) MOVE DEB LOOP MSG TO BUFFER */                   16000001
*/*AMDPRFIO: E TIOTPRT */                                               16020001
*/* P SET UP ADDRESSABILITY */                                          16040001
*/* P SET UP ERROR ROUTINE ADDR */                                      16060001
*/* S BRREAD: GET TIOT PTR FROM TCB */                                  16080001
*/* D (YES,NOTIOT,NO,) TIOT PTR = 0 */                                  16100001
*/* D (YES,NOTIOT,NO,) TIOT PTR > MACHINE ADDR */                       16120001
*/* P MOVE 'TIOT' TO BUFFER */                                          16140001
*/* S ADRCNVT: CONVERT TIOT ADDR */                                     16160001
*/* P MOVE 'JOB' TO BUFFER */                                           16180001
*/* S BRREAD: GET 1ST FIELD OF TIOT */                                  16200001
*/* P MOVE JOB NAME TO BUFFER */                                        16220001
*/*TIOTLP4: D (NO,TIOTPRT2,YES,) VALID JOB NAME */                      16240001
*/* M (,TIOTPRT3) SET VALID TIOT SWITCH */                              16260001
*/*TIOTPRT2: M TURN OFF VALID TIOT SWITCH */                            16280001
*/*TIOTPRT3: P MOVE 'STEP' TO BUFFER */                                 16300001
*/* S BRREAD: GET STEP NAME */                                          16320001
*/* P MOVE STEP NAME TO BUFFER */                                       16340001
*/* P MOVE 'PROC' TO BUFFER */                                          16360001
*/* S BRREAD: GET PROC NAME */                                          16380001
*/* P MOVE PROC NAME TO BUFFER */                                       16400001
*/* S BRWRITE: PRINT TIOT NAMES */                                      16420001
*/* D (NO,TIONVLD,YES,) IS TIOT VALID */                                16440001
*/* S BRREAD: GET FIRST DD ENTRY */                                     16460001
*/* P LOAD LENGTH OF DD ENTRY */                                        16480001
*/* D (YES,NODDEN,NO,) IS IT = 0 */                                     16500001
*/* P MOVE DD ENTRY IDS TO BUFFER */                                    16520001
*/* S BRWRITE: PRINT DD ENTRY IDS */                                    16540001
*/*TIOTLP3: P CALCULATE DD ENTRY OFFSET */                              16560001
*/* S HEXCNVT: CONVERT OFFSET */                                        16580001
*/* S WRDCNVT: CONVERT FIRST WORD OF DD ENTRY */                        16600001
*/* P BUMP TO NAME ENTRY; LOAD LOOP COUNT */                            16620001
*/*TIOTLP1: S BRREAD: GET 4 BYTES OF DD NAME */                         16640001
*/* P MOVE 4 BYTES OF NAME TO BUFFER */                                 16660001
*/* P BUMP ADDR PTRS */                                                 16680001
*/* D (NO,TIOTLP1,YES,) FULL DDNAME GOTTEN */                           16700001
*/* S BRREAD: GET TTR-STC FIELD OF DD ENTRY */                          16720001
*/* S WRDCNVT: CONVERT TTR-STC FIELD */                                 16740001
*/* P DECREMENT LENGTH OF DD ENTRY */                                   16760001
*/* D (NO,TIOTPRT1,YES,) IS IT > 0 */                                   16780001
*/* P DIVIDE LENGTH BY 4 */                                             16800001
*/* D (NO,TIOTPRT1,YES,) RESULTS > 0 */                                 16820001
*/*TIOTLP2: P INCREASE ADDR TO DEVICE ENTRY */                          16840001
*/* S BRREAD: GET DEVICE ENTRY */                                       16860001
*/* S WRDCNVT: CONVERT DEVICE ENTRY */                                  16880001
*/* S BRWRITE: PRINT A TIOT DDNAME ENTRY LINE */                        16900001
*/* D (NO,TIOTLP2,YES,) ALL DEVICE ENTRIES DONE */                      16920001
*/*TIOTPRT1: S BRREAD: GET NEXT DD ENTRY */                             16940001
*/* D (YES,TIOTDN1,NO,) IS ITS LENGTH = 0 */                            16960001
*/* D (YES,NO,TIOTLP3) ARE THERE > 255 DD'S? */                         16970001
*/* P PRINT INFINITE LOOP IN TIOT MESSAGE */                            16972001
*/*TIOTDN1: P RESTORE PREVIOUS ERROR RTN ADDR AND REGS */               16980001
*/* R RETURN */                                                         17000001
*/*NODDEN: S (,TIOTDN1) BRWRITE: SPACE A LINE */                        17020001
*/*NOTIOT: P MOVE NO TIOT MSG TO BUFFER */                              17040001
*/* S (,TIOTDN1) BRWRITE: PRINT THE MSG */                              17060001
*/*TIONVLD: P MOVE NOT VALID MSG TO BUFFER */                           17080001
*/* S (,TIOTDN1) BRWRITE: PRINT THE MSG */                              17100001
*/*TIOTERR: N ERROR FORMATTING TIOT ... PRINT ERROR MSG & RETURN */     17120001
*/* P SET UP ADDRESSABILITY */                                          17140001
*/* S BRWRITE: SPACE A LINE */                                          17160001
*/* P MOVE TIOT ERROR MSG TO BUFFER */                                  17180001
*/* S (,TIOTDN1) BRWRITE: PRINT THE MSG */                              17200001
*/*AMDPRTSM: E (MFR,TCBSMFR,MGT,TCBSMGT,MRY,) ...TCBSMRY...             17220001
*/*...TCBSMGT... ...TCBSMFR... */                                       17240001
*/* P SAVE REGISTERS */                                                 17260001
*/* P (,BASESMRY) SET ENTRY CODE = 8 */                                 17280001
*/*TCBSMGT: E ENTRY */                                                  17300001
*/* P SAVE REGISTERS */                                                 17320001
*/* P (,BASESMRY) SET ENTRY CODE = 4 */                                 17340001
*/*TCBSMFR: E ENTRY */                                                  17360001
*/* P SAVE REGISTERS */                                                 17380001
*/* P SET ENTRY CODE = 0 */                                             17400001
*/*BASESMRY: P SET BASE REG UP */                                       17420001
*/*SMBASE: P CHAIN SAVE AREAS */                                        17440001
*/* D (0,SMFR,4,SMGT,8,SMRY) BRANCH ON ENTRY CODE */                    17460001
*/*SMRY: P SET UP ERROR RTN ADDR */                                     17480001
*/* D (YES,TCBSMDN,NO,) ARE FIRST AND LAST TABLE PTRS = */              17500001
*/* S BRWRITE: SPACE A LINE */                                          17520001
*/* P SAVE CURRENT TABLE PTR */                                         17540001
*/*TCBSM1: D (YES,TCBSMDN,NO,) IS BACKWARD TAB PTR = 0 */               17560001
*/* P SAVE BACK PTR AS CURRENT PTR */                                   17580001
*/* D (YES,TCBSM1,NO,) IS COUNT FOR TCB ENTRIES = 0 */                  17600001
*/* D (NO,TCBSM1,YES,) IS THER A VALID TCB ENTRY */                     17620001
*/* D (YES,TSOPTRN,NO,) TSO CALL */                                     17640001
*/* P (,NTSOPTRN) SAVE ADDR OF NAMES IN PATTERN & POINT TO IT */        17660001
*/*TSOPTRN: P SAVE ADDR IN TSO PATTERN & POINT TO IT */                 17680001
*/* P LOAD TJID VALUE */                                                17700001
*/*NTSOPTRN: S TCBSMFP1: FORMAT AND PRINT THE LINE */                   17720001
*/* P POINT TO FIRST TCB ENTRY */                                       17740001
*/*TCBSM4: D (YES,TCBSM2,NO,) IS TCB ADDR = 0 */                        17760001
*/* P STORE DATA INTO PATTERN */                                        17820001
*/*TCBSM5: S TCBSMFP1: FORMAT AND PRINT LINE */                         17840001
*/* P POINT TO NEXT TCB ENTRY */                                        17860001
*/* D (NO,TCBSM4,YES,) ALL TCB ENTRIES DONE */                          17880001
*/*TCBSM2: D (YES,TCBSM1,NO,) TOP OF THE PAGE */                        17900001
*/* S (,TCBSM1) BRWRITE: SPACE A LINE */                                17920001
*/*TCBSMFP1: D (NO,TCBSMFP2,YES,) TOP OF PAGE */                        17980001
*/* P MOVE TITLE TO BUFFER */                                           18000001
*/* S BRWRITE: PRINT THE TITLE */                                       18020001
*/*TCBSMFP2: S FMTLINE: FORMAT THE LINE */                              18040001
*/* S BRWRITE: PRINT THE LINE */                                        18060001
*/* R RETURN VIA R9 */                                                  18080001
*/*TCBSMDN: P RESTORE PREVIOUS ERROR RTN ADDR */                        18100001
*/*DONESUM: P RESTORE REGS */                                           18120001
*/* R RETURN */                                                         18140001
*/*TCBSMERR: P SET UP ADDRESSABILITY */                                 18160001
*/* S BRWRITE SPACE A LINE */                                           18180001
*/* P MOVE ERROR MSG TO BUFFER */                                       18200001
*/* S (,TCBSM1) BRWRITE: PRINT THE MSG */                               18220001
*/*SMGT: P CALCULATE AMOUNT OF STORAGE NEEDED FOR TABLE */              18240001
*/* L GET THE STORAGE */                                                18260001
*/*TCBSMG1: D (NO,TCBSMG2,YES,) GOTTEN STORAGE > 256 */                 18280001
*/* P CLEAR 256 BYTES */                                                18300001
*/* P (,TCBSMG1) CALCULATE REMAINING LENGTH */                          18320001
*/*TCBSMG2: D (YES,TCBSMG3,NO,) REMAINING LENGTH = 0 */                 18340001
*/* P CLEAR REMAINING STORAGE */                                        18360001
*/*TCBSMG3: P MAKE NEW TABLE FIRST ENTRY IN CHAIN */                    18380001
*/* D (YES,TCBSMG4,NO,) IS LAST PTR = 0 */                              18400001
*/* P (,TCBSMG5) PUT BACK LINK PTR INTO TABLE */                        18420001
*/*TCBSMG4: P STORE NEW TABLE ADDR AS LAST */                           18440001
*/*TCBSMG5: P STORE # OF TCBS IN THIS FAMILY INTO TABLE */              18460001
*/* P MOVE JOBNAME AND STEPNAME TO TABLE */                             18480001
*/* P (,DONESUM) SAVE TJID IN TABLE */                                  18500001
*/*SMFR: N THIS LABEL IS SAME AS TCBSMF1 */                             18520001
*/*TCBSMF1: D (NO,%AA,YES,) IS PTR TO FIRST TABLE = 0 */                18540001
*/*TCBSMF2: P (,DONESUM) ZERO LAST PTR */                               18560001
*/*%AA: P DELINK THIS TABLE */                                          18580001
*/* P CALCULATE SIZE OF TABLE FOR FREEMAIN */                           18600001
*/* L (,TCBSMF1) FREE STORAGE OCCUPIED BY TABLE */                      18620001
*/*AMDPRFSR: END */                                                     18640001
         SPACE                                                          18660001
         EQUATES                                                        18680001
*                                                                 M3179 18700001
         OUTBUFM                                                        18720001
         COMMON                                                         18740001
AMDPRFSR CSECT                                                          18760001
INIT     EQU   128                                                      18780001
SKIPSW   EQU   64                                                       18800001
TIOTSW1  EQU   X'01'               SET WHEN READING TIOT         X01980 18820001
SUMSW    EQU   X'02'               SET WHEN READING TCB          Y01980 18821001
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              18840001
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE REG         18860001
         USING *,BASE1                                                  18880001
FSR      LA    R2,FMTSAVE          OBTAIN FORMAT ROUTINE SAVE AREA ADDR 18900001
         ST    R2,8(R13)           STORE IN HIGH SAVE AREA              18920001
         ST    R13,FMTSAVE+4       STORE CALLER'S SAVE AREA ADDR        18940001
*                                  IN FORMAT SAVE                       18960001
         LR    R13,R2              SET UP FORMAT SAVE AREA              18980001
         SPACE                                                          19000001
         USING COMMON,COMBASE      ADDRESS OF COMMON CSECT PASSED IN    19020001
*                                  REG 12                               19040001
         USING OUTBUF,BUFREG       BASE OUTBUF DSECT                    19060001
         L     BUFREG,CURBUF       LOAD ADDR OF OUTBUF TO BUFREG        19080001
         SPACE                                                          19100001
         TM    FMTSW,INIT          TEST FOR INITIALIZATION PASS         19120001
         BO    FMTINIT             BRANCH TO REAL THING IF SW ON        19140001
         ST    R15,AFORMAT         STORE ADDRESS OF THIS ROUTINE        19160001
         LM    R2,R4,TCBSMFRA      LOAD SUMMARY RTN ADDR'S              19180001
         STM   R2,R4,ATCBSMFR      STORE IN COMMON CSECT                19200001
         OI    FMTSW,INIT          INDICATE INIT DONE                   19220001
         B     FMTDONE1                                                 19240001
         SPACE                                                          19260001
FMTINIT  NI    SWE,XFF-FMTDSW      RESET SAVE TCB SWITCH                19280001
         STH   R0,TJIDSAVE         SAVE TJID VALUE                      19300001
         NI    FMTSW,INIT          TURN OFF ALL BUT INIT SWITCH         19320001
         XC    TCBCNT1,TCBCNT1     ZERO TCB COUNT1                      19340001
         XC    TCBCNT2,TCBCNT2     ZERO TCB COUNT2                      19360001
         MVC   FMTSAVE1(4),ERRADDR SAVE PRESENT ERROR ROUTINE ADDRESS   19380001
         LA    R1,FMTERR1          LOAD ADDR OF ERROR ROUTINE           19400001
         ST    R1,ERRADDR          STORE ERROR ROUTINE ADDR SO THAT     19420001
*                                  IN THE EVENT OF AN ERROR THE ERRMSG  19440001
*                                  ROUTINE WILL BRANCH TO FMTERR1       19460001
         MVC   FMTSTPSV(4),STOPEXIT  SAVE CALLER'S STOP ROUTINE AD      19480001
         LA    R1,FMTSTP           POINT TO FORMAT'S STOP EXIT          19500001
         ST    R1,STOPEXIT         STORE IN COMMON CSECT                19520001
         BAL   R9,FMTCBPG          GO PURGE LISTS                       19540001
         SR    R3,R3               CLEAR TCBCNT REG                     19560001
         LA    R2,TCBLIST          LOAD ADDR TO TCBLIST PTR             19580001
FMTLOOP3 L     R2,0(R2)            LOAD TCBLIST PTR                     19600001
         LTR   R2,R2               HAVE I REACHED THE END               19620001
         BZ    FORMAT1             YES--TCB COUNT IN R3                 19640001
         AH    R3,ONEA             NO--ADD ONE TO TCB COUNT             19660001
         B     FMTLOOP3            LOOP TO END OF LIST                  19680001
         SPACE                                                          19700001
FORMAT1  STH   R3,TCBCNT1          STORE TCB COUNT                      19720001
FMTLOOP2 LH    R3,TCBCNT1          LOAD TCB CNT TO R3                   19740001
         LTR   R3,R3               IS THE TCB COUNT ZERO                19760001
         BZ    FMTDONE             YES--ALL DONE                        19780001
         LR    R2,R3               LOAD COUNT TO R2                     19800001
         BCTR  R3,0                DECR COUNT                           19820001
         STH   R3,TCBCNT1          STORE BACK DECR COUNT                19840001
         L     R15,ATCBRTRV        LOAD ADDR OF TCBRTRV ROUTINE         19860001
         BALR  RETREG,R15          GO GET A TCB ADDR STARTING WITH      19880001
*                                  THE LAST TCB ON THE LIST (FIRST ONE  19900001
*                                  SAVED)                               19920001
FAMTREE4 ST    R2,TCBORIG          SAVE ORIGINAL TCB ADDR               19940001
         LH    R0,TJIDSAVE         TEST TJID TO SEE WHETHER OR          19960001
         LTR   R0,R0               NOT MOTHER SHOULD BE FOUND           19980001
         BNZ   TCBTOP              BRANCH IF TIME-SHARING TO SKIP       20000001
*                                  MOTHER SEARCH                        20020001
         TM    SWF,QSADMP          IS INPUT AN SVC DUMP          Y01980 20021001
         BZ    TCBTOP              YES--DON'T SEARCH FOR MOTHER  Y01980 20022001
         C     R2,MSTRTCB          COMPARE FOR MASTER                   20140001
         BNE   FMTLOOP1            NOT MASTER                           20160001
FAMTREE5 BAL   R9,FMTCBSAV         FOR PCP, MFT, OR MASTER SCHD TCB IN  20180001
*                                  AOS/2....PLACE THE TCB ADDRESS ON TH*20200001
               E                                                        20220001
*                                  FORMAT TCB LIST                      20240001
         B     FAMDONE             FORMAT THE MASTER SCHEDULER TCB      20260001
         SPACE 2                                                        20280001
FMTLOOP1 LA    PREG,MOTHER(R2)     LOAD ADDR OF MOTHER PTR              20300001
         BRREAD  (PREG),,TJID=TJIDSAVE                                  20320001
         L     PREG,0(PREG)        LOAD MOTHER PTR                      20340001
         LA    PREG,0(PREG)        CLEAR POS HI BYTE                    20360001
         LTR   PREG,PREG           IS MOTHER POINTER ZERO               20380001
         BZ    TCBTOP              YES--TOP OF TREE                     20400001
         C     PREG,MSTRTCB        IS MOTHER MASTER SCHEDULER           20420001
         BE    TCBTOP              YES--TOP OF TREE                     20440001
         LR    R2,PREG             NO--LOAD MOTHER TO R2 AND LOOP       20460001
         B     FMTLOOP1            UNTIL WE REACH THE TOP OF FAMILY     20480001
*                                  TREE                                 20500001
         SPACE                                                          20520001
TCBTOP   ST    R2,TOPTCB           SAVE ADDR OF TOP TCB IN FAMILY TREE  20540001
FAMLOOP1 LA    PREG,DAUGHTER(R2)   LOAD ADDR OF DAUGHTER PTR     X01980 20560001
         BRREAD  (PREG),,TJID=TJIDSAVE                                  20580001
         L     R3,0(PREG)          LOAD DAU TO R3                       20600001
         BAL   R9,FMTCBSAV         SAVE MOTHER ADDR ON THE FORMAT       20620001
*                                  TCBLIST                       X01980 20640001
         C     R2,TOPTCB           IS TCB ADDR IN R2 THE TOP TCB        20660001
         BE    FAMTREE1            YES--DON'T SAVE SISTER               20680001
         LA    PREG,SISTER(R2)     LAOD ADDR OF SISTER                  20700001
         BRREAD  (PREG)                                                 20720001
         L     R2,0(PREG)          LOAD SISTER PTR TO R2                20740001
         BAL   R9,SISSAVE          SAVE SISTER ADDR ON SISLIST          20760001
FAMTREE1 LTR   R3,R3               IS THERE A DAUGHTER                  20780001
         BZ    FAMTREE2            NO--GO GET LAST SISTER SAVED         20800001
         LR    R2,R3               LOAD DAUGHTER PTR TO R2              20820001
         LH    R7,DAUCNT           GET DAUGHTER COUNT            X01980 20840001
         SH    R7,ONEA             REDUCE BY ONE                 X01980 20860001
         BZ    FAMTREE2            HAVE A LOOP, GET OUT          X01980 20880001
         STH   R7,DAUCNT           SAVE COUNT                    X01980 20900001
         B     FAMLOOP1            SAVE DAUGHTER AND PROCEED            20920001
         SPACE                                                          20940001
FAMTREE2 BAL   R9,SISGET           GO GET LAST SISTER TCB SAVED         20960001
         MVC   DAUCNT(2),DAUMAX    RESET DAUGHTER LOOP CNT       X01980 20980001
         LTR   R2,R2               WHERE THERE ANY                      21000001
         BZ    FAMDONE             NO--WE ARE DONE WITH TREE     X01980 21020001
         LH    R7,SISCNT           GET SISTER COUNT              X01980 21040001
         SH    R7,ONEA             REDUCE BY ONE                 X01980 21060001
         BZ    FAMDONE             HAVE A LOOP, GET OUT          X01980 21080001
         STH   R7,SISCNT           SAVE COUNT                    X01980 21100001
         B     FAMLOOP1            PRECEED WITH THIS SISTER      X01980 21120001
         SPACE 2                                                        21140001
FAMDONE  L     PREG,TCBORIG        LOAD ORIGINAL TCB ADDR               21160001
         MVC   SISCNT(2),SISMAX    RESET SISTER LOOP CNT         X01980 21180001
         OI    FMTIOTSW,TIOTSW1    INDICATE READING TIOT         X01980 21200001
         LR    R2,PREG             SAVE IN R2 IN CASE OF ERROR   X01980 21220001
         LA    PREG,TCBTIOT(PREG)  LOAD ADDR OF TIOT PTR                21240001
         BRREAD  (PREG),DATA,TJID=TJIDSAVE                              21260001
         L     R7,0(PREG)          TIOT ADDR                            21280001
         LTR   PREG,R7             TEST FOR TIOT                        21300001
         BZ    FAMDONE1            NO TIOT--BLANK NAMES OF TITLE        21320001
         C     R7,ADDRMAX          IS TIOT ADDR GT UPPER BOUNDS OF MACH 21340001
         BH    FAMDONE1            YES--NO TIOT                         21360001
         BRREAD  (PREG)                                                 21380001
         MVC   FMTITLE+4(8),0(PREG) MOVE JOBNAME TO TITLE               21400001
         LA    PREG,8(R7)          ADDR OF STEP NAME                    21420001
         BRREAD  (PREG)                                                 21440001
         MVC   FMTITLE+20(8),0(PREG) MOVE STEP NAME TO TITLE            21460001
         LA    PREG,16(R7)         ADDR OF PROC STEP NAME               21480001
         BRREAD  (PREG)                                                 21500001
         MVC   FMTITLE+40(8),0(PREG) MOVE PROC STEP NAME TO TITLE       21520001
         B     FAMDONE2            BR AROUND                            21540001
FAMDONE1 MVC   FMTITLE+4(8),BLANKS BLANK JOB NAME                       21560001
FAMDONE3 MVC   FMTITLE+20(8),BLANKS BLANK STEP NAME                     21580001
         MVC   FMTITLE+40(8),BLANKS BLANK PROC STEP NAME                21600001
FAMDONE2 LH    PREG,TCBCNT2        LOAD COUNT OF TCBS IN FAMILY         21620001
         LH    R0,TJIDSAVE         GET TJID FOR TCB SUMMARY ROUTINE     21640001
         NI    FMTIOTSW,XFF-TIOTSW1 RESET TIOTSW                 X01980 21660001
         L     R15,ATCBSMGT        ADDR OF TCB SUMMARY GET ROUTINE      21680001
         BALR  RETREG,R15          GO GET CORE FOR AND BUILD TCB        21700001
*                                  SUMMARY TABLE                        21720001
FMTPRTLP BAL   R9,FMTGET           GET TCB ADDR                         21740001
         LTR   R2,R2               WAS THERE ONE                        21760001
         BZ    FMTLOOP2            NO--GET NEXT TCB ADDR ON TCBLIST     21780001
         EJECT                                                          21800001
*********************************************************************** 21820001
*                                                                     * 21840001
*   THIS ROUTINE IS USED FOR SAVING THE ADDRESSES OF TCBS THAT ARE    * 21860001
*   FORMATTED...THIS IS NESESSARY TO PREVENT THE FORMATTING OF ONE    * 21880001
*   TCB MORE THAN ONCE FOR A GIVEN OPERATION.                         * 21900001
*                                                                     * 21920001
*********************************************************************** 21940001
         SPACE                                                          21960001
FMTCBC   LA    R4,FMTEDP           ADDR OF FORMATTED TCB TABLE PTR      21980001
         L     R3,0(R4)            LOAD PTR TO FORMATTED TCB TABLE      22000001
         LTR   R3,R3               IS PTR ZERO                          22020001
         BZ    FMTCBS1             YES--GET CORE FOR TABLE AND SAVE TCB 22040001
*                                  ADDRESS                              22060001
FMTCBC1  TM    SWE,FMTDSW          TEST FOR FORMATTED SW  (SET WITH     22080001
*                                  TCB ADDR SAVED AND RESET WITH EACH   22100001
*                                  CONTROL STATEMENT) AND EACH TIME     22120001
*                                  FSR IS ENTERED WITH NON-ZERO TJID    22140001
         BNZ   FMTCBC5             SET--LOOK FOR DUPLICATE TCB ADDR     22160001
         L     R4,0(R3)            SAVE LINK OF FIRST TABLE             22180001
         XC    0(8,R3),0(R3)       ZERO LINK AND COUNT OF TCB ADDRS     22200001
         LTR   R4,R4               TEST FOR ONLY ONE TABLE              22220001
         BZ    FMTCBS              BRANCH IF SO                         22240001
FMTCBC2  L     R3,0(R4)            ADDR OF NEXT TABLE IN R3             22260001
         FREEMAIN  R,LV=48,A=(R4)                                       22280001
         LTR   R4,R3               ALL DONE                             22300001
         BNZ   FMTCBC2             NO--ZERO CNT OF NEXT                 22320001
         B     FMTCBS              YES--STORE NEW TCB ADDR IN TABLE     22340001
         SPACE                                                          22360001
FMTCBC5  L     R3,0(R4)            LOAD TABLE PTR                       22380001
         LTR   R3,R3               IS IT ZERO                           22400001
         BZ    FMTCBS              YES--DUPLICATE NOT FOUND...SAVE IT   22420001
         L     R5,4(R3)            LOAD CNT OF TCB ADDRS IN THIS TABLE  22440001
         LTR   R5,R5               IS CNT ZERO                          22460001
         BZ    FMTCBC3             YES--LOOK AT NEXT TABLE              22480001
         LA    R7,8(R3)            INIT COMP ADDR                       22500001
FMTCBC4  C     R2,0(R7)            COMP FOR EQ TCB ADDR                 22520001
         BE    FMTCBR0             EQ FOUND--RETURN TO CALLER +4        22540001
         LA    R7,4(R7)            STEP COMP ADDR                       22560001
         BCT   R5,FMTCBC4          LOOP FOR TCB ADDR CNT                22580001
FMTCBC3  LR    R4,R3               STEP TO NEXT TABLE                   22600001
         B     FMTCBC5             LOOK AT NEXT TABLE                   22620001
         SPACE                                                          22640001
FMTCBS   LA    R4,FMTEDP           ADDR OF TABEL PTR                    22660001
FMTCBSLP L     R3,0(R4)            ADDR OF TCB ADDR TABLE               22680001
         LTR   R3,R3               IS IT ZERO                           22700001
         BZ    FMTCBS1             YES--MUST GET CORE FOR NEW TABLE     22720001
         L     R5,4(R3)            CNT OF TCB ADDRS ALREADY IN TABLE    22740001
         CH    R5,HTEN             IS TABLE FULL                        22760001
         BL    FMTCBS2             NO--PUT TCBADDR IN THIS TABLE        22780001
         LR    R4,R3               YES--STEP TO NEXT TABLE              22800001
         B     FMTCBSLP            LOOP                                 22820001
         SPACE                                                          22840001
FMTCBS1  GETMAIN R,LV=48           GET CORE FOR NEW TABLE               22860001
         ST    R1,0(R4)            ADD NEW TABLE                        22880001
         ST    R3,0(R1)            TO CHAIN                             22900001
         LR    R3,R1               TABLE ADDR TO R3                     22920001
         SR    R5,R5               ZERO CNT                             22940001
         SPACE                                                          22960001
FMTCBS2  LR    R4,R5               LOAD CNT TO R4                       22980001
         SLL   R4,2                MULTIPLY CNT BY 4 FOR INDEX          23000001
         LA    R4,8(R4)            ADD 8 TO INDEX                       23020001
         ST    R2,0(R4,R3)         STORE TCB ADDR INTO NEXT TABLE SLOT  23040001
         AH    R5,ONEA             ADD ONE TO CNT OF TCB ADDRS IN TABLE 23060001
         ST    R5,4(R3)            STORE NEW CNT INTO TABLE             23080001
         OI    SWE,FMTDSW          SET FORMATTED SW                     23100001
         B     FMTPRTL1            OK TO PRINT THIS TCB                 23120001
         SPACE                                                          23140001
FMTCBR0  OI    SWE,FMTDSW          SET FORMATTED SW                     23160001
         B     FMTPRTLP            TCB ALREADY FORMATTED                23180001
         EJECT                                                          23200001
*********************************************************************** 23220001
*                                                                     * 23240001
*   THE FOLLOWING ROUTINE INVOKES THE VARIOUS FORMATTING ROUTINES     * 23260001
*   WHICH PRINT  THE TCB ADDRESSED BY REGISTER 2 AND SYSTEM CONTROL   * 23280001
*   BLOCKS ASSOCIATED WITH THAT TCB.                                  * 23300001
*                                                                     * 23320001
*********************************************************************** 23340001
         SPACE                                                          23360001
FMTPRTL1 TM    FMTSW,SKIPSW        TEST SKIP SWITCH SO THAT THERE       23380001
*                                  IS NO EJECT FOR FIRST TCB            23400001
         BZ    FMTPRTL2                                                 23420001
         BRWRITE  SKIP             START NEW PAGE                       23440001
FMTPRTL2 OI    FMTSW,SKIPSW        TURN ON SKIP SWITCH                  23460001
         MVC   ADDR(48),FMTITLE    MOVE TITLE TO BUFFER                 23480001
         BRWRITE 2                 PRINT TITLE                          23500001
         BAL   R9,FMTSUMS          ADD TCB TO SUMMARY TABLE             23520001
         LH    R0,TJIDSAVE         PICK UP TJID VALUE FOR CALLS TO      23540001
*                                  CONTROL BLOCK FORMATING ROUTINES     23560001
         L     R15,ATCBPRNT        ADDR OF TCB PRINT ROUT               23580001
         BALR  RETREG,R15          PRINT TCB                            23600001
         LTR   R15,R15             TEST FOR TERMINATED TASK             23620001
         BNZ   FMTPRTLP            PRINT NOTHING BUT TCB IF TASK HAS    23640001
*                                  TERMINATED                           23660001
         L     R15,ARBPRNT         ADDR OF RB PRINT ROUT                23680001
         BALR  RETREG,R15          PRINT RB CHAIN                       23700001
         L     R15,AMSSPRNT        ADDR OF MSS PRINT ROUTINE            23720001
         BALR  RETREG,R15          GO PRINT MAIN STORAGE BLOCKS FOR TCB 23740001
         L     R15,ALOADPRT        ADDR OF LOAD LIST PRINT ROUT         23760001
         BALR  RETREG,R15          GO PRINT LOAD LIST                   23780001
         L     R15,ADEBPRNT        ADDR OF DEB PRINT ROUTINE            23800001
         BALR  RETREG,R15          PRINT DEBS                           23820001
         L     R15,ATIOTPRT        ADDR OF TIOT PRINT ROUTINE           23840001
         BALR  RETREG,R15          PRINT TIOT                           23860001
         B     FMTPRTLP            LOOP FOR ALL TCBS ON FORMAT TCBLIST  23880001
         SPACE                                                          23900001
FMTDONE  MVC   ERRADDR,FMTSAVE1    RESTORE CALLER'S ERROR ROUTINE       23920001
         MVC   STOPEXIT(4),FMTSTPSV  RESTORE CALLER'S STOP ROUTINE      23940001
         BAL   R9,FMTCBPG          FREE LISTS                           23960001
FMTDONE1 L     R13,4(R13)          EXIT LINKAGE                         23980001
         LM    R14,R12,12(R13)                                          24000001
         BR    RETREG              RETURN TO CALLER                     24020001
         EJECT                                                          24040001
*********************************************************************** 24060001
*                                                                     * 24080001
*   ERROR IN TCB CHAIN....WRITE ERROR MSG AND CONTINUE WITH NEXT TCB  * 24100001
*                                                                     * 24120001
*********************************************************************** 24140001
         SPACE                                                          24160001
         DROP  BASE1                                                    24180001
         USING *,R15               TEMPORARILY BASE ERROR ROUTINE       24200001
*                                  ON EP ADDRESS IN REG 15              24220001
FMTERR1  LA    R13,FMTSAVE         GET FORMAT SAVE AREA ADDR            24240001
         LM    R14,R12,12(R13)     RESTORE REGISTERS             X01980 24260001
         DROP  R15                                                      24280001
         USING FSR,BASE1           NOW BASE ON REG 11                   24300001
         NI    SWB,XFF-IOERR-FMTERR RESET ERROR SWITCHES                24320001
         TM    FMTIOTSW,SUMSW      WAS TCB BEING READ IN SUMMARY Y01980 24321001
         BZ    FMTERR1B            NO--CONTINUE                  Y01980 24321201
         NI    FMTIOTSW,XFF-SUMSW  RESET SWITCH                  Y01980 24322001
         BR    R9                  RETURN EXITING SUMMARY RTN    Y01980 24323001
FMTERR1B TM    FMTIOTSW,TIOTSW1    WAS TIOT BEING READ           Y01980 24340001
         BZ    FMTERR1A            NO--CONTINUE                  X01980 24360001
         MVC   FMTITLE+4(L'FMTUNK),FMTUNK  INDIC UNKNOWN JOBNAME YM1468 24380001
         B     FAMDONE3            RETURN TO FORMAT TCB'S        X01980 24400001
FMTERR1A BRWRITE 1                 SPACE A LINE                         24420001
         ST    R2,FMTWORK          STORE TCBADDR TO BE CONVERTED        24440001
         LA    PREG,FMTWORK                                             24460001
         LA    R4,FMTERMSG+25      ADDR FOR CONVERTED TCB ADDR          24480001
         L     R15,AADRCNVT        ADDR OF 3 BYTE CONVERT ROUTINE       24500001
         BALR  RETREG,R15          CONVERT TCB ADDR                     24520001
         MVC   ADDR(31),FMTERMSG   MOVE ERROR MSG TO BUFFER             24540001
         BRWRITE 1                 PRINT ERROR MSG                      24560001
         B     FAMTREE2            CONTINUE WITH NEXT SISTER TCB X01980 24580001
         EJECT                                                          24600001
*********************************************************************** 24620001
*                                                                     * 24640001
*   THIS ROUTINE SAVES TCB ADDRS IN R2 ON THE FORMAT TCBLIST          * 24660001
*                                                                     * 24680001
*********************************************************************** 24700001
         SPACE                                                          24720001
FMTCBSAV LTR   R2,R2               IS THERE A TCB ADDR IN R2            24740001
         BCR   8,R9                RETURN TO CALLER IF NOT              24760001
         MVC   FTCBSAV,TCBLIST     SAVE REAL TCBLIST PTR                24780001
         MVC   TCBLIST,FTCBLIST    MOVE IN FORMAT TCBLIST PTR           24800001
         L     R15,ATCBSAVE        ADDR OF TCB SAVE ROUTINE             24820001
         BALR  RETREG,R15          SAVE THE TCB ADDR IN R2 ON THE       24840001
*                                  FORMAT TCB LIST                      24860001
         MVC   FTCBLIST,TCBLIST    MOVE FORMAT TCBLIST PTR BACK         24880001
         MVC   TCBLIST,FTCBSAV     RESTORE THE REAL TCBLIST PTR         24900001
         LTR   R15,R15             WAS A TCB ADDR REALLY PLACED ON THE  24920001
*                                  LIST                                 24940001
         BCR   7,R9                NO--TCB ADDR IN R2 IS A DUPLICATE    24960001
*                                  OF ONE ALREADY SAVED...DON'T INCR    24980001
*                                  TCBCNT2                              25000001
         LH    R0,TCBCNT2          LOAD COUNT OF TCB ADDRS ON FORMAT    25020001
*                                  TCBLIST                              25040001
         AH    R0,ONEA             ADD ONE TO THAT COUNT                25060001
         STH   R0,TCBCNT2          STORE BACK INCR COUNT                25080001
         BR    R9                  RETURN TO CALLER                     25100001
         SPACE 3                                                        25120001
*********************************************************************** 25140001
*                                                                     * 25160001
*   THIS ROUTINE WILL RETURN THE LAST TCB ADDR ON THE FORMAT TCBLIST  * 25180001
*   AND REMOVE THAT TCB ADDR FROM THE LIST                            * 25200001
*                                                                     * 25220001
*********************************************************************** 25240001
         SPACE                                                          25260001
FMTGET   LH    R0,TCBCNT2          LOAD COUNT OF TCB ADDRS ON FORMAT    25280001
*                                  TCBLIST                              25300001
         LTR   R0,R0               IS IT ZERO                           25320001
         BNP   FMTGET1             YES--NONE LEFT                       25340001
         MVC   FTCBSAV,TCBLIST     SAVE TCBLIST PTR                     25360001
         MVC   TCBLIST,FTCBLIST    MOVE IN FORMAT TCBLIST PTR           25380001
FMTGET3  LR    R2,R0               LOAD COUNT TO R2                     25400001
         L     R15,ATCBRTRV        ADDR OF RETRIEVE ROUTINE             25420001
         BALR  RETREG,R15          GO GET TCB ADDR                      25440001
         LTR   R2,R2               WAS THERE THAT MANY TCBS ON LIST     25460001
         BZ    FMTGET2             NO--DECR COUNT AND TRY AGAIN         25480001
         L     R15,ATCBREMV        ADDR OF REMOVE ROUTINE               25500001
         BALR  RETREG,R15          GO REMOVE THIS TCB ADDR FROM LIST    25520001
         SH    R0,ONEA             SUBTRACT ONE FROM COUNT              25540001
FMTGET4  MVC   FTCBLIST,TCBLIST    SAVE FORMAT TCBLIST PTR              25560001
         MVC   TCBLIST,FTCBSAV     RESTORE TCBLIST PTR                  25580001
         STH   R0,TCBCNT2          STORE REMAINING COUNT BACK           25600001
         BR    R9                  RETURN TO CALLER                     25620001
         SPACE                                                          25640001
FMTGET1  SR    R2,R2               INDICATE NO MORE TCBS ON LIST        25660001
         BR    R9                  RETURN TO CALLER                     25680001
         SPACE                                                          25700001
FMTGET2  SH    R0,ONEA             SUBTRACT ONE FROM COUNT              25720001
         BP    FMTGET3             GO TRY AGAIN                         25740001
         SR    R2,R2               INDICATE NO MORE TCBS ON LIST        25760001
         B     FMTGET4             RETURN TO CALLER                     25780001
         EJECT                                                          25800001
*********************************************************************** 25820001
*                                                                     * 25840001
*   THIS ROUTINE SAVES TCB ADDRS IN R2 ON THE SISTER TCBLIST          * 25860001
*                                                                     * 25880001
*********************************************************************** 25900001
         SPACE                                                          25920001
SISSAVE  MVC   FTCBSAV,TCBLIST     SAVE REAL TCBLIST PTR                25940001
         MVC   TCBLIST,SISLIST     MOVE IN SISTER LIST PTR              25960001
         L     R15,ATCBSAVE        ADDR OF TCBSAVE ROUTINE              25980001
         BALR  RETREG,R15          SAVE SISTER ADDR ON SISTER TCBLIST   26000001
         MVC   SISLIST,TCBLIST     MOVE SISLIST PTR BACK                26020001
         MVC   TCBLIST,FTCBSAV     RESTORE REAL TCBLIST PTR             26040001
         BR    R9                  RETURN TO CALLER                     26060001
         SPACE 3                                                        26080001
*********************************************************************** 26100001
*                                                                     * 26120001
*   THIS ROUTINE WILL GET THE FIRST TCB ADDR ON THE SISTER TCBLIST    * 26140001
*   AND REMOVE THAT TCB FROM THE LIST                                 * 26160001
*                                                                     * 26180001
*********************************************************************** 26200001
         SPACE                                                          26220001
SISGET   MVC   FTCBSAV,TCBLIST     SAVE TCBLIST PTR                     26240001
         MVC   TCBLIST,SISLIST     MOVE IN SISTER TCBLIST PTR           26260001
         LA    R2,1                NUMBER FOR FIRST ADDR ON LIST        26280001
         L     R15,ATCBRTRV        ADDR OF RETRIEVE ROUTINE             26300001
         BALR  RETREG,R15          GET A TCB ADDR                       26320001
         LTR   R2,R2               WAS THERE ONE                        26340001
         BZ    SISGET1             NO--AVOID REMOVAL                    26360001
         L     R15,ATCBREMV        ADDR OF REMOVE ROUTINE               26380001
         BALR  RETREG,R15          REMOVE THIS TCB ADDR FROM THE LIST   26400001
SISGET1  MVC   SISLIST,TCBLIST     SAVE SISTER TCBLIST PTR              26420001
         MVC   TCBLIST,FTCBSAV     RESTORE TCBLIST PTR                  26440001
         BR    R9                  RETURN TO CALLER                     26460001
         EJECT                                                          26480001
*********************************************************************** 26500001
*                                                                     * 26520001
*   THIS ROUTINE PLACES TCB ADDRESSES, DATA, AND PAGE NUMBERS INTO TCB* 26540001
*    SUMMARY TABLE.                                                   * 26560001
*                                                                     * 26580001
*********************************************************************** 26600001
         SPACE                                                          26620001
FMTSUMS  L     R3,TCBSMPTR         LOAD ADDR OF TCB SUMMARY TABLE       26640001
*                                  POINTERS                             26660001
         L     R3,0(R3)            LOAD ADDR OF FIRST TABLE             26680001
         SR    R4,R4               CLEAR IC REG                         26700001
         IC    R4,0(R3)            GET COUNT OF TCBS IN FAMILY          26720001
         LTR   R4,R4               TEST FOR ZERO                        26740001
         BCR   8,R9                RETURN TO MAIN LINE IF TCBCNT IS     26760001
*                                  ZERO  (SHOULDN'T HAPPEN...)          26780001
         LA    R1,28(R3)           ADDR OF FIRST TCB ENTRY IN TABLE     26800001
FMTSUM2  OC    0(4,R1),0(R1)       TEST FOR ZERO TCB ENTRY              26820001
         BZ    FMTSUM1             ZERO--USE THIS ENTRY POSITION        26840001
         LA    R1,24(R1)           NO--INCR TO NEXT TCB ENTRY    Y01980 26860001
         BCT   R4,FMTSUM2          LOOP TILL A ZERO ENTRY FOUND OR TO   26880001
*                                  END OF TABLE                         26900001
         BR    R9                  TABLE FULL--RETUR TO MAIN LINE       26920001
*                                  WITHOUT SAVING ANYTHING  (SHOULDN'T  26940001
*                                  HAPPEN...)                           26960001
FMTSUM1  LR    R3,R1               SAVE PTR IN REG 3             Y01980 26961001
         OI    FMTIOTSW,SUMSW      INDICATE IN SUMMARY RTN       Y01980 26962001
         ST    R2,0(R3)            STORE TCB ADDR INTO TABLE     Y01980 26980001
         LA    PREG,16(R2)         POINT TO CMP FIELD            Y01980 26981001
         BRREAD (PREG)             READ PTR                      Y01980 26982001
         MVC   4(4,R3),0(PREG)     MOVE DATA TO TABLE            Y01980 26983001
         LA    PREG,SISTER(R2)     POINT TO SISTER TCB FIELD     Y01980 26984001
         BRREAD (PREG)             READ PTR                      Y01980 26985001
         MVC   8(4,R3),0(PREG)     MOVE DATA TO TABLE            Y01980 26986001
         LA    PREG,MOTHER(R2)     POINT TO MOTHER TCB FIELD     Y01980 26987001
         BRREAD (PREG)             READ PTR                      Y01980 26988001
         MVC   12(4,R3),0(PREG)     MOVE DATA TO TABLE           Y01980 26989001
         LA    PREG,DAUGHTER(R2)   POINT TO DAUGHTER TCB FIELD   Y01980 26990001
         BRREAD (PREG)             READ PTR                      Y01980 26991001
         MVC   16(4,R3),0(PREG)     MOVE DATA TO TABLE           Y01980 26992001
         LA    PREG,238(R2)        POINT TO TID FIELD            Y01980 26993001
         BRREAD (PREG)             READ PTR                      Y01980 26994001
         MVC   0(1,R3),0(PREG)     MOVE DATA TO TABLE            Y01980 26995001
         MVC   20(4,R3),TITLEPGE+5 MOVE EBCDIC PAGE NUMBER       Y01980 27000001
         NI    FMTIOTSW,XFF-SUMSW  INDICATE DONE WITH SUMMARY RTNY01980 27001001
         BR    R9                  RETURN TO MAIN LINE                  27020001
         EJECT                                                          27040001
*********************************************************************** 27060001
*                                                                     * 27080001
*  FORMAT TCB STOP HANDLER                                            * 27100001
*                                                                     * 27120001
*********************************************************************** 27140001
         SPACE                                                          27160001
         USING *,R15                                                    27180001
FMTSTP   LA    R13,FMTSAVE         POINT TO SAVE AREA                   27200001
         LM    R14,R12,12(R13)     RESTORE REGS                         27220001
         USING FSR,BASE1           SHIFT BACK TO REG 11 AS BASE         27240001
         DROP  R15                                                      27260001
         LA    R9,FMSTPOUT         SET RETURN ADDRESS                   27280001
*   PURGE ALL FORMAT TCB LISTS IN CASE OF STOP BY OPERATOR              27300001
FMTCBPG  MVC   FTCBSAV,TCBLIST     SAVE TCB LIST PTR                    27320001
         MVC   TCBLIST,FTCBLIST    MOVE IN FORMAT TCB LIST PTR          27340001
         SR    R2,R2               ZERO R2 FOR COMPL REMOVAL            27360001
         L     R15,ATCBREMV        ADDR OF TCB REMOVE ROUT              27380001
         BALR  RETREG,R15          LINK TO IT                           27400001
         MVC   FTCBLIST,TCBLIST    MOVE ZEROED PTR BACK                 27420001
         MVC   TCBLIST,SISLIST     MOVE IN SISTER TCB LIST PTR          27440001
         L     R15,ATCBREMV        ADDR OF REMOVE ROUT                  27460001
         BALR  RETREG,R15          LINK TO TCB REMOVE ROUT              27480001
         MVC   SISLIST,TCBLIST     MOVE ZEROED PTR BACK                 27500001
         MVC   TCBLIST,FTCBSAV     RESTORE TCBLIST PTR                  27520001
         BR    R9                                                       27540001
FMSTPOUT MVC   ERRADDR(4),FMTSAVE1 RESTORE ERROR HANDLER'S ADDR         27560001
         L     R15,FMTSTPSV        GET CALLER'S STOP RTN. ADDRESS       27580001
         ST    R15,STOPEXIT        STORE BACK IN COMMON CSECT           27600001
         BR    R15                 BRANCH TO IT                         27620001
         EJECT                                                          27640001
*********************************************************************** 27660001
*                                                                     * 27680001
*   CONSTANTS AND SAVE AREA FOR FORMAT ROUTINE                        * 27700001
*                                                                     * 27720001
*********************************************************************** 27740001
         SPACE                                                          27760001
FMTSAVE  DC    18F'0'              FORMAT REGISTER SAVE AREA            27780001
TCBORIG  DC    F'0'                                                     27800001
FMTSTPSV DC    F'0'                SAVE AREA FOR STOP ROUTINE ADDRESS   27820001
FTCBSAV  DC    F'0'                                                     27840001
FTCBLIST DC    F'0'                                                     27860001
SISLIST  DC    F'0'                                                     27880001
FMTEDP   DC    F'0'                                                     27900001
FMTSAVE1 DC    F'0'                SAVE AREA FOR CALLER'S ERROR ROUTINE 27920001
*                                  ADDRESS                              27940001
TOPTCB   DC    F'0'                                                     27960001
FMTWORK  DC    F'0'                                                     27980001
TCBSMPTR DC    A(FMTSFPTR)         ADDR OF TCB SUMMARY TABLE PTRS       28000001
ATCBPRNT DC    A(AMDPRFTC)         ADDR OF TCB PRINT ROUTINE            28020001
ARBPRNT  DC    A(AMDPRFRB)         ADDR ROUTINE TO PRINT RB'S           28040001
AMSSPRNT DC    A(AMDPRFMS)         ADDR ROUTINE TO MAIN STORAGE SUPER   28060001
ALOADPRT DC    A(AMDPRFLD)         ADDR OF LOAD LIST PRINT RTN          28080001
ADEBPRNT DC    A(AMDPRFDB)         ADDR ROUTINE TO PRINT DEB'S          28100001
ATIOTPRT DC    A(AMDPRFIO)         ADDR TIOT PRINT ROUTINE              28120001
TCBSMFRA DC    A(TCBSMFR)          ADDR TCB SUMMARY ROUTINES - ORDER    28140001
         DC    A(TCBSMGT)          MUST BE FR, GT, MRY                  28160001
         DC    A(AMDPRTSM)                                              28180001
TCBCNT1  DC    H'0'                                                     28200001
TCBCNT2  DC    H'0'                                                     28220001
TJIDSAVE DC    H'0'                                                     28240001
DAUCNT   DC    H'300'              DAUGHTER TCB LOOP COUNT       X01980 28260001
DAUMAX   DC    H'300'              TO RESET DAUCNT               X01980 28280001
SISCNT   DC    H'1000'             SISTER TCB LOOP COUNT         X01980 28300001
SISMAX   DC    H'1000'             TO RESET SISCNT               X01980 28320001
FMTUNK   DC    C'UNKNOWN'          FOR ERROR READING TIOT        X01980 28340001
FMTIOTSW DC    X'00'               SW SET FOR TIOT               X01980 28360001
FMTSW    DC    B'00000000'         BIT 1 - INIT SWITCH                  28380001
FMTERMSG DC    CL32'ERROR IN TCB CHAIN   TCB'                           28400001
FMTITLE  DC    C'JOB            STEP            PROCSTEP         '      28420001
FSRPCH   DC    20F'0'              PATCH AREA                    X01980 28440001
         SPACE                                                          28460001
         DROP  BASE1,COMBASE                                            28480001
         EJECT                                                          28500001
AMDPRFTC CSECT                                                          28520001
         SPACE                                                          28540001
*********************************************************************** 28560001
*              *** AMDPRFTC - TCB PRINT ***                           * 28580001
*                                                                     * 28600001
* STATUS--OS/VS2 RELEASE 1.0                                          * 28620001
*                                                                     * 28640001
* FUNCTION--                                                          * 28660001
*    THIS ROUTINE FORMATS AND PRINTS THE TCB.                         * 28680001
*                                                                     * 28700001
* ENTRY POINTS--                                                      * 28720001
*    AMDPRFTC IS THE ONLY ENTRY.  CONTROL IS RECIEVED FROM AMDPRFSR.  * 28740001
*    STANDARD SUBROUTINE LINKAGE USED.                                * 28760001
*                                                                     * 28780001
* INPUTS--                                                            * 28800001
*         REGISTER 0 - TJID OF STORAGE CONTAINING TCB TO BE FORMATTED * 28820001
*         REGISTER 2 - TCB ADDRESS TO BE FORMATTED                    * 28840001
*         REGISTER 12 - ADDRESS OF COMMON AREA                        * 28860001
*                                                                     * 28940001
* OUTPUT--                                                            * 28960001
*    WRITES FORMATTED TCB AND IF THE TCB IS THE CURRENT TCB,          * 28980001
*    SO INDICATES.                                                    * 29000001
*    WRITES MESSAGE 'TASK HAS TERMINATED' AND ERROR MESSAGE 'ERROR    * 29020001
*    FORMATTING TCB'                                                  * 29040001
*    IF TASK HAS TERMINATED, RETURN CODE IS 4, OTHERWISE IT IS 0      * 29060001
*                                                                     * 29080001
* EXTERNAL REFERENCES--                                               * 29100001
*         BRREAD - TO OBTAIN DATA FROM THE INPUT DUMP.                * 29120001
*         BRWRITE - TO WRITE DATA TO THE 'PRINTER' DATA SET.          * 29140001
*         AMDPRGFR - FROM AN ADDRESS IN COMMON, TO FORMAT A LINE      * 29160001
*                    DESCRIBED BY THE FMTPTRN MACRO INSTRUCTION.      * 29180001
*         WRDCNVT - FROM AN ADDRESS IN COMMON, TO CONVERT 4 BYTES     * 29200001
*                   TO PRINTABLE HEX.                                 * 29220001
*                                                                     * 29240001
* EXITS,NORMAL--                                                      * 29260001
*    RETURN TO CALLER THROUGH STANDARD LINKAGE UNLESS 'STOP' HAS      * 29280001
*    BEEN ENTERED BY OPERATOR IN WHICH CASE CONTROL RETURNS TO        * 29300001
*    STOP ROUTINE WITHOUT RESTORING REGISTERS.                        * 29320001
*                                                                     * 29340001
* EXITS,ERROR--                                                       * 29360001
*    SAME AS NORMAL EXIT                                              * 29380001
*                                                                     * 29400001
* TABLES/WORK AREAS--                                                 * 29420001
*    FMTPTRN MACRO IS USED TO GENERATE A PATTERN FOR THE FORMATTED    * 29440001
*    TCB                                                              * 29460001
*                                                                     * 29480001
* ATTRIBUTES-- REUSABLE                                               * 29500001
*                                                                     * 29520001
* CHARACTER CODE DEPENDENCY-- NONE                                    * 29540001
*                                                                     * 29560001
* NOTES--                                                             * 29580001
*   BRREAD ERROR HANDLER:  IF A TCB CANNOT BE READ FROM THE INPUT     * 29600001
*   DUMP, A MESSAGE IS PRINTED AND CONTROL RETURNS TO AMDPRFSR.       * 29620001
*                                                                     * 29640001
*********************************************************************** 29660001
         SPACE                                                          29680001
PCPTCB   EQU   128                                                      29700001
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              29720001
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             29740001
         USING *,BASE1                                                  29760001
TCBPRBAS LA    R3,TCBSAVE          SAVE AREA CHAINING                   29780001
         ST    R13,TCBSAVE+4                                            29800001
         ST    R3,8(R13)                                                29820001
         LR    R13,R3                                                   29840001
         SPACE                                                          29860001
         USING COMMON,COMBASE                                           29880001
         MVC   TCBERSV,ERRADDR     SAVE PREVIOUS ERROR ROUTINE ADDR     29900001
         LA    R15,TCBPRER         ADDR OF TCBPRNT ERROR ROUTINE        29920001
         ST    R15,ERRADDR         STORE IN ERROR ROUT ADDR WORD        29940001
         MVI   TCBPRTSW,0          ZERO TCBPRNT SWITCH                  29960001
TCBPRNTA EQU   *                                                        30040001
         L     BUFREG,CURBUF       LOAD BUFFER ADDR                     30060001
         LTR   R0,R0               BYPASS CURRENT TEST FOR              30080001
         BNZ   TCBPRNT5            TJID NOT ZERO                        30100001
         C     R2,CURTCB           IS THIS TCB THE CURRENT TCB          30120001
         BNE   TCBPRNT5            NO--BR AROUND NEXT INSTRUCTIONS      30140001
         MVC   ADDR+46(28),CURMSG  MOVE CURRENT TASK MSG TO BUFFER      30160001
         BRWRITE 2                 PRINT MSG                            30180001
TCBPRNT5 ST    R2,TCBLN11          PLACE TCB ADDR IN PATTERN            30200001
         LA    PREG,TCBLN1         LOAD ADDR OF PATTERN FOR FIRST LINE  30220001
*                                  OF TCB                               30240001
         BAL   R9,TCBFMPR          FORMAT AND PRINT FIRST LINE OF TCB   30260001
         B     TCBPRTV             GO TO AOS/2 PRINT ROUT        Y01980 30300001
         EJECT                                                          30360001
         SPACE 2                                                        31760001
*********************************************************************** 31780001
*                                                                     * 31800001
*   ROUTINE TO FORMAT AND PRINT AOS/2 TCB                             * 31820001
*                                                                     * 31860001
*********************************************************************** 31880001
         SPACE                                                          31900001
TCBPRTV  LA    PREG,TCBVID2        ADDR OF ID FOR BYTE 44 OF AOS/2 TCB  31920001
         ST    PREG,TCBLN21        STORE INTO PATTERN                   31940001
         LA    PREG,TCBLN2         ADDR OF PATTERN                      31960001
         BAL   R9,TCBFMPR          FORMAT AND PRINT LINE 2 OF TCB       31980001
         LA    R3,48               LOAD INDEX TO TCB REGS               32000001
         LA    R15,TCBPTRG         GET ADDRESS REG PRINT ROUTINE        32020001
         BALR  RETREG,R15          LINK TO IT                           32040001
         LA    PREG,112(R2)        ADDR OF NEXT FIELD AFT REGS IN TCB   32060001
         ST    PREG,TCBLN31        STORE INTO PATTERN                   32080001
         MVI   TCBLN32,LBL+LBLP+DTA SET PATTERN TO CONTINUE             32100001
         LA    PREG,TCBVID3        LOAD ADDR OF 'JST' ID                32120001
         ST    PREG,TCBLN33        STORE IT INTO PATTERN                32140001
         LA    PREG,TCBLN3         ADDR OF PATTERN                      32160001
         BAL   R9,TCBFMPR          FORMAT AND PRINT LINE 5 OF TCB       32180001
         LA    PREG,TCBVID4        LOAD ADDR OF AOS/2'S LINE 6 IDS      32200001
         ST    PREG,TCBLN41        STORE INTO PATTERN                   32220001
         LA    PREG,TCBLN4         ADDR OF PATTERN                      32240001
         BAL   R9,TCBFMPR          FORMAT AND PRINT LINE 6 OF TCB       32260001
         LA    PREG,160(R2)        ADDR OF NEXT FIELD OF TCB     X01980 32261001
         ST    PREG,TCBLN51        STORE INTO PATTERN            X01980 32262001
         LA    PREG,TCBLN5         ADDR OF PATTERN               X01980 32263001
         BAL   R9,TCBFMPR          FORMAT AND PRINT LINE 7 OF TCBX01980 32264001
         LA    PREG,184(R2)        ADDR OF NEXT FIELD OF TCB     X01980 32265001
         ST    PREG,TCBLN81        STORE INTO PATTERN            X01980 32266001
         LA    PREG,TCBLN8         ADDR OF PATTERN               X01980 32267001
         BAL   R9,TCBFMPR          FORMAT AND PRINT LN 8 OF TCB  X01980 32268001
         LA    PREG,208(R2)        ADDR OF NEXT FIELD OF TCB     X01980 32269001
         ST    PREG,TCBLN91        STORE INTO PATTERN            X01980 32270001
         LA    PREG,TCBLN9         ADDR OF PATTERN               X01980 32271001
         BAL   R9,TCBFMPR          FORMAT AND PRINT LN 9 OF TCB  X01980 32272001
         LA    PREG,232(R2)        ADDR OF NEXT FIELD OF TCB     Y01980 32272201
         ST    PREG,TCBLN101       STORE INTO PATTERN            Y01980 32272401
         LA    PREG,TCBLN10        ADDR OF PATTERN               Y01980 32272601
         BAL   R9,TCBFMPR          FORMAT AND PRINT LN 10 OF TCB Y01980 32272801
         LA    PREG,208(R2)        ADDR OF TCB EXT2              X01980 32273001
         BRREAD (PREG),TJID=(R0)   READ EXT2 ADDR                Y01980 32274001
         L     PREG,0(PREG)        GET PTR TO EXT2               X01980 32275001
         ST    PREG,TCBE2L11       STORE INTO PATTERN            X01980 32276001
         LA    PREG,TCBE2LN1       ADDR OF PATTERN               X01980 32277001
         BAL   R9,TCBFMPR          FORMAT AND PRINT LN 1 OF EXT2 X01980 32278001
         B     TCBPRNTC            PREPARE FOR RETURN TO FORMAT  X01980 32279001
         SPACE 2                                                        32300001
*********************************************************************** 32320001
*                                                                     * 32340001
*   FORMAT PRINT LINE FOR TCB AND PRINT THE LINE                      * 32360001
*                                                                     * 32380001
*********************************************************************** 32400001
         SPACE                                                          32420001
TCBFMPR  L     R15,AFMTLINE        LOAD ADDR OF LINE FORMAT ROUT        32440001
         BALR  RETREG,R15          FORMAT THE TCB LINE                  32460001
         BRWRITE 1                 PRINT THE LINE                       32480001
         BR    R9                  RETURN TO CALLER                     32500001
         SPACE 3                                                        32520001
*********************************************************************** 32540001
*                                                                     * 32560001
*   PREPARE FOR RETURN TO FORMAT ROUTINE                              * 32580001
*                                                                     * 32600001
*********************************************************************** 32620001
         SPACE                                                          32640001
TCBPRNTC EQU   *                                                        32660001
         LA    PREG,TCBFLGS+4(R2)  ADDR OF FIFTH FLAG BYTE OF TCB       32680001
         BRREAD  (PREG),DATA,TJID=(R0)                                  32700001
         TM    0(PREG),X'80'       IS TASK TERMINATED                   32720001
         BZ    TCBPRNT8            BR IF IT ISN'T                       32740001
         BRWRITE 1                 SPACE A LINE                         32760001
         MVC   ADDR(19),TERMMSG    MOVE TERMINATED MSG TO BUFFER        32780001
         BRWRITE 3                 PRINT MSG AND SPACE 3 LINES          32800001
         LA    R15,4               LOAD RETURN CODE OF 4                32820001
         B     TCBPRDN1            RETURN TO FORMAT                     32840001
TCBPRNT8 BRWRITE 2                 SPACE 2 LINES                        32860001
TCBPRDN  SR    R15,R15             ZERO RETURN CODE                     32880001
TCBPRDN1 MVC   ERRADDR,TCBERSV     RESTORE PREVIOUS ERROR ROUTINE ADDR  32900001
         L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          32920001
         L     R14,12(R13)                                              32940001
         LM    R0,R12,20(R13)      RESTORE CALLERS REGS                 32960001
         BR    RETREG              RETURN TO FORMAT ROUTINE             32980001
         SPACE 3                                                        33000001
*********************************************************************** 33020001
*                                                                     * 33040001
*   FORMAT OR I/O ERROR...RETURN TO FORMAT ROUTINE                    * 33060001
*                                                                     * 33080001
*********************************************************************** 33100001
         SPACE                                                          33120001
         DROP  BASE1                                                    33140001
         USING TCBPRER,R15                                              33160001
TCBPRER  LA    R13,TCBSAVE         GET TCB PRINT'S SAVE AREA            33180001
         LM    R14,R12,12(R13)     RESTORE OUR REGS                     33200001
         DROP  R15                                                      33220001
         USING TCBPRBAS,BASE1      SHIFT BACK TO REG 11 AS BASE         33240001
         L     BUFREG,CURBUF       RELOAD BUFFER ADDR                   33260001
         MVC   ADDR(20),TCBERMSG   MOVE ERROR MSG TO BUFFER             33280001
         BRWRITE 3                 PRINT ERROR MSG                      33300001
         B     TCBPRDN             RETURN TO FORMAT                     33320001
         DROP  BASE1                                                    33340001
         EJECT                                                          33360001
*********************************************************************** 33380001
*                                                                     * 33400001
*   THIS ROUTINE WILL PRINT THE REGISTERS FOR TCBPRNT ROUTINE AND     * 33420001
*   RBPRNT ROUTINE                                                    * 33440001
*                                                                     * 33460001
*********************************************************************** 33480001
         SPACE                                                          33500001
         USING *,R15                                                    33520001
TCBPTRG  STM   R4,R9,TCBRGSV       SAVE R4 - R9                         33540001
         LR    R7,R15              SHIFT TO REG 7 AS BASE FOR CALLS     33560001
*                                  TO READ AND AD-CONVERT               33580001
         DROP  R15                                                      33600001
         USING TCBPTRG,R7                                               33620001
         ST    RETREG,TCBRGSV+24   SAVE RETURN ADDR                     33640001
         TM    TCBPRTSW,PCPTCB     AM I PRINTING REGS FOR PCP/MFT TCB   33660001
         BZ    TCBPTRG4            BR IF NOT                            33680001
         MVC   ADDR+13(7),REG3     MOVE 'RG 10-1' TO BUFFER             33700001
         B     TCBPTRG5            BR AROUND                            33720001
TCBPTRG4 MVC   ADDR+13(6),REG1     MOVE 'RG 0-7' TO BUFFER              33740001
TCBPTRG5 EQU   *                                                        33760001
         LA    R8,2                LOAD OUTER LOOP CNT                  33780001
TCBPTRG1 LA    R4,ADDR+22          LOAD WHERE-TO-PUT-IT ADDR            33800001
         LA    R9,8                LOAD INNER LOOP CNT                  33820001
TCBPTRG2 LA    PREG,0(R3,R2)       LOAD ADDR OF GPRS                    33840001
*                                  ERL - SIGNAL BRREAD TO GENERATE      33860001
*                                  NEW P-LIST                           33880001
&PARMLST SETB  1                                                        33900001
         BRREAD  (PREG),DATA,TJID=(R0)                                  33920001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       33940001
         BALR  RETREG,R15          CONVERT GPR TO PRINTABLE HEX         33960001
         AH    R3,FOUR             INCR WORD INDEX                      33980001
         AH    R4,ELEVEN           INCR WHERE-TO-PUT-IT ADDR            34000001
         BCT   R9,TCBPTRG2         LOOP FOR 8 GPRS                      34020001
         BRWRITE 1                 PRINT LINE                           34040001
         BCT   R8,TCBPTRG3         LOOP FOR 2 LINES                     34060001
         L     RETREG,TCBRGSV+24   RESTORE RETURN ADDR                  34080001
         LM    R4,R9,TCBRGSV       RELOAD SAVED REGS                    34100001
*                                  *** NOTE BASE GETS COLBERED ON LOAD  34120001
         BR    RETREG              RETURN TO CALLER                     34140001
         SPACE                                                          34160001
TCBPTRG3 TM    TCBPRTSW,PCPTCB     TEST FOR PRINTING PCP/MFT TCB        34180001
         BZ    TCBPTRG6            BR IF NOT                            34200001
         MVC   ADDR+13(6),REG4     MOVE 'RG 2-9' TO BUFFER              34220001
         NI    TCBPRTSW,XFF-PCPTCB RESET PCP/MFT TCB INDICATOR    M3208 34240001
         B     TCBPTRG1            CONTINUE WITH REGS 2-9               34260001
TCBPTRG6 MVC   ADDR+13(7),REG2     MOVE 'RG 8-15' TO BUFFER             34280001
         B     TCBPTRG1            CONTINUE WITH REGS 8-15              34300001
         EJECT                                                          34320001
*********************************************************************** 34340001
*                                                                     * 34360001
*   CONSTANTS AND SAVE AREA FOR TCBPRNT                               * 34380001
*                                                                     * 34400001
*********************************************************************** 34420001
         SPACE                                                          34440001
TCBSAVE  DC    18F'0'              SAVE AREA FOR TCB PRINT              34460001
TCBWORK1 DC    F'0'                                                     34480001
TCBERSV  DC    F'0'                SAVE AREA FOR ERROR ROUTINE ADDR     34500001
TCBRGSV  DC    7F'0'               SAVE AREA FOR TCB REGS PRINT ROUT    34520001
         SPACE                                                          34540001
*   PATTERN FOR LINE 1 OF TCB                                           34560001
TCBLN1   FMTPTRN (LBL,DTA,LBLP,DTAP,DTAC),3,3,0,5,(TCBID1),(TCBLN11+1)  34580001
         FMTPTRN (LBL,DTA,DTAP),3,4,13,19,,(TCBLN11,0)                  34600001
         FMTPTRN (LBL,DTA),3,4,30,38                                    34620001
         FMTPTRN (LBL,DTA),3,4,49,54                                    34640001
         FMTPTRN (LBL,DTA),3,4,65,71                                    34660001
         FMTPTRN (LBL,DTA),3,4,82,88                                    34680001
         FMTPTRN (LBL,DTA),3,4,99,105,,,LAST                            34700001
         SPACE                                                          34720001
*   PATTERN FOR LINE 2 OF TCB                                           34740001
TCBLN2   FMTPTRN (LBL,DTA),3,4,13,19                                    34760001
         FMTPTRN (LBL,DTA),6,4,30,38                                    34780001
         FMTPTRN (LBL,DTA),3,4,49,54                                    34800001
         FMTPTRN (LBL,DTA),3,4,65,71                                    34820001
         FMTPTRN (LBL,DTA),3,4,82,88                                    34840001
         FMTPTRN (LBL,DTA,LBLP),3,4,99,105,(TCBLN21,0),,LAST            34860001
         SPACE                                                          34880001
*   PATTERN FOR LINE 5 OF TCB                                           34900001
TCBLN3   FMTPTRN (LBL,LBLP,DTA,DTAP),3,4,13,19,(TCBID3),(TCBLN31,0)     34920001
         FMTPTRN (LBL,DTA),3,4,30,38                                    34940001
         FMTPTRN (LBL,DTA),3,4,49,54                                    34960001
TCBLN32  FMTPTRN (LBL,DTA,LBLP),5,4,65,71,(TCBLN33,0)                   34980001
         FMTPTRN (LBL,LBLP,DTA),3,4,82,88,(TCBID3A)                     35000001
         FMTPTRN (LBL,DTA),3,4,99,105,,,LAST                            35020001
         SPACE                                                          35040001
*   PATTERN FOR LINE 6 OF TCB                                           35060001
TCBLN4   FMTPTRN (LBL,LBLP,DTA),3,4,13,19,(TCBID4)                      35080001
         FMTPTRN (LBL,DTA),3,4,30,38                                    35100001
         FMTPTRN (LBL,DTA),3,4,49,54                                    35120001
         FMTPTRN (LBL,LBLP,DTA),5,4,65,71,(TCBLN41,0)                   35140001
         FMTPTRN (LBL,DTA),5,4,82,88                                    35160001
         FMTPTRN (LBL,DTA),3,4,99,105,,,LAST                            35180001
         SPACE                                                          35200001
*   PATTERN FOR LINE 7 OF TCB                                           35220001
TCBLN5   FMTPTRN (LBL,LBLP,DTA,DTAP),4,4,13,19,(TCBID5),(TCBLN51,0)     35240001
         FMTPTRN (LBL,DTA),3,4,30,38                                    35260001
         FMTPTRN (LBL,DTA),4,4,49,54                                    35280001
         FMTPTRN (LBL,DTA),4,4,65,71                             X01980 35300001
         FMTPTRN (LBL,DTA),5,4,82,88                                    35320001
         FMTPTRN (LBL,DTA),4,4,99,105,,,LAST                            35340001
*   PATTERN FOR LINE 8 OF TCB                                           35341001
TCBLN8   FMTPTRN (LBL,LBLP,DTA,DTAP),3,4,13,19,(TCBID8),(TCBLN81,0)     35360001
         FMTPTRN (LBL,DTA),3,4,30,38                             X01980 35380001
         FMTPTRN (LBL,DTA),3,4,49,54                             X01980 35400001
         FMTPTRN (LBL,DTA),4,4,65,71                             X01980 35420001
         FMTPTRN (LBL,DTA),4,4,82,88                             X01980 35440001
         FMTPTRN (LBL,DTA),3,4,99,105,,,LAST                     X01980 35460001
*    PATTERN FOR LINE 9 OF TCB                                          35461001
TCBLN9   FMTPTRN (LBL,LBLP,DTA,DTAP),4,4,13,19,(TCBID9),(TCBLN91,0)     35480001
         FMTPTRN (LBL,DTA),5,4,30,38                             Y01980 35500001
         FMTPTRN (LBL,DTA),4,4,49,54                             Y01980 35520001
         FMTPTRN (LBL,DTA),4,4,65,71                             Y01980 35540001
         FMTPTRN (LBL,DTA),5,4,82,88                             Y01980 35541001
         FMTPTRN (LBL,DTA),5,4,99,105,,,LAST                     Y01980 35542001
*    PATTERN FOR LINE 10 OF TCB                                         35542201
TCBLN10  FMTPTRN (LBL,LBLP,DTA,DTAP),5,4,13,19,(TCBID10),(TCBLN101,0)   35543001
         FMTPTRN (LBL,DTA),7,4,30,38                             Y01980 35544001
         FMTPTRN (LBL,DTA),4,4,49,54                             Y01980 35545001
         FMTPTRN (LBL,DTA),3,4,65,71                             Y01980 35546001
         FMTPTRN (LBL,DTA),3,4,82,88,,,LAST                      Y10980 35547001
*    PATTERN FOR LINE 1 OF TCB EXTENSION 2                              35548001
TCBE2LN1 FMTPTRN (LBL,LBLP),4,,5,,(TCBE2ID1)                     X01980 35560001
         FMTPTRN (LBL,DTA,DTAP),3,4,13,19,,(TCBE2L11,0)          Y01980 35580001
         FMTPTRN (LBL,DTA),4,4,30,38,,,LAST                      Y01980 35581001
TCBID1   DC    C'TCBRBPPIEDEBTIOCMPTRNMSSPK-FLGFLGLLSJLB'               35600001
TCBID3   DC    C'FSATCBTME'                                             35620001
TCBID3A  DC    C'NTCOTC'                                                35640001
TCBID4   DC    C'LTCIQEECB'                                             35660001
TCBID5   DC    C'STABTCTUSERNDSPMDIDSJSCB'                       Y01980 35680001
TCBPID2  DC    C'RES'                                                   35700001
TCBMID2  DC    C'JST'                                                   35720001
TCBMID3  DC    C'PIB'                                                   35740001
TCBMID4  DC    C'XTCBLP/FLRES'     LABELS FOR 6-TH LINE OF MFT TCB      35760001
TCBID8   DC    C'RESRESRESEXT1BITSDAR'  LABELS FOR 7TH LINE AOS2 X01980 35780001
TCBID9   DC    C'EXT2XTENTTIRBBACKLSQAPIOTIM'  LABELS FOR 8TH LN Y01980 35800001
TCBID10  DC    C'TMSAVABR-TIDQECBFOESWA'                         Y01980 35801001
TCBE2ID1 DC    C'EXT2GTFRCMP'           LABELS FOR EXT2 1ST LINE Y01980 35820001
TCBE2AD  DS    F                        ADDRESS OF TCB EXT2      X01980 35840001
TCBVID2  DC    C'JPQ'                                                   35860001
TCBVID3  DC    C'JSTCB'                                          Y01980 35880001
TCBVID4  DC    C'TSFLGD-PQEAQE'    LABELS FOR 6-TH LINE AOS/2 TCBY01980 35900001
TCBPRTSW DC    X'00'                                                    35920001
CURMSG   DC    C'*****   CURRENT TASK   *****'                          35940001
TERMMSG  DC    C'TASK HAS TERMINATED'                                   35960001
TCBERMSG DC    C'ERROR FORMATTING TCB'                                  35980001
REG1     DC    C'RG 0-7'                                                36000001
REG2     DC    C'RG 8-15'                                               36020001
REG3     DC    C'RG 10-1'                                               36040001
REG4     DC    C'RG 2-9'                                                36060001
FTCPCH   DC    18F'0'              PATCH AREA                    X01980 36080001
         SPACE                                                          36100001
         DROP  COMBASE,R7                                               36120001
         EJECT                                                          36140001
AMDPRFRB CSECT                                                          36160001
         SPACE                                                          36180001
*********************************************************************** 36200001
*                      *** AMDPRFRB - RB PRINT ***                    * 36220001
*                                                                     * 36240001
* STATUS--OS/VS2 RELEASE 1.0                                          * 36260001
*                                                                     * 36280001
* FUNCTION--                                                          * 36300001
*    THIS ROUTINE FORMATS AND PRINTS THE RB'S IN THE RB CHAIN OFF     * 36320001
*    THE TCB                                                          * 36340001
*                                                                     * 36360001
* ENTRY POINTS--                                                      * 36380001
*    AMDPRFRB IS THE ONLY ENTRY.  CONTROL IS RECEIVED FROM AMDPRFSR.  * 36400001
*    STANDARD SUBROUTINE LINKAGE USED.                                * 36420001
*                                                                     * 36440001
* INPUTS--                                                            * 36460001
*         REGISTER 0 - TJID OF STORAGE CONTAINING TCB TO BE FORMATTED * 36480001
*         REGISTER 2 - TCB ADDRESS FOR WHICH RB'S ARE TO BE FORMATTED * 36500001
*         REGISTER 12 - ADDRESS OF COMMON AREA                        * 36520001
*                                                                     * 36600001
* OUTPUTS--                                                           * 36620001
*    WRITES FORMATTED RB CHAIN                                        * 36640001
*    WRITES MESSAGE 'INFINITE LOOP IN RB CHAIN' IF MORE THAN 50       * 36660001
*    RB'S ARE IN THE CHAIN.                                           * 36680001
*    WRITES ERROR MESSAGE 'RB FORMAT ERROR'                           * 36700001
*                                                                     * 36720001
* EXTERNAL REFERENCES--                                               * 36740001
*         BRREAD - TO OBTAIN DATA FROM THE INPUT DUMP.                * 36760001
*         BRWRITE - TO WRITE DATA TO THE 'PRINTER' DATA SET.          * 36780001
*         AMDPRTSV - FROM ADDRESSES IN COMMON, THIS CSECT IS USED     * 36800001
*                    TO SAVE, RETRIEVE, AND REMOVE RB'S FROM AN RBLIST* 36820001
*         WRDCNVT - FROM AN ADDRESS IN COMMON, TO CONVERT 4 BYTES     * 36840001
*                   TO PRINTABLE HEX.                                 * 36860001
*         ADRCNVT - FROM ADDRESS IN COMMON, TO CONVERT 3 BYTES TO     * 36880001
*                   PRINTABLE HEX.                                    * 36900001
*                                                                     * 36920001
* EXITS,NORMAL--                                                      * 36940001
*    RETURN TO CALLER THROUGH STANDARD LINKAGE UNLESS 'STOP' HAS      * 36960001
*    BEEN ENTERED BY OPERATOR IN WHICH CASE CONTROL RETURNS TO        * 36980001
*    STOP ROUTINE WITHOUT RESTORING REGISTERS.                        * 37000001
*                                                                     * 37020001
* EXITS,ERROR--                                                       * 37040001
*    NONE--PROCESSING CONTINUES AFTER AN ERROR MESSAGE IS PRINTED     * 37060001
*                                                                     * 37080001
* TABLES/WORK AREAS--                                                 * 37100001
*    AN RBLIST IS CONSTRUCTED BY A BRANCH TO AMDPRTSV.  THIS LIST     * 37120001
*    CONTAINS THE RB'S TO BE FORMATTED.  THE FORMAT IS THE SAME       * 37140001
*    AS THE TCBLIST.                                                  * 37160001
*                                                                     * 37180001
* ATTRIBUTES-- REUSABLE                                               * 37200001
*                                                                     * 37220001
* CHARACTER CODE DEPENDENCY-- NONE                                    * 37240001
*                                                                     * 37260001
* NOTES--                                                             * 37280001
*   BRREAD ERROR HANDLER:  IF A PORTION OF AN RB CANNOT BE READ       * 37300001
*   FROM THE INPUT DUMP, A MESSAGE IS PRINTED AND PROCESSING          * 37320001
*   CONTINUES WITH THE NEXT RB.                                       * 37340001
*                                                                     * 37360001
*********************************************************************** 37380001
         SPACE                                                          37400001
RBNEXT   EQU   28                                                       37420001
RBPFXS   EQU   8                   BACK DISPL TO USEABLE PREFIX  Y01980 37421001
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              37440001
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             37460001
         USING *,BASE1                                                  37480001
RBPRNBAS LA    R3,RBPRNTSV         SAVE AREA CHAINING                   37500001
         ST    R13,RBPRNTSV+4                                           37520001
         ST    R3,8(R13)                                                37540001
         LR    R13,R3                                                   37560001
         SPACE                                                          37580001
         USING COMMON,COMBASE                                           37600001
         USING OUTBUF,BUFREG                                            37620001
         SPACE                                                          37640001
         MVC   RBERRSV,ERRADDR     SAVE CURRENT ERROR ROUTINE ADDR      37660001
         LA    R15,RBERROR1        ADDR OF RB ERROR ROUTINE             37680001
         ST    R15,ERRADDR         STORE IN ERROR ADDR WORD             37700001
         MVC   RBSTPSV(4),STOPEXIT SAVE CALLER' STOP ROUTINE ADDRESS    37720001
         LA    R15,RBSTP           GET ADDRESS OF RB-PRINT STOP RTN.    37740001
         ST    R15,STOPEXIT        STORE IN COMMON CSECT                37760001
         L     BUFREG,CURBUF       LOAD BUFFER BASE                     37780001
         BAL   R9,RBPRGE           GO PURGE POSSIBLE RB ADDRS ON RBLIST 37800001
         XC    RBCNT,RBCNT         ZERO RB COUNT                        37820001
         XC    RBCNT1,RBCNT1       ZERO RB COUNT1                       37840001
         LR    R4,R2               LOAD TCB ADDR TO R4                  37860001
RBLOOP1  BRREAD  (R2),DATA,TJID=(R0)                                    37880001
         L     R2,0(PREG)          LOAD RB ADDR                         37900001
         LA    R2,0(R2)            CLEAR POSSIBLE WAIT COUNT            37920001
         LTR   R2,R2               IS IT ZERO                           37940001
         BZ    RBPRNT1             YES--ASSUME END OF CHAIN             37960001
         CR    R4,R2               COMPARE TO TCB ADDR                  37980001
         BE    RBPRNT1             EQUAL--LAST RB POINTS TO TCB         38000001
         BAL   R9,RBSAVE           SAVE RB ADDR ON RBLIST               38020001
         LA    R2,RBNEXT(R2)       LOAD ADDR OF PTR TO NEXT RB          38040001
         B     RBLOOP1             LOOP TO END OF CHAIN                 38060001
         SPACE 2                                                        38080001
*********************************************************************** 38100001
*                                                                     * 38120001
*   PRINT RBS IN THE REVERSE ORDER AS THEY EXISTED ON THE CHAIN       * 38140001
*   NOTE THAT RBERROR1IS THE BRREAD ERROR ROUTINE FOR THE ABOVE BREADS* 38160001
*   ONLY                                                              * 38180001
*                                                                     * 38200001
*********************************************************************** 38220001
         SPACE                                                          38240001
         DROP  BASE1                                             X01980 38260001
         USING RBERROR1,R15                                      X01980 38280001
RBERROR1 LA    R13,RBPRNTSV        GET ADDRESS OF RB PRINT'S SAVE AREA  38300001
         LM    R14,R12,12(R13)     RESTORE OUR REGS              X01980 38320001
         DROP  R15                                               X01980 38340001
         USING RBPRNBAS,BASE1      SHIFT BACK TO REG 11 AS BASE  X01980 38360001
RBPRNT1  LA    R15,RBERROR         ADDR OF REAL ERROR RTN        X01980 38380001
         ST    R15,ERRADDR         STORE IN ERROR ADDR WORD      X01980 38400001
         NI    SWB,XFF-FMTERR-IOERR RESET ERROR SWITCHES         X01980 38420001
         MVC   ADDR(10),ACTRBS     MOVE 'ACTIVE RBS' TO BUFFER   X01980 38440001
         BRWRITE 2                 PRINT AS HEADING                     38460001
         BAL   R9,RBGET            GET NEXT RB                          38480001
         LTR   R2,R2               AM I DONE                            38500001
         BZ    RBDONE              YES--RETURN TO FORMAT ROUTINE        38520001
RBPRNT2  LA    PREG,8(R2)                                               38540001
         BRREAD  (PREG)                                                 38560001
         MVC   RBSIZE(1),1(PREG)   SAVE RB SIZE                         38580001
         MVZ   RBTYPE(1),2(PREG)   SAVE RB TYPE                         38600001
         ST    R2,RBWORK           STORE RB ADDR TO BE CONVERTED        38620001
         LA    PREG,RBWORK         LOAD ADDR OF RB ADDR FOR CONVERT     38640001
*                                  ROUTINE                              38660001
         LA    R4,ADDR+5           LOAD ADDR OF WHERE TO PUT CONVERTED  38680001
*                                  ADDRESS                              38700001
         L     R15,AADRCNVT        LOAD ADDR OF CONVERT ROUTINE         38720001
         BALR  RETREG,R15          CONVERT RB ADDRESS                   38740001
         TM    RBTYPE,X'C0'        TEST FOR TYPE OF RB                  38800001
         BO    RBSVRB              BR IF SVRB                           38820001
         BM    RBIRB               RB IF IRB OR SIRB                    38840001
         LA    R7,PRBIDX           LOAD ADDR OF PRB INDEX               38860001
         MVC   ADDR(4),PRB         MOVE TYPE TO OUTPUT LINE      Y01980 38861001
         B     RBPRNT4             CONTINUE                             38880001
RBSVRB   TM    RBTYPE,X'10'        TEST FOR TRANSIENT SVRB              38900001
         BO    RBTSVRB             BR IF TRANSIENT                      38920001
         LA    R7,RSVRBIDX         LOAD ADDR OF RES SVRB INDEX          38940001
         MVC   ADDR(4),SVRB        MOVE TYPE TO OUTPUT LINE      Y01980 38941001
         B     RBPRNT4             CONTINUE                             38960001
RBTSVRB  LA    R7,TSVRBIDX         LOAD ADDR OF TRANSIENT SVRB INDEX    38980001
         MVC   ADDR(4),SVRB        MOVE TYPE TO OUTPUT LINE      Y01980 38981001
         B     RBPRNT4             CONTINUE                             39000001
RBIRB    TM    RBTYPE,X'80'        TEST FOR SIRB                        39020001
         BO    RBSIRB              BR IF SIRB                           39040001
         TM    RBTYPE,X'60'        TEST FOR TIRB                 Y10980 39041001
         BO    RBTIRB              BR IF TIRB                    Y01980 39042001
         LA    R7,IRBIDX           LOAD ADDR OF IRB INDEX               39060001
         MVC   ADDR(4),IRB         MOVE TYPE TO OUTPUT LINE      Y01980 39061001
         B     RBPRNT4             CONTINUE                             39080001
RBSIRB   LA    R7,SIRBIDX          LOAD ADDR OF SIRB INDEX              39100001
         MVC   ADDR(4),SIRB        MOVE TYPE TO OUTPUT LINE      Y01980 39100201
         B     RBPRNT4             CONTINUE                      Y01980 39101001
RBTIRB   LA    R7,TIRBIDX          LOAD ADDR OF TIRB INDEX       Y01980 39102001
         MVC   ADDR(4),TIRB        MOVE TYPE TO OUTPUT LINE      Y01980 39103001
RBPRNT4  LR    PREG,R2             ADDR OF RB                    Y01980 39104001
         LA    R5,RBPFXS           DISPL TO BEGIN FIELD OF PREF  Y01980 39105001
         SR    PREG,R5             POINT TO BEGIN FIELD OF PREF  Y01980 39106001
         ST    PREG,RBPFXD01       STORE INTO PATTERN            Y01980 39107001
         LA    PREG,RBPFXLN1       ADDR OF PATTERN               Y01980 39108001
         L     R15,AFMTLINE        ADDR OF LINE FORMAT RTN       Y01980 39109001
         BALR  RETREG,R15          FORMAT RB PREFIX LINE         Y01980 39110001
         BRWRITE 1                 PRINT THE LINE                Y01980 39111001
         IC    R3,0(R7)            LOAD ID INDEX FOR FIRST ID    Y01980 39120001
         LA    R5,RBIDS(R3)        ADDR OF CORRECT RB ID                39140001
         MVC   ADDR+13(6),0(R5)    MOVE 'RESP', 'NM', 'FL-CDE', OR      39160001
*                                  'TAB-LN' TO OUTPUT BUFFER            39180001
         BRREAD  (R2)              RB ADDR IN REG 2                     39200001
         LA    R4,ADDR+20          LOAD ADDR OF WHERE IT'S TO GO        39220001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       39240001
         BALR  RETREG,R15          CONVERT THE FIELD                    39260001
         MVC   ADDR+31(4),APSW     MOVE 'APSW' TO OUTPUT BUFFER         39280001
         LA    PREG,4(R2)          ADDR OF APSW IN RB                   39300001
         BRREAD  (PREG)                                                 39320001
         LA    R4,ADDR+38          ADDR OF WHERE TO PUT APSW            39340001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       39360001
         BALR  RETREG,R15          CONVERT APSW                         39380001
         MVC   ADDR+49(7),WC       MOVE 'SZ-STAB' TO BUFFER      Y01980 39400001
         LA    PREG,8(R2)          ADDR OF THE FIELD IN RB              39420001
         BRREAD  (PREG)                                                 39440001
         LA    R4,ADDR+60          ADDR OF WHERE TO PUT IT              39460001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       39480001
         BALR  RETREG,R15          CONVERT SZ-STAB FIELD OF RB          39500001
         IC    R3,1(R7)            LOAD ID INDEX                        39520001
         LA    R5,RBIDS(R3)        ADDR OF CORRECT ID                   39540001
         MVC   ADDR+71(6),0(R5)    MOVE 'FL-CDE','LPDE','RESV',OR 'EPA' 39560001
*                                  TO OUTPUT BUFFER                     39580001
         LA    PREG,12(R2)         ADDR OF FIELD IN RB                  39600001
         BRREAD  (PREG)                                                 39620001
         LA    R4,ADDR+78          ADDR OF LOCATION IN BUFFER FOR RB    39640001
*                                  FIELD                                39660001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       39680001
         BALR  RETREG,R15          CONVERT THIS FIELD OF RB             39700001
         MVC   ADDR+89(3),PSWNM    MOVE 'PSW' TO BUFFER                 39720001
         LA    PREG,16(R2)         ADDR OF PSW IN RB                    39740001
         BRREAD  (PREG)                                                 39760001
         LA    R4,ADDR+93          ADDR FOR LEFT HALF OF RESUME PSW     39780001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       39800001
         BALR  RETREG,R15          CONVERT LEFT HALF OF PSW             39820001
         LA    PREG,20(R2)         ADDR OF RIGHT HALF OF PSW            39840001
         BRREAD  (PREG)                                                 39860001
         LA    R4,ADDR+102         ADDR FOR RIGHT HALF OF PSW           39880001
         L     R15,AWRDCNVT                                             39900001
         BALR  RETREG,R15          CONVERT RIGHT HALF OF PSW            39920001
         BRWRITE 1                 WRITE FIRST LINE OF RB               39940001
         MVC   ADDR+13(1),QTTR     MOVE 'Q' TO BUFFER            Y01980 39960001
         LA    PREG,24(R2)         ADDR OF Q FIELD IN RB                39980001
         BRREAD  (PREG)                                                 40000001
         LA    R4,ADDR+20          ADDR OF WHERE TO PUT Q               40020001
         L     R15,AWRDCNVT                                             40040001
         BALR  RETREG,R15          CONVERT Q/TTR FIELD OF RB            40060001
         MVC   ADDR+31(6),WTLNK    MOVE 'WT-LNK' TO BUFFER              40080001
         LA    PREG,28(R2)         ADDR OF WT-LINK FIELD IN RB          40100001
         BRREAD  (PREG)                                                 40120001
         LA    R4,ADDR+38          ADDR OF WHERE TO PUT WT-LINK FIELD   40140001
         L     R15,AWRDCNVT                                             40160001
         BALR  RETREG,R15          CONVERT WT-LINK FIELD OF RB          40180001
         TM    RBTYPE,X'C0'        TEST RB TYPE                         40200001
         BNM   PRBPRT              BR IF PRB OR SVRB             Y01980 40220001
         TM    RBTYPE,X'40'        TEST FOR IRB AND TIRB                40260001
         BO    RBPRNT3             BR IF IRB OR TIRB                    40280001
         BRREAD  (R2)                                                   40300001
         MVC   ADDR+49(2),RBNM     MOVE 'NM' TO BUFFER                  40320001
         MVC   ADDR+52(8),0(PREG)  MOVE ROUTINE NAME TO BUFFER          40340001
RBPRNT3  BRWRITE 1                 WRITE LINE                    Y01980 40341001
         LA    R3,32               INDEX TO RB REGS FOR TCBPTRG  Y01980 40360001
         L     R15,ATCBPTRG        GET ADDRESS OF REG PRINT ROUTINE     40380001
         BALR  RETREG,R15          LINK TO IT                           40400001
         SR    R3,R3               CLEAR IC REG                         40420001
         IC    R3,RBSIZE           LOAD RB SIZE IN DOUBLE WORDS         40440001
         SLL   R3,3                SHIFT TO MAKE IT IN BYTES            40460001
         LA    R4,96               SIZE OF RB WITHOUT EXTENDED SAVEAREA 40480001
         SR    R3,R4               SUBTRACT FROM RB SIZE                40500001
         BNP   RBPRTDN             BR IF NO EXTENDED SAVEAREA           40520001
         BAL   R9,EXTSAPT          PRINT EXTENDED SAVEAREA              40540001
         B     RBPRTDN             GET NEXT RB                          40560001
         SPACE 2                                                        40580001
*********************************************************************** 41020001
*                                                                     * 41040001
*   HERE TO PRINT NAME, ENTRY POINT, STARTING ADDR, AND LENGTH OF     * 41060001
*   MODULES FOR PRBS AND SVRBS                                        * 41080001
*                                                                     * 41100001
*********************************************************************** 41120001
         SPACE                                                          41140001
PRBPRT   LA    PREG,12(R2)         ADDR OF CDE PTR                      41160001
         BRREAD  (PREG)                                                 41180001
         L     R7,0(PREG)          CDE ADDR TO R7                       41200001
         LA    R7,0(R7)            CLEAR HIGH ORDER BYTE                41220001
         LTR   R7,R7               IS THERE A CDE                       41240001
         BZ    RBPRT3              BR IF THERE ISN'T                    41260001
         BRREAD  (R7)              CDE ADDR IN REG 7                    41280001
         MVC   RBCDEATR(1),0(PREG) SAVE CDE ATTRIBUTES                  41300001
         LA    PREG,8(R7)          ADDR OF NAME IN CDE                  41320001
         BRREAD  (PREG)                                                 41340001
         MVC   ADDR+49(2),RBNM     MOVE 'NM' TO BUFFER                  41360001
         MVC   ADDR+52(8),0(PREG)  MOVE PROGRAM NAME TO BUFFER          41380001
         LA    PREG,16(R7)         ADDR OF ENTRY POINT                  41400001
         BRREAD  (PREG)                                                 41420001
         MVC   ADDR+63(3),RBEPA    MOVE 'EPA' TO BUFFER                 41440001
         LA    R4,ADDR+67          ADDR OF WHERE TO PUT EPA             41460001
         L     R15,AADRCNVT        ADDR OF 3 BYTE CONVERT ROUTINE       41480001
         BALR  RETREG,R15          CONVERT ENTRY POINT ADDRESS          41500001
         TM    RBTYPE,X'10'        TRANSIENT SVRB                Y01980 41501001
         BO    RBPRNT3             YES--SKIP CDE CODE            Y01980 41502001
         LA    PREG,20(R7)         LOAD ADDR OF MAJOR CDE OR EXTENT     41520001
*                                  LIST POINTER                         41540001
         BRREAD  (PREG)                                                 41560001
         L     R8,0(PREG)          LOAD TO R8                           41580001
         MVC   RBCDEAT2(1),0(PREG) SAVE ATTR2 BYTE               Y01980 41581001
         TM    RBCDEATR,MINCDE     IS CDE A MINOR                       41600001
         BO    RBPRT1              YES--GET MAJOR                       41620001
RBPRT2   MVC   ADDR+76(3),RBSTA    MOVE 'STA' TO BUFFER                 41640001
         LA    PREG,12(R8)         ADDR OF STARTING ADDR                41660001
         BRREAD  (PREG)                                                 41680001
         LA    R4,ADDR+80          ADDR OF WHERE TO PUT STA             41700001
         L     R15,AADRCNVT        ADDR OF 3 BYTE CONVERT ROUTINE       41720001
         BALR  RETREG,R15          CONVERT STARTING ADDR                41740001
         MVC   ADDR+89(2),RBLN     MOVE 'LN' TO BUFFER                  41760001
         LA    PREG,8(R8)          ADDR OF SIZE                         41780001
         BRREAD  (PREG)                                                 41800001
         LA    R4,ADDR+92          ADDR OF WHERE TO PUT SIZE            41820001
         L     R15,AADRCNVT                                             41840001
         BALR  RETREG,R15          CONVERT SIZE                         41860001
         MVC   ADDR+101(4),RBATTR  MOVE 'ATR1' TO BUFFER                41880001
         HEXCNVT ADDR+106,RBCDEATR,1 CONVERT ATR1 OF CDE                41900001
         MVC   ADDR+111(4),RBATTR2 MOVE 'ATR2' TO BUFFER         Y01980 41901001
         HEXCNVT ADDR+116,RBCDEAT2,1 CONVERT ATR2 BYTE           Y01980 41902001
RBPRT3   TM    RBTYPE,X'D0'        TEST FOR SVRB                 Y01980 41920001
         BNZ   RBPRNT3             BR TO PRINT REGS AND EXTENDED        41940001
*                                  SAVEAREA IF ANY                      41960001
         BRWRITE 1                 PRINT LAST LINE OF PRB               41980001
         B     RBPRTDN             GET NEXT RB                          42000001
         SPACE 2                                                        42020001
*********************************************************************** 42040001
*                                                                     * 42060001
*   CDE FOR RB IS A MINOR...GET MAJOR CDE FOR EXTENT LIST PTR         * 42080001
*                                                                     * 42100001
*********************************************************************** 42120001
         SPACE                                                          42140001
RBPRT1   LA    PREG,20(R8)         ADDR OF XL PTR IN MAJOR CDE          42160001
         BRREAD  (PREG)                                                 42180001
         L     R8,0(PREG)          LOAD EXTENT LIST PTR                 42200001
         B     RBPRT2              CONTINUE                             42220001
         EJECT                                                          42240001
*********************************************************************** 43760001
*                                                                     * 43780001
*   DONE WITH RB CHAIN...RETURN TO FORMAT ROUTINE                     * 43800001
*                                                                     * 43820001
*********************************************************************** 43840001
         SPACE                                                          43860001
RBDONE   BRWRITE 2                 SPACE 2 LINES                        43880001
         MVC   ERRADDR,RBERRSV     RESTORE ERROR ROUTINE ADDR TO IT'S   43900001
*                                  PREVIOUS VALUE                       43920001
         MVC   STOPEXIT(4),RBSTPSV RESTORE CALLER'S STOP ROUTINE        43940001
         L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          43960001
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS           43980001
         BR    RETREG              RETURN TO FORMAT ROUTINE             44000001
         EJECT                                                          44020001
*********************************************************************** 44040001
*                                                                     * 44060001
*   DONE PRINTING RB...LOOK FOR ANOTHER                               * 44080001
*                                                                     * 44100001
*********************************************************************** 44120001
         SPACE                                                          44140001
RBPRTDN  BAL   R9,RBGET            GET NEXT RB ADDR                     44160001
         LTR   R2,R2               WAS THERE ONE                        44180001
         BZ    RBDONE              NO--ALL DONE                         44200001
         BRWRITE 1                 YES--SPACE A LINE                    44220001
         B     RBPRNT2             CONTINUE WITH THIS RB                44240001
         SPACE 2                                                        44260001
*********************************************************************** 44280001
*                                                                     * 44300001
*   MORE THAN 50 RBS ON RB CHAIN...PRINT INFINITE LOOP MESSAGE AND    * 44320001
*   PRINT THE FIRST 50                                                * 44340001
*                                                                     * 44360001
*********************************************************************** 44380001
         SPACE                                                          44400001
TOOMANY  MVC   ADDR(25),INFMSG     MOVE INFINITE LOOP MSG TO BUFFER     44420001
         BRWRITE 2                 PRINT AND SPACE 2 LINES              44440001
         B     RBPRNT1             PRINT THE 50 WE HAVE                 44460001
         EJECT                                                          44480001
*********************************************************************** 44500001
*                                                                     * 44520001
*   PRINT RB EXTENDED SAVE AREA                                       * 44540001
*                                                                     * 44560001
*********************************************************************** 44580001
         SPACE                                                          44600001
EXTSAPT  MVC   ADDR+13(5),EXTSA    MOVE 'EXTSA' TO BUFFER               44620001
         LA    R8,96               SET INDEX                            44640001
EXTLOOP2 LA    R4,ADDR+22          INIT WHERE TO PUT IT ADDR            44660001
         LA    R7,8                LOAD LOOP CNT (NO OF WRDS/LINE)      44680001
EXTLOOP1 LA    PREG,0(R8,R2)       ADDR OF EXTENDED SAVEAREA WORD       44700001
         BRREAD  (PREG)                                                 44720001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       44740001
         BALR  RETREG,R15          CONVERT WORD OF EXTENDED SAVEAREA    44760001
         SH    R3,FOUR             DECR BYTE CNT                        44780001
         BNP   EXTDONE             BR OUT OF LOOP IF DONE               44800001
         AH    R4,ELEVEN           INCR WHERE-TO-PUT-IT ADDR            44820001
         AH    R8,FOUR             INCR INDEX                           44840001
         BCT   R7,EXTLOOP1         LOOP TILL END OF LINE                44860001
         BRWRITE 1                 PRINT THIS LINE                      44880001
         B     EXTLOOP2            CONTINUE WITH NEW LINE               44900001
         SPACE                                                          44920001
EXTDONE  BRWRITE 1                 PRINT LAST LINE                      44940001
         BR    R9                  RETURN TO CALLER                     44960001
         SPACE 3                                                        44980001
*********************************************************************** 45000001
*                                                                     * 45020001
*   USE TCBSAVE ROUTINE TO SAVE RB ADDRESSES                          * 45040001
*                                                                     * 45060001
*********************************************************************** 45080001
         SPACE                                                          45100001
RBSAVE   LH    R3,RBCNT1           LOAD COUNT OF TOTAL NUMB OF RBS      45120001
         AH    R3,ONEA             ADD ONE TO COUNT                     45140001
         CH    R3,FIFTY            COMPARE RB COUNT TO 50 TO TEST FOR   45160001
*                                  RB CHAIN LOOP                        45180001
         BH    TOOMANY             IF GT 50 RBS ON CHAIN ASSUME         45200001
*                                  INFINITE LOOP IN CHAIN               45220001
         STH   R3,RBCNT1           STORE BACK INCR COUNT                45240001
         MVC   RBTLIST,TCBLIST     SAVE TCBLIST PTR                     45260001
         MVC   TCBLIST,RBLIST      MOVE IN RBLIST PTR                   45280001
         L     R15,ATCBSAVE        LOAD ADDR OF TCB SAVE ROUTINE        45300001
         BALR  RETREG,R15          LINK TO TCBSAVE ROUTINE TO SAVE RB   45320001
*                                  ADDRESS ON RBLIST                    45340001
         LTR   R15,R15             TEST RETURN CODE                     45360001
         BNZ   RBSAVE1             RB ADDR IS A DUPLICATE OF ONE        45380001
*                                  ALREADY ON THE RBLIST...DON'T INCR   45400001
*                                  RB COUNT                             45420001
         LH    R3,RBCNT            LOAD RB COUNT                        45440001
         AH    R3,ONEA             INCR COUNT                           45460001
         STH   R3,RBCNT            PUT IT PACK                          45480001
RBSAVE1  MVC   RBLIST,TCBLIST      SAVE RBLIST PTR                      45500001
         MVC   TCBLIST,RBTLIST     RESTORE TCBLIST PTR                  45520001
         BR    R9                  RETURN TO CALLER                     45540001
         SPACE 2                                                        45560001
*********************************************************************** 45580001
*                                                                     * 45600001
*   USE TCBRTRV AND TCBREMV ROUTINES TO GET TOP RB ADDR ON RBLIST AND * 45620001
*   THEN REMOVE IT FROM THE LIST                                      * 45640001
*                                                                     * 45660001
*********************************************************************** 45680001
         SPACE                                                          45700001
RBGET    MVC   RBTLIST,TCBLIST     SAVE TCBLIST PTR                     45720001
         MVC   TCBLIST,RBLIST      MOVE IN RBLIST PTR                   45740001
         LA    R2,1                LOAD CNT FOR FIRST ON LIST           45760001
         L     R15,ATCBRTRV        ADDR OF TCB RETRIEVE ROUTINE         45780001
         BALR  RETREG,R15          LINK TO GET FIRST RB ADDRESS         45800001
         LTR   R2,R2               WAS THERE ANY                        45820001
         BZ    RBGET1              BR IF NONE                           45840001
         L     R15,ATCBREMV        ADDRESS OF REMOVE ROUTINE            45860001
         BALR  RETREG,R15          REMOVE THIS RB ADDRESS FROM RBLIST   45880001
         LH    R3,RBCNT            LOAD RB COUNT                        45900001
         SH    R3,ONEA             DECR BY ONE                          45920001
         STH   R3,RBCNT            STORE BACK REDUCED RB COUNT          45940001
RBGET1   MVC   RBLIST,TCBLIST      SAVE RBLIST PTR                      45960001
         MVC   TCBLIST,RBTLIST     RESTORE TCBLIST PTR                  45980001
         BR    R9                  RETURN TO CALLER                     46000001
         SPACE 2                                                        46020001
*********************************************************************** 46040001
*                                                                     * 46060001
*   PURGE THE RB LIST IN THE EVENT THE OPERATOR STOPPED THE DUMP      * 46080001
*                                                                     * 46100001
*********************************************************************** 46120001
         SPACE                                                          46140001
         USING *,R15                                                    46160001
RBSTP    LA    R13,RBPRNTSV        POINT TO SAVE AREA                   46180001
         LM    R14,R12,12(R13)     RESTORE REGS                         46200001
         USING RBPRNBAS,BASE1      SHIFT BACK TO REG 11 AS BASE         46220001
         DROP  R15                                                      46240001
         LA    R9,RBSTPOUT         SET RETURN ADDRESS                   46260001
RBPRGE   LR    R4,R2               SAVE R2                              46280001
         MVC   RBTLIST,TCBLIST     SAVE TCBLIST PTR                     46300001
         MVC   TCBLIST,RBLIST      MOVE IN RBLIST PTR                   46320001
         SR    R2,R2               ZERO R2 FOR COMPL REMOVAL            46340001
         L     R15,ATCBREMV        ADDR OF TCB REMOVE ROUTINE           46360001
         BALR  RETREG,R15          LINK TO IT                           46380001
         MVC   RBLIST,TCBLIST      MOVE BACK NOW ZEROED PTR             46400001
         MVC   TCBLIST,RBTLIST     RESTORE TCBLIST PTR                  46420001
         LR    R2,R4               RESTORE R2                           46440001
         BR    R9                  RETURN TO CALLER                     46460001
RBSTPOUT MVC   ERRADDR(4),RBERRSV  RESTORE ERROR HANDLER'S ADDR         46480001
         L     R15,RBSTPSV         GET CALLER'S STOP ADDRESS            46500001
         ST    R15,STOPEXIT        STORE BACK IN COMMON CSECT           46520001
         BR    R15                 BRANCH TO IT                         46540001
         EJECT                                                          46560001
*********************************************************************** 46580001
*                                                                     * 46600001
*   FORMAT PRINT LINE FOR RB AND PRINT THE LINE                       * 46620001
*                                                                     * 46640001
*********************************************************************** 46660001
         SPACE                                                          46680001
RBFMPR   L     R15,AFMTLINE        LOAD ADDR OF LINE FORMAT ROUT X01980 46700001
         BALR  RETREG,R15          FORMAT THE RB LINE            X01980 46720001
         MVC   ADDR(4),RBNAME      SET TYPE OF RB IN LINE        X01980 46740001
         BRWRITE 1                 PRINT THE LINE                X01980 46760001
         BR    R9                  RETURN TO CALLER              X01980 46780001
*********************************************************************** 46800001
*                                                                     * 46820001
*   ERROR IN RB FORMAT...WRITE ERROR MESSAGE AND CONTINUE WITH        * 46840001
*   NEXT RB.                                                          * 46860001
*                                                                     * 46880001
*********************************************************************** 46900001
         SPACE                                                          46920001
         DROP  BASE1                                                    46940001
         USING RBERROR,R15                                              46960001
RBERROR  LA    R13,RBPRNTSV        GET ADDRESS OF RB PRINT'S SAVE AREA  46980001
         LM    R14,R12,12(R13)     RESTORE OUR REGS                     47000001
         DROP  R15                                                      47020001
         USING RBPRNBAS,BASE1      SHIFT BACK TO REG 11 AS BASE         47040001
         L     BUFREG,CURBUF       RELOAD BUFFER ADDR                   47060001
         BRWRITE 1                 SPACE A LINE                         47080001
         MVC   ADDR(15),RBERRMSG   MOVE ERROR MSG TO BUFFER             47100001
         BRWRITE 1                 PRINT ERROR MSG                      47120001
         NI    SWB,XFF-FMTERR-IOERR RESET ERROR SWITCHES                47140001
         B     RBPRTDN             CONTINUE                             47160001
         EJECT                                                          47180001
*********************************************************************** 47200001
*                                                                     * 47220001
*   SAVEAREA AND CONSTANTS FOR RBPRNT ROUTINE                         * 47240001
*                                                                     * 47260001
*********************************************************************** 47280001
         SPACE                                                          47300001
RBPRNTSV DC    18F'0'              RB PRINT'S SAVE AREA                 47680001
ATCBPTRG DC    A(TCBPTRG)          ADDRESS OF PRINT REG ROUTINE IN      47700001
*                                  TCB FORMATTING ROUTINE               47720001
RBERRSV  DC    F'0'                SAVE AREA FOR PREVIOUS ERROR ROUTINE 47740001
*                                  ADDRESS                              47760001
RBSTPSV  DC    F'0'                SAVE AREA FOR STOP ROUTINE ADDR      47780001
RBWORK   DC    F'0'                                                     47800001
RBTLIST  DC    F'0'                                                     47820001
RBLIST   DC    F'0'                                                     47840001
RBCNT    DC    H'0'                COUNT OF RB ADDRESSES ON RBLIST      47860001
RBCNT1   DC    H'0'                TOTAL COUNT OF RBS FOR LOOP CHECK    47880001
RBSIZE   DC    X'00'                                                    47900001
RBTYPE   DC    X'00'                                                    47920001
RBCDEATR DC    X'00'                                                    47940001
RBCDEAT2 DC    X'00'               CDE ATR2 SAVE AREA            Y01980 47941001
PRBIDX   DC    X'0018'                                                  47960001
RSVRBIDX DC    X'0018'                                                  47980001
TSVRBIDX DC    X'061E'                                                  48000001
IRBIDX   DC    X'0C24'                                                  48020001
TIRBIDX  DC    X'0000'                                           Y01980 48021001
SIRBIDX  DC    X'1224'                                                  48040001
RBIDS    DC    CL6'RESV'                                                48060001
         DC    CL6'RESV'                                         Y01980 48080001
         DC    CL6'FL-PSA'                                              48100001
         DC    CL6'NM'                                                  48120001
         DC    CL6'FL-CDE'                                              48140001
         DC    CL6'LPDE'                                         Y01980 48160001
         DC    CL6'EPA'                                                 48180001
ACTRBS   DC    C'ACTIVE RBS'                                            48200001
RBERRMSG DC    C'RB FORMAT ERROR'                                       48220001
INFMSG   DC    C'INFINITE LOOP IN RB CHAIN'                             48240001
APSW     DC    C'APSW'                                                  48260001
WC       DC    C'SZ-STAB'                                        Y01980 48280001
PSWNM    DC    C'PSW'                                                   48300001
QTTR     DC    C'Q'                                              Y01980 48320001
WTLNK    DC    C'WT-LNK'                                                48340001
EXTSA    DC    C'EXTSA'                                                 48360001
RBNM     DC    C'NM'                                                    48380001
RBEPA    DC    C'EPA'                                                   48400001
RBSTA    DC    C'STA'                                                   48420001
RBLN     DC    C'LN'                                                    48440001
LRBNM    DC    CL4'LRB'                                                 48460001
LPRBNM   DC    CL4'LPRB'                                                48480001
T2SVCNM  DC    C'SVC-T2'                                                48500001
SZSTNM   DC    CL8'SZ/STAB'                                             48520001
USENM    DC    C'USE/EP'                                                48540001
RBATTR   DC    C'ATR1'                                                  48560001
RBATTR2  DC    C'ATR2'                                           Y01980 48561001
RBPFXLN1 FMTPTRN (LBL,LBLP,DTA,DTAP),4,4,13,20,(RBPFXID1),(RBPFXD01,0)  48562001
         FMTPTRN (LBL,DTA),7,4,31,40,,,LAST  RB PREFIX PATTERN   Y01980 48563001
RBPFXID1 DC    C'FLG1WC-L-IC'                                    Y01980 48564001
RBNAME   DS    XL4                 TYPE OF RB BEING FORMATTED    X01980 49280001
PRB      DC    C'PRB '             NAME FOR PRB                  X01980 49300001
LPRB     DC    C'LPRB'             NAME FOR LPRB                 X01980 49320001
IRB      DC    C'IRB '             NAME FOR IRB                  X01980 49340001
SIRB     DC    C'SIRB'             NAME FOR SIRB                 X01980 49360001
SVRB     DC    C'SVRB'             NAME FOR SVRB                 X01980 49380001
TIRB     DC    C'TIRB'             NAME FOR TIRB                 X01980 49400001
XRB      DC    C'XRB '             NAME FOR UNKNOWN RB           X01980 49420001
FRBPCH   DC    30F'0'              PATCH AREA                    X01980 49440001
         DROP  BASE1,COMBASE                                            49460001
         EJECT                                                          49480001
AMDPRFMS CSECT                                                          49500001
         SPACE                                                          49520001
*********************************************************************** 49540001
*                 *** AMDPRFMS - MSS PRINT ***                        * 49560001
*                                                                     * 49580001
* STATUS--OS/VS2 RELEASE 1.0                                          * 49600001
*                                                                     * 49620001
* FUNCTION--                                                          * 49640001
*    THIS ROUTINE PRINTS MSS INFORMATION FOR THE TCB BEING FORMATTED. * 49660001
*                                                                     * 49700001
* ENTRY POINTS--                                                      * 49720001
*    AMDPRFMS IS THE ONLY ENTRY.  CONTROL IS RECEIVED FROM AMDPRFSR.  * 49740001
*    STANDARD SUBROUTINE LINKAGE USED.                                * 49760001
*                                                                     * 49780001
* INPUTS--                                                            * 49800001
*         REGISTER 0 - TJID OF STORAGE CONTAINING TCB TO BE FORMATTED * 49820001
*         REGISTER 2 - TCB ADDRESS FOR WHICH MSS INFO IS TO BE        * 49840001
*                      FORMATTED.                                     * 49860001
*         REGISTER 12 - ADDRESS OF COMMON AREA                        * 49880001
*                                                                     * 49960001
* OUTPUTS--                                                           * 49980001
*    WRITES DUMMY PQE FOLLOWED BY THE PQE CHAIN.                      * 50000001
*    WRITES ERROR MESSAGE 'FORMAT ERROR IN MAIN STORAGE BLOCKS',      * 50020001
*    AND 'INFINITE LOOP IN PQES'.                                     * 50040001
*                                                                     * 50041001
* EXTERNAL REFERENCES--                                               * 50060001
*         BRREAD - TO OBTAIN DATA FROM THE INPUT DUMP.                * 50080001
*         BRWRITE - TO WRITE DATA TO THE 'PRINTER' DATA SET.          * 50100001
*         AMDPRGFR - FROM AN ADDRESS IN COMMON, TO FORMAT A LINE      * 50120001
*                    DESCRIBED BY THE FMTPTRN MACRO INSTRUCTION.      * 50140001
*                                                                     * 50160001
* EXITS,NORMAL--                                                      * 50180001
*    RETURN TO CALLER THROUGH STANDARD LINKAGE.                       * 50200001
*                                                                     * 50220001
* EXITS,ERROR--                                                       * 50240001
*    SAME AS NORMAL EXIT                                              * 50260001
*                                                                     * 50280001
* TABLES/WORK AREAS--                                                 * 50300001
*    FMTPTRN MACRO IS USED TO GENERATE A PATTERN FOR THE FORMATTED    * 50320001
*    CONTROL BLOCKS.                                                  * 50340001
*                                                                     * 50360001
* ATTRIBUTES-- REUSABLE                                               * 50380001
*                                                                     * 50400001
* CHARACTER CODE DEPENDENCY-- NONE                                    * 50420001
*                                                                     * 50440001
* NOTES--                                                             * 50460001
*   BRREAD ERROR HANDLER:  IF THE PQE POINTER OR PQE'S CANNOT BE      * 50480001
*   READ A MESSAGE IS PRINTED AND CONTROL RETURNS TO AMDPRFSR.        * 50500001
*                                                                     * 50520001
*********************************************************************** 50540001
         SPACE                                                          50560001
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTER               50580001
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             50600001
         USING *,BASE1                                                  50620001
MSSBASE  LA    R3,MSSSAVE          SAVE AREA CHAINING                   50640001
         ST    R13,MSSSAVE+4                                            50660001
         ST    R3,8(R13)                                                50680001
         LR    R13,R3                                                   50700001
         SPACE                                                          50720001
         USING COMMON,COMBASE                                           50740001
         SPACE                                                          50760001
         MVC   MSSPRERS,ERRADDR    SAVE PREVIOUS ROUTINES ERROR ROUT    50780001
*                                  ADDR                                 50800001
         LA    R15,MSSERR          LOAD MSSPRNT'S ERROR ROUT ADDR       50820001
         ST    R15,ERRADDR         ENABLE THE ERROR ROUTINE             50840001
         SPACE 2                                                        50900001
*********************************************************************** 50920001
*                                                                     * 50940001
*   PRINT PQES FOR AOS/2                                              * 50960001
*                                                                     * 51000001
*********************************************************************** 51020001
         SPACE                                                          51040001
         XC    PQECNT,PQECNT       ZERO PQE COUNT                       51060001
         LA    PREG,TCBPQE+1(R2)   LOAD ADDR OF PTR TO DUMMY PQE Y01980 51080001
         ST    PREG,MSSPTN1A       STORE DUMMY PQE PTR INTO PATTERN     51100001
         BCTR  PREG,0              MAKE A WORD BDY               Y01980 51101001
         BRREAD  (PREG),DATA,TJID=(R0)                                  51120001
         L     R2,0(PREG)          LOAD PTR TO DUMMY PQE                51140001
         LA    R2,0(R2)            CLEAR POSSIBLE HI BYTE               51160001
         LTR   R2,R2               IS THERE A DUMMY PQE                 51180001
         BZ    MSSPRDNA            NO--RETURN TO CALLER                 51200001
         BAL   R9,MSSTITLE         YES--PRINT MSS TITLE                 51220001
         LA    PREG,8(R2)          ADDR OF PQE POINTERS IN DUMMY PQE    51240001
         ST    PREG,MSSPTN1B       STORE INTO PATTERN                   51260001
         BRREAD  (PREG)                                                 51280001
         L     R2,0(PREG)          LOAD ADDR OF FIRST PQE TO R2         51300001
         LA    PREG,MSSPTN1        LOAD ADDR OF DUMMY PQE PATTERN       51320001
         BAL   R9,MSSFMPR2         GO FORMAT LINE, AND PRINT AND SPACE  51340001
*                                  TWO LINES                            51360001
MSSPRLP1 LA    R2,0(R2)            CLEAR POSSIBLE HI BYTE FROM PQE ADDR 51380001
         LTR   R2,R2               TEST FOR ZERO PQE ADDR               51400001
         BZ    MSSPRDN             ZERO--ALL DONE                       51420001
         ST    R2,MSSPTN2A         STORE PQE ADDR INTO PATTERN          51440001
         LA    PREG,MSSPTN2        LOAD ADDR OF PQE PATTERN             51460001
         BAL   R9,MSSFMPR1         GO FORMAT LINE, AND PRINT AND SPACE  51480001
*                                  ONE LINE                             51500001
         LA    PREG,MSSPTN3        LOAD ADDR OF PATTERN FOR SECOND LINE 51520001
*                                  OF PQE                               51540001
         BAL   R9,MSSFMPR2         GO FMT LN, PRT AND SPC 2 LNS         51560001
         LA    PREG,8(R2)          LOAD ADDR OF PTR TO NEXT PQE         51580001
         LH    R3,PQECNT           LOAD PQE COUNT                       51600001
         AH    R3,ONEA             ADD 1 TO IT                          51620001
         CH    R3,FIFTY            COMPARE TO 50                        51640001
         BH    MSSLOOP             GT 50--CONSIDER IT A LOOP IN PQES    51660001
         STH   R3,PQECNT           STORE BACK PQECNT                    51680001
         BRREAD  (PREG)                                                 51700001
         L     R2,0(PREG)          LOAD PTR TO NEXT PQE                 51720001
         B     MSSPRLP1            LOOP FOR ALL PQES                    51740001
         SPACE 2                                                        51760001
*********************************************************************** 52560001
*                                                                     * 52580001
*   PRINT MSS TITLE                                                   * 52600001
*                                                                     * 52620001
*********************************************************************** 52640001
         SPACE                                                          52660001
MSSTITLE L     BUFREG,CURBUF       LOAD OUTPUT BUFFER ADDR              52680001
         USING OUTBUF,BUFREG                                            52700001
         MVC   ADDR(L'MSSVTTL),MSSVTTL MOVE AOS/2 MSS TITLE TO BUF      52760001
MSSTTL2  BRWRITE 2                 PRINT TITLE AND SPACE 2 LINES        52780001
         BR    R9                  RETURN TO CALLER                     52800001
         DROP  BUFREG                                                   52880001
         SPACE 2                                                        52900001
*********************************************************************** 52920001
*                                                                     * 52940001
*   FORMAT AND PRINT LINE                                             * 52960001
*                                                                     * 52980001
*********************************************************************** 53000001
         SPACE                                                          53020001
MSSFMPR3 LA    R3,3                LOAD NUMBER OF SPACES                53040001
         B     MSSFMPRA            CONTINUE                             53060001
MSSFMPR2 LA    R3,2                LOAD NUMBER OF SPACES                53080001
         B     MSSFMPRA            CONTINUE                             53100001
MSSFMPR1 LA    R3,1                LOAD NUMBER OF SPACES                53120001
MSSFMPRA L     R15,AFMTLINE        LOAD ADDR OF LINE FORMAT ROUT        53140001
         BALR  RETREG,R15          GO FORMAT PRINT LINE                 53160001
         LR    PREG,R3             LOAD NUMBER OF LINES TO SPACE        53180001
         L     R15,AWRITE          LOAD ADDR OF WRITE ROUTINE           53200001
         BALR  RETREG,R15          GO PRINT LINE AND SPACE SPEC NUMB    53220001
*                                  OF LINES                             53240001
         BR    R9                  RETURN TO CALLER                     53260001
         SPACE 2                                                        53280001
*********************************************************************** 53300001
*                                                                     * 53320001
*   GREATER THAN 50 PQES...LET'S CONSIDER IT A LOOP                   * 53340001
*                                                                     * 53360001
*********************************************************************** 53380001
         SPACE                                                          53400001
MSSLOOP  L     BUFREG,CURBUF       LOAD ADDR OF OUTPUT BUFFER           53420001
         USING OUTBUF,BUFREG                                            53440001
         MVC   ADDR(L'MSSLPMSG),MSSLPMSG MOVE PQE LOOP MSG TO BUFFER    53460001
         BRWRITE 3                 PRINT AND SPACE 3 LINES              53480001
         B     MSSPRDNA            RETURN TO FORMAT ROUTINE             53500001
         SPACE 2                                                        53520001
*********************************************************************** 53540001
*                                                                     * 53560001
*   ALL DONE...RETURN TO FORMAT ROUTINE                               * 53580001
*                                                                     * 53600001
*********************************************************************** 53620001
         SPACE                                                          53640001
MSSPRDN  BRWRITE 1                 SPACE ONE MORE LINE                  53660001
MSSPRDNA MVC   ERRADDR,MSSPRERS    RESTORE PREVIOUS ERROR ROUT ADDR     53680001
         L     R13,4(R13)          GET CALLER'S SAVE AREA ADDRESS       53700001
         LM    R14,R12,12(R13)     RESTORE HIS REGS                     53720001
         BR    RETREG              RETURN TO CALLER (FORMAT ROUTINE)    53740001
         EJECT                                                          53760001
*********************************************************************** 53780001
*                                                                     * 53800001
*   MSS PRINT FORMAT ERROR                                            * 53820001
*                                                                     * 53840001
*********************************************************************** 53860001
         SPACE                                                          53880001
         DROP  BASE1                                                    53900001
         USING MSSERR,R15                                               53920001
MSSERR   LA    R13,MSSSAVE         GET MSS PRINT'S SAVE AREA            53940001
         LM    R14,R12,12(R13)     RESTORE OUR REGS                     53960001
         DROP  R15                                                      53980001
         USING MSSBASE,BASE1       SHIFT BACK TO BASE1 - REG 11         54000001
         L     BUFREG,CURBUF       LOAD OUTPUT BUFFER ADDR              54020001
         BRWRITE 1                 SPACE A LINE                         54040001
         MVC   ADDR(L'MSSERMSG),MSSERMSG MOVE ERROR MSG TO BUFFER       54060001
         BRWRITE 3                 PRINT AND SPACE 3 LINES              54080001
         B     MSSPRDNA            RETURN TO FORMAT                     54100001
         EJECT                                                          54120001
*********************************************************************** 54140001
*                                                                     * 54160001
*   CONSTANTS FOR MSSPRNT ROUTINE                                     * 54180001
*                                                                     * 54200001
*********************************************************************** 54220001
         SPACE                                                          54240001
MSSSAVE  DC    18F'0'              MSS PRINT'S SAVE AREA                54260001
MSSPRERS DC    F'0'                SAVE AREA FOR PREVIOUS ERR ROUT ADR  54280001
         SPACE                                                          54300001
*   PATTERN FOR AOS/2 DUMMY PQE                                         54320001
MSSPTN1  FMTPTRN (DTA,DTAP,LBL,LBLP),5,3,0,7,(MSSDPID),(MSSPTN1A,0)     54340001
         FMTPTRN (DTA,DTAP,LBL),5,4,16,22,,(MSSPTN1B,0)          Y01980 54360001
         FMTPTRN (DTA,LBL),4,4,33,38,,,LAST                      Y01980 54380001
         SPACE                                                          54400001
*   PATTERN FOR LINE 1 OF AOS/2 PQE                                     54420001
MSSPTN2  FMTPTRN (DTA,DTAC,DTAP,LBL,LBLP),3,3,0,5,(MSSPQID1),(MSSPTN2A+X54440001
               1)                                                       54460001
         FMTPTRN (DTA,DTAP,LBL),3,4,14,18,,(MSSPTN2A,0)                 54480001
         FMTPTRN (DTA,LBL),3,4,29,33                                    54500001
         FMTPTRN (DTA,LBL),3,4,44,48                                    54520001
         FMTPTRN (DTA,LBL),3,4,59,63,,,LAST                             54540001
         SPACE                                                          54560001
*   PATTERN FOR LINE 2 OF AOS/2 PQE                                     54580001
MSSPTN3  FMTPTRN (DTA,LBL),3,4,14,18                                    54600001
         FMTPTRN (DTA,LBL),3,4,29,33                                    54620001
         FMTPTRN (DTA,LBL),3,4,44,48                                    54640001
         FMTPTRN (DTA,LBL),3,4,59,63,,,LAST                      Y01980 54660001
         SPACE                                                          54680001
*   PATTERN FOR PCP/MFT BOUNDRY BOX W/O HIERARCHY SUPPORT               54700001
MSSPTN4  FMTPTRN (DTA,DTAP),,4,,5,,(MSSPTN4A,0)                         54720001
         FMTPTRN (DTA,LBL,LBLP),2,4,14,17,(MSSMID1),,LAST               54740001
         SPACE                                                          54760001
*   PATTERN FOR PCP/MFT WITH HIERARCHY SUPPORT                          54780001
MSSPTN5  FMTPTRN (DTA,DTAP,LBL,LBLP),6,4,0,7,(MSSMID2),(MSSPTN5A,0)     54800001
         FMTPTRN (DTA,LBL),2,4,16,19                                    54820001
         FMTPTRN (DTA,DTAP,LBL),6,4,30,37,,(MSSPTN5B,0)                 54840001
         FMTPTRN (DTA,LBL),2,4,46,49,,,LAST                             54860001
         SPACE                                                          54880001
MSSDPID  DC    C'D-PQEFIRSTLAST'                                        54900001
MSSPQID1 DC    C'PQEFFBLFBNPQPPQTCBRSIRADFLG'                           54920001
MSSMID1  DC    C'TO'                                                    54940001
MSSMID2  DC    C'HIER 0TOHIER 1TO'                                      54960001
PQECNT   DC    H'0'                PQE CNTR USED TO PREVENT LOOP        54980001
MSSVTTL  DC    C'MAIN STORAGE'                                          55000001
MSSFTTL  DC    C'P/P BOUNDARIES'                                        55020001
MSSLPMSG DC    C'INFINITE LOOP IN PQES'                          Y01980 55040001
MSSERMSG DC    C'FORMAT ERROR IN MAIN STORAGE BLOCKS'                   55060001
FMSPCH   DC    10F'0'              PATCH AREA                    X01980 55080001
         DROP  BASE1,COMBASE                                            55100001
         EJECT                                                          55120001
AMDPRFLD CSECT                                                          55140001
         SPACE                                                          55160001
*********************************************************************** 55180001
*                *** AMDPRFLD - LOAD LIST PRINT ***                   * 55200001
*                                                                     * 55220001
* STATUS--OS/VS2 RELEASE 1.0                                          * 55240001
*                                                                     * 55260001
* FUNCTION--                                                          * 55280001
*    THIS ROUTINE PRINTS THE LOAD LIST INCLUDING THE JOB PACK QUEUE.  * 55300001
*                                                                     * 55340001
* ENTRY POINTS--                                                      * 55360001
*    AMDPRFLD IS THE ONLY ENTRY.  CONTROL IS RECEIVED FROM AMDPRFSR.  * 55380001
*    STANDARD SUBROUTINE LINKAGE USED.                                * 55400001
*                                                                     * 55420001
* INPUTS--                                                            * 55440001
*         REGISTER 0 - TJID OF STORAGE CONTAINING TCB TO BE FORMATTED * 55460001
*         REGISTER 2 - TCB ADDRESS FOR WHICH LOAD LIST IS TO BE       * 55480001
*                      FORMATTED.                                     * 55500001
*         REGISTER 12 - ADDRESS OF COMMON AREA                        * 55520001
*                                                                     * 55600001
* OUTPUTS--                                                           * 55620001
*    WRITES FORMATTED LOAD LIST, AND JOB PACK QUEUE.                  * 55640001
*    WRITES MESSAGES 'NO ELEMENTS ON LOAD LIST',  'NOTHING IN JOB     * 55660001
*    PACK',AND 'NO EXTENT LIST'.                                      * 55680001
*    WRITES ERROR MESSAGES 'ERROR IN LOAD LIST'  'ERROR IN JOB PACK   * 55700001
*    QUEUE','ERROR IN EXTENT LIST','INFINITE LOOP IN LOAD LIST',      * 55720001
*    AND INFINITE LOOP IN JOB PACK QUEUE'.                            * 55722001
*                                                                     * 55740001
* EXTERNAL REFERENCES--                                               * 55760001
*         BRREAD - TO OBTAIN DATA FROM THE INPUT DUMP.                * 55780001
*         BRWRITE - TO WRITE DATA TO THE 'PRINTER' DATA SET.          * 55800001
*         AMDPRGFR - FROM AN ADDRESS IN COMMON, TO FORMAT A LINE      * 55820001
*                    DESCRIBED BY THE FMTPTRN MACRO INSTRUCTION.      * 55840001
*         ADRCNVT - FROM ADDRESS IN COMMON, TO CONVERT 3 BYTES TO     * 55860001
*                   PRINTABLE HEX.                                    * 55880001
*                                                                     * 55900001
* EXITS,NORMAL--                                                      * 55920001
*    RETURN TO CALLER THROUGH STANDARD LINKAGE.                       * 55940001
*                                                                     * 55960001
* EXITS,ERROR--                                                       * 55980001
*    SAME AS NORMAL EXIT                                              * 56000001
*                                                                     * 56020001
* TABLES/WORK AREAS--                                                 * 56040001
*    FMTPTRN MACRO IS USED TO GENERATE A PATTERN FOR THE FORMATTED    * 56060001
*    CONTROL BLOCKS.                                                  * 56080001
*                                                                     * 56100001
* ATTRIBUTES-- REUSABLE                                               * 56120001
*                                                                     * 56140001
* CHARACTER CODE DEPENDENCY-- NONE                                    * 56160001
*                                                                     * 56180001
* NOTES--                                                             * 56200001
*   BRREAD ERROR HANDLER:  IF A CDE CANNOT BE READ FROM THE INPUT     * 56220001
*   DUMP, A MESSAGE IS PRINTED.  IF THE LOAD LIST IS BEING FORMATTED  * 56240001
*   AN ATTEMPT IS MADE TO FORMAT THE JOB PACK QUEUE, IF THE JOB       * 56260001
*   PACK QUEUE IS BEING FORMATTED CONTROL RETURNS TO AMDPRFSR.        * 56280001
*                                                                     * 56300001
*********************************************************************** 56320001
         SPACE                                                          56340001
GOTONE   EQU   128                                                      56360001
JBPQPRT  EQU   64                                                       56380001
JPQPTR   EQU   44                                                       56400001
PIBJPQ   EQU   44                                                X01980 56420001
TCBPIB   EQU   124                                                      56440001
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              56460001
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             56480001
         USING LOADBASE,BASE1                                           56500001
LOADBASE LA    R3,LOADSAVE         SAVE AREA CHAINING                   56520001
         ST    R13,LOADSAVE+4                                           56540001
         ST    R3,8(R13)                                                56560001
         LR    R13,R3                                                   56580001
         SPACE                                                          56600001
         USING COMMON,COMBASE                                           56620001
         SPACE                                                          56640001
         STH   R0,LODTJID          SAVE TJID VALUE                      56660001
         ST    R2,LDTCBSV          SAVE TCB ADDRESS                     56680001
         MVI   LDSW,0              ZERO LOAD SWITCH                     56700001
         MVC   LDERSV,ERRADDR      SAVE PREV ERROR ROUTINE ADDRESS      56720001
         LA    R15,LOADERR         ADDR OF LOADPRT ERROR ROUTINE        56740001
         ST    R15,ERRADDR         STORE IN ERROR ADDR WORD             56760001
         L     BUFREG,CURBUF       LOAD BUFFER ADDRESS                  56780001
         USING OUTBUF,BUFREG                                            56800001
         MVC   ADDR(9),LDTITLE     MOVE TITLE TO BUFFER                 56820001
         BRWRITE 2                 PRINT TITLE                          56840001
         LA    PREG,TCBLLEP(R2)    ADDR OF LOAD LIST PTR                56860001
         BRREAD  (PREG),DATA,TJID=LODTJID                               56880001
         L     R2,0(PREG)          LOAD LOAD LIST PTR TO R2             56900001
LOADLP3A LA    R10,255             LOOP CONTROL FOR LOAD LIST   SA53335 56910001
         ST    R10,LOOPCTR         SAVE COUNTER                 SA53335 56912001
LOADLP3  LTR   PREG,R2             LLE PTR TO PARM REG AND TEST IT      56920001
         BZ    LOADDONE            ALL DONE IF ZERO                     56940001
         BRREAD  (PREG)                                                 56960001
         MVC   NXTLLE(4),0(PREG)   SAVE ADDR OF NEXT LOAD LIST ELEMENT  56980001
         LA    PREG,4(R2)          ADDR OF CDE PTR                      57040001
         BRREAD  (PREG)                                                 57060001
         L     R2,0(PREG)          LOAD CDE ADDR TO R2                  57080001
         LA    R2,0(R2)            CLEAR RESP CNT                       57100001
         MVC   LOADRESP(1),0(PREG) SAVE RESP COUNT                      57120001
         LTR   R2,R2               TEST FOR CDE                         57140001
         BZ    LOADPRT6            NO CDE--FORGET THIS LLE              57160001
LOADPRT8 OI    LDSW,GOTONE         SET SW TO INDICATE SOMETHING ON LOAD 57180001
*                                  LIST                                 57200001
         MVC   ADDR(3),CDEID       MOVE 'CDE' TO BUFFER                 57220001
         LA    R4,ADDR+5           ADDR OF WHERE TO PUT CDE ADDR        57240001
         L     R15,AADRCNVT        ADDR OF 3 BYTE CONVERT ROUTINE       57260001
         BALR  RETREG,R15          CONVERT CDE ADDR                     57280001
         MVC   ADDR+14(2),NMID     MOVE 'NM' TO BUFFER                  57300001
         BRREAD  (R2)                                                   57320001
         MVC   CDEATR1(4),0(PREG)  SAVE ATR1 OF CDE AND PTR TO NEXT     57340001
         LA    PREG,8(R2)          ADDR OF FIRST 4 BYTES OF NAME        57360001
         BRREAD  (PREG)                                                 57380001
         MVC   ADDR+17(4),0(PREG)  MOVE 4 BYTES OF NAME                 57400001
         LA    PREG,12(R2)         ADDR OF SECOND 4 BYTES OF NAME       57420001
         BRREAD  (PREG)                                                 57440001
         MVC   ADDR+21(4),0(PREG)  MOVE 4 BYTES OF NAME                 57460001
         MVC   ADDR+28(3),USEID    MOVE 'USE' TO BUFFER                 57480001
         LA    PREG,4(R2)          POINT TO 2ND USECNT FIELD     Y01980 57481001
         BRREAD (PREG)             READ 1ST HALF OF USE CNT      Y01980 57482001
         LR    R5,PREG             LOAD FROM ADDR                Y01980 57483001
         LA    R4,ADDR+32          LOAD TO ADDR                  Y01980 57484001
         BAL   R9,BYTECNVT         CONVERT ONE BYTE OF USECNT    Y01980 57485001
         LA    PREG,16(R2)         ADDR OF USE-EPA                      57500001
         BRREAD  (PREG)                                                 57520001
         LR    R5,PREG             ADDR OF USE COUNT                    57540001
         LA    R4,ADDR+34          WHERE TO PUT USE COUNT               57560001
         BAL   R9,BYTECNVT         GO CONVERT USE COUNT                 57580001
         MVC   ADDR+39(4),RESPID   MOVE 'RESP' TO BUFFER                57600001
         TM    LDSW,JBPQPRT        PRINTING JOB PACK Q                  57620001
         BNO   LOADPRT9            BR IF NOT FOR RESPONSIBILITY CNT     57640001
         MVC   ADDR+44(2),NA       NO RESP CNT--MOVE 'NA' TO BUFFER     57660001
         B     LOADPRTD            BR ARROUND                           57680001
LOADPRT9 LA    R5,LOADRESP         ADDR OF RESPONSIBILITY COUNT         57700001
         LA    R4,ADDR+44          WHERE TO PUT RESP CNT                57720001
         BAL   R9,BYTECNVT         GO CONVERT RESP CNT                  57740001
LOADPRTD MVC   ADDR+69(3),EPAID    MOVE 'EPA' TO BUFFER                 57760001
         LA    R4,ADDR+73          ADDR OF WHERE-TO-PUT-IT              57780001
         L     R15,AADRCNVT        ADDR OF 3 BYTE CONVERT ROUTINE       57800001
         BALR  RETREG,R15          CONVERT ENTRY POINT ADDRESS          57820001
         MVC   ADDR+49(4),ATR1ID   MOVE 'ATR1' TO BUFFER                57840001
         LA    R5,CDEATR1          ADDR OF CDE ATTRIBUTES               57860001
         LA    R4,ADDR+54          WHERE TO PUT ATR1                    57880001
         BAL   R9,BYTECNVT         CONVERT ATR1                         57900001
LOADPRT7 LA    PREG,20(R2)         ADDR OF EXTENT LIST PTR OR MAJOR CDE 57920001
*                                  IF THIS CDE IS A MINOR               57940001
         BRREAD  (PREG)                                                 57960001
         L     R2,0(PREG)          LOAD ADDR OF EXTENT LIST OR MAJOR    57980001
*                                  CDE                                  58000001
         MVC   ADDR+59(4),ATR2ID   MOVE 'ATR2' TO BUFFER         Y01980 58001001
         LR    R5,PREG             LOAD FROM ADDR                Y01980 58002001
         LA    R4,ADDR+64          LOAD TO ADDR                  Y01980 58003001
         BAL   R9,BYTECNVT         CONVERT ATTR2 BYTE            Y01980 58004001
         TM    CDEATR1,MINCDE      WAS IT A MINOR CDE                   58020001
         BO    LOADPRT1            YES--GET ADDR OF EXTENT LIST FROM    58040001
*                                  MAJOR                                58060001
LOADPRT2 LTR   R2,R2               IS THERE AN EXTENT LIST              58080001
         BZ    NOXLST              NO--TELL'EM ABOUT IT                 58100001
         LA    PREG,4(R2)          ADDR OF NUMB OF RELOC FACTORS        58120001
         BRREAD  (PREG)                                                 58140001
         L     R3,0(PREG)          LOAD NUMBER OF RELOCATION FACTORS    58160001
*                                  TO R3                                58180001
         CL    R3,F25              IS IT GT 25                          58200001
         BH    XLSTER              YES--DON'T PRINT IT                  58220001
         LTR   R3,R3               IS IT ZERO                           58240001
         BZ    XLSTER              YES--ERROR                           58260001
         LA    R7,8(R2)            ADDR OF FIRST BLOCK LN               58280001
         LR    R8,R3               LOAD NUMB TO R8                      58300001
         SLL   R8,2                MULTIPLY BY 4                        58320001
         AR    R8,R7               ADDR OF FIRST BLOCK ADDR             58340001
LOADLP1  SR    R10,R10             ZERO INDEX REG                       58360001
         LA    R9,2                LOAD COUNT FOR NUMB OF ENTRIES PER   58380001
*                                  LINE                                 58400001
         MVC   ADDR+82(3),STAID    MOVE 'STA' TO BUFFER                 58420001
         MVC   ADDR+95(2),LNID     MOVE 'LN' TO BUFFER                  58440001
LOADLP2  BRREAD  (R8)              ADDR OF BLOCK ADDR IN REG 8          58460001
         LA    R4,ADDR+86(R10)     ADDR OF WHERE TO PUT STA             58480001
         L     R15,AADRCNVT ADDR OF 3 BYTE CONVERT ROUTINE              58500001
         BALR  RETREG,R15          CONVERT STARTING ADDRESS             58520001
         LA    R4,ADDR+98(R10)     ADDR OF WHERE TO PUT LN              58540001
         LR    PREG,R7             ADDR OF BLOCK LN                     58560001
         BRREAD  (R7)                                                   58580001
         L     R15,AADRCNVT        ADDR OF 3 BYTE CONVERT ROUTINE       58600001
         BALR  RETREG,R15          CONVERT LENGTH OF BLOCK              58620001
         LA    R7,4(R7)            INCR LENGTH ADDR                     58640001
         LA    R8,4(R8)            INCR BLOCK ADDR ADDR                 58660001
         LA    R10,25              LOAD INDEX FOR SECOND ENTRY ON LINE  58680001
         BCT   R3,LOADPRT3         LOOP FOR NO OR REL FACTORS           58700001
         B     LOADPRT5            DONE--PRINT LINE                     58720001
         SPACE                                                          58740001
LOADPRT3 BRWRITE 1                 LINE FULL--PRINT IT           Y01980 58780001
         B     LOADLP1             START NEW LINE                       58800001
         SPACE                                                          58900001
NOXLST   MVC   ADDR+82(L'NXLSTMSG),NXLSTMSG MOVE MESSAGE         Y01980 58920001
         B     LOADPRT5            PRINT THE CDE                        58940001
XLSTER   MVC   ADDR+82(20),XLSTEMSG MOVE ERROR MSG TO BUFFER     Y01980 58960001
         SPACE                                                          58980001
LOADPRT5 BRWRITE 1                 PRINT THE CDE                        59000001
         TM    LDSW,JBPQPRT        IS JOB PACK QUEUE BEING PRINTED      59020001
         BO    JPQPRT              YES--CONTINUE WITH NEXT CDE          59040001
LOADPRT6 L     R2,NXTLLE           LOAD ADDR OF NEXT LOAD LIST ELEMENT  59060001
         LA    R2,0(R2)            CLEAR HIGH ORDER BYTE                59080001
         L     R10,LOOPCTR         RESTORE COUNTER REGISTER     SA53335 59090001
         BCT   R10,RESTCTR1        GO UPDATE COUNTER & CONTINUE SA53335 59100001
* IF FALL THROUGH POSSIBLE LOOP - ISSUE COMMENT                 SA53335 59110001
         SPACE                                                          59112001
         MVC   ADDR(L'LLLOOPMG),LLLOOPMG MOVE MSG TO BUFFER     SA53335 59114001
         B     LOOPPRT1            PRINT LOAD LIST LOOP MESSAGE SA53335 59116001
RESTCTR1 ST    R10,LOOPCTR         UPDATE COUNTER SAVE AREA     SA53335 59118001
         B     LOADLP3             LOOP THROUGH ENTIRE LOAD LST SA53335 59118401
RESTCTR2 ST    R10,LOOPCTR         UPDATE COUNTER SAVE AREA     SA53335 59118801
         B     LOADPRT8            FORMAT JOB PACK QUEUE        SA53335 59119201
         SPACE                                                          59120001
LOADPRT1 NI    CDEATR1,XFF-MINCDE  RESET MINOR FLAG                     59140001
         B     LOADPRT7            CONTINUE                             59160001
         SPACE 2                                                        59180001
*********************************************************************** 59200001
*                                                                     * 59220001
*   INTERFACE ROUTINE FOR JOB PACK QUEUE PRINTING                     * 59240001
*                                                                     * 59260001
*********************************************************************** 59280001
         SPACE                                                          59300001
JPQPRTA  LA    R10,256             LOOP CONTROL FOR JOB PACK Q  SA53335 59310001
         ST    R10,LOOPCTR         SAVE COUNTER                 SA53335 59312001
JPQPRT   L     R2,NXTCDE           LOAD ADDR OF NEXT CDE ON Q           59320001
         LA    R2,0(R2)            CLEAR HIGH ORDER BYTE                59340001
         LTR   R2,R2               TEST FOR END OF Q                    59360001
         BZ    LOADDONE            ALL DONE IF 0                        59380001
         LA    PREG,NXTCDE         POINT PREG TO CDE ADDRESS            59400001
         L     R10,LOOPCTR         RESTORE COUNT REG            SA53335 59450001
         BCT   R10,RESTCTR2        GO UPDATE CTR AND CONTINUE   SA53335 59500001
         SPACE                                                          59550001
* IF FALL THROUGH POSSIBLE LOOP IN JOB PACK QUEUE - ISSUE COMMENT       59600001
         MVC   ADDR(L'JPLOOPMG),JPLOOPMG PUT MESSAGE IN BUFFER  SA53335 59650001
LOOPPRT1 BRWRITE 1                 PRINT LOOP MESSAGE           SA53335 59700001
         B     LOADDONE            TERMINATE CURRENT PROCESS    SA53335 59750001
         EJECT                                                          60880001
*********************************************************************** 60900001
*                                                                     * 60920001
*   DONE WITH LOAD LIST                                               * 60940001
*                                                                     * 60960001
*********************************************************************** 60980001
         SPACE                                                          61000001
LOADDONE TM    LDSW,JBPQPRT        HAS THE JOB PACK Q BEEN PRINTED      61020001
         BO    LDDONE2             BR IF IT HAS                         61040001
         TM    LDSW,GOTONE         WAS ANYTHING ON LOAD LIST            61060001
         BO    LDDONE1             BR IF THERE WAS                      61080001
         MVC   ADDR(24),NOLLEMSG   MOVE MSG TO BUFFER                   61100001
         BRWRITE 1                 PRINT NO LLE MESSAGE                 61120001
LDDONE1  BRWRITE 2                 SPACE 2 LINES                        61140001
         OI    LDSW,JBPQPRT        INDICATE PRINTING JOB PACK Q         61200001
         MVC   ADDR(14),JPQTTL     MOVE JOB PACK Q TITLE TO BUF         61220001
         BRWRITE 2                 PRINT JOB PACK Q TITLE               61240001
         NI    LDSW,XFF-GOTONE     RESET GOTONE SW                      61260001
         L     R2,LDTCBSV          RESTORE TCB ADDRESS                  61280001
         LA    PREG,JPQPTR(R2)     ADDR OF JOB PACK Q PTR               61340001
         BRREAD  (PREG)                                                 61360001
         MVC   NXTCDE(4),0(PREG)   SAVE ADDR OF FIRST CDE IN Q          61380001
         B     JPQPRTA             PRINT JOB PACK CDES          SA53335 61400001
         SPACE                                                          61420001
LDDONE2  TM    LDSW,GOTONE         WAS ANYTHING ON JOB PACK Q           61440001
         BO    LDDONE3             YES--RETURN                          61460001
         MVC   ADDR(19),NOJPQMSG   NO--MOVE MESSAGE TO BUFFER           61480001
         BRWRITE 1                 PRINT NO JOB PACK Q MSG              61500001
LDDONE3  BRWRITE 2                 SPACE 2 LINES                        61520001
LDDONED  MVC   ERRADDR,LDERSV      RESTORE PREVIOUS ERROR ROUTINE ADDR  61540001
         L     R13,4(R13)          GET CALLER'S SAVE AREA ADDR          61560001
         LM    R14,R12,12(R13)     RESTORE HIS REGS                     61580001
         BR    RETREG              RETURN TO FORMAT ROUTINE             61600001
         EJECT                                                          61620001
*********************************************************************** 61640001
*                                                                     * 61660001
*   THIS ROUTINE CONVERTS 1 BYTE TO PRINTABLE HEX                     * 61680001
*                                                                     * 61700001
*********************************************************************** 61720001
         SPACE                                                          61740001
BYTECNVT LR    R0,R1               SAVE R1 OVER HEXCNVT                 61760001
         HEXCNVT (4),(5),1         CONVERT ONE BYTE                     61780001
         LR    R1,R0               RESTORE R1                           61800001
         BR    R9                  RETURN TO CALLER                     61820001
         EJECT                                                          61840001
*********************************************************************** 61860001
*                                                                     * 61880001
*   ERROR WHILE PRINTING LOAD LIST                                    * 61900001
*                                                                     * 61920001
*********************************************************************** 61940001
         SPACE                                                          61960001
         DROP  BASE1                                                    61980001
         USING LOADERR,R15                                              62000001
LOADERR  LA    R13,LOADSAVE        GET MSS PRINT'S SAVE AREA ADDRESS    62020001
         LM    R14,R12,12(R13)     RESTORE OUR REGS                     62040001
         DROP  R15                                                      62060001
         USING LOADBASE,BASE1      SHIFT TO BASE1 - REG 11              62080001
         L     BUFREG,CURBUF       RELOAD BUFFER ADDR                   62100001
         BRWRITE 1                 SPACE A LINE                         62120001
         TM    LDSW,JBPQPRT        TEST FOR PRINTING JOB PACK Q         62140001
         BO    LOADERR1            BR IF I WAS                          62160001
         MVC   ADDR(18),LDERMSG    MOVE ERROR MSG TO BUFFER             62180001
         LA    R9,LDDONE1          IF PRINTING LOAD LIST, RETURN        62200001
*                                  TO TRY TO PRINT JOB PACK QUEUE       62220001
         B     LOADERR2            BR AROUND                            62240001
LOADERR1 MVC   ADDR(23),JPQERMSG   MOVE JOB PACK Q ERROR MSG            62260001
         LA    R9,LDDONE3          IF PRINTING JOB PACK QUEUE,          62280001
*                                  RETURN TO EXIT                       62300001
LOADERR2 BRWRITE 1                 PRINT ERROR MSG                      62320001
         NI    SWB,XFF-FMTERR-IOERR RESET ERROR SWITCHES                62340001
         BR    R9                  RETURN ON R9 SET ABOVE               62360001
         EJECT                                                          62380001
*********************************************************************** 62400001
*                                                                     * 62420001
*   SAVE AREA AND CONSTANTS FOR LOADPRT ROUTINE                       * 62440001
*                                                                     * 62460001
*********************************************************************** 62480001
         SPACE                                                          62500001
LOADSAVE DC    18F'0'              MSS PRINT'S SAVE AREA                62520001
LDERSV   DC    F'0'                                                     62540001
NXTLLE   DC    F'0'                                                     62560001
LDWORK1  DC    F'0'                                                     62580001
NXTCDE   DC    F'0'                PTR TO NEXT CDE AND CDE ATR1         62600001
F25      DC    F'25'                                                    62620001
LDTCBSV  DC    F'0'                SAVE AREA FOR TCB ADDRESS            62640001
LODTJID  DC    H'0'                                                     62660001
LOOPCTR  DS    F                   LOOP COUNTER                 SA53335 62670001
         SPACE                                                          62680001
*   PATTERN FOR MFT LRB AND LPRB                                        62700001
LDPTRN1  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),4,3,0,5,(LDPTRN1A,0),(LDPTRN1X62720001
               B+1)                                                     62740001
         FMTPTRN (LBL,LBLP,DTA,DTAP,DTAE),2,8,13,16,(LDMID1),(LDPTRN1B,X62760001
               0)                                                       62780001
         FMTPTRN (LBL,DTA),7,4,27,35                             X01980 62800001
         FMTPTRN (LBL,DTA),6,4,46,53,,,LAST                      X01980 62820001
         SPACE                                                          62840001
*   PATTERN FOR MFT FRB                                                 62860001
LDPTRN2  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),3,3,0,5,(LDMID2),(LDPTRN2B+1) 62880001
         FMTPTRN (LBL,DTA,DTAP,DTAE),2,8,13,16,,(LDPTRN2B,0)            62900001
         FMTPTRN (LBL,DTA,DTAP,DTAC),2,3,27,30,,(LDWORK1+1)             62920001
         FMTPTRN (LBL,DTA,DTAP),5,4,39,46,,(LDPTRN2C,0)                 62940001
         FMTPTRN (LBL,DTA),5,4,57,63                                    62960001
         FMTPTRN (LBL,DTA),7,4,73,81,,,LAST                             62980001
* PATTERN FOR CDB                                                       63000001
LCDBLN1  FMTPTRN (LBL,LBLP),3,,13,,(LCDBID1)                     X01980 63020001
         FMTPTRN (LBL,DTA,DTAP),8,4,21,31,,(LCDBLN11,0)          X01980 63040001
         FMTPTRN (LBL,DTA),7,4,41,50,,,LAST                      X01980 63060001
LDMID1   DC    C'NMSZ/STABUSE/EP'                                X01980 63080001
LDMID2   DC    C'FRBNMSZXRWTLXRREQXRTLPRB'                              63100001
LCDBID1  DC    C'CDBNOT/LDADMODLNTH'                             X01980 63120001
LOADRESP DC    X'00'                                                    63140001
CDEATR1  EQU   NXTCDE                                                   63160001
LDSW     DC    X'00'                                                    63180001
CDEID    DC    C'CDE'                                                   63200001
NMID     DC    C'NM'                                                    63220001
USEID    DC    C'USE'                                                   63240001
RESPID   DC    C'RESP'                                                  63260001
EPAID    DC    C'EPA'                                                   63280001
ATR1ID   DC    C'ATR1'                                                  63300001
ATR2ID   DC    C'ATR2'                                           Y01980 63301001
STAID    DC    C'STA'                                                   63320001
LNID     DC    C'LN'                                                    63340001
LPRBID   DC    CL4'LPRB'                                                63360001
LRBID    DC    CL4'LRB'                                                 63380001
USEEPID  DC    C'USE/EP'                                                63400001
SZID     DC    C'SZ'                                                    63420001
NA       DC    C'NA'                                                    63440001
LDTITLE  DC    C'LOAD LIST'                                             63460001
NOLLEMSG DC    C'NO ELEMENTS ON LOAD LIST'                              63480001
LDERMSG  DC    C'ERROR IN LOAD LIST'                                    63500001
JPQTTL   DC    C'JOB PACK QUEUE'                                        63520001
NOJPQMSG DC    C'NOTHING IN JOB PACK'                                   63540001
JPQERMSG DC    C'ERROR IN JOB PACK QUEUE'                               63560001
XLSTEMSG DC    C'ERROR IN EXTENT LIST'                                  63580001
NXLSTMSG DC    C'NO EXTENT LIST'                                        63600001
LLLOOPMG DC    C'INFINITE LOOP IN LOAD LIST'                    SA53335 63610001
JPLOOPMG DC    C'INFINITE LOOP IN JOB PACK QUEUE'               SA53335 63612001
FLDPCH   DC    22F'0'              PATCH AREA                    X01980 63620001
         DROP  BUFREG,BASE1,COMBASE                                     63640001
         EJECT                                                          63660001
AMDPRFDB CSECT                                                          63680001
         SPACE                                                          63700001
*********************************************************************** 63720001
*                     *** AMDPRFDB - DEB PRINT ***                    * 63740001
*                                                                     * 63760001
* STATUS--OS/VS2 RELEASE 1.0                                          * 63780001
*                                                                     * 63800001
* FUNCTION--                                                          * 63820001
*    THIS ROUTINE FORMATS THE DEB'S ON THE DEB CHAIN OF THE TCB       * 63840001
*    BEING FORMATTED.                                                 * 63860001
*                                                                     * 63880001
* ENTRY POINTS--                                                      * 63900001
*    AMDPRFDB IS THE ONLY ENTRY.  CONTROL IS RECEIVED FROM AMDPRFSR.  * 63920001
*    STANDARD SUBROUTINE LINKAGE USED.                                * 63940001
*                                                                     * 63960001
* INPUTS--                                                            * 63980001
*         REGISTER 0 - TJID OF STORAGE CONTAINING TCB TO BE FORMATTED * 64000001
*         REGISTER 2 - TCB ADDRESS OF DEB CHAIN TO BE FORMATTED       * 64020001
*         REGISTER 12 - ADDRESS OF COMMON AREA                        * 64040001
*                                                                     * 64120001
* OUTPUT--                                                            * 64140001
*    WRITES FORMATTED DEB CHAIN                                       * 64160001
*    WRITES MESSAGES 'TASK HAS NO OPEN DATA SETS' OR 'INFINITE LOOP   * 64180001
*    IN DEB CHAIN' IF MORE THAN 200 DEB'S IN DEB CHAIN.               * 64200001
*    WRITES ERROR MESSAGE 'ERROR IN DEB CHAIN'                        * 64220001
*                                                                     * 64240001
* EXTERNAL REFERENCES--                                               * 64260001
*         BRREAD - TO OBTAIN DATA FROM THE INPUT DUMP.                * 64280001
*         BRWRITE - TO WRITE DATA TO THE 'PRINTER' DATA SET.          * 64300001
*         WRDCNVT - FROM AN ADDRESS IN COMMON, TO CONVERT 4 BYTES     * 64320001
*                   TO PRINTABLE HEX.                                 * 64340001
*         ADRCNVT - FROM ADDRESS IN COMMON, TO CONVERT 3 BYTES TO     * 64360001
*                   PRINTABLE HEX.                                    * 64380001
*                                                                     * 64400001
* EXITS,NORMAL--                                                      * 64420001
*    RETURN TO CALLER THROUGH STANDARD LINKAGE.                       * 64440001
*                                                                     * 64460001
* EXITS,ERROR--                                                       * 64480001
*    SAME AS NORMAL EXIT                                              * 64500001
*                                                                     * 64520001
* TABLES/WORK AREAS-- NONE                                            * 64540001
*                                                                     * 64560001
* ATTRIBUTES-- REUSABLE                                               * 64580001
*                                                                     * 64600001
* CHARACTER CODE DEPENDENCY-- NONE                                    * 64620001
*                                                                     * 64640001
* NOTES--                                                             * 64660001
*   BRREAD ERROR HANDLER:  IF A DEB CANNOT BE READ FROM THE INPUT     * 64680001
*   DUMP, A MESSAGE IS PRINTED AND CONTROL RETURNS TO AMDPRFSR.       * 64700001
*                                                                     * 64720001
*********************************************************************** 64740001
         SPACE                                                          64760001
DADEV    EQU   64                                                       64780001
DEBFND   EQU   128                                                      64800001
TCBDEB   EQU   8                                                        64820001
ISAMTST  EQU   X'80'                                                    64840001
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              64860001
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             64880001
         USING DEBBASE,BASE1                                            64900001
DEBBASE  LA    R3,DEBSAVE          SAVE AREA CHAINING                   64920001
         ST    R13,DEBSAVE+4                                            64940001
         ST    R3,8(R13)                                                64960001
         LR    R13,R3                                                   64980001
         SPACE                                                          65000001
         USING COMMON,COMBASE                                           65020001
         SPACE                                                          65040001
         MVI   DEBSW,0             CLEAR DEB SWITCH                     65060001
         XC    DEBCNT,DEBCNT       ZERO DEB COUNT                       65080001
         MVC   DEBERSV,ERRADDR     SAVE PREVIOUS ERROR ROUTINE ADDR     65100001
         LA    R15,DEBERR          ADDR OF DEBPRNT ERROR ROUTINE        65120001
         ST    R15,ERRADDR         STORE IN ERROR ROUTINE ADDR WORD     65140001
         L     BUFREG,CURBUF       LOAD BUFFER ADDR                     65160001
         USING OUTBUF,BUFREG                                            65180001
         LA    PREG,TCBDEB(R2)     ADDR OF DEB CHAIN PTR                65200001
DEBPRNT8 BRREAD  (PREG),DATA,TJID=(R0)                                  65220001
         L     R2,0(PREG)          LOAD DEB CHAIN PTR                   65240001
         LA    R2,0(R2)            CLEAR POSSIBLE HIGH BYTE             65260001
         LTR   R2,R2               IS THERE A DEB                       65280001
         BZ    NODEB               NO--ALL DONE                         65300001
         OI    DEBSW,DEBFND        INDICATE DEB FOUND                   65320001
         MVC   ADDR(3),DEBID       MOVE 'DEB' TO BUFFER                 65340001
         LA    R4,ADDR+4           ADDR OF WHERE TO PUT DEB ADDR        65360001
         L     R15,AADRCNVT        ADDR OF 3 BYTE CONVERT ROUTINE       65380001
         BALR  RETREG,R15          CONVERT DEB ADDR                     65400001
         MVC   ADDR+13(90),APPID   MOVE APPENDAGE IDS TO BUFFER         65420001
         LA    PREG,28(R2)         ADDR OF APP VEC TAB                  65440001
         BRREAD  (PREG)                                                 65460001
         L     R3,0(PREG)          LOAD ADDR OF I/O APP VEC TAB         65480001
         LA    R3,0(R3)            CLEAR HIGH ORDER BYTE                65500001
         LTR   R3,R3               IS IT ZERO                           65520001
         BZ    DEBPRNT1            YES--NOTHING TO PRINT                65540001
         BRREAD  (R3)              ADDR OF END OF EXT APP ADDR IN R 3   65560001
         LA    R4,ADDR+33          ADDR OF WHERE TO PUT END OF EXT APP  65580001
*                                  ADDRESS                       X01980 65600001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT RTN    X01980 65620001
         BALR  RETREG,R15          CONVERT END OF EXT APP ADDR          65640001
         LA    PREG,4(R3)          ADDR OF SIO APP ADDR                 65660001
         BRREAD  (PREG)                                                 65680001
         LA    R4,ADDR+49          ADDR OF WHERE TO PUT SIOA ADDRX01980 65700001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT RTN    X01980 65720001
         BALR  RETREG,R15          CONVERT SIO APP ADDR                 65740001
         LA    PREG,8(R3)          ADDR OF PCI APP ADDR                 65760001
         BRREAD  (PREG)                                                 65780001
         LA    R4,ADDR+65          ADDR OF WHERE TO PUT PCI APP ADDR    65800001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT RTN    X01980 65820001
         BALR  RETREG,R15          CONVERT PCI APP ADDR                 65840001
         LA    PREG,12(R3)         ADDR OF CH END APP ADDR              65860001
         BRREAD  (PREG)                                                 65880001
         LA    R4,ADDR+81          ADDR OF WHERE TO PUT CH END APP ADDR 65900001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT RTN    X01980 65920001
         BALR  RETREG,R15          CONVERT CH END APP ADDR              65940001
         LA    PREG,16(R3)         ADDR OF AB END APP ADDR              65960001
         BRREAD  (PREG)                                                 65980001
         LA    R4,ADDR+97          ADDR OF WHERE TO PUT AB END APP ADDR 66000001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT RTN    X01980 66020001
         BALR  RETREG,R15          CONVERT AB END APP ADDR              66040001
DEBPRNT1 BRWRITE 1                 PRINT LINE OF APP ADDRS              66060001
         MVC   ADDR+13(3),PFXID    MOVE 'PFX' TO BUFFER                 66080001
         LR    R3,R2               DEB ADDR TO R3                       66100001
         SH    R3,SIXTEEN          ADDR OF DEB PREFIX IN R3             66120001
         BNP   DEBERR1             ERROR IF ZERO OR NEG          A41628 66140001
         LA    R7,4                LOAD COUNT TO R7                     66160001
         LA    R4,ADDR+17          ADDR OF WHERE TO PUT FIRST WORD OF   66180001
*                                  PREFIX                               66200001
DEBPRNT2 BRREAD (R3)               PREFIX ADDR IN REG 3                 66220001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       66240001
         BALR  RETREG,R15          CONVERT WORD OF PREFIX               66260001
         AH    R4,ELEVEN           INCR WHERE-TO-PUT-IT ADDR            66280001
         LA    R3,4(R3)            INCR PREFIX ADDRESS                  66300001
         BCT   R7,DEBPRNT2         LOOP FOR 4 WORDS                     66320001
         BRWRITE 1                 PRINT LINE OF DEB PREFIX             66340001
         MVC   ADDR+13(3),DTCBID   MOVE 'TCB' TO BUFFER                 66360001
         BRREAD  (R2)              DEB ADDR IN REG 2                    66380001
         LA    R4,ADDR+17          ADDR OF WHERE TO PUT TCB ADDR        66400001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       66420001
         BALR  RETREG,R15          CONVERT TCB ADDR                     66440001
         MVC   ADDR+28(4),NDEBID   MOVE 'NDEB' TO BUFFER                66460001
         LA    PREG,4(R2)          ADDR OF NEXT DEB PTR                 66480001
         BRREAD  (PREG)                                                 66500001
         LA    R4,ADDR+33          ADDR OF WHERE TO PUT NXT DEB ADDR    66520001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       66540001
         BALR  RETREG,R15          CONVERT NXT DEB ADDR                 66560001
         MVC   ADDR+44(4),ASYNID   MOVE 'ASYN' TO BUFFER                66580001
         LA    PREG,8(R2)          ADDR OF ASYN EXIT ADDR               66600001
         BRREAD  (PREG)                                                 66620001
         LA    R4,ADDR+49          ADDR OF WHERE TO PUT ASYN EXIT ADDR  66640001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       66660001
         BALR  RETREG,R15          CONVERT ASYN EXIT ADDR               66680001
         MVC   ADDR+60(4),SPRGID   MOVE 'SPRG' TO BUFFER                66700001
         LA    PREG,12(R2)         ADDR OF SYSTEM IOB PURGE CHAIN PTR   66720001
         BRREAD  (PREG)                                                 66740001
         LA    R4,ADDR+65          WHERE IT GOES                        66760001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       66780001
         BALR  RETREG,R15          COMVERT SYS PRGE CH ADDR             66800001
         MVC   ADDR+76(4),UPRGID   MOVE 'UPRG' TO BUFFER                66820001
         LA    PREG,16(R2)         ADDR OF USER IOB PURGE CHAIN PTR     66840001
         BRREAD  (PREG)                                                 66860001
         MVC   XTNTNO(1),0(PREG)   SAVE EXTENT NUMBER                   66880001
         LA    R4,ADDR+81          ADDR OF WHERE TO PUT IT              66900001
         L     R15,AWRDCNVT                                             66920001
         BALR  RETREG,R15          CONVERT USER PRG CH ADDR             66940001
         MVC   ADDR+92(4),PLSTID   MOVE 'PLST' TO BUFFER                66960001
         LA    PREG,20(R2)         ADDR OF PARAMETER LIST FOR PURGE ECB 66980001
         BRREAD  (PREG)                                                 67000001
         LA    R4,ADDR+97          ADDR OF WHERE PARM LIST PTR GOES     67020001
         L     R15,AWRDCNVT                                             67040001
         BALR  RETREG,R15          CONVERT PARM LIST ADDR               67060001
         MVC   ADDR+108(3),DCBID   MOVE 'DCB' TO BUFFER                 67080001
         LA    PREG,24(R2)         ADDR OF DCB PTR                      67100001
         BRREAD  (PREG)                                                 67120001
         MVC   DEBDCB(4),0(PREG)   SAVE DCB ADDR                  M1748 67121001
         LA    R4,ADDR+112         ADDR OF WHERE IT GOES                67140001
         L     R15,AWRDCNVT                                             67160001
         BALR  RETREG,R15          CONVERT DCB ADDR                     67180001
         BRWRITE 1                 PRINT THIS LINE OF DEB               67200001
         MVC   ADDR+13(3),AVTID    MOVE 'AVT' TO BUFFER                 67220001
         LA    PREG,28(R2)         ADDR OF I/O APP VECT TABLE ADDR      67240001
         BRREAD  (PREG)                                                 67260001
         TM    0(PREG),X'04'       TEST FOR DA                          67280001
         BZ    DEBPRNT3            BR IF NOT DA                         67300001
         OI    DEBSW,DADEV         SET DA DEVICE FLAG IF IT IS          67320001
DEBPRNT3 LA    R4,ADDR+17          ADDR OF WHERE TO PUT APP VECT TAB    67340001
*                                  ADDRESS                              67360001
         L     R15,AWRDCNVT                                             67380001
         BALR  RETREG,R15          CONVERT I/O APP VECTOR TABLE ADDR    67400001
         BRWRITE 1                 PRINT LINE                           67420001
         SR    R7,R7               CLEAR IC REG                         67440001
         IC    R7,XTNTNO           LOAD NO OF EXTENTS                   67460001
XNTTEST  LTR   R7,R7               TEST FOR ZERO                        67660001
         BNP   DEBDONE             ZERO--NO EXTENTS TO PRINT            67680001
         TM    DEBSW,DADEV         IS THIS DEB FOR DA                   67700001
         BO    DEBPRNT5            YES--4 WORD EXTENTS                  67720001
         MVC   ADDR+14(6),OPUCBID  NO--1 WORD EXTENTS...MOVE 'OP-UCB'   67740001
*                                  TO BUFFER                            67760001
         BRWRITE 1                 PRINT LINE                           67780001
         LA    R3,32(R2)           ADDR OF FIRST EXTENT                 67800001
         LA    R4,ADDR+13          ADDR OF WHERE TO PUT EXTENTS         67820001
DEBPRNT4 BRREAD (R3)                                                    67840001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       67860001
         BALR  RETREG,R15          CONVERT EXTENT                       67880001
         BRWRITE 1                 PRINT EXTENT                         67900001
         LA    R3,4(R3)            INCR TO NEXT EXTENT                  67920001
         BCT   R7,DEBPRNT4         LOOP FOR NUMB OF EXTENTS             67940001
         B     DEBDONE             ALL DONE WITH DEB                    67960001
         SPACE 3                                                        67980001
*********************************************************************** 68000001
*                                                                     * 68020001
*   PRINT 4 WORD EXTENTS (DIRECT ACCESS)                              * 68040001
*                                                                     * 68060001
*********************************************************************** 68080001
         SPACE                                                          68100001
DEBPRNT5 CLI   XTNTNO,X'01'        HOW MANY EXTENTS              Y01980 68100201
         BNH   NOTISAM             IF ONE OR LESS--NOT ISAM      Y01980 68100401
         LA    PREG,32(R2)         POINT TO FIRST WORD OF DEVICE Y01980 68101001
*                                  SECTION (UCB ADDR IF NOT ISAM)Y01980 68102001
         ST    PREG,DEBLO          SAVE ADDR OF DEVICE SECTION   Y01980 68102201
         LR    R9,R7               GET NUMBER OF EXTENTS         Y01980 68102401
         SLL   R9,4                MULTIPLY BY 16                Y01980 68102601
         LA    R9,0(PREG,R9)       GET ADDR OF END OF DEVICE SEC Y01980 68102801
         ST    R9,DEBHI            SAVE ENDING ADDR              Y01980 68102901
         BRREAD (PREG)             READ FIRST WD OF DEVICE SEC   Y01980 68103201
         NC    1(3,PREG),1(PREG)   TEST FOR ZERO PTR             Y01980 68103401
         BZ    ISAM                IF ZERO ASSUME ISAM DEB       Y01980 68103601
*                                  (UCB PTR NOT ZERO)                   68103701
         CLC   1(3,PREG),DEBLO+1   DOES NON ZERO ADDR POINT INTO Y01980 68103801
*                                  DEVICE SECTION--HENCE ISAM           68104101
         BL    NOTISAM             IF LOWER MUST BE A UCB        Y01980 68104301
         CLC   1(3,PREG),DEBHI+1   TEST END OF DEVICE SECTION    Y01980 68104401
         BH    NOTISAM             IF HIGHER ITS NOT ISAM        Y01980 68104501
ISAM     OI    ISAMSW,ISAMTST      INDICATE ISAM DEB             Y01980 68104601
         BCTR  R7,0                DEREMENT EXTENT COUNT FOR ISAMY01980 68104701
         B     HAVEDA              CONTINUE WITH DA EXTENTS      Y01980 68104801
NOTISAM  CLI   XTNTNO,X'01'        HOW MANY EXTENTS              Y01980 68104901
         BH    HAVEDA              IF MORE THAN ONE ITS DA        M1748 68105401
         LA    R4,3                SET TO THREE FOR LOOP CNT      M1748 68105701
         LA    R3,36(R2)           ADDR OF FIRST DCB IF 3525      M1748 68106001
DCBREAD  BRREAD (R3)               READ DCB ADDR                  M1748 68107001
         CLC   1(3,PREG),DEBDCB+1  ARE DCB'S THE SAME             M1748 68108001
         BE    HAVE3525            YES--DEVICE SECTION IS 3525    M1748 68109001
         LA    R3,4(R3)            POINT TO NEXT DCB ADDR         M1748 68110001
         BCT   R4,DCBREAD          LOOP TO READ 3 ADDR            M1748 68111001
HAVEDA   MVC   ADDR+14(36),FMUCBID MOVE IDS TO BUFFER             M1748 68120001
         BRWRITE 1                 PRINT EXTENT IDS                     68140001
         LA    R3,32(R2)           ADDR OF FIRST EXTENT                 68160001
         TM    ISAMSW,ISAMTST      IS THIS AN ISAM DATA SET             68180001
         BZ    DEBPRNT7            NO--CONTINUE                         68200001
         LA    R3,48(R2)           YES--SKIP EXTENT 0                   68220001
DEBPRNT7 LA    R4,ADDR+13          ADDR OF WHERE TO PUT FIRST WORD OF   68240001
*                                  EXTENT                               68260001
         BRREAD  (R3)                                                   68280001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       68300001
         BALR  RETREG,R15          CONVERT FILE MASK AND UCB ADDR       68320001
         LA    R8,3                LOAD COUNT TO R3                     68340001
         LA    R9,DEBWORK          ADDR OF 3 WORD WORK AREA             68360001
DEBPRNT6 LA    R3,4(R3)            ICNR TO NEXT WORD OF EXTENT          68380001
         BRREAD  (R3)              EXTENT WORD ADDR IN REG 3            68400001
         MVC   0(4,R9),0(PREG)     MOVE 4 BYTES TO WORK AREA            68420001
         LA    R9,4(R9)            INCR WORK AREA ADDR                  68440001
         BCT   R8,DEBPRNT6         LOOP FOR 3 WORDS                     68460001
         LA    PREG,DEBWORK+2      ADDR OF STARTING CCHH OF EXTENT      68480001
         LA    R4,ADDR+24          ADDR OF WHERE IT GOES                68500001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       68520001
         BALR  RETREG,R15          CONVERT STARTING CCHH OF EXTENT      68540001
         LA    PREG,DEBWORK+6      ADDR OF ENDING CCHH OF EXTENT        68560001
         LA    R4,ADDR+35          ADDR OF WHERE IT GOES                68580001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       68600001
         BALR  RETREG,R15          CONVERT ENDING CCHH OF EXTENT        68620001
         HEXCNVT ADDR+46,DEBWORK+10,2 CONVERT NUMB OF TRACKS FOR THIS   68640001
*                                  EXTENT                               68660001
         BRWRITE 1                 PRINT EXTENT                         68680001
         LA    R3,4(R3)            INCR TO NEXT EXTENT                  68700001
         BCT   R7,DEBPRNT7         LOOP FOR NUMB OF EXTENTS             68720001
         B     DEBDONE             DONE WITH DEB                  M1748 68721001
         SPACE                                                          68740001
*********************************************************************** 68760001
*                                                                     * 68760201
*  PRINT 4 WORD EXTENT FOR 3525                                       * 68760301
*                                                                     * 68760401
*********************************************************************** 68761001
         SPACE                                                          68761201
HAVE3525 MVC   ADDR+15(38),H3525 MOVE HEADING TO PRINT            M1748 68761401
         BRWRITE 1                 WRITE HEADING FOR 3525         M1748 68761601
         LA    R3,32(R2)           GET ADDR OF DEVICE SECTION     M1748 68761801
         ST    R3,F3525D           SET IN FORMAT PATTERN          M1748 68761901
         LA    PREG,F3525          GET ADDR OF FMTPTRN            M1748 68762901
         L     R15,AFMTLINE        ADDR OF FORMAT RTN             M1748 68763101
         BALR  RETREG,R15          GO FORMAT 3525 LINE            M1748 68763301
         BRWRITE 1                 WRITE 3525 LINE                M1748 68763501
         B     DEBDONE             DONE WITH DEB                  M1748 68763701
         SPACE                                                          68763801
*********************************************************************** 68763901
*                                                                     * 68780001
*   DONE WITH THIS DEB...LOOK FOR ANOUTHER                            * 68800001
*                                                                     * 68820001
*********************************************************************** 68840001
         SPACE                                                          68860001
DEBDONE  NI    DEBSW,XFF-DADEV     RESET DIRECT ACCESS FLAG             68880001
         NI    ISAMSW,XFF-ISAMTST  RESET ISAM SW                        68900001
         BRWRITE 1                 SPACE A LINE                         68920001
         LH    R3,DEBCNT           LOAD DEBCOUNT                        68940001
         AH    R3,ONEA             ADD ONE TO IT                        68960001
         CH    R3,TWOHND           IS IT GT 200                         68980001
         BH    DEBINF              BR IF IT IS                          69000001
         STH   R3,DEBCNT           STORE INCREMENTED COUNT BACK         69020001
         LA    PREG,4(R2)          ADDR OF NEXT DEB PTR                 69040001
         B     DEBPRNT8            LOOP THROUGH DEB CHAIN               69060001
         SPACE 2                                                        69080001
*********************************************************************** 69100001
*                                                                     * 69120001
*   DONE WITH DEB CHAIN...RETURN TO FORMAT ROUTINE                    * 69140001
*                                                                     * 69160001
*********************************************************************** 69180001
         SPACE                                                          69200001
NODEB    TM    DEBSW,DEBFND        WAS THERE A DEB                      69220001
         BZ    NODEB1              NO--WRITE A MSG TO THAT AFFECT       69240001
         BRWRITE 1                 SPACE ANOUTHER LINE                  69260001
NODEB2   MVC   ERRADDR,DEBERSV     RESTORE PREVIOUS ERROR ROUTINE ADDR  69280001
         L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          69300001
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS           69320001
         BR    RETREG              RETURN TO FORMAT ROUTINE             69340001
         SPACE                                                          69360001
NODEB1   MVC   ADDR(26),NODEBMSG   MOVE MSG TO BUFFER                   69380001
NODEB3   BRWRITE 3                 PRINT MSG AND SPACE 3 LINES          69400001
         B     NODEB2              RETURN TO FORMAT                     69420001
         SPACE 2                                                        69440001
*********************************************************************** 69460001
*                                                                     * 69480001
*   GREATER THAN 200 DEBS...CONSIDER IT AN INFINITE LOOP              * 69500001
*                                                                     * 69520001
*********************************************************************** 69540001
         SPACE                                                          69560001
DEBINF   MVC   ADDR(26),DEBIFMSG   MOVE INFINITE LOOP MSG TO BUFFER     69580001
         B     NODEB3              PRINT MSG AND RETURN TO FORMAT       69600001
         EJECT                                                          69620001
*********************************************************************** 69640001
*                                                                     * 69660001
*   ERROR IN DEB CHAIN...WRITE MSG AND RETURN TO FORMAT               * 69680001
*                                                                     * 69700001
*********************************************************************** 69720001
         SPACE                                                          69740001
         DROP  BASE1                                                    69760001
         USING DEBERR,R15                                               69780001
DEBERR   LA    R13,DEBSAVE         POINT TO DEB PRINT'S SAVE AREA       69800001
         LM    R14,R12,12(R13)     RESTORE OUR REGS                     69820001
         DROP  R15                                                      69840001
         USING DEBBASE,BASE1       SHIFT BACK TO REG 11 AS BASE         69860001
DEBERR1  L     BUFREG,CURBUF       RELOAD BUFFER ADDR            A41628 69880001
         BRWRITE 1                 SPACE A LINE                         69900001
         MVC   ADDR(18),DEBERMSG   MOVE ERROR MSG TO BUFFER             69920001
         NI    SWB,XFF-FMTERR-IOERR RESET ERROR SWITCHES                69940001
         B     NODEB3              RETURN TO FORMAT                     69960001
         EJECT                                                          69980001
*********************************************************************** 70000001
*                                                                     * 70020001
*   SAVE AREA AND CONSTANTS FOR DEBPRNT ROUTINE                       * 70040001
*                                                                     * 70060001
*********************************************************************** 70080001
         SPACE                                                          70100001
DEBSAVE  DC    18F'0'              DEB PRINT'S SAVE AREA                70120001
DEBWORK  DC    3F'0'                                                    70140001
DEBERSV  DC    F'0'                                                     70160001
DEBCNT   DC    H'0'                                                     70180001
DEBSW    DC    X'00'                                                    70200001
XTNTNO   DC    X'00'               NUMB OF EXTENTS FOR CURRENT DEB      70220001
ISAMSW   DC    X'00'               ISAM DATA SET IF X'80'               70240001
DEBLO    DC    A(0)                BEGIN ADDR OF BDE DEVICE SEC  Y01980 70240201
DEBHI    DC    A(0)                END ADDR OF DEB DEVICE SECTIONY01980 70240401
DEBDCB   DC    F'0'                DCB ADDR SAVE                  M1748 70241001
H3525    DC    C'UCB       RDRDCB     PCHDCB     WTRDCB'          M1748 70242001
F3525    FMTPTRN (DTA,DTAP),,4,,13,,(F3525D,0)                    M1748 70243001
         FMTPTRN (DTA),,4,,24                                     M1748 70244001
         FMTPTRN (DTA),,4,,35                                     M1748 70245001
         FMTPTRN (DTA),,4,,46,,,LAST                              M1748 70246001
DEBID    DC    C'DEB'                                                   70260001
APPID    DC    CL15'APPENDAGES'                                         70280001
         DC    CL16'EOEA'                                        X01980 70300001
         DC    CL16'SIOA'                                        X01980 70320001
         DC    CL16'PCIA'                                        X01980 70340001
         DC    CL16'CEA'                                         X01980 70360001
         DC    CL16'XCEA'                                        X01980 70380001
PFXID    DC    C'PFX'                                                   70400001
DTCBID   DC    C'TCB'                                                   70420001
NDEBID   DC    C'NDEB'                                                  70440001
ASYNID   DC    C'ASYN'                                                  70460001
SPRGID   DC    C'SPRG'                                                  70480001
UPRGID   DC    C'UPRG'                                                  70500001
PLSTID   DC    C'PLST'                                                  70520001
DCBID    DC    C'DCB'                                                   70540001
AVTID    DC    C'AVT'                                                   70560001
OPUCBID  DC    C'OP-UCB'                                                70580001
FMUCBID  DC    CL11'FM-UCB'                                             70600001
         DC    CL12'START'                                              70620001
         DC    CL9'END'                                                 70640001
         DC    CL4'TRKS'                                                70660001
NODEBMSG DC    C'TASK HAS NO OPEN DATA SETS'                            70680001
DEBERMSG DC    C'ERROR IN DEB CHAIN'                                    70700001
DEBIFMSG DC    C'INFINITE LOOP IN DEB CHAIN'                            70720001
FDBPCH   DC    20F'0'              PATCH AREA                    X01980 70740001
         DROP  BUFREG,BASE1,COMBASE                                     70760001
         EJECT                                                          70780001
AMDPRFIO CSECT                                                          70800001
         SPACE                                                          70820001
*********************************************************************** 70840001
*                 *** AMDPRFIO - TIOT PRINT ***                       * 70860001
*                                                                     * 70880001
* STATUS--OS/VS2 RELEASE 1.0                                          * 70900001
*                                                                     * 70920001
* FUNCTION--                                                          * 70940001
*    THIS ROUTINE PRINTS THE TIOT OF THE TCB BEING FORMATTED.         * 70960001
*                                                                     * 70980001
* ENTRY POINTS--                                                      * 71000001
*    AMDPRFIO IS THE ONLY ENTRY.  CONTROL IS RECEIVED FROM AMDPRFSR.  * 71020001
*    STANDARD SUBROUTINE LINKAGE USED.                                * 71040001
*                                                                     * 71060001
* INPUTS--                                                            * 71080001
*         REGISTER 0 - TJID OF STORAGE CONTAINING TCB TO BE FORMATTED * 71100001
*         REGISTER 2 - TCB ADDRESS TO BE FORMATTED                    * 71120001
*         REGISTER 12 - ADDRESS OF COMMON AREA                        * 71140001
*                                                                     * 71220001
* OUTPUTS--                                                           * 71240001
*    WRITES FORMATTED TIOT                                            * 71260001
*    WRITES MESSAGE 'TASK HAS NO TIOT'                                * 71280001
*    WRITES ERROR MESSAGE 'ERROR IN TIOT', 'INVALID TIOT', AND        * 71300001
*    'INFINITE LOOP IN TIOT'                                          * 71310001
*                                                                     * 71320001
* EXTERNAL REFERENCES--                                               * 71340001
*         BRREAD - TO OBTAIN DATA FROM THE INPUT DUMP.                * 71360001
*         BRWRITE - TO WRITE DATA TO THE 'PRINTER' DATA SET.          * 71380001
*         WRDCNVT - FROM AN ADDRESS IN COMMON, TO CONVERT 4 BYTES     * 71400001
*                   TO PRINTABLE HEX.                                 * 71420001
*         ADRCNVT - FROM ADDRESS IN COMMON, TO CONVERT 3 BYTES TO     * 71440001
*                   PRINTABLE HEX.                                    * 71460001
*                                                                     * 71480001
* EXITS,NORMAL--                                                      * 71500001
*    RETURN TO CALLER THROUGH STANDARD LINKAGE.                       * 71520001
*                                                                     * 71540001
* EXITS,ERROR--                                                       * 71560001
*    SAME AS NORMAL EXIT                                              * 71580001
*                                                                     * 71600001
* TABLES/WORK AREAS-- NONE                                            * 71620001
*                                                                     * 71640001
* ATTRIBUTES-- REUSABLE                                               * 71660001
*                                                                     * 71680001
* CHARACTER CODE DEPENDENCY-- NONE                                    * 71700001
*                                                                     * 71720001
* NOTES--                                                             * 71740001
*   BRREAD ERROR HANDLER:  IF THE TIOT CANNOT BE READ FROM THE INPUT  * 71760001
*   DUMP, A MESSAGE IS PRINTED AND CONTROL RETURNS TO AMDPRFSR.       * 71780001
*                                                                     * 71800001
*********************************************************************** 71820001
         SPACE                                                          71840001
MAXDD    EQU   256                                              SA55854 71850001
TIOTVLD  EQU   128                                                      71860001
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS              71880001
         BALR  BASE1,0             ESTABLISH REG 11 AS BASE             71900001
         USING TIOTBASE,BASE1                                           71920001
TIOTBASE LA    R3,TIOSAV           SAVE AREA CHAINING                   71940001
         ST    R13,TIOSAV+4                                             71960001
         ST    R3,8(R13)                                                71980001
         LR    R13,R3                                                   72000001
         SPACE                                                          72020001
         USING COMMON,COMBASE                                           72040001
         SPACE                                                          72060001
         MVC   TIOERSV,ERRADDR     SAVE PREVIOUS ERROR ROUTINE ADDR     72080001
         LA    R15,TIOTERR         ADDR OF TIOTPRT ERROR ROUTINE        72100001
         ST    R15,ERRADDR         STORE IN ERROR ADDR WORD             72120001
         L     BUFREG,CURBUF       LOAD BUFFER ADDR                     72140001
         USING OUTBUF,BUFREG                                            72160001
         LA    PREG,TCBTIOT(R2)    LOAD TIOT PTR ADDR                   72180001
         BRREAD  (PREG),DATA,TJID=(R0)                                  72200001
         L     R2,0(PREG)          LOAD TIOT ADDR                       72220001
         LA    R2,0(R2)            CLEAR POSSIBLE HIGH ORDER BYTE       72240001
         LTR   R2,R2               IS THERE A TIOT                      72260001
         BZ    NOTIOT              NO--WRITE MSG AND RETURN TO FORMAT   72280001
         C     R2,ADDRMAX          COMPARE TIOT ADDR TO ADDRMAX         72300001
         BH    NOTIOT              GT ADDRMAX-NO TIOT                   72320001
         MVC   ADDR(4),TIOTID      MOVE 'TITO' TO BUFFER                72340001
         LA    R4,ADDR+5           ADDR OF WHERE TO PUT TIOT ADDR       72360001
         L     R15,AADRCNVT        ADDR OF 3 BYTE CONVERT ROUTINE       72380001
         BALR  RETREG,R15          CONVERT TIOT ADDR                    72400001
         MVC   ADDR+13(3),JOBID    MOVE 'JOB' TO BUFFER                 72420001
         BRREAD  (R2)              TIOT ADDR IN REG 2                   72440001
         MVC   ADDR+17(8),0(PREG)  MOVE JOBNAME TO BUFFER               72460001
         LR    R3,PREG             LOAD INDEX REG                       72480001
         LA    R4,1                LOAD INCREMENT REG                   72500001
         LA    R5,7(PREG)          LOAD COMPARITOR REG                  72520001
TIOTLP4  TM    0(R3),X'40'         TEST FOR VALID JOBNAME IN TIOT       72540001
         BZ    TIOTPRT2            BR IF FOUND INVALID                  72560001
         BXLE  R3,R4,TIOTLP4       LOOP TO END OF JOBNAME               72580001
         OI    TIOTSW,TIOTVLD      SET VALID TIOT SW                    72600001
         B     TIOTPRT3            BR AROUND                            72620001
TIOTPRT2 NI    TIOTSW,XFF-TIOTVLD  RESET VALID TIOT SW                  72640001
TIOTPRT3 EQU   *                                                        72660001
         MVC   ADDR+28(4),STEPID   MOVE 'STEP' TO BUFFER                72680001
         LA    PREG,8(R2)          ADDR OF STEP NAME                    72700001
         BRREAD  (PREG)                                                 72720001
         MVC   ADDR+33(8),0(PREG)  MOVE STEPNAME TO BUFFER              72740001
         MVC   ADDR+44(4),PROCID   MOVE 'PROC' TO BUFFER                72760001
         LA    PREG,16(R2)         ADDR OF PROCEEDURE NAME              72780001
         BRREAD  (PREG)                                                 72800001
         MVC   ADDR+49(8),0(PREG)  MOVE PROC STEP NAME                  72820001
         BRWRITE 2                 PRINT TIOT NAMES AND SPACE 2 LINES   72840001
         TM    TIOTSW,TIOTVLD      IS TIOT VALID                        72860001
         BZ    TIONVLD             BR IF NOT VALID TIOT                 72880001
         LA    R3,24(R2)           ADDR OF FIRST DD ENTRY               72900001
         SR    R7,R7               CLEAR IC REG                         72920001
         BRREAD  (R3)                                                   72940001
         IC    R7,0(PREG)          LOAD LENGTH OF DD ENTRY              72960001
         LTR   R7,R7               ARE THERE ANY DD ENTRIES             72980001
         BZ    NODDEN              BR IF THERE ARE NONE                 73000001
         MVC   ADDR+13(49),DDENIDS MOVE DD ENTRY IDS TO BUFFER          73020001
         LR    R4,PREG             SAVE PREG ACCROSS BRWRITE            73040001
         BRWRITE 1                 PRINT DD ENTRY IDS                   73060001
         LR    PREG,R4             RESTORE PREG                         73080001
         LA    R9,MAXDD            SET LOOP CTR TO 256 - ONE    SA55854 73090001
*                                  MORE THAN MAXIMUM ALLOWED    SA55854 73092001
TIOTLP3  LR    R5,R3               DD ENTRY ADDR TO R5                  73100001
         SR    R5,R2               SUBTRACT TIOT ADDR FOR OFFSET        73120001
         ST    R5,TIOTWORK         STORE IN WORK AREA FOR CONVERSION    73140001
         LR    R4,R1               SAVE R1 ACCROSS HEXCNVT              73160001
         HEXCNVT ADDR+14,TIOTWORK+2,2 CONVERT OFFSET                    73180001
         LR    R1,R4               RESTORE R1                           73200001
         LA    R4,ADDR+22          ADDR FOR FIRST WORD                  73220001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       73240001
         BALR  RETREG,R15          CONVERT FIRST WORD OF DD ENTRY       73260001
         LA    R3,4(R3)            INCR ADDR                            73280001
         LA    R8,2                LOAD LOOP COUNT                      73300001
         LA    R4,ADDR+33          ADDR OF WHERE TO PUT DDNAME          73320001
TIOTLP1  BRREAD  (R3)                                                   73340001
         MVC   0(4,R4),0(PREG)     MOVE FOUR BYTES OF DDNAME            73360001
         LA    R4,4(R4)            INCR                                 73380001
         LA    R3,4(R3)             ADDRS                               73400001
         BCT   R8,TIOTLP1          LOOP TO MOVE ENTIRE NAME             73420001
         BRREAD  (R3)              ADDR OF TTR-STC FIELD OF DD ENTRY    73440001
         LA    R4,ADDR+44          ADDR OF WHERE TO PUT IT              73460001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       73480001
         BALR  RETREG,R15          CONVERT TTR-STC FIELD                73500001
         SH    R7,SIXTEEN          SUBTRACT 16 FROM LENGTH              73520001
         BNP   TIOTPRT1            NO DEVICE ENTRY                      73540001
         SRL   R7,2                DIVIDE BY 4                          73560001
         LTR   R7,R7               TEST AGAIN                           73580001
         BNP   TIOTPRT1            NO DEVICE ENTRY                      73600001
         LA    R4,ADDR+55          ADDR FOR DEV ENT IN BUFFER           73620001
TIOTLP2  LA    R3,4(R3)            INCR TO DEVICE ENTRY                 73640001
         BRREAD  (R3)                                                   73660001
         L     R15,AWRDCNVT        ADDR OF 4 BYTE CONVERT ROUTINE       73680001
         BALR  RETREG,R15          CONVERT DEVICE ENTRY                 73700001
         BRWRITE 1                 PRINT THIS LINE                      73720001
         BCT   R7,TIOTLP2          LOOP FOR NUMB OF ENTRIES             73740001
TIOTPRT1 LA    R3,4(R3)            INCR TO NEXT ENTRY IF ANY            73760001
         BRREAD  (R3)                                                   73780001
         IC    R7,0(PREG)          LENGTH OF NEXT ENTRY                 73800001
         LTR   R7,R7               IS THERE ANOTHER ENTRY               73820001
         BNP   TIOTDONE            NO SET UP TO RETURN          SA55854 73840001
         BCT   R9,TIOTLP3         HAVE > 255 DDS BEEN PROCESSED SA55854 73850001
         MVC   ADDR(L'TIOTLOOP),TIOTLOOP PUT INFINITE LOOP MSG  SA55854 73852001
*                                 IN MSG BUFFER (YES)           SA55854 73854001
         BRWRITE 1                PUT OUT LOOP MESSAGE          SA55854 73856001
         SPACE 2                                                        73860001
*********************************************************************** 73880001
*                                                                     * 73900001
*   ALL DONE WITH TIOT...RETURN TO FORMAT ROUTINE                     * 73920001
*                                                                     * 73940001
*********************************************************************** 73960001
         SPACE                                                          73980001
TIOTDONE DS    0H                                                       74000001
TIOTDN1  MVC   ERRADDR,TIOERSV     RESTORE PREVIOUS ERROR ROUTINE ADDR  74020001
         L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          74040001
         LM    R14,R12,12(R13)     RESTORE HIS REGS                     74060001
         BR    RETREG              RETURN TO FORMAT ROUTINE             74080001
         SPACE 2                                                        74100001
*********************************************************************** 74120001
*                                                                     * 74140001
*   NO DD ENTRIES...SPACE 1 LINE AND RETURN                           * 74160001
*                                                                     * 74180001
*********************************************************************** 74200001
         SPACE                                                          74220001
NODDEN   BRWRITE 1                 SPACE A LINE                         74240001
         B     TIOTDN1             RETURN TO FORMAT                     74260001
         SPACE 2                                                        74280001
*********************************************************************** 74300001
*                                                                     * 74320001
*   NO TIOT...PRINT MESSAGE AND RETURN                                * 74340001
*                                                                     * 74360001
*********************************************************************** 74380001
         SPACE                                                          74400001
NOTIOT   MVC   ADDR(16),NOTIOMSG   MOVE MESSAG TO BUFFER                74420001
         BRWRITE 1                 PRINT MSG                            74440001
         B     TIOTDONE            RETURN                               74460001
         SPACE 2                                                        74480001
*********************************************************************** 74500001
*                                                                     * 74520001
*   INVALID TIOT...PRINT MESSAGE AND RETURN TO FORMAT                 * 74540001
*                                                                     * 74560001
*********************************************************************** 74580001
         SPACE                                                          74600001
TIONVLD  MVC   ADDR(12),NVLDMSG    MOVE NOT VALID MSG TO BUFFER         74620001
         BRWRITE 1                 PRINT MSG AND SPACE A LINE           74640001
         B     TIOTDN1             RETURN TO FORMAT                     74660001
         EJECT                                                          74680001
*********************************************************************** 74700001
*                                                                     * 74720001
*   ERROR FORMATTING TIOT...PRINT ERROR MESSAGE AND RETURN TO FORMAT  * 74740001
*                                                                     * 74760001
*********************************************************************** 74780001
         SPACE                                                          74800001
         DROP  BASE1                                                    74820001
         USING TIOTERR,R15                                              74840001
TIOTERR  LA    R13,TIOSAV          GET ADDR OF TIOT PRINT'S SAVE AREA   74860001
         LM    R14,R12,12(R13)     RESTORE HIS REGS                     74880001
         DROP  R15                                                      74900001
         USING TIOTBASE,BASE1                                           74920001
         L     BUFREG,CURBUF       RELOAD BUFFER ADDR                   74940001
         BRWRITE 1                 SPACE A LINE                         74960001
         MVC   ADDR(13),TIOERMSG   MOVE ERROR MSG TO BUFFER             74980001
         BRWRITE 1                 PRINT AND SPACE A LINE               75000001
         B     TIOTDN1             RETURN TO FORMAT ROUTINE             75020001
         EJECT                                                          75040001
*********************************************************************** 75060001
*                                                                     * 75080001
*   SAVE AREA AND CONSTANTS FOR TIOTPRT ROUTINE                       * 75100001
*                                                                     * 75120001
*********************************************************************** 75140001
         SPACE                                                          75160001
TIOSAV   DC    18F'0'              TIOT PRINT'S SAVE AREA               75180001
TIOTWORK DC    F'0'                                                     75200001
TIOERSV  DC    F'0'                                                     75220001
TIOTSW   DC    X'00'                                                    75240001
TIOTID   DC    C'TIOT'                                                  75260001
JOBID    DC    C'JOB'                                                   75280001
STEPID   DC    C'STEP'                                                  75300001
PROCID   DC    C'PROC'                                                  75320001
DDENIDS  DC    CL10'OFFSET'                                             75340001
         DC    CL10'LN-STA'                                             75360001
         DC    CL11'DDNAME'                                             75380001
         DC    CL11'TTR-STC'                                            75400001
         DC    CL7'STB-UCB'                                             75420001
NOTIOMSG DC    C'TASK HAS NO TIOT'                                      75440001
TIOERMSG DC    C'ERROR IN TIOT'                                         75460001
NVLDMSG  DC    C'INVALID TIOT'                                          75480001
TIOTLOOP DC    C'INFINITE LOOP IN TIOT'                         SA55854 75490001
FIOPCH   DC    10F'0'              PATCH AREA                    X01980 75500001
         SPACE                                                          75520001
         DROP  BUFREG,BASE1,COMBASE                                     75540001
         EJECT                                                          75560001
AMDPRTSM CSECT                                                          75580001
         SPACE                                                          75600001
*********************************************************************** 75620001
*              *** AMDPRTSM - PRINT TCB SUMMARY ***                   * 75640001
*                                                                     * 75660001
* STATUS--OS/VS1 RELEASE 1.0                                          * 75680001
*                                                                     * 75700001
* FUNCTION--                                                          * 75720001
*    THIS IS A COLLECTION OF THREE ROUTINES THAT BUILD TCB SUMMARY    * 75740001
*    TABLES, PRINT THE TCB SUMMARY, AND FREE THE CORE WHICH THE       * 75760001
*    SUMMARY TABLES OCCUPY.                                           * 75780001
*                                                                     * 75800001
* ENTRY POINTS--                                                      * 75820001
*        TCBSMGT - GETS CORE FOR THE TABLE, PLACES THE JOB AND STEP   * 75840001
*              NAMES INTO IT AND LINKS IT TO THE TOP OF THE CHAIN     * 75860001
*        AMDPRTSM - PRINTS A SUMMARY OF ALL TCBS FORMATTED USING THE  * 75880001
*              TCB SUMMARY TABLES.  FOR ANYTHING TO BE PRINTED THERE  * 75900001
*              MUST BE AT LEAST 2 TABLES ON THE LIST.                 * 75920001
*        TCBSMFR - FREES ALL CORE THAT THE TCB SUMMARY TABLES OCCUPY  * 75940001
*    AMDPRTSM AND TCBSMFR RECEIVES CONTROL THROUGH AN ENTRY IN THE    * 75960001
*    COMMON AREA.  TCBSMGT RECEIVES CONTROL FROM AMDPRFSR.  ALL       * 75980001
*    ENTRY POINTS USE STANDARD LINKAGE.                               * 76000001
*                                                                     * 76020001
* INPUTS--                                                            * 76040001
*    THE TCB SUMMARY TABLE IS POINTED TO BY AN INTERNAL POINTER.      * 76060001
*                                                                     * 76080001
* OUTPUTS--                                                           * 76100001
*    WRITES TCB SUMMARY TABLE                                         * 76120001
*                                                                     * 76140001
* EXTERNAL REFERENCES--                                               * 76160001
*         BRWRITE - TO WRITE DATA TO THE 'PRINTER' DATA SET.          * 76180001
*         GETMAIN - TO OBTAIN STORAGE FOR SUMMARY TABLE               * 76200001
*         FREEMAIN - TO RELEASE STORAGE FOR SUMMARY TABLE             * 76220001
*         AMDPRGFR - FROM AN ADDRESS IN COMMON, TO FORMAT A LINE      * 76240001
*                    DESCRIBED BY THE FMTPTRN MACRO INSTRUCTION.      * 76260001
*                                                                     * 76280001
* EXITS,NORMAL--                                                      * 76300001
*    RETURN TO CALLER THROUGH STANDARD LINKAGE.                       * 76320001
*                                                                     * 76340001
* EXITS,ERROR--                                                       * 76360001
*    SAME AS NORMAL EXIT                                              * 76380001
*                                                                     * 76400001
* TABLES/WORK AREAS--                                                 * 76420001
*   THE FORMAT OF A TCB SUMMARY TABLE IS AS FOLLOWS...                * 76440001
*                                                                     * 76460001
*      0 *********************************************************    * 76480001
*        * TCB  *      FORWARD       *      *      BACKWARD      *    * 76500001
*        * ENTRY*      POINTER       * X'00'*      POINTER       *    * 76520001
*        * CNT  *                    *      *                    *    * 76540001
*      8 *********************************************************    * 76560001
*        *                                                       *    * 76580001
*        *                        JOBNAME                        *    * 76600001
*        *                                                       *    * 76620001
*     16 *********************************************************    * 76640001
*        *                                                       *    * 76660001
*        *                       STEPNAME                        *    * 76680001
*        *                                                       *    * 76700001
*     24 *********************************************************    * 76720001
*        *             *             *                                * 76720201
*        *   TJID      *   RESERVED  *                                * 76720401
*        *             *             *                                * 76721401
*        *****************************                                * 76722401
*                                                                     * 76740001
*              TCB ENTRY...FROM 1 TO 255 PER TABLE                    * 76760001
*     +0 *********************************************************    * 76780001
*        *       *                   *                           *    * 76800001
*        *  TID  *  TCB ADDRESS      *  COMPLETION CODE          *    * 76801001
*        *       *                   *                           *    * 76802001
*     +8 *********************************************************    * 76803001
*        *                           *                           *    * 76803201
*        *   SISTER TCB ADDRESS      *   MOTHER TCB ADDRESS      *    * 76804001
*        *                           *                           *    * 76840001
*    +16 *********************************************************    * 76860001
*        *                           *                           *    * 76861001
*        *   DAUGHTER TCB ADDRESS    *    PAGE NUMBER (EBCDIC)   *    * 76862001
*        *                           *                           *    * 76863001
*        *********************************************************    * 76864001
*                                                                     * 76880001
*   THE FIRST TABLE IN THE LIST WILL HAVE A ZERO BACKWARD POINTER AND * 76900001
*   THE LAST TABLE WILL HAVE A ZERO FORWARD POINTER.                  * 76920001
*                                                                     * 76940001
*    FMTPTRN MACRO IS USED TO GENERATE A PATTERN FOR THE PRINTED      * 76960001
*    SUMMARY TABLE.                                                   * 76980001
*                                                                     * 77000001
* ATTRIBUTES-- REUSABLE                                               * 77020001
*                                                                     * 77040001
* CHARACTER CODE DEPENDENCY-- NONE                                    * 77060001
*                                                                     * 77080001
* NOTES-- NONE                                                        * 77100001
*                                                                     * 77120001
*********************************************************************** 77140001
         EJECT                                                          77160001
         USING AMDPRTSM,R15                                             77180001
         STM   R14,R12,12(R13)     PRINT SUMMARY EP                     77200001
         LA    R14,8               ENTRY CODE 8                         77220001
         B     BASESMRY            GO ESTABLISH BASE                    77240001
         DROP  R15                                                      77260001
         USING TCBSMGT,R15                                              77280001
TCBSMGT  STM   R14,R12,12(R13)     MAKE ENTRY EP                        77300001
         LA    R14,4               ENTRY CODE 4                         77320001
         B     BASESMRY            GO ESTABLISH BASE                    77340001
         DROP  R15                                                      77360001
         USING TCBSMFR,R15                                              77380001
TCBSMFR  STM   R14,R12,12(R13)     FREE SUMMARY TABLES                  77400001
         SR    R14,R14             ENTRY CODE 0                         77420001
         DROP  R15                                                      77440001
         SPACE                                                          77460001
BASESMRY BALR  BASE1,0             ESTABLISH REG 11 AS BASE             77480001
         USING *,BASE1                                                  77500001
SMBASE   LA    R3,TCBSMSV          SAVE AREA CHAINING                   77520001
         ST    R13,TCBSMSV+4                                            77540001
         ST    R3,8(R13)                                                77560001
         LR    R13,R3                                                   77580001
         SPACE                                                          77600001
         USING COMMON,COMBASE      REG 12 IS COMMON CSECT POINTER       77620001
         SPACE                                                          77640001
         B     *+4(R14)            BRANCH ON ENTRY CODE                 77660001
         B     SMFR                0 - FREE SUMMARY TABLES              77680001
         B     SMGT                4 - MAKE SUMMARY ENTRY               77700001
*                                  8 - FALL THROUGH TO PRINT SUMMARY    77720001
         SPACE                                                          77740001
SMRY     MVC   TCBSMERS,ERRADDR    SAVE PREV ERROR ROUTINE ADDR         77760001
         LA    R15,TCBSMERR        ADDR OF TCBSMRY'S ERROR ROUTINE      77780001
         ST    R15,ERRADDR         ENABLE IT                            77800001
         LA    R3,FMTSFPTR         LOAD ADDR OF TABLE POINTERS          77820001
         CLC   0(4,R3),4(R3)       ARE POINTERS EQUAL                   77840001
         BE    TCBSMDN             YES--PTRS ARE EITHER 0 OR THERE IS   77860001
*                                  ONLY ONE TABLE...IN EITHER CASE NO   77880001
*                                  SUMMARY WILL BE PRINTED              77900001
         BRWRITE SKIP              SKIP TO LINE 1                       77920001
         ST    R3,TCBSMCUR         SAVE CURRENT TABLE POINTER           77940001
TCBSM1   L     R3,TCBSMCUR         LOAD CURRENT (PREVIOUS) TABLE PTR    77960001
         L     R3,4(R3)            LOAD BACKWARD POINTER                77980001
         LTR   R3,R3               IS IT ZERO                           78000001
         BZ    TCBSMDN             YES--ALL DONE PRINTING SUMMARY       78020001
         ST    R3,TCBSMCUR         SAVE NEW CURRENT TABLE ADDR          78040001
         SR    R4,R4               CLEAR IC REG                         78060001
         SPACE 2                                                        78080001
*********************************************************************** 78100001
*                                                                     * 78120001
*   PRINT JOB AND STEP NAMES                                          * 78140001
*                                                                     * 78160001
*********************************************************************** 78180001
         SPACE                                                          78200001
         IC    R4,0(R3)            LOAD CNT OF TCB ENTRIES              78220001
         LTR   R4,R4               IS IT ZERO                           78240001
         BZ    TCBSM1              YES--DONT PRINT ANYTHING FOR THIS    78260001
*                                  SUMMARY TABLE                        78280001
         OC    28(4,R3),28(R3)     IS THERE AT LEAST 1 VALID TCB ENTRY  78300001
         BZ    TCBSM1              NO--DON'T PRINT ANYTHING FOR THIS    78320001
*                                  SUMMARY TABLE                        78340001
         LA    PREG,8(R3)          ADDR OF NAMES                        78360001
         TM    SWA,TSOSW           TEST FOR TSO CALL                    78380001
         BO    TSOPTRN             BRANCH IF SO TO USE TSO PATTERN      78400001
         ST    PREG,TCBSPT1A       STORE INTO PATTERN                   78420001
         LA    PREG,TCBSPT1        LOAD PATTERN ADDR TO PREG            78440001
         SR    R0,R0               CLEAR TJID REG                       78460001
         B     NTSOPTRN            BRANCH AROUND                        78480001
TSOPTRN  ST    PREG,TCBSPT4A       STORE ADDR OF JOBNAME IN PATTERN     78500001
         LA    PREG,TCBSPT4        POINT TO TSO PATTERN                 78520001
         LH    R0,24(R3)           LOAD TJID REG                        78540001
NTSOPTRN BAL   R9,TCBSMFP1         GO FORMAT LINE, PRINT IT AND SPACE   78560001
*                                  ONE LINE                             78580001
         SPACE 2                                                        78600001
*********************************************************************** 78620001
*                                                                     * 78640001
*   TEST FOR TCB ENTRY AND SYSTEM TYPE                                * 78660001
*                                                                     * 78680001
*********************************************************************** 78700001
         SPACE                                                          78720001
         LA    R3,28(R3)           INCR R3 TO FIRST TCB ENTRY           78740001
TCBSM4   L     R2,0(R3)            LOAD TCB ADDR TO R2                  78760001
         LTR   R2,R2               IS IT ZERO                           78780001
         BZ    TCBSM2              ZERO--NO MORE ENTRIES IN THIS TABLE  78800001
         SPACE 2                                                        78900001
*********************************************************************** 78920001
*                                                                     * 78940001
*   PRINT SUMMARY FOR AOS/2                                           * 78960001
*                                                                     * 79000001
*********************************************************************** 79020001
         SPACE                                                          79040001
         LA    PREG,1(R3)          ADDR OF TCB ADDR                     79060001
         ST    PREG,TCBSPT2A       STORE INTO PATTERN                   79080001
         ST    R3,TCBSPT2E         STORE INTO PATTERN            Y01980 79081001
         LA    PREG,20(R3)         ADDR OF PAGE NUMBER           Y01980 79180001
         ST    PREG,TCBSPT2D       STORE INTO PATTERN                   79200001
         LA    PREG,TCBSPT2        LOAD ADDR OF PATTERN TO PREG         79220001
TCBSM5   BAL   R9,TCBSMFP1         FORMAT AND PRINT LINE                79240001
         LA    R3,24(R3)           INCR TO NEXT TCB ENTRY        Y01980 79260001
         BCT   R4,TCBSM4           LOOP THROUGH ALL TCB ENTRIES         79280001
TCBSM2   LH    PREG,LINENUM        LOAD NUMB OF LINES PER PAGE -2       79300001
         C     PREG,LINECNT        AM I AT TOP OF PAGE                  79320001
         BNH   TCBSM1              YES--BYPASS SPACING                  79340001
         BRWRITE 1                 NO--SPACE A LINE                     79360001
         B     TCBSM1              CONTINUE WITH NEXT TABLE             79380001
         SPACE 2                                                        79400001
*********************************************************************** 79740001
*                                                                     * 79760001
*   FORMAT AND PRINT LINE, ALSO PRINT TITLE IF TOP OF PAGE            * 79780001
*                                                                     * 79800001
*********************************************************************** 79820001
         SPACE                                                          79840001
TCBSMFP1 LH    R7,LINENUM          LOAD NUMB OF LINES PER PAGE -2       79860001
         C     R7,LINECNT          AM I AT THE TOP OF THE PAGE          79880001
         BH    TCBSMFP2            NO--DON'T PRINT TITLE                79900001
         ST    PREG,TCBSMRG1       SAVE PREG                            79920001
         ST    BUFREG,TCBSMRG2     SAVE BUFREG                          79940001
         L     BUFREG,CURBUF       LOAD ADDR OF OUTPUT BUFFER           79960001
         USING OUTBUF,BUFREG                                            79980001
         MVC   ADDR+39(L'TCBSMTTL),TCBSMTTL MOVE TITLE TO BUFFER        80000001
         BRWRITE 3                 PRINT TITLE AND SPACE 3 LINES        80020001
         DROP  BUFREG                                                   80040001
         L     PREG,TCBSMRG1       RESTORE PREG                         80060001
         L     BUFREG,TCBSMRG2     RESTORE BUFREG                       80080001
TCBSMFP2 L     R15,AFMTLINE        ADDR OF LINE FORMAT                  80100001
         BALR  RETREG,R15          GO FORMAT THE LINE                   80120001
         BRWRITE 1                 PRINT THE LINE                       80140001
         BR    R9                  RETURN TO CALLER                     80160001
         SPACE 2                                                        80180001
*********************************************************************** 80200001
*                                                                     * 80220001
*   RETURN TO FORMAT ROUTINE                                          * 80240001
*                                                                     * 80260001
*********************************************************************** 80280001
         SPACE                                                          80300001
TCBSMDN  MVC   ERRADDR,TCBSMERS    RESTORE PREVIOUS ERROR ROUT ADDR     80320001
DONESUM  L     R13,4(R13)          POINT TO CALLER'S SAVE AREA          80340001
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS           80360001
         BR    RETREG              RETURN                               80380001
         EJECT                                                          80400001
*********************************************************************** 80420001
*                                                                     * 80440001
*   FORMAT ERROR PRINTING SUMMARY...PRINT ERROR MESSAGE AND CONTINUE  * 80460001
*   WITH NEXT SUMMARY TABLE.                                          * 80480001
*                                                                     * 80500001
*********************************************************************** 80520001
         SPACE                                                          80540001
         DROP  BASE1                                                    80560001
         USING TCBSMERR,R15                                             80580001
TCBSMERR LA    R13,TCBSMSV         GET ADDRESS OF OUR SAVE AREA         80600001
         LM    R14,R12,12(R13)     RESTORE SUMMARY'S REGISTER           80620001
         DROP  R15                                                      80640001
         USING SMBASE,BASE1                                             80660001
         L     BUFREG,CURBUF       LOAD OUTPUT BUFFER ADDR              80680001
         USING OUTBUF,BUFREG                                            80700001
         BRWRITE 1                 SPACE A LINE                         80720001
         MVC   ADDR(L'TCBSERMS),TCBSERMS MOVE ERROR MSG TO BUFFER       80740001
         BRWRITE 2                 PRINT ERROR MSG AND SPACE 2 LINES    80760001
         B     TCBSM1              CONTINUE WITH NEXT TCB SUMMARY TABLE 80780001
         DROP  BUFREG                                                   80800001
         EJECT                                                          80820001
*********************************************************************** 80840001
*                                                                     * 80860001
*   GET CORE FOR TCB SUMMARY TABLE AND PLACE JOB AND STEP NAMES INTO  * 80880001
*   IT, AND ENQUEUE IT ON TOP OF THE CHAIN.                           * 80900001
*                                                                     * 80920001
*********************************************************************** 80940001
         SPACE                                                          80960001
SMGT     LR    R2,R0               SAVE TJID IN REG 2                   80980001
         LA    R5,XFF              LOAD AND-MASK                        81000001
         NR    R5,PREG             AND FOR MAX TCBCNT OF 255            81020001
         LR    R4,R5               COPY TO R4                           81040001
         MH    R4,C24              MULTIPLY BY 24 (24 BYTES PER TCB     81060001
*                                  ENTRY)                        Y01980 81080001
         LA    R4,28(R4)           ADD 28 BYTES FOR 8 BYTE LINK FIELD,  81100001
*                                   JOB AND STEP NAMES, AND TJID Y01980 81120001
         GETMAIN R,LV=(R4)         GET CORE FOR TABLE                   81140001
         LR    R3,R4               LOAD LENGTH TO R3                    81160001
         LR    R6,R1               SAVE ADDR OF GOTTEN CORE       M1956 81180001
TCBSMG1  CH    R3,H256             IS GOTTEN CORE LN GT 256             81200001
         BNH   TCBSMG2             NO--EXECUTE LAST XC                  81220001
         XC    0(256,R1),0(R1)     ZERO 256 BYTES OF GOTTEN CORE        81240001
         SH    R3,H256             DECR FOR REM LN                      81260001
         AH    R1,H256             INCR ADDR                            81280001
         B     TCBSMG1             LOOP                                 81300001
         SPACE                                                          81320001
TCBSMG2  LTR   R3,R3               IS REMAINING LN ZERO                 81340001
         BZ    TCBSMG3             YES--ALL DONE                        81360001
         BCTR  R3,0                DECR LN 1 FOR EXECUTE                81380001
         EX    R3,TCBSMGX          EX LAST EXCLUSIVE OR                 81400001
TCBSMG3  L     R4,FMTSFPTR         LOAD ADDR OF FIRST TABLE             81420001
         ST    R4,0(R6)            MAKE NEW TABLE FIRST ENTRY IN CHAIN  81440001
         ST    R6,FMTSFPTR                                              81460001
         OC    FMTSLPTR,FMTSLPTR   IS LAST PTR ZERO                     81480001
         BZ    TCBSMG4             BR IF IT IS                          81500001
         ST    R6,4(R4)            STORE BACK LINK PTR INTO TABLE       81520001
         B     TCBSMG5             BR AROUND                            81540001
TCBSMG4  ST    R6,FMTSLPTR         STORE NEW TABLE ADDR AS LAST         81560001
TCBSMG5  STC   R5,0(R6)            STORE NUMBER OF TCBS IN THIS FAMILY  81580001
*                                  INTO FIRST BYTE OF TABLE             81600001
         L     R4,AFMTTL           LOAD ADDR OF FORMAT TITLE            81620001
         MVC   8(8,R6),4(R4)       MOVE JOBNAME TO TABLE                81640001
         MVC   16(8,R6),20(R4)     MOVE STEPNAME TO TABLE               81660001
         STH   R2,24(R6)           STORE TJID IN SUMMARY TABLE          81680001
         B     DONESUM             GO RETURN                            81700001
         SPACE                                                          81720001
*   TO BE EXECUTED                                                      81740001
TCBSMGX  XC    0(0,R1),0(R1)       TO ZERO REMAINDER OF TABLE           81760001
         EJECT                                                          81780001
*********************************************************************** 81800001
*                                                                     * 81820001
*   THIS ROUTINE FREES ALL TCB SUMMARY TABLES                         * 81840001
*                                                                     * 81860001
*********************************************************************** 81880001
         SPACE                                                          81900001
SMFR     DS    0H                                                       81920001
TCBSMF1  L     R3,FMTSFPTR         LOAD PTR TO FIRST TABLE              81940001
         LTR   R3,R3               IS PTR ZERO                          81960001
         BZ    TCBSMF2             YES--ZERO LAST PTR AND RETURN        81980001
         MVC   FMTSFPTR+1(3),1(R3) DELINK THIS TABLE                    82000001
         SR    R4,R4               CLEAR IC REG                         82020001
         IC    R4,0(R3)            LOAD TABLE TCB CNT                   82040001
         MH    R4,C24              MULT BY 24 FOR LNG OF TCB ENTRIES    82060001
*                                                                Y01980 82061001
         LA    R4,28(R4)           ADD LN OF LINK FIELDS & NAMES Y01980 82080001
         FREEMAIN R,LV=(R4),A=(R3) FREE TABLES CORE                     82100001
         B     TCBSMF1             LOOP TO FREE ALL TABLES              82120001
         SPACE                                                          82140001
TCBSMF2  XC    FMTSLPTR,FMTSLPTR   ZERO LAST PTR                        82160001
         B     DONESUM             GO RETURN                            82180001
         EJECT                                                          82200001
*********************************************************************** 82220001
*                                                                     * 82240001
*   CONSTANTS FOR TCB SUMMARY ROUTINES                                * 82260001
*                                                                     * 82280001
*********************************************************************** 82300001
         SPACE                                                          82320001
TCBSMSV  DC    18F'0'              TCB SUMMARY'S SAVE AREA              82340001
TCBSMRG  DC    16F'0'                                                   82360001
TCBSMRG1 DC    F'0'                                                     82380001
TCBSMRG2 DC    F'0'                                                     82400001
TCBSMERS DC    F'0'                SAVE AREA FOR PREV ERROR ROUT ADDR   82420001
AFMTTL   DC    A(FMTITLE)          ADDR OF FORMAT ROUTNES TITLE         82440001
FMTSFPTR DC    F'0'                FIRST TCB SUMMARY TABLE PTR          82460001
FMTSLPTR DC    F'0'                LAST TCB SUMMARY TABLE PTR           82480001
TCBSMCUR DC    F'0'                ADDR OF CURRENT SUMMARY TABLE        82500001
H256     DC    H'256'                                                   82520001
C24      DC    H'24'               LENGTH OF TCB ENTRIES         Y01980 82521001
         SPACE                                                          82540001
*   PATTERN FOR JOB AND STEP NAMES                                      82560001
TCBSPT1  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC,DTAE),3,8,0,5,(TCBSMID1),(TCBSX82580001
               PT1A,0)                                                  82600001
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,15,20,,,LAST                   82620001
         SPACE                                                          82640001
*   PATTERN FOR JOBNAME, STEPNAME AND TJID                              82660001
TCBSPT4  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC,DTAE),3,8,0,5,(TCBSMID1),(TCBSX82680001
               PT4A,0)                                                  82700001
         FMTPTRN (LBL,DTA,DTAC,DTAE),4,8,15,20                          82720001
         FMTPTRN (LBL,DTA,DTAC),4,2,30,35,,,LAST                        82740001
         SPACE                                                          82760001
*   PATTERN FOR TCB ENTRY FOR AOS/2 AND MFT WITH ATTACH OPTION          82780001
TCBSPT2  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),3,3,5,9,(TCBSMID2),(TCBSPT2A,X82800001
               0)                                                       82820001
         FMTPTRN (LBL,DTA,DTAC),3,4,19,23                        Y01980 82840001
         FMTPTRN (LBL,DTA,DTAC),3,4,34,38                        Y01980 82860001
         FMTPTRN (LBL,DTA,DTAC),3,4,49,53                        Y01980 82880001
         FMTPTRN (LBL,DTA,DTAC),3,4,64,68                        Y01980 82900001
         FMTPTRN (LBL,DTA,DTAP,DTAC),3,1,79,83,,(TCBSPT2E,0)     Y01980 82901001
         FMTPTRN (LBL,DTA,DTAP,DTAC,DTAE),4,4,88,93,,(TCBSPT2D,0),LAST  82920001
*                                                                Y01980 82921001
         SPACE                                                          82940001
*   PATTERN FOR TCB ENTRY FOR PCP AND MFT W/0 ATTACH OPTION             82960001
TCBSPT3  FMTPTRN (LBL,LBLP,DTA,DTAP,DTAC),3,3,5,9,(TCBSMID2),(TCBSPT3A,X82980001
               0)                                                       83000001
         FMTPTRN (LBL,DTA,DTAP),3,4,19,23,,(TCBSPT3B,0)                 83020001
         FMTPTRN (LBL,LBLP,DTA,DTAC,DTAP,DTAE),4,4,34,39,(TCBSMID3),(TCX83040001
               BSPT3D,0),LAST                                           83060001
         SPACE                                                          83080001
TCBSMID1 DC    C'JOBSTEPTJID'                                           83100001
TCBSMID2 DC    C'TCBCMPNTCOTCLTCTID'                             Y01980 83120001
TCBSMID3 DC    C'PAGE'                                                  83140001
TCBSMTTL DC    C'* * * *    T C B  S U M M A R Y    * * * *'            83160001
TCBSERMS DC    C'FORMAT ERROR DURING TCB SUMMARY'                       83180001
TSMPCH   DC    13F'0'              PATCH AREA                    X01980 83200001
         SPACE                                                          83220001
         DROP  BASE1,COMBASE                                            83240001
         END                                                            83260001
