         TITLE 'AMDPRLOD - WORK FILE LOAD ROUTINE                      *00001000
                        '                                               00002000
AMDPRLOD CSECT ,                                                   0001 00003000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00004000
         BALR  @11,0                                               0001 00005000
@PSTART  DS    0H                                                  0001 00006000
         USING @PSTART,@11                                         0001 00007000
         ST    @13,@SA00001+4                                      0001 00008000
         LA    @14,@SA00001                                        0001 00009000
         ST    @14,8(,@13)                                         0001 00010000
         LR    @13,@14                                             0001 00011000
    DCBD  DSORG=BS,DEVD=(DA,TA)                                         00012000
AMDPRLOD  CSECT                                                         00013000
    USING  IHADCB,R3                                                    00014000
*                                      Y02006                        */ 00015000
*   SWITCHES=BYTEOFF;               /* RESET ALL SWITCHES X01980     */ 00016000
         MVI   SWITCHES,X'00'                                      0081 00017000
*   STOPSAVE=STOPEXIT;              /* SAVE CALLER'S STOP ROUTINE  0082 00018000
*                                      ADDR                          */ 00019000
         MVC   STOPSAVE(4),STOPEXIT(COMPTR)                        0082 00020000
*   STOPEXIT=ADDR(STPRTN);          /* ESTABLISH LOD STOP EXIT       */ 00021000
         LA    @10,STPRTN                                          0083 00022000
         ST    @10,STOPEXIT(,COMPTR)                               0083 00023000
*   QUT1LOD=SWITCHON;               /* INDICATE LOD BUILDING MAPS FOR   00024000
*                                      SYSUT1 Y02006                 */ 00025000
         OI    QUT1LOD(COMPTR),B'00000010'                         0084 00026000
*   IF QSYSUT2=SWITCHON THEN        /* IS THIS CALL IN ORDER TO    0085 00027000
*                                      TRANSFER DUMP TO SYSUT2 Y02006*/ 00028000
         TM    QSYSUT2(COMPTR),B'00000100'                         0085 00029000
         BNO   @RF00085                                            0085 00030000
*     DO;                                                          0086 00031000
*       SYSUT(6)='2';               /* YES--MAKE DDNAME 'SYSUT2'   0087 00032000
*                                      Y02006                        */ 00033000
         MVI   SYSUT+5,C'2'                                        0087 00034000
*       LOADMODE=SWITCHON;          /* INDICATE THAT THIS IS LOAD  0088 00035000
*                                      MODE Y02006                   */ 00036000
         OI    LOADMODE,B'10000000'                                0088 00037000
*       RESPECIFY                                                  0089 00038000
*        (REG0,                                                    0089 00039000
*         REG1) RESTRICTED;         /* RESTRICT REGISTERS Y02006     */ 00040000
*       REG0=BUFFSIZE+LENGTH(BUFFMAP);/* SET GETMAIN SIZE      Y02006*/ 00041000
         LH    REG0,@CH00643                                       0090 00042000
*       GEN(GETMAIN R,LV=(0));      /* ISSUE GETMAIN FOR ONE BUFFER     00043000
*                                      AND ONE BUFFER M AP ENTRY   0091 00044000
*                                      Y02006                        */ 00045000
         GETMAIN R,LV=(0)                                               00046000
*       PARMPTR=REG1;               /* SET POINTER TO BUFFER MAP   0092 00047000
*                                      ENTRY Y02006                  */ 00048000
         LR    PARMPTR,REG1                                        0092 00049000
*       RESPECIFY                                                  0093 00050000
*        (REG0,                                                    0093 00051000
*         REG1) UNRESTRICTED;       /* UNRESTRICT REGISTERS Y02006   */ 00052000
*       BUFFLINK=0;                 /* INITIALIZE BUFFER MAP ENTRY,     00053000
*                                      INDICATE NO MORE ENTRIES    0094 00054000
*                                      Y02006                        */ 00055000
         SLR   @10,@10                                             0094 00056000
         ST    @10,BUFFLINK(,PARMPTR)                              0094 00057000
*       BUFFPTR=PARMPTR+LENGTH(BUFFMAP);/* SET POINTER TO BUFFER   0095 00058000
*                                      Y02006                        */ 00059000
         LA    @10,20                                              0095 00060000
         ALR   @10,PARMPTR                                         0095 00061000
         STCM  @10,7,BUFFPTR(PARMPTR)                              0095 00062000
*       GO TO OPENUP;               /* NOW GO PROCESS DUMP Y02006    */ 00063000
         B     OPENUP                                              0096 00064000
*     END;                                                         0097 00065000
*   PARMPTR=BUFERMAP;               /* SET POINTER TO FIRST BUFFER 0098 00066000
*                                      Y02006                        */ 00067000
@RF00085 L     PARMPTR,BUFERMAP(,COMPTR)                           0098 00068000
*   SYSUT(6)='1';                   /* MAKE DDNAME 'SYSUT1' Y02006   */ 00069000
         MVI   SYSUT+5,C'1'                                        0099 00070000
*   REG3=ADDR(SYSUDCB);             /* SET ADDRESS OF OUTPUT DCB   0100 00071000
*                                      Y02006                        */ 00072000
         LA    REG3,SYSUDCB                                        0100 00073000
*   DCBEXLST(2:4)=ADDR(EXITLST2);   /* ENABLE DCB ABEND EXIT Y02006  */ 00074000
         LA    @10,EXITLST2                                        0101 00075000
         STCM  @10,7,DCBEXLST+1                                    0101 00076000
*   IF ENDSW=SWITCHON THEN          /* IS AN END CARD BEING PROCESSED   00077000
*                                      Y02006                        */ 00078000
         TM    ENDSW(COMPTR),B'00001000'                           0102 00079000
         BO    @RT00102                                            0102 00080000
*     GO TO LODEXIT;                /* YES--THEN EXIT SINCE PRDMP  0103 00081000
*                                      WILL TERMINATE Y02006         */ 00082000
*/********************************************************************/ 00083000
*/*                                                                  */ 00084000
*/*  OPEN WORK FILE DCB.  BEFORE OPENNING INPUT DCB, THE JFCB IS     */ 00085000
*/*  READ.  THIS IS DONE TO PROCESS ANY FILE SEQUENCE NUMBER         */ 00086000
*/*  SPECIFIED VIA NEWDUMP.  IF FILE SEQUENCE IS ALREADY SPECIFIED IN*/ 00087000
*/*  THE JFCB, THIS VALUE IS NOT CHANGED.                            */ 00088000
*/*                                                                  */ 00089000
*/********************************************************************/ 00090000
*                                                                  0104 00091000
*OPENUP:                                                           0104 00092000
*   REG3=ADDR(SYSUDCB);             /* POINT TO WORK FILE DCB        */ 00093000
OPENUP   LA    REG3,SYSUDCB                                        0104 00094000
*   ASYSUDCB=REG3;                  /* RECORD ADDR IN COMMON CSECT   */ 00095000
         STCM  REG3,7,ASYSUDCB(COMPTR)                             0105 00096000
*   DCBDDNAM=SYSUT;                 /* SET UP DDNAME                 */ 00097000
         MVC   DCBDDNAM(8),SYSUT                                   0106 00098000
*   GEN(OPEN ((R3),OUTPUT));        /* OPEN WORK FILE                */ 00099000
         OPEN ((R3),OUTPUT)                                             00100000
*   REG3=ADDR(INDCB);               /* POINT TO INPUT DCB            */ 00101000
         LA    REG3,INDCB                                          0108 00102000
*   DCBDDNAM=INDD;                  /* GET SPECIFIED DDNAME          */ 00103000
         MVC   DCBDDNAM(8),INDD(COMPTR)                            0109 00104000
*   GEN;                                                           0110 00105000
*                                                                  0110 00106000
         RDJFCB  MF=(E,DCBLST)     READ JFCB TO SPECIFY                 00107000
*                                  PARTICULAR FILE                      00108000
*   /*****************************************************************/ 00109000
*   /*                                                               */ 00110000
*   /* CHANGE DD-SPECIFIED FILE SEQUENCE NUMBER USING FILE SEQUENCE  */ 00111000
*   /* NUMBER IN COMMON OBTAINED FROM A NEWDUMP CONTROL STATEMENT    */ 00112000
*   /*                                                               */ 00113000
*   /*****************************************************************/ 00114000
*                                                                  0111 00115000
*   IF FILESEQ^=0 THEN                                             0111 00116000
         LH    @10,FILESEQ(,COMPTR)                                0111 00117000
         LTR   @10,@10                                             0111 00118000
         BZ    @RF00111                                            0111 00119000
*     DO;                           /* X01980                        */ 00120000
*       JFCBFLSQ=FILESEQ;           /* GET DESIRED FILE SEQUENCE   0113 00121000
*                                      NUMBER FROM COMMON CSECT      */ 00122000
         LA    @07,JFCBBUF                                         0113 00123000
         STH   @10,JFCBFLSQ+68(,@07)                               0113 00124000
*       JFCBMASK(33)='0'B;          /* SUPRESS WRITING JFCB BACK TO     00125000
*                                      JOB QUEUE                     */ 00126000
         NI    JFCBMASK+76(@07),B'01111111'                        0114 00127000
*       JFCBTSDM='08'X;                                            0115 00128000
         MVI   JFCBTSDM+52(@07),X'08'                              0115 00129000
*     END;                                                         0116 00130000
*                                                                  0116 00131000
*/********************************************************************/ 00132000
*/*   TEST FOR INPUT FROM SYS1.DUMP ON D/A.  IF SO, OPEN FOR  A49127 */ 00133000
*/*   INOUT SO THAT SYS1.DUMP DATA SET CAN BE RESET TO ALLOW  A49127 */ 00134000
*/*   MORE DUMPS.  IF SYS1.DUMP IS DATE PROTECTED, 'U' MUST   A49127 */ 00135000
*/*   BE REPLIED TO SYSTEM MESSAGE IEC107D.                   A49127 */ 00136000
*/********************************************************************/ 00137000
*                                                                  0117 00138000
*   IF LOADMODE=SWITCHON&TREADIN=SWTCHOFF&JFCBDSNM(1:10)=SYSDUMP&  0117 00139000
*       JFCBDSNM(11)>='0'&JFCBDSNM(11)<='9'&JFCBDSNM(12:19)=BLANKS THEN 00140000
@RF00111 TM    LOADMODE,B'10000000'                                0117 00141000
         BNO   @RF00117                                            0117 00142000
         TM    TREADIN(COMPTR),B'00010000'                         0117 00143000
         BNZ   @RF00117                                            0117 00144000
         LA    @10,JFCBBUF                                         0117 00145000
         CLC   JFCBDSNM(10,@10),SYSDUMP                            0117 00146000
         BNE   @RF00117                                            0117 00147000
         CLI   JFCBDSNM+10(@10),C'0'                               0117 00148000
         BL    @RF00117                                            0117 00149000
         CLI   JFCBDSNM+10(@10),C'9'                               0117 00150000
         BH    @RF00117                                            0117 00151000
         CLC   JFCBDSNM+11(8,@10),BLANKS(COMPTR)                   0117 00152000
         BNE   @RF00117                                            0117 00153000
*                                   /* IS SYS1.DUMP0X ON DA AND BEING   00154000
*                                      COPIED TO SYSUT2 Y02006       */ 00155000
*     DO;                                                          0118 00156000
*       SYS1SW=SWITCHON;            /* YES--SET A SWITCH AND Y02006  */ 00157000
         OI    SYS1SW,B'00000100'                                  0119 00158000
*       GEN(OPEN (,(INOUT)),MF=(E,DCBLST),TYPE=J);/* A49127          */ 00159000
         OPEN (,(INOUT)),MF=(E,DCBLST),TYPE=J                           00160000
*     END;                                                         0121 00161000
*                                                                  0121 00162000
*/*   NOT SYS1.DUMP, OPEN INPUT DCB INDICATING JFCB IS INCORE A49127 */ 00163000
*                                                                  0122 00164000
*   ELSE                                                           0122 00165000
*     GEN(OPEN (,(INPUT)),MF=(E,DCBLST),TYPE=J);/* Y02006            */ 00166000
         B     @RC00117                                            0122 00167000
@RF00117 DS    0H                                                  0122 00168000
         OPEN (,(INPUT)),MF=(E,DCBLST),TYPE=J                           00169000
*   POSTIPL=0;                      /* INITIALIZE COUNT OF RECORDS 0123 00170000
*                                      BEFORE HEADER Y02006          */ 00171000
@RC00117 SLR   @08,@08                                             0123 00172000
         STH   @08,POSTIPL                                         0123 00173000
*   AINDCB=REG3;                    /* SAVE INPUT DCB ADDR IN COMMON    00174000
*                                      Y02006                        */ 00175000
         ST    REG3,AINDCB(,COMPTR)                                0124 00176000
*   SCANSW=SWITCHON;                /* INDICATE GOING INTO SCAN    0125 00177000
*                                      Y02006                        */ 00178000
         OI    SCANSW,B'01000000'                                  0125 00179000
*   CURVOL=0;                       /* INIT VOLU SEQ FOR MAP ENTRY 0126 00180000
*                                      Y01980                        */ 00181000
         MVI   CURVOL,X'00'                                        0126 00182000
*   CURASID=INITASID;               /* INITIALIZE CURRENT ASID Y02006*/ 00183000
         MVC   CURASID(2),@CB00054                                 0127 00184000
*   CURADDR=INITADDR;               /* INITIALIZE CURRENT ADDRESS  0128 00185000
*                                      Y02006                        */ 00186000
         MVC   CURADDR(4),@CB00056                                 0128 00187000
*   SVCTTR=0;                       /* INDICATE NO SVC BUFFER Y02006 */ 00188000
         ST    @08,SVCTTR                                          0129 00189000
*   RESPECIFY                                                      0130 00190000
*    (REG0,                                                        0130 00191000
*     REG1) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00192000
*   REG0=BUFFSIZE;                  /* SET SIZE OF RECORD Y02006     */ 00193000
         LH    REG0,@CH00039                                       0131 00194000
*   GEN(GETMAIN R,LV=(0));          /* GET STORAGE FOR SVC BUFFER  0132 00195000
*                                      Y02006                        */ 00196000
         GETMAIN R,LV=(0)                                               00197000
*   SVCBUFAD=REG1;                  /* SAVE ADDRESS OF BUFFER Y02006 */ 00198000
         LR    SVCBUFAD,REG1                                       0133 00199000
*   RESPECIFY                                                      0134 00200000
*    (REG0,                                                        0134 00201000
*     REG1) UNRESTRICTED;           /* RELEASE REGISTERS Y02006      */ 00202000
*   TREADIN=SWTCHOFF;               /* INDICATE MAPS BEING BUILT FOR    00203000
*                                      A DA DATA SET Y02006          */ 00204000
         NI    TREADIN(COMPTR),B'11101111'                         0135 00205000
*   MAPPTR=0;                       /* INITIALIZE FOR PLS          0136 00206000
*                                      OPTIMIZATION Y02006           */ 00207000
         SLR   MAPPTR,MAPPTR                                       0136 00208000
*   LASTMAP=0;                      /* AS ABOVE Y02006               */ 00209000
         SLR   @08,@08                                             0137 00210000
         ST    @08,LASTMAP                                         0137 00211000
*   CURMAP=0;                       /* AS ABOVE Y02006               */ 00212000
         SLR   CURMAP,CURMAP                                       0138 00213000
*   LASTIVOL=0;                     /* AS ABOVE Y02006               */ 00214000
         STH   @08,LASTIVOL                                        0139 00215000
*/********************************************************************/ 00216000
*/*                                                                  */ 00217000
*/*           PURGE ANY EXISTING DUMP MAPS, AND                      */ 00218000
*/*           THE ASID INDEX, IF IT EXISTS.                          */ 00219000
*/*                                                                  */ 00220000
*/********************************************************************/ 00221000
*                                                                  0140 00222000
*DUMPMAP:                                                          0140 00223000
*   IF REALMAP^=0 THEN              /* IS THERE A REAL MAP Y02006    */ 00224000
DUMPMAP  L     @08,REALMAP(,COMPTR)                                0140 00225000
         LTR   @08,@08                                             0140 00226000
         BZ    @RF00140                                            0140 00227000
*     DO;                           /* YES                           */ 00228000
*       MAPPTR=REALMAP;             /* POINT TO REAL MAP             */ 00229000
         LR    MAPPTR,@08                                          0142 00230000
*       CALL MAPPRG;                /* PURGE REAL MAP ENTRIES        */ 00231000
         BAL   @14,MAPPRG                                          0143 00232000
*       REALMAP=0;                  /* SET REALMAP PTR IN COMMON TO 0*/ 00233000
         SLR   @08,@08                                             0144 00234000
         ST    @08,REALMAP(,COMPTR)                                0144 00235000
*     END;                                                         0145 00236000
*   IF CPUMAP^=0 THEN               /* IS THERE A CPU MAP Y02006     */ 00237000
@RF00140 L     @08,CPUMAP(,COMPTR)                                 0146 00238000
         LTR   @08,@08                                             0146 00239000
         BZ    @RF00146                                            0146 00240000
*     DO;                           /* YES                           */ 00241000
*       MAPPTR=CPUMAP;              /* POINT TO CPU MAP Y02006       */ 00242000
         LR    MAPPTR,@08                                          0148 00243000
*       CALL MAPPRG;                /* PURGE CPU MAP ENTRIES         */ 00244000
         BAL   @14,MAPPRG                                          0149 00245000
*       CPUMAP=0;                   /* SET CPUMAP PTR IN COMMON TO 0    00246000
*                                      Y02006                        */ 00247000
         SLR   @08,@08                                             0150 00248000
         ST    @08,CPUMAP(,COMPTR)                                 0150 00249000
*     END;                                                         0151 00250000
*   INDXADDR=ASIDNDX;               /* SET PTR TO FIRST ASID INDEX 0152 00251000
*                                      Y02006                        */ 00252000
@RF00146 MVC   INDXADDR(4),ASIDNDX(COMPTR)                         0152 00253000
*   ASIDNDX=0;                      /* SET ASID INDEX PTR IN COMMON     00254000
*                                      TO ZERO Y02006                */ 00255000
         SLR   @08,@08                                             0153 00256000
         ST    @08,ASIDNDX(,COMPTR)                                0153 00257000
*CHKASID:                                                          0154 00258000
*   IF INDXADDR=0 THEN              /* ASID INDEX EXIST Y02006       */ 00259000
CHKASID  ICM   @08,15,INDXADDR                                     0154 00260000
         BZ    @RT00154                                            0154 00261000
*     GO TO SCAN;                   /* NO - BEGIN MAP BUILD PROCESS     00262000
*                                      Y02006                        */ 00263000
*   DO I=1 TO ASIDCNT;                                             0156 00264000
         LA    I,1                                                 0156 00265000
@DL00156 DS    0H                                                  0157 00266000
*     MAPPTR=ASDXMAP(I);            /* POINT TO FIRST DUMPMAP ENTRY     00267000
*                                      Y02006                        */ 00268000
         LR    @08,I                                               0157 00269000
         SLA   @08,2                                               0157 00270000
         L     @05,INDXADDR                                        0157 00271000
         L     MAPPTR,ASDXMAP-4(@08,@05)                           0157 00272000
*     IF MAPPTR^=0 THEN             /* ANY MAP TO PURGE Y02006       */ 00273000
         LTR   MAPPTR,MAPPTR                                       0158 00274000
         BZ    @RF00158                                            0158 00275000
*       CALL MAPPRG;                /* PURGE VIRTUAL DUMP MAP ENTRIES*/ 00276000
         BAL   @14,MAPPRG                                          0159 00277000
*   END;                                                           0160 00278000
@RF00158 AH    I,@CH00043                                          0160 00279000
         CH    I,@CH00064                                          0160 00280000
         BNH   @DL00156                                            0160 00281000
*   RESPECIFY                                                      0161 00282000
*    (REG0,                                                        0161 00283000
*     REG1) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00284000
*   REG0=LENGTH(ASIDLIST);          /* SIZE OF ASID INDEX Y02006     */ 00285000
         LA    REG0,112                                            0162 00286000
*   REG1=INDXADDR;                  /* ADDRESS OF ASID INDEX Y02006  */ 00287000
         L     @08,INDXADDR                                        0163 00288000
         LR    REG1,@08                                            0163 00289000
*   INDXADDR=ASDXLNK;               /* SAVE PTR TO NEXT ASID INDEX 0164 00290000
*                                      Y02006                        */ 00291000
         L     @08,ASDXLNK(,@08)                                   0164 00292000
         ST    @08,INDXADDR                                        0164 00293000
*   GENERATE(FREEMAIN R,LV=(0),A=(1));/* FREE ASID INDEX Y02006      */ 00294000
         FREEMAIN R,LV=(0),A=(1)                                        00295000
*   RESPECIFY                                                      0166 00296000
*    (REG0,                                                        0166 00297000
*     REG1) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 00298000
*   GO TO CHKASID;                  /* LOOP TO FREE ALL ASID INDESES    00299000
*                                      Y02006                        */ 00300000
         B     CHKASID                                             0167 00301000
*                                                                  0168 00302000
*/********************************************************************/ 00303000
*/*                                                                  */ 00304000
*/*           MAP PURGE ROUTINE -                                    */ 00305000
*/*                                                                  */ 00306000
*/*                   PURGE MAP BEGINNING WITH CURRENT               */ 00307000
*/*                   ENTRY, FOLLOWING LINK FIELD TILL               */ 00308000
*/*                   END OF MAP. MAPPTR IS INPUT,                   */ 00309000
*/*                   POINTING TO THE FIRST MAP ENTRY TO             */ 00310000
*/*                   BE PURGED.                                     */ 00311000
*/*                                                                  */ 00312000
*/********************************************************************/ 00313000
*                                                                  0168 00314000
*MAPPRG:                                                           0168 00315000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0168 00316000
MAPPRG   DS    0H                                                  0169 00317000
*   N1=1;                           /* SET LOOP CONTROL TO NON-ZERO  */ 00318000
         LA    N1,1                                                0169 00319000
*   DO WHILE(N1^=0);                /* LOOP TO FREE EACH ENTRY Y02006*/ 00320000
         B     @DE00170                                            0170 00321000
@DL00170 DS    0H                                                  0171 00322000
*     N1=DUMPLINK;                  /* NO - SAVE LINK FIELD          */ 00323000
         SLR   N1,N1                                               0171 00324000
         ICM   N1,7,DUMPLINK(MAPPTR)                               0171 00325000
*     RESPECIFY                                                    0172 00326000
*      (REG0,                                                      0172 00327000
*       REG1) RESTRICTED;           /* RESTRICT REGISTERS Y02006     */ 00328000
*     REG1=MAPPTR;                                                 0173 00329000
         LR    REG1,MAPPTR                                         0173 00330000
*     REG0=DUMPFRMS;                /* FREE CURRENT DUMP MAP ENTRY   */ 00331000
         LA    REG0,16                                             0174 00332000
*     GENERATE(FREEMAIN R,LV=(0),A=(1));                           0175 00333000
         FREEMAIN R,LV=(0),A=(1)                                        00334000
*     RESPECIFY                                                    0176 00335000
*      (REG0,                                                      0176 00336000
*       REG1) UNRESTRICTED;         /* UNRESTRICT REGISTERS Y02006   */ 00337000
*     MAPPTR=N1;                    /* MAKE NEXT ENTRY CURRENT       */ 00338000
         LR    MAPPTR,N1                                           0177 00339000
*   END;                                                           0178 00340000
@DE00170 LTR   N1,N1                                               0178 00341000
         BNZ   @DL00170                                            0178 00342000
*   END MAPPRG;                     /* RETURN TO CALLER              */ 00343000
@EL00002 DS    0H                                                  0179 00344000
@EF00002 DS    0H                                                  0179 00345000
@ER00002 BR    @14                                                 0179 00346000
*                                                                  0180 00347000
*/********************************************************************/ 00348000
*/*  READ THE INPUT DUMP UNTIL THE HEADER RECORD IS FOUND. THEN      */ 00349000
*/*  SAVE ITS CONTENTS IN COMMON.  IF THE HEADER IS NOT THE FIRST    */ 00350000
*/*  RECORD, SAVE THE RECORD PRECEEDING IT AS THE SVC BUFFER.        */ 00351000
*/********************************************************************/ 00352000
*                                                                  0180 00353000
*SCAN:                                                             0180 00354000
*   CALL READ;                      /* READ FOR HEADER RECORD Y02006 */ 00355000
SCAN     BAL   @14,READ                                            0180 00356000
*   IF HDRSW=SWTCHOFF THEN          /* HAS A HEADER BEEN FOUND Y02006*/ 00357000
         TM    HDRSW,B'00001000'                                   0181 00358000
         BNZ   @RF00181                                            0181 00359000
*     DO;                                                          0182 00360000
*       DO I=1 TO BUFFSIZE-255 BY 256;/* MOVE 256 BYTES AT A TIME  0183 00361000
*                                      (PLS REST RICTION)      Y02006*/ 00362000
         LA    I,1                                                 0183 00363000
@DL00183 DS    0H                                                  0184 00364000
*         SVCBUF(I:I+255)=PRDINPUT(I:I+255);/* SAVE RECORD IN CASE 0184 00365000
*                                      ITS AN SVC BUFFER Y02006      */ 00366000
         LR    @05,SVCBUFAD                                        0184 00367000
         ALR   @05,I                                               0184 00368000
         BCTR  @05,0                                               0184 00369000
         ICM   @02,7,PRDINPTR(PARMPTR)                             0184 00370000
         ALR   @02,I                                               0184 00371000
         BCTR  @02,0                                               0184 00372000
         MVC   SVCBUF(256,@05),PRDINPUT(@02)                       0184 00373000
*       END;                                                       0185 00374000
         AH    I,@CH00392                                          0185 00375000
         CH    I,@CH00644                                          0185 00376000
         BNH   @DL00183                                            0185 00377000
*       IF BUFFSIZE//256^=0 THEN    /* MOVE REMAINDER IF NOT MULTIPLE   00378000
*                                      OF 256 Y0 2006                */ 00379000
*         SVCBUF(BUFFSIZE+1-BUFFSIZE//256:BUFFSIZE)=PRDINPUT(BUFFSIZE+1 00380000
*             -BUFFSIZE//256:BUFFSIZE);/* MOVE DATA Y02006           */ 00381000
         LR    @02,SVCBUFAD                                        0187 00382000
         AL    @02,@CF00041                                        0187 00383000
         ICM   @01,7,PRDINPTR(PARMPTR)                             0187 00384000
         AL    @01,@CF00041                                        0187 00385000
         MVC   SVCBUF(8,@02),PRDINPUT(@01)                         0187 00386000
*       SVCTTR=INTTR;               /* ALSO SAVE THE TTR FOR THE SVC    00387000
*                                      BUFFER Y02006                 */ 00388000
         ST    INTTR,SVCTTR                                        0188 00389000
*       GO TO SCAN;                 /* NOW CONTINUE SCAN FOR HEADER     00390000
*                                      Y02006                        */ 00391000
         B     SCAN                                                0189 00392000
*     END;                                                         0190 00393000
*                                                                  0190 00394000
*/********************************************************************/ 00395000
*/*                                                                  */ 00396000
*/*  PROCESS HEADER RECORD.                                          */ 00397000
*/*                                                                  */ 00398000
*/********************************************************************/ 00399000
*                                                                  0191 00400000
*   POSITSW=SWTCHOFF;               /* INDICATE POSIT WENT OK Y02006 */ 00401000
@RF00181 NI    POSITSW(COMPTR),B'11011111'                         0191 00402000
*   SCANSW=SWTCHOFF;                /* SCAN COMPLETE Y02006          */ 00403000
         NI    SCANSW,B'10111111'                                  0192 00404000
*   QASID=PRDASID;                  /* MOVE COMMON HEADER DATA TO  0193 00405000
*                                      COMMON Y02006                 */ 00406000
         ICM   @02,7,PRDINPTR(PARMPTR)                             0193 00407000
         MVC   QASID(2,COMPTR),PRDASID(@02)                        0193 00408000
*   IF QASID=ALLFOX2 THEN           /* IS ASID FFFF IN HEADER Y02006 */ 00409000
         CLC   QASID(2,COMPTR),@CB00058                            0194 00410000
         BNE   @RF00194                                            0194 00411000
*     QASID=0;                      /* YES-THEN CHANGE IT TO ZERO FOR   00412000
*                                      USE BY AMDPRRDC Y02006        */ 00413000
         SLR   @02,@02                                             0195 00414000
         STH   @02,QASID(,COMPTR)                                  0195 00415000
*   TITLEMOD(8:15)=PRDMODNM;        /* MODULE NAME Y02006            */ 00416000
@RF00194 SLR   @02,@02                                             0196 00417000
         ICM   @02,7,PRDINPTR(PARMPTR)                             0196 00418000
         MVC   TITLEMOD+7(8,COMPTR),PRDMODNM(@02)                  0196 00419000
*   TITLETME(6:13)=PRDTODVL;        /* TIME OF DAY Y02006            */ 00420000
         MVC   TITLETME+5(8,COMPTR),PRDTODVL(@02)                  0197 00421000
*   HDRTITLE=PRDTITLE;              /* USER TITLE SUPPLIED AT DUMP 0198 00422000
*                                      TIME Y02006                   */ 00423000
         MVC   HDRTITLE(100,COMPTR),PRDTITLE(@02)                  0198 00424000
*   IF PRDMODNM=SADMP THEN          /* IS THIS AMDSADMP INPUT Y02006 */ 00425000
         CLC   PRDMODNM(8,@02),@CC00062                            0199 00426000
         BNE   @RF00199                                            0199 00427000
*     DO;                           /* YES                           */ 00428000
*       SACSWCAW(1:8)=PRDCSW;       /* SAVE CSW FROM HEADER Y02006   */ 00429000
         MVC   SACSWCAW(8,COMPTR),PRDCSW(@02)                      0201 00430000
*       SACSWCAW(9:12)=PRDCAW;      /* SAVE CAW FROM HEADER Y02006   */ 00431000
         MVC   SACSWCAW+8(4,COMPTR),PRDCAW(@02)                    0202 00432000
*       QSADMP=SWITCHON;            /* SET SWITCH TO INDICATE      0203 00433000
*                                      AMDSADMP Y02006               */ 00434000
         OI    QSADMP(COMPTR),B'00100000'                          0203 00435000
*       GO TO WRITEHDR;             /* GO READ NEXT RECORD Y02006    */ 00436000
         B     WRITEHDR                                            0204 00437000
*     END;                                                         0205 00438000
*   ELSE                            /* UZ81700                       */ 00439000
*     DO;                           /* LOOK FOR SVC DUMP UZ81700     */ 00440000
@RF00199 DS    0H                                                  0207 00441000
*       Z9ERRID(1:10)=PRDERRID;     /* SAVE ERR ID UZ81700           */ 00442000
         ICM   @02,7,PRDINPTR(PARMPTR)                             0207 00443000
         MVC   Z9ERRID(10,COMPTR),PRDERRID(@02)                    0207 00444000
*       IF Z9ERRID(1:10)='00000000000000000000'X THEN/* NO ERRID   0208 00445000
*                                      UZ81700                       */ 00446000
         CLC   Z9ERRID(10,COMPTR),@CB00568                         0208 00447000
         BNE   @RF00208                                            0208 00448000
*         Z9ERRID(1:1)='FE'X;       /* INDICATE SO UZ81700           */ 00449000
         MVI   Z9ERRID(COMPTR),X'FE'                               0209 00450000
*     END;                          /* UZ81700                       */ 00451000
@RF00208 DS    0H                                                  0211 00452000
*   HDRREGS=PRDREGS;                /* MOVE ALL REGS (FL PT, GEN,  0211 00453000
*                                      CTL) AND CURRENT PSW Y02006   */ 00454000
         SLR   @02,@02                                             0211 00455000
         ICM   @02,7,PRDINPTR(PARMPTR)                             0211 00456000
         MVC   HDRREGS(168,COMPTR),PRDREGS(@02)                    0211 00457000
*   IF SETCVTSW=SWTCHOFF THEN       /* HAS A CVT= CARD BEEN READ   0212 00458000
*                                      Y02006                        */ 00459000
         TM    SETCVTSW(COMPTR),B'00000010'                        0212 00460000
         BNZ   @RF00212                                            0212 00461000
*     CVTADDR=PRDCVT;               /* NO--THEN SET CVT ADDR FROM  0213 00462000
*                                      HEADER Y02006                 */ 00463000
         MVC   CVTADDR(4,COMPTR),PRDCVT(@02)                       0213 00464000
*/********************************************************************/ 00465000
*/*                                                                  */ 00466000
*/*  WRITE HEADER RECORD TO WORK FILE AS WELL AS SVC BUFFER          */ 00467000
*/*  IF PRESENT.                                                     */ 00468000
*/*                                                                  */ 00469000
*/********************************************************************/ 00470000
*                                                                  0214 00471000
*WRITEHDR:                                                         0214 00472000
*   CALL WRITE;                     /* WRITE HEADER TO WORK FILE   0214 00473000
*                                      Y02006                        */ 00474000
@RF00212 DS    0H                                                  0214 00475000
WRITEHDR BAL   @14,WRITE                                           0214 00476000
*   IF SVCTTR^=0 THEN               /* IS THERE AN SVC BUFFER Y02006 */ 00477000
         ICM   @08,15,SVCTTR                                       0215 00478000
         BZ    @RF00215                                            0215 00479000
*     DO;                                                          0216 00480000
*       DO I=1 TO BUFFSIZE-255 BY 256;/* MOVE 256 BYTES AT A TIME  0217 00481000
*                                      (PLS REST RICTION)      Y02006*/ 00482000
         LA    I,1                                                 0217 00483000
@DL00217 DS    0H                                                  0218 00484000
*         PRDINPUT(I:I+255)=SVCBUF(I:I+255);/* MOVE DATA INTO BUFFER    00485000
*                                      CONTAINING HEADER Y02006      */ 00486000
         ICM   @08,7,PRDINPTR(PARMPTR)                             0218 00487000
         ALR   @08,I                                               0218 00488000
         BCTR  @08,0                                               0218 00489000
         LR    @05,SVCBUFAD                                        0218 00490000
         ALR   @05,I                                               0218 00491000
         BCTR  @05,0                                               0218 00492000
         MVC   PRDINPUT(256,@08),SVCBUF(@05)                       0218 00493000
*       END;                                                       0219 00494000
         AH    I,@CH00392                                          0219 00495000
         CH    I,@CH00644                                          0219 00496000
         BNH   @DL00217                                            0219 00497000
*       IF BUFFSIZE//256^=0 THEN    /* MOVE REMAINDER IF NOT MULTIPLE   00498000
*                                      OF 256 Y02006                 */ 00499000
*         PRDINPUT(BUFFSIZE+1-BUFFSIZE//256:BUFFSIZE)=SVCBUF(BUFFSIZE+1 00500000
*             -BUFFSIZE//256:BUFFSIZE);/* MOVE DATA Y02006           */ 00501000
         ICM   @08,7,PRDINPTR(PARMPTR)                             0221 00502000
         AL    @08,@CF00041                                        0221 00503000
         LR    @02,SVCBUFAD                                        0221 00504000
         AL    @02,@CF00041                                        0221 00505000
         MVC   PRDINPUT(8,@08),SVCBUF(@02)                         0221 00506000
*       INTTR=SVCTTR;               /* ALSO RESET THE TTR TO THE SVC    00507000
*                                      BUFFER TTR Y02006             */ 00508000
         L     INTTR,SVCTTR                                        0222 00509000
*       CALL WRITE;                 /* WRITE SVC BUFFER AND MAP IT IF   00510000
*                                      REQUIRED Y02006               */ 00511000
         BAL   @14,WRITE                                           0223 00512000
*     END;                                                         0224 00513000
*   ELSE                                                           0225 00514000
*     BADREC=SWITCHON;              /* INDICATE HEADER STILL IN    0225 00515000
*                                      BUFFER, NEXT RECORD SHOULD  0225 00516000
*                                      OVERLAY IT Y02006             */ 00517000
         B     @RC00215                                            0225 00518000
@RF00215 OI    BADREC,B'00000001'                                  0225 00519000
*                                                                  0226 00520000
*/********************************************************************/ 00521000
*/*                                                                  */ 00522000
*/*  PROCESS DUMP DATA RECORDS.                                      */ 00523000
*/*  ALL REMAINING RECORDS ARE READ THEN WRITTEN UNTIL EOF IS        */ 00524000
*/*  REACHED.  AS THE RECORDS ARE WRITTEN THE DUMP MAP IS BUILT.     */ 00525000
*/*                                                                  */ 00526000
*/********************************************************************/ 00527000
*                                                                  0226 00528000
*READNXT:                                                          0226 00529000
*   CALL READ;                      /* READ A DATA RECORD Y02006     */ 00530000
@RC00215 DS    0H                                                  0226 00531000
READNXT  BAL   @14,READ                                            0226 00532000
*   CALL WRITE;                     /* WRITE GOOD WORK FILE BLOCK  0227 00533000
*                                      Y02006                        */ 00534000
         BAL   @14,WRITE                                           0227 00535000
*   GO TO READNXT;                  /* READ UNTIL EOF X01980         */ 00536000
         B     READNXT                                             0228 00537000
*                                                                  0229 00538000
*/********************************************************************/ 00539000
*/*                                                                  */ 00540000
*/*  THE FOLLOWING IS THE AMDPRLOD EXIT HANDLER.  PROCESSING BY THIS */ 00541000
*/*  ROUTINE INCLUDES FREEING OF BUFFER AREA, RESET SYS1.DUMP DATA   */ 00542000
*/*  SET BY WRITING END-OF-FILE AS FIRST RECORD, CLOSING INPUT AND   */ 00543000
*/*  WORK FILE DCB-S, AND RESTORING CALLER-S ERROR HANDLER.          */ 00544000
*/*                                                                  */ 00545000
*/********************************************************************/ 00546000
*                                                                  0229 00547000
*EOF:                                                              0229 00548000
*   RESPECIFY                                                      0229 00549000
*    (REG0,                                                        0229 00550000
*     REG1) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00551000
EOF      DS    0H                                                  0230 00552000
*   REG1=SVCBUFAD;                  /* SET PTR TO STORAGE TO FREE  0230 00553000
*                                      Y02006                        */ 00554000
         LR    REG1,SVCBUFAD                                       0230 00555000
*   REG0=BUFFSIZE;                  /* SET SIZE TO FREE Y02006       */ 00556000
         LH    REG0,@CH00039                                       0231 00557000
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREE SVC BUFFER Y02006        */ 00558000
         FREEMAIN R,LV=(0),A=(1)                                        00559000
*   RESPECIFY                                                      0233 00560000
*    (REG0,                                                        0233 00561000
*     REG1) UNRESTRICTED;           /* RELEASE REGISTERS Y02006      */ 00562000
*   IF LOADMODE=SWITCHON THEN       /* WAS THIS LOAD MODE Y02006     */ 00563000
         TM    LOADMODE,B'10000000'                                0234 00564000
         BNO   @RF00234                                            0234 00565000
*     DO;                                                          0235 00566000
*       RESPECIFY                                                  0236 00567000
*        (REG0,                                                    0236 00568000
*         REG1) RESTRICTED;         /* RESTRICT REGISTERS Y02006     */ 00569000
*       REG0=BUFFSIZE+LENGTH(BUFFMAP);/* SET SIZE TO FREE      Y02006*/ 00570000
         LH    REG0,@CH00643                                       0237 00571000
*       REG1=PARMPTR;               /* SET POINTER TO BUFFER ENTRY 0238 00572000
*                                      Y02006                        */ 00573000
         LR    REG1,PARMPTR                                        0238 00574000
*       GEN(FREEMAIN R,A=(1),LV=(0));/* FREE INPUT BUFFER AREA Y02006*/ 00575000
         FREEMAIN R,A=(1),LV=(0)                                        00576000
*       RESPECIFY                                                  0240 00577000
*        (REG0,                                                    0240 00578000
*         REG1) UNRESTRICTED;       /* RELEASE REGISTERS Y02006      */ 00579000
*                                                                  0240 00580000
*       /*************************************************************/ 00581000
*       /*                                                           */ 00582000
*       /* IF INPUT WAS FROM SYS1.DUMP, RESET TO ALLOW MORE DUMPS IF */ 00583000
*       /* SYS1.DUMP WAS DATE PROTECTED, RESET OCCURS ONLY IF REPLY  */ 00584000
*       /* TO IEC107D IS 'U' A49127                                  */ 00585000
*       /*                                                           */ 00586000
*       /*************************************************************/ 00587000
*                                                                  0241 00588000
*       IF SYS1SW=SWITCHON THEN     /* IS SYS1.DUMP0X INPUT ON DA  0241 00589000
*                                      Y02006                        */ 00590000
         TM    SYS1SW,B'00000100'                                  0241 00591000
         BNO   @RF00241                                            0241 00592000
*         DO;                       /* M2010                         */ 00593000
*           GEN( CLOSE ((R3),REREAD),TYPE=T);/* REPOSITION TO      0243 00594000
*                                      BEGINNING Y02006              */ 00595000
          CLOSE ((R3),REREAD),TYPE=T                                    00596000
*           OFLWRDCB=SWITCHON;      /* INDICATE LAST OPERATION WAS A    00597000
*                                      WRITE Y02006                  */ 00598000
         OI    OFLWRDCB,B'10000000'                                0244 00599000
*         END;                                                     0245 00600000
*     END;                                                         0246 00601000
@RF00241 DS    0H                                                  0247 00602000
*   IF X37SW=SWITCHON&DMPIC=SWTCHOFF THEN/* IS THE DUMP ON BOTH TAPE    00603000
*                                      AND DA Y02006                 */ 00604000
@RF00234 TM    X37SW,B'00000010'                                   0247 00605000
         BNO   @RF00247                                            0247 00606000
         TM    DMPIC(COMPTR),B'00010000'                           0247 00607000
         BNZ   @RF00247                                            0247 00608000
*     GEN( CLOSE ((R3),REREAD));    /* CLOSE DATA SET AND REPOSITION    00609000
*                                      TO BEGINNING Y02006           */ 00610000
          CLOSE ((R3),REREAD)                                           00611000
*   ELSE                                                           0249 00612000
*     GEN(CLOSE ((R3),DISP));       /* CLOSE DATA SET - NEVER TO USE    00613000
*                                      AGAIN Y02006                  */ 00614000
         B     @RC00247                                            0249 00615000
@RF00247 DS    0H                                                  0249 00616000
         CLOSE ((R3),DISP)                                              00617000
*   REG3=ASYSUDCB;                                                 0250 00618000
@RC00247 SLR   REG3,REG3                                           0250 00619000
         ICM   REG3,7,ASYSUDCB(COMPTR)                             0250 00620000
*   GEN(CLOSE ((R3),REREAD));       /* CLOSE DOWN WORKFILE Y02006    */ 00621000
         CLOSE ((R3),REREAD)                                            00622000
*   AINDCB=0;                       /* CLEAR INDCB ADDRESS AS SIGNAL    00623000
*                                      TO AMDPRCTL THAT THERE IS NO     00624000
*                                      DCB TO BE CLOSED              */ 00625000
         SLR   @10,@10                                             0252 00626000
         ST    @10,AINDCB(,COMPTR)                                 0252 00627000
*   ASYSUDCB=0;                                                    0253 00628000
         STCM  @10,7,ASYSUDCB(COMPTR)                              0253 00629000
*   STOPEXIT=STOPSAVE;              /* RESTORE CALLER'S STOP ROUTINE */ 00630000
         MVC   STOPEXIT(4,COMPTR),STOPSAVE                         0254 00631000
*   IF SCANSW=SWITCHON THEN         /* EOF DURING SCAN IS ERROR    0255 00632000
*                                      CONDITION OR A PREFORMATTED 0255 00633000
*                                      DUMP WAS PROCESSED Y02006     */ 00634000
         TM    SCANSW,B'01000000'                                  0255 00635000
         BNO   @RF00255                                            0255 00636000
*     RETURN CODE(4);               /* RETURN TO RDC TO SEE WHAT CAN    00637000
*                                      BE DONE                       */ 00638000
         LA    @15,4                                               0256 00639000
         L     @13,4(,@13)                                         0256 00640000
         L     @14,12(,@13)                                        0256 00641000
         LM    @00,@12,20(@13)                                     0256 00642000
         BR    @14                                                 0256 00643000
*   IF LOADMODE=SWITCHON THEN       /* IS THIS LOADMODE Y02006       */ 00644000
@RF00255 TM    LOADMODE,B'10000000'                                0257 00645000
         BNO   @RF00257                                            0257 00646000
*     AMD174I(14)='2';              /* X01980                        */ 00647000
         MVI   AMD174I+13,C'2'                                     0258 00648000
*   ELSE                                                           0259 00649000
*     AMD174I(14)='1';              /* X01980                        */ 00650000
         B     @RC00257                                            0259 00651000
@RF00257 MVI   AMD174I+13,C'1'                                     0259 00652000
*   GEN REFS(APRTMSG)(BRPRTMSG AMD174I,22);/* PRINT LOADED MSG Y02006*/ 00653000
@RC00257 DS    0H                                                  0260 00654000
         BRPRTMSG AMD174I,22                                            00655000
*   IF LOADMODE=SWITCHON THEN       /* IS THIS LOAD MODE Y02006      */ 00656000
         TM    LOADMODE,B'10000000'                                0261 00657000
         BNO   @RF00261                                            0261 00658000
*     RETURN CODE(8);               /* YES--RETURN Y02006            */ 00659000
         LA    @15,8                                               0262 00660000
         L     @13,4(,@13)                                         0262 00661000
         L     @14,12(,@13)                                        0262 00662000
         LM    @00,@12,20(@13)                                     0262 00663000
         BR    @14                                                 0262 00664000
*   BUILDMAP=SWTCHOFF;              /* RESET BUILDMAP FOR RDC Y02006 */ 00665000
@RF00261 NI    BUILDMAP(COMPTR),B'11110111'                        0263 00666000
*LODEXIT:                                                          0264 00667000
*   RETURN CODE(0);                 /* CLEAN RETURN Y02006           */ 00668000
LODEXIT  SLR   @15,@15                                             0264 00669000
         L     @13,4(,@13)                                         0264 00670000
         L     @14,12(,@13)                                        0264 00671000
         LM    @00,@12,20(@13)                                     0264 00672000
         BR    @14                                                 0264 00673000
*/********************************************************************/ 00674000
*/*                                                                  */ 00675000
*/*  STOP EXIT ROUTINE. BRANCH HERE IF STOP REQUESTED BY OPERATOR    */ 00676000
*/*                                                                  */ 00677000
*/********************************************************************/ 00678000
*                                                                  0265 00679000
*STPRTN:                                                           0265 00680000
*   GEN;                                                           0265 00681000
STPRTN   DS    0H                                                  0265 00682000
         USING *,R15               TEMPORARILY USE REG 15 AS BASE       00683000
         LA    R13,@SA00001        POINT TO LOD'S SAVE AREA      Y02006 00684000
         LM    R14,R12,12(R13)     RELOAD REGS                          00685000
         DROP  R15                                                      00686000
*   GO TO EOF;                      /* GO TO CLOSE OUT               */ 00687000
         B     EOF                                                 0266 00688000
*                                                                  0267 00689000
*/********************************************************************/ 00690000
*/*                                                                  */ 00691000
*/*  READ SUBROUTINE.  IN ADDITION TO READING RECORDS FROM THE DUMP  */ 00692000
*/*  DATA SET, THE FOLLOWING EXCEPTIONAL CONDITIONS ARE HANDLED-     */ 00693000
*/*                                                                  */ 00694000
*/*       1.  RECORD LENGTH LESS THAN 4104 BUT GREATER THAN          */ 00695000
*/*           133 ARE SKIPPED.  IF 5 RECORDS ARE SKIPPED BEFORE      */ 00696000
*/*           THE HEADER IS FOUND THE DUMP ISREJECTED.               */ 00697000
*/*                                                                  */ 00698000
*/*       2.  RECORD LENGTH LESS THAN 134 BYTES.  THESE RECORDS ARE  */ 00699000
*/*           ASSUMED TO BE A PREFORMATED DUMP AND THEY ARE PRINTED  */ 00700000
*/*           DIRECTLY.                                              */ 00701000
*/*                                                                  */ 00702000
*/*                                                                  */ 00703000
*/********************************************************************/ 00704000
*                                                                  0267 00705000
*READ:                                                             0267 00706000
*   PROC;                                                          0267 00707000
READ     STM   @14,@05,@SA00003                                    0267 00708000
         ST    @07,@SA00003+32                                     0267 00709000
         STM   @09,@12,@SA00003+36                                 0267 00710000
*   SYNADISW=SWTCHOFF;              /* RESET SYNAD INDICATOR Y02006  */ 00711000
         NI    SYNADISW,B'11101111'                                0268 00712000
*   IOERRCNT=0;                     /* INITIALIZE IO ERROR COUNT TO     00713000
*                                      ZERO X01980                   */ 00714000
         SLR   IOERRCNT,IOERRCNT                                   0269 00715000
*IGNORE:                                                           0270 00716000
*   IF BADREC=SWITCHON THEN         /* SHOULD THE LAST RECORD BE   0270 00717000
*                                      OVERLAYED Y02006              */ 00718000
IGNORE   TM    BADREC,B'00000001'                                  0270 00719000
         BO    @RT00270                                            0270 00720000
*     GO TO RESET;                  /* YES--THEN REUSE BUFFER Y02006 */ 00721000
*   IF HDRSW=SWITCHON&BUFFLINK^=0 THEN/* USE NEXT BUFFER ONLY IF A 0272 00722000
*                                      HEADER HAS BEEN READ AND THERE   00723000
*                                      IS ANOTHER BUFFER       Y02006*/ 00724000
         TM    HDRSW,B'00001000'                                   0272 00725000
         BNO   @RF00272                                            0272 00726000
         L     @10,BUFFLINK(,PARMPTR)                              0272 00727000
         LTR   @10,@10                                             0272 00728000
         BZ    @RF00272                                            0272 00729000
*     DO;                                                          0273 00730000
*       PARMPTR=BUFFLINK;           /* SET POINTER TO NEXT BUFFER MAP   00731000
*                                      ENTRY Y02006                  */ 00732000
         LR    PARMPTR,@10                                         0274 00733000
*       IOERR=SWTCHOFF;             /* RESET I/O ERROR SWITCH ONLY ON   00734000
*                                      USE OF A NEW BUFFER (NEEDED 0275 00735000
*                                      FOR CPU RECS) Y02006          */ 00736000
         NI    IOERR(COMPTR),B'01111111'                           0275 00737000
*     END;                                                         0276 00738000
*   ELSE                                                           0277 00739000
*     DO;                                                          0277 00740000
         B     @RC00272                                            0277 00741000
@RF00272 DS    0H                                                  0278 00742000
*       DMPIC=SWTCHOFF;             /* INDICATE DUMP DOES NOT FIT  0278 00743000
*                                      INTO ALL THE BUFFERS          */ 00744000
         NI    DMPIC(COMPTR),B'11101111'                           0278 00745000
*RESET:                                                            0279 00746000
*       BUFFREAL=ALLFOX;            /* RESET REAL ADDRESS Y02006     */ 00747000
RESET    SLR   @10,@10                                             0279 00748000
         BCTR  @10,0                                               0279 00749000
         ST    @10,BUFFREAL(,PARMPTR)                              0279 00750000
*       BUFFVIRT=ALLFOX;            /* RESET VIRTUAL ADDRESS Y02006  */ 00751000
         ST    @10,BUFFVIRT(,PARMPTR)                              0280 00752000
*       BUFFASID=ALLFOX2;           /* RESET ASID Y02006             */ 00753000
         MVC   BUFFASID(2,PARMPTR),@CB00058                        0281 00754000
*       BUFFCPU=ALLFOX2;            /* RESET CPU ADDRESS Y02006      */ 00755000
         MVC   BUFFCPU(2,PARMPTR),@CH00058                         0282 00756000
*       BUFFFLAG=BYTEOFF;           /* RESET FLAGS Y02006            */ 00757000
         MVI   BUFFFLAG(PARMPTR),X'00'                             0283 00758000
*     END;                          /* NOW REUSE THE SAME BUFFER   0284 00759000
*                                      Y02006                        */ 00760000
*IGNORE1:                                                          0285 00761000
*   RESPECIFY                                                      0285 00762000
*    (REG1,                                                        0285 00763000
*     REG2) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00764000
@RC00272 DS    0H                                                  0285 00765000
IGNORE1  DS    0H                                                  0286 00766000
*   REG2=BUFFPTR;                   /* SET REG FOR INPUT AREA Y02006 */ 00767000
         SLR   REG2,REG2                                           0286 00768000
         ICM   REG2,7,BUFFPTR(PARMPTR)                             0286 00769000
*   GEN FLOWS(TAPEER);                                             0287 00770000
*                                   /* Y02006                        */ 00771000
    READ RDDECB,SF,(R3),(R2),'S'    /* Y02006                        */ 00772000
    CHECK RDDECB                                                        00773000
    NOTE (R3)                       /* Y02006                        */ 00774000
*TERRET:                                                           0288 00775000
*   INTTR=REG1;                     /* SAVE NOTED POSITION Y02006    */ 00776000
TERRET   LR    INTTR,REG1                                          0288 00777000
*   RESPECIFY                                                      0289 00778000
*    (REG1,                                                        0289 00779000
*     REG2) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 00780000
*   LASTIVOL=CURIVOL;               /* SAVE LAST VOLUME NUMBER Y02006*/ 00781000
         LH    @10,CURIVOL                                         0290 00782000
         STH   @10,LASTIVOL                                        0290 00783000
*   IF INTTR=FIRSTTR THEN           /* HAS A VOLUME SWITCH OCURRED 0291 00784000
*                                      Y02006                        */ 00785000
         C     INTTR,FIRSTTR                                       0291 00786000
         BNE   @RF00291                                            0291 00787000
*     CURIVOL=CURIVOL+1;            /* YES--INCREMENT VOLUME COUNT 0292 00788000
*                                      Y02006                        */ 00789000
         LA    @10,1(,@10)                                         0292 00790000
         STH   @10,CURIVOL                                         0292 00791000
*   IF SYNADISW=SWITCHON THEN       /* DID AN I/O ERROR OCCUR Y02006 */ 00792000
@RF00291 TM    SYNADISW,B'00010000'                                0293 00793000
         BNO   @RF00293                                            0293 00794000
*     DO;                                                          0294 00795000
*       SYNADISW=SWTCHOFF;          /* TURN OFF SYNAD ERROR INDICATOR   00796000
*                                      Y02006                        */ 00797000
         NI    SYNADISW,B'11101111'                                0295 00798000
*       CURADDR=INITADDR;           /* REINITIALIZE CURRENT ADDRESS     00799000
*                                      Y02006                        */ 00800000
         MVC   CURADDR(4),@CB00056                                 0296 00801000
*       IOERRCNT=IOERRCNT+1;        /* INCREMENT IO ERROR COUNT    0297 00802000
*                                      X01980                        */ 00803000
         AH    IOERRCNT,@CH00043                                   0297 00804000
*       IF IOERRCNT>2 THEN                                         0298 00805000
         CH    IOERRCNT,@CH00143                                   0298 00806000
         BH    @RT00298                                            0298 00807000
*         GO TO RDEOF;              /* PERFORM CLEANUP               */ 00808000
*       ELSE                                                       0300 00809000
*         GO TO IGNORE1;            /* CONTINUE READING              */ 00810000
         B     IGNORE1                                             0300 00811000
*     END;                                                         0301 00812000
*   IOERRCNT=0;                     /* SUCCESSFUL READ OCCURRED    0302 00813000
*                                      X01980                        */ 00814000
@RF00293 SLR   IOERRCNT,IOERRCNT                                   0302 00815000
*   IF(BUFFSIZE-IOBCSWCT)<=133 THEN /* IS THIS A PREFORMATTED RECORD    00816000
*                                      Y02006                        */ 00817000
         LH    @10,@CH00039                                        0303 00818000
         L     @07,DCBIOBA                                         0303 00819000
         SH    @10,IOBCSWCT+22(,@07)                               0303 00820000
         CH    @10,@CH00157                                        0303 00821000
         BH    @RF00303                                            0303 00822000
*PREFMT:                                                           0304 00823000
*     DO;                           /* X01980 SHORT RECORD WHEN NOT     00824000
*                                      DOING POSITIONING MEANS END OF   00825000
*                                      DUMP AND NO EOF MARK          */ 00826000
PREFMT   DS    0H                                                  0305 00827000
*       IF SCANSW=SWTCHOFF THEN                                    0305 00828000
         TM    SCANSW,B'01000000'                                  0305 00829000
         BZ    @RT00305                                            0305 00830000
*         GO TO RDEOF;                                             0306 00831000
*       IF PREFM=SWITCHON THEN      /* IS THE TITLE INITIALIZED    0307 00832000
*                                      Y02006                        */ 00833000
         TM    PREFM(COMPTR),B'00000010'                           0307 00834000
         BO    @RT00307                                            0307 00835000
*         GO TO PRINT;              /* YES--GO PRINT RECORD Y02006   */ 00836000
*       PREFM=SWITCHON;             /* NO--TURN ON AND INITIALIZE  0309 00837000
*                                      Y02006                        */ 00838000
         OI    PREFM(COMPTR),B'00000010'                           0309 00839000
*       TITLEMOD(8:15)='PREFORM ';                                 0310 00840000
         MVC   TITLEMOD+7(8,COMPTR),@CC00596                       0310 00841000
*       TITLEDTE(6:13)=BLANKS;                                     0311 00842000
         MVC   TITLEDTE+5(8,COMPTR),BLANKS(COMPTR)                 0311 00843000
*       TITLETME(6:13)=BLANKS;                                     0312 00844000
         MVC   TITLETME+5(8,COMPTR),BLANKS(COMPTR)                 0312 00845000
*       GEN FLOWS(STPRTN) REFS(AWRITE)(BRWRITE SKIP);/* START ON   0313 00846000
*                                      CLEAN PAGE MOVE SHORT RECORD     00847000
*                                      TO OUTPUT AREA Y02006         */ 00848000
         BRWRITE SKIP                                                   00849000
*PRINT:                                                            0314 00850000
*       OUTBUF=PRDINPUT(1:BUFFSIZE-IOBCSWCT);/* MOVE RECORD TO OUTPUT   00851000
*                                      AREA Y02006                   */ 00852000
PRINT    L     @10,CURBUF(,COMPTR)                                 0314 00853000
         MVI   OUTBUF+1(@10),C' '                                  0314 00854000
         MVC   OUTBUF+2(131,@10),OUTBUF+1(@10)                     0314 00855000
         LH    @08,@CH00039                                        0314 00856000
         L     @07,DCBIOBA                                         0314 00857000
         SH    @08,IOBCSWCT+22(,@07)                               0314 00858000
         BCTR  @08,0                                               0314 00859000
         ICM   @07,7,PRDINPTR(PARMPTR)                             0314 00860000
         EX    @08,@SM00659                                        0314 00861000
*       GEN FLOWS(STPRTN) REFS(AWRITE)(BRWRITE 1);/* WRITE RECORD  0315 00862000
*                                      Y02006                        */ 00863000
         BRWRITE 1                                                      00864000
*       GO TO IGNORE1;              /* LOOP TO GET NEXT SHORT RECORD */ 00865000
         B     IGNORE1                                             0316 00866000
*     END PREFMT;                                                  0317 00867000
*   IF PREFM=SWITCHON THEN          /* HAVE PREFORMATTED RECORDS BEEN   00868000
*                                      FOUND Y02006                  */ 00869000
@RF00303 TM    PREFM(COMPTR),B'00000010'                           0318 00870000
         BO    @RT00318                                            0318 00871000
*     GO TO RDEOF;                  /* YES--THEN END DUMP Y02006     */ 00872000
*   IF IOBCSWCT^=0 THEN             /* RESIDUAL COUNT FOR X01980     */ 00873000
         SLR   @10,@10                                             0320 00874000
         L     @07,DCBIOBA                                         0320 00875000
         CH    @10,IOBCSWCT+22(,@07)                               0320 00876000
         BE    @RF00320                                            0320 00877000
*     DO;                           /* READ OPERATION X01980         */ 00878000
*       POSTIPL=POSTIPL+1;          /* ADD ONE TO COUNT OF PREHEADER    00879000
*                                      RECORDS Y02006                */ 00880000
         LH    @08,POSTIPL                                         0322 00881000
         LA    @08,1(,@08)                                         0322 00882000
         STH   @08,POSTIPL                                         0322 00883000
*       SVCTTR=0;                   /* INDICATE NO SVC BUFFER Y02006 */ 00884000
         ST    @10,SVCTTR                                          0323 00885000
*       CURADDR=INITADDR;           /* REINITIALIZE CURRENT ADDRESSS    00886000
*                                      Y02006                        */ 00887000
         MVC   CURADDR(4),@CB00056                                 0324 00888000
*       GO TO IGNORE1;              /* CONTINUE REUSING SAME BUFFER     00889000
*                                      Y02006                        */ 00890000
         B     IGNORE1                                             0325 00891000
*     END;                                                         0326 00892000
*   IF PRDHDRID=PRDHDR&PRDRECID=PRDHDREC THEN/* IS THIS A HEADER   0327 00893000
*                                      RECORD Y02006                 */ 00894000
@RF00320 SLR   @10,@10                                             0327 00895000
         ICM   @10,7,PRDINPTR(PARMPTR)                             0327 00896000
         CLI   PRDHDRID(@10),X'FF'                                 0327 00897000
         BNE   @RF00327                                            0327 00898000
         CLI   PRDRECID(@10),X'FF'                                 0327 00899000
         BNE   @RF00327                                            0327 00900000
*     DO;                                                          0328 00901000
*       IF HDRSW=SWITCHON THEN      /* HAS A HEADER ALREADY BEEN   0329 00902000
*                                      FOUND Y02006                  */ 00903000
         TM    HDRSW,B'00001000'                                   0329 00904000
         BO    @RT00329                                            0329 00905000
*         GO TO RDEOF;              /* YES--STOP DUMP HERE Y02006    */ 00906000
*       HDRSW=SWITCHON;             /* YES--TURN ON SWITCH Y02006    */ 00907000
         OI    HDRSW,B'00001000'                                   0331 00908000
*       DMPIC=SWITCHON;             /* INDICATE COMPLETE DUMP CAN BE    00909000
*                                      READ INTO CORE (SO FAR) Y02006*/ 00910000
         OI    DMPIC(COMPTR),B'00010000'                           0332 00911000
*       RETURN;                     /* RETURN RECORD Y02006          */ 00912000
@EL00003 DS    0H                                                  0333 00913000
@EF00003 DS    0H                                                  0333 00914000
@ER00003 LM    @14,@05,@SA00003                                    0333 00915000
         L     @07,@SA00003+32                                     0333 00916000
         LM    @09,@12,@SA00003+36                                 0333 00917000
         BR    @14                                                 0333 00918000
*     END;                                                         0334 00919000
*   IF HDRSW=SWITCHON THEN          /* HAS A HEADER ALREADY BEEN   0335 00920000
*                                      FOUND Y02006                  */ 00921000
@RF00327 TM    HDRSW,B'00001000'                                   0335 00922000
         BO    @RT00335                                            0335 00923000
*     RETURN;                       /* YES--RETURN TO PROCESS THIS 0336 00924000
*                                      RECORD Y02006                 */ 00925000
*   IF POSTIPL=5 THEN               /* HAVE 5 RECORDS BEEN READ    0337 00926000
*                                      WITHOUT A HEADER Y02006       */ 00927000
         LH    @10,POSTIPL                                         0337 00928000
         CH    @10,@CH00210                                        0337 00929000
         BE    @RT00337                                            0337 00930000
*     GO TO RDEOF;                  /* YES--STOP DUMP Y02006         */ 00931000
*   POSTIPL=POSTIPL+1;              /* ADD 1 TO PREHEADER COUNT    0339 00932000
*                                      Y02006                        */ 00933000
         LA    @10,1(,@10)                                         0339 00934000
         STH   @10,POSTIPL                                         0339 00935000
*   RETURN;                         /* RETURN Y02006                 */ 00936000
         B     @EL00003                                            0340 00937000
*RDEOF:                                                            0341 00938000
*   RETURN TO EOF;                  /* SIGNAL EOF TO CALLER          */ 00939000
RDEOF    LA    @14,EOF                                             0341 00940000
         LM    @15,@05,@SA00003+4                                  0341 00941000
         L     @07,@SA00003+32                                     0341 00942000
         LM    @09,@12,@SA00003+36                                 0341 00943000
         BR    @14                                                 0341 00944000
*TAPEER:                                                           0342 00945000
*   SYNADISW=SWITCHON;              /* INDICATE SYNAD ENTERED Y02006 */ 00946000
TAPEER   OI    SYNADISW,B'00010000'                                0342 00947000
*   IOERR=SWITCHON;                 /* INDICATE AN I/O ERROR OCCURRED   00948000
*                                      Y02006                        */ 00949000
         OI    IOERR(COMPTR),B'10000000'                           0343 00950000
*   GEN FLOWS(TERRET) NOSEQFLOW(BR R14);/* RETURN TO CHECK ROUTINE   */ 00951000
         BR R14                                                         00952000
*   GEN DATA;                                                      0345 00953000
*   END READ;                                                      0346 00954000
         B     @EL00003                                            0346 00955000
*                                                                  0347 00956000
*/********************************************************************/ 00957000
*/*                                                                  */ 00958000
*/*                    WRITE TO WORK FILE SUBROUTINE                 */ 00959000
*/*  THIS SUBROUTINE WRITES RECORDS TO THE WORK FILE AND BUILDS      */ 00960000
*/*  THE DUMP MAPS.  IF A B37, D37, OR E37 ABEND OCCURS WRITING      */ 00961000
*/*  TO SYSUT1, PROCESSING CONTINUES BY BUILDING THE DUMP MAP        */ 00962000
*/*  FROM THE INPUT RECORDS.                                         */ 00963000
*/*                                                                  */ 00964000
*/********************************************************************/ 00965000
*                                                                  0347 00966000
*WRITE:                                                            0347 00967000
*   PROC;                                                          0347 00968000
WRITE    STM   @14,@06,@SA00004                                    0347 00969000
         STM   @08,@09,@SA00004+36                                 0347 00970000
         STM   @11,@12,@SA00004+44                                 0347 00971000
*   IF X37SW=SWTCHOFF THEN          /* HAS AN ABEND OCCURRED Y02006  */ 00972000
         TM    X37SW,B'00000010'                                   0348 00973000
         BZ    @RT00348                                            0348 00974000
*     GO TO UTWRITE;                /* NO--GO WRITE OUTPUT Y02006    */ 00975000
*USETAPE:                                                          0350 00976000
*   CURVOL=CURIVOL;                 /* MAKE TAPE VOLUME CURRENT    0350 00977000
*                                      Y02006                        */ 00978000
USETAPE  MVC   CURVOL(1),CURIVOL+1                                 0350 00979000
*   LASTVOL=LASTIVOL;               /* ALSO MAKE LAST INPUT VOLUME 0351 00980000
*                                      THE LASTVOL Y02006            */ 00981000
         LH    LASTVOL,LASTIVOL                                    0351 00982000
*   TTRNO=INTTR;                    /* SET TTR NUMBER Y02006         */ 00983000
         LR    TTRNO,INTTR                                         0352 00984000
*   CALL MAPBUILD;                  /* GO PLACE THIS RECORD IN THE 0353 00985000
*                                      MAP Y02006                    */ 00986000
         BAL   @14,MAPBUILD                                        0353 00987000
*   GO TO GOBACK;                   /* AND RETURN Y02006             */ 00988000
         B     GOBACK                                              0354 00989000
*UTWRITE:                                                          0355 00990000
*   SYNADOSW=SWTCHOFF;              /* RESET SYNAD INDICATOR Y02006  */ 00991000
UTWRITE  NI    SYNADOSW,B'11011111'                                0355 00992000
*   RESPECIFY                                                      0356 00993000
*    (REG1,                                                        0356 00994000
*     REG2) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 00995000
*   REG2=ADDR(PRDINPUT);            /* POINT TO OUTPUT AREA Y02006   */ 00996000
         SLR   REG2,REG2                                           0357 00997000
         ICM   REG2,7,PRDINPTR(PARMPTR)                            0357 00998000
*   REG3=ASYSUDCB;                  /* POINT TO WORK FILE DCB        */ 00999000
         SLR   REG3,REG3                                           0358 01000000
         ICM   REG3,7,ASYSUDCB(COMPTR)                             0358 01001000
*WRITEREC:                                                         0359 01002000
*   GEN FLOWS(SYSUER,DCBABEND)      /* Y02006                        */ 01003000
*       ;                                                          0359 01004000
WRITEREC DS    0H                                                  0359 01005000
    WRITE WTDECB,SF,(R3),(R2)                                           01006000
    CHECK WTDECB                                                        01007000
*   IF X37SW=SWITCHON THEN          /* DID AN ABEND OCCUR Y02006     */ 01008000
         TM    X37SW,B'00000010'                                   0360 01009000
         BO    @RT00360                                            0360 01010000
*     GO TO USETAPE;                /* YES--THEN GO MAP THE INPUT  0361 01011000
*                                      RECORD Y02006                 */ 01012000
*   GEN(NOTE (R3));                 /* NO--NOTE RECORD Y02006        */ 01013000
         NOTE (R3)                                                      01014000
*   TTRNO=REG1;                     /* SAVE NOTED LOCATION X01980    */ 01015000
         LR    TTRNO,REG1                                          0363 01016000
*   RESPECIFY                                                      0364 01017000
*    (REG1,                                                        0364 01018000
*     REG2) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 01019000
*   LASTVOL=CURVOL;                 /* SAVE LAST VOLUME NUMBER Y02006*/ 01020000
         SLR   @02,@02                                             0365 01021000
         IC    @02,CURVOL                                          0365 01022000
         LR    LASTVOL,@02                                         0365 01023000
*   IF TTRNO=HEADTTR THEN           /* TTR START OF NEW VOL? Y01980  */ 01024000
         C     TTRNO,HEADTTR                                       0366 01025000
         BNE   @RF00366                                            0366 01026000
*     CURVOL=CURVOL+1;              /* YES - INCR VOLU SEQ Y01980    */ 01027000
         LA    @02,1(,@02)                                         0367 01028000
         STC   @02,CURVOL                                          0367 01029000
*   IF SYNADOSW=SWITCHON THEN       /* DID AN I/O ERROR OCCUR Y02006 */ 01030000
@RF00366 TM    SYNADOSW,B'00100000'                                0368 01031000
         BNO   @RF00368                                            0368 01032000
*     DO;                           /* SYNAD HAS BEEN ENTERED        */ 01033000
*       IF LOADMODE=SWITCHON THEN   /* IS THIS LOAD MODE Y02006      */ 01034000
         TM    LOADMODE,B'10000000'                                0370 01035000
         BNO   @RF00370                                            0370 01036000
*         DO;                                                      0371 01037000
*           RESPECIFY                                              0372 01038000
*            (REG0,                                                0372 01039000
*             REG1) RESTRICTED;     /* RESTRICT REGISTERS Y02006     */ 01040000
*           REG0=16;                /* YES--SYSUT2 DDNAME Y02006     */ 01041000
         LA    REG0,16                                             0373 01042000
*           REG1=12;                /* CODE FOR MESSAGE AMD153I      */ 01043000
         LA    REG1,12                                             0374 01044000
*           GEN REFS(AEREXIT) EXIT NOSEQFLOW;                      0375 01045000
            L     R15,AEREXIT(COMBASE) POINT TO ERROR EXIT ROUTINE      01046000
            BALR  R14,R15              R14 SET FOR DEBUGGING ONLY       01047000
*           RESPECIFY                                              0376 01048000
*            (REG0,                                                0376 01049000
*             REG1) UNRESTRICTED;   /* RELEASE REGISTERS Y02006      */ 01050000
*         END;                                                     0377 01051000
*       X37SW=SWITCHON;             /* I/O ERROR TO SYSUT1--TREAD  0378 01052000
*                                      LIKE RECOVERY FROM X37 ABEND     01053000
*                                      Y02006                        */ 01054000
@RF00370 OI    X37SW,B'00000010'                                   0378 01055000
*       TREADIN=SWITCHON;           /* INDICATE MAPS NOW FOR TAPE  0379 01056000
*                                      Y02006                        */ 01057000
         OI    TREADIN(COMPTR),B'00010000'                         0379 01058000
*       LASTIVOL=0;                 /* RESET LAST INPUT VOL NUMBER TO   01059000
*                                      CAUSE NEW DUMP MAP ENTRY TO BE   01060000
*                                      CREATED Y02006                */ 01061000
         SLR   @09,@09                                             0380 01062000
         STH   @09,LASTIVOL                                        0380 01063000
*       GEN REFS(APRTMSG)           /* PRINT MESSAGE Y02006          */ 01064000
*           ;                                                      0381 01065000
        BRPRTMSG AMD291I,L'AMD291I   ' <- END QUOTE FOR PLS     YM00652 01066000
*       GO TO USETAPE;              /* GO MAP RECORD FROM INPUT FILE    01067000
*                                      Y02006                        */ 01068000
         B     USETAPE                                             0382 01069000
*     END;                                                         0383 01070000
*   IF LOADMODE=SWTCHOFF&(PRDHDRID^=PRDHDR|PRDRECID^=PRDHDREC) THEN/*   01071000
*                                      RECORD WAS WRITTEN OKAY, NOW     01072000
*                                      SHOULD IT BE MAPPED Y02006    */ 01073000
@RF00368 TM    LOADMODE,B'10000000'                                0384 01074000
         BNZ   @RF00384                                            0384 01075000
         SLR   @08,@08                                             0384 01076000
         ICM   @08,7,PRDINPTR(PARMPTR)                             0384 01077000
         CLI   PRDHDRID(@08),X'FF'                                 0384 01078000
         BNE   @RT00384                                            0384 01079000
         CLI   PRDRECID(@08),X'FF'                                 0384 01080000
         BE    @RF00384                                            0384 01081000
@RT00384 DS    0H                                                  0385 01082000
*     CALL MAPBUILD;                /* YES--GO MAP ENTRY Y02006      */ 01083000
         BAL   @14,MAPBUILD                                        0385 01084000
*GOBACK:                                                           0386 01085000
*   REG3=ADDR(INDCB);               /* RESTORE REG 3 TO ADDRESS INPUT   01086000
*                                      DCB X01980                    */ 01087000
@RF00384 DS    0H                                                  0386 01088000
GOBACK   LA    REG3,INDCB                                          0386 01089000
*   RETURN;                                                        0387 01090000
@EL00004 DS    0H                                                  0387 01091000
@EF00004 DS    0H                                                  0387 01092000
@ER00004 LM    @14,@06,@SA00004                                    0387 01093000
         LM    @08,@09,@SA00004+36                                 0387 01094000
         LM    @11,@12,@SA00004+44                                 0387 01095000
         BR    @14                                                 0387 01096000
*                                                                  0388 01097000
*/********************************************************************/ 01098000
*/*                                                                  */ 01099000
*/*  MAP BUILD ROUTINE.  THIS ROUTINE PLACES THE ADDRESS AND TTR OF  */ 01100000
*/* EACH RECORD INTO THE DUMP MAP.  THERE ARE UP TO 3 SETS OF        */ 01101000
*/* DUMP MAPS.  'REALMAP' POINTS TO DUMP MAP ENTRIES FOR REAL        */ 01102000
*/* DUMP INPUT, 'CPUMAP' POINTS TO DUMP MAP ENTRIES FOR CPU          */ 01103000
*/* STATUS RECORDS.  FOR VIRTUAL DUMPS 'ASIDNDX' POINTS TO A         */ 01104000
*/* TABLE OF ASID'S AND MAP POINTERS.  FOR EACH ASID DUMPED THERE    */ 01105000
*/* EXISTS A SET OF DUMP MAP ENTRIES.                                */ 01106000
*/* THIS ROUTINE BUILDS BOTH THE DUMP MAP ENTRIES AND THE ASID       */ 01107000
*/* TABLES.  WHEN RECORD ADDRESSES ARE IN SEQUENCE THEN THE LAST     */ 01108000
*/* MAP ENTRY IS JUST UPDATED.                                       */ 01109000
*/*                                                                  */ 01110000
*/********************************************************************/ 01111000
*                                                                  0388 01112000
*MAPBUILD:                                                         0388 01113000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0388 01114000
MAPBUILD DS    0H                                                  0389 01115000
*   RESPECIFY                                                      0389 01116000
*     REG14 RESTRICTED;             /* RESTRICT RETURN REG Y02006    */ 01117000
*   TEMPSAVE=REG14;                 /* SAVE RETURN REG IN CASE     0390 01118000
*                                      ASIDSRCH IS CALLED Y02006     */ 01119000
         LR    TEMPSAVE,REG14                                      0390 01120000
*   RESPECIFY                                                      0391 01121000
*     REG14 UNRESTRICTED;           /* UNRESTRICT RETURN REG Y02006  */ 01122000
*   BADREC=SWTCHOFF;                /* RESET BAD RECORD SWITCH Y02006*/ 01123000
         NI    BADREC,B'11111110'                                  0392 01124000
*   IF PRDHDRID=PRDHDR&PRDRECID=PRDCPUID THEN/* IS THS A CPU STATUS     01125000
*                                      RECORD Y02006                 */ 01126000
         SLR   @05,@05                                             0393 01127000
         ICM   @05,7,PRDINPTR(PARMPTR)                             0393 01128000
         CLI   PRDHDRID(@05),X'FF'                                 0393 01129000
         BNE   @RF00393                                            0393 01130000
         CLI   PRDRECID(@05),X'0F'                                 0393 01131000
         BE    @RT00393                                            0393 01132000
*     GO TO CPUREC;                 /* YES--GO TO CPU ROUTINE Y02006 */ 01133000
*   IF PRDADDR//DUMPBLK^=0 THEN     /* IS THE DATA ADDRESS A MULTIPLE   01134000
*                                      OF 4K Y0 2006                 */ 01135000
@RF00393 ICM   @05,7,PRDINPTR(PARMPTR)                             0395 01136000
         L     @05,PRDADDR(,@05)                                   0395 01137000
         N     @05,@CF00664                                        0395 01138000
         LTR   @05,@05                                             0395 01139000
         BZ    @RF00395                                            0395 01140000
*     DO;                                                          0396 01141000
*       CURADDR=INITADDR;           /* NO--IGNORE THIS RECORD,     0397 01142000
*                                      REINITIALIZE LAST ADDRESS   0397 01143000
*                                      Y02006                        */ 01144000
         MVC   CURADDR(4),@CB00056                                 0397 01145000
*       BADREC=SWITCHON;            /* INDICATE RECORD NOT PLACED IN    01146000
*                                      MAP Y02006                    */ 01147000
         OI    BADREC,B'00000001'                                  0398 01148000
*       GO TO MAPRET;               /* RETURN TO CALLER              */ 01149000
         B     MAPRET                                              0399 01150000
*     END;                                                         0400 01151000
*   IF PRDASID=CURASID&PRDADDR=CURADDR+DUMPBLK&(DUMPLINK=0|DUMPLINK->   01152000
*       DUMPFADD^=PRDADDR) THEN     /* IS THIS BLOCK IN THE SAME   0401 01153000
*                                      MEMORY, THE NEXT PAGE AFTER 0401 01154000
*                                      THE LAST BLOCK & NOT DUPLICATE   01155000
*                                                             YM00653*/ 01156000
@RF00395 SLR   @05,@05                                             0401 01157000
         ICM   @05,7,PRDINPTR(PARMPTR)                             0401 01158000
         CLC   PRDASID(2,@05),CURASID                              0401 01159000
         BNE   @RF00401                                            0401 01160000
         L     @05,PRDADDR(,@05)                                   0401 01161000
         LH    @02,@CH00041                                        0401 01162000
         AL    @02,CURADDR                                         0401 01163000
         CLR   @05,@02                                             0401 01164000
         BNE   @RF00401                                            0401 01165000
         SLR   @02,@02                                             0401 01166000
         ICM   @02,7,DUMPLINK(MAPPTR)                              0401 01167000
         LTR   @02,@02                                             0401 01168000
         BZ    @RT00401                                            0401 01169000
         CL    @05,DUMPFADD(,@02)                                  0401 01170000
         BNE   @RT00401                                            0401 01171000
*     GO TO CHKVOLS;                /* YES--THEN GO CHECK IF THE   0402 01172000
*                                      VOLUME HAS CHANGED Y02006     */ 01173000
*   IF PRDASID=CURASID THEN         /* WHILE THE ADDRESS IS NOT NEXT,   01174000
*                                      IS THE ASID STILL THE SAME  0403 01175000
*                                      Y02006                        */ 01176000
@RF00401 SLR   @07,@07                                             0403 01177000
         ICM   @07,7,PRDINPTR(PARMPTR)                             0403 01178000
         CLC   PRDASID(2,@07),CURASID                              0403 01179000
         BE    @RT00403                                            0403 01180000
*     GO TO SCANMAP;                /* YES--THEN USE THE CURRENT MAP    01181000
*                                      AND GO SCAN IT Y02006         */ 01182000
*   IF PRDASID=0 THEN               /* IS THIS A REAL DUMP RECORD  0405 01183000
*                                      Y02006                        */ 01184000
         ICM   @10,3,PRDASID(@07)                                  0405 01185000
         BNZ   @RF00405                                            0405 01186000
*     DO;                                                          0406 01187000
*       CURMAP=REALMAP;             /* YES--THEN POINT TO THE REAL 0407 01188000
*                                      MAP Y02006                    */ 01189000
         L     CURMAP,REALMAP(,COMPTR)                             0407 01190000
*       LASTMAP=ADDR(REALMAP);      /* ALSO SET UP THE LINK POINTER     01191000
*                                      (THIS IS USED IF THE NEW MAP     01192000
*                                      ENTRY GOES FIRST Y02006       */ 01193000
         LA    @07,REALMAP(,COMPTR)                                0408 01194000
         ST    @07,LASTMAP                                         0408 01195000
*       GO TO SCANMAP;              /* NOW GO SCAN THE REAL MAP    0409 01196000
*                                      Y02006                        */ 01197000
         B     SCANMAP                                             0409 01198000
*     END;                                                         0410 01199000
*   IF ASIDNDX=0 THEN               /* IS THERE AN ASID INDEX YET  0411 01200000
*                                      Y02006                        */ 01201000
@RF00405 ICM   @10,15,ASIDNDX(COMPTR)                              0411 01202000
         BNZ   @RF00411                                            0411 01203000
*     DO;                                                          0412 01204000
*       RESPECIFY                                                  0413 01205000
*        (REG0,                                                    0413 01206000
*         REG4) RESTRICTED;         /* RESTRICT REGISTERS Y02006     */ 01207000
*       REG4=ADDR(INDXADDR);        /* NO--SO SET UP TO GET FIRST ONE   01208000
*                                      Y02006                        */ 01209000
         LA    REG4,INDXADDR                                       0414 01210000
*       REG0=LENGTH(ASIDLIST);      /* SET LENGTH FOR GETMAIN Y02006 */ 01211000
         LA    REG0,112                                            0415 01212000
*       GEN(GETMAIN EU,LV=(0),A=(R4));/* ISSUE GETMAIN FOR FIRST ASID   01213000
*                                      INDEX Y02006                  */ 01214000
         GETMAIN EU,LV=(0),A=(R4)                                       01215000
*       RESPECIFY                                                  0417 01216000
*        (REG0,                                                    0417 01217000
*         REG4) UNRESTRICTED;       /* UNRESTRICT REGISTERS Y02006   */ 01218000
*       ASIDNDX=INDXADDR;           /* SET POINTER IN COMMON TO ASID    01219000
*                                      INDEX Y02006                  */ 01220000
         L     @10,INDXADDR                                        0418 01221000
         ST    @10,ASIDNDX(,COMPTR)                                0418 01222000
*       ASIDLIST=ASIDLIST&&ASIDLIST;/* SET NEW INDEX TO ZERO Y02006  */ 01223000
         XC    ASIDLIST(112,@10),ASIDLIST(@10)                     0419 01224000
*       INDEX=1;                    /* SET INDEX TO ONE FOR FIRST NEW   01225000
*                                      ENTRY Y02006                  */ 01226000
         LA    INDEX,1                                             0420 01227000
*       GO TO INSERT;               /* GO INSERT THE NEW ASID INTO 0421 01228000
*                                      THE INDEX Y02006              */ 01229000
         B     INSERT                                              0421 01230000
*     END;                                                         0422 01231000
*   CALL ASIDSRCH;                  /* SEARCH ASIDLIST FOR NEW ASID     01232000
*                                      Y02006                        */ 01233000
@RF00411 BAL   @14,ASIDSRCH                                        0423 01234000
*   IF INDEX=0 THEN                 /* ARE ALL TABLES FULL AND NEW 0424 01235000
*                                      ASID NOT FOUND Y02006         */ 01236000
         LTR   INDEX,INDEX                                         0424 01237000
         BNZ   @RF00424                                            0424 01238000
*     DO;                                                          0425 01239000
*       RESPECIFY                                                  0426 01240000
*        (REG0,                                                    0426 01241000
*         REG4) RESTRICTED;         /* RESTRICT REGISTERS Y02006     */ 01242000
*       REG4=ADDR(ASDXLNK);         /* YES--NEED TO GET STORAGE FOR     01243000
*                                      NEW TABLE Y02006              */ 01244000
         L     REG4,INDXADDR                                       0427 01245000
*       REG0=LENGTH(ASIDLIST);      /* GET LENGTH FOR TABLE Y02006   */ 01246000
         LA    REG0,112                                            0428 01247000
*       GENERATE(GETMAIN EU,LV=(0),A=(R4));/* GET STORAGE FOR TABLE     01248000
*                                      Y02006                        */ 01249000
         GETMAIN EU,LV=(0),A=(R4)                                       01250000
*       RESPECIFY                                                  0430 01251000
*        (REG0,                                                    0430 01252000
*         REG4) UNRESTRICTED;       /* UNRESTRICT REGISTERS Y02006   */ 01253000
*       INDXADDR=ASDXLNK;           /* SET PTR TO NEW TABLE Y02006   */ 01254000
         L     @10,INDXADDR                                        0431 01255000
         L     @10,ASDXLNK(,@10)                                   0431 01256000
         ST    @10,INDXADDR                                        0431 01257000
*       ASIDLIST=ASIDLIST&&ASIDLIST;/* ZERO OUT NEW TABLE      Y02006*/ 01258000
         XC    ASIDLIST(112,@10),ASIDLIST(@10)                     0432 01259000
*       INDEX=1;                    /* SET INDEX TO FIRST ENTRY    0433 01260000
*                                      Y02006                        */ 01261000
         LA    INDEX,1                                             0433 01262000
*       GO TO INSERT;               /* GO INSERT NEW ASID INTO TABLE    01263000
*                                      Y02006                        */ 01264000
         B     INSERT                                              0434 01265000
*     END;                                                         0435 01266000
*   IF ASDXASID(INDEX)=PRDASID THEN /* CHECK TO VERIFY ASID WAS FOUND   01267000
*                                      IN TABLE Y02006               */ 01268000
@RF00424 L     @10,INDXADDR                                        0436 01269000
         LR    @07,INDEX                                           0436 01270000
         ALR   @07,@07                                             0436 01271000
         ICM   @01,7,PRDINPTR(PARMPTR)                             0436 01272000
         ALR   @07,@10                                             0436 01273000
         CLC   ASDXASID-2(2,@07),PRDASID(@01)                      0436 01274000
         BNE   @RF00436                                            0436 01275000
*     DO;                                                          0437 01276000
*       CURMAP=ASDXMAP(INDEX);      /* YES--SET PTR TO MAPS FOR    0438 01277000
*                                      EXISTING ASID Y02006          */ 01278000
         L     @07,INDXADDR                                        0438 01279000
         LR    @15,INDEX                                           0438 01280000
         SLA   @15,2                                               0438 01281000
         L     CURMAP,ASDXMAP-4(@15,@07)                           0438 01282000
*       LASTMAP=ADDR(ASDXMAP(INDEX));/* ALSO SET PTR TO LOCATION   0439 01283000
*                                      POINTING TO MAP Y02006        */ 01284000
         LA    @07,ASDXMAP-4(@15,@07)                              0439 01285000
         ST    @07,LASTMAP                                         0439 01286000
*       GO TO SCANMAP;              /* NOW GO SCAN MAP Y02006        */ 01287000
         B     SCANMAP                                             0440 01288000
*     END;                                                         0441 01289000
*INSERT:                                                           0442 01290000
*   ASDXASID(INDEX)=PRDASID;        /* INSERT NEW ASID INTO TABLE  0442 01291000
*                                      Y02006                        */ 01292000
@RF00436 DS    0H                                                  0442 01293000
INSERT   L     @07,INDXADDR                                        0442 01294000
         LR    @15,INDEX                                           0442 01295000
         ALR   @15,@15                                             0442 01296000
         ALR   @15,@07                                             0442 01297000
         ICM   @01,7,PRDINPTR(PARMPTR)                             0442 01298000
         MVC   ASDXASID-2(2,@15),PRDASID(@01)                      0442 01299000
*   CURMAP=ASDXMAP(INDEX);          /* SET CURRENT MAP POINTER TO NEW   01300000
*                                      MAP Y02006                    */ 01301000
         LR    @15,INDEX                                           0443 01302000
         SLA   @15,2                                               0443 01303000
         L     CURMAP,ASDXMAP-4(@15,@07)                           0443 01304000
*   LASTMAP=ADDR(ASDXMAP(INDEX));   /* ALSO SET POINTER TO ADDRESS OF   01305000
*                                      MAP Y02006                    */ 01306000
         LA    @07,ASDXMAP-4(@15,@07)                              0444 01307000
         ST    @07,LASTMAP                                         0444 01308000
*/********************************************************************/ 01309000
*/*                                                                  */ 01310000
*/* THIS SECTION SCANS THE MAP POINTED TO BY 'CURMAP' FOR THE        */ 01311000
*/* LOCATION TO PLACE THE NEW MAP ENTRY.                             */ 01312000
*/*                                                                  */ 01313000
*/********************************************************************/ 01314000
*                                                                  0445 01315000
*SCANMAP:                                                          0445 01316000
*   MAPPTR=CURMAP;                  /* SET POINTER TO CURRENT MAP  0445 01317000
*                                      ENTRY Y02006                  */ 01318000
SCANMAP  LR    MAPPTR,CURMAP                                       0445 01319000
*   LASTENTY=LASTMAP;               /* SAVE PTR TO LAST ENTRY IN CASE   01320000
*                                      THE NEW ENTRY GOES FIRST    0446 01321000
*                                      Y02006                        */ 01322000
         L     LASTENTY,LASTMAP                                    0446 01323000
*   DO WHILE MAPPTR^=0;             /* LOOP UNTIL PROPER ENTRY IS  0447 01324000
*                                      FOUND OR LAST ENTRY IS CHECKED   01325000
*                                      Y02006                        */ 01326000
         B     @DE00447                                            0447 01327000
@DL00447 DS    0H                                                  0448 01328000
*     IF DUMPLADD<PRDADDR THEN      /* IS ADDRESS IN THIS MAP ENTRY     01329000
*                                      Y02006                        */ 01330000
         ICM   @01,7,PRDINPTR(PARMPTR)                             0448 01331000
         CLC   DUMPLADD(4,MAPPTR),PRDADDR(@01)                     0448 01332000
         BNL   @RF00448                                            0448 01333000
*       DO;                                                        0449 01334000
*         LASTENTY=MAPPTR;          /* NO--SAVE PTR TO THIS ENTRY  0450 01335000
*                                      Y02006                        */ 01336000
         LR    LASTENTY,MAPPTR                                     0450 01337000
*         MAPPTR=DUMPLINK;          /* AND SET PTR TO NEXT MAP ENTRY    01338000
*                                      Y02006                        */ 01339000
         SLR   @15,@15                                             0451 01340000
         ICM   @15,7,DUMPLINK(MAPPTR)                              0451 01341000
         LR    MAPPTR,@15                                          0451 01342000
*       END;                                                       0452 01343000
*     ELSE                                                         0453 01344000
*       IF DUMPFADD>PRDADDR THEN    /* ITS BEFORE THIS ENTRY, BE SURE   01345000
*                                      ITS NOT IN THIS ENTRY Y02006  */ 01346000
         B     @RC00448                                            0453 01347000
@RF00448 ICM   @01,7,PRDINPTR(PARMPTR)                             0453 01348000
         CLC   DUMPFADD(4,MAPPTR),PRDADDR(@01)                     0453 01349000
         BH    @RT00453                                            0453 01350000
*         GO TO SETDATA;            /* GO PUT DATA IN NEW MAP ENTRY     01351000
*                                      Y02006                        */ 01352000
*       ELSE                                                       0455 01353000
*         DO;                       /* THIS RECORD IS A            0455 01354000
*                                      DUPLICATE--IGNORE IT Y02006   */ 01355000
*           CURADDR=INITADDR;       /* REINITIALIZE ADDRESS Y02006   */ 01356000
         MVC   CURADDR(4),@CB00056                                 0456 01357000
*           GO TO MAPRET;           /* RETURN IGNORING DUPLICATE   0457 01358000
*                                      Y02006                        */ 01359000
         B     MAPRET                                              0457 01360000
*         END;                                                     0458 01361000
*   END;                                                           0459 01362000
@RC00448 DS    0H                                                  0459 01363000
@DE00447 LTR   MAPPTR,MAPPTR                                       0459 01364000
         BNZ   @DL00447                                            0459 01365000
*   GO TO SETDATA;                  /* NOW GO SET DATA INTO NEW ENTRY   01366000
*                                      Y02006                        */ 01367000
         B     SETDATA                                             0460 01368000
*/********************************************************************/ 01369000
*/*                                                                  */ 01370000
*/* THE DATA RECORD OR CPU STATUS RECORD IS IN PROPER SEQUENCE.      */ 01371000
*/* THIS SECTION CHECKS TO VERIFY THAT A VOLUME SWITCH HAS NOT       */ 01372000
*/* OCCURED.  IF IT HAS, A NEW ENTRY IS INSERTED AT THE POINT OF THE */ 01373000
*/* CURRENT MAP.                                                     */ 01374000
*/*                                                                  */ 01375000
*/********************************************************************/ 01376000
*                                                                  0461 01377000
*CHKVOLS:                                                          0461 01378000
*   IF CURVOL=LASTVOL THEN          /* HAS A VOLUME SWITCH OCCURRED     01379000
*                                      Y02006                        */ 01380000
CHKVOLS  SLR   @05,@05                                             0461 01381000
         IC    @05,CURVOL                                          0461 01382000
         CR    LASTVOL,@05                                         0461 01383000
         BE    @RT00461                                            0461 01384000
*     GO TO SAVELAST;               /* NO--THEN GO UPDATE LAST     0462 01385000
*                                      ADDRESS IN CURRENT ENTRY Y020    01386000
*                                      06                            */ 01387000
*   RESPECIFY                                                      0463 01388000
*    (REG0,                                                        0463 01389000
*     REG4) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 01390000
*   REG4=ADDR(NEWENTRY);            /* VOLUME SWITCHED SO NEED NEW 0464 01391000
*                                      MAP ENTRY Y02006              */ 01392000
         LA    REG4,NEWENTRY                                       0464 01393000
*   REG0=DUMPFRMS;                  /* SET SIZE OF ENTRY Y02006      */ 01394000
         LA    REG0,16                                             0465 01395000
*   GENERATE(GETMAIN EU,LV=(0),A=(R4));/* GET STORAGE FOR NEW ENTRY     01396000
*                                      Y02006                        */ 01397000
         GETMAIN EU,LV=(0),A=(R4)                                       01398000
*   RESPECIFY                                                      0467 01399000
*    (REG0,                                                        0467 01400000
*     REG4) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 01401000
*   NEWENTRY->DUMPLINK=DUMPLINK;    /* SET LINK FIELD OF NEW ENTRY TO   01402000
*                                      LINK OF LAST ENTRY Y02006     */ 01403000
         L     @02,NEWENTRY                                        0468 01404000
         MVC   DUMPLINK(3,@02),DUMPLINK(MAPPTR)                    0468 01405000
*   DUMPLINK=NEWENTRY;              /* SET LINK FIELD OF LAST ENTRY     01406000
*                                      TO NEW ENTRY Y02006           */ 01407000
         STCM  @02,7,DUMPLINK(MAPPTR)                              0469 01408000
*   GO TO SETDATA1;                 /* PUT DATA IN NEW ENTRY  YM00656*/ 01409000
         B     SETDATA1                                            0470 01410000
*/********************************************************************/ 01411000
*/*                                                                  */ 01412000
*/* THIS SECTION INSERTS DATA INTO THE NEW DUMP MAP ENTRIES.         */ 01413000
*/*                                                                  */ 01414000
*/********************************************************************/ 01415000
*                                                                  0471 01416000
*SETDATA:                                                          0471 01417000
*   RESPECIFY                                                      0471 01418000
*    (REG0,                                                        0471 01419000
*     REG4) RESTRICTED;             /* RESTRICT REGISTERS     YM00656*/ 01420000
SETDATA  DS    0H                                                  0472 01421000
*   REG4=ADDR(NEWENTRY);            /* SET RETURN FOR ADDRESS OF NEW    01422000
*                                      DUMP MAP BLOCK         YM00656*/ 01423000
         LA    REG4,NEWENTRY                                       0472 01424000
*   REG0=DUMPFRMS;                  /* SET SIZE FOR A NEW BLOCK    0473 01425000
*                                                             YM00656*/ 01426000
         LA    REG0,16                                             0473 01427000
*   GEN(GETMAIN EU,LV=(0),A=(R4));  /* ISSUE GETMAIN FOR A NEW DUMP     01428000
*                                      MAP BLOCK              YM00656*/ 01429000
         GETMAIN EU,LV=(0),A=(R4)                                       01430000
*   RESPECIFY                                                      0475 01431000
*    (REG0,                                                        0475 01432000
*     REG4) UNRESTRICTED;           /* UNRESTRICT REGISTERS   YM00656*/ 01433000
*   LASTENTY->DUMPLINK=NEWENTRY;    /* INSERT NEW MAP ENTRY AT END OF   01434000
*                                      CHAIN                  YM00656*/ 01435000
         L     @15,NEWENTRY                                        0476 01436000
         STCM  @15,7,DUMPLINK(LASTENTY)                            0476 01437000
*   NEWENTRY->DUMPLINK=MAPPTR;      /* SET LINK FIELD TO NULL YM00656*/ 01438000
         STCM  MAPPTR,7,DUMPLINK(@15)                              0477 01439000
*   IF LASTENTY=LASTMAP THEN        /* IS THIS ALSO THE FIRST (ONLY)    01440000
*                                      ENTRY ON CHAIN         YM00656*/ 01441000
         C     LASTENTY,LASTMAP                                    0478 01442000
         BNE   @RF00478                                            0478 01443000
*     CURMAP=NEWENTRY;              /* YES--THEN ALSO UPDATE CURRENT    01444000
*                                      PTR ENTRY              YM00656*/ 01445000
         LR    CURMAP,@15                                          0479 01446000
*SETDATA1:                                                         0480 01447000
*   MAPPTR=NEWENTRY;                /* SET POINTER TO NEW ENTRY    0480 01448000
*                                      Y02006                        */ 01449000
@RF00478 DS    0H                                                  0480 01450000
SETDATA1 L     MAPPTR,NEWENTRY                                     0480 01451000
*   DUMPVOLN=CURVOL;                /* SET VOLUME NUMBER INTO ENTRY     01452000
*                                      Y02006                        */ 01453000
         MVC   DUMPVOLN(1,MAPPTR),CURVOL                           0481 01454000
*   IF TREADIN=SWITCHON THEN        /* SET DUMPDEV TO TREADIN Y02006 */ 01455000
         TM    TREADIN(COMPTR),B'00010000'                         0482 01456000
         BNO   @RF00482                                            0482 01457000
*     DUMPDEV=SWITCHON;                                            0483 01458000
         OI    DUMPDEV(MAPPTR),B'10000000'                         0483 01459000
*   ELSE                                                           0484 01460000
*     DUMPDEV=SWTCHOFF;                                            0484 01461000
         B     @RC00482                                            0484 01462000
@RF00482 NI    DUMPDEV(MAPPTR),B'01111111'                         0484 01463000
*   DUMPFADD=PRDADDR;               /* SET BEGINNING ADDRESS INTO  0485 01464000
*                                      ENTRY Y02006                  */ 01465000
@RC00482 ICM   @02,7,PRDINPTR(PARMPTR)                             0485 01466000
         MVC   DUMPFADD(4,MAPPTR),PRDADDR(@02)                     0485 01467000
*   DUMPTTR=TTRNO;                  /* AND SET TTR (OR BLOCK NUMBER)    01468000
*                                      INTO ENTRY Y02006             */ 01469000
         ST    TTRNO,DUMPTTR(,MAPPTR)                              0486 01470000
*SAVELAST:                                                         0487 01471000
*   CURADDR=PRDADDR;                /* SAVE CURRENT ADDRESS Y02006   */ 01472000
SAVELAST SLR   @09,@09                                             0487 01473000
         ICM   @09,7,PRDINPTR(PARMPTR)                             0487 01474000
         MVC   CURADDR(4),PRDADDR(@09)                             0487 01475000
*   IF PRDHDRID^=PRDHDR THEN        /* IS THIS A CPU STATUS RECORD 0488 01476000
*                                      Y02006                        */ 01477000
         CLI   PRDHDRID(@09),X'FF'                                 0488 01478000
         BE    @RF00488                                            0488 01479000
*     CURASID=PRDASID;              /* NO--THEN SAVE ASID Y02006     */ 01480000
         MVC   CURASID(2),PRDASID(@09)                             0489 01481000
*   DUMPLADD=CURADDR;               /* SET ENDING ADDRESS INTO ENTRY    01482000
*                                      Y02006                        */ 01483000
@RF00488 L     @09,CURADDR                                         0490 01484000
         ST    @09,DUMPLADD(,MAPPTR)                               0490 01485000
*   IF PRDHDRID^=PRDHDR THEN        /* AGAIN IS THIS A CPU STATUS  0491 01486000
*                                      RECORD Y02006                 */ 01487000
         ICM   @02,7,PRDINPTR(PARMPTR)                             0491 01488000
         CLI   PRDHDRID(@02),X'FF'                                 0491 01489000
         BE    @RF00491                                            0491 01490000
*     IF CURASID=0 THEN             /* NO--IS IT A REAL DUMP RECORD     01491000
*                                      Y02006                        */ 01492000
         ICM   @02,3,CURASID                                       0492 01493000
         BNZ   @RF00492                                            0492 01494000
*       BUFFREAL=CURADDR;           /* YES-- UPDATE REAL ADDRESS IN     01495000
*                                      BUFFER AMP ENTRY Y020006      */ 01496000
         ST    @09,BUFFREAL(,PARMPTR)                              0493 01497000
*     ELSE                                                         0494 01498000
*       DO;                                                        0494 01499000
         B     @RC00492                                            0494 01500000
@RF00492 DS    0H                                                  0495 01501000
*         BUFFVIRT=CURADDR;         /* NO--UPDATE VIRTUAL ADDRESS IN    01502000
*                                      BUFFER MAP ENTRY Y02006       */ 01503000
         MVC   BUFFVIRT(4,PARMPTR),CURADDR                         0495 01504000
*         IF CURASID=ALLFOX2 THEN   /* IS ASID FOR COMMON DATA Y02006*/ 01505000
         CLC   CURASID(2),@CB00058                                 0496 01506000
         BNE   @RF00496                                            0496 01507000
*           DO;                                                    0497 01508000
*             BUFFASID=0;           /* YES--SET ASID TO ZERO FOR   0498 01509000
*                                      AMDPRRDC Y02006               */ 01510000
         SLR   @09,@09                                             0498 01511000
         STH   @09,BUFFASID(,PARMPTR)                              0498 01512000
*             BUFFCOM=SWITCHON;     /* SET FLAG TO INDICATE DATA FROM   01513000
*                                      COMMON Y02006                 */ 01514000
         OI    BUFFCOM(PARMPTR),B'01000000'                        0499 01515000
*           END;                                                   0500 01516000
*         ELSE                                                     0501 01517000
*           BUFFASID=CURASID;       /* NO--PUT ASID INTO BUFFER AS IS   01518000
*                                      Y02006                        */ 01519000
         B     @RC00496                                            0501 01520000
@RF00496 MVC   BUFFASID(2,PARMPTR),CURASID                         0501 01521000
*       END;                                                       0502 01522000
*   ELSE                                                           0503 01523000
*     BUFFCPU=PRDCPUAD;             /* ITS A CPU STATUS RECORD SO  0503 01524000
*                                      UPDATE CPU ADDRES S IN BUFFER    01525000
*                                      MAP ENTRY Y02006              */ 01526000
         B     @RC00491                                            0503 01527000
@RF00491 ICM   @09,7,PRDINPTR(PARMPTR)                             0503 01528000
         MVC   BUFFCPU(2,PARMPTR),PRDCPUAD(@09)                    0503 01529000
*MAPRET:                                                           0504 01530000
*   RESPECIFY                                                      0504 01531000
*     REG14 RESTRICTED;             /* RESTRICT RETURN REG Y02006    */ 01532000
@RC00491 DS    0H                                                  0504 01533000
MAPRET   DS    0H                                                  0505 01534000
*   REG14=TEMPSAVE;                 /* RESTORE RETURN REG Y02006     */ 01535000
         LR    REG14,TEMPSAVE                                      0505 01536000
*   RESPECIFY                                                      0506 01537000
*     REG14 UNRESTRICTED;           /* UNRESTRICT RETURN REG Y02006  */ 01538000
*   RETURN;                         /* RETURN WITH MAP BUILT Y02006  */ 01539000
@EL00005 DS    0H                                                  0507 01540000
@EF00005 DS    0H                                                  0507 01541000
@ER00005 BR    @14                                                 0507 01542000
*/********************************************************************/ 01543000
*/*                                                                  */ 01544000
*/* THIS SECTION OBTAINS NEW MAP ENTRIES FOR CPU STATUS RECORDS      */ 01545000
*/* IF THE RECORDS ARE NOT IN CPU ADDRESS SEQUENCE.                  */ 01546000
*/*                                                                  */ 01547000
*/********************************************************************/ 01548000
*                                                                  0508 01549000
*CPUREC:                                                           0508 01550000
*   IF PRDADDR>MAXCPUAD THEN        /* IS CPU ADDR VALID Y02006      */ 01551000
CPUREC   ICM   @05,7,PRDINPTR(PARMPTR)                             0508 01552000
         CLC   PRDADDR(4,@05),@CB00060                             0508 01553000
         BNH   @RF00508                                            0508 01554000
*     DO;                                                          0509 01555000
*       CURADDR=INITADDR;           /* REINITIALIZE CURRENT ADDRESS     01556000
*                                      Y02006                        */ 01557000
         MVC   CURADDR(4),@CB00056                                 0510 01558000
*       BADREC=SWITCHON;            /* INDICATE RECORD NOT PLACED  0511 01559000
*                                      INTO MAP Y02006               */ 01560000
         OI    BADREC,B'00000001'                                  0511 01561000
*       GO TO MAPRET;               /* RETURN TO CALLER Y02006       */ 01562000
         B     MAPRET                                              0512 01563000
*     END;                                                         0513 01564000
*   IF PRDADDR=CURADDR+1 THEN       /* IS CPU ADDRESS IN SEQUENCE  0514 01565000
*                                      Y02006                        */ 01566000
@RF00508 ICM   @05,7,PRDINPTR(PARMPTR)                             0514 01567000
         LA    @02,1                                               0514 01568000
         AL    @02,CURADDR                                         0514 01569000
         CL    @02,PRDADDR(,@05)                                   0514 01570000
         BE    @RT00514                                            0514 01571000
*     GO TO CHKVOLS;                /* YES--GO CHECK FOR VOLUME    0515 01572000
*                                      SWITCH Y02006                 */ 01573000
*   RESPECIFY                                                      0516 01574000
*    (REG0,                                                        0516 01575000
*     REG4) RESTRICTED;             /* RESTRICT REGISTERS Y02006     */ 01576000
*   REG4=ADDR(NEWENTRY);            /* NOT IN SEQUENCE, GET STORAGE     01577000
*                                      FOR NEW ENTRY Y02 0006        */ 01578000
         LA    REG4,NEWENTRY                                       0517 01579000
*   REG0=DUMPFRMS;                  /* SET SIZE OF NEW ENTRY Y02006  */ 01580000
         LA    REG0,16                                             0518 01581000
*   GENERATE(GETMAIN EU,LV=(0),A=(R4));/* GET STORAGE FOR NEW ENTRY     01582000
*                                      Y02006                        */ 01583000
         GETMAIN EU,LV=(0),A=(R4)                                       01584000
*   RESPECIFY                                                      0520 01585000
*    (REG0,                                                        0520 01586000
*     REG4) UNRESTRICTED;           /* UNRESTRICT REGISTERS Y02006   */ 01587000
*   IF CPUMAP=0 THEN                /* IS THIS FIRST CPU STATUS    0521 01588000
*                                      RECORD Y02006                 */ 01589000
         ICM   @10,15,CPUMAP(COMPTR)                               0521 01590000
         BNZ   @RF00521                                            0521 01591000
*     DO;                                                          0522 01592000
*       IF IOERR=SWITCHON THEN      /* WAS LAST RECORD IN ERROR    0523 01593000
*                                      Y02006                        */ 01594000
         TM    IOERR(COMPTR),B'10000000'                           0523 01595000
         BNO   @RF00523                                            0523 01596000
*         IPLCPU=256;               /* INDICATE IPLED CPU STATUS   0524 01597000
*                                      UNAVAINLABLE Y02006           */ 01598000
         MVC   IPLCPU(2,COMPTR),@CH00392                           0524 01599000
*       ELSE                                                       0525 01600000
*         IPLCPU=PRDCPUAD;          /* SAVE IPLED CPU ADDRESS Y02006 */ 01601000
         B     @RC00523                                            0525 01602000
@RF00523 ICM   @10,7,PRDINPTR(PARMPTR)                             0525 01603000
         MVC   IPLCPU(2,COMPTR),PRDCPUAD(@10)                      0525 01604000
*     END;                                                         0526 01605000
@RC00523 DS    0H                                                  0527 01606000
*   CURMAP=CPUMAP;                  /* SET PTR TO CPU STATUS MAPS  0527 01607000
*                                      Y02006                        */ 01608000
@RF00521 L     CURMAP,CPUMAP(,COMPTR)                              0527 01609000
*   LASTMAP=ADDR(CPUMAP);           /* ALSO SET PTR TO ADDR OF     0528 01610000
*                                      CURRENT MAP Y02006            */ 01611000
         LA    @07,CPUMAP(,COMPTR)                                 0528 01612000
         ST    @07,LASTMAP                                         0528 01613000
*   GO TO SCANMAP;                  /* NOW GO SCAN MAP Y02006        */ 01614000
         B     SCANMAP                                             0529 01615000
*   END MAPBUILD;                                                  0530 01616000
*                                                                  0530 01617000
*/********************************************************************/ 01618000
*/*                                                                  */ 01619000
*/* THE FOLLOWING ROUTINE SEARCHES THE ASID LISTS FOR THE ASID       */ 01620000
*/* IN REQASID OR AN ASID OF ZERO.  ZERO INDICATES NO MORE ENTRIES   */ 01621000
*/* OR TABLES ARE USED.  WHEN FOUND 'INDEX' IS SET TO THAT ASID.     */ 01622000
*/* AN INDEX RETURNED OF ZERO INDICATES ALL ASID LISTS ARE FULL      */ 01623000
*/* AND THE REQUESTED ASID COULD NOT BE FOUND.                       */ 01624000
*/*                                                                  */ 01625000
*/********************************************************************/ 01626000
*                                                                  0531 01627000
*ASIDSRCH:                                                         0531 01628000
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0531 01629000
ASIDSRCH DS    0H                                                  0532 01630000
*LOOP:                                                             0532 01631000
*   DO INDEX=1 TO ASIDCNT;          /* LOOP TO SEARCH ALL ASIDLISTS     01632000
*                                      Y02006                        */ 01633000
LOOP     LA    INDEX,1                                             0532 01634000
@DL00532 DS    0H                                                  0533 01635000
*     IF ASDXASID(INDEX)=PRDASID|ASDXASID(INDEX)=0 THEN/* IS THIS THE   01636000
*                                      REQUESTED ASID OR 0 Y02006    */ 01637000
         L     @10,INDXADDR                                        0533 01638000
         LR    @07,INDEX                                           0533 01639000
         ALR   @07,@07                                             0533 01640000
         ICM   @01,7,PRDINPTR(PARMPTR)                             0533 01641000
         ST    @07,@TF00001                                        0533 01642000
         ALR   @07,@10                                             0533 01643000
         CLC   ASDXASID-2(2,@07),PRDASID(@01)                      0533 01644000
         BE    @RT00533                                            0533 01645000
         AL    @10,@TF00001                                        0533 01646000
         SLR   @07,@07                                             0533 01647000
         ICM   @07,3,ASDXASID-2(@10)                               0533 01648000
         LTR   @07,@07                                             0533 01649000
         BZ    @RT00533                                            0533 01650000
*       RETURN;                     /* YES--THEN RETURN Y02006       */ 01651000
*   END;                            /* NO--KEEP LOOPING Y02006       */ 01652000
         AH    INDEX,@CH00043                                      0535 01653000
         CH    INDEX,@CH00064                                      0535 01654000
         BNH   @DL00532                                            0535 01655000
*   IF ASDXLNK^=0 THEN              /* IS THERE ANOTHER TABLE Y02006 */ 01656000
         L     @10,INDXADDR                                        0536 01657000
         L     @10,ASDXLNK(,@10)                                   0536 01658000
         LTR   @10,@10                                             0536 01659000
         BZ    @RF00536                                            0536 01660000
*     DO;                                                          0537 01661000
*       INDXADDR=ASDXLNK;           /* YES--SET PTR TO IT Y02006     */ 01662000
         ST    @10,INDXADDR                                        0538 01663000
*       GO TO LOOP;                 /* LOOP THROUGH THIS TABLE Y02006*/ 01664000
         B     LOOP                                                0539 01665000
*     END;                                                         0540 01666000
*   INDEX=0;                        /* INDICATE ASID NOT FOUND AND 0541 01667000
*                                      ALL TABLES FULL Y02006        */ 01668000
@RF00536 SLR   INDEX,INDEX                                         0541 01669000
*   END ASIDSRCH;                   /* RETURN TO CALLER Y02006       */ 01670000
@EL00006 DS    0H                                                  0542 01671000
@EF00006 DS    0H                                                  0542 01672000
@ER00006 BR    @14                                                 0542 01673000
*SYSUER:                                                           0543 01674000
*   SYNADOSW=SWITCHON;              /* SIGNAL SYSUTX ERROR Y02006    */ 01675000
SYSUER   OI    SYNADOSW,B'00100000'                                0543 01676000
*   GEN(BR R14);                                                   0544 01677000
         BR R14                                                         01678000
*                                                                  0545 01679000
*/********************************************************************/ 01680000
*/*                                                                  */ 01681000
*/* DCB ABEND ROUTINE TO TRAP AND IGNORE B37, D37, AND E37           */ 01682000
*/* ABENDS WHEN WRITTING TO THE SYSUT1 WORKFILE.                     */ 01683000
*/*                                                                  */ 01684000
*/********************************************************************/ 01685000
*                                                                  0545 01686000
*DCBABEND:                                                         0545 01687000
*   GENERATE;                                                      0545 01688000
DCBABEND DS    0H                                                  0545 01689000
*                                                         /* OZ09675    01690000
         STM   R14,R13,ERRSAV1      STORE REGS FIRST         OZ09675    01691000
         LA    R13,ERRSAV2          PROVIDE SA FOR PRT ROUT  OZ09675 */ 01692000
*   RESPECIFY                                                      0546 01693000
*     REG1 RESTRICTED;              /* RESTRICT PTR TO ABEND PARM  0546 01694000
*                                      LIST Y02006                   */ 01695000
*   OPTION=BYTEOFF;                 /* RESET PARM LIST OPTION BITS 0547 01696000
*                                      Y02006                        */ 01697000
         MVI   OPTION(REG1),X'00'                                  0547 01698000
*   IF ABEND='B370'X|               /* OZ09675                       */ 01699000
*       ABEND='D370'X|              /* OZ09675                       */ 01700000
*       ABEND='E370'X THEN          /* OZ09675 IS THIS AN ABEND WE 0548 01701000
*                                      SHOULD RECOVER FROM Y02006    */ 01702000
         CLC   ABEND(2,REG1),@CB00640                              0548 01703000
         BE    @RT00548                                            0548 01704000
         CLC   ABEND(2,REG1),@CB00641                              0548 01705000
         BE    @RT00548                                            0548 01706000
         CLC   ABEND(2,REG1),@CB00642                              0548 01707000
         BNE   @RF00548                                            0548 01708000
@RT00548 DS    0H                                                  0549 01709000
*     DO;                           /* YES - RECOVER OZ09675 Y02006  */ 01710000
*       X37SW=SWITCHON;             /* YES--INDICATE IN RECOVERY   0550 01711000
*                                      Y02006                        */ 01712000
         OI    X37SW,B'00000010'                                   0550 01713000
*       LASTIVOL=0;                 /* CLEAR LAST INPUT VOLUME NUMBER   01714000
*                                      SO A NEW MAP ENTRY WILL BE  0551 01715000
*                                      CREATED Y02006                */ 01716000
         SLR   @02,@02                                             0551 01717000
         STH   @02,LASTIVOL                                        0551 01718000
*       TREADIN=SWITCHON;           /* INDICATE INPUT IS NOW FROM  0552 01719000
*                                      TAPE Y02006                   */ 01720000
         OI    TREADIN(COMPTR),B'00010000'                         0552 01721000
*       OKIGNORE=SWITCHON;          /* SET IGNORE BIT IN PARM LIST 0553 01722000
*                                      Y02006                        */ 01723000
         OI    OKIGNORE(REG1),B'00000100'                          0553 01724000
*       GEN REFS(APRTMSG);                                         0554 01725000
*                                   /* WRITE MESSAGE Y02006          */ 01726000
    BRPRTMSG AMD280I,L'AMD280I   ' <- END QUOTE FOR PLS Y02006          01727000
*     END;                          /* YES - RECOVER OZ09675         */ 01728000
*   GENERATE;                                                      0556 01729000
@RF00548 DS    0H                                                  0556 01730000
*                                                         /* OZ09675    01731000
         LM    R14,R13,ERRSAV1      RESTORE REGS             OZ09675    01732000
         BR    R14                  RETURN TO CHECK          OZ09675    01733000
ERRSAV1  DS    16F                  SAVE AREA FOR SYNAD      OZ09675    01734000
ERRSAV2  DS    20F                  SAVE AREA FOR PRT ROUT   OZ09675    01735000
*   RESPECIFY                                                      0557 01736000
*     REG1 UNRESTRICTED;            /* RELEASE PTR TO ABEND PARM LIST   01737000
*                                      Y02006                        */ 01738000
*/********************************************************************/ 01739000
*/*                                                                  */ 01740000
*/*                           WORK FILE DCB                          */ 01741000
*/*                                                                  */ 01742000
*/********************************************************************/ 01743000
*                                                                  0558 01744000
*   GEN;                                                           0558 01745000
SYSUDCB  DCB   DSORG=PS,                                               *01746000
               MACRF=WP,                                               *01747000
               RECFM=F,                                                *01748000
               BLKSIZE=4104,                                     Y02006*01749000
               LRECL=4104,                                       Y02006*01750000
               SYNAD=SYSUER                                             01751000
*   END WRITE;                                                     0559 01752000
         B     @EL00004                                            0559 01753000
*   END AMDPRLOD                                                   0560 01754000
*                                                                  0560 01755000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01756000
*/*%INCLUDE SYSLIB  (AMDDATA )                                       */ 01757000
*/*%INCLUDE SYSLIB  (COMMON  )                                       */ 01758000
*                                                                  0560 01759000
*       ;                                                          0560 01760000
@DATA    DS    0H                                                       01761000
@CH00043 DC    H'1'                                                     01762000
@CH00143 DC    H'2'                                                     01763000
@CH00210 DC    H'5'                                                     01764000
@CH00064 DC    H'18'                                                    01765000
@CH00157 DC    H'133'                                                   01766000
@CH00392 DC    H'256'                                                   01767000
@CH00644 DC    H'3849'                                                  01768000
@CH00039 DC    H'4104'                                                  01769000
@CH00643 DC    H'4124'                                                  01770000
@CH00058 DC    XL2'FFFF'                                                01771000
@SM00659 MVC   OUTBUF(0,@10),PRDINPUT(@07)                              01772000
         DS    0F                                                       01773000
@SA00001 DS    18F                                                      01774000
@SA00003 DS    13F                                                      01775000
@SA00004 DS    13F                                                      01776000
@TF00001 DS    F                                                        01777000
         DS    0F                                                       01778000
@CF00664 DC    F'4095'                                                  01779000
@CF00041 DC    F'4096'                                                  01780000
@CH00041 EQU   @CF00041+2                                               01781000
         DS    0D                                                       01782000
INDXADDR DS    A                                                        01783000
HEADTTR  DC    XL4'00000100'                                            01784000
FIRSTTR  DC    XL4'00000001'                                            01785000
STOPSAVE DS    A                                                        01786000
LASTMAP  DS    A                                                        01787000
NEWENTRY DS    A                                                        01788000
LASTIVOL DS    H                                                        01789000
CURIVOL  DC    H'0'                                                     01790000
POSTIPL  DS    H                                                        01791000
CURVOL   DS    AL1                                                      01792000
@CC00062 DC    C'AMDSADMP'                                              01793000
@CC00596 DC    C'PREFORM '                                              01794000
@CB00568 DC    X'00000000000000000000'                                  01795000
@CB00056 DC    X'0000FFFF'                                              01796000
@CB00060 DC    X'0000003F'                                              01797000
@CB00054 DC    X'8000'                                                  01798000
@CB00058 DC    X'FFFF'                                                  01799000
@CB00640 DC    X'B370'                                                  01800000
@CB00641 DC    X'D370'                                                  01801000
@CB00642 DC    X'E370'                                                  01802000
SWITCHES DS    BL1                                                      01803000
         ORG   SWITCHES                                                 01804000
LOADMODE DS    BL1                                                      01805000
SCANSW   EQU   SWITCHES+0                                               01806000
SYNADOSW EQU   SWITCHES+0                                               01807000
SYNADISW EQU   SWITCHES+0                                               01808000
HDRSW    EQU   SWITCHES+0                                               01809000
SYS1SW   EQU   SWITCHES+0                                               01810000
X37SW    EQU   SWITCHES+0                                               01811000
BADREC   EQU   SWITCHES+0                                               01812000
         ORG   SWITCHES+1                                               01813000
SYSDUMP  DC    CL10'SYS1.DUMP0'                                         01814000
SYSUT    DC    CL8'SYSUT'                                               01815000
JFCBBUF  DS    CL176                                                    01816000
         DS    CL2                                                      01817000
EXITLIST DS    CL4                                                      01818000
         ORG   EXITLIST                                                 01819000
@NM00001 DC    X'87'                                                    01820000
@NM00002 DC    AL3(JFCBBUF)                                             01821000
         ORG   EXITLIST+4                                               01822000
EXITLST2 DS    CL4                                                      01823000
         ORG   EXITLST2                                                 01824000
@NM00003 DC    X'91'                                                    01825000
@NM00004 DC    AL3(DCBABEND)                                            01826000
         ORG   EXITLST2+4                                               01827000
AMD174I  DC    CL22'AMD174I SYSUT1 LOADED'                              01828000
         DS    CL2                                                      01829000
CURADDR  DS    CL4                                                      01830000
CURASID  DS    CL2                                                      01831000
         DS    CL2                                                      01832000
SVCTTR   DS    CL4                                                      01833000
AMD280I  DC    CL57'AMD280I INSUFFICIENT SYSUT1 SPACE -- PROCESSING CONC01834000
               TINUES'                                                  01835000
AMD291I  DC    CL37'AMD291I PERMaNENT I/O ERROR ON SYSUT1'              01836000
         DS    CL2                                                      01837000
PATCH    DC    40F'0'                                                   01838000
AMDPRLOD CSECT                                                          01839000
*                                                                       01840000
DTAE     EQU   32                  DATA EBCDIC BIT                      01841000
DTAC     EQU   16                  DATA IN CORE BIT                     01842000
DTAP     EQU   8                   DATA PTR BIT                         01843000
DTA      EQU   4                   DATA INCLUDED BIT                    01844000
LBLP     EQU   2                   LABEL PTR BIT                        01845000
LBL      EQU   1                   LABEL INCLUDED BIT                   01846000
AMDPRLOD CSECT                                                          01847000
********************************************************************/   01848000
*                                                                  */   01849000
*                          INPUT DCB                               */   01850000
*                                                                  */   01851000
********************************************************************/   01852000
DCBLST   RDJFCB  (INDCB),MF=L                                           01853000
INDCB    DCB   MACRF=(RP,W),                                           *01854000
               DSORG=PS,                                               *01855000
               BLKSIZE=4104,                                    Y02006 *01856000
               LRECL=4104,                                      Y02006 *01857000
               RECFM=U,                                                *01858000
               EXLST=EXITLIST,                                  Y02006 *01859000
               SYNAD=TAPEER,                                           *01860000
               EODAD=RDEOF                                              01861000
AMDPRLOD CSECT                                                          01862000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01863000
@01      EQU   01                                                       01864000
@02      EQU   02                                                       01865000
@03      EQU   03                                                       01866000
@04      EQU   04                                                       01867000
@05      EQU   05                                                       01868000
@06      EQU   06                                                       01869000
@07      EQU   07                                                       01870000
@08      EQU   08                                                       01871000
@09      EQU   09                                                       01872000
@10      EQU   10                                                       01873000
@11      EQU   11                                                       01874000
@12      EQU   12                                                       01875000
@13      EQU   13                                                       01876000
@14      EQU   14                                                       01877000
@15      EQU   15                                                       01878000
PARMPTR  EQU   @06                                                      01879000
MAPPTR   EQU   @07                                                      01880000
SVCBUFAD EQU   @09                                                      01881000
INDEX    EQU   @02                                                      01882000
LASTENTY EQU   @02                                                      01883000
CURMAP   EQU   @10                                                      01884000
LASTVOL  EQU   @04                                                      01885000
N1       EQU   @08                                                      01886000
I        EQU   @04                                                      01887000
TEMPSAVE EQU   @08                                                      01888000
IOERRCNT EQU   @04                                                      01889000
INTTR    EQU   @08                                                      01890000
TTRNO    EQU   @09                                                      01891000
REG0     EQU   @00                                                      01892000
REG1     EQU   @01                                                      01893000
REG2     EQU   @02                                                      01894000
REG3     EQU   @03                                                      01895000
REG4     EQU   @04                                                      01896000
REG14    EQU   @14                                                      01897000
COMPTR   EQU   @12                                                      01898000
BASE1    EQU   @11                                                      01899000
BASE2    EQU   @10                                                      01900000
BASE3    EQU   @09                                                      01901000
BUFREG   EQU   @06                                                      01902000
CNTREG   EQU   @03                                                      01903000
COMBASE  EQU   @12                                                      01904000
LINEREG  EQU   @08                                                      01905000
PREG     EQU   @01                                                      01906000
R0       EQU   @00                                                      01907000
R1       EQU   @01                                                      01908000
R10      EQU   @10                                                      01909000
R11      EQU   @11                                                      01910000
R12      EQU   @12                                                      01911000
R13      EQU   @13                                                      01912000
R14      EQU   @14                                                      01913000
R15      EQU   @15                                                      01914000
R2       EQU   @02                                                      01915000
R3       EQU   @03                                                      01916000
R4       EQU   @04                                                      01917000
R5       EQU   @05                                                      01918000
R6       EQU   @06                                                      01919000
R7       EQU   @07                                                      01920000
R8       EQU   @08                                                      01921000
R9       EQU   @09                                                      01922000
STOPBASE EQU   @05                                                      01923000
JFCBDSNM EQU   0                                                        01924000
JFCBTSDM EQU   0                                                        01925000
JFCBFLSQ EQU   0                                                        01926000
JFCBMASK EQU   0                                                        01927000
IOBCSWCT EQU   0                                                        01928000
SVCBUF   EQU   0                                                        01929000
OUTBUF   EQU   0                                                        01930000
DUMPFORM EQU   0                                                        01931000
@NM00005 EQU   DUMPFORM                                                 01932000
DUMPVOLN EQU   @NM00005                                                 01933000
DUMPDEV  EQU   DUMPVOLN                                                 01934000
DUMPLINK EQU   @NM00005+1                                               01935000
DUMPFADD EQU   DUMPFORM+4                                               01936000
DUMPLADD EQU   DUMPFORM+8                                               01937000
DUMPTTR  EQU   DUMPFORM+12                                              01938000
ASIDLIST EQU   0                                                        01939000
ASDXLNK  EQU   ASIDLIST                                                 01940000
ASDXASID EQU   ASIDLIST+4                                               01941000
ASDXMAP  EQU   ASIDLIST+40                                              01942000
BUFFMAP  EQU   0                                                        01943000
BUFFLINK EQU   BUFFMAP                                                  01944000
@NM00007 EQU   BUFFMAP+4                                                01945000
BUFFFLAG EQU   @NM00007                                                 01946000
BUFFCOM  EQU   BUFFFLAG                                                 01947000
BUFFPTR  EQU   @NM00007+1                                               01948000
BUFFREAL EQU   BUFFMAP+8                                                01949000
BUFFVIRT EQU   BUFFMAP+12                                               01950000
BUFFASID EQU   BUFFMAP+16                                               01951000
BUFFCPU  EQU   BUFFMAP+18                                               01952000
ABENDLST EQU   0                                                        01953000
ABEND    EQU   ABENDLST                                                 01954000
OPTION   EQU   ABENDLST+3                                               01955000
OKIGNORE EQU   OPTION                                                   01956000
PRDINPUT EQU   0                                                        01957000
PRDHDRID EQU   PRDINPUT                                                 01958000
PRDRECID EQU   PRDINPUT+1                                               01959000
PRDASID  EQU   PRDINPUT+2                                               01960000
PRDMODNM EQU   PRDINPUT+4                                               01961000
PRDTODVL EQU   PRDINPUT+12                                              01962000
PRDTITLE EQU   PRDINPUT+20                                              01963000
PRDREGS  EQU   PRDINPUT+120                                             01964000
PRDFPR   EQU   PRDREGS                                                  01965000
PRDCVT   EQU   PRDINPUT+288                                             01966000
PRDERRID EQU   PRDINPUT+324                                             01967000
COMMON   EQU   0                                                        01968000
CURBUF   EQU   COMMON+48                                                01969000
CVTADDR  EQU   COMMON+56                                                01970000
INDD     EQU   COMMON+68                                                01971000
FILESEQ  EQU   COMMON+76                                                01972000
SWA      EQU   COMMON+122                                               01973000
SETCVTSW EQU   SWA                                                      01974000
SWB      EQU   COMMON+123                                               01975000
IOERR    EQU   SWB                                                      01976000
ENDSW    EQU   SWB                                                      01977000
QSYSUT2  EQU   SWB                                                      01978000
SWC      EQU   COMMON+124                                               01979000
POSITSW  EQU   SWC                                                      01980000
TREADIN  EQU   SWC                                                      01981000
SWD      EQU   COMMON+125                                               01982000
SWE      EQU   COMMON+126                                               01983000
BUILDMAP EQU   SWE                                                      01984000
SWF      EQU   COMMON+127                                               01985000
QSADMP   EQU   SWF                                                      01986000
DMPIC    EQU   SWF                                                      01987000
QUT1LOD  EQU   SWF                                                      01988000
BUFSW    EQU   COMMON+128                                               01989000
PREFM    EQU   BUFSW                                                    01990000
PRSW     EQU   COMMON+129                                               01991000
BLANKS   EQU   COMMON+214                                               01992000
TITLEMOD EQU   COMMON+347                                               01993000
TITLEDTE EQU   COMMON+364                                               01994000
TITLETME EQU   COMMON+379                                               01995000
TABLE    EQU   COMMON+659                                               01996000
HEXTABL  EQU   TABLE+63                                                 01997000
AWRITE   EQU   COMMON+1500                                              01998000
APRTMSG  EQU   COMMON+1504                                              01999000
STOPEXIT EQU   COMMON+1528                                              02000000
AEREXIT  EQU   COMMON+1536                                              02001000
DCBADDRS EQU   COMMON+1608                                              02002000
AINDCB   EQU   DCBADDRS+12                                              02003000
@NM00064 EQU   DCBADDRS+16                                              02004000
@NM00065 EQU   @NM00064                                                 02005000
ASYSUDCB EQU   @NM00064+1                                               02006000
REALMAP  EQU   COMMON+1644                                              02007000
QASID    EQU   COMMON+1664                                              02008000
IPLCPU   EQU   COMMON+1666                                              02009000
SACSWCAW EQU   COMMON+1684                                              02010000
HDRREGS  EQU   COMMON+1696                                              02011000
HDRTITLE EQU   COMMON+1864                                              02012000
ASIDNDX  EQU   COMMON+1968                                              02013000
CPUMAP   EQU   COMMON+1972                                              02014000
BUFERMAP EQU   COMMON+1980                                              02015000
I3800SW  EQU   COMMON+2076                                              02016000
TITLEKEY EQU   COMMON+2077                                              02017000
Z9ERRID  EQU   COMMON+2116                                              02018000
PRDINPTR EQU   BUFFPTR                                                  02019000
OFLWRDCB EQU   DCBOFLGS                                                 02020000
PRDFLC   EQU   PRDFPR                                                   02021000
PRDCSW   EQU   PRDFLC                                                   02022000
PRDCAW   EQU   PRDFLC+8                                                 02023000
@NM00015 EQU   PRDHDRID                                                 02024000
PRDADDR  EQU   @NM00015+4                                               02025000
@NM00017 EQU   PRDHDRID                                                 02026000
PRDFLAGS EQU   @NM00017+2                                               02027000
PRDCPUAD EQU   @NM00017+6                                               02028000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02029000
@NM00023 EQU   @NM00017+8                                               02030000
@NM00022 EQU   @NM00017+4                                               02031000
@NM00021 EQU   @NM00017+3                                               02032000
@NM00020 EQU   PRDFLAGS                                                 02033000
PRDGPRVL EQU   PRDFLAGS                                                 02034000
PRDSSINV EQU   PRDFLAGS                                                 02035000
PRDUNIPR EQU   PRDFLAGS                                                 02036000
@NM00019 EQU   @NM00017+1                                               02037000
@NM00018 EQU   @NM00017                                                 02038000
PRDDATA  EQU   @NM00015+8                                               02039000
@NM00016 EQU   @NM00015+2                                               02040000
PRDKEY2  EQU   @NM00015+1                                               02041000
PRDKEY1  EQU   @NM00015                                                 02042000
@NM00014 EQU   PRDFLC+12                                                02043000
Z9SUFLG  EQU   COMMON+2115                                              02044000
Z9SUBITS EQU   COMMON+2100                                              02045000
Z9SVCBUF EQU   COMMON+2096                                              02046000
TITLESTK EQU   TITLEKEY+12                                              02047000
@NM00075 EQU   TITLEKEY                                                 02048000
I3800204 EQU   I3800SW                                                  02049000
I380080  EQU   I3800SW                                                  02050000
I3800ULN EQU   I3800SW                                                  02051000
I3800KEY EQU   I3800SW                                                  02052000
@NM00074 EQU   I3800SW                                                  02053000
@NM00073 EQU   I3800SW                                                  02054000
@NM00072 EQU   I3800SW                                                  02055000
@NM00071 EQU   I3800SW                                                  02056000
CSADDR   EQU   COMMON+2072                                              02057000
@NM00070 EQU   COMMON+2070                                              02058000
TOPICHDR EQU   COMMON+2060                                              02059000
DFLTCSA  EQU   COMMON+2056                                              02060000
LPAMAX   EQU   COMMON+2052                                              02061000
DNUCTOP  EQU   COMMON+2048                                              02062000
XLMAX    EQU   COMMON+2044                                              02063000
DQEMAX   EQU   COMMON+2042                                              02064000
ASCBMAX  EQU   COMMON+2040                                              02065000
TCBMAX   EQU   COMMON+2038                                              02066000
SRBMAX   EQU   COMMON+2036                                              02067000
DDMAX    EQU   COMMON+2034                                              02068000
DEBMAX   EQU   COMMON+2032                                              02069000
JPQMAX   EQU   COMMON+2030                                              02070000
LLEMAX   EQU   COMMON+2028                                              02071000
PQEMAX   EQU   COMMON+2026                                              02072000
RBMAX    EQU   COMMON+2024                                              02073000
@NM00069 EQU   COMMON+2023                                              02074000
EXITFLAG EQU   COMMON+2022                                              02075000
AUSRASID EQU   COMMON+2020                                              02076000
AUSRTCBA EQU   COMMON+2016                                              02077000
AUSRDEL  EQU   COMMON+2012                                              02078000
AUSREXIT EQU   COMMON+2008                                              02079000
AUSRINIT EQU   COMMON+2004                                              02080000
ASRBFMT  EQU   COMMON+2000                                              02081000
AASCBFMT EQU   COMMON+1996                                              02082000
BRRDADJ  EQU   COMMON+1992                                              02083000
BRRDINIT EQU   COMMON+1988                                              02084000
BRRDDATA EQU   COMMON+1984                                              02085000
ASCBMAP  EQU   COMMON+1976                                              02086000
@NM00068 EQU   COMMON+1964                                              02087000
ASVTADDR EQU   COMMON+1680                                              02088000
PREFXRGV EQU   COMMON+1676                                              02089000
PREFXRGR EQU   COMMON+1672                                              02090000
CURASCB  EQU   COMMON+1668                                              02091000
QAPFT    EQU   COMMON+1660                                              02092000
@NM00067 EQU   COMMON+1656                                              02093000
REALMAX  EQU   COMMON+1652                                              02094000
SEGTABOR EQU   COMMON+1648                                              02095000
@NM00066 EQU   COMMON+1641                                              02096000
EDITER   EQU   COMMON+1640                                              02097000
AROOT    EQU   COMMON+1636                                              02098000
AEDITCB  EQU   COMMON+1632                                              02099000
TRCCOUNT EQU   COMMON+1628                                              02100000
ENDLIST  EQU   @NM00065                                                 02101000
ARDRDCB  EQU   DCBADDRS+8                                               02102000
APTRDCB  EQU   DCBADDRS+4                                               02103000
AOUTDCB  EQU   DCBADDRS                                                 02104000
ATCBSMRY EQU   COMMON+1604                                              02105000
ATCBSMFR EQU   COMMON+1600                                              02106000
ONGOPTR  EQU   COMMON+1596                                              02107000
AEND     EQU   COMMON+1592                                              02108000
AERRMSGA EQU   COMMON+1584                                              02109000
BUFREINT EQU   COMMON+1580                                              02110000
BUFSUM   EQU   COMMON+1576                                              02111000
APRTSTG  EQU   COMMON+1572                                              02112000
AFORMAT  EQU   COMMON+1568                                              02113000
ASTPROUT EQU   COMMON+1564                                              02114000
APCBENQ  EQU   COMMON+1560                                              02115000
ATCBRTRV EQU   COMMON+1556                                              02116000
ATCBREMV EQU   COMMON+1552                                              02117000
ATCBSAVE EQU   COMMON+1548                                              02118000
QATMERTN EQU   COMMON+1544                                              02119000
ALOADER  EQU   COMMON+1540                                              02120000
SYNMSGA  EQU   COMMON+1532                                              02121000
ARGNBND  EQU   COMMON+1524                                              02122000
AWRDCNVT EQU   COMMON+1520                                              02123000
AADRCNVT EQU   COMMON+1516                                              02124000
AFMTLINE EQU   COMMON+1512                                              02125000
ASYNTAX  EQU   COMMON+1508                                              02126000
NONBLNK  EQU   COMMON+1244                                              02127000
BLNK     EQU   COMMON+988                                               02128000
@NM00063 EQU   COMMON+972                                               02129000
@NM00062 EQU   COMMON+915                                               02130000
EBCTABL  EQU   HEXTABL+10                                               02131000
@NM00061 EQU   HEXTABL                                                  02132000
@NM00060 EQU   TABLE                                                    02133000
CAPTABL  EQU   COMMON+403                                               02134000
TITLEPGE EQU   COMMON+394                                               02135000
@NM00059 EQU   COMMON+392                                               02136000
@NM00058 EQU   COMMON+377                                               02137000
@NM00057 EQU   COMMON+362                                               02138000
TITLEMSG EQU   COMMON+283                                               02139000
MSG2     EQU   COMMON+257                                               02140000
MSG1     EQU   COMMON+231                                               02141000
STOP     EQU   COMMON+227                                               02142000
TITLE    EQU   COMMON+222                                               02143000
WTORMSG  EQU   COMMON+133                                               02144000
@NM00056 EQU   COMMON+130                                               02145000
@NM00055 EQU   PRSW                                                     02146000
@NM00054 EQU   PRSW                                                     02147000
PRNTREAL EQU   PRSW                                                     02148000
PRNTRL   EQU   PRSW                                                     02149000
TTLSW    EQU   PRSW                                                     02150000
@NM00053 EQU   PRSW                                                     02151000
QSEGTBSW EQU   PRSW                                                     02152000
@NM00052 EQU   PRSW                                                     02153000
@NM00051 EQU   BUFSW                                                    02154000
@NM00050 EQU   BUFSW                                                    02155000
@NM00049 EQU   BUFSW                                                    02156000
@NM00048 EQU   BUFSW                                                    02157000
@NM00047 EQU   BUFSW                                                    02158000
@NM00046 EQU   BUFSW                                                    02159000
@NM00045 EQU   BUFSW                                                    02160000
@NM00044 EQU   SWF                                                      02161000
@NM00043 EQU   SWF                                                      02162000
PAGEOK   EQU   SWF                                                      02163000
NUCTFRMC EQU   SWF                                                      02164000
QPRDINIT EQU   SWF                                                      02165000
@NM00042 EQU   SWE                                                      02166000
@NM00041 EQU   SWE                                                      02167000
@NM00040 EQU   SWE                                                      02168000
TITLESW  EQU   SWE                                                      02169000
RESPC    EQU   SWE                                                      02170000
@NM00039 EQU   SWE                                                      02171000
STOPSW   EQU   SWE                                                      02172000
@NM00038 EQU   SWD                                                      02173000
GPRSFND  EQU   SWD                                                      02174000
CONTSW   EQU   SWD                                                      02175000
NOLOADSW EQU   SWD                                                      02176000
NOSTDMG  EQU   SWD                                                      02177000
@NM00037 EQU   SWD                                                      02178000
@NM00036 EQU   SWD                                                      02179000
FLSHMODE EQU   SWD                                                      02180000
@NM00035 EQU   SWC                                                      02181000
@NM00034 EQU   SWC                                                      02182000
SEGRD    EQU   SWC                                                      02183000
EDITSW   EQU   SWC                                                      02184000
SETFLSH  EQU   SWC                                                      02185000
MSTRSW   EQU   SWC                                                      02186000
@NM00033 EQU   SWB                                                      02187000
@NM00032 EQU   SWB                                                      02188000
@NM00031 EQU   SWB                                                      02189000
@NM00030 EQU   SWB                                                      02190000
FMTERR   EQU   SWB                                                      02191000
RDRSW    EQU   SWA                                                      02192000
@NM00029 EQU   SWA                                                      02193000
GOSW     EQU   SWA                                                      02194000
@NM00028 EQU   SWA                                                      02195000
@NM00027 EQU   SWA                                                      02196000
@NM00026 EQU   SWA                                                      02197000
@NM00025 EQU   SWA                                                      02198000
LINENUM  EQU   COMMON+120                                               02199000
LINENUMB EQU   COMMON+118                                               02200000
SIXTEEN  EQU   COMMON+116                                               02201000
TWELVE   EQU   COMMON+114                                               02202000
ELEVEN   EQU   COMMON+112                                               02203000
HTEN     EQU   COMMON+110                                               02204000
EIGHT    EQU   COMMON+108                                               02205000
SEVEN    EQU   COMMON+106                                               02206000
FIVE     EQU   COMMON+104                                               02207000
FOUR     EQU   COMMON+102                                               02208000
THREE    EQU   COMMON+100                                               02209000
TWO      EQU   COMMON+98                                                02210000
ONEA     EQU   COMMON+96                                                02211000
READTM   EQU   COMMON+92                                                02212000
RDERCNT  EQU   COMMON+88                                                02213000
READNO   EQU   COMMON+84                                                02214000
RDENTRY  EQU   COMMON+80                                                02215000
@NM00024 EQU   COMMON+79                                                02216000
RETCODE  EQU   COMMON+78                                                02217000
STORSIZE EQU   COMMON+64                                                02218000
PCBPTR   EQU   COMMON+60                                                02219000
TCBLIST  EQU   COMMON+52                                                02220000
PAGENUMB EQU   COMMON+44                                                02221000
LINECNT  EQU   COMMON+40                                                02222000
SIX      EQU   COMMON+36                                                02223000
NUCTOP   EQU   COMMON+32                                                02224000
WORK1    EQU   COMMON+24                                                02225000
DELIMCD  EQU   COMMON+20                                                02226000
KYWDEND  EQU   COMMON+16                                                02227000
KYWDBGN  EQU   COMMON+12                                                02228000
VERBEND  EQU   COMMON+8                                                 02229000
VERBGN   EQU   COMMON+4                                                 02230000
ERRADDR  EQU   COMMON                                                   02231000
@NM00013 EQU   PRDINPUT+334                                             02232000
@NM00012 EQU   PRDINPUT+292                                             02233000
PRDPSW   EQU   PRDREGS+160                                              02234000
PRDCR    EQU   PRDREGS+96                                               02235000
PRDGPR   EQU   PRDREGS+32                                               02236000
@NM00011 EQU   ABENDLST+4                                               02237000
@NM00010 EQU   OPTION                                                   02238000
@NM00009 EQU   OPTION                                                   02239000
RC       EQU   ABENDLST+2                                               02240000
@NM00008 EQU   BUFFFLAG                                                 02241000
BUFFINVL EQU   BUFFFLAG                                                 02242000
DUMPZ    EQU   DUMPTTR+3                                                02243000
DUMPR    EQU   DUMPTTR+2                                                02244000
DUMPTT   EQU   DUMPTTR                                                  02245000
DUMPVOL  EQU   DUMPVOLN                                                 02246000
@NM00006 EQU   DUMPVOLN                                                 02247000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02248000
@RT00102 EQU   LODEXIT                                                  02249000
@RT00154 EQU   SCAN                                                     02250000
@RT00270 EQU   RESET                                                    02251000
@RT00298 EQU   RDEOF                                                    02252000
@RF00298 EQU   IGNORE1                                                  02253000
@RT00305 EQU   RDEOF                                                    02254000
@RT00307 EQU   PRINT                                                    02255000
@RT00318 EQU   RDEOF                                                    02256000
@RT00329 EQU   RDEOF                                                    02257000
@RT00335 EQU   @EL00003                                                 02258000
@RT00337 EQU   RDEOF                                                    02259000
@RT00348 EQU   UTWRITE                                                  02260000
@RT00360 EQU   USETAPE                                                  02261000
@RT00393 EQU   CPUREC                                                   02262000
@RT00401 EQU   CHKVOLS                                                  02263000
@RT00403 EQU   SCANMAP                                                  02264000
@RT00453 EQU   SETDATA                                                  02265000
@RT00461 EQU   SAVELAST                                                 02266000
@RC00492 EQU   @RC00491                                                 02267000
@RC00496 EQU   @RC00491                                                 02268000
@RT00514 EQU   CHKVOLS                                                  02269000
@RT00533 EQU   @EL00006                                                 02270000
@ENDDATA EQU   *                                                        02271000
         END   AMDPRLOD,(C'PLS1320',0701,77069)                         02272000
