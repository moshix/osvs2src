AMDPRMST START                                                          00070002
         TITLE 'AMDPRMST - GET MASTER ROUTINE'                          00140002
* C 342000,350000,350700,376000,377000,379910                    Y02006 00210002
* C 429000-430000,442500-442600,449000,467500,499000,501000      Y02006 00280002
* C 506000,525100,554500,564500-565000,574500-575000             Y02006 00350002
* C 611700-616200,621338,698200-698400,700100-717000,726000      Y02006 00420002
* C 755000-756000,763000,763600,767000-769000,773500-774000      Y02006 00490002
* C 776500-777000,788000,795500-801000,806500,829500,830600      Y02006 00560002
* C 847500,855000,890700-890800                                  Y02006 00630002
* A 336500-336800,339500-339700                                  Y02006 00700002
* A 340500,344600,345200,345700,350600-350900                    Y02006 00770002
* A 367500-368000,377100-377984,380000-380500,418100-426500      Y02006 00840002
* A 441500-442000,446000,446600,450500-456500,488500-488600      Y02006 00910002
* A 446540-446596,504500-505800,525600-526498                    Y02006 00980002
* A 531200-554360,611100-611120,616940-620719,626500             Y02006 01050002
* A 727600-727956,756000-756920,775500-775998,827500-827600      Y02006 01120002
* A 765500,771100-771600                                         Y02006 01190002
* A 830972,832500,833200-833555,847800-847920                    Y02006 01260002
* A 853500-853700,854100-854200,874600-874992,890500-890600      Y02006 01330002
* A 890940-891000                                                Y02006 01400002
* D 341000-341200,344000-346000,350500-350600,368000-370000      Y02006 01470002
* D 373000-375000,379000-412000,426000-427000,442000,446500      Y02006 01540002
* D 451000-462000,469000-479000,532000-546000,548500             Y02006 01610002
* D 554500-559000,565000-569000,575000-608000,612080-615000      Y02006 01680002
* D 617000-618000,637000-638000,701000-715000,749000-751800      Y02006 01750002
* D 777000-781000,796000-797000,813000-817000,830972-830980      Y02006 01820002
* D 857000-857500                                                Y02006 01890002
* A 336000,340000-344600,347000-350500,361000,371000-385000      Y01980 01960002
* A 389000-405000,419000-446500,448000,452000,454000,457500      Y01980 02030002
* A 460000-467500,483000-484000,498000-499000                    Y01980 02100002
* A 504000,506000-507000,523000,532000-549000,554500-555000      Y01980 02170002
* A 560000,565000,568000-570000,575000,580000,585000             Y01980 02240002
* A 587000-589000,593000-594000,603500-620000                    Y01980 02310002
* A 624000-635000,647000,706000,749000-833992,841000             Y01980 02380002
* A 846000-865000,873000-874000,885000-891000                    Y01980 02450002
* A 350600,394100-394600,890700                                  YM1463 02520002
* A 829500,830500-830600,830800-831000,833940-833944             YM1473 02590002
* A 833992-833999,841500,854500,858000-858500                    YM1473 02660002
* C 575000,611120                                                YM4501 02730002
* A 833992-833999,841500,854500,858000-858500                    YM1473 02800002
* C 575000,611120                                               @YM4501 02870002
* /* START OF SPECIFICATIONS ****                                       02940002
*                                                                       03010002
*01*  MODULE-NAME = AMDPRMST                                            03080002
*                                                                       03150002
*02*     CSECT NAME - AMDPRMST, AMDPRMSM, AMDPRBIT              OZ13033 03220000
*                                                                       03290002
*01*  DESCRIPTIVE-NAME = GET MASTER ROUTINE                             03360002
*                                                                       03430002
*01*  COPYRIGHT = NONE                                                  03500002
*                                                                       03570002
*01*  STATUS - OS/VS2 RELEASE 03.7          SU17 SUPPORT        OZ13033 03640000
*                                                                       03710002
*01*  FUNCTION = PRIMARY COMMON INITIALIZATION ROUTINE FOR AMDPRDMP     03780002
*                                                                       03850002
*02*     OPERATION = AMDPRMST EXTRACTS FREQUENTLY NEEDED INFORMATION    03920002
*        FROM THE DUMP DATA SET BY USING THE BRREAD PRIVATE MACRO. IT   03990002
*        THEN STORES THIS INFORMATION IN THE COMMON CSECT. A COMPLETE   04060002
*        LIST OF THE DATA THAT IS STORED MAY BE FOUND IN THE OUTPUT     04130002
*        SECTION. IF ANY ERRORS OCCUR DURING DUMP INITIALIZATION,       04200002
*        APPROPRIATE MESSAGES ARE ISSUED AND PROCESSING IS CONTINUED IF 04270002
*        AT ALL POSSIBLE. IF A DUMP TITLE WAS CONTAINED IN THE HEADER   04340002
*        RECORD, THIS TITLE IS PRINTED ON THE FIRST PAGE OF THE DUMP    04410002
*        LISTING.                                                       04480002
*                                                                       04550002
*        SOME SPECIAL PROCESSING THAT MST PERFORMS INCLUDES THE         04620002
*        FOLLOWING:                                                     04690002
*                                                                       04760002
*        IF THE CVT ADDRESS AS DETERMINED FROM EITHER CVTADDR OR        04830002
*        LOCATION X'4C' IS ZERO, THE DUMP DATA SET IS SCANNED FOR THE   04900002
*        INSTRUCTION SEQUENCE SVC 3 FOLLOWED BY A BR 14 (USUALLY FOUND  04970002
*        AT LOCATION CVT +X'50') IN AN ATTEMPT TO LOCATE THE CVT. FOR   05040002
*        VIRTUAL DUMPS, THE ASIDNDX AND VIRTUAL MAPS CREATED BY         05110002
*        AMDPREAD ARE USED TO ACCESS RECORDS KNOWN TO BE PRESENT. FOR   05180002
*        REAL DUMPS, THE REAL MAPS ARE USED IF BRREAD ERRORS CAUSE      05250002
*        ADDRESS GAPS.  REAL STORAGE IS SEARCHED TO THE TOP OF THE      05320002
*        NUCLEUS. (NUCTOP IN COMMON).                                   05390002
*                                                                       05460002
*        THE SEGMENT TABLE ORIGIN FOUND AT LOCATION X'31C' OR FROM A    05530002
*        SEGTAB= VERB WILL BE VALIDATED BY ACCESSING THE SEGMENT TABLE  05600002
*        THEN ACCESSING THE FIRST PAGE TABLE (REFERENCES LOCATION ZERO  05670002
*        OF DUMPED STORAGE).  THE FIRST EIGHT BYTES OF THIS PAGE TABLE  05740002
*        WILL BE COMPARED TO AN IMAGE OF THE FIRST PAGE TABLE. IF THIS  05810002
*        TEST FAILS A MESSAGE IS ISSUED INDICATING THE ERROR, SEGTABOR  05880002
*        IS ZEROED, AND FURTHER PROCESSING IS ATTEMPTED.                05950002
*                                                                       06020002
*        AMDPRMST ESTABLISHES AN ERROR HANDLER BY STORING THE ADDRESS   06090002
*        OF THE ERROR ROUTINE IN ARRADDR IN COMMON. SHOULD AN ERROR     06160002
*        OCCUR DURING AMPREMST PROCESSING, THIS ERROR HANDLER IS GIVEN  06230002
*        CONTROL.                                                       06300002
*                                                                       06370002
*01*   NOTES = SEE SPECIFIC COMMENTS THAT FOLLOW                        06440002
*                                                                       06510002
*02*     DEPENDENCIES = CORE LOCATION X'4C' IS USED TO GET THE ADDRESS  06580002
*        OF THE CVT IF IT WAS NOT SPECIFIED ON A USER CONTROL STATEMENT 06650002
*        OR IN A DSS OR SVCDUMP HEADER.                                 06720002
*          CVT + 80 - CONTAINS SVC 3 AND BR 14 INSTRUCTIONS             06790002
*        ('0A0307FE'X) - USED TO VALIDITY CHECK THE CVT                 06860002
*          CORE LOCATION X'31C' IS USED TO GET THE SEGMENT TABLE        06930002
*        ADDRESS WHEN INPUT IS FROM AMDSADMP.                           07000002
*                                                                       07070002
*03*        CHARACTER-CODE-DEPENDENCIES = EBCDIC                        07140002
*                                                                       07210002
*02*     RESTRICTIONS = FOR AMDSADMP INPUT, AMDPRMST GETS THE CURRENT   07280002
*        ASID FROM CONTROL BLOCKS IN THE DUMP DATA SET. IT IS IMPORTANT 07350002
*        THAT THIS VALUE NOT BE PUT IN THE QASID FIELD IN COMMON UNTIL  07420002
*        AFTER ALL OF AMDPRMST'S BRREAD'S ARE ISSUED. THIS IS DUE TO    07490002
*        AMDPRRDC'S HANDLING OF ASID'S.                                 07560002
*                                                                       07630002
*02*     REGISTER-CONVENTIONS = DEFINED IN EQUATES MACRO                07700002
*                                                                       07770002
*02*     PATCH-LABEL = PATCH - RESERVED FOR FUTURE USE                  07840002
*                                                                       07910002
*01*  MODULE-TYPE = PROCEDURE                                           07980002
*                                                                       08050002
*02*     PROCESSOR = ASSEMBLER                                          08120002
*                                                                       08190002
*02*     MODULE SIZE - 4514 BYTES   (11A2 HEX)                  OZ13033 08260000
*                                                                       08330002
*02*     ATTRIBUTES = PROBLEM PROGRAM REGION, REUSABLE                  08400002
*                                                                       08470002
*01*  ENTRY-POINT = AMDPRMST                                            08540002
*                                                                       08610002
*02*     PURPOSE = DUMP DATA SET INITIALIZATION                         08680002
*                                                                       08750002
*02*     LINKAGE = BALR FROM AMDPRRDC INITIALIZATION ROUTINE            08820002
*                                                                       08890002
*02*     INPUT = ON ENTRY TO MODULE AMDPRMST, GENERAL REGISTER 12       08960002
*        CONTAINS THE ADDRESS OF THE AMDPRDMP COMMON CSECT, AMDPRCOM.   09030002
*                                                                       09100002
*        INFORMATION OBTAINED FOR COMMON BY AMDPRMST IS READ FROM       09170002
*        THE DUMP DATA SET USING THE BRREAD PRIVATE MACRO INSTRUCTION.  09240002
*        THIS MACRO GENERATES THE CALLING SEQUENCE TO MODULE            09310002
*        AMDPRRDC.  A COMPLETE LIST OF WHICH DATA IN THE DUMP DATA      09380002
*        SET IS REFERENCED BY AMDPRMST MAY BE FOUND UNDER OUTPUT.       09450002
*        SOME INFORMATION IS ALSO OBTAINED FROM THE DUMP HEADER RECORD  09520002
*        WHICH IS PLACED IN COMMON BY AMDPREAD OR AMDPRLOD WHEN         09590002
*        BUILDING DUMP MAPS.                                            09660002
*                                                                       09730002
*        IF CVTADDR IS NON-ZERO ON ENTRY TO MST, IT IS ASSUMED TO       09800002
*        CONTAIN THE ADDRESS OF THE CVT IN THE DUMP SUSTEM. THIS        09870002
*        VALUE MAY HAVE COME FROM THE DUMP HEADER RECORD (IF SETCVTSW   09940002
*        IN SWA IN COMMON EQUALS 0) OR IT MAY HAVE BEEN SPECIFIED BY    10010002
*        THE USER (IN WHICH CASE SETCVTSW EQUALS ONE). IN EITHER CASE   10080002
*        THE VALUE IS CHECKED FOR POINTING TO A VALID CVT AND IF THE    10150002
*        CHECKING FAILS, A MESSAGE IS ISSUED INDICATING THAT THE CVT    10220002
*        ADDRESS MAY NOT BE VALID. IF CVTADDR IS ZERO ON ENTRY TO       10290002
*        MST, THE CVT ADDRESS IS TAKEN FROM LOCATION X'4C' IN THE       10360002
*        DUMP DATA SET.                                                 10430002
*                                                                       10500002
*        IF QSEGTBSW IN PRSW OF COMMON IS ON WHEN AMDPRMST RECEIVES     10570002
*        CONTROL, THEN THE SEGMENT TABLE ORIGIN ADDRESS HAS BEEN        10640002
*        SPECIFIED BY THE USER WITH THE SEGTAB= CONTROL STATEMENT       10710002
*        AND IS ALREADY IN SEGTABOR IN COMMON.                          10780002
*                                                                       10850002
*02*     OUTPUT = SEE OUTPUT UNDER EXIT SECTION BELOW                   10920002
*                                                                       10990002
*02*     REGISTERS-SAVED = ALL GENERAL PURPOSE REGISTERS                11060002
*                                                                       11130002
*02*     REGISTER-USAGE = REGISTER 4 IS USED AS A LINKAGE REGISTER TO   11200002
*        THE SEGCHK AND RDCPUST ROUTINES, AND IT IS ALSO USED AS THE    11270002
*        BASE REGISTER FOR THE ASVT, PVT, AND ASCB MACROS.              11340002
*                                                                       11410002
*        REGISTER 6 IS USED TO CONTAIN THE ERROR RETURN ADDRESS FOR     11480002
*        RETURNS FROM THE BRREAD ERROR HANDLER.                         11550002
*                                                                       11620002
*        REGISTER 8 IS USED AS BASE REGISTER FOR THE CVT DSECT.         11690002
*                                                                       11760002
*        REGISTER 9 IS THE LINKAGE REGISTER TO THE MPRTMSG ROUTINE.     11830002
*                                                                       11900002
*        REGISTER 11 IS BASE REGISTER FOR THE MODULE.                   11970002
*                                                                       12040002
*        REGISTER 12 POINTS TO THE COMMON CSECT, AMDPRCOM.              12110002
*                                                                       12180002
*02*     REGISTERS-RESTORED = 0-14                                      12250002
*                                                                       12320002
*01*  EXIT-NORMAL = GMSTRET1                                            12390002
*                                                                       12460002
*02*     CONDITIONS = COMPLETION OF MST PROCESSING                      12530002
*                                                                       12600002
*02*     OUTPUT = THE FOLLOWING FIELDS IN THE COMMON CSECT ARE          12670002
*        INITIALIZED BY AMDPRMST:                                       12740002
*        1. CVTADDR - ADDRESS OF CVT IN DUMP SYSTEM (SEE CVTADDR UNDER  12810002
*           INPUT).                                                     12880002
*        2. CURASCB - ADDRESS OF CURRENT ASCB (CONTENT OF FULL WORD     12950002
*           ADDRESSED BY CVTTCBP+12 IF QASID IS ZERO ON ENTRY TO MST.   13020002
*           IF QASID WAS NOT ZERO, CURASCB CONTAINS THE ADDRESS OF THE  13090002
*           ASCB ASSOCIATED WITH THE ASID AS DETERMINED FROM THE ASCB.) 13160002
*        3. NUCTOP - UPPER BOUND OF NUCLEUS (CVTNUCB)                   13230002
*        4. TITLEDTE - DATE OF DUMP TAKEN FROM CVT (CVTDATE)            13300002
*        5. TITLETME - TIME OF DUMP (TIME OF DAY VALUE) FROM HEADER AS  13370002
*           CONVERTED BY THE TODCNVRT ROUTINE                           13440002
*        6. SEGTABOR - TAKEN FROM LOCATION X'31C' IN A REAL DUMP IF NOT 13510002
*           SPECIFIED BY THE USER VIA THE SEGTAB= VERB.                 13580002
*        7. REALMAX - HIGHEST REAL ADDRESS (CVTEORM)                    13650002
*        8. QAPFT - ADDRESS OF PAGE FRAME TABLE TAKEN FROM PAGE VECTOR  13720002
*           TABLE +X'58' (CVTPVTP).                                     13790002
*        9. ASVTADDR - ADDRESS OF THE ADDRESS SPACE VECTOR TABLE        13860002
*           (CVTASVT)                                                   13930002
*       10. QASID - THE CURRENT ASID AT THE TIME OF THE DUMP            14000002
*           (ASCBASID FROM THE CURRENT ASCB IF ASID SPECIFIED IN THE    14070002
*           HEADER RECORD WAS ZERO.)                                    14140002
*       11. PREFXRGR - THE REAL VALUE IN THE PSA PREFIX REGISTER FOR    14210002
*           AMDSADMP INPUT.                                             14280002
*       12. PREFXRGV - THE VIRTUAL VALUE IN THE PSA PREFIX REGISTER FOR 14350002
*           AMDSADMP INPUT.                                             14420002
*       13. LINECNT - MODIFIED TO CONTAIN AN UPDATED LINE COUNT TO      14490002
*           REMAIN WITHIN THE LIMIT SET BY DEFAULT OR USER IF A TITLE   14560002
*           IS OUTPUT BY MST.                                           14630002
*       14. MSTRSW IN SWC - SET ON TO INDICATE THAT MST HAS ATTEMPTED   14700002
*           INITIALIZATION FOR THE CURRENT DUMP.                        14770002
*                                                                       14840002
*       IF ANY OF THE ABOVE FIELDS COULD NOT BE FILLED IN BECAUSE OF    14910002
*       BRREAD ERRORS WHEN READING THE VALUES FROM THE DUMP DATA SET,   14980002
*       THEY WILL CONTAIN ZEROS.                                        15050002
*                                                                       15120002
*       IF INPUT IS FROM AMDSADMP, DISPLACEMENTS 64-71 OF BLOCK ZERO    15190002
*       READ BY MST ARE RE-INITIALIZED IN CORE WITH THE CSW AND CAW     15260002
*       THAT WAS STORED IN THE HEADER RECORD WHEN THE DUMP WAS TAKEN.   15330002
*                                                                       15400002
*       IF THE DUMP HEADER RECORD CONTAINED A TITLE, THE TITLE IS       15470002
*       PRINTED ON THE FIRST PAGE OF THE DUMP LISTING USING THE BRWRITE 15540002
*       PRIVATE MACRO INSTRUCTION.                                      15610002
*                                                                       15680002
*        AMDPRMST WILL PRINT OUT ALL SU NUMBERS THAT ARE        OZ13033 15690000
*        APPLIED TO THE DUMPED SYSTEM (IF ANY).                 OZ13033 15700000
*                                                               OZ13033 15710000
*        AMDPRMST WILL OUTPUT AN ERROR-ID IF ONE EXISTS         OZ13033 15720000
*        ON A DUMPED SYSTEM WITH SU17.                          OZ13033 15730000
*                                                               OZ13033 15740000
*02*     RETURN-CODES = NONE                                            15750002
*                                                                       15820002
*01*  EXIT-ERROR = NONE                                                 15890002
*                                                                       15960002
*01*  EXTERNAL-REFERENCES = SEE SPECIFIC COMMENTS THAT FOLLOW           16030002
*                                                                       16100002
*02*     ROUTINES = TODCNVRT ROUTINE IN AMDPRSEG IS USED TO CONVERT THE 16170002
*        TOD CLOCK VALUE THAT WAS CONTAINED IN THE DUMP HEADER.         16240002
*        ADRCNVT ROUTINE IN AMDPRCOM IS USED TO CONVERT ADDRESSES USED  16310002
*        IN MESSAGES.                                                   16380002
*                                                                       16450002
*02*     DATA-AREAS = AREAS IN COMMON THAT ARE REFERENCED BY MST ARE:   16520002
*        SETCVTSW IN SWA, BLANKS, CURBUF, FOUR, ASIDNDX, REALMAP,       16590002
*        QSEGTBSW IN PRSW, QATMERTN, THREE, RDRSW IN SWA                16660002
*                                                                       16730002
*02*     CONTROL-BLOCKS = CVT - (R); PCCAVT - (R); PCCA - (R);          16800002
*        PVT - (R); ASVT- (R); ASCB - (R)                               16870002
*                                                                       16940002
*01*  TABLES = FIVE WORDS AT LABEL SAVEREGS ARE USED FOR SAVING         17010002
*     REGISTERS 2 - 6 WHEN SEARCHING FOR THE CVT                        17080002
*                                                                       17150002
*01*  MACROS = WTO, BRPRTMSG, BRREAD, BRWRITE                           17220002
*                                                                       17290002
*02*     SERIALIZATION = NONE                                           17360002
*                                                                       17430002
*01*  CHANGE-ACTIVITY = SEE MICROFICHE FLAGGING ABOVE                   17500002
*                                                                       17570002
*  OZ09006 - AMDPRDMP NEEDS CODE TO SUPPORT SU'S                OZ13033 17575000
*    D82   - CODE TO SET INTERNAL BIT STRING                    OZ13033 17580000
*                                                               OZ13033 17585000
*  OZ09692 - LOOP IN MST IF BIT STRING IS NOT IN DUMP           OZ13033 17590000
*    D82   - BIT STRING SHOULD ALWAYS BE IN DUMP, HOWEVER       OZ13033 17595000
*            DEFENSIVE CODE HAS BEEN ADDED                      OZ13033 17600000
*                                                               OZ13033 17605000
*  UZ81700 - SUPPORT FOR SU17                                   OZ13033 17610000
*    D81   - ADD ERROR-ID PROCESSING                            OZ13033 17615000
*                                                               OZ13033 17620000
*  OZ13033 - IMPLEMENT CODE TO FORMAT BIT STRING                OZ13033 17625000
*    D80   - CSECT AMDPRBIT WAS CODED                           OZ13033 17630000
*                                                               OZ13033 17635000
*01*  MESSAGES = THE FOLLOWING MESSAGES ARE ISSUED TO SYSPRINT AND, IF  17640002
*     RDRSW IS OFF, TO THE SYSTEM CONSOLE:                              17710002
*     AMD260I UNABLE TO ACCESS PAGE/SEGMENT TABLE AT XXXXXX ID=X        17780002
*     AMD261I UNABLE TO ACCESS CVT                                      17850002
*     AMD284I PREFIX VALUES NOT AVAILABLE                               17920002
*     AMD263I DUMP MAY NOT BE FROM AN OS/VS2 RELEASE 2 SYSTEM           17990002
*     AMD264I PAGE TABLE FOR LOCATION ZERO NOT VALID ID=X               18060002
*     AMD286I CVT AT XXXXXX NOT VALID, ID = X                           18130002
*     AMD290I ERROR IN PREFIX VALUES - REAL= YYYYYY , VIRTUAL = XXXXXX  18200002
*     AMD294I UNABLE TO ACCESS SEGMENT TABLE ADDRESS AT LOCATION 31C    18270002
*                                                                       18340002
*01*  ABEND-CODES = NONE                                                18410002
*                                                                       18480002
**** END OF SPECIFICATIONS ***/                                         18550002
*/*AMDPRMST: CHART (SEQ) */                                             18620002
*/*HEADER                                                               18690002
*/*AMDPRMST - GET MASTER ROUTINE FLOWCHARTS                             18760002
*/*                                                      PAGE #   */    18830002
*/*AMDPRMST: E START */                                                 18900002
*/* M SET UP ADDRESSABILITY */                                          18970002
*/* P ESTABLISH GET MASTER-S ERROR HANDLER - MSTERR */                  19040002
*/* M SET MSTRSW TO INDICATE INIT ATTEMPTED */                          19110002
*/* P ZERO MST SWITCHES */                                              19180002
*/* P ZERO COMMON AREAS (QAPFT,CURASCB,PREFXRGR,PREFXRGV,ASVTADDR) */   19250002
*/* P SET DEFAULT NUCTOP */                                             19320002
*/* D (YES,GSADMP,NO,) AMDSADMP */                                      19390002
*/* D (YES,REALDMP,NO,) REAL DUMP */                                    19460002
*/* P GET ASIDNDX FROM COMMON */                                        19530002
*/*ASNDXLP: P ADD 40 TO GET TO 1ST DUMP MAP PTR */                      19600002
*/* P SET COUNTER TO 18 */                                              19670002
*/*MAPLP: P GET MAP PTR */                                              19740002
*/* D (YES,MSTERR20,NO,) MAP PTR = 0 */                                 19810002
*/* P GET 1ST ADDRESS DUMPED */                                         19880002
*/* D (YES,GETMSVC,NO,) ADDR WITHIN THE NUCLEUS */                      19950002
*/* P GET PTR TO NEXT DUMP MAP */                                       20020002
*/* P DECREMENT COUNTER BY 1 */                                         20090002
*/* D (YES,,NO,MAPLP) COUNTER = 0 */                                    20160002
*/*ENDNDX: P GET ADDRESS OF NEXT TABLE */                               20230002
*/* D (YES,,NO,ASNDXLP) LINK FIELD = 0 */                               20300002
*/*MSTERR20: P INDICATE CVT NOT DUMPED (CVTADDR=0) */                   20370002
*/* M RESET CVT SEARCH INDICATOR */                                     20440002
*/* S (,GMSTER1) MPRTMSG: UNABLE TO ACCESS CVT */                       20510002
*/*GETMSVC: D (YES,,NO,GCVTSW) CVTADDR IN COMMON EQUAL ZERO */          20580002
*/* D (NO,GETMSTRK,YES,CHKCVT) IS 4C IN THE DUMP */                     20650002
*/*GSADMP: D (YES,MSTERR20,NO,) REALMAP = 0 */                          20720002
*/*REALDMP: P SAVE ADDR FIRST REAL DUMP MAP */                          20790002
*/* P MESSAGE ID=1 USER SPECIFIED SEGMENT ORIGIN */                     20860002
*/* D (YES,GSADSEG,NO,) SEGMENT TABLE ORIGIN SET BY CONTROL */          20930002
*/*GSADMPSG: P MESSAGE ID=2 X'31C' POINTS TO SEGMENT TABLE */           21000002
*/* M SET REAL REQUEST INDICATOR */                                     21070002
*/* P SET R6 TO POINT TO SEGTERR */                                     21140002
*/* L BRREAD: READ SEGMENT TABLE ADDR FROM X'31C' */                    21210002
*/* P SAVE IT IN COMMON (SEGTABOR) */                                   21280002
*/* D (NO,NOCSWMV,YES,) AMDSADMP DUMP */                                21350002
*/* P BACK UP BUFFER POINTER X'2DC' TO LOC X'40' IN BUFFER */           21420002
*/* P MOVE CSW AND CAW INTO LOCATION X'40'-X'4B' IN BUFFER */           21490002
*/*NOCSWMV: S SEGCHK: ACCESS SEGMENT TABLE IN DUMPED STORAGE */         21560002
*/*GETRLMAX: P SET MAP PTR FROM REALMAP IN COMMON */                    21630002
*/*GETLINK: P GET LINK FIELD */                                         21700002
*/* D (YES,LASTMAP,NO,) IS THE LINK FIELD EQUAL 0 */                    21770002
*/* P (,GETLINK) GET NEXT MAP POINTER */                                21840002
*/*LASTMAP: P GET ADDR OF LAST BLOCK DUMPED */                          21910002
*/* P ADD 4K TO ADDRESS */                                              21980002
*/* P STORE IN REALMAX IN COMMON */                                     22050002
*/*GCVTSW: P SET MSGID TO 2 */                                          22120002
*/* D (YES,CHKCVT,NO,) IS CVTADDR = 0 */                                22190002
*/* D (NO,GETMSTRC,YES,) WAS CVT ADDR SET BY CONTROL */                 22260002
*/* P (,GETMSTRC) SET MSG ID TO 1 */                                    22330002
*/*CHKCVT: L  BRREAD: GET CVT PTR FROM X'4C' OF DUMP */                 22400002
*/* M (,GETMSTRA) INDICATE CVT SEARCH IN PROCESS */                     22470002
*/*GSADSEG: S SEGCHK: ACCESS SEGMENT TABLE IN DUMPED STORAGE */         22540002
*/* D (NO,GETRLMAX,YES,) AMDSADMP INPUT */                              22610002
*/* L BRREAD: READ FOR CSW LOCATION X'40' */                            22680002
*/* P (,GETRLMAX) MOVE CSW AND CAW INTO LOCATION X'40' - X'4B' IN       22750002
*/*BUFFER */                                                            22820002
*/*SEGTERR: S (,GETRLMAX) MPRTMSG: PRINT UNABLE TO READ 31C MESSAGE */  22890002
*/*GETMSTRC: P GET ADDR OF CVT PTR FROM COMMON */                       22960002
*/*VERFYCVT: P SET R6 TO POINT TO MSTERR20 */                           23030002
*/* L BRREAD: GET WORD OF CVT WITH SVC3 AND BR14 INSTRUCTIONS */        23100002
*/* D (YES,GETMSTSO,NO,) ARE THE INSTR. PRESENT */                      23170002
*/* S (,GETMSTSO) MPRTMSG: CVT NOT VALID */                             23240002
*/*GETMSTRA: P LOAD CVT PTR */                                          23310002
*/*GETMSTRB: P SAVE CVT PTR IN COMMON */                                23380002
*/* P SET MSG ID TO 3 */                                                23450002
*/* D (YES,,NO,VERFYCVT) CVT PTR = ZERO */                              23520002
*/*GETCVT: P START CVT SEARCH AT LOCATION X'50' */                      23590002
*/*GETMSTRK: L BRREAD: GET A WORD OF STORAGE */                         23660002
*/*CHK4CVT: D (YES,GETMSTRI,NO,) SVC 3 & BR 14 INST. PRESENT */         23730002
*/*GETMSTRL: P ADD 4 TO SEARCH ADDR */                                  23800002
*/* D (YES,MSTERR20,NO,) REACHED TOP OF NUCLEUS */                      23870002
*/* D (YES,GETMSTRK,NO,) SEARCH ADDRESS ON A 4K BOUNDARY */             23940002
*/* P (,CHK4CVT) BUMP BUFFER POINTER */                                 24010002
*/*GETMSTRI: L BRREAD: GET ADDR OF TOP OF NUCLEUS */                    24080002
*/* D (NO,GETMSTRL,YES,) IS HIGH ORDER BYTE = 0 */                      24150002
*/* D (NO,GETMSTRL,YES,) LAST BYTE = 0 */                               24220002
*/* P SAVE NUCLEUS TOP ADDR */                                          24290002
*/* L BRREAD: GET MAXIMUM ADDR FROM CVT */                              24360002
*/* D (NO,GETMSTRL,YES,) HIGH BYTE = 0 */                               24430002
*/* D (NO,GETMSTRL,YES,) LAST BYTE = FF */                              24500002
*/* D (NO,GETMSTRL,YES,) IS IT >= NUCLEUS TOP */                        24570002
*/* P SAVE CVT ADDR IN COMMON */                                        24640002
*/*GETMSTSO: M RESET CVT SEARCH INDICATOR */                            24710002
*/* P PUT CVT ADDRESS IN R8 */                                          24780002
*/* P SET R6 TO POINT TO GMSTER0 */                                     24850002
*/* L BRREAD: GET SYSTEM OPTIONS FROM CVT */                            24920002
*/* D (YES,,NO,GMSTER0) IS THIS AN OS/VS2 SYSTEM */                     24990002
*/* L BRREAD: GET RELEASE NUMBER */                                     25060002
*/* D (YES,GETMSTMT,NO,) IS THIS FROM A RELEASE 2 SYSTEM */             25130002
*/*GMSTER0: S MPRTMSG: NOT OS/VS2 DUMP */                               25200002
*/*GETMSTMT: P SET R6 TO POINT TO GETMSTR3 */                           25270002
*/* L BRREAD: GET ASVT ADDR FROM CVT */                                 25340002
*/* P SAVE IT IN COMMON (ASVTADDR) */                                   25410002
*/*GETMSTR3: D (NO,GTIDFRVT,YES,) IS QASID = 0 */                       25480002
*/* P SET R6 TO POINT TO GETMSTR4 */                                    25550002
*/* L BRREAD: GET FIRST WORD OF CVT */                                  25620002
*/* L BRREAD: GET CURRENT ASCB POINTER */                               25690002
*/* P SAVE ADDR OF CURRENT ASCB IN COMMON */                            25760002
*/* L BRREAD: GET ASID FROM ASCB */                                     25830002
*/* P (,GETMSTR4) SAVE IT IN TEMPORARY LOCATION */                      25900002
*/*GTIDFRVT: P SET R6 TO POINT TO GETMSTR4 */                           25970002
*/* L BRREAD: GET ASCB ADDR FROM ASVT */                                26040002
*/* P SAVE ADDR OF ASCB IN COMMON (CURASCB) */                          26110002
*/*GETMSTR4: P SET R6 TO POINT TO GETMSTR6 */                           26180002
*/* L BRREAD: GET TOP OF NUC. VALUE */                                  26250002
*/* P SAVE IT IN COMMON (NUCTOP) */                                     26320002
*/*GETMSTR6: P SET R6 TO POINT TO GETMSTR7 */                           26390002
*/* L BRREAD: GET ADDRESS OF PAGE VECTOR TABLE */                       26460002
*/* L BRREAD: GET ADDRESS OF PAGE FRAME TABLE */                        26530002
*/* P SAVE IT IN COMMON (QAPFT) */                                      26600002
*/*GETMSTR7: D (YES,,NO,GETDATE) IS THIS AN AMDSADMP DUMP */            26670002
*/* D (NO,GETDATE,YES,) IS IPL'ED CPU ADDR VALID (NOT =256) */          26740002
*/* P SET R6 TO POINT TO NOPREFX */                                     26810002
*/* L BRREAD: GET PTR TO PCCA VECTOR TABLE FROM CVT */                  26880002
*/* P LOAD WORK REG WITH IPL'ED CPU ADDR */                             26950002
*/* P SHIFT LEFT 2 BITS TO GET INDEX INTO VECTOR TABLE */               27020002
*/* P ADD ADDR OF PCCA VECTOR TABLE TO INDEX */                         27090002
*/* L BRREAD: GET PTR TO PCCA FROM PCCA VECTOR TABLE */                 27160002
*/* P SAVE ADDR OF PCCA IN R4 */                                        27230002
*/* P SET R6 TO POINT TO RDRLERR */                                     27300002
*/* L BRREAD: GET REAL ADDR OF PSA FROM PCCA */                         27370002
*/* P SAVE VALUE IN COMMON (PREFXRGR) */                                27440002
*/*RDVIRTAD: P SET R6 TO POINT TO RDVTERR */                            27510002
*/* L BRREAD: GET VIRTUAL ADDR OF PSA FROM PCCA */                      27580002
*/* P SAVE VALUE IN COMMON (PREFXRGV) */                                27650002
*/* D (YES,RERRVOK,NO,) ERROR READING REAL ADDRESS */                   27720002
*/* D (YES,GETDATE,NO,) ARE BOTH ADDR = 0 (UNIPROCESSOR) */             27790002
*/* D (YES,RLAD0,NO,) REAL ADDR = 0 */                                  27860002
*/* D (NO,RLAD0,YES,) REAL ADDR ON 4K BDY */                            27930002
*/*RLADOK: D (YES,VRTAD0,NO,) VIRTUAL ADDR = 0 */                       28000002
*/* D (YES,GETDATE,NO,) VIRTUAL ADDR ON 4K BDY */                       28070002
*/*VRTAD0: P SET VIRTUAL ADDR TO 0 (PREFXRGV) */                        28140002
*/*PRERRMSG: S (,GETDATE) MPRTMSG: POSSIBLE ERROR IN PREFIX VALUE MSG   28210002
*/**/                                                                   28280002
*/*RLAD0: P SET REAL ADDR TO 0 (PREFXRGR) */                            28350002
*/* S RDCPUST: GET PSA ADDR FROM STORE STATUS INFO */                   28420002
*/* D (0,RLADOK,OTHER,) CHECK RETURN CODE */                            28490002
*/* P SET REAL ADDR TO 0 (PREFXRGR) */                                  28560002
*/*CHKVTAD: D (YES,PRERRMSG,NO,) VIRTUAL ADDR = 0 */                    28630002
*/* D (YES,PRERRMSG,NO,) VIRTUAL ADDR ON 4K BDY */                      28700002
*/* P (,PRERRMSG) SET VIRTUAL ADDR TO 0 */                              28770002
*/*RERRVOK: M RESET ERROR FLAG */                                       28840002
*/* S RDCPUST: GET PSA ADDR FROM STORE STATUS INFO */                   28910002
*/* D (0,RLADOK,4,CHKVTAD,8,CHKVTAD) CHECK RETURN CODE */               28980002
*/*RDRLERR: M (,RDVIRTAD) SET FLAG INDICATING REAL READ ERROR */        29050002
*/*RDVTERR: D (NO,ROKVTERR,YES,) ERROR READING REAL ADDR */             29120002
*/* M RESET ERROR FLAG */                                               29190002
*/*RERRVERR: S RDCPUST: GET PSA ADDR FROM STORE STATUS INFO */          29260002
*/* D (0,PRERRMSG,4,NOPREFX,8,PRERRMSG) CHECK RETURN CODE */            29330002
*/*ROKVTERR: D (YES,PRERRMSG,NO,) REAL ADDR = 0 */                      29400002
*/* D (YES,PRERRMSG,NO,RERRVERR) REAL ADDR ON 4K BOUNDARY */            29470002
*/*RDCPUST: E SUB-ROUTINE */                                            29540002
*/*  P LOAD R1 WITH A 1 */                                              29610002
*/* P SET R6 TO POINT TO RDCPUERR */                                    29680002
*/* L BRREAD: GET CPU STATUS RECORD */                                  29750002
*/* D (NO,RDCPUERR,YES,) STORE STATUS INFO VALID */                     29820002
*/* D (YES,GETDATE,NO,) UNIPROCESSOR */                                 29890002
*/* P SAVE PSA ADDR IN COMMON (PREFXRGR) */                             29960002
*/* D (YES,GETDATE,NO,) ARE REAL AND VIRTUAL ADDR BOTH = 0 */           30030002
*/* D (YES,CPUERR8,NO,) IS REAL ADDR = 0 */                             30100002
*/* D (NO,CPUERR8,YES,) ADDR ON 4K BOUNDARY */                          30170002
*/* P (,CPURET) SET RETURN CODE TO 0 */                                 30240002
*/*RDCPUERR: P (,CPURET) SET RETURN CODE TO 4 */                        30310002
*/*CPUERR8: P SET PREFXRGR TO 0 */                                      30380002
*/* P SET RETURN CODE TO 8 */                                           30450002
*/*CPURET: R RETURN TO CALLER */                                        30520002
*/*NOPREFX: S MPRTMSG: NO PREFIXING MESSAGE */                          30590002
*/*GETDATE: P SET R6 TO POINT TO GMSTER1 */                             30660002
*/* L BRREAD: GET DATE FROM CVT */                                      30730002
*/* P SAVE DATE FOR LATER CONVERSION */                                 30800002
*/* L BRREAD: GET TIME ZONE VALUE FROM CVT */                           30870002
*/* P SET UP PARAMETER LIST FOR TOD ROUTINE */                          30940002
*/* L TODCNVRT: GET TIME CONVERTED */                                   31010002
*/* P MOVE TIME TO TITLE */                                             31080002
*/* P SAVE IT IN COMMON */                                              31150002
*/*DATER: D (NO,GMSTER1,YES,) IS DATE VALID */                          31220002
*/* P CONVERT 2-DIGIT YEAR TO DETERMINE TYPE OF YEAR */                 31290002
*/* P CONVERT 3-DIGIT DAY TO MONTH AND DAY */                           31360002
*/* P CONVERT THE DATE TO PRINTABLE CHARS. */                           31430002
*/* P MOVE YR., DAY AND MONTH TO DATE PATTERN FOR PRINTING */           31500002
*/* P (,GMSTERR) MOVE PATTERN (DATE) TO TITLE */                        31570002
*/*GMSTER1: P BLANK TITLE DATE AND TIME */                              31640002
*/*GMSTERR: D (YES,,NO,MVCTTL) LENGTH OF USER DATA POSITIVE */          31710002
*/* P MOVE USER DATA FIELD TO OUTPUT BUFFER */                          31780002
*/* P MOVE HEADING TO OUTPUT BUFFER */                                  31850002
*/*WRTTL: P SET DUMP TITLE SWITCH */                                    31920002
*/* L (,GMSTRET) BRWRITE: WRITE DUMP TITLE */                           31990002
*/*MVCTTL: P (,WRTTL) MOVE NO TITLE MESSAGE TO BUFFER */                32060002
*/*GMSTRET: D (NO,GMSTRET1,YES,) IS QASID = 0 */                        32130002
*/* P MOVE ASID TO QASID FROM TEMPORARY LOCATION */                     32200002
*/* P ZERO ASID SAVE AREA */                                            32270002
*/*GMSTRET1: P RESTORE REGS */                                          32340002
*/* R RETURN */                                                         32410002
*/*MSTERR: E ERROR */                                                   32480002
*/* P POINT TO MST-S SAVE AREA */                                       32550002
*/* P RELOAD REGISTERS */                                               32620002
*/*%MSTER01: D (YES,MSTERR40,NO,) ERROR WHILE READING SEGMENT TABLE */  32690002
*/* D (YES,,NO,MSTRET) SEARCHING FOR CVT */                             32760002
*/* P LOAD MAP ADDRESS FROM SAVE AREA */                                32830002
*/* D (YES,CKIFMPND,NO,) IF ZERO, THEN END OF MAPS */                   32900002
*/* P GET LAST ADDRESS DUMPED */                                        32970002
*/* D (YES,,NO,MSTERR05) LAST ADDR >4096 ABOVE SEARCH ADDR */           33040002
*/* P (,MSTERR10) ADD 4096 TO SEARCH ADDRESS */                         33110002
*/*MSTRET: R RETURN TO ADDRESS IN R6 */                                 33180002
*/*MSTERR05: P GET POINTER TO NEXT DATA AREA DUMPED */                  33250002
*/*MSTERR10: D (YES,GETMSTRK,NO,) DUMP AREA WITHIN NUCLEUS */           33320002
*/*CKIFMPND: D (NO,MSTERR20,YES,) REALMAP = 0 */                        33390002
*/* P DECREMENT COUNTER BY 1 */                                         33460002
*/* D (NO,ERRMPLP,YES,) COUNTER = 0 */                                  33530002
*/* D (YES,MSTERR20,NO,) IS LINK FIELD = 0 */                           33600002
*/* P ADD 40 TO GET TO 1ST DUMP MAP PTR */                              33670002
*/* P SET COUNTER TO 18 */                                              33740002
*/*ERRMPLP: P GET PTR TO DUMP MAP */                                    33810002
*/* D (YES,MSTERR20,NO,) IS MAP PTR = 0 */                              33880002
*/* P (,MSTERR10) GET 1ST ADDRESS DUMPED */                             33950002
*/*MSTERR40: P GET ADDRESS OF ERROR MESSAGE */                          34020002
*/* P INSERT ID CODE INTO MESSAGE */                                    34090002
*/* S MPRTMSG: WRITE MESSAGE TO LOG */                                  34160002
*/* R RETURN VIA R6 */                                                  34230002
*/*SEGCHK: E SUB-ROUTINE */                                             34300002
*/* P SET SWITCH CHECKING SEGMENT TABLE */                              34370002
*/* P INDICATE REAL REQUEST */                                          34440002
*/* P SET R6 TO POINT TO ZEROSGSW */                                    34510002
*/* L BRREAD: TRY TO READ SEGMENT TABLE */                              34580002
*/* L BRREAD: READ FIRST PAGE TABLE */                                  34650002
*/* D (YES,SEGCHK70,NO,) IS PAGE TABLE VALID */                         34720002
*/* S  MPRTMSG: MESG-PAGE TABLE INVALID */                              34790002
*/*ZEROSGSW: M ZERO QSEGTBSW SWITCH IN COMMON */                        34860002
*/*SEGCHK70: P RESET SEGMENT TABLE SWITCH */                            34930002
*/* P RESET REAL REQUEST */                                             35000002
*/* R RETURN TO CALLER VIA ADDR IN R4 */                                35070002
*/*MPRTMSG: E WRT TO PRDMP LOG */                                       35140002
*/* P DETERMINE LENGTH OF MESSAGE */                                    35210002
*/* P POINT TO BEGINNING OF TEXT */                                     35280002
*/* L BRPRTMSG: WRITE MESSAGE TO LOG */                                 35350002
*/* D (YES,,NO,MPRTMSG7) IS INPUT FROM CONSOLE */                       35420002
*/* P WRITE MESSAGE TO CONSOLE */                                       35490002
*/*MPRTMSG7: R RETURN TO CALLER */                                      35560002
*/*AMDPRMST: END */                                                     35630002
         SPACE 1                                               @YM08438 35700003
         EQUATES                                               @YM08438 35770002
         COMMON                                                @YM08438 35840002
CVTMAP   CVT   DSECT=YES           CVT MAPPING MACRO             Y01980 35910002
         IHAPCCA  DSECT=YES        PCCA MAPPING MACRO            Y02006 35980002
         IHAPVT  DSECT=YES         PVT MAPPING MACRO             Y02006 36050002
         IHAASVT  DSECT=YES        ASVT MAPPING MACRO            Y02006 36120002
         IHAASCB  DSECT=YES        ASCB MAPPING MACRO            Y02006 36190002
         IHAGDA                    GDA MAPPING MACRO             Y02006 36260002
****                                                           @YM08438 36330002
         SPACE 1                                               @YM08438 36400002
AMDPRMST CSECT                                                 @YM08438 36470002
         USING *,R15                                             Y02006 36540002
         MODID                                                   Y02006 36610002
         DROP R15                                                Y02006 36680002
SACVT    EQU   76                  SECONDARY PTR TO CVT          Y01980 36750002
CSWPTR   EQU   64                  PTR TO CSW IN CORE            Y02006 36820002
*        BIT DEFINITION FOR MSTSW SWITCHES                     @YM08438 36890002
CVTSRCH  EQU   64                  SEARCHING FOR CVT             Y02006 36960002
SEGCK    EQU   32                  READING SEGMENT TABLE         Y01980 37030002
RDRLERRB EQU   4                 ERROR READING REAL PREFIX VALUE Y02006 37100002
*                                                              @YM08438 37170002
SEGTABAD EQU   X'31C'              LOCATION OF PTR TO SEGTAB     Y02006 37240002
MULTBY4  EQU   2                   MASK FOR SLA INSTRUCTION      Y02006 37310002
MAPCHAIN EQU   0                   MAP CHAIN POINTER TO NEXT MAP Y01980 37380002
MAPFSTAD EQU   4                   MAP FIRST DUMPED ADDRESS      Y01980 37450002
MAPLSTAD EQU   8                   MAP LAST DUMPED ADDRESS       Y01980 37520002
LINIT1   EQU   ASVTADDR-CURASCB+4  LENGTH OF INIT AREA IN COMMON Y02006 37590002
PRERGOFF EQU   172                 OFFSET TO PREFIX REG VALUE    Y02006 37660002
UNIPROC  EQU   X'80'               UNIPROCESSOR FLAG             Y02006 37730002
STSTINV  EQU   X'20'               STORE STATUS INVALID FLAG     Y02006 37800002
MAPTROFF EQU   40                  OFFSET TO 1ST DUMP MAP        Y02006 37870002
HIBIT    EQU   X'80'               HIGH BIT                      Y02006 37940002
         SPACE 1                                               @YM08438 38010003
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTER      @YM08438 38080002
         BALR  BASE1,0             SET UP REG 11 AS BASE       @YM08438 38150002
         USING *,BASE1                                         @YM08438 38220002
MSTBASE  LA    R1,MSTSAVE          SAVE AREA CHAINNING         @YM08438 38290002
         ST    R13,MSTSAVE+4                                   @YM08438 38360002
         ST    R1,8(R13)                                       @YM08438 38430002
         LR    R13,R1                                          @YM08438 38500002
         SPACE 1                                               @YM08438 38570003
         USING COMMON,COMBASE      COMMON CSECT BASED ON REG 12         38640002
         USING CVTMAP,R8                                         Y10980 38710002
         SPACE 1                                               @YM08438 38780003
         MVC   MSTERSAV(4),ERRADDR SAVE CALLER-S ERROR ROUTINE   A43168 38850002
*                                  ADDRESS                       A43168 38920002
         LA    R3,MSTERR           POINT TO ERROR HANDLER        A43168 38990002
*                                  FOR GET MASTER ROUTINE        A43168 39060002
         ST    R3,ERRADDR          ESTABLISH MST-S ERROR RTN     A43168 39130002
         OI    SWC,MSTRSW          INDICATE MST HAS ATTEMPTED    Y02006 39200002
*                                  INITIALIZATION                Y02006 39270002
         MVI   MSTSW,0             ZERO AMDPRMST SWITCHES        Y01980 39340002
         SR    R2,R2               CLEAR REG                     Y01980 39410002
         ST    R2,QAPFT            ZERO FIELDS IN COMMON         Y01980 39480002
         XC    CURASCB(LINIT1),CURASCB  AREA                     Y02006 39550002
         MVC   NUCTOP,DNUCTOP      SET DEFAULT OF NUCTOP         Y02006 39620002
         NI    SWF,XFF-NUCTFRMC    RESET NUCTOP SWITCH           Y02006 39690002
         MVC   CSADDR,DFLTCSA      SET DEFAULT CSA ADDR          Y02006 39760002
***  ZERO HIGH BIT OF ALL DEFAULT LOOP VALUES IN COMMON  ***   @YM08438 39830002
         NI    RBMAX,XFF-HIBIT                                   Y02006 39900002
         NI    PQEMAX,XFF-HIBIT                                  Y02006 39970002
         NI    LLEMAX,XFF-HIBIT                                  Y02006 40040002
         NI    JPQMAX,XFF-HIBIT                                  Y02006 40110002
         NI    DEBMAX,XFF-HIBIT                                  Y02006 40180002
         NI    DDMAX,XFF-HIBIT                                   Y02006 40250002
         NI    SRBMAX,XFF-HIBIT                                  Y02006 40320002
         NI    TCBMAX,XFF-HIBIT                                  Y02006 40390002
         NI    ASCBMAX,XFF-HIBIT                                 Y02006 40460002
         NI    XLMAX,XFF-HIBIT                                   Y02006 40530002
         NI    LPAMAX,XFF-HIBIT                                  Y02006 40600002
         SPACE 1                                               @YM08438 40670003
*********************************************************************** 40740002
*                                                                     * 40810002
*              DETERMINE TYPE OF DUMP                                 * 40880002
*                                                                     * 40950002
*********************************************************************** 41020002
         TM    SWF,QSADMP          AMDSADMP DUMP                 Y02006 41090002
         BO    GSADMP              YES - BRANCH                  Y02006 41160002
         OC    REALMAP,REALMAP     IS THIS A REAL DUMP           Y02006 41230002
         BNZ   REALDMP             YES - BRANCH                  Y02006 41300002
         SPACE 1                                                 Y02006 41370002
*********************************************************************** 41440002
*                                                                     * 41510002
*              DETERMINE IF NUCLEUS IS IN THE SVC OR DSS DUMP         * 41580002
*                                                                     * 41650002
*********************************************************************** 41720002
         SPACE 1                                               @YM08438 41790003
         OC    ASIDNDX,ASIDNDX     IS ASIDNDX PTR = 0            Y02006 41860002
         BZ    MSTERR20            YES - CVT NOT AVAILABLE       Y02006 41930002
         L     R2,ASIDNDX          POINTER TO ASIDNDX            Y02006 42000002
ASNDXLP  LA    R6,MAPTROFF(R2)     INCREMENT TO 1ST DUMP MAP PTR Y02006 42070002
         LH    R5,EIGHTEEN         SET COUNTER                   Y02006 42140002
MAPLP    L     R4,0(R6)            GET DUMP MAP PTR              Y02006 42210002
         LTR   R4,R4               IS PTR = 0                    Y02006 42280002
         BZ    MSTERR20            YES - END OF MAPS - CVT NOT   Y02006 42350002
*                                  DUMPED                        Y02006 42420002
         L     R3,MAPFSTAD(R4)     FIRST ADDRESS DUMPED          Y02006 42490002
         STM   R2,R6,SAVEREGS      SAVE REGS FOR ERROR HANDLING  Y02006 42560002
         C     R3,NUCTOP           WITHIN NUCLEUS                Y02006 42630002
         BL    GETMSVC             YES - CONTINUE PROCESSING     Y02006 42700002
         LA    R6,4(R6)            ADD 4 TO R6 (POS. IN TABLE)   Y02006 42770002
         BCT   R5,MAPLP            CHECK NEXT MAP                Y02006 42840002
ENDNDX   L     R2,0(R2)            GET ASIDNDX LINK FIELD        Y02006 42910002
         LTR   R2,R2               IS PTR = 0                    Y02006 42980002
         BZ    MSTERR20            YES - END OF MAPS             Y02006 43050002
         B     ASNDXLP             CHECK NEXT TABLE ADDRESSES    Y02006 43120002
         SPACE 1                                               @YM08438 43190003
GETMSVC  OC    CVTADDR,CVTADDR     IS CVTADDR NON-ZERO           Y02006 43260002
         BNZ   GCVTSW              yes- BRANCH                   Y02006 43330002
GETMSV   LA    R2,SACVT            ADDR OF BACKUP CVT PTR        Y01980 43400002
         CR    R3,R2               WAS CVT PTR DUMPED            Y01980 43470002
         BH    GETMSTRK            NO, GO SCAN STORAGE FOR CVT   Y01980 43540002
         B     CHKCVT              GO CHECK CVT                  Y01980 43610002
         SPACE 1                                               @YM08438 43680002
*********************************************************************** 43750002
*                                                                     * 43820002
*              PROCESS STAND-ALONE AND REAL DUMPS                     * 43890002
*                                                                     * 43960002
*********************************************************************** 44030002
GSADMP   OC    REALMAP,REALMAP     ANYTHING DUMPED               Y02006 44100002
         BZ    MSTERR20            NO - CVT NOT AVAILABLE        Y02006 44170002
REALDMP  L     R2,REALMAP          POINTER TO DUMP MAPS          Y02006 44240002
         ST    R2,MAPADSAV         SAVE IT FOR ERRORS            Y02006 44310002
         MVI   MSGID,C'1'          ID CODE FOR MESSAGE           Y01980 44380002
         TM    PRSW,QSEGTBSW       WAS SEGMENT TABLE ORIGIN      Y01980 44450002
*                                  SET BY CONTROL                Y01980 44520002
         BNO   GSADMPSG            NO - GET LOCATION X'31C'      Y02006 44590002
GSADSEG  BAL   R4,SEGCHK           TRY READING THE SEGMENT TABLE Y01980 44660002
         TM    SWF,QSADMP          AMDSADMP DUMP                 Y02006 44730002
         BZ    GETRLMAX            NO - BRANCH TO GET REAL MAX   Y02006 44800002
         LA    R6,GETRLMAX         ERROR RETURN ADDRESS          Y02006 44870002
         LA    PREG,CSWPTR         GET ADDRESS OF CSW            Y02006 44940002
         BRREAD (PREG)             READ CSW                      Y02006 45010002
         MVC   0(12,PREG),SACSWCAW MOVE CSW & CAW BACK INTO      Y02006 45080002
*                                  RECORD 0,LOCATION X'40'-X'4B' Y02006 45150002
         B     GETRLMAX            GO GET REAL MAX ADDR          Y02006 45220002
GSADMPSG LA    R6,SEGTERR          ERROR RETURN ADDR             Y02006 45290002
         OI    PRSW,PRNTREAL       INDICATE REAL REQUEST         X01980 45360002
         MVI   MSGID,C'2'          ID CODE FOR MESSAGE           Y01980 45430002
         LA    PREG,SEGTABAD       ADDRESS OF SEGMENT TABLE PTR  Y02006 45500002
         BRREAD (PREG)             READ VALUE                    X01980 45570002
         MVC   SEGTABOR(4),0(PREG) SAVE SEGMENT TABLE ADDR       Y02006 45640002
         TM    SWF,QSADMP          AMDSADMP DUMP                 Y02006 45710002
         BZ    NOCSWMV             NO - DON'T MOVE CSW           Y02006 45780002
         SH    PREG,DISP2CSW       BACK UP BUFFER POINTER TO     Y02006 45850002
*                                  LOCATION X'40'                Y02006 45920002
         MVC   0(12,PREG),SACSWCAW MOVE CSW & CAW BACK INTO      Y02006 45990002
*                                  RECORD 0,LOCATION X'40'-X'4B' Y02006 46060002
NOCSWMV  BAL   R4,SEGCHK           TRY READING THE SEGMENT TABLE Y02006 46130002
         SPACE 1                                               @YM08438 46200003
***  GET TOP OF REAL STORAGE ADDRESS   ***                     @YM08438 46270002
         SPACE 1                                               @YM08438 46340003
GETRLMAX L     R2,REALMAP          GET MAP PTR                   Y02006 46410002
GETLINK  L     R3,MAPCHAIN(R2)     GET LINK FIELD                Y02006 46480002
         LA    R3,0(R3)            CLEAR HIGH ORDER BYTE         Y02006 46550002
         LTR   R3,R3               IS LINKFIELD 0 (LASTMAP)      Y02006 46620002
         BZ    LASTMAP             YES,GO GET REAL MAX ADDR      Y02006 46690002
         LR    R2,R3               POINT TO NEXT MAP             Y02006 46760002
         B     GETLINK             GO CHECK ITS LINK FIELD       Y02006 46830002
LASTMAP  L     R3,MAPLSTAD(R2)     GET LAST ADDRESS              Y02006 46900002
         A     R3,MF4096           ADD 4K                        Y02006 46970002
         BCTR  R3,0                SUBTRACT 1                    Y02006 47040002
         ST    R3,REALMAX          STORE IN COMMON               Y02006 47110002
         B     GCVTSW              GO FIND CVT                   Y02006 47180002
         SPACE 1                                               @YM08438 47250003
SEGTERR  L     R1,MSTMSG8          GET ADDRESS OF MESSAGE        Y02006 47320002
         BAL   R9,MPRTMSG          GO PRINT MESSAGE              Y02006 47390002
         B     GETRLMAX            GO GET MAX REAL ADDRESS       Y02006 47460002
         SPACE 1                                               @YM08438 47530003
*********************************************************************** 47600002
*                                                                     * 47670002
*        CHECK FOR A VALID CVT                                        * 47740002
*                                                                     * 47810002
*********************************************************************** 47880002
GCVTSW   MVI   MSGID,C'2'          ID CODE FOR MESSAGE           Y02006 47950002
         OC    CVTADDR,CVTADDR     WAS CVT ADDR = 0              Y02006 48020002
         BZ    CHKCVT              YES,GET FROM X'4C'            Y02006 48090002
         TM    SWA,SETCVTSW        WAS CVT ADDR SET BY CONTROL   Y02006 48160002
         BZ    GETMSTRC            BRANCH IF NO                  Y02006 48230002
         MVI   MSGID,C'1'          ID CODE FOR MESSAGE           Y02006 48300002
         B     GETMSTRC            GO VERIFY CVT                 Y02006 48370002
         SPACE 1                                                 Y02006 48440002
CHKCVT   LA    R3,SACVT            NO- GO FIND IT AT LOC X'4C'   Y01980 48510002
*                                  SET FOR CVT SEARCH          @YM08438 48580002
         OI    MSTSW,CVTSRCH       CVT SEARCH IN PROGRESS        Y02006 48650002
         BRREAD  (R3)                                          @YM08438 48720002
GETMSTRA L     PREG,0(PREG)        CVT PTR                     @YM08438 48790002
GETMSTRB LA    PREG,0(PREG)        CLEAR HI BYTE                 X01980 48860002
         ST    PREG,CVTADDR        SAVE CVT ADDR               @YM08438 48930002
         LTR   PREG,PREG           TEST PREG FOR ZERO OR NEG     X01980 49000002
         BZ    GETCVT              BRACNH TO FIND CVT            X01980 49070002
         NI    MSTSW,XFF-CVTSRCH   RESET CVT SEARCH INDICATOR    Y02006 49140002
         MVI   MSGID,C'3'          ID CODE FOR MESSAGE           Y02006 49210002
         B     GETMSTRC            GO VERIFY CVT IS VALID        Y02006 49280002
         SPACE 1                                               @YM08438 49350003
*********************************************************************** 49420002
*                                                                     * 49490002
*        SCAN DUMPED STORAGE FOR A VALID CVT                          * 49560002
*                                                                     * 49630002
*********************************************************************** 49700002
GETCVT   LA    R3,SACVT+4          START CVT SEARCH AT LOC X'50' Y01980 49770002
GETMSTRK OI    MSTSW,CVTSRCH       CVT SEARCH IN PROCESS         Y02006 49840002
         BRREAD  (R3)                                          @YM08438 49910002
CHK4CVT  CLC   0(4,PREG),CVTCHK    TEST FOR POSSIBLE CVT       @YM08438 49980002
         BE    GETMSTRI            A POSSIBLITY, GO TEST FURTHER        50050002
GETMSTRL AH    R3,FOUR             INCR. SEARCH ADDRESS        @YM08438 50120002
         C     R3,NUCTOP           REACHED HIGHEST CVT ADDR      Y01980 50190002
         BNL   NOCVT               YES - CVT NOT AVAILABLE       Y02006 50260002
         LR    R7,R3               SAVE SEARCH ADDRESS           Y02006 50330002
         N     R7,MASKOF4K         IS ADDR ON 4K BDY             Y02006 50400002
         BZ    GETMSTRK            YES - ISSUE BRREAD            Y02006 50470002
         LA    PREG,4(PREG)        INCREMENT BUFFER POINTER      Y02006 50540002
         B     CHK4CVT             CHECK NEXT FOUR BYTES         Y02006 50610002
NOCVT    NI    MSTSW,X'FF'-CVTSRCH YES- RESET SWITCH             Y02006 50680002
         B     MSTERR20            CVT NOT FOUND                 Y01980 50750002
GETMSTRI LA    PREG,CVTNUCB-CVTEXIT(R3)  ADDR OF NUC TOP       @YM08438 50820002
         BRREAD  (PREG)                                        @YM08438 50890002
         CLI   0(PREG),0           TEST FOR ZERO IN HIGH BYTE  @YM08438 50960002
         BNE   GETMSTRL            BRANCH IF NOT, TO CONTINUE SEARCH    51030002
         CLI   3(PREG),0           TEST FOR LAST BYTE ZERO (2K BDY)     51100002
         BNE   GETMSTRL            BRANCH IF NOT, TO CONTINUE  @YM08438 51170002
         L     R2,0(PREG)          SAVE NUC TOP IN REG 2       @YM08438 51240002
         LA    PREG,CVTMZ00-CVTEXIT(R3)  ADDR OF MAX MACH. ADDR         51310002
         BRREAD  (PREG)                                        @YM08438 51380002
         CLI   0(PREG),0           TEST FOR ZERO IN HIGH BYTE  @YM08438 51450002
         BNE   GETMSTRL            NOT, CONTINUE               @YM08438 51520002
         CLI   3(PREG),XFF         TEST FOR FF IN LAST BYTE    @YM08438 51590002
         BNE   GETMSTRL            NOT, CONTINUE               @YM08438 51660002
         C     R2,0(PREG)          COMPARE NUC TOP TO MAX MACH. AD      51730002
         BNL   GETMSTRL            CAN'T BE CVT                @YM08438 51800002
         LA    R2,SACVT+4          CVT FOUND                     Y01980 51870002
         SR    R3,R2               BACK UP TO CVT BEGINNING    @YM08438 51940002
         ST    R3,CVTADDR          STORE CVT ADDR IN COMMON    @YM08438 52010002
         B     GETMSTSO            BRANCH TO GET SYSTEM OPTIONS  Y02006 52080002
         SPACE 1                                               @YM08438 52150002
GETMSTRC L     PREG,CVTADDR        PICK UP CVT ADDR FROM COMMON  Y02006 52220002
         LA    R6,CVTNOVAL         ERROR RETURN ADDRESS          Y02006 52290002
         LA    PREG,80(PREG)       PREPARE TO VALIDITY CHECK CVT Y02006 52360002
VERFYCVT BRREAD (PREG)                                           Y02006 52430002
         CLC   0(4,PREG),CVTCHK    IS THERE AN SVC3 & BR 14      Y02006 52500002
         BE    GETMSTSO            YES - GO CHECK SYSTEM OPTIONS Y02006 52570002
CVTNOVAL L     R3,MSTMSG6          ADDR OF ERROR MESSAGE         Y02006 52640002
         LA    R4,19(R3)           PLACE TO PUT CONVERTED ADDR   Y02006 52710002
         LA    R1,CVTADDR          LOC OF ADDR TO BE CONVERTED   Y02006 52780002
         L     R15,AADRCNVT        ADDR OF CONVERT ROUTINE       Y02006 52850002
         BALR  RETREG,R15          LINK TO FOUR  BYTE CONVERT    Y02006 52920002
         LR    R1,R3               ADDR OF MESSAGE               Y02006 52990002
         MVC   42(L'MSGID,R1),MSGID  PUT MSG ID INTO MSG         Y02006 53060002
         BAL   R9,MPRTMSG          WRT TO PRDMP LOG              Y02006 53130002
         B     GETCVT              SEARCH DUMP FOR CVT                  53160003
*********************************************************************** 53200002
*                                                                     * 53270002
*        CVT HAS BEEN FOUND AND WILL BE ADDRESSED BY REG 8            * 53340002
*        DATA FROM THE CVT WILL NOW BE MOVED TO COMMON                * 53410002
*                                                                     * 53480002
*********************************************************************** 53550002
         SPACE 1                                                 Y02006 53620002
***  VERIFY THAT DUMP IS FROM AN OS/VS2 RELEASE 3 SYSTEM  ***  @YM30904 53690000
         SPACE 1                                                 Y02006 53760002
GETMSTSO NI    MSTSW,XFF-CVTSRCH   RESET CVT SEARCH INDICATOR    Y02006 53830002
         MVI   CVTADDR,X'00'       CLEAR HIGH BYTE               Y02006 53900002
         L     R8,CVTADDR          LOAD THE CVT ADDRESS          Y02006 53970002
         LA    R6,GMSTER0          ERROR RETURN ADDRESS          Y02006 54040002
         LA    PREG,CVTDCB         POINT TO SYSTEM OPTION BYTE   Y02006 54110002
         BRREAD (PREG)                                           Y02006 54180002
         TM    0(PREG),CVT8AOS2    OS/VS2 SYSTEM                 Y02006 54250002
         BNO   GMSTER0             NO - GO OUTPUT MESSAGE        Y02006 54320002
         LR    PREG,R8             CVTADDR IN REG 1              Y02006 54390002
         SH    PREG,FOUR           GET CVTADDR MINUS 4 = REL.NO. Y02006 54460002
         BRREAD (PREG)                                           Y02006 54530002
         CLC   0(2,PREG),EBCTHREE  IS THIS RELEASE 3 DUMP      @YM30904 54600000
         BE    MSTS00          YES - CONTINUE                 OZ09006   54670000
GMSTER0  L     R1,MSTMSG4          ADDR OF ERROR MSG             Y02006 54740002
         BAL   R9,MPRTMSG          NOT OS/VS2 DUMP               Y02006 54810002
**************************************************************OZ09006   54813000
*                                                             OZ09006   54816000
*          THIS CODE WILL SET THE INTERNAL SU BIT STRING FOR  OZ09006   54819000
*    USE BY PRDMP MODULES WHICH OUTPUT DEPENDENT ON SU        OZ09006   54822000
*    CONFIGURATION                                            OZ09006   54825000
*                                                             OZ09006   54828000
**************************************************************OZ09006   54831000
MSTS00   EQU   *               INITIALIZE SU BIT STRING       OZ09006   54834000
         LA    R6,GETMSTR7     ERR ADDR IF NO CVT             OZ09692   54835000
         NI    Z9SUFLG,X'00'   INITIALIZE NOT SET             OZ09006   54837000
         LA    PREG,CVTIHASU   LOAD POINTER ADDRESS           OZ09006   54840000
         BRREAD (PREG)         READ BIT STRING POINTER        OZ09006   54843000
         CLC   0(4,PREG),=F'00' POINTER IS ZERO?              OZ09006   54846000
         BE    GETMSTR7        YES - CONTINUE                 OZ09006   54849000
*                              NO - SET INTERNAL BIT STRING   OZ09006   54852000
         L     PREG,0(PREG)    ADDRESS OF SU BIT STRING       OZ09006   54855000
         BRREAD (PREG)         READ BIT STRING                OZ09006   54858000
         MVC   Z9SUBITS(16),0(PREG)  SAVE BIT STRING          OZ09006   54861000
         OI    Z9SUFLG,X'01'   INDICATE SUBITS ARE SET        OZ09006   54864000
         SPACE 1                                               @YM08438 54880003
***  GET THE PSA PREFIX REGISTER VALUES IF INPUT IS FROM AMDSADMP  ***  54950002
         SPACE 1                                                 Y02006 55020002
GETMSTR7 EQU   *                                               @YM08438 55090002
         TM    SWF,QSADMP          IS THIS AMDSADMP INPUT        Y02006 55160002
         BZ    GETMSTMT            NO - CONTINUE                 Y02006 55230002
         CLC   IPLCPU,CPUADINV     IS CPU ADDR VALID             Y02006 55300002
         BE    GETMSTMT            NO - DONT GET PREFIX INFO     Y02006 55370002
         LA    R6,NOPREFX          ERROR RETURN ADDRESS          Y02006 55440002
         LA    PREG,CVTPCCAT       ADDR OF PCCA VECTOR TABLE     Y02006 55510002
         BRREAD (PREG)                                           Y02006 55580002
         L     PREG,0(PREG)        PUT ADDR OF PCCAVT IN R1      Y02006 55650002
         LTR   PREG,PREG           CHECK IF ZERO                 Y02006 55720002
         BZ    GETMSTMT            CONTINUE IF IT IS             Y02006 55790002
         LH    R4,IPLCPU           GET IPL'ED CPU ADDR           Y02006 55860002
         SLA   R4,MULTBY4          MULTIPLY BY 4 TO GET INDEX    Y02006 55930002
         AR    R4,PREG             ADD TO ADDR OF PCCA VECTOR TABLE     56000002
*                                                                Y02006 56070002
         BRREAD (R4)               GET ADDR OF PCCA              Y02006 56140002
         L     R4,0(PREG)          GET ADDR OF PCCA              Y02006 56210002
         LTR   R4,R4               CHECK IF ZERO                 Y02006 56280002
         BZ    GETMSTMT            BRANCH IF IT IS               Y02006 56350002
         USING PCCA,R4                                           Y02006 56420002
         LA    R6,RDRLERR          ERROR RETURN ADDRESS          Y02006 56490002
         LA    PREG,PCCAPSAR       REAL ADDRESS OF PSA           Y02006 56560002
         BRREAD (PREG)                                           Y02006 56630002
         MVC   PREFXRGR,0(PREG)    SAVE ADDR OF PSA IN COMMON    Y02006 56700002
         MVC   RLADSTG,0(PREG)     SAVE ADDR FOR MESSAGE         Y02006 56770002
RDVIRTAD LA    R6,RDVTERR          ERROR RETURN ADDRESS          Y02006 56840002
         LA    PREG,PCCAPSAV       VIRTUAL ADDR OF PSA           Y02006 56910002
         BRREAD (PREG)                                           Y02006 56980002
         MVC   PREFXRGV,0(PREG)    SAVE VIRTUAL ADDR IN COMMON   Y02006 57050002
         MVC   VTADSTG,0(PREG)     SAVE ADDR FOR MSG             Y02006 57120002
         TM    MSTSW,RDRLERRB      DID ERROR OCCUR WHILE READING        57190002
*                                  REAL ADDRESS                  Y02006 57260002
         BO    RERRVOK             YES - BRANCH                  Y02006 57330002
         OC    PREFXRGR(8),PREFXRGR ARE BOTH ADDRESSES = 0       Y02006 57400002
         BZ    GETMSTMT            YES - UNIPROCESSOR BRANCH     Y02006 57470002
         OC    PREFXRGR,PREFXRGR   IS REAL ADDR = 0              Y02006 57540002
         BZ    RLAD0               YES - BRANCH                  Y02006 57610002
         NC    PREFXRGR,MASKOF4K   IS REAL ADDR ON 4K BDY        Y02006 57680002
         BNZ   RLAD0               NO - BRANCH                   Y02006 57750002
         MVC   PREFXRGR(4),RLADSTG RESTORE REAL ADDRESS          Y02006 57820002
RLADOK   OC    PREFXRGV,PREFXRGV   VIRTUAL ADDR = 0              Y02006 57890002
         BZ    VIRTAD0             YES - BRANCH                  Y02006 57960002
         NC    PREFXRGV,MASKOF4K   IS VIRTUAL ADDR ON 4K BDY     Y02006 58030002
         BNZ   VIRTAD0             NO - ERROR                    Y02006 58100002
         MVC   PREFXRGV,VTADSTG    RESTORE VIRTUAL ADDRESS       Y02006 58170002
         B     GETMSTMT            YES - CONTINUE                Y02006 58240002
         SPACE 1                                               @YM08438 58310003
VIRTAD0  XC    PREFXRGV,PREFXRGV   ZERO VIRTUAL ADDRESS          Y02006 58380002
PRERRMSG L     R3,MSTMSG7          ADDR OF ERROR MESSAGE         Y02006 58450002
         LA    R4,42(R3)           PLACE FOR CONVERTED ADDR      Y02006 58520002
         LA    R1,RLADSTG          LOC OF ADDR TO BE CONVERTED   Y02006 58590002
         L     R15,AADRCNVT        ADDR OF CONVERT ROUTINE       Y02006 58660002
         BALR  RETREG,R15          LINK TO FOUR-BYTE CONVERT     Y02006 58730002
         LA    R4,59(R3)           PLACE FOR CONVERTED ADDR      Y02006 58800002
         LA    R1,VTADSTG          LOC OF ADDR TO BE CONVERTED   Y02006 58870002
         L     R15,AADRCNVT        ADDR OF CONVERT ROUTINE       Y02006 58940002
         BALR  RETREG,R15          LINK TO FOUR-BYTE CONVERT     Y02006 59010002
         LR    R1,R3               ADDR OF MESSAGE               Y02006 59080002
         BAL   R9,MPRTMSG          WRT TO PRDMP LOG              Y02006 59150002
         B     GETMSTMT            CONTINUE PROCESSING           Y02006 59220002
         SPACE 1                                               @YM08438 59290003
RERRVOK  NI    MSTSW,XFF-RDRLERRB  RESET ERROR FLAG              Y02006 59360002
         BAL   R4,RDCPUST          GET PSA ADDR FROM STORE STATUS       59430002
*                                  INFO                          Y02006 59500002
         LTR   R15,R15             WAS A VALID ADDRESS FOUND     Y02006 59570002
         BZ    RLADOK              YES - CONTINUE PROCESSING     Y02006 59640002
CHKVTAD  OC    PREFXRGV,PREFXRGV   IS VIRTUAL ADDR = 0           Y02006 59710002
         BZ    PRERRMSG            YES - GO ISSUE MESSAGE        Y02006 59780002
         NC    PREFXRGV,MASKOF4K   VIRTUAL ADDR ON 4K BDY        Y02006 59850002
         BNZ   VIRTAD0             NO  - GO ISSUE MESSAGE        Y02006 59920002
         MVC   PREFXRGV,VTADSTG    RESTORE VIRTUAL ADDRESS       Y02006 59990002
         B     PRERRMSG            GO ISSUE MESSAGE              Y02006 60060002
         SPACE 1                                               @YM08438 60130003
RLAD0    XC    PREFXRGR,PREFXRGR   ZERO REAL ADDRESS             Y02006 60200002
         BAL   R4,RDCPUST          GET REAL ADDR FROM STORE STATUS      60270002
*                                  INFO                          Y02006 60340002
         LTR   R15,R15             WAS A VALID ADDRESS FOUND     Y02006 60410002
         BZ    RLADOK              YES - CONTINUE PROCESSING     Y02006 60480002
         B     CHKVTAD             NO - GO CHECK VIRTUAL ADDR    Y02006 60550002
         SPACE 1                                               @YM08438 60620003
RDVTERR  TM    MSTSW,RDRLERRB      ERROR READING REAL ADDR ALSO  Y02006 60690002
         BZ    ROKVTERR            NO - BRANCH TO HANDLE VIRTUAL        60760002
*                                  READ ERROR                    Y02006 60830002
         NI    MSTSW,XFF-RDRLERRB  RESET ERROR FLAG              Y02006 60900002
         B     RERRVERR            BRANCH TO ERROR IN BOTH       Y02006 60970002
         SPACE 1                                               @YM08438 61040003
ROKVTERR OC    PREFXRGR,PREFXRGR   REAL ADDR = 0                 Y02006 61110002
         BZ    PRERRMSG            YES - GO ISSUE ERROR MESSAGE  Y02006 61180002
         NC    PREFXRGR,MASKOF4K   REAL ADDR ON A 4K BOUNDARY    Y02006 61250002
         BNZ   RERRVERR            NO - GO ISSUE MESSAGE         Y02006 61320002
         MVC   PREFXRGR,RLADSTG    RESTORE REAL ADDRESS          Y02006 61390002
         B     PRERRMSG            GO ISSUE MESSAGE              Y02006 61460002
RERRVERR XC    PREFXRGR,PREFXRGR   ZERO REAL ADDRESS IN COMMON   Y02006 61530002
         BAL   R4,RDCPUST          GET REAL ADDR FROM CPU STAT   Y02006 61600002
         CH    R15,FOUR            RETURN CODE = 4               Y02006 61670002
         BNE   PRERRMSG            YES - ISSUE MESSAGE           Y02006 61740002
NOPREFX  L     R1,MSTMSG3          ADDR OF NO PREFIXING MSG      Y02006 61810002
         BAL   R9,MPRTMSG          WRT TO PRDMP LOG              Y02006 61880002
         B     GETMSTMT            CONTINUE PROCESSING           Y02006 61950002
         SPACE 1                                               @YM08438 62020003
RDRLERR  OI    MSTSW,RDRLERRB      SET ERROR FLAG                Y02006 62090002
         B     RDVIRTAD            GO READ VIRTUAL ADDRESS       Y02006 62160002
         SPACE 1                                               @YM08438 62230003
***  GET ADDRESS OF THE ASVT  ***                              @YM08438 62300002
         SPACE 1                                                 Y02006 62370002
GETMSTMT EQU   *                                                 Y02006 62440002
         LA    R6,GETMSTR3         ERROR RETURN ADDRESS          Y02006 62510002
         LA    PREG,CVTASVT        ADDRESS OF ASVT               Y02006 62580002
         BRREAD (PREG)                                           Y02006 62650002
         MVC   ASVTADDR(4),0(PREG) SAVE ASVT ADDR IN COMMON      Y02006 62720002
         SPACE 1                                               @YM08438 62790003
***  GET CURRENT ASCB  ***                                     @YM08438 62860002
         SPACE 1                                                 Y02006 62930002
GETMSTR3 EQU    *                                                Y02006 63000002
         CLC   QASID,ZEROASID      ASID IN COMMON EQUAL TO ZERO  Y02006 63070002
         BNE   GTIDFRVT          NO - GET CURRENT ASCB FROM ASVT Y02006 63140002
         LA     PREG,CVTTCBP       ADDR OF TCB POINTER IN CVT    Y02006 63210002
         LA    R6,GETMSTR4         ERROR RETURN ADDR             Y01980 63280002
         BRREAD   (PREG)                                         Y01980 63350002
         L     PREG,0(PREG)        CVTTCBP                     @YM08438 63420002
         LA    PREG,12(PREG)        ADDR OF CURRENT ASCB PTR     Y02006 63490002
         BRREAD  (PREG)                                        @YM08438 63560002
         MVC   CURASCB(4),0(PREG)   SAVE ADDR OF CURRENT ASCB    Y02006 63630002
         L     R4,CURASCB          ADDRESS OF CURRENT ASCB       Y02006 63700002
         USING ASCB,R4                                           Y02006 63770002
         LA    PREG,ASCBASID       ADDRESS OF ASID IN ASCB       Y02006 63840002
         BRREAD (PREG)                                           Y02006 63910002
         MVC   ASIDSV(2),0(PREG)   SAVE CURRENT ASID             Y02006 63980002
***  THE ASID WILL BE STORED IN COMMON AT LOCATION QASID AFTER THE LAST 64050002
*    BRREAD IN MST. IT MUST NOT BE MOVED THERE BEFOREHAND BECAUSE       64120002
*    AMDPRRDC NEEDS TO HAVE THE QASID FIELD = '0000'X FOR ALL OF THE    64190002
***  BRREADS IN MST WHEN THE INPUT IS FROM AMDSADMP.           @YM08438 64260002
         B     GETMSTR4            CONTINUE                      Y02006 64330002
         SPACE 1                                                 Y02006 64400002
GTIDFRVT EQU   *                                               @YM08438 64470002
         OC    ASVTADDR,ASVTADDR   IS ASVT ADDR = 0              Y02006 64540002
         BZ    GETMSTR4            YES - BRANCH                @YM08438 64610002
         LA    R6,GETMSTR4         ERROR RETURN ADDRESS          Y02006 64680002
         L     R4,ASVTADDR         ADDRESS OF ASVT               Y02006 64750002
         USING ASVT,R4                                           Y02006 64820002
         LA    R3,ASVTENTY         ADDRESS OF ASVTENTY           Y02006 64890002
         LH    PREG,QASID          ASID                          Y02006 64960002
         SLA   PREG,MULTBY4        MULTIPLY BY 4                 Y02006 65030002
         AR    PREG,R3             ADD ADDRESS OF ASVTENTY       Y02006 65100002
         SH    PREG,FOUR           SUBTRACT 4                    Y02006 65170002
         BRREAD (PREG)                                           Y02006 65240002
         MVC   CURASCB(4),0(PREG)  SAVE ADDR OF CURRENT ASCB     Y02006 65310002
         SPACE 1                                                 Y02006 65380002
***  GET TOP OF NUCLEUS VALUE  ***                             @YM08438 65450002
         SPACE 1                                                 Y02006 65520002
GETMSTR4 EQU   *                                               @YM08438 65590002
         LA    R6,GETMST5A         ERROR RETURN ADDR             Y02006 65660002
         LA    PREG,CVTNUCB        NUC UPPERBOUND PTR ADDR       Y01980 65730002
         BRREAD  (PREG)                                        @YM08438 65800002
         L     R3,0(PREG)                                        Y02006 65870002
         LTR   R3,R3               IS ADDRESS ZERO               Y02006 65940002
         BZ    GETMST5A            YES - STAY WITH DEFAULT       Y02006 66010002
         ST    R3,NUCTOP           SAVE UPPER BOUND OF NUCLEUS   Y02006 66080002
         OI    SWF,NUCTFRMC        INDICATE NUCTOP FROM CVT      Y02006 66150002
         SPACE 1                                                 Y02006 66220002
***  GET CSA ADDRESS   ***                                     @YM08438 66290002
         SPACE 1                                               @YM08438 66360002
GETMST5A EQU   *                                                 Y02006 66430002
         LA    R6,GETMSTR6         ERROR RETURN ADDRESS          Y02006 66500002
         LA    PREG,CVTGDA         GLOBAL DATA AREA ADDRESS      Y02006 66570002
         BRREAD (PREG)                                           Y02006 66640002
         L     R3,0(PREG)                                        Y02006 66710002
         LTR   R3,R3               IS ADDRESS ZERO               Y02006 66780002
         BZ    GETMSTR6            YES - STAY WITH DEFAULT       Y02006 66850002
         USING GDA,R3                                          @YM08438 66920002
         LA    PREG,PASTRT         GET ADDR OF PRIVATE AREA      Y02006 66990002
         BRREAD (PREG)                                         @YM08438 67060002
         L     R10,0(PREG)         SAVE BEGINNING ADDR           Y02006 67130002
         LTR   R10,R10             IS ADDRESS ZERO               Y02006 67200002
         BZ    GETMSTR6            YES - STAY WITH DEFAULT       Y02006 67270002
         LA    PREG,PASIZE         GET PRIVATE AREA SIZE         Y02006 67340002
         BRREAD (PREG)                                           Y02006 67410002
         L     PREG,0(PREG)        PASIZE                        Y02006 67480002
         LTR   PREG,PREG           IS SIZE ZERO                  Y02006 67550002
         BZ    GETMSTR6            YES - STAY WITH DEFAULT       Y02006 67620002
         AR    PREG,R10            CALC ENDING ADDR OF PRIV AREA Y02006 67690002
         ST    PREG,CSADDR         SAVE ENDING ADDR IN COMMON    Y02006 67760002
         SPACE 1                                               @YM08438 67830002
***  GET THE ADDRESS OF THE PAGE FRAME TABLE FROM THE PAGE VECTOR TABLE 67900002
         SPACE 1                                                 Y02006 67970002
GETMSTR6 EQU   *                                               @YM08438 68040002
         LA    R6,GETDATE          ERROR RETURN ADDRESS         @YM4501 68110002
         LA    PREG,CVTPVTP        ADDRESS OF PAGE VECTOR TABLE  Y01980 68180002
         BRREAD  (PREG)                                          Y01980 68250002
         L     PREG,0(PREG)        GET THE ADDRESS               Y01980 68320002
         LTR   PREG,PREG           IS ADDRESS EQUAL ZERO         Y02006 68390002
         BZ    GETDATE             YES-DONT READ FOR PTF ADDR   @YM4501 68460002
         LR    R4,PREG             SAVE ADDR OF PVT              Y01980 68530002
         USING PVT,R4                                            Y02006 68600002
         SPACE 1                                               @YM08438 68670003
         LA    PREG,PVTPFTP        ADDR OF PAGE FRAME TABLE      Y02006 68740002
         BRREAD  (PREG)                                          Y01980 68810002
         L     PREG,0(PREG)        SAVE ADDR OF                  Y01980 68880002
         ST    PREG,QAPFT          PAGE FRAME TABLE IN COMMON    Y01980 68950002
         SPACE 1                                               @YM08438 69020003
***  GET DATE FROM CVT  ***                                    @YM08438 69090002
         SPACE 1                                               @YM08438 69160003
GETDATE  EQU   *                                               @YM08438 69230002
         LA    R6,GMSTER1          ERROR RETURN ADDRESS          Y02006 69300002
         LA    PREG,CVTDATE        ADDR OF DATE                  Y01980 69370002
         BRREAD  (PREG)                                        @YM08438 69440002
         MVC   DATE(4),0(PREG)     SAVE DATE FOR LATER         @YM08438 69510002
         SPACE 1                                               @YM08438 69580003
***  CONVERT TIME OF DAY VALUE THAT WAS IN THE DUMP HEADER  ***         69650002
         SPACE 1                                                 Y02006 69720002
         LA    PREG,CVTTZ          ADDRESS OF TIME ZONE VALUE    Y01980 69790002
         BRREAD  (PREG)                                          Y01980 69860002
         ST    PREG,PCVTTZ         SAVE IN PARM LIST             Y01980 69930002
         MVC   PTODSAV,TITLETME+5  GET TIME FROM HEADER RECORD   Y02006 70000002
         SPACE 1                                               @YM08438 70070003
         LA    PREG,PCVTTZ         PTR TO 3 WORD PARM LIST       Y01980 70140002
         LA    R2,1                CODE- TIME,DATE CONVERSION    Y01980 70210002
         L     R15,QATMERTN        ADDR TOD CONVERSION ROUTINE   Y01980 70280002
         BALR  R14,R15             LINK TO TOD CONVERSION        Y01980 70350002
         SPACE 1                                               @YM08438 70420003
         MVC   TITLETME+5(L'PTODHRS),PTODHRS    HOURS TO TITLE   Y01980 70490002
         MVC   TITLETME+8(L'PTODMIN),PTODMIN   MINUTES TO TITLE  Y01980 70560002
         MVC   TITLETME+11(L'PTODSEC),PTODSEC  SECONDS TO TITLE  Y01980 70630002
         SPACE 1                                               @YM08438 70700003
*********************************************************************** 70770002
*                                                                     * 70840002
*   CONVERT JULIAN DATE TO A REAL DATE AND PLACE IT IN THE TITLE      * 70910002
*                                                                     * 70980002
*********************************************************************** 71050002
         SPACE 1                                               @YM08438 71120003
         TM    DATE+3,X'0F'        IS DATE VALID               @YM08438 71190002
         BNO   GMSTERR             BR IF NOT TO LEAVE DATE BLANK Y01980 71260002
         SR    R3,R3                CLEAR IC REG               @YM08438 71330002
         IC    R3,DATE+1            GET YEAR                   @YM08438 71400002
         SLL   R3,4                 SHIFT LEFT 1 DIGIT,MAKE ROOM FOR    71470002
*                                   SIGN                       @YM08438 71540002
         LA    R2,15                LOAD SIGN TO R2            @YM08438 71610002
         OR    R3,R2                OR SIGN INTO DECIMAL YEAR  @YM08438 71680002
         XC    WORK1(4),WORK1       ZERO FIRST WORD OF WORKAREA         71750002
         ST    R3,WORK1+4           STORE DEC YEAR INTO WORKAREA        71820002
         CVB   R3,WORK1             CONVERT YEAR TO BINARY     @YM08438 71890002
         LA    R2,3                  LOAD AND MASK  TO R2      @YM08438 71960002
         NR    R3,R2                 TEST FOR YEAR IN MULT OF FOUR      72030002
*                                    (IS IT A LEAP YEAR?)      @YM08438 72100002
         BZ    DATER1              BR IF IT IS                 @YM08438 72170002
         LA    R2,28               NUMBER OF DAYS IN FEB       @YM08438 72240002
         B     DATER2              SKIP LEAP YEAR PROCESSING   @YM08438 72310002
DATER1   LA    R2,29               NUMBER OF DAYS IN FEB IN LEAP YEAR   72380002
DATER2   STC   R2,MONTHMSK+10      STORE PROPER LENGTH FOR MONTH OF FEB 72450002
         XC    WORK1(8),WORK1      ZERO WORK AREA              @YM08438 72520002
         MVC   WORK1+6(2),DATE+2   MOVE JULIAN DATE TO WORK1   @YM08438 72590002
         CVB   R4,WORK1            CONVERT TO BINARY           @YM08438 72660002
         SR    R5,R5               CLEAR MONTH REG             @YM08438 72730002
         LR    R6,R5               ZERO MONTH LENGTH REG       @YM08438 72800002
         LA    R3,12               LOAD LOOP COUNT             @YM08438 72870002
         LA    R2,MONTHMSK-1       INITIALIZE BASE REG         @YM08438 72940002
MONLOOP  AH    R5,ONEA             ADD ONE TO MONTH REG        @YM08438 73010002
         IC    R6,0(R3,R2)         LOAD MONTH LENGTH           @YM08438 73080002
         SR    R4,R6               SUBTRACT MONTH LENGTH FROM JULIAN    73150002
         BNP   MONADJ              BR IF EQ OR LT 0            @YM08438 73220002
         BCT   R3,MONLOOP          LOOP                        @YM08438 73290002
         SPACE 1                                               @YM08438 73360003
MONADJ   AR    R4,R6               ADD MONTH LENGTH BACK       @YM08438 73430002
         CVD   R5,WORK1            CONVERT MONTH TO DECIMAL    @YM08438 73500002
         MVO   WORK1+1(4),WORK1+4(4) GET RID OF SIGN           @YM08438 73570002
         IC    R6,WORK1+3          DECIMAL MONTH TO R6         @YM08438 73640002
         SLL   R6,8                                            @YM08438 73710002
         CVD   R4,WORK1            CONVERT DAY TO DECIMAL      @YM08438 73780002
         MVO   WORK1+1(4),WORK1+4(4) GET RID OF SIGN           @YM08438 73850002
         IC    R6,WORK1+3          DECIMAL DAY TO R6           @YM08438 73920002
         SLL   R6,8                                            @YM08438 73990002
         IC    R6,DATE+1           YEAR TO R6                  @YM08438 74060002
         LA    R7,12               POSITIVE SIGN               @YM08438 74130002
         SLL   R7,28               SHIFT TO HIGH ORDER DIGIT   @YM08438 74200002
         SLDL  R6,4                SIGN TO R6                  @YM08438 74270002
         ST    R6,WORK1            STORE PACKED DECIMAL DATE   @YM08438 74340002
         UNPK  EDWRK(6),WORK1(4)   MAKE DATE PRINTABLE         @YM08438 74410002
         OI    EDWRK+5,X'F0'       SET ZONE IN SIGN SLOT       @YM08438 74480002
         MVC   DATEPTRN+6(2),EDWRK+4  MOVE YEAR TO PATTERN     @YM08438 74550002
         MVC   DATEPTRN+3(2),EDWRK+2  MOVE DAY TO PATTERN      @YM08438 74620002
         MVC   DATEPTRN(2),EDWRK   MOVE MONTH TO PATTERN       @YM08438 74690002
         MVC   TITLEDTE+5(8),DATEPTRN MOVE DATE TO TITLE       @YM08438 74760002
         B     GMSTERR             PRINT TITLE                   Y01980 74830002
         SPACE 2                                               @YM08438 74900002
GMSTER1  MVC   TITLEDTE+5(8),BLANKS  BLANK OUT DATE              Y02006 74970002
         MVC   TITLETME+5(8),BLANKS  BLANK OUT TIME              Y02006 75040002
         SPACE 1                                               @YM08438 75110003
****  BUILD TITLE (IF ANY) FROM HEADER RECORD  ***               S21016 75180002
GMSTERR  BRWRITE SKIP              SKIP TO TOP OF PAGE           S21016 75250002
         L     R2,CURBUF           OBTAIN CURRENT BUFFER ADDRESS Y02006 75320002
CHK4TTLE CLC   HDRTITLE(100),1(R2) WAS A TITLE SPECIFIED         Y02006 75390002
         BE    MVCTTL              NO - BRANCH                   Y02006 75460002
MOVETTL  MVC   18(100,R2),HDRTITLE MOVE USER DATA FROM HEADER    Y02006 75530002
         MVC   1(17,R2),TTLFRDMP   MOVE HEADING TO BUFFER        S21016 75600002
         MVC   TITLEMSG(64),HDRTITLE  SET UP TITLE             @OZ00406 75630003
WRTTTL   OI    PRSW,TTLSW          SET DUMP TITLE SWITCH         S21016 75670002
         BRWRITE 3                 WRITE DUMP TITLE              S21016 75740002
         TM    Z9SUFLG,X'01'        SU'S CONFIGURED             UZ81700 75741000
         BZ    GMSTRET              NO - STOP CHECK             UZ81700 75742000
         TM    SWF,QSADMP           STAND ALONE DUMP INPUT      OZ12028 75742300
         BO    GMSTRET              YES - FORGET ERRORID        OZ12028 75742600
         TM    Z9SUBITS+2,X'40'     SU17 CONFIGURED             UZ81700 75743000
         BZ    GMSTRET              NO - BYPASS ERRORID CODE    UZ81700 75744000
         L     R2,CURBUF            GET CURRENT BUFFER ADDRESS  UZ81700 75745000
         CLI   Z9ERRID,X'FE'        ID EXISTS?                  UZ81700 75746000
         BNE   MSTMVER              YES - MOVE ERROR ID         UZ81700 75747000
*                                   NO - GIVE NO ERRID COMMENT  UZ81700 75748000
         MVC   1(37,R2),NOERRID     COMMENT TO BUFFER           UZ81700 75749000
         B     MSTPTER              PRINT LINE                  UZ81700 75750000
MSTMVER  EQU   *                                                UZ81700 75751000
         MVC   1(62,R2),ERRID       MOVE ERRORID TAG            UZ81700 75752000
         LA    R14,0                CLEAR WORK1                 UZ81700 75753000
         ST    R14,WORK1            FOR LOADING VALUES          UZ81700 75754000
         MVC   WORK1+2(2),Z9ERRID   ALLOW FOR H-ORDER BIT ON    UZ81700 75755000
         L     R14,WORK1            GET SEQ NUMBER              UZ81700 75756000
         CVD   R14,WORK1            HEX TO DECIMAL              UZ81700 75757000
         UNPK  28(5,R2),WORK1+5(3)  MOVE TO OUTPUT LINE         UZ81700 75758000
         OI    32(R2),X'F0'         CHANGE SIGN ON LAST DIGIT   UZ81700 75759000
         LA    R14,0                CLEAR WORK1                 UZ81700 75760000
         ST    R14,WORK1            FOR LOADING VALUES          UZ81700 75761000
         MVC   WORK1+6(2),Z9ERRID+2 PICK UP CPU                 UZ81700 75762000
         HEXCNVT WORK1,WORK1+7,1   CONVERT TO PRINTABLE HEX     UZ81700 75763000
         MVC   37(2,R2),WORK1      MOVE CPU TO OUTPUT           UZ81700 75764000
         MVC   WORK1+6(2),Z9ERRID+4 PICK UP ASID                UZ81700 75769000
         HEXCNVT WORK1,WORK1+6,2   CONVERT TO PRINTABLE HEX     UZ81700 75770000
         MVC   44(4,R2),WORK1      MOVE ASID TO OUTPUT          UZ81700 75771000
         MVC   WORK1(4),Z9ERRID+6   GET TIME STAMP              UZ81700 75774000
         L     R15,WORK1            GET TIME STAMP INTO REG     UZ81700 75775000
         SR    R14,R14              ZERO EVEN REGISTER          UZ81700 75776000
         D     R14,=F'10'           GET FULL SECONDS            UZ81700 75777000
         CVD   R14,WORK1            GET REMAINING TENTHS        UZ81700 75778000
         UNPK  62(1,R2),WORK1+7(1)  MOVE TO OUTPUT LINE         UZ81700 75779000
         OI    62(R2),X'F0'         CHANGE SIGN ON LAST DIGIT   UZ81700 75780000
         SR    R14,R14              ZERO EVEN REGISTER          UZ81700 75781000
         D     R14,=F'60'           GET MINUTES                 UZ81700 75782000
         CVD   R14,WORK1            GET REMAINING SECONDS       UZ81700 75783000
         UNPK  59(2,R2),WORK1+6(2)  MOVE TO OUTPUT LINE         UZ81700 75784000
         OI    60(R2),X'F0'         CHANGE SIGN ON LAST DIGIT   UZ81700 75785000
         SR    R14,R14              ZERO EVEN REGISTER          UZ81700 75786000
         D     R14,=F'60'           GET HOURS                   UZ81700 75787000
         CVD   R14,WORK1            GET REMAINING MINUTES       UZ81700 75788000
         UNPK  56(2,R2),WORK1+6(2)  MOVE TO OUTPUT LINE         UZ81700 75789000
         OI    57(R2),X'F0'         CHANGE SIGN ON LAST DIGIT   UZ81700 75790000
         CVD   R15,WORK1            GET REMAINING HOURS         UZ81700 75791000
         UNPK  53(2,R2),WORK1+6(2)  MOVE TO OUTPUT LINE         UZ81700 75792000
         OI    54(R2),X'F0'         CHANGE SIGN ON LAST DIGIT   UZ81700 75793000
MSTPTER  EQU   *                                                UZ81700 75794000
         BRWRITE 2                  PRINT ERRORID LINE          UZ81700 75795000
         B     GMSTRET             RETURN                        S21016 75810002
MVCTTL   MVC   1(21,R2),TTLFRDMP   MOVE NO TITLE MSG TO BUFFER   Y02006 75880002
         B     WRTTTL              GO TO WRITE MESSAGE           S21016 75950002
         SPACE 1  2                                            @YM08438 76020003
***  THIS BLOCK OF CODE MOVES THE CURRENT ASID THAT WAS FOUND IN THE    76090002
*    DUMP INTO THE QASID FIELD IN COMMON IF QASID WAS EQUAL TO X'0000'  76160002
*    ON ENTRY TO MST. THIS BLOCK OF CODE MUST FOLLOW THE LAST BRREAD    76230002
*    IN MST SINCE AMDPRRDC DEPENDS ON THE QASID FIELD BEING ALL         76300002
***  ZEROES UNTIL AFTER MST PROCESSING IS COMPLETED.           @YM08438 76370002
         SPACE 1                                               @YM08438 76440003
GMSTRET  EQU   *                                                OZ13033 76510000
         TM    Z9SUFLG,X'01'       SUBITS SET?                  OZ13033 76520000
         BZ    GMSTRETA            NO - DO NOT FORMAT           OZ13033 76530000
         L     R15,BITADR          ROUTINE TO FORMAT BIT STRING OZ13033 76540000
         BALR  R14,R15             LINK TO IT                   OZ13033 76550000
GMSTRETA EQU   *                                                OZ13033 76560000
         CLC   QASID,ZEROASID      WAS ASID = 0 ON ENTRY        OZ13033 76570000
         BNE   GMSTRET1            NO - RETURN TO CALLER         Y02006 76580002
         MVC   QASID,ASIDSV        MOVE ASID TO COMMON           Y02006 76650002
         XC    ASIDSV,ASIDSV       ZERO ASID SAVE AREA           Y02006 76720002
         SPACE 1                                                 Y02006 76790002
GMSTRET1 MVC   ERRADDR(4),MSTERSAV                             @YM08438 76860002
         CLI   SEGTABOR,X'FF'      IS SEG. TAB. ADDR. USER SET @YM08438 76870003
         BNE   GMSTRET2            NO, RETURN TO CALLER        @YM08438 76880003
         XC    QASID(2),QASID      ZERO CURRENT ASID FOR AMDPRRDC       76890003
GMSTRET2 L     R13,MSTSAVE+4       POINT TO CALLER'S SAVE AREA @YM08438 76900003
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS  @YM08438 77000002
         BR    RETREG              RETURN TO CALLER            @YM08438 77070002
         EJECT                                                 @YM08438 77140002
**************************************************************** A43168 77210002
*                                                                A43168 77280002
*                  GET MASTER ERROR ROUTINE                      A43168 77350002
*                                                                A43168 77420002
*  ALL BRREAD ERRORS ARE RETURNED TO THIS ROUTINE              @YM08438 77490002
*  SPECIAL HANDLING IS PROVIDED WHILE SEARCHING FOR THE CVT AND         77560002
*  WHEN ACCESSING THE SEGMENT TABLE.                           @YM08438 77630002
*                                                                A43168 77700002
**************************************************************** A43168 77770002
         SPACE 1                                               @YM08438 77840003
         USING *,R15               TEMPORARILY BASE ON REG 15    A43168 77910002
MSTERR   LA    R13,MSTSAVE         POINT TO MST-S SAVE AREA      A43168 77980002
         LM    R14,R12,12(R13)     RELOAD MST-S REGISTERS        A43168 78050002
         DROP  R15                                               A43168 78120002
         USING MSTBASE,BASE1       SHIFT BACK TO REG 11 AS BASE  A43168 78190002
         SPACE 1                                               @YM08438 78260003
         TM    MSTSW,SEGCK         READING SEGMENT TABLE         Y01980 78330002
         BO    MSTERR40            YES, GO TO ERROR HANDLER      Y01980 78400002
         SPACE 1                                               @YM08438 78470003
         TM    MSTSW,CVTSRCH       SEARCHING FOR THE CVT         Y02006 78540002
         BO    CSRCHERR            YES- BRANCH                   Y02006 78610002
         SPACE 1                                                 Y02006 78680002
         BR    R6                  BRANCH BACK TO ADDR IN R6     Y02006 78750002
         SPACE 1                                               @YM08438 78820003
*********************************************************************** 78890002
*                                                                     * 78960002
*        ERROR - SEARCHING FOR CVT                                    * 79030002
*                                                                     * 79100002
*********************************************************************** 79170002
CSRCHERR L     R4,MAPADSAV         LOAD MAP ADDRESS              Y01980 79240002
         LA    R4,0(R4)            CLEAR HI BYTE TO ZERO         Y01980 79310002
         LTR   R4,R4               HAS LAST MAP BEEN PROCESSED   Y01980 79380002
         BZ    CKIFMPND            IF ZERO, CHECK FURTHER        Y02006 79450002
         L     R5,MAPLSTAD(R4)     LOAD LAST ADDR IN BLOCK       Y01980 79520002
         LA    R5,0(R5)            CLEAR HI BYTE                 Y01980 79590002
         N     R3,RDTO4K           ROUND ADDRESS TO 4K BDY       Y02006 79660002
         SR    R5,R3               DETERMINE IF LAST ADDRESS IS  Y01980 79730002
         C     R5,MF4096           LARGER BY 4096 THE SEARCH ADDRY02006 79800002
         BL    MSTERR05            NO BRANCH GET NEXT MAP        Y02006 79870002
         A     R3,MF4096           POINT TO NEXT RECORD IN BLOCK Y02006 79940002
         B     MSTERR10            CONTINUE CVT SEARCH           Y01980 80010002
MSTERR05 L     R4,MAPCHAIN(R4)     POINT TO NEXT MAP             Y01980 80080002
         LA    R4,0(R4)            CLEAR HI-BYTE                 Y02006 80150002
         LTR   R4,R4               IS POINTER = 0                Y02006 80220002
         BZ    CKIFMPND            YES- BRANCH                   Y02006 80290002
         ST    R4,MAPADSAV         SAVE MAP ADDRESS              Y01980 80360002
         L     R3,MAPFSTAD(R4)     LOAD NEXT ADDR IN DUMPED STOR Y01980 80430002
MSTERR10 EQU   *                                                 Y02006 80500002
         C     R3,NUCTOP           WITHIN NUCLEUS                Y02006 80570002
         BL    GETMSTRK            YES- CONTINUE SCAN FOR CVT    Y01980 80640002
CKIFMPND OC    REALMAP,REALMAP     REAL DUMP                     Y02006 80710002
         BNZ   MSTERR20            YES - END OF MAPS             Y02006 80780002
         LM    R2,R6,SAVEREGS      RELOAD REGISTERS              Y02006 80850002
         LA    R6,4(R6)            INCREMENT TO NEXT ENTRY       Y02006 80920002
         BCT   R5,ERRMPLP          IS COUNTER 0 - NO, GET NEXT   Y02006 80990002
*                                  ADDR IN TABLE                 Y02006 81060002
         L     R2,0(R2)            GET ASIDNDX LINK FIELD        Y02006 81130002
         LTR   R2,R2               IS LINK FIELD = 0             Y02006 81200002
         BZ    MSTERR20            YES - END OF MAPS             Y02006 81270002
         LA    R6,MAPTROFF(R2)     INCREMENT TO 1ST DUMP MAP     Y02006 81340002
         LH    R5,EIGHTEEN         SET COUNTER                   Y02006 81410002
ERRMPLP  L     R4,0(R6)            GET DUMP MAP PTR              Y02006 81480002
         LTR   R4,R4               IS PTR = 0                    Y02006 81550002
         BZ    MSTERR20            YES - END OF MAPS             Y02006 81620002
         L     R3,MAPFSTAD(R4)     FIRST ADDRESS DUMPED          Y02006 81690002
         STM   R2,R6,SAVEREGS      SAVE REGISTERS                Y02006 81760002
         B     MSTERR10            CONTINUE                      Y02006 81830002
         SPACE 1                                               @YM08438 81900003
MSTERR20 XC    CVTADDR,CVTADDR     INDICATE CVT NO AVAILABLE     Y02006 81970002
         NI    MSTSW,XFF-CVTSRCH   RESET CVT SEARCH INDICATOR    Y02006 82040002
         L     R1,MSTMSG2          ADDR OF MESSAGE               Y01980 82110002
         BAL   R9,MPRTMSG          WRT TO PRDMP MESG LOG         Y01980 82180002
         B     GMSTER1             GO OUTPUT TITLE               Y02006 82250002
         SPACE 1                                               @YM08438 82320002
*********************************************************************** 82390002
*                                                                     * 82460002
*        ERROR - UNABLE TO READ SEGMENT TABLE                         * 82530002
*                                                                     * 82600002
*        MSGID MEANING -                                              * 82670002
*              1 - ADDR SPECIFIED BY USER CONTROL                     * 82740002
*              2 - ADDR FOUND AT LOCATION X'31C' IN DUMP              * 82810002
*********************************************************************** 82880002
MSTERR40 L     R3,MSTMSG1          ADDR OF ERROR MESSAGE         Y01980 82950002
         MVC   29(L'MSEGT,R3),0(R5) MOVE IN TABLE TYPE           Y02006 83020002
         MVC   56(L'MSGID,R3),MSGID  SET ID INTO MESSAGE         Y02006 83090002
         LA    R4,46(R3)           PUT CONVERTED ADDR IN MESG    Y01980 83160002
         LA    R1,RDLPRMST         LOC OF ADDR TO BE CONVERTED   Y01980 83230002
         L     R15,AADRCNVT        ADDR OF CONVERT ROUTINE       Y02006 83300002
         BALR  R14,R15             LINK TO THREE BYTE CONVERT    Y01980 83370002
         LR    R1,R3               ADDR OF MESG                  Y01980 83440002
         BAL   R9,MPRTMSG          WRT TO PRDMP LOG              Y01980 83510002
         BR    R6                  RETURN TO CALLER              Y02006 83580002
         EJECT                                                 @YM08438 83650002
*********************************************************************** 83720002
*                                                                     * 83790002
*        THIS CLOSED SUB-ROUTINE WILL CHECK THAT THE                  * 83860002
*        SEGMENT TABLE CAN BE READ FROM DUMPED STORAGE                * 83930002
*        THEN THE FIRST PAGE TABLE WILL BE READ IN AND TESTED         * 84000002
*        FOR VALIDITY.                                                * 84070002
*                                                                     * 84140002
*        REG 4 - LINK                                                 * 84210002
*                                                                     * 84280002
*********************************************************************** 84350002
SEGCHK   L     PREG,SEGTABOR       LOAD ORIGIN OF SEG TABLE      Y01980 84420002
         ST    R4,R4SAVE           SAVE RETURN ADDRESS           Y02006 84490002
         LA    R6,ZEROSGSW         ERROR RETURN ADDRESS          Y02006 84560002
SEGCHK10 OI    MSTSW,SEGCK         SEGMENT TABLE CHECK           Y01980 84630002
         OI    PRSW,PRNTREAL       INDICATE REAL REQUEST         Y01980 84700002
         LA    R5,MSEGT            TABLE TYPE FOR ERROR MESG     Y02006 84770002
         BRREAD  (PREG)                                        @YM08438 84840002
         L     PREG,0(PREG)        ADDR OF FIRST PAGE TABLE      YM1473 84910002
         LA    R5,MPAGE            TABLE TYPE FOR ERROR MESG.    Y02006 84980002
         BRREAD                    (PREG)                      @YM08438 85050002
         MVC   SEGWORK,0(PREG)     PAGE TAB TO WORK AREA         YM1473 85120002
         NC    SEGWORK,PAGEMSK     MASK OUT UNUSED BITS          YM1473 85190002
         CLC   SEGWORK,PAGECHK     IS FIRST PAGE TAB VALID       YM1473 85260002
         BE    SEGCHK70            YES,BRANCH                    YM1473 85330002
         L     R1,MSTMSG5          PAGE TABLE INVALID ERROR MESG YM1473 85400002
         MVC   54(L'MSGID,R1),MSGID  PUT ID INTO MESG            Y02006 85470002
         BAL   R9,MPRTMSG          WRT TO PRDMP LOG              YM1473 85540002
ZEROSGSW NI    PRSW,XFF-QSEGTBSW   RESET SEGTAB SWITCH           Y02006 85610002
         SPACE  1                                              @YM08438 85680002
SEGCHK70 NI    MSTSW,X'FF'-SEGCK   RESET SEG CHECK FLAG          YM1473 85750002
         NI    PRSW,X'FF'-PRNTREAL RESET REAL REQUEST            Y01980 85820002
         L     R4,R4SAVE           GET RETURN ADDRESS            Y02006 85890002
         BR    R4                  RETURN TO CALLER              Y01980 85960002
         EJECT                                                 @YM08438 86030002
*********************************************************************** 86100002
*                                                                     * 86170002
*        THIS CLOSED SUB - ROUTINE WILL GET THE REAL ADDRESS OF THE   * 86240002
*        PSA FOR THE IPL'ED CPU FROM THE STORE STATUS INFORMATION     * 86310002
*        IN THE CPU STATUS RECORD AND VALIDITY CHECK IT               * 86380002
*                                                                     * 86450002
*        REG 4 - LINK                                                 * 86520002
*                                                                     * 86590002
*        RETURN CODES -                                               * 86660002
*              0 - ADDRESS ON A 4K BOUNDARY                           * 86730002
*              4 - READ FOR CPU STATUS RECORD ERROR OR STORE STATUS   * 86800002
*                  INFORMATION IS INVALID                             * 86870002
*              8 - ADDRESS IS EITHER ZERO OR IS NOT ON A 4K BOUNDARY  * 86940002
*                                                                     * 87010002
*********************************************************************** 87080002
RDCPUST  LH    PREG,IPLCPU         PUT REQUEST NUMBER IN REG 1   Y02006 87150002
         LA    R6,RDCPUERR         ERROR RETURN ADDRESS          Y02006 87220002
         BRREAD (PREG),CPU         READ CPU STATUS RECORD        Y02006 87290002
         TM    0(PREG),STSTINV     STORE STATUS INFO VALID       Y02006 87360002
         BO    RDCPUERR            NO - BRANCH TO ERROR RETURN   Y02006 87430002
         TM    0(PREG),UNIPROC     UNIPROCESSOR                  Y02006 87500002
         BO    GETDATE             YES - BRANCH OUT OF ROUTINE   Y02006 87570002
         MVC   PREFXRGR,PRERGOFF(PREG)  SAVE ADDR IN COMMON      Y02006 87640002
         MVC   RLADSTG,PRERGOFF(PREG)  SAVE ADDR FOR MSG         Y02006 87710002
         OC    PREFXRGR(8),PREFXRGR ARE BOTH ADDR =0             Y02006 87780002
         BZ    GETDATE             YES,BRANCH OUT OF ROUTINE     Y02006 87850002
         OC    PREFXRGR,PREFXRGR   IS REAL ADDR =0               Y02006 87920002
         BZ    CPUERR8             YES - ERROR RETURN            Y02006 87990002
         NC    PREFXRGR,MASKOF4K   ADDR ON 4K BOUNDARY           Y02006 88060002
         BNZ   CPUERR8             NO - BRANCH                   Y02006 88130002
         MVC   PREFXRGR,RLADSTG    RESTORE REAL ADDRESS          Y02006 88200002
         SR    R15,R15             SET ZERO RETURN CODE          Y02006 88270002
CPURET   BR    R4                  RETURN TO CALLER              Y02006 88340002
         SPACE 1                                               @YM08438 88410003
RDCPUERR LH    R15,FOUR            SET RETURN CODE OF 4          Y02006 88480002
         B     CPURET              RETURN TO CALLER              Y02006 88550002
         SPACE 1                                               @YM08438 88620003
CPUERR8  XC    PREFXRGR,PREFXRGR   ZERO REAL ADDR IN COMMON      Y02006 88690002
         LH    R15,EIGHT           SET RETURN CODE OF 8          Y02006 88760002
         B     CPURET              RETURN TO CALLER              Y02006 88830002
         EJECT                                                 @YM08438 88900002
*********************************************************************** 88970002
*                                                                     * 89040002
*        WRITE A MESSAGE TO THE PRDMP MESSAGE LOG              @YM08438 89110002
*                                                                     * 89180002
*********************************************************************** 89250002
         SPACE 1                                               @YM08438 89320003
MPRTMSG  ST    R1,MSTMSG           SAVE MESSAGE ADDRESS          YM1473 89390002
         SR    R2,R2               CLEAR REG                     YM1473 89460002
         LH    R2,0(R1)            DETERMINE MESSAGE             Y01980 89530002
         SH    R2,FOUR             LENGTH                        Y01980 89600002
         LA    R1,4(R1)            POINT TO BEGINNING OF TEXT    Y01980 89670002
         BRPRTMSG  (R1),(R2)       WRITE TO PRDMP LOG            Y01980 89740002
         TM    SWA,RDRSW           IS INPUT FROM CONSOLE         YM1473 89810002
         BO    MPRTMSG7            NO,BY-PASS WTO                YM1473 89880002
         L     R1,MSTMSG           POINT TO WTO LIST             YM1473 89950002
         WTO   MF=(E,(R1))         MESSAGE TO CONSOLE            YM1473 90020002
MPRTMSG7 BR    R9                  RETURN                        YM1473 90090002
         EJECT                                                 @YM08438 90160002
*********************************************************************** 90230002
*                                                                     * 90300002
*   SAVE AREA AND CONSTANTS FOR GETMSTR ROUTINE                       * 90370002
*                                                                     * 90440002
*********************************************************************** 90510002
         SPACE 1                                               @YM08438 90580003
PTODSAV  DC    D'0'                TOD FROM AMDSADMP HEADER      Y01980 90650002
SEGWORK  DC    D'0'                PAGE TABLE WORK AREA          YM1473 90720002
MSTSAVE  DC    18F'0'              AMDPRMST SAVE AREA          @YM08438 90790002
MSTERSAV DC    F'0'                SAVE AREA FOR CALLER-S ERROR  A43168 90860002
*                                  ROUTINE ADDRESS               A43168 90930002
*                                                              @YM08438 91000002
MSTMSG1  DC    A(AMD260I)          ADDR OF MESSAGE               Y01980 91070002
MSTMSG2  DC    A(AMD261I)          CVT ERROR MESG                Y01980 91140002
MSTMSG3  DC    A(AMD284I)          NO PREFIX REGISTER            Y02006 91210002
MSTMSG4  DC    A(AMD263I)          NOT OS/VS2 DUMP               Y01980 91280002
MSTMSG5  DC    A(AMD264I)          PAGE TABLE INVALID            YM1473 91350002
MSTMSG6  DC    A(AMD286I)          CVT NOT VALID                 Y02006 91420002
MSTMSG7  DC    A(AMD290I)          PREFIX ERROR                  Y02006 91490002
MSTMSG8  DC    A(AMD294I)          ERROR READING 31C             Y02006 91560002
*              THREE WORD PARM LIST                            @YM08438 91630002
PCVTTZ   DC    A(0)                ADDRESS OF CVT TIME ZONE      Y01980 91700002
PTODVAL  DC    A(PTODSAV)          ADDRESS OF TOD VALUE          Y01980 91770002
PTODOUT  DC    A(PTODCONV)         ADDRESS OF OUTPUT AREA        Y01980 91840002
*                                                              @YM08438 91910002
DATE     DC    F'0'                                            @YM08438 91980002
SAVEREGS DS    0F                  REGISTER SAVE AREA            Y02006 92050002
TABLEAD  DC    F'0'                ADDR OF ASIDNDX TABLE         Y02006 92120002
AD4SRCH  DC    F'0'                ADDR READ BEING DONE ON       Y02006 92190002
MAPADSAV DC    F'0'                SAVE AREA FOR MAP ADDRESS     Y01980 92260002
CTRSAVE  DC    F'0'                COUNTER SAVE AREA             Y02006 92330002
TABLPOS  DC    F'0'                CURRENT POSITION IN TABLE     Y02006 92400002
MSTMSG   DC    F'0'                ADDR OF OUTPUT MESSAGE        YM1473 92470002
MF4096   DC    F'4096'             SIZE OF DUMPED STORAGE BLOCK  Y02006 92540002
*                                                              @YM08438 92610002
PAGEMSK  DC    XL8'FFF0FFF0FFF0FFF0'  MASK OUT LOW 4 BITS        YM1473 92680002
PAGECHK  DC    XL8'0000001000200030' FIRST PAGE TABLE IMAGE      YM1473 92750002
*                                                              @YM08438 92820002
PTODCONV DS    0CL24               OUTPUT AREA TOD CONVERSION    Y01980 92890002
         DS    CL7                 YEAR , DAY                    Y01980 92960002
PTODHRS  DS    CL3                 TOD HOURS                     Y01980 93030002
PTODMIN  DS    CL3                 TOD MINUTES                   Y01980 93100002
PTODSEC  DS    CL2                 TOD SECONDS                   Y01980 93170002
         DS    CL9                 END OF CONVERSION AREA        Y01980 93240002
MSEGT    DC    CL8'SEGMENT'        TABLE TYPE FOR ERROR MESG     YM1473 93310002
MPAGE    DC    CL8'   PAGE'        TABLE TYPE FOR ERROR MESG     YM1473 93380002
EDWRK    DC    CL12' '                                         @YM08438 93450002
MONTHMSK DC    X'1F1E1F1E1F1F1E1F1E1F1C1F'                     @YM08438 93520002
DATEPTRN DC    C'  /  /  '         DATE FORMAT                 @YM08438 93590002
CVTCHK   DC    X'0A0307FE'         SVC 3 AND BCR 15,14 IN CVT  @YM08438 93660002
TTLFRDMP DC    C'TITLE FROM DUMP: '                              S21016 93730002
NOTTL    DC    C'NONE'                                           S21016 93800002
MSTSW    DC    X'00'               MST INTERNAL SWITCHES         Y01980 93870002
MSGID    DC    C' '                SAVE AREA FOR MESSAGE ID      Y01980 93940002
DISP2CSW DC    H'732'                                            Y02006 94010002
ZEROASID DC    H'0'                                              Y02006 94080002
ASIDSV   DC    H'0'                                              Y02006 94150002
EIGHTEEN DC    H'18'                                             Y02006 94220002
EBCTHREE DC    C'03'               RELEASE LEVEL 3             @YM30904 94290000
         DS    0F                                                Y02006 94360002
MASKOF4K DC    X'00000FFF'         MASK FOR 4K BOUNDARY          Y02006 94430002
RDTO4K   DC    X'FFFFF000'         MASK FOR 4K BDY               Y02006 94500002
BITADR   DC    A(AMDPRBIT)         ADDR OF BIT FORMATTER        OZ13033 94530000
R4SAVE   DC    F'0'                SAVE AREA FOR R4              Y02006 94570002
RLADSTG  DC    F'0'                TEMPORARY SAVE AREA FOR REAL PREFIX  94640002
*                                  VALUE                         Y02006 94710002
VTADSTG  DC    F'0'                TEMPORARY SAVE AREA FOR VIRTUAL      94780002
*                                  PREFIX VALUE                  Y02006 94850002
CPUADINV DC    H'256'              CPU ADDR INVALID CONSTANT     Y02006 94920002
ERRID    DC    C'ERRORID FOR THIS DUMP = SEQYYYYY CPUZZ '       UZ81700 94930000
         DC    C'ASIDAAAA TIMEHH.MM.SS.T'                       UZ81700 94940000
NOERRID  DC    C'NO ERROR ID ASSOCIATED WITH THIS DUMP'         UZ81700 94950000
***********************************************************    @YM08438 94990002
PATCH    DC    120X'00'            STANDARD PATCH AREA           X01980 95060002
***********************************************************    @YM08438 95130002
         EJECT                                                 @YM08438 95200002
**********************************************************************  95270002
*                                                                     * 95340002
*        MESSAGES FOR  MODULE  AMDPRMST                               * 95410002
*                                                                     * 95480002
*********************************************************************** 95550002
         SPACE 1                                               @YM08438 95620002
AMDPRMSM CSECT                                                   Y01980 95690002
         SPACE 1                                               @YM08438 95760003
AMD260I  WTO   'AMD260I UNABLE TO ACCESS SEGMENT TABLE AT XXXXXX ID=X',X95830002
               ROUTCDE=(2),DESC=7,MF=L                           Y02006 95900002
AMD261I  WTO   'AMD261I UNABLE TO ACCESS CVT',MF=L,            @YM08438X95970002
               ROUTCDE=(2),DESC=7                                Y01980 96040002
AMD284I  WTO   'AMD284I PREFIX VALUES NOT AVAILABLE',MF=L,     @YM08438X96110002
               ROUTCDE=(2),DESC=7                                Y02006 96180002
AMD263I  WTO   'AMD263I DUMP MAY NOT BE FROM AN OS/VS2 RELEASE 3 SYSTEMX96250000
               ',MF=L,ROUTCDE=(2),DESC=7                       @YM30904 96320000
AMD264I  WTO   'AMD264I PAGE TABLE FOR LOCATION ZERO NOT VALID ID=X',  X96390002
               MF=L,ROUTCDE=(2),DESC=7                           YM1473 96460002
AMD286I  WTO   'AMD286I CVT AT XXXXXX NOT VALID, ID = 1',      @YM08438X96530002
               MF=L,ROUTCDE=(2),DESC=7                           Y02006 96600002
AMD290I  WTO   'AMD290I ERROR IN PREFIX VALUES - REAL= YYYYYY, VIRTUAL=X96670002
                XXXXXX ',MF=L,ROUTCDE=(2),DESC=7                 Y02006 96740002
AMD294I  WTO   'AMD294I UNABLE TO ACCESS SEGMENT TABLE ADDRESS AT LOCATX96810002
               ION 31C',MF=L,ROUTCDE=(2),DESC=7                  Y02006 96880002
         EJECT                                                  OZ13033 96880700
*************************************************************** OZ13033 96881400
*                                                               OZ13033 96882100
*        THIS CONTROL SECTION WILL PRINT OUT THE THE SU         OZ13033 96882800
*    NUMBERS THAT ARE APPLIED ON THE DUMPED SYSTEM. IT IS       OZ13033 96883500
*    SET UP TO PRINT OUT 120 SU'S. REGISTER USAGE IS:           OZ13033 96884200
*                                                               OZ13033 96884900
*    R1  -   WORK REGISTER                                      OZ13033 96885600
*    R2  -   CONTAINS ADDR OF OUTPUT BUFFER                     OZ13033 96886300
*    R3  -   COUNTER FOR EACH BIT IN STRING                     OZ13033 96887000
*    R4  -   LOOP FOR EACH BYTE IN STRING                       OZ13033 96887700
*    R5  -   POINTER TO CURRENT BYTE IN STRING                  OZ13033 96888400
*    R6  -   COUNTER FOR EACH BIT FOR EACH BYTE                 OZ13033 96889100
*    R7  -   USED FOR SHIFTING EACH BIT TO TEST POSITION        OZ13033 96889800
*    R8  -   CURRENT POSITION IN OUTPUT BUFFER TO PLACE DATA    OZ13033 96890500
*    R9  -   LINK REGISTER FOR INTERNAL PROCEDURE               OZ13033 96891200
*                                                               OZ13033 96891900
*************************************************************** OZ13033 96892600
         SPACE 2                                                OZ13033 96893300
AMDPRBIT CSECT                                                  OZ13033 96894000
         USING *,R15               TEMPORARY BASE REG           OZ13033 96894700
         MODID                                                  OZ13033 96895400
         SAVE  (14,12)             DO SAVE AREA CHAINING        OZ13033 96896100
         LA    R1,BITSAVE          SAVE AREA FOR AMDPRBIT       OZ13033 96896800
         ST    R13,BITSAVE+4       KEEP OLD SAVE AREA ADDRESS   OZ13033 96897500
         ST    R1,8(R13)           SET NEW AREA FOR CHAINING    OZ13033 96898200
         LR    R13,R1              R13 HAS AMDPRBIT SAVE AREA   OZ13033 96898900
         DROP  R15                 RELEASE R15 AS BASE          OZ13033 96899600
         LR    R11,R15             ESTABLISH R11 AS BASE        OZ13033 96900300
         USING AMDPRBIT,R11        ESTABLISH BASE FOR ASSEMBLER OZ13033 96901000
         L     R2,CURBUF           PICK CURRENT OUTPUT BUFFER   OZ13033 96901700
         MVC   1(L'BITMSG1,R2),BITMSG1 SET BIT MESSAGE IN BUFFEROZ13033 96902400
         HEXCNVT 1+L'BITMSG1(R2),Z9SUBITS,16 PRINTABLE HEX      OZ13033 96903100
         L     R2,CURBUF           PICK CURRENT OUTPUT BUFFER   OZ13033 96903800
         MVC   54(2,R2),BLANKS     BLANK OUT LAST BYTE          OZ13033 96904500
         BRWRITE 2                 PRINT LINE                   OZ13033 96905200
         L     R2,CURBUF           PICK CURRENT OUTPUT BUFFER   OZ13033 96905900
         SR    R1,R1                                            OZ13033 96906600
         ST    R1,CNTSU            ZERO SU COUNT PER LINE       OZ13033 96907300
         EJECT                                                  OZ13033 96908000
         LR    R8,R2               KEEP CURRENT POSIT IN R8     OZ13033 96908700
         LA    R4,15               15 BYTES OF BIT STRING       OZ13033 96909400
         LA    R3,0                COUNTER OF BITS              OZ13033 96910100
         LA    R5,Z9SUBITS         STRING BYTE POINTER          OZ13033 96910800
BIT020   EQU   *                   SECOND LOOP                  OZ13033 96911500
         LA    R6,8                EACH BIT IN BYTE             OZ13033 96912200
         IC    R7,0(R5)            GET CURRENT STRING BYTE      OZ13033 96912900
BIT030   EQU   *                   THIRD LOOP                   OZ13033 96913600
         STC   R7,TESTBYTE         STORE FOR TESTING            OZ13033 96914300
         TM    TESTBYTE,X'80'      BIT IS ON?                   OZ13033 96915000
         BZ    BIT040              NO - IGNORE IT               OZ13033 96915700
         BAL   R9,BIT080           SAVE IT FOR OUTPUT           OZ13033 96916400
BIT040   EQU   *                                                OZ13033 96917100
         SLL   R7,1                SHIFT TO TEST NEXT BIT       OZ13033 96917800
         LA    R3,1(R3)            INCREMENT BIT COUNTER        OZ13033 96918500
         BCT   R6,BIT030           GET NEXT BIT                 OZ13033 96919200
         LA    R5,1(R5)            GET NEXT BYTE                OZ13033 96919900
         BCT   R4,BIT020           DO IT AGAIN                  OZ13033 96920600
         CR    R2,R8               PARTIAL LINE TO PRINT        OZ13033 96921300
         BE    BITDONE             NO - WE ARE DONE             OZ13033 96922000
         BRWRITE 1                 PRINT LAST LINE              OZ13033 96922700
BITDONE  EQU   *                                                OZ13033 96923400
         BRWRITE 2                 SKIP TWO LINES               OZ13033 96924100
         L     R13,BITSAVE+4       RESTORE CALLERS REGS         OZ13033 96924800
         RETURN (14,12)                                         OZ13033 96925500
         SPACE 2                                                OZ13033 96926200
BIT080   EQU   *                                                OZ13033 96926900
         MVC   9(2,R8),SU          MOVE SU TO OUTPUT            OZ13033 96927600
         CVD   R3,WORK1            CONVERT BIT NUMBER           OZ13033 96928300
         UNPK  11(3,R8),WORK1+6(2) BIT NUMBER TO OUTPUT         OZ13033 96929000
         OI    13(R8),X'F0'        SET SIGN                     OZ13033 96929700
         LA    R8,10(R8)           NEXT OUTPUT POSITION         OZ13033 96930400
         L     R1,CNTSU            NUMBER OF SUS ON LINE        OZ13033 96931100
         LA    R1,1(R1)            INCREMENT COUNT              OZ13033 96931800
         CH    R1,HTEN             10 IS MAX PER LINE           OZ13033 96932500
         BNE   BIT100              NOT EQUAL - JUST CONTINUE    OZ13033 96933200
         BRWRITE 1                 PRINT LINE                   OZ13033 96933900
         L     R2,CURBUF           GET NEW BUFFER               OZ13033 96934600
         LR    R8,R2               SAVE IT IN REG 8             OZ13033 96935300
         SR    R1,R1               START NEW SET ON LINE        OZ13033 96936000
BIT100   EQU   *                                                OZ13033 96936700
         ST    R1,CNTSU            SAVE NUMBER OF SUS ON LINE   OZ13033 96937400
         BR    R9                  RETURN TO CALL               OZ13033 96938100
         SPACE 3                                                OZ13033 96938800
SU       DC    C'SU'               CONSTANT FOR FORMATTING      OZ13033 96939500
TESTBYTE DS    CL1                                              OZ13033 96940200
BITMSG1  DC    C'THE SU BIT STRING = '                          OZ13033 96940900
CNTSU    DS    F                   NUMBER OF SUS PER LINE       OZ13033 96941600
BITSAVE  DS    18F                 SAVE AREA FOR AMDPRBIT       OZ13033 96942300
         END   AMDPRMST                                        @YM08438 96950002
