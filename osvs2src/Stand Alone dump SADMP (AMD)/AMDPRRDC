         TITLE 'AMDPRRDC - READ CONTROL MODULE                         *00001000
                        '                                               00002000
AMDPRRDC CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRRDC  76.317'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @11,0                                               0001 00011000
@PSTART  LA    @10,4095(,@11)                                      0001 00012000
         USING @PSTART,@11                                         0001 00013000
         USING @PSTART+4095,@10                                    0001 00014000
         ST    @13,@SA00001+4                                      0001 00015000
         LA    @14,@SA00001                                        0001 00016000
         ST    @14,8(,@13)                                         0001 00017000
         LR    @13,@14                                             0001 00018000
*INISHUL:                                                          0099 00019000
*   CURENSAV = R13;                 /* INITIATE ABILITY TO     Y02006*/ 00020000
INISHUL  ST    R13,CURENSAV                                        0099 00021000
*                                   /* REFERENCE OWN REGS      Y02006*/ 00022000
*                                   /* IF ENTERED IN ASCBMAP   Y02006*/ 00023000
*                                   /* BUILD RTNS ERROR HANDLR Y02006*/ 00024000
*                                                                  0100 00025000
*   IF FLSHMODE = ON THEN           /* IF IN FLUSHMODE         Y02006*/ 00026000
         TM    FLSHMODE(COMPTR),B'10000000'                        0100 00027000
         BO    @RT00100                                            0100 00028000
*     GOTO TERMINIT;                /* DO NOT PERFORM INIT     Y02006*/ 00029000
*   IF BUILDMAP = OFF THEN          /* IF OFF, NOT A FULL INIT Y02006*/ 00030000
         TM    BUILDMAP(COMPTR),B'00001000'                        0102 00031000
         BNZ   @RF00102                                            0102 00032000
*     DO;                           /* MAKE SURE BUFFERS STILL Y02006*/ 00033000
*                                   /* THERE                   Y02006*/ 00034000
*       INITSW = OFF;               /* INDICATE PARTIAL INIT   Y02006*/ 00035000
         NI    INITSW,B'01111111'                                  0104 00036000
*       GOTO CHECKBUF;              /* TO CHECK BUFFERS        Y02006*/ 00037000
         B     CHECKBUF                                            0105 00038000
*     END;                                                         0106 00039000
*   /*****************************************************************/ 00040000
*   /*                                                               */ 00041000
*   /* ENTERED FOR A FULL INIT- IE EITHER FIRST TIME THRU OR         */ 00042000
*   /* AFTER A NEWDUMP/TAPE CONTROL STATEMENT                        */ 00043000
*   /*                                                               */ 00044000
*   /*****************************************************************/ 00045000
*                                                                  0107 00046000
*   INITSW = ON;                    /* INDICATE FULL INIT      Y02006*/ 00047000
*                                                                  0107 00048000
@RF00102 OI    INITSW,B'10000000'                                  0107 00049000
*   /*****************************************************************/ 00050000
*   /*                                                               */ 00051000
*   /* INITIALIZE DUMP READ ROUTINE BASED ON JCL                     */ 00052000
*   /*                                                               */ 00053000
*   /*****************************************************************/ 00054000
*                                                                  0108 00055000
*   INDD1 = INDD;                   /* SET RDC INDD AREA = INDDY02006*/ 00056000
         MVC   INDD1(8),INDD(COMPTR)                               0108 00057000
*   GEN(DEVTYPE INDD1,DEVAREA);     /* IS INPUT DD DEFINED?    Y02006*/ 00058000
         DEVTYPE INDD1,DEVAREA                                          00059000
*   IF R15 ^= 0 THEN                /* NOT DEFINED             Y02006*/ 00060000
         LTR   R15,R15                                             0110 00061000
         BZ    @RF00110                                            0110 00062000
*     DO;                           /* CHECK FOR PRELOADED     Y02006*/ 00063000
*                                   /* SYSUT1                  Y02006*/ 00064000
*       INDD = SYSUT1;              /* CHANGE DDNAME IN COMMON Y02006*/ 00065000
*                                                                  0112 00066000
         MVC   INDD(8,COMPTR),SYSUT1                               0112 00067000
*       GP = MGTABPTR + INDX175I;   /* WRITE MSG INDICATING    Y02006*/ 00068000
         LA    GP,16                                               0113 00069000
         AL    GP,MGTABPTR                                         0113 00070000
*GEN REFS(APRTMSG) (LM R1,R2,0(GP)); /* NO TAPE DD- SYSUT1     Y02006*/ 00071000
         LM R1,R2,0(GP)                                                 00072000
*GEN(BRPRTMSG (R1),(R2));           /* ASSUMED LOADED          Y02006*/ 00073000
         BRPRTMSG (R1),(R2)                                             00074000
*GEN(DEVTYPE SYSUT1,DEVAREA);       /* SYSUT1 PROVIDED?        Y02006*/ 00075000
         DEVTYPE SYSUT1,DEVAREA                                         00076000
*       IF R15 ^= 0 THEN            /* CHECK DEVTYPE           Y02006*/ 00077000
         LTR   R15,R15                                             0117 00078000
         BNZ   @RT00117                                            0117 00079000
*         GOTO AMD254;              /* NO- WRITE AMD254I       Y02006*/ 00080000
*                                   /* AND TERMINATE AMDPRDMP  Y02006*/ 00081000
*       IF DEVAREA(DEVCLASS) ^= DADEV THEN /* SYSUT1 WAS       Y02006*/ 00082000
         CLI   DEVAREA+2,X'20'                                     0119 00083000
         BNE   @RT00119                                            0119 00084000
*                                   /* PROVIDED BUT IS IT ON   Y02006*/ 00085000
*                                   /* A D.A. DEVICE?          Y02006*/ 00086000
*         GOTO AMD254;              /* NO, NOT ON D.A.- ISSUE  Y02006*/ 00087000
*                                   /* AMD254I AND TERMINATE   Y02006*/ 00088000
*                                                                  0121 00089000
*   /* PRELOADED DIRECT ACCESS SYSUT1 WAS PROVIDED                   */ 00090000
*                                                                  0121 00091000
*         TREADIN = OFF;            /* INDICATE D.A. INPUT     Y02006*/ 00092000
         NI    TREADIN(COMPTR),B'11101111'                         0121 00093000
*                                   /* TO PREAD AND LOD        Y02006*/ 00094000
*         GOTO CHECKBUF;            /* CONTINUE INIT FUNCTION  Y02006*/ 00095000
         B     CHECKBUF                                            0122 00096000
*     END;                                                         0123 00097000
*                                                                  0123 00098000
*   /*  INPUT DD WAS DEFINED ON EITHER TAPE OR ANYNAME DD            */ 00099000
*                                                                  0124 00100000
*   /*****************************************************************/ 00101000
*   /*                                                               */ 00102000
*   /*  DETERMINE WHETHER DUMP SHOULD BE TRANSFERRED TO SYSUT2       */ 00103000
*   /*  DETERMINE WHETHER DUMP SHOULD BE SPOOLED TO SYSUT1           */ 00104000
*   /*  OR PROCESSED ON TAPE                                         */ 00105000
*   /*                                                               */ 00106000
*   /*****************************************************************/ 00107000
*                                                                  0124 00108000
*                                                                  0124 00109000
*   /* DETERMINE WHETHER SYSUT2 IS PROVIDED                          */ 00110000
*                                                                  0124 00111000
*   GEN(DEVTYPE SYSUT2,DEVAREA);                            /* Y02006*/ 00112000
@RF00110 DS    0H                                                  0124 00113000
         DEVTYPE SYSUT2,DEVAREA                                         00114000
*   IF R15 = 0 THEN                 /* WAS SYSUT2 PROVIDED?    Y02006*/ 00115000
         LTR   R15,R15                                             0125 00116000
         BNZ   @RF00125                                            0125 00117000
*     DO;                           /* YES                     Y02006*/ 00118000
*       QSYSUT2 = ON;               /* INDICATE TO LOD         Y02006*/ 00119000
         OI    QSYSUT2(COMPTR),B'00000100'                         0127 00120000
*       GOTO CALLLOD;               /* TO INVOKE LOD           Y02006*/ 00121000
         B     CALLLOD                                             0128 00122000
*     END;                                                         0129 00123000
*                                                                  0129 00124000
*   /* SYSUT2 NOT PRESENT- CHECK FOR SYSUT1 WORKFILE                 */ 00125000
*                                                                  0130 00126000
*   GEN(DEVTYPE SYSUT1,DEVAREA);                            /* Y02006*/ 00127000
@RF00125 DS    0H                                                  0130 00128000
         DEVTYPE SYSUT1,DEVAREA                                         00129000
*   IF R15 ^= 0 THEN                /* WAS SYSUT1 PROVIDED?    Y02006*/ 00130000
         LTR   R15,R15                                             0131 00131000
         BNZ   @RT00131                                            0131 00132000
*     GOTO CHECKBUF;                /* NO                      Y02006*/ 00133000
*                                                                  0132 00134000
*   /*****************************************************************/ 00135000
*   /*                                                               */ 00136000
*   /* SYSUT1 WORKFILE WAS PROVIDED                                  */ 00137000
*   /* USE IT ONLY IF IT IS ON DIRECT ACCESS                 @YM08224*/ 00138000
*   /*                                                               */ 00139000
*   /*****************************************************************/ 00140000
*                                                                  0133 00141000
*   IF DEVAREA(DEVCLASS) = DADEV THEN /* IS SYSUT1 ON D.A.?    Y02006*/ 00142000
         CLI   DEVAREA+2,X'20'                                     0133 00143000
         BNE   @RF00133                                            0133 00144000
*     DO;                           /* YES                     Y02006*/ 00145000
*       LODSW = ON;                 /* INDICATE LOD SHOULD BE  Y02006*/ 00146000
         OI    LODSW,B'00010000'                                   0135 00147000
*                                   /* INVOKED TO SPOOL TO     Y02006*/ 00148000
*                                   /* WORKFILE                Y02006*/ 00149000
*       GOTO CHECKBUF;              /* TO CHECK IF BUFFERS     Y02006*/ 00150000
         B     CHECKBUF                                            0136 00151000
*     END;                          /* EXIST                   Y02006*/ 00152000
*                                                                  0137 00153000
*   /* WORKFILE IS NOT ON D.A.- ISSUE MSG AND DONT SPOOL TO IT       */ 00154000
*                                                                  0138 00155000
*     GP = MGTABPTR + INDX173I;     /* WRITE MSG INDICATING    Y02006*/ 00156000
@RF00133 LA    GP,8                                                0138 00157000
         AL    GP,MGTABPTR                                         0138 00158000
*     GEN(LM R1,R2,0(GP));          /* WORKFILE IS NOT D.A.    Y02006*/ 00159000
         LM R1,R2,0(GP)                                                 00160000
*     GEN(BRPRTMSG (R1),(R2));      /* AND DUMP WILL BE PROC-  Y02006*/ 00161000
         BRPRTMSG (R1),(R2)                                             00162000
*                                   /* ESSED ON TAPE           Y02006*/ 00163000
*                                                                  0141 00164000
*   /*****************************************************************/ 00165000
*   /*                                                               */ 00166000
*   /* CHECK WHETHER BUFFERS STILL EXIST FROM BEFORE                 */ 00167000
*   /* OR WHETHER RDC MUST OBTAIN THEM                               */ 00168000
*   /*                                                               */ 00169000
*   /*****************************************************************/ 00170000
*                                                                  0141 00171000
*CHECKBUF:                                                         0141 00172000
*   IF BUFMAP = 0 THEN              /* DO WE NEED TO ACQUIRE   Y02006*/ 00173000
CHECKBUF ICM   @14,15,BUFMAP                                       0141 00174000
         BNZ   @RF00141                                            0141 00175000
*                                   /* BUFFERS?                Y02006*/ 00176000
*     DO;                           /* YES- NONE EXIST         Y02006*/ 00177000
*       CALL GETBUFS;               /* OBTAIN STORAGE FOR      Y02006*/ 00178000
         BAL   @14,GETBUFS                                         0143 00179000
*                                   /* DUMP BUFFERS            Y02006*/ 00180000
*       CALL BUFINIT;               /* INITILIZE NEWLY         Y02006*/ 00181000
         BAL   @14,BUFINIT                                         0144 00182000
*     END;                          /* OBTAINED BUFFERS        Y02006*/ 00183000
*                                                                  0145 00184000
*   /*****************************************************************/ 00185000
*   /*                                                               */ 00186000
*   /* DUMP BUFFERS ALREADY EXIST- BUT MUST REINITIALIZE THEM        */ 00187000
*   /* IF MST RE-INIT IS REQUIRED DUE TO NEWDUMP/NEWTAPE, CVT=,      */ 00188000
*   /* OR SEGTAB=.                                                   */ 00189000
*   /*                                                               */ 00190000
*   /*****************************************************************/ 00191000
*                                                                  0146 00192000
*   ELSE                                                           0146 00193000
*     IF MSTRSW = OFF THEN          /* MST REINIT REQUIRED?    Y02006*/ 00194000
         B     @RC00141                                            0146 00195000
@RF00141 TM    MSTRSW(COMPTR),B'10000000'                          0146 00196000
         BNZ   @RF00146                                            0146 00197000
*       CALL BUFINIT;               /* YES- INITIALIZE BUFFERS Y02006*/ 00198000
*                                                                  0147 00199000
         BAL   @14,BUFINIT                                         0147 00200000
*   /*****************************************************************/ 00201000
*   /*                                                               */ 00202000
*   /* DETERMINE WHETHER RDC, DURING ITS INITIAL PROCESSING,         */ 00203000
*   /* FOUND IT NECESSARY TO INVOKE LOD FOR THIS PASS OF INIT        */ 00204000
*   /*                                                               */ 00205000
*   /*****************************************************************/ 00206000
*                                                                  0148 00207000
*CHECKLOD:                                                         0148 00208000
*   IF LODSW = ON THEN              /* LOAD RTN REQUIRED?      Y02006*/ 00209000
@RF00146 DS    0H                                                  0148 00210000
@RC00141 DS    0H                                                  0148 00211000
CHECKLOD TM    LODSW,B'00010000'                                   0148 00212000
         BNO   @RF00148                                            0148 00213000
*     DO;                           /* YES                     Y02006*/ 00214000
*       LODSW = OFF;                /* RESET LOD REQD SWITCH   Y02006*/ 00215000
         NI    LODSW,B'11101111'                                   0150 00216000
*CALLLOD:                                                          0151 00217000
*       GEN(LOAD EP=AMDPRLOD);      /* BRING IN WORKFILE LOAD  Y02006*/ 00218000
CALLLOD  LOAD EP=AMDPRLOD                                               00219000
*                                   /* ROUTINE                 Y02006*/ 00220000
*       LOADRTN = R0;               /* SET BASE FOR CALLING    Y02006*/ 00221000
         LR    LOADRTN,R0                                          0152 00222000
*                                   /* LOADER                  Y02006*/ 00223000
*       CALL AMDPRLOD;              /* INVOKE THE LOAD ROUTINE Y02006*/ 00224000
         LR    @15,LOADRTN                                         0153 00225000
         BALR  @14,@15                                             0153 00226000
*       GP = R15;                   /* SAVE RETURN CODE FOR    Y02006*/ 00227000
         LR    GP,R15                                              0154 00228000
*                                   /* BRANCHING               Y02006*/ 00229000
*       GEN(DELETE EP=AMDPRLOD);    /* RELEASE LOAD ROUTINE    Y02006*/ 00230000
*                                                                  0155 00231000
         DELETE EP=AMDPRLOD                                             00232000
*   /*****************************************************************/ 00233000
*   /*                                                               */ 00234000
*   /* BRANCH ON RETURN CODE FROM LOAD ROUTINE                       */ 00235000
*   /*                                                               */ 00236000
*   /*   CODE    WHERETO                  WHY                        */ 00237000
*   /*                                                               */ 00238000
*   /*    0      PREAD        SYSUT1 LOADED MUST NOW PROCESS         */ 00239000
*   /*    4      FREESAVE     POSITIONING ERROR ENCOUNTERED          */ 00240000
*   /*    8      FREEXIT      SYSUT2 LOADED PROCESSING COMPLETE      */ 00241000
*   /*                                                               */ 00242000
*   /*****************************************************************/ 00243000
*                                                                  0156 00244000
*       GP = (GP+4)/4;              /* TRANSLATE RETURN CODE   Y02006*/ 00245000
         LA    @14,4                                               0156 00246000
         LR    @06,GP                                              0156 00247000
         ALR   @06,@14                                             0156 00248000
         SRDA  @06,32                                              0156 00249000
         DR    @06,@14                                             0156 00250000
         LR    GP,@07                                              0156 00251000
*                                   /* TO A BRANCH TABLE INDX  Y02006*/ 00252000
*       GOTO LODBRTAB(GP);          /* INDEX TABLE & BRANCH    Y02006*/ 00253000
         LR    @14,GP                                              0157 00254000
         SLA   @14,2                                               0157 00255000
         L     @14,LODBRTAB-4(@14)                                 0157 00256000
         BR    @14                                                 0157 00257000
*     END;                                                         0158 00258000
*                                                                  0158 00259000
*   /*****************************************************************/ 00260000
*   /*                                                               */ 00261000
*   /* CONTINUE INIT PROCESSING BY INVOKING AMDPREAD TO BUILD        */ 00262000
*   /* DUMP MAPS UNLESS AMDPRLOD WAS INVOKED ABOVE, IN WHICH         */ 00263000
*   /* CASE, THE DUMP MAPS WILL ALREADY BE BUILT                     */ 00264000
*   /*                                                               */ 00265000
*   /*****************************************************************/ 00266000
*                                                                  0159 00267000
*PREAD:                                                            0159 00268000
*   IF BUILDMAP = ON THEN           /* HAVE THE MAPS BEEN      Y02006*/ 00269000
@RF00148 DS    0H                                                  0159 00270000
PREAD    TM    BUILDMAP(COMPTR),B'00001000'                        0159 00271000
         BNO   @RF00159                                            0159 00272000
*                                   /* BUILT YET FOR THIS DUMP Y02006*/ 00273000
*     DO;                           /* NO- HAVE EAD BUILD THEM Y02006*/ 00274000
*       R1 = BUFERMAP;              /* INITIALIZE TO FIRST     Y02006*/ 00275000
         L     R1,BUFERMAP(,COMPTR)                                0161 00276000
*                                   /* BUFFERMAP ENTRY FOR EAD Y02006*/ 00277000
*       CALL AMDPREAD;              /* INVOKE AMDPREAD         Y02006*/ 00278000
*                                                                  0162 00279000
         L     @15,@CV01129                                        0162 00280000
         BALR  @14,@15                                             0162 00281000
*   /*****************************************************************/ 00282000
*   /*                                                               */ 00283000
*   /* INSURE THAT PREAD WAS SUCCESSFUL IN BUILDING THE              */ 00284000
*   /* DUMP MAPS.  IF NOT, TERMINATE INIT PROCESSING AND             */ 00285000
*   /* GO TO THE MAIN ERROR HANDLER IN CTL VIA FREESAVE.             */ 00286000
*   /*                                                               */ 00287000
*   /*****************************************************************/ 00288000
*                                                                  0163 00289000
*       IF POSITSW = OFF THEN       /* WAS EAD SUCCESSFUL IN   Y02006*/ 00290000
         TM    POSITSW(COMPTR),B'00100000'                         0163 00291000
         BNZ   @RF00163                                            0163 00292000
*                                   /* POSITIONING TO DUMP?    Y02006*/ 00293000
*         BUILDMAP = OFF;           /* INDICATE MAPS BUILT     Y02006*/ 00294000
         NI    BUILDMAP(COMPTR),B'11110111'                        0164 00295000
*                                   /* SUCCESSFULLY            Y02006*/ 00296000
*       ELSE                                                       0165 00297000
*         GOTO FREESAVE;            /* TO CTL MAIN ERROR       Y02006*/ 00298000
*     END;                          /* HANDLER                 Y02006*/ 00299000
*                                                                  0166 00300000
*   /*****************************************************************/ 00301000
*   /*                                                               */ 00302000
*   /* DETERMINE WHETHER OR NOT AMDPRMST SHOULD BE INVOKED           */ 00303000
*   /* TO INITIALIZE OR RE-INITIALIZE THE COMMON AREA.               */ 00304000
*   /* THIS WILL BE THE CASE IF MSTRSW IS OFF.  IT WILL BE OFF       */ 00305000
*   /* UNDER THE FOLLOWING CONDITIONS:                               */ 00306000
*   /* 1. FOR 1ST TIME THRU INIT OR NEWDUMP PROCESSING,              */ 00307000
*   /*    INDICATED TO RDC BY THE BUILDMAP SW = ON.                  */ 00308000
*   /* 2. FOR SEGTAB= OR CVT= CONTROL STATEMENTS.                    */ 00309000
*   /* MSTRSW IS RESET ON BY MST AFTER MST COMPLETES PROCESSING .    */ 00310000
*   /*                                                               */ 00311000
*   /*****************************************************************/ 00312000
*                                                                  0167 00313000
*   IF MSTRSW = OFF THEN            /* MST INITIALIZATION REQD Y02006*/ 00314000
@RF00159 TM    MSTRSW(COMPTR),B'10000000'                          0167 00315000
         BNZ   @RF00167                                            0167 00316000
*     DO;                           /* YES-                    Y02006*/ 00317000
*       ASIDSAVE = 0;               /* INSURE THAT ASID SAVE   Y02006*/ 00318000
         SLR   @14,@14                                             0169 00319000
         STH   @14,ASIDSAVE                                        0169 00320000
*       SGTBAPTR = ADDR(SEGTABOR);  /* AREA AND CORRESPONDING  Y02006*/ 00321000
         LA    @14,SEGTABOR(,COMPTR)                               0170 00322000
         ST    @14,SGTBAPTR                                        0170 00323000
*                                   /* PTR TO ITS SEGTAB FOR   Y02006*/ 00324000
*                                   /* QUICK FIND IN DATA ARE  Y02006*/ 00325000
*                                   /* INITIALIZED TO ASID=0   Y02006*/ 00326000
*                                   /* AND SEGTABOR IN COMMON  Y02006*/ 00327000
*                                   /* IN CASE THIS CALL OF    Y02006*/ 00328000
*                                   /* INIT IS 1ST TIME THRU   Y02006*/ 00329000
*       GEN(LOAD EP=AMDPRMST);      /* BRING IN MST            Y02006*/ 00330000
         LOAD EP=AMDPRMST                                               00331000
*       INITRTN = R0;               /* SET BASE FOR CALLING    Y02006*/ 00332000
         LR    INITRTN,R0                                          0172 00333000
*                                   /* PRMST                   Y02006*/ 00334000
*       CALL AMDPRMST;              /* INVOKE IT               Y02006*/ 00335000
         LR    @15,INITRTN                                         0173 00336000
         BALR  @14,@15                                             0173 00337000
*       GEN(DELETE EP=AMDPRMST);    /* RELEASE IT              Y02006*/ 00338000
         DELETE EP=AMDPRMST                                             00339000
*       CALL BILDASCB;              /* BUILD NEW ASCBMAP       Y02006*/ 00340000
         BAL   @14,BILDASCB                                        0175 00341000
*     END;                                                         0176 00342000
*                                                                  0176 00343000
*   /*****************************************************************/ 00344000
*   /*                                                               */ 00345000
*   /* INIT FUNCTION TERMINAL PROCESSING.                            */ 00346000
*   /* RESTORE INTERNAL SWITCHES AND RETURN TO CALLER.               */ 00347000
*   /*                                                               */ 00348000
*   /*****************************************************************/ 00349000
*                                                                  0177 00350000
*   SWITCHES = 0;                   /* RESET RDC INTERNAL      Y02006*/ 00351000
@RF00167 MVI   SWITCHES,X'00'                                      0177 00352000
*                                   /* PROCESS SWITCHES        Y02006*/ 00353000
*                                                                  0178 00354000
*TERMINIT:                                                         0178 00355000
*   RETURN;                         /* RETURN TO CALLER        Y02006*/ 00356000
*                                                                  0178 00357000
@EL00001 L     @13,4(,@13)                                         0178 00358000
@EF00001 DS    0H                                                  0178 00359000
@ER00001 LM    @14,@12,12(@13)                                     0178 00360000
         BR    @14                                                 0178 00361000
*   /*****************************************************************/ 00362000
*   /*                                                               */ 00363000
*   /* AMDPRRDC'S ERROR HANDLERS - RAISE ERROR CONDITION             */ 00364000
*   /*                                                               */ 00365000
*   /*****************************************************************/ 00366000
*                                                                  0179 00367000
*                                                                  0179 00368000
*AMD254:                                                           0179 00369000
*   GP = MGTABPTR + INDX254I;       /* INDX TO MSG AMD254I IN CSECT  */ 00370000
AMD254   LA    GP,24                                               0179 00371000
         AL    GP,MGTABPTR                                         0179 00372000
*   GENERATE;                                                      0180 00373000
         LM    R1,R2,0(GP)             GET MSG ADDR AND MSG LNG  Y02006 00374000
         LA R1,4(R1)                   SKIP WTO PREFIX           Y02006 00375000
         BRPRTMSG (R1),(R2)            WRITE MESSAGE AMD254I     Y02006 00376000
*   IF RDRSW = ON THEN              /* TEST FOR SOURCE OF CNTRL INFO */ 00377000
         TM    RDRSW(COMPTR),B'00000001'                           0181 00378000
         BO    @RT00181                                            0181 00379000
*     GOTO FREEXIT;                 /* BRANCH AROUND WTO IF READING     00380000
*                                      CARD CONTROL STATEMENTS       */ 00381000
*   R1 = MSGADDR;                   /* POINT TO WTO PARMLIST         */ 00382000
         L     R1,MSGADDR(,GP)                                     0183 00383000
*   GEN(WTO MF=(E,(1)));            /* ISSUE WTO ON MSG AMD151I      */ 00384000
         WTO MF=(E,(1))                                                 00385000
*   GOTO FREEXIT;                   /* GO TO TERMINATE EXECUTION     */ 00386000
*                                                                  0185 00387000
         B     FREEXIT                                             0185 00388000
*AMD151I:                                                          0186 00389000
*   GP = MGTABPTR + INDX151I;       /* INDX TO MSG AMD151I IN CSECT  */ 00390000
AMD151I  L     GP,MGTABPTR                                         0186 00391000
*   GENERATE;                                                      0187 00392000
         LM R1,R2,0(GP)                GET MSG ADDR AND MSG LNG  Y02006 00393000
         LA R1,4(R1)                   SKIP WTO PREFIX           Y02006 00394000
         BRPRTMSG (R1),(R2)            WRITE MESSAGE AMD151I     Y02006 00395000
*   IF RDRSW = ON THEN              /* TEST FOR SOURCE OF CNTRL INFO */ 00396000
         TM    RDRSW(COMPTR),B'00000001'                           0188 00397000
         BO    @RT00188                                            0188 00398000
*     GOTO FREEXIT;                 /* BRANCH ARROUND WTO IF READING    00399000
*                                      CARD CONTROL STATEMENTS       */ 00400000
*   R1 = MSGADDR;                   /* POINT TO WTO PARMLIST         */ 00401000
         L     R1,MSGADDR(,GP)                                     0190 00402000
*   GEN(WTO MF=(E,(1)));            /* ISSUE WTO ON MSG AMD151I      */ 00403000
*                                                                  0191 00404000
         WTO MF=(E,(1))                                                 00405000
*   /*****************************************************************/ 00406000
*   /*                                                               */ 00407000
*   /*  BRANCH TO PRNTDMP'S EXIT ROUTINE                             */ 00408000
*   /*                                                               */ 00409000
*   /*****************************************************************/ 00410000
*                                                                  0192 00411000
*                                                                  0192 00412000
*FREEXIT:                                                          0192 00413000
*   R13 = HIGHSAVE;                 /* POINT TO CALLERS SAVE   Y02006*/ 00414000
FREEXIT  L     @14,CURENSAV                                        0192 00415000
         L     R13,HIGHSAVE(,@14)                                  0192 00416000
*   GENERATE REFS(AEREXIT);                                        0193 00417000
*                                                                  0193 00418000
         L     R15,AEREXIT(,COMPTR) POINT TO EXIT RTN            Y02006 00419000
         LA    R1,4                 SET TERMINATION CODE                00420000
         BR    R15                  BRANCH TO TERM                      00421000
*   /*****************************************************************/ 00422000
*   /*                                                               */ 00423000
*   /*  EXIT TO ERROR HANDLER                                        */ 00424000
*   /*                                                               */ 00425000
*   /*****************************************************************/ 00426000
*                                                                  0194 00427000
*                                                                  0194 00428000
*FREESAVE:                                                         0194 00429000
*   GEN(L R15,ERRADDR(,COMPTR));    /* GET ERROR HANDLER'S EP  Y02006*/ 00430000
FREESAVE L R15,ERRADDR(,COMPTR)                                         00431000
*   GEN(BR R15);                    /* RAISE ERROR CONDITION         */ 00432000
*                                                                  0195 00433000
         BR R15                                                         00434000
*   /*****************************************************************/ 00435000
*   /*                                                               */ 00436000
*   /* ADJUST FUNCTION:                                              */ 00437000
*   /*                                                               */ 00438000
*   /*       AMDPRRDC WHEN CALLED FOR THIS FUNCTION CHECKS IF DUMP   */ 00439000
*   /*       PROCESSING BUFFERS EXIST. IF NOT, CONTROL IS RETURNED   */ 00440000
*   /*       IMMEDIATELY TO THE CALLER. IF BUFFERS DO EXIST THE      */ 00441000
*   /*       BUFFER MAP AND BUFFERS ARE FREED AND THE POINTER,       */ 00442000
*   /*       BUFMAP, IS RESET TO ZERO TO INDICATE BUFFERS NO LONGER  */ 00443000
*   /*       EXIST                                                   */ 00444000
*   /*                                                               */ 00445000
*   /*****************************************************************/ 00446000
*                                                                  0196 00447000
*AMDPRRDA:                                                         0196 00448000
*GENERATE REFS(ADJSAVE);                                           0196 00449000
*                                                                  0196 00450000
AMDPRRDA DS    0H                                                  0196 00451000
         USING *,R15                                                    00452000
         STM   R14,R12,12(R13)                                   Y02006 00453000
         LM    BASE2,BASE1,ABASREGS                              Y02006 00454000
         DROP  R15                                                      00455000
         ST    R13,ADJSAVE+4                                     Y02006 00456000
         LA    R14,ADJSAVE                                       Y02006 00457000
         ST    R14,8(R13)                                        Y02006 00458000
         LR    R13,R14                                           Y02006 00459000
         B     ADJUST                                            Y02006 00460000
ABASREGS DC    A(@PSTART+4095)                                   Y02006 00461000
         DC    A(@PSTART)                                        Y02006 00462000
*ADJUST:                                                           0197 00463000
*   IF BUFMAP ^= 0 THEN             /* CHK IF BUFS EXIST             */ 00464000
ADJUST   L     @14,BUFMAP                                          0197 00465000
         LTR   @14,@14                                             0197 00466000
         BZ    @RF00197                                            0197 00467000
*     DO;                           /* YES, DO THE FOLLOWING         */ 00468000
*       R1 = BUFMAP;                /* POINT TO BUF AREA             */ 00469000
         LR    R1,@14                                              0199 00470000
*       BUFSUBPL = 1;               /* SET SUBPOOL TO FREE     Y02006*/ 00471000
         MVI   BUFSUBPL,X'01'                                      0200 00472000
*       R0 = CORE;                  /* GET SIZE OF AREA              */ 00473000
         L     R0,CORE                                             0201 00474000
*       GEN(FREEMAIN R,LV=(0),A=(1)); /* FREE BUFFER AREA            */ 00475000
         FREEMAIN R,LV=(0),A=(1)                                        00476000
*       BUFMAP = 0;                 /* INDICATE NO BUFFERS EXIST     */ 00477000
         SLR   @14,@14                                             0203 00478000
         ST    @14,BUFMAP                                          0203 00479000
*       BUFERMAP = 0;               /* INDICATE TO LOD ALSO    Y02006*/ 00480000
         ST    @14,BUFERMAP(,COMPTR)                               0204 00481000
*       BUFSUM = 0;                 /* RESET NO. OF BUFS IN COMMON   */ 00482000
         ST    @14,BUFSUM(,COMPTR)                                 0205 00483000
*       DMPIC = OFF;                /* RESET ALL OF DUMP IN    Y02006*/ 00484000
         NI    DMPIC(COMPTR),B'11101111'                           0206 00485000
*                                   /* CORE                    Y02006*/ 00486000
*     END;                                                         0207 00487000
*GENERATE;                                                         0208 00488000
@RF00197 DS    0H                                                  0208 00489000
         L     R13,4(R13)                                        Y02006 00490000
         LM    R14,R12,12(R13)                                   Y02006 00491000
         BR    R14                                               Y02006 00492000
*   GENERATE(EJECT);                                               0209 00493000
*                                                                  0209 00494000
         EJECT                                                          00495000
*   /*****************************************************************/ 00496000
*   /*                                                               */ 00497000
*   /* DATA FUNCTION:                                                */ 00498000
*   /*                                                               */ 00499000
*   /*       THE BUFFER MAP TABLE IS SEARCHED FOR AN ENTRY REFLECTING*/ 00500000
*   /*       THE REQUESTED VIRTUAL, REAL, OR TTR ADDRESS. IF AN ENTRY*/ 00501000
*   /*       IS FOUND THE ADDRESS OF THE DATA IN THE BUFFER POINTED  */ 00502000
*   /*       TO BY THE ENTRY IS RETURNED TO THE CALLER IN REGISTER   */ 00503000
*   /*       ONE. IF THE REQUESTED ADDRESS CAN NOT BE FOUND IN A     */ 00504000
*   /*       BUFFER MAP ENTRY, PREAD WILL BE CALLED TO READ THE DUMP */ 00505000
*   /*       RECORD CONTAINING THE ADDRESS INTO THE OLDEST BUFFER.   */ 00506000
*   /*       THE ADDRESS OF THE DATA IN THE BUFFER WILL THEN BE      */ 00507000
*   /*       RETURNED TO THE CALLER.                                 */ 00508000
*   /*                                                               */ 00509000
*   /*****************************************************************/ 00510000
*                                                                  0210 00511000
*AMDPRRDD:                                                         0210 00512000
*GENERATE REFS(DATASAVE);                                          0210 00513000
*                                                                  0210 00514000
AMDPRRDD DS    0H                                                  0210 00515000
         USING *,R15                                                    00516000
         STM   R14,R12,12(R13)                                   Y02006 00517000
         LM    BASE2,BASE1,DBASREGS                              Y02006 00518000
         DROP  R15                                                      00519000
         ST    R13,DATASAVE+4                                    Y02006 00520000
         LA    R14,DATASAVE                                      Y02006 00521000
         ST    R14,8(R13)                                        Y02006 00522000
         LR    R13,R14                                           Y02006 00523000
         B     DATA                                              Y02006 00524000
DBASREGS DC    A(@PSTART+4095)                                   Y02006 00525000
         DC    A(@PSTART)                                        Y02006 00526000
*DATA:                                                             0211 00527000
*   PLIST = R1;                     /* SAVE PARM LIST PTR      Y02006*/ 00528000
DATA     ST    R1,PLIST                                            0211 00529000
*   RDENTRY = RDENTRY + 1;          /* UPDATE RDC DATA ENTRY CNT     */ 00530000
         LA    @14,1                                               0212 00531000
         AL    @14,RDENTRY(,COMPTR)                                0212 00532000
         ST    @14,RDENTRY(,COMPTR)                                0212 00533000
*   FMTERR = OFF;                   /* INSURE FORMAT ERROR SW  Y02006*/ 00534000
         NI    FMTERR(COMPTR),B'10111111'                          0213 00535000
*                                   /* IS OFF BEFORE PROCEED   Y02006*/ 00536000
*                                                                  0214 00537000
*   /*****************************************************************/ 00538000
*   /*                                                               */ 00539000
*   /* CHECK FOR TYPE OF DATA REQUEST                                */ 00540000
*   /* EITHER CPUDATA, REAL STORAGE, OR VIRTUAL STORAGE              */ 00541000
*   /*                                                               */ 00542000
*   /*****************************************************************/ 00543000
*                                                                  0214 00544000
*                                                                  0214 00545000
*   IF CPUDAT = ON THEN             /* CHECK DATATYPE FIELD OF Y02006*/ 00546000
         L     @14,PLIST                                           0214 00547000
         TM    CPUDAT(@14),B'10000000'                             0214 00548000
         BO    @RT00214                                            0214 00549000
*                                   /* PLIST- IS CPU DATA REQ? Y02006*/ 00550000
*     GOTO CPUREQST;                /* YES- PROCESS CPU DATA   Y02006*/ 00551000
*   IF PRNTREAL = ON THEN           /* REAL DATA REQUEST?      Y02006*/ 00552000
         TM    PRNTREAL(COMPTR),B'00000100'                        0216 00553000
         BO    @RT00216                                            0216 00554000
*     GOTO REALREQ;                 /* YES, GO PROCESS REAL    Y02006*/ 00555000
*                                                                  0217 00556000
*   /*****************************************************************/ 00557000
*   /*                                                               */ 00558000
*   /* PROCESS VIRTUAL DATA REQUEST                                  */ 00559000
*   /*                                                               */ 00560000
*   /*****************************************************************/ 00561000
*                                                                  0218 00562000
*   SRCHAD = DATAAD;                 /* PUT 24 BIT DATA ADDR IN PARM    00563000
*                                      WORD FOR COMPADDR AND READREC    00564000
*                                      SUBROUTINES.                  */ 00565000
*                                                                  0218 00566000
         SLR   @04,@04                                             0218 00567000
         ICM   @04,7,DATAAD(@14)                                   0218 00568000
         ST    @04,SRCHAD                                          0218 00569000
*GETOFSET:                                                         0219 00570000
*   OFFSET = SRCHAD//DATALNG;       /* COMPUTE OFFSET OF DATA IN BUF */ 00571000
GETOFSET L     @14,SRCHAD                                          0219 00572000
         LR    @06,@14                                             0219 00573000
         SRDA  @06,32                                              0219 00574000
         D     @06,@CF01096                                        0219 00575000
         ST    @06,OFFSET                                          0219 00576000
*   SRCHAD = (SRCHAD & RNDVALU);    /* ROUND DOWN TO 4K BNDRY        */ 00577000
*                                                                  0220 00578000
         N     @14,@CF01082                                        0220 00579000
         ST    @14,SRCHAD                                          0220 00580000
*   /*****************************************************************/ 00581000
*   /*                                                               */ 00582000
*   /* PERFORM VIRTUAL ADDRESS PREFIXING IF NECESSARY                */ 00583000
*   /*                                                               */ 00584000
*   /*****************************************************************/ 00585000
*                                                                  0221 00586000
*   IF SRCHAD = 0 THEN              /* IF REQD VIRT BLOCK = 0  Y02006*/ 00587000
         LTR   @14,@14                                             0221 00588000
         BNZ   @RF00221                                            0221 00589000
*     SRCHAD = PREFXRGV;            /* USE PREFIX VALUE        Y02006*/ 00590000
         MVC   SRCHAD(4),PREFXRGV(COMPTR)                          0222 00591000
*   ELSE                            /* OR                      Y02006*/ 00592000
*       DO;                         /* IF THE REQD VIRT        Y02006*/ 00593000
         B     @RC00221                                            0223 00594000
@RF00221 DS    0H                                                  0224 00595000
*         IF SRCHAD = PREFXRGV THEN /* BLOCK = THE PREFIX VALU Y02006*/ 00596000
         CLC   SRCHAD(4),PREFXRGV(COMPTR)                          0224 00597000
         BNE   @RF00224                                            0224 00598000
*           SRCHAD = 0;             /* USE 0                   Y02006*/ 00599000
         SLR   @14,@14                                             0225 00600000
         ST    @14,SRCHAD                                          0225 00601000
*       END;                                                       0226 00602000
*                                                                  0226 00603000
@RF00224 DS    0H                                                  0227 00604000
*   /*****************************************************************/ 00605000
*   /*                                                               */ 00606000
*   /* CHECK REQUESTED ASID. IF = 0, (IE FOR VIRTUAL STORAGE         */ 00607000
*   /* REQUESTS FROM COMMON MEMORY) USE THE CURRENT ASID.            */ 00608000
*   /* OTHERWISE USE ACTUAL REQUESTED ASID                           */ 00609000
*   /*                                                               */ 00610000
*   /*****************************************************************/ 00611000
*                                                                  0227 00612000
*   IF REQASID = 0 THEN             /* IS REQD ASID = 0?       Y02006*/ 00613000
@RC00221 L     @14,PLIST                                           0227 00614000
         ICM   @04,3,REQASID(@14)                                  0227 00615000
         BNZ   @RF00227                                            0227 00616000
*     REQDASID = QASID;             /* YES- USE CURRENT ASID   Y02006*/ 00617000
         MVC   REQDASID(2),QASID(COMPTR)                           0228 00618000
*   ELSE                                                           0229 00619000
*     REQDASID = REQASID;           /* NO- USE REQD ASID       Y02006*/ 00620000
*                                                                  0229 00621000
         B     @RC00227                                            0229 00622000
@RF00227 L     @14,PLIST                                           0229 00623000
         MVC   REQDASID(2),REQASID(@14)                            0229 00624000
*   /*****************************************************************/ 00625000
*   /*                                                               */ 00626000
*   /* SCAN BUFFERS TO DETERMINE WHETHER REQUESTED VIRTUAL           */ 00627000
*   /* ADDRESS IS CONTAINED IN A BUFFER                              */ 00628000
*   /*                                                               */ 00629000
*   /*****************************************************************/ 00630000
*                                                                  0230 00631000
*   CPUIDAD = OFF;                  /* INDICATE REAL OR VIRT   Y02006*/ 00632000
@RC00227 DS    0H                                                  0231 00633000
*   REALADDR = OFF;                 /* INDICATE VIRT. COMPARE        */ 00634000
         NI    CPUIDAD,B'10011111'                                 0231 00635000
*   CALL COMPADDR;                  /* SRCH FOR A BUF CONTAINING THE    00636000
*                                      REQ ADDR. SRCHAD CONTAINS ADDR   00637000
*                                      AND REALADDR IS OFF           */ 00638000
         BAL   @14,COMPADDR                                        0232 00639000
*   IF R15 = 0 THEN                 /* WAS ADDR IN A BUFFER?         */ 00640000
         SLR   @14,@14                                             0233 00641000
         CR    R15,@14                                             0233 00642000
         BE    @RT00233                                            0233 00643000
*     GOTO TESTDATA;                /* YES, GO CHK IF BUF DATA VALID */ 00644000
*                                                                  0234 00645000
*   /*****************************************************************/ 00646000
*   /*                                                               */ 00647000
*   /* VIRTUAL ADDRESS NOT IN A BUFFER, IF NO REAL INPUT             */ 00648000
*   /* EXISTS, CALL PREAD TO READ REQUESTED VITRUAL ADDRESS          */ 00649000
*   /*                                                               */ 00650000
*   /*****************************************************************/ 00651000
*                                                                  0235 00652000
*   IF REALMAP = 0 THEN             /* REAL INPUT EXIST?       Y02006*/ 00653000
         C     @14,REALMAP(,COMPTR)                                0235 00654000
         BNE   @RF00235                                            0235 00655000
*     DO;                           /* NO-                     Y02006*/ 00656000
*READVIRT:                                                         0237 00657000
*       CPUIDAD = OFF;              /* INDICATE REAL OR VIRT   Y02006*/ 00658000
READVIRT DS    0H                                                  0238 00659000
*       REALADDR = OFF;             /* INDICATE VIRT COMPARE   Y02006*/ 00660000
         NI    CPUIDAD,B'10011111'                                 0238 00661000
*       IF DMPIC = ON THEN          /* READ VITRUAL ADDR       Y02006*/ 00662000
         TM    DMPIC(COMPTR),B'00010000'                           0239 00663000
         BO    @RT00239                                            0239 00664000
*         GOTO CHEKSWAP;            /* UNLESS ALL OF DUMP      Y02006*/ 00665000
*                                   /* IS IN CORE              Y02006*/ 00666000
*       CALL READREC;               /* AFTER READ,             Y02006*/ 00667000
         BAL   @14,READREC                                         0241 00668000
*                                   /* VERIFY DATA RETURNED    Y02006*/ 00669000
*       MAPPTR = CURENTRY;          /* POINT TO BUF MAP NTRY   Y02006*/ 00670000
         L     MAPPTR,CURENTRY                                     0242 00671000
*       IF INVALFLG = OFF THEN      /* IF REQD ADDR READ       Y02006*/ 00672000
         TM    INVALFLG(MAPPTR),B'10000000'                        0243 00673000
         BZ    @RT00243                                            0243 00674000
*                                   /* SUCCESSFULLY,           Y02006*/ 00675000
*         GOTO OFFSETSV;            /* RETURN DATA TO CALLER   Y02006*/ 00676000
*                                                                  0244 00677000
*   /*****************************************************************/ 00678000
*   /*                                                               */ 00679000
*   /* AT THIS POINT, IT IS POSSIBLE THAT THE REQUESTED ADDRESS WAS  */ 00680000
*   /* FROM AN ADDRESS SPACE THAT WAS SWAPPED OUT BUT CONTAINED IN   */ 00681000
*   /* COMMON MEMORY.  SINCE THE MEMORY WAS SWAPPED OUT, NO SEGMENT  */ 00682000
*   /* TABLE ADDRESS IS PRESENT IN ASCBMAP.  IF REAL INPUT EXISTS,   */ 00683000
*   /* AND THE REQUESTED ADDRESS IS WITHIN THE RANGE OF COMMON       */ 00684000
*   /* MEMORY, AND IT IS NOT A SPECIAL STAND ALONE DUMP RECORD       */ 00685000
*   /* REQUEST, THEN USE SEGTABOR AS THE SEGMENT TABLE AND TRY TO    */ 00686000
*   /* TRANSLATE THE REQUESTED ADDRESS TO A REAL ADDRESS.  IF THE    */ 00687000
*   /* REQUESTED ADDR WAS IN COMMON MEMORY, THIS WILL SATISFY THE    */ 00688000
*   /* REQUEST.                                                      */ 00689000
*   /*                                                               */ 00690000
*   /*****************************************************************/ 00691000
*                                                                  0245 00692000
*CHEKSWAP:                                                         0245 00693000
*       IF SGTBAPTR ^= ADDR(ZEROSEG) | /* IF NOT POSSIBLY      Y02006*/ 00694000
*                                   /* SWAPPED OUT,            Y02006*/ 00695000
*          REALMAP = 0 |            /* OR NO REAL INPUT        Y02006*/ 00696000
*          SRCHAD >= NUCTOP &       /* OR NOT IN COMMON        Y02006*/ 00697000
*          SRCHAD < CSADDR |        /* MEMORY                  Y02006*/ 00698000
*          REQDASID(1) = ON THEN    /* OR SADMP RECORD, THEN   Y02006*/ 00699000
CHEKSWAP LA    @14,ZEROSEG                                         0245 00700000
         C     @14,SGTBAPTR                                        0245 00701000
         BNE   @RT00245                                            0245 00702000
         ICM   @14,15,REALMAP(COMPTR)                              0245 00703000
         BZ    @RT00245                                            0245 00704000
         L     @14,SRCHAD                                          0245 00705000
         C     @14,NUCTOP(,COMPTR)                                 0245 00706000
         BL    @GL00001                                            0245 00707000
         C     @14,CSADDR(,COMPTR)                                 0245 00708000
         BL    @RT00245                                            0245 00709000
@GL00001 TM    REQDASID,B'10000000'                                0245 00710000
         BO    @RT00245                                            0245 00711000
*         GOTO FORMERR;             /* DO NOT RE-TRY           Y02006*/ 00712000
*                                                                  0246 00713000
*   /* POSSIBLE COMMON MEMORY REQUEST.                               */ 00714000
*   /* DOUBLE BACK AND TRY CURRENT MEMORYS SEGMENT TABLE.            */ 00715000
*                                                                  0247 00716000
*       SGTBAPTR = ADDR(SEGTABOR);  /* USE CURRENT MEMORYS     Y02006*/ 00717000
         LA    @14,SEGTABOR(,COMPTR)                               0247 00718000
         ST    @14,SGTBAPTR                                        0247 00719000
*       ASIDSAVE = 0;               /* RESET SAVE WORD FOR     Y02006*/ 00720000
         SLR   @14,@14                                             0248 00721000
         STH   @14,ASIDSAVE                                        0248 00722000
*                                   /* ASID FOR NEXT READ      Y02006*/ 00723000
*       IF DMPIC = OFF THEN         /* IF WE HAD DONE THE      Y02006*/ 00724000
         TM    DMPIC(COMPTR),B'00010000'                           0249 00725000
         BNZ   @RF00249                                            0249 00726000
*                                   /* READ AT READVIRT, THEN  Y02006*/ 00727000
*         DO;                                                      0250 00728000
*           BUFFFLAG = FLAGINIT;    /* RE-INIT BUFMAP ENTRY    Y02006*/ 00729000
         MVI   BUFFFLAG(MAPPTR),X'00'                              0251 00730000
*           BUFFIELD = BUFFINIT;    /* THAT HAD BEEN USED FOR  Y02006*/ 00731000
         MVC   BUFFIELD(12,MAPPTR),BUFFINIT                        0252 00732000
*         END;                      /* THE VIRTUAL READ SINCE  Y02006*/ 00733000
*       GOTO CHEKSEG;               /* WE ARE TRYING AGAIN.    Y02006*/ 00734000
         B     CHEKSEG                                             0254 00735000
*     END;                                                         0255 00736000
*                                                                  0255 00737000
*   /*****************************************************************/ 00738000
*   /*                                                               */ 00739000
*   /* REQUEST WAS VIRTUAL AND REAL INPUT EXISTS                     */ 00740000
*   /* ATTEMPT TO TRANSLATE TO REAL ADDRESS.                         */ 00741000
*   /* IF TRANSLATION UNSUCCESSFUL, GOTO READVIRT AND ATTEMPT        */ 00742000
*   /* TO READ REQUESTED VIRTUAL ADDRESS                             */ 00743000
*   /*                                                               */ 00744000
*   /*****************************************************************/ 00745000
*                                                                  0256 00746000
*   IF REQDASID = IMPASID THEN      /* IF REQUESTED ASID =     Y02006*/ 00747000
@RF00235 CLC   REQDASID(2),@CB01105                                0256 00748000
         BE    @RT00256                                            0256 00749000
*     GOTO FORMERR;                 /* FFFF- ERROR CONDITION   Y02006*/ 00750000
*                                   /* CANNOT ALLOW ASCBMAP    Y02006*/ 00751000
*                                   /* SEARCH FOR ASID FFFF    Y02006*/ 00752000
*   IF REQDASID(1) = ON THEN        /* IF ASID > 7FFF, THERE   Y02006*/ 00753000
         TM    REQDASID,B'10000000'                                0258 00754000
         BNO   @RF00258                                            0258 00755000
*     DO;                           /* WILL BE NO VALID SYS    Y02006*/ 00756000
*       IF SRCHAD = 0 THEN          /* ENTRY IN ASCBMAP TO     Y02006*/ 00757000
         ICM   @14,15,SRCHAD                                       0260 00758000
         BNZ   @RF00260                                            0260 00759000
*         SRCHAD = PREFXRGV;        /* MATCH. FIRST UN-PREFIX, Y02006*/ 00760000
         MVC   SRCHAD(4),PREFXRGV(COMPTR)                          0261 00761000
*       ELSE                        /* THEN,  ATTEMPT TO READ  Y02006*/ 00762000
*           DO;                     /* VIRTUAL RECORD WITH     Y02006*/ 00763000
         B     @RC00260                                            0262 00764000
@RF00260 DS    0H                                                  0263 00765000
*             IF SRCHAD = PREFXRGV THEN /* THAT ASID AS IT     Y02006*/ 00766000
         CLC   SRCHAD(4),PREFXRGV(COMPTR)                          0263 00767000
         BNE   @RF00263                                            0263 00768000
*               SRCHAD = 0;         /* MAY BE A SPECIAL SADMP  Y02006*/ 00769000
         SLR   @14,@14                                             0264 00770000
         ST    @14,SRCHAD                                          0264 00771000
*           END;                                            /* Y02006*/ 00772000
*       GOTO READVIRT;                                      /* Y02006*/ 00773000
         B     READVIRT                                            0266 00774000
*     END;                                                  /* Y02006*/ 00775000
*                                                                  0267 00776000
*   /*****************************************************************/ 00777000
*   /*                                                               */ 00778000
*   /* REQUESTED ASID IS NUMERICALLY VALID. IF IT IS THE SAME        */ 00779000
*   /* ASID THAT WAS REQUESTED ON LAST BRREAD DATA, USE              */ 00780000
*   /* QUICK INDEX INTO ASCBMAP OR SEGTABOR RATHER THAN SEARCH.      */ 00781000
*   /* IF NOT THE SAME AS LAST TIME, GET APPROPRIATE SEGTAB ADDR     */ 00782000
*   /* FROM EITHER SEGTABOR OR ASCBMAP.  SAVE ASID AND THE           */ 00783000
*   /* PTR TO THE FIELD CONTAINING ITS CORRESPONDING SEGTAB          */ 00784000
*   /* ADDRESS FOR QUICK FIND ON NEXT BRREAD.  EVEN IF REQUESTED     */ 00785000
*   /* ASID FOR THIS READ IS NOT FOUND IN ASCBMAP, OR IF ASCBMAP     */ 00786000
*   /* DOES NOT EXIST, IT WILL BE SAVED FOR QUICK FIND ON NEXT       */ 00787000
*   /* READ, BUT THE PTR TO THE FIELD CONTAINING THE CORRESPONDING   */ 00788000
*   /* SEGTAB ADDRESS WILL BE SET TO POINT TO A WORD OF ZEROS,       */ 00789000
*   /* THUS CAUSING CHEKSEG CODE TO REJECT IT AND GOTO READVIRT.     */ 00790000
*   /*                                                               */ 00791000
*   /*****************************************************************/ 00792000
*                                                                  0268 00793000
*   IF REQDASID = ASIDSAVE THEN     /* SAME ASID AS LAST TIME? Y02006*/ 00794000
@RF00258 CLC   REQDASID(2),ASIDSAVE                                0268 00795000
         BE    @RT00268                                            0268 00796000
*     GOTO CHEKSEG;                 /* YES- INDEX PTR TO SEG-  Y02006*/ 00797000
*                                   /* TAB ADDR (SGTBAPTR)     Y02006*/ 00798000
*                                   /* STILL VALID             Y02006*/ 00799000
*   IF REQDASID = 0 THEN            /* IF REQUESTED ASID = 0   Y02006*/ 00800000
         ICM   @14,3,REQDASID                                      0270 00801000
         BNZ   @RF00270                                            0270 00802000
*                                   /* HERE (MEANING QASID=0)  Y02006*/ 00803000
*     DO;                           /* SAVE ASID FOR QUICK     Y02006*/ 00804000
*       ASIDSAVE = REQDASID;        /* FIND NEXT TIME          Y02006*/ 00805000
         MVC   ASIDSAVE(2),REQDASID                                0272 00806000
*       SGTBAPTR = ADDR(SEGTABOR);  /* POINT INDEX POINTER TO  Y02006*/ 00807000
         LA    @14,SEGTABOR(,COMPTR)                               0273 00808000
         ST    @14,SGTBAPTR                                        0273 00809000
*                                   /* SEGTABOR FIELD SINCE    Y02006*/ 00810000
*                                   /* ASID WAS ZERO           Y02006*/ 00811000
*       GOTO CHEKSEG;               /* GO CHECK SEGMENT TABLE  Y02006*/ 00812000
         B     CHEKSEG                                             0274 00813000
*                                   /* ADDR CONTAINED IN       Y02006*/ 00814000
*     END;                          /* SEGTABOR                Y02006*/ 00815000
*                                                                  0275 00816000
*   /*****************************************************************/ 00817000
*   /*                                                               */ 00818000
*   /* REQUESTED ASID IS NOT SAME AS LAST REQUEST AND IS NOT         */ 00819000
*   /* ZERO, THEREFORE A SEARCH OF ASCBMAP IS NECESSARY TO           */ 00820000
*   /* OBTAIN THE CORRESPONDING SEGMENT TABLE ADDRESS.               */ 00821000
*   /* INSURE THAT ASCBMAP EXISTS.                                   */ 00822000
*   /* IF NOT, TREAT AS A SWAPPED OUT MEMORY, WHICH WILL             */ 00823000
*   /* ALLOW USER TO PRINT, AT LEAST, MASTER (COMMON) MEMORY         */ 00824000
*   /* BY USING SEGTABOR SEGMENT TABLE IF WE WERE UNABLE TO BUILD    */ 00825000
*   /* ASCBMAP.                                                      */ 00826000
*   /*                                                               */ 00827000
*   /*****************************************************************/ 00828000
*                                                                  0276 00829000
*   IF ASCBMAP = 0 THEN             /* TABLE EXIST?            Y02006*/ 00830000
@RF00270 ICM   @14,15,ASCBMAP(COMPTR)                              0276 00831000
         BNZ   @RF00276                                            0276 00832000
*   DO;                             /* NO-                     Y02006*/ 00833000
*     ASIDSAVE = REQDASID;          /* TREAT AS SWAPPED OUT    Y02006*/ 00834000
         MVC   ASIDSAVE(2),REQDASID                                0278 00835000
*     SGTBAPTR = ADDR(ZEROSEG);     /* MEMORY BY SETTING TO    Y02006*/ 00836000
         LA    @14,ZEROSEG                                         0279 00837000
         ST    @14,SGTBAPTR                                        0279 00838000
*     GOTO CHEKSEG;                 /* ZEROSEG                 Y02006*/ 00839000
         B     CHEKSEG                                             0280 00840000
*   END;                            /*                         Y02006*/ 00841000
*                                                                  0281 00842000
*   /* INITIALIZE FOR SEARCH OF ASCBMAP                              */ 00843000
*                                                                  0282 00844000
*   ASMAPPTR = ASCBMAP + MAPREFLN;  /* INIT MAP INDEX PTR TO   Y02006*/ 00845000
@RF00276 LA    ASMAPPTR,16                                         0282 00846000
         AL    ASMAPPTR,ASCBMAP(,COMPTR)                           0282 00847000
*                                   /* FIRST MAP ENTRY         Y02006*/ 00848000
*   DO NTRYCT=1 TO ASCBNUM WHILE    /* SEARCH ASCBMAP MAP      Y02006*/ 00849000
*     (ASID^=REQDASID);             /* ENTRIES UNTIL FIND      Y02006*/ 00850000
         LA    @14,1                                               0283 00851000
         B     @DE00283                                            0283 00852000
@DL00283 CLC   ASID(2,ASMAPPTR),REQDASID                           0283 00853000
         BE    @DC00283                                            0283 00854000
*                                   /* REQD ASID OR REACH THE  Y02006*/ 00855000
*     ASMAPPTR = ASMAPPTR + MAPNTRYL; /* END OF ASCBMAP        Y02006*/ 00856000
         AH    ASMAPPTR,@CH00164                                   0284 00857000
*   END;                                                           0285 00858000
*                                                                  0285 00859000
         AH    @14,@CH00057                                        0285 00860000
@DE00283 STH   @14,NTRYCT                                          0285 00861000
         L     @07,ASCBMAP(,COMPTR)                                0285 00862000
         CH    @14,ASCBNUM(,@07)                                   0285 00863000
         BNH   @DL00283                                            0285 00864000
@DC00283 DS    0H                                                  0286 00865000
*   IF NTRYCT <= ASCBNUM THEN       /* WAS REQD ASID IN TABLE? Y02006*/ 00866000
         LH    @14,NTRYCT                                          0286 00867000
         L     @04,ASCBMAP(,COMPTR)                                0286 00868000
         CH    @14,ASCBNUM(,@04)                                   0286 00869000
         BH    @RF00286                                            0286 00870000
*     DO;                           /* YES- SAVE REQD ASID FOR Y02006*/ 00871000
*       ASIDSAVE = REQDASID;        /* QUICK FIND NEXT TIME    Y02006*/ 00872000
         MVC   ASIDSAVE(2),REQDASID                                0288 00873000
*       ASTABPTR = ASCBTAB + (NTRYCT-1) * TABNTRYL; /* & POINT Y02006*/ 00874000
         L     @09,ASCBMAP(,COMPTR)                                0289 00875000
         BCTR  @14,0                                               0289 00876000
         SLA   @14,3                                               0289 00877000
         AL    @14,ASCBTAB(,@09)                                   0289 00878000
         LR    ASTABPTR,@14                                        0289 00879000
*       SGTBAPTR = ADDR(SEGTBADR);  /* INDEX PTR TO THE        Y02006*/ 00880000
         LA    @14,SEGTBADR(,ASTABPTR)                             0290 00881000
         ST    @14,SGTBAPTR                                        0290 00882000
*     END;                          /* TABLE ENTRY WHICH       Y02006*/ 00883000
*                                   /* CONTAINS THE CORRES-    Y02006*/ 00884000
*                                   /* PONDING SEGTAB ADDR     Y02006*/ 00885000
*   ELSE                                                           0292 00886000
*     DO;                           /* NO- SAVE REQD ASID FOR  Y02006*/ 00887000
         B     @RC00286                                            0292 00888000
@RF00286 DS    0H                                                  0293 00889000
*       ASIDSAVE = REQDASID;        /* QUICK FIND NEXT TIME    Y02006*/ 00890000
         MVC   ASIDSAVE(2),REQDASID                                0293 00891000
*       SGTBAPTR = ADDR(ZEROSEG);   /* BUT POINT TO A SEGTAB   Y02006*/ 00892000
         LA    @14,ZEROSEG                                         0294 00893000
         ST    @14,SGTBAPTR                                        0294 00894000
*     END;                          /* ADDR OF ZERO            Y02006*/ 00895000
*                                                                  0295 00896000
*   /*****************************************************************/ 00897000
*   /*                                                               */ 00898000
*   /* THE ADDRESS OF THE SEGMENT TABLE TO BE USED FOR THIS          */ 00899000
*   /* TRANSLATION IS POINTED TO BY SGTBAPTR.  IF ZERO, EITHER       */ 00900000
*   /* THE ASCBMAP BUILD RTN WAS UNABLE TO READ IT, OR REQD          */ 00901000
*   /* ASID FOR THIS READ WAS NOT IN ASCBMAP.  IN THAT CASE,         */ 00902000
*   /* TRANSLATION IMPOSSIBLE.  READ VIRTUAL.                        */ 00903000
*   /*                                                               */ 00904000
*   /*****************************************************************/ 00905000
*                                                                  0296 00906000
*CHEKSEG:                           /* IF                      Y02006*/ 00907000
*   IF SEGTADDR = 0 THEN            /* SEGTAB UNAVAILABLE FOR  Y02006*/ 00908000
@RC00286 DS    0H                                                  0296 00909000
CHEKSEG  L     @14,SGTBAPTR                                        0296 00910000
         ICM   @04,7,SEGTADDR(@14)                                 0296 00911000
         BZ    @RT00296                                            0296 00912000
*     GOTO READVIRT;                /* THIS ASID THEN ATTEMPT  Y02006*/ 00913000
*                                   /* TO READ REQUEST VIRT AD Y02006*/ 00914000
*                                                                  0298 00915000
*   /*****************************************************************/ 00916000
*   /*                                                               */ 00917000
*   /* SEGMENT TABLE ADDR IS NON-ZERO.  TRANSLATION CAN BE           */ 00918000
*   /* ATTEMPTED.  THE FIELD CONTAINING THE SEGTAB ADDR IS           */ 00919000
*   /* PASSED TO DAT VIA SGTBAPTR.                                   */ 00920000
*   /* THE VIRT. ADDR IS PASSED TO DAT IN SRCHAD. WHEN CONTROL IS    */ 00921000
*   /* RETURNED SRCHAD WILL CONTAIN THE REAL ADDRESS, IF DAT WAS     */ 00922000
*   /* SUCCESSFUL                                                    */ 00923000
*   /*                                                               */ 00924000
*   /*****************************************************************/ 00925000
*                                                                  0298 00926000
*   VIRTSAVE = SRCHAD;              /* SAVE VITUAL DATA ADDR         */ 00927000
         MVC   VIRTSAVE(4),SRCHAD                                  0298 00928000
*   CALL DAT;                       /* TRANS. VIRT TO REAL           */ 00929000
         BAL   @14,DAT                                             0299 00930000
*   IF R15 = 0 THEN                 /* DAT SUCCESSFUL?               */ 00931000
         LTR   R15,R15                                             0300 00932000
         BZ    @RT00300                                            0300 00933000
*     GOTO REALONLY;                /* YES, GO COMPARE REAL          */ 00934000
*   SRCHAD = VIRTSAVE;              /* RESTORE REQD VIRT ADDR  Y02006*/ 00935000
         MVC   SRCHAD(4),VIRTSAVE                                  0302 00936000
*   GOTO READVIRT;                  /* ATTEMPT TO READ REQD    Y02006*/ 00937000
         B     READVIRT                                            0303 00938000
*                                   /* VIRTUAL ADDRESS         Y02006*/ 00939000
*                                                                  0304 00940000
*   /*****************************************************************/ 00941000
*   /*                                                               */ 00942000
*   /* PROCESS REAL DATA REQUEST                                     */ 00943000
*   /*                                                               */ 00944000
*   /*****************************************************************/ 00945000
*                                                                  0304 00946000
*                                                                  0304 00947000
*REALREQ:                                                          0304 00948000
*   IF REALMAP = 0 THEN             /* IS THERE A REAL DMP MAP?      */ 00949000
REALREQ  ICM   @14,15,REALMAP(COMPTR)                              0304 00950000
         BZ    @RT00304                                            0304 00951000
*     GOTO FORMERR;                 /* NO, GO RAISE ERROR CONDITION  */ 00952000
*   IF DATAAD > REALMAX THEN        /* CHK IF DATA ADDR IS WITHIN  0306 00953000
*                                      REAL STORAGE HIGH ADDRESS     */ 00954000
         L     @14,PLIST                                           0306 00955000
         SLR   @04,@04                                             0306 00956000
         ICM   @04,7,DATAAD(@14)                                   0306 00957000
         C     @04,REALMAX(,COMPTR)                                0306 00958000
         BH    @RT00306                                            0306 00959000
*     GOTO FORMERR;                 /* INVALID ADDR - TAKE ERROR XIT */ 00960000
*   SRCHAD = DATAAD;                /* PUT 24 BIT DATA ADDR IN PARM     00961000
*                                      WORD FOR COMPADDR AND READREC    00962000
*                                      SUBROUTINES                   */ 00963000
*                                                                  0308 00964000
         ST    @04,SRCHAD                                          0308 00965000
*FIGOFSET:                                                         0309 00966000
*   OFFSET = SRCHAD//DATALNG;       /* COMPUTE OFFSET OF DATA IN BUF */ 00967000
FIGOFSET L     @14,SRCHAD                                          0309 00968000
         LR    @06,@14                                             0309 00969000
         SRDA  @06,32                                              0309 00970000
         D     @06,@CF01096                                        0309 00971000
         ST    @06,OFFSET                                          0309 00972000
*   SRCHAD = (SRCHAD & RNDVALU);    /* ROUND DOWN TO 4K BNDRY        */ 00973000
*                                                                  0310 00974000
         N     @14,@CF01082                                        0310 00975000
         ST    @14,SRCHAD                                          0310 00976000
*   /*****************************************************************/ 00977000
*   /*                                                               */ 00978000
*   /* PERFORM REAL ADDRESS PREFIXING, IF NECESSARY                  */ 00979000
*   /*                                                               */ 00980000
*   /*****************************************************************/ 00981000
*                                                                  0311 00982000
*   IF SRCHAD = 0 THEN              /* IF REQD REAL BLOCK = 0  Y02006*/ 00983000
         LTR   @14,@14                                             0311 00984000
         BNZ   @RF00311                                            0311 00985000
*     SRCHAD = PREFXRGR;            /* USE PREFIX VALUE        Y02006*/ 00986000
         MVC   SRCHAD(4),PREFXRGR(COMPTR)                          0312 00987000
*   ELSE                            /* OR                      Y02006*/ 00988000
*       DO;                         /* IF THE REQD REAL        Y02006*/ 00989000
         B     @RC00311                                            0313 00990000
@RF00311 DS    0H                                                  0314 00991000
*         IF SRCHAD = PREFXRGR THEN /* BLOCK = THE PREFIX VALU Y02006*/ 00992000
         CLC   SRCHAD(4),PREFXRGR(COMPTR)                          0314 00993000
         BNE   @RF00314                                            0314 00994000
*           SRCHAD = 0;             /* USE 0                   Y02006*/ 00995000
         SLR   @14,@14                                             0315 00996000
         ST    @14,SRCHAD                                          0315 00997000
*       END;                                                       0316 00998000
*                                                                  0316 00999000
@RF00314 DS    0H                                                  0317 01000000
*   /*****************************************************************/ 01001000
*   /*                                                               */ 01002000
*   /* LOCATE BUFFER CONTAINING REAL DATA ADDRESS                    */ 01003000
*   /*                                                               */ 01004000
*   /*****************************************************************/ 01005000
*                                                                  0317 01006000
*                                                                  0317 01007000
*REALONLY:                                                         0317 01008000
*   CPUIDAD = OFF;                  /* INDICATE REAL OR VIRT   Y02006*/ 01009000
@RC00311 DS    0H                                                  0317 01010000
REALONLY DS    0H                                                  0318 01011000
*                                   /* ADDRESS REQUEST         Y02006*/ 01012000
*   REALADDR = ON;                  /* INDICATE REAL ADDR REQ        */ 01013000
         OI    REALADDR,B'00100000'                                0318 01014000
         NI    CPUIDAD,B'10111111'                                 0318 01015000
*   CALL COMPADDR;                  /* SRCH FOR A BUF CONTAINING ADDR   01016000
*                                      IN SRCHAD                     */ 01017000
         BAL   @14,COMPADDR                                        0319 01018000
*   IF R15 ^= 0 THEN                /* ADDR FOUND?                   */ 01019000
         LTR   R15,R15                                             0320 01020000
         BZ    @RF00320                                            0320 01021000
*     DO;                           /* NO- ATTEMPT TO READ IT  Y02006*/ 01022000
*       IF DMPIC = ON THEN          /* UNLESS ALL OF DUMP      Y02006*/ 01023000
         TM    DMPIC(COMPTR),B'00010000'                           0322 01024000
         BO    @RT00322                                            0322 01025000
*         GOTO FORMERR;             /* IS IN CORE              Y02006*/ 01026000
*       ELSE                                                       0324 01027000
*     CALL READREC;                 /* NO, READ DMP RCD ASSOCIATED 0324 01028000
*                                      WITH SRCHAD                   */ 01029000
         BAL   @14,READREC                                         0324 01030000
*     END;                                                  /* Y02006*/ 01031000
*                                                                  0325 01032000
*   /*****************************************************************/ 01033000
*   /*                                                               */ 01034000
*   /* BUFFER CONTAINING REAL ADDR FOUND. IF DATA REQUEST IS A       */ 01035000
*   /* VIRTUAL DATA REQUEST USING REAL DUMP MAP PUT VIRTUAL ADDR IN  */ 01036000
*   /* BUF MAP ENTRY.                                                */ 01037000
*   /*                                                               */ 01038000
*   /*****************************************************************/ 01039000
*                                                                  0326 01040000
*   IF PRNTREAL = ON THEN           /* REAL DATA REQUEST?      Y02006*/ 01041000
@RF00320 TM    PRNTREAL(COMPTR),B'00000100'                        0326 01042000
         BO    @RT00326                                            0326 01043000
*     GOTO TESTDATA;                /* YES, GO TEST IF VALID   Y02006*/ 01044000
*                                                                  0327 01045000
*                                   /* NO, SAVE VIRT ADDR IN BUF MAP */ 01046000
*   MAPPTR = CURENTRY;              /* POINT TO BUF MAP ENTRY        */ 01047000
         L     MAPPTR,CURENTRY                                     0328 01048000
*   BUFFVIRT = VIRTSAVE;            /* GET VIRT. ADDR THAT WAS TRANS.   01049000
*                                      TO REAL AND PUT IT IN THE BUF */ 01050000
         MVC   BUFFVIRT(4,MAPPTR),VIRTSAVE                         0329 01051000
*   BUFFASID = REQDASID;            /* PUT ASID IN BUFFER ALSO Y02006*/ 01052000
*                                                                  0330 01053000
         MVC   BUFFASID(2,MAPPTR),REQDASID                         0330 01054000
*   /*****************************************************************/ 01055000
*   /*                                                               */ 01056000
*   /* BUFFER ASSOCIATED WITH DATA REQUEST HAS BEEN FOUND. CHECK IF  */ 01057000
*   /* DATA IN BUFFER IS VALID.                                      */ 01058000
*   /*                                                               */ 01059000
*   /*****************************************************************/ 01060000
*                                                                  0331 01061000
*                                                                  0331 01062000
*TESTDATA:                                                         0331 01063000
*   MAPPTR = CURENTRY;              /* POINT TO BUF MAP ENTRY        */ 01064000
TESTDATA L     MAPPTR,CURENTRY                                     0331 01065000
*   IF INVALFLG = ON THEN           /* DATA IN BUF INVALID?          */ 01066000
*                                                                  0332 01067000
         TM    INVALFLG(MAPPTR),B'10000000'                        0332 01068000
         BNO   @RF00332                                            0332 01069000
*FORMERR:                           /* YES, RAISE ERROR CONDITION    */ 01070000
*     DO;                                                          0333 01071000
FORMERR  DS    0H                                                  0334 01072000
*       FMTERR = ON;                /* INDICATE FORMAT ERROR   Y02006*/ 01073000
         OI    FMTERR(COMPTR),B'01000000'                          0334 01074000
*       GOTO FREESAVE;              /* GO TO ERROR XIT               */ 01075000
         B     FREESAVE                                            0335 01076000
*     END FORMERR;                                                 0336 01077000
*                                                                  0336 01078000
*   /*****************************************************************/ 01079000
*   /*                                                               */ 01080000
*   /* REQUESTED DATA IN BUFFER IS VALID. GET ADDR OF REQUESTED DATA */ 01081000
*   /* IN BUFFER AND RETURN TO CALLER                                */ 01082000
*   /*                                                               */ 01083000
*   /*****************************************************************/ 01084000
*                                                                  0337 01085000
*                                                                  0337 01086000
*OFFSETSV:                                                         0337 01087000
*   R1 = BUFFPTR + OFFSET + PREFX; /* GET ADDR OF REQ DATA IN BUF*/     01088000
@RF00332 DS    0H                                                  0337 01089000
OFFSETSV SLR   R1,R1                                               0337 01090000
         ICM   R1,7,BUFFPTR(MAPPTR)                                0337 01091000
         AL    R1,OFFSET                                           0337 01092000
         AH    R1,@CH00043                                         0337 01093000
*DATRETRN:                                                  /* Y02006*/ 01094000
*GENERATE;                                                  /* Y02006*/ 01095000
*                                                                  0338 01096000
DATRETRN DS    0H                                                  0338 01097000
         L     R13,4(R13)                                        Y02006 01098000
         LM    R14,R0,12(R13)                                    Y02006 01099000
         LM    R2,R12,28(R13)                                    Y02006 01100000
         BR    R14                                               Y02006 01101000
*   /*****************************************************************/ 01102000
*   /*                                                               */ 01103000
*   /* PROCESS CPU DATA REQUEST                                      */ 01104000
*   /*                                                               */ 01105000
*   /*****************************************************************/ 01106000
*                                                                  0339 01107000
*CPUREQST:                                                         0339 01108000
*   ZEROCPU = ''B;                  /* ZERO OUT CPU STATUS     Y02006*/ 01109000
CPUREQST XC    ZEROCPU(192),ZEROCPU                                0339 01110000
*                                   /* FIXED AREA              Y02006*/ 01111000
*   SRCHAD = CPUAD;                 /* MOVE 8 BIT CPU ADDR TO  Y02006*/ 01112000
         L     @14,PLIST                                           0340 01113000
         SLR   @04,@04                                             0340 01114000
         IC    @04,CPUAD(,@14)                                     0340 01115000
         ST    @04,SRCHAD                                          0340 01116000
*                                   /* PARM WORD FOR COMPADDR  Y02006*/ 01117000
*   IF QSADMP = OFF THEN            /* SADMP INPUT?            Y02006*/ 01118000
         TM    QSADMP(COMPTR),B'00100000'                          0341 01119000
         BNZ   @RF00341                                            0341 01120000
*     DO;                           /* NO- SVCDUMP OR DSSDUMP  Y02006*/ 01121000
*                                   /* INPUT                   Y02006*/ 01122000
*                                                                  0343 01123000
*   /*****************************************************************/ 01124000
*   /*                                                               */ 01125000
*   /* CPU STATUS INFO IS CONTAINED IN THE SVC OR DSS DUMP           */ 01126000
*   /* HEADER RECORD PLACED IN COMMON BY PREAD OR PRLOD.             */ 01127000
*   /* MOVE REQUESTED CPU INFO TO CPUSTAT FIXED AREA FOR             */ 01128000
*   /* RETURN TO CALLER IF CORRECT CPU ADDR WAS REQUESTED.           */ 01129000
*   /*                                                               */ 01130000
*   /*****************************************************************/ 01131000
*                                                                  0343 01132000
*       IF SRCHCPU ^= IPLCPU THEN   /* DID CALLER REQUEST IPL  Y02006*/ 01133000
         CLC   SRCHCPU(2),IPLCPU(COMPTR)                           0343 01134000
         BNE   @RT00343                                            0343 01135000
*                                   /* CPU?                    Y02006*/ 01136000
*         GOTO FORMERR;             /* NO- ERROR RETURN        Y02006*/ 01137000
*                                                                  0344 01138000
*   /*****************************************************************/ 01139000
*   /*                                                               */ 01140000
*   /* REQUESTED CPU CORRECT- MOVE CPU DATA TO CPUSTAT               */ 01141000
*   /*                                                               */ 01142000
*   /*****************************************************************/ 01143000
*                                                                  0345 01144000
*       HDRREGS1 = HDRREGS;         /* MOVE REGS & PSW TO AREA Y02006*/ 01145000
         MVC   HDRREGS1(168),HDRREGS(COMPTR)                       0345 01146000
*       CPUNSADP = ON;              /* INDICATE NON-SADMP      Y02006*/ 01147000
         OI    CPUNSADP,B'00010000'                                0346 01148000
*       R1 = ADDR(CPUSTAT);         /* SET PARM REG TO ADDR    Y02006*/ 01149000
         LA    R1,CPUSTAT                                          0347 01150000
*                                   /* OF REQD DATA            Y02006*/ 01151000
*       GOTO DATRETRN;              /* RETURN TO CALLER        Y02006*/ 01152000
         B     DATRETRN                                            0348 01153000
*     END;                                                         0349 01154000
*                                                                  0349 01155000
*   /*****************************************************************/ 01156000
*   /*                                                               */ 01157000
*   /* INPUT IS FROM SADMP.  REQUESTED CPU DATA IS CONTAINED         */ 01158000
*   /* IN A CPU STATUS RECORD DUMPED BY SADMP AND IDENTIFIED         */ 01159000
*   /* BY THE ADDR OF THE CPU REQUESTED.  SCAN BUFFERS IN CASE       */ 01160000
*   /* RECORD IS ALREADY IN CORE.  IF NOT, CALL PREAD TO READ        */ 01161000
*   /* THE REQUESTED RECORD.                                         */ 01162000
*   /*                                                               */ 01163000
*   /*****************************************************************/ 01164000
*                                                                  0350 01165000
*   CPUIDAD = ON;                   /* INDICATE TO COMPADDR TO Y02006*/ 01166000
@RF00341 OI    CPUIDAD,B'01000000'                                 0350 01167000
*                                   /* SEARCH ON CPU ID        Y02006*/ 01168000
*   CALL COMPADDR;                  /* CHECK IF REQD RECORD    Y02006*/ 01169000
         BAL   @14,COMPADDR                                        0351 01170000
*                                   /* IN A BUFFER             Y02006*/ 01171000
*   IF R15 ^= 0 THEN                /* WAS IT?                 Y02006*/ 01172000
         LTR   R15,R15                                             0352 01173000
         BZ    @RF00352                                            0352 01174000
*     DO;                           /* NO- ATTEMPT TO READ IT  Y02006*/ 01175000
*       IF DMPIC = ON THEN          /* UNLESS ALL OF DUMP      Y02006*/ 01176000
         TM    DMPIC(COMPTR),B'00010000'                           0354 01177000
         BO    @RT00354                                            0354 01178000
*         GOTO FORMERR;             /* IS IN CORE              Y02006*/ 01179000
*       ELSE                                                /* Y02006*/ 01180000
*         CALL READREC;                                     /* Y02006*/ 01181000
         BAL   @14,READREC                                         0356 01182000
*     END;                                                         0357 01183000
*   MAPPTR = CURENTRY;              /* POINT TO BUFMAP ENTRY   Y02006*/ 01184000
@RF00352 L     MAPPTR,CURENTRY                                     0358 01185000
*   IF INVALFLG = ON THEN           /* DATA IN BUF VALID?      Y02006*/ 01186000
         TM    INVALFLG(MAPPTR),B'10000000'                        0359 01187000
         BO    @RT00359                                            0359 01188000
*     GOTO FORMERR;                 /* NO- ERROR RETURN        Y02006*/ 01189000
*                                                                  0360 01190000
*   /*****************************************************************/ 01191000
*   /*                                                               */ 01192000
*   /* REQUESTED CPU STATUS RECORD IN BUFFER AND VALID               */ 01193000
*   /* MOVE TO FIXED AREA FOR RETURN TO CALLER                       */ 01194000
*   /*                                                               */ 01195000
*   /*****************************************************************/ 01196000
*                                                                  0361 01197000
*   CPUFLAGS = FLAGS;               /* FLAGS FIELD             Y02006*/ 01198000
         SLR   @14,@14                                             0361 01199000
         ICM   @14,7,BUFFPTR(MAPPTR)                               0361 01200000
         MVC   CPUFLAGS(1),FLAGS(@14)                              0361 01201000
*   CPUADDR = CPUADDR1;             /* CPU ID ADDR             Y02006*/ 01202000
         MVC   CPUADDR(2),CPUADDR1(@14)                            0362 01203000
*   CPUFLPT = CSRFLPT;              /* FLOATING POINT REGS     Y02006*/ 01204000
         MVC   CPUFLPT(32),CSRFLPT(@14)                            0363 01205000
*   CPUREGS = CSRREGS;              /* GENERAL PURPOSE REGS    Y02006*/ 01206000
         MVC   CPUREGS(64),CSRREGS(@14)                            0364 01207000
*   CPUCTL = CSRCTL;                /* CONTROL REGS            Y02006*/ 01208000
         MVC   CPUCTL(64),CSRCTL(@14)                              0365 01209000
*   CPUPSW = CSRPSW;                /* CURRENT PSW             Y02006*/ 01210000
         MVC   CPUPSW(8),CSRPSW(@14)                               0366 01211000
*   CPUPSA = CSRPSA;                /* PREFIX SAVE AREA        Y02006*/ 01212000
         MVC   CPUPSA(4),CSRPSA(@14)                               0367 01213000
*   CPUTIMER = CSRTIMER;            /* CPU TIMER               Y02006*/ 01214000
         MVC   CPUTIMER(8),CSRTIMER(@14)                           0368 01215000
*   CPUCLKCP = CSRCLKCP;            /* CLOCK COMPARATOR        Y02006*/ 01216000
*                                                                  0369 01217000
         MVC   CPUCLKCP(8),CSRCLKCP(@14)                           0369 01218000
*   R1 = ADDR(CPUSTAT);             /* SET PARM REG TO ADDR    Y02006*/ 01219000
         LA    R1,CPUSTAT                                          0370 01220000
*                                   /* OF REQUESTED DATA       Y02006*/ 01221000
*   GOTO DATRETRN;                  /* RETURN TO CALLER        Y02006*/ 01222000
         B     DATRETRN                                            0371 01223000
*   /*****************************************************************/ 01224000
*   /*                                                               */ 01225000
*   /* GETBUFS-                                                      */ 01226000
*   /* THIS SUBROUTINE ACQUIRES THE DUMP BUFFER AREA FOR AMDPRDMP    */ 01227000
*   /* PROCESSING. IT IS CALLED ONLY DURING INIT PROCESSING          */ 01228000
*   /*                                                               */ 01229000
*   /*****************************************************************/ 01230000
*                                                                  0372 01231000
*GETBUFS:                                                          0372 01232000
*   PROC;                                                          0372 01233000
*                                                                  0372 01234000
         B     @EL00001                                            0372 01235000
GETBUFS  STM   @14,@12,@SA00002                                    0372 01236000
*   DCL                                                            0373 01237000
*     SVMLIMIT FIXED(31) CONSTANT(196608); /* 192K- PROVIDES   Y02006*/ 01238000
*                                   /* EQUIVALENT STORAGE ALGO Y02006*/ 01239000
*                                   /* RITHM TO THE ONE USED   Y02006*/ 01240000
*                                   /* IN SVM PRDMP FOR THE    Y02006*/ 01241000
*                                   /* FIRST 256K OF STORAGE   Y02006*/ 01242000
*                                   /* ALLOCATED TO PRDMP.     Y02006*/ 01243000
*   DCL                                                            0374 01244000
*     CORE1 FIXED(31);              /* WORK AREAS FOR CALC-    Y02006*/ 01245000
*   DCL                             /* ULATING AMOUNT OF       Y02006*/ 01246000
*     CORE2 FIXED(31);              /* STORAGE FOR PRDMP BUFS  Y02006*/ 01247000
*   DCL                                                            0376 01248000
*     ADDSPACE FIXED(31);           /* DITTO                   Y02006*/ 01249000
*   DCL                                                            0377 01250000
*     ASDEFMAX FIXED(31) CONSTANT(200); /* DEFAULT VALUE IN    Y02006*/ 01251000
*                                   /* ASCBMAX IN COMMON       Y02006*/ 01252000
*   DCL                                                            0378 01253000
*     ASCBWORK FIXED(31) CONSTANT(512); /* AMOUNT OF WORK      Y02006*/ 01254000
*                                   /* STORAGE REQD FOR EACH   Y02006*/ 01255000
*                                   /* ASCB OVER DEFAULT OF    Y02006*/ 01256000
*                                   /* 200 IN ASCBMAX IN COM   Y02006*/ 01257000
*                                                                  0379 01258000
*   GEN(GETMAIN VC,LA=REQSTOR,A=GOTSTOR,SP=1); /* GET ALL STG  Y02006*/ 01259000
         GETMAIN VC,LA=REQSTOR,A=GOTSTOR,SP=1                           01260000
*   IF R15 ^= 0 THEN                /* CHK IF GETMAIN FAILED         */ 01261000
         LTR   R15,R15                                             0380 01262000
         BZ    @RF00380                                            0380 01263000
*     RETURN TO AMD151I;            /* YES,GO ISSUE ERROR MSG  Y02006*/ 01264000
*                                                                  0381 01265000
         LA    @14,AMD151I                                         0381 01266000
         LM    @15,@12,@SA00002+4                                  0381 01267000
         BR    @14                                                 0381 01268000
*   /*****************************************************************/ 01269000
*   /*                                                               */ 01270000
*   /* GETMAIN FOR BUFFER SPACE WAS SUCCESSFUL. CALCULATE SPACE      */ 01271000
*   /* REQUIRED FOR BUFFER MAP AND BUFFERS                           */ 01272000
*   /*                                                               */ 01273000
*   /* IF CORE <= 192K GET 7 BUFFERS FOR THE FIRST 64K OF AVAILABLE  */ 01274000
*   /* STORAGE AND 9 BUFFERS FOR EACH ADDITIONAL 64K.                */ 01275000
*   /* IF CORE > 192K USE THE SAME ALGORITHM AS ABOVE FOR THE FIRST  */ 01276000
*   /* 192K OF CORE.  FOR THE STORAGE IN EXCESS OF 192K, FIRST,      */ 01277000
*   /* LEAVE 512 BYTES FREE FOR EACH (NUMBER) ASCB IN ASCBMAX > 200. */ 01278000
*   /* IF THIS AMOUNT IS GREATER THAN OR EQUAL TO THE EXCESS OVER    */ 01279000
*   /* 192K, THEN FREE IT ALL AND GET NO ADDITIONAL BUFFERS.         */ 01280000
*   /* OTHERWISE, USE THE REMAINING STORAGE TO GET AS MANY ADDITIONAL*/ 01281000
*   /* BUFFERS AS POSSIBLE.                                          */ 01282000
*   /*                                                               */ 01283000
*   /*****************************************************************/ 01284000
*                                                                  0382 01285000
*   IF CORE > SVMLIMIT THEN                                 /* Y02006*/ 01286000
@RF00380 L     @14,CORE                                            0382 01287000
         L     @04,@CF01304                                        0382 01288000
         CR    @14,@04                                             0382 01289000
         BNH   @RF00382                                            0382 01290000
*     DO;                                                   /* Y02006*/ 01291000
*       CORE1 = SVMLIMIT;                                   /* Y02006*/ 01292000
         L     @09,@CF01304                                        0384 01293000
         LR    CORE1,@09                                           0384 01294000
*       CORE2 = CORE - SVMLIMIT;                            /* Y02006*/ 01295000
         SLR   @14,@09                                             0385 01296000
         LR    CORE2,@14                                           0385 01297000
*     END;                                                  /* Y02006*/ 01298000
*   ELSE                                                    /* Y02006*/ 01299000
*     DO;                                                   /* Y02006*/ 01300000
         B     @RC00382                                            0387 01301000
@RF00382 DS    0H                                                  0388 01302000
*       CORE1 = CORE;                                       /* Y02006*/ 01303000
         L     CORE1,CORE                                          0388 01304000
*       CORE2 = 0;                                          /* Y02006*/ 01305000
         SLR   CORE2,CORE2                                         0389 01306000
*     END;                                                  /* Y02006*/ 01307000
*                                                                  0390 01308000
*   BUFSPACE = (7 + (CORE1 / SEGSIZE - 1) * 9) *                   0391 01309000
*                                   (RCDLNG + ENTRYLNG);    /* Y02006*/ 01310000
*                                                                  0391 01311000
@RC00382 LR    @06,CORE1                                           0391 01312000
         SRDA  @06,32                                              0391 01313000
         D     @06,@CF01100                                        0391 01314000
         BCTR  @07,0                                               0391 01315000
         MH    @07,@CH00171                                        0391 01316000
         AH    @07,@CH01163                                        0391 01317000
         MH    @07,@CH01455                                        0391 01318000
         ST    @07,BUFSPACE                                        0391 01319000
*   IF CORE2 > 0 THEN                                       /* Y02006*/ 01320000
         SLR   @14,@14                                             0392 01321000
         CR    CORE2,@14                                           0392 01322000
         BNH   @RF00392                                            0392 01323000
*     DO;                                                   /* Y02006*/ 01324000
*       ADDSPACE = (ASCBMAX - ASDEFMAX) * ASCBWORK;         /* Y02006*/ 01325000
*                                                                  0394 01326000
         LH    ADDSPACE,ASCBMAX(,COMPTR)                           0394 01327000
         SH    ADDSPACE,@CH01309                                   0394 01328000
         SLA   ADDSPACE,9                                          0394 01329000
*       IF ADDSPACE > 0 THEN                                /* Y02006*/ 01330000
         CR    ADDSPACE,@14                                        0395 01331000
         BNH   @RF00395                                            0395 01332000
*         CORE2 = CORE2 - ADDSPACE;                         /* Y02006*/ 01333000
*                                                                  0396 01334000
         SLR   CORE2,ADDSPACE                                      0396 01335000
*       IF CORE2 > 0 THEN                                   /* Y02006*/ 01336000
@RF00395 LTR   CORE2,CORE2                                         0397 01337000
         BNP   @RF00397                                            0397 01338000
*         BUFSPACE = BUFSPACE + (CORE2 / (RCDLNG + ENTRYLNG)) *    0398 01339000
*                                   (RCDLNG + ENTRYLNG);    /* Y02006*/ 01340000
         LH    @14,@CH01455                                        0398 01341000
         LR    @06,CORE2                                           0398 01342000
         SRDA  @06,32                                              0398 01343000
         DR    @06,@14                                             0398 01344000
         MR    @06,@14                                             0398 01345000
         AL    @07,BUFSPACE                                        0398 01346000
         ST    @07,BUFSPACE                                        0398 01347000
*     END;                                                  /* Y02006*/ 01348000
*                                                                  0399 01349000
@RF00397 DS    0H                                                  0400 01350000
*   /*****************************************************************/ 01351000
*   /*                                                               */ 01352000
*   /* ROUND BUFFER SPACE TO NEXT HIGHEST DOUBLE WORD MULTIPLE       */ 01353000
*   /*                                                               */ 01354000
*   /*****************************************************************/ 01355000
*                                                                  0400 01356000
*   BUFSPACE = BUFSPACE + 7;                                       0400 01357000
@RF00392 LA    @14,7                                               0400 01358000
         AL    @14,BUFSPACE                                        0400 01359000
         ST    @14,BUFSPACE                                        0400 01360000
*   BUFSPACE = (BUFSPACE & 'FFFFFFF8'X);                           0401 01361000
*                                                                  0401 01362000
         N     @14,@CF01312                                        0401 01363000
         ST    @14,BUFSPACE                                        0401 01364000
*   /*****************************************************************/ 01365000
*   /*                                                               */ 01366000
*   /* DETERMINE AMOUNT OF EXCESS SPACE GOTTEN AND FREE THIS EXCESS  */ 01367000
*   /* SPACE FROM TOP OF GOTTEN SPACE                                */ 01368000
*   /*                                                               */ 01369000
*   /*****************************************************************/ 01370000
*                                                                  0402 01371000
*   R1 = BUFMAP + BUFSPACE;         /* POINT TO EXCESS SPACE         */ 01372000
         L     R1,BUFMAP                                           0402 01373000
         ALR   R1,@14                                              0402 01374000
*   BUFSUBPL = 1;                   /* SET SUBPOOL TO FREE     Y02006*/ 01375000
         MVI   BUFSUBPL,X'01'                                      0403 01376000
*   R0 = CORE - BUFSPACE;           /* CALCULATE EXCESS SPACE        */ 01377000
         LCR   @14,@14                                             0404 01378000
         AL    @14,CORE                                            0404 01379000
         LR    R0,@14                                              0404 01380000
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREE EXCESS SPACE             */ 01381000
*                                                                  0405 01382000
         FREEMAIN R,LV=(0),A=(1)                                        01383000
*   /*****************************************************************/ 01384000
*   /*                                                               */ 01385000
*   /* SAVE SIZE OF BUFFER SPACE AND CALL BUFINIT TO INITIALIZE THE  */ 01386000
*   /* BUFFER MAP AND BUFFERS                                        */ 01387000
*   /*                                                               */ 01388000
*   /*****************************************************************/ 01389000
*                                                                  0406 01390000
*   CORE = BUFSPACE;                /* SAVE SIZE OF BUF AREA         */ 01391000
         MVC   CORE(4),BUFSPACE                                    0406 01392000
*   RETURN;                         /* RETURN TO CALLER        Y02006*/ 01393000
@EL00002 DS    0H                                                  0407 01394000
@EF00002 DS    0H                                                  0407 01395000
@ER00002 LM    @14,@12,@SA00002                                    0407 01396000
         BR    @14                                                 0407 01397000
*   END GETBUFS;                                                   0408 01398000
*   /*****************************************************************/ 01399000
*   /*                                                               */ 01400000
*   /* BUFINIT -                                                     */ 01401000
*   /*                                                               */ 01402000
*   /*       THIS INTERNAL PROCEDURE INITIALIZES THE BUFFER MAP AND  */ 01403000
*   /*       DUMP BUFFERS. IT IS CALLED ONLY DURING THE INIT FUNCTION*/ 01404000
*   /*                                                               */ 01405000
*   /*****************************************************************/ 01406000
*                                                                  0409 01407000
*                                                                  0409 01408000
*BUFINIT:                                                          0409 01409000
*   PROC;                                                          0409 01410000
BUFINIT  STM   @14,@12,12(@13)                                     0409 01411000
*   DCL                                                            0410 01412000
*         BUFPTR PTR(31);           /* PTR TO DUMP BUFFERS           */ 01413000
*   DCL                                                            0411 01414000
*         BUFNO FIXED(31);          /* NO. OF BUFFERS TO BE INIT.    */ 01415000
*   DCL                                                            0412 01416000
*         MAPSIZE FIXED(31);        /* SIZE OF BUF MAP               */ 01417000
*                                                                  0412 01418000
*   /*****************************************************************/ 01419000
*   /*                                                               */ 01420000
*   /* BEGIN BUFINIT PROCESSING                                      */ 01421000
*   /*                                                               */ 01422000
*   /*****************************************************************/ 01423000
*                                                                  0413 01424000
*   BUFREINT = BUFREINT + 1;        /* UPDATE COUNT OF BUFFER INITS  */ 01425000
         LA    @14,1                                               0413 01426000
         AL    @14,BUFREINT(,COMPTR)                               0413 01427000
         ST    @14,BUFREINT(,COMPTR)                               0413 01428000
*   BUFNO = CORE/(RCDLNG + ENTRYLNG); /* CACULATE NUMBER OF BUFFS    */ 01429000
         L     @08,CORE                                            0414 01430000
         SRDA  @08,32                                              0414 01431000
         D     @08,@CF01455                                        0414 01432000
         LR    BUFNO,@09                                           0414 01433000
*   BUFSUM = BUFNO;                 /* SAVE NO. OF BUFS IN COMMON    */ 01434000
         ST    BUFNO,BUFSUM(,COMPTR)                               0415 01435000
*   MAPPTR = BUFMAP;                /* POINT TO 1ST MAP ENTRY        */ 01436000
         L     MAPPTR,BUFMAP                                       0416 01437000
*   BUFERMAP = MAPPTR;              /* STORE 1ST MAP ENTRY     Y02006*/ 01438000
         ST    MAPPTR,BUFERMAP(,COMPTR)                            0417 01439000
*                                   /* IN COMMON FOR LOD       Y02006*/ 01440000
*   CURENTRY = MAPPTR;              /* SET CURRENT BUFMAP ENTRY PTR     01441000
*                                      TO FIRST MAP ENTRY            */ 01442000
         ST    MAPPTR,CURENTRY                                     0418 01443000
*   MAPSIZE = BUFNO * ENTRYLNG;     /* CALC SIZE OF BUF MAP          */ 01444000
         LR    @14,BUFNO                                           0419 01445000
         MH    @14,@CH00213                                        0419 01446000
         ST    @14,MAPSIZE                                         0419 01447000
*   BUFPTR = MAPPTR + MAPSIZE;      /* POINT TO FIRST BUF            */ 01448000
*                                                                  0420 01449000
         ALR   @14,MAPPTR                                          0420 01450000
         LR    BUFPTR,@14                                          0420 01451000
*   /*****************************************************************/ 01452000
*   /*                                                               */ 01453000
*   /* INITIALIZE MAP ENTRY                                          */ 01454000
*   /*                                                               */ 01455000
*   /*****************************************************************/ 01456000
*                                                                  0421 01457000
*                                                                  0421 01458000
*INITMAP:                                                          0421 01459000
*   BUFFPTR = BUFPTR;               /* INIT BUFF ADDR IN ENTRY       */ 01460000
INITMAP  STCM  BUFPTR,7,BUFFPTR(MAPPTR)                            0421 01461000
*   BUFFFLAG = FLAGINIT;            /* INIT FLAG BYTE IN ENTRY       */ 01462000
         MVI   BUFFFLAG(MAPPTR),X'00'                              0422 01463000
*   BUFFIELD = BUFFINIT;            /* REINIT BUFFER MAP ENTRY Y02006*/ 01464000
*                                                                  0423 01465000
         MVC   BUFFIELD(12,MAPPTR),BUFFINIT                        0423 01466000
*   /*****************************************************************/ 01467000
*   /*                                                               */ 01468000
*   /* CHECK IF ALL MAP ENTRIES HAVE BEEN INITIALIZED                */ 01469000
*   /*                                                               */ 01470000
*   /*****************************************************************/ 01471000
*                                                                  0424 01472000
*   BUFNO = BUFNO - 1;              /* DECREMENT NO. OF BUFS         */ 01473000
         BCTR  BUFNO,0                                             0424 01474000
*   IF BUFNO ^= 0 THEN              /* CHK IF ANYMORE BUFS           */ 01475000
         LTR   BUFNO,BUFNO                                         0425 01476000
         BZ    @RF00425                                            0425 01477000
*     DO;                           /* YES DO FOLLOWING              */ 01478000
*       BUFFLINK = MAPPTR + ENTRYLNG; /* INIT CHAIN PTR IN MAP ENTRY    01479000
*                                        WITH ADDR OF NEXT ENTRY     */ 01480000
         LA    @14,20                                              0427 01481000
         LR    @07,MAPPTR                                          0427 01482000
         ALR   @07,@14                                             0427 01483000
         ST    @07,BUFFLINK(,MAPPTR)                               0427 01484000
*       MAPPTR = MAPPTR + ENTRYLNG; /* POINT TO NEXT ENTRY           */ 01485000
         ALR   MAPPTR,@14                                          0428 01486000
*       BUFPTR = BUFPTR + RCDLNG;   /* POINT TO NEXT BUFFER          */ 01487000
         AH    BUFPTR,@CH01103                                     0429 01488000
*       GOTO INITMAP;               /* GO INIT MAP ENTRY             */ 01489000
         B     INITMAP                                             0430 01490000
*     END;                                                         0431 01491000
*                                                                  0431 01492000
*   /*****************************************************************/ 01493000
*   /*                                                               */ 01494000
*   /* NO MORE MAP ENTRIES TO INITIALIZE                             */ 01495000
*   /*                                                               */ 01496000
*   /*****************************************************************/ 01497000
*                                                                  0432 01498000
*   BUFFLINK = 0;                   /* INDICATE END OF BUF MAP CHAIN */ 01499000
@RF00425 SLR   @14,@14                                             0432 01500000
         ST    @14,BUFFLINK(,MAPPTR)                               0432 01501000
*   RETURN;                         /* GO BACK TO CALLER             */ 01502000
@EL00003 DS    0H                                                  0433 01503000
@EF00003 DS    0H                                                  0433 01504000
@ER00003 LM    @14,@12,12(@13)                                     0433 01505000
         BR    @14                                                 0433 01506000
*   END BUFINIT;                                                   0434 01507000
*                                                                  0434 01508000
*   /*****************************************************************/ 01509000
*   /*                                                               */ 01510000
*   /* BILDASCB-                                                     */ 01511000
*   /*                                                               */ 01512000
*   /*****************************************************************/ 01513000
*                                                                  0435 01514000
*BILDASCB:                                                         0435 01515000
*   PROC;                                                          0435 01516000
BILDASCB STM   @14,@12,@SA00004                                    0435 01517000
*   /*****************************************************************/ 01518000
*   /*                                                               */ 01519000
*   /*  CONSTANTS AND VARIABLES USED BY BILDASCB                     */ 01520000
*   /*                                                               */ 01521000
*   /*****************************************************************/ 01522000
*   DCL                                                            0436 01523000
*     ASCBFREE INTERNAL ENTRY;      /* ASCBMAP FREE ROUTINE    Y02006*/ 01524000
*   DCL                                                            0437 01525000
*     IBRRDERR LOCAL LABEL;         /* INIT BRREAD ERROR RTN   Y02006*/ 01526000
*   DCL                                                            0438 01527000
*     ERRHANSV PTR(31);             /* SAVE AREA FOR CURRENT   Y02006*/ 01528000
*                                   /* ERROR HANDLER           Y02006*/ 01529000
*   DCL                                                            0439 01530000
*     QASIDSAV BIT(16);             /* SAVE AREA FOR QASID     Y02006*/ 01531000
*   DCL                                                            0440 01532000
*     ASCBMLEN FIXED(31) INIT(0);   /* AREA TO COMPUTE LENGTHS Y02006*/ 01533000
*                                   /* FOR MAP AND TABLE       Y02006*/ 01534000
*   DCL                                                            0441 01535000
*     RNDVAL1  FIXED(15) CONSTANT(7);  /* DOUBLEWORD INCREMENT Y02006*/ 01536000
*   DCL                                                            0442 01537000
*     RNDVAL2  BIT(32) CONSTANT('FFFFFFF8'X); /* DOUBLEWORD    Y02006*/ 01538000
*                                      /* ROUND DOWN MASK      Y02006*/ 01539000
*   DCL                                                            0443 01540000
*     DISPQEND PTR(31);             /* END ADDR OF ASCB DISPAT Y02006*/ 01541000
*                                   /* QUEUE-NORMALLY = ZERO   Y02006*/ 01542000
*                                   /* BUT = ADDR OF LAST ASCB Y02006*/ 01543000
*                                   /* ENTERED INTO ASCBMAP    Y02006*/ 01544000
*                                   /* ON FORWARD CHAIN SEARCH Y02006*/ 01545000
*                                   /* WHEN CHAIN BROKEN       Y02006*/ 01546000
*   DCL                                                            0444 01547000
*     CVTREADA PTR(31);             /* ADDR INTO CVT TO EITHER Y02006*/ 01548000
*                                   /* 1ST OR LAST ASCB ADDR   Y02006*/ 01549000
*                                   /* ON DISP Q               Y02006*/ 01550000
*   DCL                                                            0445 01551000
*     ASCBERR FIXED(15);            /* ASCB ERROR HANDLER CODE Y02006*/ 01552000
*   DCL                                                            0446 01553000
*     ASCHAIN  FIXED(31);           /* ADDR INTO ASCB TO FORW- Y02006*/ 01554000
*                                   /* ARD OR BACK CHAIN PTRS  Y02006*/ 01555000
*   DCL                                                            0447 01556000
*     1 ASMPBSW CHAR(1) INIT('00'X), /* ASCBMAP BUILD ROUTINE  Y02006*/ 01557000
*                                   /* PROCESS SWITCHES        Y02006*/ 01558000
*       3 ASCBERMG BIT(1),          /* ON MEANS AMD292I REQD   Y02006*/ 01559000
*       3 ASCBLIMG BIT(1),          /* ON MEANS AMD293I REQD   Y02006*/ 01560000
*       3 ASMPFREE BIT(1),          /* ON = FREE ENTIRE MAP    Y02006*/ 01561000
*                                   /* OFF = FREE ONLY PART    Y02006*/ 01562000
*       3 ASRESVMG BIT(5);          /* FUTURE USE              Y02006*/ 01563000
*   DCL                                                            0448 01564000
*     M293AMAX CHAR(5) BASED(R1+50); /* FIELD OF AMD293I TO    Y02006*/ 01565000
*                                    /* CONTAIN CONVERTED      Y02006*/ 01566000
*                                    /* ASCBMAX                Y02006*/ 01567000
*   DCL                                                            0449 01568000
*     DECCNVT CHAR(3);              /* FOR CONVERT TO DECIMAL  Y02006*/ 01569000
*   DCL                                                            0450 01570000
*     (ASERCD00,                    /* ASCBMAP BUILD ERROR     Y02006*/ 01571000
*      ASERCD04,                    /* HANDLER ROUTINES-       Y02006*/ 01572000
*      ASERCD08,                    /* GET CONTROL BASED ON    Y02006*/ 01573000
*      ASERCD10) LABEL;             /* VALUE OF ASCBERR        Y02006*/ 01574000
*                                                                  0450 01575000
*   /*****************************************************************/ 01576000
*   /*                                                               */ 01577000
*   /* THE FOLLOWING BRANCH TABLE IS USED ON ENTRY TO                */ 01578000
*   /* ASCBMAP ERROR HANDLER RTN- IBRRDERR                           */ 01579000
*   /* TO INITIATE APPROPRIATE PROCESSING BASED ON ASCBERR           */ 01580000
*   /*                                                               */ 01581000
*   /*****************************************************************/ 01582000
*                                                                  0451 01583000
*   DCL                                                            0451 01584000
*     ASERBRTB(6) PTR(31) INIT(ADDR(ASERCD00),ADDR(ASERCD04),      0451 01585000
*       ADDR(ASERCD08),ADDR(ASERCD10),ADDR(ASERCD04),              0451 01586000
*       ADDR(ASERCD08));                                    /* Y02006*/ 01587000
*                                                                  0451 01588000
*   DCL                                                            0452 01589000
*     FASIDVAL BIT(16) INIT('FFFF'X); /* FOR 'ZEROING' ASID IF Y02006*/ 01590000
*                                   /* BRREAD ERROR WITH FFFF  Y02006*/ 01591000
*                                                                  0453 01592000
*   /*****************************************************************/ 01593000
*   /*                                                               */ 01594000
*   /* BILDASCB INITIAL PROCESSING                                   */ 01595000
*   /* THE FOLLOWING SECTIONS DOWN TO THE CHECK FOR CVTADDR  ARE     */ 01596000
*   /* EXECUTED WHETHER OR NOT WE ARE ABLE TO BUILD A NEW ASCBMAP    */ 01597000
*   /* FOR THE NEW DUMP. I.E. THE 'QUICK FIND' VARIABLES ASIDSAVE    */ 01598000
*   /* AND SGTBAPTR MUST BE RESET AND THE OLD MAP FREED REGARDLESS   */ 01599000
*   /* OF THE ABILITY OR DISABILITY OF BUILDING A NEW MAP.           */ 01600000
*   /*                                                               */ 01601000
*   /*****************************************************************/ 01602000
*                                                                  0453 01603000
*   ASIDSAVE = 0;                   /* SINCE NEW ASCBMAP IS    Y02006*/ 01604000
         SLR   @14,@14                                             0453 01605000
         STH   @14,ASIDSAVE                                        0453 01606000
*                                   /* BEING BUILT, INIT SAVE  Y02006*/ 01607000
*                                   /* WORD FOR PREVIOUS REQD  Y02006*/ 01608000
*                                   /* ASID = 0 AND THE CORRE- Y02006*/ 01609000
*                                   /* SPONDING PTR TO ITS     Y02006*/ 01610000
*   SGTBAPTR = ADDR(SEGTABOR);      /* SEGMENT TABLE ADDR TO   Y02006*/ 01611000
         LA    @04,SEGTABOR(,COMPTR)                               0454 01612000
         ST    @04,SGTBAPTR                                        0454 01613000
*                                   /* ADDR OF SEGTABOR        Y02006*/ 01614000
*                                                                  0455 01615000
*   /*****************************************************************/ 01616000
*   /*                                                               */ 01617000
*   /* FREE UP OLD ASCBMAP IF A PREVIOUS ONE EXISTS                  */ 01618000
*   /* BEFORE REBUILDING NEW ONE                                     */ 01619000
*   /*                                                               */ 01620000
*   /*****************************************************************/ 01621000
*                                                                  0455 01622000
*   IF ASCBMAP ^= 0 THEN            /* DOES OLD MAP EXIST?     Y02006*/ 01623000
         L     @04,ASCBMAP(,COMPTR)                                0455 01624000
         CR    @04,@14                                             0455 01625000
         BE    @RF00455                                            0455 01626000
*     DO;                           /* YES-                    Y02006*/ 01627000
*       ASCBNUM = 0;                /* THIS WILL CAUSE SUBRTN  Y02006*/ 01628000
         STH   @14,ASCBNUM(,@04)                                   0457 01629000
*                                   /* ASCBFREE TO FREE ENTIRE Y02006*/ 01630000
*                                   /* OLD ASCBMAP             Y02006*/ 01631000
*       CALL ASCBFREE;              /* FREE IT                 Y02006*/ 01632000
         BAL   @14,ASCBFREE                                        0458 01633000
*     END;                          /*                         Y02006*/ 01634000
*   IF CVTADDR = 0 THEN             /* INSURE THAT CVT IS      Y02006*/ 01635000
@RF00455 SLR   @14,@14                                             0460 01636000
         C     @14,CVTADDR(,COMPTR)                                0460 01637000
         BE    @RT00460                                            0460 01638000
*                                   /* AVAILABLE               Y02006*/ 01639000
*     RETURN;                       /* OTHERWISE TERMINATE     Y02006*/ 01640000
*                                                                  0461 01641000
*   /*****************************************************************/ 01642000
*   /*                                                               */ 01643000
*   /* CVT AVAILABLE. GO AHEAD AND ATTEMPT BUILD OF NEW ASCBMAP.     */ 01644000
*   /*                                                               */ 01645000
*   /*****************************************************************/ 01646000
*                                                                  0462 01647000
*   ERRHANSV = ERRADDR;             /* SAVE THE CURRENT PRDMP  Y02006*/ 01648000
         MVC   ERRHANSV(4),ERRADDR(COMPTR)                         0462 01649000
*                                   /* ERROR HANDLER           Y02006*/ 01650000
*   ERRADDR = ADDR(IBRRDERR);       /* STORE THE ADDRESS OF    Y02006*/ 01651000
         LA    @04,IBRRDERR                                        0463 01652000
         ST    @04,ERRADDR(,COMPTR)                                0463 01653000
*                                   /* BILDASCBS ERROR HANDLER Y02006*/ 01654000
*   ASCBERMG = OFF;                 /* INDICATE NEITHER ERROR  Y02006*/ 01655000
*   ASCBLIMG = OFF;                 /* MESSAGE REQD YET        Y02006*/ 01656000
         NI    ASCBERMG,B'00111111'                                0465 01657000
*   PRNTREAL = OFF;                 /* INDICATE VIRTUAL READ   Y02006*/ 01658000
*                                                                  0466 01659000
         NI    PRNTREAL(COMPTR),B'11111011'                        0466 01660000
*   /*****************************************************************/ 01661000
*   /*                                                               */ 01662000
*   /* SINCE RDC DATA ON READ REQUESTS FOR ASID 0 USES QASID,        */ 01663000
*   /* RESET (QASID) CURRENT ASID FIELD IN COMMON TO 0 SUCH THAT     */ 01664000
*   /* THE DATA FUNCTION WILL BE ABLE TO TRANSLATE VIRTUAL ADDRESSES */ 01665000
*   /* PRIOR TO THE COMPLETION OF ASCBMAP.  THIS WAY RDC WILL USE    */ 01666000
*   /* SEGTABOR SEGMENT TABLE FOR ADDRESS TRANSLATION.               */ 01667000
*   /*                                                               */ 01668000
*   /*****************************************************************/ 01669000
*                                                                  0467 01670000
*   QASIDSAV = QASID;               /*                         Y02006*/ 01671000
         MVC   QASIDSAV(2),QASID(COMPTR)                           0467 01672000
*   IF QSADMP = ON THEN           /* IF STAND-ALONE DUMP     OZ13024 */ 01673000
         TM    QSADMP(COMPTR),B'00100000'                          0468 01674000
         BNO   @RF00468                                            0468 01675000
*     QASID = 0;                  /* DEFAULT TO ASID 0       OZ13024 */ 01676000
*                                                                  0469 01677000
         STH   @14,QASID(,COMPTR)                                  0469 01678000
*   /*****************************************************************/ 01679000
*   /*                                                               */ 01680000
*   /* DETERMINE HOW MUCH SPACE IS REQUIRED FOR THIS ASCBMAPS        */ 01681000
*   /* MAP AND TABLE SECTIONS AND OBTIAN THE REQD STORAGE            */ 01682000
*   /*                                                               */ 01683000
*   /*****************************************************************/ 01684000
*                                                                  0470 01685000
*   IF ASCBMAX = 0 THEN             /* MAKE SURE NO ONE SET    Y02006*/ 01686000
@RF00468 ICM   @14,3,ASCBMAX(COMPTR)                               0470 01687000
         BNZ   @RF00470                                            0470 01688000
*     DO;                           /* ASCBMAX IN COMMON TO 0- Y02006*/ 01689000
*       ASCBLIMG = ON;              /* TERMINATE BUILD IF SO   Y02006*/ 01690000
         OI    ASCBLIMG,B'01000000'                                0472 01691000
*       GOTO ASCBTRM1;              /* AFTER ISSUING MSG       Y02006*/ 01692000
         B     ASCBTRM1                                            0473 01693000
*     END;                          /* AMD293I                 Y02006*/ 01694000
*   ASCBMLEN = ASCBMAX * MAPNTRYL + MAPREFLN;               /* Y02006*/ 01695000
@RF00470 LH    @14,ASCBMAX(,COMPTR)                                0475 01696000
         ALR   @14,@14                                             0475 01697000
         AH    @14,@CH00183                                        0475 01698000
         ST    @14,ASCBMLEN                                        0475 01699000
*                                   /* COMPUTE LEN FOR MAP     Y02006*/ 01700000
*                                   /* BASED ON DEFAULT        Y02006*/ 01701000
*                                   /* LIMIT OF ADDR SPACES    Y02006*/ 01702000
*   ASCBMLEN = ASCBMLEN + RNDVAL1;  /* INCR PAST NEXT HIGH     Y02006*/ 01703000
         AH    @14,@CH01163                                        0476 01704000
         ST    @14,ASCBMLEN                                        0476 01705000
*                                   /* DOUBLEWORD BOUNDARY     Y02006*/ 01706000
*   ASCBMLEN = ASCBMLEN & RNDVAL2;  /* ROUND DOWN TO DOUBLE    Y02006*/ 01707000
         N     @14,@CF01312                                        0477 01708000
         ST    @14,ASCBMLEN                                        0477 01709000
*                                   /* WORD BOUNDARY           Y02006*/ 01710000
*   R0 = ASCBMLEN;                  /* SET LENGTH FOR GETMAIN  Y02006*/ 01711000
         LR    R0,@14                                              0478 01712000
*   GEN(GETMAIN R,LV=(0));          /* GET STORAGE FOR         Y02006*/ 01713000
         GETMAIN R,LV=(0)                                               01714000
*   ASCBMAP = R1;                   /* MAP SECTION AND PUT     Y02006*/ 01715000
         ST    R1,ASCBMAP(,COMPTR)                                 0480 01716000
*                                   /* ADDR ASCBMAP IN COM     Y02006*/ 01717000
*   ZEROPREF = ''B;                 /* SET MAP PREFIX = 0      Y02006*/ 01718000
         L     @14,ASCBMAP(,COMPTR)                                0481 01719000
         XC    ZEROPREF(16,@14),ZEROPREF(@14)                      0481 01720000
*   ASMAPLEN = ASCBMLEN;            /* SAVE LEN OF MAP IN PREF Y02006*/ 01721000
*                                                                  0482 01722000
         MVC   ASMAPLEN(4,@14),ASCBMLEN                            0482 01723000
*   ASCBMLEN = ASCBMAX * TABNTRYL;  /* COMPUTE LEN OF TABLE    Y02006*/ 01724000
         LH    @14,ASCBMAX(,COMPTR)                                0483 01725000
         SLA   @14,3                                               0483 01726000
         ST    @14,ASCBMLEN                                        0483 01727000
*   ASCBMLEN = ASCBMLEN + RNDVAL1;  /* INCR PAST NEXT HIGH     Y02006*/ 01728000
         AH    @14,@CH01163                                        0484 01729000
         ST    @14,ASCBMLEN                                        0484 01730000
*                                   /* DOUBLEWORD BOUNDARY     Y02006*/ 01731000
*   ASCBMLEN = ASCBMLEN & RNDVAL2;  /* ROUND DOWN TO DOUBLE    Y02006*/ 01732000
         N     @14,@CF01312                                        0485 01733000
         ST    @14,ASCBMLEN                                        0485 01734000
*                                   /* WORD BOUNDARY           Y02006*/ 01735000
*   R0 = ASCBMLEN;                  /* SET LENGTH FOR GETMAIN  Y02006*/ 01736000
         LR    R0,@14                                              0486 01737000
*   GEN(GETMAIN R,LV=(0));          /* GET STORAGE FOR         Y02006*/ 01738000
         GETMAIN R,LV=(0)                                               01739000
*   ASCBTAB = R1;                   /* TABLE SECTION AND PUT   Y02006*/ 01740000
         L     @14,ASCBMAP(,COMPTR)                                0488 01741000
         ST    R1,ASCBTAB(,@14)                                    0488 01742000
*                                   /* ADDR IN MAP PREFIX      Y02006*/ 01743000
*   ASTABLEN = ASCBMLEN;            /* SAVE LEN OF TAB IN PREF Y02006*/ 01744000
*                                                                  0489 01745000
         MVC   ASTABLEN(4,@14),ASCBMLEN                            0489 01746000
*   /*****************************************************************/ 01747000
*   /*                                                               */ 01748000
*   /* INITIALIZE FOR SEARCH OF ASCB DISPATCHING QUEUE               */ 01749000
*   /*                                                               */ 01750000
*   /*****************************************************************/ 01751000
*                                                                  0490 01752000
*   ASMAPPTR = ASCBMAP + MAPREFLN;  /* INIT INDEX TO MAP ORIG  Y02006*/ 01753000
         AH    @14,@CH00183                                        0490 01754000
         LR    ASMAPPTR,@14                                        0490 01755000
*   ASTABPTR = ASCBTAB;             /* INIT INDEX TO TABLE ORG Y02006*/ 01756000
         L     @14,ASCBMAP(,COMPTR)                                0491 01757000
         L     @14,ASCBTAB(,@14)                                   0491 01758000
         LR    ASTABPTR,@14                                        0491 01759000
*   DISPQEND = 0;                   /* INDICATE END OF DISP 1  Y02006*/ 01760000
         SLR   @14,@14                                             0492 01761000
         ST    @14,DISPQEND                                        0492 01762000
*                                   /* ON FORWARD SEARCH       Y02006*/ 01763000
*   CVTREADA = ADDR(CVTASCBH);      /* SET CVT READ ADDR TO    Y02006*/ 01764000
         L     @14,CVTPTR(,COMPTR)                                 0493 01765000
         LA    @14,CVTASCBH(,@14)                                  0493 01766000
         ST    @14,CVTREADA                                        0493 01767000
*                                   /* ADDR OF PTR TO 1SY ASCB Y02006*/ 01768000
*   ASCBERR = 1;                    /* SET ERROR HANDLER CODE  Y02006*/ 01769000
         LA    ASCBERR,1                                           0494 01770000
*                                   /* INTO ASCB OF FORWRD PTR Y02006*/ 01771000
*                                                                  0495 01772000
*   RESPECIFY ASCB BASED(ADDRZERO);                         /* Y02006*/ 01773000
*   ASCHAIN = ADDR(ASCBFWDP) - ADDR(ASCB); /* COMPUTE DISP TO  Y02006*/ 01774000
         MVC   ASCHAIN(4),@CF00156                                 0496 01775000
*   RESPECIFY ASCB BASED(ASCBPTR);    /* FORWARD PTR IN ASCB   Y02006*/ 01776000
*                                                                  0497 01777000
*                                                                  0497 01778000
*   /*****************************************************************/ 01779000
*   /*                                                               */ 01780000
*   /* BEGIN SEARCH OF ASCB DISPATCH QUEUE.                          */ 01781000
*   /* SEARCH IS BY FORWARD PTRS DOWN THE CHAIN UNTIL END            */ 01782000
*   /* OF QUEUE IS REACHED, UNLESS A BREAK IS ENCOUNTERED,           */ 01783000
*   /* IN WHICH CASE, SEARCH RESUMES BY BACKWARD PTRS UP             */ 01784000
*   /* THE QUEUE UNTIL POINT BEFORE THE BREAK OR UNTIL ANOTHER       */ 01785000
*   /* BREAK OCCURS.                                                 */ 01786000
*   /*                                                               */ 01787000
*   /*****************************************************************/ 01788000
*                                                                  0498 01789000
*QSEARCH:                                                          0498 01790000
*   R5 = CVTREADA;                  /* GET ADDR OF THE FIELD   Y02006*/ 01791000
QSEARCH  L     R5,CVTREADA                                         0498 01792000
*                                   /* IN THE CVT THAT POINTS  Y02006*/ 01793000
*                                   /* TO THE 1ST OR LAST ASCB Y02006*/ 01794000
*                                   /* ON QUEUE                Y02006*/ 01795000
*GENERATE REFS(BRRDDATA) FLOWS(IBRRDERR);                          0499 01796000
         BRREAD (R5),DATA,ASID=0       READ FOR ADDR OF 1ST OR   Y02006 01797000
*                                      LAST ASCB ON DISP Q       Y02006 01798000
*   IF R1->ASCBADDR = 0 THEN        /* IS CVTASCB FIELD = 0?   Y02006*/ 01799000
         ICM   @14,15,ASCBADDR(R1)                                 0500 01800000
         BNZ   @RF00500                                            0500 01801000
*     GOTO ASERBRTB(ASCBERR);       /* YES- ERROR              Y02006*/ 01802000
*                                                                  0501 01803000
         LR    @14,ASCBERR                                         0501 01804000
         SLA   @14,2                                               0501 01805000
         L     @14,ASERBRTB-4(@14)                                 0501 01806000
         BR    @14                                                 0501 01807000
*TABUPDAT:                                                         0502 01808000
*   ASCBADDR = R1->ASCBADDR;        /* MOVE ASCB ADDR TO THIS  Y02006*/ 01809000
@RF00500 DS    0H                                                  0502 01810000
TABUPDAT MVC   ASCBADDR(4,ASTABPTR),ASCBADDR(R1)                   0502 01811000
*                                   /* TABLE ENTRY             Y02006*/ 01812000
*   ASCBNUM = ASCBNUM + 1;          /* INCREMENT COUNT OF ASCB Y02006*/ 01813000
         L     @14,ASCBMAP(,COMPTR)                                0503 01814000
         LA    @07,1                                               0503 01815000
         LH    @09,ASCBNUM(,@14)                                   0503 01816000
         ALR   @09,@07                                             0503 01817000
         STH   @09,ASCBNUM(,@14)                                   0503 01818000
*                                   /* IN ASCBMAP              Y02006*/ 01819000
*   ASCBAFLG = OFF;                 /* MAKE SURE FLAG BIT OFF  Y02006*/ 01820000
         NI    ASCBAFLG(ASTABPTR),B'01111111'                      0504 01821000
*   ASCBERR = ASCBERR + 1;          /* INCR ERROR HANDLER CODE Y02006*/ 01822000
*                                                                  0505 01823000
         ALR   ASCBERR,@07                                         0505 01824000
*   R5 = ADDR(ASCBSTOR);            /* GET ADDR TO THE FIELD   Y02006*/ 01825000
         L     R5,ASCBPTR(,ASTABPTR)                               0506 01826000
         LA    R5,ASCBSTOR(,R5)                                    0506 01827000
*                                   /* IN ASCB THAT CONTAINS   Y02006*/ 01828000
*                                   /* THE REAL SEGTAB ADDR    Y02006*/ 01829000
*   GEN(BRREAD (R5),DATA,ASID=0);   /* READ FOR REAL           Y02006*/ 01830000
         BRREAD (R5),DATA,ASID=0                                        01831000
*                                   /* SEGTAB ADDR             Y02006*/ 01832000
*SEGUPDAT:                                                         0508 01833000
*   SEGTBADR = R1->SGTBAD;          /* THIS TABLE ENTRY        Y02006*/ 01834000
*                                                                  0508 01835000
SEGUPDAT MVC   SEGTBADR(4,ASTABPTR),SGTBAD(R1)                     0508 01836000
*   ASCBERR = ASCBERR + 1;          /* INCR ERROR HANDLER CODE Y02006*/ 01837000
         AH    ASCBERR,@CH00057                                    0509 01838000
*   R5 = ADDR(ASCBASID);            /* GET ADDR TO THE FIELD   Y02006*/ 01839000
         L     R5,ASCBPTR(,ASTABPTR)                               0510 01840000
         LA    R5,ASCBASID(,R5)                                    0510 01841000
*                                   /* IN ASCB THAT CONTAINS   Y02006*/ 01842000
*                                   /* THE ASID                Y02006*/ 01843000
*   GEN(BRREAD (R5),DATA,ASID=0);   /* READ FOR THE ASID       Y02006*/ 01844000
         BRREAD (R5),DATA,ASID=0                                        01845000
*ASIDUPDT:                                                         0512 01846000
*   ASID = R1->ASID;                                               0512 01847000
*                                                                  0512 01848000
ASIDUPDT MVC   ASID(2,ASMAPPTR),ASID(R1)                           0512 01849000
*   ASCBERR = ASCBERR - 2;          /* RESET ERROR HANDLER COD Y02006*/ 01850000
         BCTR  ASCBERR,0                                           0513 01851000
         BCTR  ASCBERR,0                                           0513 01852000
*   R5 = ASCBADDR + ASCHAIN;        /* GET ADDR TO THE FIELD   Y02006*/ 01853000
         L     R5,ASCBADDR(,ASTABPTR)                              0514 01854000
         AL    R5,ASCHAIN                                          0514 01855000
*                                   /* IN ASCB THAT CONTIANS   Y02006*/ 01856000
*                                   /* THE FORWARD OR BACKWARD Y02006*/ 01857000
*                                   /* LINK TO NEXT ASCB ON Q  Y02006*/ 01858000
*   GEN(BRREAD (R5),DATA,ASID=0);   /* READ FOR NEXT ASCB ADDR Y02006*/ 01859000
         BRREAD (R5),DATA,ASID=0                                        01860000
*   /*****************************************************************/ 01861000
*   /*                                                               */ 01862000
*   /* BEFORE ADDING THIS NEXT ENTY TO ASCBMAP, INSURE THAT          */ 01863000
*   /* WE HAVE NOT REACHED THE END OF THE DISPATCH QUEUE             */ 01864000
*   /* OR THAT THE TABLE IS NOT FULL.                                */ 01865000
*   /* THE TABLE WILL BECOME FULL IF THE DEFAULT LIMIT-              */ 01866000
*   /* ASCBMAX IS TOO SMALL, OR IF A LOOP CONDITION EXISTS           */ 01867000
*   /* IN THE ASCB DISPATCH QUEUE                                    */ 01868000
*   /*                                                               */ 01869000
*   /*****************************************************************/ 01870000
*                                                                  0516 01871000
*   IF R1->ASCBADDR = DISPQEND |    /* REACHED END OF QUEUE    Y02006*/ 01872000
*      R1->ASCBADDR = 0 THEN        /* OR LAST ASCB ENTERED    Y02006*/ 01873000
         L     @14,ASCBADDR(,R1)                                   0516 01874000
         C     @14,DISPQEND                                        0516 01875000
         BE    @RT00516                                            0516 01876000
         LTR   @14,@14                                             0516 01877000
         BZ    @RT00516                                            0516 01878000
*                                   /* BEFORE BREAK IN FORWARD Y02006*/ 01879000
*                                   /* CHAIN?                  Y02006*/ 01880000
*     GOTO ASCBTRM0;                /* YES- TERMINATE BUILD    Y02006*/ 01881000
*   IF ASCBNUM >= ASCBMAX THEN      /* REACHED MAX NO. ENTRIES Y02006*/ 01882000
         L     @14,ASCBMAP(,COMPTR)                                0518 01883000
         LH    @14,ASCBNUM(,@14)                                   0518 01884000
         CH    @14,ASCBMAX(,COMPTR)                                0518 01885000
         BL    @RF00518                                            0518 01886000
*     DO;                           /* YES-                    Y02006*/ 01887000
*       ASCBLIMG = ON;              /* INDICATE MSG AMD293I    Y02006*/ 01888000
         OI    ASCBLIMG,B'01000000'                                0520 01889000
*                                   /* REQUIRED                Y02006*/ 01890000
*       GOTO ASCBTRM0;              /* TERMINATE BUILD         Y02006*/ 01891000
         B     ASCBTRM0                                            0521 01892000
*     END;                          /*                         Y02006*/ 01893000
*                                                                  0522 01894000
*   /* END OF QUEUE OR MAX NO. NOT REACHED, CONTINUE           Y02006*/ 01895000
*                                                                  0523 01896000
*   ASMAPPTR = ASMAPPTR + MAPNTRYL; /* UPDATE MAP INDEX PTR    Y02006*/ 01897000
@RF00518 AH    ASMAPPTR,@CH00164                                   0523 01898000
*   ASTABPTR = ASTABPTR + TABNTRYL; /* UPDATE TABLE INDEX PTR  Y02006*/ 01899000
         AH    ASTABPTR,@CH00043                                   0524 01900000
*   GOTO TABUPDAT;                  /* CONTINUE FILLING ASCBMP Y02006*/ 01901000
*                                                                  0525 01902000
         B     TABUPDAT                                            0525 01903000
*   /*****************************************************************/ 01904000
*   /*                                                               */ 01905000
*   /* ASCBMAP BUILD TERMINATION PROCESSING                          */ 01906000
*   /* ISSUE NECESSARY MESSAGES, FREE UNUSED PORTION OF ASCB-        */ 01907000
*   /* MAP OR ALL OF IT IF NOTHING ENTERED, RESTORE BRREAD           */ 01908000
*   /* ERROR HANDLER ADDRESS IN COMMON, AND RETURN TO CALLER         */ 01909000
*   /*                                                               */ 01910000
*   /*****************************************************************/ 01911000
*ASCBTRM0:                                                         0526 01912000
*   IF ASCBERMG = ON THEN           /* MSG AMD292I REQUIRED:   Y02006*/ 01913000
ASCBTRM0 TM    ASCBERMG,B'10000000'                                0526 01914000
         BNO   @RF00526                                            0526 01915000
*     DO;                           /* YES-                    Y02006*/ 01916000
*       GP = MGTABPTR + INDX292I;   /* WRITE MSG INDICATING    Y02006*/ 01917000
         LA    GP,40                                               0528 01918000
         AL    GP,MGTABPTR                                         0528 01919000
*       GEN(LM R1,R2,0(GP));        /* ERROR IN ASCB DISPATCH  Y02006*/ 01920000
         LM R1,R2,0(GP)                                                 01921000
*       GEN(BRPRTMSG (R1),(R2));    /* CHAIN                   Y02006*/ 01922000
         BRPRTMSG (R1),(R2)                                             01923000
*     END;                          /*                         Y02006*/ 01924000
*ASCBTRM1:                          /*                         Y02006*/ 01925000
*   IF ASCBLIMG = ON THEN           /* MST AMD283I REQUIRED:   Y02006*/ 01926000
@RF00526 DS    0H                                                  0532 01927000
ASCBTRM1 TM    ASCBLIMG,B'01000000'                                0532 01928000
         BNO   @RF00532                                            0532 01929000
*     DO;                           /* YES-                    Y02006*/ 01930000
*       GP = MGTABPTR + INDX293I;   /* WRITE MSG INDICATING    Y02006*/ 01931000
         LA    GP,48                                               0534 01932000
         AL    GP,MGTABPTR                                         0534 01933000
*       GEN(LM R1,R2,0(GP));        /* THE DEFAULT LIMIT OF    Y02006*/ 01934000
         LM R1,R2,0(GP)                                                 01935000
*       CVD(ASCBMAX,DECCNVT);       /* ASCBS PROCESSED BY      Y02006*/ 01936000
         LH    @14,ASCBMAX(,COMPTR)                                0536 01937000
         CVD   @14,@TS00001                                        0536 01938000
         MVC   DECCNVT(3),@TS00001+5                               0536 01939000
*       UNPK(M293AMAX,DECCNVT);     /* PRDMP WAS EXCEEDED      Y02006*/ 01940000
         LA    @14,50                                              0537 01941000
         ALR   @14,R1                                              0537 01942000
         UNPK  M293AMAX(5,@14),DECCNVT(3)                          0537 01943000
*       M293AMAX(5) = M293AMAX(5) | 'F0'X; /* PLACE DEFAULT    Y02006*/ 01944000
         OI    M293AMAX+4(@14),X'F0'                               0538 01945000
*                                   /* FROM COM INTO MSG BUF   Y02006*/ 01946000
*       GEN(BRPRTMSG (R1),(R2));    /* ISSUE MSG AMD293I       Y02006*/ 01947000
         BRPRTMSG (R1),(R2)                                             01948000
*     END;                          /*                         Y02006*/ 01949000
*   CALL ASCBFREE;                  /* FREE UNUSED PORTION OF  Y02006*/ 01950000
@RF00532 BAL   @14,ASCBFREE                                        0541 01951000
*                                   /* ASCBMAP                 Y02006*/ 01952000
*   QASID = QASIDSAV;               /* RESTORE CURRENT ASID    Y02006*/ 01953000
         MVC   QASID(2,COMPTR),QASIDSAV                            0542 01954000
*                                   /* FIELD IN COMMON         Y02006*/ 01955000
*   ERRADDR = ERRHANSV;             /* RESTORE ERROR HANDLER   Y02006*/ 01956000
         MVC   ERRADDR(4,COMPTR),ERRHANSV                          0543 01957000
*   RETURN;                         /* RETURN TO CALLER        Y02006*/ 01958000
*                                                                  0544 01959000
@EL00004 DS    0H                                                  0544 01960000
@EF00004 DS    0H                                                  0544 01961000
@ER00004 LM    @14,@12,@SA00004                                    0544 01962000
         BR    @14                                                 0544 01963000
*   /*****************************************************************/ 01964000
*   /*                                                               */ 01965000
*   /* THE FOLLOWING IS THE ASCBMAP BUILD BRREAD ERROR               */ 01966000
*   /* HANDLER. IT INTERCEPTS READ ERRORS ON THE ASCBMAP             */ 01967000
*   /* DISPATCH QUEUE. SPECIFIC ACTION IS TAKEN DEPENDING            */ 01968000
*   /* ON WHERE THE READ ERROR OCCURRED INDICATED BY THE CODE        */ 01969000
*   /* IN ASCBERR.                                                   */ 01970000
*   /*                                                               */ 01971000
*   /*  ASCBERR  ERROR DESCR                 ACTION                  */ 01972000
*   /*                                                               */ 01973000
*   /*    1     FORWARD CHAIN   MSG 292I, READ UP BACK CHAIN         */ 01974000
*   /*    2     SEGMENT TABLE   PUT 0 IN ENTRY, CONTINUE             */ 01975000
*   /*    3     ASID FIELD      PUT F IN ENTRY, TURN ON HI           */ 01976000
*   /*                            ORDER BIT IN ASCBADDR FIELD,       */ 01977000
*   /*                            CONTINUE                           */ 01978000
*   /*    4      BACKWARD CHAIN  TERMINATE BUILD                     */ 01979000
*   /*    5      SAME AS 2       SAME AS 2                           */ 01980000
*   /*    6      SAME AS 3       SAME AS 3                           */ 01981000
*   /*                                                               */ 01982000
*   /*****************************************************************/ 01983000
*                                                                  0545 01984000
*IBRRDERR:                          /*                         Y02006*/ 01985000
*   GENERATE REFS(CURENSAV);        /*                         Y02006*/ 01986000
IBRRDERR DS    0H                                                  0545 01987000
         USING *,R15                   RESTORE AMDPRRDC          Y02006 01988000
         L     R13,CURENSAV            INIT FUNCTIONS            Y02006 01989000
         LM    R14,R12,12(R13)         REGS ON ENTRY TO          Y02006 01990000
         DROP  R15                     BRREAD ERROR HANDLER      Y02006 01991000
*   GOTO ASERBRTB(ASCBERR);         /* BRANCH TO THE APPROP-   Y02006*/ 01992000
         LR    @14,ASCBERR                                         0546 01993000
         SLA   @14,2                                               0546 01994000
         L     @14,ASERBRTB-4(@14)                                 0546 01995000
         BR    @14                                                 0546 01996000
*                                   /* RIATE ERROR RTN         Y02006*/ 01997000
*                                                                  0547 01998000
*   /*****************************************************************/ 01999000
*   /*                                                               */ 02000000
*   /* ERROR OCCURRED READING EITHER THE PTR TO THE 1ST ASCB         */ 02001000
*   /* ON THE DISPATCH Q FROM THE CVT, OR A FORWARD ASCB PTR         */ 02002000
*   /* FROM THE ASCB CURRENTLY BEING PROCESSED.                      */ 02003000
*   /* THIS RTN WILL ATTEMPT TO USE THE PTR IN THE CVT TO THE        */ 02004000
*   /* LAST ASCB ON THE DISPATCH QUEUE AND SEARCH THE QUEUE          */ 02005000
*   /* BACKWARDS UNTIL THE LAST ASCB ENTERED ON THE FORWARD          */ 02006000
*   /* SEARCH IS REACHED                                             */ 02007000
*   /*                                                               */ 02008000
*   /*****************************************************************/ 02009000
*                                                                  0547 02010000
*ASERCD00:                                                         0547 02011000
*   ASCBERMG = ON;                  /* INDICATE MSG AMD292I    Y02006*/ 02012000
ASERCD00 OI    ASCBERMG,B'10000000'                                0547 02013000
*                                   /* IS REQUIRED             Y02006*/ 02014000
*   IF ASCBNUM ^= 0 THEN            /* WERE ANY ENTRIES ADDED  Y02006*/ 02015000
         L     @14,ASCBMAP(,COMPTR)                                0548 02016000
         ICM   @07,3,ASCBNUM(@14)                                  0548 02017000
         BZ    @RF00548                                            0548 02018000
*                                   /* ON FORWARD PASS?        Y02006*/ 02019000
*     DO;                           /* YES-                    Y02006*/ 02020000
*       DISPQEND = ASCBADDR;        /* STOP BACKWARD PASS WHEN Y02006*/ 02021000
         MVC   DISPQEND(4),ASCBADDR(ASTABPTR)                      0550 02022000
*                                   /* REACH LAST FORWARD NTRY Y02006*/ 02023000
*       ASMAPPTR = ASMAPPTR + MAPNTRYL; /* UPDATE MAP AND TABLEY02006*/ 02024000
         AH    ASMAPPTR,@CH00164                                   0551 02025000
*       ASTABPTR = ASTABPTR + TABNTRYL; /* INDEX PTRS          Y02006*/ 02026000
         AH    ASTABPTR,@CH00043                                   0552 02027000
*     END;                          /*                         Y02006*/ 02028000
*   CVTREADA = ADDR(CVTASCBL);      /* SET CVT READ ADDR TO    Y02006*/ 02029000
@RF00548 L     @14,CVTPTR(,COMPTR)                                 0554 02030000
         LA    @14,CVTASCBL(,@14)                                  0554 02031000
         ST    @14,CVTREADA                                        0554 02032000
*                                   /* ADDR OF PTR TO LAST ASC Y02006*/ 02033000
*   ASCBERR = 4;                    /* SET ASCB ERROR HANDLER  Y02006*/ 02034000
         LA    ASCBERR,4                                           0555 02035000
*                                   /* CODE TO INDICATE BACK   Y02006*/ 02036000
*                                   /* CHAINING                Y02006*/ 02037000
*   RESPECIFY ASCB BASED(ADDRZERO); /* COMPUTE THE DISPLACE-   Y02006*/ 02038000
*   ASCHAIN = ADDR(ASCBBWDP) - ADDR(ASCB); /* MENT TO THE BACK Y02006*/ 02039000
         MVC   ASCHAIN(4),@CF00043                                 0557 02040000
*   RESPECIFY ASCB BASED(ASCBPTR);    /* CHAIN PTR IN ASCB     Y02006*/ 02041000
*                                                                  0558 02042000
*   GOTO QSEARCH;                   /* CONTINUE SEARCH OF      Y02006*/ 02043000
         B     QSEARCH                                             0559 02044000
*                                   /* ASCB DISPATCH Q         Y02006*/ 02045000
*                                                                  0560 02046000
*   /*****************************************************************/ 02047000
*   /*                                                               */ 02048000
*   /* ERROR OCCURRED READING THE FIELD OF THE ASCB CURRENTLY        */ 02049000
*   /* BEING PROCESSED WHICH CONTAINS THE REAL ADDRESS OF            */ 02050000
*   /* THE SEGMENT TABLE FOR THIS ADDRESS SPACE.                     */ 02051000
*   /* THIS ROUTINE WILL CAUSE THE SEGTAB FIELD OF THIS              */ 02052000
*   /* ASCBMAP ENTRY TO CONTAIN 0                                    */ 02053000
*   /*                                                               */ 02054000
*   /*****************************************************************/ 02055000
*                                                                  0560 02056000
*ASERCD04:                                                         0560 02057000
*   R1 = ADDR(ZEROSEG);             /* POINT TO AREA OF 0      Y02006*/ 02058000
ASERCD04 LA    R1,ZEROSEG                                          0560 02059000
*                                   /* AS IF RETURNED BY DATA  Y02006*/ 02060000
*                                   /* FUNCTION                Y02006*/ 02061000
*   GOTO SEGUPDAT;                  /* RETURN TO TABLE UPDATE  Y02006*/ 02062000
         B     SEGUPDAT                                            0561 02063000
*                                   /* RTN & FILL IN SEGTBADR  Y02006*/ 02064000
*                                   /* FIELD WITH ZERO         Y02006*/ 02065000
*                                                                  0562 02066000
*   /*****************************************************************/ 02067000
*   /*                                                               */ 02068000
*   /* ERROR OCCURED READING THE ASID FIELD OF ASCB.                 */ 02069000
*   /* THIS RTN WILL CAUSE THE ASID FIELD OF THIS ASCBMAP            */ 02070000
*   /* ENTRY TO BE SET TO FFFF AND WILL SET THE HIORDER BIT          */ 02071000
*   /* OF ITS CORRESPONDING ASCBADDR FIELD ON. THIS WILL             */ 02072000
*   /* INDICATE TO PRDMP FORMATTING RTNS THAT ASID WAS 'SET'         */ 02073000
*   /* TO F'S BY RDC RATHER THAN EXISTING THAT WAY IN THE            */ 02074000
*   /* DUMPED SYSTEM                                                 */ 02075000
*   /*                                                               */ 02076000
*   /*****************************************************************/ 02077000
*                                                                  0562 02078000
*ASERCD08:                                                         0562 02079000
*   R1 = ADDR(FASIDVAL);            /* POINT TO AREA OF FFFF   Y02006*/ 02080000
ASERCD08 LA    R1,FASIDVAL                                         0562 02081000
*                                   /* AS IF RETURNED BY DATA  Y02006*/ 02082000
*                                   /* FUNCTION                Y02006*/ 02083000
*   ASCBAFLG = ON;                  /* TURN ON HIORD BIT OF    Y02006*/ 02084000
         OI    ASCBAFLG(ASTABPTR),B'10000000'                      0563 02085000
*                                   /* ASCBADDR                Y02006*/ 02086000
*   GOTO ASIDUPDT;                  /* RETURN TO MAP UPDATE    Y02006*/ 02087000
         B     ASIDUPDT                                            0564 02088000
*                                   /* RTN & FILL IN ASID      Y02006*/ 02089000
*                                   /* FIELD WITH FFFF         Y02006*/ 02090000
*                                                                  0565 02091000
*   /*****************************************************************/ 02092000
*   /*                                                               */ 02093000
*   /* ERROR OCCURRED READING EITHER THE PTR TO THE LAST ASCB        */ 02094000
*   /* ON DISPATCH Q FROM THE CVT, OR A BACKWARD ASCB PTR            */ 02095000
*   /* FROM THE ASCB CURRENTLY BEING PROCESSED.                      */ 02096000
*   /* THIS RTN MERELY TERMINATES THE ASCBMAP BUILD AS FURTHER       */ 02097000
*   /* PROCESSING IS IMPOSSIBLE.                                     */ 02098000
*   /*                                                               */ 02099000
*   /*****************************************************************/ 02100000
*                                                                  0565 02101000
*ASERCD10:                                                         0565 02102000
*   GOTO ASCBTRM0;                  /* TERMINATE BILDASCB      Y02006*/ 02103000
*                                                                  0565 02104000
*   /*****************************************************************/ 02105000
*   /*                                                               */ 02106000
*   /*  ASCBFREE-                                                    */ 02107000
*   /*                                                               */ 02108000
*   /* THIS SUBROUTINE FREES ANY UNUSED SPACE IN ASCBMAP             */ 02109000
*   /* BASED ON THE NUMBER OF ENTRIES USED- ASCBNUM.  IF NO          */ 02110000
*   /* ENTRIES WERE USED (ASCBNUM = 0) THEN THE ENTIRE ASCB          */ 02111000
*   /* MAP IS FREED AND THE PTR TO IT IN COMMON SET = 0.             */ 02112000
*   /*                                                               */ 02113000
*   /*****************************************************************/ 02114000
*                                                                  0566 02115000
*ASCBFREE:                                                         0566 02116000
*   PROC;                                                          0566 02117000
ASCBFREE STM   @14,@12,@SA00005                                    0566 02118000
*   IF ASCBMAP = 0 THEN             /* DOES ASCBMAP CURRENTLY  Y02006*/ 02119000
         SLR   @14,@14                                             0567 02120000
         L     @04,ASCBMAP(,COMPTR)                                0567 02121000
         CR    @04,@14                                             0567 02122000
         BE    @RT00567                                            0567 02123000
*                                   /* EXIST?                  Y02006*/ 02124000
*     RETURN;                       /* NO- RETURN TO CALLER    Y02006*/ 02125000
*                                                                  0568 02126000
*   /*****************************************************************/ 02127000
*   /*                                                               */ 02128000
*   /* MAP EXISTS- DETERMINE WHETHER PART OR ALL OF IT SHOULD        */ 02129000
*   /* BE FREED.  ASMPFREE SW USED ONLY TO DETERMINE WHETHER         */ 02130000
*   /* ASCBMAP PTR IN COMMON SHOULD BE SET = 0.                      */ 02131000
*   /*                                                               */ 02132000
*   /*****************************************************************/ 02133000
*                                                                  0569 02134000
*   IF ASCBNUM = 0 THEN             /* ANY ENTRIES USED?       Y02006*/ 02135000
         CH    @14,ASCBNUM(,@04)                                   0569 02136000
         BNE   @RF00569                                            0569 02137000
*     ASMPFREE = ON;                /* NO- INDICATE FREE ALL   Y02006*/ 02138000
         OI    ASMPFREE,B'00100000'                                0570 02139000
*   ELSE                            /*                         Y02006*/ 02140000
*     ASMPFREE = OFF;               /* YES- ONLY FREE UNUSED   Y02006*/ 02141000
         B     @RC00569                                            0571 02142000
@RF00569 NI    ASMPFREE,B'11011111'                                0571 02143000
*                                   /* PART                    Y02006*/ 02144000
*                                                                  0572 02145000
*   /* DETERMINE AMOUNT OF TABLE USED                                */ 02146000
*                                                                  0572 02147000
*   ASCBMLEN = ASTABLEN;            /* SAVE CURRENT TAB LENGTH Y02006*/ 02148000
@RC00569 L     @14,ASCBMAP(,COMPTR)                                0572 02149000
         L     @03,ASTABLEN(,@14)                                  0572 02150000
         ST    @03,ASCBMLEN                                        0572 02151000
*   ASTABLEN = ASCBNUM * TABNTRYL;  /* NO. OF BYTES USED       Y02006*/ 02152000
         LH    @09,ASCBNUM(,@14)                                   0573 02153000
         SLA   @09,3                                               0573 02154000
         ST    @09,ASTABLEN(,@14)                                  0573 02155000
*   ASTABLEN = (ASTABLEN + RNDVAL1) & RNDVAL2; /* ROUND UP TO  Y02006*/ 02156000
         AH    @09,@CH01163                                        0574 02157000
         N     @09,@CF01312                                        0574 02158000
         ST    @09,ASTABLEN(,@14)                                  0574 02159000
*                                   /* NEXT DWORD BOUND        Y02006*/ 02160000
*   ASTABPTR = ASCBTAB + ASTABLEN;  /* POINT TO START OF       Y02006*/ 02161000
         L     ASTABPTR,ASCBTAB(,@14)                              0575 02162000
         ALR   ASTABPTR,@09                                        0575 02163000
*                                   /* UNUSED PART OF TABLE    Y02006*/ 02164000
*   ASCBMLEN = ASCBMLEN - ASTABLEN; /* DETERMINE AMOUNT TO BE  Y02006*/ 02165000
         SLR   @03,@09                                             0576 02166000
         ST    @03,ASCBMLEN                                        0576 02167000
*                                   /* FREED                   Y02006*/ 02168000
*   IF ASCBMLEN ^= 0 THEN           /* IF ALL OF TABLE NOT     Y02006*/ 02169000
         LTR   @03,@03                                             0577 02170000
         BZ    @RF00577                                            0577 02171000
*     DO;                           /* USED- THEN              Y02006*/ 02172000
*       R0 = ASCBMLEN;              /* SET LEN TO BE FREED     Y02006*/ 02173000
         LR    R0,@03                                              0579 02174000
*       R1 = ASTABPTR;              /* SET ADDR TO BE FREED    Y02006*/ 02175000
         LR    R1,ASTABPTR                                         0580 02176000
*       GEN(FREEMAIN R,LV=(0),A=(1)); /* AND FREE              Y02006*/ 02177000
         FREEMAIN R,LV=(0),A=(1)                                        02178000
*                                   /*  REMAINING PORTION      Y02006*/ 02179000
*     END;                          /*                         Y02006*/ 02180000
*                                                                  0582 02181000
*   /* DETERMINE AMOUNT OF MAP USED                                  */ 02182000
*                                                                  0583 02183000
*   ASCBMLEN = ASMAPLEN;            /* SAVE CURRENT MAP LENGTH Y02006*/ 02184000
@RF00577 L     @14,ASCBMAP(,COMPTR)                                0583 02185000
         L     @07,ASMAPLEN(,@14)                                  0583 02186000
         ST    @07,ASCBMLEN                                        0583 02187000
*   ASMAPLEN = ASCBNUM * MAPNTRYL + MAPREFLN; /* AMOUNT USED   Y02006*/ 02188000
         LH    @04,ASCBNUM(,@14)                                   0584 02189000
         ALR   @04,@04                                             0584 02190000
         AH    @04,@CH00183                                        0584 02191000
         ST    @04,ASMAPLEN(,@14)                                  0584 02192000
*   ASMAPLEN = (ASMAPLEN + RNDVAL1) & RNDVAL2; /* ROUND UP TO  Y02006*/ 02193000
         AH    @04,@CH01163                                        0585 02194000
         N     @04,@CF01312                                        0585 02195000
         ST    @04,ASMAPLEN(,@14)                                  0585 02196000
*                                   /* NEXT DWORD BOUND        Y02006*/ 02197000
*   ASMAPPTR = ASCBMAP + ASMAPLEN;  /* POINT TO START OF       Y02006*/ 02198000
         ALR   @14,@04                                             0586 02199000
         LR    ASMAPPTR,@14                                        0586 02200000
*                                   /* UNUSED PART OF MAP      Y02006*/ 02201000
*   ASCBMLEN = ASCBMLEN - ASMAPLEN; /* DETERMINE AMOUNT TO BE  Y02006*/ 02202000
         SLR   @07,@04                                             0587 02203000
         ST    @07,ASCBMLEN                                        0587 02204000
*                                   /* FREED                   Y02006*/ 02205000
*   IF ASCBMLEN ^= 0 THEN           /* IF ALL OF MAP NOT USED- Y02006*/ 02206000
         LTR   @07,@07                                             0588 02207000
         BZ    @RF00588                                            0588 02208000
*     DO;                           /* THEN                    Y02006*/ 02209000
*       R0 = ASCBMLEN;              /* SET LEN TO BE FREED     Y02006*/ 02210000
         LR    R0,@07                                              0590 02211000
*       R1 = ASMAPPTR;              /* SET ADDR TO BE FREED    Y02006*/ 02212000
         LR    R1,ASMAPPTR                                         0591 02213000
*       GEN(FREEMAIN R,LV=(0),A=(1)); /* AND FREE              Y02006*/ 02214000
         FREEMAIN R,LV=(0),A=(1)                                        02215000
*     END;                          /* REMAINING PORTION       Y02006*/ 02216000
*                                                                  0593 02217000
*   /*****************************************************************/ 02218000
*   /*                                                               */ 02219000
*   /* IF ASCBNUM WAS = 0, ENTIRE ASCBMAP HAS BEEN FREED-            */ 02220000
*   /* ZERO PTR IN COMMON.                                           */ 02221000
*   /*                                                               */ 02222000
*   /*****************************************************************/ 02223000
*                                                                  0594 02224000
*   IF ASMPFREE = ON THEN           /* FREE ENTIRE MAP?        Y02006*/ 02225000
@RF00588 TM    ASMPFREE,B'00100000'                                0594 02226000
         BNO   @RF00594                                            0594 02227000
*     ASCBMAP = 0;                  /* YES- ZERO PTR           Y02006*/ 02228000
*                                                                  0595 02229000
         SLR   @14,@14                                             0595 02230000
         ST    @14,ASCBMAP(,COMPTR)                                0595 02231000
*   RETURN;                         /* RETURN TO CALLER        Y02006*/ 02232000
@EL00005 DS    0H                                                  0596 02233000
@EF00005 DS    0H                                                  0596 02234000
@ER00005 LM    @14,@12,@SA00005                                    0596 02235000
         BR    @14                                                 0596 02236000
*   END ASCBFREE;                   /*                         Y02006*/ 02237000
         B     @EL00005                                            0597 02238000
*   END BILDASCB;                   /*                         Y02006*/ 02239000
*                                                                  0598 02240000
         B     @EL00004                                            0598 02241000
*   /*****************************************************************/ 02242000
*   /*                                                               */ 02243000
*   /* COMPADDR -                                                    */ 02244000
*   /*                                                               */ 02245000
*   /*       THIS SUBROUTINE IS PASSED AN ADDRESS IN SRCHAD AND THE  */ 02246000
*   /*       REALADDR BIT IN SWITCHES IS SET TO INDICATE WHETHER THE */ 02247000
*   /*       ADDRESS IS VIRTUAL OR REAL. COMPADDR WILL SEARCH THE    */ 02248000
*   /*       BUFFER MAP ENTRYS FOR ONE WHICH CONTAINS THE REQUESTED  */ 02249000
*   /*       ADDRESS. IF AN ENTRY IS FOUND, THEN THE BUFFER POINTED  */ 02250000
*   /*       TO BY THE MAP ENTRY CONTAINS THE REQUESTED ADDRESS. THE */ 02251000
*   /*       MAP ENTRY WILL THUS BE MADE THE CURRENT ENTRY IN THE BUF*/ 02252000
*   /*       MAP CHAIN AND A ZERO RETURN CODE WILL BE PASSED BACK TO */ 02253000
*   /*       THE CALLER. IF A BUF MAP ENTRY CONTAINING THE ADDRESS   */ 02254000
*   /*       CANNOT BE FOUND, A RETURN CODE OF 4 WILL BE PASSED BACK */ 02255000
*   /*       TO THE CALLER.                                          */ 02256000
*   /*                                                               */ 02257000
*   /*****************************************************************/ 02258000
*                                                                  0599 02259000
*                                                                  0599 02260000
*COMPADDR:                                                         0599 02261000
*   PROC OPTIONS(NOSAVE(15));                                      0599 02262000
COMPADDR ST    @14,12(,@13)                                        0599 02263000
         STM   @00,@02,20(@13)                                     0599 02264000
         STM   @04,@12,36(@13)                                     0599 02265000
*   DCL                                                            0600 02266000
*         VIRTNDX FIXED(31) CONSTANT(12); /*                   Y02006*/ 02267000
*   DCL                                                            0601 02268000
*         REALNDX FIXED(31) CONSTANT(8); /*                    Y02006*/ 02269000
*   DCL                                                            0602 02270000
*     STORGEAD PTR(31) BASED(GP);   /* USED TO REF. REAL OR    Y02006*/ 02271000
*                                   /* VIRT ADDR FIELDS IN     Y02006*/ 02272000
*                                   /* BUFFER MAP ENTRIES      Y02006*/ 02273000
*   DCL                                                            0603 02274000
*     MAPINDX FIXED(15) INIT(0);    /* INDEX INTO BUF MAP ENTRY TO 0603 02275000
*                                      EITHER THE BUFFVIRT OR      0603 02276000
*                                      BUFFREAL FIELD          Y02006*/ 02277000
*                                                                  0603 02278000
*   /*****************************************************************/ 02279000
*   /*                                                               */ 02280000
*   /* BEGIN COMPADDR PROCESSING                                     */ 02281000
*   /*                                                               */ 02282000
*   /* CHK IF ADDR IN SRCHAD IS CPU OR REAL OR VIRTUAL AND SET UP TO */ 02283000
*   /* SEARCH EITHER THE CPU OR VIRTUAL OR REAL ADDR FIELD IN THE    */ 02284000
*   /* BUFFER MAP ENTRYS.                                            */ 02285000
*   /*                                                               */ 02286000
*   /*****************************************************************/ 02287000
*                                                                  0604 02288000
*   MAPPTR = CURENTRY;              /* POINT TO CURRENT ENTRY IN BUF    02289000
*                                      MAP CHAIN                     */ 02290000
         L     MAPPTR,CURENTRY                                     0604 02291000
*   IF CPUIDAD = ON THEN            /* INVOKED TO SEARCH FOR   Y02006*/ 02292000
         TM    CPUIDAD,B'01000000'                                 0605 02293000
         BNO   @RF00605                                            0605 02294000
*                                   /* CPU STATUS RECORD?      Y02006*/ 02295000
*COMPCPU:                           /*                         Y02006*/ 02296000
*     DO;                           /* YES- SCAN FOR IT        Y02006*/ 02297000
COMPCPU  DS    0H                                                  0607 02298000
*       IF BUFFCPU = SRCHCPU THEN   /* CPU RECORD IN BUFFER?   Y02006*/ 02299000
         CLC   BUFFCPU(2,MAPPTR),SRCHCPU                           0607 02300000
         BE    @RT00607                                            0607 02301000
*         GOTO INBUF2;              /* YES- RECORD FOUND       Y02006*/ 02302000
*       ELSE                        /* OTHERWISE CHECK NEXT    Y02006*/ 02303000
*         GOTO NXTBUFFR;            /* BUFFER IF NOT AT END    Y02006*/ 02304000
         B     NXTBUFFR                                            0609 02305000
*     END;                          /*                         Y02006*/ 02306000
*                                                                  0610 02307000
*   IF REALADDR = ON THEN           /* IS ADDR REAL?                 */ 02308000
@RF00605 TM    REALADDR,B'00100000'                                0611 02309000
         BNO   @RF00611                                            0611 02310000
*     MAPINDX = REALNDX;            /* YES, SET MAP ENTRY OFFSET OF     02311000
*                                      REAL ADDR FIELD               */ 02312000
         MVC   MAPINDX(2),@CH00043                                 0612 02313000
*   ELSE                                                           0613 02314000
*     MAPINDX = VIRTNDX;            /* NO, SET MAP ENTRY OFFSET OF 0613 02315000
*                                      VIRT ADDR FIELD               */ 02316000
*                                                                  0613 02317000
         B     @RC00611                                            0613 02318000
@RF00611 MVC   MAPINDX(2),@CH00240                                 0613 02319000
*   /*****************************************************************/ 02320000
*   /*                                                               */ 02321000
*   /* CHK IF BUF MAP ENTRY CONTAINS REQUESTED ADDRESS. STORGEAD IS  */ 02322000
*   /* BASED ON (GP). STORAGEAD IS EITHER THE REAL ADDR OR           */ 02323000
*   /* VIRT ADDR FIELD IN THE BUF MAP ENTRY DEPENDING ON THE OFFSET  */ 02324000
*   /* IN GP.                                                        */ 02325000
*   /*                                                               */ 02326000
*   /*****************************************************************/ 02327000
*                                                                  0614 02328000
*                                                                  0614 02329000
*COMPAD:                                                           0614 02330000
*   GP = MAPPTR + MAPINDX;          /* POINT TO ADDR FIELD           */ 02331000
@RC00611 DS    0H                                                  0614 02332000
COMPAD   LR    GP,MAPPTR                                           0614 02333000
         AH    GP,MAPINDX                                          0614 02334000
*   IF STORGEAD = SRCHAD THEN       /* ADDR IN BUFFER          Y02006*/ 02335000
         CLC   STORGEAD(4,GP),SRCHAD                               0615 02336000
         BNE   @RF00615                                            0615 02337000
*INBUF:                                                            0616 02338000
*     DO;                           /* YES, ADDR FOUND -       Y10980*/ 02339000
INBUF    DS    0H                                                  0617 02340000
*   IF REALADDR = OFF THEN          /* VIRTUAL SEARCH?         Y02006*/ 02341000
         TM    REALADDR,B'00100000'                                0617 02342000
         BNZ   @RF00617                                            0617 02343000
*     DO;                           /* YES-                    Y02006*/ 02344000
*       IF BUFFASID = REQDASID THEN /* CHECK IF ASIDS MATCH    Y02006*/ 02345000
*                                                                  0619 02346000
         CLC   BUFFASID(2,MAPPTR),REQDASID                         0619 02347000
         BNE   @RF00619                                            0619 02348000
*   /*****************************************************************/ 02349000
*   /*                                                               */ 02350000
*   /* REQ ADDR FOUND IN MAP ENTRY. UPDATE CURRENT ENTRY PTR UNLESS  */ 02351000
*   /* MAP ENTRY IS ALREADY CURRENT IN THE CHAIN.                    */ 02352000
*   /*                                                               */ 02353000
*   /*****************************************************************/ 02354000
*                                                                  0620 02355000
*INBUF2:                                                           0620 02356000
*         DO;                       /*                         Y02006*/ 02357000
INBUF2   DS    0H                                                  0621 02358000
*           IF MAPPTR ^= CURENTRY THEN  /* ENTRY ALREADY CURRENT?    */ 02359000
*                                                                  0621 02360000
         C     MAPPTR,CURENTRY                                     0621 02361000
         BE    @RF00621                                            0621 02362000
*UPDATCUR:                                                         0622 02363000
*             DO;                       /* NO, UPDATE CURENTRY       */ 02364000
UPDATCUR DS    0H                                                  0623 02365000
*               PRENTRY -> BUFFLINK = BUFFLINK; /* DEQUE ENTRY       */ 02366000
         L     @14,PRENTRY                                         0623 02367000
         MVC   BUFFLINK(4,@14),BUFFLINK(MAPPTR)                    0623 02368000
*               BUFFLINK = CURENTRY;  /* CHAIN OLD CURENTRY TO ENTRY */ 02369000
         MVC   BUFFLINK(4,MAPPTR),CURENTRY                         0624 02370000
*               CURENTRY = MAPPTR;      /* MAKE ENTRY NEW CURENTRY   */ 02371000
         ST    MAPPTR,CURENTRY                                     0625 02372000
*             END UPDATCUR;                                        0626 02373000
*                                                                  0626 02374000
*   /*****************************************************************/ 02375000
*   /*                                                               */ 02376000
*   /* RETURN TO CALLER WITH RETURN CODE OF ZERO TO INDICATE BUFFER  */ 02377000
*   /* WITH REQUESTED ADDR WAS FOUND. CURENTRY POINTS TO THE BUF MAP */ 02378000
*   /* ENTRY ASSOCIATED WITH THE BUFFER.                             */ 02379000
*   /*                                                               */ 02380000
*   /*****************************************************************/ 02381000
*                                                                  0627 02382000
*           R15 =0;                 /* INDICATE BUF FOUND            */ 02383000
@RF00621 SLR   R15,R15                                             0627 02384000
*           GOTO COMPXIT;           /* RETURN TO CALLER              */ 02385000
         B     COMPXIT                                             0628 02386000
*         END INBUF2;               /*                         Y02006*/ 02387000
*       ELSE                        /*                         Y02006*/ 02388000
*         DO;                       /* ASIDS DO NOT MATCH      Y02006*/ 02389000
@RF00619 DS    0H                                                  0631 02390000
*           IF BUFFCOM = ON THEN    /* CHECK IF THIS BUF       Y02006*/ 02391000
         TM    BUFFCOM(MAPPTR),B'01000000'                         0631 02392000
         BO    @RT00631                                            0631 02393000
*                                   /* CONTAINS DATA FROM      Y02006*/ 02394000
*                                   /* COMMON MEMORY           Y02006*/ 02395000
*             GOTO INBUF2;          /* YES- USE IT             Y02006*/ 02396000
*           ELSE                    /*                         Y02006*/ 02397000
*             GOTO NXTBUFFR;        /* NOT COMMON- TRY NEXT    Y02006*/ 02398000
         B     NXTBUFFR                                            0633 02399000
*         END;                      /*                         Y02006*/ 02400000
*     END;                          /*                         Y02006*/ 02401000
*   ELSE                            /* NOT VIRTUAL SEARCH-     Y02006*/ 02402000
*     GOTO INBUF2;                  /* NO ASID MATCH REQUIRED  Y02006*/ 02403000
*                                   /* ON REAL- USE IT         Y02006*/ 02404000
*     END INBUF;                                                   0637 02405000
*                                                                  0637 02406000
*   /*****************************************************************/ 02407000
*   /*                                                               */ 02408000
*   /* MAP ENTRY POINTED TO BY MAPPTR DOESN'T CONTAIN SRCHAD. IF NOT */ 02409000
*   /* END OF BUF MAP CHAIN, POINT TO NEXT ENTRY IN CHAIN AND GO     */ 02410000
*   /* CHECK FOR SRCHAD.                                             */ 02411000
*   /*                                                               */ 02412000
*   /*****************************************************************/ 02413000
*                                                                  0638 02414000
*   ELSE                                                           0638 02415000
*                                                                  0638 02416000
*NXTBUFFR:                                                         0638 02417000
*     IF BUFFLINK ^= 0 THEN         /* END OF CHAIN?                 */ 02418000
@RF00615 DS    0H                                                  0638 02419000
NXTBUFFR L     @14,BUFFLINK(,MAPPTR)                               0638 02420000
         LTR   @14,@14                                             0638 02421000
         BZ    @RF00638                                            0638 02422000
*       DO;                         /* NO, POINT TO NEXT ENTRY       */ 02423000
*         PRENTRY = MAPPTR;         /* SAVE ADDR OF ENTRY JUST CHKED */ 02424000
         ST    MAPPTR,PRENTRY                                      0640 02425000
*         MAPPTR = BUFFLINK;        /* POINT TO NEXT ENTRY           */ 02426000
         LR    MAPPTR,@14                                          0641 02427000
*         IF CPUIDAD = ON THEN      /* IF SEARCHING FOR CPU    Y02006*/ 02428000
         TM    CPUIDAD,B'01000000'                                 0642 02429000
         BO    @RT00642                                            0642 02430000
*           GOTO COMPCPU;           /* RETURN TO THAT SEARCH   Y02006*/ 02431000
*         ELSE                                                     0644 02432000
*         GOTO COMPAD;              /* GO CHK FOR SRCHAD             */ 02433000
         B     COMPAD                                              0644 02434000
*       END;                                                       0645 02435000
*                                                                  0645 02436000
*   /*****************************************************************/ 02437000
*   /*                                                               */ 02438000
*   /* SRCHAD WAS NOT FOUND IN ANY BUFFER                            */ 02439000
*   /*                                                               */ 02440000
*   /*****************************************************************/ 02441000
*                                                                  0646 02442000
*   R15 = 4;                        /* INDICATE ADDR NOT FOUND       */ 02443000
*                                                                  0646 02444000
@RF00638 LA    R15,4                                               0646 02445000
*COMPXIT:                                                          0647 02446000
*   RETURN;                         /* GO BACK TO MAIN LINE          */ 02447000
@EL00006 DS    0H                                                  0647 02448000
@EF00006 DS    0H                                                  0647 02449000
@ER00006 L     @14,12(,@13)                                        0647 02450000
         LM    @00,@02,20(@13)                                     0647 02451000
         LM    @04,@12,36(@13)                                     0647 02452000
         BR    @14                                                 0647 02453000
*   END COMPADDR;                                                  0648 02454000
*                                                                  0648 02455000
         B     @EL00006                                            0648 02456000
*   /*****************************************************************/ 02457000
*   /*                                                               */ 02458000
*   /* READREC -                                                     */ 02459000
*   /*                                                               */ 02460000
*   /*       THIS SUBROUTINE PROVIDES THE INTERFACE FROM RDC TO PREAD*/ 02461000
*   /*       TO READ A DMP RECORD ASSOCIATED WITH AN ADDR PASSED TO  */ 02462000
*   /*       READREC IN SRCHAD. THE BUF MAP ENTRY ASSOCIATED WITH THE*/ 02463000
*   /*       OLDEST REFERENCED BUFFER IS ALWAYS MADE THE CURRENT     */ 02464000
*   /*       ENTRY IN THE BUF MAP CHAIN AND THE BUFFER IS THEN USED  */ 02465000
*   /*       FOR THE READ OPERATION. THE CPUIDAD BIT INDICATES IF THE*/ 02466000
*   /*       ADDR IN SRCHAD IS A CPU ID, THE REALADDR BIT IN SWITCHES*/ 02467000
*   /*       INDICATES WHETHER THE ADDR IN SRCHAD IS REAL OR VIRTUAL.*/ 02468000
*   /*                                                               */ 02469000
*   /*****************************************************************/ 02470000
*                                                                  0649 02471000
*                                                                  0649 02472000
*READREC:                                                          0649 02473000
*   PROC;                                                          0649 02474000
*                                                                  0649 02475000
READREC  STM   @14,@12,@SA00007                                    0649 02476000
*   /*****************************************************************/ 02477000
*   /*                                                               */ 02478000
*   /* BEGIN READREC PROCESSING                                      */ 02479000
*   /*                                                               */ 02480000
*   /*****************************************************************/ 02481000
*                                                                  0650 02482000
*   READTM = READTM + 1;            /* UPDATE READ COUNT             */ 02483000
*                                                                  0650 02484000
         LA    @14,1                                               0650 02485000
         AL    @14,READTM(,COMPTR)                                 0650 02486000
         ST    @14,READTM(,COMPTR)                                 0650 02487000
*   /*****************************************************************/ 02488000
*   /*                                                               */ 02489000
*   /* POSITION TO OLDEST ENTRY IN BUF MAP CHAIN                     */ 02490000
*   /*                                                               */ 02491000
*   /*****************************************************************/ 02492000
*                                                                  0651 02493000
*   MAPPTR = CURENTRY;              /* POINT TO TOP OF CHAIN         */ 02494000
*                                                                  0651 02495000
         L     MAPPTR,CURENTRY                                     0651 02496000
*CHKEND:                                                           0652 02497000
*   IF BUFFLINK ^= 0 THEN           /* END OF CHAIN?                 */ 02498000
CHKEND   L     @14,BUFFLINK(,MAPPTR)                               0652 02499000
         LTR   @14,@14                                             0652 02500000
         BZ    @RF00652                                            0652 02501000
*     DO;                           /* NO, GET NEXT ENTRY            */ 02502000
*       PRENTRY = MAPPTR;           /* SAVE ADDR OF ENTRY JUST CHKED */ 02503000
         ST    MAPPTR,PRENTRY                                      0654 02504000
*       MAPPTR = BUFFLINK;          /* POINT TO NEXT ENTRY           */ 02505000
         LR    MAPPTR,@14                                          0655 02506000
*       GOTO CHKEND;                /* GO CHK IF IT IS LAST ENTRY    */ 02507000
         B     CHKEND                                              0656 02508000
*     END;                                                         0657 02509000
*                                                                  0657 02510000
*   /*****************************************************************/ 02511000
*   /*                                                               */ 02512000
*   /* OLDEST ENTRY IN CHAIN FOUND. MAKE IT CURRENT ENTRY UNLESS IT  */ 02513000
*   /* IS ALREADY THE CURRENT ENTRY                                  */ 02514000
*   /*                                                               */ 02515000
*   /*****************************************************************/ 02516000
*                                                                  0658 02517000
*   IF MAPPTR ^= CURENTRY THEN      /* ENTRY ALREADY CURRENT?        */ 02518000
@RF00652 L     @14,CURENTRY                                        0658 02519000
         CR    MAPPTR,@14                                          0658 02520000
         BE    @RF00658                                            0658 02521000
*     DO;                           /* NO, MAKE IT CURRENT           */ 02522000
*       PRENTRY -> BUFFLINK = BUFFLINK; /* DEQUE ENTRY FROM CHAIN    */ 02523000
         L     @04,PRENTRY                                         0660 02524000
         MVC   BUFFLINK(4,@04),BUFFLINK(MAPPTR)                    0660 02525000
*       BUFFLINK = CURENTRY;        /* CHAIN OLD CURENTRY TO ENTRY   */ 02526000
         ST    @14,BUFFLINK(,MAPPTR)                               0661 02527000
*       CURENTRY = MAPPTR;          /* MAKE ENTRY NEW CURENTRY       */ 02528000
         ST    MAPPTR,CURENTRY                                     0662 02529000
*     END;                                                         0663 02530000
*                                                                  0663 02531000
*   /*****************************************************************/ 02532000
*   /*                                                               */ 02533000
*   /* REINITIALIZE THE BUF MAP ENTRY                                */ 02534000
*   /*                                                               */ 02535000
*   /*****************************************************************/ 02536000
*                                                                  0664 02537000
*   BUFFFLAG = FLAGINIT;            /* INIT FLAG BYTE                */ 02538000
@RF00658 MVI   BUFFFLAG(MAPPTR),X'00'                              0664 02539000
*   BUFFIELD = BUFFINIT;            /* REINIT BUFFER MAP ENTRY Y02006*/ 02540000
*                                                                  0665 02541000
         MVC   BUFFIELD(12,MAPPTR),BUFFINIT                        0665 02542000
*   /*****************************************************************/ 02543000
*   /*                                                               */ 02544000
*   /* STORE SRCHAD IN THE CPU ADDR FIELD OF THE MAP ENTRY IF ADDR IN*/ 02545000
*   /* SRCHAD IS A CPU ID.                                           */ 02546000
*   /* STORE SRCHAD IN THE REAL ADDR FIELD OF THE MAP ENTRY IF ADDR  */ 02547000
*   /* IN SRCHAD IS REAL. OTHERWISE STORE SRCHAD IN THE VIRT ADDR    */ 02548000
*   /* FIELD AND THE REQUESTED ASID IN BUFFASID.                     */ 02549000
*   /* THE ADDRESS WILL BE USED BY PREAD TO DETERMINE THE DUMP       */ 02550000
*   /* RECORD THAT IS TO BE READ.                                    */ 02551000
*   /*                                                               */ 02552000
*   /*****************************************************************/ 02553000
*                                                                  0666 02554000
*   IF CPUIDAD = ON THEN            /* INVOKED TO READ CPU REC Y02006*/ 02555000
         TM    CPUIDAD,B'01000000'                                 0666 02556000
         BNO   @RF00666                                            0666 02557000
*     BUFFCPU = SRCHCPU;            /* YES- PUT CPU ADR IN BUF Y02006*/ 02558000
         MVC   BUFFCPU(2,MAPPTR),SRCHCPU                           0667 02559000
*   ELSE                                                    /* Y02006*/ 02560000
*     DO;                                                   /* Y02006*/ 02561000
         B     @RC00666                                            0668 02562000
@RF00666 DS    0H                                                  0669 02563000
*   IF REALADDR = ON THEN           /* IS SRCHAD REAL?               */ 02564000
         TM    REALADDR,B'00100000'                                0669 02565000
         BNO   @RF00669                                            0669 02566000
*     BUFFREAL = SRCHAD;            /* YES, SAVE IT IN REAL FIELD    */ 02567000
         MVC   BUFFREAL(4,MAPPTR),SRCHAD                           0670 02568000
*   ELSE                                                    /* Y02006*/ 02569000
*       DO;                         /*                         Y02006*/ 02570000
         B     @RC00669                                            0671 02571000
@RF00669 DS    0H                                                  0672 02572000
*         BUFFVIRT = SRCHAD;        /* NO, SAVE IT IN VIRT FIELD     */ 02573000
         MVC   BUFFVIRT(4,MAPPTR),SRCHAD                           0672 02574000
*         BUFFASID = REQDASID;      /* ALSO SAVE ASID          Y02006*/ 02575000
         MVC   BUFFASID(2,MAPPTR),REQDASID                         0673 02576000
*       END;                        /*                         Y02006*/ 02577000
*     END;                                                         0675 02578000
*                                                                  0675 02579000
@RC00669 DS    0H                                                  0676 02580000
*   /*****************************************************************/ 02581000
*   /*                                                               */ 02582000
*   /* INTERFACE WITH PREAD TO READ DUMP RECORD CONTAINING SRCHAD    */ 02583000
*   /*                                                               */ 02584000
*   /*****************************************************************/ 02585000
*                                                                  0676 02586000
*CALLREAD:                                                         0676 02587000
*   R1 = MAPPTR;                    /* PUT ADDR OF CURRENT MAP ENTRY    02588000
*                                      IN THE PARM REG               */ 02589000
@RC00666 DS    0H                                                  0676 02590000
CALLREAD LR    R1,MAPPTR                                           0676 02591000
*   CALL AMDPREAD;                  /* GO TO PREAD             Y02006*/ 02592000
*                                                                  0677 02593000
         L     @15,@CV01129                                        0677 02594000
         BALR  @14,@15                                             0677 02595000
*   RETURN;                                                        0678 02596000
@EL00007 DS    0H                                                  0678 02597000
@EF00007 DS    0H                                                  0678 02598000
@ER00007 LM    @14,@12,@SA00007                                    0678 02599000
         BR    @14                                                 0678 02600000
*   END READREC;                                                   0679 02601000
*                                                                  0679 02602000
*   /*****************************************************************/ 02603000
*   /*                                                               */ 02604000
*   /* DAT -                                                         */ 02605000
*   /*                                                               */ 02606000
*   /*       THIS SUBROUTINE TRANSLATES A VIRTUAL ADDRESS TO A REAL  */ 02607000
*   /*       ADDRESS. THE VIRTUAL ADDRESS IS PASSED TO DAT IN SRCHAD */ 02608000
*   /*       AND AFTER TRANSLATION THE REAL ADDRESS IS PASSED BACK TO*/ 02609000
*   /*       THE CALLER IN SRCHAD. A RETURN CODE OF 4 IS PASSED BACK */ 02610000
*   /*       IF THE SRCHAD IS INVALID. OTHERWISE 0 IS PASSED BACK    */ 02611000
*   /*                                                               */ 02612000
*   /*****************************************************************/ 02613000
*                                                                  0680 02614000
*                                                                  0680 02615000
*DAT:                                                              0680 02616000
*   PROC OPTIONS(NOSAVE(15));                                      0680 02617000
DAT      ST    @14,@SA00008                                        0680 02618000
         STM   @00,@02,@SA00008+4                                  0680 02619000
         STM   @04,@12,@SA00008+16                                 0680 02620000
*   DCL                                                            0681 02621000
*         1 REQADDR FIXED(31),      /* SAVE WORD FOR SRCHAD PARM     */ 02622000
*             3 HIBYT CHAR(1),                                     0681 02623000
*             3 SEGBYTE PTR(8),     /* SEGMENT PORTION OF ADDR       */ 02624000
*             3 LOW2BYTS PTR(16);   /* FIRST 4 OR 5 BITS CONTAIN PAGE   02625000
*                                      PORTION OF ADDRESS           */  02626000
*   DCL                                                            0682 02627000
*         1 SEGORIGN FIXED(31),     /* CONTAINS SEGTAB ADDR          */ 02628000
*             3 SEGLNG PTR(8),      /* SEGTAB LENGTH CODE. INDICATES    02629000
*                                      TAB LNG IN UNITS OF 64 BYTES  */ 02630000
*             3 SEGTABAD PTR(24);   /* ADDR OF SEGMENT TABLE         */ 02631000
*                                                                  0682 02632000
*   /*****************************************************************/ 02633000
*   /*                                                               */ 02634000
*   /* FORMAT OF SEGMENT TABLE ENTRY                                 */ 02635000
*   /*                                                               */ 02636000
*   /*****************************************************************/ 02637000
*                                                                  0683 02638000
*   DCL                                                            0683 02639000
*         1 SEGENTRY CHAR(4) BDY(WORD),                            0683 02640000
*             3 SEGHIBYT CHAR(1),                                  0683 02641000
*                 5 PGELNG BIT(4),  /* INDICATES PAGE TABLE LNG IN 0683 02642000
*                                      INCREMENTS EQUAL TO SIXTEETHS    02643000
*                                      OF MAX. TABLE SIZE            */ 02644000
*                 5 PGEKEY BIT(4),  /* SEGMENT PROTECTION KEY        */ 02645000
*             3 PGETABAD PTR(24),                                  0683 02646000
*                 5 TABADDR BIT(21), /* PAGE TABLE ADDRESS           */ 02647000
*                 5 SEGEAC BIT(2),  /* EXTERNAL ACCESS CODE          */ 02648000
*                 5 SEGIBIT BIT(1); /* SEGMENT INVALID BIT           */ 02649000
*                                                                  0683 02650000
*   /*****************************************************************/ 02651000
*   /*                                                               */ 02652000
*   /* PAGE TABLE ENTRY DESCRIPTION                                  */ 02653000
*   /*                                                               */ 02654000
*   /*****************************************************************/ 02655000
*                                                                  0684 02656000
*   DCL                                                            0684 02657000
*         PAGENTRY PTR(16);         /* PAGE TABLE ENTRY              */ 02658000
*                                   /* ENTRY FMT FOR 4K PAGE SIZE:   */ 02659000
*                                   /* BITS 0-11 PAGE ADDRESS        */ 02660000
*                                   /* BIT 12 PAGE INVALID BIT       */ 02661000
*                                   /* BITS 13-15 NOT USED           */ 02662000
*   DCL                                                            0685 02663000
*         DATINDX FIXED(31);        /* OFFSET TO DATA IN BUFFER      */ 02664000
*   DCL                                                            0686 02665000
*         PAGESIZE FIXED(31) CONSTANT(4096); /* PAGE SIZE      Y02006*/ 02666000
*   DCL                                                            0687 02667000
*         SHIFT FIXED(31);          /* FACTOR FOR SEPARATING THE PAGE   02668000
*                                      ADDR AND LOW ORDER BITS IN A     02669000
*                                      PAGE TABLE ENTRY              */ 02670000
*   DCL                                                            0688 02671000
*         PFTVBN CHAR(2);           /* VIRTUAL BLOCK NO. IN PAGE FRAME  02672000
*                                      TABLE FOR PAGE RECLAIM  Y01980*/ 02673000
*   DCL                                                            0689 02674000
*     PFTASID BIT(16);              /* ASID IN PFT FOR PAGE    Y02006*/ 02675000
*                                   /* RECLAIM                 Y02006*/ 02676000
*   DCL                                                            0690 02677000
*     COMASID BIT(16) CONSTANT('FFFF'X); /* COMMON ASID FOR    Y02006*/ 02678000
*                                   /* PAGE RECLAIM            Y02006*/ 02679000
*   DCL                                                            0691 02680000
*         SRCHSAVE PTR(31);         /* SAVE AREA FOR SRCHAD    Y01980*/ 02681000
*   DCL                                                            0692 02682000
*     SRCHSAV1 PTR(31);             /* SAVE AREA FOR SRCHAD    Y02006*/ 02683000
*   DCL                                                            0693 02684000
*     1 PFTFLAGS CHAR(2),           /* MAP OF PAGE FRAME TABLE Y02006*/ 02685000
*       3 PFTFLAG1 CHAR(1),         /* FLAGS FIELDS- FLAG 1    Y02006*/ 02686000
*         5 * BIT(4),                                       /* Y02006*/ 02687000
*         5 PFTPCBSI BIT(1),                                /* Y02006*/ 02688000
*         5 PFTBADPG BIT(1),                                /* Y02006*/ 02689000
*         5 * BIT(1),                                       /* Y02006*/ 02690000
*         5 PFTOFINT BIT(1),                                /* Y02006*/ 02691000
*       3 PFTFLAG2 CHAR(1),         /* FLAG 2                  Y02006*/ 02692000
*         5 * BIT(1),                                       /* Y02006*/ 02693000
*         5 PFTOFFLN BIT(1),                                /* Y02006*/ 02694000
*         5 * BIT(1),                                       /* Y02006*/ 02695000
*         5 PFTIRRG BIT(1),                                 /* Y02006*/ 02696000
*         5 * BIT(4);                                       /* Y02006*/ 02697000
*   DCL                                                            0694 02698000
*     PROTNRQ FIXED(8) INIT(0),    /* RECLAIMABLE PAGE PROTECT     0694 02699000
*                                     KEY SWITCHES           @YM08224*/ 02700000
*     PROTKF FIXED(8) INIT(1),                                     0694 02701000
*     PROTNF FIXED(8) INIT(2);                             /*@YM08224*/ 02702000
*                                                                  0694 02703000
*   /*****************************************************************/ 02704000
*   /*                                                               */ 02705000
*   /* BEGIN DAT TRANSLATION                                         */ 02706000
*   /*                                                               */ 02707000
*   /*****************************************************************/ 02708000
*                                                                  0695 02709000
*   REQADDR = SRCHAD;               /* SAVE THE REQUESTED ADDR       */ 02710000
         MVC   REQADDR(4),SRCHAD                                   0695 02711000
*   SEGORIGN = (SGTBAD & 'FFFFFFC0'X); /* GET SEG TABLE ADDR   Y02006*/ 02712000
         L     @14,SGTBAPTR                                        0696 02713000
         L     @14,SGTBAD(,@14)                                    0696 02714000
         N     @14,@CF01448                                        0696 02715000
         ST    @14,SEGORIGN                                        0696 02716000
*   WORK1(1:1) = PROTNRQ;           /* CLEAR PROTECT KEY SW  @YM08224*/ 02717000
*                                                                  0697 02718000
         MVC   WORK1(1,COMPTR),PROTNRQ                             0697 02719000
*   /*****************************************************************/ 02720000
*   /*                                                               */ 02721000
*   /* CALCULATE ADDR OF SEGMENT TABLE ENTRY FOR REQUESTED ADDR.     */ 02722000
*   /* MULTIPLY THE SEGMENT PORTION OF THE REQUESTED ADDRESS BY 4 AND*/ 02723000
*   /* ADD TO THE SEGMENT TABLE ADDR.                                */ 02724000
*   /*                                                               */ 02725000
*   /*****************************************************************/ 02726000
*                                                                  0698 02727000
*   SRCHAD = SEGTABAD + (SEGBYTE * 4);                             0698 02728000
*                                                                  0698 02729000
         SLR   @14,@14                                             0698 02730000
         IC    @14,SEGBYTE                                         0698 02731000
         LR    @04,@14                                             0698 02732000
         SLA   @04,2                                               0698 02733000
         SLR   @09,@09                                             0698 02734000
         ICM   @09,7,SEGTABAD                                      0698 02735000
         ALR   @04,@09                                             0698 02736000
         ST    @04,SRCHAD                                          0698 02737000
*   /*****************************************************************/ 02738000
*   /*                                                               */ 02739000
*   /* CHK IF ENTRY IN TABLE. COMPARE HIGH FOUR BITS OF SEGMENT BYTE */ 02740000
*   /* WITH THE SEGMENT TABLE LENGTH CODE.                           */ 02741000
*   /*                                                               */ 02742000
*   /*****************************************************************/ 02743000
*                                                                  0699 02744000
*   IF SEGLNG < (SEGBYTE/16) THEN   /* IS SEGMENT ENTRY WITHIN TABLE */ 02745000
         SRL   @14,4                                               0699 02746000
         SLR   @09,@09                                             0699 02747000
         IC    @09,SEGLNG                                          0699 02748000
         CR    @14,@09                                             0699 02749000
         BH    @RT00699                                            0699 02750000
*     GOTO DATINVLD;                /* NO, GO TO ERROR EXIT          */ 02751000
*                                                                  0700 02752000
*   /*****************************************************************/ 02753000
*   /*                                                               */ 02754000
*   /* SRCH FOR BUFFER CONTAINING SEGMENT TABLE ENTRY                */ 02755000
*   /*                                                               */ 02756000
*   /*****************************************************************/ 02757000
*                                                                  0701 02758000
*   DATINDX = SRCHAD // DATALNG + 1; /* CALCULATE OFFSET INTO BUFFER */ 02759000
         L     @14,SRCHAD                                          0701 02760000
         LR    @06,@14                                             0701 02761000
         SRDA  @06,32                                              0701 02762000
         D     @06,@CF01096                                        0701 02763000
         AH    @06,@CH00057                                        0701 02764000
         LR    DATINDX,@06                                         0701 02765000
*   SRCHAD = (SRCHAD & RNDVALU);    /* ROUND ADDR TO 4K BNDRY        */ 02766000
         N     @14,@CF01082                                        0702 02767000
         ST    @14,SRCHAD                                          0702 02768000
*   CPUIDAD = OFF;                  /* INDICATE REAL OR VIRT   Y02006*/ 02769000
*   REALADDR = ON;                  /* INDICATE REAL ADDR PARAMETER  */ 02770000
         OI    REALADDR,B'00100000'                                0704 02771000
         NI    CPUIDAD,B'10111111'                                 0704 02772000
*   CALL COMPADDR;                  /* SRCH BUFFS FOR ADDR           */ 02773000
         BAL   @14,COMPADDR                                        0705 02774000
*   IF R15 ^= 0 THEN                /* WAS ADDR ALREADY IN A BUFF?   */ 02775000
         LTR   R15,R15                                             0706 02776000
         BZ    @RF00706                                            0706 02777000
*     DO;                           /* NO-                     Y02006*/ 02778000
*       IF DMPIC = ON THEN          /* IS ALL OF DUMP IN CORE  Y02006*/ 02779000
         TM    DMPIC(COMPTR),B'00010000'                           0708 02780000
         BO    @RT00708                                            0708 02781000
*         GOTO DATINVLD;            /* YES- DON'T CALL PREAD   Y02006*/ 02782000
*       ELSE                        /*                         Y02006*/ 02783000
*         CALL READREC;             /* NO, INTERFACE WITH PREAD TO 0710 02784000
*                                      GET DMP RECORD CONTAINING THE    02785000
*                                      ADDR.                         */ 02786000
         BAL   @14,READREC                                         0710 02787000
*     END;                          /*                         Y02006*/ 02788000
*                                                                  0711 02789000
*   /*****************************************************************/ 02790000
*   /*                                                               */ 02791000
*   /* BUFFER WITH SEGMENT TABLE ENTRY LOCATED. CHECK IF DATA IN     */ 02792000
*   /* BUFFER IS VALID.                                              */ 02793000
*   /*                                                               */ 02794000
*   /*****************************************************************/ 02795000
*                                                                  0712 02796000
*   MAPPTR = CURENTRY;              /* POINT TO BUF MAP ENTRY ASSOC.    02797000
*                                      WITH BUFFER.                  */ 02798000
@RF00706 L     MAPPTR,CURENTRY                                     0712 02799000
*   IF INVALFLG = ON THEN           /* IS DATA IN BUF VALID?         */ 02800000
         TM    INVALFLG(MAPPTR),B'10000000'                        0713 02801000
         BO    @RT00713                                            0713 02802000
*     GOTO DATINVLD;                /* NO, GO TO ERROR EXIT          */ 02803000
*   SEGENTRY = BUFDATA(DATINDX:DATINDX+3); /* YES, GET SEG ENTRY     */ 02804000
*                                                                  0715 02805000
         ICM   @14,7,BUFFPTR(MAPPTR)                               0715 02806000
         ALR   @14,DATINDX                                         0715 02807000
         MVC   SEGENTRY(4),BUFDATA-1(@14)                          0715 02808000
*   /*****************************************************************/ 02809000
*   /*                                                               */ 02810000
*   /* CHECK IF SEGMENT ENTRY IS VALID                               */ 02811000
*   /*                                                               */ 02812000
*   /*****************************************************************/ 02813000
*                                                                  0716 02814000
*   IF SEGIBIT = ON THEN            /* IS ENTRY VALID                */ 02815000
         TM    SEGIBIT,B'00000001'                                 0716 02816000
         BO    @RT00716                                            0716 02817000
*     GOTO DATINVLD;                /* NO, GO TO ERROR EXIT          */ 02818000
*                                                                  0717 02819000
*   /*****************************************************************/ 02820000
*   /*                                                               */ 02821000
*   /* SEGMENT ENTRY IS VALID. GET PAGE ADDR PORTION OF REQUESTED    */ 02822000
*   /* ADDR AND MULTIPLY BY 2 TO DETERMINE OFFSET OF PAGE ENTRY IN   */ 02823000
*   /* PAGE TABLE. ADD OFFSET TO PAGE TABLE ADDR TO GET ADDR OF PAGE */ 02824000
*   /* TABLE ENTRY ASSOCIATED WITH THE REQUESTED ADDR.               */ 02825000
*   /*                                                               */ 02826000
*   /*****************************************************************/ 02827000
*                                                                  0718 02828000
*   GP = (LOW2BYTS / PAGESIZE) * 2; /* CALC OFFSET INTO PAGE TABLE   */ 02829000
         SLR   GP,GP                                               0718 02830000
         ICM   GP,3,LOW2BYTS                                       0718 02831000
         SRL   GP,12                                               0718 02832000
         ALR   GP,GP                                               0718 02833000
*   SRCHAD = (PGETABAD & 'FFFFF8'X) + GP; /* GET ADDR OF PGTAB ENTRY */ 02834000
*                                                                  0719 02835000
         SLR   @14,@14                                             0719 02836000
         ICM   @14,7,PGETABAD                                      0719 02837000
         N     @14,@CF01450                                        0719 02838000
         ALR   @14,GP                                              0719 02839000
         ST    @14,SRCHAD                                          0719 02840000
*   /*****************************************************************/ 02841000
*   /*                                                               */ 02842000
*   /* GET BUFFER CONTAINING PAGE TABLE ENTRY                        */ 02843000
*   /*                                                               */ 02844000
*   /*****************************************************************/ 02845000
*                                                                  0720 02846000
*   DATINDX = SRCHAD // DATALNG + 1; /* GET OFFSET OF ENTRY IN BUF   */ 02847000
         LR    @06,@14                                             0720 02848000
         SRDA  @06,32                                              0720 02849000
         D     @06,@CF01096                                        0720 02850000
         AH    @06,@CH00057                                        0720 02851000
         LR    DATINDX,@06                                         0720 02852000
*   SRCHAD = (SRCHAD & RNDVALU);    /* ROUND ADDR TO 4K BNDRY        */ 02853000
         N     @14,@CF01082                                        0721 02854000
         ST    @14,SRCHAD                                          0721 02855000
*   CPUIDAD = OFF;                  /* INDICATE REAL OR VIRT   Y02006*/ 02856000
*   REALADDR = ON;                  /* INDICATE A REAL ADDR PARM     */ 02857000
         OI    REALADDR,B'00100000'                                0723 02858000
         NI    CPUIDAD,B'10111111'                                 0723 02859000
*   CALL COMPADDR;                  /* SRCH IF ADDR ALREADY IN BUFF  */ 02860000
         BAL   @14,COMPADDR                                        0724 02861000
*   IF R15 ^= 0 THEN                /* WAS ADDR IN A BUFFER?         */ 02862000
         LTR   R15,R15                                             0725 02863000
         BZ    @RF00725                                            0725 02864000
*     DO;                           /* NO-                     Y02006*/ 02865000
*       IF DMPIC = ON THEN          /* IS ALL OF DUMP IN CORE  Y02006*/ 02866000
         TM    DMPIC(COMPTR),B'00010000'                           0727 02867000
         BO    @RT00727                                            0727 02868000
*         GOTO DATINVLD;            /* YES- DON'T CALL PREAD   Y02006*/ 02869000
*       ELSE                        /*                         Y02006*/ 02870000
*         CALL READREC;             /* NO, INTERFACE TO PREAD TO GET    02871000
*                                      DUMP RCD CONTAINING THE ADDR  */ 02872000
         BAL   @14,READREC                                         0729 02873000
*     END;                          /*                         Y02006*/ 02874000
*                                                                  0730 02875000
*   /*****************************************************************/ 02876000
*   /*                                                               */ 02877000
*   /* BUFFER WITH PAGE TABLE ENTRY LOCATED. CHECK IF THE DATA IN THE*/ 02878000
*   /* BUFFER IS VALID.                                              */ 02879000
*   /*                                                               */ 02880000
*   /*****************************************************************/ 02881000
*                                                                  0731 02882000
*   MAPPTR = CURENTRY;              /* POINT TO BUF MAP ENTRY ASSOC.    02883000
*                                      WITH BUFFER                   */ 02884000
@RF00725 L     MAPPTR,CURENTRY                                     0731 02885000
*   IF INVALFLG = ON THEN           /* DATA IN BUFFER VALID?         */ 02886000
         TM    INVALFLG(MAPPTR),B'10000000'                        0732 02887000
         BO    @RT00732                                            0732 02888000
*     GOTO DATINVLD;                /* NO, GO TO ERROR EXIT          */ 02889000
*   PAGENTRY = BUFDATA(DATINDX:DATINDX+1); /* YES, GET PAGE ENTRY    */ 02890000
*                                                                  0734 02891000
         ICM   @14,7,BUFFPTR(MAPPTR)                               0734 02892000
         ALR   @14,DATINDX                                         0734 02893000
         SLR   PAGENTRY,PAGENTRY                                   0734 02894000
         ICM   PAGENTRY,3,BUFDATA-1(@14)                           0734 02895000
*   /*****************************************************************/ 02896000
*   /*                                                               */ 02897000
*   /* SEPARATE THE REAL PAGE # AND FLAG BITS IN THE PAGE ENTRY THEN */ 02898000
*   /* CHECK IF THE PAGE TABLE ENTRY IS VALID                        */ 02899000
*   /*                                                               */ 02900000
*   /*****************************************************************/ 02901000
*                                                                  0735 02902000
*   SHIFT = PAGESIZE / 256;         /* DETERMINE DIVISOR FOR SEPAR-     02903000
*                                      ATING REAL PAGE # AND FLGS    */ 02904000
         LA    SHIFT,16                                            0735 02905000
*   SRCHAD = PAGENTRY / SHIFT;      /* PUT REAL PGE NO. IN PARM WORD */ 02906000
         LR    @09,PAGENTRY                                        0736 02907000
         SLR   @08,@08                                             0736 02908000
         DR    @08,SHIFT                                           0736 02909000
         ST    @09,SRCHAD                                          0736 02910000
*   GP = PAGENTRY // SHIFT;         /* GET PAGENTRY FLAGS            */ 02911000
         LR    @09,PAGENTRY                                        0737 02912000
         SLR   @08,@08                                             0737 02913000
         DR    @08,SHIFT                                           0737 02914000
         LR    GP,@08                                              0737 02915000
*   SHIFT = PAGESIZE / 512;         /* GET SHIFT VALUE TO ISOLATE THE   02916000
*                                      PAGE ENTRY INVALID BIT        */ 02917000
         LA    SHIFT,8                                             0738 02918000
*   GP = GP / SHIFT;                /* GET INVALID BIT VALUE IN GP   */ 02919000
*                                                                  0739 02920000
         LR    @07,GP                                              0739 02921000
         SLR   @06,@06                                             0739 02922000
         DR    @06,SHIFT                                           0739 02923000
         LR    GP,@07                                              0739 02924000
*   /*****************************************************************/ 02925000
*   /*                                                               */ 02926000
*   /* CHECK IF PAGE TABLE ENTRY IS VALID                            */ 02927000
*   /*                                                               */ 02928000
*   /*****************************************************************/ 02929000
*                                                                  0740 02930000
*   IF GP = 1 THEN                  /* IS PAGE ENTRY VALID?          */ 02931000
         LA    @14,1                                               0740 02932000
         CR    GP,@14                                              0740 02933000
         BNE   @RF00740                                            0740 02934000
*     DO;                           /* NO-CHECK IF RECLAIMABLE Y01980*/ 02935000
*       IF SRCHAD = 0 |             /* PAGE TABLE ENTRY = 0    Y01980*/ 02936000
*          QAPFT = 0 THEN           /* OR ADDR PFT IN COM = 0  Y02006*/ 02937000
         L     @09,SRCHAD                                          0742 02938000
         SLR   @08,@08                                             0742 02939000
         CR    @09,@08                                             0742 02940000
         BE    @RT00742                                            0742 02941000
         L     @07,QAPFT(,COMPTR)                                  0742 02942000
         CR    @07,@08                                             0742 02943000
         BE    @RT00742                                            0742 02944000
*         GO TO DATINVLD;           /* YES - INVALID PAGE      Y01980*/ 02945000
*       SRCHSAVE = SRCHAD;          /* SAVE PAGE ENTRY         Y01980*/ 02946000
         LR    SRCHSAVE,@09                                        0744 02947000
*       SRCHAD = 2 * SRCHAD * SHIFT + QAPFT; /* COMPUTE OFFSET Y02006   02948000
*                                      IN PAGE FRAME TABLE TO  Y02006   02949000
*                                      BEGINNING OF APPROP-    Y02006   02950000
*                                      RIATE ENTRY             Y02006*/ 02951000
         ALR   @09,@09                                             0745 02952000
         MR    @08,SHIFT                                           0745 02953000
         ALR   @09,@07                                             0745 02954000
         ST    @09,SRCHAD                                          0745 02955000
*       SRCHSAV1 = SRCHAD;          /* SAVE IT FOR NEXT READ   Y02006*/ 02956000
         ST    @09,SRCHSAV1                                        0746 02957000
*       DATINDX = SRCHAD//DATALNG + 1; /* GET OFFSET OF ENTRY IN BUF */ 02958000
         LR    @08,@09                                             0747 02959000
         SRA   @08,31                                              0747 02960000
         D     @08,@CF01096                                        0747 02961000
         ALR   @08,@14                                             0747 02962000
         LR    DATINDX,@08                                         0747 02963000
*       SRCHAD = (SRCHAD & RNDVALU); /* ROUND ADDR TO 4K BNDRY Y01980*/ 02964000
         L     @14,SRCHAD                                          0748 02965000
         N     @14,@CF01082                                        0748 02966000
         ST    @14,SRCHAD                                          0748 02967000
*       CPUIDAD = OFF;              /* INDICATE REAL OR VIRT   Y02006*/ 02968000
*       REALADDR = ON;              /* INDICATE A REAL ADDR PARM     */ 02969000
         OI    REALADDR,B'00100000'                                0750 02970000
         NI    CPUIDAD,B'10111111'                                 0750 02971000
*       CALL COMPADDR;              /* SRCH IF ADDR ALREADY IN BUFF  */ 02972000
         BAL   @14,COMPADDR                                        0751 02973000
*       IF R15 ^= 0 THEN            /* WAS ADDR IN A BUFFER?   Y01980*/ 02974000
         LTR   R15,R15                                             0752 02975000
         BZ    @RF00752                                            0752 02976000
*         DO;                       /* NO-                     Y02006*/ 02977000
*           IF DMPIC = ON THEN      /* IS ALL OF DUMP IN CORE  Y02006*/ 02978000
         TM    DMPIC(COMPTR),B'00010000'                           0754 02979000
         BO    @RT00754                                            0754 02980000
*             GOTO DATINVLD;        /* YES- DON'T CALL PREAD   Y02006*/ 02981000
*           ELSE                    /*                         Y02006*/ 02982000
*             CALL READREC;         /* NO, INTERFACE TO PREAD TO GET    02983000
*                                      DUMP RCD CONTAINING THE ADDR  */ 02984000
         BAL   @14,READREC                                         0756 02985000
*         END;                      /*                         Y02006*/ 02986000
*                                                                  0757 02987000
*   /*****************************************************************/ 02988000
*   /*                                                               */ 02989000
*   /* BUFFER WITH PAGE FRAME TABLE ENTRY LOCATED. CHECK IF THE DATA */ 02990000
*   /* IN THE BUFFER IS VALID.                                       */ 02991000
*   /*                                                               */ 02992000
*   /*****************************************************************/ 02993000
*                                                                  0758 02994000
*       MAPPTR = CURENTRY;          /* POINT TO BUF MAP ENTRY ASSOC.    02995000
*                                      WITH BUFFER                   */ 02996000
@RF00752 L     MAPPTR,CURENTRY                                     0758 02997000
*       IF INVALFLG = ON THEN       /* DATA IN BUFFER VALID?         */ 02998000
         TM    INVALFLG(MAPPTR),B'10000000'                        0759 02999000
         BO    @RT00759                                            0759 03000000
*         GOTO DATINVLD;            /* NO, GO TO ERROR EXIT          */ 03001000
*                                                                  0760 03002000
*   /*****************************************************************/ 03003000
*   /*                                                               */ 03004000
*   /* THE BUFFER CONTAINING THE APPROPRIATE                         */ 03005000
*   /* PAGE FRAME TABLE ENTRY IS VALID. CHECK IF VIRTUAL BLOCK       */ 03006000
*   /* NUMBER IS THE SAME AS THAT REQUESTED. IF SO, THEN THE PAGE    */ 03007000
*   /* MAY BE RECLAIMABLE. IF NOT, PAGE IS INVALID.                  */ 03008000
*   /*                                                               */ 03009000
*   /*****************************************************************/ 03010000
*                                                                  0761 03011000
*       SRCHAD = REQADDR & '00FFF000'X; /* GET VIRTUAL BLOCK NO.     */ 03012000
         L     @14,REQADDR                                         0761 03013000
         N     @14,@CF01451                                        0761 03014000
         ST    @14,SRCHAD                                          0761 03015000
*       PFTVBN = BUFDATA(DATINDX+2:DATINDX+3); /* GET PFT NTRY Y02006*/ 03016000
         SLR   @14,@14                                             0762 03017000
         ICM   @14,7,BUFFPTR(MAPPTR)                               0762 03018000
         LR    @07,@14                                             0762 03019000
         ALR   @07,DATINDX                                         0762 03020000
         MVC   PFTVBN(2),BUFDATA+1(@07)                            0762 03021000
*       IF PFTVBN ^= SRCHVBNO THEN  /* PAGE RECLAIMABLE        Y01980*/ 03022000
         CLC   PFTVBN(2),SRCHVBNO                                  0763 03023000
         BNE   @RT00763                                            0763 03024000
*         GO TO DATINVLD;           /* NO - PAGE UNAVAILABLE   Y01980*/ 03025000
*                                                                  0764 03026000
*   /*****************************************************************/ 03027000
*   /*                                                               */ 03028000
*   /* VIRT BLOCK NUMBER MATCHES.  CHECK IF ASID ALSO MATCHES.       */ 03029000
*   /* IF NOT, CHECK IF PAGE IN FRAME IS IN COMMON MEMORY- I.E.      */ 03030000
*   /* ASID = FFFF.  IF SO, PAGE MAY BE RECLAIMABLE.  IF NOT,        */ 03031000
*   /* PAGE IS INVALID.                                              */ 03032000
*   /*                                                               */ 03033000
*   /*****************************************************************/ 03034000
*                                                                  0765 03035000
*       PFTASID = BUFDATA(DATINDX:DATINDX+1); /* GET PFT ASID  Y02006*/ 03036000
         ALR   @14,DATINDX                                         0765 03037000
         MVC   PFTASID(2),BUFDATA-1(@14)                           0765 03038000
*       IF PFTASID ^= REQDASID &    /* IS PAGE                 Y02006*/ 03039000
*          PFTASID ^= COMASID THEN  /* RECLAIMABLE?            Y02006*/ 03040000
         CLC   PFTASID(2),REQDASID                                 0766 03041000
         BE    @RF00766                                            0766 03042000
         CLC   PFTASID(2),@CB01105                                 0766 03043000
         BNE   @RT00766                                            0766 03044000
*         GOTO DATINVLD;            /* NO- PAGE UNAVAILABLE    Y02006*/ 03045000
*                                                                  0767 03046000
*   /*****************************************************************/ 03047000
*   /*                                                               */ 03048000
*   /* ASID MATCHES, OR PAGE IS IN COMMON MEMORY.  CHECK PFT         */ 03049000
*   /* FLAGS TO INSURE THAT PAGE IS REALLY RECLAIMABLE.              */ 03050000
*   /*                                                               */ 03051000
*   /*****************************************************************/ 03052000
*                                                                  0768 03053000
*       SRCHAD = SRCHSAV1 + 12;     /* COMPUTE OFFSET IN PFT   Y02006*/ 03054000
@RF00766 LA    @14,12                                              0768 03055000
         AL    @14,SRCHSAV1                                        0768 03056000
         ST    @14,SRCHAD                                          0768 03057000
*                                   /* TO THIS ENTRY'S FLAGS   Y02006*/ 03058000
*       DATINDX = SRCHAD//DATALNG +1; /* GET OFFSET OF FIELD   Y02006*/ 03059000
         LR    @08,@14                                             0769 03060000
         SRDA  @08,32                                              0769 03061000
         D     @08,@CF01096                                        0769 03062000
         AH    @08,@CH00057                                        0769 03063000
         LR    DATINDX,@08                                         0769 03064000
*                                   /* IN BUFFER               Y02006*/ 03065000
*       SRCHAD = SRCHAD & RNDVALU;  /* ROUND ADDR TO 4K BNDRY  Y02006*/ 03066000
         N     @14,@CF01082                                        0770 03067000
         ST    @14,SRCHAD                                          0770 03068000
*       CPUIDAD = OFF;              /* INDICATE NOT CPU SRCH   Y02006*/ 03069000
*       REALADDR = ON;              /* INDICATE REAL ADDR PARM Y02006*/ 03070000
         OI    REALADDR,B'00100000'                                0772 03071000
         NI    CPUIDAD,B'10111111'                                 0772 03072000
*       CALL COMPADDR;              /* SRCH IF ADDR ALREADY IN Y02006*/ 03073000
         BAL   @14,COMPADDR                                        0773 03074000
*                                   /* BUFFER                  Y02006*/ 03075000
*       IF R15 ^= 0 THEN            /* WAS ADDR IN A BUFFER    Y02006*/ 03076000
         LTR   R15,R15                                             0774 03077000
         BZ    @RF00774                                            0774 03078000
*         DO;                       /* NO-                     Y02006*/ 03079000
*           IF DMPIC = ON THEN      /* IS ALL OF DUMP IN CORE? Y02006*/ 03080000
         TM    DMPIC(COMPTR),B'00010000'                           0776 03081000
         BO    @RT00776                                            0776 03082000
*             GOTO DATINVLD;        /* YES- DONT CALL PREAD    Y02006*/ 03083000
*           ELSE                    /*                         Y02006*/ 03084000
*             CALL READREC;         /* NO, INTERFACE WITH      Y02006*/ 03085000
         BAL   @14,READREC                                         0778 03086000
*         END;                      /* PREAD TO READ DATA      Y02006*/ 03087000
*                                                                  0779 03088000
*   /*****************************************************************/ 03089000
*   /*                                                               */ 03090000
*   /* BUFFER WITH FLAGS FIELD OF PFT LOCATED.  CHECK IF THE         */ 03091000
*   /* DATA IN THE BUFFER IS VALID.                                  */ 03092000
*   /*                                                               */ 03093000
*   /*****************************************************************/ 03094000
*                                                                  0780 03095000
*       MAPPTR = CURENTRY;          /* POINT TO BUF MAP ENTRY  Y02006*/ 03096000
@RF00774 L     MAPPTR,CURENTRY                                     0780 03097000
*                                   /* ASSOC WITH BUFFER       Y02006*/ 03098000
*       IF INVALFLG = ON THEN       /* DATA IN BUFFER VALID?   Y02006*/ 03099000
         TM    INVALFLG(MAPPTR),B'10000000'                        0781 03100000
         BO    @RT00781                                            0781 03101000
*         GOTO DATINVLD;            /* NO- GOTO ERROR EXIT     Y02006*/ 03102000
*                                                                  0782 03103000
*   /*****************************************************************/ 03104000
*   /*                                                               */ 03105000
*   /* BUFFER CONTAINING FLAGS FIELDS OF PFT IS VALID.  CHECK        */ 03106000
*   /* THE FLAGS.                                                    */ 03107000
*   /*                                                               */ 03108000
*   /*****************************************************************/ 03109000
*                                                                  0783 03110000
*       PFTFLAGS = BUFDATA(DATINDX:DATINDX+1); /* GET FLAGS    Y02006*/ 03111000
*                                                                  0783 03112000
         ICM   @14,7,BUFFPTR(MAPPTR)                               0783 03113000
         ALR   @14,DATINDX                                         0783 03114000
         MVC   PFTFLAGS(2),BUFDATA-1(@14)                          0783 03115000
*       IF PFTPCBSI = ON |          /* IF ANY OF THESE         Y02006*/ 03116000
*          PFTBADPG = ON |          /* FOUR CONDITIONS         Y02006*/ 03117000
*          PFTIRRG = ON |           /* ARE TRUE-               Y02006*/ 03118000
*         (PFTOFFLN = ON & PFTOFINT = OFF) THEN      /* PAGE   Y02006*/ 03119000
         TM    PFTPCBSI,B'00001100'                                0784 03120000
         BNZ   @RT00784                                            0784 03121000
         TM    PFTIRRG,B'00010000'                                 0784 03122000
         BO    @RT00784                                            0784 03123000
         TM    PFTOFFLN,B'01000000'                                0784 03124000
         BNO   @RF00784                                            0784 03125000
         TM    PFTOFINT,B'00000001'                                0784 03126000
         BZ    @RT00784                                            0784 03127000
*         GOTO DATINVLD;            /* IS NOT RECLAIMABLE      Y02006*/ 03128000
*                                                                  0785 03129000
*/********************************************************************/ 03130000
*/*                                                          @YM08224*/ 03131000
*/* GET THE CORRECT STORAGE PROTECT KEY FROM THE EXTERNAL PAGE TABLE */ 03132000
*/* ENTRY, AND STORE IT IN THE SECOND BYTE OF THE COMMON DOUBLE WORD */ 03133000
*/* WORK AREA, WORK1. THE FIRST BYTE OF WORK1 IS USED AS A   @YM08224*/ 03134000
*/* RECLAIMABLE PAGE SWITCH. IF THE PAGE TABLE ENTRY IS AVAILABLE    */ 03135000
*/* THE SWITCH IS SET TO 0. IF THE PAGE IS RECLAIMABLE, AND THE XPTE */ 03136000
*/* IS AVAILABLE THE SWITCH IS SET TO 1. IF THE PAGE IS RECLAIMABLE  */ 03137000
*/* AND THE XPTE IS NOT AVAILABLE, THE SWITCH IS SET TO 2.   @YM08224*/ 03138000
*/*                                                          @YM08224*/ 03139000
*/********************************************************************/ 03140000
*       GP = (LOW2BYTS / PAGESIZE) * 12; /* CALCULATE OFFSET IN XPT  */ 03141000
@RF00784 SLR   GP,GP                                               0786 03142000
         ICM   GP,3,LOW2BYTS                                       0786 03143000
         SRL   GP,12                                               0786 03144000
         MH    GP,@CH00240                                         0786 03145000
*        SRCHAD = (PGETABAD & 'FFFFF8'X) + GP + 32; /* ADDR OF XPTE  */ 03146000
         SLR   @14,@14                                             0787 03147000
         ICM   @14,7,PGETABAD                                      0787 03148000
         N     @14,@CF01450                                        0787 03149000
         ALR   @14,GP                                              0787 03150000
         AH    @14,@CH00342                                        0787 03151000
         ST    @14,SRCHAD                                          0787 03152000
*       DATINDX = SRCHAD // DATALNG +1; /* OFFSET OF ENTRY IN BUF   */  03153000
         LR    @08,@14                                             0788 03154000
         SRDA  @08,32                                              0788 03155000
         D     @08,@CF01096                                        0788 03156000
         AH    @08,@CH00057                                        0788 03157000
         LR    DATINDX,@08                                         0788 03158000
*       SRCHAD = (SRCHAD & RNDVALU); /* RND ADDR TO 4K BNDRY @YM08224*/ 03159000
         N     @14,@CF01082                                        0789 03160000
         ST    @14,SRCHAD                                          0789 03161000
*       CPUIDAD = OFF;              /* INDICATE REAL OR VIRT @YM08224*/ 03162000
*       REALADDR = ON;              /* INDICATE A REAL ADDR PARM     */ 03163000
         OI    REALADDR,B'00100000'                                0791 03164000
         NI    CPUIDAD,B'10111111'                                 0791 03165000
*       CALL COMPADDR;              /* SRCH IF ADDR ALREADY IN BUF   */ 03166000
         BAL   @14,COMPADDR                                        0792 03167000
*       IF R15 ^= 0 THEN            /* WAS ADDR IN BUF?      @YM08224*/ 03168000
         LTR   R15,R15                                             0793 03169000
         BZ    @RF00793                                            0793 03170000
*         DO;                       /* NO                    @YM08224*/ 03171000
*           IF DMPIC = ON THEN      /* IS ALL DUMP IN CORE   @YM08224*/ 03172000
         TM    DMPIC(COMPTR),B'00010000'                           0795 03173000
         BNO   @RF00795                                            0795 03174000
*             DO;                                          /*@YM08224*/ 03175000
*               WORK1(1:1) = PROTNF; /* XPTE NOT AVAILABLE   @YM08224*/ 03176000
         MVC   WORK1(1,COMPTR),PROTNF                              0797 03177000
*               GO TO RECLEND;       /* RETURN TO CALLER     @YM08224*/ 03178000
         B     RECLEND                                             0798 03179000
*           END;                                           /*@YM08224*/ 03180000
*           ELSE                                                   0800 03181000
*             CALL READREC;         /* NO, INTERFACE WITH PREAD      */ 03182000
@RF00795 BAL   @14,READREC                                         0800 03183000
*        END;                                              /*@YM08224*/ 03184000
*/********************************************************************/ 03185000
*/*                                                          @YM08224*/ 03186000
*/* CHECK IF DATA IN BUFFER VALID. IF IT IS MOVE THE PROTECT KEY FROM*/ 03187000
*/* THE XPTE INTO BYTE 2 OF WORK1, AND TURN ON THE PROTECT KEY FOUND */ 03188000
*/* SWITCH. IF THE XPTE IS NOT AVAILABLE, TURN ON THE PROTECT KEY NOT*/ 03189000
*/* FOUND SWITCH.                                            @YM08224*/ 03190000
*/*                                                          @YM08224*/ 03191000
*/********************************************************************/ 03192000
*    MAPPTR = CURENTRY;             /* POINT TO BUFMAP ENTRY @YM08224   03193000
*                                      ASSOC. WITH BUFFER    @YM08224*/ 03194000
@RF00793 L     MAPPTR,CURENTRY                                     0802 03195000
*    IF INVALFLG = ON THEN          /* DATA IN BUFFER VALID  @YM08224*/ 03196000
         TM    INVALFLG(MAPPTR),B'10000000'                        0803 03197000
         BNO   @RF00803                                            0803 03198000
*      DO;                          /* NO                    @YM08224*/ 03199000
*        WORK1(1:1) = PROTNF;       /* XPTE NOT AVAILABLE    @YM08224*/ 03200000
         MVC   WORK1(1,COMPTR),PROTNF                              0805 03201000
*        GO TO RECLEND;             /* RETURN TO CALLER      @YM08224*/ 03202000
         B     RECLEND                                             0806 03203000
*      END;                                                /*@YM08224*/ 03204000
*    ELSE                                                          0808 03205000
*    WORK1(1:1) = PROTKF;           /* SET PROTECT KEY FOUND SW      */ 03206000
@RF00803 MVC   WORK1(1,COMPTR),PROTKF                              0808 03207000
*    WORK1(2:2) = BUFDATA(DATINDX); /* GET PROTECT KEY FROM XPTE     */ 03208000
         ICM   @14,7,BUFFPTR(MAPPTR)                               0809 03209000
         ALR   @14,DATINDX                                         0809 03210000
         MVC   WORK1+1(1,COMPTR),BUFDATA-1(@14)                    0809 03211000
*   /*****************************************************************/ 03212000
*   /*                                                               */ 03213000
*   /* SINCE ALL OF THE ABOVE CONDITIONS HAVE BEEN MET,              */ 03214000
*   /* THE REQUESTED PAGE IS RECLAIMABLE AND MAY BE RETURNED         */ 03215000
*   /* TO THE CALLER.                                                */ 03216000
*   /*                                                               */ 03217000
*   /*****************************************************************/ 03218000
*                                                                  0810 03219000
*RECLEND: SRCHAD = SRCHSAVE;        /* YES RESTORE PAGE VALUE        */ 03220000
RECLEND  ST    SRCHSAVE,SRCHAD                                     0810 03221000
*     END;                                                         0811 03222000
*                                                                  0811 03223000
*   /*****************************************************************/ 03224000
*   /*                                                               */ 03225000
*   /* PAGE TABLE ENTRY IS VALID. MULTIPLY REAL PAGE NUMBER IN SRCHAD*/ 03226000
*   /* BY THE PAGE SIZE TO DETERMINE THE REAL ADDRESS OF THE 4K      */ 03227000
*   /* BLK OF STORAGE WHICH CONTAINS THE REQUESTED ADDR. THEN        */ 03228000
*   /* CALCULATE THE BYTE ADDRESS.                                   */ 03229000
*   /*                                                               */ 03230000
*   /*****************************************************************/ 03231000
*                                                                  0812 03232000
*   SRCHAD = SRCHAD * PAGESIZE;     /* GET REAL ADDR OF 4K BLK       */ 03233000
@RF00740 L     @14,SRCHAD                                          0812 03234000
         SLA   @14,12                                              0812 03235000
         ST    @14,SRCHAD                                          0812 03236000
*   SRCHAD = SRCHAD + (LOW2BYTS // PAGESIZE); /* ADJUST THE REAL ADDR   03237000
*                                      TO THE PROPER BYTE BNDRY      */ 03238000
         SLR   @04,@04                                             0813 03239000
         ICM   @04,3,LOW2BYTS                                      0813 03240000
         N     @04,@CF01471                                        0813 03241000
         ALR   @14,@04                                             0813 03242000
         ST    @14,SRCHAD                                          0813 03243000
*   R15 = 0;                        /* INDICATE SUCCESSFUL TRANS     */ 03244000
         SLR   R15,R15                                             0814 03245000
*   RETURN;                         /* GO BACK TO MAINLINE           */ 03246000
*                                                                  0815 03247000
@EL00008 DS    0H                                                  0815 03248000
@EF00008 DS    0H                                                  0815 03249000
@ER00008 L     @14,@SA00008                                        0815 03250000
         LM    @00,@02,@SA00008+4                                  0815 03251000
         LM    @04,@12,@SA00008+16                                 0815 03252000
         BR    @14                                                 0815 03253000
*   /*****************************************************************/ 03254000
*   /*                                                               */ 03255000
*   /* DAT ERROR EXIT                                                */ 03256000
*   /*                                                               */ 03257000
*   /*****************************************************************/ 03258000
*                                                                  0816 03259000
*                                                                  0816 03260000
*DATINVLD:                                                         0816 03261000
*   R15 = 4;                        /* INDICATE INVALID ADDR         */ 03262000
DATINVLD LA    R15,4                                               0816 03263000
*   RETURN;                         /* GO BACK TO MAINLINE           */ 03264000
         B     @EL00008                                            0817 03265000
*   END DAT;                                                       0818 03266000
*                                                                  0818 03267000
*   END AMDPRRDC                                                   0819 03268000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 03269000
*/*%INCLUDE SYSLIB  (COMMON  )                                        * 03270000
*/*%INCLUDE SYSLIB  (IHAASCB )                                        * 03271000
*/*%INCLUDE SYSLIB  (CVT     )                                        * 03272000
*;                                                                 0819 03273000
@DATA    DS    0H                                                       03274000
@CH00057 DC    H'1'                                                     03275000
@CH00164 DC    H'2'                                                     03276000
@CH01163 DC    H'7'                                                     03277000
@CH00171 DC    H'9'                                                     03278000
@CH00240 DC    H'12'                                                    03279000
@CH00183 DC    H'16'                                                    03280000
@CH00213 DC    H'20'                                                    03281000
@CH00342 DC    H'32'                                                    03282000
@CH01309 DC    H'200'                                                   03283000
@CH01103 DC    H'4104'                                                  03284000
         DS    0F                                                       03285000
@SA00001 DS    18F                                                      03286000
@SA00002 DS    15F                                                      03287000
@SA00004 DS    15F                                                      03288000
@SA00008 DS    13F                                                      03289000
@SA00005 DS    15F                                                      03290000
@SA00007 DS    0F                                                       03291000
         DS    15F                                                      03292000
         DS    0F                                                       03293000
@CF00156 DC    F'4'                                                     03294000
@CF00043 DC    F'8'                                                     03295000
@CH00043 EQU   @CF00043+2                                               03296000
@CF01471 DC    F'4095'                                                  03297000
@CF01096 DC    F'4096'                                                  03298000
@CF01455 DC    F'4124'                                                  03299000
@CH01455 EQU   @CF01455+2                                               03300000
@CF01100 DC    F'65536'                                                 03301000
@CF01304 DC    F'196608'                                                03302000
@CF01082 DC    XL4'FFFFF000'                                            03303000
@CF01312 DC    XL4'FFFFFFF8'                                            03304000
@CF01448 DC    XL4'FFFFFFC0'                                            03305000
@CF01451 DC    XL4'00FFF000'                                            03306000
@CF01450 DC    XL4'FFFFF8'                                              03307000
@CV01129 DC    V(AMDPREAD)                                              03308000
         DS    0D                                                       03309000
CURENTRY DC    A(0)                                                     03310000
VIRTSAVE DC    A(0)                                                     03311000
PRENTRY  DC    A(0)                                                     03312000
PLIST    DS    A                                                        03313000
ZEROSEG  DC    A(0)                                                     03314000
SGTBAPTR DC    A(0)                                                     03315000
SRCHAD   DC    A(0)                                                     03316000
         ORG   SRCHAD                                                   03317000
@NM00050 DS    AL1                                                      03318000
SRCHVBNO DS    CL2                                                      03319000
         ORG   SRCHVBNO                                                 03320000
@NM00051 DS    AL1                                                      03321000
SRCHCPU  DS    BL2                                                      03322000
         ORG   SRCHAD+3                                                 03323000
@NM00052 DS    AL1                                                      03324000
         ORG   SRCHAD+4                                                 03325000
OFFSET   DC    F'0'                                                     03326000
BUFSPACE DC    F'0'                                                     03327000
CURENSAV DS    A                                                        03328000
MGTABPTR DC    AL4(AMDRDCMG)                                            03329000
MAPSIZE  DS    F                                                        03330000
ERRHANSV DS    A                                                        03331000
ASCBMLEN DC    F'0'                                                     03332000
DISPQEND DS    A                                                        03333000
CVTREADA DS    A                                                        03334000
ASCHAIN  DS    F                                                        03335000
REQADDR  DS    FL4                                                      03336000
         ORG   REQADDR                                                  03337000
HIBYT    DS    CL1                                                      03338000
SEGBYTE  DS    AL1                                                      03339000
LOW2BYTS DS    AL2                                                      03340000
         ORG   REQADDR+4                                                03341000
SEGORIGN DS    FL4                                                      03342000
         ORG   SEGORIGN                                                 03343000
SEGLNG   DS    AL1                                                      03344000
SEGTABAD DS    AL3                                                      03345000
         ORG   SEGORIGN+4                                               03346000
SRCHSAV1 DS    A                                                        03347000
NTRYCT   DS    H                                                        03348000
MAPINDX  DC    H'0'                                                     03349000
PROTNRQ  DC    AL1(0)                                                   03350000
PROTKF   DC    AL1(1)                                                   03351000
PROTNF   DC    AL1(2)                                                   03352000
         DS    0D                                                       03353000
@TS00001 DS    CL8                                                      03354000
@CB01105 DC    X'FFFF'                                                  03355000
ASIDSAVE DC    AL2(0)                                                   03356000
REQDASID DC    AL2(0)                                                   03357000
SWITCHES DC    X'00'                                                    03358000
         ORG   SWITCHES                                                 03359000
INITSW   DS    BL1                                                      03360000
CPUIDAD  EQU   SWITCHES+0                                               03361000
REALADDR EQU   SWITCHES+0                                               03362000
LODSW    EQU   SWITCHES+0                                               03363000
RSVDSWS  EQU   SWITCHES+0                                               03364000
         ORG   SWITCHES+1                                               03365000
         DS    CL1                                                      03366000
DEVAREA  DS    CL8                                                      03367000
SYSUT1   DC    CL8'SYSUT1'                                              03368000
SYSUT2   DC    CL8'SYSUT2'                                              03369000
INDD1    DS    CL8                                                      03370000
GETMNLST DS    CL16                                                     03371000
         ORG   GETMNLST                                                 03372000
REQSTOR  DS    CL8                                                      03373000
         ORG   REQSTOR                                                  03374000
MIN      DC    F'65536'                                                 03375000
MAX      DC    F'16777215'                                              03376000
         ORG   GETMNLST+8                                               03377000
GOTSTOR  DS    CL8                                                      03378000
         ORG   GOTSTOR                                                  03379000
BUFMAP   DC    A(0)                                                     03380000
CORE     DC    F'0'                                                     03381000
         ORG   CORE                                                     03382000
BUFSUBPL DS    FL1                                                      03383000
         ORG   GETMNLST+16                                              03384000
ADJSAVE  DS    CL72                                                     03385000
         ORG   ADJSAVE                                                  03386000
@NM00054 DC    72X'00'                                                  03387000
         ORG   ADJSAVE+72                                               03388000
DATASAVE DS    CL72                                                     03389000
         ORG   DATASAVE                                                 03390000
@NM00055 DC    72X'00'                                                  03391000
         ORG   DATASAVE+72                                              03392000
BUFFINIT DS    CL12                                                     03393000
         ORG   BUFFINIT                                                 03394000
@NM00058 DC    12X'FF'                                                  03395000
         ORG   BUFFINIT+12                                              03396000
CPUSTAT  DS    CL192                                                    03397000
         ORG   CPUSTAT                                                  03398000
CPUFLAGS DS    CL1                                                      03399000
         ORG   CPUFLAGS                                                 03400000
@NM00066 DS    BL1                                                      03401000
CPUNSADP EQU   CPUFLAGS+0                                               03402000
@NM00067 EQU   CPUFLAGS+0                                               03403000
         ORG   CPUSTAT+1                                                03404000
CPURESV  DS    CL1                                                      03405000
CPUADDR  DS    BL2                                                      03406000
HDRREGS1 DS    CL168                                                    03407000
         ORG   HDRREGS1                                                 03408000
CPUFLPT  DS    CL32                                                     03409000
CPUREGS  DS    CL64                                                     03410000
CPUCTL   DS    CL64                                                     03411000
CPUPSW   DS    CL8                                                      03412000
         ORG   CPUSTAT+172                                              03413000
CPUPSA   DS    AL4                                                      03414000
CPUTIMER DS    CL8                                                      03415000
CPUCLKCP DS    CL8                                                      03416000
         ORG   CPUSTAT+192                                              03417000
QASIDSAV DS    BL2                                                      03418000
ASMPBSW  DC    X'00'                                                    03419000
         ORG   ASMPBSW                                                  03420000
ASCBERMG DS    BL1                                                      03421000
ASCBLIMG EQU   ASMPBSW+0                                                03422000
ASMPFREE EQU   ASMPBSW+0                                                03423000
ASRESVMG EQU   ASMPBSW+0                                                03424000
         ORG   ASMPBSW+1                                                03425000
DECCNVT  DS    CL3                                                      03426000
FASIDVAL DC    X'FFFF'                                                  03427000
SEGENTRY DS    CL4                                                      03428000
         ORG   SEGENTRY                                                 03429000
SEGHIBYT DS    CL1                                                      03430000
         ORG   SEGHIBYT                                                 03431000
PGELNG   DS    BL1                                                      03432000
PGEKEY   EQU   SEGHIBYT+0                                               03433000
         ORG   SEGENTRY+1                                               03434000
PGETABAD DS    AL3                                                      03435000
         ORG   PGETABAD                                                 03436000
TABADDR  DS    BL3                                                      03437000
SEGEAC   EQU   PGETABAD+2                                               03438000
SEGIBIT  EQU   PGETABAD+2                                               03439000
         ORG   SEGENTRY+4                                               03440000
PFTVBN   DS    CL2                                                      03441000
PFTASID  DS    BL2                                                      03442000
PFTFLAGS DS    CL2                                                      03443000
         ORG   PFTFLAGS                                                 03444000
PFTFLAG1 DS    CL1                                                      03445000
         ORG   PFTFLAG1                                                 03446000
@NM00068 DS    BL1                                                      03447000
PFTPCBSI EQU   PFTFLAG1+0                                               03448000
PFTBADPG EQU   PFTFLAG1+0                                               03449000
@NM00069 EQU   PFTFLAG1+0                                               03450000
PFTOFINT EQU   PFTFLAG1+0                                               03451000
         ORG   PFTFLAGS+1                                               03452000
PFTFLAG2 DS    CL1                                                      03453000
         ORG   PFTFLAG2                                                 03454000
@NM00070 DS    BL1                                                      03455000
PFTOFFLN EQU   PFTFLAG2+0                                               03456000
@NM00071 EQU   PFTFLAG2+0                                               03457000
PFTIRRG  EQU   PFTFLAG2+0                                               03458000
@NM00072 EQU   PFTFLAG2+0                                               03459000
         ORG   PFTFLAGS+2                                               03460000
         DS    CL2                                                      03461000
LODBRTAB DC    AL4(PREAD)                                               03462000
         DC    AL4(FREESAVE)                                            03463000
         DC    AL4(FREEXIT)                                             03464000
PATCH    DC    64F'0'                                                   03465000
ASERBRTB DC    AL4(ASERCD00)                                            03466000
         DC    AL4(ASERCD04)                                            03467000
         DC    AL4(ASERCD08)                                            03468000
         DC    AL4(ASERCD10)                                            03469000
         DC    AL4(ASERCD04)                                            03470000
         DC    AL4(ASERCD08)                                            03471000
AMDPRRDC CSECT                                                          03472000
DTAE     EQU   32                  DATA EBCDIC BIT                      03473000
DTAC     EQU   16                  DATA IN CORE BIT                     03474000
DTAP     EQU   8                   DATA PTR BIT                         03475000
DTA      EQU   4                   DATA INCLUDED BIT                    03476000
LBLP     EQU   2                   LABEL PTR BIT                        03477000
LBL      EQU   1                   LABEL INCLUDED BIT                   03478000
AMDPRRDC CSECT                                                          03479000
AMDRDCMG CSECT                                                          03480000
         DC    AL4(WTO151I)                                             03481000
         DC    AL4(51)                                                  03482000
         DC    AL4(AMD173I)                                             03483000
         DC    AL4(57)                                                  03484000
         DC    AL4(AMD175I)                                             03485000
         DC    AL4(47)                                                  03486000
         DC    AL4(WTO254I)                                             03487000
         DC    AL4(59)                                                  03488000
         DC    AL4(AMD285I)                                      Y02006 03489000
         DC    AL4(53)                                           Y02006 03490000
         DC    AL4(AMD292I)                                      Y02006 03491000
         DC    AL4(39)                                           Y02006 03492000
         DC    AL4(AMD293I)                                      Y02006 03493000
         DC    AL4(55)                                           Y02006 03494000
WTO151I  WTO   'AMD151I INSUFFICIENT STORAGE - EXECUTION TERMINATED',  C03495000
               ROUTCDE=2,DESC=6,MF=L                                    03496000
WTO254I  WTO   'AMD254I SYSUT1 D.A. FILE NOT DEFINED - EXECUTION TERMINC03497000
               ATED',ROUTCDE=2,DESC=6,MF=L                              03498000
AMD173I  DC    CL57'AMD173I SYSUT1 IS NOT DA - DUMP WILL BE PROCESSED OC03499000
               N TAPE'                                                  03500000
AMD175I  DC    CL47'AMD175I NO TAPE DD CARD - SYSUT1 ASSUMED LOADED'    03501000
*                                                                Y02006 03502000
AMD285I  DC    CL53'AMD285I DUMP DEFINED ON DIRECT ACCESS- SYSUT1 IGNORC03503000
               ED'                                                      03504000
AMD292I  DC    CL39'AMD292I ERROR IN ASCB DISPATCHING CHAIN'     Y02006 03505000
*                                                                Y02006 03506000
AMD293I  DC    CL55'AMD293I NUMBER OF ASCBS EXCEEDED DEFAULT LIMIT OF  C03507000
                   '                                                    03508000
AMDPRRDC CSECT                                                          03509000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03510000
@01      EQU   01                                                       03511000
@02      EQU   02                                                       03512000
@03      EQU   03                                                       03513000
@04      EQU   04                                                       03514000
@05      EQU   05                                                       03515000
@06      EQU   06                                                       03516000
@07      EQU   07                                                       03517000
@08      EQU   08                                                       03518000
@09      EQU   09                                                       03519000
@10      EQU   10                                                       03520000
@11      EQU   11                                                       03521000
@12      EQU   12                                                       03522000
@13      EQU   13                                                       03523000
@14      EQU   14                                                       03524000
@15      EQU   15                                                       03525000
SRCHSAVE EQU   @06                                                      03526000
SHIFT    EQU   @04                                                      03527000
DATINDX  EQU   @04                                                      03528000
PAGENTRY EQU   @06                                                      03529000
ASCBERR  EQU   @03                                                      03530000
BUFNO    EQU   @04                                                      03531000
BUFPTR   EQU   @06                                                      03532000
ADDSPACE EQU   @04                                                      03533000
CORE2    EQU   @03                                                      03534000
CORE1    EQU   @04                                                      03535000
ASTABPTR EQU   @04                                                      03536000
ASMAPPTR EQU   @06                                                      03537000
INITRTN  EQU   @03                                                      03538000
LOADRTN  EQU   @03                                                      03539000
MAPPTR   EQU   @03                                                      03540000
R0       EQU   @00                                                      03541000
R1       EQU   @01                                                      03542000
R2       EQU   @02                                                      03543000
R5       EQU   @05                                                      03544000
R13      EQU   @13                                                      03545000
R15      EQU   @15                                                      03546000
GP       EQU   @05                                                      03547000
COMPTR   EQU   @12                                                      03548000
BASE1    EQU   @11                                                      03549000
BASE2    EQU   @10                                                      03550000
BASE3    EQU   @09                                                      03551000
BUFREG   EQU   @06                                                      03552000
CNTREG   EQU   @03                                                      03553000
COMBASE  EQU   @12                                                      03554000
LINEREG  EQU   @08                                                      03555000
PREG     EQU   @01                                                      03556000
R10      EQU   @10                                                      03557000
R11      EQU   @11                                                      03558000
R12      EQU   @12                                                      03559000
R14      EQU   @14                                                      03560000
R3       EQU   @03                                                      03561000
R4       EQU   @04                                                      03562000
R6       EQU   @06                                                      03563000
R7       EQU   @07                                                      03564000
R8       EQU   @08                                                      03565000
R9       EQU   @09                                                      03566000
STOPBASE EQU   @05                                                      03567000
         ENTRY AMDPRRDA                                                 03568000
         ENTRY AMDPRRDD                                                 03569000
COMMON   EQU   0                                                        03570000
ERRADDR  EQU   COMMON                                                   03571000
WORK1    EQU   COMMON+24                                                03572000
NUCTOP   EQU   COMMON+32                                                03573000
CVTADDR  EQU   COMMON+56                                                03574000
INDD     EQU   COMMON+68                                                03575000
RDENTRY  EQU   COMMON+80                                                03576000
READTM   EQU   COMMON+92                                                03577000
SWA      EQU   COMMON+122                                               03578000
RDRSW    EQU   SWA                                                      03579000
SWB      EQU   COMMON+123                                               03580000
FMTERR   EQU   SWB                                                      03581000
QSYSUT2  EQU   SWB                                                      03582000
SWC      EQU   COMMON+124                                               03583000
MSTRSW   EQU   SWC                                                      03584000
POSITSW  EQU   SWC                                                      03585000
TREADIN  EQU   SWC                                                      03586000
SWD      EQU   COMMON+125                                               03587000
FLSHMODE EQU   SWD                                                      03588000
SWE      EQU   COMMON+126                                               03589000
BUILDMAP EQU   SWE                                                      03590000
SWF      EQU   COMMON+127                                               03591000
QSADMP   EQU   SWF                                                      03592000
DMPIC    EQU   SWF                                                      03593000
BUFSW    EQU   COMMON+128                                               03594000
PRSW     EQU   COMMON+129                                               03595000
PRNTREAL EQU   PRSW                                                     03596000
TABLE    EQU   COMMON+659                                               03597000
HEXTABL  EQU   TABLE+63                                                 03598000
APRTMSG  EQU   COMMON+1504                                              03599000
AEREXIT  EQU   COMMON+1536                                              03600000
BUFSUM   EQU   COMMON+1576                                              03601000
BUFREINT EQU   COMMON+1580                                              03602000
DCBADDRS EQU   COMMON+1608                                              03603000
@NM00041 EQU   DCBADDRS+16                                              03604000
@NM00042 EQU   @NM00041                                                 03605000
REALMAP  EQU   COMMON+1644                                              03606000
SEGTABOR EQU   COMMON+1648                                              03607000
REALMAX  EQU   COMMON+1652                                              03608000
QAPFT    EQU   COMMON+1660                                              03609000
QASID    EQU   COMMON+1664                                              03610000
IPLCPU   EQU   COMMON+1666                                              03611000
PREFXRGR EQU   COMMON+1672                                              03612000
PREFXRGV EQU   COMMON+1676                                              03613000
HDRREGS  EQU   COMMON+1696                                              03614000
ASCBMAP  EQU   COMMON+1976                                              03615000
BUFERMAP EQU   COMMON+1980                                              03616000
BRRDDATA EQU   COMMON+1984                                              03617000
ASCBMAX  EQU   COMMON+2040                                              03618000
CSADDR   EQU   COMMON+2072                                              03619000
ASCB     EQU   0                                                        03620000
ASCBFWDP EQU   ASCB+4                                                   03621000
ASCBBWDP EQU   ASCB+8                                                   03622000
ASCBASID EQU   ASCB+36                                                  03623000
ASCBSTOR EQU   ASCB+44                                                  03624000
ASCBFW1  EQU   ASCB+100                                                 03625000
ASCBRCTF EQU   ASCBFW1+2                                                03626000
ASCBFLG1 EQU   ASCBFW1+3                                                03627000
ASCBDSP1 EQU   ASCB+114                                                 03628000
ASCBFLG2 EQU   ASCB+115                                                 03629000
CVTMAP   EQU   0                                                        03630000
CVTDAR   EQU   CVTMAP+72                                                03631000
CVTFLGS1 EQU   CVTDAR                                                   03632000
CVTDCB   EQU   CVTMAP+116                                               03633000
CVTIERLC EQU   CVTMAP+144                                               03634000
CVTOPTA  EQU   CVTMAP+182                                               03635000
CVTOPTB  EQU   CVTMAP+183                                               03636000
CVTGTF   EQU   CVTMAP+236                                               03637000
CVTGTFST EQU   CVTGTF                                                   03638000
CVTGTFS  EQU   CVTGTFST                                                 03639000
CVTSTATE EQU   CVTGTFST                                                 03640000
CVTTMODE EQU   CVTGTFST                                                 03641000
CVTFORM  EQU   CVTGTFST                                                 03642000
CVTAQAVT EQU   CVTMAP+240                                               03643000
CVTTCMFG EQU   CVTAQAVT                                                 03644000
CVTVOLM2 EQU   CVTMAP+244                                               03645000
CVTTATA  EQU   CVTVOLM2                                                 03646000
CVTTSKS  EQU   CVTTATA                                                  03647000
CVTVOLF2 EQU   CVTTSKS                                                  03648000
CVTTAT   EQU   CVTTATA+1                                                03649000
CVTATER  EQU   CVTMAP+248                                               03650000
CVTEXT1  EQU   CVTMAP+252                                               03651000
CVTPURG  EQU   CVTMAP+260                                               03652000
CVTQMSG  EQU   CVTMAP+268                                               03653000
CVTDMSR  EQU   CVTMAP+272                                               03654000
CVTERPV  EQU   CVTMAP+316                                               03655000
CVTINTLA EQU   CVTMAP+320                                               03656000
CVTAPF   EQU   CVTMAP+324                                               03657000
CVTEXT2  EQU   CVTMAP+328                                               03658000
CVTHJES  EQU   CVTMAP+332                                               03659000
CVTPGSIA EQU   CVTMAP+348                                               03660000
CVTA1F1  EQU   CVTMAP+356                                               03661000
CVTSYSK  EQU   CVTMAP+357                                               03662000
CVTVOLM1 EQU   CVTMAP+380                                               03663000
CVTVOLF1 EQU   CVTVOLM1                                                 03664000
CVTATMCT EQU   CVTMAP+388                                               03665000
CVTXTNT1 EQU   0                                                        03666000
CVTXTNT2 EQU   0                                                        03667000
CVTDSSV  EQU   CVTXTNT2                                                 03668000
CVTFLGBT EQU   CVTXTNT2+5                                               03669000
CVTQID   EQU   CVTXTNT2+24                                              03670000
CVTRV400 EQU   CVTXTNT2+52                                              03671000
CVTRV409 EQU   CVTXTNT2+53                                              03672000
CVTATCVT EQU   CVTXTNT2+64                                              03673000
CVTRV429 EQU   CVTXTNT2+84                                              03674000
CVTRV438 EQU   CVTXTNT2+85                                              03675000
CVTRV457 EQU   CVTXTNT2+112                                             03676000
CVTRV466 EQU   CVTXTNT2+113                                             03677000
CVTFIX   EQU   0                                                        03678000
CVTRELNO EQU   CVTFIX+252                                               03679000
SGTBAD   EQU   0                                                        03680000
SEGTADDR EQU   SGTBAD+1                                                 03681000
AMDPRLOD EQU   0                                                        03682000
AMDPRMST EQU   0                                                        03683000
SAVEMAP  EQU   0                                                        03684000
HIGHSAVE EQU   SAVEMAP+4                                                03685000
PLISTMAP EQU   0                                                        03686000
DATADDR  EQU   PLISTMAP                                                 03687000
DATAAD   EQU   DATADDR+1                                                03688000
CPUAD    EQU   DATAAD+2                                                 03689000
DATATYPE EQU   PLISTMAP+4                                               03690000
CPUDAT   EQU   DATATYPE                                                 03691000
REQASID  EQU   PLISTMAP+6                                               03692000
BUFFMAP  EQU   0                                                        03693000
BUFFLINK EQU   BUFFMAP                                                  03694000
BUFFFLAG EQU   BUFFMAP+4                                                03695000
INVALFLG EQU   BUFFFLAG                                                 03696000
BUFFCOM  EQU   BUFFFLAG                                                 03697000
BUFFPTR  EQU   BUFFMAP+5                                                03698000
BUFFIELD EQU   BUFFMAP+8                                                03699000
BUFFREAL EQU   BUFFIELD                                                 03700000
BUFFVIRT EQU   BUFFIELD+4                                               03701000
BUFFASID EQU   BUFFIELD+8                                               03702000
BUFFCPU  EQU   BUFFIELD+10                                              03703000
BUFFER   EQU   0                                                        03704000
BUFPREFX EQU   BUFFER                                                   03705000
BUFDATA  EQU   BUFFER+8                                                 03706000
CPUSADRC EQU   0                                                        03707000
FLAGS    EQU   CPUSADRC+2                                               03708000
CPUADDR1 EQU   CPUSADRC+6                                               03709000
CPUSTATS EQU   CPUSADRC+8                                               03710000
CSRTIMER EQU   CPUSTATS+216                                             03711000
CSRCLKCP EQU   CPUSTATS+224                                             03712000
CSRPSW   EQU   CPUSTATS+256                                             03713000
CSRPSA   EQU   CPUSTATS+264                                             03714000
CSRFLPT  EQU   CPUSTATS+352                                             03715000
CSRREGS  EQU   CPUSTATS+384                                             03716000
CSRCTL   EQU   CPUSTATS+448                                             03717000
ASCBPREF EQU   0                                                        03718000
ASCBTAB  EQU   ASCBPREF                                                 03719000
ASCBNUM  EQU   ASCBPREF+4                                               03720000
ASMAPLEN EQU   ASCBPREF+8                                               03721000
ASTABLEN EQU   ASCBPREF+12                                              03722000
ASMAPENT EQU   0                                                        03723000
ASID     EQU   ASMAPENT                                                 03724000
ASTABENT EQU   0                                                        03725000
ASCBADDR EQU   ASTABENT                                                 03726000
ASCBAFLG EQU   ASCBADDR                                                 03727000
SEGTBADR EQU   ASTABENT+4                                               03728000
MSGADDR  EQU   0                                                        03729000
M293AMAX EQU   0                                                        03730000
STORGEAD EQU   0                                                        03731000
ASCBPTR  EQU   ASCBADDR                                                 03732000
CVTPTR   EQU   CVTADDR                                                  03733000
CVTS01   EQU   CVTPGSIA                                                 03734000
CVTLPDIA EQU   CVTS01+12                                                03735000
CVTDIRST EQU   CVTLPDIA                                                 03736000
CVTSLIDA EQU   CVTS01+24                                                03737000
CVTCTLFG EQU   CVTS01+50                                                03738000
CVTASCBH EQU   CVTS01+216                                               03739000
CVTASCBL EQU   CVTS01+220                                               03740000
CVTRV210 EQU   CVTS01+424                                               03741000
CVTRV219 EQU   CVTS01+425                                               03742000
CVTRV228 EQU   CVTS01+426                                               03743000
CVTRV237 EQU   CVTS01+427                                               03744000
CVTMFRTR EQU   CVTS01+452                                               03745000
CVTRV262 EQU   CVTS01+468                                               03746000
CVTRV271 EQU   CVTS01+469                                               03747000
CVTRV280 EQU   CVTS01+470                                               03748000
CVTRV289 EQU   CVTS01+471                                               03749000
CVTGSDA  EQU   CVTS01+600                                               03750000
ZEROPREF EQU   ASCBPREF                                                 03751000
ZEROCPU  EQU   CPUSTAT                                                  03752000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    03753000
CVTRV628 EQU   CVTS01+728                                               03754000
CVTRV627 EQU   CVTS01+724                                               03755000
CVTRV626 EQU   CVTS01+720                                               03756000
CVTRV625 EQU   CVTS01+716                                               03757000
CVTRV624 EQU   CVTS01+712                                               03758000
CVTRV623 EQU   CVTS01+708                                               03759000
CVTRV622 EQU   CVTS01+704                                               03760000
CVTRV621 EQU   CVTS01+700                                               03761000
CVTRV620 EQU   CVTS01+696                                               03762000
CVTRV619 EQU   CVTS01+692                                               03763000
CVTRV618 EQU   CVTS01+688                                               03764000
CVTRV617 EQU   CVTS01+684                                               03765000
CVTRV616 EQU   CVTS01+680                                               03766000
CVTRV615 EQU   CVTS01+676                                               03767000
CVTRV614 EQU   CVTS01+672                                               03768000
CVTRV613 EQU   CVTS01+668                                               03769000
CVTRV612 EQU   CVTS01+664                                               03770000
CVTRV611 EQU   CVTS01+660                                               03771000
CVTRV610 EQU   CVTS01+656                                               03772000
CVTRV609 EQU   CVTS01+652                                               03773000
CVTRV608 EQU   CVTS01+648                                               03774000
CVTRV607 EQU   CVTS01+644                                               03775000
CVTRV606 EQU   CVTS01+640                                               03776000
CVTRV605 EQU   CVTS01+636                                               03777000
CVTRV604 EQU   CVTS01+632                                               03778000
CVTEFF02 EQU   CVTS01+628                                               03779000
CVTCBBR  EQU   CVTS01+624                                               03780000
CVTSSCR  EQU   CVTS01+620                                               03781000
CVTEVENT EQU   CVTS01+616                                               03782000
CVTCRCA  EQU   CVTS01+612                                               03783000
CVTTPIO  EQU   CVTS01+608                                               03784000
CVTADV   EQU   CVTS01+604                                               03785000
CVTGSDAB EQU   CVTGSDA                                                  03786000
CVTQV3   EQU   CVTS01+596                                               03787000
CVTQV2   EQU   CVTS01+592                                               03788000
CVTQV1   EQU   CVTS01+588                                               03789000
CVTRPT   EQU   CVTS01+584                                               03790000
CVTSSRB  EQU   CVTS01+580                                               03791000
CVTCSDRL EQU   CVTS01+576                                               03792000
CVTEXP1  EQU   CVTS01+572                                               03793000
CVTRMPMT EQU   CVTS01+568                                               03794000
CVTRMPTT EQU   CVTS01+564                                               03795000
CVTVPSA  EQU   CVTS01+560                                               03796000
CVTVSTOP EQU   CVTS01+556                                               03797000
CVTGTFR8 EQU   CVTS01+552                                               03798000
CVTQUIT  EQU   CVTS01+548                                               03799000
CVTVACR  EQU   CVTS01+544                                               03800000
CVTWTCB  EQU   CVTS01+540                                               03801000
CVTSTPRS EQU   CVTS01+536                                               03802000
CVT0PT02 EQU   CVTS01+532                                               03803000
CVTDARCM EQU   CVTS01+528                                               03804000
CVTIRECM EQU   CVTS01+524                                               03805000
CVTJRECM EQU   CVTS01+520                                               03806000
CVTVEMS0 EQU   CVTS01+516                                               03807000
CVTSPFRR EQU   CVTS01+512                                               03808000
CVTRLSTG EQU   CVTS01+508                                               03809000
CVT0TC0A EQU   CVTS01+504                                               03810000
CVTGMBR  EQU   CVTS01+500                                               03811000
CVTLFRM  EQU   CVTS01+496                                               03812000
CVTRMBR  EQU   CVTS01+492                                               03813000
CVTVIOP  EQU   CVTS01+488                                               03814000
CVTRV307 EQU   CVTS01+486                                               03815000
CVTRV306 EQU   CVTS01+484                                               03816000
CVTRV305 EQU   CVTS01+482                                               03817000
CVTRV304 EQU   CVTS01+480                                               03818000
CVTRV303 EQU   CVTS01+478                                               03819000
CVTRV302 EQU   CVTS01+476                                               03820000
CVTTRCA  EQU   CVTS01+472                                               03821000
CVTRV297 EQU   CVTRV289                                                 03822000
CVTRV296 EQU   CVTRV289                                                 03823000
CVTRV295 EQU   CVTRV289                                                 03824000
CVTRV294 EQU   CVTRV289                                                 03825000
CVTRV293 EQU   CVTRV289                                                 03826000
CVTRV292 EQU   CVTRV289                                                 03827000
CVTRV291 EQU   CVTRV289                                                 03828000
CVTRV290 EQU   CVTRV289                                                 03829000
CVTRV288 EQU   CVTRV280                                                 03830000
CVTRV287 EQU   CVTRV280                                                 03831000
CVTRV286 EQU   CVTRV280                                                 03832000
CVTRV285 EQU   CVTRV280                                                 03833000
CVTRV284 EQU   CVTRV280                                                 03834000
CVTRV283 EQU   CVTRV280                                                 03835000
CVTRV282 EQU   CVTRV280                                                 03836000
CVTRV281 EQU   CVTRV280                                                 03837000
CVTRV279 EQU   CVTRV271                                                 03838000
CVTRV278 EQU   CVTRV271                                                 03839000
CVTRV277 EQU   CVTRV271                                                 03840000
CVTRV276 EQU   CVTRV271                                                 03841000
CVTRV275 EQU   CVTRV271                                                 03842000
CVTRV274 EQU   CVTRV271                                                 03843000
CVTRV273 EQU   CVTRV271                                                 03844000
CVTRV272 EQU   CVTRV271                                                 03845000
CVTRV270 EQU   CVTRV262                                                 03846000
CVTRV269 EQU   CVTRV262                                                 03847000
CVTRV268 EQU   CVTRV262                                                 03848000
CVTRV267 EQU   CVTRV262                                                 03849000
CVTRV266 EQU   CVTRV262                                                 03850000
CVTRV265 EQU   CVTRV262                                                 03851000
CVTRV264 EQU   CVTRV262                                                 03852000
CVTRV263 EQU   CVTRV262                                                 03853000
CVTVFP   EQU   CVTS01+464                                               03854000
CVTVSI   EQU   CVTS01+460                                               03855000
CVTVPSIB EQU   CVTS01+456                                               03856000
CVTMFACT EQU   CVTMFRTR                                                 03857000
CVTMFCTL EQU   CVTS01+448                                               03858000
CVTPVBP  EQU   CVTS01+444                                               03859000
CVTPWI   EQU   CVTS01+440                                               03860000
CVTRV254 EQU   CVTS01+438                                               03861000
CVTRV253 EQU   CVTS01+436                                               03862000
CVTRV252 EQU   CVTS01+434                                               03863000
CVTRV251 EQU   CVTS01+433                                               03864000
CVTRV250 EQU   CVTS01+432                                               03865000
CVTRV249 EQU   CVTS01+431                                               03866000
CVTRV248 EQU   CVTS01+430                                               03867000
CVTRV247 EQU   CVTS01+429                                               03868000
CVTRV246 EQU   CVTS01+428                                               03869000
CVTRV245 EQU   CVTRV237                                                 03870000
CVTRV244 EQU   CVTRV237                                                 03871000
CVTRV243 EQU   CVTRV237                                                 03872000
CVTRV242 EQU   CVTRV237                                                 03873000
CVTRV241 EQU   CVTRV237                                                 03874000
CVTRV240 EQU   CVTRV237                                                 03875000
CVTRV239 EQU   CVTRV237                                                 03876000
CVTRV238 EQU   CVTRV237                                                 03877000
CVTRV236 EQU   CVTRV228                                                 03878000
CVTRV235 EQU   CVTRV228                                                 03879000
CVTRV234 EQU   CVTRV228                                                 03880000
CVTRV233 EQU   CVTRV228                                                 03881000
CVTRV232 EQU   CVTRV228                                                 03882000
CVTRV231 EQU   CVTRV228                                                 03883000
CVTRV230 EQU   CVTRV228                                                 03884000
CVTRV229 EQU   CVTRV228                                                 03885000
CVTRV227 EQU   CVTRV219                                                 03886000
CVTRV226 EQU   CVTRV219                                                 03887000
CVTRV225 EQU   CVTRV219                                                 03888000
CVTRV224 EQU   CVTRV219                                                 03889000
CVTRV223 EQU   CVTRV219                                                 03890000
CVTRV222 EQU   CVTRV219                                                 03891000
CVTRV221 EQU   CVTRV219                                                 03892000
CVTRV220 EQU   CVTRV219                                                 03893000
CVTRV218 EQU   CVTRV210                                                 03894000
CVTRV217 EQU   CVTRV210                                                 03895000
CVTRV216 EQU   CVTRV210                                                 03896000
CVTRV215 EQU   CVTRV210                                                 03897000
CVTRV214 EQU   CVTRV210                                                 03898000
CVTRV213 EQU   CVTRV210                                                 03899000
CVTRV212 EQU   CVTRV210                                                 03900000
CVTRV211 EQU   CVTRV210                                                 03901000
CVTLCCAT EQU   CVTS01+420                                               03902000
CVTPCCAT EQU   CVTS01+416                                               03903000
CVTIPCRP EQU   CVTS01+412                                               03904000
CVTIPCRI EQU   CVTS01+408                                               03905000
CVTIPCDS EQU   CVTS01+404                                               03906000
CVTAIDVT EQU   CVTS01+400                                               03907000
CVTSSAP  EQU   CVTS01+396                                               03908000
CVTEHCIR EQU   CVTS01+392                                               03909000
CVTEHDEF EQU   CVTS01+388                                               03910000
CVTDAIR  EQU   CVTS01+384                                               03911000
CVTPERFM EQU   CVTS01+380                                               03912000
CVT044R2 EQU   CVTS01+376                                               03913000
CVTFETCH EQU   CVTS01+372                                               03914000
CVTRSTWD EQU   CVTS01+368                                               03915000
CVTSPOST EQU   CVTS01+364                                               03916000
CVTIOBP  EQU   CVTS01+360                                               03917000
CVTASMVT EQU   CVTS01+356                                               03918000
CVTRECRQ EQU   CVTS01+352                                               03919000
CVTWSAC  EQU   CVTS01+348                                               03920000
CVTRV149 EQU   CVTS01+344                                               03921000
CVTWSAL  EQU   CVTS01+340                                               03922000
CVTSPSA  EQU   CVTS01+336                                               03923000
CVTGLMN  EQU   CVTS01+332                                               03924000
CVTVEAC0 EQU   CVTS01+328                                               03925000
CVT062R1 EQU   CVTS01+324                                               03926000
CVTRPOST EQU   CVTS01+320                                               03927000
CVTDQIQE EQU   CVTS01+316                                               03928000
CVTCSD   EQU   CVTS01+312                                               03929000
CVTLKRMA EQU   CVTS01+308                                               03930000
CVTRSPIE EQU   CVTS01+304                                               03931000
CVTRENQ  EQU   CVTS01+300                                               03932000
CVTLQCB  EQU   CVTS01+296                                               03933000
CVTFQCB  EQU   CVTS01+292                                               03934000
CVTQCS01 EQU   CVTS01+288                                               03935000
CVTAPFT  EQU   CVTS01+284                                               03936000
CVTPARRL EQU   CVTS01+280                                               03937000
CVTVWAIT EQU   CVTS01+276                                               03938000
CVTGSPL  EQU   CVTS01+272                                               03939000
CVTLSMQ  EQU   CVTS01+268                                               03940000
CVTGSMQ  EQU   CVTS01+264                                               03941000
CVTEXPRO EQU   CVTS01+260                                               03942000
CVTOPCTP EQU   CVTS01+256                                               03943000
CVTSIC   EQU   CVTS01+252                                               03944000
CVTTPIOS EQU   CVTS01+248                                               03945000
CVTRTMS  EQU   CVTS01+244                                               03946000
CVTSDBF  EQU   CVTS01+240                                               03947000
CVTSCBP  EQU   CVTS01+236                                               03948000
CVTSDMP  EQU   CVTS01+232                                               03949000
CVTSV60  EQU   CVTS01+228                                               03950000
CVTRTMCT EQU   CVTS01+224                                               03951000
CVTGDA   EQU   CVTS01+212                                               03952000
CVTASVT  EQU   CVTS01+208                                               03953000
CVTVVMDI EQU   CVTS01+204                                               03954000
CVTAQTOP EQU   CVTS01+200                                               03955000
CVTIOSCS EQU   CVTS01+196                                               03956000
CVTSDRM  EQU   CVTS01+192                                               03957000
CVTOPTE  EQU   CVTS01+188                                               03958000
CVTSTXU  EQU   CVTS01+184                                               03959000
CVTQUIS  EQU   CVTS01+180                                               03960000
CVTPARS  EQU   CVTS01+176                                               03961000
CVTS1EE  EQU   CVTS01+172                                               03962000
CVTFRAS  EQU   CVTS01+168                                               03963000
CVTQSAS  EQU   CVTS01+164                                               03964000
CVTCRAS  EQU   CVTS01+160                                               03965000
CVTCRMN  EQU   CVTS01+156                                               03966000
CVTDELCP EQU   CVTS01+152                                               03967000
CVTFRECL EQU   CVTS01+148                                               03968000
CVTGETCL EQU   CVTS01+144                                               03969000
CVTBLDCP EQU   CVTS01+140                                               03970000
CVTAUTHL EQU   CVTS01+136                                               03971000
CVTSCAN  EQU   CVTS01+132                                               03972000
CVTRV144 EQU   CVTS01+130                                               03973000
CVTMAXMP EQU   CVTS01+128                                               03974000
CVTSTCK  EQU   CVTS01+124                                               03975000
CVTRV139 EQU   CVTS01+123                                               03976000
CVTDSSAC EQU   CVTS01+122                                               03977000
CVTRV513 EQU   CVTS01+121                                               03978000
CVTIOSPL EQU   CVTS01+120                                               03979000
CVTPTGT  EQU   CVTS01+116                                               03980000
CVTCSPIE EQU   CVTS01+112                                               03981000
CVTSMFEX EQU   CVTS01+108                                               03982000
CVTOLT0A EQU   CVTS01+104                                               03983000
CVTSRBRT EQU   CVTS01+100                                               03984000
CVTPUTL  EQU   CVTS01+96                                                03985000
CVTRV519 EQU   CVTS01+92                                                03986000
CVTRV327 EQU   CVTS01+88                                                03987000
CVTRV326 EQU   CVTS01+84                                                03988000
CVTRV325 EQU   CVTS01+80                                                03989000
CVTRV324 EQU   CVTS01+76                                                03990000
CVT0VL01 EQU   CVTS01+72                                                03991000
CVTSHRVM EQU   CVTS01+68                                                03992000
CVTRV332 EQU   CVTS01+64                                                03993000
CVTTAS   EQU   CVTS01+60                                                03994000
CVTRSCN  EQU   CVTS01+56                                                03995000
CVTTRAC2 EQU   CVTS01+54                                                03996000
CVTTRACE EQU   CVTS01+52                                                03997000
CVTAPG   EQU   CVTS01+51                                                03998000
CVTSDTRC EQU   CVTCTLFG                                                 03999000
CVTGTRCE EQU   CVTCTLFG                                                 04000000
CVTNOMP  EQU   CVTCTLFG                                                 04001000
CVTRSV79 EQU   CVTCTLFG                                                 04002000
CVTDSTAT EQU   CVTCTLFG                                                 04003000
CVTRSV78 EQU   CVTCTLFG                                                 04004000
CVTRV333 EQU   CVTCTLFG                                                 04005000
CVTRV323 EQU   CVTCTLFG                                                 04006000
CVTSPVLK EQU   CVTS01+49                                                04007000
CVTRSV77 EQU   CVTS01+48                                                04008000
CVTRV331 EQU   CVTS01+44                                                04009000
CVTRV330 EQU   CVTS01+40                                                04010000
CVTRV329 EQU   CVTS01+36                                                04011000
CVTRV328 EQU   CVTS01+32                                                04012000
CVTRV322 EQU   CVTS01+28                                                04013000
CVTSLID  EQU   CVTSLIDA+1                                               04014000
CVTSYLK  EQU   CVTSLIDA                                                 04015000
CVTRV321 EQU   CVTS01+20                                                04016000
CVTRV320 EQU   CVTS01+16                                                04017000
CVTLPDIR EQU   CVTLPDIA+1                                               04018000
CVTRSV69 EQU   CVTDIRST                                                 04019000
CVTRSV68 EQU   CVTDIRST                                                 04020000
CVTRSV67 EQU   CVTDIRST                                                 04021000
CVTRSV66 EQU   CVTDIRST                                                 04022000
CVTRSV65 EQU   CVTDIRST                                                 04023000
CVTRSV64 EQU   CVTDIRST                                                 04024000
CVTRSV63 EQU   CVTDIRST                                                 04025000
CVTDICOM EQU   CVTDIRST                                                 04026000
CVTPVTP  EQU   CVTS01+8                                                 04027000
CVTLPDSR EQU   CVTS01+4                                                 04028000
CVTGETL  EQU   CVTS01                                                   04029000
@NM00065 EQU   ASCBADDR                                                 04030000
ASCBRESV EQU   ASCBPREF+6                                               04031000
@NM00064 EQU   CPUSTATS+512                                             04032000
@NM00063 EQU   CPUSTATS+268                                             04033000
@NM00062 EQU   CPUSTATS+232                                             04034000
@NM00061 EQU   CPUSTATS                                                 04035000
@NM00060 EQU   CPUSADRC+3                                               04036000
RECID    EQU   CPUSADRC+1                                               04037000
HDRID    EQU   CPUSADRC                                                 04038000
BUFFADDR EQU   BUFPREFX+4                                               04039000
@NM00059 EQU   BUFPREFX                                                 04040000
RSVFLGS1 EQU   BUFFFLAG                                                 04041000
DATRESV  EQU   PLISTMAP+5                                               04042000
@NM00057 EQU   DATATYPE                                                 04043000
@NM00056 EQU   DATAAD                                                   04044000
DATHIBYT EQU   DATADDR                                                  04045000
REGSAVE  EQU   SAVEMAP+12                                               04046000
LOWSAVE  EQU   SAVEMAP+8                                                04047000
UNUSED   EQU   SAVEMAP                                                  04048000
@NM00053 EQU   SGTBAD                                                   04049000
CVTLEVL  EQU   CVTRELNO+2                                               04050000
CVTNUMB  EQU   CVTRELNO                                                 04051000
CVTMDL   EQU   CVTFIX+250                                               04052000
@NM00049 EQU   CVTFIX+248                                               04053000
@NM00048 EQU   CVTFIX                                                   04054000
CVTRV482 EQU   CVTXTNT2+128                                             04055000
CVTRV481 EQU   CVTXTNT2+124                                             04056000
CVTRV480 EQU   CVTXTNT2+120                                             04057000
CVTRV479 EQU   CVTXTNT2+118                                             04058000
CVTRV478 EQU   CVTXTNT2+117                                             04059000
CVTRV477 EQU   CVTXTNT2+116                                             04060000
CVTRV476 EQU   CVTXTNT2+115                                             04061000
CVTRV475 EQU   CVTXTNT2+114                                             04062000
CVTRV474 EQU   CVTRV466                                                 04063000
CVTRV473 EQU   CVTRV466                                                 04064000
CVTRV472 EQU   CVTRV466                                                 04065000
CVTRV471 EQU   CVTRV466                                                 04066000
CVTRV470 EQU   CVTRV466                                                 04067000
CVTRV469 EQU   CVTRV466                                                 04068000
CVTRV468 EQU   CVTRV466                                                 04069000
CVTRV467 EQU   CVTRV466                                                 04070000
CVTRV465 EQU   CVTRV457                                                 04071000
CVTRV464 EQU   CVTRV457                                                 04072000
CVTRV463 EQU   CVTRV457                                                 04073000
CVTRV462 EQU   CVTRV457                                                 04074000
CVTRV461 EQU   CVTRV457                                                 04075000
CVTRV460 EQU   CVTRV457                                                 04076000
CVTRV459 EQU   CVTRV457                                                 04077000
CVTRV458 EQU   CVTRV457                                                 04078000
CVTRV456 EQU   CVTXTNT2+108                                             04079000
CVTRV455 EQU   CVTXTNT2+104                                             04080000
CVTRV454 EQU   CVTXTNT2+100                                             04081000
CVTRV453 EQU   CVTXTNT2+96                                              04082000
CVTRV452 EQU   CVTXTNT2+94                                              04083000
CVTRV451 EQU   CVTXTNT2+92                                              04084000
CVTRV450 EQU   CVTXTNT2+90                                              04085000
CVTRV449 EQU   CVTXTNT2+88                                              04086000
CVTRV448 EQU   CVTXTNT2+87                                              04087000
CVTRV447 EQU   CVTXTNT2+86                                              04088000
CVTRV446 EQU   CVTRV438                                                 04089000
CVTRV445 EQU   CVTRV438                                                 04090000
CVTRV444 EQU   CVTRV438                                                 04091000
CVTRV443 EQU   CVTRV438                                                 04092000
CVTRV442 EQU   CVTRV438                                                 04093000
CVTRV441 EQU   CVTRV438                                                 04094000
CVTRV440 EQU   CVTRV438                                                 04095000
CVTRV439 EQU   CVTRV438                                                 04096000
CVTRV437 EQU   CVTRV429                                                 04097000
CVTRV436 EQU   CVTRV429                                                 04098000
CVTRV435 EQU   CVTRV429                                                 04099000
CVTRV434 EQU   CVTRV429                                                 04100000
CVTRV433 EQU   CVTRV429                                                 04101000
CVTRV432 EQU   CVTRV429                                                 04102000
CVTRV431 EQU   CVTRV429                                                 04103000
CVTRV430 EQU   CVTRV429                                                 04104000
CVTRV428 EQU   CVTXTNT2+80                                              04105000
CVTRV427 EQU   CVTXTNT2+76                                              04106000
CVTRV426 EQU   CVTXTNT2+72                                              04107000
CVTRV425 EQU   CVTXTNT2+68                                              04108000
CVTATACT EQU   CVTATCVT                                                 04109000
CVTRV423 EQU   CVTXTNT2+62                                              04110000
CVTRV422 EQU   CVTXTNT2+60                                              04111000
CVTRV421 EQU   CVTXTNT2+58                                              04112000
CVTRV420 EQU   CVTXTNT2+56                                              04113000
CVTRV419 EQU   CVTXTNT2+55                                              04114000
CVTRV418 EQU   CVTXTNT2+54                                              04115000
CVTRV417 EQU   CVTRV409                                                 04116000
CVTRV416 EQU   CVTRV409                                                 04117000
CVTRV415 EQU   CVTRV409                                                 04118000
CVTRV414 EQU   CVTRV409                                                 04119000
CVTRV413 EQU   CVTRV409                                                 04120000
CVTRV412 EQU   CVTRV409                                                 04121000
CVTRV411 EQU   CVTRV409                                                 04122000
CVTRV410 EQU   CVTRV409                                                 04123000
CVTRV408 EQU   CVTRV400                                                 04124000
CVTRV407 EQU   CVTRV400                                                 04125000
CVTRV406 EQU   CVTRV400                                                 04126000
CVTRV405 EQU   CVTRV400                                                 04127000
CVTRV404 EQU   CVTRV400                                                 04128000
CVTRV403 EQU   CVTRV400                                                 04129000
CVTRV402 EQU   CVTRV400                                                 04130000
CVTRV401 EQU   CVTRV400                                                 04131000
CVTICB   EQU   CVTXTNT2+48                                              04132000
CVTSKTA  EQU   CVTXTNT2+44                                              04133000
CVTRSV99 EQU   CVTXTNT2+40                                              04134000
CVTRSV98 EQU   CVTXTNT2+36                                              04135000
CVTRSV97 EQU   CVTXTNT2+34                                              04136000
CVTRSV96 EQU   CVTXTNT2+32                                              04137000
CVTOLTEP EQU   CVTXTNT2+28                                              04138000
CVTQIDA  EQU   CVTQID+1                                                 04139000
CVTRSV95 EQU   CVTQID                                                   04140000
CVTRSV94 EQU   CVTXTNT2+20                                              04141000
CVTRSV93 EQU   CVTXTNT2+16                                              04142000
CVTRSV92 EQU   CVTXTNT2+12                                              04143000
CVTDEBVR EQU   CVTXTNT2+8                                               04144000
CVTRSV91 EQU   CVTXTNT2+6                                               04145000
CVTRSV9H EQU   CVTFLGBT                                                 04146000
CVTRSV9G EQU   CVTFLGBT                                                 04147000
CVTRSV9F EQU   CVTFLGBT                                                 04148000
CVTRSV9E EQU   CVTFLGBT                                                 04149000
CVTRSV9D EQU   CVTFLGBT                                                 04150000
CVTRSV9C EQU   CVTFLGBT                                                 04151000
CVTVME   EQU   CVTFLGBT                                                 04152000
CVTNPE   EQU   CVTFLGBT                                                 04153000
CVTNUCLS EQU   CVTXTNT2+4                                               04154000
CVTDSSVA EQU   CVTDSSV+1                                                04155000
CVTRSV89 EQU   CVTDSSV                                                  04156000
CVTRSV88 EQU   CVTXTNT1+8                                               04157000
CVTRSV87 EQU   CVTXTNT1+4                                               04158000
CVTFACHN EQU   CVTXTNT1                                                 04159000
CVTRV488 EQU   CVTMAP+412                                               04160000
CVTRV487 EQU   CVTMAP+408                                               04161000
CVTRV486 EQU   CVTMAP+404                                               04162000
CVTRV485 EQU   CVTMAP+400                                               04163000
CVTACTAP EQU   CVTMAP+396                                               04164000
CVTAUTH  EQU   CVTMAP+392                                               04165000
CVTATMCA EQU   CVTATMCT+1                                               04166000
CVTATMST EQU   CVTATMCT                                                 04167000
CVTRSV61 EQU   CVTMAP+384                                               04168000
CVTVOLT1 EQU   CVTVOLM1+1                                               04169000
CVTVOLI1 EQU   CVTVOLF1                                                 04170000
CVTSTOA  EQU   CVTMAP+376                                               04171000
CVTRSV58 EQU   CVTMAP+374                                               04172000
CVTRSV57 EQU   CVTMAP+372                                               04173000
CVTDDCE  EQU   CVTMAP+368                                               04174000
CVTPNWFR EQU   CVTMAP+364                                               04175000
CVTSMF   EQU   CVTMAP+360                                               04176000
CVTSULK  EQU   CVTMAP+358                                               04177000
CVTSLKO  EQU   CVTSYSK                                                  04178000
CVTSLKP  EQU   CVTSYSK                                                  04179000
CVTSLKQ  EQU   CVTSYSK                                                  04180000
CVTSLKR  EQU   CVTSYSK                                                  04181000
CVTRSV56 EQU   CVTSYSK                                                  04182000
CVTRSV55 EQU   CVTSYSK                                                  04183000
CVTRSV54 EQU   CVTSYSK                                                  04184000
CVTRSV53 EQU   CVTSYSK                                                  04185000
CVTRSV52 EQU   CVTA1F1                                                  04186000
CVTRSV51 EQU   CVTA1F1                                                  04187000
CVTRSV50 EQU   CVTA1F1                                                  04188000
CVTRSV49 EQU   CVTA1F1                                                  04189000
CVTRSV48 EQU   CVTA1F1                                                  04190000
CVTRSV47 EQU   CVTA1F1                                                  04191000
CVTSRSW  EQU   CVTA1F1                                                  04192000
CVTPFSW  EQU   CVTA1F1                                                  04193000
CVTPCVT  EQU   CVTMAP+352                                               04194000
CVTRSV46 EQU   CVTMAP+344                                               04195000
CVTRSV45 EQU   CVTMAP+340                                               04196000
CVTRSV44 EQU   CVTMAP+338                                               04197000
CVTRSV43 EQU   CVTMAP+336                                               04198000
CVTHJESA EQU   CVTHJES+1                                                04199000
CVTRSV42 EQU   CVTHJES                                                  04200000
CVTEXT2A EQU   CVTEXT2+1                                                04201000
CVTRSV41 EQU   CVTEXT2                                                  04202000
CVTAPFA  EQU   CVTAPF+1                                                 04203000
CVTRSV40 EQU   CVTAPF                                                   04204000
CVTRV518 EQU   CVTINTLA                                                 04205000
CVTRV517 EQU   CVTERPV                                                  04206000
CVTEORM  EQU   CVTMAP+312                                               04207000
CVTMCHPR EQU   CVTMAP+308                                               04208000
CVTTZ    EQU   CVTMAP+304                                               04209000
CVTJEPS  EQU   CVTMAP+300                                               04210000
CVTJESCT EQU   CVTMAP+296                                               04211000
CVTMODE  EQU   CVTMAP+292                                               04212000
CVTPTRV  EQU   CVTMAP+288                                               04213000
CVTREAL  EQU   CVTMAP+284                                               04214000
CVTRSV39 EQU   CVTMAP+280                                               04215000
CVTRSV38 EQU   CVTMAP+276                                               04216000
CVTDMSRA EQU   CVTDMSR+1                                                04217000
CVTRSV37 EQU   CVTDMSR                                                  04218000
CVTQMSGA EQU   CVTQMSG+1                                                04219000
CVTRSV36 EQU   CVTQMSG                                                  04220000
CVTAMFF  EQU   CVTMAP+264                                               04221000
CVTPURGA EQU   CVTPURG+1                                                04222000
CVTRSV35 EQU   CVTPURG                                                  04223000
CVTCBSP  EQU   CVTMAP+256                                               04224000
CVTATERA EQU   CVTATER+1                                                04225000
CVTSYST  EQU   CVTATER                                                  04226000
CVTVOLT2 EQU   CVTTAT                                                   04227000
CVTVOLI2 EQU   CVTVOLF2                                                 04228000
CVTAQAVB EQU   CVTAQAVT+1                                               04229000
CVTRSV34 EQU   CVTTCMFG                                                 04230000
CVTRSV33 EQU   CVTTCMFG                                                 04231000
CVTRSV32 EQU   CVTTCMFG                                                 04232000
CVTRSV31 EQU   CVTTCMFG                                                 04233000
CVTRSV30 EQU   CVTTCMFG                                                 04234000
CVTRSV29 EQU   CVTTCMFG                                                 04235000
CVTRSV28 EQU   CVTTCMFG                                                 04236000
CVTTCRDY EQU   CVTTCMFG                                                 04237000
CVTGTFA  EQU   CVTGTF+1                                                 04238000
CVTRSV27 EQU   CVTGTFST                                                 04239000
CVTRNIO  EQU   CVTGTFST                                                 04240000
CVTUSR   EQU   CVTGTFST                                                 04241000
CVTRV318 EQU   CVTFORM                                                  04242000
CVTRV317 EQU   CVTTMODE                                                 04243000
CVTRV316 EQU   CVTSTATE                                                 04244000
CVTRV315 EQU   CVTGTFS                                                  04245000
CVTGTFAV EQU   CVTGTFS                                                  04246000
CVT0SCR1 EQU   CVTMAP+232                                               04247000
CVTRV515 EQU   CVTMAP+228                                               04248000
CVTRMS   EQU   CVTMAP+224                                               04249000
CVTPATCH EQU   CVTMAP+220                                               04250000
CVTTSCE  EQU   CVTMAP+216                                               04251000
CVTLNKSC EQU   CVTMAP+214                                               04252000
CVTQABST EQU   CVTMAP+212                                               04253000
CVTMDLDS EQU   CVTMAP+208                                               04254000
CVTUSER  EQU   CVTMAP+204                                               04255000
CVTABEND EQU   CVTMAP+200                                               04256000
CVTSMCA  EQU   CVTMAP+196                                               04257000
CVTRSV18 EQU   CVTMAP+192                                               04258000
CVTQLPAQ EQU   CVTMAP+188                                               04259000
CVTQCDSR EQU   CVTMAP+184                                               04260000
CVTRSV17 EQU   CVTOPTB                                                  04261000
CVTRSV16 EQU   CVTOPTB                                                  04262000
CVTFP    EQU   CVTOPTB                                                  04263000
CVTAPTHR EQU   CVTOPTB                                                  04264000
CVTNLOG  EQU   CVTOPTB                                                  04265000
CVTTOD   EQU   CVTOPTB                                                  04266000
CVTCTIMS EQU   CVTOPTB                                                  04267000
CVTPROT  EQU   CVTOPTB                                                  04268000
CVTXPFP  EQU   CVTOPTA                                                  04269000
CVTASCII EQU   CVTOPTA                                                  04270000
CVTRSV13 EQU   CVTOPTA                                                  04271000
CVTRSV12 EQU   CVTOPTA                                                  04272000
CVTNIP   EQU   CVTOPTA                                                  04273000
CVTDDR   EQU   CVTOPTA                                                  04274000
CVTAPR   EQU   CVTOPTA                                                  04275000
CVTCCH   EQU   CVTOPTA                                                  04276000
CVTSNCTR EQU   CVTMAP+180                                               04277000
CVTQMWR  EQU   CVTMAP+176                                               04278000
CVTQOCR  EQU   CVTMAP+172                                               04279000
CVT1EF00 EQU   CVTMAP+168                                               04280000
CVTMZ00  EQU   CVTMAP+164                                               04281000
CVTHEAD  EQU   CVTMAP+160                                               04282000
CVTRSV11 EQU   CVTMAP+156                                               04283000
CVT0PT01 EQU   CVTMAP+152                                               04284000
CVTMSER  EQU   CVTMAP+148                                               04285000
CVTRV516 EQU   CVTIERLC                                                 04286000
CVTILCH  EQU   CVTMAP+140                                               04287000
CVT0DS   EQU   CVTMAP+136                                               04288000
CVTFBOSV EQU   CVTMAP+132                                               04289000
CVTNUCB  EQU   CVTMAP+128                                               04290000
CVTIXAVL EQU   CVTMAP+124                                               04291000
CVTIOQET EQU   CVTMAP+120                                               04292000
CVTDCBA  EQU   CVTMAP+117                                               04293000
CVTMVS2  EQU   CVTDCB                                                   04294000
CVT6DAT  EQU   CVTDCB                                                   04295000
CVT4MPS  EQU   CVTDCB                                                   04296000
CVTRSV09 EQU   CVTDCB                                                   04297000
CVT4MS1  EQU   CVTDCB                                                   04298000
CVT2SPS  EQU   CVTDCB                                                   04299000
CVT1SSS  EQU   CVTDCB                                                   04300000
CVTRSV08 EQU   CVTDCB                                                   04301000
CVTSTB   EQU   CVTMAP+112                                               04302000
CVTQTD00 EQU   CVTMAP+108                                               04303000
CVTQTE00 EQU   CVTMAP+104                                               04304000
CVTCUCB  EQU   CVTMAP+100                                               04305000
CVTSJQ   EQU   CVTMAP+96                                                04306000
CVTPBLDL EQU   CVTMAP+92                                                04307000
CVTTPC   EQU   CVTMAP+88                                                04308000
CVTSVDCB EQU   CVTMAP+84                                                04309000
CVTBRET  EQU   CVTMAP+82                                                04310000
CVTEXIT  EQU   CVTMAP+80                                                04311000
CVT0FN00 EQU   CVTMAP+76                                                04312000
CVTDARA  EQU   CVTDAR+1                                                 04313000
CVTRSV07 EQU   CVTFLGS1                                                 04314000
CVTRSV06 EQU   CVTFLGS1                                                 04315000
CVTRSV05 EQU   CVTFLGS1                                                 04316000
CVTRSV04 EQU   CVTFLGS1                                                 04317000
CVTRSV03 EQU   CVTFLGS1                                                 04318000
CVTRSV02 EQU   CVTFLGS1                                                 04319000
CVTRSV01 EQU   CVTFLGS1                                                 04320000
CVTDMPLK EQU   CVTFLGS1                                                 04321000
CVTXITP  EQU   CVTMAP+68                                                04322000
CVTZDTAB EQU   CVTMAP+64                                                04323000
CVTMSLT  EQU   CVTMAP+60                                                04324000
CVTDATE  EQU   CVTMAP+56                                                04325000
CVTBTERM EQU   CVTMAP+52                                                04326000
CVTSYSAD EQU   CVTMAP+48                                                04327000
CVTXTLER EQU   CVTMAP+44                                                04328000
CVTILK2  EQU   CVTMAP+40                                                04329000
CVTILK1  EQU   CVTMAP+36                                                04330000
CVTPRLTV EQU   CVTMAP+32                                                04331000
CVTPCNVT EQU   CVTMAP+28                                                04332000
CVT0VL00 EQU   CVTMAP+24                                                04333000
CVTXAPG  EQU   CVTMAP+20                                                04334000
CVTBUF   EQU   CVTMAP+16                                                04335000
CVTJOB   EQU   CVTMAP+12                                                04336000
CVTLINK  EQU   CVTMAP+8                                                 04337000
CVT0EF00 EQU   CVTMAP+4                                                 04338000
CVTTCBP  EQU   CVTMAP                                                   04339000
CVT      EQU   CVTMAP                                                   04340000
ASCBEND  EQU   ASCB+208                                                 04341000
ASCBSRBT EQU   ASCB+200                                                 04342000
ASCBSWTL EQU   ASCB+196                                                 04343000
ASCBRS14 EQU   ASCB+195                                                 04344000
ASCBSMCT EQU   ASCB+194                                                 04345000
ASCBRS12 EQU   ASCB+192                                                 04346000
ASCBPCTT EQU   ASCB+188                                                 04347000
ASCBVGTT EQU   ASCB+184                                                 04348000
ASCBLGCB EQU   ASCB+180                                                 04349000
ASCBJBNS EQU   ASCB+176                                                 04350000
ASCBJBNI EQU   ASCB+172                                                 04351000
ASCBMCC  EQU   ASCB+168                                                 04352000
ASCBRTWA EQU   ASCB+164                                                 04353000
ASCBIQEA EQU   ASCB+160                                                 04354000
ASCBXMPQ EQU   ASCB+156                                                 04355000
ASCBRS01 EQU   ASCB+154                                                 04356000
ASCBFMCT EQU   ASCB+152                                                 04357000
ASCBOUXB EQU   ASCB+148                                                 04358000
ASCBOUCB EQU   ASCB+144                                                 04359000
ASCBMECB EQU   ASCB+140                                                 04360000
ASCBQECB EQU   ASCB+136                                                 04361000
ASCBCMSB EQU   ASCB+132                                                 04362000
ASCBCMSF EQU   ASCB+128                                                 04363000
ASCBTCBS EQU   ASCB+124                                                 04364000
ASCBNVSC EQU   ASCB+122                                                 04365000
ASCBVSC  EQU   ASCB+120                                                 04366000
ASCBSRBS EQU   ASCB+118                                                 04367000
ASCBSSRB EQU   ASCB+116                                                 04368000
ASCBRV06 EQU   ASCBFLG2                                                 04369000
ASCBRV05 EQU   ASCBFLG2                                                 04370000
ASCBRV04 EQU   ASCBFLG2                                                 04371000
ASCBSNQS EQU   ASCBFLG2                                                 04372000
ASCBS2S  EQU   ASCBFLG2                                                 04373000
ASCBCEXT EQU   ASCBFLG2                                                 04374000
ASCBPXMT EQU   ASCBFLG2                                                 04375000
ASCBXMPT EQU   ASCBFLG2                                                 04376000
ASCBRF07 EQU   ASCBDSP1                                                 04377000
ASCBRF06 EQU   ASCBDSP1                                                 04378000
ASCBRF05 EQU   ASCBDSP1                                                 04379000
ASCBRF04 EQU   ASCBDSP1                                                 04380000
ASCBRF03 EQU   ASCBDSP1                                                 04381000
ASCBRF02 EQU   ASCBDSP1                                                 04382000
ASCBFAIL EQU   ASCBDSP1                                                 04383000
ASCBNOQ  EQU   ASCBDSP1                                                 04384000
ASCBSWCT EQU   ASCB+112                                                 04385000
ASCBASXB EQU   ASCB+108                                                 04386000
ASCBTMCH EQU   ASCB+104                                                 04387000
ASCBNSWP EQU   ASCBFLG1                                                 04388000
ASCBTYP1 EQU   ASCBFLG1                                                 04389000
ASCBSTND EQU   ASCBFLG1                                                 04390000
ASCBABNT EQU   ASCBFLG1                                                 04391000
ASCBTERM EQU   ASCBFLG1                                                 04392000
ASCBS3S  EQU   ASCBFLG1                                                 04393000
ASCBCMSH EQU   ASCBFLG1                                                 04394000
ASCBTOFF EQU   ASCBFLG1                                                 04395000
ASCBRF01 EQU   ASCBRCTF                                                 04396000
ASCBTMLW EQU   ASCBRCTF                                                 04397000
ASCBOUT  EQU   ASCBRCTF                                                 04398000
ASCBWAIT EQU   ASCBRCTF                                                 04399000
ASCBRV08 EQU   ASCBRCTF                                                 04400000
ASCBFQU  EQU   ASCBRCTF                                                 04401000
ASCBFRS  EQU   ASCBRCTF                                                 04402000
ASCBTMNO EQU   ASCBRCTF                                                 04403000
ASCBAFFN EQU   ASCBFW1                                                  04404000
ASCBDUMP EQU   ASCB+96                                                  04405000
ASCBQSVC EQU   ASCB+92                                                  04406000
ASCBUBET EQU   ASCB+88                                                  04407000
ASCBECB  EQU   ASCB+84                                                  04408000
ASCBJSTL EQU   ASCB+80                                                  04409000
ASCBEWST EQU   ASCB+72                                                  04410000
ASCBEJST EQU   ASCB+64                                                  04411000
ASCBTSB  EQU   ASCB+60                                                  04412000
ASCBCSCB EQU   ASCB+56                                                  04413000
ASCBRSM  EQU   ASCB+52                                                  04414000
ASCBLDA  EQU   ASCB+48                                                  04415000
ASCBDP   EQU   ASCB+43                                                  04416000
ASCBRV07 EQU   ASCB+42                                                  04417000
ASCBIOSM EQU   ASCB+40                                                  04418000
ASCBSEQN EQU   ASCB+38                                                  04419000
ASCBCPUS EQU   ASCB+32                                                  04420000
ASCBSPL  EQU   ASCB+28                                                  04421000
ASCBLSLQ EQU   ASCB+24                                                  04422000
ASCBFSLQ EQU   ASCB+20                                                  04423000
ASCBIOSP EQU   ASCB+16                                                  04424000
ASCBLOCK EQU   ASCB+12                                                  04425000
ASCBASCB EQU   ASCB                                                     04426000
ASCBEGIN EQU   ASCB                                                     04427000
@NM00047 EQU   COMMON+2070                                              04428000
TOPICHDR EQU   COMMON+2060                                              04429000
DFLTCSA  EQU   COMMON+2056                                              04430000
LPAMAX   EQU   COMMON+2052                                              04431000
DNUCTOP  EQU   COMMON+2048                                              04432000
XLMAX    EQU   COMMON+2044                                              04433000
DQEMAX   EQU   COMMON+2042                                              04434000
TCBMAX   EQU   COMMON+2038                                              04435000
SRBMAX   EQU   COMMON+2036                                              04436000
DDMAX    EQU   COMMON+2034                                              04437000
DEBMAX   EQU   COMMON+2032                                              04438000
JPQMAX   EQU   COMMON+2030                                              04439000
LLEMAX   EQU   COMMON+2028                                              04440000
PQEMAX   EQU   COMMON+2026                                              04441000
RBMAX    EQU   COMMON+2024                                              04442000
@NM00046 EQU   COMMON+2023                                              04443000
EXITFLAG EQU   COMMON+2022                                              04444000
AUSRASID EQU   COMMON+2020                                              04445000
AUSRTCBA EQU   COMMON+2016                                              04446000
AUSRDEL  EQU   COMMON+2012                                              04447000
AUSREXIT EQU   COMMON+2008                                              04448000
AUSRINIT EQU   COMMON+2004                                              04449000
ASRBFMT  EQU   COMMON+2000                                              04450000
AASCBFMT EQU   COMMON+1996                                              04451000
BRRDADJ  EQU   COMMON+1992                                              04452000
BRRDINIT EQU   COMMON+1988                                              04453000
CPUMAP   EQU   COMMON+1972                                              04454000
ASIDNDX  EQU   COMMON+1968                                              04455000
@NM00045 EQU   COMMON+1964                                              04456000
HDRTITLE EQU   COMMON+1864                                              04457000
SACSWCAW EQU   COMMON+1684                                              04458000
ASVTADDR EQU   COMMON+1680                                              04459000
CURASCB  EQU   COMMON+1668                                              04460000
@NM00044 EQU   COMMON+1656                                              04461000
@NM00043 EQU   COMMON+1641                                              04462000
EDITER   EQU   COMMON+1640                                              04463000
AROOT    EQU   COMMON+1636                                              04464000
AEDITCB  EQU   COMMON+1632                                              04465000
TRCCOUNT EQU   COMMON+1628                                              04466000
ASYSUDCB EQU   @NM00041+1                                               04467000
ENDLIST  EQU   @NM00042                                                 04468000
AINDCB   EQU   DCBADDRS+12                                              04469000
ARDRDCB  EQU   DCBADDRS+8                                               04470000
APTRDCB  EQU   DCBADDRS+4                                               04471000
AOUTDCB  EQU   DCBADDRS                                                 04472000
ATCBSMRY EQU   COMMON+1604                                              04473000
ATCBSMFR EQU   COMMON+1600                                              04474000
ONGOPTR  EQU   COMMON+1596                                              04475000
AEND     EQU   COMMON+1592                                              04476000
AERRMSGA EQU   COMMON+1584                                              04477000
APRTSTG  EQU   COMMON+1572                                              04478000
AFORMAT  EQU   COMMON+1568                                              04479000
ASTPROUT EQU   COMMON+1564                                              04480000
APCBENQ  EQU   COMMON+1560                                              04481000
ATCBRTRV EQU   COMMON+1556                                              04482000
ATCBREMV EQU   COMMON+1552                                              04483000
ATCBSAVE EQU   COMMON+1548                                              04484000
QATMERTN EQU   COMMON+1544                                              04485000
ALOADER  EQU   COMMON+1540                                              04486000
SYNMSGA  EQU   COMMON+1532                                              04487000
STOPEXIT EQU   COMMON+1528                                              04488000
ARGNBND  EQU   COMMON+1524                                              04489000
AWRDCNVT EQU   COMMON+1520                                              04490000
AADRCNVT EQU   COMMON+1516                                              04491000
AFMTLINE EQU   COMMON+1512                                              04492000
ASYNTAX  EQU   COMMON+1508                                              04493000
AWRITE   EQU   COMMON+1500                                              04494000
NONBLNK  EQU   COMMON+1244                                              04495000
BLNK     EQU   COMMON+988                                               04496000
@NM00040 EQU   COMMON+972                                               04497000
@NM00039 EQU   COMMON+915                                               04498000
EBCTABL  EQU   HEXTABL+10                                               04499000
@NM00038 EQU   HEXTABL                                                  04500000
@NM00037 EQU   TABLE                                                    04501000
CAPTABL  EQU   COMMON+403                                               04502000
TITLEPGE EQU   COMMON+394                                               04503000
@NM00036 EQU   COMMON+392                                               04504000
TITLETME EQU   COMMON+379                                               04505000
@NM00035 EQU   COMMON+377                                               04506000
TITLEDTE EQU   COMMON+364                                               04507000
@NM00034 EQU   COMMON+362                                               04508000
TITLEMOD EQU   COMMON+347                                               04509000
TITLEMSG EQU   COMMON+283                                               04510000
MSG2     EQU   COMMON+257                                               04511000
MSG1     EQU   COMMON+231                                               04512000
STOP     EQU   COMMON+227                                               04513000
TITLE    EQU   COMMON+222                                               04514000
BLANKS   EQU   COMMON+214                                               04515000
WTORMSG  EQU   COMMON+133                                               04516000
@NM00033 EQU   COMMON+130                                               04517000
@NM00032 EQU   PRSW                                                     04518000
@NM00031 EQU   PRSW                                                     04519000
PRNTRL   EQU   PRSW                                                     04520000
TTLSW    EQU   PRSW                                                     04521000
@NM00030 EQU   PRSW                                                     04522000
QSEGTBSW EQU   PRSW                                                     04523000
@NM00029 EQU   PRSW                                                     04524000
@NM00028 EQU   BUFSW                                                    04525000
PREFM    EQU   BUFSW                                                    04526000
@NM00027 EQU   BUFSW                                                    04527000
@NM00026 EQU   BUFSW                                                    04528000
@NM00025 EQU   BUFSW                                                    04529000
@NM00024 EQU   BUFSW                                                    04530000
@NM00023 EQU   BUFSW                                                    04531000
@NM00022 EQU   BUFSW                                                    04532000
@NM00021 EQU   SWF                                                      04533000
QUT1LOD  EQU   SWF                                                      04534000
@NM00020 EQU   SWF                                                      04535000
PAGEOK   EQU   SWF                                                      04536000
NUCTFRMC EQU   SWF                                                      04537000
QPRDINIT EQU   SWF                                                      04538000
@NM00019 EQU   SWE                                                      04539000
@NM00018 EQU   SWE                                                      04540000
@NM00017 EQU   SWE                                                      04541000
TITLESW  EQU   SWE                                                      04542000
RESPC    EQU   SWE                                                      04543000
@NM00016 EQU   SWE                                                      04544000
STOPSW   EQU   SWE                                                      04545000
@NM00015 EQU   SWD                                                      04546000
GPRSFND  EQU   SWD                                                      04547000
CONTSW   EQU   SWD                                                      04548000
NOLOADSW EQU   SWD                                                      04549000
NOSTDMG  EQU   SWD                                                      04550000
@NM00014 EQU   SWD                                                      04551000
@NM00013 EQU   SWD                                                      04552000
@NM00012 EQU   SWC                                                      04553000
@NM00011 EQU   SWC                                                      04554000
SEGRD    EQU   SWC                                                      04555000
EDITSW   EQU   SWC                                                      04556000
SETFLSH  EQU   SWC                                                      04557000
@NM00010 EQU   SWB                                                      04558000
@NM00009 EQU   SWB                                                      04559000
ENDSW    EQU   SWB                                                      04560000
@NM00008 EQU   SWB                                                      04561000
@NM00007 EQU   SWB                                                      04562000
IOERR    EQU   SWB                                                      04563000
SETCVTSW EQU   SWA                                                      04564000
@NM00006 EQU   SWA                                                      04565000
GOSW     EQU   SWA                                                      04566000
@NM00005 EQU   SWA                                                      04567000
@NM00004 EQU   SWA                                                      04568000
@NM00003 EQU   SWA                                                      04569000
@NM00002 EQU   SWA                                                      04570000
LINENUM  EQU   COMMON+120                                               04571000
LINENUMB EQU   COMMON+118                                               04572000
SIXTEEN  EQU   COMMON+116                                               04573000
TWELVE   EQU   COMMON+114                                               04574000
ELEVEN   EQU   COMMON+112                                               04575000
HTEN     EQU   COMMON+110                                               04576000
EIGHT    EQU   COMMON+108                                               04577000
SEVEN    EQU   COMMON+106                                               04578000
FIVE     EQU   COMMON+104                                               04579000
FOUR     EQU   COMMON+102                                               04580000
THREE    EQU   COMMON+100                                               04581000
TWO      EQU   COMMON+98                                                04582000
ONEA     EQU   COMMON+96                                                04583000
RDERCNT  EQU   COMMON+88                                                04584000
READNO   EQU   COMMON+84                                                04585000
@NM00001 EQU   COMMON+79                                                04586000
RETCODE  EQU   COMMON+78                                                04587000
FILESEQ  EQU   COMMON+76                                                04588000
STORSIZE EQU   COMMON+64                                                04589000
PCBPTR   EQU   COMMON+60                                                04590000
TCBLIST  EQU   COMMON+52                                                04591000
CURBUF   EQU   COMMON+48                                                04592000
PAGENUMB EQU   COMMON+44                                                04593000
LINECNT  EQU   COMMON+40                                                04594000
SIX      EQU   COMMON+36                                                04595000
DELIMCD  EQU   COMMON+20                                                04596000
KYWDEND  EQU   COMMON+16                                                04597000
KYWDBGN  EQU   COMMON+12                                                04598000
VERBEND  EQU   COMMON+8                                                 04599000
VERBGN   EQU   COMMON+4                                                 04600000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      04601000
@RT00117 EQU   AMD254                                                   04602000
@RT00119 EQU   AMD254                                                   04603000
@RT00131 EQU   CHECKBUF                                                 04604000
@RF00163 EQU   FREESAVE                                                 04605000
TERMINIT EQU   @EL00001                                                 04606000
@RT00181 EQU   FREEXIT                                                  04607000
@RT00188 EQU   FREEXIT                                                  04608000
@RT00214 EQU   CPUREQST                                                 04609000
@RT00216 EQU   REALREQ                                                  04610000
@RT00233 EQU   TESTDATA                                                 04611000
@RT00239 EQU   CHEKSWAP                                                 04612000
@RT00243 EQU   OFFSETSV                                                 04613000
@RT00245 EQU   FORMERR                                                  04614000
@RF00249 EQU   CHEKSEG                                                  04615000
@RT00256 EQU   FORMERR                                                  04616000
@RC00260 EQU   READVIRT                                                 04617000
@RF00263 EQU   READVIRT                                                 04618000
@RT00268 EQU   CHEKSEG                                                  04619000
@RT00296 EQU   READVIRT                                                 04620000
@RT00300 EQU   REALONLY                                                 04621000
@RT00304 EQU   FORMERR                                                  04622000
@RT00306 EQU   FORMERR                                                  04623000
@RT00322 EQU   FORMERR                                                  04624000
@RT00326 EQU   TESTDATA                                                 04625000
@RT00343 EQU   FORMERR                                                  04626000
@RT00354 EQU   FORMERR                                                  04627000
@RT00359 EQU   FORMERR                                                  04628000
@RT00460 EQU   @EL00004                                                 04629000
@RT00516 EQU   ASCBTRM0                                                 04630000
ASERCD10 EQU   ASCBTRM0                                                 04631000
@RT00567 EQU   @EL00005                                                 04632000
@RF00594 EQU   @EL00005                                                 04633000
@RT00607 EQU   INBUF2                                                   04634000
@RF00607 EQU   NXTBUFFR                                                 04635000
@RT00631 EQU   INBUF2                                                   04636000
@RF00631 EQU   NXTBUFFR                                                 04637000
@RF00617 EQU   INBUF2                                                   04638000
@RT00642 EQU   COMPCPU                                                  04639000
@RF00642 EQU   COMPAD                                                   04640000
COMPXIT  EQU   @EL00006                                                 04641000
@RT00699 EQU   DATINVLD                                                 04642000
@RT00708 EQU   DATINVLD                                                 04643000
@RT00713 EQU   DATINVLD                                                 04644000
@RT00716 EQU   DATINVLD                                                 04645000
@RT00727 EQU   DATINVLD                                                 04646000
@RT00732 EQU   DATINVLD                                                 04647000
@RT00742 EQU   DATINVLD                                                 04648000
@RT00754 EQU   DATINVLD                                                 04649000
@RT00759 EQU   DATINVLD                                                 04650000
@RT00763 EQU   DATINVLD                                                 04651000
@RT00766 EQU   DATINVLD                                                 04652000
@RT00776 EQU   DATINVLD                                                 04653000
@RT00781 EQU   DATINVLD                                                 04654000
@RT00784 EQU   DATINVLD                                                 04655000
@RT00100 EQU   TERMINIT                                                 04656000
@ENDDATA EQU   *                                                        04657000
         END   AMDPRRDC,(C'PLS0025',0701,76317)                         04658000
