         TITLE 'AMDPRREC -TIMESTAMP, LOST DATA RECORDS && HEX DUMP     *00001000
                         '                                              00002000
AMDPRCON CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'AMDPRCON  76.159'                                 0001 00009000
AMDPRHEX DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00124-AMDPRHEX)                                   00013000
         ENTRY AMDPRHEX                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  ST    @14,12(,@13)                                        0001 00016000
         STM   @00,@12,20(@13)                                     0001 00017000
         BALR  @11,0                                               0001 00018000
@PSTART  DS    0H                                                  0001 00019000
         USING @PSTART,@11                                         0001 00020000
         ST    @13,@SA00001+4                                      0001 00021000
         LA    @14,@SA00001                                        0001 00022000
         ST    @14,8(,@13)                                         0001 00023000
         LR    @13,@14                                             0001 00024000
         AH    @15,4(,@15)                                         0001 00025000
         BR    @15                                                 0001 00026000
@EP00001 DS    0H                                                  0002 00027000
          EQUATES                      AMDPRDMP EQU MACRO               00028000
          COMMON                       EXPANDS TO AMDPRCOM TABLE        00029000
AMDPRCON  CSECT                        RE-ESTABLISH AMDPRCON CSECT      00030000
          USING COMMON,COMBASE         SET UP DSECT FOR AMDPRCOM        00031000
*   AEDITCBR=AEDITCB;               /* INITIALIZE AMDPRTAB PTR       */ 00032000
         L     AEDITCBR,AEDITCB                                    0074 00033000
*   CON='1'B;                       /* INDICATE AMDPRCON PROCESS     */ 00034000
         OI    CON(AEDITCBR),B'00010000'                           0075 00035000
*   IF RECFID='01'X THEN                                           0076 00036000
         L     @10,CURREC(,AEDITCBR)                               0076 00037000
         CLI   RECFID(@10),X'01'                                   0076 00038000
         BE    @RT00076                                            0076 00039000
*     GOTO AMDPRTS;                 /* TIME STAMP RECORD             */ 00040000
*   IF RECFID='02'X THEN            /* LOST DATA REC           Y02014*/ 00041000
         CLI   RECFID(@10),X'02'                                   0078 00042000
         BE    @RT00078                                            0078 00043000
*     GOTO AMDPRLD;                 /* FORMAT LOST DATA REC    Y02014*/ 00044000
*   IF RECFID='03'X THEN            /* LOST BLOK RECORD        Y02014*/ 00045000
         CLI   RECFID(@10),X'03'                                   0080 00046000
         BE    @RT00080                                            0080 00047000
*     GOTO AMDPRLB;                 /* FORMAT LOST BLK REC     Y02014*/ 00048000
*/********************************************************************/ 00049000
*/*                                                                  */ 00050000
*/* LOST DATA RECORD ROUTINE                                         */ 00051000
*/*                                                                  */ 00052000
*/********************************************************************/ 00053000
*                                                                  0082 00054000
*AMDPRLD:                                                          0082 00055000
*   PARMREG=ADDR(LDPLST);           /* ADDRS LOST DATA FORMAT PTRN   */ 00056000
AMDPRLD  LA    PARMREG,LDPLST                                      0082 00057000
*   CALL AMDTMCHK;                  /* SEE IF TIME STAMP PENDING     */ 00058000
         BAL   @14,AMDTMCHK                                        0083 00059000
*   CALL AMDPRGFR;                  /* FORMAT LOST DATA OUTPUT BUF   */ 00060000
         L     @15,AFMTLINE                                        0084 00061000
         BALR  @14,@15                                             0084 00062000
*   WREG2=RECLSTEV&'7FFFFFFF'X;     /* LOW ORDER 31 BITS             */ 00063000
         L     @10,CURREC(,AEDITCBR)                               0085 00064000
         ICM   WREG2,15,RECLSTEV(@10)                              0085 00065000
         N     WREG2,@CF00347                                      0085 00066000
*   GEN;                                                           0086 00067000
         CVD   WREG2,WORK1             LOST EVENT COUNT TO DECIMAL      00068000
         UNPK  SUBBUF(10),WORK1+2(6)   CONVERT TO PRINTABLE FORM        00069000
*   SUBBUF(10)=SUBBUF(10)|'F0'X;    /* FIX THE SIGN                  */ 00070000
         OI    SUBBUF+9,X'F0'                                      0087 00071000
*/*                                                                  */ 00072000
*/* LEFT JUSTIFY THE NUMBER OF LOST EVENTS IN THE OUTPUT BUFFER      */ 00073000
*/*                                                                  */ 00074000
*                                                                  0088 00075000
*   DO I=1 TO 10-1;                 /* CHECK UP TO TENS DIGIT        */ 00076000
         LA    I,1                                                 0088 00077000
@DL00088 DS    0H                                                  0089 00078000
*     IF SUBBUF(I)^='0' THEN        /* IS IT A LEADING ZERO ?        */ 00079000
         LA    @10,SUBBUF-1(I)                                     0089 00080000
         CLI   0(@10),C'0'                                         0089 00081000
         BNE   @RT00089                                            0089 00082000
*       GOTO AMDLJUST;              /* NO- MOVE STRING               */ 00083000
*   END;                                                           0091 00084000
         AL    I,@CF00045                                          0091 00085000
         C     I,@CF00167                                          0091 00086000
         BNH   @DL00088                                            0091 00087000
*AMDLJUST:                                                         0092 00088000
*   NUMLEBUF(1:10+1-I)=             /* LEFT JUSTIFY                  */ 00089000
*       SUBBUF(I:10);                                              0092 00090000
AMDLJUST L     @10,CURBUF                                          0092 00091000
         LA    @08,11                                              0092 00092000
         SLR   @08,I                                               0092 00093000
         BCTR  @08,0                                               0092 00094000
         LA    @15,SUBBUF-1(I)                                     0092 00095000
         EX    @08,@SM00429                                        0092 00096000
*   GOTO AMDPTIM;                   /* TIME CONVERT ROUTINE          */ 00097000
         B     AMDPTIM                                             0093 00098000
*/********************************************************************/ 00099000
*/*    LOST BLOK RECORD ROUTINE                                Y02014*/ 00100000
*/********************************************************************/ 00101000
*                                                                  0094 00102000
*AMDPRLB:                                                          0094 00103000
*   PARMREG=ADDR(LBPLST);           /* ADDR FORMAT PATTERN     Y02014*/ 00104000
AMDPRLB  LA    PARMREG,LBPLST                                      0094 00105000
*   CALL AMDTMCHK;                  /* SEE IF TIME STAMP PENDING   0095 00106000
*                                                              Y02014*/ 00107000
         BAL   @14,AMDTMCHK                                        0095 00108000
*   CALL AMDPRGFR;                  /* FORMAT BUFFER           Y02014*/ 00109000
         L     @15,AFMTLINE                                        0096 00110000
         BALR  @14,@15                                             0096 00111000
*   GOTO AMDPTIM;                   /* TIME CONVERT RTN        Y02014*/ 00112000
         B     AMDPTIM                                             0097 00113000
*                                                                  0098 00114000
*/********************************************************************/ 00115000
*/*                                                                  */ 00116000
*/* TIME STAMP RECORD ROUTINE                                        */ 00117000
*/*                                                                  */ 00118000
*/********************************************************************/ 00119000
*                                                                  0098 00120000
*AMDPRTS:                                                          0098 00121000
*   PARMREG=ADDR(TSPLST);           /* ADDRS TIME STAMP FORMAT PTR   */ 00122000
AMDPRTS  LA    PARMREG,TSPLST                                      0098 00123000
*   SAVEBUF=CURBUF;                 /* SAVE CURBUF POINTER           */ 00124000
         L     @10,CURBUF                                          0099 00125000
         ST    @10,SAVEBUF                                         0099 00126000
*   CURBUF=ADDR(TSBUF);             /* SET PTR TO TIME STMP BUF      */ 00127000
         LA    @10,TSBUF                                           0100 00128000
         ST    @10,CURBUF                                          0100 00129000
*   ADTSBUF=CURBUF;                 /* MAKE AVAILBL TIME BUF PTR     */ 00130000
         ST    @10,ADTSBUF(,AEDITCBR)                              0101 00131000
*   TSBUF=' ';                      /* INIT TSBUF TO BLANKS          */ 00132000
         MVI   TSBUF+1,C' '                                        0102 00133000
         MVC   TSBUF+2(131),TSBUF+1                                0102 00134000
         MVI   TSBUF,C' '                                          0102 00135000
*   TS='1'B;                        /* TURN ON TIME REC PENDING SW   */ 00136000
         OI    TS(AEDITCBR),B'10000000'                            0103 00137000
*   CALL AMDPRGFR;                  /* FORMAT TIME STAMP BUFFER      */ 00138000
         L     @15,AFMTLINE                                        0104 00139000
         BALR  @14,@15                                             0104 00140000
*/********************************************************************/ 00141000
*/*                                                                  */ 00142000
*/* TIME CONVERSION ROUTINE                                          */ 00143000
*/*                                                                  */ 00144000
*/********************************************************************/ 00145000
*                                                                  0105 00146000
*AMDPTIM:                                                          0105 00147000
*   TIMEBUF='00.00.00.000000';      /* INITIALIZE TIME BUFFER        */ 00148000
AMDPTIM  L     @10,CURBUF                                          0105 00149000
         MVC   TIMEBUF(15,@10),@CC00355                            0105 00150000
*   ADCVTTZ=ADDR(RECVTTZ);          /* ADDR CVT TIME ZONE VALUE      */ 00151000
         L     @10,CURREC(,AEDITCBR)                               0106 00152000
         LA    @08,RECVTTZ(,@10)                                   0106 00153000
         ST    @08,ADCVTTZ                                         0106 00154000
*   ADTODCLK=ADDR(RECTOD);          /* ADDR TOD VALUE                */ 00155000
         LA    @10,RECTOD(,@10)                                    0107 00156000
         ST    @10,ADTODCLK                                        0107 00157000
*   ADTMEBUF=ADDR(TMEBUF);          /* ADDR OUTPUT AREA              */ 00158000
         LA    @10,TMEBUF                                          0108 00159000
         ST    @10,ADTMEBUF                                        0108 00160000
*   PARMREG=ADDR(TIMEPARM);         /* ADDR PARM LIST IN R 1         */ 00161000
         LA    PARMREG,TIMEPARM                                    0109 00162000
*   WREG2=1;                        /* CONVERT TO FULL TIME          */ 00163000
         LA    WREG2,1                                             0110 00164000
*   CALL TODCNVRT;                  /* CALL TOD CONVERSION RTN       */ 00165000
         L     @15,QATMERTN                                        0111 00166000
         BALR  @14,@15                                             0111 00167000
*/********************************************************************/ 00168000
*/*                                                                  */ 00169000
*/* PRINT LOST DATA RECORD AND TERMINATE - TIME STAMP, REINIT BUF PTR*/ 00170000
*/*                                                                  */ 00171000
*/********************************************************************/ 00172000
*                                                                  0112 00173000
*AMDPRIT:                                                          0112 00174000
*   IF RECFID='01'X THEN            /* IF TIME STAMP RECORD          */ 00175000
AMDPRIT  L     @10,CURREC(,AEDITCBR)                               0112 00176000
         CLI   RECFID(@10),X'01'                                   0112 00177000
         BNE   @RF00112                                            0112 00178000
*     DO;                           /* THEN DO THE FOLLOWING         */ 00179000
*                                                                  0113 00180000
*       /*************************************************************/ 00181000
*       /*                                                           */ 00182000
*       /* INSERT RESULTS IN OUTPUT BUFFER                           */ 00183000
*       /*                                                           */ 00184000
*       /*************************************************************/ 00185000
*                                                                  0114 00186000
*       DAYBUF=DAYYR;               /* DAY TO OUTPUT BUF             */ 00187000
         L     @10,CURBUF                                          0114 00188000
         MVC   DAYBUF(3,@10),DAYYR                                 0114 00189000
*       YRBUF=YEAR;                 /* YEAR TO OUT BUF               */ 00190000
         MVC   YRBUF(4,@10),YEAR                                   0115 00191000
*       TIMEBUF=TOD;                /* TIME TO OUT BUF               */ 00192000
         MVC   TIMEBUF(15,@10),TOD                                 0116 00193000
*       CURBUF=SAVEBUF;             /* REINITIALIZE CURBUF           */ 00194000
         L     @10,SAVEBUF                                         0117 00195000
         ST    @10,CURBUF                                          0117 00196000
*       GOTO AMDRET;                /* RETURN TO AMDPRFRM            */ 00197000
         B     AMDRET                                              0118 00198000
*     END;                                                         0119 00199000
*   TIMEBUF=TOD;                    /* TIME TO BUFFER          Y02014*/ 00200000
@RF00112 L     @10,CURBUF                                          0120 00201000
         MVC   TIMEBUF(15,@10),TOD                                 0120 00202000
*   GEN(BRWRITE 2);                 /* PRINT OUTPUT BUFFER     Y02014*/ 00203000
         BRWRITE 2                                                      00204000
*AMDRET:                                                           0122 00205000
*   CON='0'B;                       /* INDICATE AMDPRCON TERM        */ 00206000
AMDRET   NI    CON(AEDITCBR),B'11101111'                           0122 00207000
*   RETURN;                         /* RETURN TO AMDPRFRM            */ 00208000
@EL00001 L     @13,4(,@13)                                         0123 00209000
@EF00001 DS    0H                                                  0123 00210000
@ER00001 L     @14,12(,@13)                                        0123 00211000
         LM    @00,@12,20(@13)                                     0123 00212000
         BR    @14                                                 0123 00213000
*AMDPRHEX:                                                         0124 00214000
*   ENTRY;                          /* ENTRY FOR HEX DUMP            */ 00215000
@EP00124 DS    0H                                                  0125 00216000
*   RFY                                                            0125 00217000
*    (RECPTR2) RSTD;                /* REG2 FOR RECORD STRUCTURE   0125 00218000
*                                                              Y02014*/ 00219000
*   AEDITCBR=AEDITCB;               /* PUT ADDR OF AMDPRTAB IN BASE  */ 00220000
         L     AEDITCBR,AEDITCB                                    0126 00221000
*   HEX='1'B;                       /* INDICATE AMDPRHEX IN PROCESS  */ 00222000
         OI    HEX(AEDITCBR),B'00001000'                           0127 00223000
*   CALL AMDTMCHK;                  /* PRINT TIME STMP, IF PENDING   */ 00224000
         BAL   @14,AMDTMCHK                                        0128 00225000
*   IF GET='1'B THEN                /* CONTROL FROM GET        Y02014*/ 00226000
         TM    GET(AEDITCBR),B'00100000'                           0129 00227000
         BNO   @RF00129                                            0129 00228000
*     DO;                           /* YES                     Y02014*/ 00229000
*       IF FIRSTHSW='0'B THEN       /* FIRST CALL              Y02014*/ 00230000
         TM    FIRSTHSW(AEDITCBR),B'00010000'                      0131 00231000
         BNZ   @RF00131                                            0131 00232000
*         DO;                       /* YES                     Y02014*/ 00233000
*           OFFSET=0;               /* BEGINNING OFFSET        Y02014*/ 00234000
         SLR   @10,@10                                             0133 00235000
         STH   @10,OFFSET                                          0133 00236000
*           GEN(BRWRITE SKIP);      /* SKIP TO NEW PAGE        Y02014*/ 00237000
         BRWRITE SKIP                                                   00238000
*           FIRSTHSW='1'B;          /* FIRST PASS DONE         Y02014*/ 00239000
         OI    FIRSTHSW(AEDITCBR),B'00010000'                      0135 00240000
*         END;                      /*                         Y02014*/ 00241000
*       ELSE                                                       0137 00242000
*         OFFSET=OFFSET+32;         /* INCREMENT OFFSET        Y02014*/ 00243000
         B     @RC00131                                            0137 00244000
@RF00131 LA    @10,32                                              0137 00245000
         AH    @10,OFFSET                                          0137 00246000
         STH   @10,OFFSET                                          0137 00247000
*       CALL CONVRT;                /* DO CONVERSION           Y02014*/ 00248000
@RC00131 BAL   @14,CONVRT                                          0138 00249000
*       GOTO HEXDONE;               /* PREPARE FOR RETURN      Y02014*/ 00250000
         B     HEXDONE                                             0139 00251000
*     END;                          /* END OF GET PROCESSING   Y02014*/ 00252000
*   TIMEADJ=0;                      /* SET TIME-STAMP ADJUSTMENT     */ 00253000
*                                                                  0141 00254000
@RF00129 SLR   TIMEADJ,TIMEADJ                                     0141 00255000
*   /*****************************************************************/ 00256000
*   /*                                                               */ 00257000
*   /* SET THE POINTER TO THE EID FIELD OF CURRENT RECORD            */ 00258000
*   /*                                                               */ 00259000
*   /*****************************************************************/ 00260000
*                                                                  0142 00261000
*   IF OPTTIME='1'B THEN            /* IS TIME-STAMP IN REC    Y02014*/ 00262000
         L     @10,GTFWDPTR(,AEDITCBR)                             0142 00263000
         TM    OPTTIME(@10),B'00000001'                            0142 00264000
         BNO   @RF00142                                            0142 00265000
*     DO;                                                          0143 00266000
*       RECPTR2=CURREC+14;          /* YES, INCLUDE TIME-STAMP REC 0144 00267000
*                                      LENGTH FOR EID PTR      Y02014*/ 00268000
         LA    RECPTR2,14                                          0144 00269000
         AL    RECPTR2,CURREC(,AEDITCBR)                           0144 00270000
*       TIMEADJ=8;                  /* LENGTH OF TIME DATA RECORD    */ 00271000
         LA    TIMEADJ,8                                           0145 00272000
*     END;                          /*                         Y02014*/ 00273000
*   ELSE                                                           0147 00274000
*     RECPTR2=CURREC+6;             /* OTHERWISE OMIT TIME LENGTH    */ 00275000
         B     @RC00142                                            0147 00276000
@RF00142 LA    RECPTR2,6                                           0147 00277000
         AL    RECPTR2,CURREC(,AEDITCBR)                           0147 00278000
*   IF EIDFRST^='1110'B THEN        /* IF EID DOES NOT BEGIN WITH    */ 00279000
@RC00142 TM    EIDFRST(RECPTR2),B'11100000'                        0148 00280000
         BNO   @RT00148                                            0148 00281000
         TM    EIDFRST(RECPTR2),B'00010000'                        0148 00282000
         BZ    @RF00148                                            0148 00283000
@RT00148 DS    0H                                                  0149 00284000
*     DMPLABEL=SYSTEM;              /* HEX E THEN A SYSTEM LABEL IS     00285000
*                                      PUT ON THE OUTPUT             */ 00286000
         MVI   DMPLABEL+6,C' '                                     0149 00287000
         MVC   DMPLABEL+7(2),DMPLABEL+6                            0149 00288000
         MVC   DMPLABEL(6),SYSTEM                                  0149 00289000
*   ELSE                                                           0150 00290000
*                                                                  0150 00291000
*     /***************************************************************/ 00292000
*     /*                                                             */ 00293000
*     /* MUST TEST FID TO DETERMINE FORMAT OUTPUT LABEL              */ 00294000
*     /*                                                             */ 00295000
*     /***************************************************************/ 00296000
*                                                                  0150 00297000
*     IF HEXFID='00'X THEN          /* DO FID INDICATE HEX FORMAT    */ 00298000
         B     @RC00148                                            0150 00299000
@RF00148 L     @10,CURREC(,AEDITCBR)                               0150 00300000
         CLI   HEXFID(@10),X'00'                                   0150 00301000
         BNE   @RF00150                                            0150 00302000
*       DMPLABEL=HEXFORMT;          /* YES, MOVE TITLE FOR PATTERN   */ 00303000
         MVC   DMPLABEL(9),HEXFORMT                                0151 00304000
*     ELSE                                                         0152 00305000
*       IF HEXFID<='50'X            /* IS IT A USER FORMAT ?         */ 00306000
*         THEN                      /* YES, PUT IN THE USER LABEL    */ 00307000
         B     @RC00150                                            0152 00308000
@RF00150 L     @10,CURREC(,AEDITCBR)                               0152 00309000
         CLI   HEXFID(@10),X'50'                                   0152 00310000
         BH    @RF00152                                            0152 00311000
*         DMPLABEL=USER;                                           0153 00312000
         MVI   DMPLABEL+4,C' '                                     0153 00313000
         MVC   DMPLABEL+5(4),DMPLABEL+4                            0153 00314000
         MVC   DMPLABEL(4),USER                                    0153 00315000
*       ELSE                                                       0154 00316000
*         DMPLABEL=SUBSYS;          /* IT MUST BE A SUBSYS FORMAT    */ 00317000
*                                                                  0154 00318000
         B     @RC00152                                            0154 00319000
@RF00152 MVI   DMPLABEL+6,C' '                                     0154 00320000
         MVC   DMPLABEL+7(2),DMPLABEL+6                            0154 00321000
         MVC   DMPLABEL(6),SUBSYS                                  0154 00322000
*   /*****************************************************************/ 00323000
*   /*                                                               */ 00324000
*   /* PUT THE ADDRESS OF ID FEILDS IN THE FORMAT PATTERN            */ 00325000
*   /*                                                               */ 00326000
*   /*****************************************************************/ 00327000
*                                                                  0155 00328000
*   DATAPTR=ADDR(HEXAID);           /* PUT IN AID DATA ADDRESS       */ 00329000
@RC00152 DS    0H                                                  0155 00330000
@RC00150 DS    0H                                                  0155 00331000
@RC00148 L     @10,CURREC(,AEDITCBR)                               0155 00332000
         LA    @10,HEXAID(,@10)                                    0155 00333000
         ST    @10,DATAPTR                                         0155 00334000
*   EIDPTR=ADDR(HEXEID);            /* PUT IN EID DATA ADDRESS       */ 00335000
*                                                                  0156 00336000
         ST    RECPTR2,EIDPTR                                      0156 00337000
*   /*****************************************************************/ 00338000
*   /*                                                               */ 00339000
*   /* GO FORMAT THE ID AND LABEL FIELDS OF FIRST LINE               */ 00340000
*   /*                                                               */ 00341000
*   /*****************************************************************/ 00342000
*                                                                  0157 00343000
*   RFY                                                            0157 00344000
*    (PARMREG) RSTD;                /* USED FOR CALLS          Y02014*/ 00345000
*   PARMREG=ADDR(LINEONE);          /* POINT TO LINE ONE PATTERN     */ 00346000
         LA    PARMREG,LINEONE                                     0158 00347000
*   CALL AMDPRGFR;                  /* GO FORMAT LINE ONE            */ 00348000
*                                                                  0159 00349000
         L     @15,AFMTLINE                                        0159 00350000
         BALR  @14,@15                                             0159 00351000
*   /*****************************************************************/ 00352000
*   /*                                                               */ 00353000
*   /* THE FOLLOWING CODE WILL DETERMINE THE NO. OF LINES NEEDED TO  */ 00354000
*   /* FORMAT THE CURRENT RECORD AND LOOPS VIA NUMBER OF LINES       */ 00355000
*   /* CONTROL, PRINTING THE HEX DATA AND THE EBCDIC TRANSLATION     */ 00356000
*   /*                                                               */ 00357000
*   /*****************************************************************/ 00358000
*                                                                  0160 00359000
*   OFFSET=0;                       /* INITIALIZE DATA OFFSET CNTR   */ 00360000
*                                                                  0160 00361000
         SLR   @10,@10                                             0160 00362000
         STH   @10,OFFSET                                          0160 00363000
*   /*****************************************************************/ 00364000
*   /*                                                               */ 00365000
*   /* GET NUMBER OF LINES TO PRINT                                  */ 00366000
*   /*                                                               */ 00367000
*   /*****************************************************************/ 00368000
*                                                                  0161 00369000
*   LINES=(LENGTH-(TIMEADJ+8))/24;                                 0161 00370000
*                                                                  0161 00371000
         LA    @10,24                                              0161 00372000
         L     @08,CURREC(,AEDITCBR)                               0161 00373000
         LA    @07,8                                               0161 00374000
         ALR   @07,TIMEADJ                                         0161 00375000
         LCR   @07,@07                                             0161 00376000
         SLR   @00,@00                                             0161 00377000
         ICM   @00,3,LENGTH(@08)                                   0161 00378000
         ALR   @07,@00                                             0161 00379000
         LR    @14,@07                                             0161 00380000
         SRDA  @14,32                                              0161 00381000
         DR    @14,@10                                             0161 00382000
         STH   @15,LINES                                           0161 00383000
*   /*****************************************************************/ 00384000
*   /*                                                               */ 00385000
*   /* NUMBER OF BYTES IN SHORT LINE IF THERE IS ONE                 */ 00386000
*   /*                                                               */ 00387000
*   /*****************************************************************/ 00388000
*                                                                  0162 00389000
*   PARTLN=(LENGTH-(TIMEADJ+8))//24;                               0162 00390000
*                                                                  0162 00391000
         LR    @14,@07                                             0162 00392000
         SRDA  @14,32                                              0162 00393000
         DR    @14,@10                                             0162 00394000
         STH   @14,PARTLN                                          0162 00395000
*   /*****************************************************************/ 00396000
*   /*                                                               */ 00397000
*   /* LOOP FROM HERE IF MORE THAN ONE LINE IS TO BE PRINTED         */ 00398000
*   /*                                                               */ 00399000
*   /*****************************************************************/ 00400000
*                                                                  0163 00401000
*AMDCKLN:                                                          0163 00402000
*   IF LINES=0 THEN                                                0163 00403000
AMDCKLN  LH    @06,LINES                                           0163 00404000
         LTR   @06,@06                                             0163 00405000
         BZ    @RT00163                                            0163 00406000
*     GOTO AMDSHORT;                /* GO SEE IF THERE IS A SHORT  0164 00407000
*                                      LINE TO PRINT                 */ 00408000
*   CONVAMT=24;                     /* SET AMOUNT TO 24 FOR CONVRT   */ 00409000
         MVC   CONVAMT(2),@CH00101                                 0165 00410000
*   CALL CONVRT;                    /* GO CONVERT AND PRINT A LINE   */ 00411000
         BAL   @14,CONVRT                                          0166 00412000
*   LINES=LINES-1;                  /* DECREMENT LINE COUNT BY ONE   */ 00413000
         LH    @10,LINES                                           0167 00414000
         BCTR  @10,0                                               0167 00415000
         STH   @10,LINES                                           0167 00416000
*   OFFSET=OFFSET+24;               /* SET OFFSET TO NEXT LINE       */ 00417000
         LA    @10,24                                              0168 00418000
         LH    @08,OFFSET                                          0168 00419000
         ALR   @08,@10                                             0168 00420000
         STH   @08,OFFSET                                          0168 00421000
*   IF OFFSET=24&                   /* IF THIS IS SECOND LINE        */ 00422000
*       OPTTIME='1'B                /* AND TIME STAMPING OF EACH   0169 00423000
*                                      RECORD                  Y02014*/ 00424000
*     THEN                                                         0169 00425000
         CR    @08,@10                                             0169 00426000
         BNE   @RF00169                                            0169 00427000
         L     @10,GTFWDPTR(,AEDITCBR)                             0169 00428000
         TM    OPTTIME(@10),B'00000001'                            0169 00429000
         BNO   @RF00169                                            0169 00430000
*     CALL PRTME;                   /* GO FORMAT TIME VALUE          */ 00431000
         L     @10,AFRMAD(,AEDITCBR)                               0170 00432000
         L     @15,ATME(,@10)                                      0170 00433000
         BALR  @14,@15                                             0170 00434000
*   GOTO AMDCKLN;                   /* GO SET-UP NEXT LINE TO PRINT  */ 00435000
         B     AMDCKLN                                             0171 00436000
*AMDSHORT:                          /* COME HERE WHEN LINES = ZERO   */ 00437000
*   IF PARTLN^=0 THEN               /* PART LINE IS TO BE PRINTED    */ 00438000
AMDSHORT LH    @10,PARTLN                                          0172 00439000
         LTR   @10,@10                                             0172 00440000
         BZ    @RF00172                                            0172 00441000
*     DO;                                                          0173 00442000
*       CONVAMT=PARTLN;             /* SET AMOUNT TO CONVERT EQUAL TO   00443000
*                                      LENGTH OF PARTIAL LINE        */ 00444000
         STH   @10,CONVAMT                                         0174 00445000
*       CALL CONVRT;                /* GO SET UP PARTIAL LINE        */ 00446000
         BAL   @14,CONVRT                                          0175 00447000
*     END;                                                         0176 00448000
*   IF OPTTIME='1'B THEN            /* TEST FOR USER TIME-STAMP-N    */ 00449000
@RF00172 L     @10,GTFWDPTR(,AEDITCBR)                             0177 00450000
         TM    OPTTIME(@10),B'00000001'                            0177 00451000
         BNO   @RF00177                                            0177 00452000
*     DO;                           /*                         Y02014*/ 00453000
*       IF OFFSET=0 THEN            /* ONLY ONE LINE PRINTED M4466   */ 00454000
         LH    @10,OFFSET                                          0179 00455000
         SLR   @08,@08                                             0179 00456000
         CR    @10,@08                                             0179 00457000
         BE    @RT00179                                            0179 00458000
*         GO TO PRINTTME;           /* PRINT TIMESTAMP REC M4466     */ 00459000
*       IF OFFSET=24&               /* CATCH CASE - EXACTLY 1 LN     */ 00460000
*           PARTLN=0 THEN           /* OCCURS WITH SYSM REC M4466    */ 00461000
         C     @10,@CF00101                                        0181 00462000
         BNE   @RF00181                                            0181 00463000
         CH    @08,PARTLN                                          0181 00464000
         BNE   @RF00181                                            0181 00465000
*PRINTTME:                                                         0182 00466000
*         DO;                       /* YES, PRINT T-STAMP M4466      */ 00467000
PRINTTME DS    0H                                                  0183 00468000
*           CALL AMDPRTME;          /* GO FORMAT TIME STAMP M4466    */ 00469000
         BAL   @14,AMDPRTME                                        0183 00470000
*           GEN(BRWRITE  1);        /* PRINT TIMESTAMP REC M4466     */ 00471000
         BRWRITE  1                                                     00472000
*         END PRINTTME;                                            0185 00473000
*     END;                                                         0186 00474000
@RF00181 DS    0H                                                  0187 00475000
*HEXDONE:                                                          0187 00476000
*   HEX='0'B;                       /* INDICATE AMDPRHEX FINISHED    */ 00477000
@RF00177 DS    0H                                                  0187 00478000
HEXDONE  NI    HEX(AEDITCBR),B'11110111'                           0187 00479000
*   RTNCODE=8;                      /* RETURN CODE IS ALWAYS EIGHT   */ 00480000
         LA    RTNCODE,8                                           0188 00481000
*   RETURN;                                                        0189 00482000
         B     @EL00001                                            0189 00483000
*                                                                  0190 00484000
*   /*****************************************************************/ 00485000
*   /*                                                               */ 00486000
*   /* THIS ROUTINE USES HEXCNVT MACRO TO CONVERT TO PRINTABLE HEX   */ 00487000
*   /* THE LINE AS ADDRESS BY THE OFFSET VALUE. IT USES THE EBCDIC   */ 00488000
*   /* TRANSLATION TABLE IN IMPRCOM TO TRANSLATE THE LINE TO EBCDIC  */ 00489000
*   /* AND USES BRWRITE TO PRINT THE LINE                            */ 00490000
*   /*                                                               */ 00491000
*   /*****************************************************************/ 00492000
*                                                                  0190 00493000
*CONVRT:                                                           0190 00494000
*   PROC;                           /* COME HERE TO CONVERT A LINE   */ 00495000
CONVRT   STM   @14,@12,@SA00002                                    0190 00496000
*   RFY                                                            0191 00497000
*    (CONOUTA,                                                     0191 00498000
*     REG3,                                                        0191 00499000
*     CONDATA,                                                     0191 00500000
*     CONLNTH,                                                     0191 00501000
*     REG9,                                                        0191 00502000
*     REG12);                       /*                         Y02014*/ 00503000
*   DCL                                                            0192 00504000
*     CONOUTA REG(2) PTR(31);       /* OUTPUT BUFFER DISPLACEMENT    */ 00505000
*   DCL                                                            0193 00506000
*     CONDATA REG(4) PTR(31);       /* ADDR OF DATA TO CONVERT       */ 00507000
*   DCL                                                            0194 00508000
*     CONLNTH REG(5) PTR(31);       /* LENGTH OF DATA TO CONVERT     */ 00509000
*   DCL                                                            0195 00510000
*     REG3 REG(3) PTR(31);          /* NEEDED FOR CONVERSION   Y02014*/ 00511000
*   DCL                                                            0196 00512000
*     REG9 REG(9) PTR(31);          /* NEEDED FOR CONVERSION   Y02014*/ 00513000
*   DCL                                                            0197 00514000
*     REG12 REG(12) PTR(31);        /* NEEDED FOR CONVERSION   Y02014*/ 00515000
*   DCL                                                            0198 00516000
*     1 * CHAR(26) BASED(CURBUF)    /* OUTPUT EBCDIC MAP       Y02014*/ 00517000
*           POSITION(95),                                          0198 00518000
*      2 AST1 CHAR(1),              /* FIRST ASTERISK                */ 00519000
*      2 EBCDIC CHAR(24),           /* TRANSLATE DATA                */ 00520000
*      2 AST2 CHAR(1);              /* LAST ASTERISK                 */ 00521000
*   DCL                                                            0199 00522000
*     1 * CHAR(34) BASED(CURBUF)    /* OUTPUT EBCDIC MAP       Y02014*/ 00523000
*           POSITION(87),           /* FOR DUMPING BUFFER      Y02014*/ 00524000
*      2 AST1LONG CHAR(1),          /* FIRST ASTERISK          Y02014*/ 00525000
*      2 EBCDICL CHAR(32),          /* TRANSLATE DATA          Y02014*/ 00526000
*      2 AST2LONG CHAR(1);          /* LAST ASTERISK           Y02014*/ 00527000
*   IF GET='1'B THEN                /* CALLED FROM GET         Y02014*/ 00528000
         TM    GET(AEDITCBR),B'00100000'                           0200 00529000
         BNO   @RF00200                                            0200 00530000
*     DO;                                                          0201 00531000
*       AST1LONG='*';               /* MOVE IN FIRST ASTERISK  Y02014*/ 00532000
         L     @10,CURBUF                                          0202 00533000
         MVI   AST1LONG(@10),C'*'                                  0202 00534000
*       AST2LONG='*';               /* MOVE IN SECOND ASTERISK Y02014*/ 00535000
         MVI   AST2LONG(@10),C'*'                                  0203 00536000
*       CONOUTA=CURBUF+5;           /* POINT TO OFFSET OUT AREA    0204 00537000
*                                                              Y02014*/ 00538000
         AL    @10,@CF00086                                        0204 00539000
         LR    CONOUTA,@10                                         0204 00540000
*       CONDATA=ADDR(OFFSET);       /* POINT TO OFFSET BYTE    Y02014*/ 00541000
         LA    CONDATA,OFFSET                                      0205 00542000
*       CONLNTH=2;                  /* LENGTH TO CONVERT IS TWO    0206 00543000
*                                                              Y02014*/ 00544000
         LA    CONLNTH,2                                           0206 00545000
*       GEN(HEXCNVT   (2),(4),(5)); /* CONVERT OFFSET BYTE     Y02014*/ 00546000
         HEXCNVT   (2),(4),(5)                                          00547000
*       CONOUTA=CONOUTA+6;          /* BUMP OUT AREA TO DATA AREA    */ 00548000
         AL    CONOUTA,@CF00110                                    0208 00549000
*       CONDATA=CURREC;             /* POINT TO DATA TO CONVERT    0209 00550000
*                                                              Y02014*/ 00551000
         L     CONDATA,CURREC(,AEDITCBR)                           0209 00552000
*       CONLNTH=32;                 /* GET AMOUNT TO CONVERT   Y02014*/ 00553000
         LA    CONLNTH,32                                          0210 00554000
*       GEN(HEXCNVT   (2),(4),(5)); /* CONVERT DATA            Y02014*/ 00555000
         HEXCNVT   (2),(4),(5)                                          00556000
*       CONOUTA=ADDR(EBCDICL);      /* POINT TO EBCDIC DATA AREA   0212 00557000
*                                                              Y02014*/ 00558000
         L     @10,CURBUF                                          0212 00559000
         LA    CONOUTA,EBCDICL(,@10)                               0212 00560000
*       EBCDICL=DATA(1:32);         /* MOVE UNTRANSLATED DATA  Y02014*/ 00561000
*                                                                  0213 00562000
         L     @08,CURREC(,AEDITCBR)                               0213 00563000
         MVC   EBCDICL(32,@10),DATA(@08)                           0213 00564000
*       /*************************************************************/ 00565000
*       /*                                                           */ 00566000
*       /* TRANSLATE THE HEX TO EBCDIC AND PRINT THE LINE      Y02014*/ 00567000
*       /*                                                           */ 00568000
*       /*************************************************************/ 00569000
*                                                                  0214 00570000
*       GEN(TR 0(32,CONOUTA),TABLE);/* TRANSLATE USING AMDPRCOM TAB  */ 00571000
         TR 0(32,CONOUTA),TABLE                                         00572000
*       GEN(BRWRITE   1);           /* PRINT THE LINE          Y02014*/ 00573000
         BRWRITE   1                                                    00574000
*     END;                                                         0216 00575000
*   ELSE                                                           0217 00576000
*     DO;                           /* DUMPING RECORD IN HEX   Y02014*/ 00577000
         B     @RC00200                                            0217 00578000
@RF00200 DS    0H                                                  0218 00579000
*       AST1='*';                   /* MOVE IN FIRST ASTERISK        */ 00580000
         L     @10,CURBUF                                          0218 00581000
         MVI   AST1(@10),C'*'                                      0218 00582000
*       AST2='*';                   /* MOVE IN SECOND ASTERISK       */ 00583000
         MVI   AST2(@10),C'*'                                      0219 00584000
*       CONOUTA=CURBUF+35;          /* POINT TO OFFSET OUT AREA      */ 00585000
         AL    @10,@CF00402                                        0220 00586000
         LR    CONOUTA,@10                                         0220 00587000
*       CONDATA=ADDR(OFFSET);       /* POINT TO OFFSET BYTE          */ 00588000
         LA    CONDATA,OFFSET                                      0221 00589000
*       CONLNTH=2;                  /* LENGTH TO CONVERT IS ONE      */ 00590000
         LA    CONLNTH,2                                           0222 00591000
*       GEN(HEXCNVT   (2),(4),(5)); /* CONVERT OFFSET BYTE           */ 00592000
         HEXCNVT   (2),(4),(5)                                          00593000
*       CONOUTA=CONOUTA+5;          /* BUMP OUT AREA TO DATA AREA    */ 00594000
         AL    CONOUTA,@CF00086                                    0224 00595000
*       CONDATA=ADDR(HEXDATA)+OFFSET;/* POINT TO DATA TO CONVERT     */ 00596000
         LA    CONDATA,HEXDATA(,RECPTR2)                           0225 00597000
         AH    CONDATA,OFFSET                                      0225 00598000
*       CONLNTH=CONVAMT;            /* GET AMOUNT TO CONVERT         */ 00599000
         LH    CONLNTH,CONVAMT                                     0226 00600000
*       GEN(HEXCNVT   (2),(4),(5)); /* CONVERT DATA                  */ 00601000
         HEXCNVT   (2),(4),(5)                                          00602000
*       CONOUTA=ADDR(EBCDIC);       /* POINT TO EBCDIC DATA AREA     */ 00603000
*                                                                  0228 00604000
         L     @10,CURBUF                                          0228 00605000
         LA    CONOUTA,EBCDIC(,@10)                                0228 00606000
*       /*************************************************************/ 00607000
*       /*                                                           */ 00608000
*       /* RESET DATA POINTER                                        */ 00609000
*       /*                                                           */ 00610000
*       /*************************************************************/ 00611000
*                                                                  0229 00612000
*       CONDATA=ADDR(HEXDATA)+OFFSET-2;                            0229 00613000
         LA    CONDATA,HEXDATA(,RECPTR2)                           0229 00614000
         AH    CONDATA,OFFSET                                      0229 00615000
         BCTR  CONDATA,0                                           0229 00616000
         BCTR  CONDATA,0                                           0229 00617000
*       CONLNTH=CONVAMT;            /* RESET AMOUNT TO CONVERT       */ 00618000
         LH    CONLNTH,CONVAMT                                     0230 00619000
*       EBCDIC=CONDATA->HEXDATA(1:CONLNTH);/* MOVE UNTRANSLATED DATA    00620000
*                                      SO IT CAN BE TRANSLATED       */ 00621000
*                                                                  0231 00622000
         MVI   EBCDIC+1(@10),C' '                                  0231 00623000
         MVC   EBCDIC+2(22,@10),EBCDIC+1(@10)                      0231 00624000
         LR    @08,CONLNTH                                         0231 00625000
         BCTR  @08,0                                               0231 00626000
         EX    @08,@SM00435                                        0231 00627000
*       /*************************************************************/ 00628000
*       /*                                                           */ 00629000
*       /* TRANSLATE THE HEX TO EBCDIC AND PRINT THE LINE            */ 00630000
*       /*                                                           */ 00631000
*       /*************************************************************/ 00632000
*                                                                  0232 00633000
*       GEN(TR 0(24,CONOUTA),TABLE);/* TRANSLATE USING AMDPRCOM TAB  */ 00634000
         TR 0(24,CONOUTA),TABLE                                         00635000
*       GEN(BRWRITE   1);           /* PRINT THE LINE                */ 00636000
         BRWRITE   1                                                    00637000
*     END;                                                         0234 00638000
*   END CONVRT;                                                    0235 00639000
@EL00002 DS    0H                                                  0235 00640000
@EF00002 DS    0H                                                  0235 00641000
@ER00002 LM    @14,@12,@SA00002                                    0235 00642000
         BR    @14                                                 0235 00643000
*                                                                  0236 00644000
*/********************************************************************/ 00645000
*/* THIS SUBROUTINE DETERMINES IF A TIME STAMP RECORD IS TO BE       */ 00646000
*/*  OUTPUTTED BEFORE THE CURRENT TRACE RECORD.                Y02014*/ 00647000
*/********************************************************************/ 00648000
*                                                                  0236 00649000
*AMDTMCHK:                                                         0236 00650000
*   PROC;                           /* STANDARD LINKAGE        Y02014*/ 00651000
AMDTMCHK STM   @14,@12,@SA00003                                    0236 00652000
*   DCL                                                            0237 00653000
*     TEMPBUF REG(2) PTR(31);       /* TIME STAMP RECORD BUF   Y02014*/ 00654000
*   IF TS='0'B THEN                 /* TS RECORD PENDING       Y02014*/ 00655000
         TM    TS(AEDITCBR),B'10000000'                            0238 00656000
         BZ    @RT00238                                            0238 00657000
*     GOTO AMDEND;                  /* NO RETURN               Y02014*/ 00658000
*   GEN(BRWRITE 2,IMM);             /* 2 BLANK LINES NEEDED    Y02014*/ 00659000
         BRWRITE 2,IMM                                                  00660000
*   TEMPBUF=CURBUF;                 /* SAVE CURBUF VALUE       Y02014*/ 00661000
         L     TEMPBUF,CURBUF                                      0241 00662000
*   CURBUF=ADTSBUF;                 /* POINT TO TS RECORD      Y02014*/ 00663000
         L     @10,ADTSBUF(,AEDITCBR)                              0242 00664000
         ST    @10,CURBUF                                          0242 00665000
*   GEN(BRWRITE 2);                 /* OUTPUT TS AND BLANK     Y02014*/ 00666000
         BRWRITE 2                                                      00667000
*   TS='0'B;                        /* NO TS PENDING INDICATOR Y02014*/ 00668000
         NI    TS(AEDITCBR),B'01111111'                            0244 00669000
*   CURBUF=TEMPBUF;                 /* RESTORE CURBUF PTR      Y02014*/ 00670000
         ST    TEMPBUF,CURBUF                                      0245 00671000
*AMDEND:                                                           0246 00672000
*   RETURN;                         /* RETURN TO USER          Y02014*/ 00673000
@EL00003 DS    0H                                                  0246 00674000
@EF00003 DS    0H                                                  0246 00675000
@ER00003 LM    @14,@12,@SA00003                                    0246 00676000
         BR    @14                                                 0246 00677000
*   END;                            /* END OF PROCEDURE        Y02014*/ 00678000
         B     @EL00003                                            0247 00679000
*                                                                  0248 00680000
*/*AMDPRTME:  CHART (AMODE)                                          */ 00681000
*/*AMDPRTME:  HEADER                                               0248 00682000
*/*      AMDPRTME - USER TIME STAMP CONVERSION SUBROUTINE            */ 00683000
*/*AMDPRTME: E ENTRY                                                 */ 00684000
*/*      P MOVE TIME LABEL TO BUFFER                                 */ 00685000
*/*      D (YES,TMETOD,NO,) GTF OPTS INDICATE TOD?                   */ 00686000
*/*      N TIME VALUE IS TIMER UNITS                                 */ 00687000
*/*      P (,%DIV) MULTIPLY BY 26.04 TO GET U-SECS                   */ 00688000
*/*TMETOD:  N TOD - RIGTH 12 BITS ARE UNUSED                         */ 00689000
*/*      P SHIFT CLOCK VALUE RIGHT 12 BITS                           */ 00690000
*/*%DIV:  P DIVIDE BY 6.0 * (10 EXP 7)                               */ 00691000
*/*      N QUOTIENT - MIN SINCE BEGIN OF EPOCH                       */ 00692000
*/*      N REMAINDER - SECOND, IN U-SECS SINCE BEGIN EPOCH           */ 00693000
*/*      P DIVIDE REMAINDER BY (10 EXP 6) TO GET SECS                */ 00694000
*/*      P SAVE QUOTIENT (SECONDS)                                   */ 00695000
*/*      P CONVERT REMAINDER FOR OUTPUT (U-SECONDS)                  */ 00696000
*/*      P MOVE '.' TO OUTPUT VALUE                                  */ 00697000
*/*      P DIVIDE MINUTES BY 1440                                    */ 00698000
*/*      N DISCARD QUOTIENT                                          */ 00699000
*/*      P MULTI BY 60 TO CONVERT TO SECONDS                         */ 00700000
*/*      P ADD QUOTIENT FOR U-SEC CALCULATION                        */ 00701000
*/*      P CONVERT SECOND FOR OUTPUT                                 */ 00702000
*/*      R RETURN                                                    */ 00703000
*                                                                  0248 00704000
*AMDPRTME:                                                         0248 00705000
*   PROC OPTIONS(NOSAVEAREA);                                      0248 00706000
*                                                                  0248 00707000
AMDPRTME STM   @14,@12,12(@13)                                     0248 00708000
*/********************************************************************  00709000
*                                                                    */ 00710000
*/*                                                                  */ 00711000
*/*                  CONSTANTS USED ONLY BY AMDPRTME                 */ 00712000
*/*                                                                  */ 00713000
*/********************************************************************  00714000
*                                                                    */ 00715000
*/* MAP OF TME OUTPUT IN CURRENT OUTPUT BUFFER                       */ 00716000
*                                                                  0249 00717000
*   DCL                                                            0249 00718000
*     1 TMEMAP BASED(CURBUF) POSITION(12),                         0249 00719000
*      2 TMELAB CHAR(4),                                           0249 00720000
*      2 * CHAR(4),                                                0249 00721000
*      2 TMEVAL CHAR(12);                                          0249 00722000
*                                                                  0249 00723000
*   /*****************************************************************/ 00724000
*   /*                                                               */ 00725000
*   /* PREFIX OF TRACE REC WITH TIMESTAMPING                         */ 00726000
*   /*                                                               */ 00727000
*   /*****************************************************************/ 00728000
*                                                                  0250 00729000
*   DCL                                                            0250 00730000
*     1 PREFIX BASED(CURREC),                                      0250 00731000
*      2 * CHAR(6),                 /* LL, AID, FID                  */ 00732000
*      2 TODA CHAR(4),              /* TOD VALUE                     */ 00733000
*      2 TODB BIT(32);              /* TOD VALUE                     */ 00734000
*/* CONSTANT - 60 MILLION                                            */ 00735000
*                                                                  0251 00736000
*   DCL                                                            0251 00737000
*     SIXTMIL FIXED(31) INIT(60000000);                            0251 00738000
*   RFY                                                            0252 00739000
*    (WREG2,                                                       0252 00740000
*     EVEN,                                                        0252 00741000
*     ODD,                                                         0252 00742000
*     COMMONRG) RSTD;               /* NEEDED FOR CONVERSIONS  Y02014*/ 00743000
*   GEN;                                                           0253 00744000
         ENTRY AMDPRTME                GET NAME IN ESD - THIS CAN-T BE  00745000
*                                     DONE THROUGH PLS BECAUSE PROC     00746000
*                                     STMT OVERRIDES DCL                00747000
         BALR  BASE1,0                                                  00748000
         USING *,BASE1                                                  00749000
*   TMELAB='TIME';                  /* SET TIME LABEL IN OUTPUT    0254 00750000
*                                      BUFFER                        */ 00751000
         L     @10,CURBUF                                          0254 00752000
         MVC   TMELAB(4,@10),@CC00422                              0254 00753000
*   EVEN=TODA;                      /* LOAD EVEN-ODD REGISTER PAIR   */ 00754000
         L     @10,CURREC(,AEDITCBR)                               0255 00755000
         ICM   EVEN,15,TODA(@10)                                   0255 00756000
*   EVEN=EVEN+CVTTZONE;             /* WITH DOUBLE WORD TOD VALUE  0256 00757000
*                                                              Y02014*/ 00758000
         ICM   @08,15,CVTTZONE(AEDITCBR)                           0256 00759000
         ALR   EVEN,@08                                            0256 00760000
*   ODD=TODB;                       /* CONVERT TO GMT                */ 00761000
         ICM   ODD,15,TODB(@10)                                    0257 00762000
*   GEN(SRDL  EVEN,12);             /* SHIFT OUT LOW ORDER 12 BITS 0258 00763000
*                                      WHICH ARE UNUSED              */ 00764000
         SRDL  EVEN,12                                                  00765000
*   GEN(D  EVEN,SIXTMIL);           /* DIVIDE BY 6.0 * (10 EXP 7) TO    00766000
*                                      GET: Q - MINUTES SINCE BEGIN     00767000
*                                      OF EPOCH R - SECONDS, IN MICRO   00768000
*                                      SECS SINCE BEGIN OF EPOCH     */ 00769000
         D  EVEN,SIXTMIL                                                00770000
*   SECONDS=EVEN/1000000;           /* SAVE SECONDS TO BE ADDED INTO    00771000
*                                      SECONDS SINCE MIDNITE         */ 00772000
         L     @10,@CF00423                                        0260 00773000
         LR    @14,EVEN                                            0260 00774000
         SRDA  @14,32                                              0260 00775000
         DR    @14,@10                                             0260 00776000
         LR    SECONDS,@15                                         0260 00777000
*   EVEN=EVEN//1000000;             /* MICRO-SECONDS VALUE FOR OUTPUT*/ 00778000
         LR    @14,EVEN                                            0261 00779000
         SRDA  @14,32                                              0261 00780000
         DR    @14,@10                                             0261 00781000
         LR    EVEN,@14                                            0261 00782000
*   WREG2=ADDR(TMEVAL(7));          /* POINT OT OUTPUT AREA          */ 00783000
         L     WREG2,CURBUF                                        0262 00784000
         LA    WREG2,TMEVAL+6(,WREG2)                              0262 00785000
*   GEN;                                                           0263 00786000
         CVD   EVEN,WORK1              CONVERT TO DECIMAL               00787000
         UNPK  0(6,WREG2),WORK1+4(4)                                    00788000
         OI    5(WREG2),X'F0'          SET SIGN                         00789000
*   TMEVAL(6)='.';                  /* DOT TO SEPARATE SECONDS FROM     00790000
*                                      MICRO-SECONDS                 */ 00791000
*                                                                  0264 00792000
         L     @10,CURBUF                                          0264 00793000
         MVI   TMEVAL+5(@10),C'.'                                  0264 00794000
*   /*****************************************************************/ 00795000
*   /*                                                               */ 00796000
*   /* COMPUTE SECONDS VALUE USING MINUTES SINCE BEGINNING OF EPOCH  */ 00797000
*   /* FROM ODD REGISTER                                             */ 00798000
*   /*                                                               */ 00799000
*   /*****************************************************************/ 00800000
*                                                                  0265 00801000
*   EVEN=((ODD//1440)*60)+SECONDS;                                 0265 00802000
         LR    @14,ODD                                             0265 00803000
         SRDA  @14,32                                              0265 00804000
         D     @14,@CF00425                                        0265 00805000
         MH    @14,@CH00426                                        0265 00806000
         ALR   @14,SECONDS                                         0265 00807000
         LR    EVEN,@14                                            0265 00808000
*   WREG2=ADDR(TMEVAL(1));          /* POINT TO OUTPUT AREA          */ 00809000
         LA    WREG2,TMEVAL(,@10)                                  0266 00810000
*   GEN;                                                           0267 00811000
         CVD   EVEN,WORK1              CONVERT TO DECIMAL               00812000
         UNPK  0(5,WREG2),WORK1+4(4)                                    00813000
         OI    4(WREG2),X'F0'          SET SIGN                         00814000
*   END AMDPRTME;                                                  0268 00815000
@EL00004 DS    0H                                                  0268 00816000
@EF00004 DS    0H                                                  0268 00817000
@ER00004 LM    @14,@12,12(@13)                                     0268 00818000
         BR    @14                                                 0268 00819000
*   GEN(USING @PSTART,11);          /* RESET BASE REGISTER     Y02014*/ 00820000
         USING @PSTART,11                                               00821000
*   END AMDPRCON                                                   0270 00822000
*                                                                  0270 00823000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00824000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 00825000
*/*%INCLUDE SYSLIB  (AMDOPTWD)                                       */ 00826000
*/*%INCLUDE SYSLIB  (RECMAP  )                                       */ 00827000
*                                                                  0270 00828000
*       ;                                                          0270 00829000
         B     @EL00001                                            0270 00830000
@DATA    DS    0H                                                       00831000
@CH00426 DC    H'60'                                                    00832000
@SM00429 MVC   NUMLEBUF(0,@10),0(@15)                                   00833000
@SM00435 MVC   EBCDIC(0,@10),HEXDATA(CONDATA)                           00834000
         DS    0F                                                       00835000
@SA00001 DS    18F                                                      00836000
@SA00002 DS    15F                                                      00837000
@SA00003 DS    15F                                                      00838000
         DS    0F                                                       00839000
@CF00045 DC    F'1'                                                     00840000
@CF00086 DC    F'5'                                                     00841000
@CF00110 DC    F'6'                                                     00842000
@CF00167 DC    F'9'                                                     00843000
@CF00101 DC    F'24'                                                    00844000
@CH00101 EQU   @CF00101+2                                               00845000
@CF00402 DC    F'35'                                                    00846000
@CF00425 DC    F'1440'                                                  00847000
@CF00423 DC    F'1000000'                                               00848000
@CF00347 DC    XL4'7FFFFFFF'                                            00849000
         DS    0D                                                       00850000
UNIT     DC    F'2604'                                                  00851000
HIGH     DC    F'1302'                                                  00852000
FACTOR   DC    F'100000000'                                             00853000
SAVEBUF  DS    A                                                        00854000
SIXTMIL  DC    F'60000000'                                              00855000
HOURS    DS    F                                                        00856000
MINUTES  DS    F                                                        00857000
OFFSET   DC    H'0'                                                     00858000
LINES    DC    H'0'                                                     00859000
PARTLN   DC    H'0'                                                     00860000
CONVAMT  DC    H'0'                                                     00861000
@CC00355 DC    C'00.00.00.000000'                                       00862000
@CC00422 DC    C'TIME'                                                  00863000
SUBBUF   DS    CL10                                                     00864000
         DS    CL3                                                      00865000
TIMEPARM DS    CL12                                                     00866000
         ORG   TIMEPARM                                                 00867000
ADCVTTZ  DS    AL4                                                      00868000
ADTODCLK DS    AL4                                                      00869000
ADTMEBUF DS    AL4                                                      00870000
         ORG   TIMEPARM+12                                              00871000
TMEBUF   DS    CL22                                                     00872000
         ORG   TMEBUF                                                   00873000
YEAR     DS    CL4                                                      00874000
DAYYR    DS    CL3                                                      00875000
TOD      DS    CL15                                                     00876000
         ORG   TMEBUF+22                                                00877000
TSBUF    DS    CL133                                                    00878000
LABAREA  DS    CL18                                                     00879000
         ORG   LABAREA                                                  00880000
DMPLABEL DC    CL9' '                                                   00881000
@NM00003 DC    CL3'AID'                                                 00882000
@NM00004 DC    CL3'FID'                                                 00883000
@NM00005 DC    CL3'EID'                                                 00884000
         ORG   LABAREA+18                                               00885000
HEXFORMT DC    CL9'HEXFORMAT'                                           00886000
USER     DC    CL4'USR'                                                 00887000
SYSTEM   DC    CL6'SYSTEM'                                              00888000
SUBSYS   DC    CL6'SUBSYS'                                              00889000
RECPTCH  DC    CL200'RECPTCH'                                           00890000
AMDPRCON CSECT                                                          00891000
TSPLST    FMTPTRN (LBL,LBLP),14,0,0,0,TSLABS                            00892000
          FMTPTRN (LBL),4,0,22,0                                        00893000
          FMTPTRN (LBL),4,0,43,0                                        00894000
          FMTPTRN (LBL),3,0,117,0,,,LAST                                00895000
TSLABS    DC    CL25'*** DATE   DAYYEARTIME***'                         00896000
LDPLST    FMTPTRN (LBL,LBLP),15,0,0,0,LDLABS                            00897000
          FMTPTRN (LBL),3,0,18,0                                        00898000
          FMTPTRN (LBL,LBLP),4,0,43,0,TSLABS+18                         00899000
          FMTPTRN (LBL),3,0,117,0,,,LAST                                00900000
LBPLST    FMTPTRN (LBL,LBLP),15,0,0,0,LBLABS                     Y02014 00901000
          FMTPTRN (LBL),15,0,15,0                                Y02014 00902000
          FMTPTRN (LBL),5,0,30,0                                 Y02014 00903000
          FMTPTRN (LBL,LBLP),4,0,43,0,TSLABS+18                  Y02014 00904000
          FMTPTRN (LBL),3,0,117,0,,,LAST                         Y02014 00905000
LDLABS    DC    CL21'*** LOST EVENTSNUM'                                00906000
LBLABS    DC    CL35'*** ONE 4096 BYTE TRACE BUFFER LOST'        Y02014 00907000
AMDPRCON CSECT                                                          00908000
LINEONE  FMTPTRN (LBL,LBLP),9,,0,,(LABAREA)      HEAD LABEL             00909000
* AID FIELD PATTERN                                                     00910000
          FMTPTRN (LBL,DTA,DTAP,DTAC),3,1,10,14,,(DATAPTR,0)            00911000
* FID FIELD PATTERN                                                     00912000
          FMTPTRN (LBL,DTA,DTAC),3,1,17,21                              00913000
* EID FIELD PATTERN                                                     00914000
          FMTPTRN (LBL,DTA,DTAP,DTAC),3,2,24,29,,(EIDPTR,0),LAST        00915000
AMDPRCON CSECT                                                          00916000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00917000
@01      EQU   01                                                       00918000
@02      EQU   02                                                       00919000
@03      EQU   03                                                       00920000
@04      EQU   04                                                       00921000
@05      EQU   05                                                       00922000
@06      EQU   06                                                       00923000
@07      EQU   07                                                       00924000
@08      EQU   08                                                       00925000
@09      EQU   09                                                       00926000
@10      EQU   10                                                       00927000
@11      EQU   11                                                       00928000
@12      EQU   12                                                       00929000
@13      EQU   13                                                       00930000
@14      EQU   14                                                       00931000
@15      EQU   15                                                       00932000
TIMEADJ  EQU   @06                                                      00933000
SECONDS  EQU   @06                                                      00934000
I        EQU   @03                                                      00935000
COMMONRG EQU   @12                                                      00936000
AEDITCBR EQU   @09                                                      00937000
PARMREG  EQU   @01                                                      00938000
WREG2    EQU   @02                                                      00939000
EVEN     EQU   @04                                                      00940000
ODD      EQU   @05                                                      00941000
RECPTR2  EQU   @03                                                      00942000
RTNCODE  EQU   @15                                                      00943000
CONOUTA  EQU   @02                                                      00944000
REG3     EQU   @03                                                      00945000
CONDATA  EQU   @04                                                      00946000
CONLNTH  EQU   @05                                                      00947000
REG9     EQU   @09                                                      00948000
REG12    EQU   @12                                                      00949000
TEMPBUF  EQU   @02                                                      00950000
RECPTR1  EQU   @02                                                      00951000
         ENTRY RECPTCH                                                  00952000
AMDPRTAB EQU   0                                                        00953000
CURREC   EQU   AMDPRTAB+4                                               00954000
DEBGFLGS EQU   AMDPRTAB+8                                               00955000
PTHFLGS1 EQU   DEBGFLGS                                                 00956000
GET      EQU   PTHFLGS1                                                 00957000
CON      EQU   PTHFLGS1                                                 00958000
HEX      EQU   PTHFLGS1                                                 00959000
PTHFLGS2 EQU   DEBGFLGS+1                                               00960000
INRFCFGS EQU   DEBGFLGS+2                                               00961000
IOFLGS   EQU   DEBGFLGS+3                                               00962000
GTFWDPTR EQU   AMDPRTAB+20                                              00963000
STARTIME EQU   AMDPRTAB+40                                              00964000
STOPTIME EQU   AMDPRTAB+52                                              00965000
NAMES    EQU   AMDPRTAB+64                                              00966000
ADS      EQU   AMDPRTAB+104                                             00967000
AADS     EQU   ADS                                                      00968000
SIF      EQU   AMDPRTAB+124                                             00969000
SIOFLGS  EQU   SIF                                                      00970000
DVADS1   EQU   AMDPRTAB+128                                             00971000
IO       EQU   AMDPRTAB+228                                             00972000
IOFLGS2  EQU   IO                                                       00973000
DVADS2   EQU   AMDPRTAB+232                                             00974000
VCF      EQU   AMDPRTAB+332                                             00975000
SVCFLGS  EQU   VCF                                                      00976000
USR      EQU   AMDPRTAB+368                                             00977000
USRFLGS  EQU   USR                                                      00978000
USRTAB   EQU   AMDPRTAB+372                                             00979000
PI       EQU   AMDPRTAB+452                                             00980000
PIFLGS   EQU   PI                                                       00981000
PGMNGEN  EQU   AMDPRTAB+456                                             00982000
GENFLAGS EQU   PGMNGEN+3                                                00983000
GENFLGS1 EQU   AMDPRTAB+460                                             00984000
TS       EQU   GENFLGS1                                                 00985000
FIRSTHSW EQU   GENFLGS1                                                 00986000
AFRMAD   EQU   AMDPRTAB+488                                             00987000
ADTSBUF  EQU   AMDPRTAB+496                                             00988000
ESTARTME EQU   AMDPRTAB+500                                             00989000
ESTOPTME EQU   AMDPRTAB+509                                             00990000
CVTTZONE EQU   AMDPRTAB+518                                             00991000
AMDOPTWD EQU   0                                                        00992000
OPTS1    EQU   AMDOPTWD                                                 00993000
OPTS2    EQU   AMDOPTWD+1                                               00994000
OPTS3    EQU   AMDOPTWD+2                                               00995000
OPTS4    EQU   AMDOPTWD+3                                               00996000
OPTTIME  EQU   OPTS4                                                    00997000
FRMATAB  EQU   0                                                        00998000
AGET     EQU   FRMATAB                                                  00999000
AHEX     EQU   FRMATAB+4                                                01000000
ACON     EQU   FRMATAB+8                                                01001000
AFLT     EQU   FRMATAB+12                                               01002000
AAPP     EQU   FRMATAB+16                                               01003000
AEXT     EQU   FRMATAB+20                                               01004000
ASPI     EQU   FRMATAB+28                                               01005000
ATME     EQU   FRMATAB+32                                               01006000
PRTME    EQU   0                                                        01007000
RECMAP   EQU   0                                                        01008000
RECFID   EQU   RECMAP+5                                                 01009000
RECTIME  EQU   RECMAP+6                                                 01010000
RECVTTZ  EQU   RECTIME                                                  01011000
RECTOD   EQU   RECTIME+4                                                01012000
RECGTFOP EQU   RECMAP+18                                                01013000
RECLSTEV EQU   RECGTFOP                                                 01014000
SVHKREC  EQU   0                                                        01015000
SVHKDATA EQU   SVHKREC+6                                                01016000
AMDPRGFR EQU   0                                                        01017000
NUMLEBUF EQU   23                                                       01018000
DAYBUF   EQU   16                                                       01019000
YRBUF    EQU   28                                                       01020000
TIMEBUF  EQU   49                                                       01021000
TODCNVRT EQU   0                                                        01022000
RECPART1 EQU   0                                                        01023000
LENGTH   EQU   RECPART1                                                 01024000
HEXAID   EQU   RECPART1+4                                               01025000
HEXFID   EQU   RECPART1+5                                               01026000
RECPART2 EQU   0                                                        01027000
HEXEID   EQU   RECPART2                                                 01028000
EIDFRST  EQU   HEXEID                                                   01029000
HEXDATA  EQU   RECPART2+2                                               01030000
DATA     EQU   0                                                        01031000
@NM00007 EQU   94                                                       01032000
AST1     EQU   @NM00007                                                 01033000
EBCDIC   EQU   @NM00007+1                                               01034000
AST2     EQU   @NM00007+25                                              01035000
@NM00008 EQU   86                                                       01036000
AST1LONG EQU   @NM00008                                                 01037000
EBCDICL  EQU   @NM00008+1                                               01038000
AST2LONG EQU   @NM00008+33                                              01039000
TMEMAP   EQU   11                                                       01040000
TMELAB   EQU   TMEMAP                                                   01041000
TMEVAL   EQU   TMEMAP+8                                                 01042000
PREFIX   EQU   0                                                        01043000
TODA     EQU   PREFIX+6                                                 01044000
TODB     EQU   PREFIX+10                                                01045000
BLDBUF   EQU   1                                                        01046000
PRAPP    EQU   0                                                        01047000
PRCON    EQU   0                                                        01048000
PREXT    EQU   0                                                        01049000
PRFLT    EQU   0                                                        01050000
PRGET    EQU   0                                                        01051000
PRHEX    EQU   0                                                        01052000
PRSPI    EQU   0                                                        01053000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01054000
@NM00010 EQU   PREFIX                                                   01055000
@NM00009 EQU   TMEMAP+4                                                 01056000
HEXTIME  EQU   RECPART1+6                                               01057000
@NM00006 EQU   RECPART1+2                                               01058000
SVHKTCB  EQU   SVHKDATA+4                                               01059000
SVHKASID EQU   SVHKDATA+2                                               01060000
SVHKEID  EQU   SVHKDATA                                                 01061000
SVHKAFID EQU   SVHKREC+4                                                01062000
@NM00002 EQU   SVHKREC+2                                                01063000
SVHKLEN  EQU   SVHKREC                                                  01064000
RECAID   EQU   RECMAP+4                                                 01065000
RECRES1  EQU   RECMAP+2                                                 01066000
RECLL    EQU   RECMAP                                                   01067000
FRMRES1  EQU   FRMATAB+36                                               01068000
APRFMG   EQU   FRMATAB+24                                               01069000
OPTRES3  EQU   OPTS4                                                    01070000
OPTIOSIO EQU   OPTS3                                                    01071000
OPTRES2  EQU   OPTS3                                                    01072000
OPTRR    EQU   OPTS3                                                    01073000
OPTSRM   EQU   OPTS3                                                    01074000
OPTRNIO  EQU   OPTS3                                                    01075000
OPTEXT   EQU   OPTS3                                                    01076000
OPTIOP   EQU   OPTS2                                                    01077000
OPTIO    EQU   OPTS2                                                    01078000
OPTPIP   EQU   OPTS2                                                    01079000
OPTPI    EQU   OPTS2                                                    01080000
OPTSIOP  EQU   OPTS2                                                    01081000
OPTSIO   EQU   OPTS2                                                    01082000
OPTSVCP  EQU   OPTS2                                                    01083000
OPTSVC   EQU   OPTS2                                                    01084000
OPTPCI   EQU   OPTS1                                                    01085000
OPTRES1  EQU   OPTS1                                                    01086000
OPTDSP   EQU   OPTS1                                                    01087000
OPTTRC   EQU   OPTS1                                                    01088000
OPTUSR   EQU   OPTS1                                                    01089000
OPTSYS   EQU   OPTS1                                                    01090000
OPTSYSP  EQU   OPTS1                                                    01091000
OPTSYSM  EQU   OPTS1                                                    01092000
RESERVED EQU   AMDPRTAB+522                                             01093000
ESPSEC   EQU   ESTOPTME+7                                               01094000
ESPMIN   EQU   ESTOPTME+5                                               01095000
ESPHR    EQU   ESTOPTME+3                                               01096000
ESPDAY   EQU   ESTOPTME                                                 01097000
ESSEC    EQU   ESTARTME+7                                               01098000
ESMIN    EQU   ESTARTME+5                                               01099000
ESHR     EQU   ESTARTME+3                                               01100000
ESDAY    EQU   ESTARTME                                                 01101000
OFSTDATA EQU   AMDPRTAB+494                                             01102000
OFSTEID  EQU   AMDPRTAB+492                                             01103000
REENTWKA EQU   AMDPRTAB+484                                             01104000
PRFMTADD EQU   AMDPRTAB+480                                             01105000
AEIOCT   EQU   AMDPRTAB+476                                             01106000
EXITADDR EQU   AMDPRTAB+472                                             01107000
EXITNM   EQU   AMDPRTAB+464                                             01108000
RECDLL   EQU   AMDPRTAB+461                                             01109000
@NM00001 EQU   GENFLGS1                                                 01110000
TSFOUND  EQU   GENFLGS1                                                 01111000
EOFINPRO EQU   GENFLGS1                                                 01112000
EOF      EQU   GENFLAGS                                                 01113000
RR       EQU   GENFLAGS                                                 01114000
SRM      EQU   GENFLAGS                                                 01115000
RNIO     EQU   GENFLAGS                                                 01116000
SYSM     EQU   GENFLAGS                                                 01117000
SYS      EQU   GENFLAGS                                                 01118000
DSP      EQU   GENFLAGS                                                 01119000
EXT      EQU   GENFLAGS                                                 01120000
PICODEA  EQU   PGMNGEN+2                                                01121000
PICODES  EQU   PGMNGEN                                                  01122000
Q        EQU   PI+1                                                     01123000
P01R     EQU   PIFLGS                                                   01124000
SELP     EQU   PIFLGS                                                   01125000
ALLP     EQU   PIFLGS                                                   01126000
USRNGTAB EQU   USRTAB                                                   01127000
O        EQU   USR+1                                                    01128000
N01R     EQU   USRFLGS                                                  01129000
SELU     EQU   USRFLGS                                                  01130000
ALLU     EQU   USRFLGS                                                  01131000
SVCNUMS  EQU   AMDPRTAB+336                                             01132000
M        EQU   VCF+1                                                    01133000
L        EQU   SVCFLGS                                                  01134000
SELV     EQU   SVCFLGS                                                  01135000
ALLV     EQU   SVCFLGS                                                  01136000
IODVADS  EQU   DVADS2                                                   01137000
K01RES   EQU   IO+1                                                     01138000
JJ       EQU   IOFLGS2                                                  01139000
SELI     EQU   IOFLGS2                                                  01140000
ALLI     EQU   IOFLGS2                                                  01141000
SIODVADS EQU   DVADS1                                                   01142000
II       EQU   SIF+1                                                    01143000
H        EQU   SIOFLGS                                                  01144000
NOEQU    EQU   SIOFLGS                                                  01145000
EQUIV    EQU   SIOFLGS                                                  01146000
SELS     EQU   SIOFLGS                                                  01147000
ALLS     EQU   SIOFLGS                                                  01148000
ASCBADDR EQU   AADS                                                     01149000
JOBNAMES EQU   NAMES                                                    01150000
DAY2     EQU   STOPTIME+10                                              01151000
F        EQU   STOPTIME+8                                               01152000
TIME2    EQU   STOPTIME                                                 01153000
DAY      EQU   STARTIME+10                                              01154000
D        EQU   STARTIME+8                                               01155000
TIME     EQU   STARTIME                                                 01156000
DDNAME   EQU   AMDPRTAB+32                                              01157000
USEREXIT EQU   AMDPRTAB+24                                              01158000
C        EQU   DEBGFLGS+4                                               01159000
B        EQU   IOFLGS                                                   01160000
GETEOF   EQU   IOFLGS                                                   01161000
DMDFMT   EQU   INRFCFGS                                                 01162000
EDITSTOP EQU   INRFCFGS                                                 01163000
EXTTRC   EQU   INRFCFGS                                                 01164000
RET      EQU   INRFCFGS                                                 01165000
FMT      EQU   INRFCFGS                                                 01166000
SPIE     EQU   INRFCFGS                                                 01167000
TERM     EQU   INRFCFGS                                                 01168000
FLMODE   EQU   INRFCFGS                                                 01169000
REMAIN   EQU   PTHFLGS2                                                 01170000
APP      EQU   PTHFLGS2                                                 01171000
REXT     EQU   PTHFLGS1                                                 01172000
FRM      EQU   PTHFLGS1                                                 01173000
FLT      EQU   PTHFLGS1                                                 01174000
SCN      EQU   PTHFLGS1                                                 01175000
ROOT     EQU   PTHFLGS1                                                 01176000
AFMG     EQU   AMDPRTAB                                                 01177000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01178000
@RT00076 EQU   AMDPRTS                                                  01179000
@RT00078 EQU   AMDPRLD                                                  01180000
@RT00080 EQU   AMDPRLB                                                  01181000
@RT00089 EQU   AMDLJUST                                                 01182000
@RT00163 EQU   AMDSHORT                                                 01183000
@RF00169 EQU   AMDCKLN                                                  01184000
@RT00179 EQU   PRINTTME                                                 01185000
@RC00200 EQU   @EL00002                                                 01186000
AMDEND   EQU   @EL00003                                                 01187000
@RT00238 EQU   AMDEND                                                   01188000
@ENDDATA EQU   *                                                        01189000
         END   AMDPRCON,(C'PLS1856',0603,76159)                         01190000
