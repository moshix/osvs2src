         TITLE 'AMDPRSCN-EDIT CONTROL STATEMENT SCAN                   *00001000
                        '                                               00002000
AMDPRSCN CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'AMDPRSCN  77.255'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  ST    @14,12(,@13)                                        0001 00010000
         STM   @00,@12,20(@13)                                     0001 00011000
         BALR  @11,0                                               0001 00012000
@PSTART  DS    0H                                                  0001 00013000
         USING @PSTART,@11                                         0001 00014000
         LA    @08,@DATA                                           0001 00015000
         USING @DATA,@08                                           0001 00016000
         ST    @13,@SA00001+4                                      0001 00017000
         LA    @14,@SA00001                                        0001 00018000
         ST    @14,8(,@13)                                         0001 00019000
         LR    @13,@14                                             0001 00020000
              EQUATES                   AMDPRDMP EQU MACRO              00021000
              COMMON                    EXPANDS TO AMDPRCOM TABLE       00022000
AMDPRSCN      CSECT                     RE-ESTABLISH SCAN CSECT         00023000
              USING COMMON,COMBASE      SET UP DSECT FOR AMDPRCOM       00024000
*   TTABPTR=ADDR(TEMPTAB);          /* INITIALIZE TTAB POINTER       */ 00025000
         LA    TTABPTR,TEMPTAB                                     0061 00026000
*   IF SCANBIT='1'B THEN            /* Q/FIRST TIME IN SCAN          */ 00027000
         TM    SCANBIT,B'00100000'                                 0062 00028000
         BO    @RT00062                                            0062 00029000
*     GOTO AMDPSCN1;                /* NO                            */ 00030000
*   CALL AMDPROOT;                  /* INITIALIZE AMDPRTAB           */ 00031000
         L     @15,AROOT                                           0064 00032000
         BALR  @14,@15                                             0064 00033000
*   AEDITCBR=AEDITCB;               /* ESTABLISH BASE FOR PRTAB      */ 00034000
         L     AEDITCBR,AEDITCB                                    0065 00035000
*   SCN='1'B;                       /* SET ON SCAN BIT IN AMDPRTAB   */ 00036000
*                                                                  0066 00037000
         OI    SCN(AEDITCBR),B'01000000'                           0066 00038000
*   /*****************************************************************/ 00039000
*   /*                                                               */ 00040000
*   /* INITIALIZE VALUES IN AMDSCNTB                                 */ 00041000
*   /*                                                               */ 00042000
*   /*****************************************************************/ 00043000
*                                                                  0067 00044000
*   EXITNAME=' ';                   /* BLANK USER EXIT NAME          */ 00045000
         MVI   EXITNAME+1,C' '                                     0067 00046000
         MVC   EXITNAME+2(6),EXITNAME+1                            0067 00047000
         MVI   EXITNAME,C' '                                       0067 00048000
*   DDNM=' ';                       /* BLANK DDNAME SLOT             */ 00049000
         MVI   DDNM+1,C' '                                         0068 00050000
         MVC   DDNM+2(6),DDNM+1                                    0068 00051000
         MVI   DDNM,C' '                                           0068 00052000
*   STARTSL=' ';                    /* BLANK START TIME SLOT         */ 00053000
         MVI   STARTSL+1,C' '                                      0069 00054000
         MVC   STARTSL+2(10),STARTSL+1                             0069 00055000
         MVI   STARTSL,C' '                                        0069 00056000
*   STOPSL=' ';                     /* BLANK STOP TIME SLOT          */ 00057000
         MVI   STOPSL+1,C' '                                       0070 00058000
         MVC   STOPSL+2(10),STOPSL+1                               0070 00059000
         MVI   STOPSL,C' '                                         0070 00060000
*   OVERLTAB=' ';                   /* BLANK EID OVERLAY TABLE       */ 00061000
         MVI   OVERLTAB+1,C' '                                     0071 00062000
         MVC   OVERLTAB+2(38),OVERLTAB+1                           0071 00063000
         MVI   OVERLTAB,C' '                                       0071 00064000
*   SIOTFLGS='0'B;                  /* ZERO SIO BITS                 */ 00065000
         MVI   SIOTFLGS,B'00000000'                                0072 00066000
*   IOTFLGS='0'B;                   /* ZERO IO BITS                  */ 00067000
         MVI   IOTFLGS,B'00000000'                                 0073 00068000
*   USRTFLGS='0'B;                  /* ZERO USR FLAGS                */ 00069000
         MVI   USRTFLGS,B'00000000'                                0074 00070000
*   SVCTFLGS='0'B;                  /* ZERO SVC BITS                 */ 00071000
         MVI   SVCTFLGS,B'00000000'                                0075 00072000
*   PITFLGS='0'B;                   /* ZERO PI BITS                  */ 00073000
         MVI   PITFLGS,B'00000000'                                 0076 00074000
*   SYSTFLGS='0'B;                  /* ZERO SYS TEMP FLGS            */ 00075000
         MVI   SYSTFLGS,B'00000000'                                0077 00076000
*   USRCOUNT=0;                     /* ZERO EID COUNT                */ 00077000
         SLR   @10,@10                                             0078 00078000
         ST    @10,USRCOUNT                                        0078 00079000
*   USRCRCNT=0;                     /* ZERO CURRENT EID COUNT        */ 00080000
         ST    @10,USRCRCNT                                        0079 00081000
*   SVCSTR='0'B;                    /* TURN OFF SVC BITS             */ 00082000
         XC    SVCSTR+1(31),SVCSTR+1                               0080 00083000
         MVI   SVCSTR,B'00000000'                                  0080 00084000
*   PISTR='0'B;                     /* TURN OFF PI CODE BITS         */ 00085000
         MVI   PISTR+1,X'00'                                       0081 00086000
         MVI   PISTR,B'00000000'                                   0081 00087000
*   PISTRB='0'B;                    /* TURN OFF PI 17, 19 BITS       */ 00088000
         MVI   PISTRB,B'00000000'                                  0082 00089000
*   SCNBITS='0'B;                   /* TURN OFF SCAN BITS            */ 00090000
         MVI   SCNBITS,B'00000000'                                 0083 00091000
*   CODETABL='0'B;                  /* TURN OFF KW BITS              */ 00092000
         XC    CODETABL+1(2),CODETABL+1                            0084 00093000
         MVI   CODETABL,B'00000000'                                0084 00094000
*   WORD=0;                         /* ZERO WORD WORK AREA           */ 00095000
         ST    @10,WORD                                            0085 00096000
*   INTSTART=' ';                   /* BLANK INT START SLOT          */ 00097000
         MVI   INTSTART+1,C' '                                     0086 00098000
         MVC   INTSTART+2(3),INTSTART+1                            0086 00099000
         MVI   INTSTART,C' '                                       0086 00100000
*   INTSTOP=' ';                    /* BLANK INT STOP SLOT           */ 00101000
         MVI   INTSTOP+1,C' '                                      0087 00102000
         MVC   INTSTOP+2(3),INTSTOP+1                              0087 00103000
         MVI   INTSTOP,C' '                                        0087 00104000
*   SIOPTR=ADDR(DVADS1);            /* INITIALIZE SIO DEV PTR        */ 00105000
         LA    @10,DVADS1(,AEDITCBR)                               0088 00106000
         ST    @10,SIOPTR                                          0088 00107000
*   IOPTR=ADDR(DVADS2);             /* INITIALIZE IO DEV PTR         */ 00108000
         LA    @02,DVADS2(,AEDITCBR)                               0089 00109000
         ST    @02,IOPTR                                           0089 00110000
*   JOBNPTR=ADDR(NAMES);            /* INITIALIZE JOBNAMES PTR       */ 00111000
         LA    @15,NAMES(,AEDITCBR)                                0090 00112000
         ST    @15,JOBNPTR                                         0090 00113000
*   ASCBPTR=ADDR(ADS);              /* INITIALIZE ASCB         Y02014   00114000
*                                      PTR                     Y02014*/ 00115000
         LA    @14,ADS(,AEDITCBR)                                  0091 00116000
         ST    @14,ASCBPTR                                         0091 00117000
*   SIOCRPTR=ADDR(DVADS1);          /* INITIALIZE NEW SIO DEV PTR    */ 00118000
         ST    @10,SIOCRPTR                                        0092 00119000
*   IOCRPTR=ADDR(DVADS2);           /* INITIALIZE NEW IO DEV PTR     */ 00120000
         ST    @02,IOCRPTR                                         0093 00121000
*   JOBCRPTR=ADDR(NAMES);           /* INITIALIZE NEW JOBN PTR       */ 00122000
         ST    @15,JOBCRPTR                                        0094 00123000
*   ASCBCPTR=ADDR(ADS);             /* INITIALIZE NEW          Y02014   00124000
*                                      ASCB PTR                Y02014*/ 00125000
         ST    @14,ASCBCPTR                                        0095 00126000
*   BUFADDR=ADDR(WTORMSG);          /* INITIALIZE BUFADDR            */ 00127000
         LA    @10,WTORMSG                                         0096 00128000
         ST    @10,BUFADDR                                         0096 00129000
*   SCANBIT='1'B;                   /* SET ON NOT-FIRST TIME SW      */ 00130000
         OI    SCANBIT,B'00100000'                                 0097 00131000
*   SCNPTR=VERBEND;                 /* FIRST COLUMN NUMBER           */ 00132000
         L     @10,VERBEND                                         0098 00133000
         ST    @10,SCNPTR                                          0098 00134000
*   GOTO AMDPSTRT;                  /* BRANCH TO BEGIN SCAN          */ 00135000
         B     AMDPSTRT                                            0099 00136000
*AMDPSCN1:                                                         0100 00137000
*   AEDITCBR=AEDITCB;               /* ESTABLISH BASE FOR PRTAB      */ 00138000
AMDPSCN1 L     AEDITCBR,AEDITCB                                    0100 00139000
*   SCNPTR=ADDR(WTORMSG);           /* INITIALIZE BUFFER POINTER     */ 00140000
         LA    @10,WTORMSG                                         0101 00141000
         ST    @10,SCNPTR                                          0101 00142000
*   GOTO AMDPSTT;                   /* OMIT COMMA CHK IF CONTNUTN    */ 00143000
         B     AMDPSTT                                             0102 00144000
*AMDPSTRT:                                                         0103 00145000
*   IF SCNCHAR=',' THEN             /* IF DEFAULTS REQUESTED,        */ 00146000
AMDPSTRT L     @10,SCNPTR                                          0103 00147000
         CLI   SCNCHAR(@10),C','                                   0103 00148000
         BE    @RT00103                                            0103 00149000
*     GOTO AMDSUMCL;                                               0104 00150000
*AMDPSTT:                                                          0105 00151000
*   IF SCNCHAR^=' ' THEN            /* IF NON-BLANK, HAVE HIT        */ 00152000
AMDPSTT  L     @10,SCNPTR                                          0105 00153000
         CLI   SCNCHAR(@10),C' '                                   0105 00154000
         BNE   @RT00105                                            0105 00155000
*     GOTO AMDPSTR1;                /* MUST DELIMIT STMT             */ 00156000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00157000
         AL    @10,@CF00044                                        0107 00158000
         ST    @10,SCNPTR                                          0107 00159000
*   IF SCNPTR-BUFADDR               /* IF NOT AT END OF INPUT,       */ 00160000
*       <72 THEN                    /* THEN                          */ 00161000
         SL    @10,BUFADDR                                         0108 00162000
         C     @10,@CF00465                                        0108 00163000
         BL    @RT00108                                            0108 00164000
*     GOTO AMDPSTT;                 /* LOOK AT NEXT CHAR             */ 00165000
*                                                                  0109 00166000
*   /*****************************************************************/ 00167000
*   /*                                                               */ 00168000
*   /* SINCE NO KEYWORDS ON STATEMENT, ASSUME DEFAULTS               */ 00169000
*   /*                                                               */ 00170000
*   /*****************************************************************/ 00171000
*                                                                  0110 00172000
*AMDSUMCL:                                                         0110 00173000
*   CALL AMDPSUM1;                  /* BEGIN SUMMARY MESSAGE         */ 00174000
AMDSUMCL L     @15,@CV00417                                        0110 00175000
         BALR  @14,@15                                             0110 00176000
*AMDNRET:                                                          0111 00177000
*   RETURN;                         /* RETURN TO CALLER              */ 00178000
@EL00001 L     @13,4(,@13)                                         0111 00179000
@EF00001 DS    0H                                                  0111 00180000
@ER00001 L     @14,12(,@13)                                        0111 00181000
         LM    @00,@12,20(@13)                                     0111 00182000
         BR    @14                                                 0111 00183000
*AMDPSTR1:                                                         0112 00184000
*   ADDRS1=SCNPTR;                  /* HAVE FOUND KEYWRD BEGNING     */ 00185000
AMDPSTR1 L     @10,SCNPTR                                          0112 00186000
         ST    @10,ADDRS1                                          0112 00187000
*AMDPSTR2:                                                         0113 00188000
*   IF SCNCHAR=' ' THEN             /* IF BLANK FOUND, HAVE          */ 00189000
AMDPSTR2 L     @10,SCNPTR                                          0113 00190000
         CLI   SCNCHAR(@10),C' '                                   0113 00191000
         BE    @RT00113                                            0113 00192000
*     GOTO AMDPSTR3;                /* DELIMITED STMT                */ 00193000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00194000
         AL    @10,@CF00044                                        0115 00195000
         ST    @10,SCNPTR                                          0115 00196000
*   IF SCNPTR-BUFADDR               /* IF NOT AT END OF INPUT,       */ 00197000
*       <72 THEN                    /* THEN                          */ 00198000
         SL    @10,BUFADDR                                         0116 00199000
         C     @10,@CF00465                                        0116 00200000
         BL    @RT00116                                            0116 00201000
*     GOTO AMDPSTR2;                /* LOOK AT NEXT CHAR             */ 00202000
*AMDPSTR3:                                                         0118 00203000
*   EOCADDR=SCNPTR;                 /* SAVE PTR TO 1ST BLANK OR END     00204000
*                                      OF INPUT BUFFER-EOCADDR IS  0118 00205000
*                                      LOGICAL END OF BUFFER         */ 00206000
AMDPSTR3 L     @10,SCNPTR                                          0118 00207000
         ST    @10,EOCADDR                                         0118 00208000
*   SCNPTR=SCNPTR-1;                /* POSITION BUFFER POINTER       */ 00209000
         BCTR  @10,0                                               0119 00210000
         ST    @10,SCNPTR                                          0119 00211000
*   IF SCNCHAR=',' THEN             /* IF COMMA PRESENT, SET ON      */ 00212000
         CLI   SCNCHAR(@10),C','                                   0120 00213000
         BNE   @RF00120                                            0120 00214000
*     GCONTSW='1'B;                 /* CONTINUATION REQUESTED SW     */ 00215000
         OI    GCONTSW,B'00000100'                                 0121 00216000
*   SCNPTR=ADDRS1;                  /* RESET PTR TO KW BEGINNING     */ 00217000
*                                                                  0122 00218000
@RF00120 L     @10,ADDRS1                                          0122 00219000
         ST    @10,SCNPTR                                          0122 00220000
*   /*****************************************************************/ 00221000
*   /*                                                               */ 00222000
*   /* THE FOLLOWING ROUTINE BEGINS THE PROCESS OF ISOLATING A       */ 00223000
*   /* KEYWORD AND ITS VALUES.                                       */ 00224000
*   /*                                                               */ 00225000
*   /*****************************************************************/ 00226000
*                                                                  0123 00227000
*AMDPRES:                                                          0123 00228000
*   CODETABL='0'B;                  /* RE-INITIALIZE CODE TABLE      */ 00229000
AMDPRES  XC    CODETABL+1(2),CODETABL+1                            0123 00230000
         MVI   CODETABL,B'00000000'                                0123 00231000
*   LNGTH=0;                        /* KW/VALUE LENGTH=0             */ 00232000
         SLR   @10,@10                                             0124 00233000
         ST    @10,LNGTH                                           0124 00234000
*   EQUIND='0'B;                    /* NO SIO=IO OR IO=SIO YET       */ 00235000
         NI    EQUIND,B'11101111'                                  0125 00236000
*   COMP4=' ';                      /* BLANK COMPARE AREA            */ 00237000
         MVI   COMP4+1,C' '                                        0126 00238000
         MVC   COMP4+2(2),COMP4+1                                  0126 00239000
         MVI   COMP4,C' '                                          0126 00240000
*   COMP8=' ';                      /* BLANK COMPARE AREA            */ 00241000
         MVI   COMP8+1,C' '                                        0127 00242000
         MVC   COMP8+2(6),COMP8+1                                  0127 00243000
         MVI   COMP8,C' '                                          0127 00244000
*AMDPRES1:                                                         0128 00245000
*   IF SCNCHAR=' ' THEN             /* Q/DELIMITER                   */ 00246000
AMDPRES1 L     @10,SCNPTR                                          0128 00247000
         CLI   SCNCHAR(@10),C' '                                   0128 00248000
         BE    @RT00128                                            0128 00249000
*     GOTO AMDPRES2;                /* YES--EXAMINE KEYWORD          */ 00250000
*   IF SCNCHAR='=' THEN             /* Q/DELIMITER                   */ 00251000
         CLI   SCNCHAR(@10),C'='                                   0130 00252000
         BE    @RT00130                                            0130 00253000
*     GOTO AMDPRES2;                /* YES--EXAMINE KEYWORD          */ 00254000
*   IF SCNCHAR=',' THEN             /* Q/DELIMITER                   */ 00255000
         CLI   SCNCHAR(@10),C','                                   0132 00256000
         BE    @RT00132                                            0132 00257000
*     GOTO AMDPRES2;                /* YES--EXAMINE KEYWORD          */ 00258000
*   IF SCNPTR^=EOCADDR              /* Q/AT END OF STATEMENT         */ 00259000
*     THEN                          /* NO                            */ 00260000
         C     @10,EOCADDR                                         0134 00261000
         BE    @RF00134                                            0134 00262000
*     DO;                           /* LOOK AT NEXT CHAR             */ 00263000
*       SCNPTR=SCNPTR+1;            /* POSITION BUFFER POINTER       */ 00264000
         AL    @10,@CF00044                                        0136 00265000
         ST    @10,SCNPTR                                          0136 00266000
*       GOTO AMDPRES1;              /* GO BACK TO SCAN AGAIN         */ 00267000
         B     AMDPRES1                                            0137 00268000
*     END;                                                         0138 00269000
*AMDPRES2:                                                         0139 00270000
*   LNGTH=SCNPTR-ADDRS1;            /* CALCULATE KEYWORD LENGTH      */ 00271000
@RF00134 DS    0H                                                  0139 00272000
AMDPRES2 L     @10,ADDRS1                                          0139 00273000
         L     @02,SCNPTR                                          0139 00274000
         SLR   @02,@10                                             0139 00275000
         ST    @02,LNGTH                                           0139 00276000
*   IF RUNEDIT='0'B THEN            /* NOT IN RETRY SITUATION        */ 00277000
         TM    RUNEDIT,B'00001000'                                 0140 00278000
         BZ    @RT00140                                            0140 00279000
*     GOTO AMDPRES3;                                               0141 00280000
*   RUNEDIT='0'B;                   /* IN RETRY SITUATION--SET OFF 0142 00281000
*                                      RETRY SWITCH                  */ 00282000
         NI    RUNEDIT,B'11110111'                                 0142 00283000
*   IF LNGTH^=7 THEN                /* USER HAS NOT SPECIFIED        */ 00284000
         C     @02,@CF00055                                        0143 00285000
         BNE   @RT00143                                            0143 00286000
*     GOTO AMDPRES3;                /* 'RUNEDIT'                     */ 00287000
*   IF KEYWORD(1:7)                 /* USER WISHES TO RUN EDIT       */ 00288000
*       =CHARRUN THEN               /* WITH OPTIONS THUS FAR         */ 00289000
         CLC   KEYWORD(7,@10),CHARRUN                              0145 00290000
         BNE   @RF00145                                            0145 00291000
*     DO;                           /* SPECIFIED -- THEN             */ 00292000
*       CALL AMDPFIN;               /* PREPARE FOR SCAN TERM         */ 00293000
         L     @15,@CV00418                                        0147 00294000
         BALR  @14,@15                                             0147 00295000
*       GOTO AMDNRET;               /* RETURN TO CALLER              */ 00296000
         B     AMDNRET                                             0148 00297000
*     END;                                                         0149 00298000
*AMDPRES3:                                                         0150 00299000
*   IF SCNCHAR='=' THEN             /* CHECK FOR VALID KEYWORD       */ 00300000
@RF00145 DS    0H                                                  0150 00301000
AMDPRES3 L     @10,SCNPTR                                          0150 00302000
         CLI   SCNCHAR(@10),C'='                                   0150 00303000
         BE    @RT00150                                            0150 00304000
*     GOTO AMDPRES4;                /* FOLLOWED BY EQUAL SIGN        */ 00305000
*   IF LNGTH>4 THEN                 /* NO EQUAL SIGN SO        Y02014   00306000
*                                      CANNOT BE               Y02014*/ 00307000
         L     @10,LNGTH                                           0152 00308000
         C     @10,@CF00098                                        0152 00309000
         BH    @RT00152                                            0152 00310000
*     GOTO AMDPBDKW;                /* GTR THAN 4 CHARS        Y02014   00311000
*                                      IN LENGTH               Y02014*/ 00312000
*   IF LNGTH<1 THEN                 /* IF LENGTH IS < 1, IGNORE      */ 00313000
         LA    @02,1                                               0154 00314000
         CR    @10,@02                                             0154 00315000
         BL    @RT00154                                            0154 00316000
*     GOTO AMDPCLS1;                /* EXTRA DELIMITER               */ 00317000
*   COMP4(1:LNGTH)=KEYWORD          /* MOVE INTO COMPARE AREA        */ 00318000
*       (1:LNGTH);                                                 0156 00319000
*                                                                  0156 00320000
         BCTR  @10,0                                               0156 00321000
         L     @15,ADDRS1                                          0156 00322000
         EX    @10,@SM00659                                        0156 00323000
*   /*****************************************************************/ 00324000
*   /*                                                               */ 00325000
*   /* LOOP THROUGH KWTAB1 TO FIND KEYWORD MATCH                     */ 00326000
*   /*                                                               */ 00327000
*   /*****************************************************************/ 00328000
*                                                                  0157 00329000
*   DO I=1 TO 11;                   /* ELEVEN KEYWORDS IN      Y02014   00330000
*                                      TABLE                   Y02014*/ 00331000
         ST    @02,I                                               0157 00332000
@DL00157 DS    0H                                                  0158 00333000
*     IF COMP4=KWTAB1(I) THEN       /* IF MATCH FOUND, PROCEED TO    */ 00334000
         LR    @10,@02                                             0158 00335000
         SLA   @10,2                                               0158 00336000
         LA    @15,KWTAB1-4(@10)                                   0158 00337000
         CLC   COMP4(4),0(@15)                                     0158 00338000
         BE    @RT00158                                            0158 00339000
*       GOTO AMDPKW1;               /* BRANCH TO KW ROUTINE          */ 00340000
*   END;                            /* NO MATCH YET                  */ 00341000
         AL    @02,@CF00044                                        0160 00342000
         ST    @02,I                                               0160 00343000
         C     @02,@CF00273                                        0160 00344000
         BNH   @DL00157                                            0160 00345000
*   GOTO AMDPBDKW;                  /* NO MATCH IN TABLE--BAD KW     */ 00346000
         B     AMDPBDKW                                            0161 00347000
*AMDPKW1:                                                          0162 00348000
*   NOVAL='1'B;                     /* TO SIGNIFY TO KEYWORD RTN THAT   00349000
*                                      NO VALUES FOLLOW-- THUS, 'ALL'   00350000
*                                      IS INDICATED                  */ 00351000
AMDPKW1  OI    NOVAL,B'00100000'                                   0162 00352000
*   IF I=1 THEN                     /* IF PROCESSING SIO,            */ 00353000
         CLC   I(4),@CF00044                                       0163 00354000
         BNE   @RF00163                                            0163 00355000
*     X1(1)=X1(1)                   /* TURN ON SIO BIT               */ 00356000
*         |MASKS(8);                                               0164 00357000
         OC    X1(1),MASKS+7                                       0164 00358000
*   ELSE                                                           0165 00359000
*     DO;                           /*                         Y02014*/ 00360000
         B     @RC00163                                            0165 00361000
@RF00163 DS    0H                                                  0166 00362000
*       IF I=11|I=10 THEN           /* SET APPROPRIATE BIT     Y02014*/ 00363000
         L     @10,I                                               0166 00364000
         C     @10,@CF00273                                        0166 00365000
         BE    @RT00166                                            0166 00366000
         C     @10,@CF00488                                        0166 00367000
         BNE   @RF00166                                            0166 00368000
@RT00166 DS    0H                                                  0167 00369000
*         X1(3)=X1(3)|MASKS(I-9);   /*                         Y02014*/ 00370000
         L     @10,I                                               0167 00371000
         LA    @02,MASKS-10(@10)                                   0167 00372000
         OC    X1+2(1),0(@02)                                      0167 00373000
*       ELSE                                                       0168 00374000
*         X1(2)=X1(2)|MASKS(I-1);   /*                         Y02014*/ 00375000
         B     @RC00166                                            0168 00376000
@RF00166 L     @10,I                                               0168 00377000
         LA    @02,MASKS-2(@10)                                    0168 00378000
         OC    X1+1(1),0(@02)                                      0168 00379000
*     END;                          /*                         Y02014*/ 00380000
@RC00166 DS    0H                                                  0170 00381000
*   SVKEY=I;                        /* KEEP TRACK OF INDEX           */ 00382000
@RC00163 L     @10,I                                               0170 00383000
         ST    @10,SVKEY                                           0170 00384000
*   KWADDR=BRTAB(I+7);              /* CALC KW RTN ADDRS       Y02014*/ 00385000
         SLA   @10,2                                               0171 00386000
         L     KWADDR,BRTAB+24(@10)                                0171 00387000
*   CALL KWRTN;                     /* CALL APPROP KW RTN            */ 00388000
*                                                                  0172 00389000
         LR    @15,KWADDR                                          0172 00390000
         BALR  @14,@15                                             0172 00391000
*   /*****************************************************************/ 00392000
*   /*                                                               */ 00393000
*   /* THIS SUBROUTINE INTERROGATES THE CODE RETURNED BY AMDPRSN2 IN */ 00394000
*   /* ORDER TO DETERMINE THE ACTION NEXT TO BE PERFORMED BY MAINLINE*/ 00395000
*   /* SCAN (AMDPRSCN).                                              */ 00396000
*   /*                                                               */ 00397000
*   /*****************************************************************/ 00398000
*                                                                  0173 00399000
*AMDCDCK:                                                          0173 00400000
*   GENERATE;                                                      0173 00401000
AMDCDCK  DS    0H                                                  0173 00402000
*                                       /* USE A BRANCH TABLE        */ 00403000
         B     AMDRTN(REG15)            BRNCH TO APPROP ROUTINE         00404000
AMDRTN   B     AMDPEOC                  SET FLUSH MODE BIT              00405000
         B     AMDPEOC1                 DETERMINE IF AT END OF STMT     00406000
         B     AMDPRS51                 CHK FOR MATCHED PARENS          00407000
         B     AMDPMTD                  ISSUE UNMATCHED PARENS MSG      00408000
         B     AMDPCK1                  CHECK FOR NEXT KEYWORD          00409000
*AMDPBDKW:                                                         0174 00410000
*   SYNMSGA=ADDR(AD1);              /* INSERT ADDRS OF ADDRS OF INV     00411000
*                                      KEYWORD MSG INTO SYNMSGA      */ 00412000
AMDPBDKW L     @10,@CA00352                                        0174 00413000
         ST    @10,SYNMSGA                                         0174 00414000
*   ERRBUF(45:47)=KEYWORD(1:3);     /* MOVE IN 1ST 3 CHARS OF MSG    */ 00415000
         L     @10,MSGADDR(,@10)                                   0175 00416000
         L     @02,ADDRS1                                          0175 00417000
         MVC   ERRBUF+44(3,@10),KEYWORD(@02)                       0175 00418000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00419000
         OI    GNOSTDMG,B'00010000'                                0176 00420000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00421000
*                                                                  0177 00422000
         L     @15,ASYNTAX                                         0177 00423000
         BALR  @14,@15                                             0177 00424000
*   /*****************************************************************/ 00425000
*   /*                                                               */ 00426000
*   /* SET THE FLUSH MODE SWITCH                                     */ 00427000
*   /*                                                               */ 00428000
*   /*****************************************************************/ 00429000
*                                                                  0178 00430000
*AMDPEOC:                                                          0178 00431000
*   FLMODE='1'B;                    /* SET ON FLUSH MODE BIT-- DONE     00432000
*                                      ONLY IF ERROR OCCURRD         */ 00433000
*                                                                  0178 00434000
AMDPEOC  OI    FLMODE(AEDITCBR),B'10000000'                        0178 00435000
*   /*****************************************************************/ 00436000
*   /*                                                               */ 00437000
*   /* DETERMINE IF AT LOGICAL END OF STATEMENT                      */ 00438000
*   /*                                                               */ 00439000
*   /*****************************************************************/ 00440000
*                                                                  0179 00441000
*AMDPEOC1:                                                         0179 00442000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END-OF-STMT     */ 00443000
*     THEN                          /* READY FOR END-OF-STMT         */ 00444000
AMDPEOC1 CLC   SCNPTR(4),EOCADDR                                   0179 00445000
         BNE   @RF00179                                            0179 00446000
*     DO;                           /* PROCEDURES                    */ 00447000
*       CALL AMDPEOC2;              /* EXECUTE PART OF AMDPRSN3      */ 00448000
         L     @15,@CV00419                                        0181 00449000
         BALR  @14,@15                                             0181 00450000
*       GOTO AMDNRET;               /* RETURN TO AMDPRCTL            */ 00451000
         B     AMDNRET                                             0182 00452000
*     END;                                                         0183 00453000
*   GOTO AMDPCK1;                   /* MOVE PAST CURRENT KEYWORD TO     00454000
*                                      NEXT KEYWORD                  */ 00455000
         B     AMDPCK1                                             0184 00456000
*AMDPRES4:                                                         0185 00457000
*   IF LNGTH>7 THEN                 /* KEYWORD IS TOO LONG           */ 00458000
AMDPRES4 L     @10,LNGTH                                           0185 00459000
         C     @10,@CF00055                                        0185 00460000
         BH    @RT00185                                            0185 00461000
*     GOTO AMDPBDKW;                                               0186 00462000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00463000
         LA    @02,1                                               0187 00464000
         L     @00,SCNPTR                                          0187 00465000
         ALR   @00,@02                                             0187 00466000
         ST    @00,SCNPTR                                          0187 00467000
*   IF SCNPTR=EOCADDR               /* IF ALREADY AT END OF CARD,    */ 00468000
*     THEN                          /* CAN HAVE NO VALUE AFTER       */ 00469000
         C     @00,EOCADDR                                         0188 00470000
         BE    @RT00188                                            0188 00471000
*     GOTO AMDPEC1L;                /* THE EQUAL SIGN--IGNORE KW     */ 00472000
*   IF SCNCHAR='(' THEN             /* CHECK FOR VALID PARENS        */ 00473000
         LR    @15,@00                                             0190 00474000
         CLI   SCNCHAR(@15),C'('                                   0190 00475000
         BE    @RT00190                                            0190 00476000
*     GOTO AMDPRS51;                /* IF LEFT PAREN PRESENT         */ 00477000
*   IF SCNCHAR=',' THEN                                            0192 00478000
         LR    @15,@00                                             0192 00479000
         CLI   SCNCHAR(@15),C','                                   0192 00480000
         BNE   @RF00192                                            0192 00481000
*     DO;                           /* FOLLOWED BY COMMA       Y02014*/ 00482000
*       KWDCOMP='';                 /* BLANK COMPARE AREA      Y02014*/ 00483000
         MVI   KWDCOMP,C' '                                        0194 00484000
         MVC   KWDCOMP+1(7),KWDCOMP                                0194 00485000
*       KWDCOMP(1:LNGTH)=KEYWORD(1:LNGTH);/* KEYWD             Y02014*/ 00486000
         BCTR  @10,0                                               0195 00487000
         L     @15,ADDRS1                                          0195 00488000
         EX    @10,@SM00663                                        0195 00489000
*       DO I=1 TO 11;               /* LOOP THRU KWDTAB2       Y02014*/ 00490000
         ST    @02,I                                               0196 00491000
@DL00196 DS    0H                                                  0197 00492000
*         IF KWDCOMP(1:8)=KWTAB2(I,1:8) THEN/* MATCH           Y02014*/ 00493000
         LR    @10,@02                                             0197 00494000
         SLA   @10,3                                               0197 00495000
         LA    @15,KWTAB2-8(@10)                                   0197 00496000
         CLC   KWDCOMP(8),0(@15)                                   0197 00497000
         BE    @RT00197                                            0197 00498000
*           GO TO CONT;             /* MATCH FOUND             Y02014*/ 00499000
*       END;                                                       0199 00500000
         AL    @02,@CF00044                                        0199 00501000
         ST    @02,I                                               0199 00502000
         C     @02,@CF00273                                        0199 00503000
         BNH   @DL00196                                            0199 00504000
*       GO TO AMDPBDKW;             /* BAD KWD MSG NEEDED      Y02014*/ 00505000
         B     AMDPBDKW                                            0200 00506000
*     END;                                                         0201 00507000
*CONT:                                                             0202 00508000
*   ADDRS3=SCNPTR;                  /* SAVE ADDRS OF 1ST CHAR IN   0202 00509000
*                                      KEYWORD VALUE                 */ 00510000
@RF00192 DS    0H                                                  0202 00511000
CONT     L     @10,SCNPTR                                          0202 00512000
         ST    @10,ADDRS3                                          0202 00513000
*   GOTO AMDPCHK;                   /* EXAMINE 1ST CHAR              */ 00514000
*                                                                  0203 00515000
         B     AMDPCHK                                             0203 00516000
*   /*****************************************************************/ 00517000
*   /*                                                               */ 00518000
*   /* THE FOLLOWING SUBROUTINE DETERMINES IF PARENTHESES ARE        */ 00519000
*   /* MATCHED. IF NOT, A DIAGNOSTIC IS ISSUED IN SUBROUTINE AMDPMTD.*/ 00520000
*   /* IF MATCHING PARENS ARE FOUND, POINTERS ARE RESET TO WHAT THEY */ 00521000
*   /* WERE AT ENTRY, AND PROCESSING CONTINUES.                      */ 00522000
*   /*                                                               */ 00523000
*   /*****************************************************************/ 00524000
*                                                                  0204 00525000
*AMDPRS51:                                                         0204 00526000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00527000
AMDPRS51 LA    @10,1                                               0204 00528000
         AL    @10,SCNPTR                                          0204 00529000
         ST    @10,SCNPTR                                          0204 00530000
*   ADDRS3=SCNPTR;                  /* SAVE ADDRS OF 1ST CHAR IN   0205 00531000
*                                      KEYWORD VALUE - CHARACTER   0205 00532000
*                                      FOLLOWS LEFT PAREN            */ 00533000
         ST    @10,ADDRS3                                          0205 00534000
*AMDPMTC:                                                          0206 00535000
*   IF SCNCHAR='(' THEN             /* IF LEFT PAREN, HAVE           */ 00536000
AMDPMTC  L     @10,SCNPTR                                          0206 00537000
         CLI   SCNCHAR(@10),C'('                                   0206 00538000
         BE    @RT00206                                            0206 00539000
*     GOTO AMDPMTD;                 /* UNMATCHED PARENTHESES         */ 00540000
*   IF SCNCHAR=')' THEN             /* IF RIGHT PAREN, HAVE          */ 00541000
         CLI   SCNCHAR(@10),C')'                                   0208 00542000
         BE    @RT00208                                            0208 00543000
*     GOTO AMDPMTC2;                /* MATCHED PARENTHESES           */ 00544000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00545000
         AL    @10,@CF00044                                        0210 00546000
         ST    @10,SCNPTR                                          0210 00547000
*   IF SCNPTR=EOCADDR               /* IF AT END OF CARD, DO NOT     */ 00548000
*     THEN                          /* HAVE MATCHED PARENS--NEED     */ 00549000
         C     @10,EOCADDR                                         0211 00550000
         BE    @RT00211                                            0211 00551000
*     GOTO AMDPMTD;                 /* ERROR MSG OUTPUTTED           */ 00552000
*   GOTO AMDPMTC;                   /* SCAN AGAIN FOR ( OR )         */ 00553000
*                                                                  0213 00554000
         B     AMDPMTC                                             0213 00555000
*   /*****************************************************************/ 00556000
*   /*                                                               */ 00557000
*   /* THIS SMALL SUBROUTINE ISSUES A DIAGNOSTIC IDENTIFYING AN      */ 00558000
*   /* INVALID PARENTHESES SITUATION.                                */ 00559000
*   /*                                                               */ 00560000
*   /*****************************************************************/ 00561000
*                                                                  0214 00562000
*AMDPMTD:                                                          0214 00563000
*   SYNMSGA=ADDR(AD2);              /* INSERT ADDRS OF ADDRS OF PAREN   00564000
*                                      MSG INTO SYNMSGA              */ 00565000
AMDPMTD  L     @10,@CA00352                                        0214 00566000
         LA    @10,AD2-AMDPRS00(,@10)                              0214 00567000
         ST    @10,SYNMSGA                                         0214 00568000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00569000
         OI    GNOSTDMG,B'00010000'                                0215 00570000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00571000
         L     @15,ASYNTAX                                         0216 00572000
         BALR  @14,@15                                             0216 00573000
*   IF PAREN='1'B THEN              /* IF SITUATION IS THAT SINGLE 0217 00574000
*                                      VALUE IN PARENS THEN          */ 00575000
         TM    PAREN,B'00010000'                                   0217 00576000
         BO    @RT00217                                            0217 00577000
*     GOTO AMDPEOC;                 /* CAN GO ON IN THIS STATEMNT    */ 00578000
*   FLMODE='1'B;                    /* MUST SET FLUSH BIT AND IGNORE    00579000
*                                      REST OF STMT                  */ 00580000
         OI    FLMODE(AEDITCBR),B'10000000'                        0219 00581000
*AMDPEC1L:                                                         0220 00582000
*   CALL AMDPEOC2;                  /* TO RESET VALUES BEFORE        */ 00583000
AMDPEC1L L     @15,@CV00419                                        0220 00584000
         BALR  @14,@15                                             0220 00585000
*   GOTO AMDNRET;                   /* CURRENT LINE INPUTTED         */ 00586000
         B     AMDNRET                                             0221 00587000
*AMDPMTC2:                                                         0222 00588000
*   PAREN='1'B;                     /* MATCHED PARENS--SET     SWITCH*/ 00589000
AMDPMTC2 OI    PAREN,B'00010000'                                   0222 00590000
*   REM=SCNPTR-ADDRS3;              /* NUM OF CHARS BEFORE )         */ 00591000
         L     @10,SCNPTR                                          0223 00592000
         LR    REM,@10                                             0223 00593000
         SL    REM,ADDRS3                                          0223 00594000
*   SCNPTR=SCNPTR-REM;              /* RESET BUFFER POINTER          */ 00595000
         SLR   @10,REM                                             0224 00596000
         ST    @10,SCNPTR                                          0224 00597000
*   IF IORTNSW='1'B THEN            /* HAVE COME FROM SIO/IO RTN     */ 00598000
         TM    IORTNSW,B'10000000'                                 0225 00599000
         BNO   @RF00225                                            0225 00600000
*     DO;                           /* DO THE FOLLOWING              */ 00601000
*       CALL AMDPSIO;               /* CALL IO/SIO KEYWORD RTN       */ 00602000
         L     @15,@CV00388                                        0227 00603000
         BALR  @14,@15                                             0227 00604000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 00605000
         B     AMDCDCK                                             0228 00606000
*     END;                                                         0229 00607000
*AMDPCHK:                                                          0230 00608000
*   IF SCNCHAR=',' THEN             /* MAY BE FINISHED WITH KW       */ 00609000
@RF00225 DS    0H                                                  0230 00610000
AMDPCHK  L     @10,SCNPTR                                          0230 00611000
         CLI   SCNCHAR(@10),C','                                   0230 00612000
         BNE   @RF00230                                            0230 00613000
*     DO;                           /* DO THE FOLLOWING              */ 00614000
*AMDPCHK1:                                                         0232 00615000
*       IF PAREN='1'B THEN          /* MUST FIND RIGHT PAREN IF      */ 00616000
AMDPCHK1 TM    PAREN,B'00010000'                                   0232 00617000
         BO    @RT00232                                            0232 00618000
*         GOTO AMDPCHK6;            /* IN MATCHED PAREN SITUATION    */ 00619000
*       GOTO AMDPCLS1;              /* WILL SEARCH FOR NXT KW        */ 00620000
         B     AMDPCLS1                                            0234 00621000
*     END;                                                         0235 00622000
*AMDPCHK2:                                                         0236 00623000
*   IF KEYWORD(1)='J' THEN          /* LENGTH DETERMINED BY KW       */ 00624000
@RF00230 DS    0H                                                  0236 00625000
AMDPCHK2 L     @10,ADDRS1                                          0236 00626000
         CLI   KEYWORD(@10),C'J'                                   0236 00627000
         BE    @RT00236                                            0236 00628000
*     GOTO AMDPLN;                  /* CHECK FOR VALID KEYWORD       */ 00629000
*   IF KEYWORD(1)='D' THEN          /* LENGTH DETERMINED BY KW       */ 00630000
         CLI   KEYWORD(@10),C'D'                                   0238 00631000
         BE    @RT00238                                            0238 00632000
*     GOTO AMDPLN;                  /* CHECK FOR VALID KEYWORD       */ 00633000
*   GOTO AMDPLN1;                   /* LENGTH WILL EQUAL 8           */ 00634000
*                                                                  0240 00635000
         B     AMDPLN1                                             0240 00636000
*   /*****************************************************************/ 00637000
*   /*                                                               */ 00638000
*   /* THIS SUBROUTINE POSITIONS THE BUFFER POINTER TO THE DELIMITER */ 00639000
*   /* PRECEDING THE NEXT KEYWORD, IF ONE EXISTS. OTHERWISE,         */ 00640000
*   /* END-0F-STATEMENT PROCEDURES ARE INVOKED IN MODULE AMDPRSN3.   */ 00641000
*   /*                                                               */ 00642000
*   /*****************************************************************/ 00643000
*                                                                  0241 00644000
*AMDPCK1:                                                          0241 00645000
*   IF PAREN='1'B THEN              /* IF MATCHED PARENS, MUST       */ 00646000
AMDPCK1  TM    PAREN,B'00010000'                                   0241 00647000
         BO    @RT00241                                            0241 00648000
*     GOTO AMDPCHK6;                /* FIND )                        */ 00649000
*AMDPCHK5:                                                         0243 00650000
*   IF SCNCHAR=',' THEN             /* HAVE FOUND DELIMITER--NXT     */ 00651000
AMDPCHK5 L     @10,SCNPTR                                          0243 00652000
         CLI   SCNCHAR(@10),C','                                   0243 00653000
         BE    @RT00243                                            0243 00654000
*     GOTO AMDPCLS1;                /* LOOK AT NXT KEYWORD           */ 00655000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END-OF-STMT,    */ 00656000
*     THEN                          /* READY FOR END-OF-STMT         */ 00657000
         C     @10,EOCADDR                                         0245 00658000
         BE    @RT00245                                            0245 00659000
*     GOTO AMDPEC1L;                /* PROCEDURES                    */ 00660000
*   IF SCNCHAR=' ' THEN             /* HAVE FOUND DELIMITER--NXT     */ 00661000
         CLI   SCNCHAR(@10),C' '                                   0247 00662000
         BE    @RT00247                                            0247 00663000
*     GOTO AMDPCLS1;                /* LOOK AT NXT KEYWORD           */ 00664000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00665000
         AL    @10,@CF00044                                        0249 00666000
         ST    @10,SCNPTR                                          0249 00667000
*   GOTO AMDPCHK5;                  /* CONTINUE SCAN FOR DELIM.      */ 00668000
         B     AMDPCHK5                                            0250 00669000
*AMDPCHK6:                                                         0251 00670000
*   IF SCNCHAR=')' THEN             /* HAVE FOUND PRELIM. DELIM.     */ 00671000
AMDPCHK6 L     @10,SCNPTR                                          0251 00672000
         CLI   SCNCHAR(@10),C')'                                   0251 00673000
         BE    @RT00251                                            0251 00674000
*     GOTO AMDPCHK5;                /* SCAN NOW FOR COMMA OR BLNK    */ 00675000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00676000
         AL    @10,@CF00044                                        0253 00677000
         ST    @10,SCNPTR                                          0253 00678000
*   GOTO AMDPCHK6;                  /* KEEP SCANNING FOR RIGHT )     */ 00679000
*                                                                  0254 00680000
         B     AMDPCHK6                                            0254 00681000
*   /*****************************************************************/ 00682000
*   /*                                                               */ 00683000
*   /* THIS SUBROUTINE POSITIONS THE BUFFER POINTER TO THE NEXT      */ 00684000
*   /* KEYWORD, IF ONE EXISTS. IF NOT, END-OF- STATEMENT PROCEDURES  */ 00685000
*   /* ARE INVOKED IN MODULE AMDPRSN3.                               */ 00686000
*   /*                                                               */ 00687000
*   /*****************************************************************/ 00688000
*                                                                  0255 00689000
*AMDPCLS1:                                                         0255 00690000
*   SCNPTR=SCNPTR+1;                /* MOVE TO 1ST CHAR OF NXT KW    */ 00691000
AMDPCLS1 LA    @10,1                                               0255 00692000
         AL    @10,SCNPTR                                          0255 00693000
         ST    @10,SCNPTR                                          0255 00694000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END-OF-STMT     */ 00695000
*     THEN                          /* READY FOR END-OF-STMT         */ 00696000
         C     @10,EOCADDR                                         0256 00697000
         BE    @RT00256                                            0256 00698000
*     GOTO AMDPEC1L;                /* PROCEDURES                    */ 00699000
*   ADDRS1=SCNPTR;                  /* SAVE LOCATION OF 1ST CHAR IN     00700000
*                                      NEXT KEYWORD                  */ 00701000
         ST    @10,ADDRS1                                          0258 00702000
*   GOTO AMDPRES;                   /* BEGIN KEYWORD SCAN AGAIN      */ 00703000
         B     AMDPRES                                             0259 00704000
*AMDPLN:                                                           0260 00705000
*   COMPLEN=LNGTH;                  /* KEYWORD VALIDITY CHECK BASED     00706000
*                                      ON LENGTH OF KEYWORD IF BEGINS   00707000
*                                      WITH J OR D                   */ 00708000
AMDPLN   L     COMPLEN,LNGTH                                       0260 00709000
*   GOTO AMDPLN2;                   /* BRANCH AROUND NEXT STMT       */ 00710000
         B     AMDPLN2                                             0261 00711000
*AMDPLN1:                                                          0262 00712000
*   COMPLEN=8;                      /* IN USUAL CASE, COMPARE LENGTH    00713000
*                                      EQUAL TO 8                    */ 00714000
AMDPLN1  LA    COMPLEN,8                                           0262 00715000
*AMDPLN2:                                                          0263 00716000
*   COMP8(1:LNGTH)=KEYWORD          /* MOVE IW INTO COMPARE AREA     */ 00717000
*       (1:LNGTH);                                                 0263 00718000
*                                                                  0263 00719000
AMDPLN2  L     @10,LNGTH                                           0263 00720000
         BCTR  @10,0                                               0263 00721000
         L     @05,ADDRS1                                          0263 00722000
         EX    @10,@SM00665                                        0263 00723000
*   /*****************************************************************/ 00724000
*   /*                                                               */ 00725000
*   /* LOOP THROUGH KWTAB2 TO FIND KEYWORD MATCH                     */ 00726000
*   /*                                                               */ 00727000
*   /*****************************************************************/ 00728000
*                                                                  0264 00729000
*   DO I=1 TO 11;                                                  0264 00730000
         LA    @10,1                                               0264 00731000
         ST    @10,I                                               0264 00732000
@DL00264 DS    0H                                                  0265 00733000
*     IF COMP8(1:COMPLEN)           /* IF MATCH FOUND,               */ 00734000
*         =KWTAB2(I,1:COMPLEN)      /* THEN                          */ 00735000
*       THEN                        /* PROCEED TO                    */ 00736000
         LR    @05,@10                                             0265 00737000
         SLA   @05,3                                               0265 00738000
         LR    @02,COMPLEN                                         0265 00739000
         BCTR  @02,0                                               0265 00740000
         LA    @15,KWTAB2-8(@05)                                   0265 00741000
         EX    @02,@SC00667                                        0265 00742000
         BE    @RT00265                                            0265 00743000
*       GOTO AMDPKW2;               /* BRANCH TO KW ROUTINE          */ 00744000
*   END;                            /* NO MATCH YET                  */ 00745000
         AL    @10,@CF00044                                        0267 00746000
         ST    @10,I                                               0267 00747000
         C     @10,@CF00273                                        0267 00748000
         BNH   @DL00264                                            0267 00749000
*   GOTO AMDPBDKW;                  /* NO MATCH/OUTPUT ERROR MSG     */ 00750000
         B     AMDPBDKW                                            0268 00751000
*AMDPKW2:                                                          0269 00752000
*   WORD=I/8;                       /* CALCULATE APPROP BYTE         */ 00753000
AMDPKW2  L     @10,I                                               0269 00754000
         LA    @02,8                                               0269 00755000
         LR    @04,@10                                             0269 00756000
         SRDA  @04,32                                              0269 00757000
         DR    @04,@02                                             0269 00758000
         ST    @05,WORD                                            0269 00759000
*   J=I//8;                         /* CALCULATE BIT IN BYTE         */ 00760000
         LR    @04,@10                                             0270 00761000
         SRDA  @04,32                                              0270 00762000
         D     @04,@CF00033                                        0270 00763000
         ST    @04,J                                               0270 00764000
*   IF J=0 THEN                     /* IF NO REMAINDER,              */ 00765000
         LTR   @04,@04                                             0271 00766000
         BNZ   @RF00271                                            0271 00767000
*     J=8;                          /* WILL USE LAST BIT             */ 00768000
         ST    @02,J                                               0272 00769000
*   ELSE                            /* IF REMAINDER, ARE INTO        */ 00770000
*     WORD=WORD+1;                  /* NEXT BYTE                     */ 00771000
         B     @RC00271                                            0273 00772000
@RF00271 LA    @10,1                                               0273 00773000
         AL    @10,WORD                                            0273 00774000
         ST    @10,WORD                                            0273 00775000
*   X1(WORD)=X1(WORD)|MASKS(J);     /* TURN ON APPROP BIT            */ 00776000
@RC00271 L     @10,WORD                                            0274 00777000
         LA    @02,X1-1(@10)                                       0274 00778000
         L     @10,J                                               0274 00779000
         LA    @15,MASKS-1(@10)                                    0274 00780000
         OC    0(1,@02),0(@15)                                     0274 00781000
*   SVKEY=(I+11);                   /* INDEX INCREASED BY NUM      0275 00782000
*                                      KEYWORDS IN KWTAB1            */ 00783000
         L     @10,I                                               0275 00784000
         LA    @02,11                                              0275 00785000
         ALR   @02,@10                                             0275 00786000
         ST    @02,SVKEY                                           0275 00787000
*   IF I=3                          /* IF PROCESSING START           */ 00788000
*       |I=4 THEN                   /* OR STOP KW, THEN              */ 00789000
         C     @10,@CF00168                                        0276 00790000
         BE    @RT00276                                            0276 00791000
         C     @10,@CF00098                                        0276 00792000
         BE    @RT00276                                            0276 00793000
*     GOTO AMDPPOS;                 /* GO TO THAT KW RTN             */ 00794000
*   IF I=7 THEN                     /* IF PROCESSING USR,            */ 00795000
         C     @10,@CF00055                                        0278 00796000
         BE    @RT00278                                            0278 00797000
*     GOTO AMDPUSR;                 /* GO TO THAT KW RTN             */ 00798000
*   KWADDR=BRTAB(I);                /* CALC KW RTN ADDRS             */ 00799000
         SLA   @10,2                                               0280 00800000
         L     KWADDR,BRTAB-4(@10)                                 0280 00801000
*   CALL KWRTN;                     /* CALL APPROP KW RTN            */ 00802000
         LR    @15,KWADDR                                          0281 00803000
         BALR  @14,@15                                             0281 00804000
*   GOTO AMDCDCK;                   /* CHECK RETURN CODE             */ 00805000
*                                                                  0282 00806000
         B     AMDCDCK                                             0282 00807000
*   /*****************************************************************/ 00808000
*   /*                                                               */ 00809000
*   /* THIS SUBROUTINE PROCESSES THE START AND STOP KEYWORDS.        */ 00810000
*   /* ACCEPTABLE VALUES ARE DDD/ DDD,HH/ DDD,HH.MM/ AND             */ 00811000
*   /* DDD,HH.MM.SS.                                                 */ 00812000
*   /*                                                               */ 00813000
*   /*****************************************************************/ 00814000
*                                                                  0283 00815000
*AMDPPOS:                                                          0283 00816000
*   IF CSTART='1'B THEN             /* IF PROCESSING 'START',        */ 00817000
AMDPPOS  TM    CSTART,B'00100000'                                  0283 00818000
         BO    @RT00283                                            0283 00819000
*     GOTO AMDPPOS1;                /* CHECK APPROPRIATE SLOTS       */ 00820000
*   IF STOPTIME^=BLANK1             /* IF AMDPRTAB STOP VALUE        */ 00821000
*       |STOPSL^=BLANK1 THEN        /* OR TEMPTAB STOP VALUE IS    0285 00822000
*                                      NON-BLANK, DO WHAT FOLLOWS    */ 00823000
         CLC   STOPTIME(12,AEDITCBR),BLANK1                        0285 00824000
         BNE   @RT00285                                            0285 00825000
         CLC   STOPSL(12),BLANK1                                   0285 00826000
         BNE   @RT00285                                            0285 00827000
*AMDC1CAL:                                                         0286 00828000
*     GOTO AMDPEOC1;                /* IGNORE THE CURRENT VAL AND  0286 00829000
*                                      SCAN FOR NEXT KW              */ 00830000
*   ALLPTR=ADDR(INTSTOP);           /* PROCESSING STOP VALUE         */ 00831000
         LA    @10,INTSTOP                                         0287 00832000
         ST    @10,ALLPTR                                          0287 00833000
*   GOTO AMDPPOS2;                  /* BEGIN VALUE SCAN              */ 00834000
         B     AMDPPOS2                                            0288 00835000
*AMDPPOS1:                                                         0289 00836000
*   IF STARTIME^=BLANK1             /* IF AMDPRTAB START VALUE       */ 00837000
*       |STARTSL^=BLANK1 THEN       /* OR TEMPTAB START VALUE IS     */ 00838000
AMDPPOS1 CLC   STARTIME(12,AEDITCBR),BLANK1                        0289 00839000
         BNE   @RT00289                                            0289 00840000
         CLC   STARTSL(12),BLANK1                                  0289 00841000
         BNE   @RT00289                                            0289 00842000
*     GOTO AMDPEOC1;                /* NON-BLANK, IGNORE CURRENT   0290 00843000
*                                      VALUE                         */ 00844000
*   ALLPTR=ADDR(INTSTART);          /* PROCESSING START VALUE        */ 00845000
         LA    @10,INTSTART                                        0291 00846000
         ST    @10,ALLPTR                                          0291 00847000
*AMDPPOS2:                                                         0292 00848000
*   IF SCNCHAR=','                  /* BEGIN VALUE SCAN              */ 00849000
*       |SCNCHAR=' '                /* IF DELIMITER OF COMMA,        */ 00850000
*       |SCNCHAR=')' THEN           /* BLANK OR RIGHT PAREN FOUND    */ 00851000
AMDPPOS2 L     @10,SCNPTR                                          0292 00852000
         CLI   SCNCHAR(@10),C','                                   0292 00853000
         BE    @RT00292                                            0292 00854000
         CLI   SCNCHAR(@10),C' '                                   0292 00855000
         BE    @RT00292                                            0292 00856000
         CLI   SCNCHAR(@10),C')'                                   0292 00857000
         BE    @RT00292                                            0292 00858000
*     GOTO AMDPPOS3;                /* CALCULATE VALUE LENGTH        */ 00859000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END-OF-STMT,    */ 00860000
*     THEN                          /* THEN                          */ 00861000
         C     @10,EOCADDR                                         0294 00862000
         BE    @RT00294                                            0294 00863000
*     GOTO AMDPPOS3;                /* CALCULATE VALUE LENGTH        */ 00864000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00865000
         AL    @10,@CF00044                                        0296 00866000
         ST    @10,SCNPTR                                          0296 00867000
*   GOTO AMDPPOS2;                  /* CONTINUE DELIMITER SCAN       */ 00868000
         B     AMDPPOS2                                            0297 00869000
*AMDPPOS3:                                                         0298 00870000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 00871000
AMDPPOS3 L     @10,SCNPTR                                          0298 00872000
         SL    @10,ADDRS3                                          0298 00873000
         ST    @10,LNGTH                                           0298 00874000
*   IF LNGTH>3 THEN                 /* IF LENGTH>THREE,              */ 00875000
         C     @10,@CF00168                                        0299 00876000
         BNH   @RF00299                                            0299 00877000
*     DO;                           /* OUTPUT BAD VALUE LNGTH MSG    */ 00878000
*AMDVLNCL:                                                         0301 00879000
*       CALL AMDVLEN;               /* HAVE MESSAGE ISSUED           */ 00880000
AMDVLNCL L     @15,@CV00422                                        0301 00881000
         BALR  @14,@15                                             0301 00882000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 00883000
         B     AMDCDCK                                             0302 00884000
*     END;                                                         0303 00885000
*   IF LNGTH<1 THEN                 /* IF LENGTH<ONE,                */ 00886000
@RF00299 L     @10,LNGTH                                           0304 00887000
         LTR   @10,@10                                             0304 00888000
         BP    @RF00304                                            0304 00889000
*     DO;                           /* THEN DO THE FOLLOWING         */ 00890000
*AMDELMCL:                                                         0306 00891000
*       CALL AMDELIM;               /* OUTPUT BAD DELIM MSG          */ 00892000
AMDELMCL L     @15,@CV00423                                        0306 00893000
         BALR  @14,@15                                             0306 00894000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 00895000
         B     AMDCDCK                                             0307 00896000
*     END;                                                         0308 00897000
*   COMP4=' ';                      /* BLANK COMPARE AREA            */ 00898000
@RF00304 MVI   COMP4+1,C' '                                        0309 00899000
         MVC   COMP4+2(2),COMP4+1                                  0309 00900000
         MVI   COMP4,C' '                                          0309 00901000
*   COMP4(2:4)='366';               /* MOVE IN MAX NUM DAYS IN YR    */ 00902000
         MVC   COMP4+1(3),@CC00550                                 0310 00903000
*   CHARWORD=' ';                   /* BLANK WORK AREA               */ 00904000
         MVI   CHARWORD+1,C' '                                     0311 00905000
         MVC   CHARWORD+2(2),CHARWORD+1                            0311 00906000
         MVI   CHARWORD,C' '                                       0311 00907000
*   CHARWORD(5-LNGTH:4)             /* RIGHT JUSTIFY SPECIFIED       */ 00908000
*       =VAL1(1:LNGTH);             /* DDD                           */ 00909000
         LA    @10,5                                               0312 00910000
         SL    @10,LNGTH                                           0312 00911000
         LA    @02,CHARWORD-1(@10)                                 0312 00912000
         LCR   @10,@10                                             0312 00913000
         AL    @10,@CF00098                                        0312 00914000
         L     @15,ADDRS3                                          0312 00915000
         EX    @10,@SM00669                                        0312 00916000
*   IF CHARWORD>COMP4 THEN          /* IF VALUE>CHAR. 366, THEN      */ 00917000
         CLC   CHARWORD(4),COMP4                                   0313 00918000
         BNH   @RF00313                                            0313 00919000
*     DO;                           /* OUTPUT BAD VALUE MSG          */ 00920000
*AMDVMGCL:                                                         0315 00921000
*       CALL AMDVLMG;               /* ISSUE DIAGNOSTIC              */ 00922000
AMDVMGCL L     @15,@CV00424                                        0315 00923000
         BALR  @14,@15                                             0315 00924000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 00925000
         B     AMDCDCK                                             0316 00926000
*     END;                                                         0317 00927000
*   CHARWORD=' ';                   /* BLANK WORK AREA               */ 00928000
@RF00313 MVI   CHARWORD+1,C' '                                     0318 00929000
         MVC   CHARWORD+2(2),CHARWORD+1                            0318 00930000
         MVI   CHARWORD,C' '                                       0318 00931000
*   CHARWORD(1:LNGTH)               /* LEFT JUSTIFY DDD              */ 00932000
*       =VAL1(1:LNGTH);                                            0319 00933000
*                                                                  0319 00934000
         L     @10,LNGTH                                           0319 00935000
         BCTR  @10,0                                               0319 00936000
         L     @02,ADDRS3                                          0319 00937000
         EX    @10,@SM00671                                        0319 00938000
*   /*****************************************************************/ 00939000
*   /*                                                               */ 00940000
*   /* CONVRT PRINTABLE DECIMAL TO INTERNAL (PACKED) DECIMAL.        */ 00941000
*   /*                                                               */ 00942000
*   /*****************************************************************/ 00943000
*                                                                  0320 00944000
*   RFY                                                            0320 00945000
*    (REG4,                                                        0320 00946000
*     REG5,                                                        0320 00947000
*     REG6) RSTD;                   /* NEED THESE REGS         Y02014*/ 00948000
*   REG4=ADDRS3;                    /* OBTAIN PTR TO FIRST CHAR      */ 00949000
         LR    REG4,@02                                            0321 00950000
*   REG6=LNGTH-1;                   /* OBTAIN VALUE LENGTH - ONE     */ 00951000
         LR    REG6,@10                                            0322 00952000
*   REG5=ALLPTR;                    /* GET PTR TO START/STOP SLOT    */ 00953000
         L     REG5,ALLPTR                                         0323 00954000
*   GENERATE;                                                      0324 00955000
         EX  R6,PACKDGTS                EXECUTE PACK INSTRUCTION        00956000
         B   AMDPPOS4                   FINISHED WITH CONVERSION        00957000
PACKDGTS PACK  0(2,R5),0(0,R4) PACK DIGITS                              00958000
*   RFY                                                            0325 00959000
*    (REG4,                                                        0325 00960000
*     REG5,                                                        0325 00961000
*     REG6) UNRSTD;                 /*                         Y02014*/ 00962000
*AMDPPOS4:                                                         0326 00963000
*   IF PAREN='0'B THEN              /* IF ONLY DDD SPECIFIED,        */ 00964000
AMDPPOS4 TM    PAREN,B'00010000'                                   0326 00965000
         BZ    @RT00326                                            0326 00966000
*     GOTO AMDPSLT;                 /* BEGIN TEMPTAB VAL INSERTN     */ 00967000
*   IF SCNCHAR=')' THEN             /* IF HAVE (DDD), THEN           */ 00968000
         L     @10,SCNPTR                                          0328 00969000
         CLI   SCNCHAR(@10),C')'                                   0328 00970000
         BE    @RT00328                                            0328 00971000
*     GOTO AMDPSLT;                 /* NO MORE VALUES                */ 00972000
*AMDPOS41:                                                         0330 00973000
*   ADDRS3=SCNPTR+1;                /* SAVE VALUE BEG'NG ADDRS       */ 00974000
AMDPOS41 LA    @10,1                                               0330 00975000
         AL    @10,SCNPTR                                          0330 00976000
         ST    @10,ADDRS3                                          0330 00977000
*   SCNPTR=SCNPTR+1;                /* UPDATE BUFFER POINTER         */ 00978000
         ST    @10,SCNPTR                                          0331 00979000
*AMDPPOS5:                                                         0332 00980000
*   IF SCNCHAR=')' THEN             /* IF RIGHT PAREN AS DELIM,      */ 00981000
AMDPPOS5 L     @10,SCNPTR                                          0332 00982000
         CLI   SCNCHAR(@10),C')'                                   0332 00983000
         BE    @RT00332                                            0332 00984000
*     GOTO AMDPPOS6;                /* GO CALCULATE LENGTH           */ 00985000
*   IF SCNCHAR='.' THEN             /* IF PERIOD AS DELIM,           */ 00986000
         CLI   SCNCHAR(@10),C'.'                                   0334 00987000
         BNE   @RF00334                                            0334 00988000
*     DO;                           /* DO THE FOLLOWING              */ 00989000
*       MORESW='1'B;                /* MORE TO COME                  */ 00990000
         OI    MORESW,B'01000000'                                  0336 00991000
*       GOTO AMDPPOS6;              /* GO CALCULATE LENGTH           */ 00992000
         B     AMDPPOS6                                            0337 00993000
*     END;                          /* PERIOD WAS DELIMITER          */ 00994000
*   IF SCNCHAR=',' THEN             /* COMMA NOT LEGAL DELIMITER     */ 00995000
@RF00334 L     @10,SCNPTR                                          0339 00996000
         CLI   SCNCHAR(@10),C','                                   0339 00997000
         BE    @RT00339                                            0339 00998000
*     GOTO AMDELMCL;                /* ISSUE DIAGNOSTIC MESSAGE      */ 00999000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END OF STMT,    */ 01000000
*     THEN                          /* THEN                          */ 01001000
         C     @10,EOCADDR                                         0341 01002000
         BE    @RT00341                                            0341 01003000
*     GOTO AMDPPOS6;                /* GO CALCULATE LENGTH           */ 01004000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01005000
         AL    @10,@CF00044                                        0343 01006000
         ST    @10,SCNPTR                                          0343 01007000
*   GOTO AMDPPOS5;                  /* CONTINUE DELIMITER SCAN       */ 01008000
         B     AMDPPOS5                                            0344 01009000
*AMDPPOS6:                                                         0345 01010000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE LENGTH              */ 01011000
AMDPPOS6 L     @10,SCNPTR                                          0345 01012000
         SL    @10,ADDRS3                                          0345 01013000
         ST    @10,LNGTH                                           0345 01014000
*   IF LNGTH>2 THEN                 /* Q/TOO LONG                    */ 01015000
         C     @10,@CF00077                                        0346 01016000
         BH    @RT00346                                            0346 01017000
*     GOTO AMDVLNCL;                /* YES--BAD VALUE LENGTH MSG     */ 01018000
*   IF LNGTH<1 THEN                 /* Q/TOO SHORT                   */ 01019000
         LTR   @10,@10                                             0348 01020000
         BNP   @RT00348                                            0348 01021000
*     GOTO AMDELMCL;                /* YES--INVALID DELIMITER MSG    */ 01022000
*   IF FIVECHAR(5)^=' '             /* IF SECONDS AREA ALREADY       */ 01023000
*     THEN                          /* FILLED IN, THEN HAVE TOO      */ 01024000
         L     @10,ALLPTR                                          0350 01025000
         CLI   FIVECHAR+4(@10),C' '                                0350 01026000
         BNE   @RT00350                                            0350 01027000
*     GOTO AMDVLNCL;                /* MANY VALUE PORTIONS           */ 01028000
*   IF FIVECHAR(4)^=' '             /* IF MINUTES AREA ALREADY       */ 01029000
*     THEN                          /* FILLED IN, NOW PROCESSING     */ 01030000
         CLI   FIVECHAR+3(@10),C' '                                0352 01031000
         BE    @RF00352                                            0352 01032000
*     DO;                           /* SECONDS, SO                   */ 01033000
*       SECIND='1'B;                /* SECONDS--VALIDITY CHECK       */ 01034000
         OI    SECIND,B'10000000'                                  0354 01035000
*       GOTO AMDPPOS7;              /* VALUE AFTER CNVRTING IT       */ 01036000
         B     AMDPPOS7                                            0355 01037000
*     END;                          /* SECONDS BEING PROCESSED       */ 01038000
*   IF FIVECHAR(3)^=' '             /* IF HOURS AREA ALREADY         */ 01039000
*     THEN                          /* FILLED IN, NOW PROCESSING     */ 01040000
@RF00352 L     @10,ALLPTR                                          0357 01041000
         CLI   FIVECHAR+2(@10),C' '                                0357 01042000
         BE    @RF00357                                            0357 01043000
*     MININD='1'B;                  /* MINUTES                       */ 01044000
         OI    MININD,B'01000000'                                  0358 01045000
*AMDPPOS7:                                                         0359 01046000
*   CALL AMDPRCVB;                  /* CONVERT VALUE TO BINARY       */ 01047000
@RF00357 DS    0H                                                  0359 01048000
AMDPPOS7 L     @15,@CV00420                                        0359 01049000
         BALR  @14,@15                                             0359 01050000
*   IF MININD='1'B                  /* IF PROCESSING MINUTES         */ 01051000
*       |SECIND='1'B THEN           /* OR SECONDS,                   */ 01052000
         TM    MININD,B'11000000'                                  0360 01053000
         BNZ   @RT00360                                            0360 01054000
*     GOTO AMDPPOS8;                /* CHK THAT NOT >59              */ 01055000
*   IF COMP4>23 THEN                /* IF VALUE OVER 23, OUTPUT      */ 01056000
         CLC   COMP4(4),@CF00566                                   0362 01057000
         BH    @RT00362                                            0362 01058000
*     GOTO AMDVMGCL;                /* INVALID VALUE MESSAGE         */ 01059000
*   FIVECHAR(3)=COMP4(4);           /* INSERT HOURS IN HOUR AREA     */ 01060000
         L     @10,ALLPTR                                          0364 01061000
         MVC   FIVECHAR+2(1,@10),COMP4+3                           0364 01062000
*AMDPMOR:                                                          0365 01063000
*   IF MORESW='1'B THEN             /* IF MORE VALUES FOLLOW,        */ 01064000
AMDPMOR  TM    MORESW,B'01000000'                                  0365 01065000
         BNO   @RF00365                                            0365 01066000
*     DO;                           /* DO THE FOLLOWING              */ 01067000
*       MORESW='0'B;                /* SET OFF INDICATOR SWITCH      */ 01068000
         NI    MORESW,B'10111111'                                  0367 01069000
*       GOTO AMDPOS41;              /* SCAN FOR ADDITIONAL VALUES    */ 01070000
         B     AMDPOS41                                            0368 01071000
*     END;                          /* MORESW WAS ON                 */ 01072000
*AMDPSLT:                                                          0370 01073000
*   IF CSTART='1'B THEN             /* IF PROCESSING 'START',        */ 01074000
@RF00365 DS    0H                                                  0370 01075000
AMDPSLT  TM    CSTART,B'00100000'                                  0370 01076000
         BNO   @RF00370                                            0370 01077000
*     DO;                           /* DO THE FOLLOWING              */ 01078000
*       DY=FIVECHAR(1:2);           /* INSERT DDD IN START SLOT      */ 01079000
         L     @10,ALLPTR                                          0372 01080000
         MVC   DY(2),FIVECHAR(@10)                                 0372 01081000
*       GOTO AMDPSLT1;              /* IN TEMPTAB--CONTINUE          */ 01082000
         B     AMDPSLT1                                            0373 01083000
*     END;                          /* PROCESSING 'START'            */ 01084000
*   DYSTP=FIVECHAR(1:2);            /* INSERT DDD IN STOP SLOT       */ 01085000
@RF00370 L     @10,ALLPTR                                          0375 01086000
         MVC   DYSTP(2),FIVECHAR(@10)                              0375 01087000
*AMDPSLT1:                                                         0376 01088000
*   IF FIVECHAR(3)=' '              /* IF HOURS NOT SPECIFIED,       */ 01089000
*     THEN                          /* THEN NO TIME SPECIFIED        */ 01090000
AMDPSLT1 L     @10,ALLPTR                                          0376 01091000
         CLI   FIVECHAR+2(@10),C' '                                0376 01092000
         BNE   @RF00376                                            0376 01093000
*     DO;                           /* DO THE FOLLOWING              */ 01094000
*                                                                  0377 01095000
*       /*************************************************************/ 01096000
*       /*                                                           */ 01097000
*       /* SET TO ZERO THE HH, MM, AND SS BYTES IN THE INTERNAL TIME */ 01098000
*       /* SLOT                                                      */ 01099000
*       /*                                                           */ 01100000
*       /*************************************************************/ 01101000
*                                                                  0378 01102000
*       DO I=3 TO 5;                /* ZERO OUT HH, MM, SS BYTES     */ 01103000
         LA    @10,3                                               0378 01104000
         ST    @10,I                                               0378 01105000
@DL00378 DS    0H                                                  0379 01106000
*         FIVECHAR(I)               /* SET EACH BYTE TO ZERO         */ 01107000
*             ='00'X;                                              0379 01108000
         L     @02,ALLPTR                                          0379 01109000
         ALR   @02,@10                                             0379 01110000
         BCTR  @02,0                                               0379 01111000
         MVI   FIVECHAR(@02),X'00'                                 0379 01112000
*       END;                                                       0380 01113000
         AL    @10,@CF00044                                        0380 01114000
         ST    @10,I                                               0380 01115000
         C     @10,@CF00085                                        0380 01116000
         BNH   @DL00378                                            0380 01117000
*       IF CSTART='1'B THEN         /* IF PROCESSING 'START',        */ 01118000
         TM    CSTART,B'00100000'                                  0381 01119000
         BNO   @RF00381                                            0381 01120000
*         TIMEU=TIMEU               /* START TIMER UNITS=ZERO        */ 01121000
*             &&TIMEU;                                             0382 01122000
         XC    TIMEU(8),TIMEU                                      0382 01123000
*       ELSE                        /* STOP TIMER UNITS=ZERO         */ 01124000
*         TIMERU=TIMERU             /* STOP TIMER UNITS=ZERO         */ 01125000
*             &&TIMERU;                                            0383 01126000
         B     @RC00381                                            0383 01127000
@RF00381 XC    TIMERU(8),TIMERU                                    0383 01128000
*       GOTO AMDPEOC1;              /* SEARCH FOR NEXT KEYWORD       */ 01129000
         B     AMDPEOC1                                            0384 01130000
*     END;                          /* NO HOURS SPECIFIED            */ 01131000
*   IF FIVECHAR(4)=' ' THEN         /* IF NO MINUTES SPECIFIED,      */ 01132000
@RF00376 L     @10,ALLPTR                                          0386 01133000
         CLI   FIVECHAR+3(@10),C' '                                0386 01134000
         BNE   @RF00386                                            0386 01135000
*     FIVECHAR(4)='00'X;            /* INSERT ZEROES IN THEIR PLC    */ 01136000
         MVI   FIVECHAR+3(@10),X'00'                               0387 01137000
*   IF FIVECHAR(5)=' '              /* IF NO SECONDS SPECIFIED,      */ 01138000
*     THEN                          /* THEN                          */ 01139000
@RF00386 L     @10,ALLPTR                                          0388 01140000
         CLI   FIVECHAR+4(@10),C' '                                0388 01141000
         BNE   @RF00388                                            0388 01142000
*     FIVECHAR(5)='00'X;            /* INSERT ZEROES IN THEIR PLC    */ 01143000
         MVI   FIVECHAR+4(@10),X'00'                               0389 01144000
*   RFY                                                            0390 01145000
*    (REG4,                                                        0390 01146000
*     REG5,                                                        0390 01147000
*     REG6,                         /* NEED THESE REGS         Y02014*/ 01148000
*     REG7) RSTD;                   /*                         Y02014*/ 01149000
@RF00388 DS    0H                                                  0391 01150000
*   IF CSTART='1'B THEN             /* IF PROCESSING START VALUE,    */ 01151000
         TM    CSTART,B'00100000'                                  0391 01152000
         BNO   @RF00391                                            0391 01153000
*     REG5=FIVECHAR(3)              /* REG 5 CONTAINS TOTAL NUM      */ 01154000
*         *THREESIX+FIVECHAR(4)     /* OF                            */ 01155000
*         *SIXTY+FIVECHAR(5);       /* SECONDS SPECIFIED             */ 01156000
         L     @10,ALLPTR                                          0392 01157000
         SLR   @15,@15                                             0392 01158000
         IC    @15,FIVECHAR+2(,@10)                                0392 01159000
         M     @14,THREESIX                                        0392 01160000
         ST    @15,@TF00001                                        0392 01161000
         SLR   @15,@15                                             0392 01162000
         IC    @15,FIVECHAR+3(,@10)                                0392 01163000
         M     @14,SIXTY                                           0392 01164000
         AL    @15,@TF00001                                        0392 01165000
         SLR   REG5,REG5                                           0392 01166000
         IC    REG5,FIVECHAR+4(,@10)                               0392 01167000
         ALR   @15,REG5                                            0392 01168000
         LR    REG5,@15                                            0392 01169000
*   ELSE                            /* IF STOP VALUE, THEN           */ 01170000
*     REG5=FIVECHAR(3)              /* REG 5 CONTAINS TOTAL NUM      */ 01171000
*         *THREESIX+FIVECHAR(4)     /* OF                            */ 01172000
*         *SIXTY+FIVECHAR(5)+       /* SECONDS SPECIFIED PLUS        */ 01173000
*         1;                        /* 1 TO ALLOW FOR REC TIME >     */ 01174000
         B     @RC00391                                            0393 01175000
@RF00391 L     @10,ALLPTR                                          0393 01176000
         SLR   @15,@15                                             0393 01177000
         IC    @15,FIVECHAR+2(,@10)                                0393 01178000
         M     @14,THREESIX                                        0393 01179000
         ST    @15,@TF00001                                        0393 01180000
         SLR   @15,@15                                             0393 01181000
         IC    @15,FIVECHAR+3(,@10)                                0393 01182000
         M     @14,SIXTY                                           0393 01183000
         AL    @15,@TF00001                                        0393 01184000
         SLR   REG5,REG5                                           0393 01185000
         IC    REG5,FIVECHAR+4(,@10)                               0393 01186000
         ALR   @15,REG5                                            0393 01187000
         AL    @15,@CF00044                                        0393 01188000
         LR    REG5,@15                                            0393 01189000
*   GEN(M REG4,MILLION);            /* REGS 4 AND 5 CONTAIN # OF   0394 01190000
*                                      MICROSECONDS                  */ 01191000
@RC00391 DS    0H                                                  0394 01192000
         M REG4,MILLION                                                 01193000
*   GEN(D REG4,NUM2604);            /* DIVIDE BY 2604                */ 01194000
         D REG4,NUM2604                                                 01195000
*   REG7=REG4;                      /* SAVE THE REMAINDER            */ 01196000
         LR    REG7,REG4                                           0396 01197000
*   GENERATE;                                                      0397 01198000
         M REG4,HUNDRED                 REG5=TIMER UNITS SUBTOTAL #1    01199000
         M REG6,HUNDRED                 REG6 CONTAINS                   01200000
         D REG6,NUM2604                 TIMER UNITS SUBTOTAL #2         01201000
*   IF REG6=>HALFTIME               /* IF REMAINDER>=1302            */ 01202000
*       &REG6^=NUM2604 THEN         /* AND DIVIDEND WAS NOT = 0      */ 01203000
         C     REG6,HALFTIME                                       0398 01204000
         BL    @RF00398                                            0398 01205000
         C     REG6,NUM2604                                        0398 01206000
         BE    @RF00398                                            0398 01207000
*     REG7=REG7+1;                  /* ADD ONE TO QUOTIENT           */ 01208000
         AL    REG7,@CF00044                                       0399 01209000
*   GEN(ALR REG5,REG7);             /* REG5=TOTAL TIMER UNITS        */ 01210000
@RF00398 DS    0H                                                  0400 01211000
         ALR REG5,REG7                                                  01212000
*   IF CSTART='1'B THEN             /* IF PROCESSING 'START' VAL     */ 01213000
         TM    CSTART,B'00100000'                                  0401 01214000
         BNO   @RF00401                                            0401 01215000
*     DO;                           /* DO THE FOLLOWING              */ 01216000
*       TIMEU=TIMEU&&TIMEU;         /* ZERO START TIMER        Y02014*/ 01217000
         XC    TIMEU(8),TIMEU                                      0403 01218000
*       TIMEU(5:8)=REG5;            /* INSERT START TIMER UNITS      */ 01219000
         STCM  REG5,15,TIMEU+4                                     0404 01220000
*     END;                          /* CHECK STOP SLOTS FOR VALS     */ 01221000
*   ELSE                            /* IF PROCESSING 'STOP' VAL      */ 01222000
*     DO;                           /* DO THE FOLLOWING              */ 01223000
         B     @RC00401                                            0406 01224000
@RF00401 DS    0H                                                  0407 01225000
*       TIMERU=TIMERU&&TIMERU;      /* ZERO STOP TIMER         Y02014*/ 01226000
         XC    TIMERU(8),TIMERU                                    0407 01227000
*       TIMERU(5:8)=REG5;           /* INSERT STOP TIMER UNITS       */ 01228000
         STCM  REG5,15,TIMERU+4                                    0408 01229000
*       GOTO AMDPPOS9;              /* STOP SLOT HAS TIMER UNITS     */ 01230000
         B     AMDPPOS9                                            0409 01231000
*     END;                          /* AND NOW EXAMINE START SLTS    */ 01232000
*   IF TIME2^=BLANK1 THEN           /* IF PRTAB STOP SLOT NON-BNK    */ 01233000
@RC00401 CLC   TIME2(8,AEDITCBR),BLANK1                            0411 01234000
         BNE   @RT00411                                            0411 01235000
*     GOTO AMDPPOSA;                /* CHECK IF START>STOP           */ 01236000
*   IF TIMERU^=BLANK1 THEN          /* IF TTAB STOP SLOT NON-BLNK    */ 01237000
         CLC   TIMERU(8),BLANK1                                    0413 01238000
         BNE   @RT00413                                            0413 01239000
*     GOTO AMDPOSA1;                /* CHECK IF START>STOP           */ 01240000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK FOR NXT KW    */ 01241000
         B     AMDPEOC1                                            0415 01242000
*   RFY                                                            0416 01243000
*    (REG4,                                                        0416 01244000
*     REG5,                                                        0416 01245000
*     REG6,                         /* RELEASE THESE REG       Y02014*/ 01246000
*     REG7) UNRSTD;                 /*                         Y02014*/ 01247000
*AMDPPOS9:                                                         0417 01248000
*   IF TIME^=BLANK1 THEN            /* IF PRTAB START SLOT IS      0417 01249000
*                                      NON-BLANK, THEN               */ 01250000
AMDPPOS9 CLC   TIME(8,AEDITCBR),BLANK1                             0417 01251000
         BNE   @RT00417                                            0417 01252000
*     GOTO AMDPPOSB;                /* CHECK IF START>STOP           */ 01253000
*   IF TIMEU^=BLANK1 THEN           /* IF TTAB START SLOT IS       0419 01254000
*                                      NON-BLANK, THEN               */ 01255000
         CLC   TIMEU(8),BLANK1                                     0419 01256000
         BNE   @RT00419                                            0419 01257000
*     GOTO AMDPOSA1;                /* CHECK IF START>STOP           */ 01258000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK FOR NXT KW    */ 01259000
*                                                                  0421 01260000
         B     AMDPEOC1                                            0421 01261000
*   /*****************************************************************/ 01262000
*   /*                                                               */ 01263000
*   /* DETERMINE IF TEMPTAB START DAY IS GREATER THAN AMDPRTAB STOP  */ 01264000
*   /* DAY, OR IF TEMPTAB START TIMER UNITS ARE GREATER THAN AMDPRTAB*/ 01265000
*   /* TIMER UNITS. IF SO, OUTPUT ERROR MESSAGE. SINCE THE EQUIVALENT*/ 01266000
*   /* OF 1 SECOND HAS BEEN ADDED TO THE STOP TIME VALUE TO ALLOW FOR*/ 01267000
*   /* THE RECORD TIME BEING GREATER THAN THE SPECIFIED SECOND.000000*/ 01268000
*   /* MICROSECONDS, THE TIMER UNIT COMPARISON IS FOR EQUAL TO OR    */ 01269000
*   /* GREATER THAN.                                                 */ 01270000
*   /*                                                               */ 01271000
*   /*****************************************************************/ 01272000
*                                                                  0422 01273000
*AMDPPOSA:                                                         0422 01274000
*   IF DY>DAY2 THEN                 /* COMPARE START/STOP VALUES     */ 01275000
AMDPPOSA CLC   DY(2),DAY2(AEDITCBR)                                0422 01276000
         BH    @RT00422                                            0422 01277000
*     GOTO AMDTIMSG;                /* IF ERROR, OUTPUT DIAG MSG     */ 01278000
*   IF DY=DAY2                      /* COMPARE START/STOP VALUES     */ 01279000
*       &TIMEU=>TIME2 THEN          /* IN TABLES. IF ERROR,          */ 01280000
         CLC   DY(2),DAY2(AEDITCBR)                                0424 01281000
         BNE   @RF00424                                            0424 01282000
         CLC   TIMEU(8),TIME2(AEDITCBR)                            0424 01283000
         BNL   @RT00424                                            0424 01284000
*     GOTO AMDTIMSG;                /* OUTPUT DIAGNOSTIC MESSAGE     */ 01285000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK AT NEXT KW    */ 01286000
*                                                                  0426 01287000
         B     AMDPEOC1                                            0426 01288000
*   /*****************************************************************/ 01289000
*   /*                                                               */ 01290000
*   /* DETERMINE IF TEMPTAB START DAY IS GREATER THAN TEMPTAB STOP   */ 01291000
*   /* DAY, OR IF TEMPTAB START TIMER UNITS ARE GREATER THAN AMDPRTAB*/ 01292000
*   /* TIMER UNITS. IF SO, OUTPUT ERROR MESSAGE.                     */ 01293000
*   /*                                                               */ 01294000
*   /*****************************************************************/ 01295000
*                                                                  0427 01296000
*AMDPOSA1:                                                         0427 01297000
*   IF DY>DYSTP THEN                /* COMPARE TEMPTAB VALUES        */ 01298000
AMDPOSA1 CLC   DY(2),DYSTP                                         0427 01299000
         BH    @RT00427                                            0427 01300000
*     GOTO AMDTIMSG;                /* IF ERR, OUTPUT MESSAGE        */ 01301000
*   IF DY=DYSTP                     /* COMPARE TEMPTAB VALUES        */ 01302000
*       &TIMEU=>TIMERU THEN         /* --TIMER UNITS TOO             */ 01303000
         CLC   DY(2),DYSTP                                         0429 01304000
         BNE   @RF00429                                            0429 01305000
         CLC   TIMEU(8),TIMERU                                     0429 01306000
         BNL   @RT00429                                            0429 01307000
*     GOTO AMDTIMSG;                /* IF ERR, OUTPUT MESSAGE        */ 01308000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK AT NEXT KW    */ 01309000
*                                                                  0431 01310000
         B     AMDPEOC1                                            0431 01311000
*   /*****************************************************************/ 01312000
*   /*                                                               */ 01313000
*   /* DETERMINE IF AMDPRTAB START DAY IS GREATER THAN TEMPTAB STOP  */ 01314000
*   /* DAY, OR IF AMDPRTAB START TIMER UNITS ARE GREATER THAN TEMPTAB*/ 01315000
*   /* TIMER UNITS. IF SO, OUTPUT ERROR MESSAGE.                     */ 01316000
*   /*                                                               */ 01317000
*   /*****************************************************************/ 01318000
*                                                                  0432 01319000
*AMDPPOSB:                                                         0432 01320000
*   IF DAY>DYSTP THEN               /* COMPARE DAY VALUES            */ 01321000
AMDPPOSB CLC   DAY(2,AEDITCBR),DYSTP                               0432 01322000
         BH    @RT00432                                            0432 01323000
*     GOTO AMDTIMSG;                /* IF ERR, OUTPUT MESSAGE        */ 01324000
*   IF DAY=DYSTP                    /* COMPARE DAY VALUES            */ 01325000
*       &TIME=>TIMERU THEN          /* COMPARE TIMER UNIT VALUES     */ 01326000
         CLC   DAY(2,AEDITCBR),DYSTP                               0434 01327000
         BNE   @RF00434                                            0434 01328000
         CLC   TIME(8,AEDITCBR),TIMERU                             0434 01329000
         BNL   @RT00434                                            0434 01330000
*     GOTO AMDTIMSG;                /* IF ERR, OUTPUT MESSAGE        */ 01331000
*   GOTO AMDPEOC1;                  /* OTHERWISE, LOOK FOR NXT KW    */ 01332000
         B     AMDPEOC1                                            0436 01333000
*AMDTIMSG:                                                         0437 01334000
*   SYNMSGA=ADDR(AD8);              /* ADDRS OF ADDRS OF MSG         */ 01335000
AMDTIMSG L     @10,@CA00352                                        0437 01336000
         LA    @10,AD8-AMDPRS00(,@10)                              0437 01337000
         ST    @10,SYNMSGA                                         0437 01338000
*   GNOSTDMG='1'B;                  /* OMIT PRECEDING SYNTAX ERR   0438 01339000
*                                      MESSAGE                       */ 01340000
         OI    GNOSTDMG,B'00010000'                                0438 01341000
*   CALL AMDPRSYN;                  /* OUTPUT START>STOP MESSAGE     */ 01342000
         L     @15,ASYNTAX                                         0439 01343000
         BALR  @14,@15                                             0439 01344000
*   GOTO AMDPEOC;                   /* SET FLUSH MODE BIT            */ 01345000
         B     AMDPEOC                                             0440 01346000
*AMDPPOS8:                                                         0441 01347000
*   IF COMP4>59 THEN                /* IF MINS OR SECS>59, THEN      */ 01348000
AMDPPOS8 CLC   COMP4(4),@CF00582                                   0441 01349000
         BH    @RT00441                                            0441 01350000
*     GOTO AMDVMGCL;                /* OUTPUT BAD VALUE MSG          */ 01351000
*   IF SECIND='1'B THEN             /* IF CALCULATING SECONDS,       */ 01352000
         TM    SECIND,B'10000000'                                  0443 01353000
         BNO   @RF00443                                            0443 01354000
*     DO;                           /* DO THE FOLLOWING              */ 01355000
*       FIVECHAR(5)                 /* INSERT THEM IN SLOT           */ 01356000
*           =COMP4(4);                                             0445 01357000
         L     @10,ALLPTR                                          0445 01358000
         MVC   FIVECHAR+4(1,@10),COMP4+3                           0445 01359000
*       SECIND='0'B;                /* TURN OFF SECONDS SWITCH       */ 01360000
         NI    SECIND,B'01111111'                                  0446 01361000
*       GOTO AMDPMOR;               /* MAKE SURE NO MORE VALUES      */ 01362000
         B     AMDPMOR                                             0447 01363000
*     END;                          /* CALCULATING SECONDS           */ 01364000
*   FIVECHAR(4)=COMP4(4);           /* INSERT MINS IN SLOT           */ 01365000
@RF00443 L     @10,ALLPTR                                          0449 01366000
         MVC   FIVECHAR+3(1,@10),COMP4+3                           0449 01367000
*   MININD='0'B;                    /* TURN OFF MINUTES SWITCH       */ 01368000
         NI    MININD,B'10111111'                                  0450 01369000
*   GOTO AMDPMOR;                   /* CHK FOR MORE VALUES           */ 01370000
*                                                                  0451 01371000
         B     AMDPMOR                                             0451 01372000
*   /*****************************************************************/ 01373000
*   /*                                                               */ 01374000
*   /* THIS SUBROUTINE PROCESSES THE USR KEYWORD AND ITS ASSOCIATED  */ 01375000
*   /* VALUES. A SYMBOLIC EID, A SINGLE EID, AND AN EID RANGE ALL    */ 01376000
*   /* QUALIFY AS 'USR' KEYWORDS. 'USR=ALL' ALSO IS AN ACCEPTABLE    */ 01377000
*   /* KEYWORD/VALUE COMBINATION.                                    */ 01378000
*   /*                                                               */ 01379000
*   /*****************************************************************/ 01380000
*                                                                  0452 01381000
*AMDPUSR:                                                          0452 01382000
*   IF ALLU='1'B                    /* USR=ALL ALREADY SPECIFIED     */ 01383000
*       |ALLUT='1'B THEN            /* OR USR=ALL IND IN TEMPTAB     */ 01384000
AMDPUSR  TM    ALLU(AEDITCBR),B'10000000'                          0452 01385000
         BO    @RT00452                                            0452 01386000
         TM    ALLUT,B'10000000'                                   0452 01387000
         BO    @RT00452                                            0452 01388000
*     GOTO AMDPCK1;                 /* IGNORE REST OF KW             */ 01389000
*   SELUT='1'B;                     /* SET ON USR=SEL BIT IN TTAB    */ 01390000
         OI    SELUT,B'01000000'                                   0454 01391000
*AMDPUSR1:                                                         0455 01392000
*   LFTBIT='0'B;                    /* TURN OFF LEFT INDICATOR       */ 01393000
AMDPUSR1 DS    0H                                                  0456 01394000
*   RTBIT='0'B;                     /* TURN OFF RIGHT INDICATOR      */ 01395000
*   BOTHBIT='0'B;                   /* TURN OFF SINGLE VALUE IND     */ 01396000
*   SYMBIT='0'B;                    /* TURN OFF SYMBOLIC EID IND     */ 01397000
*   DASHSW='0'B;                    /* TURN OFF DASH SWITCH          */ 01398000
         NI    LFTBIT,B'00000111'                                  0459 01399000
*   LFTVAL=' ';                     /* BLANK OUT LEFT SLOT           */ 01400000
         MVI   LFTVAL+1,C' '                                       0460 01401000
         MVI   LFTVAL,C' '                                         0460 01402000
*   RTVAL=' ';                      /* BLANK OUT RIGHT SLOT          */ 01403000
         MVI   RTVAL+1,C' '                                        0461 01404000
         MVI   RTVAL,C' '                                          0461 01405000
*   NUMCNT=USRCOUNT+USRCRCNT;       /* UPDATE COUNTER FOR EACH VALUE    01406000
*                                      SPECIFIED                     */ 01407000
         L     NUMCNT,USRCOUNT                                     0462 01408000
         AL    NUMCNT,USRCRCNT                                     0462 01409000
*   IF NUMCNT>20 THEN               /* IF OVER 20 VALUES GIVEN,      */ 01410000
         C     NUMCNT,@CF00129                                     0463 01411000
         BNH   @RF00463                                            0463 01412000
*     DO;                           /* OUTPUT EXCESSIV # VALS MSG    */ 01413000
*AMDEXCAL:                                                         0465 01414000
*       CALL AMDUMMG;               /* HAVE DIAGNOSTIC OUTPUTTED     */ 01415000
AMDEXCAL L     @15,@CV00425                                        0465 01416000
         BALR  @14,@15                                             0465 01417000
*       GOTO AMDCDCK;               /* CHECK RETURN CODE             */ 01418000
         B     AMDCDCK                                             0466 01419000
*     END;                                                         0467 01420000
*AMDPUSR2:                                                         0468 01421000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01422000
*       |SCNCHAR=' '                /* OR BLANK                      */ 01423000
*       |SCNCHAR=')' THEN           /* OR RIGHT PAREN FOUND, THEN    */ 01424000
@RF00463 DS    0H                                                  0468 01425000
AMDPUSR2 L     @10,SCNPTR                                          0468 01426000
         CLI   SCNCHAR(@10),C','                                   0468 01427000
         BE    @RT00468                                            0468 01428000
         CLI   SCNCHAR(@10),C' '                                   0468 01429000
         BE    @RT00468                                            0468 01430000
         CLI   SCNCHAR(@10),C')'                                   0468 01431000
         BE    @RT00468                                            0468 01432000
*     GOTO AMDPUSR3;                /* CALCULATE VALUE LENGTH        */ 01433000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END OF STMT,    */ 01434000
*     THEN                          /* THEN                          */ 01435000
         C     @10,EOCADDR                                         0470 01436000
         BE    @RT00470                                            0470 01437000
*     GOTO AMDPUSR3;                /* CALCULATE VALUE LENGTH        */ 01438000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01439000
         AL    @10,@CF00044                                        0472 01440000
         ST    @10,SCNPTR                                          0472 01441000
*   GOTO AMDPUSR2;                  /* CONTINUE SCAN FOR DELIMITR    */ 01442000
         B     AMDPUSR2                                            0473 01443000
*AMDPUSR3:                                                         0474 01444000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01445000
AMDPUSR3 L     @10,ADDRS3                                          0474 01446000
         L     @02,SCNPTR                                          0474 01447000
         SLR   @02,@10                                             0474 01448000
         ST    @02,LNGTH                                           0474 01449000
*   IF LNGTH>9 THEN                 /* IF >9 CHARS, OUTPUT     YM1411*/ 01450000
         C     @02,@CF00166                                        0475 01451000
         BH    @RT00475                                            0475 01452000
*     GOTO AMDVLNCL;                /* BAD VALUE LENGTH MESSAGE      */ 01453000
*   IF LNGTH<1 THEN                 /* IF LNGTH<1, OUTPUT BAD        */ 01454000
         LTR   @02,@02                                             0477 01455000
         BNP   @RT00477                                            0477 01456000
*     GOTO AMDELMCL;                /* DELIMITER MESSAGE             */ 01457000
*   IF LNGTH=3 THEN                 /* IF LENGTH IS THREE            */ 01458000
         C     @02,@CF00168                                        0479 01459000
         BNE   @RF00479                                            0479 01460000
*     DO;                           /* DO THE FOLLOWING              */ 01461000
*       IF VAL1(1:3)                /* CHECK FOR SPECIAL CASE OF     */ 01462000
*           ^='ALL' THEN            /* 'USR=ALL'--IF NOT, THEN       */ 01463000
         CLC   VAL1(3,@10),@CC00593                                0481 01464000
         BNE   @RT00481                                            0481 01465000
*         GOTO AMDPUSR4;            /* CONTINUE VALUE SCAN           */ 01466000
*       ALLUT='1'B;                 /* IF SO, SET ON USR ALL FLG     */ 01467000
         OI    ALLUT,B'10000000'                                   0483 01468000
*       GOTO AMDPCK1;               /* SEARCH FOR NEXT KEYWORD       */ 01469000
         B     AMDPCK1                                             0484 01470000
*     END;                          /* LENGTH WAS 3                  */ 01471000
*                                                                  0485 01472000
*   /*****************************************************************/ 01473000
*   /*                                                               */ 01474000
*   /* DETERMINE IF ALL DIGITS ARE VALID HEX DIGITS--BETWEEN ZERO AND*/ 01475000
*   /* 'F'. IF ANY ARE NOT, CHK SYMBOLIC EID TABLE.                  */ 01476000
*   /*                                                               */ 01477000
*   /*****************************************************************/ 01478000
*                                                                  0486 01479000
*AMDPUSR4:                                                         0486 01480000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK TO DETERMINE IF ALL     */ 01481000
@RF00479 DS    0H                                                  0486 01482000
AMDPUSR4 L     @10,LNGTH                                           0486 01483000
         ST    @10,I                                               0486 01484000
         B     @DE00486                                            0486 01485000
@DL00486 DS    0H                                                  0487 01486000
*     IF VAL1(I)='-' THEN           /* IF EMBEDDED DASH              */ 01487000
         L     @02,ADDRS3                                          0487 01488000
         ALR   @10,@02                                             0487 01489000
         BCTR  @10,0                                               0487 01490000
         CLI   VAL1(@10),C'-'                                      0487 01491000
         BE    @RT00487                                            0487 01492000
*       GOTO AMDDASH;               /* CHECK FOR VALIDITY            */ 01493000
*     IF VAL1(I)=>'A'               /* DIGITS ARE BETWEEN 'A'        */ 01494000
*         &VAL1(I)=<'F' THEN        /* AND 'F'                       */ 01495000
         L     @10,I                                               0489 01496000
         ALR   @10,@02                                             0489 01497000
         BCTR  @10,0                                               0489 01498000
         CLI   VAL1(@10),C'A'                                      0489 01499000
         BL    @RF00489                                            0489 01500000
         L     @10,I                                               0489 01501000
         ALR   @02,@10                                             0489 01502000
         BCTR  @02,0                                               0489 01503000
         CLI   VAL1(@02),C'F'                                      0489 01504000
         BNH   @RT00489                                            0489 01505000
*       GOTO AMDPEND2;              /* OR                            */ 01506000
*     IF VAL1(I)<'0'                /* 0                             */ 01507000
*         |VAL1(I)>'9' THEN         /* AND 9                         */ 01508000
@RF00489 L     @10,ADDRS3                                          0491 01509000
         L     @02,I                                               0491 01510000
         ALR   @02,@10                                             0491 01511000
         BCTR  @02,0                                               0491 01512000
         CLI   VAL1(@02),C'0'                                      0491 01513000
         BL    @RT00491                                            0491 01514000
         L     @02,I                                               0491 01515000
         ALR   @10,@02                                             0491 01516000
         BCTR  @10,0                                               0491 01517000
         CLI   VAL1(@10),C'9'                                      0491 01518000
         BH    @RT00491                                            0491 01519000
*       GOTO AMDPSYMB;              /* IF NOT, SYMBOLIC EID          */ 01520000
*AMDPEND2:                                                         0493 01521000
*   END;                                                           0493 01522000
AMDPEND2 SLR   @10,@10                                             0493 01523000
         BCTR  @10,0                                               0493 01524000
         AL    @10,I                                               0493 01525000
         ST    @10,I                                               0493 01526000
@DE00486 LTR   @10,@10                                             0493 01527000
         BP    @DL00486                                            0493 01528000
*   GOTO AMDPUSR6;                  /* NON-SYMBOLIC EID              */ 01529000
*                                                                  0494 01530000
         B     AMDPUSR6                                            0494 01531000
*   /*****************************************************************/ 01532000
*   /*                                                               */ 01533000
*   /* CHECK FOR EMBEDDED DASH. IF 1ST OR LAST CHARACTER, OR IF MORE */ 01534000
*   /* THEN ONE IN RANGE, HAVE INVALID DELIMITER                     */ 01535000
*   /*                                                               */ 01536000
*   /*****************************************************************/ 01537000
*                                                                  0495 01538000
*AMDDASH:                                                          0495 01539000
*   IF I=1                          /* IF FIRST CHARACTER,           */ 01540000
*       |I=LNGTH THEN               /* OR DASH IS LAST CHARACTER     */ 01541000
AMDDASH  L     @10,I                                               0495 01542000
         C     @10,@CF00044                                        0495 01543000
         BE    @RT00495                                            0495 01544000
         C     @10,LNGTH                                           0495 01545000
         BE    @RT00495                                            0495 01546000
*     GOTO AMDELMCL;                /* OUTPUT INVALID DELIM MSG      */ 01547000
*   IF DASHSW='1'B THEN             /* IF MORE THAN 1 DASH IN VAL    */ 01548000
         TM    DASHSW,B'00001000'                                  0497 01549000
         BNO   @RF00497                                            0497 01550000
*     DO;                           /* DO THE FOLLOWING              */ 01551000
*       DASHSW='0'B;                /* TURN OFF DASHSW               */ 01552000
         NI    DASHSW,B'11110111'                                  0499 01553000
*       GOTO AMDELMCL;              /* OUTPUT INVALID DELIM MSG      */ 01554000
         B     AMDELMCL                                            0500 01555000
*     END;                                                         0501 01556000
*   DASHSW='1'B;                    /* IF FIRST DASH, SET ON SW      */ 01557000
@RF00497 OI    DASHSW,B'00001000'                                  0502 01558000
*   GOTO AMDPEND2;                  /* CHECK NEXT DIGIT              */ 01559000
         B     AMDPEND2                                            0503 01560000
*AMDPSYMB:                                                         0504 01561000
*   IF LNGTH>4 THEN                 /* SYMBOLIC EID MUST BE=> 4      */ 01562000
AMDPSYMB L     @10,LNGTH                                           0504 01563000
         C     @10,@CF00098                                        0504 01564000
         BH    @RT00504                                            0504 01565000
*     GOTO AMDPSR51;                /* OUTPUT ERROR MESSAGE          */ 01566000
*   EIDCT=1;                        /* BEGIN EID TABLE SEARCH        */ 01567000
         MVC   EIDCT(4),@CF00044                                   0506 01568000
*   COMP4=' ';                      /* BLANK COMPARE AREA            */ 01569000
         MVI   COMP4+1,C' '                                        0507 01570000
         MVC   COMP4+2(2),COMP4+1                                  0507 01571000
         MVI   COMP4,C' '                                          0507 01572000
*   COMP4=VAL1(1:LNGTH);            /* MOVE IN DELIMITED VALUE       */ 01573000
         MVI   COMP4+1,C' '                                        0508 01574000
         MVC   COMP4+2(2),COMP4+1                                  0508 01575000
         BCTR  @10,0                                               0508 01576000
         L     @02,ADDRS3                                          0508 01577000
         EX    @10,@SM00676                                        0508 01578000
*AMDPUSR5:                                                         0509 01579000
*   IF SYMBIT='1'B THEN             /* PROCESSING SYMBOLIC EID?      */ 01580000
AMDPUSR5 TM    SYMBIT,B'00010000'                                  0509 01581000
         BNO   @RF00509                                            0509 01582000
*     DO;                           /* IF SO, DO THE FOLLOWING       */ 01583000
*       IF EIDCT>18 THEN            /* IF BEYOND # OF SYMB EIDS,     */ 01584000
         L     @10,EIDCT                                           0511 01585000
         C     @10,@CF00399                                        0511 01586000
         BNH   @RF00511                                            0511 01587000
*         DO;                       /* THEN DO THE FOLLOWING         */ 01588000
*           SYMBIT='0'B;            /* SET TO 0 SYMB EID BIT         */ 01589000
         NI    SYMBIT,B'11101111'                                  0513 01590000
*           GOTO AMDPUPRN;          /* CHECK FOR MORE VALUES         */ 01591000
         B     AMDPUPRN                                            0514 01592000
*         END;                                                     0515 01593000
*       GOTO AMDINPRN;              /* IF # OK, CHK FOR EID MATCH    */ 01594000
         B     AMDINPRN                                            0516 01595000
*     END;                                                         0517 01596000
*CHK:                                                              0518 01597000
*   IF EIDCT>18 THEN                /* IF BEYOND # SYMBOLIC EIDS     */ 01598000
@RF00509 DS    0H                                                  0518 01599000
CHK      L     @10,EIDCT                                           0518 01600000
         C     @10,@CF00399                                        0518 01601000
         BNH   @RF00518                                            0518 01602000
*     DO;                           /* DO THE FOLLOWING              */ 01603000
*AMDPSR51:                                                         0520 01604000
*       SYNMSGA=ADDR(AD9);          /* OUTPUT ERR MSG--STORE ADRS    */ 01605000
AMDPSR51 L     @10,@CA00352                                        0520 01606000
         LA    @10,AD9-AMDPRS00(,@10)                              0520 01607000
         ST    @10,SYNMSGA                                         0520 01608000
*       GNOSTDMG='1'B;              /* OMIT ISSUANCE OF AMD165I      */ 01609000
         OI    GNOSTDMG,B'00010000'                                0521 01610000
*       CALL AMDPRSYN;              /* OUTPUT INVALID EID MSG        */ 01611000
         L     @15,ASYNTAX                                         0522 01612000
         BALR  @14,@15                                             0522 01613000
*       GOTO AMDPEOC;               /* SET FLUSH MODE SWITCH         */ 01614000
         B     AMDPEOC                                             0523 01615000
*     END;                          /* HAD INVALID SYMBOLIC EID      */ 01616000
*AMDINPRN:                                                         0525 01617000
*   IF EIDNAM0(EIDCT)               /* IF SYMBOLIC EID MATCH         */ 01618000
*       =COMP4                      /* FOUND                         */ 01619000
*     THEN                          /* THEN                          */ 01620000
@RF00518 DS    0H                                                  0525 01621000
AMDINPRN L     @10,EIDCT                                           0525 01622000
         SLA   @10,3                                               0525 01623000
         L     @02,@CA00401                                        0525 01624000
         ST    @10,@TF00001                                        0525 01625000
         ALR   @10,@02                                             0525 01626000
         AL    @10,@CF00678                                        0525 01627000
         CLC   EIDNAM0-AMDPRS01(4,@10),COMP4                       0525 01628000
         BNE   @RF00525                                            0525 01629000
*     DO;                           /* DO THE FOLLOWING              */ 01630000
*       LFTVAL=LRANGE0              /* MOVE IN LEFT AND              */ 01631000
*           (EIDCT);                                               0527 01632000
         L     @10,@TF00001                                        0527 01633000
         AL    @10,@CF00679                                        0527 01634000
         LH    @10,LRANGE0-AMDPRS01-4(@10,@02)                     0527 01635000
         STH   @10,LFTVAL                                          0527 01636000
*       RTVAL=HRANGE0               /* RIGHT VALUES                  */ 01637000
*           (EIDCT);                                               0528 01638000
         L     @10,@TF00001                                        0528 01639000
         BCTR  @02,0                                               0528 01640000
         BCTR  @02,0                                               0528 01641000
         LH    @10,HRANGE0-AMDPRS01-6(@10,@02)                     0528 01642000
         STH   @10,RTVAL                                           0528 01643000
*       SYMBIT='1'B;                /* SET ON SYMBOLIC EID BIT       */ 01644000
         OI    SYMBIT,B'00010000'                                  0529 01645000
*       GOTO AMDPSARG;              /* BEGIN USRTAB PROCESSING       */ 01646000
         B     AMDPSARG                                            0530 01647000
*     END;                          /* MATCH WAS FOUND               */ 01648000
*   EIDCT=EIDCT+1;                  /* NO MATCH-CHECK NEXT ELEM      */ 01649000
@RF00525 LA    @10,1                                               0532 01650000
         AL    @10,EIDCT                                           0532 01651000
         ST    @10,EIDCT                                           0532 01652000
*   GOTO AMDPUSR5;                  /* CONTINUE SYMBOLIC SEARCH      */ 01653000
         B     AMDPUSR5                                            0533 01654000
*AMDPUSR6:                                                         0534 01655000
*   IF LNGTH>7 THEN                 /* IF LENGTH > SEVEN             */ 01656000
AMDPUSR6 L     @10,LNGTH                                           0534 01657000
         C     @10,@CF00055                                        0534 01658000
         BH    @RT00534                                            0534 01659000
*     GOTO AMDVLNCL;                /* OUTPUT INVALID VALUE LENGTH 0535 01660000
*                                      MESSAGE                       */ 01661000
*   IF LNGTH>3 THEN                 /* BETTER HAVE EID RANGE         */ 01662000
         C     @10,@CF00168                                        0536 01663000
         BNH   @RF00536                                            0536 01664000
*     DO;                           /* DO THE FOLLOWING              */ 01665000
*       SCNPTR=ADDRS3;              /* RESET POINTER                 */ 01666000
*                                                                  0538 01667000
         L     @10,ADDRS3                                          0538 01668000
         ST    @10,SCNPTR                                          0538 01669000
*       /*************************************************************/ 01670000
*       /*                                                           */ 01671000
*       /* SCAN LENGTH NUMBER OF CHARACTERS FOR DASH-- ARE DEALING   */ 01672000
*       /* WITH EID RANGE.                                           */ 01673000
*       /*                                                           */ 01674000
*       /*************************************************************/ 01675000
*                                                                  0539 01676000
*       DO I=1 TO LNGTH;            /* SCAN LNGTH NUM OF CHARS       */ 01677000
         LA    @10,1                                               0539 01678000
         B     @DE00539                                            0539 01679000
@DL00539 DS    0H                                                  0540 01680000
*         IF SCNCHAR='-' THEN       /* LOOKING FOR RANGE DELIMITR    */ 01681000
         L     @02,SCNPTR                                          0540 01682000
         CLI   SCNCHAR(@02),C'-'                                   0540 01683000
         BE    @RT00540                                            0540 01684000
*           GOTO AMDPFND;           /* IF FOUND, CONTINUE SEARCH     */ 01685000
*         SCNPTR=SCNPTR+1;          /* EXAMINE NEXT CHARACTER        */ 01686000
         AL    @02,@CF00044                                        0542 01687000
         ST    @02,SCNPTR                                          0542 01688000
*       END;                        /* SEARCH FOR DASH               */ 01689000
         AL    @10,@CF00044                                        0543 01690000
@DE00539 ST    @10,I                                               0543 01691000
         C     @10,LNGTH                                           0543 01692000
         BNH   @DL00539                                            0543 01693000
*       GOTO AMDVLNCL;              /* OVER 3 CHARS AND NOT RANGE    */ 01694000
         B     AMDVLNCL                                            0544 01695000
*     END;                          /* EID RANGE CHECK               */ 01696000
*   IF LNGTH=3 THEN                 /* MAY HAVE SPECIAL CASE         */ 01697000
@RF00536 CLC   LNGTH(4),@CF00168                                   0546 01698000
         BNE   @RF00546                                            0546 01699000
*     DO;                           /* DO THE FOLLOWING              */ 01700000
*       IF VAL1(2)='-'              /* IF MIDDLE CHARACTER IS A      */ 01701000
*         THEN                                                     0548 01702000
         L     @10,ADDRS3                                          0548 01703000
         CLI   VAL1+1(@10),C'-'                                    0548 01704000
         BNE   @RF00548                                            0548 01705000
*         DO;                       /* DASH, THEN                    */ 01706000
*           LNGTH=1;                /* LNGTH OF FIRST VALUE IS 1     */ 01707000
         MVC   LNGTH(4),@CF00044                                   0550 01708000
*           ALLPTR=SCNPTR-1;        /* POSITION TO BEG'NG OF 2ND   0551 01709000
*                                      VALUE                         */ 01710000
         L     @10,SCNPTR                                          0551 01711000
         BCTR  @10,0                                               0551 01712000
         ST    @10,ALLPTR                                          0551 01713000
*           GOTO AMDPFND1;          /* PROCEED AS WITH 'LEFT' VAL    */ 01714000
         B     AMDPFND1                                            0552 01715000
*         END;                      /* THREE CHARS WITH RANGE        */ 01716000
*       GOTO AMDPUSR7;              /* NO DASH IN MIDL--NO RANGE     */ 01717000
         B     AMDPUSR7                                            0554 01718000
*     END;                          /* IF LENGTH=THREE               */ 01719000
*AMDPUSR7:                                                         0556 01720000
*   ALLCT=1;                        /* BEGIN TABLE SEARCH            */ 01721000
@RF00546 DS    0H                                                  0556 01722000
AMDPUSR7 MVC   ALLCT(4),@CF00044                                   0556 01723000
*   BOTHBIT='1'B;                   /* HAVE SINGLE RANGE             */ 01724000
         OI    BOTHBIT,B'00100000'                                 0557 01725000
*   CALL AMDPRHX;                   /* CNVT EXT HEX TO BINARY        */ 01726000
         L     @15,@CV00421                                        0558 01727000
         BALR  @14,@15                                             0558 01728000
*   LFTVAL=COMP8(3:4);              /* MOVE IN RESULT                */ 01729000
         MVC   LFTVAL(2),COMP8+2                                   0559 01730000
*   RTVAL=COMP8(3:4);               /* MOVE IN RESULT                */ 01731000
         MVC   RTVAL(2),COMP8+2                                    0560 01732000
*AMDPUS71:                                                         0561 01733000
*   ARG=LFTVAL;                     /* PROCESS LEFT VALUE FIRST      */ 01734000
AMDPUS71 MVC   ARG(2),LFTVAL                                       0561 01735000
*AMDPUSR8:                                                         0562 01736000
*   IF USRNGTAB(ALLCT,3:4)          /* Q/IS UPPER RANGE PORTION      */ 01737000
*       =BLANK1 THEN                /* BLANK                         */ 01738000
AMDPUSR8 L     @10,ALLCT                                           0562 01739000
         SLA   @10,2                                               0562 01740000
         ST    @10,@TF00001                                        0562 01741000
         ALR   @10,AEDITCBR                                        0562 01742000
         CLC   USRNGTAB-2(2,@10),BLANK1                            0562 01743000
         BE    @RT00562                                            0562 01744000
*     GOTO AMDPINS;                 /* IF YES, INSERT VAL            */ 01745000
*   IF ARG=>USRNGTAB(ALLCT,1        /* IF CURRENT VALUE=>LOWER       */ 01746000
*       :2)&ARG=<USRNGTAB           /* RANGE PORTION, AND =<         */ 01747000
*       (ALLCT,3:4) THEN            /* UPPER RNG PORTION, THEN NO  0564 01748000
*                                      NEED TO INSERT VAL            */ 01749000
         LR    @10,AEDITCBR                                        0564 01750000
         AL    @10,@TF00001                                        0564 01751000
         CLC   ARG(2),USRNGTAB-4(@10)                              0564 01752000
         BL    @RF00564                                            0564 01753000
         LR    @10,AEDITCBR                                        0564 01754000
         AL    @10,@TF00001                                        0564 01755000
         CLC   ARG(2),USRNGTAB-2(@10)                              0564 01756000
         BNH   @RT00564                                            0564 01757000
*     GOTO AMDPUSRA;                /* VAL--CONTINUE PROCESSING      */ 01758000
*   IF RTBIT='1'B THEN              /* IF PROCESSING UPPER LIMIT,    */ 01759000
@RF00564 TM    RTBIT,B'01000000'                                   0566 01760000
         BO    @RT00566                                            0566 01761000
*     GOTO AMDPINS2;                /* CHECK FURTHER                 */ 01762000
*   ALLCT=ALLCT+1;                  /* CONTINUE TABLE SEARCH         */ 01763000
         LA    @10,1                                               0568 01764000
         AL    @10,ALLCT                                           0568 01765000
         ST    @10,ALLCT                                           0568 01766000
*   IF ALLCT>20 THEN                /* Q/OUT OF TABLE                */ 01767000
         C     @10,@CF00129                                        0569 01768000
         BH    @RT00569                                            0569 01769000
*     GOTO AMDEXCAL;                /* YES--TOO MANY VALS ERR MSG    */ 01770000
*   GOTO AMDPUSR8;                  /* NO--CONTINUE TABLE SEARCH     */ 01771000
         B     AMDPUSR8                                            0571 01772000
*AMDPFND:                                                          0572 01773000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01774000
AMDPFND  L     @10,SCNPTR                                          0572 01775000
         LR    @02,@10                                             0572 01776000
         SL    @02,ADDRS3                                          0572 01777000
         ST    @02,LNGTH                                           0572 01778000
*   ALLPTR=SCNPTR+1;                /* CALC BEG'NG @ OF NEXT VAL     */ 01779000
         LA    @15,1                                               0573 01780000
         ALR   @10,@15                                             0573 01781000
         ST    @10,ALLPTR                                          0573 01782000
*   IF LNGTH>3 THEN                 /* IF LNGTH>3, THEN              */ 01783000
         C     @02,@CF00168                                        0574 01784000
         BH    @RT00574                                            0574 01785000
*     GO TO AMDVLNCL;               /* OUTPUT INVALID LNGTH MSG      */ 01786000
*   IF LNGTH<1 THEN                 /* IF LENGTH<1, THEN             */ 01787000
         CR    @02,@15                                             0576 01788000
         BL    @RT00576                                            0576 01789000
*     GOTO AMDELMCL;                /* OUTPUT BAD DELIMITER MSG      */ 01790000
*AMDPFND1:                                                         0578 01791000
*   CALL AMDPRHX;                   /* CNVT EXT HEX TO BINARY        */ 01792000
AMDPFND1 L     @15,@CV00421                                        0578 01793000
         BALR  @14,@15                                             0578 01794000
*   LFTVAL=COMP8(3:4);              /* MOVE IN RESULT                */ 01795000
         MVC   LFTVAL(2),COMP8+2                                   0579 01796000
*AMDPSARG:                                                         0580 01797000
*   LFTBIT='1'B;                    /* SET ON LOWER RANGE INDCATR    */ 01798000
AMDPSARG OI    LFTBIT,B'10000000'                                  0580 01799000
*   ALLCT=1;                        /* INITIALIZE TABLE SEARCH CT    */ 01800000
         MVC   ALLCT(4),@CF00044                                   0581 01801000
*   GOTO AMDPUS71;                  /* PROCESS LEFT VALUE FIRST      */ 01802000
         B     AMDPUS71                                            0582 01803000
*AMDPINS:                                                          0583 01804000
*   IF BOTHBIT='1'B THEN            /* IF PROCESSING SINGLE VAL,     */ 01805000
AMDPINS  TM    BOTHBIT,B'00100000'                                 0583 01806000
         BNO   @RF00583                                            0583 01807000
*     DO;                           /* DO THE FOLLOWING              */ 01808000
*       USRNGTAB(ALLCT,1:2)         /* INSERT VAL AS LOWER PART      */ 01809000
*           =ARG;                   /* OF RANGE                      */ 01810000
         L     @10,ALLCT                                           0585 01811000
         SLA   @10,2                                               0585 01812000
         ST    @10,@TF00001                                        0585 01813000
         ALR   @10,AEDITCBR                                        0585 01814000
         MVC   USRNGTAB-4(2,@10),ARG                               0585 01815000
*       USRNGTAB(ALLCT,3:4)         /* INSERT VAL AS UPPER PART      */ 01816000
*           =ARG;                   /* OF RANGE                      */ 01817000
         LR    @10,AEDITCBR                                        0586 01818000
         AL    @10,@TF00001                                        0586 01819000
         MVC   USRNGTAB-2(2,@10),ARG                               0586 01820000
*       USRCRCNT=USRCRCNT+1;        /* UPDATE USR VALUE COUNTER      */ 01821000
         LA    @10,1                                               0587 01822000
         AL    @10,USRCRCNT                                        0587 01823000
         ST    @10,USRCRCNT                                        0587 01824000
*       BOTHBIT='0'B;               /* TURN OFF SINGLE VALUE BIT     */ 01825000
*                                                                  0588 01826000
         NI    BOTHBIT,B'11011111'                                 0588 01827000
*       /*************************************************************/ 01828000
*       /*                                                           */ 01829000
*       /* POSITION TO NEXT KEYWORD VALUE. IF NONE EXISTS, ATTEMPT TO*/ 01830000
*       /* POSITION TO NEXT KEYWORD.                                 */ 01831000
*       /*                                                           */ 01832000
*       /*************************************************************/ 01833000
*                                                                  0589 01834000
*AMDPUPRN:                                                         0589 01835000
*       IF SYMBIT='1'B THEN         /* IF PROCESSING SYMB EIDS,      */ 01836000
AMDPUPRN TM    SYMBIT,B'00010000'                                  0589 01837000
         BNO   @RF00589                                            0589 01838000
*         DO;                       /* DO THE FOLLOWING              */ 01839000
*           EIDCT=EIDCT+1;          /* UPDATE EID TABL INDEX         */ 01840000
         LA    @10,1                                               0591 01841000
         AL    @10,EIDCT                                           0591 01842000
         ST    @10,EIDCT                                           0591 01843000
*           GOTO AMDPUSR5;          /* CONTINUE EID TABL SEARCH      */ 01844000
         B     AMDPUSR5                                            0592 01845000
*         END;                      /*                         Y02014*/ 01846000
*       IF PAREN='0'B THEN          /* IF NO MORE VALUES, THEN       */ 01847000
@RF00589 TM    PAREN,B'00010000'                                   0594 01848000
         BZ    @RT00594                                            0594 01849000
*         GOTO AMDPEOC1;            /* LOOK FOR NEXT KEYWORD         */ 01850000
*       IF SCNCHAR=')' THEN         /* IF DELIMITER FOUND, THEN      */ 01851000
         L     @10,SCNPTR                                          0596 01852000
         CLI   SCNCHAR(@10),C')'                                   0596 01853000
         BE    @RT00596                                            0596 01854000
*         GOTO AMDPEOC1;            /* LOOK FOR NEXT KEYWORD         */ 01855000
*       SCNPTR=SCNPTR+1;            /* UPDATE BUFFER SCAN PTR        */ 01856000
         AL    @10,@CF00044                                        0598 01857000
         ST    @10,SCNPTR                                          0598 01858000
*       ADDRS3=SCNPTR;              /* ADDRS OF NEXT VALUE           */ 01859000
         ST    @10,ADDRS3                                          0599 01860000
*       GOTO AMDPUSR1;              /* RESUME USER SCAN              */ 01861000
         B     AMDPUSR1                                            0600 01862000
*     END;                          /* WAS PROCESSING SINGLE VAL     */ 01863000
*   IF LFTBIT='0'B THEN             /* IF LEFT OFF, MUST BE          */ 01864000
@RF00583 TM    LFTBIT,B'10000000'                                  0602 01865000
         BZ    @RT00602                                            0602 01866000
*     GOTO AMDPINS2;                /* PROCESSING RT OR UPPER VAL    */ 01867000
*   USRNGTAB(ALLCT,1:2)             /* LEFT VAL, SO INSERT IT        */ 01868000
*       =ARG;                       /* INTO LOWER RANGE              */ 01869000
         L     @10,ALLCT                                           0604 01870000
         SLA   @10,2                                               0604 01871000
         ALR   @10,AEDITCBR                                        0604 01872000
         MVC   USRNGTAB-4(2,@10),ARG                               0604 01873000
*   USRCRCNT=USRCRCNT+1;            /* UPDATE USR VALUE COUNTER      */ 01874000
         LA    @10,1                                               0605 01875000
         AL    @10,USRCRCNT                                        0605 01876000
         ST    @10,USRCRCNT                                        0605 01877000
*AMDPRTVL:                                                         0606 01878000
*   LFTBIT='0'B;                    /* TURN OFF LEFT BIT             */ 01879000
AMDPRTVL NI    LFTBIT,B'01111111'                                  0606 01880000
*   IF RTVAL^=BLANK1 THEN           /* Q/RT VAL FILLED IN            */ 01881000
         CLC   RTVAL(2),BLANK1                                     0607 01882000
         BNE   @RT00607                                            0607 01883000
*     GOTO AMDPIN12;                /* YES                           */ 01884000
*   ADDRS3=ALLPTR;                  /* RESET ADDRS3                  */ 01885000
         L     @10,ALLPTR                                          0609 01886000
         ST    @10,ADDRS3                                          0609 01887000
*   SCNPTR=ADDRS3;                  /* POINT TO NEXT VAL             */ 01888000
         ST    @10,SCNPTR                                          0610 01889000
*AMDPINS1:                                                         0611 01890000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01891000
*       |SCNCHAR=' '                /* OR BLANK                      */ 01892000
*       |SCNCHAR=')' THEN           /* OR RIGHT PAREN FOUND, THEN    */ 01893000
AMDPINS1 L     @10,SCNPTR                                          0611 01894000
         CLI   SCNCHAR(@10),C','                                   0611 01895000
         BE    @RT00611                                            0611 01896000
         CLI   SCNCHAR(@10),C' '                                   0611 01897000
         BE    @RT00611                                            0611 01898000
         CLI   SCNCHAR(@10),C')'                                   0611 01899000
         BE    @RT00611                                            0611 01900000
*     GOTO AMDPIN11;                /* CONTINUE PROCESSING           */ 01901000
*   IF SCNPTR=EOCADDR               /* IF LOGICAL END OF STMT        */ 01902000
*     THEN                          /* SERVES AS DELIMITER, THEN     */ 01903000
         C     @10,EOCADDR                                         0613 01904000
         BE    @RT00613                                            0613 01905000
*     GOTO AMDPIN11;                /* CONTINUE PROCESSING           */ 01906000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01907000
         AL    @10,@CF00044                                        0615 01908000
         ST    @10,SCNPTR                                          0615 01909000
*   GOTO AMDPINS1;                  /* CONTINUE SCAN FOR DELIMITR    */ 01910000
         B     AMDPINS1                                            0616 01911000
*AMDPIN11:                                                         0617 01912000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01913000
AMDPIN11 L     @10,SCNPTR                                          0617 01914000
         SL    @10,ADDRS3                                          0617 01915000
         ST    @10,LNGTH                                           0617 01916000
*   IF LNGTH>3 THEN                 /* IF LENGTH>THREE, OUTPUT       */ 01917000
         C     @10,@CF00168                                        0618 01918000
         BH    @RT00618                                            0618 01919000
*     GOTO AMDVLNCL;                /* INVALID VALUE LENGTH MSG      */ 01920000
*   IF LNGTH<1 THEN                 /* IF LENGTH<ONE, OUTPUT         */ 01921000
         LTR   @10,@10                                             0620 01922000
         BNP   @RT00620                                            0620 01923000
*     GOTO AMDELMCL;                /* INVALID DELIMITER MESSAGE     */ 01924000
*   CALL AMDPRHX;                   /* CNVT EXT HEX TO BINARY        */ 01925000
         L     @15,@CV00421                                        0622 01926000
         BALR  @14,@15                                             0622 01927000
*   RTVAL=COMP8(3:4);               /* MOVE IN RESULT                */ 01928000
         MVC   RTVAL(2),COMP8+2                                    0623 01929000
*AMDPIN12:                                                         0624 01930000
*   ARG=RTVAL;                      /* PROCESSING RIGHT VALUE        */ 01931000
AMDPIN12 MVC   ARG(2),RTVAL                                        0624 01932000
*   RTBIT='1'B;                     /* SET ON RIGHT BIT              */ 01933000
         OI    RTBIT,B'01000000'                                   0625 01934000
*   GOTO AMDPUSR8;                  /* CHECK USR TABLE FOR BLANKS    */ 01935000
         B     AMDPUSR8                                            0626 01936000
*AMDPINS2:                                                         0627 01937000
*   IF USRNGTAB(ALLCT,1             /* IF LOWER RANGE VALUE >        */ 01938000
*       :2)>ARG THEN                /* THAN PROPOSED UPPER VAL       */ 01939000
AMDPINS2 L     @10,ALLCT                                           0627 01940000
         SLA   @10,2                                               0627 01941000
         ST    @10,@TF00001                                        0627 01942000
         ALR   @10,AEDITCBR                                        0627 01943000
         CLC   USRNGTAB-4(2,@10),ARG                               0627 01944000
         BH    @RT00627                                            0627 01945000
*     GOTO AMDPSR51;                /* OUTPUT INVALID EID MSG        */ 01946000
*   IF USRNGTAB(ALLCT,3             /* IF UPPER EID NOT FILLED       */ 01947000
*       :4)=BLANK1 THEN             /* IN, THEN                      */ 01948000
         LR    @10,AEDITCBR                                        0629 01949000
         AL    @10,@TF00001                                        0629 01950000
         CLC   USRNGTAB-2(2,@10),BLANK1                            0629 01951000
         BNE   @RF00629                                            0629 01952000
*     DO;                           /* DO THE FOLLOWING              */ 01953000
*       USRNGTAB(ALLCT              /* INSERT CURRENT VALUE THERE    */ 01954000
*           ,3:4)=ARG;                                             0631 01955000
         LR    @10,AEDITCBR                                        0631 01956000
         AL    @10,@TF00001                                        0631 01957000
         MVC   USRNGTAB-2(2,@10),ARG                               0631 01958000
*       GOTO AMDPUPRN;              /* CHECK FOR MORE VALUES         */ 01959000
         B     AMDPUPRN                                            0632 01960000
*     END;                          /* UPPER SLOT WAS BLANK          */ 01961000
*   IF ARG<=USRNGTAB(ALLCT,         /* IF CURRENT VAL WITHIN         */ 01962000
*       3:4) THEN                   /* UPPER LIMIT, THEN SIMPLY      */ 01963000
@RF00629 L     @10,ALLCT                                           0634 01964000
         LR    @02,@10                                             0634 01965000
         SLA   @02,2                                               0634 01966000
         ALR   @02,AEDITCBR                                        0634 01967000
         CLC   ARG(2),USRNGTAB-2(@02)                              0634 01968000
         BNH   @RT00634                                            0634 01969000
*     GOTO AMDPUPRN;                /* CHECK FOR MORE VALUES         */ 01970000
*   IF OVERSL(ALLCT)=BLANK1         /* IF CORRESPONDING SLOT IN      */ 01971000
*     THEN                          /* OVERLAY TABLE IS BLANK,       */ 01972000
         ALR   @10,@10                                             0636 01973000
         LA    @02,OVERSL-2(@10)                                   0636 01974000
         CLC   0(2,@02),BLANK1                                     0636 01975000
         BNE   @RF00636                                            0636 01976000
*     DO;                           /* DO THE FOLLOWING              */ 01977000
*AMDPUSR9:                                                         0638 01978000
*       OVERSL(ALLCT)=ARG;          /* INSERT CURRENT VALUE THERE    */ 01979000
AMDPUSR9 L     @10,ALLCT                                           0638 01980000
         ALR   @10,@10                                             0638 01981000
         LA    @02,OVERSL-2(@10)                                   0638 01982000
         MVC   0(2,@02),ARG                                        0638 01983000
*       GOTO AMDPUPRN;              /* CHECK FOR MORE VALUES         */ 01984000
         B     AMDPUPRN                                            0639 01985000
*     END;                          /* OVERLTAB SLOT WAS BLNK        */ 01986000
*   IF ARG<=OVERSL(ALLCT)           /* NON-BLANK SLOT--IF WITHIN     */ 01987000
*     THEN                          /* RANGE, THEN SIMPLY            */ 01988000
@RF00636 L     @10,ALLCT                                           0641 01989000
         ALR   @10,@10                                             0641 01990000
         LA    @02,OVERSL-2(@10)                                   0641 01991000
         CLC   ARG(2),0(@02)                                       0641 01992000
         BNH   @RT00641                                            0641 01993000
*     GOTO AMDPUPRN;                /* CHECK ADDITIONAL VALUES       */ 01994000
*   GOTO AMDPUSR9;                  /* IF NOT, OVERLAY OVERL SLOT    */ 01995000
         B     AMDPUSR9                                            0643 01996000
*AMDPUSRA:                                                         0644 01997000
*   IF RTBIT='1'B THEN              /* DETERMINE WHERE TO            */ 01998000
AMDPUSRA TM    RTBIT,B'01000000'                                   0644 01999000
         BO    @RT00644                                            0644 02000000
*     GOTO AMDPINS2;                /* PLACE VALUE                   */ 02001000
*   IF BOTHBIT='1'B THEN            /* Q/WITHIN RANGE                */ 02002000
         TM    BOTHBIT,B'00100000'                                 0646 02003000
         BO    @RT00646                                            0646 02004000
*     GOTO AMDPINS2;                /* YES                           */ 02005000
*   GOTO AMDPRTVL;                  /* NOW DELIMIT RT VALUE          */ 02006000
*                                                                  0648 02007000
         B     AMDPRTVL                                            0648 02008000
*   /*****************************************************************/ 02009000
*   /*                                                               */ 02010000
*   /*                                                               */ 02011000
*   /*****************************************************************/ 02012000
*                                                                  0649 02013000
*   END AMDPRSCN                    /* END OF MAIN PROCEDURE         */ 02014000
*                                                                  0649 02015000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 02016000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 02017000
*/*%INCLUDE SYSLIB  (AMDSCNTB)                                       */ 02018000
*                                                                  0649 02019000
*       ;                                                          0649 02020000
         B     @EL00001                                            0649 02021000
@DATA    DS    0H                                                       02022000
@SM00659 MVC   COMP4(0),KEYWORD(@15)                                    02023000
@SM00663 MVC   KWDCOMP(0),KEYWORD(@15)                                  02024000
@SM00665 MVC   COMP8(0),KEYWORD(@05)                                    02025000
@SC00667 CLC   COMP8(0),0(@15)                                          02026000
@SM00669 MVC   0(0,@02),VAL1(@15)                                       02027000
@SM00671 MVC   CHARWORD(0),VAL1(@02)                                    02028000
@SM00676 MVC   COMP4(0),VAL1(@02)                                       02029000
         DS    0F                                                       02030000
@SA00001 DS    18F                                                      02031000
@TF00001 DS    F                                                        02032000
         DS    0F                                                       02033000
@CF00044 DC    F'1'                                                     02034000
@CF00077 DC    F'2'                                                     02035000
@CF00168 DC    F'3'                                                     02036000
@CF00098 DC    F'4'                                                     02037000
@CF00085 DC    F'5'                                                     02038000
@CF00055 DC    F'7'                                                     02039000
@CF00033 DC    F'8'                                                     02040000
@CF00166 DC    F'9'                                                     02041000
@CF00488 DC    F'10'                                                    02042000
@CF00273 DC    F'11'                                                    02043000
@CF00399 DC    F'18'                                                    02044000
@CF00129 DC    F'20'                                                    02045000
@CF00566 DC    F'23'                                                    02046000
@CF00582 DC    F'59'                                                    02047000
@CF00465 DC    F'72'                                                    02048000
@CF00678 DC    F'-8'                                                    02049000
@CF00679 DC    F'-4'                                                    02050000
@CA00352 DC    A(AMDPRS00)                                              02051000
@CV00386 DC    V(AMDPNAM)                                               02052000
@CV00387 DC    V(AMDPTAJ)                                               02053000
@CV00388 DC    V(AMDPSIO)                                               02054000
@CV00389 DC    V(AMDPSVC)                                               02055000
@CV00390 DC    V(AMDPPGM)                                               02056000
@CV00391 DC    V(AMDPSYS)                                               02057000
@CV00392 DC    V(AMDPEXT)                                               02058000
@CV00393 DC    V(AMDPDSP)                                               02059000
@CV00394 DC    V(AMDPRNIO)                                              02060000
@CV00395 DC    V(AMDPSRM)                                               02061000
@CV00396 DC    V(AMDPRR)                                                02062000
@CV00397 DC    V(AMDPEOF)                                               02063000
@CA00401 DC    A(AMDPRS01)                                              02064000
@CV00417 DC    V(AMDPSUM1)                                              02065000
@CV00418 DC    V(AMDPFIN)                                               02066000
@CV00419 DC    V(AMDPEOC2)                                              02067000
@CV00420 DC    V(AMDPRCVB)                                              02068000
@CV00421 DC    V(AMDPRHX)                                               02069000
@CV00422 DC    V(AMDVLEN)                                               02070000
@CV00423 DC    V(AMDELIM)                                               02071000
@CV00424 DC    V(AMDVLMG)                                               02072000
@CV00425 DC    V(AMDUMMG)                                               02073000
         DS    0D                                                       02074000
JOBCT    DS    FL4                                                      02075000
         ORG   JOBCT                                                    02076000
TCBCT    DS    FL4                                                      02077000
         ORG   JOBCT+4                                                  02078000
HUNDRED  DC    F'100'                                                   02079000
MILLION  DC    F'1000000'                                               02080000
SIXTY    DC    F'60'                                                    02081000
THREESIX DC    F'3600'                                                  02082000
NUM2604  DC    F'2604'                                                  02083000
HALFTIME DC    F'1302'                                                  02084000
EIDCT    DS    F                                                        02085000
SORTSW   DS    F                                                        02086000
@CC00550 DC    C'366'                                                   02087000
@CC00593 DC    C'ALL'                                                   02088000
         DS    CL6                                                      02089000
AMDSCNTB DS    CL414                                                    02090000
         ORG   AMDSCNTB                                                 02091000
TEMPTAB  DS    CL163                                                    02092000
         ORG   TEMPTAB                                                  02093000
EXITNAME DS    CL8                                                      02094000
DDNM     DS    CL8                                                      02095000
STARTSL  DS    CL12                                                     02096000
         ORG   STARTSL                                                  02097000
TIMEU    DS    CL8                                                      02098000
YR       DS    CL2                                                      02099000
DY       DS    CL2                                                      02100000
         ORG   TEMPTAB+28                                               02101000
STOPSL   DS    CL12                                                     02102000
         ORG   STOPSL                                                   02103000
TIMERU   DS    CL8                                                      02104000
YRSTP    DS    CL2                                                      02105000
DYSTP    DS    CL2                                                      02106000
         ORG   TEMPTAB+40                                               02107000
OVERLTAB DS    CL40                                                     02108000
         ORG   OVERLTAB                                                 02109000
OVERSL   DS    20CL2                                                    02110000
         ORG   TEMPTAB+80                                               02111000
SIOTFLGS DS    BL1                                                      02112000
         ORG   SIOTFLGS                                                 02113000
ALLST    DS    BL1                                                      02114000
SELST    EQU   SIOTFLGS+0                                               02115000
EQUIVT   EQU   SIOTFLGS+0                                               02116000
NOEQUT   EQU   SIOTFLGS+0                                               02117000
AT       EQU   SIOTFLGS+0                                               02118000
         ORG   TEMPTAB+81                                               02119000
IOTFLGS  DS    BL1                                                      02120000
         ORG   IOTFLGS                                                  02121000
ALLIT    DS    BL1                                                      02122000
SELIT    EQU   IOTFLGS+0                                                02123000
BT       EQU   IOTFLGS+0                                                02124000
         ORG   TEMPTAB+82                                               02125000
USRTFLGS DS    BL1                                                      02126000
         ORG   USRTFLGS                                                 02127000
ALLUT    DS    BL1                                                      02128000
SELUT    EQU   USRTFLGS+0                                               02129000
ET       EQU   USRTFLGS+0                                               02130000
         ORG   TEMPTAB+83                                               02131000
SVCTFLGS DS    BL1                                                      02132000
         ORG   SVCTFLGS                                                 02133000
ALLVT    DS    BL1                                                      02134000
SELVT    EQU   SVCTFLGS+0                                               02135000
GT       EQU   SVCTFLGS+0                                               02136000
         ORG   TEMPTAB+84                                               02137000
PITFLGS  DS    BL1                                                      02138000
         ORG   PITFLGS                                                  02139000
ALLPT    DS    BL1                                                      02140000
SELPT    EQU   PITFLGS+0                                                02141000
T        EQU   PITFLGS+0                                                02142000
         ORG   TEMPTAB+85                                               02143000
SYSTFLGS DS    BL1                                                      02144000
         ORG   SYSTFLGS                                                 02145000
EXTT     DS    BL1                                                      02146000
DSPT     EQU   SYSTFLGS+0                                               02147000
SYST     EQU   SYSTFLGS+0                                               02148000
SYSMT    EQU   SYSTFLGS+0                                               02149000
RNIOT    EQU   SYSTFLGS+0                                               02150000
SRMT     EQU   SYSTFLGS+0                                               02151000
RRT      EQU   SYSTFLGS+0                                               02152000
EOFT     EQU   SYSTFLGS+0                                               02153000
         ORG   TEMPTAB+86                                               02154000
@NM00002 DS    BL2                                                      02155000
SIOPTR   DS    AL4                                                      02156000
IOPTR    DS    AL4                                                      02157000
JOBNPTR  DS    AL4                                                      02158000
ASCBPTR  DS    AL4                                                      02159000
SIOCRPTR DS    AL4                                                      02160000
IOCRPTR  DS    AL4                                                      02161000
JOBCRPTR DS    AL4                                                      02162000
ASCBCPTR DS    AL4                                                      02163000
USRCOUNT DS    FL4                                                      02164000
USRCRCNT DS    FL4                                                      02165000
SVCSTR   DS    BL32                                                     02166000
PISTR    DS    BL2                                                      02167000
PISTRB   DS    BL1                                                      02168000
         ORG   AMDSCNTB+163                                             02169000
SCNBITS  DC    X'00'                                                    02170000
         ORG   SCNBITS                                                  02171000
IORTNSW  DS    BL1                                                      02172000
MORESW   EQU   SCNBITS+0                                                02173000
SCANBIT  EQU   SCNBITS+0                                                02174000
EQUIND   EQU   SCNBITS+0                                                02175000
RUNEDIT  EQU   SCNBITS+0                                                02176000
PRNSW    EQU   SCNBITS+0                                                02177000
RESBITS  EQU   SCNBITS+0                                                02178000
         ORG   AMDSCNTB+164                                             02179000
CODETABL DS    BL3                                                      02180000
         ORG   CODETABL                                                 02181000
CXIT     DS    BL1                                                      02182000
CDDN     EQU   CODETABL+0                                               02183000
CSTART   EQU   CODETABL+0                                               02184000
CSTOP    EQU   CODETABL+0                                               02185000
CJOBN    EQU   CODETABL+0                                               02186000
CASCB    EQU   CODETABL+0                                               02187000
CUSR     EQU   CODETABL+0                                               02188000
CSIO     EQU   CODETABL+0                                               02189000
CIO      DS    BL1                                                      02190000
CSVC     EQU   CODETABL+1                                               02191000
CPI      EQU   CODETABL+1                                               02192000
CSYS     EQU   CODETABL+1                                               02193000
CEXT     EQU   CODETABL+1                                               02194000
CDSP     EQU   CODETABL+1                                               02195000
CRNIO    EQU   CODETABL+1                                               02196000
CSRM     EQU   CODETABL+1                                               02197000
CRR      DS    BL1                                                      02198000
CEOF     EQU   CODETABL+2                                               02199000
NOVAL    EQU   CODETABL+2                                               02200000
PAREN    EQU   CODETABL+2                                               02201000
@NM00003 EQU   CODETABL+2                                               02202000
         ORG   AMDSCNTB+168                                             02203000
WORD     DS    FL4                                                      02204000
         DS    CL4                                                      02205000
DBLWORD  DS    CL8                                                      02206000
KWTAB1   DC    CL4'SIO '                                                02207000
         DC    CL4'IO  '                                                02208000
         DC    CL4'SVC '                                                02209000
         DC    CL4'PI  '                                                02210000
         DC    CL4'SYS '                                                02211000
         DC    CL4'EXT '                                                02212000
         DC    CL4'DSP '                                                02213000
         DC    CL4'RNIO'                                                02214000
         DC    CL4'SRM'                                                 02215000
         DC    CL4'RR'                                                  02216000
         DC    CL4'EOF'                                                 02217000
KWTAB2   DC    CL8'EXIT    '                                            02218000
         DC    CL8'DDNAME  '                                            02219000
         DC    CL8'START   '                                            02220000
         DC    CL8'STOP    '                                            02221000
         DC    CL8'JOBNAME '                                            02222000
         DC    CL8'ASCB    '                                            02223000
         DC    CL8'USR     '                                            02224000
         DC    CL8'SIO     '                                            02225000
         DC    CL8'IO      '                                            02226000
         DC    CL8'SVC     '                                            02227000
         DC    CL8'PI      '                                            02228000
BLANK1   DC    CL12'            '                                       02229000
MASKS    DC    X'80'                                                    02230000
         DC    X'40'                                                    02231000
         DC    X'20'                                                    02232000
         DC    X'10'                                                    02233000
         DC    X'08'                                                    02234000
         DC    X'04'                                                    02235000
         DC    X'02'                                                    02236000
         DC    X'01'                                                    02237000
SCNPTR   DS    AL4                                                      02238000
BUFADDR  DS    AL4                                                      02239000
ADDRS1   DS    AL4                                                      02240000
ADDRS3   DS    AL4                                                      02241000
EOCADDR  DS    AL4                                                      02242000
LNGTH    DS    FL4                                                      02243000
COMP4    DS    CL4                                                      02244000
COMP8    DS    CL8                                                      02245000
SVKEY    DS    FL4                                                      02246000
SAVETAB  DS    AL4                                                      02247000
         ORG   SAVETAB                                                  02248000
ALLPTR   DS    AL4                                                      02249000
         ORG   AMDSCNTB+380                                             02250000
SORTPTR  DS    AL4                                                      02251000
SRTTABPT DS    AL4                                                      02252000
INCRT    DS    FL4                                                      02253000
ALLCT    DS    FL4                                                      02254000
I        DS    FL4                                                      02255000
J        DS    FL4                                                      02256000
INTSTART DS    CL5                                                      02257000
INTSTOP  DS    CL5                                                      02258000
         ORG   AMDSCNTB+414                                             02259000
CHARRUN  DC    CL7'RUNEDIT'                                             02260000
CHARWORD DS    CL4                                                      02261000
BITIND   DC    AL1(0)                                                   02262000
         ORG   BITIND                                                   02263000
SECIND   DS    BL1                                                      02264000
MININD   EQU   BITIND+0                                                 02265000
@NM00004 EQU   BITIND+0                                                 02266000
         ORG   BITIND+1                                                 02267000
USRBITS  DS    BL1                                                      02268000
         ORG   USRBITS                                                  02269000
LFTBIT   DS    BL1                                                      02270000
RTBIT    EQU   USRBITS+0                                                02271000
BOTHBIT  EQU   USRBITS+0                                                02272000
SYMBIT   EQU   USRBITS+0                                                02273000
DASHSW   EQU   USRBITS+0                                                02274000
RSVBITS  EQU   USRBITS+0                                                02275000
         ORG   USRBITS+1                                                02276000
         DS    CL1                                                      02277000
LFTVAL   DS    CL2                                                      02278000
         DS    CL2                                                      02279000
RTVAL    DS    CL2                                                      02280000
ARG      DS    CL2                                                      02281000
KWDCOMP  DS    CL8                                                      02282000
BRTAB    DC    VL4(AMDPNAM)                                             02283000
         DC    VL4(AMDPNAM)                                             02284000
         DC    AL4(AMDPPOS)                                             02285000
         DC    AL4(AMDPPOS)                                             02286000
         DC    VL4(AMDPTAJ)                                             02287000
         DC    VL4(AMDPTAJ)                                             02288000
         DC    AL4(AMDPUSR)                                             02289000
         DC    VL4(AMDPSIO)                                             02290000
         DC    VL4(AMDPSIO)                                             02291000
         DC    VL4(AMDPSVC)                                             02292000
         DC    VL4(AMDPPGM)                                             02293000
         DC    VL4(AMDPSYS)                                             02294000
         DC    VL4(AMDPEXT)                                             02295000
         DC    VL4(AMDPDSP)                                             02296000
         DC    VL4(AMDPRNIO)                                            02297000
         DC    VL4(AMDPSRM)                                             02298000
         DC    VL4(AMDPRR)                                              02299000
         DC    VL4(AMDPEOF)                                             02300000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02301000
@01      EQU   01                                                       02302000
@02      EQU   02                                                       02303000
@03      EQU   03                                                       02304000
@04      EQU   04                                                       02305000
@05      EQU   05                                                       02306000
@06      EQU   06                                                       02307000
@07      EQU   07                                                       02308000
@08      EQU   08                                                       02309000
@09      EQU   09                                                       02310000
@10      EQU   10                                                       02311000
@11      EQU   11                                                       02312000
@12      EQU   12                                                       02313000
@13      EQU   13                                                       02314000
@14      EQU   14                                                       02315000
@15      EQU   15                                                       02316000
KWADDR   EQU   @04                                                      02317000
NUMCNT   EQU   @04                                                      02318000
COMPLEN  EQU   @04                                                      02319000
REM      EQU   @04                                                      02320000
AEDITCBR EQU   @09                                                      02321000
TTABPTR  EQU   @03                                                      02322000
REG1     EQU   @01                                                      02323000
REG4     EQU   @04                                                      02324000
REG5     EQU   @05                                                      02325000
REG6     EQU   @06                                                      02326000
REG7     EQU   @07                                                      02327000
REGPT    EQU   @12                                                      02328000
REG15    EQU   @15                                                      02329000
REG2     EQU   @02                                                      02330000
         ENTRY AMDSCNTB                                                 02331000
         EXTRN AMDPRS00                                                 02332000
         EXTRN AMDPRS01                                                 02333000
AMDPRTAB EQU   0                                                        02334000
DEBGFLGS EQU   AMDPRTAB+8                                               02335000
PTHFLGS1 EQU   DEBGFLGS                                                 02336000
SCN      EQU   PTHFLGS1                                                 02337000
PTHFLGS2 EQU   DEBGFLGS+1                                               02338000
INRFCFGS EQU   DEBGFLGS+2                                               02339000
FLMODE   EQU   INRFCFGS                                                 02340000
IOFLGS   EQU   DEBGFLGS+3                                               02341000
STARTIME EQU   AMDPRTAB+40                                              02342000
TIME     EQU   STARTIME                                                 02343000
DAY      EQU   STARTIME+10                                              02344000
STOPTIME EQU   AMDPRTAB+52                                              02345000
TIME2    EQU   STOPTIME                                                 02346000
DAY2     EQU   STOPTIME+10                                              02347000
NAMES    EQU   AMDPRTAB+64                                              02348000
ADS      EQU   AMDPRTAB+104                                             02349000
AADS     EQU   ADS                                                      02350000
SIF      EQU   AMDPRTAB+124                                             02351000
SIOFLGS  EQU   SIF                                                      02352000
DVADS1   EQU   AMDPRTAB+128                                             02353000
IO       EQU   AMDPRTAB+228                                             02354000
IOFLGS2  EQU   IO                                                       02355000
DVADS2   EQU   AMDPRTAB+232                                             02356000
VCF      EQU   AMDPRTAB+332                                             02357000
SVCFLGS  EQU   VCF                                                      02358000
USR      EQU   AMDPRTAB+368                                             02359000
USRFLGS  EQU   USR                                                      02360000
ALLU     EQU   USRFLGS                                                  02361000
USRTAB   EQU   AMDPRTAB+372                                             02362000
USRNGTAB EQU   USRTAB                                                   02363000
PI       EQU   AMDPRTAB+452                                             02364000
PIFLGS   EQU   PI                                                       02365000
PGMNGEN  EQU   AMDPRTAB+456                                             02366000
GENFLAGS EQU   PGMNGEN+3                                                02367000
GENFLGS1 EQU   AMDPRTAB+460                                             02368000
ESTARTME EQU   AMDPRTAB+500                                             02369000
ESTOPTME EQU   AMDPRTAB+509                                             02370000
AMDPRSYN EQU   0                                                        02371000
MSGADDR  EQU   0                                                        02372000
ERRBUF   EQU   0                                                        02373000
VAL1     EQU   0                                                        02374000
SCNCHAR  EQU   0                                                        02375000
KEYWORD  EQU   0                                                        02376000
AMDPROOT EQU   0                                                        02377000
FIVECHAR EQU   0                                                        02378000
KWRTN    EQU   0                                                        02379000
DEVICE   EQU   0                                                        02380000
AD1      EQU   AMDPRS00                                                 02381000
AD2      EQU   AMDPRS00+4                                               02382000
AD8      EQU   AMDPRS00+28                                              02383000
AD9      EQU   AMDPRS00+32                                              02384000
EIDNAM0  EQU   AMDPRS01                                                 02385000
LRANGE0  EQU   AMDPRS01+4                                               02386000
HRANGE0  EQU   AMDPRS01+6                                               02387000
GNOSTDMG EQU   SWD                                                      02388000
GCONTSW  EQU   SWD                                                      02389000
X1       EQU   CODETABL                                                 02390000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02391000
GRDRSW   EQU   SWA                                                      02392000
GSETCVTS EQU   SWA                                                      02393000
GPRNTSW  EQU   SWA                                                      02394000
GGOSW    EQU   SWA                                                      02395000
GTSOSW   EQU   SWA                                                      02396000
GJBNMSW  EQU   SWA                                                      02397000
GREAD    EQU   SWA                                                      02398000
GSTORSW  EQU   SWA                                                      02399000
GFRBUFSW EQU   SWD                                                      02400000
GGPRSFND EQU   SWD                                                      02401000
GPREFMTD EQU   SWD                                                      02402000
GNCDUMP  EQU   SWD                                                      02403000
GSWPDCBC EQU   SWD                                                      02404000
GFLSHMOD EQU   SWD                                                      02405000
AD11     EQU   AMDPRS00+40                                              02406000
AD10     EQU   AMDPRS00+36                                              02407000
AD7      EQU   AMDPRS00+24                                              02408000
AD6      EQU   AMDPRS00+20                                              02409000
AD5      EQU   AMDPRS00+16                                              02410000
AD4      EQU   AMDPRS00+12                                              02411000
AD3      EQU   AMDPRS00+8                                               02412000
RESERVED EQU   AMDPRTAB+522                                             02413000
CVTTZONE EQU   AMDPRTAB+518                                             02414000
ESPSEC   EQU   ESTOPTME+7                                               02415000
ESPMIN   EQU   ESTOPTME+5                                               02416000
ESPHR    EQU   ESTOPTME+3                                               02417000
ESPDAY   EQU   ESTOPTME                                                 02418000
ESSEC    EQU   ESTARTME+7                                               02419000
ESMIN    EQU   ESTARTME+5                                               02420000
ESHR     EQU   ESTARTME+3                                               02421000
ESDAY    EQU   ESTARTME                                                 02422000
ADTSBUF  EQU   AMDPRTAB+496                                             02423000
OFSTDATA EQU   AMDPRTAB+494                                             02424000
OFSTEID  EQU   AMDPRTAB+492                                             02425000
AFRMAD   EQU   AMDPRTAB+488                                             02426000
REENTWKA EQU   AMDPRTAB+484                                             02427000
PRFMTADD EQU   AMDPRTAB+480                                             02428000
AEIOCT   EQU   AMDPRTAB+476                                             02429000
EXITADDR EQU   AMDPRTAB+472                                             02430000
EXITNM   EQU   AMDPRTAB+464                                             02431000
RECDLL   EQU   AMDPRTAB+461                                             02432000
@NM00001 EQU   GENFLGS1                                                 02433000
FIRSTHSW EQU   GENFLGS1                                                 02434000
TSFOUND  EQU   GENFLGS1                                                 02435000
EOFINPRO EQU   GENFLGS1                                                 02436000
TS       EQU   GENFLGS1                                                 02437000
EOF      EQU   GENFLAGS                                                 02438000
RR       EQU   GENFLAGS                                                 02439000
SRM      EQU   GENFLAGS                                                 02440000
RNIO     EQU   GENFLAGS                                                 02441000
SYSM     EQU   GENFLAGS                                                 02442000
SYS      EQU   GENFLAGS                                                 02443000
DSP      EQU   GENFLAGS                                                 02444000
EXT      EQU   GENFLAGS                                                 02445000
PICODEA  EQU   PGMNGEN+2                                                02446000
PICODES  EQU   PGMNGEN                                                  02447000
Q        EQU   PI+1                                                     02448000
P01R     EQU   PIFLGS                                                   02449000
SELP     EQU   PIFLGS                                                   02450000
ALLP     EQU   PIFLGS                                                   02451000
O        EQU   USR+1                                                    02452000
N01R     EQU   USRFLGS                                                  02453000
SELU     EQU   USRFLGS                                                  02454000
SVCNUMS  EQU   AMDPRTAB+336                                             02455000
M        EQU   VCF+1                                                    02456000
L        EQU   SVCFLGS                                                  02457000
SELV     EQU   SVCFLGS                                                  02458000
ALLV     EQU   SVCFLGS                                                  02459000
IODVADS  EQU   DVADS2                                                   02460000
K01RES   EQU   IO+1                                                     02461000
JJ       EQU   IOFLGS2                                                  02462000
SELI     EQU   IOFLGS2                                                  02463000
ALLI     EQU   IOFLGS2                                                  02464000
SIODVADS EQU   DVADS1                                                   02465000
II       EQU   SIF+1                                                    02466000
H        EQU   SIOFLGS                                                  02467000
NOEQU    EQU   SIOFLGS                                                  02468000
EQUIV    EQU   SIOFLGS                                                  02469000
SELS     EQU   SIOFLGS                                                  02470000
ALLS     EQU   SIOFLGS                                                  02471000
ASCBADDR EQU   AADS                                                     02472000
JOBNAMES EQU   NAMES                                                    02473000
F        EQU   STOPTIME+8                                               02474000
D        EQU   STARTIME+8                                               02475000
DDNAME   EQU   AMDPRTAB+32                                              02476000
USEREXIT EQU   AMDPRTAB+24                                              02477000
GTFWDPTR EQU   AMDPRTAB+20                                              02478000
C        EQU   DEBGFLGS+4                                               02479000
B        EQU   IOFLGS                                                   02480000
GETEOF   EQU   IOFLGS                                                   02481000
DMDFMT   EQU   INRFCFGS                                                 02482000
EDITSTOP EQU   INRFCFGS                                                 02483000
EXTTRC   EQU   INRFCFGS                                                 02484000
RET      EQU   INRFCFGS                                                 02485000
FMT      EQU   INRFCFGS                                                 02486000
SPIE     EQU   INRFCFGS                                                 02487000
TERM     EQU   INRFCFGS                                                 02488000
REMAIN   EQU   PTHFLGS2                                                 02489000
APP      EQU   PTHFLGS2                                                 02490000
REXT     EQU   PTHFLGS1                                                 02491000
FRM      EQU   PTHFLGS1                                                 02492000
FLT      EQU   PTHFLGS1                                                 02493000
HEX      EQU   PTHFLGS1                                                 02494000
CON      EQU   PTHFLGS1                                                 02495000
GET      EQU   PTHFLGS1                                                 02496000
ROOT     EQU   PTHFLGS1                                                 02497000
CURREC   EQU   AMDPRTAB+4                                               02498000
AFMG     EQU   AMDPRTAB                                                 02499000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02500000
@RT00062 EQU   AMDPSCN1                                                 02501000
@RT00103 EQU   AMDSUMCL                                                 02502000
@RT00105 EQU   AMDPSTR1                                                 02503000
@RT00108 EQU   AMDPSTT                                                  02504000
AMDNRET  EQU   @EL00001                                                 02505000
@RT00113 EQU   AMDPSTR3                                                 02506000
@RT00116 EQU   AMDPSTR2                                                 02507000
@RT00128 EQU   AMDPRES2                                                 02508000
@RT00130 EQU   AMDPRES2                                                 02509000
@RT00132 EQU   AMDPRES2                                                 02510000
@RT00140 EQU   AMDPRES3                                                 02511000
@RT00143 EQU   AMDPRES3                                                 02512000
@RT00150 EQU   AMDPRES4                                                 02513000
@RT00152 EQU   AMDPBDKW                                                 02514000
@RT00154 EQU   AMDPCLS1                                                 02515000
@RT00158 EQU   AMDPKW1                                                  02516000
@RF00179 EQU   AMDPCK1                                                  02517000
@RT00185 EQU   AMDPBDKW                                                 02518000
@RT00188 EQU   AMDPEC1L                                                 02519000
@RT00190 EQU   AMDPRS51                                                 02520000
@RT00197 EQU   CONT                                                     02521000
@RT00206 EQU   AMDPMTD                                                  02522000
@RT00208 EQU   AMDPMTC2                                                 02523000
@RT00211 EQU   AMDPMTD                                                  02524000
@RT00217 EQU   AMDPEOC                                                  02525000
@RT00232 EQU   AMDPCHK6                                                 02526000
@RT00236 EQU   AMDPLN                                                   02527000
@RT00238 EQU   AMDPLN                                                   02528000
@RT00241 EQU   AMDPCHK6                                                 02529000
@RT00243 EQU   AMDPCLS1                                                 02530000
@RT00245 EQU   AMDPEC1L                                                 02531000
@RT00247 EQU   AMDPCLS1                                                 02532000
@RT00251 EQU   AMDPCHK5                                                 02533000
@RT00256 EQU   AMDPEC1L                                                 02534000
@RT00265 EQU   AMDPKW2                                                  02535000
@RT00276 EQU   AMDPPOS                                                  02536000
@RT00278 EQU   AMDPUSR                                                  02537000
@RT00283 EQU   AMDPPOS1                                                 02538000
@RT00285 EQU   AMDPEOC1                                                 02539000
AMDC1CAL EQU   AMDPEOC1                                                 02540000
@RT00289 EQU   AMDPEOC1                                                 02541000
@RT00292 EQU   AMDPPOS3                                                 02542000
@RT00294 EQU   AMDPPOS3                                                 02543000
@RT00326 EQU   AMDPSLT                                                  02544000
@RT00328 EQU   AMDPSLT                                                  02545000
@RT00332 EQU   AMDPPOS6                                                 02546000
@RT00339 EQU   AMDELMCL                                                 02547000
@RT00341 EQU   AMDPPOS6                                                 02548000
@RT00346 EQU   AMDVLNCL                                                 02549000
@RT00348 EQU   AMDELMCL                                                 02550000
@RT00350 EQU   AMDVLNCL                                                 02551000
@RT00360 EQU   AMDPPOS8                                                 02552000
@RT00362 EQU   AMDVMGCL                                                 02553000
@RC00381 EQU   AMDPEOC1                                                 02554000
@RT00411 EQU   AMDPPOSA                                                 02555000
@RT00413 EQU   AMDPOSA1                                                 02556000
@RT00417 EQU   AMDPPOSB                                                 02557000
@RT00419 EQU   AMDPOSA1                                                 02558000
@RT00422 EQU   AMDTIMSG                                                 02559000
@RT00424 EQU   AMDTIMSG                                                 02560000
@RF00424 EQU   AMDPEOC1                                                 02561000
@RT00427 EQU   AMDTIMSG                                                 02562000
@RT00429 EQU   AMDTIMSG                                                 02563000
@RF00429 EQU   AMDPEOC1                                                 02564000
@RT00432 EQU   AMDTIMSG                                                 02565000
@RT00434 EQU   AMDTIMSG                                                 02566000
@RF00434 EQU   AMDPEOC1                                                 02567000
@RT00441 EQU   AMDVMGCL                                                 02568000
@RT00452 EQU   AMDPCK1                                                  02569000
@RT00468 EQU   AMDPUSR3                                                 02570000
@RT00470 EQU   AMDPUSR3                                                 02571000
@RT00475 EQU   AMDVLNCL                                                 02572000
@RT00477 EQU   AMDELMCL                                                 02573000
@RT00481 EQU   AMDPUSR4                                                 02574000
@RT00487 EQU   AMDDASH                                                  02575000
@RT00489 EQU   AMDPEND2                                                 02576000
@RT00491 EQU   AMDPSYMB                                                 02577000
@RT00495 EQU   AMDELMCL                                                 02578000
@RT00504 EQU   AMDPSR51                                                 02579000
@RF00511 EQU   AMDINPRN                                                 02580000
@RT00534 EQU   AMDVLNCL                                                 02581000
@RT00540 EQU   AMDPFND                                                  02582000
@RF00548 EQU   AMDPUSR7                                                 02583000
@RT00562 EQU   AMDPINS                                                  02584000
@RT00564 EQU   AMDPUSRA                                                 02585000
@RT00566 EQU   AMDPINS2                                                 02586000
@RT00569 EQU   AMDEXCAL                                                 02587000
@RT00574 EQU   AMDVLNCL                                                 02588000
@RT00576 EQU   AMDELMCL                                                 02589000
@RT00594 EQU   AMDPEOC1                                                 02590000
@RT00596 EQU   AMDPEOC1                                                 02591000
@RT00602 EQU   AMDPINS2                                                 02592000
@RT00607 EQU   AMDPIN12                                                 02593000
@RT00611 EQU   AMDPIN11                                                 02594000
@RT00613 EQU   AMDPIN11                                                 02595000
@RT00618 EQU   AMDVLNCL                                                 02596000
@RT00620 EQU   AMDELMCL                                                 02597000
@RT00627 EQU   AMDPSR51                                                 02598000
@RT00634 EQU   AMDPUPRN                                                 02599000
@RT00641 EQU   AMDPUPRN                                                 02600000
@RT00644 EQU   AMDPINS2                                                 02601000
@RT00646 EQU   AMDPINS2                                                 02602000
@ENDDATA EQU   *                                                        02603000
         END   AMDPRSCN,(C'PLS0957',0701,77255)                         02604000
