         TITLE 'AMDPRSN2--PART 2 OF EDIT SCAN                          *00001000
                       '                                                00002000
AMDPRSN2 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(16)                                             0001 00008000
         DC    C'AMDPRSN2  73.240'                                 0001 00009000
AMDPNAM  DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00041-AMDPNAM)                                    00013000
         ENTRY AMDPNAM                                                  00014000
AMDVLMG  DS    0H                                                  0001 00015000
         USING *,@15                                               0001 00016000
         B     @PROLOG                                             0001 00017000
         DC    AL2(@EP00056-AMDVLMG)                                    00018000
         ENTRY AMDVLMG                                                  00019000
AMDVLEN  DS    0H                                                  0001 00020000
         USING *,@15                                               0001 00021000
         B     @PROLOG                                             0001 00022000
         DC    AL2(@EP00112-AMDVLEN)                                    00023000
         ENTRY AMDVLEN                                                  00024000
AMDPTAJ  DS    0H                                                  0001 00025000
         USING *,@15                                               0001 00026000
         B     @PROLOG                                             0001 00027000
         DC    AL2(@EP00123-AMDPTAJ)                                    00028000
         ENTRY AMDPTAJ                                                  00029000
AMDELIM  DS    0H                                                  0001 00030000
         USING *,@15                                               0001 00031000
         B     @PROLOG                                             0001 00032000
         DC    AL2(@EP00203-AMDELIM)                                    00033000
         ENTRY AMDELIM                                                  00034000
AMDUMMG  DS    0H                                                  0001 00035000
         USING *,@15                                               0001 00036000
         B     @PROLOG                                             0001 00037000
         DC    AL2(@EP00213-AMDUMMG)                                    00038000
         ENTRY AMDUMMG                                                  00039000
AMDPSIO  DS    0H                                                  0001 00040000
         USING *,@15                                               0001 00041000
         B     @PROLOG                                             0001 00042000
         DC    AL2(@EP00224-AMDPSIO)                                    00043000
         ENTRY AMDPSIO                                                  00044000
AMDPSVC  DS    0H                                                  0001 00045000
         USING *,@15                                               0001 00046000
         B     @PROLOG                                             0001 00047000
         DC    AL2(@EP00390-AMDPSVC)                                    00048000
         ENTRY AMDPSVC                                                  00049000
AMDPPGM  DS    0H                                                  0001 00050000
         USING *,@15                                               0001 00051000
         B     @PROLOG                                             0001 00052000
         DC    AL2(@EP00425-AMDPPGM)                                    00053000
         ENTRY AMDPPGM                                                  00054000
AMDPSYS  DS    0H                                                  0001 00055000
         USING *,@15                                               0001 00056000
         B     @PROLOG                                             0001 00057000
         DC    AL2(@EP00474-AMDPSYS)                                    00058000
         ENTRY AMDPSYS                                                  00059000
AMDPEXT  DS    0H                                                  0001 00060000
         USING *,@15                                               0001 00061000
         B     @PROLOG                                             0001 00062000
         DC    AL2(@EP00487-AMDPEXT)                                    00063000
         ENTRY AMDPEXT                                                  00064000
AMDPDSP  DS    0H                                                  0001 00065000
         USING *,@15                                               0001 00066000
         B     @PROLOG                                             0001 00067000
         DC    AL2(@EP00490-AMDPDSP)                                    00068000
         ENTRY AMDPDSP                                                  00069000
AMDPRNIO DS    0H                                                  0001 00070000
         USING *,@15                                               0001 00071000
         B     @PROLOG                                             0001 00072000
         DC    AL2(@EP00493-AMDPRNIO)                                   00073000
         ENTRY AMDPRNIO                                                 00074000
AMDPSRM  DS    0H                                                  0001 00075000
         USING *,@15                                               0001 00076000
         B     @PROLOG                                             0001 00077000
         DC    AL2(@EP00496-AMDPSRM)                                    00078000
         ENTRY AMDPSRM                                                  00079000
AMDPRR   DS    0H                                                  0001 00080000
         USING *,@15                                               0001 00081000
         B     @PROLOG                                             0001 00082000
         DC    AL2(@EP00499-AMDPRR)                                     00083000
         ENTRY AMDPRR                                                   00084000
AMDPEOF  DS    0H                                                  0001 00085000
         USING *,@15                                               0001 00086000
         B     @PROLOG                                             0001 00087000
         DC    AL2(@EP00502-AMDPEOF)                                    00088000
         ENTRY AMDPEOF                                                  00089000
AMDPRCVB DS    0H                                                  0001 00090000
         USING *,@15                                               0001 00091000
         B     @PROLOG                                             0001 00092000
         DC    AL2(@EP00505-AMDPRCVB)                                   00093000
         ENTRY AMDPRCVB                                                 00094000
AMDPRHX  DS    0H                                                  0001 00095000
         USING *,@15                                               0001 00096000
         B     @PROLOG                                             0001 00097000
         DC    AL2(@EP00508-AMDPRHX)                                    00098000
         ENTRY AMDPRHX                                                  00099000
         DROP  @15                                                      00100000
@PROLOG  ST    @14,12(,@13)                                        0001 00101000
         STM   @00,@12,20(@13)                                     0001 00102000
         BALR  @11,0                                               0001 00103000
@PSTART  LA    @07,4095(,@11)                                      0001 00104000
         USING @PSTART,@11                                         0001 00105000
         USING @PSTART+4095,@07                                    0001 00106000
         LA    @08,@DATA                                           0001 00107000
         USING @DATA,@08                                           0001 00108000
         ST    @13,@SA00001+4                                      0001 00109000
         LA    @14,@SA00001                                        0001 00110000
         ST    @14,8(,@13)                                         0001 00111000
         LR    @13,@14                                             0001 00112000
         AH    @15,4(,@15)                                         0001 00113000
         BR    @15                                                 0001 00114000
@EP00001 DS    0H                                                  0002 00115000
*                                                                  0040 00116000
         EQUATES                        AMDPRDMP EQU MACRO              00117000
         COMMON                         EXPANDS TO AMDPRCOM TABLE       00118000
AMDPRSN2 CSECT                          RE-ESTABLISH CSECT              00119000
         USING COMMON,COMBASE           SET UP DSECT FOR AMDPRCOM       00120000
*   /*****************************************************************/ 00121000
*   /*                                                               */ 00122000
*   /* THIS SUBROUTINE PROCESSES THE EXIT AND DDNAME KEYWORDS.       */ 00123000
*   /*                                                               */ 00124000
*   /*****************************************************************/ 00125000
*                                                                  0041 00126000
*AMDPNAM:                                                          0041 00127000
*   ENTRY;                          /* ENTRY POINT                   */ 00128000
@EP00041 DS    0H                                                  0042 00129000
*   IF PAREN='1'B THEN              /* IF PARENS INCLUDED AROUND     */ 00130000
         TM    PAREN(TTABPTR),B'00010000'                          0042 00131000
         BNO   @RF00042                                            0042 00132000
*     DO;                           /* VALUE, THEY ARE INVALID       */ 00133000
*       REG15=12;                   /* SO, ISSUE INV PARENS MSG      */ 00134000
         LA    REG15,12                                            0044 00135000
*       GOTO AMDRTCTL;              /* RETURN TO CALLER              */ 00136000
         B     AMDRTCTL                                            0045 00137000
*     END;                                                         0046 00138000
*   IF SCNCHAR=>'A'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00139000
*       &SCNCHAR=<'I' THEN                                         0047 00140000
@RF00042 L     @14,SCNPTR(,TTABPTR)                                0047 00141000
         CLI   SCNCHAR(@14),C'A'                                   0047 00142000
         BL    @RF00047                                            0047 00143000
         CLI   SCNCHAR(@14),C'I'                                   0047 00144000
         BNH   @RT00047                                            0047 00145000
*     GOTO AMDPNAM1;                /* YES                           */ 00146000
*   IF SCNCHAR=>'J'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00147000
*       &SCNCHAR=<'R' THEN                                         0049 00148000
@RF00047 L     @14,SCNPTR(,TTABPTR)                                0049 00149000
         CLI   SCNCHAR(@14),C'J'                                   0049 00150000
         BL    @RF00049                                            0049 00151000
         CLI   SCNCHAR(@14),C'R'                                   0049 00152000
         BNH   @RT00049                                            0049 00153000
*     GOTO AMDPNAM1;                /* YES                           */ 00154000
*   IF SCNCHAR=>'S'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00155000
*       &SCNCHAR=<'Z' THEN                                         0051 00156000
@RF00049 L     @14,SCNPTR(,TTABPTR)                                0051 00157000
         CLI   SCNCHAR(@14),C'S'                                   0051 00158000
         BL    @RF00051                                            0051 00159000
         CLI   SCNCHAR(@14),C'Z'                                   0051 00160000
         BNH   @RT00051                                            0051 00161000
*     GOTO AMDPNAM1;                /* YES                           */ 00162000
*                                                                  0052 00163000
*   /*****************************************************************/ 00164000
*   /*                                                               */ 00165000
*   /* DETERMINE IF A NATIONAL CHARACTER                             */ 00166000
*   /*                                                               */ 00167000
*   /*****************************************************************/ 00168000
*                                                                  0053 00169000
*   IF SCNCHAR='$'                  /* IF CHAR IS A DOLLAR SIGN      */ 00170000
*       |SCNCHAR='#'                /* OR A POUND SIGN               */ 00171000
*       |SCNCHAR='@' THEN           /* OR AN AT SIGN, THEN           */ 00172000
@RF00051 L     @14,SCNPTR(,TTABPTR)                                0053 00173000
         CLI   SCNCHAR(@14),C'$'                                   0053 00174000
         BE    @RT00053                                            0053 00175000
         CLI   SCNCHAR(@14),C'#'                                   0053 00176000
         BE    @RT00053                                            0053 00177000
         CLI   SCNCHAR(@14),C'@'                                   0053 00178000
         BE    @RT00053                                            0053 00179000
*     GOTO AMDPNAM1;                /* LEGAL EXIT NM OR DDNAME       */ 00180000
*   GOTO AMDVMSG;                   /* OUTPUT INV KW DIAGNOSTIC      */ 00181000
*                                                                  0055 00182000
         B     AMDVMSG                                             0055 00183000
*/*  THIS SUBROUTINE OUTPUTS THE INVALID KEYWORD VALUE DIAGNOSTIC MSG*/ 00184000
*                                                                  0056 00185000
*AMDVLMG:                                                          0056 00186000
*   ENTRY;                          /* ENTRY POINT                   */ 00187000
@EP00056 DS    0H                                                  0057 00188000
*AMDVMSG:                                                          0057 00189000
*   SYNMSGA=ADDR(AD3);              /* INSERT ADDRS OF ADDRS OF      */ 00190000
AMDVMSG  L     @14,@CA00319                                        0057 00191000
         LA    @14,AD3-AMDPRS00(,@14)                              0057 00192000
         ST    @14,SYNMSGA                                         0057 00193000
*                                   /* INV VALUE MSG INTO     SYNMSGA*/ 00194000
*   IF SVKEY>11 THEN                /* Q/KW IN KWTAB2          Y02014*/ 00195000
         L     @10,SVKEY(,TTABPTR)                                 0058 00196000
         CH    @10,@CH00034                                        0058 00197000
         BH    @RT00058                                            0058 00198000
*     GOTO AMDVLMG1;                /* YES                           */ 00199000
*   ERRBUF(45:48)                   /* NO--MOVE IN KEYWORD FROM      */ 00200000
*       =KWTAB1(SVKEY);             /* KWTAB1                        */ 00201000
         L     @14,MSGADDR(,@14)                                   0060 00202000
         SLA   @10,2                                               0060 00203000
         ALR   @10,TTABPTR                                         0060 00204000
         MVC   ERRBUF+44(4,@14),KWTAB1-4(@10)                      0060 00205000
*   GOTO AMDVLMG2;                                                 0061 00206000
         B     AMDVLMG2                                            0061 00207000
*AMDVLMG1:                                                         0062 00208000
*   ERRBUF(45:52)                   /* MOVE IN KW FROM KWTAB2        */ 00209000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00210000
AMDVLMG1 L     @14,SYNMSGA                                         0062 00211000
         L     @14,MSGADDR(,@14)                                   0062 00212000
         L     @10,SVKEY(,TTABPTR)                                 0062 00213000
         SLA   @10,3                                               0062 00214000
         ALR   @10,TTABPTR                                         0062 00215000
         MVC   ERRBUF+44(8,@14),KWTAB2-96(@10)                     0062 00216000
*AMDVLMG2:                                                         0063 00217000
*   GNOSTDMG='1'B;                  /* OMIT USSUANCE OF AMD165I      */ 00218000
AMDVLMG2 OI    GNOSTDMG,B'00010000'                                0063 00219000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00220000
         L     @15,ASYNTAX                                         0064 00221000
         BALR  @14,@15                                             0064 00222000
*   ERRBUF(45:52)=BLANK1;           /* BLANK FOR SHORTER KW          */ 00223000
         L     @14,SYNMSGA                                         0065 00224000
         L     @14,MSGADDR(,@14)                                   0065 00225000
         MVC   ERRBUF+44(8,@14),BLANK1(TTABPTR)                    0065 00226000
*   GOTO AMDPCALL;                  /* SET FLUSH MODE BIT            */ 00227000
         B     AMDPCALL                                            0066 00228000
*AMDPNAM1:                                                         0067 00229000
*   IF SCNCHAR=' '                  /* IF DELIMITER OF BLANK         */ 00230000
*       |SCNCHAR=',' THEN           /* OR COMMA FOUND, THEN          */ 00231000
AMDPNAM1 L     @14,SCNPTR(,TTABPTR)                                0067 00232000
         CLI   SCNCHAR(@14),C' '                                   0067 00233000
         BE    @RT00067                                            0067 00234000
         CLI   SCNCHAR(@14),C','                                   0067 00235000
         BE    @RT00067                                            0067 00236000
*     GOTO AMDPNAM2;                /* CALCULATE KW LENGTH           */ 00237000
*   IF SCNPTR                       /* IF AT LOGICAL END OF STMT,    */ 00238000
*       =EOCADDR THEN               /* THEN                          */ 00239000
         C     @14,EOCADDR(,TTABPTR)                               0069 00240000
         BE    @RT00069                                            0069 00241000
*     GOTO AMDPNAM2;                /* CALCULATE VALUE LENGTH        */ 00242000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00243000
         AH    @14,@CH00046                                        0071 00244000
         ST    @14,SCNPTR(,TTABPTR)                                0071 00245000
*   GOTO AMDPNAM1;                  /* CONTINUE SCAN FOR DELIMITR    */ 00246000
         B     AMDPNAM1                                            0072 00247000
*AMDPNAM2:                                                         0073 00248000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 00249000
AMDPNAM2 L     @14,ADDRS3(,TTABPTR)                                0073 00250000
         L     @10,SCNPTR(,TTABPTR)                                0073 00251000
         SR    @10,@14                                             0073 00252000
         ST    @10,LNGTH(,TTABPTR)                                 0073 00253000
*   IF LNGTH>8 THEN                 /* IF LONGER THAN EIGHT CHARS    */ 00254000
         CH    @10,@CH00033                                        0074 00255000
         BH    @RT00074                                            0074 00256000
*     GOTO AMDVLN1;                 /* OUTPUT ERROR MESSAGE          */ 00257000
*   IF LNGTH<1 THEN                 /* IF LENGTH<ONE                 */ 00258000
         LTR   @10,@10                                             0076 00259000
         BNP   @RT00076                                            0076 00260000
*     GOTO AMDELIM1;                /* THEN OUTPUT BAD DELIM MSG     */ 00261000
*   COMP8=' ';                      /* BLANK COMPARE AREA            */ 00262000
         MVI   COMP8+1(TTABPTR),C' '                               0078 00263000
         MVC   COMP8+2(6,TTABPTR),COMP8+1(TTABPTR)                 0078 00264000
         MVI   COMP8(TTABPTR),C' '                                 0078 00265000
*   COMP8=VAL1(1:LNGTH);            /* MOVE IN VALUE                 */ 00266000
         MVI   COMP8+1(TTABPTR),C' '                               0079 00267000
         MVC   COMP8+2(6,TTABPTR),COMP8+1(TTABPTR)                 0079 00268000
         BCTR  @10,0                                               0079 00269000
         EX    @10,@SM00614                                        0079 00270000
*   IF CXIT='1'B THEN               /* IF PROCESSING EXIT, THEN      */ 00271000
         TM    CXIT(TTABPTR),B'10000000'                           0080 00272000
         BO    @RT00080                                            0080 00273000
*     GOTO AMDPNAM3;                /* CHECK EXIT SLOTS              */ 00274000
*   IF DDNAME^=BLANK1 THEN          /* IF DDNAME ALREADY SPEC'D,     */ 00275000
         CLC   DDNAME(8,AEDITCBR),BLANK1(TTABPTR)                  0082 00276000
         BNE   @RT00082                                            0082 00277000
*     GOTO AMDPNAM4;                /* CHECK IF SAME                 */ 00278000
*   IF DDNM^=BLANK1 THEN            /* IF TEMP DDNAME ALREADY        */ 00279000
         CLC   DDNM(8,TTABPTR),BLANK1(TTABPTR)                     0084 00280000
         BNE   @RT00084                                            0084 00281000
*     GOTO AMDPNAM5;                /* SPEC'D, CHECK IF SAME         */ 00282000
*   DDNM(1:LNGTH)=VAL1(1            /* OTHERWISE, MOVE VALUE INTO    */ 00283000
*       :LNGTH);                    /* DDNAME SLOT IN TEMPTAB        */ 00284000
         EX    @10,@SM00616                                        0086 00285000
*   GOTO AMDPEOCL;                  /* POSITION TO NEXT KW           */ 00286000
         B     AMDPEOCL                                            0087 00287000
*AMDPNAM3:                                                         0088 00288000
*   IF USEREXIT^=BLANK1 THEN        /* IF EXIT ALREADY SPECIFIED,    */ 00289000
AMDPNAM3 CLC   USEREXIT(8,AEDITCBR),BLANK1(TTABPTR)                0088 00290000
         BNE   @RT00088                                            0088 00291000
*     GOTO AMDPNAM6;                /* CHECK IF SAME                 */ 00292000
*   IF EXITNAME^=BLANK1 THEN        /* IF TEMP EXIT ALREADY          */ 00293000
         CLC   EXITNAME(8,TTABPTR),BLANK1(TTABPTR)                 0090 00294000
         BNE   @RT00090                                            0090 00295000
*     GOTO AMDPNAM7;                /* SPECIFIED, CHECK IF SAME      */ 00296000
*   EXITNAME(1:LNGTH)=VAL1          /* OTHERWISE, MOVE VALUE INTO    */ 00297000
*       (1:LNGTH);                  /* EXIT SLOT IN TEMPTAB          */ 00298000
         L     @14,LNGTH(,TTABPTR)                                 0092 00299000
         BCTR  @14,0                                               0092 00300000
         L     @10,ADDRS3(,TTABPTR)                                0092 00301000
         EX    @14,@SM00618                                        0092 00302000
*AMDPEOCL:                                                         0093 00303000
*   REG15=4;                        /* POSITION TO NEXT KW           */ 00304000
AMDPEOCL LA    REG15,4                                             0093 00305000
*   GOTO AMDRTCTL;                  /* RETURN TO CALLER              */ 00306000
         B     AMDRTCTL                                            0094 00307000
*AMDPNAM4:                                                         0095 00308000
*   IF DDNAME=COMP8 THEN            /* IF DDNAMES SAME, SIMPLY       */ 00309000
AMDPNAM4 CLC   DDNAME(8,AEDITCBR),COMP8(TTABPTR)                   0095 00310000
         BE    @RT00095                                            0095 00311000
*     GOTO AMDPEOCL;                /* POSITION TO NEXT KEYWORD      */ 00312000
*   GOTO AMDKWMG;                   /* IF NOT, DUPLICATE KW'S MSG    */ 00313000
         B     AMDKWMG                                             0097 00314000
*AMDPNAM5:                                                         0098 00315000
*   IF DDNM=COMP8 THEN              /* IF MATCH WITH TEMP DDNAME,    */ 00316000
AMDPNAM5 CLC   DDNM(8,TTABPTR),COMP8(TTABPTR)                      0098 00317000
         BE    @RT00098                                            0098 00318000
*     GOTO AMDPEOCL;                /* POSITION TO NEXT KEYWORD      */ 00319000
*   GOTO AMDKWMG;                   /* IF NOT, DUPLICATE KW'S MSG    */ 00320000
         B     AMDKWMG                                             0100 00321000
*AMDPNAM6:                                                         0101 00322000
*   IF USEREXIT=COMP8 THEN          /* IF EXIT NAMES SAME, POSITN    */ 00323000
AMDPNAM6 CLC   USEREXIT(8,AEDITCBR),COMP8(TTABPTR)                 0101 00324000
         BE    @RT00101                                            0101 00325000
*     GOTO AMDPEOCL;                /* TO NEXT KEYWORD               */ 00326000
*   GOTO AMDKWMG;                   /* IF NOT, DUPLICATE KW'S MSG    */ 00327000
         B     AMDKWMG                                             0103 00328000
*AMDPNAM7:                                                         0104 00329000
*   IF EXITNAME=COMP8 THEN          /* IF MATCH WITH TEMP EXIT       */ 00330000
AMDPNAM7 CLC   EXITNAME(8,TTABPTR),COMP8(TTABPTR)                  0104 00331000
         BE    @RT00104                                            0104 00332000
*     GOTO AMDPEOCL;                /* NAME, POSITION TO NEXT KW     */ 00333000
*AMDKWMG:                                                          0106 00334000
*   SYNMSGA=ADDR(AD5);              /* ADDRS OF ADDRS OF MSG         */ 00335000
AMDKWMG  L     @14,@CA00319                                        0106 00336000
         LA    @14,AD5-AMDPRS00(,@14)                              0106 00337000
         ST    @14,SYNMSGA                                         0106 00338000
*   ERRBUF(34:41)                   /* MOVE IN 'DDNAME' OR 'EXIT'    */ 00339000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00340000
         L     @14,MSGADDR(,@14)                                   0107 00341000
         L     @10,SVKEY(,TTABPTR)                                 0107 00342000
         SLA   @10,3                                               0107 00343000
         ALR   @10,TTABPTR                                         0107 00344000
         MVC   ERRBUF+33(8,@14),KWTAB2-96(@10)                     0107 00345000
*AMDKWMG1:                                                         0108 00346000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00347000
AMDKWMG1 OI    GNOSTDMG,B'00010000'                                0108 00348000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00349000
         L     @15,ASYNTAX                                         0109 00350000
         BALR  @14,@15                                             0109 00351000
*AMDPCALL:                                                         0110 00352000
*   REG15=0;                        /* SET FLUSH MODE BIT BEFORE   0110 00353000
*                                      CONTINUING                    */ 00354000
AMDPCALL SR    REG15,REG15                                         0110 00355000
*AMDRTCTL:                                                         0111 00356000
*   RETURN;                         /* RETURN TO CALLER              */ 00357000
*                                                                  0111 00358000
@EL00001 L     @13,4(,@13)                                         0111 00359000
@EF00001 DS    0H                                                  0111 00360000
@ER00001 L     @14,12(,@13)                                        0111 00361000
         LM    @00,@12,20(@13)                                     0111 00362000
         BR    @14                                                 0111 00363000
*   /*****************************************************************/ 00364000
*   /*                                                               */ 00365000
*   /* THIS SUBROUTINE OUTPUTS THE INVALID KEYWORD VALUE LENGTH      */ 00366000
*   /* MESSAGE.                                                      */ 00367000
*   /*                                                               */ 00368000
*   /*****************************************************************/ 00369000
*                                                                  0112 00370000
*AMDVLEN:                                                          0112 00371000
*   ENTRY;                          /* ENTRY POINT                   */ 00372000
@EP00112 DS    0H                                                  0113 00373000
*AMDVLN1:                                                          0113 00374000
*   SYNMSGA=ADDR(AD4);              /* ADDRS OF ADDRS OF MSG         */ 00375000
AMDVLN1  L     @14,@CA00319                                        0113 00376000
         LA    @14,AD4-AMDPRS00(,@14)                              0113 00377000
         ST    @14,SYNMSGA                                         0113 00378000
*   IF SVKEY>11 THEN                /* Q/KW IN KWTAB2          Y02014*/ 00379000
         L     @10,SVKEY(,TTABPTR)                                 0114 00380000
         CH    @10,@CH00034                                        0114 00381000
         BH    @RT00114                                            0114 00382000
*     GOTO AMDVLEN1;                /* YES                           */ 00383000
*   ERRBUF(49:52)                   /* MOVE IN 4-BYTE KEYWORD        */ 00384000
*       =KWTAB1(SVKEY);                                            0116 00385000
         L     @14,MSGADDR(,@14)                                   0116 00386000
         SLA   @10,2                                               0116 00387000
         ALR   @10,TTABPTR                                         0116 00388000
         MVC   ERRBUF+48(4,@14),KWTAB1-4(@10)                      0116 00389000
*   GOTO AMDVLEN2;                  /* GO TO HAVE MSG OUTPUTTED      */ 00390000
         B     AMDVLEN2                                            0117 00391000
*AMDVLEN1:                                                         0118 00392000
*   ERRBUF(49:56)                   /* MOVE IN 8-BYTE KEYWORD        */ 00393000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00394000
AMDVLEN1 L     @14,SYNMSGA                                         0118 00395000
         L     @14,MSGADDR(,@14)                                   0118 00396000
         L     @10,SVKEY(,TTABPTR)                                 0118 00397000
         SLA   @10,3                                               0118 00398000
         ALR   @10,TTABPTR                                         0118 00399000
         MVC   ERRBUF+48(8,@14),KWTAB2-96(@10)                     0118 00400000
*AMDVLEN2:                                                         0119 00401000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00402000
AMDVLEN2 OI    GNOSTDMG,B'00010000'                                0119 00403000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00404000
         L     @15,ASYNTAX                                         0120 00405000
         BALR  @14,@15                                             0120 00406000
*                                   /* OUTPUTTED                     */ 00407000
*   ERRBUF(49:56)=BLANK1;           /* BLANK MSG AREA FOR FUTURE     */ 00408000
         L     @14,SYNMSGA                                         0121 00409000
         L     @14,MSGADDR(,@14)                                   0121 00410000
         MVC   ERRBUF+48(8,@14),BLANK1(TTABPTR)                    0121 00411000
*   GOTO AMDPCALL;                  /* SET FLUSH MODE BIT            */ 00412000
*                                                                  0122 00413000
         B     AMDPCALL                                            0122 00414000
*   /*****************************************************************/ 00415000
*   /*                                                               */ 00416000
*   /* THIS SUBROUTINE PROCESSES THE JOBNAMES AND ASCB KEYWORDS      */ 00417000
*   /*                                                               */ 00418000
*   /*****************************************************************/ 00419000
*                                                                  0123 00420000
*AMDPTAJ:                                                          0123 00421000
*   ENTRY;                          /* ENTRY POINT                   */ 00422000
@EP00123 DS    0H                                                  0124 00423000
*   IF CASCB='1'B THEN              /* IF PROCESSING ASCB      Y02014*/ 00424000
         TM    CASCB(TTABPTR),B'00000100'                          0124 00425000
         BNO   @RF00124                                            0124 00426000
*     DO;                           /* DO THE FOLLOWING              */ 00427000
*       SRTTABPT=ADDR(ADS);         /* INITIALIZE PLACE KEEPER       */ 00428000
         LA    @14,ADS(,AEDITCBR)                                  0126 00429000
         ST    @14,SRTTABPT(,TTABPTR)                              0126 00430000
*       INCRT=4;                    /* ASCB ADDRS IS 4 BYTES         */ 00431000
         MVC   INCRT(4,TTABPTR),@CF00099                           0127 00432000
*     END;                          /*                         Y02014*/ 00433000
*   ELSE                            /* IF PROCESSING JOBNAMES        */ 00434000
*     DO;                           /* DO THE FOLLOWING              */ 00435000
         B     @RC00124                                            0129 00436000
@RF00124 DS    0H                                                  0130 00437000
*       SRTTABPT=ADDR(NAMES);       /* INITIALIZE PLACE KEEPER       */ 00438000
         LA    @14,NAMES(,AEDITCBR)                                0130 00439000
         ST    @14,SRTTABPT(,TTABPTR)                              0130 00440000
*       INCRT=8;                    /* JOBNAME IS 8 BYTES LONG       */ 00441000
         MVC   INCRT(4,TTABPTR),@CF00033                           0131 00442000
*     END;                                                         0132 00443000
*   LASTPTR=SRTTABPT+(5             /* CALCULATE END OF TABLE @      */ 00444000
*       *INCRT);                                                   0133 00445000
@RC00124 L     @14,INCRT(,TTABPTR)                                 0133 00446000
         MH    @14,@CH00086                                        0133 00447000
         A     @14,SRTTABPT(,TTABPTR)                              0133 00448000
         ST    @14,LASTPTR                                         0133 00449000
*AMDPTAJX:                                                         0134 00450000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA,        */ 00451000
*       |SCNCHAR=')'                /* RIGHT PARENTHESIS,            */ 00452000
*       |SCNCHAR=' ' THEN           /* OR BLANK IS FOUND, THEN       */ 00453000
AMDPTAJX L     @14,SCNPTR(,TTABPTR)                                0134 00454000
         CLI   SCNCHAR(@14),C','                                   0134 00455000
         BE    @RT00134                                            0134 00456000
         CLI   SCNCHAR(@14),C')'                                   0134 00457000
         BE    @RT00134                                            0134 00458000
         CLI   SCNCHAR(@14),C' '                                   0134 00459000
         BE    @RT00134                                            0134 00460000
*     GOTO AMDPTAJ1;                /* CALCULATE VALUE LENGTH        */ 00461000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END OF STMT,    */ 00462000
*     THEN                          /* THEN                          */ 00463000
         C     @14,EOCADDR(,TTABPTR)                               0136 00464000
         BE    @RT00136                                            0136 00465000
*     GOTO AMDPTAJ1;                /* CALCULATE VALUE LENGTH        */ 00466000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 00467000
         AH    @14,@CH00046                                        0138 00468000
         ST    @14,SCNPTR(,TTABPTR)                                0138 00469000
*   GOTO AMDPTAJX;                  /* CONTINUE DELIMITER SCAN       */ 00470000
         B     AMDPTAJX                                            0139 00471000
*AMDPTAJ1:                                                         0140 00472000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 00473000
AMDPTAJ1 L     @14,ADDRS3(,TTABPTR)                                0140 00474000
         L     @10,SCNPTR(,TTABPTR)                                0140 00475000
         SR    @10,@14                                             0140 00476000
         ST    @10,LNGTH(,TTABPTR)                                 0140 00477000
*   COMP8=' ';                      /* BLANK OUT COMPARE AREA        */ 00478000
         MVI   COMP8+1(TTABPTR),C' '                               0141 00479000
         MVC   COMP8+2(6,TTABPTR),COMP8+1(TTABPTR)                 0141 00480000
         MVI   COMP8(TTABPTR),C' '                                 0141 00481000
*   IF CASCB='1'B THEN              /* IF KEYWORD IS ASCB      Y02014*/ 00482000
         TM    CASCB(TTABPTR),B'00000100'                          0142 00483000
         BO    @RT00142                                            0142 00484000
*     GOTO AMDPTAJ3;                /* HANDLE THAT KEYWORD           */ 00485000
*   IF LNGTH>8 THEN                 /* IF VALUE LENGTH GREATER       */ 00486000
         CH    @10,@CH00033                                        0144 00487000
         BH    @RT00144                                            0144 00488000
*     GOTO AMDVLN1;                 /* THAN 8, OUTPUT ERROR MSG      */ 00489000
*   IF LNGTH<1 THEN                 /* IF ZERO LENGTH, HAVE DELIM    */ 00490000
         LTR   @10,@10                                             0146 00491000
         BNP   @RT00146                                            0146 00492000
*     GOTO AMDELIM1;                /* WHERE ONE DOESN'T BELONG      */ 00493000
*   IF VAL1(1)=>'A'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00494000
*       &VAL1(1)=<'I' THEN                                         0148 00495000
         CLI   VAL1(@14),C'A'                                      0148 00496000
         BL    @RF00148                                            0148 00497000
         CLI   VAL1(@14),C'I'                                      0148 00498000
         BNH   @RT00148                                            0148 00499000
*     GOTO AMDPTAJ2;                /* YES                           */ 00500000
*   IF VAL1(1)=>'J'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00501000
*       &VAL1(1)=<'R' THEN                                         0150 00502000
@RF00148 L     @14,ADDRS3(,TTABPTR)                                0150 00503000
         CLI   VAL1(@14),C'J'                                      0150 00504000
         BL    @RF00150                                            0150 00505000
         CLI   VAL1(@14),C'R'                                      0150 00506000
         BNH   @RT00150                                            0150 00507000
*     GOTO AMDPTAJ2;                /* YES                           */ 00508000
*   IF VAL1(1)=>'S'                 /* Q/IS FIRST CHAR ALPHABETIC    */ 00509000
*       &VAL1(1)=<'Z' THEN                                         0152 00510000
@RF00150 L     @14,ADDRS3(,TTABPTR)                                0152 00511000
         CLI   VAL1(@14),C'S'                                      0152 00512000
         BL    @RF00152                                            0152 00513000
         CLI   VAL1(@14),C'Z'                                      0152 00514000
         BNH   @RT00152                                            0152 00515000
*     GOTO AMDPTAJ2;                /* YES                           */ 00516000
*                                                                  0153 00517000
*   /*****************************************************************/ 00518000
*   /*                                                               */ 00519000
*   /* DETERMINE IF A NATIONAL CHARACTER                             */ 00520000
*   /*                                                               */ 00521000
*   /*****************************************************************/ 00522000
*                                                                  0154 00523000
*   IF VAL1(1)='$'                  /* IF CHAR IS A DOLLAR SIGN      */ 00524000
*       |VAL1(1)='#'                /* OR A POUND SIGN               */ 00525000
*       |VAL1(1)='@' THEN           /* OR AN AT SIGN, THEN           */ 00526000
@RF00152 L     @14,ADDRS3(,TTABPTR)                                0154 00527000
         CLI   VAL1(@14),C'$'                                      0154 00528000
         BE    @RT00154                                            0154 00529000
         CLI   VAL1(@14),C'#'                                      0154 00530000
         BE    @RT00154                                            0154 00531000
         CLI   VAL1(@14),C'@'                                      0154 00532000
         BE    @RT00154                                            0154 00533000
*     GOTO AMDPTAJ2;                /* LEGAL JOBNAME                 */ 00534000
*   GOTO AMDVMSG;                   /* IF NOT, INVALID VALUE         */ 00535000
         B     AMDVMSG                                             0156 00536000
*AMDPTAJ2:                                                         0157 00537000
*   COMP8=VAL1(1:LNGTH);            /* MOVE IN DELIMITED VALUE       */ 00538000
AMDPTAJ2 MVI   COMP8+1(TTABPTR),C' '                               0157 00539000
         MVC   COMP8+2(6,TTABPTR),COMP8+1(TTABPTR)                 0157 00540000
         L     @14,LNGTH(,TTABPTR)                                 0157 00541000
         BCTR  @14,0                                               0157 00542000
         L     @10,ADDRS3(,TTABPTR)                                0157 00543000
         EX    @14,@SM00620                                        0157 00544000
*   SORTPTR=JOBCRPTR;               /* CURRENT JOBNAME POINTER       */ 00545000
         MVC   SORTPTR(4,TTABPTR),JOBCRPTR(TTABPTR)                0158 00546000
*AMDPTAJ4:                                                         0159 00547000
*   IF SRTTABPT=LASTPTR THEN        /* IF AT END OF TABLE            */ 00548000
AMDPTAJ4 L     @14,SRTTABPT(,TTABPTR)                              0159 00549000
         C     @14,LASTPTR                                         0159 00550000
         BE    @RT00159                                            0159 00551000
*     GOTO AMDUMSG;                 /* HAVE TOO MANY VALUES          */ 00552000
*   IF SRTTABPT=SORTPTR THEN        /* Q/AT CURRENT SLOT             */ 00553000
         C     @14,SORTPTR(,TTABPTR)                               0161 00554000
         BNE   @RF00161                                            0161 00555000
*     DO;                           /* IF SO, DO THE FOLLOWING       */ 00556000
*       DEV(1:INCRT)=COMP8;         /* YES--INSERT VALUE             */ 00557000
         L     @10,INCRT(,TTABPTR)                                 0163 00558000
         LR    @06,@10                                             0163 00559000
         BCTR  @06,0                                               0163 00560000
         EX    @06,@SM00622                                        0163 00561000
*       IF CASCB='1'B THEN          /* IF ASCB                 Y02014*/ 00562000
         TM    CASCB(TTABPTR),B'00000100'                          0164 00563000
         BNO   @RF00164                                            0164 00564000
*         DO;                       /* DO THE FOLLOWING              */ 00565000
*           ASCBCPTR=ASCBCPTR       /* UPDTE ASCB POINTER      Y02014*/ 00566000
*               +INCRT;                                            0166 00567000
         A     @10,ASCBCPTR(,TTABPTR)                              0166 00568000
         ST    @10,ASCBCPTR(,TTABPTR)                              0166 00569000
*           GOTO AMDPARN;           /* CHECK FOR ADD'AL VALUES       */ 00570000
         B     AMDPARN                                             0167 00571000
*         END;                      /* INSERTED VAL & UPDATD PTRS    */ 00572000
*       JOBCRPTR=JOBCRPTR+INCRT;    /* UPDATE JOBNAME POINTER        */ 00573000
*                                                                  0169 00574000
@RF00164 L     @14,JOBCRPTR(,TTABPTR)                              0169 00575000
         A     @14,INCRT(,TTABPTR)                                 0169 00576000
         ST    @14,JOBCRPTR(,TTABPTR)                              0169 00577000
*       /*************************************************************/ 00578000
*       /*                                                           */ 00579000
*       /* THIS SUBROUTINE POSTIONS THE SCANNER DEPENDING UPON       */ 00580000
*       /* WHETHER PARENTHESES ARE NOW MATCHED, ARE YET TO BE        */ 00581000
*       /* MATCHED, OR DO NOT EXIST IN THIS KEYWORD VALUE.           */ 00582000
*       /*                                                           */ 00583000
*       /*************************************************************/ 00584000
*                                                                  0170 00585000
*AMDPARN:                                                          0170 00586000
*       IF PAREN='0'B THEN          /* IF ONLY ONE VALUE TO PROC,    */ 00587000
AMDPARN  TM    PAREN(TTABPTR),B'00010000'                          0170 00588000
         BZ    @RT00170                                            0170 00589000
*         GOTO AMDPEOCL;            /* CHECK FOR NEXT KEYWORD        */ 00590000
*       IF SCNCHAR=')' THEN         /* IF SCANNED ALL VALUES THEN    */ 00591000
         L     @14,SCNPTR(,TTABPTR)                                0172 00592000
         CLI   SCNCHAR(@14),C')'                                   0172 00593000
         BE    @RT00172                                            0172 00594000
*         GOTO AMDPEOCL;            /* CHECK FOR NEXT KEYWORD        */ 00595000
*       SCNPTR=SCNPTR+1;            /* POSITION BUFFER POINTER       */ 00596000
         AH    @14,@CH00046                                        0174 00597000
         ST    @14,SCNPTR(,TTABPTR)                                0174 00598000
*       ADDRS3=SCNPTR;              /* ADDRS OF NEXT VALUE           */ 00599000
         ST    @14,ADDRS3(,TTABPTR)                                0175 00600000
*       IF CJOBN='1'B               /* IF PROCESSING JOBNAMES        */ 00601000
*           |CASCB='1'B THEN        /* OR ASCB, THEN           Y02014*/ 00602000
         TM    CJOBN(TTABPTR),B'00001100'                          0176 00603000
         BNZ   @RT00176                                            0176 00604000
*         GOTO AMDPTAJX;            /* RESUME SCAN AT THAT RTN       */ 00605000
*       IF CSVC='1'B THEN           /* IF PROCESSING SVC, THEN       */ 00606000
         TM    CSVC(TTABPTR),B'01000000'                           0178 00607000
         BO    @RT00178                                            0178 00608000
*         GOTO AMDPSVC2;            /* RESUME SCAN AT THAT RTN       */ 00609000
*       IF CPI='1'B THEN            /* IF PROCESSING PI, THEN        */ 00610000
         TM    CPI(TTABPTR),B'00100000'                            0180 00611000
         BO    @RT00180                                            0180 00612000
*         GOTO AMDPPGM2;            /* RESUME SCAN AT THAT RTN       */ 00613000
*       GOTO AMDPIORS;              /* RESUME SCAN AT IO/SIO RTN     */ 00614000
         B     AMDPIORS                                            0182 00615000
*     END;                          /* HAVE INSERTED VALUE           */ 00616000
*   IF DEV(1:INCRT)^=COMP8          /* Q/DOES VALUE EQUAL VALUE      */ 00617000
*     THEN                          /* ALREADY IN TABLE              */ 00618000
@RF00161 L     @14,SRTTABPT(,TTABPTR)                              0184 00619000
         L     @10,INCRT(,TTABPTR)                                 0184 00620000
         LR    @06,@10                                             0184 00621000
         BCTR  @06,0                                               0184 00622000
         EX    @06,@SC00624                                        0184 00623000
         BE    @RF00184                                            0184 00624000
*     DO;                           /* IF NOT, DO THE FOLLOWING      */ 00625000
*       SRTTABPT=SRTTABPT           /* LOOK AT NXT TABL VALUE        */ 00626000
*           +INCRT;                                                0186 00627000
         AR    @14,@10                                             0186 00628000
         ST    @14,SRTTABPT(,TTABPTR)                              0186 00629000
*       GOTO AMDPTAJ4;              /* CONTINUE SEARCH               */ 00630000
         B     AMDPTAJ4                                            0187 00631000
*     END;                          /* UNEQUAL COMPARE               */ 00632000
*   GOTO AMDPARN;                   /* EQUAL COMPARE--SCAN FOR       */ 00633000
         B     AMDPARN                                             0189 00634000
*AMDPTAJ3:                                                         0190 00635000
*   IF LNGTH>8 THEN                 /* ASCB ADDR MAX OF 8      Y02014*/ 00636000
AMDPTAJ3 L     @14,LNGTH(,TTABPTR)                                 0190 00637000
         CH    @14,@CH00033                                        0190 00638000
         BH    @RT00190                                            0190 00639000
*     GOTO AMDVLN1;                 /* CHARS--IF LRGER, ERROR MSG    */ 00640000
*   IF LNGTH<1 THEN                 /* IF ZERO LENGTH, HAVE          */ 00641000
         LTR   @14,@14                                             0192 00642000
         BNP   @RT00192                                            0192 00643000
*     GOTO AMDELIM1;                /* INVALID DELIMITER             */ 00644000
*                                                                  0193 00645000
*   /*****************************************************************/ 00646000
*   /*                                                               */ 00647000
*   /* DETERMINE IF ALL DIGITS ARE VALID HEX DIGITS--BETWEEN         */ 00648000
*   /*                                                               */ 00649000
*   /*****************************************************************/ 00650000
*                                                                  0194 00651000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK TO DETERMINE THAT       */ 00652000
         ST    @14,I(,TTABPTR)                                     0194 00653000
         B     @DE00194                                            0194 00654000
@DL00194 DS    0H                                                  0195 00655000
*     IF VAL1(I)=>'A'               /* ALL DIGITS ARE BETWEEN 'A'    */ 00656000
*         &VAL1(I)=<'F' THEN        /* AND 'F'                       */ 00657000
         L     @14,I(,TTABPTR)                                     0195 00658000
         L     @10,ADDRS3(,TTABPTR)                                0195 00659000
         ALR   @14,@10                                             0195 00660000
         AL    @14,@CF00473                                        0195 00661000
         CLI   VAL1(@14),C'A'                                      0195 00662000
         BL    @RF00195                                            0195 00663000
         L     @14,I(,TTABPTR)                                     0195 00664000
         ALR   @10,@14                                             0195 00665000
         AL    @10,@CF00473                                        0195 00666000
         CLI   VAL1(@10),C'F'                                      0195 00667000
         BNH   @RT00195                                            0195 00668000
*       GOTO AMDPOK1;               /* OR                            */ 00669000
*     IF VAL1(I)<'0'                /* 0                             */ 00670000
*         |VAL1(I)>'9' THEN         /* AND 9                         */ 00671000
@RF00195 L     @14,I(,TTABPTR)                                     0197 00672000
         L     @10,ADDRS3(,TTABPTR)                                0197 00673000
         ALR   @14,@10                                             0197 00674000
         AL    @14,@CF00473                                        0197 00675000
         CLI   VAL1(@14),C'0'                                      0197 00676000
         BL    @RT00197                                            0197 00677000
         L     @14,I(,TTABPTR)                                     0197 00678000
         ALR   @10,@14                                             0197 00679000
         AL    @10,@CF00473                                        0197 00680000
         CLI   VAL1(@10),C'9'                                      0197 00681000
         BH    @RT00197                                            0197 00682000
*       GOTO AMDVMSG;               /* OTHERWISE, INVALID VALUE      */ 00683000
*AMDPOK1:                                                          0199 00684000
*   END;                            /* DIGIT VALIDITY CHECK          */ 00685000
AMDPOK1  SR    @14,@14                                             0199 00686000
         BCTR  @14,0                                               0199 00687000
         A     @14,I(,TTABPTR)                                     0199 00688000
         ST    @14,I(,TTABPTR)                                     0199 00689000
@DE00194 LTR   @14,@14                                             0199 00690000
         BP    @DL00194                                            0199 00691000
*   CALL AMDHEX;                    /* CNVT TCB ADDRS TO BINARY      */ 00692000
         BAL   @14,AMDHEX                                          0200 00693000
*   SORTPTR=ASCBCPTR;               /* CURR ASCB ADDR PTR      Y02014*/ 00694000
         MVC   SORTPTR(4,TTABPTR),ASCBCPTR(TTABPTR)                0201 00695000
*   GOTO AMDPTAJ4;                  /* BEGIN SEARCH                  */ 00696000
*                                                                  0202 00697000
         B     AMDPTAJ4                                            0202 00698000
*   /*****************************************************************/ 00699000
*   /*                                                               */ 00700000
*   /* THIS SUBROUTINE OUTPUTS THE INVALID DELIMITER DIAGNOSTIC      */ 00701000
*   /* MESSAGE.                                                      */ 00702000
*   /*                                                               */ 00703000
*   /*****************************************************************/ 00704000
*                                                                  0203 00705000
*AMDELIM:                                                          0203 00706000
*   ENTRY;                          /* ENTRY POINT                   */ 00707000
@EP00203 DS    0H                                                  0204 00708000
*AMDELIM1:                                                         0204 00709000
*   SYNMSGA=ADDR(AD7);              /* ADDRS OF ADDRS OF MESSAGE     */ 00710000
AMDELIM1 L     @14,@CA00319                                        0204 00711000
         LA    @14,AD7-AMDPRS00(,@14)                              0204 00712000
         ST    @14,SYNMSGA                                         0204 00713000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00714000
         OI    GNOSTDMG,B'00010000'                                0205 00715000
*   IF SVKEY>11 THEN                /* Q/KW IN KWTAB2          Y02014*/ 00716000
         L     @10,SVKEY(,TTABPTR)                                 0206 00717000
         CH    @10,@CH00034                                        0206 00718000
         BH    @RT00206                                            0206 00719000
*     GOTO AMDELIM2;                /* YES                           */ 00720000
*   ERRBUF(44:47)                   /* MOVE IN 4-BYTE KEYWORD        */ 00721000
*       =KWTAB1(SVKEY);                                            0208 00722000
         L     @14,MSGADDR(,@14)                                   0208 00723000
         SLA   @10,2                                               0208 00724000
         ALR   @10,TTABPTR                                         0208 00725000
         MVC   ERRBUF+43(4,@14),KWTAB1-4(@10)                      0208 00726000
*   GOTO AMDELIM3;                  /* GO TO HAVE MSG OUTPUTTED      */ 00727000
         B     AMDELIM3                                            0209 00728000
*AMDELIM2:                                                         0210 00729000
*   ERRBUF(44:51)                   /* MOVE IN 8-BYTE KEYWORD        */ 00730000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00731000
AMDELIM2 L     @14,SYNMSGA                                         0210 00732000
         L     @14,MSGADDR(,@14)                                   0210 00733000
         L     @10,SVKEY(,TTABPTR)                                 0210 00734000
         SLA   @10,3                                               0210 00735000
         ALR   @10,TTABPTR                                         0210 00736000
         MVC   ERRBUF+43(8,@14),KWTAB2-96(@10)                     0210 00737000
*AMDELIM3:                                                         0211 00738000
*   CALL AMDPRSYN;                  /* OUTPUT INVALID DELIM MSG      */ 00739000
AMDELIM3 L     @15,ASYNTAX                                         0211 00740000
         BALR  @14,@15                                             0211 00741000
*   GOTO AMDPCALL;                  /* SET FLUSH MODE BIT            */ 00742000
*                                                                  0212 00743000
         B     AMDPCALL                                            0212 00744000
*   /*****************************************************************/ 00745000
*   /*                                                               */ 00746000
*   /* THIS SUBROUTINE OUTPUTS THE EXCESSIVE NUMBER OF VALUES        */ 00747000
*   /* DIAGNOSTIC MESSAGE.                                           */ 00748000
*   /*                                                               */ 00749000
*   /*****************************************************************/ 00750000
*                                                                  0213 00751000
*AMDUMMG:                                                          0213 00752000
*   ENTRY;                          /* ENTRY POINT                   */ 00753000
@EP00213 DS    0H                                                  0214 00754000
*AMDUMSG:                                                          0214 00755000
*   SYNMSGA=ADDR(AD6);              /* ADDRS OF ADDRS OF MESSAGE     */ 00756000
AMDUMSG  L     @14,@CA00319                                        0214 00757000
         LA    @14,AD6-AMDPRS00(,@14)                              0214 00758000
         ST    @14,SYNMSGA                                         0214 00759000
*   IF SVKEY>11 THEN                /* Q/KW IN KWTAB2          Y02014*/ 00760000
         L     @10,SVKEY(,TTABPTR)                                 0215 00761000
         CH    @10,@CH00034                                        0215 00762000
         BH    @RT00215                                            0215 00763000
*     GOTO AMDUMMG1;                /* YES                           */ 00764000
*   ERRBUF(52:55)                   /* MOVE IN 4-BYTE KEYWORD        */ 00765000
*       =KWTAB1(SVKEY);                                            0217 00766000
         L     @14,MSGADDR(,@14)                                   0217 00767000
         SLA   @10,2                                               0217 00768000
         ALR   @10,TTABPTR                                         0217 00769000
         MVC   ERRBUF+51(4,@14),KWTAB1-4(@10)                      0217 00770000
*   GOTO AMDUMMG2;                  /* GO TO HAVE MSG OUTPUTTED      */ 00771000
         B     AMDUMMG2                                            0218 00772000
*AMDUMMG1:                                                         0219 00773000
*   ERRBUF(52:59)                   /* MOVE IN 8-BYTE KEYWORD        */ 00774000
*       =KWTAB2(SVKEY-11);          /*                         Y02014*/ 00775000
AMDUMMG1 L     @14,SYNMSGA                                         0219 00776000
         L     @14,MSGADDR(,@14)                                   0219 00777000
         L     @10,SVKEY(,TTABPTR)                                 0219 00778000
         SLA   @10,3                                               0219 00779000
         ALR   @10,TTABPTR                                         0219 00780000
         MVC   ERRBUF+51(8,@14),KWTAB2-96(@10)                     0219 00781000
*AMDUMMG2:                                                         0220 00782000
*   GNOSTDMG='1'B;                  /* OMIT ISSUANCE OF AMD165I      */ 00783000
AMDUMMG2 OI    GNOSTDMG,B'00010000'                                0220 00784000
*   CALL AMDPRSYN;                  /* HAVE MESSAGE WRITTEN          */ 00785000
         L     @15,ASYNTAX                                         0221 00786000
         BALR  @14,@15                                             0221 00787000
*   ERRBUF(52:59)=BLANK1;           /* BLANK MSG AREA TOR FUTURE   0222 00788000
*                                      SHORTER KEYWORDS              */ 00789000
         L     @14,SYNMSGA                                         0222 00790000
         L     @14,MSGADDR(,@14)                                   0222 00791000
         MVC   ERRBUF+51(8,@14),BLANK1(TTABPTR)                    0222 00792000
*   GOTO AMDPCALL;                  /* SET FLUSH MODE BIT            */ 00793000
*                                                                  0223 00794000
         B     AMDPCALL                                            0223 00795000
*   /*****************************************************************/ 00796000
*   /*                                                               */ 00797000
*   /* THIS SUBROUTINE PROCESSES THE SIO AND IO KEYWORDS, AS WELL AS */ 00798000
*   /* IO=SIO AND SIO AND IO.                                        */ 00799000
*   /*                                                               */ 00800000
*   /*****************************************************************/ 00801000
*                                                                  0224 00802000
*AMDPSIO:                                                          0224 00803000
*   ENTRY;                          /* ENTRY POINT                   */ 00804000
@EP00224 DS    0H                                                  0225 00805000
*   IF IORTNSW='1'B THEN            /* Q/BACK FROM PAREN CK RTN      */ 00806000
         TM    IORTNSW(TTABPTR),B'10000000'                        0225 00807000
         BNO   @RF00225                                            0225 00808000
*     DO;                           /* IF SO, DO THE FOLLOWING       */ 00809000
*       IORTNSW='0'B;               /* TURN OFF IO RTN SWITCH        */ 00810000
         NI    IORTNSW(TTABPTR),B'01111111'                        0227 00811000
*       GOTO AMDPSIOA;              /* CONTINUE PROCESSING           */ 00812000
         B     AMDPSIOA                                            0228 00813000
*     END;                                                         0229 00814000
*   IF SYS='1'B THEN                /* Q/SYS ALREADY SPECIFIED       */ 00815000
@RF00225 TM    SYS(AEDITCBR),B'00100000'                           0230 00816000
         BO    @RT00230                                            0230 00817000
*     GOTO AMDPEOCL;                /* YES                           */ 00818000
*   IF SYST='1'B THEN               /* Q/SYS SPECIFIED IN TEMPTAB    */ 00819000
         TM    SYST(TTABPTR),B'00100000'                           0232 00820000
         BO    @RT00232                                            0232 00821000
*     GOTO AMDPEOCL;                /* YES                           */ 00822000
*   IF NOVAL='1'B THEN              /* IF IO=ALL OR SIO=ALL          */ 00823000
         TM    NOVAL(TTABPTR),B'00100000'                          0234 00824000
         BO    @RT00234                                            0234 00825000
*     GOTO AMDPSIO1;                /* SPECIFIED, SET BITS           */ 00826000
*   ALLCT=0;                        /* INITIALIZE SIO/IO TRACKERS    */ 00827000
         SR    @14,@14                                             0236 00828000
         ST    @14,ALLCT(,TTABPTR)                                 0236 00829000
*   IF CSIO='1'B THEN               /* IF KEYWORD IS SIO, PROCESS    */ 00830000
         TM    CSIO(TTABPTR),B'00000001'                           0237 00831000
         BO    @RT00237                                            0237 00832000
*     GOTO AMDPSIO2;                /* THAT KEYWORD                  */ 00833000
*   SVTABY=ADDR(DVADS2);            /* BEG ADDRS OF IO TABLE         */ 00834000
         LA    @14,DVADS2(,AEDITCBR)                               0239 00835000
         ST    @14,SVTABY                                          0239 00836000
*   SRTBPTY=ADDR(DVADS2);           /* INITIALIZE PLACE KEEPER       */ 00837000
         ST    @14,SRTBPTY                                         0240 00838000
*   LSTPTRY=SRTBPTY+(50             /* ADDRS OF END OF IO TABLE      */ 00839000
*       *2);                                                       0241 00840000
         LA    @10,100                                             0241 00841000
         AR    @14,@10                                             0241 00842000
         ST    @14,LSTPTRY                                         0241 00843000
*   IF VAL1(1:3)=KWTAB1             /* IF SIO FOLLOWS IO=            */ 00844000
*       (1,1:3)THEN                 /*                               */ 00845000
         L     @14,ADDRS3(,TTABPTR)                                0242 00846000
         CLC   VAL1(3,@14),KWTAB1(TTABPTR)                         0242 00847000
         BNE   @RF00242                                            0242 00848000
*     DO;                           /* DO THE FOLLOWING              */ 00849000
*       CSIO='1'B;                  /* SET ON SIO BIT                */ 00850000
         OI    CSIO(TTABPTR),B'00000001'                           0244 00851000
*       SCNPTR=SCNPTR               /* POSITION CORRECTLY            */ 00852000
*           +2;                                                    0245 00853000
         LA    @14,2                                               0245 00854000
         A     @14,SCNPTR(,TTABPTR)                                0245 00855000
         ST    @14,SCNPTR(,TTABPTR)                                0245 00856000
*       SVTABX=ADDR                 /* BEG OF SIO TABLE              */ 00857000
*           (DVADS1);                                              0246 00858000
         LA    @14,DVADS1(,AEDITCBR)                               0246 00859000
         ST    @14,SVTABX                                          0246 00860000
*       SRTBPTX=ADDR                /* SIO PLACE KEEPER              */ 00861000
*           (DVADS1);                                              0247 00862000
         ST    @14,SRTBPTX                                         0247 00863000
*       LSTPTRX=SRTBPTX             /* ADDRS OF END OF SIO TABLE     */ 00864000
*           +(50*2);                                               0248 00865000
         AR    @14,@10                                             0248 00866000
         ST    @14,LSTPTRX                                         0248 00867000
*       GOTO AMDPSIO3;              /* CONTINUE PROCESSING           */ 00868000
         B     AMDPSIO3                                            0249 00869000
*     END;                          /* IO=SIO=                       */ 00870000
*   IF ALLI='1'B THEN               /* IF IO=ALL ALREADY SPEC'D,     */ 00871000
@RF00242 TM    ALLI(AEDITCBR),B'10000000'                          0251 00872000
         BO    @RT00251                                            0251 00873000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 00874000
*   IF ALLIT='1'B THEN              /* IF IO=ALL IN TEMPTAB, THEN    */ 00875000
         TM    ALLIT(TTABPTR),B'10000000'                          0253 00876000
         BO    @RT00253                                            0253 00877000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 00878000
*   GOTO AMDPSIO4;                  /* CONTINUE SELECTIVE PROC'G     */ 00879000
         B     AMDPSIO4                                            0255 00880000
*AMDPSIO1:                                                         0256 00881000
*   IF CSIO^='1'B THEN              /* IF NOT PROCESSING SIO,        */ 00882000
AMDPSIO1 TM    CSIO(TTABPTR),B'00000001'                           0256 00883000
         BO    @RF00256                                            0256 00884000
*     DO;                           /* DO THE FOLLOWING              */ 00885000
*       ALLIT='1'B;                 /* IO=ALL                        */ 00886000
         OI    ALLIT(TTABPTR),B'10000000'                          0258 00887000
*       GOTO AMDPNOEQ;              /* NO IO=SIO FROM NOW ON         */ 00888000
         B     AMDPNOEQ                                            0259 00889000
*     END;                                                         0260 00890000
*   ALLST='1'B;                     /* PROCESSING SIO, SO SIO=ALL    */ 00891000
@RF00256 OI    ALLST(TTABPTR),B'10000000'                          0261 00892000
*AMDPNOEQ:                                                         0262 00893000
*   NOEQUT='1'B;                    /* SET ON SIO/IO EQUIV NOT     0262 00894000
*                                      PERMITTED FLAG                */ 00895000
AMDPNOEQ OI    NOEQUT(TTABPTR),B'00010000'                         0262 00896000
*AMDPCLCL:                                                         0263 00897000
*   REG15=16;                       /* SEARCH FOR NEXT KW            */ 00898000
AMDPCLCL LA    REG15,16                                            0263 00899000
*   GOTO AMDRTCTL;                  /* RETURN TO CALLER              */ 00900000
         B     AMDRTCTL                                            0264 00901000
*AMDPSIO2:                                                         0265 00902000
*   SVTABX=ADDR(DVADS1);            /* BEG ADDRS OF SIO TABLE        */ 00903000
AMDPSIO2 LA    @14,DVADS1(,AEDITCBR)                               0265 00904000
         ST    @14,SVTABX                                          0265 00905000
*   SRTBPTX=ADDR(DVADS1);           /* INITIALIZE SIO PLC KEEPER     */ 00906000
         ST    @14,SRTBPTX                                         0266 00907000
*   LSTPTRX=SRTBPTX+(50             /* ADDRS OF END OF SIO TABLE     */ 00908000
*       *2);                                                       0267 00909000
         LA    @10,100                                             0267 00910000
         AR    @14,@10                                             0267 00911000
         ST    @14,LSTPTRX                                         0267 00912000
*   IF VAL1(1:2)=KWTAB1             /* IF IO FOLLOWS SIO=            */ 00913000
*       (2,1:2)THEN                 /* THEN                          */ 00914000
         L     @14,ADDRS3(,TTABPTR)                                0268 00915000
         CLC   VAL1(2,@14),KWTAB1+4(TTABPTR)                       0268 00916000
         BNE   @RF00268                                            0268 00917000
*     DO;                           /* DO THE FOLLOWING              */ 00918000
*       CIO='1'B;                   /* SET ON IO BIT                 */ 00919000
         OI    CIO(TTABPTR),B'10000000'                            0270 00920000
*       SCNPTR=SCNPTR+1;            /* POSITION TO O OF IO           */ 00921000
         LA    @14,1                                               0271 00922000
         A     @14,SCNPTR(,TTABPTR)                                0271 00923000
         ST    @14,SCNPTR(,TTABPTR)                                0271 00924000
*       SVTABY=ADDR(DVADS2);        /* BEG ADDRS OF IO TABLE         */ 00925000
         LA    @14,DVADS2(,AEDITCBR)                               0272 00926000
         ST    @14,SVTABY                                          0272 00927000
*       SRTBPTY=ADDR(DVADS2);       /* INITIALIZE IO PLACE KEEPER    */ 00928000
         ST    @14,SRTBPTY                                         0273 00929000
*       LSTPTRY=SRTBPTY+(50         /* ADDRS OF END OF IO TABLE      */ 00930000
*           *2);                                                   0274 00931000
         AR    @14,@10                                             0274 00932000
         ST    @14,LSTPTRY                                         0274 00933000
*       GOTO AMDPSIO3;              /* CONTINUE PROCESSING           */ 00934000
         B     AMDPSIO3                                            0275 00935000
*     END;                          /* SIO=IO=                       */ 00936000
*   IF ALLS='1'B THEN               /* IF SIO=ALL ALREADY     SPEC'D,*/ 00937000
@RF00268 TM    ALLS(AEDITCBR),B'10000000'                          0277 00938000
         BO    @RT00277                                            0277 00939000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 00940000
*   IF ALLST='1'B THEN              /* IF SIO=ALL IN TEMPTAB,        */ 00941000
         TM    ALLST(TTABPTR),B'10000000'                          0279 00942000
         BO    @RT00279                                            0279 00943000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 00944000
*AMDPSIO4:                                                         0281 00945000
*   NOEQUT='1'B;                    /* SIO OR IO INDIVIDUALLY        */ 00946000
AMDPSIO4 OI    NOEQUT(TTABPTR),B'00010000'                         0281 00947000
*                                   /* SPEC'D, SO SIO/IO EQUIV       */ 00948000
*                                   /* NOT PERMITTED                 */ 00949000
*   IF PAREN='1'B THEN              /* IF MORE THAN ONE VALUE        */ 00950000
         TM    PAREN(TTABPTR),B'00010000'                          0282 00951000
         BNO   @RF00282                                            0282 00952000
*     SCNPTR=SCNPTR-3;              /* ALLOW FOR LEFT PAREN          */ 00953000
         L     @14,SCNPTR(,TTABPTR)                                0283 00954000
         SH    @14,@CH00169                                        0283 00955000
         ST    @14,SCNPTR(,TTABPTR)                                0283 00956000
*   ELSE                            /* IF ONLY ONE VALUE             */ 00957000
*     SCNPTR=SCNPTR-2;              /* NEED BACKSPACE ONLY TWO       */ 00958000
         B     @RC00282                                            0284 00959000
@RF00282 L     @14,SCNPTR(,TTABPTR)                                0284 00960000
         BCTR  @14,0                                               0284 00961000
         BCTR  @14,0                                               0284 00962000
         ST    @14,SCNPTR(,TTABPTR)                                0284 00963000
*   GOTO AMDPSIO6;                  /* BEGIN VALUE SCAN              */ 00964000
         B     AMDPSIO6                                            0285 00965000
*AMDPSIO3:                                                         0286 00966000
*   IF NOEQU='1'B                   /* IF SIO/IO EQUIV NOT           */ 00967000
*       |NOEQUT='1'B THEN           /* PERMITTED, THEN EXAMINE       */ 00968000
AMDPSIO3 TM    NOEQU(AEDITCBR),B'00010000'                         0286 00969000
         BO    @RT00286                                            0286 00970000
         TM    NOEQUT(TTABPTR),B'00010000'                         0286 00971000
         BO    @RT00286                                            0286 00972000
*     GOTO AMDPSIO5;                /* INDIVIDUAL BITS               */ 00973000
*   EQUIVT='1'B;                    /* SIO AND IO NOW EQUIVALENT     */ 00974000
         OI    EQUIVT(TTABPTR),B'00100000'                         0288 00975000
*AMDPSI31:                                                         0289 00976000
*   EQUIND='1'B;                    /* PROCESS SIO AND IO TABLE      */ 00977000
AMDPSI31 OI    EQUIND(TTABPTR),B'00010000'                         0289 00978000
*   GOTO AMDPSIO6;                  /* BEGIN VALUE SEARCH            */ 00979000
         B     AMDPSIO6                                            0290 00980000
*AMDPSIO5:                                                         0291 00981000
*   IF ALLS='0'B                    /* IF SIO AND IO 'ALL'           */ 00982000
*       &ALLST='0'B                 /* INDICATORS ARE ALL OFF IN     */ 00983000
*       &ALLI='0'B                  /* BOTH TABLES                   */ 00984000
*       &ALLIT='0'B THEN            /* THEN IO AND SIO TABLES        */ 00985000
AMDPSIO5 TM    ALLS(AEDITCBR),B'10000000'                          0291 00986000
         BNZ   @RF00291                                            0291 00987000
         TM    ALLST(TTABPTR),B'10000000'                          0291 00988000
         BNZ   @RF00291                                            0291 00989000
         TM    ALLI(AEDITCBR),B'10000000'                          0291 00990000
         BNZ   @RF00291                                            0291 00991000
         TM    ALLIT(TTABPTR),B'10000000'                          0291 00992000
         BZ    @RT00291                                            0291 00993000
*     GOTO AMDPSI31;                /* CAN BE PROCESSED TOGETHER     */ 00994000
*   IF ALLS='1'B                    /* IF SIO=ALL IN AMDPRTAB        */ 00995000
*       |ALLST='1'B THEN            /* TEMPTAB, THEN                 */ 00996000
@RF00291 TM    ALLS(AEDITCBR),B'10000000'                          0293 00997000
         BO    @RT00293                                            0293 00998000
         TM    ALLST(TTABPTR),B'10000000'                          0293 00999000
         BNO   @RF00293                                            0293 01000000
@RT00293 DS    0H                                                  0294 01001000
*     DO;                           /* DO THE FOLLOWING              */ 01002000
*       CSIO='0'B;                  /* SET OFF SIO PROCESSING BIT    */ 01003000
         NI    CSIO(TTABPTR),B'11111110'                           0295 01004000
*       ALLCT=1;                    /* ONE OF TWO KWS NULLIFIED      */ 01005000
         MVC   ALLCT(4,TTABPTR),@CF00046                           0296 01006000
*     END;                          /* SIO=ALL                       */ 01007000
*AMDPSI51:                                                         0298 01008000
*   IF ALLI='1'B                    /* IF IO=ALL IN AMDPRTAB OR      */ 01009000
*       |ALLIT='1'B THEN            /* TEMPTAB, THEN                 */ 01010000
@RF00293 DS    0H                                                  0298 01011000
AMDPSI51 TM    ALLI(AEDITCBR),B'10000000'                          0298 01012000
         BO    @RT00298                                            0298 01013000
         TM    ALLIT(TTABPTR),B'10000000'                          0298 01014000
         BNO   @RF00298                                            0298 01015000
@RT00298 DS    0H                                                  0299 01016000
*     DO;                           /* DO THE FOLLOWING              */ 01017000
*       CIO='0'B;                   /* SET OFF IO PROCESSING BIT     */ 01018000
         NI    CIO(TTABPTR),B'01111111'                            0300 01019000
*       ALLCT=ALLCT+1;              /* ONE OR TWO KWS NULLIFIED      */ 01020000
         LA    @14,1                                               0301 01021000
         A     @14,ALLCT(,TTABPTR)                                 0301 01022000
         ST    @14,ALLCT(,TTABPTR)                                 0301 01023000
*     END;                          /* IO=ALL                        */ 01024000
*AMDPSIO6:                                                         0303 01025000
*   SCNPTR=SCNPTR+1;                /* POSITION TO DELIMITER         */ 01026000
@RF00298 DS    0H                                                  0303 01027000
AMDPSIO6 LA    @14,1                                               0303 01028000
         A     @14,SCNPTR(,TTABPTR)                                0303 01029000
         ST    @14,SCNPTR(,TTABPTR)                                0303 01030000
*   IF SCNCHAR=','                  /* IF NEXT CHAR IS COMMA,        */ 01031000
*       |SCNPTR=EOCADDR THEN        /* OR END-OF-STMT IS REACHED,    */ 01032000
         CLI   SCNCHAR(@14),C','                                   0304 01033000
         BE    @RT00304                                            0304 01034000
         C     @14,EOCADDR(,TTABPTR)                               0304 01035000
         BNE   @RF00304                                            0304 01036000
@RT00304 DS    0H                                                  0305 01037000
*     DO;                           /* DO THE FOLLOWING              */ 01038000
*       IF CSIO='1'B THEN           /* SET ON SIO=ALL TEMP BIT       */ 01039000
         TM    CSIO(TTABPTR),B'00000001'                           0306 01040000
         BNO   @RF00306                                            0306 01041000
*         ALLST='1'B;               /* IF SIO BEING PROCESSED        */ 01042000
         OI    ALLST(TTABPTR),B'10000000'                          0307 01043000
*       IF CIO='1'B THEN            /* SET ON IO=ALL TEMP BIT        */ 01044000
@RF00306 TM    CIO(TTABPTR),B'10000000'                            0308 01045000
         BNO   @RF00308                                            0308 01046000
*         ALLIT='1'B;               /* IF IO BEING PROCESSED         */ 01047000
         OI    ALLIT(TTABPTR),B'10000000'                          0309 01048000
*       GOTO AMDPCLCL;              /* POSITION TO NEXT KEYWORD      */ 01049000
         B     AMDPCLCL                                            0310 01050000
*     END;                          /* DELIMITER WAS COMMA           */ 01051000
*   IF SCNCHAR^='=' THEN            /* IF EQUAL SIGN DOES NOT        */ 01052000
@RF00304 L     @14,SCNPTR(,TTABPTR)                                0312 01053000
         CLI   SCNCHAR(@14),C'='                                   0312 01054000
         BNE   @RT00312                                            0312 01055000
*     GOTO AMDELIM1;                /* FOLLOW, HAVE BAD DELIMITER    */ 01056000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01057000
         LA    @10,1                                               0314 01058000
         AR    @14,@10                                             0314 01059000
         ST    @14,SCNPTR(,TTABPTR)                                0314 01060000
*   IF SCNCHAR=',' THEN             /* NO VALUE, SO GO ON TO NEXT    */ 01061000
         CLI   SCNCHAR(@14),C','                                   0315 01062000
         BE    @RT00315                                            0315 01063000
*     GOTO AMDPCLCL;                /* KEYWORD                       */ 01064000
*   IF SCNCHAR='(' THEN             /* IF LEFT PAREN FOLLOWS,        */ 01065000
         CLI   SCNCHAR(@14),C'('                                   0317 01066000
         BNE   @RF00317                                            0317 01067000
*     DO;                           /* DO THE FOLLOWING              */ 01068000
*       IF PAREN='1'B THEN          /* PARENS ALREADY CHECKED IF     */ 01069000
         TM    PAREN(TTABPTR),B'00010000'                          0319 01070000
         BNO   @RF00319                                            0319 01071000
*         DO;                       /* SIO OR IO ALONE SPEC, SO      */ 01072000
*           SCNPTR=SCNPTR+1;        /* UPDATE BUFFER PTR             */ 01073000
         AR    @14,@10                                             0321 01074000
         ST    @14,SCNPTR(,TTABPTR)                                0321 01075000
*           ADDRS3=SCNPTR;          /* SAVE ADDRS OF VAL BEG'NG      */ 01076000
         ST    @14,ADDRS3(,TTABPTR)                                0322 01077000
*           GOTO AMDPSIOA;          /* RESUME VALUE SCAN             */ 01078000
         B     AMDPSIOA                                            0323 01079000
*         END;                                                     0324 01080000
*       IORTNSW='1'B;               /* SET RETURN INDICATION         */ 01081000
@RF00319 OI    IORTNSW(TTABPTR),B'10000000'                        0325 01082000
*       REG15=8;                    /* CHECK FOR MATCHING PARENS     */ 01083000
         LA    REG15,8                                             0326 01084000
*       GOTO AMDRTCTL;              /* RETURN TO CALLER              */ 01085000
         B     AMDRTCTL                                            0327 01086000
*     END;                                                         0328 01087000
*   ELSE                                                           0329 01088000
*     ADDRS3=SCNPTR;                /* SAVE ADDRS OF VAL BEG'NG      */ 01089000
@RF00317 MVC   ADDRS3(4,TTABPTR),SCNPTR(TTABPTR)                   0329 01090000
*AMDPSIOA:                                                         0330 01091000
*   IF CSIO='1'B THEN               /* IF PROCESSING SEL IO,         */ 01092000
AMDPSIOA TM    CSIO(TTABPTR),B'00000001'                           0330 01093000
         BNO   @RF00330                                            0330 01094000
*     DO;                           /* DO THE FOLLOWING              */ 01095000
*       SELST='1'B;                 /* SET ON SIO SEL TEMP BIT       */ 01096000
         OI    SELST(TTABPTR),B'01000000'                          0332 01097000
*       IF CIO='1'B THEN            /* IF PROCESSING IO ALSO,        */ 01098000
         TM    CIO(TTABPTR),B'10000000'                            0333 01099000
         BNO   @RF00333                                            0333 01100000
*         SELIT='1'B;               /* SET ON IO SELECTIVE BIT       */ 01101000
         OI    SELIT(TTABPTR),B'01000000'                          0334 01102000
*       GOTO AMDPIORS;              /* BEGIN VALUE SCAN              */ 01103000
         B     AMDPIORS                                            0335 01104000
*     END;                          /* IO BEING PROCESSED            */ 01105000
*   IF CIO='0'B THEN                /* IF NOT PROCESSING IO,         */ 01106000
@RF00330 TM    CIO(TTABPTR),B'10000000'                            0337 01107000
         BZ    @RT00337                                            0337 01108000
*     GOTO AMDPEOCL;                /* LOOK FOR NEXT KEYWORD         */ 01109000
*   SELIT='1'B;                     /* SET ON IO SEL TEMP BIT        */ 01110000
         OI    SELIT(TTABPTR),B'01000000'                          0339 01111000
*AMDPIORS:                                                         0340 01112000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01113000
*       |SCNCHAR=')'                /* OF RIGHT PAREN                */ 01114000
*       |SCNCHAR=' ' THEN           /* OR BLANK                      */ 01115000
AMDPIORS L     @14,SCNPTR(,TTABPTR)                                0340 01116000
         CLI   SCNCHAR(@14),C','                                   0340 01117000
         BE    @RT00340                                            0340 01118000
         CLI   SCNCHAR(@14),C')'                                   0340 01119000
         BE    @RT00340                                            0340 01120000
         CLI   SCNCHAR(@14),C' '                                   0340 01121000
         BE    @RT00340                                            0340 01122000
*     GOTO AMDPSIOC;                /* FOUND, ISOLATE VALUE          */ 01123000
*   IF SCNPTR=EOCADDR               /* IF AT LOGICAL END OF STMT,    */ 01124000
*     THEN                          /* THEN                          */ 01125000
         C     @14,EOCADDR(,TTABPTR)                               0342 01126000
         BE    @RT00342                                            0342 01127000
*     GOTO AMDPSIOC;                /* ISOLATE VALUE                 */ 01128000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01129000
         AH    @14,@CH00046                                        0344 01130000
         ST    @14,SCNPTR(,TTABPTR)                                0344 01131000
*   GOTO AMDPIORS;                  /* CONTINUE SCAN                 */ 01132000
         B     AMDPIORS                                            0345 01133000
*AMDPSIOC:                                                         0346 01134000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01135000
AMDPSIOC L     @14,SCNPTR(,TTABPTR)                                0346 01136000
         S     @14,ADDRS3(,TTABPTR)                                0346 01137000
         ST    @14,LNGTH(,TTABPTR)                                 0346 01138000
*   IF LNGTH<1 THEN                 /* IF LENGTH<1                   */ 01139000
         LTR   @14,@14                                             0347 01140000
         BNP   @RT00347                                            0347 01141000
*     GOTO AMDELIM1;                /* OUTPUT BAD DELIMITER MSG      */ 01142000
*   IF LNGTH^=3 THEN                /* IF LENGTH NOT = 3       Y02014*/ 01143000
         CH    @14,@CH00169                                        0349 01144000
         BNE   @RT00349                                            0349 01145000
*     GOTO AMDVLN1;                 /* OUTPUT BAD VALUE LNGTH MSG    */ 01146000
*                                                                  0350 01147000
*   /*****************************************************************/ 01148000
*   /*                                                               */ 01149000
*   /* DETERMINE IF ALL DIGITS ARE VALID HEX DIGITS--BETWEEN ZERO AND*/ 01150000
*   /* 'F'.                                                          */ 01151000
*   /*                                                               */ 01152000
*   /*****************************************************************/ 01153000
*                                                                  0351 01154000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK TO DETERMINE THAT       */ 01155000
         ST    @14,I(,TTABPTR)                                     0351 01156000
         B     @DE00351                                            0351 01157000
@DL00351 DS    0H                                                  0352 01158000
*     IF VAL1(I)=>'A'               /* ALL DIGITS ARE BETWEEN 'A'    */ 01159000
*         &VAL1(I)=<'F' THEN        /* AND 'F'                       */ 01160000
         L     @14,I(,TTABPTR)                                     0352 01161000
         L     @10,ADDRS3(,TTABPTR)                                0352 01162000
         ALR   @14,@10                                             0352 01163000
         AL    @14,@CF00473                                        0352 01164000
         CLI   VAL1(@14),C'A'                                      0352 01165000
         BL    @RF00352                                            0352 01166000
         L     @14,I(,TTABPTR)                                     0352 01167000
         ALR   @10,@14                                             0352 01168000
         AL    @10,@CF00473                                        0352 01169000
         CLI   VAL1(@10),C'F'                                      0352 01170000
         BNH   @RT00352                                            0352 01171000
*       GOTO AMDPEND;               /* OR                            */ 01172000
*     IF VAL1(I)<'0'                /* 0                             */ 01173000
*         |VAL1(I)>'9' THEN         /* AND 9                         */ 01174000
@RF00352 L     @14,I(,TTABPTR)                                     0354 01175000
         L     @10,ADDRS3(,TTABPTR)                                0354 01176000
         ALR   @14,@10                                             0354 01177000
         AL    @14,@CF00473                                        0354 01178000
         CLI   VAL1(@14),C'0'                                      0354 01179000
         BL    @RT00354                                            0354 01180000
         L     @14,I(,TTABPTR)                                     0354 01181000
         ALR   @10,@14                                             0354 01182000
         AL    @10,@CF00473                                        0354 01183000
         CLI   VAL1(@10),C'9'                                      0354 01184000
         BH    @RT00354                                            0354 01185000
*       GOTO AMDVMSG;               /* OTHERWISE, INVALID VALUE      */ 01186000
*AMDPEND:                                                          0356 01187000
*   END;                            /* DIGIT VALIDITY CHECK          */ 01188000
AMDPEND  SR    @14,@14                                             0356 01189000
         BCTR  @14,0                                               0356 01190000
         A     @14,I(,TTABPTR)                                     0356 01191000
         ST    @14,I(,TTABPTR)                                     0356 01192000
@DE00351 LTR   @14,@14                                             0356 01193000
         BP    @DL00351                                            0356 01194000
*AMDPSIOD:                                                         0357 01195000
*   CALL AMDHEX;                    /* CNVT VALUE TO BINARY          */ 01196000
AMDPSIOD BAL   @14,AMDHEX                                          0357 01197000
*   IF CSIO='0'B THEN               /* IF SIO NOT BEING PROCESSED    */ 01198000
         TM    CSIO(TTABPTR),B'00000001'                           0358 01199000
         BZ    @RT00358                                            0358 01200000
*     GOTO AMDPSIOE;                /* SET UP POINTERS FOR IO        */ 01201000
*   SORTPTR=SIOCRPTR;               /* CURRENT SIO DEV POINTER       */ 01202000
         MVC   SORTPTR(4,TTABPTR),SIOCRPTR(TTABPTR)                0360 01203000
*   SAVETAB=SVTABX;                 /* INIT BEG ADDRS TO SIO TAB     */ 01204000
         MVC   SAVETAB(4,TTABPTR),SVTABX                           0361 01205000
*   SRTTABPT=SRTBPTX;               /* INIT TO SIO PLACE KEEPER      */ 01206000
         MVC   SRTTABPT(4,TTABPTR),SRTBPTX                         0362 01207000
*   LASTPTR=LSTPTRX;                /* INIT TO SIO END ADDRS         */ 01208000
         MVC   LASTPTR(4),LSTPTRX                                  0363 01209000
*AMDPSIOF:                                                         0364 01210000
*   IF SRTTABPT=LASTPTR THEN        /* Q/AT END OF TABLE             */ 01211000
AMDPSIOF L     @14,SRTTABPT(,TTABPTR)                              0364 01212000
         C     @14,LASTPTR                                         0364 01213000
         BE    @RT00364                                            0364 01214000
*     GOTO AMDUMSG;                 /* YES--TOO MANY VALUES MSG      */ 01215000
*   IF SRTTABPT=SORTPTR THEN        /* Q/AT CURRENT SLOT             */ 01216000
         C     @14,SORTPTR(,TTABPTR)                               0366 01217000
         BE    @RT00366                                            0366 01218000
*     GOTO AMDPIO1;                 /* YES                           */ 01219000
*   GOTO AMDPIO2;                   /* NO--CHECK VALUE               */ 01220000
         B     AMDPIO2                                             0368 01221000
*AMDPSIOE:                                                         0369 01222000
*   SORTPTR=IOCRPTR;                /* CURRENT IO DEV POINTER        */ 01223000
AMDPSIOE MVC   SORTPTR(4,TTABPTR),IOCRPTR(TTABPTR)                 0369 01224000
*   SAVETAB=SVTABY;                 /* INIT BEG ADDRS TO IO TAB      */ 01225000
         MVC   SAVETAB(4,TTABPTR),SVTABY                           0370 01226000
*   SRTTABPT=SRTBPTY;               /* INIT TO IO PLACE KEEPER       */ 01227000
         MVC   SRTTABPT(4,TTABPTR),SRTBPTY                         0371 01228000
*   LASTPTR=LSTPTRY;                /* INIT TO IO END ADDRS          */ 01229000
         MVC   LASTPTR(4),LSTPTRY                                  0372 01230000
*   GOTO AMDPSIOF;                  /* BEGIN TABLE SEARCH            */ 01231000
         B     AMDPSIOF                                            0373 01232000
*AMDPIO1:                                                          0374 01233000
*   IF CSIO='1'B THEN               /* IF PROCESSING SIO,            */ 01234000
AMDPIO1  TM    CSIO(TTABPTR),B'00000001'                           0374 01235000
         BO    @RT00374                                            0374 01236000
*     GOTO AMDPIO4;                 /* CHK IF NOW ON SIO OR IO       */ 01237000
*AMDPIO3:                                                          0376 01238000
*   IOCRPTR=IOCRPTR+2;              /* NOW AT NEXT IO SLOT           */ 01239000
AMDPIO3  LA    @14,2                                               0376 01240000
         A     @14,IOCRPTR(,TTABPTR)                               0376 01241000
         ST    @14,IOCRPTR(,TTABPTR)                               0376 01242000
*   DEV=COMP8(3:4);                 /* MOVE IN CONVERTED VALUE       */ 01243000
         L     @14,SRTTABPT(,TTABPTR)                              0377 01244000
         MVC   DEV(2,@14),COMP8+2(TTABPTR)                         0377 01245000
*   GOTO AMDPARN;                   /* CHECK FOR ADDITIONAL VALS     */ 01246000
         B     AMDPARN                                             0378 01247000
*AMDPIO2:                                                          0379 01248000
*   IF DEV=COMP8(3:4)               /* IF EQUAL COMPARE,             */ 01249000
*     THEN                          /* THEN                          */ 01250000
AMDPIO2  L     @14,SRTTABPT(,TTABPTR)                              0379 01251000
         CLC   DEV(2,@14),COMP8+2(TTABPTR)                         0379 01252000
         BE    @RT00379                                            0379 01253000
*     GOTO AMDPARN;                 /* CHECK FOR ADDITIONAL VALS     */ 01254000
*   SRTTABPT=SRTTABPT+2;            /* SEE IF EQUAL COMPARE WITH NEXT   01255000
*                                      VALUE IN TABLE                */ 01256000
         AH    @14,@CH00078                                        0381 01257000
         ST    @14,SRTTABPT(,TTABPTR)                              0381 01258000
*   GOTO AMDPSIOF;                  /* CONTINUE TABLE SEARCH         */ 01259000
         B     AMDPSIOF                                            0382 01260000
*AMDPIO4:                                                          0383 01261000
*   IF SAVETAB=ADDR(DVADS2)THEN     /* NOW PROCESSING IO             */ 01262000
AMDPIO4  LA    @14,DVADS2(,AEDITCBR)                               0383 01263000
         C     @14,SAVETAB(,TTABPTR)                               0383 01264000
         BE    @RT00383                                            0383 01265000
*     GOTO AMDPIO3;                 /* INSERT VALUE IN IO TABLE      */ 01266000
*   SIOCRPTR=SIOCRPTR+2;            /* NOW AT NEXT SIO SLOT          */ 01267000
         LA    @14,2                                               0385 01268000
         A     @14,SIOCRPTR(,TTABPTR)                              0385 01269000
         ST    @14,SIOCRPTR(,TTABPTR)                              0385 01270000
*   DEV=COMP8(3:4);                 /* MOVE IN CONVERTED VALUE       */ 01271000
         L     @14,SRTTABPT(,TTABPTR)                              0386 01272000
         MVC   DEV(2,@14),COMP8+2(TTABPTR)                         0386 01273000
*   IF EQUIND='1'B THEN             /* IF PROCESSING IO TABLE TOO    */ 01274000
         TM    EQUIND(TTABPTR),B'00010000'                         0387 01275000
         BO    @RT00387                                            0387 01276000
*     GOTO AMDPSIOE;                /* SET UP IO POINTERS            */ 01277000
*   GOTO AMDPARN;                   /* CHECK FOR ADDITIONAL VALS     */ 01278000
*                                                                  0389 01279000
         B     AMDPARN                                             0389 01280000
*   /*****************************************************************/ 01281000
*   /*                                                               */ 01282000
*   /* THIS SUBROUTINE PROCESSES THE SVC KEYWORD.                    */ 01283000
*   /*                                                               */ 01284000
*   /*****************************************************************/ 01285000
*                                                                  0390 01286000
*AMDPSVC:                                                          0390 01287000
*   ENTRY;                          /* ENTRY POINT                   */ 01288000
@EP00390 DS    0H                                                  0391 01289000
*   IF SYS='1'B                     /* IF AMDPRTAB SYS FLAG,         */ 01290000
*       |SYST='1'B                  /* OR TEMPTAB SYS FLAG,          */ 01291000
*       |ALLV='1'B                  /* OR AMDPRTAB SVC ALL FLAG,     */ 01292000
*       |ALLVT='1'B THEN            /* OR TTAB SVC ALL FLAG IS ON    */ 01293000
         TM    SYS(AEDITCBR),B'00100000'                           0391 01294000
         BO    @RT00391                                            0391 01295000
         TM    SYST(TTABPTR),B'00100000'                           0391 01296000
         BO    @RT00391                                            0391 01297000
         TM    ALLV(AEDITCBR),B'10000000'                          0391 01298000
         BO    @RT00391                                            0391 01299000
         TM    ALLVT(TTABPTR),B'10000000'                          0391 01300000
         BO    @RT00391                                            0391 01301000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 01302000
*   IF NOVAL='1'B THEN              /* IF NO VALUES FOLLOW,          */ 01303000
         TM    NOVAL(TTABPTR),B'00100000'                          0393 01304000
         BNO   @RF00393                                            0393 01305000
*     DO;                           /* DO THE FOLLOWING              */ 01306000
*       ALLVT='1'B;                 /* 'SVC=ALL' INDICATED--SET SW   */ 01307000
         OI    ALLVT(TTABPTR),B'10000000'                          0395 01308000
*       GOTO AMDPCLCL;              /* POSITION TO NEXT KEYWORD      */ 01309000
         B     AMDPCLCL                                            0396 01310000
*     END;                                                         0397 01311000
*AMDPSVC1:                                                         0398 01312000
*   SELVT='1'B;                     /* SET ON SVC SELECTIVE SW       */ 01313000
@RF00393 DS    0H                                                  0398 01314000
AMDPSVC1 OI    SELVT(TTABPTR),B'01000000'                          0398 01315000
*AMDPSVC2:                                                         0399 01316000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01317000
*       |SCNCHAR=' '                /* OR BLANK                      */ 01318000
*       |SCNCHAR=')' THEN           /* OF RIGHT PAREN FOUND, HAVE    */ 01319000
AMDPSVC2 L     @14,SCNPTR(,TTABPTR)                                0399 01320000
         CLI   SCNCHAR(@14),C','                                   0399 01321000
         BE    @RT00399                                            0399 01322000
         CLI   SCNCHAR(@14),C' '                                   0399 01323000
         BE    @RT00399                                            0399 01324000
         CLI   SCNCHAR(@14),C')'                                   0399 01325000
         BE    @RT00399                                            0399 01326000
*     GOTO AMDPSVC3;                /* DELIMITED VALUE               */ 01327000
*   IF SCNPTR=EOCADDR               /* IF LOGICAL END OF STMT        */ 01328000
*     THEN                          /* FOUND, THEN                   */ 01329000
         C     @14,EOCADDR(,TTABPTR)                               0401 01330000
         BE    @RT00401                                            0401 01331000
*     GOTO AMDPSVC3;                /* CONTINUE PROCESSING           */ 01332000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01333000
         AH    @14,@CH00046                                        0403 01334000
         ST    @14,SCNPTR(,TTABPTR)                                0403 01335000
*   GOTO AMDPSVC2;                  /* RESUME SCAN FOR DELIMITER     */ 01336000
         B     AMDPSVC2                                            0404 01337000
*AMDPSVC3:                                                         0405 01338000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE VALUE LENGTH        */ 01339000
AMDPSVC3 L     @14,SCNPTR(,TTABPTR)                                0405 01340000
         S     @14,ADDRS3(,TTABPTR)                                0405 01341000
         ST    @14,LNGTH(,TTABPTR)                                 0405 01342000
*   IF LNGTH>3 THEN                                                0406 01343000
         CH    @14,@CH00169                                        0406 01344000
         BH    @RT00406                                            0406 01345000
*     GOTO AMDVLN1;                 /* INVALID VALUE LENGTH MSG      */ 01346000
*   IF LNGTH<1 THEN                 /* IF LENGTH<1, OUTPUT           */ 01347000
         LTR   @14,@14                                             0408 01348000
         BNP   @RT00408                                            0408 01349000
*     GOTO AMDELIM1;                /* INVALID DELIMITER MSG         */ 01350000
*                                                                  0409 01351000
*   /*****************************************************************/ 01352000
*   /*                                                               */ 01353000
*   /* CHECK TO DETERMINE THAT ALL DIGITS ARE BETWEEN 0 AND 9.       */ 01354000
*   /*                                                               */ 01355000
*   /*****************************************************************/ 01356000
*                                                                  0410 01357000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK ALL DIGITS              */ 01358000
         ST    @14,I(,TTABPTR)                                     0410 01359000
         B     @DE00410                                            0410 01360000
@DL00410 DS    0H                                                  0411 01361000
*     IF VAL1(I)<'0'                /* IF DIGIT LOWER THAN 0         */ 01362000
*         |VAL1(I)>'9' THEN         /* OR HIGHER THAN 9,             */ 01363000
         L     @14,I(,TTABPTR)                                     0411 01364000
         L     @10,ADDRS3(,TTABPTR)                                0411 01365000
         ALR   @14,@10                                             0411 01366000
         AL    @14,@CF00473                                        0411 01367000
         CLI   VAL1(@14),C'0'                                      0411 01368000
         BL    @RT00411                                            0411 01369000
         L     @14,I(,TTABPTR)                                     0411 01370000
         ALR   @10,@14                                             0411 01371000
         AL    @10,@CF00473                                        0411 01372000
         CLI   VAL1(@10),C'9'                                      0411 01373000
         BH    @RT00411                                            0411 01374000
*       GOTO AMDVMSG;               /* OUTPUT INVALID VALUE MSG      */ 01375000
*   END;                            /* PROCEED TO NEXT DIGIT         */ 01376000
         SR    @14,@14                                             0413 01377000
         BCTR  @14,0                                               0413 01378000
         A     @14,I(,TTABPTR)                                     0413 01379000
         ST    @14,I(,TTABPTR)                                     0413 01380000
@DE00410 LTR   @14,@14                                             0413 01381000
         BP    @DL00410                                            0413 01382000
*   CALL AMDCVB;                    /* CONVERT SVC NUM TO BINARY     */ 01383000
         BAL   @14,AMDCVB                                          0414 01384000
*   COMP4=COMP4+1;                  /* ALLOW FOR ZERO INDEXING       */ 01385000
         LA    @14,1                                               0415 01386000
         L     @10,COMP4(,TTABPTR)                                 0415 01387000
         ALR   @10,@14                                             0415 01388000
         ST    @10,COMP4(,TTABPTR)                                 0415 01389000
*   IF COMP4>256                    /* IF NUMBER > 256               */ 01390000
*       |COMP4<1 THEN               /* OR NUMBER <ONE, THEN          */ 01391000
         CH    @10,@CH00121                                        0416 01392000
         BH    @RT00416                                            0416 01393000
         CR    @10,@14                                             0416 01394000
         BL    @RT00416                                            0416 01395000
*     GOTO AMDVMSG;                 /* OUTPUT INVALID VALUE MSG      */ 01396000
*                                                                  0417 01397000
*   /*****************************************************************/ 01398000
*   /*                                                               */ 01399000
*   /* SET ON APPROPRIATE SVC BIT IN STRING                          */ 01400000
*   /*                                                               */ 01401000
*   /*****************************************************************/ 01402000
*                                                                  0418 01403000
*   I=COMP4/8;                      /* CALCULATE BYTE                */ 01404000
         SRL   @10,3                                               0418 01405000
         ST    @10,I(,TTABPTR)                                     0418 01406000
*AMDSVCSR:                                                         0419 01407000
*   J=COMP4//8;                     /* CALCULATE BIT IN BYTE         */ 01408000
AMDSVCSR L     @14,COMP4(,TTABPTR)                                 0419 01409000
         N     @14,@CF00035                                        0419 01410000
         ST    @14,J(,TTABPTR)                                     0419 01411000
*   IF J=0 THEN                     /* IF NO REMAINDER, THEN         */ 01412000
         LTR   @14,@14                                             0420 01413000
         BNZ   @RF00420                                            0420 01414000
*     J=8;                          /* SET ON LAST BIT IN BYTE       */ 01415000
         MVC   J(4,TTABPTR),@CF00033                               0421 01416000
*   ELSE                            /* IF REMAINDER,                 */ 01417000
*     I=I+1;                        /* ARE INTO NEXT BYTE            */ 01418000
         B     @RC00420                                            0422 01419000
@RF00420 LA    @14,1                                               0422 01420000
         A     @14,I(,TTABPTR)                                     0422 01421000
         ST    @14,I(,TTABPTR)                                     0422 01422000
*   STRING(I)=STRING(I)             /* SET ON APPROPRIATE SVC        */ 01423000
*       |MASKS(J);                  /* BIT                           */ 01424000
@RC00420 L     @14,I(,TTABPTR)                                     0423 01425000
         ALR   @14,TTABPTR                                         0423 01426000
         L     @10,J(,TTABPTR)                                     0423 01427000
         ALR   @10,TTABPTR                                         0423 01428000
         OC    STRING-1(1,@14),MASKS-1(@10)                        0423 01429000
*   GOTO AMDPARN;                   /* CHECK FOR MORE VALUES         */ 01430000
*                                                                  0424 01431000
         B     AMDPARN                                             0424 01432000
*   /*****************************************************************/ 01433000
*   /*                                                               */ 01434000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE PI KEYWORD AND VALUES. */ 01435000
*   /*                                                               */ 01436000
*   /*****************************************************************/ 01437000
*                                                                  0425 01438000
*AMDPPGM:                                                          0425 01439000
*   ENTRY;                          /* ENTRY POINT                   */ 01440000
@EP00425 DS    0H                                                  0426 01441000
*   IF SYS='1'B                     /* IF AMDPRTAB SYS FLAG,         */ 01442000
*       |SYST='1'B                  /* OR TEMPTAB SYS FLAG,          */ 01443000
*       |ALLP='1'B                  /* OR AMDPRTAB PI ALL FLAG,      */ 01444000
*       |ALLPT='1'B THEN            /* OR TTAB PI ALL FLAG IS ON,    */ 01445000
         TM    SYS(AEDITCBR),B'00100000'                           0426 01446000
         BO    @RT00426                                            0426 01447000
         TM    SYST(TTABPTR),B'00100000'                           0426 01448000
         BO    @RT00426                                            0426 01449000
         TM    ALLP(AEDITCBR),B'10000000'                          0426 01450000
         BO    @RT00426                                            0426 01451000
         TM    ALLPT(TTABPTR),B'10000000'                          0426 01452000
         BO    @RT00426                                            0426 01453000
*     GOTO AMDPEOCL;                /* SEARCH FOR NEXT KEYWORD       */ 01454000
*   IF NOVAL='1'B THEN              /* IF NO VALUES FOLLOW, THEN     */ 01455000
         TM    NOVAL(TTABPTR),B'00100000'                          0428 01456000
         BNO   @RF00428                                            0428 01457000
*     DO;                           /* DO THE FOLLOWING              */ 01458000
*       ALLPT='1'B;                 /* ALL IS INDICATED              */ 01459000
         OI    ALLPT(TTABPTR),B'10000000'                          0430 01460000
*       GOTO AMDPCLCL;              /* PREPARE FOR NEXT KEYWORD      */ 01461000
         B     AMDPCLCL                                            0431 01462000
*     END;                          /* NO VALUES SPECIFIED           */ 01463000
*   SELPT='1'B;                     /* SET ON PI SELECTIVE IND       */ 01464000
@RF00428 OI    SELPT(TTABPTR),B'01000000'                          0433 01465000
*AMDPPGM2:                                                         0434 01466000
*   IF SCNCHAR=','                  /* IF DELIMITER OF COMMA         */ 01467000
*       |SCNCHAR=' '                /* OR BLANK                      */ 01468000
*       |SCNCHAR=')' THEN           /* OR RIGHT PAREN FOUND, HAVE    */ 01469000
AMDPPGM2 L     @14,SCNPTR(,TTABPTR)                                0434 01470000
         CLI   SCNCHAR(@14),C','                                   0434 01471000
         BE    @RT00434                                            0434 01472000
         CLI   SCNCHAR(@14),C' '                                   0434 01473000
         BE    @RT00434                                            0434 01474000
         CLI   SCNCHAR(@14),C')'                                   0434 01475000
         BE    @RT00434                                            0434 01476000
*     GOTO AMDPPGM3;                /* DELIMITED VALUE               */ 01477000
*   IF SCNPTR=EOCADDR               /* IF LOGICAL END OF STMT        */ 01478000
*     THEN                          /* FOUND, THEN                   */ 01479000
         C     @14,EOCADDR(,TTABPTR)                               0436 01480000
         BE    @RT00436                                            0436 01481000
*     GOTO AMDPPGM3;                /* CONTINUE PROCESSING           */ 01482000
*   SCNPTR=SCNPTR+1;                /* POSITION BUFFER POINTER       */ 01483000
         AH    @14,@CH00046                                        0438 01484000
         ST    @14,SCNPTR(,TTABPTR)                                0438 01485000
*   GOTO AMDPPGM2;                  /* RESUME SCAN FOR DELIMITER     */ 01486000
         B     AMDPPGM2                                            0439 01487000
*AMDPPGM3:                                                         0440 01488000
*   LNGTH=SCNPTR-ADDRS3;            /* CALCULATE LENGTH              */ 01489000
AMDPPGM3 L     @14,SCNPTR(,TTABPTR)                                0440 01490000
         S     @14,ADDRS3(,TTABPTR)                                0440 01491000
         ST    @14,LNGTH(,TTABPTR)                                 0440 01492000
*   IF LNGTH>2 THEN                 /* IF LNGTH>TWO, OUTPUT          */ 01493000
         CH    @14,@CH00078                                        0441 01494000
         BH    @RT00441                                            0441 01495000
*     GOTO AMDVLN1;                 /* INVALID VALUE LENGTH MSG      */ 01496000
*   IF LNGTH<1 THEN                 /* IF LENGTH<ONE,OUTPUT          */ 01497000
         LTR   @14,@14                                             0443 01498000
         BNP   @RT00443                                            0443 01499000
*     GOTO AMDELIM1;                /* INVALID DELIMITER MSG         */ 01500000
*                                                                  0444 01501000
*   /*****************************************************************/ 01502000
*   /*                                                               */ 01503000
*   /* CHECK TO DETERMINE THAT ALL DIGITS ARE BETWEEN 0 AND 9.       */ 01504000
*   /*                                                               */ 01505000
*   /*****************************************************************/ 01506000
*                                                                  0445 01507000
*   DO I=LNGTH TO 1 BY-1;           /* CHECK ALL DIGITS              */ 01508000
         ST    @14,I(,TTABPTR)                                     0445 01509000
         B     @DE00445                                            0445 01510000
@DL00445 DS    0H                                                  0446 01511000
*     IF VAL1(I)<'0'                /* IF DIGIT LOWER THAN 0         */ 01512000
*         |VAL1(I)>'9' THEN         /* OR HIGHER THAN 9,             */ 01513000
         L     @14,I(,TTABPTR)                                     0446 01514000
         L     @10,ADDRS3(,TTABPTR)                                0446 01515000
         ALR   @14,@10                                             0446 01516000
         AL    @14,@CF00473                                        0446 01517000
         CLI   VAL1(@14),C'0'                                      0446 01518000
         BL    @RT00446                                            0446 01519000
         L     @14,I(,TTABPTR)                                     0446 01520000
         ALR   @10,@14                                             0446 01521000
         AL    @10,@CF00473                                        0446 01522000
         CLI   VAL1(@10),C'9'                                      0446 01523000
         BH    @RT00446                                            0446 01524000
*       GOTO AMDVMSG;               /* OUTPUT INVALID VALUE MSG      */ 01525000
*   END;                            /* PROCEED TO NEXT DIGIT         */ 01526000
         SR    @14,@14                                             0448 01527000
         BCTR  @14,0                                               0448 01528000
         A     @14,I(,TTABPTR)                                     0448 01529000
         ST    @14,I(,TTABPTR)                                     0448 01530000
@DE00445 LTR   @14,@14                                             0448 01531000
         BP    @DL00445                                            0448 01532000
*   CALL AMDCVB;                    /* CONVERT PI CODE TO BINARY     */ 01533000
         BAL   @14,AMDCVB                                          0449 01534000
*   IF COMP4=17 THEN                                               0450 01535000
         CLC   COMP4(4,TTABPTR),@CF00564                           0450 01536000
         BNE   @RF00450                                            0450 01537000
*     DO;                           /* IF VALUE = PI 17              */ 01538000
*       PISTRB(1)='1'B;             /* SET ON BIT IN AMDSCNTB        */ 01539000
         OI    PISTRB(TTABPTR),B'10000000'                         0452 01540000
*       GOTO AMDPARN;               /* GO CHECK FOR MORE VALUES      */ 01541000
         B     AMDPARN                                             0453 01542000
*     END;                                                         0454 01543000
*   IF COMP4=18 THEN                                               0455 01544000
@RF00450 CLC   COMP4(4,TTABPTR),@CF00565                           0455 01545000
         BNE   @RF00455                                            0455 01546000
*     DO;                           /* IF VALUE = PI 18              */ 01547000
*       PISTRB(2)='1'B;             /* SET ON BIT IN AMDSCNTB        */ 01548000
         OI    PISTRB(TTABPTR),B'01000000'                         0457 01549000
*       GOTO AMDPARN;               /* GO CHECK FOR MORE VALUES      */ 01550000
         B     AMDPARN                                             0458 01551000
*     END;                                                         0459 01552000
*   IF COMP4=19 THEN                                               0460 01553000
@RF00455 CLC   COMP4(4,TTABPTR),@CF00566                           0460 01554000
         BNE   @RF00460                                            0460 01555000
*     DO;                           /* IF VALUE = PI 19              */ 01556000
*       PISTRB(3)='1'B;             /* SET ON BIT IN AMDSCNTB        */ 01557000
         OI    PISTRB(TTABPTR),B'00100000'                         0462 01558000
*       GOTO AMDPARN;               /* CHECK FOR MORE VALUES         */ 01559000
         B     AMDPARN                                             0463 01560000
*     END;                                                         0464 01561000
*   IF COMP4>16                     /* IF VALUE NOT WITHIN RANGE     */ 01562000
*       |COMP4<1 THEN               /* OF 1 AND 16, THEN       Y02014*/ 01563000
@RF00460 L     @14,COMP4(,TTABPTR)                                 0465 01564000
         CL    @14,@CF00139                                        0465 01565000
         BH    @RT00465                                            0465 01566000
         CL    @14,@CF00046                                        0465 01567000
         BL    @RT00465                                            0465 01568000
*     GOTO AMDVMSG;                 /* OUTPUT INVALID VALUE MSG      */ 01569000
*                                                                  0466 01570000
*   /*****************************************************************/ 01571000
*   /*                                                               */ 01572000
*   /* SET ON APPROPRIATE PI BIT IN STRING                           */ 01573000
*   /*                                                               */ 01574000
*   /*****************************************************************/ 01575000
*                                                                  0467 01576000
*   I=COMP4/8;                      /* CALCULATE BYTE                */ 01577000
         SRL   @14,3                                               0467 01578000
         ST    @14,I(,TTABPTR)                                     0467 01579000
*AMDPISTR:                                                         0468 01580000
*   J=COMP4//8;                     /* CALCULATE BIT IN BYTE         */ 01581000
AMDPISTR L     @14,COMP4(,TTABPTR)                                 0468 01582000
         N     @14,@CF00035                                        0468 01583000
         ST    @14,J(,TTABPTR)                                     0468 01584000
*   IF J=0 THEN                     /* IF NO REMAINDER, THEN         */ 01585000
         LTR   @14,@14                                             0469 01586000
         BNZ   @RF00469                                            0469 01587000
*     J=8;                          /* SET ON LAST BIT IN BYTE       */ 01588000
         MVC   J(4,TTABPTR),@CF00033                               0470 01589000
*   ELSE                            /* IF REMAINDER,                 */ 01590000
*     I=I+1;                        /* ARE INTO NEXT BYTE            */ 01591000
         B     @RC00469                                            0471 01592000
@RF00469 LA    @14,1                                               0471 01593000
         A     @14,I(,TTABPTR)                                     0471 01594000
         ST    @14,I(,TTABPTR)                                     0471 01595000
*   STRING1(I)=STRING1(I)           /* SET ON APPROPRIATE PI         */ 01596000
*       |MASKS(J);                  /* BIT                           */ 01597000
@RC00469 L     @14,I(,TTABPTR)                                     0472 01598000
         ALR   @14,TTABPTR                                         0472 01599000
         L     @10,J(,TTABPTR)                                     0472 01600000
         ALR   @10,TTABPTR                                         0472 01601000
         OC    STRING1-1(1,@14),MASKS-1(@10)                       0472 01602000
*   GOTO AMDPARN;                   /* CHECK FOR MORE VALUES         */ 01603000
*                                                                  0473 01604000
         B     AMDPARN                                             0473 01605000
*   /*****************************************************************/ 01606000
*   /*                                                               */ 01607000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE SYS KEYWORD.           */ 01608000
*   /*                                                               */ 01609000
*   /*****************************************************************/ 01610000
*                                                                  0474 01611000
*AMDPSYS:                                                          0474 01612000
*   ENTRY;                          /* ENTRY POINT                   */ 01613000
@EP00474 DS    0H                                                  0475 01614000
*   SYST='1'B;                      /* SET ON SYS BIT IN TEMPTAB     */ 01615000
*   SYSMT='1'B;                     /* SET ON TEMPTAB SYSM BIT       */ 01616000
         OI    SYST(TTABPTR),B'00110000'                           0476 01617000
*   ALLST='1'B;                     /* SET ON TEMPTAB SIO ALL BIT    */ 01618000
         OI    ALLST(TTABPTR),B'10000000'                          0477 01619000
*   ALLIT='1'B;                     /* SET ON TEMPTAB IO ALL BIT     */ 01620000
         OI    ALLIT(TTABPTR),B'10000000'                          0478 01621000
*   ALLVT='1'B;                     /* SET ON TEMPTAB SVC ALL BIT    */ 01622000
         OI    ALLVT(TTABPTR),B'10000000'                          0479 01623000
*   ALLPT='1'B;                     /* SET ON TEMPTAB PI ALL BIT     */ 01624000
         OI    ALLPT(TTABPTR),B'10000000'                          0480 01625000
*   EXTT='1'B;                      /* SET ON TEMPTAB EXT BIT        */ 01626000
*   DSPT='1'B;                      /* SET ON TEMPTAB DSP BIT        */ 01627000
*   RNIOT='1'B;                     /* SET TEMPTAB RNIO        Y02014*/ 01628000
*   SRMT='1'B;                      /* SET TEMPTAB SRM BIT     Y02014*/ 01629000
*   RRT='1'B;                       /* SET TEMPTAB RR BIT      Y02014*/ 01630000
         OI    EXTT(TTABPTR),B'11001110'                           0485 01631000
*   GOTO AMDPEOCL;                  /* SEARCH FOR NEXT KEYWORD       */ 01632000
*                                                                  0486 01633000
         B     AMDPEOCL                                            0486 01634000
*   /*****************************************************************/ 01635000
*   /*                                                               */ 01636000
*   /* THE FOLLOWING SBROUTINE PROCESSES THE EXT KEYWORD.            */ 01637000
*   /*                                                               */ 01638000
*   /*****************************************************************/ 01639000
*                                                                  0487 01640000
*AMDPEXT:                                                          0487 01641000
*   ENTRY;                          /* ENTRY POINT                   */ 01642000
@EP00487 DS    0H                                                  0488 01643000
*   EXTT='1'B;                      /* SET ON TEMPTAB EXT BIT        */ 01644000
         OI    EXTT(TTABPTR),B'10000000'                           0488 01645000
*   GOTO AMDPEOCL;                  /* SEARCH FOR NEXT KEYWORD       */ 01646000
*                                                                  0489 01647000
         B     AMDPEOCL                                            0489 01648000
*   /*****************************************************************/ 01649000
*   /*                                                               */ 01650000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE DSP KEYWORD.           */ 01651000
*   /*                                                               */ 01652000
*   /*****************************************************************/ 01653000
*                                                                  0490 01654000
*AMDPDSP:                                                          0490 01655000
*   ENTRY;                          /* ENTRY POINT                   */ 01656000
@EP00490 DS    0H                                                  0491 01657000
*   DSPT='1'B;                      /* SET ON TEMPTAB DSP BIT        */ 01658000
         OI    DSPT(TTABPTR),B'01000000'                           0491 01659000
*   GOTO AMDPEOCL;                  /* SEARCH FOR NEXT KEYWORD       */ 01660000
*                                                                  0492 01661000
         B     AMDPEOCL                                            0492 01662000
*   /*****************************************************************/ 01663000
*   /*                                                               */ 01664000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE RNIO KEYWD       Y02014*/ 01665000
*   /*                                                               */ 01666000
*   /*****************************************************************/ 01667000
*                                                                  0493 01668000
*AMDPRNIO:                                                         0493 01669000
*   ENTRY;                          /* ENTRY POINT             Y02014*/ 01670000
@EP00493 DS    0H                                                  0494 01671000
*   RNIOT='1'B;                     /* SET TEMPTAB RNIO        Y02014*/ 01672000
         OI    RNIOT(TTABPTR),B'00001000'                          0494 01673000
*   GOTO AMDPEOCL;                  /* SRCH FOR NEXT KEYWD     Y02014*/ 01674000
*                                                                  0495 01675000
         B     AMDPEOCL                                            0495 01676000
*   /*****************************************************************/ 01677000
*   /*                                                               */ 01678000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE SRM KEYWD        Y02014*/ 01679000
*   /*                                                               */ 01680000
*   /*****************************************************************/ 01681000
*                                                                  0496 01682000
*AMDPSRM:                                                          0496 01683000
*   ENTRY;                          /* ENTRY POINT             Y02014*/ 01684000
@EP00496 DS    0H                                                  0497 01685000
*   SRMT='1'B;                      /* SET ON TEMPTAB SRM      Y02014*/ 01686000
         OI    SRMT(TTABPTR),B'00000100'                           0497 01687000
*   GOTO AMDPEOCL;                  /* SRCH FOR NEXT KEYWD     Y02014*/ 01688000
*                                                                  0498 01689000
         B     AMDPEOCL                                            0498 01690000
*   /*****************************************************************/ 01691000
*   /*                                                               */ 01692000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE RR KEYWD         Y02014*/ 01693000
*   /*                                                               */ 01694000
*   /*****************************************************************/ 01695000
*                                                                  0499 01696000
*AMDPRR:                                                           0499 01697000
*   ENTRY;                          /* ENTRY POINT             Y02014*/ 01698000
@EP00499 DS    0H                                                  0500 01699000
*   RRT='1'B;                       /* SET TEMPTAB RR BIT      Y02014*/ 01700000
         OI    RRT(TTABPTR),B'00000010'                            0500 01701000
*   GOTO AMDPEOCL;                  /* SRCH FOR NEXT KEYWD     Y02014*/ 01702000
*                                                                  0501 01703000
         B     AMDPEOCL                                            0501 01704000
*   /*****************************************************************/ 01705000
*   /*                                                               */ 01706000
*   /* THE FOLLOWING SUBROUTINE PROCESSES THE EOF KEYWD        Y02014*/ 01707000
*   /*                                                               */ 01708000
*   /*****************************************************************/ 01709000
*                                                                  0502 01710000
*AMDPEOF:                                                          0502 01711000
*   ENTRY;                          /* ENTRY POINT             Y02014*/ 01712000
@EP00502 DS    0H                                                  0503 01713000
*   EOFT='1'B;                      /* SET TEMPTAB EOF BIT     Y02014*/ 01714000
         OI    EOFT(TTABPTR),B'00000001'                           0503 01715000
*   GOTO AMDPEOCL;                  /* SRCH FOR NEXT KEYWD     Y02014*/ 01716000
*                                                                  0504 01717000
         B     AMDPEOCL                                            0504 01718000
*   /*****************************************************************/ 01719000
*   /*                                                               */ 01720000
*   /* THE FOLLOWING SUBROUTINE CONVERTS PRINTABLE DECIMAL TO BINARY.*/ 01721000
*   /*                                                               */ 01722000
*   /*****************************************************************/ 01723000
*                                                                  0505 01724000
*AMDPRCVB:                                                         0505 01725000
*   ENTRY;                          /* CVB EXTERNAL ROUTINE          */ 01726000
@EP00505 DS    0H                                                  0506 01727000
*   CALL AMDCVB;                    /* CALL INTERNAL ROUTINE         */ 01728000
         BAL   @14,AMDCVB                                          0506 01729000
*   RETURN;                         /* RETURN TO CALLER              */ 01730000
*                                                                  0507 01731000
         B     @EL00001                                            0507 01732000
*   /*****************************************************************/ 01733000
*   /*                                                               */ 01734000
*   /* THE FOLLOWING SUBROUTINE CONVERTS PRINTABLE HEX TO BINARY.    */ 01735000
*   /*                                                               */ 01736000
*   /*****************************************************************/ 01737000
*                                                                  0508 01738000
*AMDPRHX:                                                          0508 01739000
*   ENTRY;                          /* ENTRY POINT                   */ 01740000
@EP00508 DS    0H                                                  0509 01741000
*   CALL AMDHEX;                    /* CALL INTERNAL ROUTINE         */ 01742000
         BAL   @14,AMDHEX                                          0509 01743000
*   RETURN;                         /* RETURN TO CALLER              */ 01744000
*                                                                  0510 01745000
         B     @EL00001                                            0510 01746000
*   /*****************************************************************/ 01747000
*   /*                                                               */ 01748000
*   /* INTERNAL PROCEDURE                                            */ 01749000
*   /*                                                               */ 01750000
*   /*****************************************************************/ 01751000
*                                                                  0511 01752000
*AMDCVB:                                                           0511 01753000
*   PROC;                           /* INTERNAL PROCEDURE            */ 01754000
AMDCVB   STM   @14,@12,@SA00002                                    0511 01755000
*   RFY                                                            0512 01756000
*    (REG4,                         /* WORK REGISTER           Y02014*/ 01757000
*     REG5,                         /* WORK REGISTER                 */ 01758000
*     AEDITCBR,                     /* PTR TO AMDPRTAB               */ 01759000
*     TTABPTR,                      /* PTR TO AMDSCNTB               */ 01760000
*     REG6,                         /* WORK REGISTER                 */ 01761000
*     REGPT)RSTD;                   /* POINTER TO AMDPRCOM     Y02014*/ 01762000
*   REG6=LNGTH-1;                   /* OBTAIN VALUE LENGTH           */ 01763000
         L     REG6,LNGTH(,TTABPTR)                                0513 01764000
         BCTR  REG6,0                                              0513 01765000
*   REG4=ADDRS3;                    /* OBTAIN ADDRS OF VALUE STRT    */ 01766000
         L     REG4,ADDRS3(,TTABPTR)                               0514 01767000
*   REG5=ADDR(DBLWORD);             /* OBTAIN ADDRS OF RECEIVER      */ 01768000
         LA    REG5,DBLWORD(,TTABPTR)                              0515 01769000
*   GENERATE;                                                      0516 01770000
*                                       /* CNVRT FROM DEC TO BIN     */ 01771000
         EX   R6,PACK3                  EXECUTE PACK INSTRUCTION        01772000
         B    AMDPCVB1                  CONVERT RESULT TO BINARY        01773000
PACK3    PACK  0(8,R5),0(0,R4)          PACK DIGITS                     01774000
AMDPCVB1 CVB   R6,0(R5)              RESULT CONVERTED TO BINARY         01775000
*   COMP4=REG6;                     /* SAVE RESULT                   */ 01776000
         ST    REG6,COMP4(,TTABPTR)                                0517 01777000
*   RETURN;                         /* RETURN TO CALLER              */ 01778000
@EL00002 DS    0H                                                  0518 01779000
@EF00002 DS    0H                                                  0518 01780000
@ER00002 LM    @14,@12,@SA00002                                    0518 01781000
         BR    @14                                                 0518 01782000
*   END AMDCVB;                     /* END OF INTERNAL PROCEDURE     */ 01783000
*                                                                  0519 01784000
*   /*****************************************************************/ 01785000
*   /*                                                               */ 01786000
*   /* INTERNAL PROCEDURE                                            */ 01787000
*   /*                                                               */ 01788000
*   /*****************************************************************/ 01789000
*                                                                  0520 01790000
*AMDHEX:                                                           0520 01791000
*   PROC;                           /* INTERNAL PROCEDURE            */ 01792000
AMDHEX   STM   @14,@12,@SA00003                                    0520 01793000
*   RFY                                                            0521 01794000
*    (REG2,                         /* WORK REGISTER           Y02014*/ 01795000
*     REG4,                         /* WORK REGISTER                 */ 01796000
*     AEDITCBR,                     /* PTR TO AMDPRTAB               */ 01797000
*     TTABPTR,                      /* PTR TO AMDSCNTB               */ 01798000
*     REG5,                         /* WORK REGISTER                 */ 01799000
*     REGPT)RSTD;                   /* POINTER TO AMDPRCOM     Y02014*/ 01800000
*   REG2=LNGTH-1;                   /* OBTAIN VALUE LNGTH            */ 01801000
         L     REG2,LNGTH(,TTABPTR)                                0522 01802000
         BCTR  REG2,0                                              0522 01803000
*   REG4=ADDRS3;                    /* OBTAIN PTR TO FIRST CHAR      */ 01804000
         L     REG4,ADDRS3(,TTABPTR)                               0523 01805000
*   GENERATE;                                                      0524 01806000
*                                       /* CNVRT FROM HEX TO BIN     */ 01807000
         EX   R2,ANDCHAR                EXECUTE NC INSTRUCTION          01808000
         EX   R2,TRANCHAR               EXECUTE TR INSTRUCTION          01809000
         B    INTHEX1                   PREPARE FOR PACK INSTRUCTION    01810000
ANDCHAR  NC   0(0,R4),ZONES       PREPARATION FOR TRANSLATE             01811000
TRANCHAR TR   0(0,R4),TRNTABL     PREPARATION FOR PACK                  01812000
INTHEX1  LA   R5,WORDPLUS               OBTAIN ADDRS OF RECEIVER        01813000
         LA   R2,1(R2)                OBTAIN ACTUAL LENGTH              01814000
         EX   R2,PACKCHAR               ELIMINATE ZONES                 01815000
         B    INTHEX2                   STORE RESULT                    01816000
PACKCHAR PACK 0(5,R5),0(0,R4) PACK DIGITS                               01817000
*INTHEX2:                                                          0525 01818000
*   COMP8=WORDPLUS;                 /* STRIP EXTRA BYTE/STORE RESULT */ 01819000
INTHEX2  MVI   COMP8+5(TTABPTR),C' '                               0525 01820000
         MVC   COMP8+6(2,TTABPTR),COMP8+5(TTABPTR)                 0525 01821000
         MVC   COMP8(5,TTABPTR),WORDPLUS                           0525 01822000
*   RETURN;                         /* RETURN TO CALLER              */ 01823000
@EL00003 DS    0H                                                  0526 01824000
@EF00003 DS    0H                                                  0526 01825000
@ER00003 LM    @14,@12,@SA00003                                    0526 01826000
         BR    @14                                                 0526 01827000
*   END AMDHEX;                                                    0527 01828000
*   END AMDPRSN2                    /* END OF EXTERNAL PROCEDURE     */ 01829000
*                                                                  0528 01830000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 01831000
*/*%INCLUDE SYSLIB  (AMDPRTAB)                                       */ 01832000
*/*%INCLUDE SYSLIB  (AMDSCNTB)                                       */ 01833000
*                                                                  0528 01834000
*       ;                                                          0528 01835000
         B     @EL00001                                            0528 01836000
@DATA    DS    0H                                                       01837000
@CH00078 DC    H'2'                                                     01838000
@CH00169 DC    H'3'                                                     01839000
@CH00086 DC    H'5'                                                     01840000
@CH00034 DC    H'11'                                                    01841000
@CH00121 DC    H'256'                                                   01842000
@SM00614 MVC   COMP8(0,TTABPTR),VAL1(@14)                               01843000
@SM00616 MVC   DDNM(0,TTABPTR),VAL1(@14)                                01844000
@SM00618 MVC   EXITNAME(0,TTABPTR),VAL1(@10)                            01845000
@SM00620 MVC   COMP8(0,TTABPTR),VAL1(@10)                               01846000
@SM00622 MVC   DEV(0,@14),COMP8(TTABPTR)                                01847000
@SC00624 CLC   DEV(0,@14),COMP8(TTABPTR)                                01848000
         DS    0F                                                       01849000
@SA00001 DS    18F                                                      01850000
@SA00002 DS    15F                                                      01851000
@SA00003 DS    15F                                                      01852000
         DS    0F                                                       01853000
@CF00473 DC    F'-1'                                                    01854000
@CF00046 DC    F'1'                                                     01855000
@CH00046 EQU   @CF00046+2                                               01856000
@CF00099 DC    F'4'                                                     01857000
@CF00035 DC    F'7'                                                     01858000
@CF00033 DC    F'8'                                                     01859000
@CH00033 EQU   @CF00033+2                                               01860000
@CF00139 DC    F'16'                                                    01861000
@CF00564 DC    F'17'                                                    01862000
@CF00565 DC    F'18'                                                    01863000
@CF00566 DC    F'19'                                                    01864000
@CA00319 DC    A(AMDPRS00)                                              01865000
         DS    0D                                                       01866000
LASTPTR  DS    A                                                        01867000
SRTBPTX  DS    A                                                        01868000
SVTABX   DS    A                                                        01869000
LSTPTRX  DS    A                                                        01870000
SRTBPTY  DS    A                                                        01871000
SVTABY   DS    A                                                        01872000
LSTPTRY  DS    A                                                        01873000
ZONES    DC    X'1F1F1F1F1F1F1F1F'                                      01874000
TRNTABL  DS    CL32                                                     01875000
         ORG   TRNTABL                                                  01876000
TRNTABL1 DC    X'00FAFBFCFDFEFF'                                        01877000
TRNTABL2 DS    CL9                                                      01878000
TRNTABL3 DC    CL16'0123456789ABCDEF'                                   01879000
         ORG   TRNTABL+32                                               01880000
WORDPLUS DS    CL5                                                      01881000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01882000
@01      EQU   01                                                       01883000
@02      EQU   02                                                       01884000
@03      EQU   03                                                       01885000
@04      EQU   04                                                       01886000
@05      EQU   05                                                       01887000
@06      EQU   06                                                       01888000
@07      EQU   07                                                       01889000
@08      EQU   08                                                       01890000
@09      EQU   09                                                       01891000
@10      EQU   10                                                       01892000
@11      EQU   11                                                       01893000
@12      EQU   12                                                       01894000
@13      EQU   13                                                       01895000
@14      EQU   14                                                       01896000
@15      EQU   15                                                       01897000
AEDITCBR EQU   @09                                                      01898000
TTABPTR  EQU   @03                                                      01899000
REG1     EQU   @01                                                      01900000
REG2     EQU   @02                                                      01901000
REG4     EQU   @04                                                      01902000
REG5     EQU   @05                                                      01903000
REG6     EQU   @06                                                      01904000
REGPT    EQU   @12                                                      01905000
REG15    EQU   @15                                                      01906000
REG7     EQU   @07                                                      01907000
         EXTRN AMDPRS00                                                 01908000
AMDPRTAB EQU   0                                                        01909000
DEBGFLGS EQU   AMDPRTAB+8                                               01910000
PTHFLGS1 EQU   DEBGFLGS                                                 01911000
PTHFLGS2 EQU   DEBGFLGS+1                                               01912000
INRFCFGS EQU   DEBGFLGS+2                                               01913000
IOFLGS   EQU   DEBGFLGS+3                                               01914000
USEREXIT EQU   AMDPRTAB+24                                              01915000
DDNAME   EQU   AMDPRTAB+32                                              01916000
STARTIME EQU   AMDPRTAB+40                                              01917000
STOPTIME EQU   AMDPRTAB+52                                              01918000
NAMES    EQU   AMDPRTAB+64                                              01919000
ADS      EQU   AMDPRTAB+104                                             01920000
AADS     EQU   ADS                                                      01921000
SIF      EQU   AMDPRTAB+124                                             01922000
SIOFLGS  EQU   SIF                                                      01923000
ALLS     EQU   SIOFLGS                                                  01924000
NOEQU    EQU   SIOFLGS                                                  01925000
DVADS1   EQU   AMDPRTAB+128                                             01926000
IO       EQU   AMDPRTAB+228                                             01927000
IOFLGS2  EQU   IO                                                       01928000
ALLI     EQU   IOFLGS2                                                  01929000
DVADS2   EQU   AMDPRTAB+232                                             01930000
VCF      EQU   AMDPRTAB+332                                             01931000
SVCFLGS  EQU   VCF                                                      01932000
ALLV     EQU   SVCFLGS                                                  01933000
USR      EQU   AMDPRTAB+368                                             01934000
USRFLGS  EQU   USR                                                      01935000
USRTAB   EQU   AMDPRTAB+372                                             01936000
PI       EQU   AMDPRTAB+452                                             01937000
PIFLGS   EQU   PI                                                       01938000
ALLP     EQU   PIFLGS                                                   01939000
PGMNGEN  EQU   AMDPRTAB+456                                             01940000
GENFLAGS EQU   PGMNGEN+3                                                01941000
SYS      EQU   GENFLAGS                                                 01942000
GENFLGS1 EQU   AMDPRTAB+460                                             01943000
ESTARTME EQU   AMDPRTAB+500                                             01944000
ESTOPTME EQU   AMDPRTAB+509                                             01945000
AMDSCNTB EQU   0                                                        01946000
TEMPTAB  EQU   AMDSCNTB                                                 01947000
EXITNAME EQU   TEMPTAB                                                  01948000
DDNM     EQU   TEMPTAB+8                                                01949000
STARTSL  EQU   TEMPTAB+16                                               01950000
STOPSL   EQU   TEMPTAB+28                                               01951000
OVERLTAB EQU   TEMPTAB+40                                               01952000
SIOTFLGS EQU   TEMPTAB+80                                               01953000
ALLST    EQU   SIOTFLGS                                                 01954000
SELST    EQU   SIOTFLGS                                                 01955000
EQUIVT   EQU   SIOTFLGS                                                 01956000
NOEQUT   EQU   SIOTFLGS                                                 01957000
IOTFLGS  EQU   TEMPTAB+81                                               01958000
ALLIT    EQU   IOTFLGS                                                  01959000
SELIT    EQU   IOTFLGS                                                  01960000
USRTFLGS EQU   TEMPTAB+82                                               01961000
SVCTFLGS EQU   TEMPTAB+83                                               01962000
ALLVT    EQU   SVCTFLGS                                                 01963000
SELVT    EQU   SVCTFLGS                                                 01964000
PITFLGS  EQU   TEMPTAB+84                                               01965000
ALLPT    EQU   PITFLGS                                                  01966000
SELPT    EQU   PITFLGS                                                  01967000
SYSTFLGS EQU   TEMPTAB+85                                               01968000
EXTT     EQU   SYSTFLGS                                                 01969000
DSPT     EQU   SYSTFLGS                                                 01970000
SYST     EQU   SYSTFLGS                                                 01971000
SYSMT    EQU   SYSTFLGS                                                 01972000
RNIOT    EQU   SYSTFLGS                                                 01973000
SRMT     EQU   SYSTFLGS                                                 01974000
RRT      EQU   SYSTFLGS                                                 01975000
EOFT     EQU   SYSTFLGS                                                 01976000
SIOCRPTR EQU   TEMPTAB+104                                              01977000
IOCRPTR  EQU   TEMPTAB+108                                              01978000
JOBCRPTR EQU   TEMPTAB+112                                              01979000
ASCBCPTR EQU   TEMPTAB+116                                              01980000
SVCSTR   EQU   TEMPTAB+128                                              01981000
PISTR    EQU   TEMPTAB+160                                              01982000
PISTRB   EQU   TEMPTAB+162                                              01983000
SCNBITS  EQU   AMDSCNTB+163                                             01984000
IORTNSW  EQU   SCNBITS                                                  01985000
EQUIND   EQU   SCNBITS                                                  01986000
CODETABL EQU   AMDSCNTB+164                                             01987000
CXIT     EQU   CODETABL                                                 01988000
CJOBN    EQU   CODETABL                                                 01989000
CASCB    EQU   CODETABL                                                 01990000
CSIO     EQU   CODETABL                                                 01991000
CIO      EQU   CODETABL+1                                               01992000
CSVC     EQU   CODETABL+1                                               01993000
CPI      EQU   CODETABL+1                                               01994000
NOVAL    EQU   CODETABL+2                                               01995000
PAREN    EQU   CODETABL+2                                               01996000
DBLWORD  EQU   AMDSCNTB+176                                             01997000
KWTAB1   EQU   AMDSCNTB+184                                             01998000
KWTAB2   EQU   AMDSCNTB+228                                             01999000
BLANK1   EQU   AMDSCNTB+316                                             02000000
MASKS    EQU   AMDSCNTB+328                                             02001000
SCNPTR   EQU   AMDSCNTB+336                                             02002000
ADDRS3   EQU   AMDSCNTB+348                                             02003000
EOCADDR  EQU   AMDSCNTB+352                                             02004000
LNGTH    EQU   AMDSCNTB+356                                             02005000
COMP4    EQU   AMDSCNTB+360                                             02006000
COMP8    EQU   AMDSCNTB+364                                             02007000
SVKEY    EQU   AMDSCNTB+372                                             02008000
SAVETAB  EQU   AMDSCNTB+376                                             02009000
SORTPTR  EQU   AMDSCNTB+380                                             02010000
SRTTABPT EQU   AMDSCNTB+384                                             02011000
INCRT    EQU   AMDSCNTB+388                                             02012000
ALLCT    EQU   AMDSCNTB+392                                             02013000
I        EQU   AMDSCNTB+396                                             02014000
J        EQU   AMDSCNTB+400                                             02015000
AMDPRSYN EQU   0                                                        02016000
MSGADDR  EQU   0                                                        02017000
ERRBUF   EQU   0                                                        02018000
VAL1     EQU   0                                                        02019000
SCNCHAR  EQU   0                                                        02020000
DEV      EQU   0                                                        02021000
DEVICE   EQU   0                                                        02022000
AD3      EQU   AMDPRS00+8                                               02023000
AD4      EQU   AMDPRS00+12                                              02024000
AD5      EQU   AMDPRS00+16                                              02025000
AD6      EQU   AMDPRS00+20                                              02026000
AD7      EQU   AMDPRS00+24                                              02027000
GNOSTDMG EQU   SWD                                                      02028000
STRING   EQU   SVCSTR                                                   02029000
STRING1  EQU   PISTR                                                    02030000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02031000
GRDRSW   EQU   SWA                                                      02032000
GSETCVTS EQU   SWA                                                      02033000
GPRNTSW  EQU   SWA                                                      02034000
GGOSW    EQU   SWA                                                      02035000
GTSOSW   EQU   SWA                                                      02036000
GJBNMSW  EQU   SWA                                                      02037000
GREAD    EQU   SWA                                                      02038000
GSTORSW  EQU   SWA                                                      02039000
GFRBUFSW EQU   SWD                                                      02040000
GGPRSFND EQU   SWD                                                      02041000
GCONTSW  EQU   SWD                                                      02042000
GPREFMTD EQU   SWD                                                      02043000
GNCDUMP  EQU   SWD                                                      02044000
GSWPDCBC EQU   SWD                                                      02045000
GFLSHMOD EQU   SWD                                                      02046000
AD11     EQU   AMDPRS00+40                                              02047000
AD10     EQU   AMDPRS00+36                                              02048000
AD9      EQU   AMDPRS00+32                                              02049000
AD8      EQU   AMDPRS00+28                                              02050000
AD2      EQU   AMDPRS00+4                                               02051000
AD1      EQU   AMDPRS00                                                 02052000
INTSTOP  EQU   AMDSCNTB+409                                             02053000
INTSTART EQU   AMDSCNTB+404                                             02054000
ALLPTR   EQU   SAVETAB                                                  02055000
ADDRS1   EQU   AMDSCNTB+344                                             02056000
BUFADDR  EQU   AMDSCNTB+340                                             02057000
WORD     EQU   AMDSCNTB+168                                             02058000
@NM00003 EQU   CODETABL+2                                               02059000
CEOF     EQU   CODETABL+2                                               02060000
CRR      EQU   CODETABL+2                                               02061000
CSRM     EQU   CODETABL+1                                               02062000
CRNIO    EQU   CODETABL+1                                               02063000
CDSP     EQU   CODETABL+1                                               02064000
CEXT     EQU   CODETABL+1                                               02065000
CSYS     EQU   CODETABL+1                                               02066000
CUSR     EQU   CODETABL                                                 02067000
CSTOP    EQU   CODETABL                                                 02068000
CSTART   EQU   CODETABL                                                 02069000
CDDN     EQU   CODETABL                                                 02070000
RESBITS  EQU   SCNBITS                                                  02071000
PRNSW    EQU   SCNBITS                                                  02072000
RUNEDIT  EQU   SCNBITS                                                  02073000
SCANBIT  EQU   SCNBITS                                                  02074000
MORESW   EQU   SCNBITS                                                  02075000
USRCRCNT EQU   TEMPTAB+124                                              02076000
USRCOUNT EQU   TEMPTAB+120                                              02077000
ASCBPTR  EQU   TEMPTAB+100                                              02078000
JOBNPTR  EQU   TEMPTAB+96                                               02079000
IOPTR    EQU   TEMPTAB+92                                               02080000
SIOPTR   EQU   TEMPTAB+88                                               02081000
@NM00002 EQU   TEMPTAB+86                                               02082000
T        EQU   PITFLGS                                                  02083000
GT       EQU   SVCTFLGS                                                 02084000
ET       EQU   USRTFLGS                                                 02085000
SELUT    EQU   USRTFLGS                                                 02086000
ALLUT    EQU   USRTFLGS                                                 02087000
BT       EQU   IOTFLGS                                                  02088000
AT       EQU   SIOTFLGS                                                 02089000
OVERSL   EQU   OVERLTAB                                                 02090000
DYSTP    EQU   STOPSL+10                                                02091000
YRSTP    EQU   STOPSL+8                                                 02092000
TIMERU   EQU   STOPSL                                                   02093000
DY       EQU   STARTSL+10                                               02094000
YR       EQU   STARTSL+8                                                02095000
TIMEU    EQU   STARTSL                                                  02096000
RESERVED EQU   AMDPRTAB+522                                             02097000
CVTTZONE EQU   AMDPRTAB+518                                             02098000
ESPSEC   EQU   ESTOPTME+7                                               02099000
ESPMIN   EQU   ESTOPTME+5                                               02100000
ESPHR    EQU   ESTOPTME+3                                               02101000
ESPDAY   EQU   ESTOPTME                                                 02102000
ESSEC    EQU   ESTARTME+7                                               02103000
ESMIN    EQU   ESTARTME+5                                               02104000
ESHR     EQU   ESTARTME+3                                               02105000
ESDAY    EQU   ESTARTME                                                 02106000
ADTSBUF  EQU   AMDPRTAB+496                                             02107000
OFSTDATA EQU   AMDPRTAB+494                                             02108000
OFSTEID  EQU   AMDPRTAB+492                                             02109000
AFRMAD   EQU   AMDPRTAB+488                                             02110000
REENTWKA EQU   AMDPRTAB+484                                             02111000
PRFMTADD EQU   AMDPRTAB+480                                             02112000
AEIOCT   EQU   AMDPRTAB+476                                             02113000
EXITADDR EQU   AMDPRTAB+472                                             02114000
EXITNM   EQU   AMDPRTAB+464                                             02115000
RECDLL   EQU   AMDPRTAB+461                                             02116000
@NM00001 EQU   GENFLGS1                                                 02117000
FIRSTHSW EQU   GENFLGS1                                                 02118000
TSFOUND  EQU   GENFLGS1                                                 02119000
EOFINPRO EQU   GENFLGS1                                                 02120000
TS       EQU   GENFLGS1                                                 02121000
EOF      EQU   GENFLAGS                                                 02122000
RR       EQU   GENFLAGS                                                 02123000
SRM      EQU   GENFLAGS                                                 02124000
RNIO     EQU   GENFLAGS                                                 02125000
SYSM     EQU   GENFLAGS                                                 02126000
DSP      EQU   GENFLAGS                                                 02127000
EXT      EQU   GENFLAGS                                                 02128000
PICODEA  EQU   PGMNGEN+2                                                02129000
PICODES  EQU   PGMNGEN                                                  02130000
Q        EQU   PI+1                                                     02131000
P01R     EQU   PIFLGS                                                   02132000
SELP     EQU   PIFLGS                                                   02133000
USRNGTAB EQU   USRTAB                                                   02134000
O        EQU   USR+1                                                    02135000
N01R     EQU   USRFLGS                                                  02136000
SELU     EQU   USRFLGS                                                  02137000
ALLU     EQU   USRFLGS                                                  02138000
SVCNUMS  EQU   AMDPRTAB+336                                             02139000
M        EQU   VCF+1                                                    02140000
L        EQU   SVCFLGS                                                  02141000
SELV     EQU   SVCFLGS                                                  02142000
IODVADS  EQU   DVADS2                                                   02143000
K01RES   EQU   IO+1                                                     02144000
JJ       EQU   IOFLGS2                                                  02145000
SELI     EQU   IOFLGS2                                                  02146000
SIODVADS EQU   DVADS1                                                   02147000
II       EQU   SIF+1                                                    02148000
H        EQU   SIOFLGS                                                  02149000
EQUIV    EQU   SIOFLGS                                                  02150000
SELS     EQU   SIOFLGS                                                  02151000
ASCBADDR EQU   AADS                                                     02152000
JOBNAMES EQU   NAMES                                                    02153000
DAY2     EQU   STOPTIME+10                                              02154000
F        EQU   STOPTIME+8                                               02155000
TIME2    EQU   STOPTIME                                                 02156000
DAY      EQU   STARTIME+10                                              02157000
D        EQU   STARTIME+8                                               02158000
TIME     EQU   STARTIME                                                 02159000
GTFWDPTR EQU   AMDPRTAB+20                                              02160000
C        EQU   DEBGFLGS+4                                               02161000
B        EQU   IOFLGS                                                   02162000
GETEOF   EQU   IOFLGS                                                   02163000
DMDFMT   EQU   INRFCFGS                                                 02164000
EDITSTOP EQU   INRFCFGS                                                 02165000
EXTTRC   EQU   INRFCFGS                                                 02166000
RET      EQU   INRFCFGS                                                 02167000
FMT      EQU   INRFCFGS                                                 02168000
SPIE     EQU   INRFCFGS                                                 02169000
TERM     EQU   INRFCFGS                                                 02170000
FLMODE   EQU   INRFCFGS                                                 02171000
REMAIN   EQU   PTHFLGS2                                                 02172000
APP      EQU   PTHFLGS2                                                 02173000
REXT     EQU   PTHFLGS1                                                 02174000
FRM      EQU   PTHFLGS1                                                 02175000
FLT      EQU   PTHFLGS1                                                 02176000
HEX      EQU   PTHFLGS1                                                 02177000
CON      EQU   PTHFLGS1                                                 02178000
GET      EQU   PTHFLGS1                                                 02179000
SCN      EQU   PTHFLGS1                                                 02180000
ROOT     EQU   PTHFLGS1                                                 02181000
CURREC   EQU   AMDPRTAB+4                                               02182000
AFMG     EQU   AMDPRTAB                                                 02183000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02184000
@RT00047 EQU   AMDPNAM1                                                 02185000
@RT00049 EQU   AMDPNAM1                                                 02186000
@RT00051 EQU   AMDPNAM1                                                 02187000
@RT00053 EQU   AMDPNAM1                                                 02188000
@RT00058 EQU   AMDVLMG1                                                 02189000
@RT00067 EQU   AMDPNAM2                                                 02190000
@RT00069 EQU   AMDPNAM2                                                 02191000
@RT00074 EQU   AMDVLN1                                                  02192000
@RT00076 EQU   AMDELIM1                                                 02193000
@RT00080 EQU   AMDPNAM3                                                 02194000
@RT00082 EQU   AMDPNAM4                                                 02195000
@RT00084 EQU   AMDPNAM5                                                 02196000
@RT00088 EQU   AMDPNAM6                                                 02197000
@RT00090 EQU   AMDPNAM7                                                 02198000
@RT00095 EQU   AMDPEOCL                                                 02199000
@RT00098 EQU   AMDPEOCL                                                 02200000
@RT00101 EQU   AMDPEOCL                                                 02201000
@RT00104 EQU   AMDPEOCL                                                 02202000
AMDRTCTL EQU   @EL00001                                                 02203000
@RT00114 EQU   AMDVLEN1                                                 02204000
@RT00134 EQU   AMDPTAJ1                                                 02205000
@RT00136 EQU   AMDPTAJ1                                                 02206000
@RT00142 EQU   AMDPTAJ3                                                 02207000
@RT00144 EQU   AMDVLN1                                                  02208000
@RT00146 EQU   AMDELIM1                                                 02209000
@RT00148 EQU   AMDPTAJ2                                                 02210000
@RT00150 EQU   AMDPTAJ2                                                 02211000
@RT00152 EQU   AMDPTAJ2                                                 02212000
@RT00154 EQU   AMDPTAJ2                                                 02213000
@RT00159 EQU   AMDUMSG                                                  02214000
@RT00170 EQU   AMDPEOCL                                                 02215000
@RT00172 EQU   AMDPEOCL                                                 02216000
@RT00176 EQU   AMDPTAJX                                                 02217000
@RT00178 EQU   AMDPSVC2                                                 02218000
@RT00180 EQU   AMDPPGM2                                                 02219000
@RF00184 EQU   AMDPARN                                                  02220000
@RT00190 EQU   AMDVLN1                                                  02221000
@RT00192 EQU   AMDELIM1                                                 02222000
@RT00195 EQU   AMDPOK1                                                  02223000
@RT00197 EQU   AMDVMSG                                                  02224000
@RT00206 EQU   AMDELIM2                                                 02225000
@RT00215 EQU   AMDUMMG1                                                 02226000
@RT00230 EQU   AMDPEOCL                                                 02227000
@RT00232 EQU   AMDPEOCL                                                 02228000
@RT00234 EQU   AMDPSIO1                                                 02229000
@RT00237 EQU   AMDPSIO2                                                 02230000
@RT00251 EQU   AMDPEOCL                                                 02231000
@RT00253 EQU   AMDPEOCL                                                 02232000
@RT00277 EQU   AMDPEOCL                                                 02233000
@RT00279 EQU   AMDPEOCL                                                 02234000
@RC00282 EQU   AMDPSIO6                                                 02235000
@RT00286 EQU   AMDPSIO5                                                 02236000
@RT00291 EQU   AMDPSI31                                                 02237000
@RF00308 EQU   AMDPCLCL                                                 02238000
@RT00312 EQU   AMDELIM1                                                 02239000
@RT00315 EQU   AMDPCLCL                                                 02240000
@RF00333 EQU   AMDPIORS                                                 02241000
@RT00337 EQU   AMDPEOCL                                                 02242000
@RT00340 EQU   AMDPSIOC                                                 02243000
@RT00342 EQU   AMDPSIOC                                                 02244000
@RT00347 EQU   AMDELIM1                                                 02245000
@RT00349 EQU   AMDVLN1                                                  02246000
@RT00352 EQU   AMDPEND                                                  02247000
@RT00354 EQU   AMDVMSG                                                  02248000
@RT00358 EQU   AMDPSIOE                                                 02249000
@RT00364 EQU   AMDUMSG                                                  02250000
@RT00366 EQU   AMDPIO1                                                  02251000
@RT00374 EQU   AMDPIO4                                                  02252000
@RT00379 EQU   AMDPARN                                                  02253000
@RT00383 EQU   AMDPIO3                                                  02254000
@RT00387 EQU   AMDPSIOE                                                 02255000
@RT00391 EQU   AMDPEOCL                                                 02256000
@RT00399 EQU   AMDPSVC3                                                 02257000
@RT00401 EQU   AMDPSVC3                                                 02258000
@RT00406 EQU   AMDVLN1                                                  02259000
@RT00408 EQU   AMDELIM1                                                 02260000
@RT00411 EQU   AMDVMSG                                                  02261000
@RT00416 EQU   AMDVMSG                                                  02262000
@RT00426 EQU   AMDPEOCL                                                 02263000
@RT00434 EQU   AMDPPGM3                                                 02264000
@RT00436 EQU   AMDPPGM3                                                 02265000
@RT00441 EQU   AMDVLN1                                                  02266000
@RT00443 EQU   AMDELIM1                                                 02267000
@RT00446 EQU   AMDVMSG                                                  02268000
@RT00465 EQU   AMDVMSG                                                  02269000
@PB00003 EQU   @EL00001                                                 02270000
@PB00002 EQU   @PB00003                                                 02271000
@ENDDATA EQU   *                                                        02272000
         END   AMDPRSN2,(C'PL/S-II',0502,73240)                         02273000
