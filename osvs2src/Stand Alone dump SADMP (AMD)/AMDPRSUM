         TITLE 'AMDPRSUM - SUMMARY EXECUTOR ROUTINE                    *00001000
                        '                                               00002000
AMDPRSUM CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'AMDPRSUM  76.007'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @11,0                                            01S0001 00011000
@PSTART  LA    @10,4095(,@11)                                   01S0001 00012000
         LA    @09,4095(,@10)                                   01S0001 00013000
         LA    @08,4095(,@09)                                   01S0001 00014000
         USING @PSTART,@11                                      01S0001 00015000
         USING @PSTART+4095,@10                                 01S0001 00016000
         USING @PSTART+8190,@09                                 01S0001 00017000
         USING @PSTART+12285,@08                                01S0001 00018000
         ST    @13,@SA00001+4                                   01S0001 00019000
         LA    @14,@SA00001                                     01S0001 00020000
         ST    @14,8(,@13)                                      01S0001 00021000
         LR    @13,@14                                          01S0001 00022000
* SAVER13=R13;                                                  01S0175 00023000
         ST    R13,SAVER13                                      01S0175 00024000
* RFY R13 UNRSTD;                                               01S0176 00025000
*/*                                                                  */ 00026000
*/* ACTIVATE STOP AND ERROR ROUTINES                                 */ 00027000
*/*                                                                  */ 00028000
* SAVERR=ERRADDR;                                               01S0177 00029000
         L     @00,ERRADDR(,COMBASE)                            01S0177 00030000
         ST    @00,SAVERR                                       01S0177 00031000
* ERRADDR=ADDR(SUMERR);                                         01S0178 00032000
         LA    @00,SUMERR                                       01S0178 00033000
         ST    @00,ERRADDR(,COMBASE)                            01S0178 00034000
* SAVSTOP=STOPEXIT;                                             01S0179 00035000
         L     @00,STOPEXIT(,COMBASE)                           01S0179 00036000
         ST    @00,SAVSTOP                                      01S0179 00037000
* STOPEXIT=ADDR(SUMSTOP);                                       01S0180 00038000
         LA    @00,SUMSTOP                                      01S0180 00039000
         ST    @00,STOPEXIT(,COMBASE)                           01S0180 00040000
*/*                                                             01S0181 00041000
*                   PRINT SUMMARY TITLE AT TOP OF PAGE          01S0181 00042000
*                                                                    */ 00043000
*                                                               01S0181 00044000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  01S0181 00045000
*   (BRWRITE SKIP);                                             01S0181 00046000
         BRWRITE SKIP                                                   00047000
* SBUFTTL=SUMTITLE;                                             01S0182 00048000
*                                                               01S0182 00049000
         L     @15,CURBUF(,COMBASE)                             01S0182 00050000
         MVC   SBUFTTL(44,@15),SUMTITLE                         01S0182 00051000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  01S0183 00052000
*   (BRWRITE 3);                                                01S0183 00053000
         BRWRITE 3                                                      00054000
*/*                                                             01S0184 00055000
*                   LIST DUMP ADDRESS RANGES                    01S0184 00056000
*                                                                    */ 00057000
*/*                                                             02S0184 00058000
*         LIST THE ADDRESS RANGES FOUND IN THE DUMP             02S0184 00059000
*                                                                    */ 00060000
*/*                                                                  */ 00061000
*/* PRINT SUBTITLE, CHECK FOR REAL ADDRESS BLOCKS PRESENT            */ 00062000
*/*                                                                  */ 00063000
* BUFTTL(1:LENGTH(DMPATTL))=DMPATTL;                            02S0184 00064000
*                                                               02S0184 00065000
         L     @15,CURBUF(,COMBASE)                             02S0184 00066000
         MVC   BUFTTL(19,@15),DMPATTL                           02S0184 00067000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0185 00068000
*   (BRWRITE 2);                                                02S0185 00069000
         BRWRITE 2                                                      00070000
* IF REALMAP ^= 0 THEN                                          02S0186 00071000
         L     @00,REALMAP(,COMBASE)                            02S0186 00072000
         LTR   @00,@00                                          02S0186 00073000
         BZ    @RF00186                                         02S0186 00074000
*   DO;                                                         02S0187 00075000
*/*                                                                  */ 00076000
*/* PRINT REAL BLOCK SUBTITLE                                        */ 00077000
*/*                                                                  */ 00078000
*     BUFFER(1:LENGTH(REALTTL))=REALTTL;                        02S0188 00079000
*                                                               02S0188 00080000
         L     @15,CURBUF(,COMBASE)                             02S0188 00081000
         MVC   BUFFER(24,@15),REALTTL                           02S0188 00082000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0189 00083000
*       (BRWRITE 1);                                            02S0189 00084000
         BRWRITE 1                                                      00085000
*/*                                                                  */ 00086000
*/* SET UP AND LOOP THRU THE REAL BLOCK MAPS                         */ 00087000
*/*                                                                  */ 00088000
*     ADDRMAP=REALMAP;                                          02S0190 00089000
         L     ADDRMAP,REALMAP(,COMBASE)                        02S0190 00090000
*     DO WHILE ADDRMAP ^= 0;                                    02S0191 00091000
         B     @DE00191                                         02S0191 00092000
@DL00191 DS    0H                                               02S0192 00093000
*/*                                                             03S0192 00094000
*         PROCESS DUMP ADDRESS RANGE LINE                       03S0192 00095000
*                                                                    */ 00096000
*/*                                                                  */ 00097000
*/* CONVERT BEGINNING ADDRESS TO EBCDIC                              */ 00098000
*/*                                                                  */ 00099000
* PREG=ADDR(MAPBEGIN);                                          03S0192 00100000
         LA    PREG,MAPBEGIN(,ADDRMAP)                          03S0192 00101000
* RFY R4 RSTD;                                                  03S0193 00102000
* R4=ADDR(BUFFER(9));                                           03S0194 00103000
         L     R4,CURBUF(,COMBASE)                              03S0194 00104000
         LA    R4,BUFFER+8(,R4)                                 03S0194 00105000
* CALL WRDCNVT;                                                 03S0195 00106000
         L     @15,AWRDCNVT(,COMBASE)                           03S0195 00107000
         BALR  @14,@15                                          03S0195 00108000
*/*                                                                  */ 00109000
*/* CONVERT ENDING ADDRESS TO EBCDIC AND ROUND UP TO 4K-1            */ 00110000
*/*                                                                  */ 00111000
* PREG=ADDR(MAPEND);                                            03S0196 00112000
         LA    PREG,MAPEND(,ADDRMAP)                            03S0196 00113000
* R4=ADDR(BUFFER(20));                                          03S0197 00114000
         L     R4,CURBUF(,COMBASE)                              03S0197 00115000
         LA    R4,BUFFER+19(,R4)                                03S0197 00116000
* CALL WRDCNVT;                                                 03S0198 00117000
         L     @15,AWRDCNVT(,COMBASE)                           03S0198 00118000
         BALR  @14,@15                                          03S0198 00119000
* RFY R4 UNRSTD;                                                03S0199 00120000
* BUFFER(25:27)='FFF';                                          03S0200 00121000
         L     @03,CURBUF(,COMBASE)                             03S0200 00122000
         MVC   BUFFER+24(3,@03),@CC03255                        03S0200 00123000
*/*                                                                  */ 00124000
*/* PRINT ADDRESS RANGE AND INCREMENT TO NEXT MAP                    */ 00125000
*/*                                                                  */ 00126000
*                                                               03S0201 00127000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  03S0201 00128000
*   (BRWRITE 1);                                                03S0201 00129000
         BRWRITE 1                                                      00130000
* ADDRMAP=MAPNEXT;                                              03S0202 00131000
         L     @03,MAPNEXT-1(,ADDRMAP)                          03S0202 00132000
         LA    @03,0(,@03)                                      03S0202 00133000
         LR    ADDRMAP,@03                                      03S0202 00134000
*     END;                                                      02S0203 00135000
@DE00191 LTR   ADDRMAP,ADDRMAP                                  02S0203 00136000
         BNZ   @DL00191                                         02S0203 00137000
*   END;                                                        02S0204 00138000
* ELSE                                                          02S0205 00139000
*   DO;                                                         02S0205 00140000
         B     @RC00186                                         02S0205 00141000
@RF00186 DS    0H                                               02S0206 00142000
*/*                                                                  */ 00143000
*/* NO REAL BLOCKS - ISSUE MESSAGE                                   */ 00144000
*/*                                                                  */ 00145000
*     BUFFER(1:LENGTH(NOREALMG))=NOREALMG;                      02S0206 00146000
*                                                               02S0206 00147000
         L     @15,CURBUF(,COMBASE)                             02S0206 00148000
         MVC   BUFFER(24,@15),NOREALMG                          02S0206 00149000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0207 00150000
*       (BRWRITE 1);                                            02S0207 00151000
         BRWRITE 1                                                      00152000
*   END;                                                        02S0208 00153000
*/*                                                                  */ 00154000
*/* SKIP A LINE, CHECK FOR VIRTUAL BLOCKS IN DUMP                    */ 00155000
*/*                                                                  */ 00156000
*                                                               02S0209 00157000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0209 00158000
*   (BRWRITE 1);                                                02S0209 00159000
@RC00186 DS    0H                                               02S0209 00160000
         BRWRITE 1                                                      00161000
* IF ASIDNDX ^= 0 THEN                                          02S0210 00162000
         L     @00,ASIDNDX(,COMBASE)                            02S0210 00163000
         LTR   @00,@00                                          02S0210 00164000
         BZ    @RF00210                                         02S0210 00165000
*   DO;                                                         02S0211 00166000
*/*                                                             03S0212 00167000
*         PROCESS VIRTUAL ADDRESS RANGES                        03S0212 00168000
*                                                                    */ 00169000
* BUFFER(1:LENGTH(VIRTTL))=VIRTTL;                              03S0212 00170000
*                                                               03S0212 00171000
         L     @15,CURBUF(,COMBASE)                             03S0212 00172000
         MVC   BUFFER(34,@15),VIRTTL                            03S0212 00173000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  03S0213 00174000
*   (BRWRITE 1);                                                03S0213 00175000
         BRWRITE 1                                                      00176000
*/*                                                                  */ 00177000
*/* GET FIRST TABLE ADDRESS AND LOOP THRU ALL TABLES                 */ 00178000
*/*                                                                  */ 00179000
* ADDRTAB=ASIDNDX;                                              03S0214 00180000
         L     ADDRTAB,ASIDNDX(,COMBASE)                        03S0214 00181000
* DO WHILE ADDRTAB ^= 0;                                        03S0215 00182000
         B     @DE00215                                         03S0215 00183000
@DL00215 DS    0H                                               03S0216 00184000
*/*                                                                  */ 00185000
*/* LOOP THRU 18 MAP CHAINS PER TABLE                                */ 00186000
*/*                                                                  */ 00187000
*   DO MAPCTR=1 TO 18 WHILE LASTTAB=OFF;                        03S0216 00188000
         LA    MAPCTR,1                                         03S0216 00189000
@DL00216 TM    LASTTAB,B'01000000'                              03S0216 00190000
         BNZ   @DC00216                                         03S0216 00191000
*     TEMPASID=NDXASID(MAPCTR);                                 03S0217 00192000
         LR    @07,MAPCTR                                       03S0217 00193000
         ALR   @07,@07                                          03S0217 00194000
         ALR   @07,ADDRTAB                                      03S0217 00195000
         MVC   TEMPASID(2),NDXASID-2(@07)                       03S0217 00196000
*     IF TEMPASID ^= 0 THEN                                     03S0218 00197000
         ICM   @07,3,TEMPASID                                   03S0218 00198000
         BZ    @RF00218                                         03S0218 00199000
*       DO;                                                     03S0219 00200000
*/*                                                                  */ 00201000
*/* IF ASID IS NOT VALID, FLAG IT WITH AN ASTERISK                   */ 00202000
*/*                                                                  */ 00203000
*         IF (TEMPASID ^= 'FFFF'X) & (TEMPASID > '7FFF'X) THEN  03S0220 00204000
         CLC   TEMPASID(2),@CB03256                             03S0220 00205000
         BE    @RF00220                                         03S0220 00206000
         CLC   TEMPASID(2),@CB03257                             03S0220 00207000
         BNH   @RF00220                                         03S0220 00208000
*           BUFFLG='*';                                         03S0221 00209000
         L     @07,CURBUF(,COMBASE)                             03S0221 00210000
         MVI   BUFFLG(@07),C'*'                                 03S0221 00211000
*/*                                                                  */ 00212000
*/* GET FIRST MAP FOR THIS TABLE ENTRY AND CONVERT ASID TO EBCDIC    */ 00213000
*/*                                                                  */ 00214000
*         ADDRMAP=NDXMAP(MAPCTR);                               03S0222 00215000
*                                                               03S0222 00216000
@RF00220 LR    @07,MAPCTR                                       03S0222 00217000
         SLA   @07,2                                            03S0222 00218000
         L     ADDRMAP,NDXMAP-4(@07,ADDRTAB)                    03S0222 00219000
*         UNPK(CHARASID,NDXASID1);                              03S0223 00220000
         UNPK  CHARASID(5),NDXASID1(3)                          03S0223 00221000
*         TR(CHARASID,EBCTABL);                                 03S0224 00222000
         TR    CHARASID(5),EBCTABL(COMBASE)                     03S0224 00223000
*         CHARASID(LENGTH(CHARASID)) = ' ';                     03S0225 00224000
         MVI   CHARASID+4,C' '                                  03S0225 00225000
*/*                                                                  */ 00226000
*/* LOOP THRU MAPS FOR THIS ASID, PUTTING ASID INTO BUFFER FOR EVERY */ 00227000
*/* LINE                                                             */ 00228000
*/*                                                                  */ 00229000
*         DO WHILE ADDRMAP ^= 0;                                03S0226 00230000
         B     @DE00226                                         03S0226 00231000
@DL00226 DS    0H                                               03S0227 00232000
*           BUFFER(31:34)=CHARASID(1:4);                        03S0227 00233000
         L     @07,CURBUF(,COMBASE)                             03S0227 00234000
         MVC   BUFFER+30(4,@07),CHARASID                        03S0227 00235000
*/*                                                             04S0228 00236000
*         PROCESS DUMP ADDRESS RANGE LINE                       04S0228 00237000
*                                                                    */ 00238000
*/*                                                                  */ 00239000
*/* CONVERT BEGINNING ADDRESS TO EBCDIC                              */ 00240000
*/*                                                                  */ 00241000
* PREG=ADDR(MAPBEGIN);                                          04S0228 00242000
         LA    PREG,MAPBEGIN(,ADDRMAP)                          04S0228 00243000
* RFY R4 RSTD;                                                  04S0229 00244000
* R4=ADDR(BUFFER(9));                                           04S0230 00245000
         LA    R4,BUFFER+8(,@07)                                04S0230 00246000
* CALL WRDCNVT;                                                 04S0231 00247000
         L     @15,AWRDCNVT(,COMBASE)                           04S0231 00248000
         BALR  @14,@15                                          04S0231 00249000
*/*                                                                  */ 00250000
*/* CONVERT ENDING ADDRESS TO EBCDIC AND ROUND UP TO 4K-1            */ 00251000
*/*                                                                  */ 00252000
* PREG=ADDR(MAPEND);                                            04S0232 00253000
         LA    PREG,MAPEND(,ADDRMAP)                            04S0232 00254000
* R4=ADDR(BUFFER(20));                                          04S0233 00255000
         L     R4,CURBUF(,COMBASE)                              04S0233 00256000
         LA    R4,BUFFER+19(,R4)                                04S0233 00257000
* CALL WRDCNVT;                                                 04S0234 00258000
         L     @15,AWRDCNVT(,COMBASE)                           04S0234 00259000
         BALR  @14,@15                                          04S0234 00260000
* RFY R4 UNRSTD;                                                04S0235 00261000
* BUFFER(25:27)='FFF';                                          04S0236 00262000
         L     @07,CURBUF(,COMBASE)                             04S0236 00263000
         MVC   BUFFER+24(3,@07),@CC03255                        04S0236 00264000
*/*                                                                  */ 00265000
*/* PRINT ADDRESS RANGE AND INCREMENT TO NEXT MAP                    */ 00266000
*/*                                                                  */ 00267000
*                                                               04S0237 00268000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  04S0237 00269000
*   (BRWRITE 1);                                                04S0237 00270000
         BRWRITE 1                                                      00271000
* ADDRMAP=MAPNEXT;                                              04S0238 00272000
         L     @07,MAPNEXT-1(,ADDRMAP)                          04S0238 00273000
         LA    @07,0(,@07)                                      04S0238 00274000
         LR    ADDRMAP,@07                                      04S0238 00275000
*         END;                                                  03S0239 00276000
@DE00226 LTR   ADDRMAP,ADDRMAP                                  03S0239 00277000
         BNZ   @DL00226                                         03S0239 00278000
*       END;                                                    03S0240 00279000
*     ELSE                                                      03S0241 00280000
*/*                                                                  */ 00281000
*/* ASID IS 0 - END OF TABLES REACHED (LAST TABLE PARTIALLY FILLED)  */ 00282000
*/*                                                                  */ 00283000
*       LASTTAB=ON;                                             03S0241 00284000
         B     @RC00218                                         03S0241 00285000
@RF00218 OI    LASTTAB,B'01000000'                              03S0241 00286000
*   END;                                                        03S0242 00287000
@RC00218 AL    MAPCTR,@CF00063                                  03S0242 00288000
         C     MAPCTR,@CF01593                                  03S0242 00289000
         BNH   @DL00216                                         03S0242 00290000
@DC00216 DS    0H                                               03S0243 00291000
*   IF LASTTAB=OFF THEN                                         03S0243 00292000
         TM    LASTTAB,B'01000000'                              03S0243 00293000
         BNZ   @RF00243                                         03S0243 00294000
*/*                                                                  */ 00295000
*/* NOT AT END - GO TO NEXT TABLE                                    */ 00296000
*/*                                                                  */ 00297000
*     ADDRTAB=NDXNEXT;                                          03S0244 00298000
         L     ADDRTAB,NDXNEXT(,ADDRTAB)                        03S0244 00299000
*   ELSE                                                        03S0245 00300000
*     DO;                                                       03S0245 00301000
         B     @RC00243                                         03S0245 00302000
@RF00243 DS    0H                                               03S0246 00303000
*/*                                                                  */ 00304000
*/* END OF TABLES - FORCE EXIT FROM LOOP                             */ 00305000
*/*                                                                  */ 00306000
*       ADDRTAB=0;                                              03S0246 00307000
         SLR   ADDRTAB,ADDRTAB                                  03S0246 00308000
*       LASTTAB=OFF;                                            03S0247 00309000
         NI    LASTTAB,B'10111111'                              03S0247 00310000
*     END;                                                      03S0248 00311000
* END;                                                          03S0249 00312000
@RC00243 DS    0H                                               03S0249 00313000
@DE00215 LTR   ADDRTAB,ADDRTAB                                  03S0249 00314000
         BNZ   @DL00215                                         03S0249 00315000
*   END;                                                        02S0250 00316000
* ELSE                                                          02S0251 00317000
*   DO;                                                         02S0251 00318000
         B     @RC00210                                         02S0251 00319000
@RF00210 DS    0H                                               02S0252 00320000
*/*                                                                  */ 00321000
*/* NO VIRTUAL BLOCKS - ISSUE MESSAGE                                */ 00322000
*/*                                                                  */ 00323000
*     BUFFER(1:LENGTH(NOVIRTMG))=NOVIRTMG;                      02S0252 00324000
*                                                               02S0252 00325000
         L     @15,CURBUF(,COMBASE)                             02S0252 00326000
         MVC   BUFFER(27,@15),NOVIRTMG                          02S0252 00327000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0253 00328000
*       (BRWRITE 1);                                            02S0253 00329000
         BRWRITE 1                                                      00330000
*   END;                                                        02S0254 00331000
*/*                                                                  */ 00332000
*/* SPACE A LINE                                                     */ 00333000
*/*                                                                  */ 00334000
*                                                               02S0255 00335000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0255 00336000
*   (BRWRITE 1);                                                02S0255 00337000
@RC00210 DS    0H                                               02S0255 00338000
         BRWRITE 1                                                      00339000
*/*                                                             01S0256 00340000
*                   IF THE CVT IS IN THE DUMP, LIST THE CPUS,   01S0256 00341000
*                   SRBS, JOBS, AND PROBLEMS IN THE DUMP        01S0256 00342000
*                                                                    */ 00343000
* CVTPTR=CVTADDR;                                               01S0256 00344000
         L     CVTPTR,CVTADDR(,COMBASE)                         01S0256 00345000
* IF CVTPTR ^= 0 THEN                                           01S0257 00346000
         LTR   CVTPTR,CVTPTR                                    01S0257 00347000
         BZ    @RF00257                                         01S0257 00348000
*   DO;                                                         01S0258 00349000
*/*                                                             02S0259 00350000
*         LIST THE CPUS FOUND IN THE DUMP                       02S0259 00351000
*                                                                    */ 00352000
*/*                                                                  */ 00353000
*/* PRINT CPU SUBTITLE AND GET CSD ADDRESS                           */ 00354000
*/*                                                                  */ 00355000
* BUFTTL(1:LENGTH(CPUTTL))=CPUTTL;                              02S0259 00356000
*                                                               02S0259 00357000
         L     @07,CURBUF(,COMBASE)                             02S0259 00358000
         MVC   BUFTTL(15,@07),CPUTTL                            02S0259 00359000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0260 00360000
*   (BRWRITE 2);                                                02S0260 00361000
*                                                               02S0260 00362000
         BRWRITE 2                                                      00363000
* PREG=ADDR(CVTCSD);                                            02S0261 00364000
         LA    PREG,CVTCSD(,CVTPTR)                             02S0261 00365000
* RFY R0 RSTD;                                                  02S0262 00366000
* R0=0;                                                         02S0263 00367000
         SLR   R0,R0                                            02S0263 00368000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S0264 00369000
*     FLOWS(SUMERR)                                             02S0264 00370000
*   (BRREAD (PREG),,ASID=(R0));                                 02S0264 00371000
         BRREAD (PREG),,ASID=(R0)                                       00372000
* RFY R0 UNRSTD;                                                02S0265 00373000
* IF READERR=OFF THEN                                           02S0266 00374000
         TM    READERR,B'10000000'                              02S0266 00375000
         BNZ   @RF00266                                         02S0266 00376000
*   DO;                                                         02S0267 00377000
*/*                                                                  */ 00378000
*/* CHECK FOR CSD PRESENT                                            */ 00379000
*/*                                                                  */ 00380000
*     CSDPTR=RDPTR;                                             02S0268 00381000
         L     CSDPTR,RDPTR-1(,PREG)                            02S0268 00382000
         LA    CSDPTR,0(,CSDPTR)                                02S0268 00383000
*     RFY CSD BASED(CSDPTR);                                    02S0269 00384000
*     IF CSDPTR ^= 0 THEN                                       02S0270 00385000
         LTR   CSDPTR,CSDPTR                                    02S0270 00386000
         BZ    @RF00270                                         02S0270 00387000
*       DO;                                                     02S0271 00388000
*/*                                                                  */ 00389000
*/* CSD PRESENT, CHECK THE SYSTEM NON-DISPATCHABILITY BIT            */ 00390000
*/*                                                                  */ 00391000
*/*                                                             03S0272 00392000
*         CHECK SYSTEM NON-DISPATCHABILITY BIT                  03S0272 00393000
*                                                                    */ 00394000
*/*                                                                  */ 00395000
*/* VALIDITY CHECK CSD BEFORE TRUSTING NON-DISP BIT                  */ 00396000
*/*                                                                  */ 00397000
*                                                               03S0272 00398000
* PREG=ADDR(CSDCSD);                                            03S0272 00399000
         LR    PREG,CSDPTR                                      03S0272 00400000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S0273 00401000
*     FLOWS(SUMERR)                                             03S0273 00402000
*   (BRREAD (PREG));                                            03S0273 00403000
         BRREAD (PREG)                                                  00404000
* IF READERR=OFF THEN                                           03S0274 00405000
         TM    READERR,B'10000000'                              03S0274 00406000
         BNZ   @RF00274                                         03S0274 00407000
*   DO;                                                         03S0275 00408000
*     IF READALL = 'CSD ' THEN                                  03S0276 00409000
         CLC   READALL(4,PREG),@CC03262                         03S0276 00410000
         BNE   @RF00276                                         03S0276 00411000
*       DO;                                                     03S0277 00412000
*/*                                                                  */ 00413000
*/* CSD PASSED VALIDITY CHECK - GET FLAG BYTE AND CHECK BIT          */ 00414000
*/*                                                                  */ 00415000
*                                                               03S0278 00416000
*         PREG=ADDR(CSDSCFL1);                                  03S0278 00417000
         LA    PREG,CSDSCFL1(,CSDPTR)                           03S0278 00418000
*         GEN REFS(BRRDDATA)SETS(PREG,READERR)                  03S0279 00419000
*             FLOWS(SUMERR)                                     03S0279 00420000
*           (BRREAD (PREG));                                    03S0279 00421000
         BRREAD (PREG)                                                  00422000
*         IF READERR=OFF THEN                                   03S0280 00423000
         TM    READERR,B'10000000'                              03S0280 00424000
         BNZ   @RF00280                                         03S0280 00425000
*           DO;                                                 03S0281 00426000
*             IF RDBYTE(2)=ON THEN                              03S0282 00427000
         TM    RDBYTE(PREG),B'01000000'                         03S0282 00428000
         BNO   @RF00282                                         03S0282 00429000
*               DO;                                             03S0283 00430000
*/*                                                                  */ 00431000
*/* SYSTEM NON-DISPATCHABILITY BIT IS ON - SET UP A PROBLEM ENTRY    */ 00432000
*/*                                                                  */ 00433000
*                 CALL GETPRNTY;                                03S0284 00434000
         BAL   @14,GETPRNTY                                     03S0284 00435000
*                 PROBPTR=PLSTL;                                03S0285 00436000
         L     PROBPTR,PLSTL                                    03S0285 00437000
*                 PRSYSND=ON;                                   03S0286 00438000
         OI    PRSYSND(PROBPTR),B'00010000'                     03S0286 00439000
*               END;                                            03S0287 00440000
*           END;                                                03S0288 00441000
@RF00282 DS    0H                                               03S0289 00442000
*       END;                                                    03S0289 00443000
@RF00280 DS    0H                                               03S0290 00444000
*   END;                                                        03S0290 00445000
@RF00276 DS    0H                                               03S0291 00446000
* READERR=OFF;                                                  03S0291 00447000
@RF00274 NI    READERR,B'01111111'                              03S0291 00448000
*       END;                                                    02S0292 00449000
*   END;                                                        02S0293 00450000
* ELSE                                                          02S0294 00451000
*/*                                                                  */ 00452000
*/* ERROR READING CVTCSD FIELD, TURN OFF ERROR SWITCH                */ 00453000
*/*                                                                  */ 00454000
*   READERR=OFF;                                                02S0294 00455000
         B     @RC00266                                         02S0294 00456000
@RF00266 NI    READERR,B'01111111'                              02S0294 00457000
*/*                                                                  */ 00458000
*/* FIND AND LIST CPUS, SPACE A LINE AT END                          */ 00459000
*/*                                                                  */ 00460000
*/*                                                             03S0295 00461000
*         FIND THE CPUS IN THE DUMPED SYSTEM                    03S0295 00462000
*                                                                    */ 00463000
*/*                                                                  */ 00464000
*/* GET CORE FOR CURRLIST AND INITIALIZE IT                          */ 00465000
*/*                                                                  */ 00466000
* RFY R0 RSTD;                                                  03S0295 00467000
@RC00266 DS    0H                                               03S0296 00468000
* R0=LENGTH(CURRLIST)/8;                                   /*@YM06931*/ 00469000
         LA    R0,192                                           03S0296 00470000
* GEN (GETMAIN R,LV=(0));                                       03S0297 00471000
         GETMAIN R,LV=(0)                                               00472000
* RFY R0 UNRSTD;                                                03S0298 00473000
* CLSTPTR=R1;                                                   03S0299 00474000
         ST    R1,CLSTPTR                                       03S0299 00475000
* CURRLIST=''B;                                                 03S0300 00476000
         L     @07,CLSTPTR                                      03S0300 00477000
         XC    CURRLIST(192,@07),CURRLIST(@07)                  03S0300 00478000
*/*                                                                  */ 00479000
*/* IF THIS WAS A SADMP DUMP AND PREFIXING IS NOT BEING DONE, THEN   */ 00480000
*/* NO PSA CAN BE READ AT VIRTUAL ADDRESS 0 - USE INVALID CPUID FOR  */ 00481000
*/* LATER COMPARISON                                                 */ 00482000
*/*                                                                  */ 00483000
* IF QSADMP=ON & PREFXRGR=0 THEN                                03S0301 00484000
         TM    QSADMP(COMBASE),B'00100000'                      03S0301 00485000
         BNO   @RF00301                                         03S0301 00486000
         L     @07,PREFXRGR(,COMBASE)                           03S0301 00487000
         LTR   @07,@07                                          03S0301 00488000
         BNZ   @RF00301                                         03S0301 00489000
*   V0CPU='FFFF'X;                                              03S0302 00490000
         MVC   V0CPU(2),@CB03256                                03S0302 00491000
* ELSE                                                          03S0303 00492000
*   DO;                                                         03S0303 00493000
         B     @RC00301                                         03S0303 00494000
@RF00301 DS    0H                                               03S0304 00495000
*/*                                                                  */ 00496000
*/* GET CPUID FROM PSA AT VIRTUAL LOCATION 0 FOR LATER COMPARE       */ 00497000
*/*                                                                  */ 00498000
*     PSAPTR=0;                                                 03S0304 00499000
*                                                               03S0304 00500000
         SLR   @07,@07                                          03S0304 00501000
         ST    @07,PSAPTR                                       03S0304 00502000
*     PREG=ADDR(PSACPUSA);                                      03S0305 00503000
         LA    PREG,PSACPUSA(,@07)                              03S0305 00504000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      03S0306 00505000
*         FLOWS(SUMERR)                                         03S0306 00506000
*       (BRREAD (PREG));                                 /* @YM03489*/  00507000
         BRREAD (PREG)                                                  00508000
*     IF READERR=OFF THEN                                       03S0307 00509000
         TM    READERR,B'10000000'                              03S0307 00510000
         BNZ   @RF00307                                         03S0307 00511000
*       V0CPU=RDHWORD;                                          03S0308 00512000
         MVC   V0CPU(2),RDHWORD(PREG)                           03S0308 00513000
*     ELSE                                                      03S0309 00514000
*       DO;                                                     03S0309 00515000
         B     @RC00307                                         03S0309 00516000
@RF00307 DS    0H                                               03S0310 00517000
*/*                                                                  */ 00518000
*/* ERROR READING PSA AT LOCATION 0 - ISSUE MSG & USE INVALID CPUID  */ 00519000
*/*                                                                  */ 00520000
*         READERR=OFF;                                          03S0310 00521000
         NI    READERR,B'01111111'                              03S0310 00522000
*         BUFFER(1:LENGTH(PSA0ERMG))=PSA0ERMG;                  03S0311 00523000
*                                                               03S0311 00524000
         L     @07,CURBUF(,COMBASE)                             03S0311 00525000
         MVC   BUFFER(55,@07),PSA0ERMG                          03S0311 00526000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0312 00527000
*           (BRWRITE 2);                                        03S0312 00528000
         BRWRITE 2                                                      00529000
*         V0CPU='FFFF'X;                                        03S0313 00530000
         MVC   V0CPU(2),@CB03256                                03S0313 00531000
*       END;                                                    03S0314 00532000
*   END;                                                        03S0315 00533000
@RC00307 DS    0H                                               03S0316 00534000
*/*                                                                  */ 00535000
*/* GET PCCAVT ADDRESS AND CHECK IT FOR 0                            */ 00536000
*/*                                                                  */ 00537000
*                                                               03S0316 00538000
* PREG=ADDR(CVTPCCAT);                                          03S0316 00539000
@RC00301 LA    PREG,CVTPCCAT(,CVTPTR)                           03S0316 00540000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S0317 00541000
*     FLOWS(SUMERR)                                             03S0317 00542000
*   (BRREAD (PREG));                                            03S0317 00543000
         BRREAD (PREG)                                                  00544000
* IF READERR=OFF THEN                                           03S0318 00545000
         TM    READERR,B'10000000'                              03S0318 00546000
         BNZ   @RF00318                                         03S0318 00547000
*   DO;                                                         03S0319 00548000
*     PCCAVTA=RDPTR;                                            03S0320 00549000
         L     PCCAVTA,RDPTR-1(,PREG)                           03S0320 00550000
         LA    PCCAVTA,0(,PCCAVTA)                              03S0320 00551000
*     IF PCCAVTA ^= 0 THEN                                      03S0321 00552000
         LTR   PCCAVTA,PCCAVTA                                  03S0321 00553000
         BZ    @RF00321                                         03S0321 00554000
*       DO;                                                     03S0322 00555000
*/*                                                                  */ 00556000
*/* PCCAVT ADDRESS OK - LOOP THRU PCCAVT PROCESSING EACH PCCA        */ 00557000
*/*                                                                  */ 00558000
*/*                                                             04S0323 00559000
*         PROCESS PCCAVT                                        04S0323 00560000
*                                                                    */ 00561000
*/*                                                                  */ 00562000
*/* LOOP THRU 16 PCCAVT ENTRIES                                      */ 00563000
*/*                                                                  */ 00564000
* DO PCCACTR=1 TO 16 WHILE LOOPDONE=OFF;                        04S0323 00565000
         LA    PCCACTR,1                                        04S0323 00566000
@DL00323 TM    LOOPDONE,B'00100000'                             04S0323 00567000
         BNZ   @DC00323                                         04S0323 00568000
*/*                                                                  */ 00569000
*/* GET PCCA ADDRESS, CHECK FOR 0                                    */ 00570000
*/*                                                                  */ 00571000
*                                                               04S0324 00572000
*   PREG=ADDR(PCCAVT(PCCACTR));                                 04S0324 00573000
         LR    @02,PCCACTR                                      04S0324 00574000
         SLA   @02,2                                            04S0324 00575000
         AL    @02,@CF03361                                     04S0324 00576000
         LA    PREG,PCCAVT(@02,PCCAVTA)                         04S0324 00577000
*   GEN REFS(BRRDDATA)SETS(PREG,READERR)                        04S0325 00578000
*       FLOWS(SUMERR)                                           04S0325 00579000
*     (BRREAD (PREG));                                          04S0325 00580000
         BRREAD (PREG)                                                  00581000
*   IF READERR=OFF THEN                                         04S0326 00582000
         TM    READERR,B'10000000'                              04S0326 00583000
         BNZ   @RF00326                                         04S0326 00584000
*     DO;                                                       04S0327 00585000
*       PCCAPTR=RDPTR;                                          04S0328 00586000
         L     PCCAPTR,RDPTR-1(,PREG)                           04S0328 00587000
         LA    PCCAPTR,0(,PCCAPTR)                              04S0328 00588000
*       IF PCCAPTR ^= 0 THEN                                    04S0329 00589000
         LTR   PCCAPTR,PCCAPTR                                  04S0329 00590000
         BZ    @RF00329                                         04S0329 00591000
*         DO;                                                   04S0330 00592000
*/*                                                                  */ 00593000
*/* PCCA ADDRESS OK - INDICATE AT LEAST 1 PCCA WAS PROCESSED, AND    */ 00594000
*/* PROCESS IT                                                       */ 00595000
*/*                                                                  */ 00596000
*           CPULSTD=ON;                                         04S0331 00597000
         OI    CPULSTD,B'00010000'                              04S0331 00598000
*/*                                                             05S0332 00599000
*         PROCESS PCCA                                          05S0332 00600000
*                                                                    */ 00601000
*/*                                                                  */ 00602000
*/* VALIDITY CHECK PCCA, SET SWITCH IF IT FAILS                      */ 00603000
*/*                                                                  */ 00604000
*                                                               05S0332 00605000
* PREG=ADDR(PCCAPCCA);                                          05S0332 00606000
         LR    PREG,PCCAPTR                                     05S0332 00607000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          05S0333 00608000
*     FLOWS(SUMERR)                                             05S0333 00609000
*   (BRREAD (PREG));                                            05S0333 00610000
         BRREAD (PREG)                                                  00611000
* IF READERR=OFF THEN                                           05S0334 00612000
         TM    READERR,B'10000000'                              05S0334 00613000
         BNZ   @RF00334                                         05S0334 00614000
*   DO;                                                         05S0335 00615000
*     IF READALL ^= 'PCCA' THEN                                 05S0336 00616000
         CLC   READALL(4,PREG),@CC03265                         05S0336 00617000
         BE    @RF00336                                         05S0336 00618000
*       PCCAVERR=ON;                                            05S0337 00619000
         OI    PCCAVERR,B'00000100'                             05S0337 00620000
*/*                                                                  */ 00621000
*/* GET CPUID FROM PCCA AND COMPARE AGAINST CPUID FOR PSA AT 0       */ 00622000
*/*                                                                  */ 00623000
*                                                               05S0338 00624000
*     PREG=ADDR(PCCACPUA);                                      05S0338 00625000
@RF00336 LA    PREG,PCCACPUA(,PCCAPTR)                          05S0338 00626000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      05S0339 00627000
*         FLOWS(SUMERR)                                         05S0339 00628000
*       (BRREAD (PREG));                                        05S0339 00629000
         BRREAD (PREG)                                                  00630000
*     IF READERR=OFF THEN                                       05S0340 00631000
         TM    READERR,B'10000000'                              05S0340 00632000
         BNZ   @RF00340                                         05S0340 00633000
*       DO;                                                     05S0341 00634000
*         IF RDHWORD=V0CPU THEN                                 05S0342 00635000
         CLC   RDHWORD(2,PREG),V0CPU                            05S0342 00636000
         BNE   @RF00342                                         05S0342 00637000
*           DO;                                                 05S0343 00638000
*/*                                                                  */ 00639000
*/* CPUID IS FOR PSA AT 0 - SET PSA ADDRESS TO 0                     */ 00640000
*/*                                                                  */ 00641000
*             PSAPTR=0;                                         05S0344 00642000
         SLR   @00,@00                                          05S0344 00643000
         ST    @00,PSAPTR                                       05S0344 00644000
*             CALL DOPSA;                                       05S0345 00645000
         BAL   @14,DOPSA                                        05S0345 00646000
*           END;                                                05S0346 00647000
*         ELSE                                                  05S0347 00648000
*           DO;                                                 05S0347 00649000
         B     @RC00342                                         05S0347 00650000
@RF00342 DS    0H                                               05S0348 00651000
*/*                                                                  */ 00652000
*/* CPUID IS NOT FOR PSA AT 0 - GET PSA ADDRESS FROM PCCA            */ 00653000
*/*                                                                  */ 00654000
*                                                               05S0348 00655000
*             PREG=ADDR(PCCAPSAV);                              05S0348 00656000
         LA    PREG,PCCAPSAV(,PCCAPTR)                          05S0348 00657000
*             GEN REFS(BRRDDATA)SETS(PREG,READERR)              05S0349 00658000
*                 FLOWS(SUMERR)                                 05S0349 00659000
*               (BRREAD (PREG));                                05S0349 00660000
         BRREAD (PREG)                                                  00661000
*             IF READERR=OFF THEN                               05S0350 00662000
         TM    READERR,B'10000000'                              05S0350 00663000
         BNZ   @RF00350                                         05S0350 00664000
*               DO;                                             05S0351 00665000
*                 PSAPTR=RDPTR;                                 05S0352 00666000
         L     @00,RDPTR-1(,PREG)                               05S0352 00667000
         ICM   @00,8,@CB02300                                   05S0352 00668000
         ST    @00,PSAPTR                                       05S0352 00669000
*/*                                                                  */ 00670000
*/* IF PSA IS NOT ON 4K BOUNDARY, ISSUE MSG & SKIP CPU ENTRY         */ 00671000
*/*                                                                  */ 00672000
*                 IF PSAPTR//4096 ^= 0 THEN                     05S0353 00673000
         LR    @04,@00                                          05S0353 00674000
         SRDA  @04,32                                           05S0353 00675000
         D     @04,@CF03267                                     05S0353 00676000
         LTR   @04,@04                                          05S0353 00677000
         BZ    @RF00353                                         05S0353 00678000
*                   DO;                                         05S0354 00679000
*                                                               05S0354 00680000
*                     RFY R4 RSTD;                              05S0355 00681000
*                     R4=ADDR(PSANT4KA);                        05S0356 00682000
         LA    R4,PSANT4KA                                      05S0356 00683000
*                     CALL ADRCNVT;                             05S0357 00684000
         L     @15,AADRCNVT(,COMBASE)                           05S0357 00685000
         BALR  @14,@15                                          05S0357 00686000
*                     RFY R4 UNRSTD;                            05S0358 00687000
*                     BUFFER(LENGTH(CPUSKPMG)+1                 05S0359 00688000
*                       :LENGTH(PSANT4KM)+LENGTH(CPUSKPMG))     05S0359 00689000
*                       =PSANT4KM;                              05S0359 00690000
         L     @15,CURBUF(,COMBASE)                             05S0359 00691000
         MVC   BUFFER+20(40,@15),PSANT4KM                       05S0359 00692000
*                     BUFFER(1:LENGTH(CPUSKPMG))=CPUSKPMG;      05S0360 00693000
*                                                               05S0360 00694000
         MVC   BUFFER(20,@15),CPUSKPMG                          05S0360 00695000
*                     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      00696000
*                       (BRWRITE 1);                            05S0361 00697000
         BRWRITE 1                                                      00698000
*                   END;                                        05S0362 00699000
*                 ELSE                                          05S0363 00700000
*                   DO;                                         05S0363 00701000
         B     @RC00353                                         05S0363 00702000
@RF00353 DS    0H                                               05S0364 00703000
*/*                                                                  */ 00704000
*/* PSA ON 4K BOUNDARY - PROCESS IT                                  */ 00705000
*/*                                                                  */ 00706000
*                     CALL DOPSA;                               05S0364 00707000
         BAL   @14,DOPSA                                        05S0364 00708000
*                   END;                                        05S0365 00709000
*               END;                                            05S0366 00710000
@RC00353 DS    0H                                               05S0367 00711000
*           END;                                                05S0367 00712000
@RF00350 DS    0H                                               05S0368 00713000
*       END;                                                    05S0368 00714000
@RC00342 DS    0H                                               05S0369 00715000
*   END;                                                        05S0369 00716000
@RF00340 DS    0H                                               05S0370 00717000
* IF READERR=ON THEN                                            05S0370 00718000
@RF00334 TM    READERR,B'10000000'                              05S0370 00719000
         BNO   @RF00370                                         05S0370 00720000
*   DO;                                                         05S0371 00721000
*/*                                                                  */ 00722000
*/* READ ERROR ON PCCA - ISSUE MSG & SKIP ENTRY                      */ 00723000
*/*                                                                  */ 00724000
*     WORKPTR=PCCAPTR;                                          05S0372 00725000
         ST    PCCAPTR,WORKPTR                                  05S0372 00726000
*     PREG=ADDR(WORKPTR);                                       05S0373 00727000
*                                                               05S0373 00728000
         LA    PREG,WORKPTR                                     05S0373 00729000
*     RFY R4 RSTD;                                              05S0374 00730000
*     R4=ADDR(PCCAERMA);                                        05S0375 00731000
         LA    R4,PCCAERMA                                      05S0375 00732000
*     CALL ADRCNVT;                                             05S0376 00733000
         L     @15,AADRCNVT(,COMBASE)                           05S0376 00734000
         BALR  @14,@15                                          05S0376 00735000
*     RFY R4 UNRSTD;                                            05S0377 00736000
*     BUFFER(LENGTH(CPUSKPMG)+1:LENGTH(PCCAERMG)+LENGTH(CPUSKPMG))      00737000
*       =PCCAERMG;                                              05S0378 00738000
         L     @15,CURBUF(,COMBASE)                             05S0378 00739000
         MVC   BUFFER+20(32,@15),PCCAERMG                       05S0378 00740000
*     BUFFER(1:LENGTH(CPUSKPMG))=CPUSKPMG;                      05S0379 00741000
*                                                               05S0379 00742000
         MVC   BUFFER(20,@15),CPUSKPMG                          05S0379 00743000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              05S0380 00744000
*       (BRWRITE 1);                                            05S0380 00745000
         BRWRITE 1                                                      00746000
*     READERR=OFF;                                              05S0381 00747000
         NI    READERR,B'01111111'                              05S0381 00748000
*   END;                                                        05S0382 00749000
*/*                                                                  */ 00750000
*/* IF PCCA FAILED VALIDITY CHECK, ISSUE MSG                         */ 00751000
*/*                                                                  */ 00752000
* IF PCCAVERR=ON THEN                                           05S0383 00753000
@RF00370 TM    PCCAVERR,B'00000100'                             05S0383 00754000
         BNO   @RF00383                                         05S0383 00755000
*   DO;                                                         05S0384 00756000
*     WORKPTR=PCCAPTR;                                          05S0385 00757000
         ST    PCCAPTR,WORKPTR                                  05S0385 00758000
*     PREG=ADDR(WORKPTR);                                       05S0386 00759000
*                                                               05S0386 00760000
         LA    PREG,WORKPTR                                     05S0386 00761000
*     RFY R4 RSTD;                                              05S0387 00762000
*     R4=ADDR(BUF2(9));                                         05S0388 00763000
         L     R4,CURBUF(,COMBASE)                              05S0388 00764000
         LA    R4,BUF2+8(,R4)                                   05S0388 00765000
*     CALL ADRCNVT;                                             05S0389 00766000
         L     @15,AADRCNVT(,COMBASE)                           05S0389 00767000
         BALR  @14,@15                                          05S0389 00768000
*     RFY R4 UNRSTD;                                            05S0390 00769000
*     BUF2(1:7)='PCCA AT';                                      05S0391 00770000
         L     @02,CURBUF(,COMBASE)                             05S0391 00771000
         MVC   BUF2(7,@02),@CC03268                             05S0391 00772000
*     BUF2(16:LENGTH(VALERR)+15)=VALERR;                        05S0392 00773000
*                                                               05S0392 00774000
         MVC   BUF2+15(21,@02),VALERR                           05S0392 00775000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              05S0393 00776000
*       (BRWRITE 1);                                            05S0393 00777000
         BRWRITE 1                                                      00778000
*   END;                                                        05S0394 00779000
*/*                                                                  */ 00780000
*/* IF PSA FAILED VALIDITY CHECK, ISSUE MSG                          */ 00781000
*/*                                                                  */ 00782000
* IF PSAVERR=ON THEN                                            05S0395 00783000
@RF00383 TM    PSAVERR,B'00000010'                              05S0395 00784000
         BNO   @RF00395                                         05S0395 00785000
*   DO;                                                         05S0396 00786000
*     WORKPTR=PSAPTR;                                           05S0397 00787000
         L     @02,PSAPTR                                       05S0397 00788000
         ST    @02,WORKPTR                                      05S0397 00789000
*     PREG=ADDR(WORKPTR);                                       05S0398 00790000
*                                                               05S0398 00791000
         LA    PREG,WORKPTR                                     05S0398 00792000
*     RFY R4 RSTD;                                              05S0399 00793000
*     R4=ADDR(BUF2(9));                                         05S0400 00794000
         L     R4,CURBUF(,COMBASE)                              05S0400 00795000
         LA    R4,BUF2+8(,R4)                                   05S0400 00796000
*     CALL ADRCNVT;                                             05S0401 00797000
         L     @15,AADRCNVT(,COMBASE)                           05S0401 00798000
         BALR  @14,@15                                          05S0401 00799000
*     RFY R4 UNRSTD;                                            05S0402 00800000
*     BUF2(1:7)='PSA  AT';                                      05S0403 00801000
         L     @02,CURBUF(,COMBASE)                             05S0403 00802000
         MVC   BUF2(7,@02),@CC03269                             05S0403 00803000
*     BUF2(16:LENGTH(VALERR)+15)=VALERR;                        05S0404 00804000
*                                                               05S0404 00805000
         MVC   BUF2+15(21,@02),VALERR                           05S0404 00806000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              05S0405 00807000
*       (BRWRITE 1);                                            05S0405 00808000
         BRWRITE 1                                                      00809000
*   END;                                                        05S0406 00810000
*/*                                                                  */ 00811000
*/* IF LCCA FAILED VALIDITY CHECK, ISSUE MSG                         */ 00812000
*/*                                                                  */ 00813000
* IF LCCAVERR=ON THEN                                           05S0407 00814000
@RF00395 TM    LCCAVERR,B'00000001'                             05S0407 00815000
         BNO   @RF00407                                         05S0407 00816000
*   DO;                                                         05S0408 00817000
*     WORKPTR=LCCAPTR;                                          05S0409 00818000
         L     @02,LCCAPTR                                      05S0409 00819000
         ST    @02,WORKPTR                                      05S0409 00820000
*     PREG=ADDR(WORKPTR);                                       05S0410 00821000
*                                                               05S0410 00822000
         LA    PREG,WORKPTR                                     05S0410 00823000
*     RFY R4 RSTD;                                              05S0411 00824000
*     R4=ADDR(BUF2(9));                                         05S0412 00825000
         L     R4,CURBUF(,COMBASE)                              05S0412 00826000
         LA    R4,BUF2+8(,R4)                                   05S0412 00827000
*     CALL ADRCNVT;                                             05S0413 00828000
         L     @15,AADRCNVT(,COMBASE)                           05S0413 00829000
         BALR  @14,@15                                          05S0413 00830000
*     RFY R4 UNRSTD;                                            05S0414 00831000
*     BUF2(1:7)='LCCA AT';                                      05S0415 00832000
         L     @02,CURBUF(,COMBASE)                             05S0415 00833000
         MVC   BUF2(7,@02),@CC03270                             05S0415 00834000
*     BUF2(16:LENGTH(VALERR)+15)=VALERR;                        05S0416 00835000
*                                                               05S0416 00836000
         MVC   BUF2+15(21,@02),VALERR                           05S0416 00837000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              05S0417 00838000
*       (BRWRITE 1);                                            05S0417 00839000
         BRWRITE 1                                                      00840000
*   END;                                                        05S0418 00841000
*/*                                                                  */ 00842000
*/* RESET SWITCHES FOR NEXT TIME                                     */ 00843000
*/*                                                                  */ 00844000
* PCCAVERR=OFF;                                                 05S0419 00845000
@RF00407 DS    0H                                               05S0420 00846000
* PSAVERR=OFF;                                                  05S0420 00847000
* LCCAVERR=OFF;                                                 05S0421 00848000
         NI    PCCAVERR,B'11111000'                             05S0421 00849000
*         END;                                                  04S0422 00850000
*     END;                                                      04S0423 00851000
*   ELSE                                                        04S0424 00852000
*     DO;                                                       04S0424 00853000
         B     @RC00326                                         04S0424 00854000
@RF00326 DS    0H                                               04S0425 00855000
*/*                                                                  */ 00856000
*/* ERROR ON PCCAVT - ISSUE MSG & GET OUT OF LOOP                    */ 00857000
*/*                                                                  */ 00858000
*       READERR=OFF;                                            04S0425 00859000
*                                                               04S0425 00860000
         NI    READERR,B'01111111'                              04S0425 00861000
*       RFY R4 RSTD;                                            04S0426 00862000
*       R4=ADDR(PCCAVTMA);                                      04S0427 00863000
         LA    R4,PCCAVTMA                                      04S0427 00864000
*       CALL ADRCNVT;                                           04S0428 00865000
         L     @15,AADRCNVT(,COMBASE)                           04S0428 00866000
         BALR  @14,@15                                          04S0428 00867000
*       RFY R4 UNRSTD;                                          04S0429 00868000
*       BUFFER(1:LENGTH(PCCAVTMG))=PCCAVTMG;                    04S0430 00869000
*                                                               04S0430 00870000
         L     @02,CURBUF(,COMBASE)                             04S0430 00871000
         MVC   BUFFER(60,@02),PCCAVTMG                          04S0430 00872000
*       GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)            04S0431 00873000
*         (BRWRITE 1);                                          04S0431 00874000
         BRWRITE 1                                                      00875000
*       LOOPDONE=ON;                                            04S0432 00876000
*       CPULSTD=ON;                                             04S0433 00877000
         OI    LOOPDONE,B'00110000'                             04S0433 00878000
*     END;                                                      04S0434 00879000
* END;                                                          04S0435 00880000
@RC00326 AL    PCCACTR,@CF00063                                 04S0435 00881000
         C     PCCACTR,@CF00684                                 04S0435 00882000
         BNH   @DL00323                                         04S0435 00883000
@DC00323 DS    0H                                               04S0436 00884000
* LOOPDONE=OFF;                                                 04S0436 00885000
         NI    LOOPDONE,B'11011111'                             04S0436 00886000
*/*                                                                  */ 00887000
*/* IF NO CPU LINES WERE PRINTED, ISSUE MSG, ELSE RESET SWITCH       */ 00888000
*/*                                                                  */ 00889000
* IF CPULSTD=OFF THEN                                           04S0437 00890000
         TM    CPULSTD,B'00010000'                              04S0437 00891000
         BNZ   @RF00437                                         04S0437 00892000
*   DO;                                                         04S0438 00893000
*     BUFFER(1:LENGTH(NOCPUMG))=NOCPUMG;                        04S0439 00894000
*                                                               04S0439 00895000
         L     @07,CURBUF(,COMBASE)                             04S0439 00896000
         MVC   BUFFER(51,@07),NOCPUMG                           04S0439 00897000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              04S0440 00898000
*       (BRWRITE 1);                                            04S0440 00899000
         BRWRITE 1                                                      00900000
*   END;                                                        04S0441 00901000
* ELSE                                                          04S0442 00902000
*   CPULSTD=OFF;                                                04S0442 00903000
         B     @RC00437                                         04S0442 00904000
@RF00437 NI    CPULSTD,B'11101111'                              04S0442 00905000
*       END;                                                    03S0443 00906000
*     ELSE                                                      03S0444 00907000
*       DO;                                                     03S0444 00908000
         B     @RC00321                                         03S0444 00909000
@RF00321 DS    0H                                               03S0445 00910000
*/*                                                                  */ 00911000
*/* PCCAVT ADDRESS IS 0 - ISSUE MSG                                  */ 00912000
*/*                                                                  */ 00913000
*         BUFFER(1:LENGTH(PCCAVT0M))=PCCAVT0M;                  03S0445 00914000
*                                                               03S0445 00915000
         L     @07,CURBUF(,COMBASE)                             03S0445 00916000
         MVC   BUFFER(41,@07),PCCAVT0M                          03S0445 00917000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0446 00918000
*           (BRWRITE 1);                                        03S0446 00919000
         BRWRITE 1                                                      00920000
*       END;                                                    03S0447 00921000
*   END;                                                        03S0448 00922000
* ELSE                                                          03S0449 00923000
*   DO;                                                         03S0449 00924000
         B     @RC00318                                         03S0449 00925000
@RF00318 DS    0H                                               03S0450 00926000
*/*                                                                  */ 00927000
*/* ERROR READING PCCAVT ADDRESS - ISSUE MSG & FREE CURRLIST         */ 00928000
*/*                                                                  */ 00929000
*     READERR=OFF;                                              03S0450 00930000
*                                                               03S0450 00931000
         NI    READERR,B'01111111'                              03S0450 00932000
*     RFY R4 RSTD;                                              03S0451 00933000
*     R4=ADDR(CVTPCCMA);                                        03S0452 00934000
         LA    R4,CVTPCCMA                                      03S0452 00935000
*     CALL ADRCNVT;                                             03S0453 00936000
         L     @15,AADRCNVT(,COMBASE)                           03S0453 00937000
         BALR  @14,@15                                          03S0453 00938000
*     RFY R4 UNRSTD;                                            03S0454 00939000
*     BUFFER(1:LENGTH(CVTPCCMG))=CVTPCCMG;                      03S0455 00940000
*                                                               03S0455 00941000
         L     @07,CURBUF(,COMBASE)                             03S0455 00942000
         MVC   BUFFER(56,@07),CVTPCCMG                          03S0455 00943000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0456 00944000
*       (BRWRITE 1);                                            03S0456 00945000
         BRWRITE 1                                                      00946000
*     RFY R0 RSTD;                                              03S0457 00947000
*     R0=LENGTH(CURRLIST)/8;                               /*@YM06931*/ 00948000
         LA    R0,192                                           03S0458 00949000
*     R1=CLSTPTR;                                               03S0459 00950000
         L     R1,CLSTPTR                                       03S0459 00951000
*     GEN (FREEMAIN R,LV=(0),A=(1));                            03S0460 00952000
         FREEMAIN R,LV=(0),A=(1)                                        00953000
*     RFY R0 UNRSTD;                                            03S0461 00954000
*     CLSTPTR=0;                                                03S0462 00955000
         SLR   @07,@07                                          03S0462 00956000
         ST    @07,CLSTPTR                                      03S0462 00957000
*   END;                                                        03S0463 00958000
*                                                               02S0464 00959000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0464 00960000
*   (BRWRITE 1);                                                02S0464 00961000
@RC00318 DS    0H                                               02S0464 00962000
         BRWRITE 1                                                      00963000
*/*                                                             02S0465 00964000
*         LIST THE SRBS ON THE GSMQ, LSMQ, AND GSPL             02S0465 00965000
*                                                                    */ 00966000
*/*                                                                  */ 00967000
*/* PRINT SUBTITLE FOR SCHEDULED SRBS                                */ 00968000
*/*                                                                  */ 00969000
* BUFTTL(1:LENGTH(SSRBTTL))=SSRBTTL;                            02S0465 00970000
*                                                               02S0465 00971000
         L     @07,CURBUF(,COMBASE)                             02S0465 00972000
         MVC   BUFTTL(18,@07),SSRBTTL                           02S0465 00973000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0466 00974000
*   (BRWRITE 2);                                                02S0466 00975000
         BRWRITE 2                                                      00976000
*/*                                                                  */ 00977000
*/* PROCESS GSMQ & LSMQ, SPACEING A LINE AFTER EACH                  */ 00978000
*/*                                                                  */ 00979000
*/*                                                             03S0467 00980000
*         PROCESS GLOBAL SERVICE MANAGER QUEUE                  03S0467 00981000
*                                                                    */ 00982000
*/*                                                                  */ 00983000
*/* GET GSMQ ADDRESS AND CHECK FOR 0                                 */ 00984000
*/*                                                                  */ 00985000
*                                                               03S0467 00986000
* PREG=ADDR(CVTGSMQ);                                           03S0467 00987000
         LA    PREG,CVTGSMQ(,CVTPTR)                            03S0467 00988000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S0468 00989000
*     FLOWS(SUMERR)                                             03S0468 00990000
*   (BRREAD (PREG));                                            03S0468 00991000
         BRREAD (PREG)                                                  00992000
* IF READERR=OFF THEN                                           03S0469 00993000
         TM    READERR,B'10000000'                              03S0469 00994000
         BNZ   @RF00469                                         03S0469 00995000
*   DO;                                                         03S0470 00996000
*     PREG=RDPTR;                                               03S0471 00997000
         L     @07,RDPTR-1(,PREG)                               03S0471 00998000
         LA    @07,0(,@07)                                      03S0471 00999000
         LR    PREG,@07                                         03S0471 01000000
*     IF PREG ^= 0 THEN                                         03S0472 01001000
         LTR   PREG,PREG                                        03S0472 01002000
         BZ    @RF00472                                         03S0472 01003000
*       DO;                                                     03S0473 01004000
*/*                                                                  */ 01005000
*/* ADDRESS IS OK - GET POINTER TO FIRST SRB                         */ 01006000
*/*                                                                  */ 01007000
*                                                               03S0474 01008000
*         GEN REFS(BRRDDATA)SETS(PREG,READERR)                  03S0474 01009000
*             FLOWS(SUMERR)                                     03S0474 01010000
*           (BRREAD (PREG));                                    03S0474 01011000
         BRREAD (PREG)                                                  01012000
*         IF READERR=OFF THEN                                   03S0475 01013000
         TM    READERR,B'10000000'                              03S0475 01014000
         BNZ   @RF00475                                         03S0475 01015000
*           DO;                                                 03S0476 01016000
*             SRBQPTRF=RDPTR;                                   03S0477 01017000
         L     SRBQPTRF,RDPTR-1(,PREG)                          03S0477 01018000
         LA    SRBQPTRF,0(,SRBQPTRF)                            03S0477 01019000
*/*                                                                  */ 01020000
*/* PRINT SUBTITLE AND PROCESS SRB CHAIN                             */ 01021000
*/*                                                                  */ 01022000
*             BUFFER(1:LENGTH(GSMQTTL))=GSMQTTL;                03S0478 01023000
*                                                               03S0478 01024000
         L     @07,CURBUF(,COMBASE)                             03S0478 01025000
         MVC   BUFFER(28,@07),GSMQTTL                           03S0478 01026000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      03S0479 01027000
*               (BRWRITE 1);                                    03S0479 01028000
         BRWRITE 1                                                      01029000
*             CALL SRBCHAIN;                                    03S0480 01030000
         BAL   @14,SRBCHAIN                                     03S0480 01031000
*           END;                                                03S0481 01032000
*         ELSE                                                  03S0482 01033000
*           DO;                                                 03S0482 01034000
         B     @RC00475                                         03S0482 01035000
@RF00475 DS    0H                                               03S0483 01036000
*/*                                                                  */ 01037000
*/* ERROR READING POINTER TO 1ST SRB - ISSUE MSG                     */ 01038000
*/*                                                                  */ 01039000
*                                                               03S0483 01040000
*             RFY R4 RSTD;                                      03S0483 01041000
*             R4=ADDR(GSMQERMA);                                03S0484 01042000
         LA    R4,GSMQERMA                                      03S0484 01043000
*             CALL ADRCNVT;                                     03S0485 01044000
         L     @15,AADRCNVT(,COMBASE)                           03S0485 01045000
         BALR  @14,@15                                          03S0485 01046000
*             RFY R4 UNRSTD;                                    03S0486 01047000
*             BUFFER(1:LENGTH(GSMQERMG))=GSMQERMG;              03S0487 01048000
*                                                               03S0487 01049000
         L     @07,CURBUF(,COMBASE)                             03S0487 01050000
         MVC   BUFFER(46,@07),GSMQERMG                          03S0487 01051000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      03S0488 01052000
*               (BRWRITE 1);                                    03S0488 01053000
         BRWRITE 1                                                      01054000
*             READERR=OFF;                                      03S0489 01055000
         NI    READERR,B'01111111'                              03S0489 01056000
*           END;                                                03S0490 01057000
*       END;                                                    03S0491 01058000
*     ELSE                                                      03S0492 01059000
*       DO;                                                     03S0492 01060000
         B     @RC00472                                         03S0492 01061000
@RF00472 DS    0H                                               03S0493 01062000
*/*                                                                  */ 01063000
*/* GSMQ ADDRESS IS 0 - ISSUE MSG                                    */ 01064000
*/*                                                                  */ 01065000
*         BUFFER(1:LENGTH(GSMQ0MSG))=GSMQ0MSG;                  03S0493 01066000
*                                                               03S0493 01067000
         L     @07,CURBUF(,COMBASE)                             03S0493 01068000
         MVC   BUFFER(33,@07),GSMQ0MSG                          03S0493 01069000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0494 01070000
*           (BRWRITE 1);                                        03S0494 01071000
         BRWRITE 1                                                      01072000
*       END;                                                    03S0495 01073000
*   END;                                                        03S0496 01074000
* ELSE                                                          03S0497 01075000
*   DO;                                                         03S0497 01076000
         B     @RC00469                                         03S0497 01077000
@RF00469 DS    0H                                               03S0498 01078000
*/*                                                                  */ 01079000
*/* ERROR READING CVTGSMQ FIELD - ISSUE MSG                          */ 01080000
*/*                                                                  */ 01081000
*                                                               03S0498 01082000
*     RFY R4 RSTD;                                              03S0498 01083000
*     R4=ADDR(GSMERMA);                                         03S0499 01084000
         LA    R4,GSMERMA                                       03S0499 01085000
*     CALL ADRCNVT;                                             03S0500 01086000
         L     @15,AADRCNVT(,COMBASE)                           03S0500 01087000
         BALR  @14,@15                                          03S0500 01088000
*     RFY R4 UNRSTD;                                            03S0501 01089000
*     BUFFER(1:LENGTH(GSMERMG))=GSMERMG;                        03S0502 01090000
*                                                               03S0502 01091000
         L     @07,CURBUF(,COMBASE)                             03S0502 01092000
         MVC   BUFFER(49,@07),GSMERMG                           03S0502 01093000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0503 01094000
*       (BRWRITE 1);                                            03S0503 01095000
         BRWRITE 1                                                      01096000
*     READERR=OFF;                                              03S0504 01097000
         NI    READERR,B'01111111'                              03S0504 01098000
*   END;                                                        03S0505 01099000
*                                                               02S0506 01100000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0506 01101000
*   (BRWRITE 1);                                                02S0506 01102000
@RC00469 DS    0H                                               02S0506 01103000
         BRWRITE 1                                                      01104000
*/*                                                             03S0507 01105000
*         PROCESS LOCAL SERVICE MANAGER QUEUE                   03S0507 01106000
*                                                                    */ 01107000
*/*                                                                  */ 01108000
*/* GET LSMQ ADDRESS AND CHECK FOR 0                                 */ 01109000
*/*                                                                  */ 01110000
*                                                               03S0507 01111000
* PREG=ADDR(CVTLSMQ);                                           03S0507 01112000
         LA    PREG,CVTLSMQ(,CVTPTR)                            03S0507 01113000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S0508 01114000
*     FLOWS(SUMERR)                                             03S0508 01115000
*   (BRREAD (PREG));                                            03S0508 01116000
         BRREAD (PREG)                                                  01117000
* IF READERR=OFF THEN                                           03S0509 01118000
         TM    READERR,B'10000000'                              03S0509 01119000
         BNZ   @RF00509                                         03S0509 01120000
*   DO;                                                         03S0510 01121000
*     PREG=RDPTR;                                               03S0511 01122000
         L     @07,RDPTR-1(,PREG)                               03S0511 01123000
         LA    @07,0(,@07)                                      03S0511 01124000
         LR    PREG,@07                                         03S0511 01125000
*     IF PREG ^= 0 THEN                                         03S0512 01126000
         LTR   PREG,PREG                                        03S0512 01127000
         BZ    @RF00512                                         03S0512 01128000
*       DO;                                                     03S0513 01129000
*/*                                                                  */ 01130000
*/* ADDRESS IS OK - GET PTR TO 1ST SRB                               */ 01131000
*/*                                                                  */ 01132000
*                                                               03S0514 01133000
*         GEN REFS(BRRDDATA)SETS(PREG,READERR)                  03S0514 01134000
*             FLOWS(SUMERR)                                     03S0514 01135000
*           (BRREAD (PREG));                                    03S0514 01136000
         BRREAD (PREG)                                                  01137000
*         IF READERR=OFF THEN                                   03S0515 01138000
         TM    READERR,B'10000000'                              03S0515 01139000
         BNZ   @RF00515                                         03S0515 01140000
*           DO;                                                 03S0516 01141000
*             SRBQPTRF=RDPTR;                                   03S0517 01142000
         L     SRBQPTRF,RDPTR-1(,PREG)                          03S0517 01143000
         LA    SRBQPTRF,0(,SRBQPTRF)                            03S0517 01144000
*/*                                                                  */ 01145000
*/* PRINT SUBTITLE AND PROCESS SRB CHAIN                             */ 01146000
*/*                                                                  */ 01147000
*             BUFFER(1:LENGTH(LSMQTTL))=LSMQTTL;                03S0518 01148000
*                                                               03S0518 01149000
         L     @07,CURBUF(,COMBASE)                             03S0518 01150000
         MVC   BUFFER(27,@07),LSMQTTL                           03S0518 01151000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      03S0519 01152000
*               (BRWRITE 1);                                    03S0519 01153000
         BRWRITE 1                                                      01154000
*             CALL SRBCHAIN;                                    03S0520 01155000
         BAL   @14,SRBCHAIN                                     03S0520 01156000
*           END;                                                03S0521 01157000
*         ELSE                                                  03S0522 01158000
*           DO;                                                 03S0522 01159000
         B     @RC00515                                         03S0522 01160000
@RF00515 DS    0H                                               03S0523 01161000
*/*                                                                  */ 01162000
*/* ERROR ON 1ST SRB PTR - ISSUE MSG                                 */ 01163000
*/*                                                                  */ 01164000
*                                                               03S0523 01165000
*             RFY R4 RSTD;                                      03S0523 01166000
*             R4=ADDR(LSMQERMA);                                03S0524 01167000
         LA    R4,LSMQERMA                                      03S0524 01168000
*             CALL ADRCNVT;                                     03S0525 01169000
         L     @15,AADRCNVT(,COMBASE)                           03S0525 01170000
         BALR  @14,@15                                          03S0525 01171000
*             RFY R4 UNRSTD;                                    03S0526 01172000
*             BUFFER(1:LENGTH(LSMQERMG))=LSMQERMG;              03S0527 01173000
*                                                               03S0527 01174000
         L     @07,CURBUF(,COMBASE)                             03S0527 01175000
         MVC   BUFFER(46,@07),LSMQERMG                          03S0527 01176000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      03S0528 01177000
*               (BRWRITE 1);                                    03S0528 01178000
         BRWRITE 1                                                      01179000
*             READERR=OFF;                                      03S0529 01180000
         NI    READERR,B'01111111'                              03S0529 01181000
*           END;                                                03S0530 01182000
*       END;                                                    03S0531 01183000
*     ELSE                                                      03S0532 01184000
*       DO;                                                     03S0532 01185000
         B     @RC00512                                         03S0532 01186000
@RF00512 DS    0H                                               03S0533 01187000
*/*                                                                  */ 01188000
*/* LSMQ ADDRESS IS 0 - ISSUE MSG                                    */ 01189000
*/*                                                                  */ 01190000
*         BUFFER(1:LENGTH(LSMQ0MSG))=LSMQ0MSG;                  03S0533 01191000
*                                                               03S0533 01192000
         L     @07,CURBUF(,COMBASE)                             03S0533 01193000
         MVC   BUFFER(33,@07),LSMQ0MSG                          03S0533 01194000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0534 01195000
*           (BRWRITE 1);                                        03S0534 01196000
         BRWRITE 1                                                      01197000
*       END;                                                    03S0535 01198000
*   END;                                                        03S0536 01199000
* ELSE                                                          03S0537 01200000
*   DO;                                                         03S0537 01201000
         B     @RC00509                                         03S0537 01202000
@RF00509 DS    0H                                               03S0538 01203000
*/*                                                                  */ 01204000
*/* ERROR ON CVTLSMQ FIELD - ISSUE MSG                               */ 01205000
*/*                                                                  */ 01206000
*                                                               03S0538 01207000
*     RFY R4 RSTD;                                              03S0538 01208000
*     R4=ADDR(LSMERMA);                                         03S0539 01209000
         LA    R4,LSMERMA                                       03S0539 01210000
*     CALL ADRCNVT;                                             03S0540 01211000
         L     @15,AADRCNVT(,COMBASE)                           03S0540 01212000
         BALR  @14,@15                                          03S0540 01213000
*     RFY R4 UNRSTD;                                            03S0541 01214000
*     BUFFER(1:LENGTH(LSMERMG))=LSMERMG;                        03S0542 01215000
*                                                               03S0542 01216000
         L     @07,CURBUF(,COMBASE)                             03S0542 01217000
         MVC   BUFFER(49,@07),LSMERMG                           03S0542 01218000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0543 01219000
*       (BRWRITE 1);                                            03S0543 01220000
         BRWRITE 1                                                      01221000
*     READERR=OFF;                                              03S0544 01222000
         NI    READERR,B'01111111'                              03S0544 01223000
*   END;                                                        03S0545 01224000
*                                                               02S0546 01225000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0546 01226000
*   (BRWRITE 1);                                                02S0546 01227000
@RC00509 DS    0H                                               02S0546 01228000
         BRWRITE 1                                                      01229000
*/*                                                                  */ 01230000
*/* SUBTITLE FOR GSPL                                                */ 01231000
*/*                                                                  */ 01232000
* BUFTTL(1:LENGTH(GSRBTTL))=GSRBTTL;                            02S0547 01233000
*                                                               02S0547 01234000
         L     @07,CURBUF(,COMBASE)                             02S0547 01235000
         MVC   BUFTTL(28,@07),GSRBTTL                           02S0547 01236000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0548 01237000
*   (BRWRITE 2);                                                02S0548 01238000
         BRWRITE 2                                                      01239000
*/*                                                                  */ 01240000
*/* GET GSPL ADDRESS, CHECK FOR GSPL PRESENT                         */ 01241000
*/*                                                                  */ 01242000
*                                                               02S0549 01243000
* PREG=ADDR(CVTGSPL);                                           02S0549 01244000
         LA    PREG,CVTGSPL(,CVTPTR)                            02S0549 01245000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S0550 01246000
*     FLOWS(SUMERR)                                             02S0550 01247000
*   (BRREAD (PREG));                                            02S0550 01248000
         BRREAD (PREG)                                                  01249000
* IF READERR=OFF THEN                                           02S0551 01250000
         TM    READERR,B'10000000'                              02S0551 01251000
         BNZ   @RF00551                                         02S0551 01252000
*   DO;                                                         02S0552 01253000
*     SPLPTR=RDPTR;                                             02S0553 01254000
         L     SPLPTR,RDPTR-1(,PREG)                            02S0553 01255000
         LA    SPLPTR,0(,SPLPTR)                                02S0553 01256000
*     IF SPLPTR ^= 0 THEN                                       02S0554 01257000
         LTR   SPLPTR,SPLPTR                                    02S0554 01258000
         BZ    @RF00554                                         02S0554 01259000
*       DO;                                                     02S0555 01260000
*/*                                                                  */ 01261000
*/* PROCESS NON-QUIESCEABLE AND SYSTEM QUEUES                        */ 01262000
*/*                                                                  */ 01263000
*/*                                                             03S0556 01264000
*         PROCESS GSMQ NON-QUIESCEABLE QUEUE                    03S0556 01265000
*                                                                    */ 01266000
*/*                                                                  */ 01267000
*/* GET POINTER TO 1ST SRB                                           */ 01268000
*/*                                                                  */ 01269000
*                                                               03S0556 01270000
* PREG=ADDR(SPLNQF);                                            03S0556 01271000
         LR    PREG,SPLPTR                                      03S0556 01272000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S0557 01273000
*     FLOWS(SUMERR)                                             03S0557 01274000
*   (BRREAD (PREG));                                            03S0557 01275000
         BRREAD (PREG)                                                  01276000
* IF READERR=OFF THEN                                           03S0558 01277000
         TM    READERR,B'10000000'                              03S0558 01278000
         BNZ   @RF00558                                         03S0558 01279000
*   DO;                                                         03S0559 01280000
*     SRBQPTRF=RDPTR;                                           03S0560 01281000
         L     SRBQPTRF,RDPTR-1(,PREG)                          03S0560 01282000
         LA    SRBQPTRF,0(,SRBQPTRF)                            03S0560 01283000
*/*                                                                  */ 01284000
*/* GET PTR TO LAST SRB                                              */ 01285000
*/*                                                                  */ 01286000
*                                                               03S0561 01287000
*     PREG=ADDR(SPLNQL);                                        03S0561 01288000
         LA    PREG,SPLNQL(,SPLPTR)                             03S0561 01289000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      03S0562 01290000
*         FLOWS(SUMERR)                                         03S0562 01291000
*       (BRREAD (PREG));                                        03S0562 01292000
         BRREAD (PREG)                                                  01293000
*     IF READERR=OFF THEN                                       03S0563 01294000
         TM    READERR,B'10000000'                              03S0563 01295000
         BNZ   @RF00563                                         03S0563 01296000
*       DO;                                                     03S0564 01297000
*         SRBQPTRL=RDPTR;                                       03S0565 01298000
         L     @07,RDPTR-1(,PREG)                               03S0565 01299000
         LA    @07,0(,@07)                                      03S0565 01300000
         ST    @07,SRBQPTRL                                     03S0565 01301000
*         SRBENDP=ON;             /* INDICATE LAST PTR IS VALID      */ 01302000
         OI    SRBENDP,B'00001000'                              03S0566 01303000
*       END;                                                    03S0567 01304000
*     ELSE                                                      03S0568 01305000
*       DO;                                                     03S0568 01306000
         B     @RC00563                                         03S0568 01307000
@RF00563 DS    0H                                               03S0569 01308000
*/*                                                                  */ 01309000
*/* ERROR ON PTR TO LAST SRB - ISSUE MSG & DO NOT USE POINTER        */ 01310000
*/*                                                                  */ 01311000
*                                                               03S0569 01312000
*         RFY R4 RSTD;                                          03S0569 01313000
*         R4=ADDR(GSPNERMA);                                    03S0570 01314000
         LA    R4,GSPNERMA                                      03S0570 01315000
*         CALL ADRCNVT;                                         03S0571 01316000
         L     @15,AADRCNVT(,COMBASE)                           03S0571 01317000
         BALR  @14,@15                                          03S0571 01318000
*         RFY R4 UNRSTD;                                        03S0572 01319000
*         BUFFER(1:LENGTH(GSPNERMG))=GSPNERMG;                  03S0573 01320000
*                                                               03S0573 01321000
         L     @07,CURBUF(,COMBASE)                             03S0573 01322000
         MVC   BUFFER(46,@07),GSPNERMG                          03S0573 01323000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0574 01324000
*           (BRWRITE 1);                                        03S0574 01325000
         BRWRITE 1                                                      01326000
*         READERR=OFF;                                          03S0575 01327000
         NI    READERR,B'01111111'                              03S0575 01328000
*       END;                                                    03S0576 01329000
*/*                                                                  */ 01330000
*/* PRINT SUBTITLE AND PROCESS SRB CHAIN                             */ 01331000
*/*                                                                  */ 01332000
*     BUFFER(1:LENGTH(SPLNTTL))=SPLNTTL;                        03S0577 01333000
*                                                               03S0577 01334000
@RC00563 L     @07,CURBUF(,COMBASE)                             03S0577 01335000
         MVC   BUFFER(21,@07),SPLNTTL                           03S0577 01336000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0578 01337000
*       (BRWRITE 1);                                            03S0578 01338000
         BRWRITE 1                                                      01339000
*     CALL SRBCHAIN;                                            03S0579 01340000
         BAL   @14,SRBCHAIN                                     03S0579 01341000
*     SRBENDP=OFF;                                              03S0580 01342000
         NI    SRBENDP,B'11110111'                              03S0580 01343000
*   END;                                                        03S0581 01344000
* ELSE                                                          03S0582 01345000
*   DO;                                                         03S0582 01346000
         B     @RC00558                                         03S0582 01347000
@RF00558 DS    0H                                               03S0583 01348000
*/*                                                                  */ 01349000
*/* ERROR ON PTR TO 1ST SRB - ISSUE MSG                              */ 01350000
*/*                                                                  */ 01351000
*                                                               03S0583 01352000
*     RFY R4 RSTD;                                              03S0583 01353000
*     R4=ADDR(GSPNRMA1);                                        03S0584 01354000
         LA    R4,GSPNRMA1                                      03S0584 01355000
*     CALL ADRCNVT;                                             03S0585 01356000
         L     @15,AADRCNVT(,COMBASE)                           03S0585 01357000
         BALR  @14,@15                                          03S0585 01358000
*     RFY R4 UNRSTD;                                            03S0586 01359000
*     BUFFER(1:LENGTH(GSPNRMG1))=GSPNRMG1;                      03S0587 01360000
*                                                               03S0587 01361000
         L     @07,CURBUF(,COMBASE)                             03S0587 01362000
         MVC   BUFFER(49,@07),GSPNRMG1                          03S0587 01363000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0588 01364000
*       (BRWRITE 1);                                            03S0588 01365000
         BRWRITE 1                                                      01366000
*     READERR=OFF;                                              03S0589 01367000
         NI    READERR,B'01111111'                              03S0589 01368000
*   END;                                                        03S0590 01369000
*                                                               02S0591 01370000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S0591 01371000
*           (BRWRITE 1);                                        02S0591 01372000
@RC00558 DS    0H                                               02S0591 01373000
         BRWRITE 1                                                      01374000
*/*                                                             03S0592 01375000
*         PROCESS GSMQ SYSTEM QUEUE                             03S0592 01376000
*                                                                    */ 01377000
*/*                                                                  */ 01378000
*/* GET POINTER TO 1ST SRB                                           */ 01379000
*/*                                                                  */ 01380000
*                                                               03S0592 01381000
* PREG=ADDR(SPLSQF);                                            03S0592 01382000
         LA    PREG,SPLSQF(,SPLPTR)                             03S0592 01383000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S0593 01384000
*     FLOWS(SUMERR)                                             03S0593 01385000
*   (BRREAD (PREG));                                            03S0593 01386000
         BRREAD (PREG)                                                  01387000
* IF READERR=OFF THEN                                           03S0594 01388000
         TM    READERR,B'10000000'                              03S0594 01389000
         BNZ   @RF00594                                         03S0594 01390000
*   DO;                                                         03S0595 01391000
*     SRBQPTRF=RDPTR;                                           03S0596 01392000
         L     SRBQPTRF,RDPTR-1(,PREG)                          03S0596 01393000
         LA    SRBQPTRF,0(,SRBQPTRF)                            03S0596 01394000
*/*                                                                  */ 01395000
*/* GET PTR TO LAST SRB                                              */ 01396000
*/*                                                                  */ 01397000
*                                                               03S0597 01398000
*     PREG=ADDR(SPLSQL);                                        03S0597 01399000
         LA    PREG,SPLSQL(,SPLPTR)                             03S0597 01400000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      03S0598 01401000
*         FLOWS(SUMERR)                                         03S0598 01402000
*       (BRREAD (PREG));                                        03S0598 01403000
         BRREAD (PREG)                                                  01404000
*     IF READERR=OFF THEN                                       03S0599 01405000
         TM    READERR,B'10000000'                              03S0599 01406000
         BNZ   @RF00599                                         03S0599 01407000
*       DO;                                                     03S0600 01408000
*         SRBQPTRL=RDPTR;                                       03S0601 01409000
         L     @07,RDPTR-1(,PREG)                               03S0601 01410000
         LA    @07,0(,@07)                                      03S0601 01411000
         ST    @07,SRBQPTRL                                     03S0601 01412000
*         SRBENDP=ON;             /* INDICATE LAST PTR IS VALID      */ 01413000
         OI    SRBENDP,B'00001000'                              03S0602 01414000
*       END;                                                    03S0603 01415000
*     ELSE                                                      03S0604 01416000
*       DO;                                                     03S0604 01417000
         B     @RC00599                                         03S0604 01418000
@RF00599 DS    0H                                               03S0605 01419000
*/*                                                                  */ 01420000
*/* ERROR ON PTR TO LAST SRB - ISSUE MSG & DO NOT USE POINTER        */ 01421000
*/*                                                                  */ 01422000
*                                                               03S0605 01423000
*         RFY R4 RSTD;                                          03S0605 01424000
*         R4=ADDR(GSPSERMA);                                    03S0606 01425000
         LA    R4,GSPSERMA                                      03S0606 01426000
*         CALL ADRCNVT;                                         03S0607 01427000
         L     @15,AADRCNVT(,COMBASE)                           03S0607 01428000
         BALR  @14,@15                                          03S0607 01429000
*         RFY R4 UNRSTD;                                        03S0608 01430000
*         BUFFER(1:LENGTH(GSPSERMG))=GSPSERMG;                  03S0609 01431000
*                                                               03S0609 01432000
         L     @07,CURBUF(,COMBASE)                             03S0609 01433000
         MVC   BUFFER(47,@07),GSPSERMG                          03S0609 01434000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0610 01435000
*           (BRWRITE 1);                                        03S0610 01436000
         BRWRITE 1                                                      01437000
*         READERR=OFF;                                          03S0611 01438000
         NI    READERR,B'01111111'                              03S0611 01439000
*       END;                                                    03S0612 01440000
*/*                                                                  */ 01441000
*/* PRINT SUBTITLE AND PROCESS SRB CHAIN                             */ 01442000
*/*                                                                  */ 01443000
*     BUFFER(1:LENGTH(SPLSTTL))=SPLSTTL;                        03S0613 01444000
*                                                               03S0613 01445000
@RC00599 L     @07,CURBUF(,COMBASE)                             03S0613 01446000
         MVC   BUFFER(12,@07),SPLSTTL                           03S0613 01447000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0614 01448000
*       (BRWRITE 1);                                            03S0614 01449000
         BRWRITE 1                                                      01450000
*     CALL SRBCHAIN;                                            03S0615 01451000
         BAL   @14,SRBCHAIN                                     03S0615 01452000
*     SRBENDP=OFF;                                              03S0616 01453000
         NI    SRBENDP,B'11110111'                              03S0616 01454000
*   END;                                                        03S0617 01455000
* ELSE                                                          03S0618 01456000
*   DO;                                                         03S0618 01457000
         B     @RC00594                                         03S0618 01458000
@RF00594 DS    0H                                               03S0619 01459000
*/*                                                                  */ 01460000
*/* ERROR ON PTR TO 1ST SRB - ISSUE MSG                              */ 01461000
*/*                                                                  */ 01462000
*                                                               03S0619 01463000
*     RFY R4 RSTD;                                              03S0619 01464000
*     R4=ADDR(GSPSRMA1);                                        03S0620 01465000
         LA    R4,GSPSRMA1                                      03S0620 01466000
*     CALL ADRCNVT;                                             03S0621 01467000
         L     @15,AADRCNVT(,COMBASE)                           03S0621 01468000
         BALR  @14,@15                                          03S0621 01469000
*     RFY R4 UNRSTD;                                            03S0622 01470000
*     BUFFER(1:LENGTH(GSPSRMG1))=GSPSRMG1;                      03S0623 01471000
*                                                               03S0623 01472000
         L     @07,CURBUF(,COMBASE)                             03S0623 01473000
         MVC   BUFFER(50,@07),GSPSRMG1                          03S0623 01474000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0624 01475000
*       (BRWRITE 1);                                            03S0624 01476000
         BRWRITE 1                                                      01477000
*     READERR=OFF;                                              03S0625 01478000
         NI    READERR,B'01111111'                              03S0625 01479000
*   END;                                                        03S0626 01480000
*                                                               02S0627 01481000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S0627 01482000
*           (BRWRITE 1);                                        02S0627 01483000
@RC00594 DS    0H                                               02S0627 01484000
         BRWRITE 1                                                      01485000
*       END;                                                    02S0628 01486000
*     ELSE                                                      02S0629 01487000
*       DO;                                                     02S0629 01488000
         B     @RC00554                                         02S0629 01489000
@RF00554 DS    0H                                               02S0630 01490000
*/*                                                                  */ 01491000
*/* GSPL NOT PRESENT - ISSUE MESSAGE                                 */ 01492000
*/*                                                                  */ 01493000
*         BUFFER(1:LENGTH(SPL0MSG))=SPL0MSG;                    02S0630 01494000
*                                                               02S0630 01495000
         L     @07,CURBUF(,COMBASE)                             02S0630 01496000
         MVC   BUFFER(32,@07),SPL0MSG                           02S0630 01497000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S0631 01498000
*           (BRWRITE 2);                                        02S0631 01499000
         BRWRITE 2                                                      01500000
*       END;                                                    02S0632 01501000
*   END;                                                        02S0633 01502000
* ELSE                                                          02S0634 01503000
*   DO;                                                         02S0634 01504000
         B     @RC00551                                         02S0634 01505000
@RF00551 DS    0H                                               02S0635 01506000
*/*                                                                  */ 01507000
*/* ERROR READING CVTGSPL FIELD - ISSUE MESSAGE                      */ 01508000
*/*                                                                  */ 01509000
*                                                               02S0635 01510000
*     RFY R4 RSTD;                                              02S0635 01511000
*     R4=ADDR(GSPERMA);                                         02S0636 01512000
         LA    R4,GSPERMA                                       02S0636 01513000
*     CALL ADRCNVT;                                             02S0637 01514000
         L     @15,AADRCNVT(,COMBASE)                           02S0637 01515000
         BALR  @14,@15                                          02S0637 01516000
*     RFY R4 UNRSTD;                                            02S0638 01517000
*     BUFFER(1:LENGTH(GSPERMG))=GSPERMG;                        02S0639 01518000
*                                                               02S0639 01519000
         L     @07,CURBUF(,COMBASE)                             02S0639 01520000
         MVC   BUFFER(49,@07),GSPERMG                           02S0639 01521000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0640 01522000
*       (BRWRITE 2);                                            02S0640 01523000
         BRWRITE 2                                                      01524000
*     READERR=OFF;                                              02S0641 01525000
         NI    READERR,B'01111111'                              02S0641 01526000
*   END;                                                        02S0642 01527000
*/*                                                             02S0643 01528000
*         LIST THE JOBS IN THE DUMP                             02S0643 01529000
*                                                                    */ 01530000
* BUFTTL(1:LENGTH(JOBTTL))=JOBTTL;                              02S0643 01531000
*                                                               02S0643 01532000
@RC00551 L     @07,CURBUF(,COMBASE)                             02S0643 01533000
         MVC   BUFTTL(11,@07),JOBTTL                            02S0643 01534000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0644 01535000
*   (BRWRITE 2);                                                02S0644 01536000
         BRWRITE 2                                                      01537000
*/*                                                                  */ 01538000
*/* GET ASVT ADDRESS, CHECK FOR ASVT PRESENT                         */ 01539000
*/*                                                                  */ 01540000
*                                                               02S0645 01541000
* PREG=ADDR(CVTASVT);                                           02S0645 01542000
         LA    PREG,CVTASVT(,CVTPTR)                            02S0645 01543000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S0646 01544000
*     FLOWS(SUMERR)                                             02S0646 01545000
*   (BRREAD (PREG));                                            02S0646 01546000
         BRREAD (PREG)                                                  01547000
* IF READERR=OFF THEN                                           02S0647 01548000
         TM    READERR,B'10000000'                              02S0647 01549000
         BNZ   @RF00647                                         02S0647 01550000
*   DO;                                                         02S0648 01551000
*     ASVTPTR=RDPTR;                                            02S0649 01552000
         L     ASVTPTR,RDPTR-1(,PREG)                           02S0649 01553000
         LA    ASVTPTR,0(,ASVTPTR)                              02S0649 01554000
*     IF ASVTPTR ^= 0 THEN                                      02S0650 01555000
         LTR   ASVTPTR,ASVTPTR                                  02S0650 01556000
         BZ    @RF00650                                         02S0650 01557000
*       DO;                                                     02S0651 01558000
*/*                                                                  */ 01559000
*/* VALIDITY CHECK ASVT, ISSUE MESSAGE IF IT FAILS                   */ 01560000
*/*                                                                  */ 01561000
*                                                               02S0652 01562000
*         PREG=ADDR(ASVTASVT);                                  02S0652 01563000
         LA    PREG,ASVTASVT(,ASVTPTR)                          02S0652 01564000
*         GEN REFS(BRRDDATA)SETS(PREG,READERR)                  02S0653 01565000
*             FLOWS(SUMERR)                                     02S0653 01566000
*           (BRREAD (PREG));                                    02S0653 01567000
         BRREAD (PREG)                                                  01568000
*         IF READERR=OFF THEN                                   02S0654 01569000
         TM    READERR,B'10000000'                              02S0654 01570000
         BNZ   @RF00654                                         02S0654 01571000
*           DO;                                                 02S0655 01572000
*             IF READALL ^= 'ASVT' THEN                         02S0656 01573000
         CLC   READALL(4,PREG),@CC03272                         02S0656 01574000
         BE    @RF00656                                         02S0656 01575000
*               DO;                                             02S0657 01576000
*                 BUFFER(1:4)='ASVT';                           02S0658 01577000
         L     @07,CURBUF(,COMBASE)                             02S0658 01578000
         MVC   BUFFER(4,@07),@CC03272                           02S0658 01579000
*                 BUFFER(6:LENGTH(VALERR)+5)=VALERR;            02S0659 01580000
*                                                               02S0659 01581000
         MVC   BUFFER+5(21,@07),VALERR                          02S0659 01582000
*                 GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)  02S0660 01583000
*                   (BRWRITE 2);                                02S0660 01584000
         BRWRITE 2                                                      01585000
*               END;                                            02S0661 01586000
*           END;                                                02S0662 01587000
*         ELSE                                                  02S0663 01588000
*           READERR=OFF;                                        02S0663 01589000
         B     @RC00654                                         02S0663 01590000
@RF00654 NI    READERR,B'01111111'                              02S0663 01591000
*/*                                                                  */ 01592000
*/* PROCESS JOBS USING ASVT TO FIND ASCBS                            */ 01593000
*/*                                                                  */ 01594000
*/*                                                             03S0664 01595000
*         PROCESS ASCBS IN ASVT                                 03S0664 01596000
*                                                                    */ 01597000
*/*                                                                  */ 01598000
*/* GET NUMBER OF ASVT ENTRIES FOR LOOP CONTROL                      */ 01599000
*/*                                                                  */ 01600000
*                                                               03S0664 01601000
* PREG=ADDR(ASVTMAXU);                                          03S0664 01602000
@RC00654 LA    PREG,ASVTMAXU(,ASVTPTR)                          03S0664 01603000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S0665 01604000
*     FLOWS(SUMERR)                                             03S0665 01605000
*   (BRREAD (PREG));                                            03S0665 01606000
         BRREAD (PREG)                                                  01607000
* IF READERR=OFF THEN                                           03S0666 01608000
         TM    READERR,B'10000000'                              03S0666 01609000
         BNZ   @RF00666                                         03S0666 01610000
*   DO;                                                         03S0667 01611000
*     ASMAXU=RDWORD;                                            03S0668 01612000
         L     @07,RDWORD(,PREG)                                03S0668 01613000
         ST    @07,ASMAXU                                       03S0668 01614000
*/*                                                                  */ 01615000
*/* INITIALIZE ASCB COUNT AND LOOP THRU ASVT                         */ 01616000
*/*                                                                  */ 01617000
*     ASCBCNT=1;                                                03S0669 01618000
         LA    @07,1                                            03S0669 01619000
         STH   @07,ASCBCNT                                      03S0669 01620000
*/*                                                             04S0670 01621000
*         PROCESS ASVT                                          04S0670 01622000
*                                                                    */ 01623000
* DO INCTR=1 TO ASMAXU WHILE OVERLIMT=OFF;                      04S0670 01624000
         LA    @15,1                                            04S0670 01625000
         LR    INCTR,@15                                        04S0670 01626000
         B     @DE00670                                         04S0670 01627000
@DL00670 TM    OVERLIMT,B'00000001'                             04S0670 01628000
         BNZ   @DC00670                                         04S0670 01629000
*/*                                                                  */ 01630000
*/* GET AN ASVT ENTRY AND CHECK FOR VALID ASCB ADDRESS               */ 01631000
*/*                                                                  */ 01632000
*                                                               04S0671 01633000
*   PREG=ADDR(ASVTENTY(INCTR));                                 04S0671 01634000
         LR    @15,INCTR                                        04S0671 01635000
         SLA   @15,2                                            04S0671 01636000
         LA    PREG,ASVTENTY-4(@15,ASVTPTR)                     04S0671 01637000
*   RFY R0 RSTD;                                                04S0672 01638000
*   R0=0;                                                       04S0673 01639000
         SLR   R0,R0                                            04S0673 01640000
*   GEN REFS(BRRDDATA)SETS(PREG,READERR)                        04S0674 01641000
*       FLOWS(SUMERR)                                           04S0674 01642000
*     (BRREAD (PREG),,ASID=(R0));                               04S0674 01643000
         BRREAD (PREG),,ASID=(R0)                                       01644000
*   RFY R0 UNRSTD;                                              04S0675 01645000
*   IF READERR=OFF THEN                                         04S0676 01646000
         TM    READERR,B'10000000'                              04S0676 01647000
         BNZ   @RF00676                                         04S0676 01648000
*     DO;                                                       04S0677 01649000
*       IF READALL(1)=OFF & READALL(9:32) ^= '000000'X THEN     04S0678 01650000
         TM    READALL(PREG),B'10000000'                        04S0678 01651000
         BNZ   @RF00678                                         04S0678 01652000
         CLC   READALL+1(3,PREG),@CB03273                       04S0678 01653000
         BE    @RF00678                                         04S0678 01654000
*         DO;                                                   04S0679 01655000
*/*                                                                  */ 01656000
*/* GOT AN ASCB ADDRESS - QUEUE IT UP TO CATCH DUPLICATES            */ 01657000
*/*                                                                  */ 01658000
*           TEMPASCB=RDPTR;                                     04S0680 01659000
         L     @05,RDPTR-1(,PREG)                               04S0680 01660000
         LA    @05,0(,@05)                                      04S0680 01661000
         ST    @05,TEMPASCB                                     04S0680 01662000
*           LISTSAVE=TCBLIST;                                   04S0681 01663000
         L     LISTSAVE,TCBLIST(,COMBASE)                       04S0681 01664000
*           TCBLIST=ASCBLIST;                                   04S0682 01665000
         L     @00,ASCBLIST                                     04S0682 01666000
         ST    @00,TCBLIST(,COMBASE)                            04S0682 01667000
*           RFY R2 RSTD;                                        04S0683 01668000
*           R2=TEMPASCB;                                        04S0684 01669000
         LR    R2,@05                                           04S0684 01670000
*           CALL ASCBSAV;                                       04S0685 01671000
         L     @15,ATCBSAVE(,COMBASE)                           04S0685 01672000
         BALR  @14,@15                                          04S0685 01673000
*           RFY R2 UNRSTD;                                      04S0686 01674000
*           RFY R15 RSTD;                                       04S0687 01675000
*           RC=R15;                                             04S0688 01676000
         ST    R15,RC                                           04S0688 01677000
*           RFY R15 UNRSTD;                                     04S0689 01678000
*           ASCBLIST=TCBLIST;                                   04S0690 01679000
         L     @05,TCBLIST(,COMBASE)                            04S0690 01680000
         ST    @05,ASCBLIST                                     04S0690 01681000
*           TCBLIST=LISTSAVE;                                   04S0691 01682000
         ST    LISTSAVE,TCBLIST(,COMBASE)                       04S0691 01683000
*           IF RC=0 THEN                                        04S0692 01684000
         L     @15,RC                                           04S0692 01685000
         LTR   @15,@15                                          04S0692 01686000
         BNZ   @RF00692                                         04S0692 01687000
*             DO;                                               04S0693 01688000
*/*                                                                  */ 01689000
*/* ASCB IS NOT A DUP - IF ASCB COUNT IS OVER ASCBMAX, THEN SET      */ 01690000
*/* SWITCH AND EXIT FROM LOOP, ELSE PROCESS ASCB AND UPDATE COUNTER  */ 01691000
*/*                                                                  */ 01692000
*               IF ASCBCNT>ASCBMAX THEN                         04S0694 01693000
         LH    @00,ASCBCNT                                      04S0694 01694000
         CH    @00,ASCBMAX(,COMBASE)                            04S0694 01695000
         BNH   @RF00694                                         04S0694 01696000
*                 OVERLIMT=ON;                                  04S0695 01697000
         OI    OVERLIMT,B'00000001'                             04S0695 01698000
*               ELSE                                            04S0696 01699000
*                 DO;                                           04S0696 01700000
         B     @RC00694                                         04S0696 01701000
@RF00694 DS    0H                                               04S0697 01702000
*                   CALL DOADDRSP (TEMPASCB);                   04S0697 01703000
         LA    @01,@AL00697                                     04S0697 01704000
         BAL   @14,DOADDRSP                                     04S0697 01705000
*                   ASCBCNT=ASCBCNT+1;                          04S0698 01706000
         LA    @00,1                                            04S0698 01707000
         AH    @00,ASCBCNT                                      04S0698 01708000
         STH   @00,ASCBCNT                                      04S0698 01709000
*                 END;                                          04S0699 01710000
*             END;                                              04S0700 01711000
*           ELSE                                                04S0701 01712000
*             DO;                                               04S0701 01713000
         B     @RC00692                                         04S0701 01714000
@RF00692 DS    0H                                               04S0702 01715000
*/*                                                                  */ 01716000
*/* DUPLICATE ASCB FOUND - ISSUE MSG AND SKIP ASCB                   */ 01717000
*/*                                                                  */ 01718000
*               PREG=ADDR(TEMPASCB);                            04S0702 01719000
*                                                               04S0702 01720000
         LA    PREG,TEMPASCB                                    04S0702 01721000
*               RFY R4 RSTD;                                    04S0703 01722000
*               R4=ADDR(ASVTDUPA);                              04S0704 01723000
         LA    R4,ASVTDUPA                                      04S0704 01724000
*               CALL ADRCNVT;                                   04S0705 01725000
         L     @15,AADRCNVT(,COMBASE)                           04S0705 01726000
         BALR  @14,@15                                          04S0705 01727000
*               RFY R4 UNRSTD;                                  04S0706 01728000
*               BUFFER(1:LENGTH(ASVTDUPM))=ASVTDUPM;            04S0707 01729000
*                                                               04S0707 01730000
         L     @15,CURBUF(,COMBASE)                             04S0707 01731000
         MVC   BUFFER(46,@15),ASVTDUPM                          04S0707 01732000
*               GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)    04S0708 01733000
*                 (BRWRITE 2);                                  04S0708 01734000
         BRWRITE 2                                                      01735000
*             END;                                              04S0709 01736000
*         END;                                                  04S0710 01737000
*     END;                                                      04S0711 01738000
*   ELSE                                                        04S0712 01739000
*     DO;                                                       04S0712 01740000
         B     @RC00676                                         04S0712 01741000
@RF00676 DS    0H                                               04S0713 01742000
*/*                                                                  */ 01743000
*/* ERROR READING ASVT - ISSUE MSG & SET UP TO USE ASCBMAP FOR REST  */ 01744000
*/* OF ASCBS                                                         */ 01745000
*/*                                                                  */ 01746000
*                                                               04S0713 01747000
*       RFY R4 RSTD;                                            04S0713 01748000
*       R4=ADDR(ASENTERA);                                      04S0714 01749000
         LA    R4,ASENTERA                                      04S0714 01750000
*       CALL ADRCNVT;                                           04S0715 01751000
         L     @15,AADRCNVT(,COMBASE)                           04S0715 01752000
         BALR  @14,@15                                          04S0715 01753000
*       RFY R4 UNRSTD;                                          04S0716 01754000
*       BUFFER(1:LENGTH(ASENTERM))=ASENTERM;                    04S0717 01755000
*                                                               04S0717 01756000
         L     @07,CURBUF(,COMBASE)                             04S0717 01757000
         MVC   BUFFER(38,@07),ASENTERM                          04S0717 01758000
*       GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)            04S0718 01759000
*         (BRWRITE 1);                                          04S0718 01760000
         BRWRITE 1                                                      01761000
*       READERR=OFF;                                            04S0719 01762000
*       USEDSP=ON;                                              04S0720 01763000
         OI    USEDSP,B'00000100'                               04S0720 01764000
         NI    READERR,B'01111111'                              04S0720 01765000
*       INCTR=ASMAXU;             /* FORCE EXIT FROM LOOP            */ 01766000
         L     INCTR,ASMAXU                                     04S0721 01767000
*     END;                                                      04S0722 01768000
* END;                                                          04S0723 01769000
@RC00676 AL    INCTR,@CF00063                                   04S0723 01770000
@DE00670 C     INCTR,ASMAXU                                     04S0723 01771000
         BNH   @DL00670                                         04S0723 01772000
@DC00670 DS    0H                                               04S0724 01773000
*/*                                                                  */ 01774000
*/* IF ASCB COUNT EXCEEDS ASCBMAX, ISSUE MESSAGE                     */ 01775000
*/*                                                                  */ 01776000
*     IF OVERLIMT=ON THEN                                       03S0724 01777000
         TM    OVERLIMT,B'00000001'                             03S0724 01778000
         BNO   @RF00724                                         03S0724 01779000
*       DO;                                                     03S0725 01780000
*         CVD (ASCBMAX,FWORK);                                  03S0726 01781000
         LH    @00,ASCBMAX(,COMBASE)                            03S0726 01782000
         CVD   @00,@TS00001                                     03S0726 01783000
         MVC   FWORK(4),@TS00001+4                              03S0726 01784000
*         FWORK(29:32)=SIGNF;                                   03S0727 01785000
         OI    FWORK+3,B'00001111'                              03S0727 01786000
*         UNPK (ALIMIT,FWORK);                                  03S0728 01787000
         UNPK  ALIMIT(5),FWORK(4)                               03S0728 01788000
*         BUFFER(1:LENGTH(ASCBLIMG))=ASCBLIMG;                  03S0729 01789000
*                                                               03S0729 01790000
         L     @15,CURBUF(,COMBASE)                             03S0729 01791000
         MVC   BUFFER(33,@15),ASCBLIMG                          03S0729 01792000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0730 01793000
*           (BRWRITE 1);                                        03S0730 01794000
         BRWRITE 1                                                      01795000
*         OVERLIMT=OFF;                                         03S0731 01796000
*         PTERM=ON;                                             03S0732 01797000
         OI    PTERM,B'00000010'                                03S0732 01798000
         NI    OVERLIMT,B'11111110'                             03S0732 01799000
*       END;                                                    03S0733 01800000
*   END;                                                        03S0734 01801000
* ELSE                                                          03S0735 01802000
*   DO;                                                         03S0735 01803000
         B     @RC00666                                         03S0735 01804000
@RF00666 DS    0H                                               03S0736 01805000
*/*                                                                  */ 01806000
*/* ERROR ON ASVTMAXU FIELD - ISSUE MSG & SET SWITCH TO USE ASCBMAP  */ 01807000
*/*                                                                  */ 01808000
*                                                               03S0736 01809000
*     RFY R4 RSTD;                                              03S0736 01810000
*     R4=ADDR(ASMXERMA);                                        03S0737 01811000
         LA    R4,ASMXERMA                                      03S0737 01812000
*     CALL ADRCNVT;                                             03S0738 01813000
         L     @15,AADRCNVT(,COMBASE)                           03S0738 01814000
         BALR  @14,@15                                          03S0738 01815000
*     RFY R4 UNRSTD;                                            03S0739 01816000
*     BUFFER(1:LENGTH(ASMXERMG))=ASMXERMG;                      03S0740 01817000
*                                                               03S0740 01818000
         L     @15,CURBUF(,COMBASE)                             03S0740 01819000
         MVC   BUFFER(36,@15),ASMXERMG                          03S0740 01820000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0741 01821000
*       (BRWRITE 1);                                            03S0741 01822000
         BRWRITE 1                                                      01823000
*     USEDSP=ON;                                                03S0742 01824000
*     READERR=OFF;                                              03S0743 01825000
         OI    USEDSP,B'00000100'                               03S0743 01826000
         NI    READERR,B'01111111'                              03S0743 01827000
*   END;                                                        03S0744 01828000
*       END;                                                    02S0745 01829000
*     ELSE                                                      02S0746 01830000
*       DO;                                                     02S0746 01831000
         B     @RC00650                                         02S0746 01832000
@RF00650 DS    0H                                               02S0747 01833000
*/*                                                                  */ 01834000
*/* NO ASVT - ISSUE MSG & TRY ASCB DISPATCHING CHAIN                 */ 01835000
*/*                                                                  */ 01836000
*         BUFFER(1:LENGTH(ASVT0MSG))=ASVT0MSG;                  02S0747 01837000
*                                                               02S0747 01838000
         L     @15,CURBUF(,COMBASE)                             02S0747 01839000
         MVC   BUFFER(17,@15),ASVT0MSG                          02S0747 01840000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S0748 01841000
*           (BRWRITE 1);                                        02S0748 01842000
         BRWRITE 1                                                      01843000
*         USEDSP=ON;                                            02S0749 01844000
         OI    USEDSP,B'00000100'                               02S0749 01845000
*       END;                                                    02S0750 01846000
*   END;                                                        02S0751 01847000
* ELSE                                                          02S0752 01848000
*   DO;                                                         02S0752 01849000
         B     @RC00647                                         02S0752 01850000
@RF00647 DS    0H                                               02S0753 01851000
*/*                                                                  */ 01852000
*/* ERROR READING CVTASVT FIELD - ISSUE MSG & TRY ASCB DISP CHAIN    */ 01853000
*/*                                                                  */ 01854000
*     READERR=OFF;                                              02S0753 01855000
*                                                               02S0753 01856000
         NI    READERR,B'01111111'                              02S0753 01857000
*     RFY R4 RSTD;                                              02S0754 01858000
*     R4=ADDR(ASERMA);                                          02S0755 01859000
         LA    R4,ASERMA                                        02S0755 01860000
*     CALL ADRCNVT;                                             02S0756 01861000
         L     @15,AADRCNVT(,COMBASE)                           02S0756 01862000
         BALR  @14,@15                                          02S0756 01863000
*     RFY R4 UNRSTD;                                            02S0757 01864000
*     BUFFER(1:LENGTH(ASERMG))=ASERMG;                          02S0758 01865000
*                                                               02S0758 01866000
         L     @15,CURBUF(,COMBASE)                             02S0758 01867000
         MVC   BUFFER(35,@15),ASERMG                            02S0758 01868000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0759 01869000
*       (BRWRITE 1);                                            02S0759 01870000
         BRWRITE 1                                                      01871000
*     USEDSP=ON;                                                02S0760 01872000
         OI    USEDSP,B'00000100'                               02S0760 01873000
*   END;                                                        02S0761 01874000
*/*                                                                  */ 01875000
*/* PROCESS ASCB DISPATCHING CHAIN IF NEEDED                         */ 01876000
*/*                                                                  */ 01877000
*/*                                                             03S0762 01878000
*         PROCESS ASCBS IN DISPATCHING CHAIN                    03S0762 01879000
*                                                                    */ 01880000
*/*                                                                  */ 01881000
*/* IF ALL ASCBS COULD NOT BE READ FROM ASVT, ISSUE MESSAGE AND      */ 01882000
*/* PROCESS REMAINING ASCBS FROM ASCBMAP (COPY OF DISPATCHING CHAIN) */ 01883000
*/*                                                                  */ 01884000
* IF USEDSP=ON THEN                                             03S0762 01885000
@RC00647 TM    USEDSP,B'00000100'                               03S0762 01886000
         BNO   @RF00762                                         03S0762 01887000
*   DO;                                                         03S0763 01888000
*     BUFFER(1:LENGTH(UDSPMSG))=UDSPMSG;                        03S0764 01889000
*                                                               03S0764 01890000
         L     @15,CURBUF(,COMBASE)                             03S0764 01891000
         MVC   BUFFER(39,@15),UDSPMSG                           03S0764 01892000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S0765 01893000
*       (BRWRITE 1);                                            03S0765 01894000
         BRWRITE 1                                                      01895000
*     IF ASCBMAP ^= 0 THEN        /* CHECK ASCBMAP                   */ 01896000
         L     @15,ASCBMAP(,COMBASE)                            03S0766 01897000
         LTR   @15,@15                                          03S0766 01898000
         BZ    @RF00766                                         03S0766 01899000
*       DO;                                                     03S0767 01900000
*/*                                                                  */ 01901000
*/* ASCBMAP IS THERE - INITIALIZE POINTERS TO MAP & TABLE, AND LOOP  */ 01902000
*/* THRU BOTH                                                        */ 01903000
*/*                                                                  */ 01904000
*         MPPTR=ASCBMAP;                                        03S0768 01905000
         ST    @15,MPPTR                                        03S0768 01906000
*         TBPTR=ASCBTAB;                                        03S0769 01907000
         L     @00,ASCBTAB(,@15)                                03S0769 01908000
         ST    @00,TBPTR                                        03S0769 01909000
*         DO INCTR=1 TO ASCBNUM;                                03S0770 01910000
         LA    INCTR,1                                          03S0770 01911000
         B     @DE00770                                         03S0770 01912000
@DL00770 DS    0H                                               03S0771 01913000
*/*                                                                  */ 01914000
*/* QUEUE ASCB TO ASCBLIST IF NOT ALREADY THERE                      */ 01915000
*/*                                                                  */ 01916000
*           LISTSAVE=TCBLIST;                                   03S0771 01917000
         L     LISTSAVE,TCBLIST(,COMBASE)                       03S0771 01918000
*           TCBLIST=ASCBLIST;                                   03S0772 01919000
         L     @06,ASCBLIST                                     03S0772 01920000
         ST    @06,TCBLIST(,COMBASE)                            03S0772 01921000
*           RFY R2 RSTD;                                        03S0773 01922000
*           R2=TBASCB(INCTR);                                   03S0774 01923000
         LR    @06,INCTR                                        03S0774 01924000
         SLA   @06,3                                            03S0774 01925000
         L     @05,TBPTR                                        03S0774 01926000
         AL    @05,@CF03369                                     03S0774 01927000
         L     R2,TBASCB(@06,@05)                               03S0774 01928000
*           CALL ASCBSAV;                                       03S0775 01929000
         L     @15,ATCBSAVE(,COMBASE)                           03S0775 01930000
         BALR  @14,@15                                          03S0775 01931000
*           RFY R2 UNRSTD;                                      03S0776 01932000
*           RFY R15 RSTD;                                       03S0777 01933000
*           RC=R15;               /* SAVE RETURN CODE                */ 01934000
         ST    R15,RC                                           03S0778 01935000
*           RFY R15 UNRSTD;                                     03S0779 01936000
*           ASCBLIST=TCBLIST;                                   03S0780 01937000
         L     @06,TCBLIST(,COMBASE)                            03S0780 01938000
         ST    @06,ASCBLIST                                     03S0780 01939000
*           TCBLIST=LISTSAVE;                                   03S0781 01940000
         ST    LISTSAVE,TCBLIST(,COMBASE)                       03S0781 01941000
*/*                                                                  */ 01942000
*/* IF ASCB NOT PREVIOUSLY ON QUEUE, THEN PROCESS IT                 */ 01943000
*/*                                                                  */ 01944000
*           IF RC=0 THEN                                        03S0782 01945000
         L     @06,RC                                           03S0782 01946000
         LTR   @06,@06                                          03S0782 01947000
         BNZ   @RF00782                                         03S0782 01948000
*             DO;                                               03S0783 01949000
*               CALL DOADDRSP (TBASCB(INCTR));                  03S0784 01950000
         LR    @06,INCTR                                        03S0784 01951000
         SLA   @06,3                                            03S0784 01952000
         L     @15,TBPTR                                        03S0784 01953000
         AL    @15,@CF03369                                     03S0784 01954000
         LA    @06,TBASCB(@06,@15)                              03S0784 01955000
         ST    @06,@AL00001                                     03S0784 01956000
         LA    @01,@AL00001                                     03S0784 01957000
         BAL   @14,DOADDRSP                                     03S0784 01958000
*             END;                                              03S0785 01959000
*         END;                                                  03S0786 01960000
@RF00782 AL    INCTR,@CF00063                                   03S0786 01961000
@DE00770 L     @06,MPPTR                                        03S0786 01962000
         CH    INCTR,ASCBNUM(,@06)                              03S0786 01963000
         BNH   @DL00770                                         03S0786 01964000
*       END;                                                    03S0787 01965000
*     ELSE                                                      03S0788 01966000
*       DO;                                                     03S0788 01967000
         B     @RC00766                                         03S0788 01968000
@RF00766 DS    0H                                               03S0789 01969000
*/*                                                                  */ 01970000
*/* ASCBMAP IS 0 - NO DISPATCHING CHAIN COULD BE FOUND IN DUMP -     */ 01971000
*/* ISSUE MSG                                                        */ 01972000
*/*                                                                  */ 01973000
*         BUFFER(1:LENGTH(MAP0MSG))=MAP0MSG;                    03S0789 01974000
*                                                               03S0789 01975000
         L     @15,CURBUF(,COMBASE)                             03S0789 01976000
         MVC   BUFFER(37,@15),MAP0MSG                           03S0789 01977000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0790 01978000
*           (BRWRITE 1);                                        03S0790 01979000
         BRWRITE 1                                                      01980000
*         PTERM=ON;                                             03S0791 01981000
         OI    PTERM,B'00000010'                                03S0791 01982000
*       END;                                                    03S0792 01983000
*     USEDSP=OFF;                 /* RESET SWITCH                    */ 01984000
@RC00766 NI    USEDSP,B'11111011'                               03S0793 01985000
*   END;                                                        03S0794 01986000
*/*                                                                  */ 01987000
*/* ISSUE EXTRA MESSAGE IF NEEDED                                    */ 01988000
*/*                                                                  */ 01989000
* IF PTERM=ON THEN                                              02S0795 01990000
@RF00762 TM    PTERM,B'00000010'                                02S0795 01991000
         BNO   @RF00795                                         02S0795 01992000
*   DO;                                                         02S0796 01993000
*     BUFFER(1:LENGTH(PTRMSG))=PTRMSG;                          02S0797 01994000
*                                                               02S0797 01995000
         L     @15,CURBUF(,COMBASE)                             02S0797 01996000
         MVC   BUFFER(22,@15),PTRMSG                            02S0797 01997000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0798 01998000
*       (BRWRITE 1);                                            02S0798 01999000
         BRWRITE 1                                                      02000000
*     PTERM=OFF;                                                02S0799 02001000
         NI    PTERM,B'11111101'                                02S0799 02002000
*   END;                                                        02S0800 02003000
*/*                                                                  */ 02004000
*/* IF NO JOBS COULD BE FOUND TO BE LISTED, ISSUE MESSAGE            */ 02005000
*/*                                                                  */ 02006000
* IF JOBLISTD=OFF THEN                                          02S0801 02007000
@RF00795 TM    JOBLISTD,B'00000001'                             02S0801 02008000
         BNZ   @RF00801                                         02S0801 02009000
*   DO;                                                         02S0802 02010000
*     BUFFER(1:LENGTH(NOJOBMSG))=NOJOBMSG;                      02S0803 02011000
*                                                               02S0803 02012000
         L     @15,CURBUF(,COMBASE)                             02S0803 02013000
         MVC   BUFFER(23,@15),NOJOBMSG                          02S0803 02014000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0804 02015000
*       (BRWRITE 1);                                            02S0804 02016000
         BRWRITE 1                                                      02017000
*   END;                                                        02S0805 02018000
* ELSE                                                          02S0806 02019000
*   JOBLISTD=OFF;                                               02S0806 02020000
         B     @RC00801                                         02S0806 02021000
@RF00801 NI    JOBLISTD,B'11111110'                             02S0806 02022000
*/*                                                                  */ 02023000
*/* CLEAN UP ASCBLIST AND SKIP A LINE                                */ 02024000
*/*                                                                  */ 02025000
* LISTSAVE=TCBLIST;                                             02S0807 02026000
@RC00801 L     LISTSAVE,TCBLIST(,COMBASE)                       02S0807 02027000
* TCBLIST=ASCBLIST;                                             02S0808 02028000
         L     @05,ASCBLIST                                     02S0808 02029000
         ST    @05,TCBLIST(,COMBASE)                            02S0808 02030000
* RFY R2 RSTD;                                                  02S0809 02031000
* R2=0;                                                         02S0810 02032000
         SLR   R2,R2                                            02S0810 02033000
* CALL ASCBREMV;                                                02S0811 02034000
         L     @15,ATCBREMV(,COMBASE)                           02S0811 02035000
         BALR  @14,@15                                          02S0811 02036000
* RFY R2 UNRSTD;                                                02S0812 02037000
* TCBLIST=LISTSAVE;                                             02S0813 02038000
         ST    LISTSAVE,TCBLIST(,COMBASE)                       02S0813 02039000
* ASCBLIST=0;                                                   02S0814 02040000
*                                                               02S0814 02041000
         SLR   @00,@00                                          02S0814 02042000
         ST    @00,ASCBLIST                                     02S0814 02043000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0815 02044000
*   (BRWRITE 1);                                                02S0815 02045000
         BRWRITE 1                                                      02046000
*/*                                                             02S0816 02047000
*         LIST ANY PROBLEMS FOUND IN THE DUMP                   02S0816 02048000
*                                                                    */ 02049000
* BUFTTL(1:LENGTH(PRBTTL))=PRBTTL;                              02S0816 02050000
*                                                               02S0816 02051000
         L     @15,CURBUF(,COMBASE)                             02S0816 02052000
         MVC   BUFTTL(12,@15),PRBTTL                            02S0816 02053000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  02S0817 02054000
*   (BRWRITE 2);                                                02S0817 02055000
         BRWRITE 2                                                      02056000
*/*                                                                  */ 02057000
*/* LOOP THRU PROBLIST ENTRIES                                       */ 02058000
*/*                                                                  */ 02059000
* DO WHILE PLSTF ^= 0;                                          02S0818 02060000
         B     @DE00818                                         02S0818 02061000
@DL00818 DS    0H                                               02S0819 02062000
*/*                                                                  */ 02063000
*/* DEQUEUE AN ENTRY AND CHECK PROBLEM TYPE                          */ 02064000
*/*                                                                  */ 02065000
*   PROBPTR=PLSTF;                                              02S0819 02066000
         L     PROBPTR,PLSTF                                    02S0819 02067000
*   PLSTF=PRNEXT;                                               02S0820 02068000
         L     @02,PRNEXT(,PROBPTR)                             02S0820 02069000
         ST    @02,PLSTF                                        02S0820 02070000
*/*                                                                  */ 02071000
*/* IF CPU PROBLEM, FORMAT AND PRINT LINE                            */ 02072000
*/*                                                                  */ 02073000
*   IF PRCPU=ON THEN                                            02S0821 02074000
         TM    PRCPU(PROBPTR),B'10000000'                       02S0821 02075000
         BNO   @RF00821                                         02S0821 02076000
*     DO;                                                       02S0822 02077000
*       FCPUP=ON;                                               02S0823 02078000
*                                                               02S0823 02079000
         OI    FCPUP,B'10000000'                                02S0823 02080000
*       PREG=ADDR(CPULNE);                                      02S0824 02081000
         LA    PREG,CPULNE                                      02S0824 02082000
*       CPULNEX=ADDR(PRCPUID);                                  02S0825 02083000
         LA    @02,PRCPUID(,PROBPTR)                            02S0825 02084000
         ST    @02,CPULNEX                                      02S0825 02085000
*       CALL FMTLINE;                                           02S0826 02086000
*                                                               02S0826 02087000
         L     @15,AFMTLINE(,COMBASE)                           02S0826 02088000
         BALR  @14,@15                                          02S0826 02089000
*       GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)            02S0827 02090000
*         (BRWRITE 1);                                          02S0827 02091000
         BRWRITE 1                                                      02092000
*     END;                                                      02S0828 02093000
*   ELSE                                                        02S0829 02094000
*     DO;                                                       02S0829 02095000
         B     @RC00821                                         02S0829 02096000
@RF00821 DS    0H                                               02S0830 02097000
*/*                                                                  */ 02098000
*/* CHECK OTHER PROBLEM TYPES                                        */ 02099000
*/*                                                                  */ 02100000
*/*                                                             03S0830 02101000
*         CHECK PROBLEM ENTRY                                   03S0830 02102000
*                                                                    */ 02103000
*/*                                                                  */ 02104000
*/* CHECK FOR ASCB PROBLEM                                           */ 02105000
*/*                                                                  */ 02106000
* IF PRASCB=ON THEN                                             03S0830 02107000
         TM    PRASCB(PROBPTR),B'00100000'                      03S0830 02108000
         BNO   @RF00830                                         03S0830 02109000
*   DO;                                                         03S0831 02110000
*/*                                                                  */ 02111000
*/* IF ASCB ABEND PROBLEM, FORMAT AND PRINT LINE                     */ 02112000
*/*                                                                  */ 02113000
*     IF PRABND=ON THEN                                         03S0832 02114000
         TM    PRABND(PROBPTR),B'10000000'                      03S0832 02115000
         BNO   @RF00832                                         03S0832 02116000
*       DO;                                                     03S0833 02117000
*         FASAB=ON;               /* INDICATE PROBLEM TYPE FOUND     */ 02118000
*                                                               03S0834 02119000
         OI    FASAB,B'01000000'                                03S0834 02120000
*         PREG=ADDR(ASCBABL);                                   03S0835 02121000
         LA    PREG,ASCBABL                                     03S0835 02122000
*         ASCBABLX=ADDR(PRTAA);                                 03S0836 02123000
         LA    @02,PRTAA(,PROBPTR)                              03S0836 02124000
         ST    @02,ASCBABLX                                     03S0836 02125000
*         CALL FMTLINE;                                         03S0837 02126000
*                                                               03S0837 02127000
         L     @15,AFMTLINE(,COMBASE)                           03S0837 02128000
         BALR  @14,@15                                          03S0837 02129000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0838 02130000
*           (BRWRITE 1);                                        03S0838 02131000
         BRWRITE 1                                                      02132000
*       END;                                                    03S0839 02133000
*     ELSE                                                      03S0840 02134000
*/*                                                                  */ 02135000
*/* IF ASCB NON-DISP PROBLEM, INDICATE PROBLEM FOUND, FORMAT & PRINT */ 02136000
*/*                                                                  */ 02137000
*       IF PRPND=ON THEN                                        03S0840 02138000
         B     @RC00832                                         03S0840 02139000
@RF00832 TM    PRPND(PROBPTR),B'00100000'                       03S0840 02140000
         BNO   @RF00840                                         03S0840 02141000
*         DO;                                                   03S0841 02142000
*           FASND=ON;                                           03S0842 02143000
*                                                               03S0842 02144000
         OI    FASND,B'00100000'                                03S0842 02145000
*           PREG=ADDR(ASCBNDL);                                 03S0843 02146000
         LA    PREG,ASCBNDL                                     03S0843 02147000
*           ASCBNDLX=ADDR(PRTAA);                               03S0844 02148000
         LA    @02,PRTAA(,PROBPTR)                              03S0844 02149000
         ST    @02,ASCBNDLX                                     03S0844 02150000
*           CALL FMTLINE;                                       03S0845 02151000
*                                                               03S0845 02152000
         L     @15,AFMTLINE(,COMBASE)                           03S0845 02153000
         BALR  @14,@15                                          03S0845 02154000
*           GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)        03S0846 02155000
*             (BRWRITE 1);                                      03S0846 02156000
         BRWRITE 1                                                      02157000
*         END;                                                  03S0847 02158000
*   END;                                                        03S0848 02159000
* ELSE                                                          03S0849 02160000
*/*                                                                  */ 02161000
*/* CHECK FOR TCB PROBLEM                                            */ 02162000
*/*                                                                  */ 02163000
*   IF PRTCB=ON THEN                                            03S0849 02164000
         B     @RC00830                                         03S0849 02165000
@RF00830 TM    PRTCB(PROBPTR),B'01000000'                       03S0849 02166000
         BNO   @RF00849                                         03S0849 02167000
*     DO;                                                       03S0850 02168000
*/*                                                                  */ 02169000
*/* IF TCB ABEND PROBLEM, INDICATE PROBLEM FOUND, FORMAT & PRINT LINE*/ 02170000
*/*                                                                  */ 02171000
*       IF PRABND=ON THEN                                       03S0851 02172000
         TM    PRABND(PROBPTR),B'10000000'                      03S0851 02173000
         BNO   @RF00851                                         03S0851 02174000
*         DO;                                                   03S0852 02175000
*           FTCAB=ON;                                           03S0853 02176000
*                                                               03S0853 02177000
         OI    FTCAB,B'00010000'                                03S0853 02178000
*           PREG=ADDR(TCBABL);                                  03S0854 02179000
         LA    PREG,TCBABL                                      03S0854 02180000
*           TCBABLX=ADDR(PRTAA);                                03S0855 02181000
         LA    @02,PRTAA(,PROBPTR)                              03S0855 02182000
         ST    @02,TCBABLX                                      03S0855 02183000
*           CALL FMTLINE;                                       03S0856 02184000
*                                                               03S0856 02185000
         L     @15,AFMTLINE(,COMBASE)                           03S0856 02186000
         BALR  @14,@15                                          03S0856 02187000
*           GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)        03S0857 02188000
*             (BRWRITE 1);                                      03S0857 02189000
         BRWRITE 1                                                      02190000
*         END;                                                  03S0858 02191000
*       ELSE                                                    03S0859 02192000
*/*                                                                  */ 02193000
*/* IF TCB TEMP NON-DISP PROBLEM, INDICATE PROBLEM FOUND, FORMAT AND */ 02194000
*/* PRINT LINE                                                       */ 02195000
*/*                                                                  */ 02196000
*         IF PRTND=ON THEN                                      03S0859 02197000
         B     @RC00851                                         03S0859 02198000
@RF00851 TM    PRTND(PROBPTR),B'01000000'                       03S0859 02199000
         BNO   @RF00859                                         03S0859 02200000
*           DO;                                                 03S0860 02201000
*             FTCND=ON;                                         03S0861 02202000
*                                                               03S0861 02203000
         OI    FTCND,B'00001000'                                03S0861 02204000
*             PREG=ADDR(TCBTNL);                                03S0862 02205000
         LA    PREG,TCBTNL                                      03S0862 02206000
*             TCBTNLX=ADDR(PRTAA);                              03S0863 02207000
         LA    @02,PRTAA(,PROBPTR)                              03S0863 02208000
         ST    @02,TCBTNLX                                      03S0863 02209000
*             CALL FMTLINE;                                     03S0864 02210000
*                                                               03S0864 02211000
         L     @15,AFMTLINE(,COMBASE)                           03S0864 02212000
         BALR  @14,@15                                          03S0864 02213000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      03S0865 02214000
*               (BRWRITE 1);                                    03S0865 02215000
         BRWRITE 1                                                      02216000
*           END;                                                03S0866 02217000
*         ELSE                                                  03S0867 02218000
*/*                                                                  */ 02219000
*/* IF TCB PERM NON-DISP PROBLEM, INDICATE PROBLEM FOUND, FORMAT AND */ 02220000
*/* PRINT LINE                                                       */ 02221000
*/*                                                                  */ 02222000
*           IF PRPND=ON THEN                                    03S0867 02223000
         B     @RC00859                                         03S0867 02224000
@RF00859 TM    PRPND(PROBPTR),B'00100000'                       03S0867 02225000
         BNO   @RF00867                                         03S0867 02226000
*             DO;                                               03S0868 02227000
*               FTCND=ON;                                       03S0869 02228000
*                                                               03S0869 02229000
         OI    FTCND,B'00001000'                                03S0869 02230000
*               PREG=ADDR(TCBPNL);                              03S0870 02231000
         LA    PREG,TCBPNL                                      03S0870 02232000
*               TCBPNLX=ADDR(PRTAA);                            03S0871 02233000
         LA    @02,PRTAA(,PROBPTR)                              03S0871 02234000
         ST    @02,TCBPNLX                                      03S0871 02235000
*               CALL FMTLINE;                                   03S0872 02236000
*                                                               03S0872 02237000
         L     @15,AFMTLINE(,COMBASE)                           03S0872 02238000
         BALR  @14,@15                                          03S0872 02239000
*               GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)    03S0873 02240000
*                 (BRWRITE 1);                                  03S0873 02241000
         BRWRITE 1                                                      02242000
*             END;                                              03S0874 02243000
*     END;                                                      03S0875 02244000
*   ELSE                                                        03S0876 02245000
*/*                                                                  */ 02246000
*/* IF SYSTEM NON-DISP PROBLEM, PRINT LINE AND INDICATE ASCB & TCB   */ 02247000
*/* NON-DISP PROBLEMS WERE FOUND                                     */ 02248000
*/*                                                                  */ 02249000
*     IF PRSYSND=ON THEN                                        03S0876 02250000
         B     @RC00849                                         03S0876 02251000
@RF00849 TM    PRSYSND(PROBPTR),B'00010000'                     03S0876 02252000
         BNO   @RF00876                                         03S0876 02253000
*       DO;                                                     03S0877 02254000
*         BUFFER(1:LENGTH(SYSNDMSG))=SYSNDMSG;                  03S0878 02255000
*                                                               03S0878 02256000
         L     @02,CURBUF(,COMBASE)                             03S0878 02257000
         MVC   BUFFER(73,@02),SYSNDMSG                          03S0878 02258000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S0879 02259000
*           (BRWRITE 1);                                        03S0879 02260000
         BRWRITE 1                                                      02261000
*         FASND=ON;                                             03S0880 02262000
*         FTCND=ON;                                             03S0881 02263000
         OI    FASND,B'00101000'                                03S0881 02264000
*       END;                                                    03S0882 02265000
*     END;                                                      02S0883 02266000
@RF00876 DS    0H                                               02S0883 02267000
@RC00849 DS    0H                                               02S0883 02268000
@RC00830 DS    0H                                               02S0884 02269000
*/*                                                                  */ 02270000
*/* FREE ENTRY                                                       */ 02271000
*/*                                                                  */ 02272000
*   RFY R0 RSTD;                                                02S0884 02273000
@RC00821 DS    0H                                               02S0885 02274000
*   R0=LENGTH(PROBLIST)/8;                                 /*@YM06931*/ 02275000
         LA    R0,56                                            02S0885 02276000
*   R1=PROBPTR;                                                 02S0886 02277000
         LR    R1,PROBPTR                                       02S0886 02278000
*   GEN (FREEMAIN R,LV=(0),A=(1));                              02S0887 02279000
         FREEMAIN R,LV=(0),A=(1)                                        02280000
*   RFY R0 UNRSTD;                                              02S0888 02281000
* END;                                                          02S0889 02282000
@DE00818 L     @00,PLSTF                                        02S0889 02283000
         LTR   @00,@00                                          02S0889 02284000
         BNZ   @DL00818                                         02S0889 02285000
*/*                                                                  */ 02286000
*/* CHECK TO SEE IF ANY PROBLEM TYPE WAS NOT ENCOUNTERED, AND ISSUE  */ 02287000
*/* THE APPROPRIATE MESSAGES                                         */ 02288000
*/*                                                                  */ 02289000
* IF FCPUP=OFF THEN                                             02S0890 02290000
         TM    FCPUP,B'10000000'                                02S0890 02291000
         BNZ   @RF00890                                         02S0890 02292000
*   DO;                                                         02S0891 02293000
*     BUFFER(1:LENGTH(NOCPUP))=NOCPUP;                          02S0892 02294000
*                                                               02S0892 02295000
         L     @15,CURBUF(,COMBASE)                             02S0892 02296000
         MVC   BUFFER(28,@15),NOCPUP                            02S0892 02297000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0893 02298000
*       (BRWRITE 1);                                            02S0893 02299000
         BRWRITE 1                                                      02300000
*   END;                                                        02S0894 02301000
* IF FASAB=OFF THEN                                             02S0895 02302000
@RF00890 TM    FASAB,B'01000000'                                02S0895 02303000
         BNZ   @RF00895                                         02S0895 02304000
*   DO;                                                         02S0896 02305000
*     BUFFER(1:LENGTH(NOASAB))=NOASAB;                          02S0897 02306000
*                                                               02S0897 02307000
         L     @15,CURBUF(,COMBASE)                             02S0897 02308000
         MVC   BUFFER(28,@15),NOASAB                            02S0897 02309000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0898 02310000
*       (BRWRITE 1);                                            02S0898 02311000
         BRWRITE 1                                                      02312000
*   END;                                                        02S0899 02313000
* IF FASND=OFF THEN                                             02S0900 02314000
@RF00895 TM    FASND,B'00100000'                                02S0900 02315000
         BNZ   @RF00900                                         02S0900 02316000
*   DO;                                                         02S0901 02317000
*     BUFFER(1:LENGTH(NOASND))=NOASND;                          02S0902 02318000
*                                                               02S0902 02319000
         L     @15,CURBUF(,COMBASE)                             02S0902 02320000
         MVC   BUFFER(34,@15),NOASND                            02S0902 02321000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0903 02322000
*       (BRWRITE 1);                                            02S0903 02323000
         BRWRITE 1                                                      02324000
*   END;                                                        02S0904 02325000
* IF FTCAB=OFF THEN                                             02S0905 02326000
@RF00900 TM    FTCAB,B'00010000'                                02S0905 02327000
         BNZ   @RF00905                                         02S0905 02328000
*   DO;                                                         02S0906 02329000
*     BUFFER(1:LENGTH(NOTCAB))=NOTCAB;                          02S0907 02330000
*                                                               02S0907 02331000
         L     @15,CURBUF(,COMBASE)                             02S0907 02332000
         MVC   BUFFER(39,@15),NOTCAB                            02S0907 02333000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0908 02334000
*       (BRWRITE 1);                                            02S0908 02335000
         BRWRITE 1                                                      02336000
*   END;                                                        02S0909 02337000
* IF FTCND=OFF THEN                                             02S0910 02338000
@RF00905 TM    FTCND,B'00001000'                                02S0910 02339000
         BNZ   @RF00910                                         02S0910 02340000
*   DO;                                                         02S0911 02341000
*     BUFFER(1:LENGTH(NOTCND))=NOTCND;                          02S0912 02342000
*                                                               02S0912 02343000
         L     @15,CURBUF(,COMBASE)                             02S0912 02344000
         MVC   BUFFER(33,@15),NOTCND                            02S0912 02345000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S0913 02346000
*       (BRWRITE 1);                                            02S0913 02347000
         BRWRITE 1                                                      02348000
*   END;                                                        02S0914 02349000
*/*                                                                  */ 02350000
*/* RESET SWITCHES USED FOR PROBLEMS, AND RE-INITIALIZE END POINTER  */ 02351000
*/* FOR PROBLIST QUEUEING                                            */ 02352000
*/*                                                                  */ 02353000
* FCPUP=OFF;                                                    02S0915 02354000
@RF00910 DS    0H                                               02S0916 02355000
* FASAB=OFF;                                                    02S0916 02356000
* FASND=OFF;                                                    02S0917 02357000
* FTCAB=OFF;                                                    02S0918 02358000
* FTCND=OFF;                                                    02S0919 02359000
         NI    FCPUP,B'00000111'                                02S0919 02360000
* PLSTL=ADDR(PLSTF);                                            02S0920 02361000
         LA    @00,PLSTF                                        02S0920 02362000
         ST    @00,PLSTL                                        02S0920 02363000
*   END;                                                        01S0921 02364000
*/*                                                             01S0922 02365000
*                   IF THE CVT IS NOT IN THE DUMP,              01S0922 02366000
*                   ISSUE A MESSAGE                             01S0922 02367000
*                                                                    */ 02368000
* ELSE                                                          01S0922 02369000
*   DO;                                                         01S0922 02370000
         B     @RC00257                                         01S0922 02371000
@RF00257 DS    0H                                               01S0923 02372000
*     BUFFER(1:LENGTH(NOCVTMSG))=NOCVTMSG;                      01S0923 02373000
*                                                               01S0923 02374000
         L     @15,CURBUF(,COMBASE)                             01S0923 02375000
         MVC   BUFFER(20,@15),NOCVTMSG                          01S0923 02376000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              01S0924 02377000
*       (BRWRITE 1);                                            01S0924 02378000
         BRWRITE 1                                                      02379000
*     BUFFER(1:LENGTH(SKIPMSG))=SKIPMSG;                        01S0925 02380000
*                                                               01S0925 02381000
         L     @15,CURBUF(,COMBASE)                             01S0925 02382000
         MVC   BUFFER(23,@15),SKIPMSG                           01S0925 02383000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              01S0926 02384000
*       (BRWRITE 1);                                            01S0926 02385000
         BRWRITE 1                                                      02386000
*   END;                                                        01S0927 02387000
*/*                                                             01S0928 02388000
*                   TERMINATION SECTION                         01S0928 02389000
*                                                                    */ 02390000
*/*                                                                  */ 02391000
*/* RESTORE PREVIOUS STOP AND ERROR ROUTINE SDDRESSES                */ 02392000
*/*                                                                  */ 02393000
* STOPEXIT=SAVSTOP;                                             01S0928 02394000
@RC00257 L     @00,SAVSTOP                                      01S0928 02395000
         ST    @00,STOPEXIT(,COMBASE)                           01S0928 02396000
* ERRADDR=SAVERR;                                               01S0929 02397000
         L     @00,SAVERR                                       01S0929 02398000
         ST    @00,ERRADDR(,COMBASE)                            01S0929 02399000
* RETURN;                                                       01S0930 02400000
@EL00001 L     @13,4(,@13)                                      01S0930 02401000
@EF00001 DS    0H                                               01S0930 02402000
@ER00001 LM    @14,@12,12(@13)                                  01S0930 02403000
         BR    @14                                              01S0930 02404000
*/*                                                             01S0931 02405000
*                   ROUTINE TO HANDLE BRREAD ERRORS             01S0931 02406000
*                                                                    */ 02407000
*SUMERR: GEN REFS(SAVER13);                                     01S0931 02408000
SUMERR   DS    0H                                               01S0931 02409000
         DROP  11,10,9,8                                                02410000
         USING *,15                                                     02411000
         L     13,SAVER13               GET ADDRESS OF SAVE AREA        02412000
         LM    14,12,12(13)             RESTORE REGISTERS               02413000
         DROP  15                                                       02414000
         USING @PSTART,@11                                              02415000
         USING @PSTART+4095,@10                                         02416000
         USING @PSTART+8190,@09                                         02417000
         USING @PSTART+12285,@08                                        02418000
* READERR=ON;                     /* INDICATE ERROR OCCURRED         */ 02419000
         OI    READERR,B'10000000'                              01S0932 02420000
* RFY R14 RSTD;                                                 01S0933 02421000
* GO TO BRRDERRT;                 /* RETURN TO MAINLINE OF PROGRAM   */ 02422000
         BR    R14                                              01S0934 02423000
* RFY R14 UNRSTD;                                               01S0935 02424000
*/*                                                             01S0936 02425000
*                   ROUTINE TO CLEAN UP AFTER OPERATOR          01S0936 02426000
*                   REQUESTS 'STOP'                             01S0936 02427000
*                                                                    */ 02428000
*SUMSTOP: GEN CODE DEFS(SAVER13);                               01S0936 02429000
SUMSTOP  DS    0H                                               01S0936 02430000
         DROP  11,10,9,8                                                02431000
         USING *,15                                                     02432000
         L     13,SAVER13               GET ADDRESS OF SAVE AREA        02433000
         LM    14,12,12(13)             RESTORE REGISTERS               02434000
         DROP  15                                                       02435000
         USING @PSTART,@11                                              02436000
         USING @PSTART+4095,@10                                         02437000
         USING @PSTART+8190,@09                                         02438000
         USING @PSTART+12285,@08                                        02439000
         B     SUMSTOP1                                                 02440000
*/* the followING FIELD IS DEFINED AT THIS POINT TO ALLOW REFERENCES */ 02441000
*/* from the sTOP AND ERROR ROUTINES USING ONLY 1 BASE REGISTER      */ 02442000
SAVER13  DC    F'0'                     SAVE AREA FOR R13               02443000
SUMSTOP1 EQU   *                                                        02444000
*/*                                                                  */ 02445000
*/* CLEAN UP PROBLIST AND POINTERS                                   */ 02446000
*/*                                                                  */ 02447000
* DO WHILE PLSTF ^= 0;                                          01S0937 02448000
         B     @DE00937                                         01S0937 02449000
@DL00937 DS    0H                                               01S0938 02450000
*   PROBPTR=PLSTF;                                              01S0938 02451000
         L     PROBPTR,PLSTF                                    01S0938 02452000
*   PLSTF=PRNEXT;                                               01S0939 02453000
         L     @02,PRNEXT(,PROBPTR)                             01S0939 02454000
         ST    @02,PLSTF                                        01S0939 02455000
*   RFY R0 RSTD;                                                01S0940 02456000
*   R0=LENGTH(PROBLIST)/8;                                 /*@YM06931*/ 02457000
         LA    R0,56                                            01S0941 02458000
*   R1=PROBPTR;                                                 01S0942 02459000
         LR    R1,PROBPTR                                       01S0942 02460000
*   GEN (FREEMAIN R,LV=(0),A=(1));                              01S0943 02461000
         FREEMAIN R,LV=(0),A=(1)                                        02462000
*   RFY R0 UNRSTD;                                              01S0944 02463000
* END;                                                          01S0945 02464000
@DE00937 SLR   @15,@15                                          01S0945 02465000
         C     @15,PLSTF                                        01S0945 02466000
         BNE   @DL00937                                         01S0945 02467000
* PLSTL=ADDR(PLSTF);                                            01S0946 02468000
         LA    @00,PLSTF                                        01S0946 02469000
         ST    @00,PLSTL                                        01S0946 02470000
*/*                                                                  */ 02471000
*/* CLEAN UP CURRLIST AND POINTER                                    */ 02472000
*/*                                                                  */ 02473000
* IF CLSTPTR ^= 0 THEN                                          01S0947 02474000
         L     @14,CLSTPTR                                      01S0947 02475000
         CR    @14,@15                                          01S0947 02476000
         BE    @RF00947                                         01S0947 02477000
*   DO;                                                         01S0948 02478000
*     RFY R0 RSTD;                                              01S0949 02479000
*     R0=LENGTH(CURRLIST)/8;                               /*@YM06931*/ 02480000
         LA    R0,192                                           01S0950 02481000
*     R1=CLSTPTR;                                               01S0951 02482000
         LR    R1,@14                                           01S0951 02483000
*     GEN (FREEMAIN R,LV=(0),A=(1));                            01S0952 02484000
         FREEMAIN R,LV=(0),A=(1)                                        02485000
*     RFY R0 UNRSTD;                                            01S0953 02486000
*     CLSTPTR=0;                                                01S0954 02487000
         SLR   @00,@00                                          01S0954 02488000
         ST    @00,CLSTPTR                                      01S0954 02489000
*   END;                                                        01S0955 02490000
*/*                                                                  */ 02491000
*/* CLEAN UP ASCBLIST AND STCBLIST                                   */ 02492000
*/*                                                                  */ 02493000
* LISTSAVE=TCBLIST;                                             01S0956 02494000
@RF00947 L     LISTSAVE,TCBLIST(,COMBASE)                       01S0956 02495000
* TCBLIST=ASCBLIST;                                             01S0957 02496000
         L     @05,ASCBLIST                                     01S0957 02497000
         ST    @05,TCBLIST(,COMBASE)                            01S0957 02498000
* RFY R2 RSTD;                                                  01S0958 02499000
* R2=0;                                                         01S0959 02500000
         SLR   R2,R2                                            01S0959 02501000
* CALL ASCBREMV;                                                01S0960 02502000
         L     @15,ATCBREMV(,COMBASE)                           01S0960 02503000
         BALR  @14,@15                                          01S0960 02504000
* TCBLIST=STCBLIST;                                             01S0961 02505000
         L     @05,STCBLIST                                     01S0961 02506000
         ST    @05,TCBLIST(,COMBASE)                            01S0961 02507000
* R2=0;                                                         01S0962 02508000
         SLR   R2,R2                                            01S0962 02509000
* CALL TCBREMV;                                                 01S0963 02510000
         L     @15,ATCBREMV(,COMBASE)                           01S0963 02511000
         BALR  @14,@15                                          01S0963 02512000
* RFY R2 UNRSTD;                                                01S0964 02513000
* ASCBLIST=0;                                                   01S0965 02514000
         SLR   @05,@05                                          01S0965 02515000
         ST    @05,ASCBLIST                                     01S0965 02516000
* STCBLIST=0;                                                   01S0966 02517000
         ST    @05,STCBLIST                                     01S0966 02518000
* TCBLIST=LISTSAVE;                                             01S0967 02519000
         ST    LISTSAVE,TCBLIST(,COMBASE)                       01S0967 02520000
*/*                                                                  */ 02521000
*/* RESET ALL SWITCHES, DEACTIVATE ERROR AND STOP ROUTINES           */ 02522000
*/*                                                                  */ 02523000
* SWITCHES=''B;                                                 01S0968 02524000
         XC    SWITCHES(3),SWITCHES                             01S0968 02525000
* ERRADDR=SAVERR;                                               01S0969 02526000
         L     @00,SAVERR                                       01S0969 02527000
         ST    @00,ERRADDR(,COMBASE)                            01S0969 02528000
* STOPEXIT=SAVSTOP;                                             01S0970 02529000
         L     @15,SAVSTOP                                      01S0970 02530000
         ST    @15,STOPEXIT(,COMBASE)                           01S0970 02531000
*/*                                                                  */ 02532000
*/* PERCOLATE TO NEXT STOP ROUTINE                                   */ 02533000
*/*                                                                  */ 02534000
* RFY R15 RSTD;                                                 01S0971 02535000
* R15=SAVSTOP;                                                  01S0972 02536000
         L     @14,SAVSTOP                                      01S0972 02537000
         LR    R15,@14                                          01S0972 02538000
* GO TO NEXTSTOP;                                               01S0973 02539000
         BR    R15                                              01S0973 02540000
* RFY R15 UNRSTD;                                               01S0974 02541000
*/*                                                             01S0975 02542000
*         SUBROUTINE TO PROCESS A PSA AND WRITE A CPU LINE      01S0975 02543000
*                                                                    */ 02544000
*DOPSA: PROC;                     /* MAIN INPUT IS PSAPTR            */ 02545000
DOPSA    STM   @14,@12,@SA00002                                 01S0975 02546000
*/*                                                                  */ 02547000
*/* VALIDITY CHECK THE PSA                                           */ 02548000
*/*                                                                  */ 02549000
*                                                               01S0976 02550000
*    PREG=ADDR(PSAPSA);                                         01S0976 02551000
         L     PREG,PSAPTR                                      01S0976 02552000
         LA    PREG,PSAPSA(,PREG)                               01S0976 02553000
*    GEN REFS(BRRDDATA)SETS(PREG,READERR)                       01S0977 02554000
*        FLOWS(SUMERR)                                          01S0977 02555000
*      (BRREAD (PREG));                                    /* @YM04507* 02556000
         BRREAD (PREG)                                                  02557000
* IF READERR=OFF THEN                                           01S0978 02558000
         TM    READERR,B'10000000'                              01S0978 02559000
         BNZ   @RF00978                                         01S0978 02560000
*   DO;                                                         01S0979 02561000
*     IF READALL ^= 'PSA ' THEN                                 01S0980 02562000
         CLC   READALL(4,PREG),@CC03282                         01S0980 02563000
         BE    @RF00980                                         01S0980 02564000
*       PSAVERR=ON;               /* PSA FAILED VALIDITY CHECK       */ 02565000
         OI    PSAVERR,B'00000010'                              01S0981 02566000
*/*                                                                  */ 02567000
*/* GET CPU ID                                                       */ 02568000
*/*                                                                  */ 02569000
*                                                               01S0982 02570000
*     PREG=ADDR(PSACPUPA);                                      01S0982 02571000
@RF00980 L     PREG,PSAPTR                                      01S0982 02572000
         LA    PREG,PSACPUPA(,PREG)                             01S0982 02573000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      01S0983 02574000
*         FLOWS(SUMERR)                                         01S0983 02575000
*       (BRREAD (PREG));                                        01S0983 02576000
         BRREAD (PREG)                                                  02577000
*/*                                                                  */ 02578000
*/* READERR DOES NOT NEED TO BE CHECKED - PSA IS IN A BUFFER         */ 02579000
*/*                                                                  */ 02580000
*     PCPUID=RDHWORD;                                           01S0984 02581000
         MVC   PCPUID(2),RDHWORD(PREG)                          01S0984 02582000
*/*                                                                  */ 02583000
*/* CHECK FOR ANY MACHINE CHECKS BEING PROCESSED                     */ 02584000
*/*                                                                  */ 02585000
*                                                               01S0985 02586000
*     PREG=ADDR(PSAMCHFL);                                      01S0985 02587000
         L     PREG,PSAPTR                                      01S0985 02588000
         LA    PREG,PSAMCHFL(,PREG)                             01S0985 02589000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      01S0986 02590000
*         FLOWS(SUMERR)                                         01S0986 02591000
*       (BRREAD (PREG));                                        01S0986 02592000
         BRREAD (PREG)                                                  02593000
*     IF RDBYTE ^= 0 THEN                                       01S0987 02594000
         CLI   RDBYTE(PREG),0                                   01S0987 02595000
         BE    @RF00987                                         01S0987 02596000
*       DO;                                                     01S0988 02597000
*/*                                                                  */ 02598000
*/* MCH ACTIVE, MAKE ENTRY IN PROBLIST                               */ 02599000
*/*                                                                  */ 02600000
*         CALL GETPRNTY;                                        01S0989 02601000
         BAL   @14,GETPRNTY                                     01S0989 02602000
*         PROBPTR=PLSTL;                                        01S0990 02603000
         L     PROBPTR,PLSTL                                    01S0990 02604000
*         PRCPU=ON;                                             01S0991 02605000
         OI    PRCPU(PROBPTR),B'10000000'                       01S0991 02606000
*         PRCPUID=PCPUID;                                       01S0992 02607000
         MVC   PRCPUID(2,PROBPTR),PCPUID                        01S0992 02608000
*       END;                                                    01S0993 02609000
*/*                                                                  */ 02610000
*/* GET LCCA ADDRESS, CHECK CPU MODE                                 */ 02611000
*/*                                                                  */ 02612000
*                                                               01S0994 02613000
*     PREG=ADDR(PSALCCAV);                                      01S0994 02614000
@RF00987 L     PREG,PSAPTR                                      01S0994 02615000
         LA    PREG,PSALCCAV(,PREG)                             01S0994 02616000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      01S0995 02617000
*         FLOWS(SUMERR)                                         01S0995 02618000
*       (BRREAD (PREG));                                        01S0995 02619000
         BRREAD (PREG)                                                  02620000
*     LCCAPTR=RDPTR;                                            01S0996 02621000
         L     @06,RDPTR-1(,PREG)                               01S0996 02622000
         LA    @06,0(,@06)                                      01S0996 02623000
         ST    @06,LCCAPTR                                      01S0996 02624000
*     IF LCCAPTR=0 THEN                                         01S0997 02625000
         LTR   @06,@06                                          01S0997 02626000
         BNZ   @RF00997                                         01S0997 02627000
*       MODESAVE=LCCA0MSG;                                      01S0998 02628000
         MVI   MODESAVE+44,C' '                                 01S0998 02629000
         MVC   MODESAVE+45(19),MODESAVE+44                      01S0998 02630000
         MVC   MODESAVE(44),LCCA0MSG                            01S0998 02631000
*     ELSE                                                      01S0999 02632000
*       DO;                                                     01S0999 02633000
         B     @RC00997                                         01S0999 02634000
@RF00997 DS    0H                                               01S1000 02635000
*/*                                                             02S1000 02636000
*         GET THE CPU MODE FROM THE LCCA                        02S1000 02637000
*                                                                    */ 02638000
*/*                                                                  */ 02639000
*/* VALIDITY CHECK THE LCCA, INDICATE IF IT FAILS                    */ 02640000
*/*                                                                  */ 02641000
*                                                               02S1000 02642000
* PREG=ADDR(LCCALCCA);                                          02S1000 02643000
         L     PREG,LCCAPTR                                     02S1000 02644000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S1001 02645000
*     FLOWS(SUMERR)                                             02S1001 02646000
*   (BRREAD (PREG));                                            02S1001 02647000
         BRREAD (PREG)                                                  02648000
* IF READERR=OFF THEN                                           02S1002 02649000
         TM    READERR,B'10000000'                              02S1002 02650000
         BNZ   @RF01002                                         02S1002 02651000
*   DO;                                                         02S1003 02652000
*     IF READALL ^= 'LCCA' THEN                                 02S1004 02653000
         CLC   READALL(4,PREG),@CC03283                         02S1004 02654000
         BE    @RF01004                                         02S1004 02655000
*       LCCAVERR=ON;                                            02S1005 02656000
         OI    LCCAVERR,B'00000001'                             02S1005 02657000
*   END;                                                        02S1006 02658000
* ELSE                                                          02S1007 02659000
*   READERR=OFF;                                                02S1007 02660000
         B     @RC01002                                         02S1007 02661000
@RF01002 NI    READERR,B'01111111'                              02S1007 02662000
*/*                                                                  */ 02663000
*/* READ MODE BITS FROM DUMP                                         */ 02664000
*/*                                                                  */ 02665000
*                                                               02S1008 02666000
* PREG=ADDR(LCCADSF2);                                          02S1008 02667000
@RC01002 L     PREG,LCCAPTR                                     02S1008 02668000
         LA    PREG,LCCADSF2(,PREG)                             02S1008 02669000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S1009 02670000
*     FLOWS(SUMERR)                                             02S1009 02671000
*   (BRREAD (PREG));                                            02S1009 02672000
         BRREAD (PREG)                                                  02673000
* IF READERR=OFF THEN                                           02S1010 02674000
         TM    READERR,B'10000000'                              02S1010 02675000
         BNZ   @RF01010                                         02S1010 02676000
*   DO;                                                         02S1011 02677000
*/*                                                                  */ 02678000
*/* IF GSRB MODE THEN SET UP MESSAGE IN MODESAVE                     */ 02679000
*/*                                                                  */ 02680000
*     IF RDBYTE(2)=ON THEN                                      02S1012 02681000
         TM    RDBYTE(PREG),B'01000000'                         02S1012 02682000
         BNO   @RF01012                                         02S1012 02683000
*       MODESAVE=GSRBMODE;                                      02S1013 02684000
         MVI   MODESAVE+27,C' '                                 02S1013 02685000
         MVC   MODESAVE+28(36),MODESAVE+27                      02S1013 02686000
         MVC   MODESAVE(27),GSRBMODE                            02S1013 02687000
*     ELSE                                                      02S1014 02688000
*/*                                                                  */ 02689000
*/* IF SRB MODE, SET UP MSG                                          */ 02690000
*/*                                                                  */ 02691000
*       IF RDBYTE(1)=ON THEN                                    02S1014 02692000
         B     @RC01012                                         02S1014 02693000
@RF01012 TM    RDBYTE(PREG),B'10000000'                         02S1014 02694000
         BNO   @RF01014                                         02S1014 02695000
*         MODESAVE=SRBMODE;                                     02S1015 02696000
         MVI   MODESAVE+20,C' '                                 02S1015 02697000
         MVC   MODESAVE+21(43),MODESAVE+20                      02S1015 02698000
         MVC   MODESAVE(20),SRBMODE                             02S1015 02699000
*       ELSE                                                    02S1016 02700000
*/*                                                                  */ 02701000
*/* NONE OF THE ABOVE, MUST BE NORMAL MODE                           */ 02702000
*/*                                                                  */ 02703000
*         MODESAVE='NORMAL MODE';                               02S1016 02704000
         B     @RC01014                                         02S1016 02705000
@RF01014 MVI   MODESAVE+11,C' '                                 02S1016 02706000
         MVC   MODESAVE+12(52),MODESAVE+11                      02S1016 02707000
         MVC   MODESAVE(11),@CC03284                            02S1016 02708000
*   END;                                                        02S1017 02709000
* ELSE                                                          02S1018 02710000
*   DO;                                                         02S1018 02711000
         B     @RC01010                                         02S1018 02712000
@RF01010 DS    0H                                               02S1019 02713000
*/*                                                                  */ 02714000
*/* ERROR READING LCCADSF2 FOR MODE - SET UP MESSAGE IN MODESAVE     */ 02715000
*/*                                                                  */ 02716000
*                                                               02S1019 02717000
*     RFY R4 RSTD;                                              02S1019 02718000
*     R4=ADDR(LCCAERMA);                                        02S1020 02719000
         LA    R4,LCCAERMA                                      02S1020 02720000
*     CALL ADRCNVT;                                             02S1021 02721000
         L     @15,AADRCNVT(,COMBASE)                           02S1021 02722000
         BALR  @14,@15                                          02S1021 02723000
*     RFY R4 UNRSTD;                                            02S1022 02724000
*     MODESAVE=LCCAERMG;                                        02S1023 02725000
         MVI   MODESAVE+63,C' '                                 02S1023 02726000
         MVC   MODESAVE(63),LCCAERMG                            02S1023 02727000
*     READERR=OFF;                                              02S1024 02728000
         NI    READERR,B'01111111'                              02S1024 02729000
*   END;                                                        02S1025 02730000
*       END;                                                    01S1026 02731000
@RC01010 DS    0H                                               01S1027 02732000
*/*                                                             02S1027 02733000
*         FILL AN ENTRY IN CURRLIST                             02S1027 02734000
*                                                                    */ 02735000
* CURCPUID(PCCACTR)=PCPUID;       /* PUT CPU ID IN ENTRY             */ 02736000
@RC00997 LR    @06,PCCACTR                                      02S1027 02737000
         MH    @06,@CH00753                                     02S1027 02738000
         L     @15,CLSTPTR                                      02S1027 02739000
         ALR   @15,@06                                          02S1027 02740000
         AL    @15,@CF03376                                     02S1027 02741000
         MVC   CURCPUID(2,@15),PCPUID                           02S1027 02742000
*/*                                                                  */ 02743000
*/* GET CURRENT TCB FOR THIS CPU, PUT IT IN ENTRY                    */ 02744000
*/*                                                                  */ 02745000
*                                                               02S1028 02746000
* PREG=ADDR(PSATOLD);                                           02S1028 02747000
         L     PREG,PSAPTR                                      02S1028 02748000
         LA    PREG,PSATOLD(,PREG)                              02S1028 02749000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S1029 02750000
*     FLOWS(SUMERR)                                             02S1029 02751000
*   (BRREAD (PREG));                                            02S1029 02752000
         BRREAD (PREG)                                                  02753000
* IF READERR=OFF THEN                                           02S1030 02754000
         TM    READERR,B'10000000'                              02S1030 02755000
         BNZ   @RF01030                                         02S1030 02756000
*   DO;                                                         02S1031 02757000
*     CURTCBA(PCCACTR)=RDPTR;                                   02S1032 02758000
         LR    @06,PCCACTR                                      02S1032 02759000
         MH    @06,@CH00753                                     02S1032 02760000
         L     @00,RDPTR-1(,PREG)                               02S1032 02761000
         ICM   @00,8,@CB02300                                   02S1032 02762000
         L     @15,CLSTPTR                                      02S1032 02763000
         AL    @15,@CF03369                                     02S1032 02764000
         ST    @00,CURTCBA-4(@06,@15)                           02S1032 02765000
*/*                                                                  */ 02766000
*/* GET CURRENT ASCB, PUT IN ENTRY                                   */ 02767000
*/*                                                                  */ 02768000
*                                                               02S1033 02769000
*     PREG=ADDR(PSAAOLD);                                       02S1033 02770000
         L     PREG,PSAPTR                                      02S1033 02771000
         LA    PREG,PSAAOLD(,PREG)                              02S1033 02772000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      02S1034 02773000
*         FLOWS(SUMERR)                                         02S1034 02774000
*       (BRREAD (PREG));                                        02S1034 02775000
         BRREAD (PREG)                                                  02776000
*     CURASCA(PCCACTR)=RDPTR;                                   02S1035 02777000
         LR    @06,PCCACTR                                      02S1035 02778000
         MH    @06,@CH00753                                     02S1035 02779000
         L     @00,RDPTR-1(,PREG)                               02S1035 02780000
         ICM   @00,8,@CB02300                                   02S1035 02781000
         L     @15,CLSTPTR                                      02S1035 02782000
         AL    @15,@CF03361                                     02S1035 02783000
         ST    @00,CURASCA-8(@06,@15)                           02S1035 02784000
*   END;                                                        02S1036 02785000
* ELSE                                                          02S1037 02786000
*/*                                                                  */ 02787000
*/* ERROR READING PSA - RESET SWITCH AND LEAVE ENTRY AS IS           */ 02788000
*/*                                                                  */ 02789000
*   READERR=OFF;                                                02S1037 02790000
         B     @RC01030                                         02S1037 02791000
@RF01030 NI    READERR,B'01111111'                              02S1037 02792000
*/*                                                                  */ 02793000
*/* FORMAT AND PRINT A CPU LINE                                      */ 02794000
*/*                                                                  */ 02795000
*                                                               01S1038 02796000
*     UNPK(BUFCPUP,PCPUID1);                                    01S1038 02797000
@RC01030 L     @06,CURBUF(,COMBASE)                             01S1038 02798000
         UNPK  BUFCPUP(5,@06),PCPUID1(3)                        01S1038 02799000
*     TR(BUFCPUP,EBCTABL);                                      01S1039 02800000
         TR    BUFCPUP(5,@06),EBCTABL(COMBASE)                  01S1039 02801000
*     BUFCPUP(LENGTH(BUFCPUP)) = ' ';                           01S1040 02802000
         MVI   BUFCPUP+4(@06),C' '                              01S1040 02803000
*     BUFFER(1:3)='CPU';                                        01S1041 02804000
         MVC   BUFFER(3,@06),@CC03286                           01S1041 02805000
*     BUFFER(10)='-';                                           01S1042 02806000
         MVI   BUFFER+9(@06),C'-'                               01S1042 02807000
*     BUFFER(12:LENGTH(MODESAVE)+11)=MODESAVE;                  01S1043 02808000
*                                                               01S1043 02809000
         MVC   BUFFER+11(64,@06),MODESAVE                       01S1043 02810000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              01S1044 02811000
*       (BRWRITE 1);                                            01S1044 02812000
         BRWRITE 1                                                      02813000
*   END;                                                        01S1045 02814000
* ELSE                                                          01S1046 02815000
*   DO;                                                         01S1046 02816000
         B     @RC00978                                         01S1046 02817000
@RF00978 DS    0H                                               01S1047 02818000
*/*                                                                  */ 02819000
*/* ERROR READING PSA - BUILD & ISSUE 'CPU ENTRY SKIPPED' MESSAGE    */ 02820000
*/*                                                                  */ 02821000
*     WORKPTR=PSAPTR;                                           01S1047 02822000
         L     @06,PSAPTR                                       01S1047 02823000
         ST    @06,WORKPTR                                      01S1047 02824000
*     PREG=ADDR(WORKPTR);                                       01S1048 02825000
*                                                               01S1048 02826000
         LA    PREG,WORKPTR                                     01S1048 02827000
*     RFY R4 RSTD;                                              01S1049 02828000
*     R4=ADDR(PSAERMA);                                         01S1050 02829000
         LA    R4,PSAERMA                                       01S1050 02830000
*     CALL ADRCNVT;                                             01S1051 02831000
         L     @15,AADRCNVT(,COMBASE)                           01S1051 02832000
         BALR  @14,@15                                          01S1051 02833000
*     RFY R4 UNRSTD;                                            01S1052 02834000
*     BUFFER(LENGTH(CPUSKPMG)+1:LENGTH(PSAERMG)+LENGTH(CPUSKPMG))       02835000
*       =PSAERMG;                                               01S1053 02836000
         L     @06,CURBUF(,COMBASE)                             01S1053 02837000
         MVC   BUFFER+20(31,@06),PSAERMG                        01S1053 02838000
*     BUFFER(1:LENGTH(CPUSKPMG))=CPUSKPMG;                      01S1054 02839000
*                                                               01S1054 02840000
         MVC   BUFFER(20,@06),CPUSKPMG                          01S1054 02841000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              01S1055 02842000
*       (BRWRITE 1);                                            01S1055 02843000
         BRWRITE 1                                                      02844000
*     READERR=OFF;                                              01S1056 02845000
         NI    READERR,B'01111111'                              01S1056 02846000
*   END;                                                        01S1057 02847000
* END DOPSA;                                                    01S1058 02848000
@EL00002 DS    0H                                               01S1058 02849000
@EF00002 DS    0H                                               01S1058 02850000
@ER00002 LM    @14,@12,@SA00002                                 01S1058 02851000
         BR    @14                                              01S1058 02852000
*/*                                                             01S1059 02853000
*         SUBROUTINE TO OBTAIN A PROBLIST ENTRY                 01S1059 02854000
*                                                                    */ 02855000
*GETPRNTY: PROC;                                                01S1059 02856000
GETPRNTY STM   @14,@12,@SA00003                                 01S1059 02857000
*/*                                                                  */ 02858000
*/* GET CORE FOR PROBLIST ENTRY                                      */ 02859000
*/*                                                                  */ 02860000
* RFY R0 RSTD;                                                  01S1060 02861000
* R0=LENGTH(PROBLIST)/8;                                   /*@YM06931*/ 02862000
         LA    R0,56                                            01S1061 02863000
* GEN (GETMAIN R,LV=(0));                                       01S1062 02864000
         GETMAIN R,LV=(0)                                               02865000
* RFY R0 UNRSTD;                                                01S1063 02866000
*/*                                                                  */ 02867000
*/* QUEUE ENTRY TO PROBLIST AT END OF QUEUE                          */ 02868000
*/*                                                                  */ 02869000
* PLSTL->PRNEXT=R1;                                             01S1064 02870000
         L     @15,PLSTL                                        01S1064 02871000
         ST    R1,PRNEXT(,@15)                                  01S1064 02872000
* PLSTL=R1;                                                     01S1065 02873000
         ST    R1,PLSTL                                         01S1065 02874000
*/*                                                                  */ 02875000
*/* CLEAR ENTRY                                                      */ 02876000
*/*                                                                  */ 02877000
* R1->PROBLIST=''B;                                             01S1066 02878000
         XC    PROBLIST(56,R1),PROBLIST(R1)                     01S1066 02879000
* END GETPRNTY;                                                 01S1067 02880000
@EL00003 DS    0H                                               01S1067 02881000
@EF00003 DS    0H                                               01S1067 02882000
@ER00003 LM    @14,@12,@SA00003                                 01S1067 02883000
         BR    @14                                              01S1067 02884000
*/*                                                             01S1068 02885000
*         SUBROUTINE TO PROCESS A CHAIN OF SRBS                 01S1068 02886000
*                                                                    */ 02887000
*SRBCHAIN: PROC;                                                01S1068 02888000
SRBCHAIN STM   @14,@12,@SA00004                                 01S1068 02889000
* IF SRBQPTRF=0 THEN                                            01S1069 02890000
         LTR   SRBQPTRF,SRBQPTRF                                01S1069 02891000
         BNZ   @RF01069                                         01S1069 02892000
*   DO;                                                         01S1070 02893000
*/*                                                                  */ 02894000
*/* NO CHAIN - ISSUE MESSAGE                                         */ 02895000
*/*                                                                  */ 02896000
*     BUF2(1:LENGTH(NOSRBMSG))=NOSRBMSG;                        01S1071 02897000
*                                                               01S1071 02898000
         L     @15,CURBUF(,COMBASE)                             01S1071 02899000
         MVC   BUF2(14,@15),NOSRBMSG                            01S1071 02900000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              01S1072 02901000
*       (BRWRITE 1);                                            01S1072 02902000
         BRWRITE 1                                                      02903000
*   END;                                                        01S1073 02904000
* ELSE                                                          01S1074 02905000
*   DO;                                                         01S1074 02906000
         B     @RC01069                                         01S1074 02907000
@RF01069 DS    0H                                               01S1075 02908000
*/*                                                                  */ 02909000
*/* CHAIN EXISTS - INITIALIZE LOOP LIMIT, ASCBADDR, SRB COUNTER,     */ 02910000
*/*                AND SRB ERROR COUNTER                             */ 02911000
*/*                                                                  */ 02912000
*     SRBLIMIT=SRBMAX;                                          01S1075 02913000
         LH    @02,SRBMAX(,COMBASE)                             01S1075 02914000
         STH   @02,SRBLIMIT                                     01S1075 02915000
*     ASCBADDR=0;                                               01S1076 02916000
         SLR   @02,@02                                          01S1076 02917000
         ST    @02,ASCBADDR                                     01S1076 02918000
*     ASRBCT=0;                                                 01S1077 02919000
         LR    ASRBCT,@02                                       01S1077 02920000
*     SRBERRCT=0;                                               01S1078 02921000
         LR    SRBERRCT,@02                                     01S1078 02922000
*/*                                                                  */ 02923000
*/* CHECK FOR END POINTER 0 (IF END POINTER IS PRESENT)              */ 02924000
*/*                                                                  */ 02925000
*     IF SRBENDP=ON & SRBQPTRL=0 THEN                           01S1079 02926000
         TM    SRBENDP,B'00001000'                              01S1079 02927000
         BNO   @RF01079                                         01S1079 02928000
         C     @02,SRBQPTRL                                     01S1079 02929000
         BNE   @RF01079                                         01S1079 02930000
*       DO;                                                     01S1080 02931000
*/*                                                                  */ 02932000
*/* END POINTER IS 0 - ISSUE MESSAGE AND DO NOT USE POINTER          */ 02933000
*/*                                                                  */ 02934000
*         BUF2(5:LENGTH(SRBLST0M)+4)=SRBLST0M;                  01S1081 02935000
*                                                               01S1081 02936000
         L     @02,CURBUF(,COMBASE)                             01S1081 02937000
         MVC   BUF2+4(41,@02),SRBLST0M                          01S1081 02938000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          01S1082 02939000
*           (BRWRITE 1);                                        01S1082 02940000
         BRWRITE 1                                                      02941000
*         SRBENDP=OFF;                                          01S1083 02942000
         NI    SRBENDP,B'11110111'                              01S1083 02943000
*       END;                                                    01S1084 02944000
*/*                                                             02S1085 02945000
*         PROCESS SRB CHAIN                                     02S1085 02946000
*                                                                    */ 02947000
* DO SRBCTR=0 TO SRBLIMIT WHILE LOOPDONE=OFF;                   02S1085 02948000
@RF01079 SLR   @02,@02                                          02S1085 02949000
         B     @DE01085                                         02S1085 02950000
@DL01085 TM    LOOPDONE,B'00100000'                             02S1085 02951000
         BNZ   @DC01085                                         02S1085 02952000
*/*                                                                  */ 02953000
*/* GET TOP SRB AND ITS ASCB ADDRESS                                 */ 02954000
*/*                                                                  */ 02955000
*   SRBPTR=SRBQPTRF;                                            02S1086 02956000
*                                                               02S1086 02957000
         LR    SRBPTR,SRBQPTRF                                  02S1086 02958000
*   PREG=ADDR(SRBASCB);                                         02S1087 02959000
         LA    PREG,SRBASCB(,SRBPTR)                            02S1087 02960000
*   GEN REFS(BRRDDATA)SETS(PREG,READERR)                        02S1088 02961000
*       FLOWS(SUMERR)                                           02S1088 02962000
*     (BRREAD (PREG));                                          02S1088 02963000
         BRREAD (PREG)                                                  02964000
*   IF READERR=OFF THEN                                         02S1089 02965000
         TM    READERR,B'10000000'                              02S1089 02966000
         BNZ   @RF01089                                         02S1089 02967000
*     DO;                                                       02S1090 02968000
*/*                                                                  */ 02969000
*/* CHECK IF THIS SRB IS FOR SAME ASCB AS PREVIOUS ONE               */ 02970000
*/*                                                                  */ 02971000
*       IF ASCBADDR ^= RDPTR THEN                               02S1091 02972000
         L     @00,ASCBADDR                                     02S1091 02973000
         L     @15,RDPTR-1(,PREG)                               02S1091 02974000
         LA    @15,0(,@15)                                      02S1091 02975000
         CR    @00,@15                                          02S1091 02976000
         BE    @RF01091                                         02S1091 02977000
*         DO;                                                   02S1092 02978000
*/*                                                                  */ 02979000
*/* SRB IS FOR NEW ASCB - PRINT SRB LINE FOR PREVIOUS SRBS, AND SET  */ 02980000
*/* UP NEW ASCB ADDRESS                                              */ 02981000
*/*                                                                  */ 02982000
*           CALL PRNTSRB;                                       02S1093 02983000
         BAL   @14,PRNTSRB                                      02S1093 02984000
*           ASCBADDR=RDPTR;                                     02S1094 02985000
         L     @00,RDPTR-1(,PREG)                               02S1094 02986000
         ICM   @00,8,@CB02300                                   02S1094 02987000
         ST    @00,ASCBADDR                                     02S1094 02988000
*         END;                                                  02S1095 02989000
*     END;                                                      02S1096 02990000
*   ELSE                                                        02S1097 02991000
*     DO;                                                       02S1097 02992000
         B     @RC01089                                         02S1097 02993000
@RF01089 DS    0H                                               02S1098 02994000
*/*                                                                  */ 02995000
*/* ERROR READING SRBASCB FIELD - SET UP ERROR MESSAGE, PRINT        */ 02996000
*/* PREVIOUS TOTAL OF SRBS, AND PRINT MESSAGE FOR CURRENT SRB        */ 02997000
*/*                                                                  */ 02998000
*                                                               02S1098 02999000
*       RFY R4 RSTD;                                            02S1098 03000000
*       R4=ADDR(SRBASERA);                                      02S1099 03001000
         LA    R4,SRBASERA                                      02S1099 03002000
*       CALL ADRCNVT;                                           02S1100 03003000
         L     @15,AADRCNVT(,COMBASE)                           02S1100 03004000
         BALR  @14,@15                                          02S1100 03005000
*       RFY R4 UNRSTD;                                          02S1101 03006000
*       CALL PRNTSRB;                                           02S1102 03007000
         BAL   @14,PRNTSRB                                      02S1102 03008000
*       BUF2(5:LENGTH(SRBASERM)+4)=SRBASERM;                    02S1103 03009000
*                                                               02S1103 03010000
         L     @15,CURBUF(,COMBASE)                             02S1103 03011000
         MVC   BUF2+4(58,@15),SRBASERM                          02S1103 03012000
*       GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)            02S1104 03013000
*         (BRWRITE 1);                                          02S1104 03014000
         BRWRITE 1                                                      03015000
*       ASCBADDR=0;               /* USE ASCB ADDRESS OF 0           */ 03016000
         SLR   @00,@00                                          02S1105 03017000
         ST    @00,ASCBADDR                                     02S1105 03018000
*       READERR=OFF;                                            02S1106 03019000
         NI    READERR,B'01111111'                              02S1106 03020000
*     END;                                                      02S1107 03021000
*/*                                                                  */ 03022000
*/* UPDATE SRBS-PER-ASCB COUNT, AND VALIDITY CHECK THIS SRB          */ 03023000
*/*                                                                  */ 03024000
*   ASRBCT=ASRBCT+1;                                            02S1108 03025000
@RC01089 AL    ASRBCT,@CF00063                                  02S1108 03026000
*/*                                                             03S1109 03027000
*         CHECK SRB VALIDITY                                    03S1109 03028000
*                                                                    */ 03029000
*                                                               03S1109 03030000
* PREG=ADDR(SRBID);                                             03S1109 03031000
         LR    PREG,SRBPTR                                      03S1109 03032000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S1110 03033000
*     FLOWS(SUMERR)                                             03S1110 03034000
*   (BRREAD (PREG));                                            03S1110 03035000
         BRREAD (PREG)                                                  03036000
* IF READERR=OFF THEN                                           03S1111 03037000
         TM    READERR,B'10000000'                              03S1111 03038000
         BNZ   @RF01111                                         03S1111 03039000
*   DO;                                                         03S1112 03040000
*/*                                                                  */ 03041000
*/* CHECK FOR GOOD ID FIELD - UPDATE ERROR COUNT IF NOT              */ 03042000
*/*                                                                  */ 03043000
*    IF READALL ^= 'SRB' THEN       /*DOES SRB VALIDITY CHK  @YM06904*/ 03044000
         CLC   READALL(3,PREG),@CC03295                         03S1113 03045000
         BE    @RF01113                                         03S1113 03046000
*       SRBERRCT=SRBERRCT+1;                                    03S1114 03047000
         AL    SRBERRCT,@CF00063                                03S1114 03048000
*   END;                                                        03S1115 03049000
* ELSE                                                          03S1116 03050000
*/*                                                                  */ 03051000
*/* ERROR ON SRBID FIELD - SKIP VALIDITY CHECK                       */ 03052000
*/*                                                                  */ 03053000
*   READERR=OFF;                                                03S1116 03054000
         B     @RC01111                                         03S1116 03055000
@RF01111 NI    READERR,B'01111111'                              03S1116 03056000
*   IF SRBENDP=ON & SRBPTR=SRBQPTRL THEN  /* CHECK FOR LAST SRB      */ 03057000
@RC01111 TM    SRBENDP,B'00001000'                              02S1117 03058000
         BNO   @RF01117                                         02S1117 03059000
         C     SRBPTR,SRBQPTRL                                  02S1117 03060000
         BNE   @RF01117                                         02S1117 03061000
*     DO;                                                       02S1118 03062000
*/*                                                                  */ 03063000
*/* LAST SRB - MAKE SURE THERE ARE NO MORE                           */ 03064000
*/*                                                                  */ 03065000
*/*                                                             03S1119 03066000
*         CHECK END OF SRB CHAIN                                03S1119 03067000
*                                                                    */ 03068000
*/*                                                                  */ 03069000
*/* GET LINK FIELD TO NEXT SRB                                       */ 03070000
*/*                                                                  */ 03071000
*                                                               03S1119 03072000
* PREG=ADDR(SRBFLNK);                                           03S1119 03073000
         LA    PREG,SRBFLNK(,SRBPTR)                            03S1119 03074000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S1120 03075000
*     FLOWS(SUMERR)                                             03S1120 03076000
*   (BRREAD (PREG));                                            03S1120 03077000
         BRREAD (PREG)                                                  03078000
* IF READERR=OFF THEN                                           03S1121 03079000
         TM    READERR,B'10000000'                              03S1121 03080000
         BNZ   @RF01121                                         03S1121 03081000
*   DO;                                                         03S1122 03082000
*/*                                                                  */ 03083000
*/* SAVE FIELD AND PRINT SRB LINE - THEN CHECK FIELD FOR 0           */ 03084000
*/*                                                                  */ 03085000
*     SRBQPTRL=RDPTR;                                           03S1123 03086000
         L     @02,RDPTR-1(,PREG)                               03S1123 03087000
         LA    @02,0(,@02)                                      03S1123 03088000
         ST    @02,SRBQPTRL                                     03S1123 03089000
*     CALL PRNTSRB;                                             03S1124 03090000
         BAL   @14,PRNTSRB                                      03S1124 03091000
*     IF SRBQPTRL=0 THEN                                        03S1125 03092000
         L     @02,SRBQPTRL                                     03S1125 03093000
         LTR   @02,@02                                          03S1125 03094000
         BNZ   @RF01125                                         03S1125 03095000
*       DO;                                                     03S1126 03096000
*/*                                                                  */ 03097000
*/* FIELD IS 0 - END OF SRB CHAIN IS OK - PRINT MSG & FORCE LOOP EXIT*/ 03098000
*/*                                                                  */ 03099000
*         BUF2(1:16)='END OF SRB QUEUE';                        03S1127 03100000
*                                                               03S1127 03101000
         L     @02,CURBUF(,COMBASE)                             03S1127 03102000
         MVC   BUF2(16,@02),@CC03296                            03S1127 03103000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S1128 03104000
*           (BRWRITE 1);                                        03S1128 03105000
         BRWRITE 1                                                      03106000
*         LOOPDONE=ON;                                          03S1129 03107000
         OI    LOOPDONE,B'00100000'                             03S1129 03108000
*       END;                                                    03S1130 03109000
*     ELSE                                                      03S1131 03110000
*       DO;                                                     03S1131 03111000
         B     @RC01125                                         03S1131 03112000
@RF01125 DS    0H                                               03S1132 03113000
*/*                                                                  */ 03114000
*/* FIELD IS NOT 0 - ISSUE ERROR MSG & PROCESS FROM END OF QUEUE     */ 03115000
*/*                                                                  */ 03116000
*         BUF2(5:LENGTH(SRBNOTND)+4)=SRBNOTND;                  03S1132 03117000
*                                                               03S1132 03118000
         L     @15,CURBUF(,COMBASE)                             03S1132 03119000
         MVC   BUF2+4(47,@15),SRBNOTND                          03S1132 03120000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S1133 03121000
*           (BRWRITE 1);                                        03S1133 03122000
         BRWRITE 1                                                      03123000
*         CALL RESETLMT;                                        03S1134 03124000
         BAL   @14,RESETLMT                                     03S1134 03125000
*       END;                                                    03S1135 03126000
*   END;                                                        03S1136 03127000
* ELSE                                                          03S1137 03128000
*   DO;                                                         03S1137 03129000
         B     @RC01121                                         03S1137 03130000
@RF01121 DS    0H                                               03S1138 03131000
*/*                                                                  */ 03132000
*/* ERROR ON LINK FIELD - PRINT SRB LINE, ISSUE ERROR MSG, AND       */ 03133000
*/* STOP QUEUE PROCESSING                                            */ 03134000
*/*                                                                  */ 03135000
*     READERR=OFF;                                              03S1138 03136000
*                                                               03S1138 03137000
         NI    READERR,B'01111111'                              03S1138 03138000
*     RFY R4 RSTD;                                              03S1139 03139000
*     R4=ADDR(SRBLKRMA);                                        03S1140 03140000
         LA    R4,SRBLKRMA                                      03S1140 03141000
*     CALL ADRCNVT;                                             03S1141 03142000
         L     @15,AADRCNVT(,COMBASE)                           03S1141 03143000
         BALR  @14,@15                                          03S1141 03144000
*     RFY R4 UNRSTD;                                            03S1142 03145000
*     CALL PRNTSRB;                                             03S1143 03146000
         BAL   @14,PRNTSRB                                      03S1143 03147000
*     BUF2(5:LENGTH(SRBLKRMG)+4)=SRBLKRMG;                      03S1144 03148000
         L     @02,CURBUF(,COMBASE)                             03S1144 03149000
         MVC   BUF2+4(35,@02),SRBLKRMG                          03S1144 03150000
*     BUF2(LENGTH(SRBLKRMG)+6:LENGTH(SRBLKRMG)+LENGTH(SRBENDMG)+5)      03151000
*       =SRBENDMG;                                              03S1145 03152000
*                                                               03S1145 03153000
         MVC   BUF2+40(27,@02),SRBENDMG                         03S1145 03154000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1146 03155000
*       (BRWRITE 1);                                            03S1146 03156000
         BRWRITE 1                                                      03157000
*     LOOPDONE=ON;                                              03S1147 03158000
         OI    LOOPDONE,B'00100000'                             03S1147 03159000
*   END;                                                        03S1148 03160000
*     END;                                                      02S1149 03161000
*   ELSE                                                        02S1150 03162000
*     DO;                                                       02S1150 03163000
         B     @RC01117                                         02S1150 03164000
@RF01117 DS    0H                                               02S1151 03165000
*/*                                                                  */ 03166000
*/* NOT LAST SRB - CONTINUE WITH NEXT SRB                            */ 03167000
*/*                                                                  */ 03168000
*/*                                                             03S1151 03169000
*         CONTINUE WITH NEXT SRB ON QUEUE                       03S1151 03170000
*                                                                    */ 03171000
*/*                                                                  */ 03172000
*/* GET LINK FIELD TO NEXT SRB, CHECK FOR 0                          */ 03173000
*/*                                                                  */ 03174000
*                                                               03S1151 03175000
* PREG=ADDR(SRBFLNK);                                           03S1151 03176000
         LA    PREG,SRBFLNK(,SRBPTR)                            03S1151 03177000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S1152 03178000
*     FLOWS(SUMERR)                                             03S1152 03179000
*   (BRREAD (PREG));                                            03S1152 03180000
         BRREAD (PREG)                                                  03181000
* IF READERR=OFF THEN                                           03S1153 03182000
         TM    READERR,B'10000000'                              03S1153 03183000
         BNZ   @RF01153                                         03S1153 03184000
*   DO;                                                         03S1154 03185000
*     SRBQPTRF=RDPTR;                                           03S1155 03186000
         L     SRBQPTRF,RDPTR-1(,PREG)                          03S1155 03187000
         LA    SRBQPTRF,0(,SRBQPTRF)                            03S1155 03188000
*     IF SRBQPTRF=0 THEN                                        03S1156 03189000
         LTR   SRBQPTRF,SRBQPTRF                                03S1156 03190000
         BNZ   @RF01156                                         03S1156 03191000
*       DO;                                                     03S1157 03192000
*/*                                                                  */ 03193000
*/* LINK FIELD IS 0 - IF END POINTER EXISTS, THIS IS AN ERROR -      */ 03194000
*/* PRINT SRB LINE, PRINT ERROR MSG, PROCESS FROM END OF SRB CHAIN   */ 03195000
*/*                                                                  */ 03196000
*         IF SRBENDP=ON THEN                                    03S1158 03197000
         TM    SRBENDP,B'00001000'                              03S1158 03198000
         BNO   @RF01158                                         03S1158 03199000
*           DO;                                                 03S1159 03200000
*             CALL PRNTSRB;                                     03S1160 03201000
         BAL   @14,PRNTSRB                                      03S1160 03202000
*             BUF2(5:LENGTH(SRBUNEND)+4)=SRBUNEND;              03S1161 03203000
*                                                               03S1161 03204000
         L     @15,CURBUF(,COMBASE)                             03S1161 03205000
         MVC   BUF2+4(54,@15),SRBUNEND                          03S1161 03206000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      03S1162 03207000
*               (BRWRITE 1);                                    03S1162 03208000
         BRWRITE 1                                                      03209000
*             CALL RESETLMT;                                    03S1163 03210000
         BAL   @14,RESETLMT                                     03S1163 03211000
*           END;                                                03S1164 03212000
*         ELSE                                                  03S1165 03213000
*           DO;                                                 03S1165 03214000
         B     @RC01158                                         03S1165 03215000
@RF01158 DS    0H                                               03S1166 03216000
*/*                                                                  */ 03217000
*/* LINK FIELD IS 0 & NO END POINTER EXISTS - PRINT SRB LINE & MSG,  */ 03218000
*/* AND STOP PROCESSING QUEUE                                        */ 03219000
*/*                                                                  */ 03220000
*             CALL PRNTSRB;                                     03S1166 03221000
         BAL   @14,PRNTSRB                                      03S1166 03222000
*             BUF2(1:16)='END OF SRB QUEUE';                    03S1167 03223000
*                                                               03S1167 03224000
         L     @02,CURBUF(,COMBASE)                             03S1167 03225000
         MVC   BUF2(16,@02),@CC03296                            03S1167 03226000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      03S1168 03227000
*               (BRWRITE 1);                                    03S1168 03228000
         BRWRITE 1                                                      03229000
*             LOOPDONE=ON;                                      03S1169 03230000
         OI    LOOPDONE,B'00100000'                             03S1169 03231000
*           END;                                                03S1170 03232000
*       END;                                                    03S1171 03233000
*   END;                                                        03S1172 03234000
* ELSE                                                          03S1173 03235000
*   DO;                                                         03S1173 03236000
         B     @RC01153                                         03S1173 03237000
@RF01153 DS    0H                                               03S1174 03238000
*/*                                                                  */ 03239000
*/* ERROR ON LINK FIELD - PRINT SRB LINE, ISSUE ERROR MSG, CHECK     */ 03240000
*/* FOR END POINTER                                                  */ 03241000
*/*                                                                  */ 03242000
*     READERR=OFF;                                              03S1174 03243000
*                                                               03S1174 03244000
         NI    READERR,B'01111111'                              03S1174 03245000
*     RFY R4 RSTD;                                              03S1175 03246000
*     R4=ADDR(SRBLKRMA);                                        03S1176 03247000
         LA    R4,SRBLKRMA                                      03S1176 03248000
*     CALL ADRCNVT;                                             03S1177 03249000
         L     @15,AADRCNVT(,COMBASE)                           03S1177 03250000
         BALR  @14,@15                                          03S1177 03251000
*     RFY R4 UNRSTD;                                            03S1178 03252000
*     CALL PRNTSRB;                                             03S1179 03253000
         BAL   @14,PRNTSRB                                      03S1179 03254000
*     BUF2(5:LENGTH(SRBLKRMG)+4)=SRBLKRMG;                      03S1180 03255000
         L     @02,CURBUF(,COMBASE)                             03S1180 03256000
         MVC   BUF2+4(35,@02),SRBLKRMG                          03S1180 03257000
*     IF SRBENDP=ON THEN                                        03S1181 03258000
         TM    SRBENDP,B'00001000'                              03S1181 03259000
         BNO   @RF01181                                         03S1181 03260000
*       DO;                                                     03S1182 03261000
*/*                                                                  */ 03262000
*/* END POINTER EXISTS - ISSUE MSG & TRY FROM END OF QUEUE           */ 03263000
*/*                                                                  */ 03264000
*         BUF2(LENGTH(SRBLKRMG)+6:LENGTH(SRBLKRMG)+LENGTH(SRBCONTM)+5)  03265000
*           =SRBCONTM;                                          03S1183 03266000
*                                                               03S1183 03267000
         MVC   BUF2+40(25,@02),SRBCONTM                         03S1183 03268000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S1184 03269000
*           (BRWRITE 1);                                        03S1184 03270000
         BRWRITE 1                                                      03271000
*         CALL RESETLMT;                                        03S1185 03272000
         BAL   @14,RESETLMT                                     03S1185 03273000
*       END;                                                    03S1186 03274000
*     ELSE                                                      03S1187 03275000
*       DO;                                                     03S1187 03276000
         B     @RC01181                                         03S1187 03277000
@RF01181 DS    0H                                               03S1188 03278000
*/*                                                                  */ 03279000
*/* NO END POINTER - ISSUE MSG & TERMINATE QUEUE                     */ 03280000
*/*                                                                  */ 03281000
*         BUF2(LENGTH(SRBLKRMG)+6:LENGTH(SRBLKRMG)+LENGTH(SRBENDMG)+5)  03282000
*           =SRBENDMG;                                          03S1188 03283000
*                                                               03S1188 03284000
         L     @02,CURBUF(,COMBASE)                             03S1188 03285000
         MVC   BUF2+40(27,@02),SRBENDMG                         03S1188 03286000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S1189 03287000
*           (BRWRITE 1);                                        03S1189 03288000
         BRWRITE 1                                                      03289000
*         LOOPDONE=ON;                                          03S1190 03290000
         OI    LOOPDONE,B'00100000'                             03S1190 03291000
*       END;                                                    03S1191 03292000
*   END;                                                        03S1192 03293000
@RC01181 DS    0H                                               03S1193 03294000
*     END;                                                      02S1193 03295000
@RC01153 DS    0H                                               02S1194 03296000
* END;                                                          02S1194 03297000
@RC01117 LA    @02,1                                            02S1194 03298000
         AH    @02,SRBCTR                                       02S1194 03299000
@DE01085 STH   @02,SRBCTR                                       02S1194 03300000
         CH    @02,SRBLIMIT                                     02S1194 03301000
         BNH   @DL01085                                         02S1194 03302000
@DC01085 DS    0H                                               02S1195 03303000
*/*                                                                  */ 03304000
*/* IF LOOP WAS ENDED DUE TO MAX EXCEEDED, THEN PURGE SRB COUNT ONTO */ 03305000
*/* A PRINT LINE, AND PRINT ERROR MESSAGE                            */ 03306000
*/*                                                                  */ 03307000
* IF LOOPDONE=OFF THEN                                          02S1195 03308000
         TM    LOOPDONE,B'00100000'                             02S1195 03309000
         BNZ   @RF01195                                         02S1195 03310000
*   DO;                                                         02S1196 03311000
*     CALL PRNTSRB;                                             02S1197 03312000
         BAL   @14,PRNTSRB                                      02S1197 03313000
*     CVD (SRBLIMIT,FWORK);                                     02S1198 03314000
         LH    @00,SRBLIMIT                                     02S1198 03315000
         CVD   @00,@TS00001                                     02S1198 03316000
         MVC   FWORK(4),@TS00001+4                              02S1198 03317000
*     FWORK(29:32)=SIGNF;                                       02S1199 03318000
         OI    FWORK+3,B'00001111'                              02S1199 03319000
*     UNPK (SRBLMTMA,FWORK);                                    02S1200 03320000
         UNPK  SRBLMTMA(5),FWORK(4)                             02S1200 03321000
*     BUF2(5:LENGTH(SRBLMTMG)+4)=SRBLMTMG;                      02S1201 03322000
*                                                               02S1201 03323000
         L     @15,CURBUF(,COMBASE)                             02S1201 03324000
         MVC   BUF2+4(62,@15),SRBLMTMG                          02S1201 03325000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S1202 03326000
*       (BRWRITE 1);                                            02S1202 03327000
         BRWRITE 1                                                      03328000
*   END;                                                        02S1203 03329000
* LOOPDONE=OFF;                   /* INSURE SWITCH IS OFF            */ 03330000
@RF01195 NI    LOOPDONE,B'11011111'                             02S1204 03331000
*   END;                                                        01S1205 03332000
* END SRBCHAIN;                                                 01S1206 03333000
@EL00004 DS    0H                                               01S1206 03334000
@EF00004 DS    0H                                               01S1206 03335000
@ER00004 LM    @14,@12,@SA00004                                 01S1206 03336000
         BR    @14                                              01S1206 03337000
*/*                                                             01S1207 03338000
*         SUBROUTINE TO PRINT AN SRB LINE                       01S1207 03339000
*                                                                    */ 03340000
*PRNTSRB: PROC;                                                 01S1207 03341000
PRNTSRB  STM   @14,@05,@SA00005                                 01S1207 03342000
         STM   @08,@12,@SA00005+32                              01S1207 03343000
*/*                                                                  */ 03344000
*/* IF ANY SRBS WERE COUNTED, PRINT LINE                             */ 03345000
*/*                                                                  */ 03346000
* IF ASRBCT ^= 0 THEN                                           01S1208 03347000
         LTR   ASRBCT,ASRBCT                                    01S1208 03348000
         BZ    @RF01208                                         01S1208 03349000
*   DO;                                                         01S1209 03350000
*/*                                                                  */ 03351000
*/* FORMAT LINE                                                      */ 03352000
*/*                                                                  */ 03353000
*     PREG=ADDR(ASCBADDR);                                      01S1210 03354000
*                                                               01S1210 03355000
         LA    PREG,ASCBADDR                                    01S1210 03356000
*     RFY R4 RSTD;                                              01S1211 03357000
*     R4=ADDR(SRBAASCB);                                        01S1212 03358000
         LA    R4,SRBAASCB                                      01S1212 03359000
*     CALL ADRCNVT;                                             01S1213 03360000
         L     @15,AADRCNVT(,COMBASE)                           01S1213 03361000
         BALR  @14,@15                                          01S1213 03362000
*     RFY R4 UNRSTD;                                            01S1214 03363000
*     CVD (ASRBCT,FWORK);                                       01S1215 03364000
         CVD   ASRBCT,@TS00001                                  01S1215 03365000
         MVC   FWORK(4),@TS00001+4                              01S1215 03366000
*     FWORK(29:32)=SIGNF;                                       01S1216 03367000
         OI    FWORK+3,B'00001111'                              01S1216 03368000
*     UNPK (SRBCOUNT,FWORK);                                    01S1217 03369000
         UNPK  SRBCOUNT(5),FWORK(4)                             01S1217 03370000
*     BUF2(1:LENGTH(SRBLINE))=SRBLINE;                          01S1218 03371000
         L     @07,CURBUF(,COMBASE)                             01S1218 03372000
         MVC   BUF2(34,@07),SRBLINE                             01S1218 03373000
*/*                                                                  */ 03374000
*/* CHECK SRB ERROR COUNT FOR VALIDITY CHECK ERRORS                  */ 03375000
*/*                                                                  */ 03376000
*     IF SRBERRCT ^= 0 THEN                                     01S1219 03377000
         SLR   @15,@15                                          01S1219 03378000
         CR    SRBERRCT,@15                                     01S1219 03379000
         BE    @RF01219                                         01S1219 03380000
*       DO;                                                     01S1220 03381000
*/*                                                                  */ 03382000
*/* ADD ERROR COUNT TO PRINT LINE AND RESET COUNTER                  */ 03383000
*/*                                                                  */ 03384000
*         CVD (SRBERRCT,FWORK);                                 01S1221 03385000
         CVD   SRBERRCT,@TS00001                                01S1221 03386000
         MVC   FWORK(4),@TS00001+4                              01S1221 03387000
*         FWORK(29:32)=SIGNF;                                   01S1222 03388000
         OI    FWORK+3,B'00001111'                              01S1222 03389000
*         UNPK (SRBER,FWORK);                                   01S1223 03390000
         UNPK  SRBER(5),FWORK(4)                                01S1223 03391000
*         BUF2(LENGTH(SRBLINE)+1:LENGTH(SRBLINE)+LENGTH(SRBFLINE))      03392000
*           =SRBFLINE;                                          01S1224 03393000
         MVC   BUF2+34(34,@07),SRBFLINE                         01S1224 03394000
*         SRBERRCT=0;                                           01S1225 03395000
         LR    SRBERRCT,@15                                     01S1225 03396000
*       END;                                                    01S1226 03397000
*/*                                                                  */ 03398000
*/* PRINT LINE AND RESET SRB COUNT                                   */ 03399000
*/*                                                                  */ 03400000
*                                                               01S1227 03401000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              01S1227 03402000
*       (BRWRITE 1);                                            01S1227 03403000
@RF01219 DS    0H                                               01S1227 03404000
         BRWRITE 1                                                      03405000
*     ASRBCT=0;                                                 01S1228 03406000
         SLR   ASRBCT,ASRBCT                                    01S1228 03407000
*   END;                                                        01S1229 03408000
* END PRNTSRB;                                                  01S1230 03409000
@EL00005 DS    0H                                               01S1230 03410000
@EF00005 DS    0H                                               01S1230 03411000
@ER00005 LM    @14,@05,@SA00005                                 01S1230 03412000
         LM    @08,@12,@SA00005+32                              01S1230 03413000
         BR    @14                                              01S1230 03414000
*/*                                                             01S1231 03415000
*         SUBROUTINE TO RESET SRB LIMIT TO PROCESS FROM END OF CHAIN    03416000
*                                                                    */ 03417000
*RESETLMT: PROC;                                                01S1231 03418000
RESETLMT STM   @14,@02,@SA00006                                 01S1231 03419000
         STM   @04,@12,@SA00006+20                              01S1231 03420000
*/*                                                                  */ 03421000
*/* ISSUE MESSAGE TO TELL OF END-OF-CHAIN PROCESSING                 */ 03422000
*/*                                                                  */ 03423000
* BUF2(5:LENGTH(NEWMAXMG)+4)=NEWMAXMG;                          01S1232 03424000
*                                                               01S1232 03425000
         L     @15,CURBUF(,COMBASE)                             01S1232 03426000
         MVC   BUF2+4(52,@15),NEWMAXMG                          01S1232 03427000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  01S1233 03428000
*   (BRWRITE 1);                                                01S1233 03429000
         BRWRITE 1                                                      03430000
*/*                                                                  */ 03431000
*/* SET NEW LIMIT OF 5, USE END POINTER AS NEW BEGINNING OF CHAIN,   */ 03432000
*/* AND RESET SRB COUNTER TO 0                                       */ 03433000
*/*                                                                  */ 03434000
* SRBLIMIT=5;                                                   01S1234 03435000
         MVC   SRBLIMIT(2),@CH01212                             01S1234 03436000
* SRBENDP=OFF;                                                  01S1235 03437000
         NI    SRBENDP,B'11110111'                              01S1235 03438000
* SRBQPTRF=SRBQPTRL;                                            01S1236 03439000
         L     SRBQPTRF,SRBQPTRL                                01S1236 03440000
* SRBCTR=0;                                                     01S1237 03441000
         SLR   @02,@02                                          01S1237 03442000
         STH   @02,SRBCTR                                       01S1237 03443000
* END RESETLMT;                                                 01S1238 03444000
@EL00006 DS    0H                                               01S1238 03445000
@EF00006 DS    0H                                               01S1238 03446000
@ER00006 LM    @14,@02,@SA00006                                 01S1238 03447000
         LM    @04,@12,@SA00006+20                              01S1238 03448000
         BR    @14                                              01S1238 03449000
*/*                                                             01S1239 03450000
*         SUBROUTINE TO PROCESS AN ADDRESS SPACE                01S1239 03451000
*                                                                    */ 03452000
*DOADDRSP: PROC (PASCB1);                                       01S1239 03453000
DOADDRSP STM   @14,@12,@SA00007                                 01S1239 03454000
         MVC   @PC00007(4),0(@01)                               01S1239 03455000
* DCL PASCB1 PTR(31);             /* INPUT PARM = ASCB ADDRESS       */ 03456000
* ASCBPTR=PASCB1;                                               01S1241 03457000
         L     @15,@PC00007                                     01S1241 03458000
         L     ASCBPTR,PASCB1(,@15)                             01S1241 03459000
* JOBLISTD=ON;                    /* INDICATE AT LEAST 1 ASCB DONE   */ 03460000
         OI    JOBLISTD,B'00000001'                             01S1242 03461000
*/*                                                                  */ 03462000
*/* FORMAT JOB LINE                                                  */ 03463000
*/*                                                                  */ 03464000
*/*                                                             02S1243 03465000
*         GET JOBNAME FOR ADDRESS SPACE                         02S1243 03466000
*                                                                    */ 03467000
*/*                                                                  */ 03468000
*/* TRY FOR INITIATED JOBNAME                                        */ 03469000
*/*                                                                  */ 03470000
*                                                               02S1243 03471000
* PREG=ADDR(ASCBJBNI);                                          02S1243 03472000
         LA    PREG,ASCBJBNI(,ASCBPTR)                          02S1243 03473000
* RFY R0 RSTD;                                                  02S1244 03474000
* R0=0;                                                         02S1245 03475000
         SLR   R0,R0                                            02S1245 03476000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S1246 03477000
*     FLOWS(SUMERR)                                             02S1246 03478000
*   (BRREAD (PREG),,ASID=(R0));                                 02S1246 03479000
         BRREAD (PREG),,ASID=(R0)                                       03480000
* RFY R0 UNRSTD;                                                02S1247 03481000
* IF READERR=OFF THEN                                           02S1248 03482000
         TM    READERR,B'10000000'                              02S1248 03483000
         BNZ   @RF01248                                         02S1248 03484000
*   JOBNMPTR=RDPTR;               /* GOT A JOBNAME POINTER           */ 03485000
         L     JOBNMPTR,RDPTR-1(,PREG)                          02S1249 03486000
         LA    JOBNMPTR,0(,JOBNMPTR)                            02S1249 03487000
* ELSE                                                          02S1250 03488000
*   DO;                                                         02S1250 03489000
         B     @RC01248                                         02S1250 03490000
@RF01248 DS    0H                                               02S1251 03491000
*/*                                                                  */ 03492000
*/* ERROR READING JOBNAME ADDRESS - USE ADDRESS OF 0 AND TURN ON     */ 03493000
*/* SWITCH TO SHOW THAT ERROR OCCURRED AT END OF ASCB (SWITCH WILL BE*/ 03494000
*/* USED LATER IF ANOTHER ERROR OCCURS AT THE BEGINNING OF THE ASCB) */ 03495000
*     JOBNMPTR=0;                                               02S1251 03496000
         SLR   JOBNMPTR,JOBNMPTR                                02S1251 03497000
*     READERR=OFF;                                              02S1252 03498000
         NI    READERR,B'01111111'                              02S1252 03499000
*     ASCBENDF=ON;                                              02S1253 03500000
         OI    ASCBENDF,B'01000000'                             02S1253 03501000
*   END;                                                        02S1254 03502000
*/*                                                                  */ 03503000
*/* TRY TO READ JOBNAME                                              */ 03504000
*/*                                                                  */ 03505000
*/*                                                             03S1255 03506000
*         GET JOBNAME                                           03S1255 03507000
*                                                                    */ 03508000
*/*                                                                  */ 03509000
*/* IF POINTER IS NOT 0, GET 1ST HALF OF JOBNAME                     */ 03510000
*/*                                                                  */ 03511000
* IF JOBNMPTR ^= 0 THEN                                         03S1255 03512000
@RC01248 LTR   JOBNMPTR,JOBNMPTR                                03S1255 03513000
         BZ    @RF01255                                         03S1255 03514000
*   DO;                                                         03S1256 03515000
*     PREG=JOBNMPTR;                                            03S1257 03516000
*                                                               03S1257 03517000
         LR    PREG,JOBNMPTR                                    03S1257 03518000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      03S1258 03519000
*         FLOWS(SUMERR)                                         03S1258 03520000
*       (BRREAD (PREG));                                        03S1258 03521000
         BRREAD (PREG)                                                  03522000
*     IF READERR=OFF THEN                                       03S1259 03523000
         TM    READERR,B'10000000'                              03S1259 03524000
         BNZ   @RF01259                                         03S1259 03525000
*       DO;                                                     03S1260 03526000
*         JOBNAME(1:4)=READALL;                                 03S1261 03527000
         MVC   JOBNAME(4),READALL(PREG)                         03S1261 03528000
*/*                                                                  */ 03529000
*/* GET 2ND HALF OF JOBNAME                                          */ 03530000
*/*                                                                  */ 03531000
*         PREG=JOBNMPTR+4;                                      03S1262 03532000
*                                                               03S1262 03533000
         LA    PREG,4                                           03S1262 03534000
         ALR   PREG,JOBNMPTR                                    03S1262 03535000
*         GEN REFS(BRRDDATA)SETS(PREG,READERR)                  03S1263 03536000
*             FLOWS(SUMERR)                                     03S1263 03537000
*           (BRREAD (PREG));                                    03S1263 03538000
         BRREAD (PREG)                                                  03539000
*         IF READERR=OFF THEN                                   03S1264 03540000
         TM    READERR,B'10000000'                              03S1264 03541000
         BNZ   @RF01264                                         03S1264 03542000
*           JOBNAME(5:8)=READALL;                               03S1265 03543000
         MVC   JOBNAME+4(4),READALL(PREG)                       03S1265 03544000
*         ELSE                                                  03S1266 03545000
*           DO;                                                 03S1266 03546000
         B     @RC01264                                         03S1266 03547000
@RF01264 DS    0H                                               03S1267 03548000
*/*                                                                  */ 03549000
*/* ERROR ON 2ND HALF OF JOBNAME - USE PERIODS                       */ 03550000
*/*                                                                  */ 03551000
*             JOBNAME(5:8)=PERIODS(1:4);                        03S1267 03552000
         MVC   JOBNAME+4(4),PERIODS                             03S1267 03553000
*             READERR=OFF;                                      03S1268 03554000
         NI    READERR,B'01111111'                              03S1268 03555000
*           END;                                                03S1269 03556000
*/*                                                                  */ 03557000
*/* TRANSLATE ANY UNPRINTABLE CHARACTERS TO PERIODS (CONSIDER '*' TO */ 03558000
*/* BE PRINTABLE)                                                    */ 03559000
*/*                                                                  */ 03560000
*         TABLE(EVAL('*')+1)='*';                               03S1270 03561000
@RC01264 LA    @15,92                                           03S1270 03562000
         ALR   @15,COMBASE                                      03S1270 03563000
         MVI   TABLE(@15),C'*'                                  03S1270 03564000
*         TR (JOBNAME,TABLE);                                   03S1271 03565000
         TR    JOBNAME(8),TABLE(COMBASE)                        03S1271 03566000
*         TABLE(EVAL('*')+1)='.';                               03S1272 03567000
         LA    @15,92                                           03S1272 03568000
         ALR   @15,COMBASE                                      03S1272 03569000
         MVI   TABLE(@15),C'.'                                  03S1272 03570000
*       END;                                                    03S1273 03571000
*     ELSE                                                      03S1274 03572000
*       DO;                                                     03S1274 03573000
         B     @RC01259                                         03S1274 03574000
@RF01259 DS    0H                                               03S1275 03575000
*/*                                                                  */ 03576000
*/* ERROR ON 1ST HALF OF JOBNAME - INDICATE NO JOBNAME AVAILABLE     */ 03577000
*/*                                                                  */ 03578000
*         JOBNAMER=ON;                                          03S1275 03579000
         OI    JOBNAMER,B'00100000'                             03S1275 03580000
*         READERR=OFF;                                          03S1276 03581000
         NI    READERR,B'01111111'                              03S1276 03582000
*       END;                                                    03S1277 03583000
*   END;                                                        03S1278 03584000
* ELSE                                                          03S1279 03585000
*/*                                                                  */ 03586000
*/* POINTER IS 0 - INDICATE NO JOBNAME AVAILABLE                     */ 03587000
*/*                                                                  */ 03588000
*   JOBNAMER=ON;                                                03S1279 03589000
         B     @RC01255                                         03S1279 03590000
@RF01255 OI    JOBNAMER,B'00100000'                             03S1279 03591000
*/*                                                                  */ 03592000
*/* IF JOBNAME NOT AVAILABLE, TRY FOR STARTED JOBNAME                */ 03593000
*/*                                                                  */ 03594000
* IF JOBNAMER=ON THEN                                           02S1280 03595000
@RC01255 TM    JOBNAMER,B'00100000'                             02S1280 03596000
         BNO   @RF01280                                         02S1280 03597000
*   DO;                                                         02S1281 03598000
*     JOBNAMER=OFF;                                             02S1282 03599000
*                                                               02S1282 03600000
         NI    JOBNAMER,B'11011111'                             02S1282 03601000
*     PREG=ADDR(ASCBJBNS);                                      02S1283 03602000
         LA    PREG,ASCBJBNS(,ASCBPTR)                          02S1283 03603000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      02S1284 03604000
*         FLOWS(SUMERR)                                         02S1284 03605000
*       (BRREAD (PREG));                                        02S1284 03606000
         BRREAD (PREG)                                                  03607000
*     IF READERR=OFF THEN                                       02S1285 03608000
         TM    READERR,B'10000000'                              02S1285 03609000
         BNZ   @RF01285                                         02S1285 03610000
*       JOBNMPTR=RDPTR;           /* GOT POINTER                     */ 03611000
         L     JOBNMPTR,RDPTR-1(,PREG)                          02S1286 03612000
         LA    JOBNMPTR,0(,JOBNMPTR)                            02S1286 03613000
*     ELSE                                                      02S1287 03614000
*       DO;                                                     02S1287 03615000
         B     @RC01285                                         02S1287 03616000
@RF01285 DS    0H                                               02S1288 03617000
*/*                                                                  */ 03618000
*/* READ ERROR ON POINTER - SET IT TO 0                              */ 03619000
*/*                                                                  */ 03620000
*         JOBNMPTR=0;                                           02S1288 03621000
         SLR   JOBNMPTR,JOBNMPTR                                02S1288 03622000
*         READERR=OFF;                                          02S1289 03623000
         NI    READERR,B'01111111'                              02S1289 03624000
*       END;                                                    02S1290 03625000
*/*                                                                  */ 03626000
*/* TRY TO GET JOBNAME                                               */ 03627000
*/*                                                                  */ 03628000
*/*                                                             03S1291 03629000
*         GET JOBNAME                                           03S1291 03630000
*                                                                    */ 03631000
*/*                                                                  */ 03632000
*/* IF POINTER IS NOT 0, GET 1ST HALF OF JOBNAME                     */ 03633000
*/*                                                                  */ 03634000
* IF JOBNMPTR ^= 0 THEN                                         03S1291 03635000
@RC01285 LTR   JOBNMPTR,JOBNMPTR                                03S1291 03636000
         BZ    @RF01291                                         03S1291 03637000
*   DO;                                                         03S1292 03638000
*     PREG=JOBNMPTR;                                            03S1293 03639000
*                                                               03S1293 03640000
         LR    PREG,JOBNMPTR                                    03S1293 03641000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      03S1294 03642000
*         FLOWS(SUMERR)                                         03S1294 03643000
*       (BRREAD (PREG));                                        03S1294 03644000
         BRREAD (PREG)                                                  03645000
*     IF READERR=OFF THEN                                       03S1295 03646000
         TM    READERR,B'10000000'                              03S1295 03647000
         BNZ   @RF01295                                         03S1295 03648000
*       DO;                                                     03S1296 03649000
*         JOBNAME(1:4)=READALL;                                 03S1297 03650000
         MVC   JOBNAME(4),READALL(PREG)                         03S1297 03651000
*/*                                                                  */ 03652000
*/* GET 2ND HALF OF JOBNAME                                          */ 03653000
*/*                                                                  */ 03654000
*         PREG=JOBNMPTR+4;                                      03S1298 03655000
*                                                               03S1298 03656000
         LA    PREG,4                                           03S1298 03657000
         ALR   PREG,JOBNMPTR                                    03S1298 03658000
*         GEN REFS(BRRDDATA)SETS(PREG,READERR)                  03S1299 03659000
*             FLOWS(SUMERR)                                     03S1299 03660000
*           (BRREAD (PREG));                                    03S1299 03661000
         BRREAD (PREG)                                                  03662000
*         IF READERR=OFF THEN                                   03S1300 03663000
         TM    READERR,B'10000000'                              03S1300 03664000
         BNZ   @RF01300                                         03S1300 03665000
*           JOBNAME(5:8)=READALL;                               03S1301 03666000
         MVC   JOBNAME+4(4),READALL(PREG)                       03S1301 03667000
*         ELSE                                                  03S1302 03668000
*           DO;                                                 03S1302 03669000
         B     @RC01300                                         03S1302 03670000
@RF01300 DS    0H                                               03S1303 03671000
*/*                                                                  */ 03672000
*/* ERROR ON 2ND HALF OF JOBNAME - USE PERIODS                       */ 03673000
*/*                                                                  */ 03674000
*             JOBNAME(5:8)=PERIODS(1:4);                        03S1303 03675000
         MVC   JOBNAME+4(4),PERIODS                             03S1303 03676000
*             READERR=OFF;                                      03S1304 03677000
         NI    READERR,B'01111111'                              03S1304 03678000
*           END;                                                03S1305 03679000
*/*                                                                  */ 03680000
*/* TRANSLATE ANY UNPRINTABLE CHARACTERS TO PERIODS (CONSIDER '*' TO */ 03681000
*/* BE PRINTABLE)                                                    */ 03682000
*/*                                                                  */ 03683000
*         TABLE(EVAL('*')+1)='*';                               03S1306 03684000
@RC01300 LA    @15,92                                           03S1306 03685000
         ALR   @15,COMBASE                                      03S1306 03686000
         MVI   TABLE(@15),C'*'                                  03S1306 03687000
*         TR (JOBNAME,TABLE);                                   03S1307 03688000
         TR    JOBNAME(8),TABLE(COMBASE)                        03S1307 03689000
*         TABLE(EVAL('*')+1)='.';                               03S1308 03690000
         LA    @15,92                                           03S1308 03691000
         ALR   @15,COMBASE                                      03S1308 03692000
         MVI   TABLE(@15),C'.'                                  03S1308 03693000
*       END;                                                    03S1309 03694000
*     ELSE                                                      03S1310 03695000
*       DO;                                                     03S1310 03696000
         B     @RC01295                                         03S1310 03697000
@RF01295 DS    0H                                               03S1311 03698000
*/*                                                                  */ 03699000
*/* ERROR ON 1ST HALF OF JOBNAME - INDICATE NO JOBNAME AVAILABLE     */ 03700000
*/*                                                                  */ 03701000
*         JOBNAMER=ON;                                          03S1311 03702000
         OI    JOBNAMER,B'00100000'                             03S1311 03703000
*         READERR=OFF;                                          03S1312 03704000
         NI    READERR,B'01111111'                              03S1312 03705000
*       END;                                                    03S1313 03706000
*   END;                                                        03S1314 03707000
* ELSE                                                          03S1315 03708000
*/*                                                                  */ 03709000
*/* POINTER IS 0 - INDICATE NO JOBNAME AVAILABLE                     */ 03710000
*/*                                                                  */ 03711000
*   JOBNAMER=ON;                                                03S1315 03712000
         B     @RC01291                                         03S1315 03713000
@RF01291 OI    JOBNAMER,B'00100000'                             03S1315 03714000
*/*                                                                  */ 03715000
*/* IF JOBNAME NOT AVAILABLE, USE '*UNKNOWN'                         */ 03716000
*/*                                                                  */ 03717000
*     IF JOBNAMER=ON THEN                                       02S1316 03718000
@RC01291 TM    JOBNAMER,B'00100000'                             02S1316 03719000
         BNO   @RF01316                                         02S1316 03720000
*       DO;                                                     02S1317 03721000
*         JOBNAMER=OFF;                                         02S1318 03722000
         NI    JOBNAMER,B'11011111'                             02S1318 03723000
*         JOBNAME='*UNKNOWN';                                   02S1319 03724000
         MVC   JOBNAME(8),@CC03312                              02S1319 03725000
*       END;                                                    02S1320 03726000
*   END;                                                        02S1321 03727000
@RF01316 DS    0H                                               02S1322 03728000
*/*                                                                  */ 03729000
*/* BEGIN FORMATTING A JOB LINE BY PUTTING JOBNAME INTO THE BUFFER   */ 03730000
*/*                                                                  */ 03731000
* BUFFER(1:3)='JOB';                                            02S1322 03732000
@RF01280 L     @15,CURBUF(,COMBASE)                             02S1322 03733000
         MVC   BUFFER(3,@15),@CC03313                           02S1322 03734000
* BUFFER(5:12)=JOBNAME;                                         02S1323 03735000
         MVC   BUFFER+4(8,@15),JOBNAME                          02S1323 03736000
*/*                                                             02S1324 03737000
*         GET ASID FOR ADDRESS SPACE                            02S1324 03738000
*                                                                    */ 03739000
*                                                               02S1324 03740000
* PREG=ADDR(ASCBASID);                                          02S1324 03741000
         LA    PREG,ASCBASID(,ASCBPTR)                          02S1324 03742000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S1325 03743000
*     FLOWS(SUMERR)                                             02S1325 03744000
*   (BRREAD (PREG));                                            02S1325 03745000
         BRREAD (PREG)                                                  03746000
* IF READERR=OFF THEN                                           02S1326 03747000
         TM    READERR,B'10000000'                              02S1326 03748000
         BNZ   @RF01326                                         02S1326 03749000
*   DO;                                                         02S1327 03750000
*/*                                                                  */ 03751000
*/* GOT ASID FROM DUMP - XLATE IT TO EBCDIC                          */ 03752000
*/*                                                                  */ 03753000
*     AUSRASID=RDHWORD;                                         02S1328 03754000
*                                                               02S1328 03755000
         MVC   AUSRASID(2,COMBASE),RDHWORD(PREG)                02S1328 03756000
*     UNPK(BUFASID,READALL(1:24));                              02S1329 03757000
         L     @15,CURBUF(,COMBASE)                             02S1329 03758000
         UNPK  BUFASID(5,@15),READALL(3,PREG)                   02S1329 03759000
*     TR(BUFASID,EBCTABL);                                      02S1330 03760000
         TR    BUFASID(5,@15),EBCTABL(COMBASE)                  02S1330 03761000
*     BUFASID(LENGTH(BUFASID)) = ' ';                           02S1331 03762000
         MVI   BUFASID+4(@15),C' '                              02S1331 03763000
*   END;                                                        02S1332 03764000
* ELSE                                                          02S1333 03765000
*   DO;                                                         02S1333 03766000
         B     @RC01326                                         02S1333 03767000
@RF01326 DS    0H                                               02S1334 03768000
*/*                                                                  */ 03769000
*/* READ FAILED FOR ASID - TRY OTHER METHODS                         */ 03770000
*/*                                                                  */ 03771000
*     IF USEDSP=OFF THEN                                        02S1334 03772000
         TM    USEDSP,B'00000100'                               02S1334 03773000
         BNZ   @RF01334                                         02S1334 03774000
*       DO;                                                     02S1335 03775000
*/*                                                                  */ 03776000
*/* ASVT WAS USED TO FIND ASCB - ASID IS EQUAL TO INCTR              */ 03777000
*/*                                                                  */ 03778000
*         AUSRASID=INCTR;                                       02S1336 03779000
         STH   INCTR,AUSRASID(,COMBASE)                         02S1336 03780000
*       END;                                                    02S1337 03781000
*     ELSE                                                      02S1338 03782000
*       DO;                                                     02S1338 03783000
         B     @RC01334                                         02S1338 03784000
@RF01334 DS    0H                                               02S1339 03785000
*/*                                                                  */ 03786000
*/* ASCBMAP WAS USED TO FIND ASCB - CHECK IF ITS ASID IS OK TO USE   */ 03787000
*/*                                                                  */ 03788000
*         IF BADASID(INCTR)=OFF THEN                            02S1339 03789000
         LR    @15,INCTR                                        02S1339 03790000
         SLA   @15,3                                            02S1339 03791000
         L     @14,TBPTR                                        02S1339 03792000
         ALR   @14,@15                                          02S1339 03793000
         AL    @14,@CF03369                                     02S1339 03794000
         TM    BADASID(@14),B'10000000'                         02S1339 03795000
         BNZ   @RF01339                                         02S1339 03796000
*           DO;                                                 02S1340 03797000
*             AUSRASID=MPASID(INCTR); /* ASID OK, USE IT             */ 03798000
         LR    @15,INCTR                                        02S1341 03799000
         ALR   @15,@15                                          02S1341 03800000
         L     @14,MPPTR                                        02S1341 03801000
         ALR   @14,@15                                          02S1341 03802000
         MVC   AUSRASID(2,COMBASE),MPASID-2(@14)                02S1341 03803000
*           END;                                                02S1342 03804000
*         ELSE                                                  02S1343 03805000
*           DO;                                                 02S1343 03806000
         B     @RC01339                                         02S1343 03807000
@RF01339 DS    0H                                               02S1344 03808000
*/*                                                                  */ 03809000
*/* ASID NOT GOOD IN ASCBMAP - INDICATE BAD ASID AND SET ASID TO 0   */ 03810000
*/*                                                                  */ 03811000
*             NOASID=ON;                                        02S1344 03812000
         OI    NOASID,B'00010000'                               02S1344 03813000
*             AUSRASID=0;                                       02S1345 03814000
         SLR   @00,@00                                          02S1345 03815000
         STH   @00,AUSRASID(,COMBASE)                           02S1345 03816000
*           END;                                                02S1346 03817000
*       END;                                                    02S1347 03818000
@RC01339 DS    0H                                               02S1348 03819000
*     READERR=OFF;                                              02S1348 03820000
@RC01334 NI    READERR,B'01111111'                              02S1348 03821000
*/*                                                                  */ 03822000
*/* XLATE ASID TO EBCDIC, AND PUT IT IN PRINT LINE                   */ 03823000
*/*                                                                  */ 03824000
*                                                               02S1349 03825000
*     UNPK(BUFASID,AUSRASI1);                                   02S1349 03826000
         L     @15,CURBUF(,COMBASE)                             02S1349 03827000
         UNPK  BUFASID(5,@15),AUSRASI1(3,COMBASE)               02S1349 03828000
*     TR(BUFASID,EBCTABL);                                      02S1350 03829000
         TR    BUFASID(5,@15),EBCTABL(COMBASE)                  02S1350 03830000
*     BUFASID(LENGTH(BUFASID)) = ' ';                           02S1351 03831000
         MVI   BUFASID+4(@15),C' '                              02S1351 03832000
*   END;                                                        02S1352 03833000
* BUFFER(58:61)='ASID';           /* ADD LABEL TO PRINT LINE         */ 03834000
@RC01326 L     @15,CURBUF(,COMBASE)                             02S1353 03835000
         MVC   BUFFER+57(4,@15),@CC03316                        02S1353 03836000
*/*                                                                  */ 03837000
*/* IF ASID IS NOT AVAILABLE, OVERLAY IT WITH ERROR MSG              */ 03838000
*/*                                                                  */ 03839000
* IF NOASID=ON THEN                                             02S1354 03840000
         TM    NOASID,B'00010000'                               02S1354 03841000
         BNO   @RF01354                                         02S1354 03842000
*   DO;                                                         02S1355 03843000
*     NOASID=OFF;                                               02S1356 03844000
         NI    NOASID,B'11101111'                               02S1356 03845000
*     BUFFER(63:75)='NOT AVAILABLE';                            02S1357 03846000
         MVC   BUFFER+62(13,@15),@CC03318                       02S1357 03847000
*   END;                                                        02S1358 03848000
*/*                                                             02S1359 03849000
*         GET ASCB FORWARD AND BACKWARD CHAIN POINTERS          02S1359 03850000
*                                                                    */ 03851000
*                                                               02S1359 03852000
* PREG=ADDR(ASCBFWDP);                                          02S1359 03853000
@RF01354 LA    PREG,ASCBFWDP(,ASCBPTR)                          02S1359 03854000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S1360 03855000
*     FLOWS(SUMERR)                                             02S1360 03856000
*   (BRREAD (PREG));                                            02S1360 03857000
         BRREAD (PREG)                                                  03858000
* IF READERR=OFF THEN                                           02S1361 03859000
         TM    READERR,B'10000000'                              02S1361 03860000
         BNZ   @RF01361                                         02S1361 03861000
*   DO;                                                         02S1362 03862000
*/*                                                                  */ 03863000
*/* GOT FORWARD POINTER - PUT IT INTO PRINT LINE                     */ 03864000
*/*                                                                  */ 03865000
*                                                               02S1363 03866000
*     RFY R4 RSTD;                                              02S1363 03867000
*     R4=ADDR(BUFFER(35));                                      02S1364 03868000
         L     R4,CURBUF(,COMBASE)                              02S1364 03869000
         LA    R4,BUFFER+34(,R4)                                02S1364 03870000
*     CALL ADRCNVT;                                             02S1365 03871000
         L     @15,AADRCNVT(,COMBASE)                           02S1365 03872000
         BALR  @14,@15                                          02S1365 03873000
*     RFY R4 UNRSTD;                                            02S1366 03874000
*   END;                                                        02S1367 03875000
* ELSE                                                          02S1368 03876000
*   DO;                                                         02S1368 03877000
         B     @RC01361                                         02S1368 03878000
@RF01361 DS    0H                                               02S1369 03879000
*/*                                                                  */ 03880000
*/* ERROR ON FORWARD POINTER - USE PERIODS                           */ 03881000
*/*                                                                  */ 03882000
*     BUFFER(35:40)=PERIODS;                                    02S1369 03883000
         L     @15,CURBUF(,COMBASE)                             02S1369 03884000
         MVC   BUFFER+34(6,@15),PERIODS                         02S1369 03885000
*     READERR=OFF;                                              02S1370 03886000
         NI    READERR,B'01111111'                              02S1370 03887000
*   END;                                                        02S1371 03888000
*                                                               02S1371 03889000
* PREG=ADDR(ASCBBWDP);                                          02S1372 03890000
@RC01361 LA    PREG,ASCBBWDP(,ASCBPTR)                          02S1372 03891000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S1373 03892000
*     FLOWS(SUMERR)                                             02S1373 03893000
*   (BRREAD (PREG));                                            02S1373 03894000
         BRREAD (PREG)                                                  03895000
* IF READERR=OFF THEN                                           02S1374 03896000
         TM    READERR,B'10000000'                              02S1374 03897000
         BNZ   @RF01374                                         02S1374 03898000
*   DO;                                                         02S1375 03899000
*/*                                                                  */ 03900000
*/* GOT BACKWARD POINTER - PUT IT INTO PRINT LINE                    */ 03901000
*/*                                                                  */ 03902000
*                                                               02S1376 03903000
*     RFY R4 RSTD;                                              02S1376 03904000
*     R4=ADDR(BUFFER(49));                                      02S1377 03905000
         L     R4,CURBUF(,COMBASE)                              02S1377 03906000
         LA    R4,BUFFER+48(,R4)                                02S1377 03907000
*     CALL ADRCNVT;                                             02S1378 03908000
         L     @15,AADRCNVT(,COMBASE)                           02S1378 03909000
         BALR  @14,@15                                          02S1378 03910000
*     RFY R4 UNRSTD;                                            02S1379 03911000
*   END;                                                        02S1380 03912000
* ELSE                                                          02S1381 03913000
*   DO;                                                         02S1381 03914000
         B     @RC01374                                         02S1381 03915000
@RF01374 DS    0H                                               02S1382 03916000
*/*                                                                  */ 03917000
*/* ERROR ON BACKWARD POINTER - USE PERIODS                          */ 03918000
*/*                                                                  */ 03919000
*     BUFFER(49:54)=PERIODS;                                    02S1382 03920000
         L     @15,CURBUF(,COMBASE)                             02S1382 03921000
         MVC   BUFFER+48(6,@15),PERIODS                         02S1382 03922000
*     READERR=OFF;                                              02S1383 03923000
         NI    READERR,B'01111111'                              02S1383 03924000
*   END;                                                        02S1384 03925000
*/*                                                                  */ 03926000
*/* ADD LABELS TO PRINT LINE                                         */ 03927000
*/*                                                                  */ 03928000
* BUFFER(30:33)='NEXT';                                         02S1385 03929000
@RC01374 L     @15,CURBUF(,COMBASE)                             02S1385 03930000
         MVC   BUFFER+29(4,@15),@CC03321                        02S1385 03931000
* BUFFER(44:47)='PREV';                                         02S1386 03932000
         MVC   BUFFER+43(4,@15),@CC03322                        02S1386 03933000
*/*                                                                  */ 03934000
*/* COMPLETE JOB LINE AND PRINT IT                                   */ 03935000
*/*                                                                  */ 03936000
* BUFFER(16:19)='ASCB';                                         01S1387 03937000
         MVC   BUFFER+15(4,@15),@CC03323                        01S1387 03938000
* PREG=ADDR(PASCB1);                                            01S1388 03939000
*                                                               01S1388 03940000
         L     PREG,@PC00007                                    01S1388 03941000
* RFY R4 RSTD;                                                  01S1389 03942000
* R4=ADDR(BUFFER(21));                                          01S1390 03943000
         LA    R4,BUFFER+20(,@15)                               01S1390 03944000
* CALL ADRCNVT;                                                 01S1391 03945000
         L     @15,AADRCNVT(,COMBASE)                           01S1391 03946000
         BALR  @14,@15                                          01S1391 03947000
* RFY R4 UNRSTD;                                                01S1392 03948000
*                                                               01S1392 03949000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  01S1393 03950000
*   (BRWRITE 1);                                                01S1393 03951000
         BRWRITE 1                                                      03952000
*/*                                                                  */ 03953000
*/* CHECK ASCB STATUS AND SPACE A LINE                               */ 03954000
*/*                                                                  */ 03955000
*/*                                                             02S1394 03956000
*         CHECK OUT ASCB STATUS                                 02S1394 03957000
*                                                                    */ 03958000
*/*                                                                  */ 03959000
*/* VALIDITY CHECK ASCB                                              */ 03960000
*/*                                                                  */ 03961000
*                                                               02S1394 03962000
* PREG=ADDR(ASCBASCB);                                          02S1394 03963000
         LR    PREG,ASCBPTR                                     02S1394 03964000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          02S1395 03965000
*     FLOWS(SUMERR)                                             02S1395 03966000
*   (BRREAD (PREG));                                            02S1395 03967000
         BRREAD (PREG)                                                  03968000
* IF READERR=OFF THEN                                           02S1396 03969000
         TM    READERR,B'10000000'                              02S1396 03970000
         BNZ   @RF01396                                         02S1396 03971000
*   DO;                                                         02S1397 03972000
*     IF READALL ^= 'ASCB' THEN                                 02S1398 03973000
         CLC   READALL(4,PREG),@CC03323                         02S1398 03974000
         BE    @RF01398                                         02S1398 03975000
*       DO;                                                     02S1399 03976000
*         BUF3(1)='-';                                          02S1400 03977000
         L     @15,CURBUF(,COMBASE)                             02S1400 03978000
         MVI   BUF3(@15),C'-'                                   02S1400 03979000
*         BUF3(3:6)='ASCB';                                     02S1401 03980000
         MVC   BUF3+2(4,@15),@CC03323                           02S1401 03981000
*         BUF3(8:LENGTH(VALERR)+7)=VALERR;                      02S1402 03982000
*                                                               02S1402 03983000
         MVC   BUF3+7(21,@15),VALERR                            02S1402 03984000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S1403 03985000
*           (BRWRITE 1);                                        02S1403 03986000
         BRWRITE 1                                                      03987000
*       END;                                                    02S1404 03988000
*   END;                                                        02S1405 03989000
* ELSE                                                          02S1406 03990000
*   DO;                                                         02S1406 03991000
         B     @RC01396                                         02S1406 03992000
@RF01396 DS    0H                                               02S1407 03993000
*/*                                                                  */ 03994000
*/* ERROR READING BEGINNING OF ASCB - ISSUE MESSAGE AND CHECK FOR    */ 03995000
*/* ERROR AT OTHER END OF ASCB                                       */ 03996000
*/*                                                                  */ 03997000
*                                                               02S1407 03998000
*     RFY R4 RSTD;                                              02S1407 03999000
*     R4=ADDR(ASCBVLRA);                                        02S1408 04000000
         LA    R4,ASCBVLRA                                      02S1408 04001000
*     CALL ADRCNVT;                                             02S1409 04002000
         L     @15,AADRCNVT(,COMBASE)                           02S1409 04003000
         BALR  @14,@15                                          02S1409 04004000
*     RFY R4 UNRSTD;                                            02S1410 04005000
*     BUF2(1:LENGTH(ASCBVLRM))=ASCBVLRM;                        02S1411 04006000
*                                                               02S1411 04007000
         L     @15,CURBUF(,COMBASE)                             02S1411 04008000
         MVC   BUF2(59,@15),ASCBVLRM                            02S1411 04009000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S1412 04010000
*       (BRWRITE 1);                                            02S1412 04011000
         BRWRITE 1                                                      04012000
*     IF ASCBENDF=ON THEN                                       02S1413 04013000
         TM    ASCBENDF,B'01000000'                             02S1413 04014000
         BNO   @RF01413                                         02S1413 04015000
*       DO;                                                     02S1414 04016000
*/*                                                                  */ 04017000
*/* ERROR ON BOTH ENDS OF ASCB - CANNOT READ ANY MORE OF IT - SKIP   */ 04018000
*/* THE REST OF THIS ASCB PROCESSING AND ISSUE MESSAGE               */ 04019000
*/*                                                                  */ 04020000
*         ASCBENDF=OFF;                                         02S1415 04021000
*         SKIPASCB=ON;                                          02S1416 04022000
         OI    SKIPASCB,B'10000000'                             02S1416 04023000
         NI    ASCBENDF,B'10111111'                             02S1416 04024000
*         BUF2(1:LENGTH(JTRMSG))=JTRMSG;                        02S1417 04025000
*                                                               02S1417 04026000
         L     @15,CURBUF(,COMBASE)                             02S1417 04027000
         MVC   BUF2(44,@15),JTRMSG                              02S1417 04028000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S1418 04029000
*           (BRWRITE 1);                                        02S1418 04030000
         BRWRITE 1                                                      04031000
*       END;                                                    02S1419 04032000
*     READERR=OFF;                                              02S1420 04033000
@RF01413 NI    READERR,B'01111111'                              02S1420 04034000
*   END;                                                        02S1421 04035000
* IF SKIPASCB=OFF THEN                                          02S1422 04036000
@RC01396 TM    SKIPASCB,B'10000000'                             02S1422 04037000
         BNZ   @RF01422                                         02S1422 04038000
*   DO;                                                         02S1423 04039000
*/*                                                                  */ 04040000
*/* ASCB IS OK TO PROCESS - GET ASCB FLAGS AND SAVE IN ADSTATUS (IF  */ 04041000
*/* ERROR ON ANY FLAGS, USE ZEROS IN ADSTATUS)                       */ 04042000
*/*                                                                  */ 04043000
*                                                               02S1424 04044000
*     PREG=ADDR(ASCBRCTF);                                      02S1424 04045000
         LA    PREG,ASCBRCTF(,ASCBPTR)                          02S1424 04046000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      02S1425 04047000
*         FLOWS(SUMERR)                                         02S1425 04048000
*       (BRREAD (PREG));                                        02S1425 04049000
         BRREAD (PREG)                                                  04050000
*     IF READERR=OFF THEN                                       02S1426 04051000
         TM    READERR,B'10000000'                              02S1426 04052000
         BNZ   @RF01426                                         02S1426 04053000
*       ADSTATUS(1:16)=RDHWORD;                                 02S1427 04054000
         MVC   ADSTATUS(2),RDHWORD(PREG)                        02S1427 04055000
*     ELSE                                                      02S1428 04056000
*       DO;                                                     02S1428 04057000
         B     @RC01426                                         02S1428 04058000
@RF01426 DS    0H                                               02S1429 04059000
*         READERR=OFF;                                          02S1429 04060000
         NI    READERR,B'01111111'                              02S1429 04061000
*         ADSTATUS(1:16)=''B;                                   02S1430 04062000
         XC    ADSTATUS(2),ADSTATUS                             02S1430 04063000
*       END;                                                    02S1431 04064000
*                                                               02S1431 04065000
*     PREG=ADDR(ASCBDSP1);                                      02S1432 04066000
@RC01426 LA    PREG,ASCBDSP1(,ASCBPTR)                          02S1432 04067000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      02S1433 04068000
*         FLOWS(SUMERR)                                         02S1433 04069000
*       (BRREAD (PREG));                                        02S1433 04070000
         BRREAD (PREG)                                                  04071000
*     IF READERR=OFF THEN                                       02S1434 04072000
         TM    READERR,B'10000000'                              02S1434 04073000
         BNZ   @RF01434                                         02S1434 04074000
*       ADSTATUS(17:24)=RDBYTE;                                 02S1435 04075000
         MVC   ADSTATUS+2(1),RDBYTE(PREG)                       02S1435 04076000
*     ELSE                                                      02S1436 04077000
*       DO;                                                     02S1436 04078000
         B     @RC01434                                         02S1436 04079000
@RF01434 DS    0H                                               02S1437 04080000
*         READERR=OFF;                                          02S1437 04081000
         NI    READERR,B'01111111'                              02S1437 04082000
*         ADSTATUS(17:24)=''B;                                  02S1438 04083000
         MVI   ADSTATUS+2,X'00'                                 02S1438 04084000
*       END;                                                    02S1439 04085000
*/*                                                                  */ 04086000
*/* CHECK ASCB STATUS FROM FLAGS                                     */ 04087000
*/*                                                                  */ 04088000
*/*                                                             03S1440 04089000
*         PROCESS ASCB STATUS                                   03S1440 04090000
*                                                                    */ 04091000
*/*                                                                  */ 04092000
*/* PROCESSING CONSISTS OF CHECKING FOR CERTAIN STATUS BIT BEING ON, */ 04093000
*/* AND ISSUING A MESSAGE IF SO                                      */ 04094000
*/*                                                                  */ 04095000
* IF TMNO=ON & FQU=ON THEN        /* ASCB BEING QUIESCED?            */ 04096000
@RC01434 TM    TMNO,B'10100000'                                 03S1440 04097000
         BNO   @RF01440                                         03S1440 04098000
*   DO;                                                         03S1441 04099000
*     BUF3(1:LENGTH(AQUMG))=AQUMG;                              03S1442 04100000
*                                                               03S1442 04101000
         L     @15,CURBUF(,COMBASE)                             03S1442 04102000
         MVC   BUF3(30,@15),AQUMG                               03S1442 04103000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1443 04104000
*       (BRWRITE 1);                                            03S1443 04105000
         BRWRITE 1                                                      04106000
*   END;                                                        03S1444 04107000
* IF TMNO=ON & FRS=ON THEN        /* ASCB RESTORED?                  */ 04108000
@RF01440 TM    TMNO,B'11000000'                                 03S1445 04109000
         BNO   @RF01445                                         03S1445 04110000
*   DO;                                                         03S1446 04111000
*     BUF3(1:LENGTH(ARSMG))=ARSMG;                              03S1447 04112000
*                                                               03S1447 04113000
         L     @15,CURBUF(,COMBASE)                             03S1447 04114000
         MVC   BUF3(30,@15),ARSMG                               03S1447 04115000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1448 04116000
*       (BRWRITE 1);                                            03S1448 04117000
         BRWRITE 1                                                      04118000
*   END;                                                        03S1449 04119000
* IF WAIT=ON | TMLW=ON THEN       /* ASCB LONG WAIT?                 */ 04120000
@RF01445 TM    WAIT,B'00001010'                                 03S1450 04121000
         BZ    @RF01450                                         03S1450 04122000
*   DO;                                                         03S1451 04123000
*     BUF3(1:LENGTH(ALWMG))=ALWMG;                              03S1452 04124000
*                                                               03S1452 04125000
         L     @15,CURBUF(,COMBASE)                             03S1452 04126000
         MVC   BUF3(28,@15),ALWMG                               03S1452 04127000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1453 04128000
*       (BRWRITE 1);                                            03S1453 04129000
         BRWRITE 1                                                      04130000
*   END;                                                        03S1454 04131000
* IF FND=ON THEN                  /* ASCB TERMINATION REQUESTED?     */ 04132000
@RF01450 TM    FND,B'00010000'                                  03S1455 04133000
         BNO   @RF01455                                         03S1455 04134000
*   DO;                                                         03S1456 04135000
*     BUF3(1:LENGTH(ARTMG))=ARTMG;                              03S1457 04136000
*                                                               03S1457 04137000
         L     @15,CURBUF(,COMBASE)                             03S1457 04138000
         MVC   BUF3(37,@15),ARTMG                               03S1457 04139000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1458 04140000
*       (BRWRITE 1);                                            03S1458 04141000
         BRWRITE 1                                                      04142000
*   END;                                                        03S1459 04143000
* IF TERM=ON | ABNT=ON THEN       /* ASCB BEING TERMINATED?          */ 04144000
@RF01455 TM    TERM,B'00011000'                                 03S1460 04145000
         BZ    @RF01460                                         03S1460 04146000
*   DO;                                                         03S1461 04147000
*     BUF3(1:LENGTH(ATMMG))=ATMMG;                              03S1462 04148000
*                                                               03S1462 04149000
         L     @15,CURBUF(,COMBASE)                             03S1462 04150000
         MVC   BUF3(32,@15),ATMMG                               03S1462 04151000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1463 04152000
*       (BRWRITE 1);                                            03S1463 04153000
         BRWRITE 1                                                      04154000
*   END;                                                        03S1464 04155000
* IF OUT=ON THEN                  /* ASCB SWAPPED OUT?               */ 04156000
@RF01460 TM    OUT,B'00000100'                                  03S1465 04157000
         BNO   @RF01465                                         03S1465 04158000
*   DO;                                                         03S1466 04159000
*     BUF3(1:LENGTH(ACSMG))=ACSMG;                              03S1467 04160000
*                                                               03S1467 04161000
         L     @15,CURBUF(,COMBASE)                             03S1467 04162000
         MVC   BUF3(27,@15),ACSMG                               03S1467 04163000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1468 04164000
*       (BRWRITE 1);                                            03S1468 04165000
         BRWRITE 1                                                      04166000
*   END;                                                        03S1469 04167000
* IF NOQ=ON THEN                  /* ASCB NOT QUEUED?                */ 04168000
@RF01465 TM    NOQ,B'10000000'                                  03S1470 04169000
         BNO   @RF01470                                         03S1470 04170000
*   DO;                                                         03S1471 04171000
*     BUF3(1:LENGTH(ANQMG))=ANQMG;                              03S1472 04172000
*                                                               03S1472 04173000
         L     @15,CURBUF(,COMBASE)                             03S1472 04174000
         MVC   BUF3(26,@15),ANQMG                               03S1472 04175000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1473 04176000
*       (BRWRITE 1);                                            03S1473 04177000
         BRWRITE 1                                                      04178000
*   END;                                                        03S1474 04179000
*/*                                                                  */ 04180000
*/* IF ASCB IS NON-DISPATCHABLE, GET A PROBLEM ENTRY AND FILL IT IN  */ 04181000
*/*                                                                  */ 04182000
* IF FAIL=ON THEN                                               03S1475 04183000
@RF01470 TM    FAIL,B'01000000'                                 03S1475 04184000
         BNO   @RF01475                                         03S1475 04185000
*   DO;                                                         03S1476 04186000
*     CALL GETPRNTY;                                            03S1477 04187000
         BAL   @14,GETPRNTY                                     03S1477 04188000
*     PROBPTR=PLSTL;                                            03S1478 04189000
         L     PROBPTR,PLSTL                                    03S1478 04190000
*     PRTA=ASCBPTR;                                             03S1479 04191000
         ST    ASCBPTR,PRTA(,PROBPTR)                           03S1479 04192000
*     PRJOB=JOBNAME;                                            03S1480 04193000
         MVC   PRJOB(8,PROBPTR),JOBNAME                         03S1480 04194000
*     PRPND=ON;                                                 03S1481 04195000
         OI    PRPND(PROBPTR),B'00100000'                       03S1481 04196000
*     PRASCB=ON;                                                03S1482 04197000
         OI    PRASCB(PROBPTR),B'00100000'                      03S1482 04198000
*   END;                                                        03S1483 04199000
*/*                                                                  */ 04200000
*/* IF ASCB IS ABENDING, GET A PROBLEM ENTRY AND FILL IT IN          */ 04201000
*/*                                                                  */ 04202000
* IF ABNT=ON THEN                                               03S1484 04203000
@RF01475 TM    ABNT,B'00001000'                                 03S1484 04204000
         BNO   @RF01484                                         03S1484 04205000
*   DO;                                                         03S1485 04206000
*     CALL GETPRNTY;                                            03S1486 04207000
         BAL   @14,GETPRNTY                                     03S1486 04208000
*     PROBPTR=PLSTL;                                            03S1487 04209000
         L     PROBPTR,PLSTL                                    03S1487 04210000
*     PRTA=ASCBPTR;                                             03S1488 04211000
         ST    ASCBPTR,PRTA(,PROBPTR)                           03S1488 04212000
*     PRJOB=JOBNAME;                                            03S1489 04213000
         MVC   PRJOB(8,PROBPTR),JOBNAME                         03S1489 04214000
*     PRABND=ON;                                                03S1490 04215000
         OI    PRABND(PROBPTR),B'10000000'                      03S1490 04216000
*     PRASCB=ON;                                                03S1491 04217000
         OI    PRASCB(PROBPTR),B'00100000'                      03S1491 04218000
*/*                                                                  */ 04219000
*/* GET ASCB COMPLETION CODE FOR ENTRY                               */ 04220000
*/*                                                                  */ 04221000
*                                                               03S1492 04222000
*     PREG=ADDR(ASCBMCC);                                       03S1492 04223000
         LA    PREG,ASCBMCC(,ASCBPTR)                           03S1492 04224000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      03S1493 04225000
*         FLOWS(SUMERR)                                         03S1493 04226000
*       (BRREAD (PREG));                                        03S1493 04227000
         BRREAD (PREG)                                                  04228000
*     IF READERR=OFF THEN                                       03S1494 04229000
         TM    READERR,B'10000000'                              03S1494 04230000
         BNZ   @RF01494                                         03S1494 04231000
*       PRCMP=READALL;                                          03S1495 04232000
         MVC   PRCMP(4,PROBPTR),READALL(PREG)                   03S1495 04233000
*     ELSE                                                      03S1496 04234000
*       READERR=OFF;                                            03S1496 04235000
         B     @RC01494                                         03S1496 04236000
@RF01494 NI    READERR,B'01111111'                              03S1496 04237000
*   END;                                                        03S1497 04238000
@RC01494 DS    0H                                               03S1498 04239000
*   END;                                                        02S1498 04240000
@RF01484 DS    0H                                               02S1499 04241000
*                                                               01S1499 04242000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  01S1499 04243000
*   (BRWRITE 1);                                                01S1499 04244000
@RF01422 DS    0H                                               01S1499 04245000
         BRWRITE 1                                                      04246000
*/*                                                                  */ 04247000
*/* LIST LOCAL SRBS AND TCBS                                         */ 04248000
*/*                                                                  */ 04249000
*/*                                                             02S1500 04250000
*         LIST SRBS QUEUED TO AN ADDRESS SPACE                  02S1500 04251000
*                                                                    */ 04252000
*/*                                                                  */ 04253000
*/* CHECK FOR ASCB PROCESSING OK                                     */ 04254000
*/*                                                                  */ 04255000
* IF SKIPASCB=OFF THEN                                          02S1500 04256000
         TM    SKIPASCB,B'10000000'                             02S1500 04257000
         BNZ   @RF01500                                         02S1500 04258000
*   DO;                                                         02S1501 04259000
*     BUFFER(3:LENGTH(LSRBTTL)+2)=LSRBTTL;                      02S1502 04260000
*                                                               02S1502 04261000
         L     @15,CURBUF(,COMBASE)                             02S1502 04262000
         MVC   BUFFER+2(27,@15),LSRBTTL                         02S1502 04263000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              02S1503 04264000
*       (BRWRITE 2);                                            02S1503 04265000
         BRWRITE 2                                                      04266000
*/*                                                                  */ 04267000
*/* GET LSPL ADDRESS AND CHECK IT FOR 0                              */ 04268000
*/*                                                                  */ 04269000
*                                                               02S1504 04270000
*     PREG=ADDR(ASCBSPL);                                       02S1504 04271000
         LA    PREG,ASCBSPL(,ASCBPTR)                           02S1504 04272000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      02S1505 04273000
*         FLOWS(SUMERR)                                         02S1505 04274000
*       (BRREAD (PREG));                                        02S1505 04275000
         BRREAD (PREG)                                                  04276000
*     IF READERR=OFF THEN                                       02S1506 04277000
         TM    READERR,B'10000000'                              02S1506 04278000
         BNZ   @RF01506                                         02S1506 04279000
*       DO;                                                     02S1507 04280000
*         SPLPTR=RDPTR;                                         02S1508 04281000
         L     SPLPTR,RDPTR-1(,PREG)                            02S1508 04282000
         LA    SPLPTR,0(,SPLPTR)                                02S1508 04283000
*         IF SPLPTR ^= 0 THEN                                   02S1509 04284000
         LTR   SPLPTR,SPLPTR                                    02S1509 04285000
         BZ    @RF01509                                         02S1509 04286000
*           DO;                                                 02S1510 04287000
*/*                                                                  */ 04288000
*/* LSPL ADDRESS OK - PROCESS NON-QUIESCEABLE AND SYSTEM SRB QUEUES  */ 04289000
*/*                                                                  */ 04290000
*/*                                                             03S1511 04291000
*         PROCESS LSPL NON-QUIESCEABLE QUEUE                    03S1511 04292000
*                                                                    */ 04293000
*/*                                                                  */ 04294000
*/* GET POINTER TO 1ST SRB                                           */ 04295000
*/*                                                                  */ 04296000
*                                                               03S1511 04297000
* PREG=ADDR(SPLNQF);                                            03S1511 04298000
         LR    PREG,SPLPTR                                      03S1511 04299000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S1512 04300000
*     FLOWS(SUMERR)                                             03S1512 04301000
*   (BRREAD (PREG));                                            03S1512 04302000
         BRREAD (PREG)                                                  04303000
* IF READERR=OFF THEN                                           03S1513 04304000
         TM    READERR,B'10000000'                              03S1513 04305000
         BNZ   @RF01513                                         03S1513 04306000
*   DO;                                                         03S1514 04307000
*     SRBQPTRF=RDPTR;                                           03S1515 04308000
         L     SRBQPTRF,RDPTR-1(,PREG)                          03S1515 04309000
         LA    SRBQPTRF,0(,SRBQPTRF)                            03S1515 04310000
*/*                                                                  */ 04311000
*/* GET POINTER TO LAST SRB                                          */ 04312000
*/*                                                                  */ 04313000
*                                                               03S1516 04314000
*     PREG=ADDR(SPLNQL);                                        03S1516 04315000
         LA    PREG,SPLNQL(,SPLPTR)                             03S1516 04316000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      03S1517 04317000
*         FLOWS(SUMERR)                                         03S1517 04318000
*       (BRREAD (PREG));                                        03S1517 04319000
         BRREAD (PREG)                                                  04320000
*     IF READERR=OFF THEN                                       03S1518 04321000
         TM    READERR,B'10000000'                              03S1518 04322000
         BNZ   @RF01518                                         03S1518 04323000
*       DO;                                                     03S1519 04324000
*         SRBQPTRL=RDPTR;                                       03S1520 04325000
         L     @00,RDPTR-1(,PREG)                               03S1520 04326000
         ICM   @00,8,@CB02300                                   03S1520 04327000
         ST    @00,SRBQPTRL                                     03S1520 04328000
*         SRBENDP=ON;             /* INDICATE PTR IS VALID           */ 04329000
         OI    SRBENDP,B'00001000'                              03S1521 04330000
*       END;                                                    03S1522 04331000
*     ELSE                                                      03S1523 04332000
*       DO;                                                     03S1523 04333000
         B     @RC01518                                         03S1523 04334000
@RF01518 DS    0H                                               03S1524 04335000
*/*                                                                  */ 04336000
*/* ERROR ON PTR TO LAST SRB - ISSUE MSG AND DO NOT USE PTR          */ 04337000
*/*                                                                  */ 04338000
*                                                               03S1524 04339000
*         RFY R4 RSTD;                                          03S1524 04340000
*         R4=ADDR(LSPNERMA);                                    03S1525 04341000
         LA    R4,LSPNERMA                                      03S1525 04342000
*         CALL ADRCNVT;                                         03S1526 04343000
         L     @15,AADRCNVT(,COMBASE)                           03S1526 04344000
         BALR  @14,@15                                          03S1526 04345000
*         RFY R4 UNRSTD;                                        03S1527 04346000
*         BUFFER(4:LENGTH(LSPNERMG)+3)=LSPNERMG;                03S1528 04347000
*                                                               03S1528 04348000
         L     @15,CURBUF(,COMBASE)                             03S1528 04349000
         MVC   BUFFER+3(46,@15),LSPNERMG                        03S1528 04350000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S1529 04351000
*           (BRWRITE 1);                                        03S1529 04352000
         BRWRITE 1                                                      04353000
*         READERR=OFF;                                          03S1530 04354000
         NI    READERR,B'01111111'                              03S1530 04355000
*       END;                                                    03S1531 04356000
*/*                                                                  */ 04357000
*/* PRINT SUBTITLE AND PROCESS SRB CHAIN                             */ 04358000
*/*                                                                  */ 04359000
*     BUFFER(4:LENGTH(SPLNTTL)+3)=SPLNTTL;                      03S1532 04360000
*                                                               03S1532 04361000
@RC01518 L     @15,CURBUF(,COMBASE)                             03S1532 04362000
         MVC   BUFFER+3(21,@15),SPLNTTL                         03S1532 04363000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1533 04364000
*       (BRWRITE 1);                                            03S1533 04365000
         BRWRITE 1                                                      04366000
*     CALL SRBCHAIN;                                            03S1534 04367000
         BAL   @14,SRBCHAIN                                     03S1534 04368000
*     SRBENDP=OFF;                                              03S1535 04369000
         NI    SRBENDP,B'11110111'                              03S1535 04370000
*   END;                                                        03S1536 04371000
* ELSE                                                          03S1537 04372000
*   DO;                                                         03S1537 04373000
         B     @RC01513                                         03S1537 04374000
@RF01513 DS    0H                                               03S1538 04375000
*/*                                                                  */ 04376000
*/* ERROR ON PTR TO 1ST SRB - ISSUE MSG                              */ 04377000
*/*                                                                  */ 04378000
*                                                               03S1538 04379000
*     RFY R4 RSTD;                                              03S1538 04380000
*     R4=ADDR(LSPNRMA1);                                        03S1539 04381000
         LA    R4,LSPNRMA1                                      03S1539 04382000
*     CALL ADRCNVT;                                             03S1540 04383000
         L     @15,AADRCNVT(,COMBASE)                           03S1540 04384000
         BALR  @14,@15                                          03S1540 04385000
*     RFY R4 UNRSTD;                                            03S1541 04386000
*     BUFFER(4:LENGTH(LSPNRMG1)+3)=LSPNRMG1;                    03S1542 04387000
*                                                               03S1542 04388000
         L     @03,CURBUF(,COMBASE)                             03S1542 04389000
         MVC   BUFFER+3(49,@03),LSPNRMG1                        03S1542 04390000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1543 04391000
*       (BRWRITE 1);                                            03S1543 04392000
         BRWRITE 1                                                      04393000
*     READERR=OFF;                                              03S1544 04394000
         NI    READERR,B'01111111'                              03S1544 04395000
*   END;                                                        03S1545 04396000
*                                                               02S1546 04397000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      02S1546 04398000
*               (BRWRITE 1);                                    02S1546 04399000
@RC01513 DS    0H                                               02S1546 04400000
         BRWRITE 1                                                      04401000
*/*                                                             03S1547 04402000
*         PROCESS LSPL SYSTEM QUEUE                             03S1547 04403000
*                                                                    */ 04404000
*/*                                                                  */ 04405000
*/* GET POINTER TO 1ST SRB                                           */ 04406000
*/*                                                                  */ 04407000
*                                                               03S1547 04408000
* PREG=ADDR(SPLSQF);                                            03S1547 04409000
         LA    PREG,SPLSQF(,SPLPTR)                             03S1547 04410000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S1548 04411000
*     FLOWS(SUMERR)                                             03S1548 04412000
*   (BRREAD (PREG));                                            03S1548 04413000
         BRREAD (PREG)                                                  04414000
* IF READERR=OFF THEN                                           03S1549 04415000
         TM    READERR,B'10000000'                              03S1549 04416000
         BNZ   @RF01549                                         03S1549 04417000
*   DO;                                                         03S1550 04418000
*     SRBQPTRF=RDPTR;                                           03S1551 04419000
         L     SRBQPTRF,RDPTR-1(,PREG)                          03S1551 04420000
         LA    SRBQPTRF,0(,SRBQPTRF)                            03S1551 04421000
*/*                                                                  */ 04422000
*/* GET POINTER TO LAST SRB                                          */ 04423000
*/*                                                                  */ 04424000
*                                                               03S1552 04425000
*     PREG=ADDR(SPLSQL);                                        03S1552 04426000
         LA    PREG,SPLSQL(,SPLPTR)                             03S1552 04427000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      03S1553 04428000
*         FLOWS(SUMERR)                                         03S1553 04429000
*       (BRREAD (PREG));                                        03S1553 04430000
         BRREAD (PREG)                                                  04431000
*     IF READERR=OFF THEN                                       03S1554 04432000
         TM    READERR,B'10000000'                              03S1554 04433000
         BNZ   @RF01554                                         03S1554 04434000
*       DO;                                                     03S1555 04435000
*         SRBQPTRL=RDPTR;                                       03S1556 04436000
         L     @02,RDPTR-1(,PREG)                               03S1556 04437000
         LA    @02,0(,@02)                                      03S1556 04438000
         ST    @02,SRBQPTRL                                     03S1556 04439000
*         SRBENDP=ON;             /* INDICATE PTR IS VALID           */ 04440000
         OI    SRBENDP,B'00001000'                              03S1557 04441000
*       END;                                                    03S1558 04442000
*     ELSE                                                      03S1559 04443000
*       DO;                                                     03S1559 04444000
         B     @RC01554                                         03S1559 04445000
@RF01554 DS    0H                                               03S1560 04446000
*/*                                                                  */ 04447000
*/* ERROR ON PTR TO LAST SRB - ISSUE MSG AND DO NOT USE PTR          */ 04448000
*/*                                                                  */ 04449000
*                                                               03S1560 04450000
*         RFY R4 RSTD;                                          03S1560 04451000
*         R4=ADDR(LSPSERMA);                                    03S1561 04452000
         LA    R4,LSPSERMA                                      03S1561 04453000
*         CALL ADRCNVT;                                         03S1562 04454000
         L     @15,AADRCNVT(,COMBASE)                           03S1562 04455000
         BALR  @14,@15                                          03S1562 04456000
*         RFY R4 UNRSTD;                                        03S1563 04457000
*         BUFFER(4:LENGTH(LSPSERMG)+3)=LSPSERMG;                03S1564 04458000
*                                                               03S1564 04459000
         L     @02,CURBUF(,COMBASE)                             03S1564 04460000
         MVC   BUFFER+3(47,@02),LSPSERMG                        03S1564 04461000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          03S1565 04462000
*           (BRWRITE 1);                                        03S1565 04463000
         BRWRITE 1                                                      04464000
*         READERR=OFF;                                          03S1566 04465000
         NI    READERR,B'01111111'                              03S1566 04466000
*       END;                                                    03S1567 04467000
*/*                                                                  */ 04468000
*/* PRINT SUBTITLE AND PROCESS SRB CHAIN                             */ 04469000
*/*                                                                  */ 04470000
*     BUFFER(4:LENGTH(SPLSTTL)+3)=SPLSTTL;                      03S1568 04471000
*                                                               03S1568 04472000
@RC01554 L     @02,CURBUF(,COMBASE)                             03S1568 04473000
         MVC   BUFFER+3(12,@02),SPLSTTL                         03S1568 04474000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1569 04475000
*       (BRWRITE 1);                                            03S1569 04476000
         BRWRITE 1                                                      04477000
*     CALL SRBCHAIN;                                            03S1570 04478000
         BAL   @14,SRBCHAIN                                     03S1570 04479000
*     SRBENDP=OFF;                                              03S1571 04480000
         NI    SRBENDP,B'11110111'                              03S1571 04481000
*   END;                                                        03S1572 04482000
* ELSE                                                          03S1573 04483000
*   DO;                                                         03S1573 04484000
         B     @RC01549                                         03S1573 04485000
@RF01549 DS    0H                                               03S1574 04486000
*/*                                                                  */ 04487000
*/* ERROR ON PTR TO 1ST SRB - ISSUE MSG                              */ 04488000
*/*                                                                  */ 04489000
*                                                               03S1574 04490000
*     RFY R4 RSTD;                                              03S1574 04491000
*     R4=ADDR(LSPSRMA1);                                        03S1575 04492000
         LA    R4,LSPSRMA1                                      03S1575 04493000
*     CALL ADRCNVT;                                             03S1576 04494000
         L     @15,AADRCNVT(,COMBASE)                           03S1576 04495000
         BALR  @14,@15                                          03S1576 04496000
*     RFY R4 UNRSTD;                                            03S1577 04497000
*     BUFFER(4:LENGTH(LSPSRMG1)+3)=LSPSRMG1;                    03S1578 04498000
*                                                               03S1578 04499000
         L     @15,CURBUF(,COMBASE)                             03S1578 04500000
         MVC   BUFFER+3(50,@15),LSPSRMG1                        03S1578 04501000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1579 04502000
*       (BRWRITE 1);                                            03S1579 04503000
         BRWRITE 1                                                      04504000
*     READERR=OFF;                                              03S1580 04505000
         NI    READERR,B'01111111'                              03S1580 04506000
*   END;                                                        03S1581 04507000
*                                                               02S1582 04508000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      02S1582 04509000
*               (BRWRITE 1);                                    02S1582 04510000
@RC01549 DS    0H                                               02S1582 04511000
         BRWRITE 1                                                      04512000
*           END;                                                02S1583 04513000
*         ELSE                                                  02S1584 04514000
*           DO;                                                 02S1584 04515000
         B     @RC01509                                         02S1584 04516000
@RF01509 DS    0H                                               02S1585 04517000
*/*                                                                  */ 04518000
*/* LSPL ADDRESS IS 0 - ISSUE MESSAGE                                */ 04519000
*/*                                                                  */ 04520000
*             BUFFER(4:LENGTH(SPL0MSG)+3)=SPL0MSG;              02S1585 04521000
*                                                               02S1585 04522000
         L     @15,CURBUF(,COMBASE)                             02S1585 04523000
         MVC   BUFFER+3(32,@15),SPL0MSG                         02S1585 04524000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      02S1586 04525000
*               (BRWRITE 2);                                    02S1586 04526000
         BRWRITE 2                                                      04527000
*           END;                                                02S1587 04528000
*       END;                                                    02S1588 04529000
*     ELSE                                                      02S1589 04530000
*       DO;                                                     02S1589 04531000
         B     @RC01506                                         02S1589 04532000
@RF01506 DS    0H                                               02S1590 04533000
*/*                                                                  */ 04534000
*/* ERROR READING LSPL ADDRESS - ISSUE MESSAGE                       */ 04535000
*/*                                                                  */ 04536000
*                                                               02S1590 04537000
*         RFY R4 RSTD;                                          02S1590 04538000
*         R4=ADDR(LSPERMA);                                     02S1591 04539000
         LA    R4,LSPERMA                                       02S1591 04540000
*         CALL ADRCNVT;                                         02S1592 04541000
         L     @15,AADRCNVT(,COMBASE)                           02S1592 04542000
         BALR  @14,@15                                          02S1592 04543000
*         RFY R4 UNRSTD;                                        02S1593 04544000
*         BUFFER(4:LENGTH(LSPERMG)+3)=LSPERMG;                  02S1594 04545000
*                                                               02S1594 04546000
         L     @15,CURBUF(,COMBASE)                             02S1594 04547000
         MVC   BUFFER+3(49,@15),LSPERMG                         02S1594 04548000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S1595 04549000
*           (BRWRITE 2);                                        02S1595 04550000
         BRWRITE 2                                                      04551000
*         READERR=OFF;                                          02S1596 04552000
         NI    READERR,B'01111111'                              02S1596 04553000
*       END;                                                    02S1597 04554000
*   END;                                                        02S1598 04555000
@RC01506 DS    0H                                               02S1599 04556000
*/*                                                             02S1599 04557000
*         LIST TCBS FOR THIS ADDRESS SPACE                      02S1599 04558000
*                                                                    */ 04559000
*/*                                                                  */ 04560000
*/* CHECK FOR ASCB PROCESSING OK                                     */ 04561000
*/*                                                                  */ 04562000
* IF SKIPASCB=OFF THEN                                          02S1599 04563000
@RF01500 TM    SKIPASCB,B'10000000'                             02S1599 04564000
         BNZ   @RF01599                                         02S1599 04565000
*   DO;                                                         02S1600 04566000
*/*                                                                  */ 04567000
*/* GET ASXB ADDRESS AND CHECK IT FOR 0                              */ 04568000
*/*                                                                  */ 04569000
*                                                               02S1601 04570000
*     PREG=ADDR(ASCBASXB);                                      02S1601 04571000
         LA    PREG,ASCBASXB(,ASCBPTR)                          02S1601 04572000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      02S1602 04573000
*         FLOWS(SUMERR)                                         02S1602 04574000
*       (BRREAD (PREG));                                        02S1602 04575000
         BRREAD (PREG)                                                  04576000
*     IF READERR=OFF THEN                                       02S1603 04577000
         TM    READERR,B'10000000'                              02S1603 04578000
         BNZ   @RF01603                                         02S1603 04579000
*       DO;                                                     02S1604 04580000
*         ASXBPTR=RDPTR;                                        02S1605 04581000
         L     @00,RDPTR-1(,PREG)                               02S1605 04582000
         ICM   @00,8,@CB02300                                   02S1605 04583000
         ST    @00,ASXBPTR                                      02S1605 04584000
*         IF ASXBPTR ^= 0 THEN                                  02S1606 04585000
         LTR   @00,@00                                          02S1606 04586000
         BZ    @RF01606                                         02S1606 04587000
*           DO;                                                 02S1607 04588000
*/*                                                                  */ 04589000
*/* ASXB ADDRESS IS OK - VALIDITY CHECK ASXB                         */ 04590000
*/*                                                                  */ 04591000
*                                                               02S1608 04592000
*             PREG=ADDR(ASXBASXB);                              02S1608 04593000
         LR    PREG,@00                                         02S1608 04594000
*             RFY R0 RSTD;                                      02S1609 04595000
*             R0=AUSRASID;                                      02S1610 04596000
         LH    R0,AUSRASID(,COMBASE)                            02S1610 04597000
         N     R0,@CF03377                                      02S1610 04598000
*             GEN REFS(BRRDDATA)SETS(PREG,READERR)              02S1611 04599000
*                 FLOWS(SUMERR)                                 02S1611 04600000
*               (BRREAD (PREG),,ASID=(R0));                     02S1611 04601000
         BRREAD (PREG),,ASID=(R0)                                       04602000
*             RFY R0 UNRSTD;                                    02S1612 04603000
*             IF READERR=OFF THEN                               02S1613 04604000
         TM    READERR,B'10000000'                              02S1613 04605000
         BNZ   @RF01613                                         02S1613 04606000
*               DO;                                             02S1614 04607000
*                 IF READALL ^= 'ASXB' THEN                     02S1615 04608000
         CLC   READALL(4,PREG),@CC03324                         02S1615 04609000
         BE    @RF01615                                         02S1615 04610000
*                   DO;                                         02S1616 04611000
*                     BUF3(1:4)='ASXB';                         02S1617 04612000
         L     @15,CURBUF(,COMBASE)                             02S1617 04613000
         MVC   BUF3(4,@15),@CC03324                             02S1617 04614000
*                     BUF3(6:LENGTH(VALERR)+5)=VALERR;          02S1618 04615000
*                                                               02S1618 04616000
         MVC   BUF3+5(21,@15),VALERR                            02S1618 04617000
*                     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      04618000
*                       (BRWRITE 1);                            02S1619 04619000
         BRWRITE 1                                                      04620000
*                   END;                                        02S1620 04621000
*               END;                                            02S1621 04622000
*             ELSE                                              02S1622 04623000
*               READERR=OFF;                                    02S1622 04624000
         B     @RC01613                                         02S1622 04625000
@RF01613 NI    READERR,B'01111111'                              02S1622 04626000
*/*                                                                  */ 04627000
*/* LOOP THRU TCB CHAIN AND PROCESS TCBS                             */ 04628000
*/*                                                                  */ 04629000
*/*                                                             03S1623 04630000
*         PROCESS TCB CHAIN                                     03S1623 04631000
*                                                                    */ 04632000
*/*                                                                  */ 04633000
*/* GET ADDRESS OF 1ST TCB                                           */ 04634000
*/*                                                                  */ 04635000
*                                                               03S1623 04636000
* PREG=ADDR(ASXBFTCB);                                          03S1623 04637000
@RC01613 L     PREG,ASXBPTR                                     03S1623 04638000
         LA    PREG,ASXBFTCB(,PREG)                             03S1623 04639000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          03S1624 04640000
*     FLOWS(SUMERR)                                             03S1624 04641000
*   (BRREAD (PREG));                                            03S1624 04642000
         BRREAD (PREG)                                                  04643000
* IF READERR=OFF THEN                                           03S1625 04644000
         TM    READERR,B'10000000'                              03S1625 04645000
         BNZ   @RF01625                                         03S1625 04646000
*   DO;                                                         03S1626 04647000
*     TCBFIRST=RDPTR;                                           03S1627 04648000
         L     @00,RDPTR-1(,PREG)                               03S1627 04649000
         ICM   @00,8,@CB02300                                   03S1627 04650000
         ST    @00,TCBFIRST                                     03S1627 04651000
*/*                                                                  */ 04652000
*/* SET UP TO READ FOR TCBTCB FIELD UNTIL FIELD IS 0                 */ 04653000
*/*                                                                  */ 04654000
*     TCBNEXT=ADDR(TCBTCB)-ADDR(TCB); /* DISPLACEMENT OF TCBTCB      */ 04655000
         L     @15,TCBPTR                                       03S1628 04656000
         LA    @00,TCBTCB(,@15)                                 03S1628 04657000
         SLR   @00,@15                                          03S1628 04658000
         ST    @00,TCBNEXT                                      03S1628 04659000
*     TCBLAST=0;                                                03S1629 04660000
         SLR   @00,@00                                          03S1629 04661000
         ST    @00,TCBLAST                                      03S1629 04662000
*   END;                                                        03S1630 04663000
* ELSE                                                          03S1631 04664000
*   DO;                                                         03S1631 04665000
         B     @RC01625                                         03S1631 04666000
@RF01625 DS    0H                                               03S1632 04667000
*/*                                                                  */ 04668000
*/* ERROR ON PTR TO BEGINNING OF TCB CHAIN - ISSUE MSG & PROCESS     */ 04669000
*/* CHAIN FROM END                                                   */ 04670000
*/*                                                                  */ 04671000
*     READERR=OFF;                                              03S1632 04672000
*                                                               03S1632 04673000
         NI    READERR,B'01111111'                              03S1632 04674000
*     RFY R4 RSTD;                                              03S1633 04675000
*     R4=ADDR(XFTCA);                                           03S1634 04676000
         LA    R4,XFTCA                                         03S1634 04677000
*     CALL ADRCNVT;                                             03S1635 04678000
         L     @15,AADRCNVT(,COMBASE)                           03S1635 04679000
         BALR  @14,@15                                          03S1635 04680000
*     RFY R4 UNRSTD;                                            03S1636 04681000
*     BUF2(1:LENGTH(XFTCM))=XFTCM;                              03S1637 04682000
*                                                               03S1637 04683000
         L     @15,CURBUF(,COMBASE)                             03S1637 04684000
         MVC   BUF2(54,@15),XFTCM                               03S1637 04685000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              03S1638 04686000
*       (BRWRITE 1);                                            03S1638 04687000
         BRWRITE 1                                                      04688000
*     TCBLAST=0;                                                03S1639 04689000
         SLR   @00,@00                                          03S1639 04690000
         ST    @00,TCBLAST                                      03S1639 04691000
*/*                                                             04S1640 04692000
*         PROCESS FROM END OF TCB CHAIN                         04S1640 04693000
*                                                                    */ 04694000
*/*                                                                  */ 04695000
*/* GET POINTER TO LAST TCB                                          */ 04696000
*/*                                                                  */ 04697000
*                                                               04S1640 04698000
* PREG=ADDR(ASXBLTCB);                                          04S1640 04699000
         L     PREG,ASXBPTR                                     04S1640 04700000
         LA    PREG,ASXBLTCB(,PREG)                             04S1640 04701000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          04S1641 04702000
*     FLOWS(SUMERR)                                             04S1641 04703000
*   (BRREAD (PREG));                                            04S1641 04704000
         BRREAD (PREG)                                                  04705000
* IF READERR=OFF THEN                                           04S1642 04706000
         TM    READERR,B'10000000'                              04S1642 04707000
         BNZ   @RF01642                                         04S1642 04708000
*   DO;                                                         04S1643 04709000
*     TCBFIRST=RDPTR;                                           04S1644 04710000
         L     @00,RDPTR-1(,PREG)                               04S1644 04711000
         ICM   @00,8,@CB02300                                   04S1644 04712000
         ST    @00,TCBFIRST                                     04S1644 04713000
*     TCBNEXT=ADDR(TCBBACK)-ADDR(TCB); /* DISPLACEMENT OF TCBBACK    */ 04714000
         L     @15,TCBPTR                                       04S1645 04715000
         LA    @00,TCBBACK(,@15)                                04S1645 04716000
         SLR   @00,@15                                          04S1645 04717000
         ST    @00,TCBNEXT                                      04S1645 04718000
*   END;                                                        04S1646 04719000
* ELSE                                                          04S1647 04720000
*   DO;                                                         04S1647 04721000
         B     @RC01642                                         04S1647 04722000
@RF01642 DS    0H                                               04S1648 04723000
*/*                                                                  */ 04724000
*/* ERROR READING END POINTER - ISSUE MSG & GO TO NEXT ASCB          */ 04725000
*/*                                                                  */ 04726000
*     READERR=OFF;                                              04S1648 04727000
*                                                               04S1648 04728000
         NI    READERR,B'01111111'                              04S1648 04729000
*     RFY R4 RSTD;                                              04S1649 04730000
*     R4=ADDR(XLTCA);                                           04S1650 04731000
         LA    R4,XLTCA                                         04S1650 04732000
*     CALL ADRCNVT;                                             04S1651 04733000
         L     @15,AADRCNVT(,COMBASE)                           04S1651 04734000
         BALR  @14,@15                                          04S1651 04735000
*     RFY R4 UNRSTD;                                            04S1652 04736000
*     BUF2(1:LENGTH(XLTCM))=XLTCM;                              04S1653 04737000
*                                                               04S1653 04738000
         L     @15,CURBUF(,COMBASE)                             04S1653 04739000
         MVC   BUF2(36,@15),XLTCM                               04S1653 04740000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              04S1654 04741000
*       (BRWRITE 1);                                            04S1654 04742000
         BRWRITE 1                                                      04743000
*     JTRM=ON;                                                  04S1655 04744000
         OI    JTRM,B'00001000'                                 04S1655 04745000
*     LOOPDONE=ON;                                              04S1656 04746000
         OI    LOOPDONE,B'00100000'                             04S1656 04747000
*   END;                                                        04S1657 04748000
*   END;                                                        03S1658 04749000
@RC01642 DS    0H                                               03S1659 04750000
*/*                                                                  */ 04751000
*/* LOOP THRU CHAIN IF EITHER END WAS READ OK                        */ 04752000
*/*                                                                  */ 04753000
* DO TCBCNTR=1 TO (TCBMAX+1) WHILE LOOPDONE=OFF;                03S1659 04754000
@RC01625 LA    @00,1                                            03S1659 04755000
         B     @DE01659                                         03S1659 04756000
@DL01659 TM    LOOPDONE,B'00100000'                             03S1659 04757000
         BNZ   @DC01659                                         03S1659 04758000
*   IF (TCBFIRST ^= TCBLAST) & (TCBFIRST ^= 0) THEN             03S1660 04759000
         L     @15,TCBFIRST                                     03S1660 04760000
         C     @15,TCBLAST                                      03S1660 04761000
         BE    @RF01660                                         03S1660 04762000
         LTR   @15,@15                                          03S1660 04763000
         BZ    @RF01660                                         03S1660 04764000
*     DO;                                                       03S1661 04765000
*/*                                                                  */ 04766000
*/* NOT AT END OF CHAIN YET - QUEUE UP TCB ON STCBLIST TO CATCH      */ 04767000
*/* DUPLICATES                                                       */ 04768000
*/*                                                                  */ 04769000
*       LISTSAVE=TCBLIST;                                       03S1662 04770000
         L     LISTSAVE,TCBLIST(,COMBASE)                       03S1662 04771000
*       TCBLIST=STCBLIST;                                       03S1663 04772000
         L     @05,STCBLIST                                     03S1663 04773000
         ST    @05,TCBLIST(,COMBASE)                            03S1663 04774000
*       RFY R2 RSTD;                                            03S1664 04775000
*       R2=TCBFIRST;                                            03S1665 04776000
         LR    R2,@15                                           03S1665 04777000
*       CALL TCBSAVE;                                           03S1666 04778000
         L     @15,ATCBSAVE(,COMBASE)                           03S1666 04779000
         BALR  @14,@15                                          03S1666 04780000
*       RFY R2 UNRSTD;                                          03S1667 04781000
*       RFY R15 RSTD;                                           03S1668 04782000
*       RC=R15;                   /* SAVE RETURN CODE                */ 04783000
         ST    R15,RC                                           03S1669 04784000
*       RFY R15 UNRSTD;                                         03S1670 04785000
*       STCBLIST=TCBLIST;                                       03S1671 04786000
         L     @05,TCBLIST(,COMBASE)                            03S1671 04787000
         ST    @05,STCBLIST                                     03S1671 04788000
*       TCBLIST=LISTSAVE;                                       03S1672 04789000
         ST    LISTSAVE,TCBLIST(,COMBASE)                       03S1672 04790000
*       IF RC=0 THEN                                            03S1673 04791000
         L     @15,RC                                           03S1673 04792000
         LTR   @15,@15                                          03S1673 04793000
         BNZ   @RF01673                                         03S1673 04794000
*         DO;                                                   03S1674 04795000
*/*                                                                  */ 04796000
*/* TCB NOT PROCESSED YET - IF TCB COUNT IS NOT OVER TCBMAX, THEN    */ 04797000
*/* PROCESS THIS TCB                                                 */ 04798000
*/*                                                                  */ 04799000
*           IF TCBCNTR <= TCBMAX THEN                           03S1675 04800000
         LH    @00,TCBCNTR                                      03S1675 04801000
         CH    @00,TCBMAX(,COMBASE)                             03S1675 04802000
         BH    @RF01675                                         03S1675 04803000
*             DO;                                               03S1676 04804000
*/*                                                             04S1677 04805000
*         PROCESS TCB                                           04S1677 04806000
*                                                                    */ 04807000
*/*                                                                  */ 04808000
*/* GET CURRENT TCB, SCAN & PRINT TCB LINE                           */ 04809000
*/*                                                                  */ 04810000
* TCBPTR=TCBFIRST;                                              04S1677 04811000
         L     @00,TCBFIRST                                     04S1677 04812000
         ST    @00,TCBPTR                                       04S1677 04813000
*/*                                                             05S1678 04814000
*         SCAN TCB FOR ERRORS, PRINT TCB LINE                   05S1678 04815000
*                                                                    */ 04816000
*/*                                                                  */ 04817000
*/* VALIDITY CHECK TCB                                               */ 04818000
*/*                                                                  */ 04819000
*                                                               05S1678 04820000
* PREG=ADDR(TCBTCBID);                                          05S1678 04821000
         LR    PREG,@00                                         05S1678 04822000
         LA    PREG,TCBTCBID(,PREG)                             05S1678 04823000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          05S1679 04824000
*     FLOWS(SUMERR)                                             05S1679 04825000
*   (BRREAD (PREG));                                            05S1679 04826000
         BRREAD (PREG)                                                  04827000
* IF READERR=OFF THEN                                           05S1680 04828000
         TM    READERR,B'10000000'                              05S1680 04829000
         BNZ   @RF01680                                         05S1680 04830000
*   DO;                                                         05S1681 04831000
*     IF READALL ^= 'TCB ' THEN                                 05S1682 04832000
         CLC   READALL(4,PREG),@CC03325                         05S1682 04833000
         BE    @RF01682                                         05S1682 04834000
*       TCBVALER=ON;                                            05S1683 04835000
         OI    TCBVALER,B'00000100'                             05S1683 04836000
*   END;                                                        05S1684 04837000
* ELSE                                                          05S1685 04838000
*   DO;                                                         05S1685 04839000
         B     @RC01680                                         05S1685 04840000
@RF01680 DS    0H                                               05S1686 04841000
*/*                                                                  */ 04842000
*/* READ ERROR ON TCB - SET SWITCH FOR LATER                         */ 04843000
*/*                                                                  */ 04844000
*     TCBRDERR=ON;                                              05S1686 04845000
         OI    TCBRDERR,B'00000010'                             05S1686 04846000
*     READERR=OFF;                                              05S1687 04847000
         NI    READERR,B'01111111'                              05S1687 04848000
*   END;                                                        05S1688 04849000
*/*                                                                  */ 04850000
*/* GET TCB FLAG FIELDS FOR LATER CHECK - ANY ERROR WILL BCAUSE A    */ 04851000
*/* SWITCH TO BE SET FOR LATER AND THE APPROPRIATE FLAGS TO BE ZEROED*/ 04852000
*/*                                                                  */ 04853000
*                                                               05S1689 04854000
* PREG=ADDR(TCBCMP);                                            05S1689 04855000
@RC01680 L     PREG,TCBPTR                                      05S1689 04856000
         LA    PREG,TCBCMP(,PREG)                               05S1689 04857000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          05S1690 04858000
*     FLOWS(SUMERR)                                             05S1690 04859000
*   (BRREAD (PREG));                                       /* OZ07969 * 04860000
         BRREAD (PREG)                                                  04861000
* IF READERR=OFF THEN                                           05S1691 04862000
         TM    READERR,B'10000000'                              05S1691 04863000
         BNZ   @RF01691                                         05S1691 04864000
*   FLGS1=RDBYTE;                                               05S1692 04865000
         MVC   FLGS1(1),RDBYTE(PREG)                            05S1692 04866000
* ELSE                                                          05S1693 04867000
*   DO;                                                         05S1693 04868000
         B     @RC01691                                         05S1693 04869000
@RF01691 DS    0H                                               05S1694 04870000
*     FLGS1=''B;                                                05S1694 04871000
         MVI   FLGS1,X'00'                                      05S1694 04872000
*     TCBRDERR=ON;                                              05S1695 04873000
         OI    TCBRDERR,B'00000010'                             05S1695 04874000
*     READERR=OFF;                                              05S1696 04875000
         NI    READERR,B'01111111'                              05S1696 04876000
*   END;                                                        05S1697 04877000
*                                                               05S1697 04878000
* PREG=ADDR(TCBFLGS4);                                          05S1698 04879000
@RC01691 L     PREG,TCBPTR                                      05S1698 04880000
         LA    PREG,TCBFLGS4(,PREG)                             05S1698 04881000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          05S1699 04882000
*     FLOWS(SUMERR)                                             05S1699 04883000
*   (BRREAD (PREG));                                            05S1699 04884000
         BRREAD (PREG)                                                  04885000
* IF READERR=OFF THEN                                           05S1700 04886000
         TM    READERR,B'10000000'                              05S1700 04887000
         BNZ   @RF01700                                         05S1700 04888000
*   FLGS4=RDHWORD;                                              05S1701 04889000
         MVC   FLGS4(2),RDHWORD(PREG)                           05S1701 04890000
* ELSE                                                          05S1702 04891000
*   DO;                                                         05S1702 04892000
         B     @RC01700                                         05S1702 04893000
@RF01700 DS    0H                                               05S1703 04894000
*     FLGS4=''B;                                                05S1703 04895000
         XC    FLGS4(2),FLGS4                                   05S1703 04896000
*     TCBRDERR=ON;                                              05S1704 04897000
         OI    TCBRDERR,B'00000010'                             05S1704 04898000
*     READERR=OFF;                                              05S1705 04899000
         NI    READERR,B'01111111'                              05S1705 04900000
*   END;                                                        05S1706 04901000
*                                                               05S1706 04902000
* PREG=ADDR(TCBSCNDY);                                          05S1707 04903000
@RC01700 L     PREG,TCBPTR                                      05S1707 04904000
         LA    PREG,TCBSCNDY(,PREG)                             05S1707 04905000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          05S1708 04906000
*     FLOWS(SUMERR)                                             05S1708 04907000
*   (BRREAD (PREG));                                            05S1708 04908000
         BRREAD (PREG)                                                  04909000
* IF READERR=OFF THEN                                           05S1709 04910000
         TM    READERR,B'10000000'                              05S1709 04911000
         BNZ   @RF01709                                         05S1709 04912000
*   SCNDY=READALL;                                              05S1710 04913000
         MVC   SCNDY(4),READALL(PREG)                           05S1710 04914000
* ELSE                                                          05S1711 04915000
*   DO;                                                         05S1711 04916000
         B     @RC01709                                         05S1711 04917000
@RF01709 DS    0H                                               05S1712 04918000
*     SCNDY=''B;                                                05S1712 04919000
         XC    SCNDY(4),SCNDY                                   05S1712 04920000
*     TCBRDERR=ON;                                              05S1713 04921000
         OI    TCBRDERR,B'00000010'                             05S1713 04922000
*     READERR=OFF;                                              05S1714 04923000
         NI    READERR,B'01111111'                              05S1714 04924000
*   END;                                                        05S1715 04925000
*/*                                                                  */ 04926000
*/* FORMAT TCB LINE, ADD EXTENSION IF TCB WAS ACTIVE ON A CPU, AND   */ 04927000
*/* PRINT LINE                                                       */ 04928000
*/*                                                                  */ 04929000
*/*                                                             06S1716 04930000
*         FORMAT TCB LINE                                       06S1716 04931000
*                                                                    */ 04932000
*/*                                                                  */ 04933000
*/* SET UP TCB LABEL AND ADDRESS                                     */ 04934000
*/*                                                                  */ 04935000
* BUF2(1:4)='TCB ';                                             06S1716 04936000
@RC01709 L     @15,CURBUF(,COMBASE)                             06S1716 04937000
         MVC   BUF2(4,@15),@CC03325                             06S1716 04938000
* PREG=ADDR(TCBPTR);                                            06S1717 04939000
*                                                               06S1717 04940000
         LA    PREG,TCBPTR                                      06S1717 04941000
* RFY R4 RSTD;                                                  06S1718 04942000
* R4=ADDR(BUF2(5));                                             06S1719 04943000
         LA    R4,BUF2+4(,@15)                                  06S1719 04944000
* CALL ADRCNVT;                                                 06S1720 04945000
         L     @15,AADRCNVT(,COMBASE)                           06S1720 04946000
         BALR  @14,@15                                          06S1720 04947000
* RFY R4 UNRSTD;                                                06S1721 04948000
*/*                                                                  */ 04949000
*/* SET UP LABEL AND GET PTR TO NEXT TCB                             */ 04950000
*/*                                                                  */ 04951000
* BUF2(14:17)='NEXT';                                           06S1722 04952000
*                                                               06S1722 04953000
         L     @15,CURBUF(,COMBASE)                             06S1722 04954000
         MVC   BUF2+13(4,@15),@CC03321                          06S1722 04955000
* PREG=ADDR(TCBTCB);                                            06S1723 04956000
         L     PREG,TCBPTR                                      06S1723 04957000
         LA    PREG,TCBTCB(,PREG)                               06S1723 04958000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          06S1724 04959000
*     FLOWS(SUMERR)                                             06S1724 04960000
*   (BRREAD (PREG));                                            06S1724 04961000
         BRREAD (PREG)                                                  04962000
* IF READERR=OFF THEN                                           06S1725 04963000
         TM    READERR,B'10000000'                              06S1725 04964000
         BNZ   @RF01725                                         06S1725 04965000
*   DO;                                                         06S1726 04966000
*                                                               06S1726 04967000
*     RFY R4 RSTD;                                              06S1727 04968000
*     R4=ADDR(BUF2(19));                                        06S1728 04969000
         L     R4,CURBUF(,COMBASE)                              06S1728 04970000
         LA    R4,BUF2+18(,R4)                                  06S1728 04971000
*     CALL ADRCNVT;                                             06S1729 04972000
         L     @15,AADRCNVT(,COMBASE)                           06S1729 04973000
         BALR  @14,@15                                          06S1729 04974000
*     RFY R4 UNRSTD;                                            06S1730 04975000
*   END;                                                        06S1731 04976000
* ELSE                                                          06S1732 04977000
*   DO;                                                         06S1732 04978000
         B     @RC01725                                         06S1732 04979000
@RF01725 DS    0H                                               06S1733 04980000
*/*                                                                  */ 04981000
*/* ERROR ON POINTER - PUT PERIODS IN LINE                           */ 04982000
*/*                                                                  */ 04983000
*     BUF2(19:24)=PERIODS;                                      06S1733 04984000
         L     @15,CURBUF(,COMBASE)                             06S1733 04985000
         MVC   BUF2+18(6,@15),PERIODS                           06S1733 04986000
*     READERR=OFF;                                              06S1734 04987000
         NI    READERR,B'01111111'                              06S1734 04988000
*   END;                                                        06S1735 04989000
*/*                                                                  */ 04990000
*/* SET UP LABEL AND GET POINTER TO PREVIOUS TCB                     */ 04991000
*/*                                                                  */ 04992000
* BUF2(28:31)='PREV';                                           06S1736 04993000
*                                                               06S1736 04994000
@RC01725 L     @15,CURBUF(,COMBASE)                             06S1736 04995000
         MVC   BUF2+27(4,@15),@CC03322                          06S1736 04996000
* PREG=ADDR(TCBBACK);                                           06S1737 04997000
         L     PREG,TCBPTR                                      06S1737 04998000
         LA    PREG,TCBBACK(,PREG)                              06S1737 04999000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          06S1738 05000000
*     FLOWS(SUMERR)                                             06S1738 05001000
*   (BRREAD (PREG));                                            06S1738 05002000
         BRREAD (PREG)                                                  05003000
* IF READERR=OFF THEN                                           06S1739 05004000
         TM    READERR,B'10000000'                              06S1739 05005000
         BNZ   @RF01739                                         06S1739 05006000
*   DO;                                                         06S1740 05007000
*                                                               06S1740 05008000
*     RFY R4 RSTD;                                              06S1741 05009000
*     R4=ADDR(BUF2(33));                                        06S1742 05010000
         L     R4,CURBUF(,COMBASE)                              06S1742 05011000
         LA    R4,BUF2+32(,R4)                                  06S1742 05012000
*     CALL ADRCNVT;                                             06S1743 05013000
         L     @15,AADRCNVT(,COMBASE)                           06S1743 05014000
         BALR  @14,@15                                          06S1743 05015000
*     RFY R4 UNRSTD;                                            06S1744 05016000
*   END;                                                        06S1745 05017000
* ELSE                                                          06S1746 05018000
*   DO;                                                         06S1746 05019000
         B     @RC01739                                         06S1746 05020000
@RF01739 DS    0H                                               06S1747 05021000
*/*                                                                  */ 05022000
*/* ERROR ON PTR - PUT PERIODS IN LINE                               */ 05023000
*/*                                                                  */ 05024000
*     BUF2(33:38)=PERIODS;                                      06S1747 05025000
         L     @15,CURBUF(,COMBASE)                             06S1747 05026000
         MVC   BUF2+32(6,@15),PERIODS                           06S1747 05027000
*     READERR=OFF;                                              06S1748 05028000
         NI    READERR,B'01111111'                              06S1748 05029000
*   END;                                                        06S1749 05030000
*/*                                                             06S1750 05031000
*         CHECK FOR TCB ACTIVE ON A CPU                         06S1750 05032000
*                                                                    */ 05033000
*/*                                                                  */ 05034000
*/* IF CURRLIST PRESENT, LOOP THRU IT                                */ 05035000
*/*                                                                  */ 05036000
* IF CLSTPTR ^= 0 THEN                                          06S1750 05037000
@RC01739 L     @00,CLSTPTR                                      06S1750 05038000
         LTR   @00,@00                                          06S1750 05039000
         BZ    @RF01750                                         06S1750 05040000
*   DO CURCTR=1 TO DIM(CURENTRY) WHILE LOOPDONE=OFF;            06S1751 05041000
         LA    CURCTR,1                                         06S1751 05042000
@DL01751 TM    LOOPDONE,B'00100000'                             06S1751 05043000
         BNZ   @DC01751                                         06S1751 05044000
*/*                                                                  */ 05045000
*/* IF ASCB AND TCB ADDRESSES MATCH, ADD EXTENSION TO PRINT LINE     */ 05046000
*/*                                                                  */ 05047000
*     IF (ASCBPTR=CURASCA(CURCTR)) & (TCBPTR=CURTCBA(CURCTR)) THEN      05048000
         L     @03,CLSTPTR                                      06S1752 05049000
         LR    @15,CURCTR                                       06S1752 05050000
         MH    @15,@CH00753                                     06S1752 05051000
         LA    @14,0(@15,@03)                                   06S1752 05052000
         AL    @14,@CF03361                                     06S1752 05053000
         C     ASCBPTR,CURASCA-8(,@14)                          06S1752 05054000
         BNE   @RF01752                                         06S1752 05055000
         L     @00,TCBPTR                                       06S1752 05056000
         LA    @14,0(@15,@03)                                   06S1752 05057000
         AL    @14,@CF03369                                     06S1752 05058000
         C     @00,CURTCBA-4(,@14)                              06S1752 05059000
         BNE   @RF01752                                         06S1752 05060000
*       DO;                                                     06S1753 05061000
*         BUF2(41:LENGTH(CURMSG)+40)=CURMSG;                    06S1754 05062000
         L     @14,CURBUF(,COMBASE)                             06S1754 05063000
         MVC   BUF2+40(20,@14),CURMSG                           06S1754 05064000
*         TEMPCPUA=CURCPUID(CURCTR); /* PUT CPUID IN LINE            */ 05065000
*                                                               06S1755 05066000
         ALR   @03,@15                                          06S1755 05067000
         AL    @03,@CF03376                                     06S1755 05068000
         MVC   TEMPCPUA(2),CURCPUID(@03)                        06S1755 05069000
*         UNPK(BUF2CPU,TEMPCPU);                                06S1756 05070000
         UNPK  BUF2CPU(5,@14),TEMPCPU(3)                        06S1756 05071000
*         TR(BUF2CPU,EBCTABL);                                  06S1757 05072000
         TR    BUF2CPU(5,@14),EBCTABL(COMBASE)                  06S1757 05073000
*         BUF2CPU(LENGTH(BUF2CPU)) = ' ';                       06S1758 05074000
         MVI   BUF2CPU+4(@14),C' '                              06S1758 05075000
*         LOOPDONE=ON;                                          06S1759 05076000
         OI    LOOPDONE,B'00100000'                             06S1759 05077000
*       END;                                                    06S1760 05078000
*   END;                                                        06S1761 05079000
@RF01752 AL    CURCTR,@CF00063                                  06S1761 05080000
         C     CURCTR,@CF00684                                  06S1761 05081000
         BNH   @DL01751                                         06S1761 05082000
@DC01751 DS    0H                                               06S1762 05083000
* LOOPDONE=OFF;                                                 06S1762 05084000
@RF01750 NI    LOOPDONE,B'11011111'                             06S1762 05085000
*                                                               05S1763 05086000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  05S1763 05087000
*   (BRWRITE 1);                                                05S1763 05088000
         BRWRITE 1                                                      05089000
*/*                                                                  */ 05090000
*/* IF ANY READ ERROR OCCURRED ON THE TCB, ISSUE A MSG               */ 05091000
*/*                                                                  */ 05092000
* IF TCBRDERR=ON THEN                                           05S1764 05093000
         TM    TCBRDERR,B'00000010'                             05S1764 05094000
         BNO   @RF01764                                         05S1764 05095000
*   DO;                                                         05S1765 05096000
*     TCBRDERR=OFF;                                             05S1766 05097000
         NI    TCBRDERR,B'11111101'                             05S1766 05098000
*     BUF2(4:LENGTH(TCBRDRMG)+3)=TCBRDRMG;                      05S1767 05099000
*                                                               05S1767 05100000
         L     @15,CURBUF(,COMBASE)                             05S1767 05101000
         MVC   BUF2+3(33,@15),TCBRDRMG                          05S1767 05102000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              05S1768 05103000
*       (BRWRITE 1);                                            05S1768 05104000
         BRWRITE 1                                                      05105000
*   END;                                                        05S1769 05106000
*/*                                                                  */ 05107000
*/* IF THE TCB FAILED VALIDITY CHECK, ISSUE MSG                      */ 05108000
*/*                                                                  */ 05109000
* IF TCBVALER=ON THEN                                           05S1770 05110000
@RF01764 TM    TCBVALER,B'00000100'                             05S1770 05111000
         BNO   @RF01770                                         05S1770 05112000
*   DO;                                                         05S1771 05113000
*     TCBVALER=OFF;                                             05S1772 05114000
         NI    TCBVALER,B'11111011'                             05S1772 05115000
*     BUF2(4:12)='ABOVE TCB';                                   05S1773 05116000
         L     @15,CURBUF(,COMBASE)                             05S1773 05117000
         MVC   BUF2+3(9,@15),@CC03328                           05S1773 05118000
*     BUF2(14:LENGTH(VALERR)+13)=VALERR;                        05S1774 05119000
*                                                               05S1774 05120000
         MVC   BUF2+13(21,@15),VALERR                           05S1774 05121000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              05S1775 05122000
*       (BRWRITE 1);                                            05S1775 05123000
         BRWRITE 1                                                      05124000
*   END;                                                        05S1776 05125000
*/*                                                                  */ 05126000
*/* CHECK TCB FLAG FIELDS FOR PROBLEMS                               */ 05127000
*/*                                                                  */ 05128000
*/*                                                             06S1777 05129000
*         CHECK TCB STATUS                                      06S1777 05130000
*                                                                    */ 05131000
*/*                                                                  */ 05132000
*/* IF TCB IS ABENDING, SET UP PROBLEM ENTRY                         */ 05133000
*/*                                                                  */ 05134000
* IF FA=ON THEN                                                 06S1777 05135000
@RF01770 TM    FA,B'10000000'                                   06S1777 05136000
         BNO   @RF01777                                         06S1777 05137000
*   DO;                                                         06S1778 05138000
*     CALL GETPRNTY;                                            06S1779 05139000
         BAL   @14,GETPRNTY                                     06S1779 05140000
*     PROBPTR=PLSTL;                                            06S1780 05141000
         L     PROBPTR,PLSTL                                    06S1780 05142000
*     PRABND=ON;                                                06S1781 05143000
         OI    PRABND(PROBPTR),B'10000000'                      06S1781 05144000
*     PRTCB=ON;                                                 06S1782 05145000
         OI    PRTCB(PROBPTR),B'01000000'                       06S1782 05146000
*     PRTA=TCBPTR;                                              06S1783 05147000
         L     @02,TCBPTR                                       06S1783 05148000
         ST    @02,PRTA(,PROBPTR)                               06S1783 05149000
*     PRJOB=JOBNAME;                                            06S1784 05150000
         MVC   PRJOB(8,PROBPTR),JOBNAME                         06S1784 05151000
*/*                                                                  */ 05152000
*/* GET COMPLETION CODE FOR ENTRY                                    */ 05153000
*/*                                                                  */ 05154000
*                                                               06S1785 05155000
*     PREG=ADDR(TCBCMP);                                        06S1785 05156000
         LA    PREG,TCBCMP(,@02)                                06S1785 05157000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      06S1786 05158000
*         FLOWS(SUMERR)                                         06S1786 05159000
*       (BRREAD (PREG));                                        06S1786 05160000
         BRREAD (PREG)                                                  05161000
*     IF READERR=OFF THEN                                       06S1787 05162000
         TM    READERR,B'10000000'                              06S1787 05163000
         BNZ   @RF01787                                         06S1787 05164000
*       PRCMP=READALL;                                          06S1788 05165000
         MVC   PRCMP(4,PROBPTR),READALL(PREG)                   06S1788 05166000
*     ELSE                                                      06S1789 05167000
*       READERR=OFF;                                            06S1789 05168000
         B     @RC01787                                         06S1789 05169000
@RF01787 NI    READERR,B'01111111'                              06S1789 05170000
*/*                                                                  */ 05171000
*/* GET DAR FLAGS FOR ENTRY                                          */ 05172000
*/*                                                                  */ 05173000
*                                                               06S1790 05174000
*     PREG=ADDR(TCBDAR);                                        06S1790 05175000
@RC01787 L     PREG,TCBPTR                                      06S1790 05176000
         LA    PREG,TCBDAR(,PREG)                               06S1790 05177000
*     GEN REFS(BRRDDATA)SETS(PREG,READERR)                      06S1791 05178000
*         FLOWS(SUMERR)                                         06S1791 05179000
*       (BRREAD (PREG));                                        06S1791 05180000
         BRREAD (PREG)                                                  05181000
*     IF READERR=OFF THEN                                       06S1792 05182000
         TM    READERR,B'10000000'                              06S1792 05183000
         BNZ   @RF01792                                         06S1792 05184000
*       PRDAR=RDBYTE;                                           06S1793 05185000
         MVC   PRDAR(1,PROBPTR),RDBYTE(PREG)                    06S1793 05186000
*     ELSE                                                      06S1794 05187000
*       READERR=OFF;                                            06S1794 05188000
         B     @RC01792                                         06S1794 05189000
@RF01792 NI    READERR,B'01111111'                              06S1794 05190000
*   END;                                                        06S1795 05191000
@RC01792 DS    0H                                               06S1796 05192000
*/*                                                                  */ 05193000
*/* IF TCB PERM NON-DISP, SET UP PROBLEM ENTRY                       */ 05194000
*/*                                                                  */ 05195000
* IF PNDSP=ON & (DARPN=ON | RSPND=ON) THEN                      06S1796 05196000
@RF01777 TM    PNDSP,B'00000001'                                06S1796 05197000
         BNO   @RF01796                                         06S1796 05198000
         TM    DARPN,B'01010000'                                06S1796 05199000
         BZ    @RF01796                                         06S1796 05200000
*   DO;                                                         06S1797 05201000
*     CALL GETPRNTY;                                            06S1798 05202000
         BAL   @14,GETPRNTY                                     06S1798 05203000
*     PROBPTR=PLSTL;                                            06S1799 05204000
         L     PROBPTR,PLSTL                                    06S1799 05205000
*     PRPND=ON;                                                 06S1800 05206000
         OI    PRPND(PROBPTR),B'00100000'                       06S1800 05207000
*/*                                                             07S1801 05208000
*         COMPLETE TCB NON-DISP PROBLEM ENTRY                   07S1801 05209000
*                                                                    */ 05210000
*/*                                                                  */ 05211000
*/* FILL IN ENTRY FOR TCB NON-DISPATCHABLE                           */ 05212000
*/*                                                                  */ 05213000
* PRTCB=ON;                                                     07S1801 05214000
         OI    PRTCB(PROBPTR),B'01000000'                       07S1801 05215000
* PRSCNDY=SCNDY;                                                07S1802 05216000
         MVC   PRSCNDY(4,PROBPTR),SCNDY                         07S1802 05217000
* PRTF4=FLGS4(1:8);                                             07S1803 05218000
         MVC   PRTF4(1,PROBPTR),FLGS4                           07S1803 05219000
* PRTF5=FLGS5;                                                  07S1804 05220000
         MVC   PRTF5(1,PROBPTR),FLGS5                           07S1804 05221000
* PRTA=TCBPTR;                                                  07S1805 05222000
         L     @02,TCBPTR                                       07S1805 05223000
         ST    @02,PRTA(,PROBPTR)                               07S1805 05224000
* PRJOB=JOBNAME;                                                07S1806 05225000
         MVC   PRJOB(8,PROBPTR),JOBNAME                         07S1806 05226000
*/*                                                                  */ 05227000
*/* GET DAR FLAGS FOR ENTRY                                          */ 05228000
*/*                                                                  */ 05229000
*                                                               07S1807 05230000
* PREG=ADDR(TCBDAR);                                            07S1807 05231000
         LA    PREG,TCBDAR(,@02)                                07S1807 05232000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          07S1808 05233000
*     FLOWS(SUMERR)                                             07S1808 05234000
*   (BRREAD (PREG));                                            07S1808 05235000
         BRREAD (PREG)                                                  05236000
* IF READERR=OFF THEN                                           07S1809 05237000
         TM    READERR,B'10000000'                              07S1809 05238000
         BNZ   @RF01809                                         07S1809 05239000
*   PRDAR=RDBYTE;                                               07S1810 05240000
         MVC   PRDAR(1,PROBPTR),RDBYTE(PREG)                    07S1810 05241000
* ELSE                                                          07S1811 05242000
*   READERR=OFF;                                                07S1811 05243000
         B     @RC01809                                         07S1811 05244000
@RF01809 NI    READERR,B'01111111'                              07S1811 05245000
*/*                                                                  */ 05246000
*/* GET STOP COUNT FOR ENTRY                                         */ 05247000
*/*                                                                  */ 05248000
*                                                               07S1812 05249000
* PREG=ADDR(TCBSTPCT);                                          07S1812 05250000
@RC01809 L     PREG,TCBPTR                                      07S1812 05251000
         LA    PREG,TCBSTPCT(,PREG)                             07S1812 05252000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          07S1813 05253000
*     FLOWS(SUMERR)                                             07S1813 05254000
*   (BRREAD (PREG));                                            07S1813 05255000
         BRREAD (PREG)                                                  05256000
* IF READERR=OFF THEN                                           07S1814 05257000
         TM    READERR,B'10000000'                              07S1814 05258000
         BNZ   @RF01814                                         07S1814 05259000
*   PRSTPCT=RDBYTE;                                             07S1815 05260000
         MVC   PRSTPCT(1,PROBPTR),RDBYTE(PREG)                  07S1815 05261000
* ELSE                                                          07S1816 05262000
*   READERR=OFF;                                                07S1816 05263000
         B     @RC01814                                         07S1816 05264000
@RF01814 NI    READERR,B'01111111'                              07S1816 05265000
*   END;                                                        06S1817 05266000
@RC01814 DS    0H                                               06S1818 05267000
*/*                                                                  */ 05268000
*/* IF TCB TEMP NON-DISP, SET UP PROBLEM ENTRY                       */ 05269000
*/*                                                                  */ 05270000
* IF FLGS4(1:8)^='00000000'B | TND1^='000000'B |                06S1818 05271000
*    (PNDSP=ON & (DARTN=ON | RSTND=ON | DDRND^='0000'B |        06S1818 05272000
*                 NDSP2^='00000000'B | NDSP3^='00000000'B)) THEN        05273000
@RF01796 CLI   FLGS4,B'00000000'                                06S1818 05274000
         BNE   @RT01818                                         06S1818 05275000
         TM    TND1,B'01111110'                                 06S1818 05276000
         BNZ   @RT01818                                         06S1818 05277000
         TM    PNDSP,B'00000001'                                06S1818 05278000
         BNO   @RF01818                                         06S1818 05279000
         TM    DARTN,B'10100000'                                06S1818 05280000
         BNZ   @RT01818                                         06S1818 05281000
         TM    DDRND,B'00001111'                                06S1818 05282000
         BNZ   @RT01818                                         06S1818 05283000
         CLI   NDSP2,B'00000000'                                06S1818 05284000
         BNE   @RT01818                                         06S1818 05285000
         CLI   NDSP3,B'00000000'                                06S1818 05286000
         BE    @RF01818                                         06S1818 05287000
@RT01818 DS    0H                                               06S1819 05288000
*   DO;                                                         06S1819 05289000
*     CALL GETPRNTY;                                            06S1820 05290000
         BAL   @14,GETPRNTY                                     06S1820 05291000
*     PROBPTR=PLSTL;                                            06S1821 05292000
         L     PROBPTR,PLSTL                                    06S1821 05293000
*     PRTND=ON;                                                 06S1822 05294000
         OI    PRTND(PROBPTR),B'01000000'                       06S1822 05295000
*/*                                                             07S1823 05296000
*         COMPLETE TCB NON-DISP PROBLEM ENTRY                   07S1823 05297000
*                                                                    */ 05298000
*/*                                                                  */ 05299000
*/* FILL IN ENTRY FOR TCB NON-DISPATCHABLE                           */ 05300000
*/*                                                                  */ 05301000
* PRTCB=ON;                                                     07S1823 05302000
         OI    PRTCB(PROBPTR),B'01000000'                       07S1823 05303000
* PRSCNDY=SCNDY;                                                07S1824 05304000
         MVC   PRSCNDY(4,PROBPTR),SCNDY                         07S1824 05305000
* PRTF4=FLGS4(1:8);                                             07S1825 05306000
         MVC   PRTF4(1,PROBPTR),FLGS4                           07S1825 05307000
* PRTF5=FLGS5;                                                  07S1826 05308000
         MVC   PRTF5(1,PROBPTR),FLGS5                           07S1826 05309000
* PRTA=TCBPTR;                                                  07S1827 05310000
         L     @02,TCBPTR                                       07S1827 05311000
         ST    @02,PRTA(,PROBPTR)                               07S1827 05312000
* PRJOB=JOBNAME;                                                07S1828 05313000
         MVC   PRJOB(8,PROBPTR),JOBNAME                         07S1828 05314000
*/*                                                                  */ 05315000
*/* GET DAR FLAGS FOR ENTRY                                          */ 05316000
*/*                                                                  */ 05317000
*                                                               07S1829 05318000
* PREG=ADDR(TCBDAR);                                            07S1829 05319000
         LA    PREG,TCBDAR(,@02)                                07S1829 05320000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          07S1830 05321000
*     FLOWS(SUMERR)                                             07S1830 05322000
*   (BRREAD (PREG));                                            07S1830 05323000
         BRREAD (PREG)                                                  05324000
* IF READERR=OFF THEN                                           07S1831 05325000
         TM    READERR,B'10000000'                              07S1831 05326000
         BNZ   @RF01831                                         07S1831 05327000
*   PRDAR=RDBYTE;                                               07S1832 05328000
         MVC   PRDAR(1,PROBPTR),RDBYTE(PREG)                    07S1832 05329000
* ELSE                                                          07S1833 05330000
*   READERR=OFF;                                                07S1833 05331000
         B     @RC01831                                         07S1833 05332000
@RF01831 NI    READERR,B'01111111'                              07S1833 05333000
*/*                                                                  */ 05334000
*/* GET STOP COUNT FOR ENTRY                                         */ 05335000
*/*                                                                  */ 05336000
*                                                               07S1834 05337000
* PREG=ADDR(TCBSTPCT);                                          07S1834 05338000
@RC01831 L     PREG,TCBPTR                                      07S1834 05339000
         LA    PREG,TCBSTPCT(,PREG)                             07S1834 05340000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          07S1835 05341000
*     FLOWS(SUMERR)                                             07S1835 05342000
*   (BRREAD (PREG));                                            07S1835 05343000
         BRREAD (PREG)                                                  05344000
* IF READERR=OFF THEN                                           07S1836 05345000
         TM    READERR,B'10000000'                              07S1836 05346000
         BNZ   @RF01836                                         07S1836 05347000
*   PRSTPCT=RDBYTE;                                             07S1837 05348000
         MVC   PRSTPCT(1,PROBPTR),RDBYTE(PREG)                  07S1837 05349000
* ELSE                                                          07S1838 05350000
*   READERR=OFF;                                                07S1838 05351000
         B     @RC01836                                         07S1838 05352000
@RF01836 NI    READERR,B'01111111'                              07S1838 05353000
*   END;                                                        06S1839 05354000
@RC01836 DS    0H                                               06S1840 05355000
*/*                                                                  */ 05356000
*/* GET ADDRESS OF NEXT TCB AND SET IT UP AS CURRENT                 */ 05357000
*/*                                                                  */ 05358000
* PREG=TCBPTR+TCBNEXT;                                          04S1840 05359000
*                                                               04S1840 05360000
@RF01818 L     PREG,TCBPTR                                      04S1840 05361000
         AL    PREG,TCBNEXT                                     04S1840 05362000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          04S1841 05363000
*     FLOWS(SUMERR)                                             04S1841 05364000
*   (BRREAD (PREG));                                            04S1841 05365000
         BRREAD (PREG)                                                  05366000
* IF READERR=OFF THEN                                           04S1842 05367000
         TM    READERR,B'10000000'                              04S1842 05368000
         BNZ   @RF01842                                         04S1842 05369000
*   TCBFIRST=RDPTR;                                             04S1843 05370000
         L     @00,RDPTR-1(,PREG)                               04S1843 05371000
         ICM   @00,8,@CB02300                                   04S1843 05372000
         ST    @00,TCBFIRST                                     04S1843 05373000
* ELSE                                                          04S1844 05374000
*   DO;                                                         04S1844 05375000
         B     @RC01842                                         04S1844 05376000
@RF01842 DS    0H                                               04S1845 05377000
*/*                                                                  */ 05378000
*/* ERROR READING POINTER TO NEXT TCB - ISSUE MSG & CHECK WHICH      */ 05379000
*/* CHAIN WAS USED                                                   */ 05380000
*/*                                                                  */ 05381000
*     READERR=OFF;                                              04S1845 05382000
*                                                               04S1845 05383000
         NI    READERR,B'01111111'                              04S1845 05384000
*     RFY R4 RSTD;                                              04S1846 05385000
*     R4=ADDR(TCBERMA);                                         04S1847 05386000
         LA    R4,TCBERMA                                       04S1847 05387000
*     CALL ADRCNVT;                                             04S1848 05388000
         L     @15,AADRCNVT(,COMBASE)                           04S1848 05389000
         BALR  @14,@15                                          04S1848 05390000
*     RFY R4 UNRSTD;                                            04S1849 05391000
*     BUF2(1:LENGTH(TCBERMG))=TCBERMG;                          04S1850 05392000
*                                                               04S1850 05393000
         L     @15,CURBUF(,COMBASE)                             04S1850 05394000
         MVC   BUF2(47,@15),TCBERMG                             04S1850 05395000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              04S1851 05396000
*       (BRWRITE 1);                                            04S1851 05397000
         BRWRITE 1                                                      05398000
*     IF TCBNEXT=(ADDR(TCBBACK)-ADDR(TCB)) THEN                 04S1852 05399000
         L     @15,TCBPTR                                       04S1852 05400000
         LA    @00,TCBBACK(,@15)                                04S1852 05401000
         SLR   @00,@15                                          04S1852 05402000
         C     @00,TCBNEXT                                      04S1852 05403000
         BNE   @RF01852                                         04S1852 05404000
*       DO;                                                     04S1853 05405000
*/*                                                                  */ 05406000
*/* ERROR WAS ON BACKWARD CHAIN - GO TO NEXT ASCB                    */ 05407000
*/*                                                                  */ 05408000
*         LOOPDONE=ON;                                          04S1854 05409000
         OI    LOOPDONE,B'00100000'                             04S1854 05410000
*         JTRM=ON;                                              04S1855 05411000
         OI    JTRM,B'00001000'                                 04S1855 05412000
*       END;                                                    04S1856 05413000
*     ELSE                                                      04S1857 05414000
*       DO;                                                     04S1857 05415000
         B     @RC01852                                         04S1857 05416000
@RF01852 DS    0H                                               04S1858 05417000
*/*                                                                  */ 05418000
*/* ERROR WAS ON FORWARD CHAIN - ISSUE MSG & TRY BACKWARD CHAIN      */ 05419000
*/*                                                                  */ 05420000
*         BUF2(1:LENGTH(CENDMG))=CENDMG;                        04S1858 05421000
*                                                               04S1858 05422000
         L     @15,CURBUF(,COMBASE)                             04S1858 05423000
         MVC   BUF2(32,@15),CENDMG                              04S1858 05424000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          04S1859 05425000
*           (BRWRITE 1);                                        04S1859 05426000
         BRWRITE 1                                                      05427000
*         TCBLAST=TCBFIRST;       /* NEW END-OF-CHAIN PTR            */ 05428000
         L     @00,TCBFIRST                                     04S1860 05429000
         ST    @00,TCBLAST                                      04S1860 05430000
*/*                                                             05S1861 05431000
*         PROCESS FROM END OF TCB CHAIN                         05S1861 05432000
*                                                                    */ 05433000
*/*                                                                  */ 05434000
*/* GET POINTER TO LAST TCB                                          */ 05435000
*/*                                                                  */ 05436000
*                                                               05S1861 05437000
* PREG=ADDR(ASXBLTCB);                                          05S1861 05438000
         L     PREG,ASXBPTR                                     05S1861 05439000
         LA    PREG,ASXBLTCB(,PREG)                             05S1861 05440000
* GEN REFS(BRRDDATA)SETS(PREG,READERR)                          05S1862 05441000
*     FLOWS(SUMERR)                                             05S1862 05442000
*   (BRREAD (PREG));                                            05S1862 05443000
         BRREAD (PREG)                                                  05444000
* IF READERR=OFF THEN                                           05S1863 05445000
         TM    READERR,B'10000000'                              05S1863 05446000
         BNZ   @RF01863                                         05S1863 05447000
*   DO;                                                         05S1864 05448000
*     TCBFIRST=RDPTR;                                           05S1865 05449000
         L     @00,RDPTR-1(,PREG)                               05S1865 05450000
         ICM   @00,8,@CB02300                                   05S1865 05451000
         ST    @00,TCBFIRST                                     05S1865 05452000
*     TCBNEXT=ADDR(TCBBACK)-ADDR(TCB); /* DISPLACEMENT OF TCBBACK    */ 05453000
         L     @15,TCBPTR                                       05S1866 05454000
         LA    @00,TCBBACK(,@15)                                05S1866 05455000
         SLR   @00,@15                                          05S1866 05456000
         ST    @00,TCBNEXT                                      05S1866 05457000
*   END;                                                        05S1867 05458000
* ELSE                                                          05S1868 05459000
*   DO;                                                         05S1868 05460000
         B     @RC01863                                         05S1868 05461000
@RF01863 DS    0H                                               05S1869 05462000
*/*                                                                  */ 05463000
*/* ERROR READING END POINTER - ISSUE MSG & GO TO NEXT ASCB          */ 05464000
*/*                                                                  */ 05465000
*     READERR=OFF;                                              05S1869 05466000
*                                                               05S1869 05467000
         NI    READERR,B'01111111'                              05S1869 05468000
*     RFY R4 RSTD;                                              05S1870 05469000
*     R4=ADDR(XLTCA);                                           05S1871 05470000
         LA    R4,XLTCA                                         05S1871 05471000
*     CALL ADRCNVT;                                             05S1872 05472000
         L     @15,AADRCNVT(,COMBASE)                           05S1872 05473000
         BALR  @14,@15                                          05S1872 05474000
*     RFY R4 UNRSTD;                                            05S1873 05475000
*     BUF2(1:LENGTH(XLTCM))=XLTCM;                              05S1874 05476000
*                                                               05S1874 05477000
         L     @15,CURBUF(,COMBASE)                             05S1874 05478000
         MVC   BUF2(36,@15),XLTCM                               05S1874 05479000
*     GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)              05S1875 05480000
*       (BRWRITE 1);                                            05S1875 05481000
         BRWRITE 1                                                      05482000
*     JTRM=ON;                                                  05S1876 05483000
         OI    JTRM,B'00001000'                                 05S1876 05484000
*     LOOPDONE=ON;                                              05S1877 05485000
         OI    LOOPDONE,B'00100000'                             05S1877 05486000
*   END;                                                        05S1878 05487000
*       END;                                                    04S1879 05488000
*   END;                                                        04S1880 05489000
*             END;                                              03S1881 05490000
*           ELSE                                                03S1882 05491000
*             DO;                                               03S1882 05492000
         B     @RC01675                                         03S1882 05493000
@RF01675 DS    0H                                               03S1883 05494000
*/*                                                                  */ 05495000
*/* TCB COUNT EXCEEDS MAXIMUM - ISSUE MSG & GO TO NEXT ASCB          */ 05496000
*/*                                                                  */ 05497000
*               CVD (TCBMAX,FWORK);                             03S1883 05498000
         LH    @00,TCBMAX(,COMBASE)                             03S1883 05499000
         CVD   @00,@TS00001                                     03S1883 05500000
         MVC   FWORK(4),@TS00001+4                              03S1883 05501000
*               FWORK(29:32)=SIGNF;                             03S1884 05502000
         OI    FWORK+3,B'00001111'                              03S1884 05503000
*               UNPK (TLIMIT,FWORK);                            03S1885 05504000
         UNPK  TLIMIT(5),FWORK(4)                               03S1885 05505000
*               BUF2(1:LENGTH(TCBLMG))=TCBLMG;                  03S1886 05506000
*                                                               03S1886 05507000
         L     @15,CURBUF(,COMBASE)                             03S1886 05508000
         MVC   BUF2(33,@15),TCBLMG                              03S1886 05509000
*               GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)    03S1887 05510000
*                 (BRWRITE 1);                                  03S1887 05511000
         BRWRITE 1                                                      05512000
*               JTRM=ON;                                        03S1888 05513000
         OI    JTRM,B'00001000'                                 03S1888 05514000
*             END;                                              03S1889 05515000
*         END;                                                  03S1890 05516000
*       ELSE                                                    03S1891 05517000
*         DO;                                                   03S1891 05518000
         B     @RC01673                                         03S1891 05519000
@RF01673 DS    0H                                               03S1892 05520000
*/*                                                                  */ 05521000
*/* DUPLICATE TCB ON CHAIN - MUST BE INFINITE LOOP - ISSUE MSG &     */ 05522000
*/* GET OUT OF LOOP                                                  */ 05523000
*/*                                                                  */ 05524000
*           BUF2(1:LENGTH(TCBERMG1))=TCBERMG1;                  03S1892 05525000
*                                                               03S1892 05526000
         L     @15,CURBUF(,COMBASE)                             03S1892 05527000
         MVC   BUF2(18,@15),TCBERMG1                            03S1892 05528000
*           GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)        03S1893 05529000
*             (BRWRITE 1);                                      03S1893 05530000
         BRWRITE 1                                                      05531000
*           JTRM=ON;                                            03S1894 05532000
         OI    JTRM,B'00001000'                                 03S1894 05533000
*           LOOPDONE=ON;                                        03S1895 05534000
         OI    LOOPDONE,B'00100000'                             03S1895 05535000
*         END;                                                  03S1896 05536000
*     END;                                                      03S1897 05537000
*   ELSE                                                        03S1898 05538000
*     DO;                                                       03S1898 05539000
         B     @RC01660                                         03S1898 05540000
@RF01660 DS    0H                                               03S1899 05541000
*/*                                                                  */ 05542000
*/* END OF TCB CHAIN - SET UP TO EXIT FROM LOOP & CHECK IF REALLY    */ 05543000
*/* AT END                                                           */ 05544000
*/*                                                                  */ 05545000
*       LOOPDONE=ON;                                            03S1899 05546000
         OI    LOOPDONE,B'00100000'                             03S1899 05547000
*       IF TCBFIRST ^= TCBLAST THEN                             03S1900 05548000
         CLC   TCBFIRST(4),TCBLAST                              03S1900 05549000
         BE    @RF01900                                         03S1900 05550000
*         DO;                                                   03S1901 05551000
*/*                                                                  */ 05552000
*/* THE SITUATION AT THIS POINT IS THIS -- AN ERROR WAS ENCOUNTERED  */ 05553000
*/* PREVIOUSLY IN THE FORWARD CHAIN, AND PROCESSING WAS BEING DONE   */ 05554000
*/* VIA THE BACKWARD CHAIN.  THE END OF THE CHAIN WAS EXPECTED TO BE */ 05555000
*/* EITHER THE TCB WHICH COULD NOT BE READ ON THE FORWARD CHAIN, OR  */ 05556000
*/* ANY LATER TCB ON THE CHAIN.  INSTEAD, THE BACKWARD POINTER WAS   */ 05557000
*/* ZERO, SHOWING THAT THE BEGINNING (?) OF THE CHAIN WAS REACHED.   */ 05558000
*/* A MESSAGE IS ISSUED AND PROCESSING IS RESUMED WITH THE NEXT ASCB.*/ 05559000
*/*                                                                  */ 05560000
*           BUF2(1:LENGTH(PTCB0MG))=PTCB0MG;                    03S1902 05561000
*                                                               03S1902 05562000
         L     @15,CURBUF(,COMBASE)                             03S1902 05563000
         MVC   BUF2(54,@15),PTCB0MG                             03S1902 05564000
*           GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)        03S1903 05565000
*             (BRWRITE 1);                                      03S1903 05566000
         BRWRITE 1                                                      05567000
*           JTRM=ON;                                            03S1904 05568000
         OI    JTRM,B'00001000'                                 03S1904 05569000
*         END;                                                  03S1905 05570000
*     END;                                                      03S1906 05571000
@RF01900 DS    0H                                               03S1907 05572000
* END;                                                          03S1907 05573000
@RC01660 LA    @00,1                                            03S1907 05574000
         AH    @00,TCBCNTR                                      03S1907 05575000
@DE01659 STH   @00,TCBCNTR                                      03S1907 05576000
         LA    @15,1                                            03S1907 05577000
         AH    @15,TCBMAX(,COMBASE)                             03S1907 05578000
         CR    @00,@15                                          03S1907 05579000
         BNH   @DL01659                                         03S1907 05580000
@DC01659 DS    0H                                               03S1908 05581000
* LOOPDONE=OFF;                   /* INSURE SWITCH IS OFF            */ 05582000
         NI    LOOPDONE,B'11011111'                             03S1908 05583000
*           END;                                                02S1909 05584000
*         ELSE                                                  02S1910 05585000
*/*                                                                  */ 05586000
*/* ASXB ADDRESS IS 0 - ISSUE MSG AND GO TO NEXT ASCB                */ 05587000
*/*                                                                  */ 05588000
*           DO;                                                 02S1910 05589000
         B     @RC01606                                         02S1910 05590000
@RF01606 DS    0H                                               02S1911 05591000
*             BUF2(1:LENGTH(ASXB0MSG))=ASXB0MSG;                02S1911 05592000
*                                                               02S1911 05593000
         L     @06,CURBUF(,COMBASE)                             02S1911 05594000
         MVC   BUF2(17,@06),ASXB0MSG                            02S1911 05595000
*             GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)      02S1912 05596000
*               (BRWRITE 1);                                    02S1912 05597000
         BRWRITE 1                                                      05598000
*             JTRM=ON;                                          02S1913 05599000
         OI    JTRM,B'00001000'                                 02S1913 05600000
*           END;                                                02S1914 05601000
*       END;                                                    02S1915 05602000
*     ELSE                                                      02S1916 05603000
*       DO;                                                     02S1916 05604000
         B     @RC01603                                         02S1916 05605000
@RF01603 DS    0H                                               02S1917 05606000
*/*                                                                  */ 05607000
*/* ERROR READING ASXB ADDRESS - ISSUE MSG AND GO TO NEXT ASCB       */ 05608000
*/*                                                                  */ 05609000
*                                                               02S1917 05610000
*         RFY R4 RSTD;                                          02S1917 05611000
*         R4=ADDR(ASXERRMA);                                    02S1918 05612000
         LA    R4,ASXERRMA                                      02S1918 05613000
*         CALL ADRCNVT;                                         02S1919 05614000
         L     @15,AADRCNVT(,COMBASE)                           02S1919 05615000
         BALR  @14,@15                                          02S1919 05616000
*         RFY R4 UNRSTD;                                        02S1920 05617000
*         BUF2(1:LENGTH(ASXERRMG))=ASXERRMG;                    02S1921 05618000
*                                                               02S1921 05619000
         L     @06,CURBUF(,COMBASE)                             02S1921 05620000
         MVC   BUF2(36,@06),ASXERRMG                            02S1921 05621000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S1922 05622000
*           (BRWRITE 1);                                        02S1922 05623000
         BRWRITE 1                                                      05624000
*         JTRM=ON;                                              02S1923 05625000
         OI    JTRM,B'00001000'                                 02S1923 05626000
*         READERR=OFF;                                          02S1924 05627000
         NI    READERR,B'01111111'                              02S1924 05628000
*       END;                                                    02S1925 05629000
*/*                                                                  */ 05630000
*/* ISSUE EXTRA MESSAGE IF INDICATED                                 */ 05631000
*/*                                                                  */ 05632000
*     IF JTRM=ON THEN                                           02S1926 05633000
@RC01603 TM    JTRM,B'00001000'                                 02S1926 05634000
         BNO   @RF01926                                         02S1926 05635000
*       DO;                                                     02S1927 05636000
*         BUF2(1:LENGTH(JTRMSG))=JTRMSG;                        02S1928 05637000
*                                                               02S1928 05638000
         L     @06,CURBUF(,COMBASE)                             02S1928 05639000
         MVC   BUF2(44,@06),JTRMSG                              02S1928 05640000
*         GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)          02S1929 05641000
*           (BRWRITE 1);                                        02S1929 05642000
         BRWRITE 1                                                      05643000
*         JTRM=OFF;                                             02S1930 05644000
         NI    JTRM,B'11110111'                                 02S1930 05645000
*       END;                                                    02S1931 05646000
*/*                                                                  */ 05647000
*/* CLEAN UP STCBLIST BEFORE GOING TO NEXT ASCB                      */ 05648000
*/*                                                                  */ 05649000
*     LISTSAVE=TCBLIST;                                         02S1932 05650000
@RF01926 L     LISTSAVE,TCBLIST(,COMBASE)                       02S1932 05651000
*     TCBLIST=STCBLIST;                                         02S1933 05652000
         L     @06,STCBLIST                                     02S1933 05653000
         ST    @06,TCBLIST(,COMBASE)                            02S1933 05654000
*     RFY R2 RSTD;                                              02S1934 05655000
*     R2=0;                                                     02S1935 05656000
         SLR   R2,R2                                            02S1935 05657000
*     CALL TCBREMV;                                             02S1936 05658000
         L     @15,ATCBREMV(,COMBASE)                           02S1936 05659000
         BALR  @14,@15                                          02S1936 05660000
*     RFY R2 UNRSTD;                                            02S1937 05661000
*     TCBLIST=LISTSAVE;                                         02S1938 05662000
         ST    LISTSAVE,TCBLIST(,COMBASE)                       02S1938 05663000
*     STCBLIST=0;                                               02S1939 05664000
         SLR   @06,@06                                          02S1939 05665000
         ST    @06,STCBLIST                                     02S1939 05666000
*   END;                                                        02S1940 05667000
*/*                                                                  */ 05668000
*/* SPACE A LINE AND RESET NECESSARY SWITCHES                        */ 05669000
*/*                                                                  */ 05670000
*                                                               01S1941 05671000
* GEN REFS(AWRITE) SETS(CURBUF) FLOWS(SUMSTOP)                  01S1941 05672000
*   (BRWRITE 1);                                                01S1941 05673000
@RF01599 DS    0H                                               01S1941 05674000
         BRWRITE 1                                                      05675000
* ASCBENDF=OFF;                                                 01S1942 05676000
* SKIPASCB=OFF;                                                 01S1943 05677000
         NI    ASCBENDF,B'00111111'                             01S1943 05678000
* END DOADDRSP;                                                 01S1944 05679000
@EL00007 DS    0H                                               01S1944 05680000
@EF00007 DS    0H                                               01S1944 05681000
@ER00007 LM    @14,@12,@SA00007                                 01S1944 05682000
         BR    @14                                              01S1944 05683000
* END AMDPRSUM                                                  01S1945 05684000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 05685000
*/*%INCLUDE SYSUT5  (SUMPROLG)                                        * 05686000
*/*%INCLUDE SYSUT5  (MACROS  )                                        * 05687000
*/*%INCLUDE SYSUT5  (DECLARES)                                        * 05688000
*/*%INCLUDE SYSLIB  (CVT     )                                        * 05689000
*/*%INCLUDE SYSLIB  (IHACSD  )                                        * 05690000
*/*%INCLUDE SYSLIB  (IHAPCCA )                                        * 05691000
*/*%INCLUDE SYSLIB  (IHALCCA )                                        * 05692000
*/*%INCLUDE SYSLIB  (IHAPSA  )                                        * 05693000
*/*%INCLUDE SYSLIB  (IHAASVT )                                        * 05694000
*/*%INCLUDE SYSLIB  (IHAASCB )                                        * 05695000
*/*%INCLUDE SYSLIB  (IHAASXB )                                        * 05696000
*/*%INCLUDE SYSLIB  (IHASRB  )                                        * 05697000
*/*%INCLUDE SYSLIB  (IKJTCB  )                                        * 05698000
*/*%INCLUDE SYSLIB  (COMMON  )                                        * 05699000
*/*%INCLUDE SYSUT5  (LISTADRS)                                        * 05700000
*/*%INCLUDE SYSUT5  (FILLADRS)                                        * 05701000
*/*%INCLUDE SYSUT5  (FILLADRS)                                        * 05702000
*/*%INCLUDE SYSUT5  (DOVIRT  )                                        * 05703000
*/*%INCLUDE SYSUT5  (LISTCPU )                                        * 05704000
*/*%INCLUDE SYSUT5  (CKSNDSP )                                        * 05705000
*/*%INCLUDE SYSUT5  (FINDCPUS)                                        * 05706000
*/*%INCLUDE SYSUT5  (PCCAVTLP)                                        * 05707000
*/*%INCLUDE SYSUT5  (DOPCCA  )                                        * 05708000
*/*%INCLUDE SYSUT5  (LISTSRBQ)                                        * 05709000
*/*%INCLUDE SYSUT5  (DOGSMQ  )                                        * 05710000
*/*%INCLUDE SYSUT5  (DOLSMQ  )                                        * 05711000
*/*%INCLUDE SYSUT5  (DONSPL  )                                        * 05712000
*/*%INCLUDE SYSUT5  (DOSSPL  )                                        * 05713000
*/*%INCLUDE SYSUT5  (LISTJOBS)                                        * 05714000
*/*%INCLUDE SYSUT5  (USEASVT )                                        * 05715000
*/*%INCLUDE SYSUT5  (ASVTLP  )                                        * 05716000
*/*%INCLUDE SYSUT5  (CHECKDSP)                                        * 05717000
*/*%INCLUDE SYSUT5  (LISTPROB)                                        * 05718000
*/*%INCLUDE SYSUT5  (CKJOB   )                                        * 05719000
*/*%INCLUDE SYSUT5  (SUMERR  )                                        * 05720000
*/*%INCLUDE SYSUT5  (SUMSTOP )                                        * 05721000
*/*%INCLUDE SYSUT5  (DOPSA   )                                        * 05722000
*/*%INCLUDE SYSUT5  (GETMODE )                                        * 05723000
*/*%INCLUDE SYSUT5  (FILCRLST)                                        * 05724000
*/*%INCLUDE SYSUT5  (GETPRNTY)                                        * 05725000
*/*%INCLUDE SYSUT5  (SRBCHAIN)                                        * 05726000
*/*%INCLUDE SYSUT5  (SRBLOOP )                                        * 05727000
*/*%INCLUDE SYSUT5  (SRBVALCK)                                        * 05728000
*/*%INCLUDE SYSUT5  (CHECKEND)                                        * 05729000
*/*%INCLUDE SYSUT5  (SRBCONT )                                        * 05730000
*/*%INCLUDE SYSUT5  (PRNTSRB )                                        * 05731000
*/*%INCLUDE SYSUT5  (RESETLMT)                                        * 05732000
*/*%INCLUDE SYSUT5  (DOADDRSP)                                        * 05733000
*/*%INCLUDE SYSUT5  (GETJOBNM)                                        * 05734000
*/*%INCLUDE SYSUT5  (READNAME)                                        * 05735000
*/*%INCLUDE SYSUT5  (READNAME)                                        * 05736000
*/*%INCLUDE SYSUT5  (GETASID )                                        * 05737000
*/*%INCLUDE SYSUT5  (GETCHAIN)                                        * 05738000
*/*%INCLUDE SYSUT5  (CKASTAT )                                        * 05739000
*/*%INCLUDE SYSUT5  (DOSTAT  )                                        * 05740000
*/*%INCLUDE SYSUT5  (LISTLSPL)                                        * 05741000
*/*%INCLUDE SYSUT5  (DOLNSPL )                                        * 05742000
*/*%INCLUDE SYSUT5  (DOLSSPL )                                        * 05743000
*/*%INCLUDE SYSUT5  (LISTCB  )                                        * 05744000
*/*%INCLUDE SYSUT5  (TCBLOOP )                                        * 05745000
*/*%INCLUDE SYSUT5  (GETLAST )                                        * 05746000
*/*%INCLUDE SYSUT5  (GETLAST )                                        * 05747000
*/*%INCLUDE SYSUT5  (DOTCB   )                                        * 05748000
*/*%INCLUDE SYSUT5  (SCANTCB )                                        * 05749000
*/*%INCLUDE SYSUT5  (FMTTCBLN)                                        * 05750000
*/*%INCLUDE SYSUT5  (CHKACTIV)                                        * 05751000
*/*%INCLUDE SYSUT5  (CKTCBSTS)                                        * 05752000
*/*%INCLUDE SYSUT5  (DOTCBND )                                        * 05753000
*/*%INCLUDE SYSUT5  (DOTCBND )                                        * 05754000
*;                                                              01S1945 05755000
@DATA    DS    0H                                                       05756000
@CH01212 DC    H'5'                                                     05757000
@CH00753 DC    H'12'                                                    05758000
         DS    0F                                                       05759000
@AL00697 DC    A(TEMPASCB)             LIST WITH   1 ARGUMENT(S)        05760000
         DS    0F                                                       05761000
@SA00001 DS    18F                                                      05762000
@SA00003 DS    15F                                                      05763000
@SA00002 DS    15F                                                      05764000
@SA00004 DS    15F                                                      05765000
@SA00007 DS    15F                                                      05766000
@PC00007 DS    1F                                                       05767000
@SA00005 DS    13F                                                      05768000
@SA00006 DS    14F                                                      05769000
@AL00001 DS    1A                                                       05770000
         DS    0F                                                       05771000
@CF00063 DC    F'1'                                                     05772000
@CF00684 DC    F'16'                                                    05773000
@CF01593 DC    F'18'                                                    05774000
@CF03267 DC    F'4096'                                                  05775000
@CF03376 DC    F'-12'                                                   05776000
@CF03369 DC    F'-8'                                                    05777000
@CF03361 DC    F'-4'                                                    05778000
@CF03377 DC    XL4'0000FFFF'                                            05779000
         DS    0D                                                       05780000
LCCAPTR  DS    A                                                        05781000
PSAPTR   DS    A                                                        05782000
ASXBPTR  DS    A                                                        05783000
TCBPTR   DS    A                                                        05784000
SAVERR   DC    A(0)                                                     05785000
SAVSTOP  DC    A(0)                                                     05786000
PLSTF    DC    A(0)                                                     05787000
PLSTL    DC    AL4(PLSTF)                                               05788000
CLSTPTR  DC    A(0)                                                     05789000
ASCBLIST DC    A(0)                                                     05790000
STCBLIST DC    A(0)                                                     05791000
MPPTR    DS    A                                                        05792000
TBPTR    DS    A                                                        05793000
WORKPTR  DC    A(0)                                                     05794000
SRBQPTRL DS    A                                                        05795000
ASCBADDR DS    A                                                        05796000
ASMAXU   DS    F                                                        05797000
TEMPASCB DS    A                                                        05798000
RC       DS    F                                                        05799000
TCBFIRST DS    A                                                        05800000
TCBNEXT  DS    A                                                        05801000
TCBLAST  DS    A                                                        05802000
SRBLIMIT DS    H                                                        05803000
SRBCTR   DS    H                                                        05804000
ASCBCNT  DS    H                                                        05805000
TCBCNTR  DS    H                                                        05806000
         DS    0D                                                       05807000
@TS00001 DS    CL8                                                      05808000
@CC03296 DC    C'END OF SRB QUEUE'                                      05809000
@CC03318 DC    C'NOT AVAILABLE'                                         05810000
@CC03284 DC    C'NORMAL MODE'                                           05811000
@CC03328 DC    C'ABOVE TCB'                                             05812000
@CC03312 DC    C'*UNKNOWN'                                              05813000
@CC03268 DC    C'PCCA AT'                                               05814000
@CC03269 DC    C'PSA  AT'                                               05815000
@CC03270 DC    C'LCCA AT'                                               05816000
@CC03262 DC    C'CSD '                                                  05817000
@CC03265 EQU   @CC03268                                                 05818000
@CC03272 DC    C'ASVT'                                                  05819000
@CC03282 EQU   @CC03269                                                 05820000
@CC03283 EQU   @CC03270                                                 05821000
@CC03316 DC    C'ASID'                                                  05822000
@CC03321 DC    C'NEXT'                                                  05823000
@CC03322 DC    C'PREV'                                                  05824000
@CC03323 DC    C'ASCB'                                                  05825000
@CC03324 DC    C'ASXB'                                                  05826000
@CC03325 DC    C'TCB '                                                  05827000
@CC03255 DC    C'FFF'                                                   05828000
@CC03286 DC    C'CPU'                                                   05829000
@CC03295 DC    C'SRB'                                                   05830000
@CC03313 DC    C'JOB'                                                   05831000
@CB03273 DC    X'000000'                                                05832000
@CB03256 DC    X'FFFF'                                                  05833000
@CB03257 DC    X'7FFF'                                                  05834000
@CB02300 EQU   @CB03273                                                 05835000
SWITCHES DC    AL3(0)                                                   05836000
         ORG   SWITCHES                                                 05837000
READERR  DS    BL1                                                      05838000
LASTTAB  EQU   SWITCHES+0                                               05839000
LOOPDONE EQU   SWITCHES+0                                               05840000
CPULSTD  EQU   SWITCHES+0                                               05841000
SRBENDP  EQU   SWITCHES+0                                               05842000
USEDSP   EQU   SWITCHES+0                                               05843000
PTERM    EQU   SWITCHES+0                                               05844000
OVERLIMT EQU   SWITCHES+0                                               05845000
SKIPASCB DS    BL1                                                      05846000
ASCBENDF EQU   SWITCHES+1                                               05847000
JOBNAMER EQU   SWITCHES+1                                               05848000
NOASID   EQU   SWITCHES+1                                               05849000
JTRM     EQU   SWITCHES+1                                               05850000
TCBVALER EQU   SWITCHES+1                                               05851000
TCBRDERR EQU   SWITCHES+1                                               05852000
JOBLISTD EQU   SWITCHES+1                                               05853000
FCPUP    DS    BL1                                                      05854000
FASAB    EQU   SWITCHES+2                                               05855000
FASND    EQU   SWITCHES+2                                               05856000
FTCAB    EQU   SWITCHES+2                                               05857000
FTCND    EQU   SWITCHES+2                                               05858000
PCCAVERR EQU   SWITCHES+2                                               05859000
PSAVERR  EQU   SWITCHES+2                                               05860000
LCCAVERR EQU   SWITCHES+2                                               05861000
         ORG   SWITCHES+3                                               05862000
SUMTITLE DC    CL44'* * * *  S Y S T E M  S U M M A R Y  * * * *'       05863000
DMPATTL  DC    CL19'DUMP ADDRESS RANGES'                                05864000
REALTTL  DC    CL24'REAL      START      END'                           05865000
VIRTTL   DC    CL34'VIRTUAL   START      END      ASID'                 05866000
CPUTTL   DC    CL15'ACTIVE CPU LIST'                                    05867000
SSRBTTL  DC    CL18'SCHEDULED SERVICES'                                 05868000
GSMQTTL  DC    CL28'GLOBAL SERVICE MANAGER QUEUE'                       05869000
LSMQTTL  DC    CL27'LOCAL SERVICE MANAGER QUEUE'                        05870000
GSRBTTL  DC    CL28'GLOBAL SERVICE PRIORITY LIST'                       05871000
LSRBTTL  DC    CL27'LOCAL SERVICE PRIORITY LIST'                        05872000
SPLNTTL  DC    CL21'NON-QUIESCEABLE QUEUE'                              05873000
SPLSTTL  DC    CL12'SYSTEM QUEUE'                                       05874000
JOBTTL   DC    CL11'JOB SUMMARY'                                        05875000
PRBTTL   DC    CL12'PROBLEM LIST'                                       05876000
CHARASID DC    CL5' '                                                   05877000
TEMPASID DS    BL2                                                      05878000
V0CPU    DS    BL2                                                      05879000
         DS    CL1                                                      05880000
PCPUID1  DS    CL3                                                      05881000
         ORG   PCPUID1                                                  05882000
PCPUID   DS    BL2                                                      05883000
         ORG   PCPUID1+3                                                05884000
MODESAVE DC    CL64' '                                                  05885000
         DS    CL3                                                      05886000
FWORK    DS    BL4                                                      05887000
PERIODS  DC    CL6'......'                                              05888000
JOBNAME  DS    CL8                                                      05889000
ADSTATUS DS    BL3                                                      05890000
         ORG   ADSTATUS                                                 05891000
RCTF     DS    BL1                                                      05892000
         ORG   RCTF                                                     05893000
TMNO     DS    BL1                                                      05894000
FRS      EQU   RCTF+0                                                   05895000
FQU      EQU   RCTF+0                                                   05896000
FND      EQU   RCTF+0                                                   05897000
WAIT     EQU   RCTF+0                                                   05898000
OUT      EQU   RCTF+0                                                   05899000
TMLW     EQU   RCTF+0                                                   05900000
@NM00092 EQU   RCTF+0                                                   05901000
         ORG   ADSTATUS+1                                               05902000
FLG1     DS    BL1                                                      05903000
         ORG   FLG1                                                     05904000
@NM00093 DS    BL1                                                      05905000
TERM     EQU   FLG1+0                                                   05906000
ABNT     EQU   FLG1+0                                                   05907000
@NM00094 EQU   FLG1+0                                                   05908000
         ORG   ADSTATUS+2                                               05909000
DSP1     DS    BL1                                                      05910000
         ORG   DSP1                                                     05911000
NOQ      DS    BL1                                                      05912000
FAIL     EQU   DSP1+0                                                   05913000
@NM00095 EQU   DSP1+0                                                   05914000
         ORG   ADSTATUS+3                                               05915000
TCBSTATS DS    BL7                                                      05916000
         ORG   TCBSTATS                                                 05917000
FLGS1    DS    BL1                                                      05918000
         ORG   FLGS1                                                    05919000
FA       DS    BL1                                                      05920000
@NM00096 EQU   FLGS1+0                                                  05921000
         ORG   TCBSTATS+1                                               05922000
FLGS4    DS    BL2                                                      05923000
         ORG   FLGS4                                                    05924000
@NM00097 DS    BL1                                                      05925000
FLGS5    DS    BL1                                                      05926000
         ORG   FLGS5                                                    05927000
@NM00098 DS    BL1                                                      05928000
TND1     EQU   FLGS5+0                                                  05929000
PNDSP    EQU   FLGS5+0                                                  05930000
         ORG   TCBSTATS+3                                               05931000
SCNDY    DS    BL4                                                      05932000
         ORG   SCNDY                                                    05933000
@NM00099 DS    BL1                                                      05934000
NDSP1    DS    BL1                                                      05935000
         ORG   NDSP1                                                    05936000
DARTN    DS    BL1                                                      05937000
DARPN    EQU   NDSP1+0                                                  05938000
RSTND    EQU   NDSP1+0                                                  05939000
RSPND    EQU   NDSP1+0                                                  05940000
DDRND    EQU   NDSP1+0                                                  05941000
         ORG   SCNDY+2                                                  05942000
NDSP2    DS    BL1                                                      05943000
NDSP3    DS    BL1                                                      05944000
         ORG   TCBSTATS+7                                               05945000
TEMPCPU  DS    CL3                                                      05946000
         ORG   TEMPCPU                                                  05947000
TEMPCPUA DS    BL2                                                      05948000
         ORG   TEMPCPU+3                                                05949000
NOCVTMSG DC    CL20'UNABLE TO ACCESS CVT'                               05950000
SKIPMSG  DC    CL23'REST OF SUMMARY SKIPPED'                            05951000
NOREALMG DC    CL24'NO REAL ADDRESSES DUMPED'                           05952000
NOVIRTMG DC    CL27'NO VIRTUAL ADDRESSES DUMPED'                        05953000
VALERR   DC    CL21'FAILED VALIDITY CHECK'                              05954000
PSA0ERMG DC    CL55'UNABLE TO ACCESS PSA FOR IPL CPU - ENTRY MAY BE INVC05955000
               ALID'                                                    05956000
PCCAVT0M DC    CL41'PCCAVT ADDRESS IS 0 - CPU LIST TERMINATED'          05957000
CVTPCCMG DS    CL56                                                     05958000
         ORG   CVTPCCMG                                                 05959000
@NM00100 DC    CL28'UNABLE TO ACCESS CVTPCCAT - '                       05960000
CVTPCCMA DC    CL6'XXXXXX'                                              05961000
@NM00101 DC    CL22' - CPU LIST TERMINATED'                             05962000
         ORG   CVTPCCMG+56                                              05963000
PCCAVTMG DS    CL60                                                     05964000
         ORG   PCCAVTMG                                                 05965000
@NM00102 DC    CL32'UNABLE TO ACCESS PCCAVT ENTRY - '                   05966000
PCCAVTMA DC    CL6'XXXXXX'                                              05967000
@NM00103 DC    CL22' - CPU LIST TERMINATED'                             05968000
         ORG   PCCAVTMG+60                                              05969000
NOCPUMG  DC    CL51'NO CPUS COULD BE LISTED - ALL PCCAVT ENTRIES WERE 0C05970000
               '                                                        05971000
CPUSKPMG DC    CL20'CPU ENTRY SKIPPED - '                               05972000
PSANT4KM DS    CL40                                                     05973000
         ORG   PSANT4KM                                                 05974000
@NM00104 DC    CL15'PSA AT ADDRESS '                                    05975000
PSANT4KA DC    CL6'XXXXXX'                                              05976000
@NM00105 DC    CL19' NOT ON 4K BOUNDARY'                                05977000
         ORG   PSANT4KM+40                                              05978000
PCCAERMG DS    CL32                                                     05979000
         ORG   PCCAERMG                                                 05980000
@NM00106 DC    CL24'UNABLE TO ACCESS PCCA - '                           05981000
PCCAERMA DC    CL8'XXXXXX -'                                            05982000
         ORG   PCCAERMG+32                                              05983000
LCCA0MSG DC    CL44'MODE CANNOT BE DETERMINED, LCCA ADDRESS IS 0'       05984000
PSAERMG  DS    CL31                                                     05985000
         ORG   PSAERMG                                                  05986000
@NM00107 DC    CL23'UNABLE TO ACCESS PSA - '                            05987000
PSAERMA  DC    CL8'XXXXXX -'                                            05988000
         ORG   PSAERMG+31                                               05989000
GSRBMODE DC    CL27'GLOBAL SERVICE REQUEST MODE'                        05990000
LCCAERMG DS    CL63                                                     05991000
         ORG   LCCAERMG                                                 05992000
@NM00108 DC    CL27'MODE CANNOT BE DETERMINED, '                        05993000
@NM00109 DC    CL28'UNABLE TO ACCESS LCCADSF2 - '                       05994000
LCCAERMA DC    CL8'XXXXXX -'                                            05995000
         ORG   LCCAERMG+63                                              05996000
GSMQERMG DS    CL46                                                     05997000
         ORG   GSMQERMG                                                 05998000
@NM00110 DC    CL24'UNABLE TO ACCESS GSMQ - '                           05999000
GSMQERMA DC    CL6'XXXXXX'                                              06000000
@NM00111 DC    CL16' - QUEUE SKIPPED'                                   06001000
         ORG   GSMQERMG+46                                              06002000
GSMQ0MSG DC    CL33'GSMQ ADDRESS IS 0 - QUEUE SKIPPED'                  06003000
LSMQ0MSG DC    CL33'LSMQ ADDRESS IS 0 - QUEUE SKIPPED'                  06004000
SPL0MSG  DC    CL32'SPL ADDRESS IS 0 - QUEUE SKIPPED'                   06005000
GSPERMG  DS    CL49                                                     06006000
         ORG   GSPERMG                                                  06007000
@NM00112 DC    CL27'UNABLE TO ACCESS CVTGSPL - '                        06008000
GSPERMA  DC    CL6'XXXXXX'                                              06009000
@NM00113 DC    CL16' - QUEUE SKIPPED'                                   06010000
         ORG   GSPERMG+49                                               06011000
GSMERMG  DS    CL49                                                     06012000
         ORG   GSMERMG                                                  06013000
@NM00114 DC    CL27'UNABLE TO ACCESS CVTGSMQ - '                        06014000
GSMERMA  DC    CL6'XXXXXX'                                              06015000
@NM00115 DC    CL16' - QUEUE SKIPPED'                                   06016000
         ORG   GSMERMG+49                                               06017000
LSMQERMG DS    CL46                                                     06018000
         ORG   LSMQERMG                                                 06019000
@NM00116 DC    CL24'UNABLE TO ACCESS LSMQ - '                           06020000
LSMQERMA DC    CL6'XXXXXX'                                              06021000
@NM00117 DC    CL16' - QUEUE SKIPPED'                                   06022000
         ORG   LSMQERMG+46                                              06023000
LSMERMG  DS    CL49                                                     06024000
         ORG   LSMERMG                                                  06025000
@NM00118 DC    CL27'UNABLE TO ACCESS CVTLSMQ - '                        06026000
LSMERMA  DC    CL6'XXXXXX'                                              06027000
@NM00119 DC    CL16' - QUEUE SKIPPED'                                   06028000
         ORG   LSMERMG+49                                               06029000
GSPNERMG DS    CL46                                                     06030000
         ORG   GSPNERMG                                                 06031000
@NM00120 DC    CL27'UNABLE TO ACCESS GSPLNQL - '                        06032000
GSPNERMA DC    CL6'XXXXXX'                                              06033000
@NM00121 DC    CL13' - CONTINUING'                                      06034000
         ORG   GSPNERMG+46                                              06035000
GSPNRMG1 DS    CL49                                                     06036000
         ORG   GSPNRMG1                                                 06037000
@NM00122 DC    CL27'UNABLE TO ACCESS GSPLNQF - '                        06038000
GSPNRMA1 DC    CL6'XXXXXX'                                              06039000
@NM00123 DC    CL16' - QUEUE SKIPPED'                                   06040000
         ORG   GSPNRMG1+49                                              06041000
GSPSERMG DS    CL47                                                     06042000
         ORG   GSPSERMG                                                 06043000
@NM00124 DC    CL28'UNABLE TO ACCESS GSPLSYSL - '                       06044000
GSPSERMA DC    CL6'XXXXXX'                                              06045000
@NM00125 DC    CL13' - CONTINUING'                                      06046000
         ORG   GSPSERMG+47                                              06047000
GSPSRMG1 DS    CL50                                                     06048000
         ORG   GSPSRMG1                                                 06049000
@NM00126 DC    CL28'UNABLE TO ACCESS GSPLSYSF - '                       06050000
GSPSRMA1 DC    CL6'XXXXXX'                                              06051000
@NM00127 DC    CL16' - QUEUE SKIPPED'                                   06052000
         ORG   GSPSRMG1+50                                              06053000
NOSRBMSG DC    CL14'NO SRBS QUEUED'                                     06054000
SRBLST0M DC    CL41'POINTER TO LAST SRB IS 0 - POSSIBLE ERROR'          06055000
SRBASERM DS    CL58                                                     06056000
         ORG   SRBASERM                                                 06057000
@NM00128 DC    CL27'UNABLE TO ACCESS SRBASCB - '                        06058000
SRBASERA DC    CL6'XXXXXX'                                              06059000
@NM00129 DC    CL25' - ASCB ADDRESS OF 0 USED'                          06060000
         ORG   SRBASERM+58                                              06061000
SRBLMTMG DS    CL62                                                     06062000
         ORG   SRBLMTMG                                                 06063000
@NM00130 DC    CL27'SRB COUNT EXCEEDS LIMIT OF '                        06064000
SRBLMTMA DC    CL5'XXXXX'                                               06065000
@NM00131 DC    CL30' - QUEUE PROCESSING TERMINATED'                     06066000
         ORG   SRBLMTMG+62                                              06067000
SRBUNEND DC    CL54'UNEXPECTED END OF SRB CHAIN BEFORE END POINTER REACC06068000
               HED'                                                     06069000
SRBLKRMG DS    CL35                                                     06070000
         ORG   SRBLKRMG                                                 06071000
@NM00132 DC    CL27'UNABLE TO ACCESS SRBFLNK - '                        06072000
SRBLKRMA DC    CL8'XXXXXX -'                                            06073000
         ORG   SRBLKRMG+35                                              06074000
SRBCONTM DC    CL25'CONTINUING AT END POINTER'                          06075000
SRBENDMG DC    CL27'QUEUE PROCESSING TERMINATED'                        06076000
SRBNOTND DC    CL47'END POINTER DOES NOT POINT TO LAST SRB ON CHAIN'    06077000
NEWMAXMG DC    CL52'MAXIMUM OF 5 SRBS WILL BE PROCESSED FROM END POINTEC06078000
               R'                                                       06079000
SRBLINE  DS    CL34                                                     06080000
         ORG   SRBLINE                                                  06081000
SRBCOUNT DC    CL5'XXXXX'                                               06082000
@NM00133 DC    CL22' SRBS QUEUED FOR ASCB '                             06083000
SRBAASCB DC    CL7'XXXXXX '                                             06084000
         ORG   SRBLINE+34                                               06085000
SRBFLINE DS    CL34                                                     06086000
         ORG   SRBFLINE                                                 06087000
@NM00134 DC    CL2'- '                                                  06088000
SRBER    DC    CL5'XXXXX'                                               06089000
@NM00135 DC    CL27' SRBS FAILED VALIDITY CHECK'                        06090000
         ORG   SRBFLINE+34                                              06091000
ASVT0MSG DC    CL17'ASVT ADDRESS IS 0'                                  06092000
ASERMG   DS    CL35                                                     06093000
         ORG   ASERMG                                                   06094000
@NM00136 DC    CL27'UNABLE TO ACCESS CVTASVT - '                        06095000
ASERMA   DC    CL8'XXXXXX -'                                            06096000
         ORG   ASERMG+35                                                06097000
PTRMSG   DC    CL22'JOB LISTING TERMINATED'                             06098000
NOJOBMSG DC    CL23'NO JOBS COULD BE LISTED'                            06099000
ASCBLIMG DS    CL33                                                     06100000
         ORG   ASCBLIMG                                                 06101000
@NM00137 DC    CL28'ASCB COUNT EXCEEDS LIMIT OF '                       06102000
ALIMIT   DC    CL5'XXXXX'                                               06103000
         ORG   ASCBLIMG+33                                              06104000
ASMXERMG DS    CL36                                                     06105000
         ORG   ASMXERMG                                                 06106000
@NM00138 DC    CL28'UNABLE TO ACCESS ASVTMAXU - '                       06107000
ASMXERMA DC    CL8'XXXXXX -'                                            06108000
         ORG   ASMXERMG+36                                              06109000
ASVTDUPM DS    CL46                                                     06110000
         ORG   ASVTDUPM                                                 06111000
@NM00139 DC    CL39'ASVT CONTAINS DUPLICATE ENTRY FOR ASCB '            06112000
ASVTDUPA DC    CL7'XXXXXX '                                             06113000
         ORG   ASVTDUPM+46                                              06114000
ASENTERM DS    CL38                                                     06115000
         ORG   ASENTERM                                                 06116000
@NM00140 DC    CL30'UNABLE TO ACCESS ASVT ENTRY - '                     06117000
ASENTERA DC    CL8'XXXXXX -'                                            06118000
         ORG   ASENTERM+38                                              06119000
UDSPMSG  DC    CL39'WILL USE ASCB DISPATCHING CHAIN INSTEAD'            06120000
MAP0MSG  DC    CL37'UNABLE TO FIND ASCB DISPATCHING CHAIN'              06121000
ASCBVLRM DS    CL59                                                     06122000
         ORG   ASCBVLRM                                                 06123000
@NM00141 DC    CL28'UNABLE TO ACCESS ASCBASCB - '                       06124000
ASCBVLRA DC    CL6'XXXXXX'                                              06125000
@NM00142 DC    CL25' - VALIDITY CHECK SKIPPED'                          06126000
         ORG   ASCBVLRM+59                                              06127000
JTRMSG   DC    CL44'PROCESSING TERMINATED FOR THIS ADDRESS SPACE'       06128000
AQUMG    DC    CL30'- ADDRESS SPACE BEING QUIESCED'                     06129000
ARSMG    DC    CL30'- ADDRESS SPACE BEING RESTORED'                     06130000
ALWMG    DC    CL28'- ADDRESS SPACE IN LONG WAIT'                       06131000
ARTMG    DC    CL37'- ADDRESS SPACE TERMINATION REQUESTED'              06132000
ATMMG    DC    CL32'- ADDRESS SPACE BEING TERMINATED'                   06133000
ACSMG    DC    CL27'- ADDRESS SPACE SWAPPED OUT'                        06134000
ANQMG    DC    CL26'- ADDRESS SPACE NOT QUEUED'                         06135000
LSPERMG  DS    CL49                                                     06136000
         ORG   LSPERMG                                                  06137000
@NM00143 DC    CL27'UNABLE TO ACCESS ASCBSPL - '                        06138000
LSPERMA  DC    CL6'XXXXXX'                                              06139000
@NM00144 DC    CL16' - QUEUE SKIPPED'                                   06140000
         ORG   LSPERMG+49                                               06141000
LSPNERMG DS    CL46                                                     06142000
         ORG   LSPNERMG                                                 06143000
@NM00145 DC    CL27'UNABLE TO ACCESS LSPLNQL - '                        06144000
LSPNERMA DC    CL6'XXXXXX'                                              06145000
@NM00146 DC    CL13' - CONTINUING'                                      06146000
         ORG   LSPNERMG+46                                              06147000
LSPNRMG1 DS    CL49                                                     06148000
         ORG   LSPNRMG1                                                 06149000
@NM00147 DC    CL27'UNABLE TO ACCESS LSPLNQF - '                        06150000
LSPNRMA1 DC    CL6'XXXXXX'                                              06151000
@NM00148 DC    CL16' - QUEUE SKIPPED'                                   06152000
         ORG   LSPNRMG1+49                                              06153000
LSPSERMG DS    CL47                                                     06154000
         ORG   LSPSERMG                                                 06155000
@NM00149 DC    CL28'UNABLE TO ACCESS LSPLSYSL - '                       06156000
LSPSERMA DC    CL6'XXXXXX'                                              06157000
@NM00150 DC    CL13' - CONTINUING'                                      06158000
         ORG   LSPSERMG+47                                              06159000
LSPSRMG1 DS    CL50                                                     06160000
         ORG   LSPSRMG1                                                 06161000
@NM00151 DC    CL28'UNABLE TO ACCESS LSPLSYSF - '                       06162000
LSPSRMA1 DC    CL6'XXXXXX'                                              06163000
@NM00152 DC    CL16' - QUEUE SKIPPED'                                   06164000
         ORG   LSPSRMG1+50                                              06165000
ASXB0MSG DC    CL17'ASXB ADDRESS IS 0'                                  06166000
ASXERRMG DS    CL36                                                     06167000
         ORG   ASXERRMG                                                 06168000
@NM00153 DC    CL28'UNABLE TO ACCESS ASCBASXB - '                       06169000
ASXERRMA DC    CL8'XXXXXX -'                                            06170000
         ORG   ASXERRMG+36                                              06171000
XFTCM    DS    CL54                                                     06172000
         ORG   XFTCM                                                    06173000
@NM00154 DC    CL28'UNABLE TO ACCESS ASXBFTCB - '                       06174000
XFTCA    DC    CL6'XXXXXX'                                              06175000
@NM00155 DC    CL20' - WILL TRY ASXBLTCB'                               06176000
         ORG   XFTCM+54                                                 06177000
TCBLMG   DS    CL33                                                     06178000
         ORG   TCBLMG                                                   06179000
@NM00156 DC    CL27'TCB COUNT EXCEEDS LIMIT OF '                        06180000
TLIMIT   DC    CL5'XXXXX'                                               06181000
@NM00157 DC    CL1' '                                                   06182000
         ORG   TCBLMG+33                                                06183000
TCBERMG1 DC    CL18'ERROR IN TCB CHAIN'                                 06184000
PTCB0MG  DC    CL54'POINTER TO NEXT TCB IS 0 - POSSIBLE ERROR IN TCB CHC06185000
               AIN'                                                     06186000
XLTCM    DS    CL36                                                     06187000
         ORG   XLTCM                                                    06188000
@NM00158 DC    CL28'UNABLE TO ACCESS ASXBLTCB - '                       06189000
XLTCA    DC    CL8'XXXXXX -'                                            06190000
         ORG   XLTCM+36                                                 06191000
TCBERMG  DS    CL47                                                     06192000
         ORG   TCBERMG                                                  06193000
@NM00159 DC    CL39'UNABLE TO ACCESS POINTER TO NEXT TCB - '            06194000
TCBERMA  DC    CL8'XXXXXX -'                                            06195000
         ORG   TCBERMG+47                                               06196000
CENDMG   DC    CL32'CONTINUING FROM END OF TCB CHAIN'                   06197000
TCBRDRMG DC    CL33'ERROR READING ABOVE TCB FROM DUMP'                  06198000
CURMSG   DC    CL20'- ACTIVE TASK ON CPU'                               06199000
SYSNDMSG DS    CL73                                                     06200000
         ORG   SYSNDMSG                                                 06201000
@NM00160 DC    CL39'SYSTEM NON-DISPATCHABILITY BIT IS ON - '            06202000
@NM00161 DC    CL34'ONLY EXEMPT ASCBS ARE DISPATCHABLE'                 06203000
         ORG   SYSNDMSG+73                                              06204000
NOCPUP   DC    CL28'NO MACHINE CHECKS IN PROCESS'                       06205000
NOASAB   DC    CL28'NO ABENDS DETECTED FOR ASCBS'                       06206000
NOASND   DC    CL34'NO NON-DISPATCHABLE ASCBS DETECTED'                 06207000
NOTCAB   DC    CL39'NO ABENDS DETECTED IN PROGRESS FOR TCBS'            06208000
NOTCND   DC    CL33'NO NON-DISPATCHABLE TCBS DETECTED'                  06209000
         DS    CL3                                                      06210000
CPULNE   DS    CL21                                                     06211000
         ORG   CPULNE                                                   06212000
@NM00162 DC    AL1(31)                                                  06213000
@NM00163 DC    AL1(33)                                                  06214000
@NM00164 DC    AL1(10)                                                  06215000
@NM00165 DC    AL1(14)                                                  06216000
@NM00166 DC    AL4(CPULBL)                                              06217000
CPULNEX  DC    A(0)                                                     06218000
@NM00167 DC    AL1(1)                                                   06219000
@NM00168 DC    AL1(224)                                                 06220000
@NM00169 DC    AL1(19)                                                  06221000
@NM00170 DC    AL1(0)                                                   06222000
@NM00171 DC    AL1(1)                                                   06223000
@NM00172 DC    AL1(192)                                                 06224000
@NM00173 DC    AL1(35)                                                  06225000
@NM00174 DC    AL1(0)                                                   06226000
@NM00175 DC    AL1(0)                                                   06227000
         ORG   CPULNE+21                                                06228000
CPULBL   DC    CL31'CPUIS PROCESSING AMACHINE CHECK'                    06229000
ASCBABL  DS    CL21                                                     06230000
         ORG   ASCBABL                                                  06231000
@NM00176 DC    AL1(31)                                                  06232000
@NM00177 DC    AL1(50)                                                  06233000
@NM00178 DC    AL1(24)                                                  06234000
@NM00179 DC    AL1(29)                                                  06235000
@NM00180 DC    AL4(ASABLBL)                                             06236000
ASCBABLX DC    A(0)                                                     06237000
@NM00181 DC    AL1(53)                                                  06238000
@NM00182 DC    AL1(39)                                                  06239000
@NM00183 DC    AL1(10)                                                  06240000
@NM00184 DC    AL1(14)                                                  06241000
@NM00185 DC    AL1(21)                                                  06242000
@NM00186 DC    AL1(147)                                                 06243000
@NM00187 DC    AL1(36)                                                  06244000
@NM00188 DC    AL1(47)                                                  06245000
@NM00189 DC    AL1(0)                                                   06246000
         ORG   ASCBABL+21                                               06247000
ASABLBL  DC    CL17'ASCBJOBABEND CODE'                                  06248000
         DS    CL2                                                      06249000
ASCBNDL  DS    CL25                                                     06250000
         ORG   ASCBNDL                                                  06251000
@NM00190 DC    AL1(31)                                                  06252000
@NM00191 DC    AL1(50)                                                  06253000
@NM00192 DC    AL1(24)                                                  06254000
@NM00193 DC    AL1(29)                                                  06255000
@NM00194 DC    AL4(ASNDLBL)                                             06256000
ASCBNDLX DC    A(0)                                                     06257000
@NM00195 DC    AL1(53)                                                  06258000
@NM00196 DC    AL1(39)                                                  06259000
@NM00197 DC    AL1(10)                                                  06260000
@NM00198 DC    AL1(14)                                                  06261000
@NM00199 DC    AL1(1)                                                   06262000
@NM00200 DC    AL1(32)                                                  06263000
@NM00201 DC    AL1(36)                                                  06264000
@NM00202 DC    AL1(0)                                                   06265000
@NM00203 DC    AL1(1)                                                   06266000
@NM00204 DC    AL1(240)                                                 06267000
@NM00205 DC    AL1(40)                                                  06268000
@NM00206 DC    AL1(0)                                                   06269000
@NM00207 DC    AL1(0)                                                   06270000
         ORG   ASCBNDL+25                                               06271000
ASNDLBL  DC    CL26'ASCBJOBSETNON-DISPATCHABLE'                         06272000
         DS    CL1                                                      06273000
TCBABL   DS    CL25                                                     06274000
         ORG   TCBABL                                                   06275000
@NM00208 DC    AL1(31)                                                  06276000
@NM00209 DC    AL1(34)                                                  06277000
@NM00210 DC    AL1(24)                                                  06278000
@NM00211 DC    AL1(29)                                                  06279000
@NM00212 DC    AL4(TCABLBL)                                             06280000
TCBABLX  DC    A(0)                                                     06281000
@NM00213 DC    AL1(53)                                                  06282000
@NM00214 DC    AL1(39)                                                  06283000
@NM00215 DC    AL1(10)                                                  06284000
@NM00216 DC    AL1(14)                                                  06285000
@NM00217 DC    AL1(21)                                                  06286000
@NM00218 DC    AL1(147)                                                 06287000
@NM00219 DC    AL1(36)                                                  06288000
@NM00220 DC    AL1(47)                                                  06289000
@NM00221 DC    AL1(21)                                                  06290000
@NM00222 DC    AL1(64)                                                  06291000
@NM00223 DC    AL1(56)                                                  06292000
@NM00224 DC    AL1(62)                                                  06293000
@NM00225 DC    AL1(0)                                                   06294000
         ORG   TCBABL+25                                                06295000
TCABLBL  DC    CL21'TCBJOBABEND CODE- DAR'                              06296000
         DS    CL2                                                      06297000
TCBTNL   DS    CL45                                                     06298000
         ORG   TCBTNL                                                   06299000
@NM00226 DC    AL1(31)                                                  06300000
@NM00227 DC    AL1(34)                                                  06301000
@NM00228 DC    AL1(24)                                                  06302000
@NM00229 DC    AL1(29)                                                  06303000
@NM00230 DC    AL4(TCTNLBL)                                             06304000
TCBTNLX  DC    A(0)                                                     06305000
@NM00231 DC    AL1(53)                                                  06306000
@NM00232 DC    AL1(39)                                                  06307000
@NM00233 DC    AL1(10)                                                  06308000
@NM00234 DC    AL1(14)                                                  06309000
@NM00235 DC    AL1(21)                                                  06310000
@NM00236 DC    AL1(67)                                                  06311000
@NM00237 DC    AL1(84)                                                  06312000
@NM00238 DC    AL1(90)                                                  06313000
@NM00239 DC    AL1(21)                                                  06314000
@NM00240 DC    AL1(32)                                                  06315000
@NM00241 DC    AL1(100)                                                 06316000
@NM00242 DC    AL1(104)                                                 06317000
@NM00243 DC    AL1(21)                                                  06318000
@NM00244 DC    AL1(64)                                                  06319000
@NM00245 DC    AL1(108)                                                 06320000
@NM00246 DC    AL1(114)                                                 06321000
@NM00247 DC    AL1(21)                                                  06322000
@NM00248 DC    AL1(96)                                                  06323000
@NM00249 DC    AL1(62)                                                  06324000
@NM00250 DC    AL1(70)                                                  06325000
@NM00251 DC    AL1(21)                                                  06326000
@NM00252 DC    AL1(64)                                                  06327000
@NM00253 DC    AL1(74)                                                  06328000
@NM00254 DC    AL1(80)                                                  06329000
@NM00255 DC    AL1(1)                                                   06330000
@NM00256 DC    AL1(112)                                                 06331000
@NM00257 DC    AL1(36)                                                  06332000
@NM00258 DC    AL1(0)                                                   06333000
@NM00259 DC    AL1(1)                                                   06334000
@NM00260 DC    AL1(240)                                                 06335000
@NM00261 DC    AL1(45)                                                  06336000
@NM00262 DC    AL1(0)                                                   06337000
@NM00263 DC    AL1(0)                                                   06338000
         ORG   TCBTNL+45                                                06339000
TCTNLBL  DC    CL55'TCBJOBSCNDYDARSTPCT- FLGS4FLGS5SET TEMPNON-DISPATCHC06340000
               ABLE'                                                    06341000
TCBPNL   DS    CL45                                                     06342000
         ORG   TCBPNL                                                   06343000
@NM00264 DC    AL1(31)                                                  06344000
@NM00265 DC    AL1(34)                                                  06345000
@NM00266 DC    AL1(24)                                                  06346000
@NM00267 DC    AL1(29)                                                  06347000
@NM00268 DC    AL4(TCPNLBL)                                             06348000
TCBPNLX  DC    A(0)                                                     06349000
@NM00269 DC    AL1(53)                                                  06350000
@NM00270 DC    AL1(39)                                                  06351000
@NM00271 DC    AL1(10)                                                  06352000
@NM00272 DC    AL1(14)                                                  06353000
@NM00273 DC    AL1(21)                                                  06354000
@NM00274 DC    AL1(67)                                                  06355000
@NM00275 DC    AL1(84)                                                  06356000
@NM00276 DC    AL1(90)                                                  06357000
@NM00277 DC    AL1(21)                                                  06358000
@NM00278 DC    AL1(32)                                                  06359000
@NM00279 DC    AL1(100)                                                 06360000
@NM00280 DC    AL1(104)                                                 06361000
@NM00281 DC    AL1(21)                                                  06362000
@NM00282 DC    AL1(64)                                                  06363000
@NM00283 DC    AL1(108)                                                 06364000
@NM00284 DC    AL1(114)                                                 06365000
@NM00285 DC    AL1(21)                                                  06366000
@NM00286 DC    AL1(96)                                                  06367000
@NM00287 DC    AL1(62)                                                  06368000
@NM00288 DC    AL1(70)                                                  06369000
@NM00289 DC    AL1(21)                                                  06370000
@NM00290 DC    AL1(64)                                                  06371000
@NM00291 DC    AL1(74)                                                  06372000
@NM00292 DC    AL1(80)                                                  06373000
@NM00293 DC    AL1(1)                                                   06374000
@NM00294 DC    AL1(112)                                                 06375000
@NM00295 DC    AL1(36)                                                  06376000
@NM00296 DC    AL1(0)                                                   06377000
@NM00297 DC    AL1(1)                                                   06378000
@NM00298 DC    AL1(240)                                                 06379000
@NM00299 DC    AL1(45)                                                  06380000
@NM00300 DC    AL1(0)                                                   06381000
@NM00301 DC    AL1(0)                                                   06382000
         ORG   TCBPNL+45                                                06383000
TCPNLBL  DC    CL55'TCBJOBSCNDYDARSTPCT- FLGS4FLGS5SET PERMNON-DISPATCHC06384000
               ABLE'                                                    06385000
SUMPATCH DC    180F'0'                                                  06386000
AMDPRSUM CSECT                                                          06387000
DTAE     EQU   32                  DATA EBCDIC BIT                      06388000
DTAC     EQU   16                  DATA IN CORE BIT                     06389000
DTAP     EQU   8                   DATA PTR BIT                         06390000
DTA      EQU   4                   DATA INCLUDED BIT                    06391000
LBLP     EQU   2                   LABEL PTR BIT                        06392000
LBL      EQU   1                   LABEL INCLUDED BIT                   06393000
AMDPRSUM CSECT                                                          06394000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       06395000
@01      EQU   01                                                       06396000
@02      EQU   02                                                       06397000
@03      EQU   03                                                       06398000
@04      EQU   04                                                       06399000
@05      EQU   05                                                       06400000
@06      EQU   06                                                       06401000
@07      EQU   07                                                       06402000
@08      EQU   08                                                       06403000
@09      EQU   09                                                       06404000
@10      EQU   10                                                       06405000
@11      EQU   11                                                       06406000
@12      EQU   12                                                       06407000
@13      EQU   13                                                       06408000
@14      EQU   14                                                       06409000
@15      EQU   15                                                       06410000
JOBNMPTR EQU   @02                                                      06411000
LISTSAVE EQU   @04                                                      06412000
INCTR    EQU   @07                                                      06413000
SRBERRCT EQU   @06                                                      06414000
ASRBCT   EQU   @07                                                      06415000
SRBQPTRF EQU   @03                                                      06416000
CURCTR   EQU   @02                                                      06417000
PCCACTR  EQU   @07                                                      06418000
MAPCTR   EQU   @06                                                      06419000
ADDRTAB  EQU   @03                                                      06420000
ADDRMAP  EQU   @02                                                      06421000
PCCAVTA  EQU   @03                                                      06422000
CSDPTR   EQU   @02                                                      06423000
PROBPTR  EQU   @03                                                      06424000
SPLPTR   EQU   @02                                                      06425000
SRBPTR   EQU   @02                                                      06426000
ASCBPTR  EQU   @06                                                      06427000
ASVTPTR  EQU   @06                                                      06428000
PCCAPTR  EQU   @02                                                      06429000
CVTPTR   EQU   @06                                                      06430000
R0       EQU   @00                                                      06431000
R1       EQU   @01                                                      06432000
R2       EQU   @02                                                      06433000
R4       EQU   @04                                                      06434000
R13      EQU   @13                                                      06435000
R14      EQU   @14                                                      06436000
R15      EQU   @15                                                      06437000
COMBASE  EQU   @12                                                      06438000
PREG     EQU   @01                                                      06439000
BASE1    EQU   @11                                                      06440000
BASE2    EQU   @10                                                      06441000
BASE3    EQU   @09                                                      06442000
BUFREG   EQU   @06                                                      06443000
CNTREG   EQU   @03                                                      06444000
LINEREG  EQU   @08                                                      06445000
R10      EQU   @10                                                      06446000
R11      EQU   @11                                                      06447000
R12      EQU   @12                                                      06448000
R3       EQU   @03                                                      06449000
R5       EQU   @05                                                      06450000
R6       EQU   @06                                                      06451000
R7       EQU   @07                                                      06452000
R8       EQU   @08                                                      06453000
R9       EQU   @09                                                      06454000
STOPBASE EQU   @05                                                      06455000
CVTMAP   EQU   0                                                        06456000
CVTDAR   EQU   CVTMAP+72                                                06457000
CVTFLGS1 EQU   CVTDAR                                                   06458000
CVTDCB   EQU   CVTMAP+116                                               06459000
CVTIERLC EQU   CVTMAP+144                                               06460000
CVTOPTA  EQU   CVTMAP+182                                               06461000
CVTOPTB  EQU   CVTMAP+183                                               06462000
CVTGTF   EQU   CVTMAP+236                                               06463000
CVTGTFST EQU   CVTGTF                                                   06464000
CVTGTFS  EQU   CVTGTFST                                                 06465000
CVTSTATE EQU   CVTGTFST                                                 06466000
CVTTMODE EQU   CVTGTFST                                                 06467000
CVTFORM  EQU   CVTGTFST                                                 06468000
CVTAQAVT EQU   CVTMAP+240                                               06469000
CVTTCMFG EQU   CVTAQAVT                                                 06470000
CVTVOLM2 EQU   CVTMAP+244                                               06471000
CVTTATA  EQU   CVTVOLM2                                                 06472000
CVTTSKS  EQU   CVTTATA                                                  06473000
CVTVOLF2 EQU   CVTTSKS                                                  06474000
CVTTAT   EQU   CVTTATA+1                                                06475000
CVTATER  EQU   CVTMAP+248                                               06476000
CVTEXT1  EQU   CVTMAP+252                                               06477000
CVTPURG  EQU   CVTMAP+260                                               06478000
CVTQMSG  EQU   CVTMAP+268                                               06479000
CVTDMSR  EQU   CVTMAP+272                                               06480000
CVTERPV  EQU   CVTMAP+316                                               06481000
CVTINTLA EQU   CVTMAP+320                                               06482000
CVTAPF   EQU   CVTMAP+324                                               06483000
CVTEXT2  EQU   CVTMAP+328                                               06484000
CVTHJES  EQU   CVTMAP+332                                               06485000
CVTPGSIA EQU   CVTMAP+348                                               06486000
CVTA1F1  EQU   CVTMAP+356                                               06487000
CVTSYSK  EQU   CVTMAP+357                                               06488000
CVTVOLM1 EQU   CVTMAP+380                                               06489000
CVTVOLF1 EQU   CVTVOLM1                                                 06490000
CVTATMCT EQU   CVTMAP+388                                               06491000
CVTXTNT1 EQU   0                                                        06492000
CVTXTNT2 EQU   0                                                        06493000
CVTDSSV  EQU   CVTXTNT2                                                 06494000
CVTFLGBT EQU   CVTXTNT2+5                                               06495000
CVTQID   EQU   CVTXTNT2+24                                              06496000
CVTRV400 EQU   CVTXTNT2+52                                              06497000
CVTRV409 EQU   CVTXTNT2+53                                              06498000
CVTATCVT EQU   CVTXTNT2+64                                              06499000
CVTRV429 EQU   CVTXTNT2+84                                              06500000
CVTRV438 EQU   CVTXTNT2+85                                              06501000
CVTRV457 EQU   CVTXTNT2+112                                             06502000
CVTRV466 EQU   CVTXTNT2+113                                             06503000
CVTFIX   EQU   0                                                        06504000
CVTRELNO EQU   CVTFIX+252                                               06505000
CSD      EQU   0                                                        06506000
CSDCSD   EQU   CSD                                                      06507000
CSDCPUAL EQU   CSD+8                                                    06508000
CSDSCWRD EQU   CSD+12                                                   06509000
CSDSCFL1 EQU   CSDSCWRD                                                 06510000
CSDSCFL2 EQU   CSDSCWRD+1                                               06511000
CSDSCFL3 EQU   CSDSCWRD+2                                               06512000
CSDSCFL4 EQU   CSDSCWRD+3                                               06513000
CSDFLAGS EQU   CSD+23                                                   06514000
PCCA     EQU   0                                                        06515000
PCCAPCCA EQU   PCCA                                                     06516000
PCCACPUA EQU   PCCA+16                                                  06517000
PCCAPSAV EQU   PCCA+24                                                  06518000
PCCATMST EQU   PCCA+128                                                 06519000
PCCATMFL EQU   PCCATMST                                                 06520000
PCCATODE EQU   PCCATMST+1                                               06521000
PCCACCE  EQU   PCCATMST+2                                               06522000
PCCAINTE EQU   PCCATMST+3                                               06523000
PCCAEMSB EQU   PCCA+136                                                 06524000
PCCAEMSI EQU   PCCAEMSB                                                 06525000
PCCARISP EQU   PCCAEMSI                                                 06526000
PCCAEMS2 EQU   PCCAEMSI+1                                               06527000
PCCAEMS3 EQU   PCCAEMSI+2                                               06528000
PCCARMSB EQU   PCCAEMSI+3                                               06529000
PCCAWERP EQU   PCCA+280                                                 06530000
PCCACHPF EQU   PCCAWERP+4                                               06531000
PCCACHBL EQU   PCCAWERP+5                                               06532000
PCCACHVA EQU   PCCAWERP+6                                               06533000
PCCACHTS EQU   PCCAWERP+7                                               06534000
PCCACHS1 EQU   PCCA+288                                                 06535000
PCCACHS2 EQU   PCCA+289                                                 06536000
PCCACHRB EQU   PCCA+290                                                 06537000
PCCACHF1 EQU   PCCA+308                                                 06538000
PCCACHF2 EQU   PCCA+309                                                 06539000
PCCACHF3 EQU   PCCA+310                                                 06540000
PCCACHF4 EQU   PCCA+311                                                 06541000
LCCA     EQU   0                                                        06542000
LCCALCCA EQU   LCCA                                                     06543000
LCCAIHRC EQU   LCCA+520                                                 06544000
LCCAIHR1 EQU   LCCAIHRC                                                 06545000
LCCAIHR2 EQU   LCCAIHRC+1                                               06546000
LCCAIHR3 EQU   LCCAIHRC+2                                               06547000
LCCAIHR4 EQU   LCCAIHRC+3                                               06548000
LCCASPIN EQU   LCCA+524                                                 06549000
LCCASPN1 EQU   LCCASPIN                                                 06550000
LCCASPN2 EQU   LCCASPIN+1                                               06551000
LCCASPN3 EQU   LCCASPIN+2                                               06552000
LCCASPN4 EQU   LCCASPIN+3                                               06553000
LCCADSF1 EQU   LCCA+540                                                 06554000
LCCADSF2 EQU   LCCA+541                                                 06555000
LCCASPSA EQU   LCCA+544                                                 06556000
LCCACRFL EQU   LCCA+692                                                 06557000
LCCACREX EQU   LCCA+693                                                 06558000
LCCALKFG EQU   LCCA+694                                                 06559000
LCCASRBF EQU   LCCA+720                                                 06560000
PSA      EQU   0                                                        06561000
FLCRNPSW EQU   PSA                                                      06562000
FLCROPSW EQU   PSA+8                                                    06563000
FLCICCW2 EQU   PSA+16                                                   06564000
PSAEEPSW EQU   PSA+132                                                  06565000
PSAESPSW EQU   PSA+136                                                  06566000
FLCSVILC EQU   PSAESPSW+1                                               06567000
PSAEPPSW EQU   PSA+140                                                  06568000
FLCPIILC EQU   PSAEPPSW+1                                               06569000
FLCPICOD EQU   PSAEPPSW+2                                               06570000
PSAPICOD EQU   FLCPICOD+1                                               06571000
FLCTEA   EQU   PSAEPPSW+4                                               06572000
FLCPER   EQU   PSA+152                                                  06573000
FLCMCLA  EQU   PSA+168                                                  06574000
FLCIOEL  EQU   FLCMCLA+4                                                06575000
FLCIOA   EQU   FLCMCLA+16                                               06576000
FLCFSA   EQU   FLCMCLA+80                                               06577000
PSAPSA   EQU   PSA+512                                                  06578000
PSACPUPA EQU   PSA+516                                                  06579000
PSALCCAV EQU   PSA+528                                                  06580000
PSATOLD  EQU   PSA+540                                                  06581000
PSAAOLD  EQU   PSA+548                                                  06582000
PSASUPER EQU   PSA+552                                                  06583000
PSASUP1  EQU   PSASUPER                                                 06584000
PSASUP2  EQU   PSASUPER+1                                               06585000
PSASUP3  EQU   PSASUPER+2                                               06586000
PSASUP4  EQU   PSASUPER+3                                               06587000
PSACLHT  EQU   PSA+640                                                  06588000
PSALKSA  EQU   PSA+696                                                  06589000
PSAHLHI  EQU   PSA+760                                                  06590000
PSAMCHFL EQU   PSA+780                                                  06591000
PSACPUSA EQU   PSA+794                                                  06592000
PSADSSFL EQU   PSA+836                                                  06593000
PSADSSF1 EQU   PSADSSFL                                                 06594000
PSADSSF3 EQU   PSADSSFL+2                                               06595000
PSADSSF4 EQU   PSADSSFL+3                                               06596000
PSARSVT  EQU   PSA+896                                                  06597000
ASVT     EQU   0                                                        06598000
ASVTASVT EQU   ASVT+512                                                 06599000
ASVTMAXU EQU   ASVT+516                                                 06600000
ASVTFRST EQU   ASVT+524                                                 06601000
ASVTENTY EQU   ASVT+528                                                 06602000
ASCB     EQU   0                                                        06603000
ASCBASCB EQU   ASCB                                                     06604000
ASCBFWDP EQU   ASCB+4                                                   06605000
ASCBBWDP EQU   ASCB+8                                                   06606000
ASCBSPL  EQU   ASCB+28                                                  06607000
ASCBASID EQU   ASCB+36                                                  06608000
ASCBFW1  EQU   ASCB+100                                                 06609000
ASCBRCTF EQU   ASCBFW1+2                                                06610000
ASCBFLG1 EQU   ASCBFW1+3                                                06611000
ASCBASXB EQU   ASCB+108                                                 06612000
ASCBDSP1 EQU   ASCB+114                                                 06613000
ASCBFLG2 EQU   ASCB+115                                                 06614000
ASCBMCC  EQU   ASCB+168                                                 06615000
ASCBJBNI EQU   ASCB+172                                                 06616000
ASCBJBNS EQU   ASCB+176                                                 06617000
ASXB     EQU   0                                                        06618000
ASXBASXB EQU   ASXB                                                     06619000
ASXBFTCB EQU   ASXB+4                                                   06620000
ASXBLTCB EQU   ASXB+8                                                   06621000
ASXBAEQ  EQU   ASXB+168                                                 06622000
SRBSECT  EQU   0                                                        06623000
SRB      EQU   SRBSECT                                                  06624000
SRBID    EQU   SRB                                                      06625000
SRBFLNK  EQU   SRB+4                                                    06626000
SRBASCB  EQU   SRB+8                                                    06627000
SRBFLC   EQU   SRB+12                                                   06628000
TCBFIX   EQU   0                                                        06629000
TCBFRS   EQU   TCBFIX                                                   06630000
TCB      EQU   0                                                        06631000
TCBPIE   EQU   TCB+4                                                    06632000
TCBPMASK EQU   TCBPIE                                                   06633000
TCBCMP   EQU   TCB+16                                                   06634000
TCBCMPF  EQU   TCBCMP                                                   06635000
TCBCPP   EQU   TCBCMPF                                                  06636000
TCBSTCC  EQU   TCBCMPF                                                  06637000
TCBCDBL  EQU   TCBCMPF                                                  06638000
TCBCWTO  EQU   TCBCMPF                                                  06639000
TCBCIND  EQU   TCBCMPF                                                  06640000
TCBCMSG  EQU   TCBCMPF                                                  06641000
TCBTRN   EQU   TCB+20                                                   06642000
TCBABF   EQU   TCBTRN                                                   06643000
TCBMSS   EQU   TCB+24                                                   06644000
TCBPKF   EQU   TCB+28                                                   06645000
TCBFLGS  EQU   TCB+29                                                   06646000
TCBFLGS1 EQU   TCBFLGS                                                  06647000
TCBFLGS2 EQU   TCBFLGS+1                                                06648000
TCBFLGS3 EQU   TCBFLGS+2                                                06649000
TCBFLGS4 EQU   TCBFLGS+3                                                06650000
TCBFLGS5 EQU   TCBFLGS+4                                                06651000
TCBABWF  EQU   TCBFLGS5                                                 06652000
TCBJPQ   EQU   TCB+44                                                   06653000
TCBPURGE EQU   TCBJPQ                                                   06654000
TCBGRS   EQU   TCB+48                                                   06655000
TCBFSA   EQU   TCB+112                                                  06656000
TCBTCB   EQU   TCB+116                                                  06657000
TCBTME   EQU   TCB+120                                                  06658000
TCBJSTCB EQU   TCB+124                                                  06659000
TCBTSFLG EQU   TCB+148                                                  06660000
TCBTSTSK EQU   TCBTSFLG                                                 06661000
TCBSTPCT EQU   TCB+149                                                  06662000
TCBSTAB  EQU   TCB+160                                                  06663000
TCBNSTAE EQU   TCBSTAB                                                  06664000
TCBTCT   EQU   TCB+164                                                  06665000
TCBTCTGF EQU   TCBTCT                                                   06666000
TCBSCNDY EQU   TCB+172                                                  06667000
TCBNDSP  EQU   TCBSCNDY                                                 06668000
TCBNDSP1 EQU   TCBNDSP+1                                                06669000
TCBNDSP2 EQU   TCBNDSP+2                                                06670000
TCBNDSP3 EQU   TCBNDSP+3                                                06671000
TCBJSCB  EQU   TCB+180                                                  06672000
TCBRECDE EQU   TCBJSCB                                                  06673000
TCBEXT1  EQU   TCB+196                                                  06674000
TCBBITS  EQU   TCB+200                                                  06675000
TCBNDSP4 EQU   TCBBITS                                                  06676000
TCBNDSP5 EQU   TCBBITS+1                                                06677000
TCBFLGS6 EQU   TCBBITS+2                                                06678000
TCBFLGS7 EQU   TCBBITS+3                                                06679000
TCBDAR   EQU   TCB+204                                                  06680000
TCBDARC  EQU   TCBDAR                                                   06681000
TCBEXT2  EQU   TCB+208                                                  06682000
TCBBACK  EQU   TCB+220                                                  06683000
TCBFOE   EQU   TCB+244                                                  06684000
TCBTCBID EQU   TCB+256                                                  06685000
TCBESTAE EQU   TCB+264                                                  06686000
TCBESTRM EQU   TCBESTAE+1                                               06687000
TCBFBYT1 EQU   TCB+276                                                  06688000
TCBFBYT2 EQU   TCB+277                                                  06689000
TCBRV124 EQU   TCB+278                                                  06690000
TCBRV133 EQU   TCB+279                                                  06691000
TCBXTNT2 EQU   0                                                        06692000
TCBGTF   EQU   TCBXTNT2                                                 06693000
TCBTFLG  EQU   TCBGTF                                                   06694000
TCBRV146 EQU   TCBXTNT2+28                                              06695000
TCBRV155 EQU   TCBXTNT2+29                                              06696000
TCBRV164 EQU   TCBXTNT2+30                                              06697000
TCBRV173 EQU   TCBXTNT2+31                                              06698000
SPL      EQU   0                                                        06699000
SPLNQ    EQU   SPL                                                      06700000
SPLNQF   EQU   SPLNQ                                                    06701000
SPLNQL   EQU   SPLNQ+4                                                  06702000
SPLSQ    EQU   SPL+8                                                    06703000
SPLSQF   EQU   SPLSQ                                                    06704000
SPLSQL   EQU   SPLSQ+4                                                  06705000
COMMON   EQU   0                                                        06706000
ERRADDR  EQU   COMMON                                                   06707000
CURBUF   EQU   COMMON+48                                                06708000
TCBLIST  EQU   COMMON+52                                                06709000
CVTADDR  EQU   COMMON+56                                                06710000
SWA      EQU   COMMON+122                                               06711000
SWB      EQU   COMMON+123                                               06712000
SWC      EQU   COMMON+124                                               06713000
SWD      EQU   COMMON+125                                               06714000
SWE      EQU   COMMON+126                                               06715000
SWF      EQU   COMMON+127                                               06716000
QSADMP   EQU   SWF                                                      06717000
BUFSW    EQU   COMMON+128                                               06718000
PRSW     EQU   COMMON+129                                               06719000
TABLE    EQU   COMMON+659                                               06720000
HEXTABL  EQU   TABLE+63                                                 06721000
EBCTABL  EQU   HEXTABL+10                                               06722000
AWRITE   EQU   COMMON+1500                                              06723000
AFMTLINE EQU   COMMON+1512                                              06724000
AADRCNVT EQU   COMMON+1516                                              06725000
AWRDCNVT EQU   COMMON+1520                                              06726000
STOPEXIT EQU   COMMON+1528                                              06727000
ATCBSAVE EQU   COMMON+1548                                              06728000
ATCBREMV EQU   COMMON+1552                                              06729000
DCBADDRS EQU   COMMON+1608                                              06730000
@NM00077 EQU   DCBADDRS+16                                              06731000
@NM00078 EQU   @NM00077                                                 06732000
REALMAP  EQU   COMMON+1644                                              06733000
PREFXRGR EQU   COMMON+1672                                              06734000
ASIDNDX  EQU   COMMON+1968                                              06735000
ASCBMAP  EQU   COMMON+1976                                              06736000
BRRDDATA EQU   COMMON+1984                                              06737000
AUSRASID EQU   COMMON+2020                                              06738000
SRBMAX   EQU   COMMON+2036                                              06739000
TCBMAX   EQU   COMMON+2038                                              06740000
ASCBMAX  EQU   COMMON+2040                                              06741000
PROBLIST EQU   0                                                        06742000
PRNEXT   EQU   PROBLIST                                                 06743000
PRFLG1   EQU   PROBLIST+4                                               06744000
PRABND   EQU   PRFLG1                                                   06745000
PRTND    EQU   PRFLG1                                                   06746000
PRPND    EQU   PRFLG1                                                   06747000
PRSYSND  EQU   PRFLG1                                                   06748000
PRFLG4   EQU   PROBLIST+7                                               06749000
PRCPU    EQU   PRFLG4                                                   06750000
PRTCB    EQU   PRFLG4                                                   06751000
PRASCB   EQU   PRFLG4                                                   06752000
PRTA     EQU   PROBLIST+8                                               06753000
PRTAA    EQU   PRTA+1                                                   06754000
PRJOB    EQU   PROBLIST+12                                              06755000
PRCMP    EQU   PROBLIST+20                                              06756000
PRSCNDY  EQU   PRCMP                                                    06757000
PRDAR    EQU   PROBLIST+24                                              06758000
PRSTPCT  EQU   PROBLIST+25                                              06759000
PRCPUID  EQU   PROBLIST+26                                              06760000
PRTF4    EQU   PRCPUID                                                  06761000
PRTF5    EQU   PRCPUID+1                                                06762000
CURRLIST EQU   0                                                        06763000
CURENTRY EQU   CURRLIST                                                 06764000
CURCPUID EQU   CURENTRY                                                 06765000
CURTCBA  EQU   CURENTRY+4                                               06766000
CURASCA  EQU   CURENTRY+8                                               06767000
ASNDXTAB EQU   0                                                        06768000
NDXNEXT  EQU   ASNDXTAB                                                 06769000
NDXASID  EQU   ASNDXTAB+4                                               06770000
NDXMAP   EQU   ASNDXTAB+40                                              06771000
DMPMAP   EQU   0                                                        06772000
MAPNEXT  EQU   DMPMAP+1                                                 06773000
MAPBEGIN EQU   DMPMAP+4                                                 06774000
MAPEND   EQU   DMPMAP+8                                                 06775000
ASMAP    EQU   0                                                        06776000
ASCBTAB  EQU   ASMAP                                                    06777000
ASCBNUM  EQU   ASMAP+4                                                  06778000
MPASID   EQU   ASMAP+16                                                 06779000
ASTAB    EQU   0                                                        06780000
TBNT     EQU   ASTAB                                                    06781000
TBASCB   EQU   TBNT                                                     06782000
BADASID  EQU   TBASCB                                                   06783000
WRDCNVT  EQU   0                                                        06784000
ADRCNVT  EQU   0                                                        06785000
FMTLINE  EQU   0                                                        06786000
ASCBSAV  EQU   0                                                        06787000
TCBSAVE  EQU   0                                                        06788000
ASCBREMV EQU   0                                                        06789000
TCBREMV  EQU   0                                                        06790000
OUTBUF   EQU   0                                                        06791000
BUFTTL   EQU   OUTBUF+1                                                 06792000
BUFFER   EQU   BUFTTL+10                                                06793000
BUF2     EQU   BUFFER+5                                                 06794000
BRRDERRT EQU   0                                                        06795000
NEXTSTOP EQU   0                                                        06796000
READALL  EQU   0                                                        06797000
RDWORD   EQU   READALL                                                  06798000
RDHWORD  EQU   RDWORD                                                   06799000
RDBYTE   EQU   RDHWORD                                                  06800000
RDPTR    EQU   RDHWORD+1                                                06801000
PCCAVT   EQU   0                                                        06802000
PASCB1   EQU   0                                                        06803000
CVTS01   EQU   CVTPGSIA                                                 06804000
CVTLPDIA EQU   CVTS01+12                                                06805000
CVTDIRST EQU   CVTLPDIA                                                 06806000
CVTSLIDA EQU   CVTS01+24                                                06807000
CVTCTLFG EQU   CVTS01+50                                                06808000
CVTASVT  EQU   CVTS01+208                                               06809000
CVTGSMQ  EQU   CVTS01+264                                               06810000
CVTLSMQ  EQU   CVTS01+268                                               06811000
CVTGSPL  EQU   CVTS01+272                                               06812000
CVTCSD   EQU   CVTS01+312                                               06813000
CVTPCCAT EQU   CVTS01+416                                               06814000
CVTRV210 EQU   CVTS01+424                                               06815000
CVTRV219 EQU   CVTS01+425                                               06816000
CVTRV228 EQU   CVTS01+426                                               06817000
CVTRV237 EQU   CVTS01+427                                               06818000
CVTMFRTR EQU   CVTS01+452                                               06819000
CVTRV262 EQU   CVTS01+468                                               06820000
CVTRV271 EQU   CVTS01+469                                               06821000
CVTRV280 EQU   CVTS01+470                                               06822000
CVTRV289 EQU   CVTS01+471                                               06823000
CVTGSDA  EQU   CVTS01+600                                               06824000
PSARSVTE EQU   PSARSVT                                                  06825000
SBUFTTL  EQU   BUFTTL+38                                                06826000
BUFASID  EQU   BUFFER+62                                                06827000
BUFFLG   EQU   BUFFER+35                                                06828000
NDXASID1 EQU   TEMPASID                                                 06829000
BUFCPUP  EQU   BUFFER+4                                                 06830000
AUSRASI1 EQU   AUSRASID                                                 06831000
BUF3     EQU   BUFFER+20                                                06832000
BUF2CPU  EQU   BUF2+61                                                  06833000
SRBMODE  EQU   GSRBMODE+7                                               06834000
FLC      EQU   PSA                                                      06835000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    06836000
PSARSAV  EQU   PSARSVTE+60                                              06837000
PSARSTK  EQU   PSARSVTE+56                                              06838000
PSAESAV3 EQU   PSARSVTE+52                                              06839000
PSAESTK3 EQU   PSARSVTE+48                                              06840000
PSAESAV2 EQU   PSARSVTE+44                                              06841000
PSAESTK2 EQU   PSARSVTE+40                                              06842000
PSAESAV1 EQU   PSARSVTE+36                                              06843000
PSAESTK1 EQU   PSARSVTE+32                                              06844000
PSAPSAV  EQU   PSARSVTE+28                                              06845000
PSAPSTK  EQU   PSARSVTE+24                                              06846000
PSAMSAV  EQU   PSARSVTE+20                                              06847000
PSAMSTK  EQU   PSARSVTE+16                                              06848000
PSASSAV  EQU   PSARSVTE+12                                              06849000
PSASSTK  EQU   PSARSVTE+8                                               06850000
PSANSTK  EQU   PSARSVTE+4                                               06851000
PSACSTK  EQU   PSARSVTE                                                 06852000
CVTRV628 EQU   CVTS01+728                                               06853000
CVTRV627 EQU   CVTS01+724                                               06854000
CVTRV626 EQU   CVTS01+720                                               06855000
CVTRV625 EQU   CVTS01+716                                               06856000
CVTRV624 EQU   CVTS01+712                                               06857000
CVTRV623 EQU   CVTS01+708                                               06858000
CVTRV622 EQU   CVTS01+704                                               06859000
CVTRV621 EQU   CVTS01+700                                               06860000
CVTRV620 EQU   CVTS01+696                                               06861000
CVTRV619 EQU   CVTS01+692                                               06862000
CVTRV618 EQU   CVTS01+688                                               06863000
CVTRV617 EQU   CVTS01+684                                               06864000
CVTRV616 EQU   CVTS01+680                                               06865000
CVTRV615 EQU   CVTS01+676                                               06866000
CVTRV614 EQU   CVTS01+672                                               06867000
CVTRV613 EQU   CVTS01+668                                               06868000
CVTRV612 EQU   CVTS01+664                                               06869000
CVTRV611 EQU   CVTS01+660                                               06870000
CVTRV610 EQU   CVTS01+656                                               06871000
CVTRV609 EQU   CVTS01+652                                               06872000
CVTRV608 EQU   CVTS01+648                                               06873000
CVTRV607 EQU   CVTS01+644                                               06874000
CVTRV606 EQU   CVTS01+640                                               06875000
CVTRV605 EQU   CVTS01+636                                               06876000
CVTRV604 EQU   CVTS01+632                                               06877000
CVTEFF02 EQU   CVTS01+628                                               06878000
CVTCBBR  EQU   CVTS01+624                                               06879000
CVTSSCR  EQU   CVTS01+620                                               06880000
CVTEVENT EQU   CVTS01+616                                               06881000
CVTCRCA  EQU   CVTS01+612                                               06882000
CVTTPIO  EQU   CVTS01+608                                               06883000
CVTADV   EQU   CVTS01+604                                               06884000
CVTGSDAB EQU   CVTGSDA                                                  06885000
CVTQV3   EQU   CVTS01+596                                               06886000
CVTQV2   EQU   CVTS01+592                                               06887000
CVTQV1   EQU   CVTS01+588                                               06888000
CVTRPT   EQU   CVTS01+584                                               06889000
CVTSSRB  EQU   CVTS01+580                                               06890000
CVTCSDRL EQU   CVTS01+576                                               06891000
CVTEXP1  EQU   CVTS01+572                                               06892000
CVTRMPMT EQU   CVTS01+568                                               06893000
CVTRMPTT EQU   CVTS01+564                                               06894000
CVTVPSA  EQU   CVTS01+560                                               06895000
CVTVSTOP EQU   CVTS01+556                                               06896000
CVTGTFR8 EQU   CVTS01+552                                               06897000
CVTQUIT  EQU   CVTS01+548                                               06898000
CVTVACR  EQU   CVTS01+544                                               06899000
CVTWTCB  EQU   CVTS01+540                                               06900000
CVTSTPRS EQU   CVTS01+536                                               06901000
CVT0PT02 EQU   CVTS01+532                                               06902000
CVTDARCM EQU   CVTS01+528                                               06903000
CVTIRECM EQU   CVTS01+524                                               06904000
CVTJRECM EQU   CVTS01+520                                               06905000
CVTVEMS0 EQU   CVTS01+516                                               06906000
CVTSPFRR EQU   CVTS01+512                                               06907000
CVTRLSTG EQU   CVTS01+508                                               06908000
CVT0TC0A EQU   CVTS01+504                                               06909000
CVTGMBR  EQU   CVTS01+500                                               06910000
CVTLFRM  EQU   CVTS01+496                                               06911000
CVTRMBR  EQU   CVTS01+492                                               06912000
CVTVIOP  EQU   CVTS01+488                                               06913000
CVTRV307 EQU   CVTS01+486                                               06914000
CVTRV306 EQU   CVTS01+484                                               06915000
CVTRV305 EQU   CVTS01+482                                               06916000
CVTRV304 EQU   CVTS01+480                                               06917000
CVTRV303 EQU   CVTS01+478                                               06918000
CVTRV302 EQU   CVTS01+476                                               06919000
CVTTRCA  EQU   CVTS01+472                                               06920000
CVTRV297 EQU   CVTRV289                                                 06921000
CVTRV296 EQU   CVTRV289                                                 06922000
CVTRV295 EQU   CVTRV289                                                 06923000
CVTRV294 EQU   CVTRV289                                                 06924000
CVTRV293 EQU   CVTRV289                                                 06925000
CVTRV292 EQU   CVTRV289                                                 06926000
CVTRV291 EQU   CVTRV289                                                 06927000
CVTRV290 EQU   CVTRV289                                                 06928000
CVTRV288 EQU   CVTRV280                                                 06929000
CVTRV287 EQU   CVTRV280                                                 06930000
CVTRV286 EQU   CVTRV280                                                 06931000
CVTRV285 EQU   CVTRV280                                                 06932000
CVTRV284 EQU   CVTRV280                                                 06933000
CVTRV283 EQU   CVTRV280                                                 06934000
CVTRV282 EQU   CVTRV280                                                 06935000
CVTRV281 EQU   CVTRV280                                                 06936000
CVTRV279 EQU   CVTRV271                                                 06937000
CVTRV278 EQU   CVTRV271                                                 06938000
CVTRV277 EQU   CVTRV271                                                 06939000
CVTRV276 EQU   CVTRV271                                                 06940000
CVTRV275 EQU   CVTRV271                                                 06941000
CVTRV274 EQU   CVTRV271                                                 06942000
CVTRV273 EQU   CVTRV271                                                 06943000
CVTRV272 EQU   CVTRV271                                                 06944000
CVTRV270 EQU   CVTRV262                                                 06945000
CVTRV269 EQU   CVTRV262                                                 06946000
CVTRV268 EQU   CVTRV262                                                 06947000
CVTRV267 EQU   CVTRV262                                                 06948000
CVTRV266 EQU   CVTRV262                                                 06949000
CVTRV265 EQU   CVTRV262                                                 06950000
CVTRV264 EQU   CVTRV262                                                 06951000
CVTRV263 EQU   CVTRV262                                                 06952000
CVTVFP   EQU   CVTS01+464                                               06953000
CVTVSI   EQU   CVTS01+460                                               06954000
CVTVPSIB EQU   CVTS01+456                                               06955000
CVTMFACT EQU   CVTMFRTR                                                 06956000
CVTMFCTL EQU   CVTS01+448                                               06957000
CVTPVBP  EQU   CVTS01+444                                               06958000
CVTPWI   EQU   CVTS01+440                                               06959000
CVTRV254 EQU   CVTS01+438                                               06960000
CVTRV253 EQU   CVTS01+436                                               06961000
CVTRV252 EQU   CVTS01+434                                               06962000
CVTRV251 EQU   CVTS01+433                                               06963000
CVTRV250 EQU   CVTS01+432                                               06964000
CVTRV249 EQU   CVTS01+431                                               06965000
CVTRV248 EQU   CVTS01+430                                               06966000
CVTRV247 EQU   CVTS01+429                                               06967000
CVTRV246 EQU   CVTS01+428                                               06968000
CVTRV245 EQU   CVTRV237                                                 06969000
CVTRV244 EQU   CVTRV237                                                 06970000
CVTRV243 EQU   CVTRV237                                                 06971000
CVTRV242 EQU   CVTRV237                                                 06972000
CVTRV241 EQU   CVTRV237                                                 06973000
CVTRV240 EQU   CVTRV237                                                 06974000
CVTRV239 EQU   CVTRV237                                                 06975000
CVTRV238 EQU   CVTRV237                                                 06976000
CVTRV236 EQU   CVTRV228                                                 06977000
CVTRV235 EQU   CVTRV228                                                 06978000
CVTRV234 EQU   CVTRV228                                                 06979000
CVTRV233 EQU   CVTRV228                                                 06980000
CVTRV232 EQU   CVTRV228                                                 06981000
CVTRV231 EQU   CVTRV228                                                 06982000
CVTRV230 EQU   CVTRV228                                                 06983000
CVTRV229 EQU   CVTRV228                                                 06984000
CVTRV227 EQU   CVTRV219                                                 06985000
CVTRV226 EQU   CVTRV219                                                 06986000
CVTRV225 EQU   CVTRV219                                                 06987000
CVTRV224 EQU   CVTRV219                                                 06988000
CVTRV223 EQU   CVTRV219                                                 06989000
CVTRV222 EQU   CVTRV219                                                 06990000
CVTRV221 EQU   CVTRV219                                                 06991000
CVTRV220 EQU   CVTRV219                                                 06992000
CVTRV218 EQU   CVTRV210                                                 06993000
CVTRV217 EQU   CVTRV210                                                 06994000
CVTRV216 EQU   CVTRV210                                                 06995000
CVTRV215 EQU   CVTRV210                                                 06996000
CVTRV214 EQU   CVTRV210                                                 06997000
CVTRV213 EQU   CVTRV210                                                 06998000
CVTRV212 EQU   CVTRV210                                                 06999000
CVTRV211 EQU   CVTRV210                                                 07000000
CVTLCCAT EQU   CVTS01+420                                               07001000
CVTIPCRP EQU   CVTS01+412                                               07002000
CVTIPCRI EQU   CVTS01+408                                               07003000
CVTIPCDS EQU   CVTS01+404                                               07004000
CVTAIDVT EQU   CVTS01+400                                               07005000
CVTSSAP  EQU   CVTS01+396                                               07006000
CVTEHCIR EQU   CVTS01+392                                               07007000
CVTEHDEF EQU   CVTS01+388                                               07008000
CVTDAIR  EQU   CVTS01+384                                               07009000
CVTPERFM EQU   CVTS01+380                                               07010000
CVT044R2 EQU   CVTS01+376                                               07011000
CVTFETCH EQU   CVTS01+372                                               07012000
CVTRSTWD EQU   CVTS01+368                                               07013000
CVTSPOST EQU   CVTS01+364                                               07014000
CVTIOBP  EQU   CVTS01+360                                               07015000
CVTASMVT EQU   CVTS01+356                                               07016000
CVTRECRQ EQU   CVTS01+352                                               07017000
CVTWSAC  EQU   CVTS01+348                                               07018000
CVTRV149 EQU   CVTS01+344                                               07019000
CVTWSAL  EQU   CVTS01+340                                               07020000
CVTSPSA  EQU   CVTS01+336                                               07021000
CVTGLMN  EQU   CVTS01+332                                               07022000
CVTVEAC0 EQU   CVTS01+328                                               07023000
CVT062R1 EQU   CVTS01+324                                               07024000
CVTRPOST EQU   CVTS01+320                                               07025000
CVTDQIQE EQU   CVTS01+316                                               07026000
CVTLKRMA EQU   CVTS01+308                                               07027000
CVTRSPIE EQU   CVTS01+304                                               07028000
CVTRENQ  EQU   CVTS01+300                                               07029000
CVTLQCB  EQU   CVTS01+296                                               07030000
CVTFQCB  EQU   CVTS01+292                                               07031000
CVTQCS01 EQU   CVTS01+288                                               07032000
CVTAPFT  EQU   CVTS01+284                                               07033000
CVTPARRL EQU   CVTS01+280                                               07034000
CVTVWAIT EQU   CVTS01+276                                               07035000
CVTEXPRO EQU   CVTS01+260                                               07036000
CVTOPCTP EQU   CVTS01+256                                               07037000
CVTSIC   EQU   CVTS01+252                                               07038000
CVTTPIOS EQU   CVTS01+248                                               07039000
CVTRTMS  EQU   CVTS01+244                                               07040000
CVTSDBF  EQU   CVTS01+240                                               07041000
CVTSCBP  EQU   CVTS01+236                                               07042000
CVTSDMP  EQU   CVTS01+232                                               07043000
CVTSV60  EQU   CVTS01+228                                               07044000
CVTRTMCT EQU   CVTS01+224                                               07045000
CVTASCBL EQU   CVTS01+220                                               07046000
CVTASCBH EQU   CVTS01+216                                               07047000
CVTGDA   EQU   CVTS01+212                                               07048000
CVTVVMDI EQU   CVTS01+204                                               07049000
CVTAQTOP EQU   CVTS01+200                                               07050000
CVTIOSCS EQU   CVTS01+196                                               07051000
CVTSDRM  EQU   CVTS01+192                                               07052000
CVTOPTE  EQU   CVTS01+188                                               07053000
CVTSTXU  EQU   CVTS01+184                                               07054000
CVTQUIS  EQU   CVTS01+180                                               07055000
CVTPARS  EQU   CVTS01+176                                               07056000
CVTS1EE  EQU   CVTS01+172                                               07057000
CVTFRAS  EQU   CVTS01+168                                               07058000
CVTQSAS  EQU   CVTS01+164                                               07059000
CVTCRAS  EQU   CVTS01+160                                               07060000
CVTCRMN  EQU   CVTS01+156                                               07061000
CVTDELCP EQU   CVTS01+152                                               07062000
CVTFRECL EQU   CVTS01+148                                               07063000
CVTGETCL EQU   CVTS01+144                                               07064000
CVTBLDCP EQU   CVTS01+140                                               07065000
CVTAUTHL EQU   CVTS01+136                                               07066000
CVTSCAN  EQU   CVTS01+132                                               07067000
CVTRV144 EQU   CVTS01+130                                               07068000
CVTMAXMP EQU   CVTS01+128                                               07069000
CVTSTCK  EQU   CVTS01+124                                               07070000
CVTRV139 EQU   CVTS01+123                                               07071000
CVTDSSAC EQU   CVTS01+122                                               07072000
CVTRV513 EQU   CVTS01+121                                               07073000
CVTIOSPL EQU   CVTS01+120                                               07074000
CVTPTGT  EQU   CVTS01+116                                               07075000
CVTCSPIE EQU   CVTS01+112                                               07076000
CVTSMFEX EQU   CVTS01+108                                               07077000
CVTOLT0A EQU   CVTS01+104                                               07078000
CVTSRBRT EQU   CVTS01+100                                               07079000
CVTPUTL  EQU   CVTS01+96                                                07080000
CVTRV519 EQU   CVTS01+92                                                07081000
CVTRV327 EQU   CVTS01+88                                                07082000
CVTRV326 EQU   CVTS01+84                                                07083000
CVTRV325 EQU   CVTS01+80                                                07084000
CVTRV324 EQU   CVTS01+76                                                07085000
CVT0VL01 EQU   CVTS01+72                                                07086000
CVTSHRVM EQU   CVTS01+68                                                07087000
CVTRV332 EQU   CVTS01+64                                                07088000
CVTTAS   EQU   CVTS01+60                                                07089000
CVTRSCN  EQU   CVTS01+56                                                07090000
CVTTRAC2 EQU   CVTS01+54                                                07091000
CVTTRACE EQU   CVTS01+52                                                07092000
CVTAPG   EQU   CVTS01+51                                                07093000
CVTSDTRC EQU   CVTCTLFG                                                 07094000
CVTGTRCE EQU   CVTCTLFG                                                 07095000
CVTNOMP  EQU   CVTCTLFG                                                 07096000
CVTRSV79 EQU   CVTCTLFG                                                 07097000
CVTDSTAT EQU   CVTCTLFG                                                 07098000
CVTRSV78 EQU   CVTCTLFG                                                 07099000
CVTRV333 EQU   CVTCTLFG                                                 07100000
CVTRV323 EQU   CVTCTLFG                                                 07101000
CVTSPVLK EQU   CVTS01+49                                                07102000
CVTRSV77 EQU   CVTS01+48                                                07103000
CVTRV331 EQU   CVTS01+44                                                07104000
CVTRV330 EQU   CVTS01+40                                                07105000
CVTRV329 EQU   CVTS01+36                                                07106000
CVTRV328 EQU   CVTS01+32                                                07107000
CVTRV322 EQU   CVTS01+28                                                07108000
CVTSLID  EQU   CVTSLIDA+1                                               07109000
CVTSYLK  EQU   CVTSLIDA                                                 07110000
CVTRV321 EQU   CVTS01+20                                                07111000
CVTRV320 EQU   CVTS01+16                                                07112000
CVTLPDIR EQU   CVTLPDIA+1                                               07113000
CVTRSV69 EQU   CVTDIRST                                                 07114000
CVTRSV68 EQU   CVTDIRST                                                 07115000
CVTRSV67 EQU   CVTDIRST                                                 07116000
CVTRSV66 EQU   CVTDIRST                                                 07117000
CVTRSV65 EQU   CVTDIRST                                                 07118000
CVTRSV64 EQU   CVTDIRST                                                 07119000
CVTRSV63 EQU   CVTDIRST                                                 07120000
CVTDICOM EQU   CVTDIRST                                                 07121000
CVTPVTP  EQU   CVTS01+8                                                 07122000
CVTLPDSR EQU   CVTS01+4                                                 07123000
CVTGETL  EQU   CVTS01                                                   07124000
@NM00091 EQU   BUFFER                                                   07125000
@NM00090 EQU   BUFTTL                                                   07126000
CTLCHAR  EQU   OUTBUF                                                   07127000
@NM00089 EQU   TBNT+4                                                   07128000
@NM00088 EQU   ASMAP+6                                                  07129000
@NM00087 EQU   DMPMAP+12                                                07130000
@NM00086 EQU   DMPMAP                                                   07131000
@NM00085 EQU   CURENTRY+2                                               07132000
@NM00084 EQU   PRTA                                                     07133000
PRFLG3   EQU   PROBLIST+6                                               07134000
PRFLG2   EQU   PROBLIST+5                                               07135000
CSADDR   EQU   COMMON+2072                                              07136000
@NM00083 EQU   COMMON+2070                                              07137000
TOPICHDR EQU   COMMON+2060                                              07138000
DFLTCSA  EQU   COMMON+2056                                              07139000
LPAMAX   EQU   COMMON+2052                                              07140000
DNUCTOP  EQU   COMMON+2048                                              07141000
XLMAX    EQU   COMMON+2044                                              07142000
DQEMAX   EQU   COMMON+2042                                              07143000
DDMAX    EQU   COMMON+2034                                              07144000
DEBMAX   EQU   COMMON+2032                                              07145000
JPQMAX   EQU   COMMON+2030                                              07146000
LLEMAX   EQU   COMMON+2028                                              07147000
PQEMAX   EQU   COMMON+2026                                              07148000
RBMAX    EQU   COMMON+2024                                              07149000
@NM00082 EQU   COMMON+2023                                              07150000
EXITFLAG EQU   COMMON+2022                                              07151000
AUSRTCBA EQU   COMMON+2016                                              07152000
AUSRDEL  EQU   COMMON+2012                                              07153000
AUSREXIT EQU   COMMON+2008                                              07154000
AUSRINIT EQU   COMMON+2004                                              07155000
ASRBFMT  EQU   COMMON+2000                                              07156000
AASCBFMT EQU   COMMON+1996                                              07157000
BRRDADJ  EQU   COMMON+1992                                              07158000
BRRDINIT EQU   COMMON+1988                                              07159000
BUFERMAP EQU   COMMON+1980                                              07160000
CPUMAP   EQU   COMMON+1972                                              07161000
@NM00081 EQU   COMMON+1964                                              07162000
HDRTITLE EQU   COMMON+1864                                              07163000
HDRREGS  EQU   COMMON+1696                                              07164000
SACSWCAW EQU   COMMON+1684                                              07165000
ASVTADDR EQU   COMMON+1680                                              07166000
PREFXRGV EQU   COMMON+1676                                              07167000
CURASCB  EQU   COMMON+1668                                              07168000
IPLCPU   EQU   COMMON+1666                                              07169000
QASID    EQU   COMMON+1664                                              07170000
QAPFT    EQU   COMMON+1660                                              07171000
@NM00080 EQU   COMMON+1656                                              07172000
REALMAX  EQU   COMMON+1652                                              07173000
SEGTABOR EQU   COMMON+1648                                              07174000
@NM00079 EQU   COMMON+1641                                              07175000
EDITER   EQU   COMMON+1640                                              07176000
AROOT    EQU   COMMON+1636                                              07177000
AEDITCB  EQU   COMMON+1632                                              07178000
TRCCOUNT EQU   COMMON+1628                                              07179000
ASYSUDCB EQU   @NM00077+1                                               07180000
ENDLIST  EQU   @NM00078                                                 07181000
AINDCB   EQU   DCBADDRS+12                                              07182000
ARDRDCB  EQU   DCBADDRS+8                                               07183000
APTRDCB  EQU   DCBADDRS+4                                               07184000
AOUTDCB  EQU   DCBADDRS                                                 07185000
ATCBSMRY EQU   COMMON+1604                                              07186000
ATCBSMFR EQU   COMMON+1600                                              07187000
ONGOPTR  EQU   COMMON+1596                                              07188000
AEND     EQU   COMMON+1592                                              07189000
AERRMSGA EQU   COMMON+1584                                              07190000
BUFREINT EQU   COMMON+1580                                              07191000
BUFSUM   EQU   COMMON+1576                                              07192000
APRTSTG  EQU   COMMON+1572                                              07193000
AFORMAT  EQU   COMMON+1568                                              07194000
ASTPROUT EQU   COMMON+1564                                              07195000
APCBENQ  EQU   COMMON+1560                                              07196000
ATCBRTRV EQU   COMMON+1556                                              07197000
QATMERTN EQU   COMMON+1544                                              07198000
ALOADER  EQU   COMMON+1540                                              07199000
AEREXIT  EQU   COMMON+1536                                              07200000
SYNMSGA  EQU   COMMON+1532                                              07201000
ARGNBND  EQU   COMMON+1524                                              07202000
ASYNTAX  EQU   COMMON+1508                                              07203000
APRTMSG  EQU   COMMON+1504                                              07204000
NONBLNK  EQU   COMMON+1244                                              07205000
BLNK     EQU   COMMON+988                                               07206000
@NM00076 EQU   COMMON+972                                               07207000
@NM00075 EQU   COMMON+915                                               07208000
@NM00074 EQU   HEXTABL                                                  07209000
@NM00073 EQU   TABLE                                                    07210000
CAPTABL  EQU   COMMON+403                                               07211000
TITLEPGE EQU   COMMON+394                                               07212000
@NM00072 EQU   COMMON+392                                               07213000
TITLETME EQU   COMMON+379                                               07214000
@NM00071 EQU   COMMON+377                                               07215000
TITLEDTE EQU   COMMON+364                                               07216000
@NM00070 EQU   COMMON+362                                               07217000
TITLEMOD EQU   COMMON+347                                               07218000
TITLEMSG EQU   COMMON+283                                               07219000
MSG2     EQU   COMMON+257                                               07220000
MSG1     EQU   COMMON+231                                               07221000
STOP     EQU   COMMON+227                                               07222000
TITLE    EQU   COMMON+222                                               07223000
BLANKS   EQU   COMMON+214                                               07224000
WTORMSG  EQU   COMMON+133                                               07225000
@NM00069 EQU   COMMON+130                                               07226000
@NM00068 EQU   PRSW                                                     07227000
@NM00067 EQU   PRSW                                                     07228000
PRNTREAL EQU   PRSW                                                     07229000
PRNTRL   EQU   PRSW                                                     07230000
TTLSW    EQU   PRSW                                                     07231000
@NM00066 EQU   PRSW                                                     07232000
QSEGTBSW EQU   PRSW                                                     07233000
@NM00065 EQU   PRSW                                                     07234000
@NM00064 EQU   BUFSW                                                    07235000
PREFM    EQU   BUFSW                                                    07236000
@NM00063 EQU   BUFSW                                                    07237000
@NM00062 EQU   BUFSW                                                    07238000
@NM00061 EQU   BUFSW                                                    07239000
@NM00060 EQU   BUFSW                                                    07240000
@NM00059 EQU   BUFSW                                                    07241000
@NM00058 EQU   BUFSW                                                    07242000
@NM00057 EQU   SWF                                                      07243000
QUT1LOD  EQU   SWF                                                      07244000
@NM00056 EQU   SWF                                                      07245000
PAGEOK   EQU   SWF                                                      07246000
DMPIC    EQU   SWF                                                      07247000
NUCTFRMC EQU   SWF                                                      07248000
QPRDINIT EQU   SWF                                                      07249000
@NM00055 EQU   SWE                                                      07250000
@NM00054 EQU   SWE                                                      07251000
@NM00053 EQU   SWE                                                      07252000
BUILDMAP EQU   SWE                                                      07253000
TITLESW  EQU   SWE                                                      07254000
RESPC    EQU   SWE                                                      07255000
@NM00052 EQU   SWE                                                      07256000
STOPSW   EQU   SWE                                                      07257000
@NM00051 EQU   SWD                                                      07258000
GPRSFND  EQU   SWD                                                      07259000
CONTSW   EQU   SWD                                                      07260000
NOLOADSW EQU   SWD                                                      07261000
NOSTDMG  EQU   SWD                                                      07262000
@NM00050 EQU   SWD                                                      07263000
@NM00049 EQU   SWD                                                      07264000
FLSHMODE EQU   SWD                                                      07265000
@NM00048 EQU   SWC                                                      07266000
@NM00047 EQU   SWC                                                      07267000
@NM00046 EQU   SWC                                                      07268000
EDITSW   EQU   SWC                                                      07269000
TREADIN  EQU   SWC                                                      07270000
POSITSW  EQU   SWC                                                      07271000
SETFLSH  EQU   SWC                                                      07272000
MSTRSW   EQU   SWC                                                      07273000
@NM00045 EQU   SWB                                                      07274000
@NM00044 EQU   SWB                                                      07275000
QSYSUT2  EQU   SWB                                                      07276000
ENDSW    EQU   SWB                                                      07277000
@NM00043 EQU   SWB                                                      07278000
@NM00042 EQU   SWB                                                      07279000
FMTERR   EQU   SWB                                                      07280000
IOERR    EQU   SWB                                                      07281000
RDRSW    EQU   SWA                                                      07282000
SETCVTSW EQU   SWA                                                      07283000
@NM00041 EQU   SWA                                                      07284000
GOSW     EQU   SWA                                                      07285000
@NM00040 EQU   SWA                                                      07286000
@NM00039 EQU   SWA                                                      07287000
@NM00038 EQU   SWA                                                      07288000
@NM00037 EQU   SWA                                                      07289000
LINENUM  EQU   COMMON+120                                               07290000
LINENUMB EQU   COMMON+118                                               07291000
SIXTEEN  EQU   COMMON+116                                               07292000
TWELVE   EQU   COMMON+114                                               07293000
ELEVEN   EQU   COMMON+112                                               07294000
HTEN     EQU   COMMON+110                                               07295000
EIGHT    EQU   COMMON+108                                               07296000
SEVEN    EQU   COMMON+106                                               07297000
FIVE     EQU   COMMON+104                                               07298000
FOUR     EQU   COMMON+102                                               07299000
THREE    EQU   COMMON+100                                               07300000
TWO      EQU   COMMON+98                                                07301000
ONEA     EQU   COMMON+96                                                07302000
READTM   EQU   COMMON+92                                                07303000
RDERCNT  EQU   COMMON+88                                                07304000
READNO   EQU   COMMON+84                                                07305000
RDENTRY  EQU   COMMON+80                                                07306000
@NM00036 EQU   COMMON+78                                                07307000
FILESEQ  EQU   COMMON+76                                                07308000
INDD     EQU   COMMON+68                                                07309000
STORSIZE EQU   COMMON+64                                                07310000
PCBPTR   EQU   COMMON+60                                                07311000
PAGENUMB EQU   COMMON+44                                                07312000
LINECNT  EQU   COMMON+40                                                07313000
SIX      EQU   COMMON+36                                                07314000
NUCTOP   EQU   COMMON+32                                                07315000
WORK1    EQU   COMMON+24                                                07316000
DELIMCD  EQU   COMMON+20                                                07317000
KYWDEND  EQU   COMMON+16                                                07318000
KYWDBGN  EQU   COMMON+12                                                07319000
VERBEND  EQU   COMMON+8                                                 07320000
VERBGN   EQU   COMMON+4                                                 07321000
@NM00035 EQU   TCBXTNT2+32                                              07322000
TCBRV181 EQU   TCBRV173                                                 07323000
TCBRV180 EQU   TCBRV173                                                 07324000
TCBRV179 EQU   TCBRV173                                                 07325000
TCBRV178 EQU   TCBRV173                                                 07326000
TCBRV177 EQU   TCBRV173                                                 07327000
TCBRV176 EQU   TCBRV173                                                 07328000
TCBRV175 EQU   TCBRV173                                                 07329000
TCBRV174 EQU   TCBRV173                                                 07330000
TCBRV172 EQU   TCBRV164                                                 07331000
TCBRV171 EQU   TCBRV164                                                 07332000
TCBRV170 EQU   TCBRV164                                                 07333000
TCBRV169 EQU   TCBRV164                                                 07334000
TCBRV168 EQU   TCBRV164                                                 07335000
TCBRV167 EQU   TCBRV164                                                 07336000
TCBRV166 EQU   TCBRV164                                                 07337000
TCBRV165 EQU   TCBRV164                                                 07338000
TCBRV163 EQU   TCBRV155                                                 07339000
TCBRV162 EQU   TCBRV155                                                 07340000
TCBRV161 EQU   TCBRV155                                                 07341000
TCBRV160 EQU   TCBRV155                                                 07342000
TCBRV159 EQU   TCBRV155                                                 07343000
TCBRV158 EQU   TCBRV155                                                 07344000
TCBRV157 EQU   TCBRV155                                                 07345000
TCBRV156 EQU   TCBRV155                                                 07346000
TCBRV154 EQU   TCBRV146                                                 07347000
TCBRV153 EQU   TCBRV146                                                 07348000
TCBRV152 EQU   TCBRV146                                                 07349000
TCBRV151 EQU   TCBRV146                                                 07350000
TCBRV150 EQU   TCBRV146                                                 07351000
TCBRV149 EQU   TCBRV146                                                 07352000
TCBRV148 EQU   TCBRV146                                                 07353000
TCBRV147 EQU   TCBRV146                                                 07354000
TCBRV145 EQU   TCBXTNT2+26                                              07355000
TCBRV144 EQU   TCBXTNT2+24                                              07356000
TCBRV143 EQU   TCBXTNT2+20                                              07357000
TCBRV142 EQU   TCBXTNT2+16                                              07358000
TCBRSV49 EQU   TCBXTNT2+12                                              07359000
TCBEVENT EQU   TCBXTNT2+8                                               07360000
TCBRCMP  EQU   TCBXTNT2+5                                               07361000
TCBRSVAB EQU   TCBXTNT2+4                                               07362000
TCBGTFA  EQU   TCBGTF+1                                                 07363000
TCBRSV47 EQU   TCBTFLG                                                  07364000
TCBRSV46 EQU   TCBTFLG                                                  07365000
TCBRSV45 EQU   TCBTFLG                                                  07366000
TCBRSV44 EQU   TCBTFLG                                                  07367000
TCBRSV43 EQU   TCBTFLG                                                  07368000
TCBDSPIT EQU   TCBTFLG                                                  07369000
TCBERRTN EQU   TCBTFLG                                                  07370000
TCBASYNC EQU   TCBTFLG                                                  07371000
@NM00034 EQU   TCB+296                                                  07372000
TCBRV185 EQU   TCB+292                                                  07373000
TCBSWASA EQU   TCB+288                                                  07374000
TCBDBTB  EQU   TCB+284                                                  07375000
TCBRPT   EQU   TCB+280                                                  07376000
TCBRV141 EQU   TCBRV133                                                 07377000
TCBRV140 EQU   TCBRV133                                                 07378000
TCBRV139 EQU   TCBRV133                                                 07379000
TCBRV138 EQU   TCBRV133                                                 07380000
TCBRV137 EQU   TCBRV133                                                 07381000
TCBRV136 EQU   TCBRV133                                                 07382000
TCBRV135 EQU   TCBRV133                                                 07383000
TCBRV134 EQU   TCBRV133                                                 07384000
TCBRV132 EQU   TCBRV124                                                 07385000
TCBRV131 EQU   TCBRV124                                                 07386000
TCBRV130 EQU   TCBRV124                                                 07387000
TCBRV129 EQU   TCBRV124                                                 07388000
TCBRV128 EQU   TCBRV124                                                 07389000
TCBRV127 EQU   TCBRV124                                                 07390000
TCBRV126 EQU   TCBRV124                                                 07391000
TCBRV125 EQU   TCBRV124                                                 07392000
TCBRV123 EQU   TCBFBYT2                                                 07393000
TCBRV122 EQU   TCBFBYT2                                                 07394000
TCBECBNV EQU   TCBFBYT2                                                 07395000
TCBSSSYN EQU   TCBFBYT2                                                 07396000
TCBFPRAP EQU   TCBFBYT2                                                 07397000
TCBFDW   EQU   TCBFBYT2                                                 07398000
TCBFMW   EQU   TCBFBYT2                                                 07399000
TCBCNCB  EQU   TCBFBYT2                                                 07400000
TCBLLH   EQU   TCBFBYT1                                                 07401000
TCBRV113 EQU   TCBFBYT1                                                 07402000
TCBEOT   EQU   TCBFBYT1                                                 07403000
TCBRTM2  EQU   TCBFBYT1                                                 07404000
TCBPGNLY EQU   TCBFBYT1                                                 07405000
TCBNDIOS EQU   TCBFBYT1                                                 07406000
TCBACTIV EQU   TCBFBYT1                                                 07407000
TCBEOTFM EQU   TCBFBYT1                                                 07408000
TCBAFFN  EQU   TCB+274                                                  07409000
TCBCCPVI EQU   TCB+272                                                  07410000
TCBUKYSP EQU   TCB+268                                                  07411000
TCBMODE  EQU   TCBESTAE+3                                               07412000
TCBERTYP EQU   TCBESTAE+2                                               07413000
TCBRV314 EQU   TCBESTRM                                                 07414000
TCBRV313 EQU   TCBESTRM                                                 07415000
TCBRV312 EQU   TCBESTRM                                                 07416000
TCBRV311 EQU   TCBESTRM                                                 07417000
TCBRV310 EQU   TCBESTRM                                                 07418000
TCBRV309 EQU   TCBESTRM                                                 07419000
TCBRV308 EQU   TCBESTRM                                                 07420000
TCBETERM EQU   TCBESTRM                                                 07421000
TCBSCBKY EQU   TCBESTAE                                                 07422000
TCBRTM12 EQU   TCB+260                                                  07423000
TCBRSV96 EQU   TCB+252                                                  07424000
TCBSWA   EQU   TCB+248                                                  07425000
TCBFOEA  EQU   TCBFOE+1                                                 07426000
TCBRSV42 EQU   TCBFOE                                                   07427000
TCBRV306 EQU   TCB+240                                                  07428000
TCBRSV41 EQU   TCB+239                                                  07429000
TCBTID   EQU   TCB+238                                                  07430000
TCBRSVAA EQU   TCB+237                                                  07431000
TCBABCUR EQU   TCB+236                                                  07432000
TCBTMSAV EQU   TCB+232                                                  07433000
TCBIOTIM EQU   TCB+228                                                  07434000
TCBRTWA  EQU   TCB+224                                                  07435000
TCBTIRB  EQU   TCB+216                                                  07436000
TCBAECB  EQU   TCB+212                                                  07437000
TCBEXT2A EQU   TCBEXT2+1                                                07438000
TCBRSV39 EQU   TCBEXT2                                                  07439000
TCBSTMCT EQU   TCB+207                                                  07440000
TCBSYSCT EQU   TCB+206                                                  07441000
TCBRSV37 EQU   TCB+205                                                  07442000
TCBEXSVC EQU   TCBDAR                                                   07443000
TCBDARMS EQU   TCBDAR                                                   07444000
TCBDARWT EQU   TCBDAR                                                   07445000
TCBDARO  EQU   TCBDAR                                                   07446000
TCBDARMC EQU   TCBDARC                                                  07447000
TCBDARD  EQU   TCBDAR                                                   07448000
TCBDARS  EQU   TCBDAR                                                   07449000
TCBDARP  EQU   TCBDAR                                                   07450000
TCBGTOFM EQU   TCBFLGS7                                                 07451000
TCBADMP  EQU   TCBFLGS7                                                 07452000
TCBRSTSK EQU   TCBFLGS7                                                 07453000
TCBRSV35 EQU   TCBFLGS7                                                 07454000
TCBSTACK EQU   TCBFLGS7                                                 07455000
TCBRSV34 EQU   TCBFLGS7                                                 07456000
TCBRSV33 EQU   TCBFLGS7                                                 07457000
TCBGPECB EQU   TCBFLGS7                                                 07458000
TCBNTJS  EQU   TCBFLGS6                                                 07459000
TCBAPG   EQU   TCBFLGS6                                                 07460000
TCBMIGR  EQU   TCBFLGS6                                                 07461000
TCBRV303 EQU   TCBFLGS6                                                 07462000
TCBSPVLK EQU   TCBFLGS6                                                 07463000
TCBCPU   EQU   TCBFLGS6                                                 07464000
TCBPIE17 EQU   TCBFLGS6                                                 07465000
TCBRV    EQU   TCBFLGS6                                                 07466000
TCBRSV79 EQU   TCBNDSP5                                                 07467000
TCBRSV78 EQU   TCBNDSP5                                                 07468000
TCBRSV77 EQU   TCBNDSP5                                                 07469000
TCBRSV76 EQU   TCBNDSP5                                                 07470000
TCBRSV75 EQU   TCBNDSP5                                                 07471000
TCBRSV74 EQU   TCBNDSP5                                                 07472000
TCBRSV95 EQU   TCBNDSP5                                                 07473000
TCBRSV94 EQU   TCBNDSP5                                                 07474000
TCBRSV93 EQU   TCBNDSP4                                                 07475000
TCBRSV92 EQU   TCBNDSP4                                                 07476000
TCBRSV91 EQU   TCBNDSP4                                                 07477000
TCBRSV90 EQU   TCBNDSP4                                                 07478000
TCBRSV89 EQU   TCBNDSP4                                                 07479000
TCBRSV88 EQU   TCBNDSP4                                                 07480000
TCBRSV87 EQU   TCBNDSP4                                                 07481000
TCBRSV86 EQU   TCBNDSP4                                                 07482000
TCBEXT1A EQU   TCBEXT1+1                                                07483000
TCBRSV32 EQU   TCBEXT1                                                  07484000
TCBEXCPD EQU   TCB+192                                                  07485000
TCBIOBRC EQU   TCB+188                                                  07486000
TCBDDWTC EQU   TCB+186                                                  07487000
TCBDDEXC EQU   TCB+184                                                  07488000
TCBJSCBB EQU   TCBJSCB+1                                                07489000
@NM00033 EQU   TCBRECDE                                                 07490000
TCBREC   EQU   TCBRECDE                                                 07491000
TCBMDIDS EQU   TCB+176                                                  07492000
TCBNDINT EQU   TCBNDSP3                                                 07493000
TCBRSV27 EQU   TCBNDSP3                                                 07494000
TCBRSV26 EQU   TCBNDSP3                                                 07495000
TCBRSV25 EQU   TCBNDSP3                                                 07496000
TCBRSV24 EQU   TCBNDSP3                                                 07497000
TCBSRBND EQU   TCBNDSP3                                                 07498000
TCBRV302 EQU   TCBNDSP3                                                 07499000
TCBLJSND EQU   TCBNDSP3                                                 07500000
TCBABE   EQU   TCBNDSP2                                                 07501000
TCBDSS   EQU   TCBNDSP2                                                 07502000
TCBOWAIT EQU   TCBNDSP2                                                 07503000
TCBIWAIT EQU   TCBNDSP2                                                 07504000
TCBNDTS  EQU   TCBNDSP2                                                 07505000
TCBNDSVC EQU   TCBNDSP2                                                 07506000
TCBSTPP  EQU   TCBNDSP2                                                 07507000
TCBABD   EQU   TCBNDSP2                                                 07508000
TCBRSV22 EQU   TCBNDSP1                                                 07509000
TCBPIEND EQU   TCBNDSP1                                                 07510000
TCBTPSP  EQU   TCBNDSP1                                                 07511000
TCBDDRND EQU   TCBNDSP1                                                 07512000
TCBRSPND EQU   TCBNDSP1                                                 07513000
TCBRSTND EQU   TCBNDSP1                                                 07514000
TCBDARPN EQU   TCBNDSP1                                                 07515000
TCBDARTN EQU   TCBNDSP1                                                 07516000
TCBNDSP0 EQU   TCBNDSP                                                  07517000
TCBUSER  EQU   TCB+168                                                  07518000
TCBTCTB  EQU   TCBTCT+1                                                 07519000
TCBRSV9C EQU   TCBTCTGF                                                 07520000
TCBRSV9B EQU   TCBTCTGF                                                 07521000
TCBRSV9A EQU   TCBTCTGF                                                 07522000
TCBRSV99 EQU   TCBTCTGF                                                 07523000
TCBRSV98 EQU   TCBTCTGF                                                 07524000
TCBRSV97 EQU   TCBTCTGF                                                 07525000
TCBRSV20 EQU   TCBTCTGF                                                 07526000
TCBSMFGF EQU   TCBTCTGF                                                 07527000
TCBSTABB EQU   TCBSTAB+1                                                07528000
TCBSTCUR EQU   TCBNSTAE                                                 07529000
TCBRV301 EQU   TCBNSTAE                                                 07530000
TCBSYNCH EQU   TCBNSTAE                                                 07531000
TCBHALT  EQU   TCBNSTAE                                                 07532000
TCBPPSUP EQU   TCBNSTAE                                                 07533000
TCB33E   EQU   TCBNSTAE                                                 07534000
TCBQUIES EQU   TCBNSTAE                                                 07535000
TCBSTABE EQU   TCBNSTAE                                                 07536000
TCBAQE   EQU   TCB+156                                                  07537000
TCBPQE   EQU   TCB+152                                                  07538000
TCBTSDP  EQU   TCB+151                                                  07539000
TCBTSLP  EQU   TCB+150                                                  07540000
TCBCPUBN EQU   TCBTSFLG                                                 07541000
TCBDYDSP EQU   TCBTSFLG                                                 07542000
TCBRSV18 EQU   TCBTSFLG                                                 07543000
TCBRSV17 EQU   TCBTSFLG                                                 07544000
TCBTIOTG EQU   TCBTSFLG                                                 07545000
TCBATT   EQU   TCBTSFLG                                                 07546000
TCBSTPPR EQU   TCBTSFLG                                                 07547000
TCBRV300 EQU   TCBTSTSK                                                 07548000
TCBECB   EQU   TCB+144                                                  07549000
TCBIQE   EQU   TCB+140                                                  07550000
TCBLTC   EQU   TCB+136                                                  07551000
TCBOTC   EQU   TCB+132                                                  07552000
TCBNTC   EQU   TCB+128                                                  07553000
TCBJSTCA EQU   TCBJSTCB+1                                               07554000
TCBRSV16 EQU   TCBJSTCB                                                 07555000
TCBTQET  EQU   TCBTME                                                   07556000
TCBFSAB  EQU   TCBFSA+1                                                 07557000
TCBQEL   EQU   TCBFSA                                                   07558000
TCBGRS15 EQU   TCBGRS+60                                                07559000
TCBGRS14 EQU   TCBGRS+56                                                07560000
TCBGRS13 EQU   TCBGRS+52                                                07561000
TCBGRS12 EQU   TCBGRS+48                                                07562000
TCBGRS11 EQU   TCBGRS+44                                                07563000
TCBGRS10 EQU   TCBGRS+40                                                07564000
TCBGRS9  EQU   TCBGRS+36                                                07565000
TCBGRS8  EQU   TCBGRS+32                                                07566000
TCBGRS7  EQU   TCBGRS+28                                                07567000
TCBGRS6  EQU   TCBGRS+24                                                07568000
TCBGRS5  EQU   TCBGRS+20                                                07569000
TCBGRS4  EQU   TCBGRS+16                                                07570000
TCBGRS3  EQU   TCBGRS+12                                                07571000
TCBGRS2  EQU   TCBGRS+8                                                 07572000
TCBGRS1  EQU   TCBGRS+4                                                 07573000
TCBGRS0  EQU   TCBGRS                                                   07574000
TCBJPQB  EQU   TCBJPQ+1                                                 07575000
TCBRSV15 EQU   TCBPURGE                                                 07576000
TCBRSV14 EQU   TCBPURGE                                                 07577000
TCBRSV13 EQU   TCBPURGE                                                 07578000
TCBRSV12 EQU   TCBPURGE                                                 07579000
TCBRSV11 EQU   TCBPURGE                                                 07580000
TCBRSV10 EQU   TCBPURGE                                                 07581000
TCBRSV09 EQU   TCBPURGE                                                 07582000
TCBJPQF  EQU   TCBPURGE                                                 07583000
TCBJLB   EQU   TCB+40                                                   07584000
TCBLLS   EQU   TCB+36                                                   07585000
TCBDSP   EQU   TCB+35                                                   07586000
TCBLMP   EQU   TCB+34                                                   07587000
TCBPNDSP EQU   TCBFLGS5                                                 07588000
TCBFCD1  EQU   TCBFLGS5                                                 07589000
TCBSTP   EQU   TCBFLGS5                                                 07590000
TCBSYS   EQU   TCBFLGS5                                                 07591000
TCBANDSP EQU   TCBFLGS5                                                 07592000
TCBPAGE  EQU   TCBFLGS5                                                 07593000
TCBUXNDF EQU   TCBABWF                                                  07594000
TCBFC    EQU   TCBFLGS5                                                 07595000
TCBONDSP EQU   TCBFLGS4                                                 07596000
TCBMPCND EQU   TCBFLGS4                                                 07597000
TCBMPCVQ EQU   TCBFLGS4                                                 07598000
TCBUXNDV EQU   TCBFLGS4                                                 07599000
TCBHNDSP EQU   TCBFLGS4                                                 07600000
TCBRQENA EQU   TCBFLGS4                                                 07601000
TCBSER   EQU   TCBFLGS4                                                 07602000
TCBNDUMP EQU   TCBFLGS4                                                 07603000
TCBDWSTA EQU   TCBFLGS3                                                 07604000
TCBRSV08 EQU   TCBFLGS3                                                 07605000
TCBRSV07 EQU   TCBFLGS3                                                 07606000
TCBRSV06 EQU   TCBFLGS3                                                 07607000
TCBABGM  EQU   TCBFLGS3                                                 07608000
TCBABTRM EQU   TCBFLGS3                                                 07609000
TCBADINP EQU   TCBFLGS3                                                 07610000
TCBFSM   EQU   TCBFLGS3                                                 07611000
TCBFTS   EQU   TCBFLGS2                                                 07612000
TCBFETXR EQU   TCBFLGS2                                                 07613000
TCBFDSOP EQU   TCBFLGS2                                                 07614000
TCBFJMC  EQU   TCBFLGS2                                                 07615000
TCBFSMC  EQU   TCBFLGS2                                                 07616000
TCBFABOP EQU   TCBFLGS2                                                 07617000
TCBFSTI  EQU   TCBFLGS2                                                 07618000
TCBFOINP EQU   TCBFLGS2                                                 07619000
TCBFX    EQU   TCBFLGS1                                                 07620000
TCBFS    EQU   TCBFLGS1                                                 07621000
TCBFT    EQU   TCBFLGS1                                                 07622000
TCBPDUMP EQU   TCBFLGS1                                                 07623000
TCBRSV04 EQU   TCBFLGS1                                                 07624000
TCBFERA  EQU   TCBFLGS1                                                 07625000
TCBFE    EQU   TCBFLGS1                                                 07626000
TCBFA    EQU   TCBFLGS1                                                 07627000
TCBZERO  EQU   TCBPKF                                                   07628000
TCBFLAG  EQU   TCBPKF                                                   07629000
TCBMSSB  EQU   TCBMSS+1                                                 07630000
TCBRSV03 EQU   TCBMSS                                                   07631000
TCBTRNB  EQU   TCBTRN+1                                                 07632000
TCBRSV02 EQU   TCBABF                                                   07633000
TCBOLTEP EQU   TCBABF                                                   07634000
TCBTCP   EQU   TCBABF                                                   07635000
TCBTCPP  EQU   TCBABF                                                   07636000
TCBRSV01 EQU   TCBABF                                                   07637000
TCBGRPH  EQU   TCBABF                                                   07638000
TCBNOCHK EQU   TCBABF                                                   07639000
TCBMOD91 EQU   TCBABF                                                   07640000
TCBCMPC  EQU   TCBCMP+1                                                 07641000
TCBRV318 EQU   TCBCMSG                                                  07642000
TCBRV317 EQU   TCBCIND                                                  07643000
TCBRV316 EQU   TCBCWTO                                                  07644000
TCBCASID EQU   TCBCDBL                                                  07645000
TCBNOCC  EQU   TCBSTCC                                                  07646000
TCBDMPO  EQU   TCBCPP                                                   07647000
TCBCSTEP EQU   TCBCMPF                                                  07648000
TCBCREQ  EQU   TCBCMPF                                                  07649000
TCBTIO   EQU   TCB+12                                                   07650000
TCBDEB   EQU   TCB+8                                                    07651000
TCBPIEA  EQU   TCBPIE+1                                                 07652000
TCBPM    EQU   TCBPMASK                                                 07653000
@NM00032 EQU   TCBPMASK                                                 07654000
TCBRBP   EQU   TCB                                                      07655000
TCBFRS6  EQU   TCBFRS+24                                                07656000
TCBFRS4  EQU   TCBFRS+16                                                07657000
TCBFRS2  EQU   TCBFRS+8                                                 07658000
TCBFRS0  EQU   TCBFRS                                                   07659000
@NM00031 EQU   SRB+40                                                   07660000
@NM00030 EQU   SRB+38                                                   07661000
SRBPRIOR EQU   SRB+37                                                   07662000
SRBPKF   EQU   SRB+36                                                   07663000
SRBSAVE  EQU   SRB+32                                                   07664000
SRBPARM  EQU   SRB+28                                                   07665000
SRBRMTR  EQU   SRB+24                                                   07666000
SRBEP    EQU   SRB+20                                                   07667000
SRBPTCB  EQU   SRBFLC+4                                                 07668000
SRBPASID EQU   SRBFLC+2                                                 07669000
SRBCPAFF EQU   SRBFLC                                                   07670000
ASXBEND  EQU   ASXB+232                                                 07671000
ASXBRV25 EQU   ASXB+228                                                 07672000
ASXBRV24 EQU   ASXB+224                                                 07673000
ASXBRV23 EQU   ASXB+220                                                 07674000
ASXBRV22 EQU   ASXB+216                                                 07675000
ASXBRV21 EQU   ASXB+212                                                 07676000
ASXBRV20 EQU   ASXB+208                                                 07677000
ASXBRV19 EQU   ASXB+204                                                 07678000
ASXBRV18 EQU   ASXB+200                                                 07679000
ASXBRV17 EQU   ASXB+196                                                 07680000
ASXBRV16 EQU   ASXB+192                                                 07681000
ASXBLSRB EQU   ASXBAEQ+20                                               07682000
ASXBFSRB EQU   ASXBAEQ+16                                               07683000
ASXBLRQE EQU   ASXBAEQ+12                                               07684000
ASXBFRQE EQU   ASXBAEQ+8                                                07685000
ASXBLIQE EQU   ASXBAEQ+4                                                07686000
ASXBFIQE EQU   ASXBAEQ                                                  07687000
ASXBETSK EQU   ASXB+164                                                 07688000
ASXBSIRB EQU   ASXB+160                                                 07689000
ASXBPSWD EQU   ASXB+152                                                 07690000
ASXBPRG  EQU   ASXB+136                                                 07691000
ASXBRV26 EQU   ASXB+132                                                 07692000
ASXBOUSB EQU   ASXB+128                                                 07693000
ASXBDDR  EQU   ASXB+124                                                 07694000
ASXBRCTD EQU   ASXB+120                                                 07695000
ASXBRSMD EQU   ASXB+116                                                 07696000
ASXBSPSA EQU   ASXB+112                                                 07697000
ASXBFRWA EQU   ASXB+108                                                 07698000
ASXBFLSA EQU   ASXB+36                                                  07699000
ASXBIHSA EQU   ASXB+32                                                  07700000
ASXBRV15 EQU   ASXB+28                                                  07701000
ASXBRV14 EQU   ASXB+24                                                  07702000
ASXBLWA  EQU   ASXB+20                                                  07703000
ASXBMPST EQU   ASXB+16                                                  07704000
ASXBRS00 EQU   ASXB+14                                                  07705000
ASXBTCBS EQU   ASXB+12                                                  07706000
ASXBEGIN EQU   ASXB                                                     07707000
ASCBEND  EQU   ASCB+208                                                 07708000
ASCBSRBT EQU   ASCB+200                                                 07709000
ASCBSWTL EQU   ASCB+196                                                 07710000
ASCBRS14 EQU   ASCB+195                                                 07711000
ASCBSMCT EQU   ASCB+194                                                 07712000
ASCBRS12 EQU   ASCB+192                                                 07713000
ASCBPCTT EQU   ASCB+188                                                 07714000
ASCBVGTT EQU   ASCB+184                                                 07715000
ASCBLGCB EQU   ASCB+180                                                 07716000
ASCBRTWA EQU   ASCB+164                                                 07717000
ASCBIQEA EQU   ASCB+160                                                 07718000
ASCBXMPQ EQU   ASCB+156                                                 07719000
ASCBRS01 EQU   ASCB+154                                                 07720000
ASCBFMCT EQU   ASCB+152                                                 07721000
ASCBOUXB EQU   ASCB+148                                                 07722000
ASCBOUCB EQU   ASCB+144                                                 07723000
ASCBMECB EQU   ASCB+140                                                 07724000
ASCBQECB EQU   ASCB+136                                                 07725000
ASCBCMSB EQU   ASCB+132                                                 07726000
ASCBCMSF EQU   ASCB+128                                                 07727000
ASCBTCBS EQU   ASCB+124                                                 07728000
ASCBNVSC EQU   ASCB+122                                                 07729000
ASCBVSC  EQU   ASCB+120                                                 07730000
ASCBSRBS EQU   ASCB+118                                                 07731000
ASCBSSRB EQU   ASCB+116                                                 07732000
ASCBRV06 EQU   ASCBFLG2                                                 07733000
ASCBRV05 EQU   ASCBFLG2                                                 07734000
ASCBRV04 EQU   ASCBFLG2                                                 07735000
ASCBSNQS EQU   ASCBFLG2                                                 07736000
ASCBS2S  EQU   ASCBFLG2                                                 07737000
ASCBCEXT EQU   ASCBFLG2                                                 07738000
ASCBPXMT EQU   ASCBFLG2                                                 07739000
ASCBXMPT EQU   ASCBFLG2                                                 07740000
ASCBRF07 EQU   ASCBDSP1                                                 07741000
ASCBRF06 EQU   ASCBDSP1                                                 07742000
ASCBRF05 EQU   ASCBDSP1                                                 07743000
ASCBRF04 EQU   ASCBDSP1                                                 07744000
ASCBRF03 EQU   ASCBDSP1                                                 07745000
ASCBRF02 EQU   ASCBDSP1                                                 07746000
ASCBFAIL EQU   ASCBDSP1                                                 07747000
ASCBNOQ  EQU   ASCBDSP1                                                 07748000
ASCBSWCT EQU   ASCB+112                                                 07749000
ASCBTMCH EQU   ASCB+104                                                 07750000
ASCBNSWP EQU   ASCBFLG1                                                 07751000
ASCBTYP1 EQU   ASCBFLG1                                                 07752000
ASCBSTND EQU   ASCBFLG1                                                 07753000
ASCBABNT EQU   ASCBFLG1                                                 07754000
ASCBTERM EQU   ASCBFLG1                                                 07755000
ASCBS3S  EQU   ASCBFLG1                                                 07756000
ASCBCMSH EQU   ASCBFLG1                                                 07757000
ASCBTOFF EQU   ASCBFLG1                                                 07758000
ASCBRF01 EQU   ASCBRCTF                                                 07759000
ASCBTMLW EQU   ASCBRCTF                                                 07760000
ASCBOUT  EQU   ASCBRCTF                                                 07761000
ASCBWAIT EQU   ASCBRCTF                                                 07762000
ASCBRV08 EQU   ASCBRCTF                                                 07763000
ASCBFQU  EQU   ASCBRCTF                                                 07764000
ASCBFRS  EQU   ASCBRCTF                                                 07765000
ASCBTMNO EQU   ASCBRCTF                                                 07766000
ASCBAFFN EQU   ASCBFW1                                                  07767000
ASCBDUMP EQU   ASCB+96                                                  07768000
ASCBQSVC EQU   ASCB+92                                                  07769000
ASCBUBET EQU   ASCB+88                                                  07770000
ASCBECB  EQU   ASCB+84                                                  07771000
ASCBJSTL EQU   ASCB+80                                                  07772000
ASCBEWST EQU   ASCB+72                                                  07773000
ASCBEJST EQU   ASCB+64                                                  07774000
ASCBTSB  EQU   ASCB+60                                                  07775000
ASCBCSCB EQU   ASCB+56                                                  07776000
ASCBRSM  EQU   ASCB+52                                                  07777000
ASCBLDA  EQU   ASCB+48                                                  07778000
ASCBSTOR EQU   ASCB+44                                                  07779000
ASCBDP   EQU   ASCB+43                                                  07780000
ASCBRV07 EQU   ASCB+42                                                  07781000
ASCBIOSM EQU   ASCB+40                                                  07782000
ASCBSEQN EQU   ASCB+38                                                  07783000
ASCBCPUS EQU   ASCB+32                                                  07784000
ASCBLSLQ EQU   ASCB+24                                                  07785000
ASCBFSLQ EQU   ASCB+20                                                  07786000
ASCBIOSP EQU   ASCB+16                                                  07787000
ASCBLOCK EQU   ASCB+12                                                  07788000
ASCBEGIN EQU   ASCB                                                     07789000
ASVTEND  EQU   ASVT+528                                                 07790000
ASVTAVAL EQU   ASVTENTY                                                 07791000
ASVTAVAI EQU   ASVTFRST                                                 07792000
ASVTRS00 EQU   ASVT+520                                                 07793000
ASVTBEGN EQU   ASVT+512                                                 07794000
@NM00029 EQU   ASVT                                                     07795000
@NM00028 EQU   PSA+3668                                                 07796000
PSASTAK  EQU   PSA+3072                                                 07797000
@NM00027 EQU   PSA+1040                                                 07798000
PSAUSEND EQU   PSA+1040                                                 07799000
PSARV062 EQU   PSA+1036                                                 07800000
PSAATCVT EQU   PSA+1032                                                 07801000
PSAPCPSW EQU   PSA+1024                                                 07802000
PSAPIR2  EQU   PSA+1020                                                 07803000
PSARV059 EQU   PSA+1018                                                 07804000
PSASVC13 EQU   PSA+1016                                                 07805000
PSALSFCC EQU   PSA+1012                                                 07806000
PSASFACC EQU   PSA+1008                                                 07807000
PSASTOP  EQU   PSA+992                                                  07808000
PSASTART EQU   PSA+976                                                  07809000
PSARSPSW EQU   PSA+968                                                  07810000
PSASRPSW EQU   PSA+960                                                  07811000
PSARV045 EQU   PSA+892                                                  07812000
PSARV044 EQU   PSA+888                                                  07813000
PSARV043 EQU   PSA+884                                                  07814000
PSARV042 EQU   PSA+880                                                  07815000
PSARV041 EQU   PSA+876                                                  07816000
PSARV040 EQU   PSA+872                                                  07817000
PSARV025 EQU   PSA+868                                                  07818000
PSADSSED EQU   PSA+868                                                  07819000
PSADSSPR EQU   PSA+864                                                  07820000
PSADSSFW EQU   PSA+860                                                  07821000
PSADSS14 EQU   PSA+856                                                  07822000
PSADSSPP EQU   PSA+848                                                  07823000
PSADSSRP EQU   PSA+840                                                  07824000
PSADSS05 EQU   PSADSSF4                                                 07825000
PSADSS10 EQU   PSADSSF4                                                 07826000
PSADSSVE EQU   PSADSSF4                                                 07827000
PSADSSDE EQU   PSADSSF4                                                 07828000
PSADSSC0 EQU   PSADSSF4                                                 07829000
PSADSSIE EQU   PSADSSF4                                                 07830000
PSADSS12 EQU   PSADSSF4                                                 07831000
PSADSSRC EQU   PSADSSF4                                                 07832000
PSARV057 EQU   PSADSSF3                                                 07833000
PSARV056 EQU   PSADSSF3                                                 07834000
PSARV055 EQU   PSADSSF3                                                 07835000
PSADSSMC EQU   PSADSSF3                                                 07836000
PSADSSRW EQU   PSADSSF3                                                 07837000
PSADSSNM EQU   PSADSSF3                                                 07838000
PSADSSES EQU   PSADSSF3                                                 07839000
PSADSSGP EQU   PSADSSF3                                                 07840000
PSADSSF2 EQU   PSADSSFL+1                                               07841000
PSADSSPI EQU   PSADSSF1                                                 07842000
PSADSSOI EQU   PSADSSF1                                                 07843000
PSADSSSP EQU   PSADSSF1                                                 07844000
PSADSSTP EQU   PSADSSF1                                                 07845000
PSADSSDW EQU   PSADSSF1                                                 07846000
PSADSSDD EQU   PSADSSF1                                                 07847000
PSADSSDM EQU   PSADSSF1                                                 07848000
PSADSSMV EQU   PSADSSF1                                                 07849000
PSADSSTS EQU   PSA+816                                                  07850000
PSADSSWK EQU   PSA+812                                                  07851000
PSADSSR3 EQU   PSA+808                                                  07852000
PSADSSR2 EQU   PSA+804                                                  07853000
PSADSSRS EQU   PSA+800                                                  07854000
PSASTOR  EQU   PSA+796                                                  07855000
PSAVSTAP EQU   PSA+792                                                  07856000
PSAWKVAP EQU   PSA+788                                                  07857000
PSAWKRAP EQU   PSA+784                                                  07858000
PSAMCHIC EQU   PSA+783                                                  07859000
PSARV061 EQU   PSA+782                                                  07860000
PSASYMSK EQU   PSA+781                                                  07861000
PSACR0   EQU   PSA+776                                                  07862000
PSAPSWSV EQU   PSA+768                                                  07863000
PSALITA  EQU   PSA+764                                                  07864000
PSACLHS  EQU   PSAHLHI                                                  07865000
PSALKR15 EQU   PSALKSA+60                                               07866000
PSALKR14 EQU   PSALKSA+56                                               07867000
PSALKR13 EQU   PSALKSA+52                                               07868000
PSALKR12 EQU   PSALKSA+48                                               07869000
PSALKR11 EQU   PSALKSA+44                                               07870000
PSALKR10 EQU   PSALKSA+40                                               07871000
PSALKR9  EQU   PSALKSA+36                                               07872000
PSALKR8  EQU   PSALKSA+32                                               07873000
PSALKR7  EQU   PSALKSA+28                                               07874000
PSALKR6  EQU   PSALKSA+24                                               07875000
PSALKR5  EQU   PSALKSA+20                                               07876000
PSALKR4  EQU   PSALKSA+16                                               07877000
PSALKR3  EQU   PSALKSA+12                                               07878000
PSALKR2  EQU   PSALKSA+8                                                07879000
PSALKR1  EQU   PSALKSA+4                                                07880000
PSALKR0  EQU   PSALKSA                                                  07881000
PSARV023 EQU   PSACLHT+52                                               07882000
PSALOCAL EQU   PSACLHT+48                                               07883000
PSACMSL  EQU   PSACLHT+44                                               07884000
PSAOPTL  EQU   PSACLHT+40                                               07885000
PSATPACL EQU   PSACLHT+36                                               07886000
PSATPDNL EQU   PSACLHT+32                                               07887000
PSATPNCL EQU   PSACLHT+28                                               07888000
PSAIOSLL EQU   PSACLHT+24                                               07889000
PSAIOSUL EQU   PSACLHT+20                                               07890000
PSAIOSCL EQU   PSACLHT+16                                               07891000
PSAIOSSL EQU   PSACLHT+12                                               07892000
PSASALCL EQU   PSACLHT+8                                                07893000
PSAASML  EQU   PSACLHT+4                                                07894000
PSADISPL EQU   PSACLHT                                                  07895000
PSASRSA  EQU   PSA+636                                                  07896000
PSARV050 EQU   PSA+634                                                  07897000
PSADSSGO EQU   PSA+633                                                  07898000
PSARECUR EQU   PSA+632                                                  07899000
PSAHLHIS EQU   PSA+628                                                  07900000
PSAIPCSA EQU   PSA+624                                                  07901000
@NM00026 EQU   PSA+621                                                  07902000
PSAIPCDM EQU   PSA+620                                                  07903000
PSAIPCD  EQU   PSA+616                                                  07904000
@NM00025 EQU   PSA+613                                                  07905000
PSAIPCRM EQU   PSA+612                                                  07906000
PSAIPCR  EQU   PSA+608                                                  07907000
PSAMCHEX EQU   PSA+600                                                  07908000
PSAMPSW  EQU   PSA+592                                                  07909000
PSAEXPS2 EQU   PSA+584                                                  07910000
PSAEXPS1 EQU   PSA+576                                                  07911000
PSAPIREG EQU   PSA+572                                                  07912000
PSARSREG EQU   PSA+568                                                  07913000
PSAGPREG EQU   PSA+556                                                  07914000
PSARV022 EQU   PSASUP4                                                  07915000
PSARV021 EQU   PSASUP4                                                  07916000
PSARV020 EQU   PSASUP4                                                  07917000
PSARV019 EQU   PSASUP4                                                  07918000
PSARV018 EQU   PSASUP4                                                  07919000
PSARV017 EQU   PSASUP4                                                  07920000
PSARV016 EQU   PSASUP4                                                  07921000
PSARV015 EQU   PSASUP4                                                  07922000
PSARV014 EQU   PSASUP3                                                  07923000
PSARV013 EQU   PSASUP3                                                  07924000
PSARV012 EQU   PSASUP3                                                  07925000
PSARV011 EQU   PSASUP3                                                  07926000
PSARV010 EQU   PSASUP3                                                  07927000
PSAPSREG EQU   PSASUP3                                                  07928000
PSAPI2   EQU   PSASUP3                                                  07929000
PSAIOSUP EQU   PSASUP3                                                  07930000
PSALCR   EQU   PSASUP2                                                  07931000
PSARTM   EQU   PSASUP2                                                  07932000
PSAACR   EQU   PSASUP2                                                  07933000
PSAIPCE2 EQU   PSASUP2                                                  07934000
PSAIPCES EQU   PSASUP2                                                  07935000
PSAIPCEC EQU   PSASUP2                                                  07936000
PSAGTF   EQU   PSASUP2                                                  07937000
PSAIPCRI EQU   PSASUP2                                                  07938000
PSAIPCRP EQU   PSASUP1                                                  07939000
PSAIPCDR EQU   PSASUP1                                                  07940000
PSADISP  EQU   PSASUP1                                                  07941000
PSALOCK  EQU   PSASUP1                                                  07942000
PSAPI    EQU   PSASUP1                                                  07943000
PSAEXT   EQU   PSASUP1                                                  07944000
PSASVC   EQU   PSASUP1                                                  07945000
PSAIO    EQU   PSASUP1                                                  07946000
PSAANEW  EQU   PSA+544                                                  07947000
PSATNEW  EQU   PSA+536                                                  07948000
PSALCCAR EQU   PSA+532                                                  07949000
PSAPCCAR EQU   PSA+524                                                  07950000
PSAPCCAV EQU   PSA+520                                                  07951000
PSACPULA EQU   PSA+518                                                  07952000
FLCHDEND EQU   PSA+512                                                  07953000
FLCCRSAV EQU   FLCMCLA+280                                              07954000
FLCGRSAV EQU   FLCMCLA+216                                              07955000
FLCFPSAV EQU   FLCMCLA+184                                              07956000
FLCFLA   EQU   FLCMCLA+88                                               07957000
FLCRGNCD EQU   FLCMCLA+84                                               07958000
FLCFSAA  EQU   FLCFSA+1                                                 07959000
@NM00024 EQU   FLCFSA                                                   07960000
@NM00023 EQU   FLCMCLA+72                                               07961000
FLCMCIC  EQU   FLCMCLA+64                                               07962000
@NM00022 EQU   FLCMCLA+20                                               07963000
FLCIOAA  EQU   FLCIOA+1                                                 07964000
@NM00021 EQU   FLCIOA                                                   07965000
@NM00020 EQU   FLCMCLA+15                                               07966000
@NM00019 EQU   FLCMCLA+14                                               07967000
@NM00018 EQU   FLCMCLA+12                                               07968000
FLCLCL   EQU   FLCMCLA+8                                                07969000
FLCIOELA EQU   FLCIOEL+1                                                07970000
@NM00017 EQU   FLCIOEL                                                  07971000
FLCCHNID EQU   FLCMCLA                                                  07972000
@NM00016 EQU   PSA+160                                                  07973000
FLCMTRCD EQU   PSA+157                                                  07974000
@NM00015 EQU   PSA+156                                                  07975000
FLCPERA  EQU   FLCPER+1                                                 07976000
@NM00014 EQU   FLCPER                                                   07977000
@NM00013 EQU   PSA+151                                                  07978000
FLCPERCD EQU   PSA+150                                                  07979000
FLCMCNUM EQU   PSA+149                                                  07980000
@NM00012 EQU   PSA+148                                                  07981000
FLCTEAA  EQU   FLCTEA+1                                                 07982000
@NM00011 EQU   FLCTEA                                                   07983000
PSAPIPC  EQU   PSAPICOD                                                 07984000
PSAPIMC  EQU   PSAPICOD                                                 07985000
PSAPIPER EQU   PSAPICOD                                                 07986000
PSARV049 EQU   FLCPICOD                                                 07987000
FLCPILCB EQU   FLCPIILC                                                 07988000
@NM00010 EQU   FLCPIILC                                                 07989000
@NM00009 EQU   PSAEPPSW                                                 07990000
FLCSVCN  EQU   PSAESPSW+2                                               07991000
FLCSILCB EQU   FLCSVILC                                                 07992000
@NM00008 EQU   FLCSVILC                                                 07993000
@NM00007 EQU   PSAESPSW                                                 07994000
FLCEICOD EQU   PSAEEPSW+2                                               07995000
PSASPAD  EQU   PSAEEPSW                                                 07996000
@NM00006 EQU   PSA+128                                                  07997000
FLCINPSW EQU   PSA+120                                                  07998000
FLCMNPSW EQU   PSA+112                                                  07999000
FLCPNPSW EQU   PSA+104                                                  08000000
FLCSNPSW EQU   PSA+96                                                   08001000
FLCENPSW EQU   PSA+88                                                   08002000
FLCTRACE EQU   PSA+84                                                   08003000
FLCTIMER EQU   PSA+80                                                   08004000
FLCCVT2  EQU   PSA+76                                                   08005000
FLCCAW   EQU   PSA+72                                                   08006000
FLCCSW   EQU   PSA+64                                                   08007000
FLCIOPSW EQU   PSA+56                                                   08008000
FLCMOPSW EQU   PSA+48                                                   08009000
FLCPOPSW EQU   PSA+40                                                   08010000
FLCSOPSW EQU   PSA+32                                                   08011000
FLCEOPSW EQU   PSA+24                                                   08012000
@NM00005 EQU   FLCICCW2+4                                               08013000
FLCCVT   EQU   FLCICCW2                                                 08014000
FLCICCW1 EQU   FLCROPSW                                                 08015000
FLCIPPSW EQU   FLCRNPSW                                                 08016000
LCCAR125 EQU   LCCA+964                                                 08017000
LCCAR124 EQU   LCCA+960                                                 08018000
LCCASGPR EQU   LCCA+896                                                 08019000
LCCADRT2 EQU   LCCA+888                                                 08020000
LCCADRT1 EQU   LCCA+880                                                 08021000
LCCAR103 EQU   LCCA+876                                                 08022000
LCCAESS2 EQU   LCCA+872                                                 08023000
LCCASPLJ EQU   LCCA+868                                                 08024000
LCCASMQJ EQU   LCCA+864                                                 08025000
LCCAIRT  EQU   LCCA+736                                                 08026000
LCCAIRTP EQU   LCCA+728                                                 08027000
LCCAPGTA EQU   LCCASRBF+2                                               08028000
LCCASAFN EQU   LCCASRBF                                                 08029000
LCCAECSA EQU   LCCA+716                                                 08030000
LCCAICR0 EQU   LCCA+712                                                 08031000
LCCALWTM EQU   LCCA+704                                                 08032000
LCCARV78 EQU   LCCA+700                                                 08033000
LCCAPINV EQU   LCCA+696                                                 08034000
LCCARV88 EQU   LCCA+695                                                 08035000
LCCARV87 EQU   LCCALKFG                                                 08036000
LCCARV86 EQU   LCCALKFG                                                 08037000
LCCARV85 EQU   LCCALKFG                                                 08038000
LCCARV84 EQU   LCCALKFG                                                 08039000
LCCALKRD EQU   LCCALKFG                                                 08040000
LCCALKAQ EQU   LCCALKFG                                                 08041000
LCCALKSA EQU   LCCALKFG                                                 08042000
LCCALKDP EQU   LCCALKFG                                                 08043000
LCCACRST EQU   LCCACREX                                                 08044000
LCCACRDP EQU   LCCACREX                                                 08045000
LCCACRLM EQU   LCCACREX                                                 08046000
LCCACRIN EQU   LCCACREX                                                 08047000
LCCACRRT EQU   LCCACREX                                                 08048000
LCCACRLE EQU   LCCACREX                                                 08049000
LCCACRRM EQU   LCCACREX                                                 08050000
LCCACREF EQU   LCCACREX                                                 08051000
LCCAVARY EQU   LCCACRFL                                                 08052000
LCCARV73 EQU   LCCACRFL                                                 08053000
LCCARV72 EQU   LCCACRFL                                                 08054000
LCCARV71 EQU   LCCACRFL                                                 08055000
LCCARV70 EQU   LCCACRFL                                                 08056000
LCCARV69 EQU   LCCACRFL                                                 08057000
LCCACLMS EQU   LCCACRFL                                                 08058000
LCCACRTM EQU   LCCACRFL                                                 08059000
LCCALCR0 EQU   LCCA+688                                                 08060000
LCCACRLC EQU   LCCA+684                                                 08061000
LCCARCPU EQU   LCCA+680                                                 08062000
LCCADCPU EQU   LCCA+676                                                 08063000
LCCASRBJ EQU   LCCA+672                                                 08064000
LCCADSSR EQU   LCCA+668                                                 08065000
LCCADSSC EQU   LCCA+660                                                 08066000
LCCADSS3 EQU   LCCA+648                                                 08067000
LCCADSS2 EQU   LCCA+636                                                 08068000
LCCADSS1 EQU   LCCA+624                                                 08069000
LCCAWTIM EQU   LCCA+616                                                 08070000
LCCAITOD EQU   LCCA+608                                                 08071000
LCCADTOD EQU   LCCA+600                                                 08072000
LCCASTOD EQU   LCCA+592                                                 08073000
LCCARIR5 EQU   LCCASPSA+44                                              08074000
LCCARIR4 EQU   LCCASPSA+40                                              08075000
LCCARIR3 EQU   LCCASPSA+36                                              08076000
LCCARIR2 EQU   LCCASPSA+32                                              08077000
LCCARPR5 EQU   LCCASPSA+28                                              08078000
LCCARPR4 EQU   LCCASPSA+24                                              08079000
LCCARPR3 EQU   LCCASPSA+20                                              08080000
LCCARPR2 EQU   LCCASPSA+16                                              08081000
LCCADSR5 EQU   LCCASPSA+12                                              08082000
LCCADSR4 EQU   LCCASPSA+8                                               08083000
LCCADSR3 EQU   LCCASPSA+4                                               08084000
LCCADSR2 EQU   LCCASPSA                                                 08085000
LCCARV68 EQU   LCCA+543                                                 08086000
LCCAPSMK EQU   LCCA+542                                                 08087000
LCCARV67 EQU   LCCADSF2                                                 08088000
LCCARV66 EQU   LCCADSF2                                                 08089000
LCCARV65 EQU   LCCADSF2                                                 08090000
LCCARV64 EQU   LCCADSF2                                                 08091000
LCCADSRW EQU   LCCADSF2                                                 08092000
LCCADSPL EQU   LCCADSF2                                                 08093000
LCCAGSRB EQU   LCCADSF2                                                 08094000
LCCASRBM EQU   LCCADSF2                                                 08095000
LCCARV61 EQU   LCCADSF1                                                 08096000
LCCARV60 EQU   LCCADSF1                                                 08097000
LCCARV59 EQU   LCCADSF1                                                 08098000
LCCARV58 EQU   LCCADSF1                                                 08099000
LCCATIMR EQU   LCCADSF1                                                 08100000
LCCADSS  EQU   LCCADSF1                                                 08101000
LCCAVCPU EQU   LCCADSF1                                                 08102000
LCCAACR  EQU   LCCADSF1                                                 08103000
LCCACPUS EQU   LCCA+536                                                 08104000
LCCAASCP EQU   LCCA+532                                                 08105000
LCCAESSA EQU   LCCA+528                                                 08106000
LCCARV55 EQU   LCCASPN4                                                 08107000
LCCARV54 EQU   LCCASPN4                                                 08108000
LCCARV53 EQU   LCCASPN4                                                 08109000
LCCARV52 EQU   LCCASPN4                                                 08110000
LCCARV51 EQU   LCCASPN4                                                 08111000
LCCARV50 EQU   LCCASPN4                                                 08112000
LCCARV49 EQU   LCCASPN4                                                 08113000
LCCARV48 EQU   LCCASPN4                                                 08114000
LCCARV47 EQU   LCCASPN3                                                 08115000
LCCARV46 EQU   LCCASPN3                                                 08116000
LCCARV45 EQU   LCCASPN3                                                 08117000
LCCARV44 EQU   LCCASPN3                                                 08118000
LCCARV43 EQU   LCCASPN3                                                 08119000
LCCARV42 EQU   LCCASPN3                                                 08120000
LCCARV41 EQU   LCCASPN3                                                 08121000
LCCARV40 EQU   LCCASPN3                                                 08122000
LCCARV39 EQU   LCCASPN2                                                 08123000
LCCARV38 EQU   LCCASPN2                                                 08124000
LCCARV37 EQU   LCCASPN2                                                 08125000
LCCARV36 EQU   LCCASPN2                                                 08126000
LCCARV35 EQU   LCCASPN2                                                 08127000
LCCARV34 EQU   LCCASPN2                                                 08128000
LCCARV33 EQU   LCCASPN2                                                 08129000
LCCARV32 EQU   LCCASPN2                                                 08130000
LCCARV31 EQU   LCCASPN1                                                 08131000
LCCARV30 EQU   LCCASPN1                                                 08132000
LCCAMFIO EQU   LCCASPN1                                                 08133000
LCCARSTR EQU   LCCASPN1                                                 08134000
LCCATSPN EQU   LCCASPN1                                                 08135000
LCCALOCK EQU   LCCASPN1                                                 08136000
LCCASIGP EQU   LCCASPN1                                                 08137000
LCCAPTLB EQU   LCCASPN1                                                 08138000
LCCARV27 EQU   LCCAIHR4                                                 08139000
LCCARV26 EQU   LCCAIHR4                                                 08140000
LCCARV25 EQU   LCCAIHR4                                                 08141000
LCCARV24 EQU   LCCAIHR4                                                 08142000
LCCARV23 EQU   LCCAIHR4                                                 08143000
LCCARV22 EQU   LCCAIHR4                                                 08144000
LCCARV21 EQU   LCCAIHR4                                                 08145000
LCCARV20 EQU   LCCAIHR4                                                 08146000
LCCARV19 EQU   LCCAIHR3                                                 08147000
LCCARV18 EQU   LCCAIHR3                                                 08148000
LCCARV17 EQU   LCCAIHR3                                                 08149000
LCCARV16 EQU   LCCAIHR3                                                 08150000
LCCARV15 EQU   LCCAIHR3                                                 08151000
LCCARV14 EQU   LCCAIHR3                                                 08152000
LCCARV13 EQU   LCCAIHR3                                                 08153000
LCCARV12 EQU   LCCAIHR3                                                 08154000
LCCARV11 EQU   LCCAIHR2                                                 08155000
LCCARV10 EQU   LCCAIHR2                                                 08156000
LCCARV09 EQU   LCCAIHR2                                                 08157000
LCCARV08 EQU   LCCAIHR2                                                 08158000
LCCARV07 EQU   LCCAIHR2                                                 08159000
LCCARV06 EQU   LCCAIHR2                                                 08160000
LCCARV05 EQU   LCCAIHR2                                                 08161000
LCCARV04 EQU   LCCAIHR2                                                 08162000
LCCARV03 EQU   LCCAIHR1                                                 08163000
LCCARV02 EQU   LCCAIHR1                                                 08164000
LCCARV01 EQU   LCCAIHR1                                                 08165000
LCCAPPIE EQU   LCCAIHR1                                                 08166000
LCCAPSG1 EQU   LCCAIHR1                                                 08167000
LCCAPDAT EQU   LCCAIHR1                                                 08168000
LCCAXRC2 EQU   LCCAIHR1                                                 08169000
LCCAXRC1 EQU   LCCAIHR1                                                 08170000
LCCAIOPS EQU   LCCA+512                                                 08171000
LCCAGPGR EQU   LCCA+448                                                 08172000
LCCAR133 EQU   LCCA+444                                                 08173000
LCCAR132 EQU   LCCA+440                                                 08174000
LCCAR131 EQU   LCCA+436                                                 08175000
LCCAR130 EQU   LCCA+432                                                 08176000
LCCAR129 EQU   LCCA+428                                                 08177000
LCCAR128 EQU   LCCA+424                                                 08178000
LCCAR127 EQU   LCCA+420                                                 08179000
LCCAR126 EQU   LCCA+416                                                 08180000
LCCARSGR EQU   LCCA+352                                                 08181000
LCCAXGR3 EQU   LCCA+288                                                 08182000
LCCAXGR2 EQU   LCCA+224                                                 08183000
LCCAXGR1 EQU   LCCA+160                                                 08184000
LCCACR0  EQU   LCCA+156                                                 08185000
LCCAMCR1 EQU   LCCA+152                                                 08186000
LCCAPVAD EQU   LCCA+148                                                 08187000
LCCAPINT EQU   LCCA+144                                                 08188000
LCCAPPSW EQU   LCCA+136                                                 08189000
LCCAPGR2 EQU   LCCA+72                                                  08190000
LCCAPGR1 EQU   LCCA+8                                                   08191000
LCCARV77 EQU   LCCA+6                                                   08192000
LCCACPUA EQU   LCCA+4                                                   08193000
@NM00004 EQU   PCCA+512                                                 08194000
PCCACAT  EQU   PCCA+384                                                 08195000
PCCARV36 EQU   PCCA+380                                                 08196000
PCCARV35 EQU   PCCA+378                                                 08197000
PCCARV01 EQU   PCCA+377                                                 08198000
PCCACPUM EQU   PCCA+376                                                 08199000
PCCARV63 EQU   PCCA+372                                                 08200000
PCCARV62 EQU   PCCA+368                                                 08201000
PCCARV61 EQU   PCCA+364                                                 08202000
PCCARV60 EQU   PCCA+360                                                 08203000
PCCARV59 EQU   PCCA+356                                                 08204000
PCCARV58 EQU   PCCA+352                                                 08205000
PCCARV57 EQU   PCCA+348                                                 08206000
PCCARV56 EQU   PCCA+344                                                 08207000
PCCARV55 EQU   PCCA+340                                                 08208000
PCCARV54 EQU   PCCA+336                                                 08209000
PCCALOGA EQU   PCCA+332                                                 08210000
PCCACHID EQU   PCCA+324                                                 08211000
PCCACHSV EQU   PCCA+312                                                 08212000
PCCARV79 EQU   PCCACHF4                                                 08213000
PCCARV78 EQU   PCCACHF4                                                 08214000
PCCARV77 EQU   PCCACHF4                                                 08215000
PCCARV76 EQU   PCCACHF4                                                 08216000
PCCARV75 EQU   PCCACHF4                                                 08217000
PCCARV74 EQU   PCCACHF4                                                 08218000
PCCARV73 EQU   PCCACHF4                                                 08219000
PCCARV72 EQU   PCCACHF4                                                 08220000
PCCARV71 EQU   PCCACHF3                                                 08221000
PCCARV70 EQU   PCCACHF3                                                 08222000
PCCARV69 EQU   PCCACHF3                                                 08223000
PCCARV68 EQU   PCCACHF3                                                 08224000
PCCARV67 EQU   PCCACHF3                                                 08225000
PCCARV66 EQU   PCCACHF3                                                 08226000
PCCARV65 EQU   PCCACHF3                                                 08227000
PCCARV64 EQU   PCCACHF3                                                 08228000
PCCACF28 EQU   PCCACHF2                                                 08229000
PCCACF27 EQU   PCCACHF2                                                 08230000
PCCACF26 EQU   PCCACHF2                                                 08231000
PCCACF25 EQU   PCCACHF2                                                 08232000
PCCACF24 EQU   PCCACHF2                                                 08233000
PCCACF23 EQU   PCCACHF2                                                 08234000
PCCACF22 EQU   PCCACHF2                                                 08235000
PCCACF21 EQU   PCCACHF2                                                 08236000
PCCACF18 EQU   PCCACHF1                                                 08237000
PCCACF17 EQU   PCCACHF1                                                 08238000
PCCACF16 EQU   PCCACHF1                                                 08239000
PCCACF15 EQU   PCCACHF1                                                 08240000
PCCACF14 EQU   PCCACHF1                                                 08241000
PCCACF13 EQU   PCCACHF1                                                 08242000
PCCACF12 EQU   PCCACHF1                                                 08243000
PCCACF11 EQU   PCCACHF1                                                 08244000
PCCARV05 EQU   PCCA+306                                                 08245000
PCCACHPB EQU   PCCA+305                                                 08246000
PCCALGP2 EQU   PCCA+304                                                 08247000
PCCALGP1 EQU   PCCA+303                                                 08248000
PCCALOGL EQU   PCCA+302                                                 08249000
PCCARV80 EQU   PCCA+300                                                 08250000
PCCACHW2 EQU   PCCA+296                                                 08251000
PCCACHW1 EQU   PCCA+292                                                 08252000
PCCAIOSI EQU   PCCA+291                                                 08253000
PCCACNRB EQU   PCCACHRB                                                 08254000
PCCACCVB EQU   PCCACHRB                                                 08255000
PCCACSNB EQU   PCCACHRB                                                 08256000
PCCARV52 EQU   PCCACHRB                                                 08257000
PCCACHIB EQU   PCCACHRB                                                 08258000
PCCACTIB EQU   PCCACHRB                                                 08259000
PCCACINB EQU   PCCACHRB                                                 08260000
PCCACSIB EQU   PCCACHRB                                                 08261000
PCCARV51 EQU   PCCACHS2                                                 08262000
PCCARV50 EQU   PCCACHS2                                                 08263000
PCCACCRA EQU   PCCACHS2                                                 08264000
PCCACURC EQU   PCCACHS2                                                 08265000
PCCACNLG EQU   PCCACHS2                                                 08266000
PCCACMOD EQU   PCCACHS2                                                 08267000
PCCACALT EQU   PCCACHS2                                                 08268000
PCCACIOR EQU   PCCACHS2                                                 08269000
PCCARV47 EQU   PCCACHS1                                                 08270000
PCCACUCB EQU   PCCACHS1                                                 08271000
PCCACIBC EQU   PCCACHS1                                                 08272000
PCCACAND EQU   PCCACHS1                                                 08273000
PCCACNLS EQU   PCCACHS1                                                 08274000
PCCACFRR EQU   PCCACHS1                                                 08275000
PCCACNRE EQU   PCCACHS1                                                 08276000
PCCACCMP EQU   PCCACHS1                                                 08277000
PCCACSEQ EQU   PCCACHTS                                                 08278000
PCCACDIN EQU   PCCACHTS                                                 08279000
PCCARV44 EQU   PCCACHTS                                                 08280000
PCCARV43 EQU   PCCACHTS                                                 08281000
PCCACTEC EQU   PCCACHTS                                                 08282000
PCCACDAV EQU   PCCACHVA                                                 08283000
PCCACCHV EQU   PCCACHVA                                                 08284000
PCCACCMD EQU   PCCACHVA                                                 08285000
PCCACUNS EQU   PCCACHVA                                                 08286000
PCCACSQV EQU   PCCACHVA                                                 08287000
PCCARV42 EQU   PCCACHVA                                                 08288000
PCCARV41 EQU   PCCACHVA                                                 08289000
PCCACITF EQU   PCCACHVA                                                 08290000
PCCARV40 EQU   PCCACHBL                                                 08291000
PCCARV39 EQU   PCCACHBL                                                 08292000
PCCARV38 EQU   PCCACHBL                                                 08293000
PCCACCUE EQU   PCCACHBL                                                 08294000
PCCACSTG EQU   PCCACHBL                                                 08295000
PCCACSCU EQU   PCCACHBL                                                 08296000
PCCACCHA EQU   PCCACHBL                                                 08297000
PCCACCPU EQU   PCCACHBL                                                 08298000
PCCACNOR EQU   PCCACHPF                                                 08299000
PCCACCNT EQU   PCCACHPF                                                 08300000
PCCACSNS EQU   PCCACHPF                                                 08301000
PCCARV37 EQU   PCCACHPF                                                 08302000
PCCACHIO EQU   PCCACHPF                                                 08303000
PCCACTIO EQU   PCCACHPF                                                 08304000
PCCACINT EQU   PCCACHPF                                                 08305000
PCCACSIO EQU   PCCACHPF                                                 08306000
PCCACHUB EQU   PCCAWERP                                                 08307000
PCCACHEL EQU   PCCA+168                                                 08308000
PCCALRBR EQU   PCCA+164                                                 08309000
PCCALRBV EQU   PCCA+160                                                 08310000
PCCAPWAR EQU   PCCA+156                                                 08311000
PCCAPWAV EQU   PCCA+152                                                 08312000
PCCAEMSA EQU   PCCAEMSB+12                                              08313000
PCCAEMSE EQU   PCCAEMSB+8                                               08314000
PCCAEMSP EQU   PCCAEMSB+4                                               08315000
PCCARMS  EQU   PCCARMSB                                                 08316000
PCCARV34 EQU   PCCARMSB                                                 08317000
PCCARV33 EQU   PCCARMSB                                                 08318000
PCCARV32 EQU   PCCARMSB                                                 08319000
PCCARV31 EQU   PCCARMSB                                                 08320000
PCCARV30 EQU   PCCARMSB                                                 08321000
PCCARV29 EQU   PCCARMSB                                                 08322000
PCCARV28 EQU   PCCARMSB                                                 08323000
PCCARV27 EQU   PCCAEMS3                                                 08324000
PCCARV26 EQU   PCCAEMS3                                                 08325000
PCCARV25 EQU   PCCAEMS3                                                 08326000
PCCARV24 EQU   PCCAEMS3                                                 08327000
PCCARV23 EQU   PCCAEMS3                                                 08328000
PCCARV22 EQU   PCCAEMS3                                                 08329000
PCCARV21 EQU   PCCAEMS3                                                 08330000
PCCARV20 EQU   PCCAEMS3                                                 08331000
PCCARV19 EQU   PCCAEMS2                                                 08332000
PCCARV18 EQU   PCCAEMS2                                                 08333000
PCCARV17 EQU   PCCAEMS2                                                 08334000
PCCARV16 EQU   PCCAEMS2                                                 08335000
PCCARV15 EQU   PCCAEMS2                                                 08336000
PCCARV14 EQU   PCCAEMS2                                                 08337000
PCCARV13 EQU   PCCAEMS2                                                 08338000
PCCARV12 EQU   PCCAEMS2                                                 08339000
PCCARV11 EQU   PCCARISP                                                 08340000
PCCARV10 EQU   PCCARISP                                                 08341000
PCCARV09 EQU   PCCARISP                                                 08342000
PCCARV08 EQU   PCCARISP                                                 08343000
PCCARV07 EQU   PCCARISP                                                 08344000
PCCARV06 EQU   PCCARISP                                                 08345000
PCCASERL EQU   PCCARISP                                                 08346000
PCCAPARL EQU   PCCARISP                                                 08347000
PCCARPB  EQU   PCCA+132                                                 08348000
PCCACTIN EQU   PCCAINTE                                                 08349000
PCCANFIN EQU   PCCAINTE                                                 08350000
PCCANUIN EQU   PCCAINTE                                                 08351000
PCCACTCC EQU   PCCACCE                                                  08352000
PCCANFCC EQU   PCCACCE                                                  08353000
PCCANUCC EQU   PCCACCE                                                  08354000
PCCACTTD EQU   PCCATODE                                                 08355000
PCCANFTD EQU   PCCATODE                                                 08356000
PCCANUTD EQU   PCCATODE                                                 08357000
PCCARV04 EQU   PCCATMFL                                                 08358000
PCCARV03 EQU   PCCATMFL                                                 08359000
PCCARV02 EQU   PCCATMFL                                                 08360000
PCCAMINT EQU   PCCATMFL                                                 08361000
PCCAMCC  EQU   PCCATMFL                                                 08362000
PCCAVKIL EQU   PCCATMFL                                                 08363000
PCCASYNC EQU   PCCATMFL                                                 08364000
PCCAINIT EQU   PCCATMFL                                                 08365000
PCCARV9E EQU   PCCA+124                                                 08366000
PCCARV9D EQU   PCCA+120                                                 08367000
PCCARV9C EQU   PCCA+116                                                 08368000
PCCARV9B EQU   PCCA+112                                                 08369000
PCCARV9A EQU   PCCA+108                                                 08370000
PCCARV99 EQU   PCCA+104                                                 08371000
PCCARV98 EQU   PCCA+100                                                 08372000
PCCARV97 EQU   PCCA+96                                                  08373000
PCCARV96 EQU   PCCA+92                                                  08374000
PCCARV95 EQU   PCCA+88                                                  08375000
PCCARV94 EQU   PCCA+84                                                  08376000
PCCARV93 EQU   PCCA+80                                                  08377000
PCCARV92 EQU   PCCA+76                                                  08378000
PCCARV91 EQU   PCCA+72                                                  08379000
PCCARV90 EQU   PCCA+68                                                  08380000
PCCARV89 EQU   PCCA+64                                                  08381000
PCCARV88 EQU   PCCA+60                                                  08382000
PCCARV87 EQU   PCCA+56                                                  08383000
PCCARV86 EQU   PCCA+52                                                  08384000
PCCARV85 EQU   PCCA+48                                                  08385000
PCCARV84 EQU   PCCA+44                                                  08386000
PCCARV83 EQU   PCCA+40                                                  08387000
PCCARV82 EQU   PCCA+36                                                  08388000
PCCARV81 EQU   PCCA+32                                                  08389000
PCCAPSAR EQU   PCCA+28                                                  08390000
PCCATQEP EQU   PCCA+20                                                  08391000
PCCACAFM EQU   PCCA+18                                                  08392000
PCCACPID EQU   PCCA+4                                                   08393000
@NM00003 EQU   CSD+160                                                  08394000
CSDMASK  EQU   CSD+128                                                  08395000
CSDUCNT  EQU   CSD+124                                                  08396000
CSDTCNT  EQU   CSD+120                                                  08397000
CSDGDTOD EQU   CSD+116                                                  08398000
CSDGDINT EQU   CSD+112                                                  08399000
CSDGDCC  EQU   CSD+108                                                  08400000
CSDDDRCT EQU   CSD+106                                                  08401000
CSDRV044 EQU   CSD+104                                                  08402000
CSDMAFF  EQU   CSD+24                                                   08403000
CSDRV038 EQU   CSDFLAGS                                                 08404000
CSDRV037 EQU   CSDFLAGS                                                 08405000
CSDRV036 EQU   CSDFLAGS                                                 08406000
CSDRV035 EQU   CSDFLAGS                                                 08407000
CSDRV034 EQU   CSDFLAGS                                                 08408000
CSDRV033 EQU   CSDFLAGS                                                 08409000
CSDRV032 EQU   CSDFLAGS                                                 08410000
CSDMP    EQU   CSDFLAGS                                                 08411000
CSDACR   EQU   CSD+22                                                   08412000
CSDMF1CP EQU   CSD+20                                                   08413000
CSDRV043 EQU   CSD+16                                                   08414000
CSDRV030 EQU   CSDSCFL4                                                 08415000
CSDRV029 EQU   CSDSCFL4                                                 08416000
CSDRV028 EQU   CSDSCFL4                                                 08417000
CSDRV027 EQU   CSDSCFL4                                                 08418000
CSDRV026 EQU   CSDSCFL4                                                 08419000
CSDRV025 EQU   CSDSCFL4                                                 08420000
CSDRV024 EQU   CSDSCFL4                                                 08421000
CSDRV023 EQU   CSDSCFL4                                                 08422000
CSDRV022 EQU   CSDSCFL3                                                 08423000
CSDRV021 EQU   CSDSCFL3                                                 08424000
CSDRV020 EQU   CSDSCFL3                                                 08425000
CSDRV019 EQU   CSDSCFL3                                                 08426000
CSDRV018 EQU   CSDSCFL3                                                 08427000
CSDRV017 EQU   CSDSCFL3                                                 08428000
CSDRV016 EQU   CSDSCFL3                                                 08429000
CSDRV015 EQU   CSDSCFL3                                                 08430000
CSDRV014 EQU   CSDSCFL2                                                 08431000
CSDRV013 EQU   CSDSCFL2                                                 08432000
CSDRV012 EQU   CSDSCFL2                                                 08433000
CSDRV011 EQU   CSDSCFL2                                                 08434000
CSDRV010 EQU   CSDSCFL2                                                 08435000
CSDRV009 EQU   CSDSCFL2                                                 08436000
CSDRV008 EQU   CSDSCFL2                                                 08437000
CSDRV007 EQU   CSDSCFL2                                                 08438000
CSDRV006 EQU   CSDSCFL1                                                 08439000
CSDRV005 EQU   CSDSCFL1                                                 08440000
CSDRV004 EQU   CSDSCFL1                                                 08441000
CSDRV003 EQU   CSDSCFL1                                                 08442000
CSDRV002 EQU   CSDSCFL1                                                 08443000
CSDRV001 EQU   CSDSCFL1                                                 08444000
CSDSYSND EQU   CSDSCFL1                                                 08445000
CSDRV042 EQU   CSDSCFL1                                                 08446000
CSDCPUOL EQU   CSD+10                                                   08447000
CSDSAFF  EQU   CSDCPUAL                                                 08448000
CSDCHAD  EQU   CSD+6                                                    08449000
CSDCPUJS EQU   CSD+4                                                    08450000
CVTLEVL  EQU   CVTRELNO+2                                               08451000
CVTNUMB  EQU   CVTRELNO                                                 08452000
CVTMDL   EQU   CVTFIX+250                                               08453000
@NM00002 EQU   CVTFIX+248                                               08454000
@NM00001 EQU   CVTFIX                                                   08455000
CVTRV482 EQU   CVTXTNT2+128                                             08456000
CVTRV481 EQU   CVTXTNT2+124                                             08457000
CVTRV480 EQU   CVTXTNT2+120                                             08458000
CVTRV479 EQU   CVTXTNT2+118                                             08459000
CVTRV478 EQU   CVTXTNT2+117                                             08460000
CVTRV477 EQU   CVTXTNT2+116                                             08461000
CVTRV476 EQU   CVTXTNT2+115                                             08462000
CVTRV475 EQU   CVTXTNT2+114                                             08463000
CVTRV474 EQU   CVTRV466                                                 08464000
CVTRV473 EQU   CVTRV466                                                 08465000
CVTRV472 EQU   CVTRV466                                                 08466000
CVTRV471 EQU   CVTRV466                                                 08467000
CVTRV470 EQU   CVTRV466                                                 08468000
CVTRV469 EQU   CVTRV466                                                 08469000
CVTRV468 EQU   CVTRV466                                                 08470000
CVTRV467 EQU   CVTRV466                                                 08471000
CVTRV465 EQU   CVTRV457                                                 08472000
CVTRV464 EQU   CVTRV457                                                 08473000
CVTRV463 EQU   CVTRV457                                                 08474000
CVTRV462 EQU   CVTRV457                                                 08475000
CVTRV461 EQU   CVTRV457                                                 08476000
CVTRV460 EQU   CVTRV457                                                 08477000
CVTRV459 EQU   CVTRV457                                                 08478000
CVTRV458 EQU   CVTRV457                                                 08479000
CVTRV456 EQU   CVTXTNT2+108                                             08480000
CVTRV455 EQU   CVTXTNT2+104                                             08481000
CVTRV454 EQU   CVTXTNT2+100                                             08482000
CVTRV453 EQU   CVTXTNT2+96                                              08483000
CVTRV452 EQU   CVTXTNT2+94                                              08484000
CVTRV451 EQU   CVTXTNT2+92                                              08485000
CVTRV450 EQU   CVTXTNT2+90                                              08486000
CVTRV449 EQU   CVTXTNT2+88                                              08487000
CVTRV448 EQU   CVTXTNT2+87                                              08488000
CVTRV447 EQU   CVTXTNT2+86                                              08489000
CVTRV446 EQU   CVTRV438                                                 08490000
CVTRV445 EQU   CVTRV438                                                 08491000
CVTRV444 EQU   CVTRV438                                                 08492000
CVTRV443 EQU   CVTRV438                                                 08493000
CVTRV442 EQU   CVTRV438                                                 08494000
CVTRV441 EQU   CVTRV438                                                 08495000
CVTRV440 EQU   CVTRV438                                                 08496000
CVTRV439 EQU   CVTRV438                                                 08497000
CVTRV437 EQU   CVTRV429                                                 08498000
CVTRV436 EQU   CVTRV429                                                 08499000
CVTRV435 EQU   CVTRV429                                                 08500000
CVTRV434 EQU   CVTRV429                                                 08501000
CVTRV433 EQU   CVTRV429                                                 08502000
CVTRV432 EQU   CVTRV429                                                 08503000
CVTRV431 EQU   CVTRV429                                                 08504000
CVTRV430 EQU   CVTRV429                                                 08505000
CVTRV428 EQU   CVTXTNT2+80                                              08506000
CVTRV427 EQU   CVTXTNT2+76                                              08507000
CVTRV426 EQU   CVTXTNT2+72                                              08508000
CVTRV425 EQU   CVTXTNT2+68                                              08509000
CVTATACT EQU   CVTATCVT                                                 08510000
CVTRV423 EQU   CVTXTNT2+62                                              08511000
CVTRV422 EQU   CVTXTNT2+60                                              08512000
CVTRV421 EQU   CVTXTNT2+58                                              08513000
CVTRV420 EQU   CVTXTNT2+56                                              08514000
CVTRV419 EQU   CVTXTNT2+55                                              08515000
CVTRV418 EQU   CVTXTNT2+54                                              08516000
CVTRV417 EQU   CVTRV409                                                 08517000
CVTRV416 EQU   CVTRV409                                                 08518000
CVTRV415 EQU   CVTRV409                                                 08519000
CVTRV414 EQU   CVTRV409                                                 08520000
CVTRV413 EQU   CVTRV409                                                 08521000
CVTRV412 EQU   CVTRV409                                                 08522000
CVTRV411 EQU   CVTRV409                                                 08523000
CVTRV410 EQU   CVTRV409                                                 08524000
CVTRV408 EQU   CVTRV400                                                 08525000
CVTRV407 EQU   CVTRV400                                                 08526000
CVTRV406 EQU   CVTRV400                                                 08527000
CVTRV405 EQU   CVTRV400                                                 08528000
CVTRV404 EQU   CVTRV400                                                 08529000
CVTRV403 EQU   CVTRV400                                                 08530000
CVTRV402 EQU   CVTRV400                                                 08531000
CVTRV401 EQU   CVTRV400                                                 08532000
CVTICB   EQU   CVTXTNT2+48                                              08533000
CVTSKTA  EQU   CVTXTNT2+44                                              08534000
CVTRSV99 EQU   CVTXTNT2+40                                              08535000
CVTRSV98 EQU   CVTXTNT2+36                                              08536000
CVTRSV97 EQU   CVTXTNT2+34                                              08537000
CVTRSV96 EQU   CVTXTNT2+32                                              08538000
CVTOLTEP EQU   CVTXTNT2+28                                              08539000
CVTQIDA  EQU   CVTQID+1                                                 08540000
CVTRSV95 EQU   CVTQID                                                   08541000
CVTRSV94 EQU   CVTXTNT2+20                                              08542000
CVTRSV93 EQU   CVTXTNT2+16                                              08543000
CVTRSV92 EQU   CVTXTNT2+12                                              08544000
CVTDEBVR EQU   CVTXTNT2+8                                               08545000
CVTRSV91 EQU   CVTXTNT2+6                                               08546000
CVTRSV9H EQU   CVTFLGBT                                                 08547000
CVTRSV9G EQU   CVTFLGBT                                                 08548000
CVTRSV9F EQU   CVTFLGBT                                                 08549000
CVTRSV9E EQU   CVTFLGBT                                                 08550000
CVTRSV9D EQU   CVTFLGBT                                                 08551000
CVTRSV9C EQU   CVTFLGBT                                                 08552000
CVTVME   EQU   CVTFLGBT                                                 08553000
CVTNPE   EQU   CVTFLGBT                                                 08554000
CVTNUCLS EQU   CVTXTNT2+4                                               08555000
CVTDSSVA EQU   CVTDSSV+1                                                08556000
CVTRSV89 EQU   CVTDSSV                                                  08557000
CVTRSV88 EQU   CVTXTNT1+8                                               08558000
CVTRSV87 EQU   CVTXTNT1+4                                               08559000
CVTFACHN EQU   CVTXTNT1                                                 08560000
CVTRV488 EQU   CVTMAP+412                                               08561000
CVTRV487 EQU   CVTMAP+408                                               08562000
CVTRV486 EQU   CVTMAP+404                                               08563000
CVTRV485 EQU   CVTMAP+400                                               08564000
CVTACTAP EQU   CVTMAP+396                                               08565000
CVTAUTH  EQU   CVTMAP+392                                               08566000
CVTATMCA EQU   CVTATMCT+1                                               08567000
CVTATMST EQU   CVTATMCT                                                 08568000
CVTRSV61 EQU   CVTMAP+384                                               08569000
CVTVOLT1 EQU   CVTVOLM1+1                                               08570000
CVTVOLI1 EQU   CVTVOLF1                                                 08571000
CVTSTOA  EQU   CVTMAP+376                                               08572000
CVTRSV58 EQU   CVTMAP+374                                               08573000
CVTRSV57 EQU   CVTMAP+372                                               08574000
CVTDDCE  EQU   CVTMAP+368                                               08575000
CVTPNWFR EQU   CVTMAP+364                                               08576000
CVTSMF   EQU   CVTMAP+360                                               08577000
CVTSULK  EQU   CVTMAP+358                                               08578000
CVTSLKO  EQU   CVTSYSK                                                  08579000
CVTSLKP  EQU   CVTSYSK                                                  08580000
CVTSLKQ  EQU   CVTSYSK                                                  08581000
CVTSLKR  EQU   CVTSYSK                                                  08582000
CVTRSV56 EQU   CVTSYSK                                                  08583000
CVTRSV55 EQU   CVTSYSK                                                  08584000
CVTRSV54 EQU   CVTSYSK                                                  08585000
CVTRSV53 EQU   CVTSYSK                                                  08586000
CVTRSV52 EQU   CVTA1F1                                                  08587000
CVTRSV51 EQU   CVTA1F1                                                  08588000
CVTRSV50 EQU   CVTA1F1                                                  08589000
CVTRSV49 EQU   CVTA1F1                                                  08590000
CVTRSV48 EQU   CVTA1F1                                                  08591000
CVTRSV47 EQU   CVTA1F1                                                  08592000
CVTSRSW  EQU   CVTA1F1                                                  08593000
CVTPFSW  EQU   CVTA1F1                                                  08594000
CVTPCVT  EQU   CVTMAP+352                                               08595000
CVTRSV46 EQU   CVTMAP+344                                               08596000
CVTRSV45 EQU   CVTMAP+340                                               08597000
CVTRSV44 EQU   CVTMAP+338                                               08598000
CVTRSV43 EQU   CVTMAP+336                                               08599000
CVTHJESA EQU   CVTHJES+1                                                08600000
CVTRSV42 EQU   CVTHJES                                                  08601000
CVTEXT2A EQU   CVTEXT2+1                                                08602000
CVTRSV41 EQU   CVTEXT2                                                  08603000
CVTAPFA  EQU   CVTAPF+1                                                 08604000
CVTRSV40 EQU   CVTAPF                                                   08605000
CVTRV518 EQU   CVTINTLA                                                 08606000
CVTRV517 EQU   CVTERPV                                                  08607000
CVTEORM  EQU   CVTMAP+312                                               08608000
CVTMCHPR EQU   CVTMAP+308                                               08609000
CVTTZ    EQU   CVTMAP+304                                               08610000
CVTJEPS  EQU   CVTMAP+300                                               08611000
CVTJESCT EQU   CVTMAP+296                                               08612000
CVTMODE  EQU   CVTMAP+292                                               08613000
CVTPTRV  EQU   CVTMAP+288                                               08614000
CVTREAL  EQU   CVTMAP+284                                               08615000
CVTRSV39 EQU   CVTMAP+280                                               08616000
CVTRSV38 EQU   CVTMAP+276                                               08617000
CVTDMSRA EQU   CVTDMSR+1                                                08618000
CVTRSV37 EQU   CVTDMSR                                                  08619000
CVTQMSGA EQU   CVTQMSG+1                                                08620000
CVTRSV36 EQU   CVTQMSG                                                  08621000
CVTAMFF  EQU   CVTMAP+264                                               08622000
CVTPURGA EQU   CVTPURG+1                                                08623000
CVTRSV35 EQU   CVTPURG                                                  08624000
CVTCBSP  EQU   CVTMAP+256                                               08625000
CVTATERA EQU   CVTATER+1                                                08626000
CVTSYST  EQU   CVTATER                                                  08627000
CVTVOLT2 EQU   CVTTAT                                                   08628000
CVTVOLI2 EQU   CVTVOLF2                                                 08629000
CVTAQAVB EQU   CVTAQAVT+1                                               08630000
CVTRSV34 EQU   CVTTCMFG                                                 08631000
CVTRSV33 EQU   CVTTCMFG                                                 08632000
CVTRSV32 EQU   CVTTCMFG                                                 08633000
CVTRSV31 EQU   CVTTCMFG                                                 08634000
CVTRSV30 EQU   CVTTCMFG                                                 08635000
CVTRSV29 EQU   CVTTCMFG                                                 08636000
CVTRSV28 EQU   CVTTCMFG                                                 08637000
CVTTCRDY EQU   CVTTCMFG                                                 08638000
CVTGTFA  EQU   CVTGTF+1                                                 08639000
CVTRSV27 EQU   CVTGTFST                                                 08640000
CVTRNIO  EQU   CVTGTFST                                                 08641000
CVTUSR   EQU   CVTGTFST                                                 08642000
CVTRV318 EQU   CVTFORM                                                  08643000
CVTRV317 EQU   CVTTMODE                                                 08644000
CVTRV316 EQU   CVTSTATE                                                 08645000
CVTRV315 EQU   CVTGTFS                                                  08646000
CVTGTFAV EQU   CVTGTFS                                                  08647000
CVT0SCR1 EQU   CVTMAP+232                                               08648000
CVTRV515 EQU   CVTMAP+228                                               08649000
CVTRMS   EQU   CVTMAP+224                                               08650000
CVTPATCH EQU   CVTMAP+220                                               08651000
CVTTSCE  EQU   CVTMAP+216                                               08652000
CVTLNKSC EQU   CVTMAP+214                                               08653000
CVTQABST EQU   CVTMAP+212                                               08654000
CVTMDLDS EQU   CVTMAP+208                                               08655000
CVTUSER  EQU   CVTMAP+204                                               08656000
CVTABEND EQU   CVTMAP+200                                               08657000
CVTSMCA  EQU   CVTMAP+196                                               08658000
CVTRSV18 EQU   CVTMAP+192                                               08659000
CVTQLPAQ EQU   CVTMAP+188                                               08660000
CVTQCDSR EQU   CVTMAP+184                                               08661000
CVTRSV17 EQU   CVTOPTB                                                  08662000
CVTRSV16 EQU   CVTOPTB                                                  08663000
CVTFP    EQU   CVTOPTB                                                  08664000
CVTAPTHR EQU   CVTOPTB                                                  08665000
CVTNLOG  EQU   CVTOPTB                                                  08666000
CVTTOD   EQU   CVTOPTB                                                  08667000
CVTCTIMS EQU   CVTOPTB                                                  08668000
CVTPROT  EQU   CVTOPTB                                                  08669000
CVTXPFP  EQU   CVTOPTA                                                  08670000
CVTASCII EQU   CVTOPTA                                                  08671000
CVTRSV13 EQU   CVTOPTA                                                  08672000
CVTRSV12 EQU   CVTOPTA                                                  08673000
CVTNIP   EQU   CVTOPTA                                                  08674000
CVTDDR   EQU   CVTOPTA                                                  08675000
CVTAPR   EQU   CVTOPTA                                                  08676000
CVTCCH   EQU   CVTOPTA                                                  08677000
CVTSNCTR EQU   CVTMAP+180                                               08678000
CVTQMWR  EQU   CVTMAP+176                                               08679000
CVTQOCR  EQU   CVTMAP+172                                               08680000
CVT1EF00 EQU   CVTMAP+168                                               08681000
CVTMZ00  EQU   CVTMAP+164                                               08682000
CVTHEAD  EQU   CVTMAP+160                                               08683000
CVTRSV11 EQU   CVTMAP+156                                               08684000
CVT0PT01 EQU   CVTMAP+152                                               08685000
CVTMSER  EQU   CVTMAP+148                                               08686000
CVTRV516 EQU   CVTIERLC                                                 08687000
CVTILCH  EQU   CVTMAP+140                                               08688000
CVT0DS   EQU   CVTMAP+136                                               08689000
CVTFBOSV EQU   CVTMAP+132                                               08690000
CVTNUCB  EQU   CVTMAP+128                                               08691000
CVTIXAVL EQU   CVTMAP+124                                               08692000
CVTIOQET EQU   CVTMAP+120                                               08693000
CVTDCBA  EQU   CVTMAP+117                                               08694000
CVTMVS2  EQU   CVTDCB                                                   08695000
CVT6DAT  EQU   CVTDCB                                                   08696000
CVT4MPS  EQU   CVTDCB                                                   08697000
CVTRSV09 EQU   CVTDCB                                                   08698000
CVT4MS1  EQU   CVTDCB                                                   08699000
CVT2SPS  EQU   CVTDCB                                                   08700000
CVT1SSS  EQU   CVTDCB                                                   08701000
CVTRSV08 EQU   CVTDCB                                                   08702000
CVTSTB   EQU   CVTMAP+112                                               08703000
CVTQTD00 EQU   CVTMAP+108                                               08704000
CVTQTE00 EQU   CVTMAP+104                                               08705000
CVTCUCB  EQU   CVTMAP+100                                               08706000
CVTSJQ   EQU   CVTMAP+96                                                08707000
CVTPBLDL EQU   CVTMAP+92                                                08708000
CVTTPC   EQU   CVTMAP+88                                                08709000
CVTSVDCB EQU   CVTMAP+84                                                08710000
CVTBRET  EQU   CVTMAP+82                                                08711000
CVTEXIT  EQU   CVTMAP+80                                                08712000
CVT0FN00 EQU   CVTMAP+76                                                08713000
CVTDARA  EQU   CVTDAR+1                                                 08714000
CVTRSV07 EQU   CVTFLGS1                                                 08715000
CVTRSV06 EQU   CVTFLGS1                                                 08716000
CVTRSV05 EQU   CVTFLGS1                                                 08717000
CVTRSV04 EQU   CVTFLGS1                                                 08718000
CVTRSV03 EQU   CVTFLGS1                                                 08719000
CVTRSV02 EQU   CVTFLGS1                                                 08720000
CVTRSV01 EQU   CVTFLGS1                                                 08721000
CVTDMPLK EQU   CVTFLGS1                                                 08722000
CVTXITP  EQU   CVTMAP+68                                                08723000
CVTZDTAB EQU   CVTMAP+64                                                08724000
CVTMSLT  EQU   CVTMAP+60                                                08725000
CVTDATE  EQU   CVTMAP+56                                                08726000
CVTBTERM EQU   CVTMAP+52                                                08727000
CVTSYSAD EQU   CVTMAP+48                                                08728000
CVTXTLER EQU   CVTMAP+44                                                08729000
CVTILK2  EQU   CVTMAP+40                                                08730000
CVTILK1  EQU   CVTMAP+36                                                08731000
CVTPRLTV EQU   CVTMAP+32                                                08732000
CVTPCNVT EQU   CVTMAP+28                                                08733000
CVT0VL00 EQU   CVTMAP+24                                                08734000
CVTXAPG  EQU   CVTMAP+20                                                08735000
CVTBUF   EQU   CVTMAP+16                                                08736000
CVTJOB   EQU   CVTMAP+12                                                08737000
CVTLINK  EQU   CVTMAP+8                                                 08738000
CVT0EF00 EQU   CVTMAP+4                                                 08739000
CVTTCBP  EQU   CVTMAP                                                   08740000
CVT      EQU   CVTMAP                                                   08741000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      08742000
@RF00270 EQU   @RC00266                                                 08743000
@RF00329 EQU   @RC00326                                                 08744000
@RC00321 EQU   @RC00318                                                 08745000
@RC00472 EQU   @RC00469                                                 08746000
@RC00512 EQU   @RC00509                                                 08747000
@RC00554 EQU   @RC00551                                                 08748000
@RF00656 EQU   @RC00654                                                 08749000
@RF00678 EQU   @RC00676                                                 08750000
@RC00692 EQU   @RC00676                                                 08751000
@RC00650 EQU   @RC00647                                                 08752000
@RF00840 EQU   @RC00830                                                 08753000
@RC00832 EQU   @RC00830                                                 08754000
@RF00867 EQU   @RC00849                                                 08755000
@RC00859 EQU   @RC00849                                                 08756000
@RC00851 EQU   @RC00849                                                 08757000
@RF01004 EQU   @RC01002                                                 08758000
@RC01014 EQU   @RC01010                                                 08759000
@RC01012 EQU   @RC01010                                                 08760000
@RC00978 EQU   @EL00002                                                 08761000
@RF01091 EQU   @RC01089                                                 08762000
@RF01113 EQU   @RC01111                                                 08763000
@RC01121 EQU   @RC01117                                                 08764000
@RF01156 EQU   @RC01153                                                 08765000
@RC01158 EQU   @RC01153                                                 08766000
@RC01069 EQU   @EL00004                                                 08767000
@RF01208 EQU   @EL00005                                                 08768000
@RC01259 EQU   @RC01255                                                 08769000
@RC01295 EQU   @RC01291                                                 08770000
@RF01398 EQU   @RC01396                                                 08771000
@RC01509 EQU   @RC01506                                                 08772000
@RF01615 EQU   @RC01613                                                 08773000
@RF01682 EQU   @RC01680                                                 08774000
@RC01673 EQU   @RC01660                                                 08775000
@RC01606 EQU   @RC01603                                                 08776000
@RC00437 EQU   @RC00321                                                 08777000
@RC00475 EQU   @RC00472                                                 08778000
@RC00515 EQU   @RC00512                                                 08779000
@RC00694 EQU   @RC00692                                                 08780000
@RC00666 EQU   @RC00650                                                 08781000
@RC01125 EQU   @RC01121                                                 08782000
@RC01675 EQU   @RC01673                                                 08783000
@RF00724 EQU   @RC00666                                                 08784000
@RC01842 EQU   @RC01675                                                 08785000
@RC01852 EQU   @RC01675                                                 08786000
@RC01863 EQU   @RC01675                                                 08787000
@ENDDATA EQU   *                                                        08788000
         END   AMDPRSUM,(C'PLS2124',0603,76007)                         08789000
