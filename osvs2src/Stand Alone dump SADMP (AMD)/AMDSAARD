         TITLE 'AMDSAARD ADDRESS RANGE DUMP ROUTINE                    *00001000
                       '                                                00002000
AMDSAARD CSECT ,                                                01S0001 00003000
@MAINENT DS    0H                                               01S0001 00004000
         USING *,@15                                            01S0001 00005000
         B     @PROLOG                                          01S0001 00006000
         DC    AL1(16)                                          01S0001 00007000
         DC    C'AMDSAARD  74.035'                              01S0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                  01S0001 00010000
         BALR  @11,0                                            01S0001 00011000
@PSTART  DS    0H                                               01S0001 00012000
         USING @PSTART,@11                                      01S0001 00013000
         ST    @13,@SA00001+4                                   01S0001 00014000
         LA    @14,@SA00001                                     01S0001 00015000
         ST    @14,8(,@13)                                      01S0001 00016000
         LR    @13,@14                                          01S0001 00017000
*   SAVEFORM(1:4) = 'LARD';         /* MOVE MODULE ID TO SAVE AREA   */ 00018000
         MVC   SAVEFORM(4,R13),@CC00641                         01S0177 00019000
*   RCBSAVE = R13;                  /* SAVE AREA ADDRESS TO RCB      */ 00020000
         LA    @10,ARDRCB                                       01S0178 00021000
         ST    R13,RCBSAVE(,@10)                                01S0178 00022000
*   RCBBASE = BASEREG;              /* BASE REGISTER TO RCB          */ 00023000
         ST    BASEREG,RCBBASE(,@10)                            01S0179 00024000
*   RCBNEXT = VCTRCB;               /* CHAIN RCB TO RCB CHAIN        */ 00025000
         MVC   RCBNEXT(4,@10),VCTRCB(VCCTREG)                   01S0180 00026000
*   RCBEXIT = ADDR(ARDRET);         /* SET UP EXIT ADDRESS           */ 00027000
         LA    @15,ARDRET                                       01S0181 00028000
         ST    @15,RCBEXIT(,@10)                                01S0181 00029000
*   GENERATE REFS(R1) SETS(ARDSTOR1) (STCTL R1,R1,ARDSTOR1); /* 01S0182 00030000
*                                      SEGMENT TABLE ORIGIN TO RCB   */ 00031000
         STCTL R1,R1,ARDSTOR1                                           00032000
*   VCTRCB = ADDR(ARDRCB);          /* MAKE RCB ACTIVE               */ 00033000
         LA    @10,ARDRCB                                       01S0183 00034000
         ST    @10,VCTRCB(,VCCTREG)                             01S0183 00035000
*                                                               01S0184 00036000
*   /*****************************************************************/ 00037000
*   /*                                                               */ 00038000
*   /* IS THIS AN ARB BUILD REQUEST OR A DUMP REQUEST. IF A DUMP     */ 00039000
*   /* REQUEST, INVOKE DUMP ROUTINE AND TAKE RETURN PATH.            */ 00040000
*   /*                                                               */ 00041000
*   /*****************************************************************/ 00042000
*                                                               01S0184 00043000
*/* D (NO,%ARDBLD,YES,%ARDDMP) BEG ADDR = 0                          */ 00044000
*/*%ARDDMP: S (,ARDRET) AMDSAOUT: DUMP ARBS                          */ 00045000
*   IF R1 = 0 THEN                  /* DUMP REQUEST                  */ 00046000
         LTR   R1,R1                                            01S0184 00047000
         BNZ   @RF00184                                         01S0184 00048000
*     DO;                           /* YES -                         */ 00049000
*       CALL AMDSAOUT;              /* CALL DUMP ROUTINE             */ 00050000
         BAL   @14,AMDSAOUT                                     01S0186 00051000
*       GO TO ARDRET;               /* PREPARE TO EXIT               */ 00052000
         B     ARDRET                                           01S0187 00053000
*     END;                                                      01S0188 00054000
*                                                               01S0189 00055000
*   /*****************************************************************/ 00056000
*   /*                                                               */ 00057000
*   /* ARB BUILD REQUEST - COMPUTE AND SAVE REQUESTED ADDRESS RANGE  */ 00058000
*   /*                                                               */ 00059000
*   /*****************************************************************/ 00060000
*                                                               01S0189 00061000
*/*%ARDBLD: N ARB BUILD REQUESTED                                    */ 00062000
*/* P COMPUTE END ADDR (R1 + R0)                                     */ 00063000
*/* P SAVE BEG ADDR (R1) AND END ADDR                                */ 00064000
*/* D (YES,,NO,ARDRET) END ADDR > BEG ADDR                           */ 00065000
*/* D (NO,,YES,ARDRET) END ADDR > MAX ADDR IN SYSTEM                 */ 00066000
*   ARDBEGA = R1;                   /* SAVE BEGINNING ADDRESS        */ 00067000
@RF00184 LR    ARDBEGA,R1                                       01S0189 00068000
*   ARDENDA = R0 + R1;              /* COMPUTE AND SAVE END ADDRESS  */ 00069000
         LR    ARDENDA,R0                                       01S0190 00070000
         AR    ARDENDA,R1                                       01S0190 00071000
*   IF ARDENDA <= ARDBEGA THEN      /* END ADDR > BEG ADDR           */ 00072000
         CR    ARDENDA,ARDBEGA                                  01S0191 00073000
         BNH   @RT00191                                         01S0191 00074000
*     GO TO ARDRET;                 /* NO - IGNORE REQUEST           */ 00075000
*   IF ARDENDA > MAXADDR THEN       /* END ADDR > MAXIMUM SYSTEM ADDR*/ 00076000
         C     ARDENDA,@CF00623                                 01S0193 00077000
         BH    @RT00193                                         01S0193 00078000
*     GO TO ARDRET;                 /* YES - IGNORE REQUEST          */ 00079000
*   RESPECIFY (R0,R1) UNRESTRICTED;                             01S0195 00080000
*                                                               01S0196 00081000
*   /*****************************************************************/ 00082000
*   /*                                                               */ 00083000
*   /* VALID ARB BUILD REQUEST - CHECK IF ANY ARBS HAVE BEEN BUILT   */ 00084000
*   /*                                                               */ 00085000
*   /*****************************************************************/ 00086000
*                                                               01S0196 00087000
*/* P GET FIRST ARB (VCTARB)                                         */ 00088000
*/* D (NO,FILLARB,YES,%CHKARB1) ANY ARBS BUILT                       */ 00089000
*   IF LASTARB = 0 THEN             /* SHOULD FIRST ARB BE USED      */ 00090000
         ICM   @10,15,LASTARB                                   01S0196 00091000
         BNZ   @RF00196                                         01S0196 00092000
*     DO;                           /* YES -                         */ 00093000
*       LASTARB = ADDR(ARBE(1));    /* POINT TO FIRST ARB            */ 00094000
         LA    @10,ARBE                                         01S0198 00095000
         ST    @10,LASTARB                                      01S0198 00096000
*       GO TO FILLARB;              /* INITIALIZE ARB                */ 00097000
         B     FILLARB                                          01S0199 00098000
*     END;                                                      01S0200 00099000
*                                                               01S0200 00100000
*   /*****************************************************************/ 00101000
*   /*                                                               */ 00102000
*   /* RANGE HAS TO BE MERGED WITH EXISTING ARBS. PLACE RANGE IN     */ 00103000
*   /* PROPER ARB, OR BUILD A NEW ARB IF RANGE IS OUTSIDE OF ALL     */ 00104000
*   /* RANGES CURRENTLY BUILT.                                       */ 00105000
*   /*                                                               */ 00106000
*   /*****************************************************************/ 00107000
*                                                               01S0201 00108000
*/*%CHKARB1: D (HIGH,,LOW,ARBMERGE,EQ,ARBMERGE) BEG ADDR : ARBADDRE  */ 00109000
*/* D (NO,,YES,%ARBDON2) IS THIS THE LAST ARB BUILT                  */ 00110000
*/* P (,%CHKARB1) GET NEXT ARB                                       */ 00111000
*/*%ARBDON2: D (YES,,NO,%ARBNON2) ALL ARBS USED                      */ 00112000
*/* S AMDSAOUT: DUMP ARBS                                            */ 00113000
*/*%ARBNON2: P (,ARDRET) FILL IN ARB AFTER LAST ARB USED             */ 00114000
*   RESPECIFY ARB BASED(ARDARBAD);                              01S0201 00115000
@RF00196 DS    0H                                               01S0202 00116000
*   DO ARDARBAD = ADDR(ARBE(1)) TO LASTARB BY LENGTH(ARB); /* SEARCH    00117000
*                                      ALL ARBS CURRENTLY BUILT      */ 00118000
         LA    ARDARBAD,ARBE                                    01S0202 00119000
         B     @DE00202                                         01S0202 00120000
@DL00202 DS    0H                                               01S0203 00121000
*     IF ARDBEGA <= ARBADDRE THEN   /* BEGINNING ADDRESS OVER CURRENT   00122000
*                                      ARB                           */ 00123000
         C     ARDBEGA,ARBADDRE(,ARDARBAD)                      01S0203 00124000
         BNH   @RT00203                                         01S0203 00125000
*       GO TO ARBMERGE;             /* NO - MERGE ARB                */ 00126000
*   END;                                                        01S0205 00127000
         AH    ARDARBAD,@CH00047                                01S0205 00128000
@DE00202 C     ARDARBAD,LASTARB                                 01S0205 00129000
         BNH   @DL00202                                         01S0205 00130000
*   IF LASTARB = ADDR(ARBEND) - 8   /* IS THIS LAST ARB      @YM03674*/ 00131000
*   THEN                            /* AVAILABLE             @YM03674*/ 00132000
         LA    @10,ARBEND                                       01S0206 00133000
         SH    @10,@CH00047                                     01S0206 00134000
         C     @10,LASTARB                                      01S0206 00135000
         BNE   @RF00206                                         01S0206 00136000
*     DO;                           /* YES - FREE ARBS               */ 00137000
*       CALL AMDSAOUT;              /* DUMP ARBS TO FREE THEM        */ 00138000
         BAL   @14,AMDSAOUT                                     01S0208 00139000
*       LASTARB = ADDR(ARBE(1));    /* POINT TO FIRST ARB            */ 00140000
         LA    @10,ARBE                                         01S0209 00141000
         ST    @10,LASTARB                                      01S0209 00142000
*     END;                                                      01S0210 00143000
*   ELSE                            /* ARB IS AVAILABLE              */ 00144000
*     LASTARB = LASTARB + LENGTH(ARB); /* POINT TO NEXT ARB          */ 00145000
         B     @RC00206                                         01S0211 00146000
@RF00206 LA    @10,8                                            01S0211 00147000
         A     @10,LASTARB                                      01S0211 00148000
         ST    @10,LASTARB                                      01S0211 00149000
*   GO TO FILLARB;                  /* INITIALIZE ARB AND EXIT       */ 00150000
         B     FILLARB                                          01S0212 00151000
*                                                               01S0213 00152000
*   /*****************************************************************/ 00153000
*   /*                                                               */ 00154000
*   /* BEGINNING ADDRESS <= ARB ENDING ADDRESS, OR ARB BEGINNING     */ 00155000
*   /* ADDRESS<BEGINNING ADDRESS<=ARB ENDING ADDRESS. IF BEGINNING   */ 00156000
*   /* ADDRESS<ARB BEGINNING ADDRESS, CHECK ENDING ADDRESS TO SEE IF */ 00157000
*   /* EXISTING RANGE IS INCLUDED IN REQUESTED RANGE. IF SO, MERGE   */ 00158000
*   /* REQUEST. IF NOT, INSERT NEW ARB FOR REQUEST.                  */ 00159000
*   /*                                                               */ 00160000
*   /*****************************************************************/ 00161000
*                                                               01S0213 00162000
*/*ARBMERGE: D (HIGH,ADDREQ,LOW,ADDRLOW,EQ,ADDREQ) BEG ADDR : ARBADDRB  00163000
*/*                                                                  */ 00164000
*/*ADDRLOW: D (HIGH,%ARB1,EQ,%ARB1,LOW,%ARBDONE) END ADDR : ARBADDRB */ 00165000
*/*%ARBDONE: D (YES,,NO,%ARBNONE) ALL ARBS USED                      */ 00166000
*/* S (,FILLARB) AMDSAOUT: DUMP ARBS                                 */ 00167000
*                                                               01S0213 00168000
*ARBMERGE:                                                      01S0213 00169000
*   IF ARDBEGA < ARBADDRB THEN      /* BEGINNING ADDRESS PRECEDE        00170000
*                                      EXISTING RANGE                */ 00171000
ARBMERGE L     @10,ARBADDRB(,ARDARBAD)                          01S0213 00172000
         CR    ARDBEGA,@10                                      01S0213 00173000
         BNL   @RF00213                                         01S0213 00174000
*     IF ARDENDA < ARBADDRB THEN    /* YES - DOES REQUESTED RANGE       00175000
*                                      OVERLAP                       */ 00176000
         CR    ARDENDA,@10                                      01S0214 00177000
         BNL   @RF00214                                         01S0214 00178000
*       DO;                         /* NO - NEED A NEW ARB BUILT        00179000
*                                      AHEAD OF CURRENT ARB          */ 00180000
*         IF LASTARB = ADDR(ARBEND) - 8 /* ANY ARB'S AVAILABLE       */ 00181000
*         THEN DO;                  /* NO ARB'S AVAILABLE    @YM03674*/ 00182000
         LA    @10,ARBEND                                       01S0216 00183000
         SH    @10,@CH00047                                     01S0216 00184000
         C     @10,LASTARB                                      01S0216 00185000
         BNE   @RF00216                                         01S0216 00186000
*             CALL AMDSAOUT;        /* DUMP ALL ARBS                 */ 00187000
         BAL   @14,AMDSAOUT                                     01S0218 00188000
*             LASTARB = ADDR(ARBE(1)); /* POINT TO FIRST ARB         */ 00189000
         LA    @10,ARBE                                         01S0219 00190000
         ST    @10,LASTARB                                      01S0219 00191000
*             GO TO FILLARB;        /* INITIALIZE ARB AND EXIT       */ 00192000
         B     FILLARB                                          01S0220 00193000
*           END;                                                01S0221 00194000
*                                                               01S0221 00195000
*   /*****************************************************************/ 00196000
*   /*                                                               */ 00197000
*   /* PUSH DOWN EXISTING ARBS TO INSERT NEW ONE.                    */ 00198000
*   /*                                                               */ 00199000
*   /*****************************************************************/ 00200000
*                                                               01S0222 00201000
*/*%ARBNONE: P PUSH ARBS DOWN                                        */ 00202000
*/* P (,ARDRET) FILL IN ARB PRECEDING PUSHED DOWN ARB                */ 00203000
*/*%ARB1: P (,ADDREQ) SET ARBADDRB TO BEG ADDR                       */ 00204000
*         LASTARB = LASTARB + LENGTH(ARB); /* POINT TO NEXT ARB      */ 00205000
@RF00216 LA    @10,8                                            01S0222 00206000
         A     @10,LASTARB                                      01S0222 00207000
         ST    @10,LASTARB                                      01S0222 00208000
*         DO ARDPTR2 = LASTARB BY -LENGTH(ARB) WHILE ARDPTR2>ARDARBAD;  00209000
         LR    ARDPTR2,@10                                      01S0223 00210000
         B     @DE00223                                         01S0223 00211000
@DL00223 DS    0H                                               01S0224 00212000
*                                   /* MOVE ALL ARBS                 */ 00213000
*           ARDPTR1 = ARDPTR2 - LENGTH(ARB); /* POINT TO PRECEDING      00214000
*                                      ARB                           */ 00215000
         LR    ARDPTR1,ARDPTR2                                  01S0224 00216000
         SH    ARDPTR1,@CH00047                                 01S0224 00217000
*           ARDPTR2 -> ARB = ARDPTR1 -> ARB; /* PUSH ARB DOWN        */ 00218000
         MVC   ARB(8,ARDPTR2),ARB(ARDPTR1)                      01S0225 00219000
*         END;                                                  01S0226 00220000
         AH    ARDPTR2,@CH00700                                 01S0226 00221000
@DE00223 CR    ARDPTR2,ARDARBAD                                 01S0226 00222000
         BH    @DL00223                                         01S0226 00223000
*         ARBADDRB = ARDBEGA;       /* INITIALIZE BEGINNING ADDRESS  */ 00224000
         ST    ARDBEGA,ARBADDRB(,ARDARBAD)                      01S0227 00225000
*         ARBADDRE = ARDENDA;       /* INITIALIZE ENDING ADDRESS     */ 00226000
         ST    ARDENDA,ARBADDRE(,ARDARBAD)                      01S0228 00227000
*         GO TO ARDRET;             /* EXIT                          */ 00228000
         B     ARDRET                                           01S0229 00229000
*       END;                                                    01S0230 00230000
*     ELSE                          /* REQUESTED RANGE INCLUDE  01S0231 00231000
*                                      CURRENT ARB                   */ 00232000
*       ARBADDRB = ARDBEGA;         /* SET BEGINNING ADDRESS IN ARB  */ 00233000
@RF00214 ST    ARDBEGA,ARBADDRB(,ARDARBAD)                      01S0231 00234000
*                                                               01S0232 00235000
*   /*****************************************************************/ 00236000
*   /*                                                               */ 00237000
*   /* CHECK FOR MERGE OF REMAINING ARBS. CONDITIONS ON ENTRY HERE   */ 00238000
*   /* ARE ONE OF THE FOLLOWING:                                     */ 00239000
*   /*                                                               */ 00240000
*   /*       (1) BEGINNING ADDRESS = ARB BEGINNING ADDRESS, (2) ARB  */ 00241000
*   /*       BEGINNING ADDRESS < BEGINNING ADDRESS <= ARB ENDING     */ 00242000
*   /*       ADDRESS, (3) BEGINNING ADDRESS < ARB BEGINNING ADDRESS  */ 00243000
*   /*       <= ENDING ADDRESS.                                      */ 00244000
*   /*                                                               */ 00245000
*   /*****************************************************************/ 00246000
*                                                               01S0232 00247000
*/*ADDREQ: D (HIGH,,LOW,ARDRET,EQ,ARDRET) END ADDR : ARBADDRE        */ 00248000
*/* P SET ARBADDRE TO END ADDR                                       */ 00249000
*/*NEXTARB: D (NO,,YES,ARDRET) ALL ARBS CHECKED                      */ 00250000
*/* P GET NEXT ARB                                                   */ 00251000
*/* D (HIGH,%ARB2,EQ,%ARB2,LOW,ARDRET) END ADDR : ARBADDRB           */ 00252000
*/*%ARB2: D (EQ,%ARB3,LOW,%ARB3,HIGH,ARDREMV) END ADDR : ARBADDRE    */ 00253000
*/*%ARB3: P SET PREVIOUS ARBADDRE TO CURRENT ARBADDRE                */ 00254000
*/* N ELIMINATE CURRENT ARB                                          */ 00255000
*/* S (,ARDRET) ARBCMPRS: COMPRESS REMAINING ARBS                    */ 00256000
*/*ARDREMV: N ELIMINATE CURRENT ARB                                  */ 00257000
*/* S (,NEXTARB) ARBCMPRS: COMPRESS REMAINING ARBS                   */ 00258000
*   IF ARDENDA > ARBADDRE THEN      /* DOES REQUEST INCLUDE CURRENT     00259000
*                                      ARB                           */ 00260000
@RF00213 C     ARDENDA,ARBADDRE(,ARDARBAD)                      01S0232 00261000
         BNH   @RF00232                                         01S0232 00262000
*     DO;                           /* YES -                         */ 00263000
*       ARBADDRE = ARDENDA;         /* RESET END ADDR TO REQUEST     */ 00264000
         ST    ARDENDA,ARBADDRE(,ARDARBAD)                      01S0234 00265000
*       DO ARDARBAD = ARDARBAD + LENGTH(ARB) TO LASTARB BY      01S0235 00266000
*               LENGTH(ARB);        /* SEARCH REMAINING ARBS         */ 00267000
         LA    @10,8                                            01S0235 00268000
         AR    @10,ARDARBAD                                     01S0235 00269000
         LR    ARDARBAD,@10                                     01S0235 00270000
         B     @DE00235                                         01S0235 00271000
@DL00235 DS    0H                                               01S0236 00272000
*         IF ARDENDA < ARBADDRB THEN /* REQUEST OVERLAP NEXT ARB     */ 00273000
         C     ARDENDA,ARBADDRB(,ARDARBAD)                      01S0236 00274000
         BL    @RT00236                                         01S0236 00275000
*           GO TO ARDRET;           /* NO - FINISHED                 */ 00276000
*         IF ARDENDA <= ARBADDRE THEN /* REQUEST INCLUDED IN CURRENT    00277000
*                                      RANGE                         */ 00278000
         L     @10,ARBADDRE(,ARDARBAD)                          01S0238 00279000
         CR    ARDENDA,@10                                      01S0238 00280000
         BH    @RF00238                                         01S0238 00281000
*           DO;                     /* YES -                         */ 00282000
*             ARDPTR1 = ARDARBAD-LENGTH(ARB); /* POINT TO PREVIOUS      00283000
*                                      ARB                           */ 00284000
         LR    ARDPTR1,ARDARBAD                                 01S0240 00285000
         SH    ARDPTR1,@CH00047                                 01S0240 00286000
*             ARDPTR1->ARBADDRE = ARBADDRE; /* SET NEW RANGE IN 01S0241 00287000
*                                      PREVIOUS ARB TO INCLUDE NEXT     00288000
*                                      RANGE                         */ 00289000
         ST    @10,ARBADDRE(,ARDPTR1)                           01S0241 00290000
*             CALL ARBCMPRS;        /* COMPRESS REMIANING ARBS, 01S0242 00291000
*                                      ELIMINATING CURRENT ONE       */ 00292000
         BAL   @14,ARBCMPRS                                     01S0242 00293000
*             GO TO ARDRET;         /* FINISHED                      */ 00294000
         B     ARDRET                                           01S0243 00295000
*           END;                                                01S0244 00296000
*         CALL ARBCMPRS;            /* REQUEST INCLUDES MORE THAN       00297000
*                                      CURRENT RANGE - ELIMINATE        00298000
*                                      CURRENT ARB                   */ 00299000
@RF00238 BAL   @14,ARBCMPRS                                     01S0245 00300000
*       END;                        /* CONTINUE ARB MERGE            */ 00301000
         AH    ARDARBAD,@CH00047                                01S0246 00302000
@DE00235 C     ARDARBAD,LASTARB                                 01S0246 00303000
         BNH   @DL00235                                         01S0246 00304000
*     END;                          /* ARB MERGE COMPLETE            */ 00305000
*   GO TO ARDRET;                   /* EXIT                          */ 00306000
         B     ARDRET                                           01S0248 00307000
*                                                               01S0249 00308000
*   /*****************************************************************/ 00309000
*   /*                                                               */ 00310000
*   /* INITIALIZE LAST ARB BUILT, POINTED TO BY LASTARB.             */ 00311000
*   /*                                                               */ 00312000
*   /*****************************************************************/ 00313000
*                                                               01S0249 00314000
*/*FILLARB: P (,ARDRET) FILL IN FIRST ARB                            */ 00315000
*   RESPECIFY ARB BASED(LASTARB);                               01S0249 00316000
*                                                               01S0249 00317000
*FILLARB:                                                       01S0250 00318000
*   ARBADDRB = ARDBEGA;             /* INITIALIZE ARB                */ 00319000
FILLARB  L     @10,LASTARB                                      01S0250 00320000
         ST    ARDBEGA,ARBADDRB(,@10)                           01S0250 00321000
*   ARBADDRE = ARDENDA;             /* INITIALIZE END ADDRESS        */ 00322000
*                                                               01S0251 00323000
         ST    ARDENDA,ARBADDRE(,@10)                           01S0251 00324000
*   /*****************************************************************/ 00325000
*   /*                                                               */ 00326000
*   /* RETURN PATH - DEQUEUE RCB AND RETURN                          */ 00327000
*   /*                                                               */ 00328000
*   /*****************************************************************/ 00329000
*                                                               01S0252 00330000
*/*ARDRET: P DEQUEUE RCB                                             */ 00331000
*/* R RETURN TO CALLER                                               */ 00332000
*                                                               01S0252 00333000
*ARDRET:                                                        01S0252 00334000
*   VCTRCB = RCBNEXT;               /* DEQUEUE RCB                   */ 00335000
ARDRET   LA    @10,ARDRCB                                       01S0252 00336000
         MVC   VCTRCB(4,VCCTREG),RCBNEXT(@10)                   01S0252 00337000
*   RETURN;                         /* RETURN TO CALLER              */ 00338000
@EL00001 L     @13,4(,@13)                                      01S0253 00339000
@EF00001 DS    0H                                               01S0253 00340000
@ER00001 LM    @14,@12,12(@13)                                  01S0253 00341000
         BR    @14                                              01S0253 00342000
*                                                               01S0254 00343000
*   /*****************************************************************/ 00344000
*   /*                                                               */ 00345000
*   /* PROCEDURE FOR COMPRESSING ARB TABLE - ARDARBAD IS ADDRESS OF  */ 00346000
*   /* ARB TO BE ELIMINATED, LASTARB IS ADDRESS OF LAST ARB CURRENTLY*/ 00347000
*   /* BUILT. ON RETURN, LASTARB POINTS TO THE LAST ARB IN THE TABLE.*/ 00348000
*   /*                                                               */ 00349000
*   /*****************************************************************/ 00350000
*                                                               01S0254 00351000
*/*ARBCMPRS: E ARB COMPRESS                                          */ 00352000
*/* P COMPRESS REMAINING ARBS                                        */ 00353000
*/* R RETURN TO CALLER                                               */ 00354000
*                                                               01S0254 00355000
*ARBCMPRS:                                                      01S0254 00356000
*   PROC OPTIONS(NOSAVEAREA);                                   01S0254 00357000
ARBCMPRS STM   @14,@12,12(@13)                                  01S0254 00358000
*   DO ARDPTR2 = ARDARBAD BY LENGTH(ARB) WHILE ARDPTR2 < LASTARB; /*    00359000
*                                      COMPRESS ALL ARBS             */ 00360000
         LR    ARDPTR2,ARDARBAD                                 01S0255 00361000
         B     @DE00255                                         01S0255 00362000
@DL00255 DS    0H                                               01S0256 00363000
*     ARDPTR1 = ARDPTR2 + LENGTH(ARB); /* POINT TO NEXT ARB          */ 00364000
         LA    ARDPTR1,8                                        01S0256 00365000
         AR    ARDPTR1,ARDPTR2                                  01S0256 00366000
*     ARDPTR2 -> ARB = ARDPTR1 -> ARB; /* MOVE ARB UP                */ 00367000
         MVC   ARB(8,ARDPTR2),ARB(ARDPTR1)                      01S0257 00368000
*   END;                                                        01S0258 00369000
         AH    ARDPTR2,@CH00047                                 01S0258 00370000
@DE00255 L     @10,LASTARB                                      01S0258 00371000
         CR    ARDPTR2,@10                                      01S0258 00372000
         BL    @DL00255                                         01S0258 00373000
*   LASTARB = LASTARB - LENGTH(ARB); /* POINT TO ARB WHICH IS   01S0259 00374000
*                                      CURRENTLY LAST IN TABLE       */ 00375000
         SH    @10,@CH00047                                     01S0259 00376000
         ST    @10,LASTARB                                      01S0259 00377000
*   RETURN;                         /* RETURN TO CALLER              */ 00378000
@EL00002 DS    0H                                               01S0260 00379000
@EF00002 DS    0H                                               01S0260 00380000
@ER00002 LM    @14,@12,12(@13)                                  01S0260 00381000
         BR    @14                                              01S0260 00382000
*   END ARBCMPRS;                                               01S0261 00383000
*                                                               01S0262 00384000
*   /*****************************************************************/ 00385000
*   /*                                                               */ 00386000
*   /* DUMP ROUTINE - THIS ROUTINE DUMPS ALL VIRTUAL ADDRESSES WHICH */ 00387000
*   /* ARE ON THE ARB. THIS IS DONE BY REFERENCING ALL THE VIRTUAL   */ 00388000
*   /* ADDRESSES AND CHECKING IF A PAGE FAULT OCCURRED. IF SO, THE   */ 00389000
*   /* BUFFER IS SCHEDULED FOR OUTPUT. IF NOT, THE BUFFERS ARE       */ 00390000
*   /* SEARCHED TO SEE IF THE ADDRESS WAS BROUGHT IN EARLIER. IF SO, */ 00391000
*   /* IT IS SCHEDULED FOR OUTPUT. IN THIS WAY, ONLY ADDRESSES WHICH */ 00392000
*   /* WERE PAGED OUT ARE DUMPED.                                    */ 00393000
*   /*                                                               */ 00394000
*   /*****************************************************************/ 00395000
*                                                               01S0262 00396000
*                                                               01S0262 00397000
*AMDSAOUT:                                                      01S0262 00398000
*   PROC OPTIONS(SAVEAREA);                                     01S0262 00399000
*                                                               01S0262 00400000
AMDSAOUT STM   @14,@12,12(@13)                                  01S0262 00401000
         ST    @13,@SA00003+4                                   01S0262 00402000
         LA    @14,@SA00003                                     01S0262 00403000
         ST    @14,8(,@13)                                      01S0262 00404000
         LR    @13,@14                                          01S0262 00405000
*   /*****************************************************************/ 00406000
*   /*                                                               */ 00407000
*   /* EXTERNAL DECLARES                                             */ 00408000
*   /*                                                               */ 00409000
*   /*****************************************************************/ 00410000
*                                                               01S0263 00411000
*   DCL                                                         01S0263 00412000
*         IODBOUT EXTERNAL NONLOCAL; /* OUTPUT IODB                  */ 00413000
*   DCL                                                         01S0264 00414000
*         LNG22I PTR(8) EXTERNAL NONLOCAL; /* SECONDARY MSG LENGTH   */ 00415000
*   DCL                                                         01S0265 00416000
*         DMP22I CHAR(LENGTH(ARDMSG)) EXTERNAL NONLOCAL; /* MESSAGE     00417000
*                                      AREA                          */ 00418000
*   DCL                                                         01S0266 00419000
*         VLNG22I PTR(8) BASED(ADDR(LNG22I)+VCTLPA); /* VIRTUAL 01S0266 00420000
*                                   ADDRESS OF LENGTH                */ 00421000
*   DCL                                                         01S0267 00422000
*         VDMP22I CHAR(LENGTH(ARDMSG)) BASED(ADDR(DMP22I)+VCTLPA); /*   00423000
*                                   VIRTUAL ADDRESS OF MSG AREA      */ 00424000
*                                                               01S0267 00425000
*   /*****************************************************************/ 00426000
*   /*                                                               */ 00427000
*   /* BINARY TO EBCDIC CONVERT PARAMETER LIST                       */ 00428000
*   /*                                                               */ 00429000
*   /*****************************************************************/ 00430000
*                                                               01S0268 00431000
*   DCL                                                         01S0268 00432000
*         1 OUTBINL BDY(WORD),                                  01S0268 00433000
*             3 OUTBINA PTR(31) INIT(0), /* BINARY AREA              */ 00434000
*             3 OUTEBCA PTR(31) INIT(0), /* EBCDIC AREA              */ 00435000
*             3 * FIXED(15) INIT(LENGTH(CURRADDR)-1); /* LENGTH OF      00436000
*                                      BINARY AREA                   */ 00437000
*                                                               01S0268 00438000
*   /*****************************************************************/ 00439000
*   /*                                                               */ 00440000
*   /* MESSAGE TEXT FOR AMD022I                                      */ 00441000
*   /*                                                               */ 00442000
*   /*****************************************************************/ 00443000
*                                                               01S0269 00444000
*   DCL                                                         01S0269 00445000
*         1 ARDMSG CHAR(11),                                    01S0269 00446000
*             3 * CHAR(5) INIT('PAGE='),                        01S0269 00447000
*             3 DMPMSG CHAR(6) INIT(' ');                       01S0269 00448000
*                                                               01S0269 00449000
*   /*****************************************************************/ 00450000
*   /*                                                               */ 00451000
*   /* POINTERS AND CONSTANTS                                        */ 00452000
*   /*                                                               */ 00453000
*   /*****************************************************************/ 00454000
*                                                               01S0270 00455000
*   DCL                                                         01S0270 00456000
*         RSVESAVE PTR(31);         /* RCB SAVEAREA ADDRESS OF CALLER*/ 00457000
*   DCL                                                         01S0271 00458000
*         EXITSAVE PTR(31);         /* RCB EXIT ADDRESS OF CALLER    */ 00459000
*   DCL                                                         01S0272 00460000
*         OUTBCTAD PTR(31);         /* CURRENT BCT ADDRESS           */ 00461000
*   DCL                                                         01S0273 00462000
*         ARDBUFT PTR(8);           /* SAVE AREA FOR CTBUFTYP        */ 00463000
*   DCL                                                         01S0274 00464000
*         ARDIOTYP PTR(8);          /* SAVE AREA FOR CTIOTYPE        */ 00465000
*   DCL                                                         01S0275 00466000
*         CURRADDR PTR(31) INIT(0); /* CURRENT VIRTUAL ADDRESS -        00467000
*                                      INITIALIZED TO PREVENT   01S0275 00468000
*                                      ASSIGNMENT TO A REGISTER      */ 00469000
*   DCL                                                         01S0276 00470000
*         DUMMY CHAR(1) BASED(CURRADDR); /* DUMMY VARIABLE FOR  01S0276 00471000
*                                      REFERENCING VIRTUAL ADDRESS   */ 00472000
*   DCL                                                         01S0277 00473000
*         DUMMY2 CHAR(1) INIT('00'X); /* AREA TO MOVE DUMMY VARIABLE */ 00474000
*   DCL                                                         01S0278 00475000
*         PAGESIZE FIXED(31) CONSTANT(4096); /* SIZE OF PAGES        */ 00476000
*                                                               01S0279 00477000
*   /*****************************************************************/ 00478000
*   /*                                                               */ 00479000
*   /* MODIFY RCB FOR DUMPING EXIT                                   */ 00480000
*   /*                                                               */ 00481000
*   /*****************************************************************/ 00482000
*/*AMDSAOUT: E AMDSAOUT                                              */ 00483000
*/* N THIS IS THE DUMP ROUTINE                                       */ 00484000
*/* P (RCB,ARDEXIT2,NORM,) MODIFY RCB FOR DUMPING EXIT               */ 00485000
*                                                               01S0279 00486000
*   RESPECIFY R13 RESTRICTED;                                   01S0279 00487000
*   RESPECIFY BCTH BASED(VCTBCTH+VCTLPA); /* VIRTUAL ADDRESS OF BCTH */ 00488000
*   RESPECIFY BCT BASED(OUTBCTAD + VCTLPA); /* VIRTUAL ADDR OF BCT   */ 00489000
*   RESPECIFY IODB BASED(ADDR(IODBOUT)+VCTLPA); /* VIRTUAL ADDRESS      00490000
*                                      OF IODB                       */ 00491000
*   RESPECIFY CCT BASED(VCTCCTV);   /* VIRTUAL ADDRESS OF CCT        */ 00492000
*   RESPECIFY ARB BASED(ARDARBAD);                              01S0284 00493000
*   EXITSAVE = RCBEXIT;             /* SAVE CALLER'S EXIT ADDRESS    */ 00494000
         LA    @10,ARDRCB                                       01S0285 00495000
         L     EXITSAVE,RCBEXIT(,@10)                           01S0285 00496000
*   RSVESAVE = RCBSAVE;             /* SAVE CALLER'S SAVEAREA ADDRESS*/ 00497000
         L     RSVESAVE,RCBSAVE(,@10)                           01S0286 00498000
*   RCBSAVE = R13;                  /* POINT TO LOCAL SAVE AREA      */ 00499000
         ST    R13,RCBSAVE(,@10)                                01S0287 00500000
*   RCBEXIT = ADDR(ARDEXIT2);       /* POINT TO DUMPING EXIT         */ 00501000
         LA    @06,ARDEXIT2                                     01S0288 00502000
         ST    @06,RCBEXIT(,@10)                                01S0288 00503000
*   SAVEFORM(1:4) = 'LARD';         /* SET UP MODULE ID              */ 00504000
*                                                               01S0289 00505000
         MVC   SAVEFORM(4,R13),@CC00641                         01S0289 00506000
*   /*****************************************************************/ 00507000
*   /*                                                               */ 00508000
*   /* CHECK IF ANYTHING SHOULD BE DUMPED                            */ 00509000
*   /*                                                               */ 00510000
*   /*****************************************************************/ 00511000
*                                                               01S0290 00512000
*/* P SET CTDUMP IN CTBUFTYP                                         */ 00513000
*/* P PICK UP FIRST ARB (VCTARB)                                     */ 00514000
*/* D (YES,,NO,OUTRET) ANY ARBS TO DUMP                              */ 00515000
*   ARDBUFT = CTBUFTYP;             /* SAVE CTBUFTYP                 */ 00516000
         L     @10,VCTCCTV(,VCCTREG)                            01S0290 00517000
         SR    ARDBUFT,ARDBUFT                                  01S0290 00518000
         IC    ARDBUFT,CTBUFTYP(,@10)                           01S0290 00519000
*   CTBUFTYP = OFF;                 /* RESET CTBUFTYP                */ 00520000
         MVI   CTBUFTYP(@10),B'00000000'                        01S0291 00521000
*   CTDUMP = ON;                    /* REQUEST DUMP BUFFER           */ 00522000
         OI    CTDUMP(@10),B'00000100'                          01S0292 00523000
*   IF LASTARB = 0 THEN             /* ANYTHING TO DUMP              */ 00524000
         ICM   @10,15,LASTARB                                   01S0293 00525000
         BZ    @RT00293                                         01S0293 00526000
*     GO TO OUTRET;                 /* NO - RETURN                   */ 00527000
*                                                               01S0294 00528000
*   /*****************************************************************/ 00529000
*   /*                                                               */ 00530000
*   /* BEGIN DUMPING - REFERENCE VIRTUAL ADDRESS IN ARB AND SEE IF   */ 00531000
*   /* PAGE FAULT OCCURRED.                                          */ 00532000
*   /*                                                               */ 00533000
*   /*****************************************************************/ 00534000
*                                                               01S0295 00535000
*/*OUTBEGN: P MAKE ARBADDRB CURRENT ADDRESS                          */ 00536000
*/*OUTRESET: P TURN OFF CTPGEFLT                                     */ 00537000
*/* P TURN OFF VCTSADMP TO SKIP DUMP ON BAD DAT                      */ 00538000
*/* P REFERENCE CURRENT ADDR                                         */ 00539000
*/* N IF ADDR IS PAGED OUT A PAGE FAULT WILL OCCUR                   */ 00540000
*/* P TURN VCTSADMP BACK ON                                          */ 00541000
*/* D (YES,,NO,OUTSRCH) CTPGEFLT ON                                  */ 00542000
*/* P (,OUTIOST) OBTAIN CURRENT BCT ADDR FROM VCTBCTC                */ 00543000
*/*OUTINCR: P INCREMENT CURRENT ADDR BY 4K                           */ 00544000
*/* D (NO,,YES,OUTRESET) CURRENT ADDR < ARBADDRE                     */ 00545000
*/* D (NO,,YES,OUTDONE) LAST ARB PROCESSED                           */ 00546000
*/* P (,OUTBEGN) GET NEXT ARB                                        */ 00547000
*   DO ARDARBAD = ADDR(ARBE(1)) TO LASTARB BY LENGTH(ARB); /* USE ALL   00548000
*                                      ARBS                          */ 00549000
         LA    ARDARBAD,ARBE                                    01S0295 00550000
         B     @DE00295                                         01S0295 00551000
@DL00295 DS    0H                                               01S0296 00552000
*     DO CURRADDR = ARBADDRB BY PAGESIZE WHILE CURRADDR < ARBADDRE; /*  00553000
*                                      INCLUDE ALL VIRTUAL ADDRESSES */ 00554000
         L     @10,ARBADDRB(,ARDARBAD)                          01S0296 00555000
         ST    @10,CURRADDR                                     01S0296 00556000
         B     @DE00296                                         01S0296 00557000
@DL00296 DS    0H                                               01S0297 00558000
*       CTPGEFLT = OFF;             /* RESET PAGE FAULT INDICATOR    */ 00559000
         L     @10,VCTCCTV(,VCCTREG)                            01S0297 00560000
         NI    CTPGEFLT(@10),B'11011111'                        01S0297 00561000
*       VCTSADMP = OFF;             /* NO DUMP IN CASE OF BAD   01S0298 00562000
*                                      TRANSLATION                   */ 00563000
         NI    VCTSADMP(VCCTREG),B'01111111'                    01S0298 00564000
*   /*****************************************************************/ 00565000
*   /*                                                               */ 00566000
*   /*   THE FOLLOWING INSTRUCTION CAUSES THE CURRENT VIRTUAL        */ 00567000
*   /*   ADDRESS TO BE REFERENCED.  IF THE PAGE IS PAGED OUT,        */ 00568000
*   /*   A PAGE FAULT WILL OCCUR.  THE PAGING SUPERVISION CODE       */ 00569000
*   /*   OF AMDSADMP WILL GET CONTROL AND BRING IN THE PAGE,         */ 00570000
*   /*   SETTING THE CTPGEFLT FLAG.  IF THE PAGE IS UNAVAILABLE,     */ 00571000
*   /*   THE RCB EXIT (ARDEXIT2) WILL RECEIVE CONTROL FROM           */ 00572000
*   /*   AMDSAAUD.                                                   */ 00573000
*   /*                                                               */ 00574000
*   /*****************************************************************/ 00575000
*       DUMMY2 = DUMMY;             /* REFERENCE CURRENT VIRTUAL        00576000
*                                      ADDRESS                       */ 00577000
         L     @06,CURRADDR                                     01S0299 00578000
         MVC   DUMMY2(1),DUMMY(@06)                             01S0299 00579000
*       VCTSADMP = ON;              /* TURN DUMP REQUEST BIT BACK ON */ 00580000
         OI    VCTSADMP(VCCTREG),B'10000000'                    01S0300 00581000
*       IF CTPGEFLT = ON THEN       /* DID A PAGE FAULT OCCUR FOR       00582000
*                                      CURRENT VIRTUAL ADDRESS       */ 00583000
         TM    CTPGEFLT(@10),B'00100000'                        01S0301 00584000
         BNO   @RF00301                                         01S0301 00585000
*         OUTBCTAD = VCTBCTC;       /* YES - GET REAL ADDRESS OF        00586000
*                                      CURRENT BUFFER                */ 00587000
         L     OUTBCTAD,VCTBCTC(,VCCTREG)                       01S0302 00588000
*       ELSE                                                    01S0303 00589000
*                                                               01S0303 00590000
*   /*****************************************************************/ 00591000
*   /*                                                               */ 00592000
*   /* PAGE FAULT DID NOT OCCUR - SEARCH BUFFERS IN CASE PAGE WAS    */ 00593000
*   /* BROUGHT IN TO SATISFY SOME PREVIOUS PAGE FAULT.               */ 00594000
*   /*                                                               */ 00595000
*   /*****************************************************************/ 00596000
*                                                               01S0303 00597000
*/*OUTSRCH: N BUFFERS MUST BE CHECKED FOR ADDR PAGED IN BEFORE       */ 00598000
*/* P GET BCTH FROM VCTBCTH                                          */ 00599000
*/* P GET FIRST BCT ADDR (BCTHFRST)                                  */ 00600000
*/* P GET BCTE                                                       */ 00601000
*/*OUTBCTC: D (YES,,NO,OUTNOTIN) BCTVADDR = CURRENT ADDR             */ 00602000
*/* D (YES,,NO,OUTNOTIN) BCTASID = VCTASID                           */ 00603000
*/* D (YES,,NO,OUTNOTIN) BCTCOMP ON                                  */ 00604000
*/* D (YES,OUTIOST,NO,OUTNOTIN) BCTIOERR OFF                         */ 00605000
*/*OUTNOTIN: D (NO,,YES,OUTINCR) IS THIS LAST BCT                    */ 00606000
*/* P (,OUTBCTC) GET NEXT BCT                                        */ 00607000
*         DO;                                                   01S0303 00608000
         B     @RC00301                                         01S0303 00609000
@RF00301 DS    0H                                               01S0304 00610000
*           DO OUTBCTAD = BCTHFRST TO BCTHLAST BY LENGTH(BCT); /*       00611000
*                                      SEARCH BUFFERS                */ 00612000
         L     @10,VCTBCTH(,VCCTREG)                            01S0304 00613000
         A     @10,VCTLPA(,VCCTREG)                             01S0304 00614000
         L     OUTBCTAD,BCTHFRST(,@10)                          01S0304 00615000
         B     @DE00304                                         01S0304 00616000
@DL00304 DS    0H                                               01S0305 00617000
*             IF (BCTVADDR = CURRADDR) & (BCTASID = VCTASID) THEN /*    00618000
*                                      CURRENT ADDRESS IN BUFFER     */ 00619000
         LR    @10,OUTBCTAD                                     01S0305 00620000
         A     @10,VCTLPA(,VCCTREG)                             01S0305 00621000
         CLC   BCTVADDR(4,@10),CURRADDR                         01S0305 00622000
         BNE   @RF00305                                         01S0305 00623000
         CLC   BCTASID(2,@10),VCTASID(VCCTREG)                  01S0305 00624000
         BNE   @RF00305                                         01S0305 00625000
*               IF (BCTCOMP = ON & BCTIOERR = OFF) THEN /* YES - IS     00626000
*                                      IT VALID                      */ 00627000
         TM    BCTCOMP(@10),B'10000000'                         01S0306 00628000
         BNO   @RF00306                                         01S0306 00629000
         TM    BCTIOERR(@10),B'00100000'                        01S0306 00630000
         BZ    @RT00306                                         01S0306 00631000
*                 GO TO OUTIOST;    /* YES - QUEUE BCT FOR OUTPUT    */ 00632000
*           END;                    /* CONTINUE BUFFER SEARCH        */ 00633000
@RF00306 DS    0H                                               01S0308 00634000
@RF00305 AH    OUTBCTAD,@CH00701                                01S0308 00635000
@DE00304 L     @10,VCTBCTH(,VCCTREG)                            01S0308 00636000
         A     @10,VCTLPA(,VCCTREG)                             01S0308 00637000
         C     OUTBCTAD,BCTHLAST(,@10)                          01S0308 00638000
         BNH   @DL00304                                         01S0308 00639000
*           GO TO OUTINCR;          /* ADDR NOT IN A BUFFER - GET       00640000
*                                      NEXT PAGE                     */ 00641000
         B     OUTINCR                                          01S0309 00642000
*         END;                                                  01S0310 00643000
*                                                               01S0310 00644000
*   /*****************************************************************/ 00645000
*   /*                                                               */ 00646000
*   /* PLACE BCT ON OUTPUT I/O REQUEST QUEUE AND INITIATE I/O.       */ 00647000
*   /*                                                               */ 00648000
*   /*****************************************************************/ 00649000
*                                                               01S0311 00650000
*/*OUTIOST: P PLACE BCT AT HEAD OF OUTPUT IODB QUEUE                 */ 00651000
*/* P SET BCTALLOC INDICATING BUFFER ON I/O QUEUE                    */ 00652000
*/* P TURN OFF BCTCOMP BIT                                           */ 00653000
*/* P SET CTIOTYPE TO CTIOOUT                                        */ 00654000
*/* L AMDSASIO:  INITIATE I/O TO OUTPUT DEVICE                       */ 00655000
*/* D (YES,OUTINCR,NO,%ARDEX2A) RC = 0                               */ 00656000
*/*%ARDEX2A: P DEQUEUE BCT FROM OUTPUT IODB                          */ 00657000
*/* P (,ARDEXIT2) RESET BCTALLOC BIT                                 */ 00658000
*                                                               01S0311 00659000
*OUTIOST:                                                       01S0311 00660000
*       BCTNEXT = IODBBCT;          /* SAVE CURRENT I/O CHAIN        */ 00661000
@RC00301 DS    0H                                               01S0311 00662000
OUTIOST  L     @10,VCTLPA(,VCCTREG)                             01S0311 00663000
         LR    @15,OUTBCTAD                                     01S0311 00664000
         AR    @15,@10                                          01S0311 00665000
         L     @14,@CA00658                                     01S0311 00666000
         AR    @14,@10                                          01S0311 00667000
         MVC   BCTNEXT(4,@15),IODBBCT(@14)                      01S0311 00668000
*       IODBBCT = OUTBCTAD;         /* QUEUE BCT TO I/O CHAIN        */ 00669000
         ST    OUTBCTAD,IODBBCT(,@14)                           01S0312 00670000
*       BCTALLOC = ON;              /* INDICATE BUFFER ALLOCATED FOR    00671000
*                                      I/O                           */ 00672000
*       BCTCOMP = OFF;              /* RESET BUFFER COMPLETE FLAG    */ 00673000
         OI    BCTALLOC(@15),B'01000000'                        01S0314 00674000
         NI    BCTCOMP(@15),B'01111111'                         01S0314 00675000
*       ARDIOTYP = CTIOTYPE;        /* SAVE ORIGINAL I/O REQUEST     */ 00676000
         L     @10,VCTCCTV(,VCCTREG)                            01S0315 00677000
         SR    ARDIOTYP,ARDIOTYP                                01S0315 00678000
         IC    ARDIOTYP,CTIOTYPE(,@10)                          01S0315 00679000
*       CTIOTYPE = OFF;             /* RESET I/O REQUEST FLAGS       */ 00680000
         MVI   CTIOTYPE(@10),B'00000000'                        01S0316 00681000
*       CTIOOUT = ON;               /* REQUEST I/O TO OUTPUT DEVICE  */ 00682000
         OI    CTIOOUT(@10),B'01000000'                         01S0317 00683000
*       SVC(SIOSVC);                /* CALL AMDSASIO TO INITIATE I/O */ 00684000
         SVC   0                                                01S0318 00685000
*       RESPECIFY (R1,RETCODE) RESTRICTED;                      01S0319 00686000
*       CTIOTYPE = ARDIOTYP;        /* RESTORE ORIGINAL I/O REQUEST     00687000
*                                      FLAGS                         */ 00688000
         L     @14,VCTCCTV(,VCCTREG)                            01S0320 00689000
         STC   ARDIOTYP,CTIOTYPE(,@14)                          01S0320 00690000
*       IF RETCODE ^= 0 THEN        /* I/O INITIATED SUCCESSFULLY    */ 00691000
         LTR   RETCODE,RETCODE                                  01S0321 00692000
         BZ    @RF00321                                         01S0321 00693000
*         DO;                       /* NO -                          */ 00694000
*           RESPECIFY RETCODE UNRESTRICTED;                     01S0323 00695000
*           IODBBCT = BCTNEXT;      /* DEQUEUE BCT FROM I/O CHAIN    */ 00696000
         L     @10,@CA00658                                     01S0324 00697000
         L     @04,VCTLPA(,VCCTREG)                             01S0324 00698000
         AR    @10,@04                                          01S0324 00699000
         AR    @04,OUTBCTAD                                     01S0324 00700000
         MVC   IODBBCT(4,@10),BCTNEXT(@04)                      01S0324 00701000
*           BCTALLOC = OFF;         /* MARK BCT UNALLOCATED          */ 00702000
*                                                               01S0325 00703000
         NI    BCTALLOC(@04),B'10111111'                        01S0325 00704000
*   /*****************************************************************/ 00705000
*   /*                                                               */ 00706000
*   /* THIS IS THE RCB EXIT ROUTINE. MESSAGE AMD022I IS INITIALIZED  */ 00707000
*   /* WITH THE CURRENT ADDRESS AND THEN ISSUED TO THE CONSOLE. THE  */ 00708000
*   /* NEXT VIRTUAL ADDRESS IS THEN OBTAINED.                        */ 00709000
*   /*                                                               */ 00710000
*   /*****************************************************************/ 00711000
*                                                               01S0326 00712000
*/*ARDEXIT2: P TURN VCTSADMP BACK ON                                 */ 00713000
*/* L AMDSABIN:  CONVERT CURRENT ADDR TO EBCDIC                      */ 00714000
*/* P INITIALIZE MESSAGE AMD022I                                     */ 00715000
*/* L AMDSACON:  ISSUE MESSAGE AMD022I                               */ 00716000
*/* N THIS REQUIRES SETTING LNG22I AND DMP22I                        */ 00717000
*/* P (,OUTINCR) REFRESH CURRENT ADDR                                */ 00718000
*                                                               01S0326 00719000
*ARDEXIT2:                                                      01S0326 00720000
*           VCTSADMP = ON;          /* TURN DUMP REQUEST BIT BACK ON */ 00721000
ARDEXIT2 OI    VCTSADMP(VCCTREG),B'10000000'                    01S0326 00722000
*            IF VCTNOI22 = ON THEN  /* WAS PAGE NEVER USED?  @YM05001*/ 00723000
         TM    VCTNOI22(VCCTREG),B'00000100'                    01S0327 00724000
         BNO   @RF00327                                         01S0327 00725000
*            DO;                                           /*@YM05001*/ 00726000
*               VCTNOI22 = OFF;     /* NO - RESET FLAG AND   @YM05001*/ 00727000
         NI    VCTNOI22(VCCTREG),B'11111011'                    01S0329 00728000
*               GO TO OUTINCR;      /* SKIP MESSAGE I22      @YM05001*/ 00729000
         B     OUTINCR                                          01S0330 00730000
*            END;                                          /*@YM05001*/ 00731000
*           OUTBINA = ADDR(CURRADDR) + 1; /* PTR TO ADDR IN ERROR    */ 00732000
@RF00327 LA    @10,CURRADDR                                     01S0332 00733000
         AH    @10,@CH00062                                     01S0332 00734000
         ST    @10,OUTBINA                                      01S0332 00735000
*           OUTEBCA = ADDR(DMPMSG); /* OUTPUT AREA                   */ 00736000
         LA    @10,DMPMSG                                       01S0333 00737000
         ST    @10,OUTEBCA                                      01S0333 00738000
*           R1 = ADDR(OUTBINL);     /* POINT TO CONVERT PARAMETER       00739000
*                                      LIST                          */ 00740000
         LA    R1,OUTBINL                                       01S0334 00741000
*           SVC(BINSVC);            /* CALL AMDSABIN TO CONVERT      */ 00742000
         SVC   28                                               01S0335 00743000
*           VLNG22I = LENGTH(ARDMSG); /* MOVE IN SECONDARY MESSAGE      00744000
*                                      LENGTH                        */ 00745000
         L     @10,@CA00659                                     01S0336 00746000
         L     @06,VCTLPA(,VCCTREG)                             01S0336 00747000
         AR    @10,@06                                          01S0336 00748000
         MVI   VLNG22I(@10),X'0B'                               01S0336 00749000
*           VDMP22I = ARDMSG;       /* MOVE IN SECONDARY MESSAGE TEXT*/ 00750000
         L     @10,@CA00660                                     01S0337 00751000
         AR    @10,@06                                          01S0337 00752000
         MVC   VDMP22I(11,@10),ARDMSG                           01S0337 00753000
*           R1 = AMD022I;           /* REQUEST MESSAGE AMD022I BE       00754000
*                                      ISSUED                        */ 00755000
         LA    R1,22                                            01S0338 00756000
*           SVC(CONSVC);            /* CALL AMDSACON TO ISSUE MESSAGE*/ 00757000
         SVC   3                                                01S0339 00758000
*           RESPECIFY R1 UNRESTRICTED;                          01S0340 00759000
*         END;                                                  01S0341 00760000
*                                                               01S0341 00761000
*OUTINCR:                                                       01S0342 00762000
*     END;                          /* INCREMENT CURRENT VIRTUAL        00763000
*                                      ADDRESS                       */ 00764000
@RF00321 DS    0H                                               01S0342 00765000
OUTINCR  LH    @10,@CH00682                                     01S0342 00766000
         A     @10,CURRADDR                                     01S0342 00767000
         ST    @10,CURRADDR                                     01S0342 00768000
@DE00296 CLC   CURRADDR(4),ARBADDRE(ARDARBAD)                   01S0342 00769000
         BL    @DL00296                                         01S0342 00770000
*   END;                            /* GET NEXT ARB                  */ 00771000
*                                                               01S0343 00772000
         AH    ARDARBAD,@CH00047                                01S0343 00773000
@DE00295 C     ARDARBAD,LASTARB                                 01S0343 00774000
         BNH   @DL00295                                         01S0343 00775000
*   /*****************************************************************/ 00776000
*   /*                                                               */ 00777000
*   /* ALL ARBS HAVE BEEN PROCESSED                                  */ 00778000
*   /*                                                               */ 00779000
*   /*****************************************************************/ 00780000
*                                                               01S0344 00781000
*/*OUTDONE: P INDICATE ARBS ARE FREE                                 */ 00782000
*/* L  AMDSAWAT:  WAIT FOR COMPLETION OF I/O                         */ 00783000
*/*OUTRET: P RESTORE ORIGINAL RCB EXIT & SAVEAREA ADDRESSES          */ 00784000
*/* R RETURN TO CALLER                                               */ 00785000
*/*AMDSAARD: END                                                     */ 00786000
*   ARDIOTYP = CTIOTYPE;            /* SAVE I/O REQUEST FLAGS        */ 00787000
         L     @10,VCTCCTV(,VCCTREG)                            01S0344 00788000
         SR    ARDIOTYP,ARDIOTYP                                01S0344 00789000
         IC    ARDIOTYP,CTIOTYPE(,@10)                          01S0344 00790000
*   CTIOTYPE = OFF;                 /* RESET I/O REQUEST FLAGS       */ 00791000
         MVI   CTIOTYPE(@10),B'00000000'                        01S0345 00792000
*   CTIOOUT = ON;                   /* INDICATE OUTPUT I/O           */ 00793000
         OI    CTIOOUT(@10),B'01000000'                         01S0346 00794000
*   SVC(WATSVC);                    /* CALL AMDSAWAT TO WAIT FOR I/O    00795000
*                                      COMPLETION ON OUTPUT          */ 00796000
         SVC   1                                                01S0347 00797000
*   CTIOTYPE = ARDIOTYP;            /* RESTORE I/O REQUEST FLAGS     */ 00798000
*                                                               01S0348 00799000
         L     @10,VCTCCTV(,VCCTREG)                            01S0348 00800000
         STC   ARDIOTYP,CTIOTYPE(,@10)                          01S0348 00801000
*OUTRET:                                                        01S0349 00802000
*   CTBUFTYP = ARDBUFT;             /* RESTORE ORIGINAL BUFFER  01S0349 00803000
*                                      REQUEST FLAGS                 */ 00804000
OUTRET   L     @10,VCTCCTV(,VCCTREG)                            01S0349 00805000
         STC   ARDBUFT,CTBUFTYP(,@10)                           01S0349 00806000
*   LASTARB = 0;                    /* INDICATE ARBS ARE FREED       */ 00807000
         SR    @10,@10                                          01S0350 00808000
         ST    @10,LASTARB                                      01S0350 00809000
*   RCBEXIT = EXITSAVE;             /* RESTORE ORIGINAL RCB EXIT        00810000
*                                      ADDRESS                       */ 00811000
         LA    @10,ARDRCB                                       01S0351 00812000
         ST    EXITSAVE,RCBEXIT(,@10)                           01S0351 00813000
*   RCBSAVE = RSVESAVE;             /* RESTORE ORIGINAL RCB SAVEAREA    00814000
*                                      ADDRESS                       */ 00815000
         ST    RSVESAVE,RCBSAVE(,@10)                           01S0352 00816000
*   RETURN;                         /* RETURN TO CALLER              */ 00817000
@EL00003 L     @13,4(,@13)                                      01S0353 00818000
@EF00003 DS    0H                                               01S0353 00819000
@ER00003 LM    @14,@12,12(@13)                                  01S0353 00820000
         BR    @14                                              01S0353 00821000
*   END AMDSAOUT;                                               01S0354 00822000
*   END AMDSAARD                                                01S0355 00823000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00824000
*/*%INCLUDE SYSLIB  (AMDSARMK)                                        * 00825000
*;                                                              01S0355 00826000
         B     @EL00001                                         01S0355 00827000
@DATA    DS    0H                                                       00828000
@CH00700 DC    H'-8'                                                    00829000
@CH00062 DC    H'1'                                                     00830000
@CH00047 DC    H'8'                                                     00831000
@CH00701 DC    H'48'                                                    00832000
@CH00682 DC    H'4096'                                                  00833000
         DS    0F                                                       00834000
@SA00001 DS    18F                                                      00835000
@SA00003 DS    18F                                                      00836000
         DS    0F                                                       00837000
@CF00623 DC    XL4'00FFFFFF'                                            00838000
@CA00658 DC    A(IODBOUT)                                               00839000
@CA00659 DC    A(LNG22I)                                                00840000
@CA00660 DC    A(DMP22I)                                                00841000
         DS    0D                                                       00842000
LASTARB  DC    A(0)                                                     00843000
CURRADDR DC    A(0)                                                     00844000
@CC00641 DC    C'LARD'                                                  00845000
ARBH     DS    CL100                                                    00846000
         ORG   ARBH                                                     00847000
ARBID    DC    CL4'ARB '                                                00848000
ARBE     DS    CL8                                                      00849000
         ORG   ARBE+0                                                   00850000
@NM00031 DC    A(0)                                                     00851000
@NM00032 DC    A(0)                                                     00852000
         ORG   ARBE+8                                                   00853000
         ORG   ARBE+8                                                   00854000
         DC    A(0)                                                     00855000
         DC    A(0)                                                     00856000
         ORG   ARBE+16                                                  00857000
         ORG   ARBE+16                                                  00858000
         DC    A(0)                                                     00859000
         DC    A(0)                                                     00860000
         ORG   ARBE+24                                                  00861000
         ORG   ARBE+24                                                  00862000
         DC    A(0)                                                     00863000
         DC    A(0)                                                     00864000
         ORG   ARBE+32                                                  00865000
         ORG   ARBE+32                                                  00866000
         DC    A(0)                                                     00867000
         DC    A(0)                                                     00868000
         ORG   ARBE+40                                                  00869000
         ORG   ARBE+40                                                  00870000
         DC    A(0)                                                     00871000
         DC    A(0)                                                     00872000
         ORG   ARBE+48                                                  00873000
         ORG   ARBE+48                                                  00874000
         DC    A(0)                                                     00875000
         DC    A(0)                                                     00876000
         ORG   ARBE+56                                                  00877000
         ORG   ARBE+56                                                  00878000
         DC    A(0)                                                     00879000
         DC    A(0)                                                     00880000
         ORG   ARBE+64                                                  00881000
         ORG   ARBE+64                                                  00882000
         DC    A(0)                                                     00883000
         DC    A(0)                                                     00884000
         ORG   ARBE+72                                                  00885000
         ORG   ARBE+72                                                  00886000
         DC    A(0)                                                     00887000
         DC    A(0)                                                     00888000
         ORG   ARBE+80                                                  00889000
         ORG   ARBE+80                                                  00890000
         DC    A(0)                                                     00891000
         DC    A(0)                                                     00892000
         ORG   ARBE+88                                                  00893000
         ORG   ARBE+88                                                  00894000
         DC    A(0)                                                     00895000
         DC    A(0)                                                     00896000
         ORG   ARBH+100                                                 00897000
ARBEND   DS    0C                                                       00898000
         ORG   ARBH+100                                                 00899000
ARDRCB   DS    CL20                                                     00900000
         ORG   ARDRCB                                                   00901000
@NM00033 DC    A(0)                                                     00902000
ARDSTOR1 DC    A(0)                                                     00903000
@NM00034 DC    A(0)                                                     00904000
@NM00035 DC    A(0)                                                     00905000
@NM00036 DC    A(0)                                                     00906000
         ORG   ARDRCB+20                                                00907000
ARDMSG   DS    CL11                                                     00908000
         ORG   ARDMSG                                                   00909000
@NM00038 DC    CL5'PAGE='                                               00910000
DMPMSG   DC    CL6' '                                                   00911000
         ORG   ARDMSG+11                                                00912000
         DS    CL1                                                      00913000
OUTBINL  DS    CL10                                                     00914000
         ORG   OUTBINL                                                  00915000
OUTBINA  DC    A(0)                                                     00916000
OUTEBCA  DC    A(0)                                                     00917000
@NM00037 DC    AL2(4-1)                                                 00918000
         ORG   OUTBINL+10                                               00919000
DUMMY2   DC    X'00'                                                    00920000
         DS    CL1                                                      00921000
ARDPATCH DC    15F'0'                                                   00922000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00923000
@01      EQU   01                                                       00924000
@02      EQU   02                                                       00925000
@03      EQU   03                                                       00926000
@04      EQU   04                                                       00927000
@05      EQU   05                                                       00928000
@06      EQU   06                                                       00929000
@07      EQU   07                                                       00930000
@08      EQU   08                                                       00931000
@09      EQU   09                                                       00932000
@10      EQU   10                                                       00933000
@11      EQU   11                                                       00934000
@12      EQU   12                                                       00935000
@13      EQU   13                                                       00936000
@14      EQU   14                                                       00937000
@15      EQU   15                                                       00938000
ARDIOTYP EQU   @04                                                      00939000
ARDBUFT  EQU   @09                                                      00940000
OUTBCTAD EQU   @06                                                      00941000
EXITSAVE EQU   @08                                                      00942000
RSVESAVE EQU   @07                                                      00943000
ARDPTR2  EQU   @02                                                      00944000
ARDPTR1  EQU   @04                                                      00945000
ARDARBAD EQU   @05                                                      00946000
ARDENDA  EQU   @03                                                      00947000
ARDBEGA  EQU   @06                                                      00948000
VCCTREG  EQU   @12                                                      00949000
RETCODE  EQU   @15                                                      00950000
BASEREG  EQU   @11                                                      00951000
R0       EQU   @00                                                      00952000
R1       EQU   @01                                                      00953000
R13      EQU   @13                                                      00954000
RETREG   EQU   @14                                                      00955000
R10      EQU   @10                                                      00956000
R11      EQU   @11                                                      00957000
R12      EQU   @12                                                      00958000
R14      EQU   @14                                                      00959000
R15      EQU   @15                                                      00960000
R2       EQU   @02                                                      00961000
R3       EQU   @03                                                      00962000
R4       EQU   @04                                                      00963000
R5       EQU   @05                                                      00964000
R6       EQU   @06                                                      00965000
R7       EQU   @07                                                      00966000
R8       EQU   @08                                                      00967000
R9       EQU   @09                                                      00968000
         ENTRY ARBH                                                     00969000
         EXTRN IODBOUT                                                  00970000
         EXTRN LNG22I                                                   00971000
         EXTRN DMP22I                                                   00972000
SADMPLSD EQU   3312                                                     00973000
ARB      EQU   0                                                        00974000
ARBADDRB EQU   ARB                                                      00975000
ARBADDRE EQU   ARB+4                                                    00976000
BCTH     EQU   0                                                        00977000
BCTHFRST EQU   BCTH+4                                                   00978000
BCTHLAST EQU   BCTH+8                                                   00979000
BCT      EQU   0                                                        00980000
BCTNEXT  EQU   BCT+4                                                    00981000
BCTASID  EQU   BCT+10                                                   00982000
BCTVADDR EQU   BCT+12                                                   00983000
BCTLPID  EQU   BCT+28                                                   00984000
BCTFLGT  EQU   BCT+44                                                   00985000
BCTFLGI  EQU   BCT+45                                                   00986000
BCTCOMP  EQU   BCTFLGI                                                  00987000
BCTALLOC EQU   BCTFLGI                                                  00988000
BCTIOERR EQU   BCTFLGI                                                  00989000
CCT      EQU   0                                                        00990000
CTFLG1   EQU   CCT+1                                                    00991000
CTFLG2   EQU   CCT+2                                                    00992000
CTPGEFLT EQU   CTFLG2                                                   00993000
CTLOWFLG EQU   CCT+48                                                   00994000
CTDMPTYP EQU   CCT+52                                                   00995000
CTIOTYPE EQU   CTDMPTYP                                                 00996000
CTIOOUT  EQU   CTIOTYPE                                                 00997000
CTCONFLG EQU   CTDMPTYP+2                                               00998000
CTBUFTYP EQU   CTDMPTYP+3                                               00999000
CTDUMP   EQU   CTBUFTYP                                                 01000000
CTPRMT1  EQU   CTDMPTYP+24                                              01001000
CTPRMT2  EQU   CTDMPTYP+26                                              01002000
CCW      EQU   0                                                        01003000
CCWFLAGS EQU   CCW+4                                                    01004000
CSW      EQU   0                                                        01005000
CSWKEY00 EQU   CSW                                                      01006000
CSWUSTAT EQU   CSW+4                                                    01007000
CSWCSTAT EQU   CSW+5                                                    01008000
DSCE     EQU   0                                                        01009000
IODB     EQU   0                                                        01010000
IODBFLAG EQU   IODB+8                                                   01011000
IODBBCT  EQU   IODB+16                                                  01012000
IODBCCHH EQU   IODB+32                                                  01013000
IODBSRCH EQU   IODBCCHH+3                                               01014000
MDCE     EQU   0                                                        01015000
MDCB     EQU   0                                                        01016000
MDCBGRS  EQU   MDCB+16                                                  01017000
MDCBFLGS EQU   MDCB+86                                                  01018000
PSW      EQU   0                                                        01019000
PSWSM    EQU   PSW                                                      01020000
@NM00023 EQU   PSW+1                                                    01021000
PSWCCPM  EQU   PSW+2                                                    01022000
@NM00026 EQU   PSW+3                                                    01023000
PTRT     EQU   0                                                        01024000
PTRTRSA  EQU   0                                                        01025000
RCB      EQU   0                                                        01026000
RCBNEXT  EQU   RCB                                                      01027000
RCBSAVE  EQU   RCB+8                                                    01028000
RCBEXIT  EQU   RCB+12                                                   01029000
RCBBASE  EQU   RCB+16                                                   01030000
VCCT     EQU   0                                                        01031000
VCTRCB   EQU   VCCT+4                                                   01032000
VCTRECSN EQU   VCCT+8                                                   01033000
VCTFLGS  EQU   VCCT+9                                                   01034000
VCTSADMP EQU   VCTFLGS                                                  01035000
VCTNOI22 EQU   VCTFLGS                                                  01036000
VCTMDCE  EQU   VCCT+12                                                  01037000
VCTDSCE  EQU   VCCT+20                                                  01038000
VCTBCTH  EQU   VCCT+24                                                  01039000
VCTBCTC  EQU   VCCT+28                                                  01040000
VCTASID  EQU   VCCT+60                                                  01041000
VCTCBID  EQU   VCCT+64                                                  01042000
VCTLPA   EQU   VCCT+84                                                  01043000
VCTCCTV  EQU   VCCT+104                                                 01044000
SDL      EQU   0                                                        01045000
REGLOCAL EQU   0                                                        01046000
SAVEFORM EQU   0                                                        01047000
VLNG22I  EQU   0                                                        01048000
VDMP22I  EQU   0                                                        01049000
DUMMY    EQU   0                                                        01050000
PTRTVSA  EQU   0                                                        01051000
CTLOWDMP EQU   CTDMPTYP                                                 01052000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01053000
CTADDRE  EQU   CTLOWDMP+4                                               01054000
CTADDRS  EQU   CTLOWDMP                                                 01055000
SAVER12  EQU   SAVEFORM+68                                              01056000
SAVER11  EQU   SAVEFORM+64                                              01057000
SAVER10  EQU   SAVEFORM+60                                              01058000
SAVER9   EQU   SAVEFORM+56                                              01059000
SAVER8   EQU   SAVEFORM+52                                              01060000
SAVER7   EQU   SAVEFORM+48                                              01061000
SAVER6   EQU   SAVEFORM+44                                              01062000
SAVER5   EQU   SAVEFORM+40                                              01063000
SAVER4   EQU   SAVEFORM+36                                              01064000
SAVER3   EQU   SAVEFORM+32                                              01065000
SAVER2   EQU   SAVEFORM+28                                              01066000
SAVER1   EQU   SAVEFORM+24                                              01067000
SAVER0   EQU   SAVEFORM+20                                              01068000
SAVER15  EQU   SAVEFORM+16                                              01069000
SAVER14  EQU   SAVEFORM+12                                              01070000
SAVENEXT EQU   SAVEFORM+8                                               01071000
SAVEBACK EQU   SAVEFORM+4                                               01072000
SAVENAME EQU   SAVEFORM+1                                               01073000
SAVEID   EQU   SAVEFORM                                                 01074000
REGL15   EQU   REGLOCAL+60                                              01075000
REGL14   EQU   REGLOCAL+56                                              01076000
REGL13   EQU   REGLOCAL+52                                              01077000
REGL12   EQU   REGLOCAL+48                                              01078000
REGL11   EQU   REGLOCAL+44                                              01079000
REGL10   EQU   REGLOCAL+40                                              01080000
REGL9    EQU   REGLOCAL+36                                              01081000
REGL8    EQU   REGLOCAL+32                                              01082000
REGL7    EQU   REGLOCAL+28                                              01083000
REGL6    EQU   REGLOCAL+24                                              01084000
REGL5    EQU   REGLOCAL+20                                              01085000
REGL4    EQU   REGLOCAL+16                                              01086000
REGL3    EQU   REGLOCAL+12                                              01087000
REGL2    EQU   REGLOCAL+8                                               01088000
REGL1    EQU   REGLOCAL+4                                               01089000
REGL0    EQU   REGLOCAL                                                 01090000
SDLSPN   EQU   SDL+1                                                    01091000
SDLNUM   EQU   SDL                                                      01092000
VCTVCCTV EQU   VCCT+108                                                 01093000
@NM00030 EQU   VCCT+102                                                 01094000
VCTEXTRA EQU   VCCT+100                                                 01095000
VCTCPOUT EQU   VCCT+96                                                  01096000
VCTSVCTB EQU   VCCT+92                                                  01097000
VCTPGT   EQU   VCCT+88                                                  01098000
VCTCBADR EQU   VCCT+80                                                  01099000
VCTJBNME EQU   VCCT+72                                                  01100000
VCTCBIDN EQU   VCTCBID+7                                                01101000
@NM00029 EQU   VCTCBID                                                  01102000
VCTAUDIT EQU   VCCT+62                                                  01103000
VCTPTRT  EQU   VCCT+56                                                  01104000
VCTMASCB EQU   VCCT+52                                                  01105000
VCTASCB  EQU   VCCT+48                                                  01106000
VCTCPUC  EQU   VCCT+46                                                  01107000
VCTWKC   EQU   VCCT+45                                                  01108000
VCTWKHI  EQU   VCCT+44                                                  01109000
VCTSUBPL EQU   VCCT+40                                                  01110000
VCTARB   EQU   VCCT+36                                                  01111000
VCTIODB  EQU   VCCT+32                                                  01112000
VCTSTOR  EQU   VCCT+16                                                  01113000
VCTRECVA EQU   VCCT+10                                                  01114000
@NM00028 EQU   VCTFLGS                                                  01115000
VCTLRCLM EQU   VCTFLGS                                                  01116000
VCTARCLM EQU   VCTFLGS                                                  01117000
VCTASMIC EQU   VCTFLGS                                                  01118000
VCTMEMIN EQU   VCTFLGS                                                  01119000
@NM00027 EQU   VCTRECSN                                                 01120000
VCTRSMR  EQU   VCTRECSN                                                 01121000
VCTEXIR  EQU   VCTRECSN                                                 01122000
VCTUPDR  EQU   VCTRECSN                                                 01123000
VCTPGIR  EQU   VCTRECSN                                                 01124000
VCTVCT   EQU   VCCT                                                     01125000
RCBSTOR  EQU   RCB+4                                                    01126000
PTRTVS   EQU   PTRT+1032                                                01127000
PTRTRS   EQU   PTRT+8                                                   01128000
PTRTLGID EQU   PTRT+4                                                   01129000
PTRTPTRT EQU   PTRT                                                     01130000
PSWEND   EQU   PSW+8                                                    01131000
PSWIA    EQU   PSW+4                                                    01132000
PSWSP    EQU   @NM00026                                                 01133000
PSWSIG   EQU   PSWCCPM                                                  01134000
PSWEU    EQU   PSWCCPM                                                  01135000
PSWDO    EQU   PSWCCPM                                                  01136000
PSWFPO   EQU   PSWCCPM                                                  01137000
@NM00025 EQU   PSWCCPM                                                  01138000
@NM00024 EQU   PSWCCPM                                                  01139000
PSWPRBLM EQU   @NM00023                                                 01140000
PSWAIT   EQU   @NM00023                                                 01141000
PSWMCH   EQU   @NM00023                                                 01142000
PSWMODE  EQU   @NM00023                                                 01143000
PSWKEY   EQU   @NM00023                                                 01144000
PSWXTRNL EQU   PSWSM                                                    01145000
PSWIO    EQU   PSWSM                                                    01146000
PSWDAT   EQU   PSWSM                                                    01147000
@NM00022 EQU   PSWSM                                                    01148000
@NM00021 EQU   PSWSM                                                    01149000
@NM00020 EQU   PSWSM                                                    01150000
PSWPER   EQU   PSWSM                                                    01151000
@NM00019 EQU   PSWSM                                                    01152000
@NM00018 EQU   MDCB+87                                                  01153000
@NM00017 EQU   MDCBFLGS                                                 01154000
MDCBDUMP EQU   MDCBFLGS                                                 01155000
MDCBASMI EQU   MDCBFLGS                                                 01156000
MDCBPI   EQU   MDCB+84                                                  01157000
MDCBSTOR EQU   MDCB+80                                                  01158000
MDCBGR15 EQU   MDCBGRS+60                                               01159000
MDCBGR14 EQU   MDCBGRS+56                                               01160000
MDCBGR13 EQU   MDCBGRS+52                                               01161000
MDCBGR12 EQU   MDCBGRS+48                                               01162000
MDCBGR11 EQU   MDCBGRS+44                                               01163000
MDCBGR10 EQU   MDCBGRS+40                                               01164000
MDCBGR9  EQU   MDCBGRS+36                                               01165000
MDCBGR8  EQU   MDCBGRS+32                                               01166000
MDCBGR7  EQU   MDCBGRS+28                                               01167000
MDCBGR6  EQU   MDCBGRS+24                                               01168000
MDCBGR5  EQU   MDCBGRS+20                                               01169000
MDCBGR4  EQU   MDCBGRS+16                                               01170000
MDCBGR3  EQU   MDCBGRS+12                                               01171000
MDCBGR2  EQU   MDCBGRS+8                                                01172000
MDCBGR1  EQU   MDCBGRS+4                                                01173000
MDCBGR0  EQU   MDCBGRS                                                  01174000
MDCBPSW  EQU   MDCB+8                                                   01175000
MDCBNEXT EQU   MDCB+4                                                   01176000
MDCBMDCB EQU   MDCB                                                     01177000
MDCEAVIL EQU   MDCE+8                                                   01178000
MDCEACTV EQU   MDCE+4                                                   01179000
MDCEMDCE EQU   MDCE                                                     01180000
IODBSENS EQU   IODB+40                                                  01181000
IODBR    EQU   IODBCCHH+7                                               01182000
IODBHH   EQU   IODBSRCH+2                                               01183000
IODBCC   EQU   IODBSRCH                                                 01184000
IODBSEEK EQU   IODBCCHH+1                                               01185000
IODBM    EQU   IODBCCHH                                                 01186000
IODBCSW  EQU   IODB+24                                                  01187000
IODBCAW  EQU   IODB+20                                                  01188000
IODBCPU  EQU   IODB+14                                                  01189000
IODBTYPE EQU   IODB+13                                                  01190000
IODBCLAS EQU   IODB+12                                                  01191000
IODBDEV  EQU   IODB+10                                                  01192000
@NM00016 EQU   IODBFLAG+1                                               01193000
IODBSTRT EQU   IODBFLAG                                                 01194000
IODBCONW EQU   IODBFLAG                                                 01195000
IODBACTV EQU   IODBFLAG                                                 01196000
IODBHALT EQU   IODBFLAG                                                 01197000
IODBIOC  EQU   IODBFLAG                                                 01198000
IODBINT  EQU   IODBFLAG                                                 01199000
IODBPTRM EQU   IODBFLAG                                                 01200000
IODBTERM EQU   IODBFLAG                                                 01201000
IODBIDEN EQU   IODB+4                                                   01202000
IODBIODB EQU   IODB                                                     01203000
DSCETEND EQU   DSCE+20                                                  01204000
DSCETCUR EQU   DSCE+16                                                  01205000
DSCETBEG EQU   DSCE+12                                                  01206000
DSCENEXT EQU   DSCE+8                                                   01207000
DSCEBEGN EQU   DSCE+4                                                   01208000
DSCEDSCE EQU   DSCE                                                     01209000
CSWCNT   EQU   CSW+6                                                    01210000
CSWCHC   EQU   CSWCSTAT                                                 01211000
CSWICC   EQU   CSWCSTAT                                                 01212000
CSWCCC   EQU   CSWCSTAT                                                 01213000
CSWCDC   EQU   CSWCSTAT                                                 01214000
CSWPTC   EQU   CSWCSTAT                                                 01215000
CSWPGC   EQU   CSWCSTAT                                                 01216000
CSWIL    EQU   CSWCSTAT                                                 01217000
CSWPCI   EQU   CSWCSTAT                                                 01218000
CSWUE    EQU   CSWUSTAT                                                 01219000
CSWUC    EQU   CSWUSTAT                                                 01220000
CSWDE    EQU   CSWUSTAT                                                 01221000
CSWCE    EQU   CSWUSTAT                                                 01222000
CSWBUSY  EQU   CSWUSTAT                                                 01223000
CSWCUE   EQU   CSWUSTAT                                                 01224000
CSWSTMOD EQU   CSWUSTAT                                                 01225000
CSWATTN  EQU   CSWUSTAT                                                 01226000
CSWCADDR EQU   CSW+1                                                    01227000
@NM00015 EQU   CSWKEY00                                                 01228000
CSWKEY   EQU   CSWKEY00                                                 01229000
CCWCNT   EQU   CCW+6                                                    01230000
@NM00014 EQU   CCW+5                                                    01231000
@NM00013 EQU   CCWFLAGS                                                 01232000
CCWIDA   EQU   CCWFLAGS                                                 01233000
CCWPCI   EQU   CCWFLAGS                                                 01234000
CCWSKIP  EQU   CCWFLAGS                                                 01235000
CCWSLI   EQU   CCWFLAGS                                                 01236000
CCWCC    EQU   CCWFLAGS                                                 01237000
CCWDC    EQU   CCWFLAGS                                                 01238000
CCWDADDR EQU   CCW+1                                                    01239000
CCWCMD   EQU   CCW                                                      01240000
CTHWMAX  EQU   CTDMPTYP+29                                              01241000
CTHWM    EQU   CTDMPTYP+28                                              01242000
CTPRMT2X EQU   CTPRMT2+1                                                01243000
CTPRMT2Y EQU   CTPRMT2                                                  01244000
CTPRMT1X EQU   CTPRMT1+1                                                01245000
CTPRMT1Y EQU   CTPRMT1                                                  01246000
CTVCCT   EQU   CTDMPTYP+20                                              01247000
CTEOR    EQU   CTDMPTYP+16                                              01248000
CTCOMMIO EQU   CTDMPTYP+12                                              01249000
CTLWKAD  EQU   CTDMPTYP+8                                               01250000
CTCONSOL EQU   CTDMPTYP+4                                               01251000
@NM00012 EQU   CTBUFTYP                                                 01252000
CTLSQA   EQU   CTBUFTYP                                                 01253000
CTASM    EQU   CTBUFTYP                                                 01254000
CTPGT    EQU   CTBUFTYP                                                 01255000
CTWKFLE  EQU   CTBUFTYP                                                 01256000
@NM00011 EQU   CTBUFTYP                                                 01257000
@NM00010 EQU   CTCONFLG                                                 01258000
CTREAD   EQU   CTCONFLG                                                 01259000
CTMSGOUT EQU   CTCONFLG                                                 01260000
@NM00009 EQU   CTDMPTYP+1                                               01261000
@NM00008 EQU   CTIOTYPE                                                 01262000
CTIORSET EQU   CTIOTYPE                                                 01263000
CTIOINT  EQU   CTIOTYPE                                                 01264000
CTIOCON  EQU   CTIOTYPE                                                 01265000
CTIOWK   EQU   CTIOTYPE                                                 01266000
CTIODA   EQU   CTIOTYPE                                                 01267000
CTIOTERM EQU   CTIOTYPE                                                 01268000
CTEBCOPR EQU   CCT+49                                                   01269000
@NM00007 EQU   CTLOWFLG                                                 01270000
CTWKSTUS EQU   CTLOWFLG                                                 01271000
CTINIT   EQU   CTLOWFLG                                                 01272000
CTFP     EQU   CTLOWFLG                                                 01273000
CTVIRTD  EQU   CTLOWFLG                                                 01274000
CTEBCOPD EQU   CCT+45                                                   01275000
CTCONTYP EQU   CCT+44                                                   01276000
CTOUTAD  EQU   CCT+42                                                   01277000
CTCPUI   EQU   CCT+40                                                   01278000
CTERBCON EQU   CCT+36                                                   01279000
CTERBTPE EQU   CCT+32                                                   01280000
CTERBDA  EQU   CCT+28                                                   01281000
CTCCHHW  EQU   CCT+24                                                   01282000
CTCCHHE  EQU   CCT+20                                                   01283000
CTCCHHS  EQU   CCT+16                                                   01284000
CTPGECNT EQU   CCT+15                                                   01285000
CTCCHHR  EQU   CCT+8                                                    01286000
CTINADDR EQU   CCT+6                                                    01287000
CTSENSE  EQU   CCT+4                                                    01288000
CTDEVTYP EQU   CCT+3                                                    01289000
@NM00006 EQU   CTFLG2                                                   01290000
CTALTCON EQU   CTFLG2                                                   01291000
CTWKDONE EQU   CTFLG2                                                   01292000
CTVIRTR  EQU   CTFLG2                                                   01293000
CTNOSTAT EQU   CTFLG2                                                   01294000
CTSTOR   EQU   CTFLG2                                                   01295000
CTDUPSW  EQU   CTFLG2                                                   01296000
CTERREC  EQU   CTFLG1                                                   01297000
CTMP     EQU   CTFLG1                                                   01298000
@NM00005 EQU   CTFLG1                                                   01299000
CTDEFO   EQU   CTFLG1                                                   01300000
CTWORK   EQU   CTFLG1                                                   01301000
CTMORTPE EQU   CTFLG1                                                   01302000
CTDEVICE EQU   CTFLG1                                                   01303000
CTERROR  EQU   CTFLG1                                                   01304000
CTWAIT   EQU   CCT                                                      01305000
@NM00004 EQU   BCT+46                                                   01306000
BCTRECLM EQU   BCTFLGI                                                  01307000
@NM00003 EQU   BCTFLGT                                                  01308000
BCTPGTF  EQU   BCTFLGT                                                  01309000
BCTDUMP  EQU   BCTFLGT                                                  01310000
BCTLSQA  EQU   BCTFLGT                                                  01311000
BCTASM   EQU   BCTFLGT                                                  01312000
BCTPGT   EQU   BCTFLGT                                                  01313000
BCTWKFLE EQU   BCTFLGT                                                  01314000
@NM00002 EQU   BCTFLGT                                                  01315000
BCTRBA   EQU   BCT+40                                                   01316000
BCTAMB   EQU   BCT+36                                                   01317000
@NM00001 EQU   BCTLPID+4                                                01318000
BCTLGN   EQU   BCTLPID                                                  01319000
BCTMDCB  EQU   BCT+24                                                   01320000
BCTPGTE  EQU   BCT+20                                                   01321000
BCTRADDR EQU   BCT+16                                                   01322000
BCTKEY2  EQU   BCT+9                                                    01323000
BCTKEY1  EQU   BCT+8                                                    01324000
BCTBCT   EQU   BCT                                                      01325000
BCTHBCTH EQU   BCTH                                                     01326000
GTMSAVE  EQU   SADMPLSD+684                                             01327000
GTMNAME  EQU   SADMPLSD+680                                             01328000
FRMSAVE  EQU   SADMPLSD+580                                             01329000
FRMNAME  EQU   SADMPLSD+576                                             01330000
AUDSAVE  EQU   SADMPLSD+476                                             01331000
AUDNAME  EQU   SADMPLSD+472                                             01332000
IOISAVE  EQU   SADMPLSD+372                                             01333000
IOINAME  EQU   SADMPLSD+368                                             01334000
PGISAVE  EQU   SADMPLSD+268                                             01335000
PGINAME  EQU   SADMPLSD+264                                             01336000
SVISAVE  EQU   SADMPLSD+164                                             01337000
SVINAME  EQU   SADMPLSD+160                                             01338000
LOWCRS   EQU   SADMPLSD+96                                              01339000
LOWGRS   EQU   SADMPLSD+32                                              01340000
SAVEDUMP EQU   SADMPLSD+24                                              01341000
AUDPSW   EQU   SADMPLSD+16                                              01342000
SVIRPSW  EQU   SADMPLSD+8                                               01343000
PSWSADMP EQU   SADMPLSD                                                 01344000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01345000
@RT00191 EQU   ARDRET                                                   01346000
@RT00193 EQU   ARDRET                                                   01347000
@RT00203 EQU   ARBMERGE                                                 01348000
@RC00206 EQU   FILLARB                                                  01349000
@RT00236 EQU   ARDRET                                                   01350000
@RF00232 EQU   ARDRET                                                   01351000
@RT00293 EQU   OUTRET                                                   01352000
@RT00306 EQU   OUTIOST                                                  01353000
@PB00003 EQU   @EL00001                                                 01354000
@PB00002 EQU   @PB00003                                                 01355000
@ENDDATA EQU   *                                                        01356000
         END   AMDSAARD,(C'PL/S-II',0502,74035)                         01357000
