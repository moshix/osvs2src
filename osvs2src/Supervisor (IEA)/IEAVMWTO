         TITLE 'IEAVMWTO--MLWTO SERVICE ROUTINE'                        00010002
         MACRO                                                          00020002
         PROLOG                                                         00030002
*/*   START OF SPECIFICATIONS ****                                      00040002
*                                                                       00050002
*01*  MODULE-NAME = IEAVMWTO                                            00060002
*                                                                       00070002
*02*     CSECT-NAME = IEAVMWTO                                          00080002
*                                                                       00090002
*01*  DESCRIPTIVE-NAME = MULTI-LINE WTO SERVICE ROUTINE                 00100002
*                                                                       00110002
*01*  COPYRIGHT = NONE                                                  00120002
*                                                                       00130002
*01*  STATUS = OS/VS2 REL3                                              00140003
*                                                                       00150002
*01*  FUNCTION = THE MLWTO SERVICE ROUTINE IS PART OF IGC0003E OR       00160002
*     SVC 35. IT RECEIVES CONTROL WHEN AN MLWTO IS ISSUED. A MULTIPLE   00170002
*     LINE WTO CAUSES A MAJOR WQE AND ONE OR MORE MINOR WQES TO BE      00180002
*     BUILT. THE WQES, MAJOR AND MINOR, CONTAIN MESSAGES FOR THE        00190002
*     CONSOLE OPERATOR AND ASSOCIATED CONTROL INFORMATION.              00200002
*                                                                       00210002
*     THE MODULE CONSTRUCTS A MAJOR WQE AND MINOR WQES FOR EACH         00220002
*     MLWTO. IT WILL ALSO CONNECT ADDITIONAL DATA LINES (OR MINOR WQES) 00230002
*     TO AN EXISTING MLWTO. CONNECTING IS RESERVED FOR KEY ZERO TO      00240002
*     SEVEN OR SUPERVISOR MODE USERS OF MLWTO.                          00250002
*                                                                       00260002
*     THE ROUTINE PERFORMS THE FOLLOWING MAJOR FUNCTIONS IN HANDLING    00270002
*     AN MLWTO REQUEST.                                                 00280002
*                                                                       00290002
*     1. SET UP ADDRESSABILITY AND OBTAIN CORE FOR A WORKAREA.          00300002
*                                                                       00310002
*     2. CHECK THAT THE WPL (WRITE PARAMETER LIST) IS WHOLLY            00320002
*        WITHIN THE CALLER'S ACCESSIBLE STORAGE.                        00330002
*                                                                       00340002
*     3. CHECK THAT THE LINE TYPES FOR EACH LINE OF THE MESSAGE         00350002
*        IS CORRECT. THE MESSAGE WILL BE TERMINATED AT THE LAST         00360002
*        CORRECT LINE IF AN INVALID LINE TYPE SITUATION IS FOUND.       00370002
*                                                                       00380002
*     4. GET CORE FOR A MAJOR WQE AND ONE MINOR WQE IF THIS REQUEST     00390002
*        IS NOT ASKING TO ADD MORE LINES TO AN EXISTING MESSAGE.        00400002
*                                                                       00410002
*     5. FILL IN THE MAJOR WQE WITH THE FIRST LINE OF THE MESSAGE.      00420002
*        IF THE MESSAGE HAS A DESCRIPTOR CODE OF 9 AND NO CONTROL       00430002
*        LINE AS THE LINE THEN A DEFAULT CONTROL LINE IS SUPPLIED       00440002
*        AS THE FIRST LINE OF THE MESSAGE.                              00450002
*                                                                       00460002
*     6. PASS THE FIRST LINE TO THE SUBSYSTEM EXIT.                     00470002
*        IF THE USER IS A PROBLEM PROGRAM THE WQETEXT IS       @ZA19274 00472003
*        TRANSLATED TO INSURE ONLY PRINTABLE AND DISPLAY       @ZA19274 00474003
*        CHARACTERS ARE PASSED FROM THIS POINT.                @ZA19274 00476003
*                                                                       00480002
*     7. XMPOST THE UCMOECB SO THAT THE COMMUNICATIONS TASK CAN START   00490003
*        PROCESSING THE MLWTO.                                 @ZA03242 00496003
*                                                                       00510002
*     8. CHECK IF THE MAJOR WQE EXISTS SO THAT THE NEXT LINE CAN BE     00520002
*        ADDED. IF THE SERVICE REQUEST WAS TO ADD EXTRA LINES THEN      00530002
*        THE PROCESSING WOULD SKIP STEPS 4 TO 7. THE MODULE IS          00540002
*        WRITTEN SO THAT EACH ADDITIONAL LINE IS HANDLED IN THE         00550002
*        SAME MANNER.                                                   00560002
*                                                                       00570002
*     9. CHECK IF THERE IS SPACE IN THE MINOR WQE/WQES FOR THIS LINE.   00580002
*        GET A NEW MINOR WQE IF THERE IS NO SPACE. THERE IS ALWAYS      00590002
*        AT LEAST ONE MINOR POINTED TO BY THE MAJOR. THIS IS DONE TO    00600002
*        MINIMIZE GETMAIN/FREEMAIN USAGE.                               00610002
*                                                                       00620002
*     10. FILL IN THE NEXT LINE.                                        00630002
*                                                                       00640002
*     11. PASS THE MAJOR WQE AND THE MINOR WQE WITH THE NEW LINE        00650002
*         TO THE SUBSYSTEM WTO EXIT.                                    00660002
*         ON RETURN THE TEXT IS TRANSLATED AS IN STEP 6.       @ZA19274 00665003
*                                                                       00670002
*     12. POST THE UCMOECB.                                             00680002
*                                                                       00690002
*     13. IF THERE ARE ANY MORE LINES IN THE WPL THEN GO BACK TO        00700002
*         STEP 8. IF NOT THEN RETURN TO IEAVVWTO.                       00710002
*                                                                       00720002
*02*     OPERATION = THIS MODULE RELIES HEAVILY ON THE EXTENDED         00730002
*        SAVEAREA IN THE SVRB. THE AREA IS MAPPED BY THE MACRO          00740002
*        IHACTM AND THE NAME OF THE DSECT IS XVSAV. SOME OF THE         00750002
*        INFORMATION IN THIS AREA IS SET UP BY IEAVVWTO PRIOR TO        00760002
*        THE CALL TO IEAVMWTO.                                          00770002
*01*  NOTES = THIS MODULE WAS MODIFIED SO THAT IT IS AS STRUCTURED      00780002
*     AS POSSIBLE. IT CONSISTS OF A NUMBER OF SEGMENTS THAT ARE         00790002
*     INSERTED IN THE TOP-LEVEL SEGMENT VIA THE BAL LOCAL MACRO         00800002
*     FEATURE. THE INCLUDED SEGMENTS APPEAR AT THE BEGINNING OF THE     00810002
*     ASSEMBLER LISTING. THE MODULE ALSO USES A NUMBER OF INTERNAL      00820002
*     SUBROUTINES. THESE ROUTINES APPEAR AT THE END OF THE ASSEMBLER    00830002
*     LISTING. THEY ALL START WITH AN ASSEMBLER COMMENT OF              00840002
*     '*        MACRO   '. THIS COMMENT WAS USED BY A DEVELOPMENT       00850002
*     PRINTING PROGRAM THAT WOULD LIST EACH SEGMENT OR SUBROUTINE       00860002
*     INDIVIDUALLY.                                                     00870002
*                                                                       00880002
*     EACH SEGMENT AND ROUTINE WERE ORGANIZED SO THAT THEY HAVE         00890002
*     ONLY ONE ENTRY POINT AND ONE EXIT POINT. MOST SEGMENTS AND        00900002
*     ROUTINES ARE ALSO WELL STRUCTURED IN TERMS OF INSTRUCTION         00910002
*     FLOW. THE SEGMENTS USED IN THIS MODULE ARE LISTED.                00920002
*                                                                       00930002
*     1. PROLOG - THIS SEGMENT.                                         00940002
*                                                                       00950002
*     2. DATADEFS - CONTAINS THE DATA DECLARATIONS FOR THE DYNAMIC      00960002
*        WORKAREA AND MACRO CALLS FOR THE DEFINITION OF SYSTEM          00970002
*        CONTROL BLOCKS.                                                00980002
*                                                                       00990002
*     3. INITIAL - SETS UP ADDRESSABILITY, GETS CORE FOR THE WORKAREA   01000002
*        AND CHECKS FOR TYPE OF SERVICE CALL.                           01010002
*                                                                       01020002
*     4. TSTMLWTO - CHECKS THAT WPL IS IN USER'S STORAGE AND CHECKS     01030002
*        THE WPL FOR CORRECTNESS.                                       01040002
*                                                                       01050002
*     5. GETLINES - FINDS OUT HOW MANY LINES ARE IN THE WPL.            01060002
*                                                                       01070002
*     6. CHKLINES - LIMITS SERVICE REQUEST TO 10 LINES AT A TIME.       01080002
*                                                                       01090002
*     7. CHKTYPE - CHECKS THAT LINES HAVE THE PROPER LINE TYPE          01100002
*        AND IN THE PROPER ORDER.                                       01110002
*                                                                       01120002
*     8. INCRMNT - LOCATES THE BEGINNING OF THE NEXT LINE IN THE        01130002
*        WPL.                                                           01140002
*                                                                       01150002
*     9. WRAPUP - SAVES THE NUMBER OF LINES FOUND IN THE WPL.           01160002
*        SETS XVXOUDCL IF THE DEFAULT CONTROL LINE IS TO BE USED.       01170002
*                                                                       01180002
*     10.BLDMAJ - GET SPACE FOR THE MAJOR AND MINOR WQE. BUILD MAJOR.   01190002
*                                                                       01200002
*     11.GETMAJ - OBTAINS SPACE FOR THE WQE                             01210002
*                                                                       01220002
*     12.FREEMAJ - FREES THE MAJOR WQE IF A MINOR COULDN'T BE           01230002
*        OBTAINED.                                                      01240002
*                                                                       01250002
*     13.BMAJINIT - INITIALIZE THE MAJOR WQE.                           01260002
*                                                                       01270002
*     14.BMAJFSTL - SET UP TO MOVE TEXT INTO MAJOR.                     01280002
*                                                                       01290002
*     15.BMAJMVMS - MOVE TEXT INTO MAJOR. CHECK FOR TRAILING BLANKS.    01300002
*                                                                       01310002
*     16.BMAJCKNL - HAS BEEN DELETED AND ITS FUNCTION HAS      @ZA19274 01315003
*        BEEN CORRECTED AND MOVED TO THE SUBSEXIT SEGMENT.     @ZA19274 01320003
*                                                                       01340002
*     17.BLDMIN - FILL IN MINOR LINES.                                  01350002
*                                                                       01360002
*     18.MIN1INIT/MIN2INIT - INITIALIZE THE FIRST/SECOND LINE IN        01370002
*        THE MINOR WQE.                                                 01380002
*                                                                       01390002
*     19.MIN1MOV/MIN2MOV - MOVE THE TEXT INTO THE FIRST/SECOND LINE     01400002
*        OF THE MINOR WQE.                                              01410002
*                                                                       01420002
*     20.BLNKSCAN - DELETE TRAILING BLANKS FROM TEXT IN MINOR.          01430002
*                                                                       01440002
*     21.SUBSEXIT - PASS MAJOR/MINOR WQE TO SUBSYSTEM WTO EXIT.         01450003
*        ON RETURN FROM THE SUBSYSTEM EXIT THE USER IS A       @ZA19274 01452003
*        PROBLEM PROGRAM THE WQE TEXT -MAJOR/MINOR- IS TRANS-  @ZA19274 01454003
*        LATED TO ALLOW ONLY PRINTABLE AND DISPLAY CHARACTERS  @ZA19274 01456003
*        FROM THIS POINT.                                      @ZA19274 01458003
*                                                                       01460002
*     22.POSTOECB - XMPOST UCMOECB TO WAKE UP COMM TASK.       @ZA03242 01470003
*                                                                       01480002
*                                                                       01490002
*     23. FREESAV - FREE THE MODULES DYNAMIC WORKAREA.                  01500002
*                                                                       01510002
*     24. CONSTNTS - CONTAINS DECLARATIONS OF CONSTANTS AND             01520002
*        EQUATES USED IN THE PROGRAM.                                   01530002
*                                                                       01540002
*     THE INTERNAL ROUTINES USED IN THE MODULE ARE DESCRIBED BELOW.     01550002
*                                                                       01560002
*     1. GETMINOR - GETS SPACE FOR A MINOR WQE AND ADDS IT TO           01570002
*        QUEUE OF MINORS POINTED TO BY THE MAJOR.                       01580002
*                                                                       01590002
*     2. ENDUP - DECREMENTS THE NUMBER OF LINES TO BE DONE. SETS        01600002
*        LINE TYPE TO DATA-END IF NEEDED.                               01610002
*                                                                       01620002
*     3. FINDID - LOCATES MAJOR TO WHICH THE MINOR LINE IS TO BE        01630002
*        ADDED.                                                         01640002
*                                                                       01650002
*     4. LINEHDLR - HAS BEEN DELETED AND ITS FUNCTION HAS BEEN          01655003
*        CORRECTED AND MOVED TO THE SUBSEXIT.                  @ZA19274 01660003
*                                                                       01680002
*     5. REFERLEN - CHECKS THAT USER CAN ACCESS THE WPL.                01690002
*                                                                       01700002
*     6. GETWQE - GETS A 192 BYTE WQE FROM THE WQE CELLPOOL.            01710002
*                                                                       01720002
*     7. WAITWQE - WAIT FOR A WQE TO BE FREED.                          01730002
*                                                                       01740002
*     8. TEXTLINE - INCREMENTS A POINTER TO THE NEXT LINE IN THE WPL.   01750002
*                                                                       01760002
*     9. FRELCKS - FREES THE CMS AND LOCAL LOCK.                        01770002
*                                                                       01780002
*     10.SETLCKS - OBTAINS THE LOCAL AND CMS LOCK.                      01790002
*                                                                       01800002
*02*     DEPENDENCIES = THIS MODULE SHOULD BE LINKED WITH IEAVVWTO,     01810002
*        IGC0203E, IEEVCTE TO FORM ONE LOAD MODULE (ENTRY POINT         01820002
*        IS IEAVVWTO). THIS LINKING IS DONE AT SYSGEN. EACH MODULE      01830002
*        SHOULD BE ON A PAGE BOUNDARY.                                  01840002
*        MODULE SHOULD BE ON A PAGE BOUNDARY.                           01850002
*                                                                       01860002
*03*        CHARACTER-CODE-DEPENDENCIES = DEPENDENT ON THE FOLLOWING    01870002
*           EBCIDIC CHARACTERS: BLANK('40'X), @('7C'X), *('5C'X),       01880002
*           +('4E'X). A RECOMPILATION WOULD BE NEEDED IF THESE          01890002
*           CHARACTER CODES WERE CHANGED.  IF ANY CHARACTER    @ZA19274 01895003
*           CODE IS CHANGED-TO OR FROM DISPLAY CONTROL OR      @ZA19274 01900003
*           STANDARD EBCDIC GRAPHICS- DCL TRTAB WILL NEED      @ZA19274 01910003
*           TO BE UPDATED TO REFLECT THIS.                     @ZA19274 01920003
*                                                                       01930002
*02*     RESTRICTIONS = NONE                                            01940002
*                                                                       01950002
*02*     REGISTER-CONVENTIONS = SEE THE DECLARATION OF REGISTERS IN THE 01960002
*        DECLARES SEGMENT.                                              01970002
*                                                                       01980002
*02*     PATCH-LABEL = PATCHLOC IS AN AREA OF 5% OF THE MODULE SIZE. IT 01990002
*        IS RESERVED FOR FUTURE USE.                                    02000002
*                                                                       02010002
*01*  MODULE-TYPE = CSECT                                               02020002
*                                                                       02030002
*02*     PROCESSOR = ASSEM                                              02040002
*                                                                       02050002
*02*     MODULE-SIZE = X'1317' BYTES                                    02055003
*                                                                       02070002
*02*     ATTRIBUTES = PAGED-LPA, ZERO PROTECT KEY, REENTERABLE,         02080002
*        SUPERVISOR MODE                                                02090002
*                                                                       02100002
*01*  ENTRY-POINT = IEAVMWTO                                            02110002
*                                                                       02120002
*                                                                       02130002
*02*     PURPOSE = THIS IS THE ONLY ENTRY POINT TO THE ROUTINE. IT      02140002
*        IS GIVEN CONTROL BY IEAVVWTO TO PROCESS A MULTI-LINE WTO       02150002
*        REQUEST.                                                       02160002
*                                                                       02170002
*02*     LINKAGE = IEAVMWTO IS CALLED BY IEAVVWTO USING STANDARD        02180002
*        SYSTEM LINKAGE CONVENTIONS.                                    02190002
*                                                                       02200002
*02*     INPUT = THE FOLLOWING REGISTERS ARE SET UP BY IEAVVWTO.        02210002
*        REG3 = ADDR OF THE CVT.                                        02220002
*        REG4 = ADDR OF THE TCB.                                        02230002
*        REG5 = ADDR OF THE SVRB                                        02240002
*        REG6 = ADDR OF THE WPL.                                        02250002
*        REG7 = ADDR OF THE ASCB.                                       02260002
*        REG10 = ADDR OF THE UCM                                        02270002
*        REG12 = ADDR OF THE XVSAV WORKAREA                             02280002
*        REG13 = ADDR OF THE CALLER'S SAVEAREA                          02290002
*        REG14 = RETURN ADDRESS                                         02300002
*        REG15 = ENTRY POINT ADDRESS                                    02310002
*                                                                       02320002
*        THE WPL HAS BEEN CHECKED FOR VALIDITY BY IEAVVWTO. AT ENTRY    02330002
*        WE ALSO KNOW THAT A MULTI-LINE WTOR HAS NOT BEEN ISSUED.       02340002
*                                                                       02350002
*        THE XVSAV AREA HAS BEEN SET UP BY IEAVVWTO IN THE FOLLOWING    02360002
*        MANNER:                                                        02370002
*        XVA8 = TIME TAKEN BY IEAVVWTO                                  02380002
*        XVDESCD = DESCRIPTOR CODES TO BE USED.                         02390002
*        XVRCSAVE = ROUTE CODES TO BE USED.                             02400002
*        XVMSGTYP = MESSAGE TYPE FIELD TO BE USED                       02410002
*        XVMSGLGH = LENGTH OF FIRST LINE IN WPL.                        02420002
*        XVD1PRIV = ON IF CALLER IS PRIVILEGED.                         02430002
*        XVD1PP   = ON IF CALLER IS A PROBLEM PROGRAM.                  02440002
*        XVD1AUTH = ON IF CALLER IS AUTHORIZED.                         02450002
*        XVD2RDC  = ON IF ROUTE/DESCRIPTOR CODES WERE FOUND IN THE WPL  02460002
*        XVD2MSGT = ON IF MSGTYPE FIELD WAS FOUND IN THE WPL.           02470002
*        XVD2VALD = ON                                                  02480002
*        XVCONID  = CONSOLE ID PASSED IN REG0 TO SVC 35.                02490002
*        SVWQEIDA = MSG ID PASSED IN REG 0 TO SVC 35.                   02500002
*                                                                       02510002
*02*     OUTPUT = THIS ROUTINE CREATES NO STREAM OR LIST OUTPUT.        02520002
*                                                                       02530002
*02*     REGISTERS-SAVED = THE CALLER'S REGISTERS ARE SAVED IN HIS      02540002
*        SAVE AREA.                                                     02550002
*                                                                       02560002
*02*     REGISTER-USAGE = THE REGISTER USAGE AND THE ASSOCIATED NAMES   02570002
*        ARE GIVEN IN THE FOLLOWING TABLE.                              02580002
*         REG  NAME                 USAGE                               02590002
*          0  RID       PARM REG FOR SVCS, WORK REG                     02600002
*             R0        WORK REG                                        02610002
*                                                                       02620002
*          1  R1        WORK REG                                        02630002
*             RPARM     WORK REG                                        02640002
*             RWQE      ADDR OF WQE                                     02650002
*             RPRFX     ADDR OF THE UCM PREFIX.                         02660002
*                                                                       02670002
*          2  RSSOB     ADDR OF SUBSYSTEM OPTIONS BLOCK,                02680002
*             RWORK2    WORK REG, ADDR OF MULTI-LINE PART OF WPL        02690002
*                                                                       02700002
*          3  RCVT      ADDR OF THE CVT                                 02710002
*             RCTR      COUNTER FOR HANDLING TEXT LENGTH                02720002
*                                                                       02730002
*          4  RTCB      ADDR OF THE TCB                                 02740002
*             RWPL2     ADDR OF TEXT LINE CURRENTLY BEING PROCESSED.    02750002
*                                                                       02760002
*          5  RWORK5    WORK REGISTER                                   02770002
*                                                                       02780002
*          6  RWPL      ADDR OF THE WPL                                 02790002
*                                                                       02800002
*          7  RASCB     ADDR OF THE ASCB                                02810002
*             RMINR     ADDR OF MINOR WQE                               02820002
*                                                                       02830002
*          8  RMAJR     ADDR OF THE MAJOR WQE                           02840002
*             COUNT     USED ONLY TO DEVELOP COUNT OF NUMBER OF LINES   02850002
*                       TO BE PROCESSED.                                02860002
*          9  RWORK9    WORK REG                                        02870002
*             LEN       USED IN TSTMLWTO SEGMENT AS PTR TO BYTE         02880002
*                       IN WPL TO BE TESTED BY REFERLEN.                02890002
*          10 UCMREG    BASE FOR UCM                                    02900002
*                       COMPLETION CODE FOR XMPOST             @ZA03242 02910003
*          11 RBASE     PROGRAM BASE                                    02920002
*                       ECB ADDR FOR XMPOST                    @ZA03242 02930003
*          12 XSAV      BASE FOR XVSAV AREA                             02940002
*                       ERRET ADDR FOR XMPOST                  @ZA03242 02950003
*          13 RWKREG    SAVE AREA BASE AND WORK REG                     02960002
*                       ADDR ASCB FOR XMPOST                   @ZA03242 02970003
*          14 RRETURN   WORK REG                                        02980002
*             R14       WORK REG                                        02990002
*                                                                       03000002
*          15 R15       WORK REG                                        03010002
*             RWORK15   WORK REG                                        03020002
*             RRET      WORK REG                                        03030002
*                                                                       03040002
*02*     REGISTERS-RESTORED = ALL OF THE CALLER'S REGISTERS ARE         03050002
*        RESTORED.                                                      03060002
*                                                                       03070002
*01*  EXIT-NORMAL = THIS MODULE HAS ONLY ONE EXIT POINT WHICH IS AT     03080002
*     THE END OF THE MODULE.                                            03090002
*                                                                       03100002
*02*     CONDITIONS = IEAVMWTO ALWAYS RETURNS TO ITS CALLER, IEAVVWTO.  03110002
*        IT RETURNS AFTER SERVICING THE MULTI-LINE REQUEST.             03120002
*                                                                       03130002
*02*     OUTPUT=THE RETURN TO IEAVVWTO IS TAKEN FOR SUCCESSFUL AND      03140002
*        UNSUCCESSFUL SERVICING OF THE MULTI-LINE REQUEST. THE OUTPUT   03150002
*        FOR A SUCCESSFUL SERVICING IS:                                 03160002
*         XVWQEID = 3 BYTE MESSAGE SEQUENCE NUMBER, RIGHT JUSTIFIED.    03170002
*         XVRETCOD = 0 THEN NOTHING FOUND IN ERROR.                     03180002
*                    4 AN ERROR WAS FOUND IN THE NUMBER OF LINES.       03190002
*                      MESSAGE WAS TRUNCATED TO TEN LINES AND LAST      03200002
*                      LINE SET TO DATA/END. OR                         03210002
*                      THE TEXT LENGTH FOR ONE LINE WAS LESS THAN 1.    03220002
*                      THE MESSAGE TRUNCATED AT THE PREVIOUS LINE.      03230002
*                                                                       03240002
*                   12 THE LINE TYPE FOR A LINE WAS INVALID. THE        03250002
*                      MESSAGE WAS TO THE LAST VALID LINE AND ITS       03260002
*                      LINE TYPE WAS SET TO DATA/END.                   03270002
*                                                                       03280002
*                   16 THE MLWTO HAD A WTP ROUTE CODE AND OTHER ROUTE   03290002
*                      CODES. THE WTP ROUTE CODE (ROUTE CODE 11)        03300002
*                      WAS IGNORED.                                     03310002
*                                                                       03320002
*        THE OUTPUT FOR AN UNSUCCESSFUL SERVICING IS:                   03330002
*        XVWQEID = 0. NO MESSAGE WAS PUT OUT.                           03340002
*        XVRETCOD = 4 -THE NUMBER OF LINES IN THE WPL WAS ZERO.         03350003
*                                                                       03352003
*                     -MESSAGE TEXT LENGTH FOR A LINE WAS      @ZA16869 03354003
*                      GREATER THAN 1; ALL LINES UP TO         @ZA16869 03356003
*                      ERROR LINE ARE PROCESSED                @ZA16869 03358003
*                                                              @ZA16869 03360003
*                   8 THE MESSAGE ID PASSED IN REG 0 DID NOT MATCH      03370002
*                     ANY ID FOR A WQE CURRENTLY IN THE SYSTEM.         03380002
*                     THIS OCCURS ONLY WHEN IEAVMWTO IS ATTEMPTING      03390002
*                     TO CONNECT NEW LINES TO AN EXISTING MESSAGE.      03400002
*                     THIS PROBLEM CAN ARISE IN THE FOLLOWING WAYS.     03410002
*                     1. REG 0 IS NOT ZERO FOR THE FIRST SERVICE        03420002
*                        REQUEST OF A MULTI-LINE WTO.                   03430002
*                                                                       03440002
*                     2. THE MULTI-LINE MSG WAS GOING TO A CONSOLE      03450002
*                        THAT ENCOUNTERED AN I/O ERROR. CONSOLE         03460002
*                        SWTICH DELETED THE MSG AS MULTI-LINE MSGS      03470002
*                        CANT BE SWITCHED.                              03480002
*                                                                       03490002
*                     3. THE USER LOST THE MESSAGE ID PASSED BACK       03500002
*                        IN REG 1 BY SVC 35.                            03510002
*                                                                       03520002
*                  12 THE NEW MULTI-LINE MSG CONSISTS OF ONLY AN        03530002
*                     END LINE.                                         03540002
*                                                                       03550002
*                  16 ROUTE CODE 11 (WTP) WAS THE ONLY ROUTE CODE       03560002
*                     SPECIFIED.                                        03570002
*                                                                       03580002
*                  20 THE MULTI-LINE MSG WAS TO BE SET TO HARD COPY     03590002
*                     ONLY.                                             03600002
*                                                                       03610002
*02*     RETURN-CODES = THE RETURN CODES ARE SET IN XVRETCOD AND        03620002
*        THEIR MEANING IS DESCRIBED ABOVE.                              03630002
*                                                                       03640002
*01*  EXIT-ERROR = THERE IS NO ERROR EXIT FROM IEAVMWTO. WHEN AN        03650002
*     ABEND CONDITION IS FOUND THE MODULE SETS XVD1PERR AND             03660002
*     RETURNS NORMALLY TO IEAVVWTO. IEAVVWTO WILL THEN ABEND THE        03670002
*     CALLER WITH A D23 ABEND CODE.                                     03680002
*                                                                       03690002
*                                                                       03700002
*02*     CONDITIONS = THE ERROR BIT, XVD1PERR, IS SET FOR THE           03710002
*        FOLLOWING REASONS.                                             03720002
*         1. NO SPACE COULD BE OBTAINED IN SUBPOOL 229 FOR THE          03730002
*            WORKAREA FOR IEAVMWTO.                                     03740002
*                                                                       03750002
*         2. THE WPL WASN'T LOCATED IN CORE THAT THE CALLER COULD       03760002
*            ACCESS.                                                    03770002
*                                                                       03780002
*         3. SPACE COULD NOT BE OBTAINED FOR A WQE FROM THE WQE         03790002
*            CELL POOL.                                                 03800002
*                                                                       03810002
*02*     RETURN-CODES = NONE                                            03820002
*                                                                       03830002
*01*  EXTERNAL-REFERENCES = SEE THE FOLLOWING                           03840002
*                                                                       03850002
*02*     ROUTINES = THIS MODULE CALLS SUBSYSTEM WTO EXIT VIA            03860002
*        THE IEFSSREQ MACRO.                                            03870002
*                                                                       03880002
*02*     DATA-AREAS = THE FOLLOWING EXTERNAL DATA AREAS ARE USED        03890002
*        OR REFERENCED BY THIS MODULE.                                  03900002
*        ASCBASID = MEMORY ID                                           03910002
*        CVTCRMN  = ADDR OF GETMAIN BRANCH ENTRY                        03920002
*        CVTBLDCP = ADDR OF BLD CPOOL ENTRY POINT                       03930002
*        CVTFRECL/CVTGETCL = ADDR OF GET/FREE CELL ROUTINE.             03940002
*        CVTRMBR = ADDR OF FREEMAIN ENTRY POINT.                        03950002
*        CVTVWAIT = ADDR OF BRANCH ENTRY TO WAIT.                       03960002
*        PSALITA = ADDR OF LOCK INTERFACE TABLE.                        03970002
*        TCBFLGS1 = BIT TCBFX IS SET TO PREVENT ASYNCHRONOUS EVENTS     03980002
*                   DURING A WAIT FOR A MINOR WQE.                      03990002
*        UCMASCB  = ADDR OF ASCB FOR COMMTASK'S MEMORY.                 04000002
*        UCMCMID  = MESSAGE SEQUENCE NUMBER.                            04010002
*        UCMOECB  = OUTPUT ECB FOR COMM TASK                            04020002
*        UCMSYST  = THIS BIT IS SET IF MLWTO WAS DELETED BY THE         04030002
*                   SUBSYSTEM.                                          04040002
*        UCMWQECP = WQE CELL POOL NUMBER                                04050002
*        UCMWQEND = ADDR OF LAST WQE ON THE CHAIN.                      04060002
*        UCMWQLM  = MAX NUMBER OF WQES ALLOWED.                         04070002
*        UCMWQNR  = CURRENT NUMBER OF WQES.                             04080002
*        UCMWTOQ  = ADDR OF START OF WQE CHAIN.                         04090002
*                                                                       04100002
*01*  TABLES = THE FOLLOWING INTERNAL TABLES ARE USED IN THIS           04110002
*     ROUTINE:                                                          04120002
*     LTABLE = A TABLE OF LINE LENGTHS FOUND IN THE WPL. THIS TABLE     04130002
*              IS USED FOR SECURITY REASONS. ONCE THE WPL HAS BEEN      04140002
*              CHECKED THAT IT LIES IN CALLERS STORAGE, THE LENGTHS     04150002
*              ARE ALL IN PROTECTED CORE AND CAN NOT BE MODIFIED BY     04160002
*              THE CALLER.                                              04170002
*    TRTAB     TABLE OF CHARACTERS USED TO INSURE PRINTABLE    @ZA19274 04173003
*              AND NON DISPLAY CONTROL CHARACTERS IN THE WQE   @ZA19274 04176003
*                                                                       04180002
*01*  MACROS = THE FOLLOWING SERVICES ARE USED. GETMAIN, FREEMAIN,      04190002
*     FREECELL, WAIT, IEFSSREQ, XMPOST, RETURN; MODESET, GETCELL,       04200003
*     BLDCPOOL, SETLOCK.                                                04210002
*                                                                       04220002
*     THE FOLLOWING MAPPING MACROS ARE USED. IHAWQE, IHACTM, IEZWPL,    04230002
*     IHAASCB, IEFJSSOB, IEFJESCT, IHAPSA, IKJRB, IKJTCB, CVT, IHASCVT, 04240002
*     IEZJSCB, IEECUCM.                                                 04250002
*                                                                       04260002
*02*     SERIALIZATION = THE LOCAL AND CMS LOCKS ARE USED TO SERIALIZE  04270002
*        THE RESOURCES USED IN THIS MODULE.                             04280002
*                                                                       04290002
*01*  CHANGE-ACTIVITY = Y02668, ZA03242, ZA08451, ZA14970, ZA14991,     04295003
*                       ZA19274,ZA20159,ZA29682                         04300003
*                                                                       04310002
*01*  MESSAGES = NONE                                                   04320002
*                                                                       04330002
*01*  ABEND-CODES = NONE                                                04340002
*                                                                       04350002
         MEND                                                           04360002
         MACRO                                                          04370002
         DATADEFS                                                       04380002
WORKAREA DSECT                                                   Y02893 04390002
SAVEREGS DS    19F                STANDARD SAVEAREA              Y02893 04400002
RBASESAV DS    F                  USED TO SAVE REG 11            Y02893 04410002
XVSAVSAV DS    F                  USED TO SAVE REG 12            Y02893 04420002
WKPARMAD DS    F                  SAVE ADDR OF CALLER'S WPL      Y02893 04430002
SVRBADDR DS    F                  ADDR OF CURRENT RB             Y02893 04440002
LINDEX   DS    F                  INDEX TO LTABLE                Y02893 04450002
LTABLE   DS    12C                SAVE TABLE FOR LINE LENGTHS    Y02893 04460002
* THE FIRST ENTRY IN LTABLE IS NEVER USED.                       Y02893 04470002
GETSAVE  DS    5F                 SAVEAREA FOR GETWQE ROUTINE    Y02893 04480002
SPLEXTAD DS    F                  ADDR OF WQE EXTENSION          Y02893 04490002
WAITSAVE DS    6F                 SAVE AREA FOR WIITWQE ROUTINE  Y02893 04500002
ASCBSAVE DS    F                  SAVE AREA FOIR ASCB ADDR.      Y02893 04510002
WPL2SAVE DS    F                  SAVEAREA FOR RWPL2             Y02893 04520002
MLPART   DS    F                  ADDR OF START OF MULTI LINE    Y02893 04530002
*                                 PART OF WPL.                   Y02893 04540002
TCBSAVE  DS    F                  ADDR OF CALLER'S TCB           Y02893 04550002
SUBSPARM DS    F                  PTS AT THE SUBSLIST            Y02893 04560002
SUBSLIST DS    9F                 CONTAINS THE SSOB & SSWT       Y02893 04570002
EPARM    DS    CL24               ESTAE PARM AREA                       04580002
UCMBPTR  DS    F                  ADDR OF THE UCM                       04590002
PARMPTR  DS    F                  ADDR OF RECOVERY PARM AREA            04600002
         CNOP  2,4                                                      04610002
RECSAVE  DS    H                  RESTORE MAP                           04620002
RECREGS  DS    16F                RESTORE AREA FOR RETRY                04630002
WRKLENG  EQU   *                                                 Y02893 04640002
WRKSIZE  EQU   WRKLENG-WORKAREA                                  Y02893 04650002
IEAVMWTO CSECT                                                   Y02893 04660002
         EJECT                                                          04670002
         IHAWQE DSECT=YES                                               04680002
         EJECT                                                          04690002
         IHACTM XV                                                      04700002
         EJECT                                                          04710002
         IHACTM WWB                                              Y02893 04720002
         EJECT                                                          04730002
         IHACTM FTPT                                                    04740002
         EJECT                                                          04750002
         IHAFRRS                                                        04760002
         EJECT                                                          04770002
         IEZWPL DSECT=YES                                               04780002
         EJECT                                                          04790002
         IHAASCB                                                 Y02756 04800002
         EJECT                                                          04810002
         IEFJSSOB  (WT),CONTIG=YES                               Y02757 04820002
         EJECT                                                          04830002
         IEFJESCT                                                Y02757 04840002
         EJECT                                                          04850002
         IHAPSA                                                  Y02751 04860002
         EJECT                                                          04870002
         IHAESTA                                                        04880002
         EJECT                                                          04890002
         IKJRB  DSECT=YES                                               04900002
         EJECT                                                          04910002
         IKJTCB  DSECT=YES                                              04920002
         EJECT                                                          04930002
         CVT   DSECT=YES,LIST=YES                                       04940002
         EJECT                                                          04950002
         IHASCVT LIST=YES                                               04960002
         EJECT                                                          04970002
         IEZJSCB                                                        04980002
         EJECT                                                          04990002
         IEECUCM FORMAT=NEW                                             05000002
         MEND                                                           05010002
         MACRO                                                          05020002
&LABEL   FREESAVE                 ,                              Y02893 05030002
         EJECT                                                          05040002
* START OF FREESAVE SEGMENT.                                     Y02893 05050002
*  INPUT - RWKREG(13) POINTS AT OUR WORK AREA.                   Y02893 05060002
*          FOUR + RWKREG CONTAINS A PTR TO CALLER'S SAVEAREA     Y02893 05070002
*                                                                Y02893 05080002
*  OUTPUT - OUR WORK AREA IS FREE'D.                             Y02893 05090002
*          RWKREG(13) POINTS AT THE CALLERS SAVE AREA.           Y02893 05100002
&LABEL   LR    RPARM,RWKREG       MOVE ADDR OF AREA TO REG1.     Y02893 05110002
         L     RID,WKFREECN       GET SUBPOOL AND SIZE PARM      Y02893 05120002
         L     RWKREG,FOUR(RPARM) RESTORE PTR TO CALLER'S AREA   Y02893 05130002
*        FREEMAIN R,LV=(0),A=(1)  FREE OUR AREA                  Y02893 05140002
         FREEMAIN R,LV=(0),A=(1)  FREE OUR AREA                  Y02893 05150002
* END OF FREESAVE SEGMENT                                        Y02893 05160002
         SPACE 2                                                        05170002
         MEND                                                           05180002
         MACRO                                                          05190002
&LABEL   POSTOECB                                                       05200002
         EJECT                                                          05210002
* POSTOECB SEGMENT                                                      05220002
* THIS SEGMENT POSTS THE UCMOECB USING A CROSS MEMORY POST.             05230002
        STM   R14,XSAV,SAVEREGS+12  SAVE REGS AROUND XMPOST    @ZA03242 05230303
        LR    RWORK9,RWKREG         SAVE SAVEAREA ADDRESS IN   @ZA03242 05230603
*                                   R9. REGS 9 AND 14 ARE THE  @ZA03242 05230903
*                                   ONLY ONES PRESERVED BY     @ZA03242 05231203
*                                   XMPOST.                    @ZA03242 05231503
         L     RUCM,UCMBPTR         SETUP UCM BASE REG         @ZA03242 05231803
         USING UCM,RUCM                                        @ZA03242 05232003
         SLR   R1,R1                SETUP REG1 AS BIT MASK SO  @ZA03242 05232203
         O     R1,HIBITON           THAT NO REFERENCES TO      @ZA03242 05232403
*                                   STORAGE NEED BE MADE AFTER @ZA03242 05233003
*                                   BASE REG IS UPDATED        @ZA03242 05233303
         L     XSAV,UCMWAKUP        ADDRESS OF ROUTINE TO GET  @ZA03242 05233603
*                                   CONTROL IF XMPOST FAILS    @ZA03242 05233903
         OR    XSAV,R1              INDICATE ERRET IS TO RUN   @ZA03242 05234203
*                                   MASTER SCHEDULER MEMORY    @ZA03242 05234503
         L     RWKREG,UCMASCB       ASCB OF MEMORY CONTAINING  @ZA03242 05234803
*                                   ECB TO POST                @ZA03242 05235103
         SLR   UCMREG,UCMREG        R10 CONTAINS COMPLETION    @ZA03242 05235403
*                                   CODE TO POST WITH          @ZA03242 05235703
         LA    RBASE,UCMOECB        ADDR OF ECB TO BE POSTED   @ZA03242 05236003
         OR    RBASE,R1             END OF LIST BIT ON         @ZA03242 05236303
         L     R15,CVTPTR                                      @ZA03242 05236603
         USING CVTMAP,R15                                      @ZA03242 05236703
         L     R15,CVT0PT01         BRANCH ENTRY ADDR OF XMPOST@ZA03242 05236903
         DROP  R15                                                      05237003
         BALR  R14,R15              DO XMPOST                  @ZA03242 05237203
         LR    RWKREG,RWORK9        RESTORE SAVEAREA ADDRESS   @ZA03242 05237503
         LM    R14,XSAV,SAVEREGS+12 RELOAD REGS                @ZA03242 05237803
         DROP  RUCM                                                     05238103
* END OF POSTOECB SEGMENT                                               05350002
         SPACE 2                                                        05360002
         MEND                                                           05370002
         MACRO                                                          05380002
&LABEL   GETMAJ                   ,                              Y02893 05390002
         EJECT                                                          05400002
*  GETMAJ SEGMENT                                                Y02893 05410002
*  THIS SEGMENT GETS A MAJOR WQE                                 Y02893 05420002
*  INPUT - UNCMWQNR, UCMWQLM, XVD1PRIV, XVD2CON,                 Y02893 05430002
*  OUTPUT - RWQE PTS AT THE MAJOR WQE IF ONE WAS AVAILABLE       Y02893 05440002
*           RWQE IS ZERO IF ONE WASN'T AVAILABLE.                Y02893 05450002
*           THE WQE IS ZEROED OUT                                Y02893 05460002
IEAJGET0 EQU   *                                                 Y02893 05470002
*  CHECK IF TWO WQES ARE AVAILABLE                               Y02893 05480002
&LABEL   L     RUCM,UCMBPTR       GET UCM ADDRESS                       05490002
         USING UCM,RUCM                                                 05500002
         LH    RWORK2,UCMWQNR     NUMBER  OF WQES USED           Y02893 05510002
         AH    RWORK2,KTWO        TWO  WQES NEEDED               Y02893 05520002
         CH    RWORK2,UCMWQLM     COMPARE WITH LIMIT ON WQES     Y02893 05530002
         BNH   IEAJGET1           WQES AVAIL, DON'T WAIT         Y02893 05540002
         DROP  RUCM                                                     05550002
*  TWO WQES AREN'T AVAILABLE, CHECK IF USER IS PRIVILEGED.       Y02893 05560002
         TM    XVD1,XVD1PRIV      IS CALLER PRIVILEGED.          Y02893 05570002
         BO    IEAJGET1           YES, GET WQES.                 Y02893 05580002
*  USER ISN'T PRIVILEGED. WAIT FOR WQES TO BE FREED.             Y02893 05590002
         BAL   RRETURN,WAITWQE    WAIT FOR A WQE                 Y02893 05600002
         B     IEAJGET0           CHECK IF TWO WQES ARE AVAIL.   Y02893 05610002
IEAJGET1 BAL   RRETURN,GETWQE     GET AND ZERO A WQE.            Y02893 05620002
* CHECK IF WQE WAS AVAILABLE                                     Y02893 05630002
         LTR   RWQE,RWQE          IS ADDR RETURNED               Y02893 05640002
         BNZ   IEAJGET2           YES, STORE ADDR OF MAJOR       Y02893 05650002
* WQE WASN'T AVAILABLE. SET ERROR AND STOP FLAGS                 Y02893 05660002
         OI    XVX1,XVX1STOP      STOP PROCESSING WPL.           Y02893 05670002
         OI    XVD1,XVD1PERR      ABEND USER.                    Y02893 05680002
         B     IEAJGET3           SKIP TO CHECK IF WWB ALLOCATED.Y02893 05690002
* SET UP MAJOR FOR PROCESSING                                    Y02893 05700002
IEAJGET2 ST    RWQE,XVCMAJOR      SAVE ADDR OF MAJOR             Y02893 05710002
         OI    XVD3,XVD3BLDJ      SET BUILD MAJOR FLAG           Y02893 05720002
* CHECK IF A WWB HAS BEEN OBTAINED, IF SO, THEN FREE IT.         Y02893 05730002
IEAJGET3 CLC   XVWWB,KZERO        IS WWB ADDR STILL ZERO         Y02893 05740002
         BZ    IEAJGET4           YES, SKIP FREEING WWB.         Y02893 05750002
*  FREE THE WWB POINTED AT BY XVWWB.                             Y02893 05760002
         L     RWORK2,XVWWB       LOAD ADDR OF OUR WWB           Y02893 05770002
         USING WWB,RWORK2                                        Y02893 05780002
         L     RPARM,WWBFWDPT     PT AT NEXT WWB FORWARD ON CHN. Y02893 05790002
* CONNECT FORWARD WWB TO BACK WWB                                Y02893 05800002
         MVC   WWBBCKPT-WWB(FOUR,RPARM),WWBBCKPT                 Y02893 05810002
         L     RPARM,WWBBCKPT                                    Y02893 05820002
* CONNECT BACK WWB TO FORWARD WWB.                               Y02893 05830002
         MVC   WWBFWDPT-WWB(FOUR,RPARM),WWBFWDPT                 Y02893 05840002
         DROP  RWORK2                                            Y02893 05850002
*  OUR WWB IS NOW OUT OF THE CHAIN. FREE IT                      Y02893 05860002
         L     RID,WWBPARM        GET SUBPOOL # AND SIZE         Y02893 05870002
         LR    RPARM,RWORK2       ADDR OF WWB                    Y02893 05880002
*        FREEMAIN R,LV=(0),A=(1),BRANCH=YES  FREE THE WWB.       Y02893 05890002
         FREEMAIN R,LV=(0),A=(1),BRANCH=YES  FREE THE WWB.       Y02893 05900002
         MVC   XVWWB,KZERO        SET WWB ADDR TO ZERO.          Y02893 05910002
IEAJGET4 EQU   *                                                 Y02893 05920002
* END OF GETMAJ SEGMENT                                          Y02893 05930002
         SPACE 2                                                        05940002
         MEND                                                    Y02893 05950002
         MACRO                                                          05960002
&LABEL   FREEMAJ                  ,                              Y02756 05970002
         EJECT                                                          05980002
*  FREEMAJ SEGMENT                                               Y02756 05990002
*  THIS SEGMENT FREES THE MAJOR WQE OBTAINED BY BLDMAJ.          Y02756 06000002
*  INPUT XVCMAJOR CONTAINS THE WQE ADDR.                         Y02756 06010002
&LABEL   L     RUCM,UCMBPTR                                             06020002
         USING UCM,RUCM                                                 06030002
         L     RID,UCMWQECP       GET WQE CELL POOL ID           Y02756 06040002
         L     RPARM,XVCMAJOR     ADDR OF WQE CELL               Y02756 06050002
*        FREECELL  CPID=(0),CELL=(1),BRANCH=YES                  Y02756 06060002
         FREECELL  CPID=(0),CELL=(1),BRANCH=YES                  Y02756 06070002
*  CHECK IF THIS WQE WAS THE LAST ONE IN AN EXTENSION. IF SO FREEY02756 06080002
*  THE EXTENSION.                                                Y02756 06090002
         CH    RRET,K20           IS EXTENSION EMPTY             Y02756 06100002
         BNE   IEAJFRE2           NO, SKIP FREEING EXTENSION     Y02756 06110002
*  YES, THE PARAMETERS TO FREE THE EXTENSION WERE SET UP BY      Y02756 06120002
*  FREECELL                                                      Y02756 06130002
*        FREEMAIN  R,LV=(0),A=(1),BRANCH=YES                     Y02756 06140002
         FREEMAIN  R,LV=(0),A=(1),BRANCH=YES                     Y02756 06150002
IEAJFRE2 LH    RPARM,UCMWQNR      DECREMENT COUNT OF WQES        Y02756 06160002
         BCTR  RPARM,ZERO                                        Y02756 06170002
         STH   RPARM,UCMWQNR                                     Y02756 06180002
         MVC   XVCMAJOR,KZERO     INSURE MAJOR ADDR IS ZERO FOR         06190002
         DROP  RUCM                                                     06200002
*                                 RECOVERY REASONS.                     06210002
* END OF FREEMAJ SEGMENT                                         Y02893 06220002
         SPACE 2                                                        06230002
         MEND                                                           06240002
         MACRO                                                          06250002
&LABEL   SUBSEXIT                 ,                            @Y02668P 06260003
         EJECT                                                          06270002
*                                                                Y02757 06280002
*   SUBSYSTEM EXIT SEGMENT                                       Y02757 06290002
*   THIS SEGMENT WILL PASS THE MAJOR AND MINOR LINES TO THE      Y02757 06300002
*   SUBSYSTEM EXIT. THE SUBSYSTEM MAY CHANGE THE MSG AND/OR ASK  Y02757 06310002
*   THAT THE MESSAGE BE DELETED.                                 Y02757 06320002
*                                                                Y02757 06330002
*   INPUT - RMAJR IS ADDR OF MAJOR WQE                           Y02757 06340002
*           XVCMINOR CONATAINS THE ADDR OF THE MINOR WQE         Y02757 06350002
*           XVC3BLD1 AND BLD2 WILL BOTH BE ON IF THE MAJOR WQE   Y02757 06360002
*           WAS JUST BUILT                                       Y02757 06370002
*   OUTPUT- IF THE SUBSYSTEM ASKS TO DELETE THE MAJOR WQE THEN   Y02757 06380002
*           XVD2DELW WILL BE TURNED ON AND WMJMMAJD WILL BE SET  Y02757 06390002
*           ON IN THE MAJOR WQE                                  Y02757 06400002
*                                                                Y02757 06410002
*           THE MINOR MAY ALSO BE ASKED TO BE DELETED, BUT THE   Y02757 06420002
*           REQUEST WILL ONLY BE HONORED IF WMJMMAJD IS ON.      Y02757 06430002
*                                                                Y02757 06440002
*  FREE THE LOCKS                                                Y02757 06450002
&LABEL   BAL   RRET,FRELCKS       CALL THE FRELCKS ROUTINE       Y02751 06460002
* SET UP RETRY ADDRESS IN CASE SUBSYSTEM EXIT HAS PROBLEMS.             06470002
         L     R1,PARMPTR         GET ADDR OF PARM LIST                 06480002
         USING PARMLIST,R1                                              06490002
         LA    RWORK2,IEAHSSRT        RETRY ADDR                        06500002
         ST    RWORK2,PARMRTAD        SWITCH ADDR IN ESTAE PARMLIST     06510002
         MVI   PARMFTPT,FTSSOB    SET FOOTPRINT                         06520002
         STM   R0,R15,RECREGS     SAVE THE REGS AT THIS POINT           06530002
         DROP  R1                                                       06540002
*  SET UP SSOB AND SSWT                                          Y02757 06550002
         LA    RSSOB,SUBSLIST     BUILD BLOCKS IN OUR CORE.      Y02757 06560002
         ST    RSSOB,SUBSPARM     BUILD PARM LIST PTR            Y02757 06570002
         USING SSOB,RSSOB                                        Y02757 06580002
         MVC   SSOBID,IDCONS      IDENTIFY BLOCK AS AN SSOB      Y02757 06590002
         LA    R1,SSOBHSIZ        LENGTH OF SSOB                 Y02757 06600002
         STH   R1,SSOBLEN         PUT INTO SSOB LENGTH FIELD     Y02757 06610002
         LA    R1,SSOBWTO         SHOW THAT THIS CALL IS FOR A   Y02757 06620002
         STH   R1,SSOBFUNC        WTO                            Y02757 06630002
         SR    RWORK5,RWORK5      CLEAR REG FOR ZEROING FIELDS   Y02757 06640002
         ST    RWORK5,SSOBSSIB    NO SSIB FOR THIS CALL          Y02757 06650002
         ST    RWORK5,SSOBRETN    INSURE RETN IS INITIALLY ZERO  Y02757 06660002
         LA    R1,SSWTBGN         POINT SSOB AT SSWT             Y02757 06670002
         ST    R1,SSOBINDV                                       Y02757 06680002
         LA    R1,SSWTSIZE        PUT IN SIZE OF SSWT            Y02757 06690002
         STH   R1,SSWTLEN                                        Y02757 06700002
         ST    RMAJR,SSWTWQE      PUT IN ADDR OF MAJOR           Y02757 06710002
         ST    RWORK5,SSWTORE     NO ORE THIS TRIP               Y02757 06720002
         TM    XVD3,XVD3BLD1+XVD3BLD2  MAJOR WQE                 Y02757 06730002
         BNO   IEAHMINS                                          Y02757 06740002
         ST    RWORK5,SSWTMIN     NO MINOR YET                   Y02757 06750002
         B     IEAHSSGO                                          Y02757 06760002
* RETRY ROUTINE IF SUBSYSTEM EXIT ERROR REACHED ESTAE.                  06770002
IEAHSSRT MVC   SSOBRETN,KZERO     CLEAR RETURN CODE FROM SUBSYSTEM      06780002
         L     R1,PARMPTR                                               06790002
         USING PARMLIST,R1                                              06800002
         MVC   PARMRTAD,KZERO     CLEAR RETRY ADDR                      06810002
         DROP R1                                                        06820002
         B     IEAHLOCK                                                 06830002
IEAHMINS MVC   SSWTMIN,XVCMINOR   MOVE IN ADDR OF MINOR          Y02757 06840002
IEAHSSGO LA    RPARM,SUBSPARM     PT AT PARM LIST POINTER        Y02757 06850002
*        IEFSSREQ                 ,CALL THE SUBSYSTEM            Y02757 06860002
         IEFSSREQ                 ,CALL THE SUBSYSTEM            Y02757 06870002
         LR    RWORK5,RRET     SAVE RETURN INDICATOR FROM EXIT @Y02668P 06880003
* SET THE LOCKS AGAIN                                            Y02751 06890002
IEAHLOCK BAL   RRET,SETLCKS                                      Y02751 06900002
*CHECK TO SEE IF THIS WQE IS FOR A MINOR                         Y02757 06910002
         TM    XVD3,XVD3BLD1+XVD3BLD2  BLDING MAJOR              Y02757 06920002
         BNO   IEAHSUSP           NO, TURN OFF SUSPEND FLAG    @ZM30432 06930003
*CHECK IF SYBSYSTEM WANTS MESSAGE DELETED                        Y02757 06940002
* IF THE EXIT WAS SUCCESSFUL THEN REG 15 WAS ZERO ON RETURN FROM Y02893 06950002
* THE SUBSYSTEM. CHECK REG1 WHICH HAS RETURN INDICATION.         Y02893 06960002
         LTR   RWORK5,RWORK5         WAS EXIT SUCCESSFUL       @Y02668P 06970003
         BNZ   IEAHSUSP         NO CHECK IF USER WANTS MSG OUT @Y02668P 06980003
*CHECK FOR DELETION REQUEST                                      Y02757 06990002
         LA    RWORK5,SSWTNDSP    DON'T DISPLAY MESSAGE          Y02757 07000002
         CL    RWORK5,SSOBRETN    DID SUBSYSTEM ASK DON'T DISPLAYY02757 07010002
         BNZ   IEAHSUSP           NO CHECK USER                @Y02668P 07020003
         DROP  RSSOB                                             Y02893 07030002
         USING WMJMEXT,RMAJR      SET ADDRESSING TO MAJOR        Y02893 07080002
* NOW SET UP THE FLAGS SO THAT THIS MLWTO IS DELETED AND SENT    Y02893 07100002
* TO HARDCOPY.                                                   Y02893 07110002
         OI    WMJMECBF,WMJMMAJD  MAJOR IS DELETED               Y02757 07120002
* SET UP ADDRESSABILITY FOR UCMPREFIX                            Y02893 07130002
         L     RPRFX,UCMBPTR      MOVE OVER ADDR OF UCM          Y02893 07140002
         SH    RPRFX,KFOUR        PT AT UCMPRFX PTR              Y02893 07150002
         L     RPRFX,0(RPRFX)     PICK UP UCMPRFX PTR            Y02893 07160002
         USING UCMPRFX,RPRFX      SET ADDRESSABILITY             Y02893 07170002
         OI    UCMSFLG2,UCMSYSI  SET HOUSEKEEEPING IS NEEDED FLG Y02893 07180002
         OI    WMJMBUF,WMJMBUFE  MARK WQE AS SERVICED          @Y02668P 07190003
* CHECK TO SEE IF THE SUBSYSTEM HAS SPECIFIED HARDCOPY         @Y02668P 07192003
* BYPASS.                                                      @Y02668P 07194003
         TM    WMJMCS2,WMJMCS2F  HARDCOPY BYPASS SET?          @Y02668P 07196003
         BNO   IEAHHCRD          SET H.C. BITS                 @Y02668P 07198003
         NI    WMJMDSP,X'FF'-WMJMDSPB IND. DO NOT H.C.         @Y02668P 07200003
         B     IEAHSUSP          TURN OFF SUSPEND MODE         @Y02668P 07202003
IEAHHCRD OI    WMJMBUF,WMJMBUFC  IND. READY FOR H.C.           @Y02668P 07204003
         OI    WMJMDSP,WMJMDSPB  IND. SEND TO H.C.             @Y02668P 07206003
         B     IEAHSUSP          TURN OFF SUSPEND MODE         @Y02668P 07208003
         DROP  RPRFX              ALL DONE WITH PREFIX ADDRESS   Y02893 07220002
*GET RID OF UNPRINTABLE AND NON DISPLAY CHARACTERS IN THE      @ZA19274 07226003
* WQE IF THE USER IS A PROBLEM PROGRAM                         @ZA19274 07227003
IEAHSUSP EQU   *                                               @ZA19274 07228003
         TM    XVD1,XVD1PP    IS CALLED A P/P                  @ZA19274 07229003
         BZ    IEAHTRND       NO DO NOT TRANSLATE              @ZA19274 07230003
         TM    XVD3,XVD3BLD1+XVD3BLD2   IS IT A MAJOR          @ZA19274 07231003
         BNO   IEAHTRMI       IF NOT GO DO MINOR               @ZA19274 07232003
         SR    R1,R1            HANDLE MAJOR TEXT              @ZA19274 07233003
         LH    R1,WMJMTXTL      LENGTH OF MAJOR TEXT           @ZA19274 07234003
         BCTR  R1,0             DECREASE FOR EXEC              @ZA19274 07235003
         LA    R15,WMJMTXT      TEXTADDR                       @ZA19274 07236003
         EX    R1,TRINST                                       @ZA19274 07237003
         B     IEAHTRND      DONE WITH MAJOR WAIT FOR MINOR    @ZA19274 07238003
IEAHTRMI SR    R1,R1       DO MINOR                            @ZA19274 07239003
         DROP  RMAJR                                           @ZA19274 07239503
         USING WMNMEXT,RMINR                                   @ZA19274 07240003
         IC    R1,WMNMTL1    LENGTH OF 1ST MINOR TEXT          @ZA19274 07241003
         BCTR  R1,0          DECREASE FOR EXEC                 @ZA19274 07242003
         LA    R15,WMNMTXT1 START OF TEXT                      @ZA19274 07243003
         EX    R1,TRINST     TRANSLATE IT                      @ZA19274 07244003
         TM    WMNMML2,WMNMML2H  IS 2ND PRESENT                @ZA19274 07245003
         BO    IEAHTRND      END IF NOT                        @ZA19274 07246003
         IC    R1,WMNMTL2    PICK UP LENGTH                    @ZA19274 07247003
         BCTR  R1,0          DEC FOR EXEC                      @ZA19274 07248003
         LA    R15,WMNMTXT2  ADDRESS OF TEXT                   @ZA19274 07249003
         EX    R1,TRINST                                       @ZA19274 07250003
         DROP  RMINR                                           @ZA19274 07255003
         USING WMJMEXT,RMAJR                                   @ZA19274 07256003
IEAHTRND NI    WMJMDSP,X'FF'-WMJMDSPG TURN OFF SUSPEND BIT     @ZA19274 07286003
* FREE THE LOCKS                                                 Y02751 07290002
         BAL   RRET,FRELCKS                                      Y02751 07300002
* END OF HASPEXIT SEGMENT                                        Y02757 07310002
         SPACE 2                                                        07320002
         MEND                                                           07330002
         MACRO                                                          07340002
         INITIAL                  ,                              Y02893 07350002
         EJECT                                                          07360002
* SET UP AND INITIALIZE OUR SAVEAREA                             Y02893 07370002
IEAVMLWO SAVE  (14,12)            SAVE CALLERS REGISTERS         Y02893 07380002
         USING RBBASIC,RWORK5                                    Y02893 07390002
         LA    XSAV,RBEXSAVE      GET ADDR OF EXTENDED SAVEAREA  Y02893 07400002
         DROP  RWORK5                                            Y02893 07410002
         LR    RBASE,RRET         RRET(15) CONTAINS ENTRY POINT  Y02893 07420002
         USING IEAVMLWO,RBASE                                    Y02893 07430002
         USING XVSAV,XSAV                                               07440002
*        MODID                                                   Y02893 07450002
         MODID                                                   Y02893 07460002
*  ZERO OUT THE XVX FLAGS FILED SO THAT XVX1STOP BIT CAN BE USED.Y02893 07470002
         MVC   XVX,KZERO        XVX HAS R/D CODES FROM USER EXIT Y02893 07480002
* NOW GET SPACE FOR SAVE AREA AND WORK AREA                      Y02893 07490002
         L     RID,WKSIZE         GET SIZE OF WORK AREA          Y02893 07500002
         L     RPARM,WKSUBPL      GET SUBPOOL NUMBER OF WORKAREA Y02893 07510002
*        GETMAIN  RC,LV=(0),SP=(1) GET SPACE FOR WORKAREA        Y02893 07520002
         GETMAIN  RC,LV=(0),SP=(1) GET SPACE FOR WORKAREA        Y02893 07530002
* CHECK IF GETMAIN WAS SUCCESSFUL. IF NOT SET ERROR AND STOP BITSY02893 07540002
         LTR   RRET,RRET          CHECK GETMAINS RETURN CODE     Y02893 07550002
         BZ    IEAVSAVE           CONTINUE IF NO RETURN CODE     Y02893 07560002
* GETMAIN WAS NOT SUCCESSFUL                                     Y02893 07570002
         OI    XVD1,XVD1PERR      SET ABEND ERROR CONDITION      Y02893 07580002
         OI    XVX1,XVX1STOP      STOP PROCESSING MLWTO          Y02893 07590002
         B     IEAVGOBK                                          Y02893 07600002
IEAVSAVE ST    RPARM,EIGHT(RWKREG) PUT ADDR OF OUR SAVEAREA IN   Y02893 07610002
*                                  CALLERS SAVEAREA.             Y02893 07620002
         ST    RWKREG,FOUR(RPARM) POINT OUR AREA AT CALLER'S     Y02893 07630002
         LR    RWKREG,RPARM       LOAD ADDR OF OUR SAVEAREA      Y02893 07640002
         USING WORKAREA,RWKREG    SET ADDRESSABILITY FOR OUR AREAY02893 07650002
         ST    RWPL,WKPARMAD      SAVE ADDR OF WPL IN WKAREA     Y02893 07660002
* SET UP SECOND BASE REGISTER FOR THIS MODULE                           07670002
         ST    UCMREG,UCMBPTR     SAVE ADDR OF THE UCM IN BASE PTR      07680002
         LA    RBASE2,K4095(,RBASE)  SET UP SECOND BASE REG             07690002
         USING    IEAVMLWO+4095,RBASE2                                  07700002
* ZERO OUT XVWWB FOR ADDR OF WWB                                 Y02893 07710002
         MVC   XVWWB,KZERO        MOVE IN A WORD OF ZEROS.       Y02893 07720002
* SAVE USER'S ASCB ADDR (REG 7) IN OUR SAVEAREA.                 Y02893 07730002
         ST    RASCB,ASCBSAVE                                    Y02893 07740002
         ST    RTCB,TCBSAVE       SAVE TCB ADDR                  Y02893 07750002
* SAVE THE PTR TO THE CURRENT RB.                                Y02893 07760002
         ST    RWORK5,SVRBADDR    ADDR OF SVRB IN REG5 IS INPUT  Y02893 07770002
* SET INDEX TO LENGTH TABLE TO TWO.                              Y02893 07780002
         LA    RPARM,TWO                                         Y02893 07790002
         ST    RPARM,LINDEX                                      Y02893 07800002
* CHECK FOR P/P USER OF MLWTO                                    Y02893 07810002
IEAVMLWS TM    XVD1,XVD1PP        IS USER A PROBLEM PROGRAM      Y02893 07820002
         BZ    IEAVTCON           NO, GO CHECK FOR MSG ID        Y02893 07830002
* P/P USERS CAN'T CONNECT MINOR LINES TO THE MAJOR WQE           Y02893 07840002
* WE DO WANT TO CHECK XVD1PP AND NOT XVD1AUTH TO INSURE REG 0    Y02893 07850002
* ISN'T AN IMPLIED PARAMETER TO SVC 35.                          Y02893 07860002
         XC    XVWQEIDA(THREE),XVWQEIDA   ZERO WQE ID                   07870002
         B     IEAVSETE           SKIP AROUND CONNECTING PROCES  Y02893 07880002
* IF NOT PROBLEM PROGRAM, INDICATE PRIVILEGED TASK TO AVOID     YM06331 07882002
* MLWTO HANGUP BECAUSE OF UNAVAILABLE WQE'S.                    YM06331 07884002
IEAVTCON OI    XVD1,XVD1PRIV        INDICATE PRIVILEGED TASK    YM06331 07886002
         CLC   XVWQEIDA,KZERO       CALLER CONNECTING                   07893002
         BE    IEAVSETE           NO, THE MSG ID FIELD IS EMPTY  Y02893 07900002
         OI    XVD2,XVD2CON       YES, INDICATE CONNECTING       Y02893 07910002
* SET UP THE ESTAE PROTECTION FOR THIS MODULE                           07920002
IEAVSETE XC    EPARM(L'EPARM),EPARM    CLEAR THE ESTAE PARM LIST        07930002
         L     RUCM,UCMBPTR                                             07940002
         USING UCM,RUCM                                                 07950002
         L     RWORK2,UCMFRRAD         GET RECOVERY MODULES ADDR        07960002
         LA    COUNT,EPARM       GET ADDR OF ESTAE'S PARM AREA          07970002
         MVC   SUBSLIST(ESTALEN),ELIST   MOVE IN ESTAE PARM LIST        07980002
         LA    RPARM,SUBSLIST     GET ADDR OF THE LIST                  07990002
         DROP  RUCM                                                     08000002
*        ESTAE (RWORK2),CT,PARAM=(COUNT),RECORD=YES,MF=(E,(1))          08010002
         ESTAE (RWORK2),CT,PARAM=(COUNT),RECORD=YES,MF=(E,(1))          08020002
         LA    RWORK2,EPARM            GET ADDR OF PARMLIST AREA        08030002
         ST    RWORK2,PARMPTR     PT TO PARM AREA                       08040002
         USING PARMLIST,RWORK2                                          08050002
         LA    RPARM,IEAVRETY     MOVE IN RETRY ADDRESS                 08060002
         ST    RPARM,PARMRTAD                                           08070002
         LA    RPARM,RECSAVE      ADDR OF REG SAVE AREA                 08080002
         ST    RPARM,PARMRGAD     SET ESTAE PARM LIST PTR TO SAVEAREA   08090002
         MVC   PARMID,MODULEID    IDENTIFY MULE THAT CAUSED PROBLEM     08100002
         MVC   RECSAVE,ALLREGS    RELOAD ALL REGS ON RETRY              08110002
         STM   R0,R15,RECREGS     SAVE REGS FOR A RETRY                 08120002
         DROP  RWORK2                                                   08130002
IEAVGOBK EQU   *                                                 Y02893 08140002
*  END OF INITIAL SEGMENT                                        Y02893 08150002
         SPACE 2                                                        08160002
         MEND                                                           08170002
         MACRO                                                          08180002
         CLNUP                                                          08190002
* MLWTO CLEANUP ROUTINE.                                                08200002
* THIS ROUTINE GETS CONTROL IF THERE IS AND ERROR UNDER THE             08210002
* FRR PROTECTION.  IF SO, THEN WE WERE BUILDING A MAJOR OR MINOR        08220002
* WQE AND NO ERROR WAS EXPECTED. THIS ROUTINE WILL INSURE THAT          08230002
* THE SUSPENDED BIT IS TURNED OFF IN THE MAJOR WQE AND WILL LET         08240002
* THE ERROR CONTINUE.                                                   08250002
*                                                                       08260002
* INPUT                                                                 08270002
*  REG2 PTS AT THE FRR PARM LIST                                        08280002
*  REG 13 PTS AT CALLERS REG SAVE AREA                                  08290002
*  REG 14-15 ARE THE RETURN AND ENTRY REGS                              08300002
*  PARMRGAD IN THE PARM AREA IS THE ADDR OF OUR REG RESTORE AREA        08310002
*  REGS 3,4,6,7,10,11,12,13 ARE VALID IN THE RESTORE AREA               08320002
*                                                                       08330002
MWTOCLNP SAVE  (14,12),,*         SAVE CALLERS REGS                     08340002
         USING *,R15                                                    08350002
         USING PARMLIST,RWORK2                                          08360002
         LR    R0,RWKREG          MOVE CALLERS SAVEAREA PTR             08370002
         L     RPARM,PARMRGAD                                           08380002
         LM    RCVT,RWKREG,14(RPARM) RELOAD REG 3 TO 13 FROM REG SAVE   08390002
         DROP  R15                OUR BASE IS NOW SET UP                08400002
         L     RPARM,XVCMAJOR     GET ADDR OF MAJOR WQE                 08410002
         LTR   RPARM,RPARM        IS THER A MAJOR WQE                   08420002
         BZ    IEAVCLOT           IF NOT RETURN TO FRR                  08430002
* IF THERE IS A MAJOR WQE, THEN IT SHOULD BE ON THE WQE QUEUE.          08440002
* INSURE THAT IT ISNT IN THE SUSPENDED STATE.                           08450002
         USING WMJM,RPARM                                               08460002
         NI    WMJMDSP,X'FF'-WMJMDSPG TURN OFF SUSPEND BIT              08470002
* THE MAJOR WILL BE CLEANED UP BY IEAVMED2 AS LONG AS THE SUSPEND       08480002
* BIT IS OFF.                                                           08490002
IEAVCLOT LR    RWKREG,R0          RESTORE CALLERS SAVE AREA PTR         08500002
         RETURN (14,12)           RETURN TO CALLER                      08510002
         DROP  RPARM                                                    08520002
         DROP  RWORK2                                                   08530002
         MEND                                                           08540002
         MACRO                                                          08550002
         TSTMLWTO                 ,                              Y02893 08560002
         EJECT                                                          08570002
*                                                                       08580002
* TESTMLWTO SEGMENT WILL INSURE THAT THE ENTIRE PARM LIST        Y02893 08590002
* IS IN CALLER'S STORAGE. IT ALSO CHECKS THE LINE TYPES          Y02893 08600002
* FOR CORRECTNESS.                                               Y02893 08610002
*                                                                       08620002
TSTMLWTO EQU   *                                                        08630002
         LR    LEN,RWPL           ADDR TO BE TESTED              Y02893 08640002
* COMPUTE ADDR OF WPLLTF FIELD                                   Y02893 08650002
IEASLEN3 LA    LEN,THREE(LEN)   INCREMENT TO TEST MLWTO                 08660002
IEASMSGL LA    RWORK2,FOUR      LOAD LGTH OF FIRST PART OF WPL   Y02893 08670002
* SET LEN TO POINT TO LAST BYTE IN MESSAGE PART OF WPL           Y02893 08680002
         SR    LEN,RWORK2     LEN=RWPL-4                         Y02893 08690002
         AH    LEN,XVMSGLGH       + (MSGLEN+4) +3                Y02893 08700002
         TM    XVD2,XVD2MSGT   MSG TYPE FIELD PRESENT            Y02893 08710002
         BO    IEASDRCP        YES, INCR LEN TO MSGTYP FLD       Y02893 08720002
* NO, CHECK FOR PRESENCE OF ROUTING AND DESCRIPTOR CODES.        Y02893 08730002
         TM    XVD2,XVD2RDC   ROUT/DESC CODES PRESENT            Y02893 08740002
         BZ    IEASSLEN       NO, ALL DONE COMPUTING LEN VALUE   Y02893 08750002
* YES INCREMENT LEN TO POINT AT THE LAST BYTE OF ROUTE CODES.    Y02893 08760002
         LA    LEN,FOUR(LEN)        +L(ROUTE AND DESC CODES)     Y02893 08770002
         B     IEASSLEN                                                 08780002
* SET LEN TO POINT AT LAST BYTE OF MSGTYPE FIELD.                Y02893 08790002
IEASDRCP LA    LEN,SIX(LEN)       +L(ROUTE/DESC CODES&           Y02893 08800002
*                                 MSGTYPE FIELDS)                Y02893 08810002
         TM    XVD0,XVD0QID       CHK IF QID PRESENT IN WPL      Y02893 08820002
         BZ    IEASSLEN           NO, QID NOT THERE              Y02893 08830002
         LA    LEN,TWO(LEN)       INCR LEN TO LAST BYTE IN QID   Y02893 08840002
         USING WPL,RWPL                                                 08850002
* NOW CHECK IF MLWTO IS QUEUED TO HARDCOPY ONLY.  THIS IS AN     Y02893 08860002
* ERROR CONDITION AND GETS A RETURN CODE OF 20(DEC).             Y02893 08870002
IEASSLEN TM    WPLMCSF1,WPLMCSFG    QUEUE TO HARD COPY ONLY             08880002
         BZ    IEASRTDC             NO, CHECK FOR ROUT/DESC CODES       08890002
         MVI   XVRETCOD,HCONLY    SET RETURN CODE 20 AND         Y02893 08900002
         OI    XVX1,XVX1STOP      SET STOP PROCESSING FLAG       Y02893 08910002
         B     IEASTOPA              IGNORE REQUEST              Y02893 08920002
IEASRTDC TM    XVD2,XVD2RDC   ROUT/DESC CODES EXIST              Y02893 08930002
         BZ    IEASGETL           NO, SKIP WTP CHECK             Y02893 08940002
         TM    XVRCSAVE+ONE,WPLROUTK WAS WTP SPECIFIED.          Y02893 08950002
         BZ    IEASGETL           NOT WTP, SKIP ERROR CHK        Y02893 08960002
* THIS MLWTO INCLUDES A WTP ROUTE CODE. CHECK IF IT IS A WTP ONLYY02893 08970002
         CLC   XVRCSAVE,WTPONLY  ANY OTHER ROUTE CODES           Y02893 08980002
         BNE   IEASWTPP           WTP NOT THE ONLY RC            Y02893 08990002
* ONLY WTP ROUTE CODE. SET STOP FLAG.                            Y02893 09000002
         OI    XVX1,XVX1STOP                                     Y02893 09010002
         B     IEASRETC                                          Y02893 09020002
IEASWTPP NI    XVRCSAVE+ONE,X'FF'-WPLROUTK TURN OFF WTP RC       Y02893 09030002
IEASRETC MVI   XVRETCOD,RCWTP    SET RETURN CODE 16              Y02893 09040002
         TM    XVX1,XVX1STOP      WAS STOP PROCESSING SET.       Y02893 09050002
         BO    IEASTOPA           YES, THEN SKIP TO STOP         Y02893 09060002
*                                                                       09070002
* NOW GET THE NUMBER OF LINES TO BE PROCESSED.                   Y02893 09080002
*                                                                       09090002
*        GETLINES                 ,                              Y02893 09100002
IEASGETL GETLINES                 ,                              Y02893 09110002
         TM    XVX1,XVX1STOP      WAS THERE AN ERROR IN GETLINES Y02893 09120002
         BO    IEASTOPA           YES THEN SKIP PROCESSING       Y02893 09130002
*  CHECK THE LENGTH OF THE MAJOR WPLOR FIRST PORTION OF A CON- @ZA16869 09158003
*  NECTING WPL FOR ZERO.                                       @ZA16869 09159003
IEASLLGH CLC   WPLLGH,KFOUR        IS LENGTH LESS THAN 4?      @ZA16869 09160003
         BNL   IEASTLMK            NO, CHECK # OF LINES.       @ZA16869 09161003
         MVI   XVRETCOD,LINERR      ZERO LINE LENGTH -- ERROR  @ZA16869 09166003
         OI    XVX1,XVX1STOP      SET STOP FLAG ON             @ZA16869 09166403
         B     IEASTOPA            RETURN TO CALLER            @ZA16869 09166803
IEASTLMK EQU   *                                               @ZA16869 09167003
         DROP  RWPL                                            @ZA16869 09167203
         USING WPLLTF,RWORK2                                   @ZA16869 09167603
         MVC   XVD0(ONE),WPLLINES  MOVE # OF LINES TO SAVEARES @ZA16869 09168003
         CLI   XVD0,NOLINES       ARE THERE ANY LINES TO PROCESS Y02893 09168403
         BH    IEASTLMX           YES, CONTINUE CHECKING WPL.  @ZA16869 09168803
         MVI   XVRETCOD,LINERR      ZERO # OF LINES -- ERROR            09169203
         OI    XVX1,XVX1STOP      SET STOP FLAG ON               Y02893 09170002
         B     IEASTOPA            RETURN TO CALLER                     09180002
*        CHKLINES                 ,                              Y02893 09190002
IEASTLMX CHKLINES                 ,                              Y02893 09200002
         TM    WPLLTF,WPLLTFD      END LINE                             09210002
         BZ    IEASTCLN            NO, GO CHECK FOR CONTROL LINE Y02893 09220002
         TM    WPLLTF,WPLLTFC      DATA END LINE                        09230002
         BO    IEASTCLN          YES, START LINE TYPE CHECKING.  Y02893 09240002
* THE FIRST LINE IS KNOWN TO BE JUST AN  END LINE. SET FLAG      Y02893 09250002
* INDICATING THAT AND CHECK IF CONNECTING.                       Y02893 09260002
IEASCONA OI    XVX0,XVX0FLJE       SET LINE 1 JUST END                  09270002
         TM    XVD2,XVD2CON       CONNECTING                            09280002
         BO    IEASTORE           YES, SKIP TO STORE LINE COUNT  Y02893 09290002
         MVI   XVRETCOD,INVLDLT   NO, SET INVALID LINE TYPE RC   Y02893 09300002
         OI    XVX1,XVX1STOP      SET STOP PROCESSING FLAG       Y02893 09310002
         B     IEASTOPA                                                 09320002
*                                                                       09330002
*        CHKTYPE                  ,CHECK LINE TYPE               Y02893 09340002
IEASTCLN CHKTYPE                  ,CHECK LINE TYPE               Y02893 09350002
* CHECK IF WE ARE ALL DONE PROCESSING THIS MLWTO                 Y02893 09360002
* WE CHECK FOR AN END FOUND OR FORCED OR FOR THE LINE COUNT MET. Y02893 09370002
* IF WE ARE ALL DONE THEN STORE THE LINE COUNT.                  Y02893 09380002
         TM    XVX0,XVX0FLJE+XVX0FEDE END FOUND OR FORCED.       Y02893 09390002
         BM    IEASTORE           YES, WRAP UP WPL PROCESSING    Y02893 09400002
         SR    RWORK15,RWORK15     SET 15 TO 0 FOR COMPARE              09410002
         IC    RWORK15,XVD0        # OF LINES                           09420002
         CR    COUNT,RWORK15       END REACHED                          09430002
         BE    IEASTORE            YES                                  09440002
*        INCRMNT                  ,NO, POINT TO NEXT LINE IN WPL Y02893 09450002
         INCRMNT                  ,NO, POINT TO NEXT LINE IN WPL Y02893 09460002
IEASCKLL CH    RWORK5,KFOUR        LENGTH <=4                           09470002
         BH    IEASTCLN            NO, CHECK IF CONTROL LINE     Y02893 09480002
         BCTR  COUNT,0             DO NOT PUT OUT BAD LINE              09490002
         MVI   XVRETCOD,LINERR     SET RETURN CODE TO ERROR      Y02893 09500002
*                                 IN THE # OF LINES.             Y02893 09510002
         OI    XVX0,XVX0FEDE      FORCE END TO MLWTO             Y02893 09520002
* NOW STORE THE COUNT AND SET UP FOR CREATING THE FIRST LINE.    Y02893 09530002
*        WRAPUP                                                         09540002
IEASTORE WRAPUP                                                         09550002
*                                                                       09560002
IEASTOPA EQU   *                                                 Y02893 09570002
* END OF TSTMLWTO SEGMENT                                        Y02893 09580002
         SPACE 2                                                        09590002
         MEND                                                           09600002
         MACRO                                                          09610002
&LABEL   GETLINES              ,                                 Y02893 09620002
         EJECT                                                          09630002
* GETLINES SEGMENT                                               Y02893 09640002
* THIS SEGMENT WILL CHECK THAT THE FIRST WORD OF THE MLWTO       Y02893 09650002
* EXTENSION IS STILL IN USER'S CORE AND WILL PUT THE             Y02893 09660002
* NUMBER OF LINES IN XVD0.                                       Y02893 09670002
* INPUT = LEN IS ADDR OF LAST BYTE OF SINGLE LINE PART OF WPL    Y02893 09680002
*  OUTPUT - XVD0 HAS NUMBER OF LINES.                            Y02893 09690002
*           LEN IS THE ADDR OF WPLLINES FIELD.                   Y02893 09700002
*           RWORK2 PTS AT WPLLTF AND ADDRESSABILITY IS SET.      Y02893 09710002
*          MLPART IS SET TO ADDR OF WPLLTF                       Y02893 09720002
*                                                                Y02893 09730002
&LABEL   LA    LEN,FOUR(LEN)          INCREMENT LEN FOR FLAGS    Y02893 09740002
IEASRERF LR    RRET,LEN            SET INPUT TO REFERLEN                09750002
         BAL   RRETURN,REFERLEN    REFERENCE LOCATION                   09760002
* REFERLEN WILL SET RRET(15) TO ZERO IF LOCATION ISN'T IN        Y02893 09770002
* THE CALLER'S ACCESSIBLE CORE.                                  Y02893 09780002
         LTR   RRET,RRET          IS WPL OK                      Y02893 09790002
         BNZ   IEASTLIN           YES, PICK UP # OF LINES        Y02893 09800002
* NO, THE WPL WASN'T IN USER'S ACCESSABLE CORE.                  Y02893 09810002
         OI    XVX1,XVX1STOP      STOP PROCESSING.               Y02893 09820002
         OI    XVX1,XVD1PERR      ERROR IN WPL                   Y02893 09830002
         B     IEASGETE           SKIP TO END OF SEGEMNT/        Y02893 09840002
IEASTLIN LR    RWORK2,LEN          REFERENCE MLWTO PORTION              09850002
         SH   RWORK2,KTHREE        BACK UP TO BEGINNING OF FLAGS        09860002
         ST    RWORK2,MLPART      SAVE ADDR TO MULTILINE PART    Y02893 09870002
IEASGETE EQU   *                                                 Y02893 09910002
* END OF GETLINES SEGMENT                                        Y02893 09920002
         SPACE 2                                                        09930002
         MEND                                                           09940002
         MACRO                                                          09950002
&LABEL   CHKLINES                  ,                             Y02893 09960002
* CHKLINES SEGMENT                                               Y02893 09970002
* ALLOW NO MORE THAN 10 LINES TO BE PROCESSED AT A TIME.         Y02893 09980002
&LABEL   CLI   XVD0,TENLINES         # LINES GREATER THAN 10     Y02893 09990002
         BNH   IEASETC1            NO, VALID                            10000002
         MVI   XVD0,TENLINES       SET # LINES TO 10             Y02893 10010002
         MVI   XVRETCOD,LINERR    SET RETURN CODE = 4            Y02893 10020002
         OI    XVX0,XVX0FEDE       FORCE END                            10030002
IEASETC1 LA    COUNT,ONE             SET COUNT=1                        10040002
* END OF CHKLINES SEGMENT                                        Y02893 10050002
         SPACE 2                                                        10060002
         MEND                                                           10070002
         MACRO                                                          10080002
&LABEL   CHKTYPE                   ,                             Y02893 10090002
         EJECT                                                          10100002
* START OF CHKTYPE SEGMENT                                       Y02893 10110002
&LABEL   TM    WPLLTF,WPLLTFA      CONTROL LINE                         10120002
         BO    IEASCNT0            YES, CHECK COUNT                     10130002
         TM    WPLLTF,WPLLTFB      LABEL LINE                           10140002
         BO    IEASTLAB                                                 10150002
         TM    WPLLTF,WPLLTFC      DATA LINE                            10160002
         BO    IEASUPCT                                                 10170002
         TM    WPLLTF,WPLLTFD     THIS LINE JUST END                    10180002
         BO    IEASFEND            YES, FORCE END                       10190002
         B     IEASRC12            NO, ERROR                            10200002
IEASCNT0 CH    COUNT,KONE         COUNT=1                               10210002
         BNE   IEASRC12            NO, ERROR                            10220002
         TM    WPLLTF1,WPLLTFB+WPLLTFC+WPLLTFD    JUST CONTROL LINE     10230002
         BNZ   IEASRC12            NO, ERROR                            10240002
         TM    XVD2,XVD2CON        CONNECTING                           10250002
         BO    IEASRC12            YES, ERROR                           10260002
         OI    XVX0,XVX0FLCL       SET FIRST LINE CONTROL LINE          10270002
         B     IEASTEST                                                 10280002
IEASTLAB TM    WPLLTF1,WPLLTFA+WPLLTFC+WPLLTFD    JUST LABEL LINE       10290002
         BNZ   IEASRC12                                                 10300002
         TM    XVX0,XVX0LL2F       LABEL LINE 2 BIT ON                  10310002
         BO    IEASRC12                                                 10320002
         TM    XVX0,XVX0LL1F       LABEL LINE 1 BIT ON                  10330002
         BO    IEAS1LAB                                                 10340002
IEASFLAB OI    XVX0,XVX0LL1F       SET LABLE LINE 1 BIT ON              10350002
         TM    XVX0,XVX0FLCL       CONTROL LINE FOUND                   10360002
         BO    IEASCLF1            YES                                  10370002
         CH    COUNT,KONE         COUNT =1                              10380002
         BE    IEASTEST                                                 10390002
         B     IEASRC12            LABEL LINE INCORRECTLY PLACED        10400002
IEASCLF1 CH    COUNT,KTWO          COUNT=2                              10410002
         BE    IEASTEST                                                 10420002
         B     IEASRC12            NO, ERROR                            10430002
IEAS1LAB TM    XVX0,XVX0FLCL       FIRST LINE CONTROL LINE              10440002
         BZ    IEASTC2                                                  10450002
         CH    COUNT,KTHREE        COUNT = 3                            10460002
         BNE   IEASRC12            NO, ERROR                            10470002
         B     IEASETL2                                                 10480002
IEASTC2  CH    COUNT,KTWO          COUNT=2                              10490002
         BNE   IEASRC12            NO, ERROR                            10500002
IEASETL2 OI    XVX0,XVX0LL2F       SET LABEL LINE 2 BIT ON              10510002
         B     IEASTEST                                                 10520002
*                                                                       10530002
IEASUPCT TM    WPLLTF1,WPLLTFA+WPLLTFB+WPLLTFD                          10540002
         BZ    IEASTEST                                                 10550002
         TM    WPLLTF1,WPLLTFA+WPLLTFB   JUST DATA END LINE             10560002
         BNZ   IEASRC12            ERROR                                10570002
         OI    XVX0,XVX0FEDE      SET END FLAG                   Y02893 10580002
         B     IEASTEST           CHECK FOR END OF LOOP          Y02893 10590002
IEASRC12 MVI   XVRETCOD,INVLDLT   SET RETURN CODE TO BAD LINETYP Y02893 10600002
IEASFEND OI    XVX0,XVX0FEDE      SET FORCE END FLAG                    10610002
IEASTEST EQU   *                                                        10620002
* END OF CHKTYPES SEGMENT                                        Y02893 10630002
         SPACE 2                                                        10640002
         MEND                                                           10650002
         MACRO                                                          10660002
&LABEL   INCRMNT                   ,                             Y02893 10670002
         EJECT                                                          10680002
* INCRMNT SEGMENT                                                Y02893 10690002
* THIS SEGMENT WILL STEP TO THE NEXT LINE IN THE WPL.            Y02893 10700002
* IT WILL INSURE THAT THE WPL IS IN THE USER'S CORE AND WILL     Y02893 10710002
* STORE THE LENGTH OF THE LINE IN MWTO'S SAVEAREA.               Y02893 10720002
* INPUT - LEN POINTS AT LAST BYTE OF LAST PROCESSED LINE.        Y02893 10730002
&LABEL   LA    COUNT,ONE(COUNT)      INC COUNT                          10740002
         LA    LEN,TWO(LEN)          REFERENCE NEXT FIELD               10750002
         LR    RRET,LEN           LOAD ADDR TO CHECK             Y02893 10760002
         BAL   RRETURN,REFERLEN   INSURE BYTE IS IN USER'S CORE  Y02893 10770002
         LTR   RRET,RRET          BYTE IN USER'S CORE?           Y02893 10780002
         BNZ   IEASINCC           YES, GET LENGTH OF MSG         Y02893 10790002
         OI    XVX1,XVX1STOP      STOP PROCESSING                Y02893 10800002
         OI    XVD1,XVD1PERR      ABEND USER                     Y02893 10810002
         B     IEASTOPA           SKIP TO END OF TSTMLWTO        Y02893 10820002
IEASINCC LR    RWORK2,LEN                                               10830002
         SR    RWORK5,RWORK5      ZERO REG FOR INSERT CHAR              10840002
         IC    RWORK5,0(RWORK2)    LENGTH OF TEXT+4                     10850002
* SAVE THE MSG LENGTH IN MWTO'S WORK AREA.                       Y02893 10860002
* IN THIS WAY A VALID MESSAGE WILL STAY                          Y02893 10870002
* VALID AS THE CALLER CAN NOT CHANGE THE MSG LENGTHS.            Y02893 10880002
         STC   RWORK5,LTABLE(COUNT) SAVE LGTH IN SAVEAREA.       Y02893 10890002
         AR    LEN,RWORK5          ADD MSG LENGTH +4                    10900002
         LA    RWORK2,ONE(RWORK2)   INC TO REF LINE TYPE                10910002
         SH    LEN,KTWO            LEN=LEN+MSGLEN+4-2                   10920002
         TM    WPLLTF1,WPLLTFD       END LINE                           10930002
         BZ    IEASCKLL            NO, CHECK LINE LENGTH                10940002
         TM    WPLLTF1,WPLLTFC   DATA END LINE                          10950002
         BO    IEASCKLL            YES, CHECK LINE LENGTH               10960002
         B     IEASTORE           CHECK IF ALL DONE              Y02893 10970002
* END OF INCRMNT SEGMENT                                         Y02893 10980002
         SPACE 2                                                        10990002
         MEND                                                           11000002
         MACRO                                                          11010002
&LABEL   WRAPUP                  ,                               Y02893 11020002
         EJECT                                                          11030002
* WRAPUP SEGMENT                                                 Y02893 11040002
*  INPUT - COUNT(REG 8 CONTAINS THE COUNT OF THE NUMBER OF LINES Y02893 11050002
*  TO PROCESS.                                                   Y02893 11060002
*  OUTPUT - COUNT IS STORED IN XVXD0 AND XVX                     Y02893 11070002
*   XVX0UDCL IS SET IF DEFAULT CONTROL LINE IS TO BE USED.       Y02893 11080002
*   XVD3TXT1 IS SET.                                             Y02893 11090002
&LABEL   STC   COUNT,XVD0          STORE COUNT                          11100002
         STC   COUNT,XVX2           SET UP NO. OF LINES TO DO           11110002
         TM    XVD1,XVD1PP         PROB PGM                             11120002
         BZ    IEASSSET                                                 11130002
         OI    XVX0,XVX0FEDE       YES, FORCE END                       11140002
*  CHECK IF WE NEED TO USE THE DEFAULT LINE.                     Y02893 11150002
IEASSSET TM    XVX0,XVX0FLCL       FIRST LINE CONTROL LINE       Y02893 11160002
         BO    IEASEXIT            YES, SKIP DEFAULT TEST.       Y02893 11170002
         TM    XVD2,XVD2CON        CONNECTING                           11180002
         BO    IEASEXIT            YES, SKIP                     Y02893 11190002
         TM    XVD2,XVD2RDC        ROUT/DESC CODES                      11200002
         BZ    IEASEXIT            NO, SKIP                      Y02893 11210002
         DROP  RWORK2                                                   11220002
         TM    XVDESCD+ONE,WPLDESCI   DESC CODE 9                Y02893 11230002
         BZ    IEASEXIT                                                 11240002
         OI    XVX0,XVX0UDCL       USE DEFAULT CONTROL LINE             11250002
IEASEXIT OI    XVD3,XVD3TXT1       NO, INDICATE BEGINNING OF REQUEST    11260002
* CHECK IF LAST BYTE IN THE WPL IS IN THE USER'S AREA.           Y02893 11270002
         LR    RRET,LEN           LOAD ADDR OF LAST BYTE.        Y02755 11280002
         BAL   RRETURN,REFERLEN   CHECK THE BYTE.                Y02755 11290002
         LTR   RRET,RRET          IS BYTE IN THE USER'S AREA.    Y02755 11300002
         BNZ   IEASTOPA           YES, SKIP TO END               Y02755 11310002
         OI    XVX1,XVX1STOP      NO, STOP PROCESSING WPL        Y02755 11320002
         OI    XVD1,XVD1PERR      ABEND THE USER.                Y02755 11330002
* END OF WRAPUP SEGMENT                                          Y02893 11340002
         SPACE 2                                                        11350002
         MEND                                                           11360002
         MACRO                                                          11370002
&LABEL   BLDMAJ                 ,                                Y02893 11380002
         EJECT                                                          11390002
* BLDMAJ SEGMENT.  THIS SEGMENT CREATES AND BUILDS THE MAJOR     Y02893 11400002
* WQE OR FIRST LINE OF THE MLWTO.                                Y02893 11410002
* INPUT - THE LOCAL AND CMS LOCKS ARE HELD.                      Y02893 11420002
*         THE WPL HAS BEEN CHECKED FOR PROPER LINE TYPES.        Y02893 11430002
*         XVSAV CONTAINS THE ROUTE/DESC CODES, MSGTYP FIELD      Y02893 11440002
*         AND LENGTH OF THE FIRST LINE.                          Y02893 11450002
* OUTPUT - A MAJOR WQE IS CONSTRUCTED AND PUT ON THE WQE CHAIN.  Y02893 11460002
*         THE MAJOR HAS AN EMPTY MINOR CHAINED TO IT.            Y02893 11470002
*        GETMAJ                   ,GET SPACE FOR A MAJOR WQE     Y02893 11480002
&LABEL   GETMAJ                   ,GET SPACE FOR A MAJOR WQE     Y02893 11490002
* CHECK IF MAJOR WAS OBTAINED.                                   Y02893 11500002
         TM    XVX1,XVX1STOP      IS STOP PROCESSING SET?        Y02893 11510002
         BO    IEAJOUT            YES, SKIP TO END AS NO WQE     Y02893 11520002
* A MAJOR WQE WAS OBTAINED. GET A MINOR.                         Y02893 11530002
         BAL   RRETURN,GETMINOR                                  Y02893 11540002
* CHECK IF A MINOR WAS OBTAINED.                                 Y02893 11550002
         TM    XVX1,XVX1STOP      IS STOP PROC FLAG SET          Y02893 11560002
         BZ    IEAJBINT           NO, GO INIT THE MAJOR          Y02893 11570002
* A MINOR WASN'T AVAILABLE. FREE THE MAJOR WQE.                  Y02893 11580002
*        FREEMAJ                                                 Y02893 11590002
         FREEMAJ                  ,FREE THE MAJOR WQE            Y02893 11600002
         B     IEAJOUT            GET OUT OF THE SEGMENT         Y02893 11610002
*        BMAJINIT                                                Y02893 11620002
IEAJBINT BMAJINIT                 ,INITIALIZE THE MAJOR          Y02893 11630002
         TM    XVX0,XVX0FLCL        FIRST LINE CONTROL LINE             11640002
         BO    IEAJLEN4           YES, SKIP TO SET UP FIRST LINE Y02893 11650002
         TM    XVX0,XVX0UDCL        USE DEFAULT CONTROL LINE            11660002
         BZ    IEAJLEN4           NO, SKIP TO SET UP FIRST LINE  Y02893 11670002
* SET UP TO MOVE IN THE DEFAULT CONTROL LINE.                    Y02893 11680002
         LA    RWORK15,TEXTDCL      USE DEFAULT CONTROL LINE            11690002
         LA    RCTR,SEVN               LENDTH DDFAULT CONTOL LINE       11700002
         LA    RWORK9,WMJMTXT+TWO    ADR OF TEXT POSITION IN MAJOR      11710002
         B     IEAJMOVM                                          Y02893 11720002
*        BMAJFSTL                                                Y02893 11730002
IEAJLEN4 BMAJFSTL                 ,SETUP TO MOVE FIRST LINE      Y02893 11740002
*        BMAJMVMS                                                Y02893 11750002
IEAJMOVM BMAJMVMS                 ,MOVE THE MESSAGE INTO WQE     Y02893 11760002
         OI    WMJMDSP,WMJMDSPG   SET MAJOR SUSPENDED            Y02751 11770002
         TM    XVX0,XVX0UDCL       USE DEFAULT CONTROL LINE             11780002
         BZ    IEAJMVLT           NO, MOVE IN LINE TYPE FLAGS    Y02893 11790002
         OI    WMJMLTYP,WMJMLTYA  SET LINE TYPE TO CONTROL       Y02893 11800002
         LR    RWPL2,RWPL         PREPARE PTR TO LINE BEING      Y02893 11810002
*                                 PROCESSED.                     Y02893 11820002
         B     IEAJOUT            END OF SEGMENT                 Y02893 11830002
         USING WPLLTF,RWORK2                                            11840002
IEAJMVLT MVC   WMJMLTYP,WPLLTF  MOVE LINE TYPE FLAGS TO MAJOR    Y02893 11850002
         DROP  RWORK2                                                   11860002
IEAJTLNE BAL   RRETURN,TEXTLINE INCR TO NEXT LINE                Y02893 11910002
         BAL   RRETURN,ENDUP                                     Y02893 11920002
IEAJOUT  OI    XVD2,XVD2CON       INSURE CONNECTING BIT IS SET   Y02893 11930002
* END OF BLDMAJ SEGMENT                                          Y02893 11940002
         SPACE 2                                                        11950002
         MEND                                                           11960002
         MACRO                                                          11970002
&LABEL   BMAJINIT                 ,                              Y02893 11980002
         EJECT                                                          11990002
* INITIALIZE THE MAJOR WQE SEGMENT                               Y02893 12000002
* INPUT  - XVCMAJOR HAS ADDR OF MAJOR WQE.                       Y02893 12010002
*           RTCB CONTAINS ADDR OF OUR TCB.                       Y02893 12020002
*           ASCBSAVE CONTAINS ADDR OF OUR ASCB                   Y02893 12030002
*           XVA8 CONTAINS THE TIME OF DAY                        Y02893 12040002
*           RWPL(6) POINTS AT THE WPL                            Y02893 12050002
*           XVSAV HAS VARIOUS FLAGS SET UO SHOW CONDITION OF WPL Y02893 12060002
* OUTPUT - INITIAL PART OF MAJOR WQE IS CONSTRUCTED AND WQE IS   Y02893 12070002
*              ON THE QUEUE. THE SUSPEND BIT IS SET ON.          Y02893 12080002
*          FIRST CHAR OF TEXT IS BLANK                           Y02893 12090002
*          TIME AND ROUTE CODES ARE DECODED AND FILLED IN.       Y02893 12100002
*          RWORK2 POINT AT WPLLTF IN WPL.                        Y02893 12110002
*                                                                Y02893 12120002
&LABEL   L     RMAJR,XVCMAJOR       MAJOR WQE ADR                       12130002
         USING WMJMEXT,RMAJR                                            12140002
         USING WPL,RWPL                                          Y02893 12150002
         OI    WMJMMLW,WMJMMLWB     SET MAJOR FLAG                      12160002
         OI    WMJMBUF,WMJMBUFB+WMJMBUFD  SET IN USE AND GETMAINED      12170002
         USING TCB,RTCB                                                 12180002
         ST    RTCB,WMJMTCB         STORE TCB ADR                       12190002
         MVC   WMJMJTCB,TCBJSTCB  PUT ADDR OF JOB STEP'S TCB     Y02756 12200002
         L     RASCB,ASCBSAVE     RESTORE ASCB ADDR              Y02893 12210002
         USING ASCB,RASCB                                        Y02893 12220002
         MVC   WMJMASID,ASCBASID  PUT IN ASID OF CALLER'S MEMORY Y02893 12230002
         DROP  RASCB                                             Y02893 12240002
         L     RUCM,UCMBPTR                                             12250002
         USING UCM,RUCM                                                 12260002
         L     RWORK2,UCMWQEND      END OF OUTPUT QUEUE          Y02893 12270002
         LTR   RWORK2,RWORK2        IS IT 0                             12280002
         BNZ   IEAJLNK              NO, CHAIN TO LAST WQE        Y02893 12290002
         LA    RWORK2,UCMWTOQ       ADR OUTPUT QUEUE                    12300002
IEAJLNK  ST    RMAJR,UCMWQEND       PUT NEW WQE AT END OF QUEUE  Y02893 12310002
         DROP  RMAJR                                                    12320002
         USING WMJMEXT,RWORK2                                           12330002
         MVC   WMJMNXT(THREE),UCMWQEND+ONE  PUT NEW WQE ON QUEUE        12340002
         DROP RWORK2                                                    12350002
         DROP  RUCM                                                     12360002
         USING WMJMEXT,RMAJR                                            12370002
         MVC   WMJMCS1(TWO),WPLMCSF   MOVE MCS FLAGS                    12380002
         TM    XVD1,XVD1AUTH      IS USER AUTHORIZED PROG        Y02755 12390002
         BZ    IEAJQ0CK           NO, CHK ON USE OF QREG0        Y02755 12400002
         OI    WMJMDSP,WMJMDSPH   SET USER AUTHORIZED FLAG.      Y02755 12410002
         B     IEAJTIME           SKIP TO UNPACK THE TIME        Y02755 12420002
IEAJQ0CK TM    WMJMCS1,WMJMCS1H   IS QREG0 BIT ON                Y02755 12430002
         BZ    IEAJTIME           NO, SKIP TO UNPACK             Y02755 12440002
* YES IT IS. AN UNAUTHORIZED USER CAN'T USE THE QREG0 MCS        Y02755 12450002
* FUNCTION. TURN THE BIT OFF.                                    Y02755 12460002
         OI    WMJMCS1,WMJMCS1B   TURN ON REG0 BIT INSTEAD       Y02755 12470002
         NI    WMJMCS1,X'FF'-WMJMCS1H TURN OFF QREG0 FLAG        Y02755 12480002
IEAJTIME UNPK  XVA0(EIGHT),XVA8(FOUR) UNPACK TIME                Y02893 12490002
         MVC   WMJMTS(TWO),XVA0+ONE    MOVE IN HOURS PART        Y02893 12500002
         MVI   WMJMTS+TWO,PERIOD  INSERT SEPERATOR               Y02893 12510002
         MVC   WMJMTS+THREE(TWO),XVA0+THREE MOVE IN THE MINUTES  Y02893 12520002
         MVI   WMJMTS+FIVE,PERIOD INSERT SEPERATOR               Y02893 12530002
         MVC   WMJMTS+SIX(TWO),XVA0+FIVE    MOVE IN THE SECONDS  Y02893 12540002
         MVI   WMJMPAD1,BLANK       BLANK CHAR AFTER TIME        Y02893 12550002
         MVC   WMJMPAD1+ONE(NINE),WMJMPAD1 BLANK OUT JOBNM FIELD Y02893 12560002
         MVC   WMJMRR,FZERO       INIT ROUTE CODES TO CHAR ZERO         12570002
         TM    XVD2,XVD2RDC         ROUT/DESC CODES                     12580002
         BZ    IEAJTID1             NO, CHECK MSG TYPE           Y02893 12590002
         MVC   WMJMRTC(TWO),XVRCSAVE   MOVE ROUTING CODES        Y02893 12600002
         MVC   WMJMDEC(TWO),XVDESCD   DESCRIPTOR CODES           Y02893 12610002
         LR    RID,RTCB          SAVE TCB ADR                    Y02893 12620002
          LA   R1,FOUR          SET LOOP COUNTER                 Y02893 12630002
          L    RWORK5,WMJMRTC      ROUTING CODES                        12640002
IEAJRCLP SR    RTCB,RTCB           SET UP FOR SHIFT              Y02893 12650002
         SLL   RWORK15,EIGHT       MOVE ROUTING CODES TO REG 15         12660002
         SLDL  RTCB,FOUR                                                12670002
         IC    RWORK15,TABLE(RTCB)   CONVERT ROUTING CODES              12680002
         BCT   R1,IEAJRCLP            TO PRINTABLE FORM          Y02893 12690002
         ST    RWORK15,XVA0        AND STORE IN MAJOR                   12700002
         MVC   WMJMRR(FOUR),XVA0                                        12710002
         LR    RTCB,RID             RESTORE TCB ADR                     12720002
         MVI   WMJMPAD,BLANK      BLANK AFTER ROUT CODES         Y02893 12730002
IEAJTMT1 TM    XVD2,XVD2MSGT      MSG TYPE FIELD PRESENT         Y02893 12740002
         BZ    IEAJTID1           NO, MOVE CONSOLE ID IF PASSED  Y02893 12750002
         MVC   WMJMMT1,XVMSGTYP  MESSAGE TYPE                    Y02893 12760002
IEAJTID1 TM    WPLMCSF1,WPLMCSFB+WPLMCSFH CONSOLE ID PASSED      Y02893 12770002
         BZ    IEAJAREA          NO, GET TO AREA ID              Y02893 12780002
         MVC   WMJMUID,XVCONID   MOVE CONSOLE ID                        12790002
IEAJAREA L     RWORK2,MLPART      POINT AT MULTI LINE PART WPL   Y02893 12800002
         DROP  RWPL                                                     12810002
         USING WPLLTF,RWORK2                                            12820002
IEAMALLF MVC   WMJMAREA,WPLAREA    PUT AREA ID IN MAJOR                 12830002
         TM    XVD1,XVD1AUTH      IS CALLER AUTHORIZED                  12840002
         BO    IEAJMBLK           YES. DONT INSERT DEFAULT FOR P/P      12850002
*  NON AUTHORIZED USERS OF MLWTO GET AN AREA ID OF 'Z' OR INLINE.       12860002
*  THIS IS TO PREVENT AN UNAUTH. CALLER FROM MESSING WITH A             12870002
*  AREA BEING USED BY A DYNAMIC STATUS DISPLAY MLWTO.                   12880002
         MVI   WMJMAREA,CHARZ     AREA GETS SET TO INLINE.              12890002
         DROP  RWORK2                                                   12900002
IEAJMBLK MVI   WMJMTXT,BLANK        BLANK FIRST CHARACTER               12910002
* CHECK IF THIS MLWTO SHOULD BE QUEUED TO HC DUE TO CHANGE IN    Y02893 12920002
* THE ROUTE CODES BY THE INSTALLATION EXIT.                      Y02893 12930002
         TM    XVD2,XVD2QFHC      DID EXIT CHANGE ROUTE CODES    Y02893 12940002
         BZ    IEAJEND            NO, SKIP TO END                Y02893 12950002
         OI    WMJMDSP,WMJMDSPB   YES, QUEUE TO HC               Y02893 12960002
IEAJEND  EQU   *                                                 Y02893 12970002
* END OF BMAJINIT SEGMENT                                        Y02893 12980002
         SPACE 2                                                        12990002
         MEND                                                           13000002
         MACRO                                                          13010002
         BMAJFSTL                                                       13020002
         EJECT                                                          13030002
* BMAJFSTL SEGMENT                                               Y02893 13040002
* SET UP THE FIRST LINE FOR THE MOVE INTO THE MAJOR              Y02893 13050002
* INPUT  - RWPL PTS AT THE WPL                                   Y02893 13060002
*         RMAJR PTS THE MAJOR WQE                                Y02893 13070002
*        RWORK2 PTS AT THE WPLLTF FIELD                          Y02893 13080002
*         XVMSGLGH CONTAINS THE TEXT LENGTH                      Y02893 13090002
* OUTPUT- R15 IS ADDR OF TEXT TO USE                             Y02893 13100002
*        RWORK9 IS ADDR OF WHERE TO MOVE TEXT                    Y02893 13110002
*        RCTR IS LENGTH OF TEXT TO BE MOVED                      Y02893 13120002
*                                                                Y08923 13130002
         USING WPL,RWPL                                                 13140002
IEAJLEN4 LH    RCTR,XVMSGLGH    TEXT LENGTH                      Y02893 13150002
         SH    RCTR,KFOUR                                               13160002
         LA    RWORK9,WMJMTXT+TWO   TEXT POSITION IN MAJOR              13170002
         LA    RWORK15,WPLTXT       ADR OF FIRST TEXT LINE              13180002
         DROP  RWPL                                                     13190002
         USING WPLLTF,RWORK2                                            13200002
         TM    WPLLTF1,WPLLTFA     CONTROL LINE                         13210002
         DROP  RWORK2                                                   13220002
         BZ    IEAJLNLD            NO                            Y02893 13230002
         LH    RWORK5,K34         PICK UP ALLOWED LENGTH         YM0214 13240002
         TM    XVD1,XVD1AUTH      IS USER AUTHORIZED.            YM0214 13250002
         BZ    IEAJCHK1           NO, USE LENGTH OF 34 CHAR.     YM0214 13260002
         LH    RWORK5,K35         AUTH USERS CAN HAVE 35 CHARS   YM0214 13270002
IEAJCHK1 CR    RCTR,RWORK5     LENGTH > ALLOWED FOR CONTROL LINE YM0214 13280002
         BNH   IEAJVTX2            NO, MOVE TEXT                 Y02893 13290002
         LR    RCTR,RWORK5        YES,TRUNCATE TO MAX LENGTH     YM0214 13300002
         B     IEAJVTX2            MOVE TEXT INTO MAJOR          Y02893 13310002
IEAJLNLD LH    RWORK5,K70         PICK UP ALLOWED LENGTH         YM0214 13320002
         TM    XVD1,XVD1AUTH      IS USER AUTHORIZED.            YM0214 13330002
         BZ    IEAJCHK2           NO, USE LENGTH OF 70 CHAR.     YM0214 13340002
         LH    RWORK5,K71         AUTH USERS CAN HAVE 71 CHARS   YM0214 13350002
IEAJCHK2 CR    RCTR,RWORK5      LENGTH > MAX DATA OR LABEL LINE  Y02893 13360002
         BNH   IEAJVTX2            NO, MOVE TEXT                 Y02893 13370002
         LR    RCTR,RWORK5      TRUNCATE                         YM0214 13380002
IEAJVTX2 EQU   *                                                 Y02893 13390002
* END OF BAMJFSTL SEGMENT                                        Y02893 13400002
         SPACE 2                                                        13410002
         MEND                                                           13420002
         MACRO                                                          13430002
&LABEL   BMAJMVMS                    ,                           Y02893 13440002
         EJECT                                                          13450002
* BMAJMVMS SEGMENT                                               Y02893 13460002
* THIS SEGMENT WILL MOVE THE MESSAGE INTO THE MAJOR WQE          Y02893 13470002
* INPUT -RCTR IS THE LENGTH OF THE MESSAGE                       Y02893 13480002
*        RMAJR IS THE ADDR OF THE MAJOR WEQ                      Y02893 13490002
*        RWORK9 IS THE ADDR OF THE TEXT IN THE WQE               Y02893 13500002
* OUTPUT- THE TEXT WITH AUTHORIZATION FLAGS IS MOVED INTO THE    Y02893 13510002
*        WQE. THE LENGTH AND SEQUENCE NUBMER ARE ALSO ADDED TO   Y02893 13520002
*        THE WQE.                                                Y02893 13530002
*                                                                Y02893 13540002
&LABEL   LR    RWORK5,RCTR         LENGTH FOR EXECUTE            Y02893 13550002
         BCTR  RWORK5,0              DEC LENGTH BY 1 FOR EX             13560002
         EX    RWORK5,IEAMEXMV                                          13570002
* CHECK TO INSURE THAT TRAILING BLANKS ARE REMOVED. THE CHAR     Y02893 13580002
* INDEXED BY RWORK9 & RWORK5 WILL BE PUT INTO R1 AND COMPARED    Y02893 13590002
* WITH '00000040'X. IF EQ THEN RWORK5 IS DECREMENTED AND THE LOOPY02893 13600002
* CONTINUES. IF RWORK5 GETS TO ZERO THEN TEXT WAS ALL BLANK.     Y02893 13610002
         XR    R1,R1               USE R1 FOR IC OF TEXT CHAR    Y02893 13620002
IEAJBLKL EQU   *                                               @ZA14970 13622003
         LTR   RWORK5,RWORK5      IS RWORK5 ZERO YET?          @ZA14970 13624003
         BZ    IEAJBLKE           YES THEN TEXT WAS ALL BLANK  @ZA14970 13626003
         IC    R1,0(RWORK5,RWORK9) PICK UP CHAR FROM TEXT      @ZA14970 13630003
         CL    R1,BLANKTST         IS R1 JUST ZERO AND BLANK     Y02893 13640002
         BNE   IEAJBLKE            NO, GET OUT OF LOOP           Y02893 13650002
         BCTR  RWORK5,0            DECREMENT INDEX INTO TEXT     Y02893 13660002
         B     IEAJBLKL            LOOP AND TEST FOR END       @ZA14970 13680003
* IF THE TEXT WAS ALL BLANK THEN ONLY ONE BLANK IS USED.       @ZA14970 13683003
* THE FOLLOWING INSTRUCTION PUTS THE CORRECT LENGTH INTO RCTR    Y02893 13700002
* WHEN THE TEXT IS ALL BLANK OR NOT ALL BLANKS                   Y02893 13710002
IEAJBLKE LA    RCTR,ONE(RWORK5)    SET RCTR TO LENGTH OF TEXT    Y02893 13720002
*                                  WITH TRAILING BLANKS REMOVED  Y02893 13730002
         TM    WMJMDEC1,WMJMDECA+WMJMDECB  DESC CODE 1 OR 2             13740002
         BNZ   IEAJAUT1             YES, CHECK AUTHORIATION      Y02893 13750002
         TM    XVD1,XVD1AUTH        APF AUTHORIZED                      13760002
         BO    IEAJSTXT              YES, OMIT P/P FLAG          Y02893 13770002
         MVI   WMJMTXT+ONE,PPWTOFLG   + FLAG                            13780002
         LA    RCTR,TWO(RCTR)         UPDATE LENGTH                     13790002
         B     IEAJSTOR                                          Y02893 13800002
IEAJAUT1 TM    XVD1,XVD1AUTH        AUTHORIZED                   Y02893 13810002
         BZ    IEAJMVAT                                          Y02893 13820002
         MVI   WMJMTXT,SUPACFLG     * FLAG                              13830002
         B     IEAJSTXT                                                 13840002
* ISSUER IS A NON-AUTHORIZED PROGRAM PROBLEM. DESC CODE 1 OR 2 @ZA14991 13842003
* SPECIFIED. FORCE DESC CODE 7 ON SO MLWTO WILL BE DOMMED AT   @ZA14991 13844003
* TASK TERMINATION.                                            @ZA14991 13846003
IEAJMVAT MVI   WMJMTXT,PPACTFLG     @ FLAG                       Y02893 13850002
         OI    WMJMDEC1,WMJMDECG  TURN ON DESC CODE 7          @ZA14991 13855003
IEAJSTXT LA    RWORK9,WMJMTXT+ONE    SHIFT TEXT TO CHAR POS 2    Y02893 13860002
         LA    RWORK15,WMJMTXT+TWO   SET REGS FOR TEXT SHIFT            13870002
         LR    RWORK5,RCTR         LENGTH FOR EXECUTE                   13880002
         BCTR  RWORK5,0            DECR FOR EXECUTE                     13890002
         EX    RWORK5,IEAMSHFT        SHIFT TEXT                        13900002
         LA    RWORK9,WMJMTXT+ONE    ADR OF TEXT +1                     13910002
         AR    RWORK9,RCTR         ADD TEXT LENGTH                      13920002
         MVI   0(RWORK9),NOLINES   ZERO FIRST CHAR AFTER TEXT    Y02893 13930002
         LA    RCTR,ONE(RCTR)         UPDATE LENGTH                     13940002
IEAJSTOR STH   RCTR,WMJMTXTL       STORE TEXT LENGTH             Y02893 13950002
         L     RPRFX,UCMBPTR       UCM ADR                              13960002
         SH    RPRFX,KFOUR           SUBTRACT TO REFERENCE PREFIX PTR   13970002
         L     RPRFX,0(RPRFX)      LOAD PREFIX PTR                      13980002
         USING UCMPRFX,RPRFX                                            13990002
         MVC   WMJMSEQ(THREE),UCMCMID+ONE    MOVE SEQ # TO MAJOR        14000002
         MVC   WMJMMSGN+ONE(THREE),UCMCMID+ONE   MLWTO ID               14010002
         MVC   XVWQEIDA(THREE),UCMCMID+ONE    SAVE ID FOR NEXT LINES    14020002
         L     RWORK5,UCMCMID                                           14030002
         CVD   RWORK5,XVA0            CONVERT ID TO DECIMAL             14040002
         LA    RWORK5,ONE(RWORK5)          INCREMENT SEQ #              14050002
         ST    RWORK5,UCMCMID         UPDATE SEQ # IN UCM               14060002
         UNPK  WMJMHCID+ONE(THREE),XVA0+SIX(TWO)   CONVERT TO           14070002
*                      PRINTABLE FORM AND STORE IN MAJOR                14080002
         OI    WMJMHCID+THREE,X'F0'   CHANGE ZONE                       14090002
         MVI   WMJMHCID,BLANK          BLANK FIRST CHAR OF ID           14100002
         DROP  RPRFX                                                    14110002
         TM    WMJMDEC2,WMJMDECI     DES CODE 9                         14120002
         BZ    IEAJONNN            NO, NO ID ON CONTROL LINE     Y02893 14130002
         LA    RWORK15,WMJMTXT     ADR OF TEXT IN MAJOR                 14140002
         AH    RWORK15,WMJMTXTL        ADD TEXT ADR TO LENGTH           14150002
         MVC   0(FOUR,RWORK15),WMJMHCID MOVE ID TO TEXT                 14160002
         MVI   FOUR(RWORK15),BLANK    PUT BLANK AFTER MSG               14170002
         LH    RCTR,WMJMTXTL       LENGTH                               14180002
         LA    RCTR,FIVE(RCTR)        UPDATE LENGTH                     14190002
         STH   RCTR,WMJMTXTL       TEXT LENGHT                          14200002
IEAJONNN EQU   *                                                 Y02893 14210002
* END OF BMAJMVMS SEGMENT                                        Y02893 14220002
         SPACE 2                                                        14230002
         MEND                                                           14240002
         MACRO                                                          14390002
         BLDMIN                                                         14400002
         EJECT                                                          14410002
* START OF BLDMIN SEGMENT                                        Y02893 14420002
* BUILD THE MINOR WQE                                            Y02893 14430002
IEA1FIND EQU   *                                                 Y02893 14440002
         BAL   RRETURN,FINDID      FIND ID CONNECTING TO         Y02893 14450002
         TM    XVX1,XVX1NOID       ID FOUND                             14460002
         BNO   IEA1YID            YES, CHECK IF MINOR NEEDED.    Y02893 14470002
* NO ID FOUND. STOP PROCESSING.                                  Y02893 14480002
         OI    XVX1,XVX1STOP      SET STOP PROCESSING FLAG       Y02893 14490002
         B     IEA1GOUT                                          Y02893 14500002
IEA1YID  L     RMAJR,XVCMAJOR      ADR MAJOR WQE                 Y02893 14510002
         USING WMJMEXT,RMAJR                                            14520002
         OI    WMJMMLW,WMJMMLWD    SET CHAIN ALTERED FLAG               14530002
* THERE WILL ALWAYS BE A MINOR WQE QUEUED OFF THE MAJOR.         Y02893 14540002
* FINDID WILL STORE THE ADDRESS OF THE MINOR TO USE              Y02893 14550002
* IN XVCMINOR FOR US.                                            Y02893 14560002
         L     RMINR,XVCMINOR      ADR OF MINOR CONNECTING TO           14570002
         TM    XVD3,XVD3BLD1+XVD3BLD2 ARE BOTH LINES AVAILABLE   Y02893 14580002
         BNZ   IEA1TLN1           BR IF EITHER LINE AVAILABLE    Y02893 14590002
* NO LINE AVAILABLE IN LAST MINOR. GET ANOTHER ONE.              Y02893 14600002
IEA1ALOC L     RUCM,UCMBPTR                                             14610002
         USING UCM,RUCM                                                 14620002
         CLC   UCMWQNR,UCMWQLM     WQE AVAILABLE                 Y02893 14630002
         BL    IEA1GETN            YES, GET A MINOR              Y02893 14640002
         TM    XVD1,XVD1PRIV       PRIVILEGED USER                      14650002
         BO    IEA1GETN            YES, WQES ALWAYS AVAILABLE    Y02893 14660002
         DROP  RUCM                                                     14670002
         EJECT                                                          14680002
* NOW BRANCH TO THE WAIT ROUTINE AND WAIT WITHOUT AN ECB.        Y02893 14690002
* THIS TYPE OF WAIT IS DONE SO THAT WE WILL GET CONTROL          Y02893 14700002
* BACK AFTER OUT MAJOR HAS BEEN DELETED BY IEAVMDSV.             Y02893 14710002
* THE BRANCH ENTRY IS USED SO THAT WE HOLD THE LOCAL LOCK.       Y02893 14720002
* THIS PREVENTS US FROM BEING POSTED BEFORE WE ISSUE THE WAIT.   Y02893 14730002
*                                                                Y02893 14740002
* TURN ON THE WAITING BIT IN THE MAJOR WQE                       Y02893 14750002
         OI    WMJMECBF,WMJMWAIT                                 Y02893 14760002
* DONT ALLOW ASYNCHRONOUS EXITS TO BE DISPATCHED WHIL WAITING    Y02893 14770002
* FOR A WQE. THIS COULD CAUSE AN INTERLOCK IF THE RB ISSUED      Y02893 14780002
* A WTO THAT THEN WAITED.                                        Y02893 14790002
* SET ADDRESSABILITY TO TCB AND SAVE RWPL2 (REG 4).              Y02893 14800002
         ST RWPL2,WPL2SAVE         SAVE ADDR OF TEXT LINE        Y02893 14810002
         L     RTCB,TCBSAVE        TCB SAVED FROM ENTRY PT       Y02893 14820002
         NI    XVD3,X'FF'-XVD3TFX  TURN OF'MWTO SET TFX' BIT     Y02893 14830002
         USING TCB,RTCB                                                 14840002
         TM    TCBFLGS1,TCBFX      ARE ASYNCH EXITS NOT ALLOWED  Y02893 14850002
         BO    IEA1NSET            YES, DONT SET THE TCBFX BIT   Y02893 14860002
* THE ASYNCHRONOUS EIXTS ARENT ALLOWED BY SOME OTHER ROUTINE     Y02893 14870002
* SO WE SHOULD LEAVE THE TCBFX BIT ALONE.                        Y02893 14880002
         OI    TCBFLGS1,TCBFX      NO, BIT NOT SET SO SET IT     Y02893 14890002
         OI    XVD3,XVD3TFX        ALSO SET BIT SHOWING THAT     Y02893 14900002
* WE SET THE TCBFX BIT SO WE CAN TURN IT OFF                     Y02893 14910002
* FREE THE CMS LOCK                                              Y02893 14920002
IEA1NSET ST    RBASE,RBASESAV     SAVE BASE REG                  Y02893 14930002
         ST    XSAV,XVSAVSAV      SAVE XV BASE                   Y08293 14940002
         LR    R0,RWKREG          MOVE ADDR OF WORKAREA          Y02893 14950002
*  FREE THE FRR                                                         14960002
         SETFRR D,WRKREGS=(11,12)                                       14970002
         LA    XSAV,EPARM         GET ADDR OF ESTAE PARM AREA           14980002
         ST    XSAV,PARMPTR       PT TO ESTAE PARM AREA                 14990002
*        SETLOCK RELEASE,TYPE=CMS,RELATED=(UCM,IEAVMWTO(SETLCKS))Y02893 15000002
         SETLOCK RELEASE,TYPE=CMS,RELATED=(UCM,IEAVMWTO(SETLCKS))Y02893 15010002
         LR    RWKREG,R0          RESTORE WORKAREA BASE          Y02893 15020002
         L     RBASE,RBASESAV     RESTORE RBASE AND XSAV         Y02893 15030002
         L     XSAV,XVSAVSAV                                     Y02893 15040002
* SET UP FOR BR ENTRY TO WAIT.                                   Y02893 15050002
         L     R1,SVRBADDR        PICK UP ADDR OF SVRB           Y02893 15060002
         USING RBBASIC,R1         ADDR OF CURRENT RB             Y02893 15070002
* SET UP RETURN ADDR FROM WAIT BY STORING THE RETURN POINT ADDR  Y02893 15080002
* IN THE OLD PSW IN OUR RB.                                      Y02893 15090002
         LA    RWORK15,IEA1WTRT   LOAD ADDR OF RETURN POINT      Y02893 15100002
         ST    RWORK15,RBOPSW+FOUR SAVE IN RB                    Y02893 15110002
         ST    R1,WMJMAECB        PUT RB ADDR IN MAJOR           Y02893 15120002
* IEAVMDSV USES ADDR IN WMJMAECB AS THE RB TO POST.              Y02893 15130002
         L     R1,CVTPTR          ADDR THE CVT                 @YM00436 15140002
         DROP  R1                                                Y02893 15150002
         USING CVT,R1                                            Y02893 15160002
         L     R15,CVTVWAIT       BR ENTRY TO WAIT               Y02893 15170002
         DROP  R1                                                Y02893 15180002
         SR    R1,R1              WAIT WITHOUT ECB               Y02893 15190002
         LA    R0,ONE             WAIT COUNT OF ONE              Y02893 15200002
         STM   R0,R15,TCBGRS      STORE ALL REGS IN TCB          Y02893 15210002
         BR    R15                BRANCH TO WAIT                 Y02893 15220002
* THE REGISTERS GET RESTORED BY WAIT                             Y02893 15230002
* WAIT WILL FREE THE LOCAL LOCK.  GET BOTH LOCKS BEFORE          Y02751 15240002
* RESUMING PROCESSING.                                           Y02751 15250002
IEA1WTRT BAL   RRET,SETLCKS       SET LOCAL AND CMS LOCKS        Y02751 15260002
* NOW CHECK IF WE NEED TO TURN OFF THE TCBFX BIT. REG4 STILL     Y02893 15270002
* CONTAINS THE ADDR OF THE TCB.                                  Y02893 15280002
         TM    XVD3,XVD3TFX        DID WE SET THE TCBFX BIT      Y02893 15290002
         BNO   IEA1RSET            NO. LEAVE BIT ALONE           Y02893 15300002
         NI    TCBFLGS1,X'FF'-TCBFX YES. TURN TCBFX BIT OFF      Y02893 15310002
         DROP  RTCB               ADDR OF TCB                    Y02893 15320002
IEA1RSET L     RWPL2,WPL2SAVE     RESTORE PTR TO CURRENT LINE    Y02893 15330002
         B     IEA1FIND          FIND ID AGAIN TO INSURE THAT IT Y02893 15340002
*                                  HAS NOT BEEN PURGED WHILE SYSTEM     15350002
         EJECT                                                          15360002
*                                  WAS ENABLED                          15370002
IEA1GETN BAL   RRETURN,GETMINOR   GET A MINOR WQE                Y02893 15380002
*                                                                       15390002
*     THIS SECTION OF CODE BUILDS LINE 1 OF A MINOR WQE.                15400002
*                                                                       15410002
IEA1TLN1 OI    WMJMDSP,WMJMDSPG   SET MAJOR SUSPENDED            Y02751 15420002
         TM    XVD3,XVD3BLD1       BUILD LINE 1 OF MINOR         Y02893 15430002
         BZ    IEA2BLN2            NO, CHECK IF LINE 2           Y02893 15440002
*                                                                       15450002
*        MIN1INIT                 ,INITIALIZE LINE 1.            Y02893 15460002
         MIN1INIT                 ,INITIALIZE LINE 1.            Y02893 15470002
         TM    XVX0,XVX0FLJE       FIRST LINE JUST END LINE             15480002
         BO    IEA1DECR            YES, SKIP MOVING THE MSG      Y02893 15490002
         TM    WMNMLT1,WMNMLT1D    THIS LINE END LINE                   15500002
         BZ    IEA1TXTL            NO, GET TEXT LENGTH                  15510002
         TM    WMNMLT1,WMNMLT1C    DATA END LINE                        15520002
         BZ    IEA1DECR            NO, JUST END LINE                    15530002
*                                                                       15540002
*        MIN1MOV                                                 Y02893 15550002
IEA1TXTL MIN1MOV                  ,MOVE IN LINE 1                Y02893 15560002
         BAL   RRETURN,TEXTLINE    UPDATE TEXT POINTER         @ZA19274 15566003
         B     IEA1DECR           SKIP TO ENDUP ROUTINE          Y02893 15580002
         EJECT                                                          15590002
* THIS SECTION BUILDS LINE 2 OF THE MINOR WQE                    Y02893 15600002
*                                                                       15610002
*        MIN2INIT                                                Y02893 15620002
IEA2BLN2 MIN2INIT                 ,INITIALIZE LINE 2             Y02893 15630002
         TM    XVX0,XVX0FLJE       FIRST LINE JUST END                  15640002
         BO    IEA1DECR            YES, POST WTO ECB             Y02893 15650002
         TM    WMNMLT2,WMNMLT2D    END LINE                             15660002
         BZ    IEA2TXTL            NO, GET TEXT LENGTH           Y02893 15670002
         TM    WMNMLT2,WMNMLT2C    DAT END LINE                         15680002
         BZ    IEA1DECR            NO, JUST END LINE--POST ECB   Y02893 15690002
*                                                                       15700002
*        MIN2MOV                                                 Y02893 15710002
IEA2GLEN MIN2MOV                  ,MOVE IN LINE 2                Y02893 15720002
         BAL   RRETURN,TEXTLINE    UPDATE TEXT POINTER         @ZA19274 15724003
IEA1DECR BAL   RRETURN,ENDUP                                     Y02893 15734002
IEA1GOUT EQU   *                                                 Y02893 15742002
* END OF BLDMIN SEGMENT                                          Y02893 15752002
         SPACE 2                                                        15766602
         MEND                                                           15776602
         MACRO                                                          15780602
         MIN1INIT                                                       15790802
         EJECT                                                          15808202
* MINI1INIT SEGMENT                                              Y02893 15818202
* INITIALIZE LINE 1 OF THE MINOR                                 Y02893 15820202
IEA1BLN1 L     RMINR,XVCMINOR      ADR OF MINOR                  Y02893 15830702
         NI    WMJMMLW,X'FF'-WMJMMLWH    TURN OFF DUMMY MINOR FLAG      15840602
         DROP  RMAJR                                                    15850802
         USING WMNMEXT,RMINR                                            15862502
         MVC   WMNMUC1(ONE),0(RMAJR)  MOVE USE COUNT TO MINOR LINE 1    15870402
         NI    XVD3,X'FF'-XVD3BLD1   RESET BUILD LINE 1 FLAG            15881402
         OI    WMNMML2,WMNMML2H    SET 2ND LINE AVAILABLE               15891902
         TM    XVD3,XVD3TXT1       TEXT LINE 1 BEING USED               15908802
         BZ    IEA1TXL2            NO, MOVE LINE TYPE TO WQE     Y02893 15919102
         USING WPL,RWPL                                                 15929102
         LA    RWORK15,WPLTXT      ADR OF FIRST TEXT LINE               15939702
         LH    RCTR,XVMSGLGH       TEXT LENGTH +4                Y02893 15950002
         L     RWORK2,MLPART      LOAD PTR TO WPLML PART         Y02893 15960002
         B     IEA1VTYP                                          Y02893 15970002
         DROP  RWPL                                                     15980002
         USING WPLML,RWPL2                                              15990002
IEA1TXL2 LA    RWORK15,WPLMLTXT    ADDR OF TEXT                  Y20893 16000002
         L     R1,LINDEX          PICK UP NUMBER OF LINE         Y02893 16010002
         SR    RCTR,RCTR          ZERO FOR INSERT CHAR           Y02893 16020002
         IC    RCTR,LTABLE(R1)    GET LENGTH OF THIS LINE        Y02893 16030002
         LR    RWORK2,RWPL2        LINE TYPE ADR                        16040002
         LA    RWORK2,TWO(RWORK2)  INC TO POINT TO LINE TYPE            16050002
IEA1VTYP MVC   WMNMLT1(ONE),0(RWORK2) MOVE LINE TYPE TO MINOR    Y02893 16060002
* END OF MIN1INIT                                                Y02893 16070002
         SPACE 2                                                        16080002
         MEND                                                           16090002
         MACRO                                                          16100002
         MIN1MOV                                                        16110002
         EJECT                                                          16120002
* START OF MIN1MOV SEGMENT                                       Y02893 16130002
* MOVE IN LINE 1 OF THE MINOR                                    Y02893 16140002
* SET UP FOR MESSAGE LENGTH TEST                                 Y02893 16150002
IEA1TXTL SH    RCTR,KFOUR        ADJUST TEXT LENGTH              Y02893 16160002
* CHECK IF USER IS AUTHORIZED. IF SO ALLOW 71 CHARS IN TEXT.     Y02893 16170002
         LH    R1,K70             PICK UP LENGTH OF UNAUTH.      YM0214 16180002
         TM    XVD1,XVD1AUTH      IS USER AUTHORIZED             YM0214 16190002
         BNO   IEA1TXT2           NO, THEN ONLY ALLOW 70 CHARS   YM0214 16200002
         LH    R1,K71             YES, LET USER PUT OUT 71 CHARS YM0214 16210002
IEA1TXT2 CR    RCTR,R1            LEN<MAX FOR L/D LINE           YM0214 16220002
         BNH   IEA1BLK1            YES, USE TEXT LENGTH          YM0214 16230002
         LR    RCTR,R1            OTHERWISE, TRUNCATE            YM0214 16240002
IEA1BLK1 MVI   WMNMTXT1,BLANK      MOVE BLANK AS FIRST CHAR      Y02893 16250002
         TM    XVD1,XVD1AUTH       USER APF AUTHORIZED                  16260002
         BZ    IEA1OVE3                                          Y02893 16270002
         LA    RWORK9,WMNMTXT1+1    ADR OF MINOR TEXT AREA              16280002
         LR    RWORK5,RCTR         LENGTH FOR EXECUTE                   16290002
         BCTR  RWORK5,0            DECR BY 1 FOR EXECUTE                16300002
         EX    RWORK5,IEAMVTXT      MOVE TEXT TO MINOR                  16310002
         LA    RCTR,ONE(RCTR)      UPDATE TEXT LENGTH                   16320002
         B     IEA1STL1                                          Y02893 16330002
         DROP  RWPL2                                                    16340002
IEA1OVE3 MVI   WMNMTXT1+ONE,BLANK     BLANK SECOND CHAR          Y02893 16350002
         LA    RWORK9,WMNMTXT1+2                                        16360002
         LR    RWORK5,RCTR         LENGTH FOR EXECUTE                   16370002
         BCTR  RWORK5,0            DECR BY 1 FOR EX                     16380002
         EX    RWORK5,IEAMVTXT      MOVE TEXT                           16390002
         LA    RCTR,TWO(RCTR)      UPDATE TEXT LENGTH                   16400002
IEA1STL1 STC   RCTR,WMNMTL1       STORE TEXT LENGTH IN MINOR     Y02893 16410002
         LA    RWORK9,WMNMTXT1      ADR OF TEXT AREA 2                  16420002
         L     RMAJR,XVCMAJOR      ADR MAJOR WQE                        16430002
         MVC   WMNMHCT1,WMJMHCID-WMJMEXT(RMAJR)      MOVE HARD COPY ID  16440002
*                                  FROM MAJOR T0 MINOR WQE              16450002
*        BLNKSCAN WMNMTL1,IEA1                                   Y02893 16460002
         BLNKSCAN WMNMTL1,IEA1                                   Y02893 16470002
* END OF MIN1MOV SEGMENT                                         Y02893 16480002
         SPACE 2                                                        16490002
         MEND                                                           16500002
         MACRO                                                          16510002
&LABEL   BLNKSCAN  &LOCTION,&PRF  SCAN FOR TRAILING BLANKS       Y02893 16520002
* START OF BLNKSCAN SEGMENT                                      Y02893 16530002
* DELETE ANY TRAILING BLANKS                                     Y02893 16540002
&LABEL   LR    R1,RCTR            MOVE IN TEXT LENGTH            Y02893 16550002
         AR    R1,RWORK9          PT R1 TO BYTE AFTER TEXT       Y02893 16560002
         L     R14,MINUSONE       BXLE INCREMENT                 Y02893 16570002
         LR    R15,RWORK9         PREPARE COMPARAND FOR BXLE     Y02893 16580002
         LA    R15,TWO(R15)                                      Y02893 16590002
&PRF.LOOP BXLE  R1,R14,&PRF.DONE  HAVE WE SCANNED ENTIRE TEXT    Y02893 16600002
         CLI   ZERO(R1),BLANK     NO, SI THIS CHAR A BLANK       Y02893 16610002
         BE    &PRF.LOOP          YES, LOOP                      Y02893 16620002
&PRF.DONE CLR  R1,R15             DID WE STOP AT BEGINNING OF    Y02893 16630002
*                                 THE TEXT                       Y02893 16640002
         BL    &PRF.SKOT          YES, SKIP TO END               Y02893 16650002
* NO, THEN STORE NEW LENGTH OF TEXT                              Y02893 16660002
         SR    R1,RWORK9          COMPUTE LENGTH TO LAST NONBLK  Y02893 16670002
         LA    R1,ONE(R1)         ADD ONE FOR RIGHT LENGTH       Y02893 16680002
         STC   R1,&LOCTION        STORE LENGTH OF MESSAGE        Y02893 16690002
         LR    RCTR,R1            MOVE IN NEW LENGTH             Y02893 16700002
&PRF.SKOT EQU   *                 SKIP OUT ADDRESS               Y02893 16710002
* END OF BLNKSCAN SEGMENT                                        Y02893 16720002
         SPACE 2                                                        16730002
         MEND                                                           16740002
         MACRO                                                          16750002
         MIN2INIT                                                       16760002
*                                                                       16770002
*    THIS SECTION BUILDS LINE 2 OF A MINOR WQE.                         16780002
*                                                                       16790002
IEA2BLN2 L     RMINR,XVCMINOR      ADR OF MINOR WQE              Y02893 16800002
         MVC   WMNMUC2(ONE),0(RMAJR)      COPY USE COUNT FROM MAJOR     16810002
         LA    RWORK2,WMNMUC2      ADR OF 2ND MINOR LINE                16820002
         O     RWORK2,WMNMUC1      PRESERVE USE COUNT                   16830002
         ST    RWORK2,WMNMUC1      CHAIN TO FIRST LINE                  16840002
         OI    WMNMML2,WMNMML2C    INDICATE MINOR                       16850002
         NI    XVD3,X'FF'-XVD3BLD2 TURN OFF BUILD 2ND LINE FLAG         16860002
         NI    WMNMML2,X'FF'-WMNMML2H   RESET 2ND LINE AVAILABLE        16870002
         TM    XVD3,XVD3TXT1       TEXT LINE 1 BEING USED               16880002
         BZ    IEA2TX2A            GET TEXT ADR FOR NON-LINE 1   Y02893 16890002
         USING WPL,RWPL                                                 16900002
         LA    RWORK15,WPLTXT      ADR TEXT                      Y02893 16910002
         LH    RCTR,XVMSGLGH       TEXT LENGTH +4                Y02893 16920002
         L     RWORK2,MLPART      LOAD ADDR OF MULTI LINE PART   Y02893 16930002
         B     IEA2MVL2           SKIP TO MOVE OF LINE TYPE      Y02893 16940002
         DROP  RWPL                                                     16950002
         USING WPLML,RWPL2                                              16960002
IEA2TX2A LA    RWORK15,WPLMLTXT    ADR OF TEXT                   Y02893 16970002
         L     R1,LINDEX          GET CURENT LINE NUMBER         Y02893 16980002
         SR    RCTR,RCTR          ZERO FOR INSERT CHAR           Y02893 16990002
         IC    RCTR,LTABLE(R1)    LOAD LENGTH OF TEXT            Y02893 17000002
         LR    RWORK2,RWPL2        RWORK2 CONTAINS ADR OF LINE TYPE     17010002
         LA    RWORK2,TWO(RWORK2)   POINT TO LINE TYPE                  17020002
         DROP  RWPL2                                                    17030002
IEA2MVL2 MVC   WMNMLT2(ONE),0(RWORK2) MOVE LINE TYPE TO 2ND LINE Y02893 17040002
* END OF MIN2INIT                                                Y02893 17050002
         SPACE 2                                                        17060002
         MEND                                                           17070002
         MACRO                                                          17080002
         MIN2MOV                                                        17090002
         EJECT                                                          17100002
* START OF MIN2M OV SEGMENT                                      Y02893 17110002
* MOVE IN LINE 2 OF THE MINOR                                    Y02893 17120002
* CHECK WHETHER TO ALLOW 70 OR 71 CHARACTERS OF TEXT             Y02893 17130002
IEA2TXTL LH    R1,K70             LOAD NONAUTH USER LENGTH       YM0214 17140002
         TM    XVD1,XVD1AUTH      IS USER AUTHORIZED             YM0214 17150002
         BNO   IEA2GLEN           NO, USER 70 CHAR               YM0214 17160002
         LH    R1,K71             YES, USE 71 CHARS FOR TEST     YM0214 17170002
IEA2GLEN SH    RCTR,KFOUR         ADJUST FOR FLAGS               YM0214 17180002
         CR    RCTR,R1            LEN < MAX FOR L/D LINE         YM0214 17190002
         BNH   IEA2BTXT            YES, BLANK FIRST CHAR         YM0214 17200002
         LR    RCTR,R1            NO, TRUNCATE                   Y02893 17210002
IEA2BTXT MVI   WMNMTXT2,BLANK      BLANK FIRST CHAR              Y02893 17220002
         TM    XVD1,XVD1AUTH       ISSUER APF AUTHORIZED                17230002
         BZ    IEA2OVE4            NO, BLANK SECOND CHAR         Y02893 17240002
         LA    RWORK9,WMNMTXT2+1    ADR OF MINOR TEXT AREA              17250002
         LR    RWORK5,RCTR         LENGTH FOR EXECUTE                   17260002
         BCTR  RWORK5,0              ADJUST FOR EXECUTE                 17270002
         EX    RWORK5,IEAMVTXT      MOVE TEXT TO MINOR                  17280002
         LA    RCTR,ONE(RCTR)      INC MINOR LENGTH BY 1                17290002
         B     IEA2STL2                                          Y02893 17300002
IEA2OVE4 MVI   WMNMTXT2+1,BLANK    BLANK SECOND CHAR             Y02893 17310002
         LA    RWORK9,WMNMTXT2+2    ADR MINOR TEXT AREA                 17320002
         LR    RWORK5,RCTR         LENGTH FOR EXECUTE                   17330002
         BCTR  RWORK5,0              ADJUST FOR EXECUTE                 17340002
         EX    RWORK5,IEAMVTXT                                          17350002
         LA    RCTR,TWO(RCTR)      UPDATE LENGTH                        17360002
IEA2STL2 STC   RCTR,WMNMTL2       STORE MINOR LENGTH             Y02893 17370002
         LA    RWORK9,WMNMTXT2       ADR OF TEXT AREA 2                 17380002
         MVC   WMNMHCT2,WMNMHCT1     HARD COPY ID                       17390002
*        BLNKSCAN WMNMTL2,IEA2    SCAN FOR TRAILING BLANKS       Y02893 17400002
         BLNKSCAN WMNMTL2,IEA2    SCAN FOR TRAILING BLANKS       Y02893 17410002
* END OF MIN2MOV SEGMENT                                         Y02893 17420002
         SPACE 2                                                        17430002
         MEND                                                           17440002
         MACRO                                                          17450002
         CONSTNTS                                                       17460002
         EJECT                                                          17470002
* START OF CONSTANTS FOR IEAVMWTO                                Y02893 17480002
*                                                                       17490002
TEXTDCL  DC    C'IEE932I'          DEFAULT CONTROL LINE                 17500002
*                                                                       17510002
IEAMEXMV MVC   0(0,RWORK9),0(RWORK15) MOVE TEXT TO MAJOR                17520002
IEAMSHFT MVC   0(0,RWORK9),0(RWORK15) SHIFT TEXT 1 CHAR TO LEFT         17530002
IEAMVTXT MVC   0(0,RWORK9),0(RWORK15)  MOVE TEXT TO MINOR               17540002
*                                                                       17550002
*                                                              @ZA19274 17552003
TRINST   TR    0(0,R15),TRTAB                                  @ZA19274 17554003
*                                                              @ZA19274 17556003
         DS    0F                                                Y02893 17560002
WKSIZE   DC    AL4(WRKSIZE)   SIZE OF MWTO'S SAVE AND WORK AREA. Y02893 17570002
WKSUBPL  DC    AL4(SPL229)   GET CORE FROM SUBPOOL 231           Y02893 17580002
WKFREECN DC    AL1(SPL229),AL3(WRKSIZE) FREEMAIN PARAMETER       Y02893 17590002
WQEPLSZ  DC    F'4096'            SIZE OF WQE CELL EXTENSION     Y02893 17600002
SPLFRECN DC    AL1(SPL231),XL3'1000' FREE WQE EXTENSION PARM     Y02893 17610002
WWBPARM  DC    AL1(SPL231),AL3(WWBSIZE) WWB GET/FREE MAIN PARM   Y02893 17620002
SPL229   EQU   229                                                      17630002
SPL231   EQU   231                                               Y02893 17640002
KONE     DC    H'1'                                                     17650002
KFOUR    DC    H'4'                                                     17660002
K20      DC    H'20'              USED TO CHECK FOR EXTENSION    Y02893 17670002
*                                 OF WQE CELL POOL.              Y02893 17680002
K34      DC    H'34'                                                    17690002
K70      DC    H'70'                                                    17700002
KZERO    DC    F'0'                                                     17710002
K35      DC    H'35'                                             Y02893 17720002
K71      DC    H'71'                                             Y02893 17730002
WTPONLY  DC    X'0020'  CHECK FOR ONLY WTP ROUTE CODES           Y02893 17740002
MINUSONE DC    F'-1'              USED IN BXLE DECREMENT         Y02893 17750002
IDCONS   DC    C'SSOB'            SUBSYSTEM IDENTIFIER           Y02757 17760002
BLANKTST DC    X'00000040'         CHECK FOR BLANKS IN MSG       Y02893 17770002
MODULEID DC    C'MWTO'            FRR/ESTAE MODULE ID                   17780002
FZERO    DC    C'0000'            CHARACTER ZEROS                       17790002
CHARZ    EQU   C'Z'               INLINE AREA DESIGNATOR                17800002
NEWLINE  EQU   X'15'              NEWLINE CONTROL CHARACTER      Y02893 17810002
SPL250   EQU   250                                               Y02893 17820002
ZERO     EQU   0                                                 Y02893 17830002
ONE      EQU   1                                                        17840002
TWO      EQU   2                                                        17850002
THREE    EQU   3                                                        17860002
FOUR     EQU   4                                                        17870002
FIVE     EQU   5                                                        17880002
SIX      EQU   6                                                        17890002
SEVN     EQU   7                                                        17900002
EIGHT    EQU   8                                                        17910002
NINE     EQU   9                  LENGTH OF MOVE FOR JOBNAME     Y02893 17920002
TEN      EQU   10                                                       17930002
SIXTN    EQU   16                                                       17940002
TENLINES EQU   X'0A'              COMPARISON FOR TEN LINES       Y02893 17950002
NOLINES  EQU   X'00'                                             Y02893 17960002
BLANK    EQU   C' '                                              Y02893 17970002
PERIOD   EQU   C'.'               TIME STAMP FIELD SEPERATOR     Y02893 17980002
PPWTOFLG EQU   C'+'                PROB PGM--NO ACTION MSG              17990002
PPACTFLG EQU   C'@'                PROB PGM ACTION MSG FLAG             18000002
SUPACFLG EQU   C'*'                SUPERVISOR ACTION MSG                18010002
K4095    EQU   4095                                                     18020002
*  RETURN CODE EQUATES                                           Y02893 18030002
LINERR   EQU   X'04'  ERROR FOUND IN NUMBER OF LINES             Y02893 18040002
NOIDMCH  EQU   X'08'  COULDN'T FIND A MATCH FOR IN IN REG 0      Y02893 18050002
INVLDLT  EQU   X'0C'  LINE TYPE WAS INVALID.                     Y02893 18060002
RCWTP    EQU   X'10'  WTP ROUTE CODE WAS USED.                   Y02893 18070002
HCONLY   EQU   X'14'  MLWTO WAS FOR HARDCOPY ONLY.               Y02893 18080002
         DS    0F                                                       18090002
TABLE    DC    C'0123456789ABCDEF'   TABLE TO CONVERT ROUT CODES        18100002
         DS    0F                                                       18110002
TRTAB    DC    74X'40'                                                  18110903
         DC    X'4A4B4C4D4E4F504040404040404040405A5B5C5D5E5F' @ZA19274 18111803
         DC    X'60614040404040404040406B6C6D6E6F404040404040' @ZA19274 18112603
         DC    X'404040407A7B7C7D7E7F408182838485868788894040' @ZA29682 18113403
         DC    X'4040404040919293949596979899404040404040'     @ZA19274 18113803
         DC    X'4040A2A3A4A5A6A7A8A9'                         @ZA29682 18114203
         DC    23X'40'                                         @ZA19274 18115203
         DC    X'C1C2C3C4C5C6C7C8C940404040404040D1D2D3D4D5D6' @ZA19274 18116603
         DC    X'D7D8D94040404040404040E2E3E4E5E6E7E8E9404040' @ZA19274 18117403
         DC    X'404040F0F1F2F3F4F5F6F7F8F9404040404040'                18117803
         DS    0F                                              @ZA19274 18118203
D23      DC    X'80D23000'         INVALID PARM LSIT ERROR              18120002
KTWO     DC    H'2'                                                     18130002
KTHREE   DC    H'3'                                                     18140002
KTEN     DC    H'10'                                                    18150002
ALLREGS  DC    X'FFFF'             RESTORE ALL REGS MAP                 18160002
HIBITON  DC    X'80000000'         END OF LIST INDICATOR       @ZA03242 18165003
PATCHLOC DS    50F                PATCHAREA                             18170002
FTLOCK   EQU   X'04'              LOCK FOOT PRINT                       18180002
FTSSOB   EQU   X'03'              SUSBYSTEM EXIT FOOT PRINT             18190002
ELIST    ESTAE ,MF=L              CREATE ESTAE PARM LIST                18200002
         MEND                                                           18210002
         EJECT                                                          18220002
         PROLOG                   ,BRING IN SPECIFICATIONS       Y02893 18230002
         EJECT                                                          18240002
* START OF MAIN SEGMENT                                                 18250002
IEAVMWTO CSECT                                                          18260002
* ENDUP(C)                                                     @ZA08451 18263003
* IEAJBLKL (A,C) APPROX 136220                                 @ZA14970 18264003
* IEAJMVAT (A) APPROX 138400                                   @ZA14991 18265003
* GETLINES (A,C) APPROX 091400  ZERO LENGTH                    @ZA16869 18265103
* PROLOG (A,C) 00470002,00660002,01450003,01900002             @ZA19274 18265203
* CONSTANTS (A) APPROX 18110002    APAR FIX TO CONVERT         @ZA19274 18265303
* IEAHTRND (A) APPROX 07280002     DISPLAY CONTROL AND         @ZA19274 18265403
* IEAHSVSP (C) APPROX 07280002     NONPRINTABLE TO BLANKS      @ZA19274 18265503
* IEAJMVLT (D) APPROX 11870002     AFTER RETURN FROM THE       @ZA19274 18265603
* BMAJCKNL (D) APPROX 14280002     SUB-SYSTEM EXIT.            @ZA19274 18265703
* GETWQE (C) APPROX 219400,219600                              @ZA20159 18265803
* TRTAB (C) APPROX 181134  REPAIR XLATE CHARS X'79'- X'7E'     @ZA29682 18265903
*                                                                       18266003
RID       EQU   0      UCM OR CONSOLE ID                                18270002
R0       EQU   0                  WORK REG ZERO                  Y02893 18280002
R1       EQU   1                  WORK REG ONE                   Y02893 18290002
RPARM     EQU   1      PARAMETER REG                                    18300002
RWQE      EQU   1    WQE BASE                                           18310002
RPRFX     EQU   1                                                Y02893 18320002
RSSOB    EQU   2                  BASE REG FOR SUBSYSTEM BLOCK   Y02757 18330002
RWORK2    EQU   2      WORK REG                                         18340002
RCVT      EQU   3      CVT ADDRESS                                      18350002
RCTR      EQU   3                                                       18360002
RUCM     EQU   3                  BASE REG FOR THE UCB                  18370002
RTCB      EQU   4      TCB  ADDRESS                                     18380002
RWPL2    EQU    4     ADR OF TEXT LINE BEING PROCESSED           Y02893 18390002
RWORK5    EQU   5                                                       18400002
RWPL      EQU   6      PARM LIST BASE                                   18410002
RASCB    EQU   7                  ADDRESS OF CALLER'S ASCB       Y02893 18420002
RMINR     EQU   7                                                       18430002
RMAJR     EQU   8                                                       18440002
COUNT     EQU   8                                                Y02893 18450002
RWORK9    EQU   9    WORK REG                                           18460002
LEN       EQU   9                                                       18470002
UCMREG    EQU   10     UCM BASE                                         18480002
RBASE2    EQU   10    SECOND BASE REG FOR THE MODULE                    18490002
RBASE     EQU   11     BASE REG                                         18500002
XSAV      EQU   12      SAVE AREA BASE                                  18510002
RWKREG   EQU   13                 BASE REG FOR OUR SAVE AND WORK Y02893 18520002
*                                 AREA.                          Y02893 18530002
RRETURN  EQU   14     RETURN ADDR                                       18540002
R14      EQU   14                 REGISTER 14                    Y02893 18550002
R15      EQU   15                 REGISTER 15                    Y02893 18560002
RRET     EQU   15     XCTL REG                                          18570002
RWORK15  EQU   15                                                       18580002
* GET AND INITIALIZE A SAVE AREA                                 Y02893 18590002
*        INITIAL                                                 Y02893 18600002
         INITIAL                  ,SAVE REGISTERS AND INITIALIZE Y02893 18610002
         TM    XVX1,XVX1STOP      CHECK IF NO SPACE FOR WORKAREA Y02893 18620002
         BO    IEAMGRET           RETURN TO VWTO IF NO SPACE.    Y02893 18630002
*        TSTMLWTO                 ,CHECK THE USERS PARM LIST     Y02893 18640002
         TSTMLWTO                 ,CHECK THE USERS PARM LIST     Y02893 18650002
*  CHECK IF AN ERROR WAS FOUND IN TSTMLWTO THAT WOULD STOP       Y02893 18660002
*   THE PROCESSING OF THIS MLWTO.                                Y02893 18670002
IEAMCHKS TM    XVX1,XVX1STOP      IS THE STOP PROCESSING FLAG ON Y02893 18680002
         BO    IEAMSTOP           YES, FREE OUR SAVE AREA AND    Y02893 18690002
*                                 RETURN.                        Y02893 18700002
*  SET THE LOCAL AND CMS LOCKS.                                  Y02751 18710002
         L     R1,PARMPTR         PT AT ESTAE PARMAREA                  18720002
         USING PARMLIST,R1                                              18730002
         MVC   PARMRTAD,KZERO     CLEAR RETRY ADDRESS                   18740002
         DROP  R1                                                       18750002
         BAL   RRET,SETLCKS       CALL THE SET LOCK ROUTINE      Y02751 18760002
         STM   R0,R15,RECREGS     SAVE REGS FOR FRR RECOVERY            18770002
         MVC   XVCMAJOR,KZERO     INSURE THAT ADDR OF MAJOR IS ZERO     18780002
IEAMTSTC TM    XVD2,XVD2CON       ARE WE CONNECTING MINOR LINES         18790002
         BO    IEAMBMIN           YES, GO BUILD THE MINOR.              18800002
*  NO, THEN WE ARE BUILDING THE MAJOR.                                  18810002
*        BLDMAJ                   ,BUILD THE MAJOR WQE           Y02893 18820002
         BLDMAJ                   ,BUILD THE MAJOR WQE           Y02893 18830002
         B     IEAMSTTS           TEST IF STOP WAS SET                  18840002
IEAMBMIN EQU   *                                                 Y02893 18850002
*        BLDMIN                   ,BUILD THE MINOR WQES.         Y02893 18860002
         BLDMIN                   ,BUILD THE MINOR WQES.         Y02893 18870002
IEAMSTTS TM    XVX1,XVX1STOP      WAS AN ERROR FOUND?                   18880002
         BO    IEAMFREL           YES, DON'T TAKE EXIT OR POST   Y02893 18890002
         TM    XVD2,XVD2DELW      MESSAGE TO BE DELETED?       @Y02668P 18890903
         BNO   IEAMNOST           NO,TAKE SUBSYSTEM EXIT       @Y02668P 18891803
         DROP  RMINR              RELEASE MINOR BASE           @Y02668P 18892703
         USING WMJMEXT,RMAJR      ADDRESSABILITY FOR MAJOR     @Y02668P 18893603
* NOW SET UP THE FLAGS SO THAT THIS MLWTO IS DELETED AND SENT  @Y02668P 18894503
* TO HARDCOPY.                                                 @Y02668P 18895403
         OI    WMJMECBF,WMJMMAJD  INDICATE MAJOR IS DELETED    @Y02668P 18896303
         L     RPRFX,UCMBPTR      GET ADDRESS OF UCB BASE      @Y02668P 18897203
         SH    RPRFX,KFOUR        PT AT PREFIX POINTER         @Y02668P 18898103
         L     RPRFX,ZERO(RPRFX)  GET PREFIX ADDRESS           @Y02668P 18899003
         USING UCMPRFX,RPRFX      ADDRESSABILITY FOR PREFIX    @Y02668P 18900003
         OI    UCMSFLG2,UCMSYSI   INDICATE CLEANUP NEEDED      @Y02668P 18901003
         OI    WMJMBUF,WMJMBUFC+WMJMBUFE INDICATE WQE SERVICED @Y02668P 18902003
*                                 AND READY FOR HARDCOPY       @Y02668P 18903003
         OI    WMJMDSP,WMJMDSPB   INDICATE QUEUB TO H.C.       @Y02668P 18904003
         DROP  RPRFX              RELEASE PREFIX BASE          @Y02668P 18905003
IEAMNOST EQU   *                  SUBSYSTEM EXIT               @Y02668P 18906003
*        SUBSEXIT                 ,PASS LINE TO SUBSYSTEM      @Y02668P 18907003
         SUBSEXIT                 ,PASS LINE TO SUBSYSTEM      @Y02668P 18913003
* THE LOCKS WILL BE FREE'D BY THE SUBSYSTEM EXIT SEGMENT.        Y02893 18920002
*        POSTOECB                 ,POST THE UCMOECB              Y02893 18930002
         POSTOECB                 ,POST THE UCMOECB              Y02893 18940002
IEAMMORE CLI   XVX2,NOLINES       ANY MORE LINES TO DO           Y02893 18950002
         BH    IEAMSKPS           YES, SKIP SETTING THE STOP BIT Y02893 18960002
         OI    XVX1,XVX1STOP      NO MORE LINES SO STOP.         Y02893 18970002
IEAMSKPS B     IEAMCHKS           GO CHECK IF WE SHOULD STOP.    Y02893 18980002
*                                                                       18990002
* THIS CODE WILL GET CONTROL ONLY IF AN ERROR WAS ENCOUNTERED           19000002
* WHILE RUNNING UNDER THE ESTAE. WE ARE PROTECTED BY THE ESTAE          19010002
* WHILE CHECKING THE USER'S WPL. IF THERE IS AN ERROR THEN WE ASSUME    19020002
* THAT THE WPL CAUSED THE ERROR. THE USER WILL BE ABENDED WITH A        19030002
* D23 ABEND CODE.                                                       19040002
IEAVRETY OI    XVX1,XVX1STOP      STOP PROCESSING                       19050002
         OI    XVD1,XVD1PERR      SET ERROR BIT TO ABEND THE USER       19060002
         B     IEAMSTOP           GO FREE ESTAE,SAVREA AND RETURN       19070002
*                                                                       19080002
IEAMFREL EQU   *                                                 Y02893 19090002
*  FREE THE LOCAL AND CMS LOCKS                                  Y02751 19100002
         BAL   RRET,FRELCKS       CALL THE FREE LOCK SUBROUTINE  Y02751 19110002
IEAMSTOP EQU   *                                                 Y02893 19120002
* FREE THE ESTAE RECOVERY                                               19130002
*        ESTAE 0                  FREE OUR ESTAE                        19140002
         ESTAE 0                  FREE OUR ESTAE                        19150002
*        FREESAVE                 ,FREE OUR SAVE AREA            Y02893 19160002
         FREESAVE                 ,FREE OUR SAVE AREA            Y02893 19170002
*  THE SEGMENT FREESAVE WILL HAVE RESTORED THE POINTER TO THE    Y02893 19180002
*  CALLER'S SAVE AREA IN REG 13.                                 Y02893 19190002
IEAMGRET L     RPARM,XVCMAJOR       MAJOR WQE ADR                Y02893 19200002
         LTR   RPARM,RPARM         IS THERE A MAJOR WQE?         Y02893 19210002
         BZ    IEAMRETN           BRANCH IF NONE.                       19220002
         L     RPARM,XVWQEID     YES, GET SEQUENCE NO. FROM SAVE AREA   19230002
         SRL   RPARM,EIGHT      SHIFT OUT CONSOLE ID                    19240002
* PUT MSG ID OR ZERO INTO XWQEID FIELD IN XVSAV.                 Y02893 19250002
* THIS FIELD WILL BE RETURNED TO THE USER BY VMWTO.              Y02893 19260002
IEAMRETN ST    RPARM,XVWQEID  PUT MSG ID BACK INTO XVSAV         Y02893 19270002
*        RETURN (14,12)           RETURN TO VWTO                 Y02893 19280002
         RETURN (14,12)           RETURN TO VWTO                 Y02893 19290002
         CLNUP                    ,INSERT FRR CLEANUP ROUTINE           19300002
         EJECT                                                          19310002
         CONSTNTS                 ,INSERT THE NEEDED CONSTANTS   Y02893 19320002
         EJECT                                                          19330002
*        MACRO                    START OF GETN SUBROUTINE              19340002
*  GETMINOR SUBROUTINE                                           Y02893 19350002
*  INPUT - XVCMAJOR CONTAINS ADDR OF A MAJOR WQE                 Y02893 19360002
*          XVCMINOR CONTAINS ADDR OF LAST MINOR  ON THE CHAIN    Y02893 19370002
*         IF WE ARE CREATING THE NEXT MINOR.                     Y02893 19380002
*  THIS ROUTINE ASSUMES THAT A WQE IS AVAILABLE UNDER THE        Y02893 19390002
*   UCMWQLM COUNT.                                               Y02893 19400002
*  OUTPUT - A NEW MINOR IS QUEUED OFF THE MAJOR WQE.             Y02893 19410002
*        THE MINOR IS ZEROED.                                    Y02893 19420002
GETMINOR ST    RRETURN,XVA0       SAVE THE CALLER'S ADDR.        Y02893 19430002
         USING WMJM,RMAJR                                        Y02893 19440002
IEANGETN BAL   RRETURN,GETWQE      GET A MINOR WQE                      19450002
* CHECK IF A MINOR WAS OBTAINED.                                 Y02893 19460002
         LTR   RWQE,RWQE          WAS A WQE OBTAINED.            Y02893 19470002
         BNZ   IEANGET1           YES, ADD IT TO THE CHAIN.      Y02893 19480002
* NO A WQE WASN'T OBTAINED. SET ERROR FLAGS.                     Y02893 19490002
         OI    XVX1,XVX1STOP      STOP PROCCESSING               Y02893 19500002
         OI    XVD1,XVD1PERR      SET ERROR FLAGS                Y02893 19510002
         B     IEANGET2                                          Y02893 19520002
IEANGET1 L     RMAJR,XVCMAJOR      MAJOR WQE ADR                        19530002
         L     RMINR,WMJMMIN       MINOR QUEUED TO MAJOR                19540002
         LTR   RMINR,RMINR         IS THERE A MINOR                     19550002
         BNZ   IEAMINR2            YES, QUEUE TO LAST MINOR             19560002
         ST    RWQE,WMJMMIN        QUEUE NEW MINOR TO MAJOR             19570002
         OI    WMJMMLW,WMJMMLWH    SET DUMMY MINOR QUEUED               19580002
         B     IEAMBL12            SET MINOR FLAGS                      19590002
         DROP  RMAJR                                                    19600002
         USING WMNMEXT,RMINR                                            19610002
IEAMINR2 L     RMINR,XVCMINOR      ADR LAST MINOR Q'D --FROM FINDID     19620002
         O     RWQE,WMNMUC2        PRESERVE USE COUNT FOR 2ND LINE      19630002
         ST    RWQE,WMNMUC2        QUEUE MINOR                          19640002
IEAMBL12 LR    RMINR,RWQE         ADR OF NEW MINOR                      19650002
         OI    XVD3,XVD3BLD1+XVD3BLD2     BUILD LINE 1 AND 2            19660002
         OI    WMNMML1,WMNMML1C+WMNMML1H SET MINOR WQE AND GETMAINED    19670002
         DROP  RMINR                                                    19680002
         ST    RMINR,XVCMINOR      STORE ADR CURRENT MINOR              19690002
IEANGET2 EQU   *                                                 Y02893 19700002
         L     RRETURN,XVA0       RESTORE RETURN ADDR            Y02893 19710002
         BR    RRETURN            RETURN TO CALLER.              Y02893 19720002
         EJECT                                                          19730002
*        MACRO                    START OF ENDUP SUBROUTINE             19740002
ENDUP    EQU   *                                                 Y02893 19750002
         SR    RWORK2,RWORK2       ZERO REG 2                    Y02893 19760002
         IC    RWORK2,XVX2         # OF LINE TO DO                      19770002
         SH    RWORK2,KONE         DECREMENT                            19780002
         STC   RWORK2,XVX2         UPDATE XVX2                          19790002
         L     RMAJR,XVCMAJOR      INIT MAJOR ADR FOR FORCE END         19800002
         CLI   XVX2,NOLINES        ANY MORE LINES TO DO          Y02893 19810002
         BNE   IEAERETN           YES, RETURN TO CALLER          Y02893 19820002
IEAMTSTE TM    XVX0,XVX0FEDE       FORCE END                            19830002
         BZ    IEAERETN           NO, RETURN TO CALLER           Y02893 19840002
         USING WMJMEXT,RMAJR                                            19850002
         TM    WMJMMLW,WMJMMLWH    DUMMY MINOR QUEUED                   19860002
         BO    IEAEJEND            YES, FLAG MAJOR AS END        Y02893 19870002
         L     RMINR,XVCMINOR       MINOR ADR                           19880002
         DROP  RMAJR                                                    19890002
         USING WMNMEXT,RMINR                                            19900002
         LTR   RMINR,RMINR         IS THERE AMINOR                      19910002
         BZ    IEAEJEND            NO, FLAG MAJOR AS END         Y02893 19920002
IEAEP2ND CLC   WMNMNX1(THREE),KZERO    NEXT LINE PTR 0           Y02893 19930002
         BE    IEAE1END            FLAG LINE 1 AS END            Y02893 19940002
         CLC   WMNMNX2(THREE),KZERO    PTR TO NXT MINOR 0               19950002
         BE    IEAE2END            FLAG LINE 2 AS END            Y02893 19960002
         L     RMINR,WMNMUC2       PTR TO NEXT MINOR                    19970002
         B     IEAEP2ND            FIND END OF CHARIN            Y02893 19980002
IEAE1END CLI   WMNMTL1,ZERO        MINOR CONTAIN TEXT          @ZA08451 19980703
         BNE   IEAD1END            YES, THEN DATA END          @ZA08451 19981403
         MVI   WMNMLT1,WMNMLT1D    NO, FLAG END LINE ONLY      @ZA08451 19982103
         B    IEAERETN             RETURN TO CALLER            @ZA08451 19982803
IEAD1END MVI   WMNMLT1,WMNMLT1C+WMNMLT1D  SET DATA END FLAG    @ZA08451 19983503
         B     IEAERETN            RETURN TO CALLER            @ZA08451 19984203
IEAE2END CLI   WMNMTL2,ZERO        TEXT IN SECOND MINOR        @ZA08451 19984903
         BNE   IEAD2END            YES, THEN DATA END          @ZA08451 19985603
         MVI   WMNMLT2,WMNMLT2D    NO, FLAG END LINE ONLY      @ZA08451 19986303
         B     IEAERETN            RETURN TO CALLER            @ZA08451 19987003
IEAD2END MVI   WMNMLT2,WMNMLT2C+WMNMLT2D  SET DATA END FLAG    @ZA08451 19987703
         B     IEAERETN            RETURN TO CALLER            @ZA08451 19988403
         DROP  RMINR                                                    20030002
         USING WMJMEXT,RMAJR                                     Y02893 20040002
IEAEJEND MVI   WMJMLTYP,WMJMLTYC+WMJMLTYD  FLAG MAJOR AS DATA ENDY02893 20050002
IEAERETN BR    RRETURN            RETURN TO CALLER               Y02893 20060002
         EJECT                                                          20070002
*        MACRO                    START OF FINDID SUBROUTINE            20080002
*                                                                       20090002
* FINDID SUBROUTINE WILL FIND AN EXISTING ID                            20100002
* FOR A CONNECTING MLWTO                                                20110002
*                                                                       20120002
FINDID   EQU   *                                                        20130002
* PROTECT CONTENTS OF RWPL2 AROUND CHECK FOR JOBSTEP AND MEMORY  Y02893 20140002
         ST    RWPL2,WPL2SAVE     SAVE IN OUR SAVEAREA           Y02893 20150002
IEAISTRT L     RUCM,UCMBPTR                                             20160002
         USING UCM,RUCM                                                 20170002
         L     RWQE,UCMWTOQ        FIRST WQE ON SYSTEM QUEUE            20180002
IEAISEAR LTR   RWQE,RWQE           END OF QUEUE                         20190002
         BZ    IEAINOID            YES, RETURN                          20200002
         DROP  RMAJR                                             Y02893 20210002
         DROP  RUCM                                                     20220002
         USING WMJMEXT,RWQE                                             20230002
         TM    WMJMMLW,WMJMMLWB    MAJOR WQE                            20240002
         BZ    IEAINXWQ            NO, GET NEXT WQE                     20250002
         CLC   XVWQEIDA(THREE),WMJMMSGN+ONE       MSG IDS MATCH         20260002
         BNE   IEAINXWQ                                                 20270002
         TM    WMJMLTYP,WMJMLTYD   IS THIS END LINE                     20280002
         BO    IEAINOID            YES, ERROR                           20290002
* CHECK THAT THE MSG WAS ISSUED BY A PROGRAM IN THE SAME         Y02893 20300002
* MEMORY AND JOB STEP AS THE CALLER.                             Y02893 20310002
         L     RTCB,TCBSAVE       LOAD ADDR OF CALLER'S TCB      Y02893 20320002
         L     RASCB,ASCBSAVE     DO SAME FOR ASCB               Y02893 20330002
         USING ASCB,RASCB                                        Y02893 20340002
         USING TCB,RTCB                                          Y02893 20350002
         CLC   WMJMASID,ASCBASID  DO THE MEMORIES MATCH          Y20893 20360002
         BNE   IEAINOID           NO, THEN NO ID MATCH           Y02893 20370002
         CLC   WMJMJTCB,TCBJSTCB  SAME JOB STEP                  Y02893 20380002
         BNE   IEAINOID           NO, THEN NO ID MATCH           Y02893 20390002
         DROP  RTCB                                              Y02893 20400002
         DROP  RASCB                                             Y02893 20410002
* THE MESSAGE WAS ISSUED BY A USER IN THE SAME ADDRESS SPACE     Y02893 20420002
* AND JOB STEP. CONTINUE                                         Y02893 20430002
         ST    RWQE,XVCMAJOR       STORE MAJOR ADR IN SVRB              20440002
         L     RWORK2,WMJMMIN      PTR TO FIRST MINOR                   20450002
         ST    RWORK2,XVCMINOR     STORE MINOR ADR                      20460002
         TM    WMJMMLW,WMJMMLWH    DOES MINOR HAVE TEXT                 20470002
         BO    IEAIDUMM            NO, DUMMY                            20480002
         B     IEAITST1            CHECK IF MINOR LINE 2 AVAIL          20490002
IEAINXWQ L     RWQE,WMJMUC         LINK POINTER                         20500002
         LA    RWQE,0(RWQE)        CLEAR USE COUNT                      20510002
         B     IEAISEAR                                                 20520002
         USING WMNMEXT,RWORK2                                           20530002
IEAITST1 TM    WMNMLT1,WMNMLT1D    FIRST LINE AN END                    20540002
         BO    IEAINOID            YES, ERROR                           20550002
         TM    WMNMLT2,WMNMLT2D    SECOND LINE END                      20560002
         BO    IEAINOID            YES, ERROR                           20570002
         L     RWORK2,WMNMUC2      PTR TO NEXT MINOR                    20580002
         LA    RWORK2,0(RWORK2)    CLEAR USE COUNT                      20590002
         LTR   RWORK2,RWORK2       IS THERE A MINOR                     20600002
         BNZ   IEAISADD            NO, STORE ADR AND CONTINUE SEARCH    20610002
          L    RWORK2,XVCMINOR     ADR OF LAST MINOR                    20620002
         TM    WMNMML2,WMNMML2H    SECOND LINE AVAILABLE                20630002
         BZ    IEAIRTRN            NO, RETURN                           20640002
IEAI1ST  OI    XVD3,XVD3BLD2       SET BUILD SECOND LINE FLAG           20650002
         B     IEAIRTRN            RETURN TO CALLER                     20660002
IEAISADD ST    RWORK2,XVCMINOR    SAVE MINOR ADR                        20670002
         B     IEAITST1            CHECK IF LINE 2 IS AVAILABLE         20680002
         DROP  RWORK2                                                   20690002
         USING  WMJMEXT,RWQE                                            20700002
IEAIDUMM OI    WMJMMLW,WMJMMLWF   SET CHAIN REUSABLE FLAG               20710002
         L     RWORK2,XVCMINOR      LOAD MINOR PTR                      20720002
         DROP  RWQE                                                     20730002
         USING WMNMEXT,RWORK2                                           20740002
         XC    WMNM(WMNMSIZE),WMNM  ZERO MINOR                          20750002
         OI    WMNMML1,WMNMML1C+WMNMML1H   SET MINOR AND GETMAINED FLAG 20760002
         OI    WMNMML2,WMNMML2H    INDICATE LINE 2 AVAILABLE            20770002
         OI    XVD3,XVD3BLD1+XVD3BLD2   SET BUILD LINE 1 AND 2          20780002
         B     IEAIRTRN            RETURN TO CALLER                     20790002
         DROP  RWORK2                                                   20800002
IEAINOID MVI   XVRETCOD,NOIDMCH    SET RETURN CODE               Y02893 20810002
         OI    XVX1,XVX1NOID       INDICATE NO ID FOUND                 20820002
         XC   XVCMAJOR(EIGHT),XVCMAJOR  ZERO MAJOR AND MINOR PTRS       20830002
IEAIRTRN L     RWPL2,WPL2SAVE     RESTORE RWPL2                  Y02893 20840002
         BR    RRETURN                                           Y02893 20850002
         EJECT                                                          20860002
         EJECT                                                          21050002
*        MACRO REFERLEN SUBROUTINE                               Y02755 21060002
* THIS ROUTINE WILL INSURE THAT THE BYTE WHOSE ADDRESS IS IN     Y02755 21070002
* RRET(15) IS ACCESSIBLE BY THE CALLER.                          Y02755 21080002
*  INPUT - RRET(15) IS ADDR OF BYTE IN WPL TO BE CHECKED.        Y02755 21090002
*  OUTPUT -RRET IS ZERO IF BYTE ISN'T ACCESSIBLE BY THE USER     Y02755 21100002
*          RRET IS NONZERO IF OK.                                Y02755 21110002
*                                                                Y02755 21120002
REFERLEN EQU   *                                                 Y02755 21130002
* SWITCH TO USER'S PROTECT KEY                                   Y02755 21140002
         ST    RWORK2,XVA0        SAVE REG 2 IN XVSAV            Y02755 21150002
         STM   R0,R15,RECREGS     SAVE REGS FOR RETRY                   21160002
         L     RWORK2,PARMPTR     ADDR OF PARM AREA                     21170002
         USING PARMLIST,RWORK2                                          21180002
         LA    RPARM,IEARPROB     RETRY ADDR                            21190002
         ST    RPARM,PARMRTAD     IF ERROR IN INSERT THEN GO TO         21200002
*                                 IEARPROB                              21210002
         DROP  RWORK2                                                   21220002
         USING TCB,RTCB                                          Y02755 21230002
*        MODESET EXTKEY=RBT234,WORKREG=2                         Y02755 21240002
         MODESET EXTKEY=RBT234,WORKREG=2                         Y02755 21250002
         DROP  RTCB                                              Y02755 21260002
         IC    RWORK2,ZERO(RRET)  ACCESS THE BYTE PTD AT BY RRET Y02755 21270002
* IF WE GET HERE THEN THE BYTE IS ACCESSIBLE TO THE USER.        Y02755 21280002
IEARSETK EQU   *                                                 Y02893 21290002
         MODESET EXTKEY=SUPR      RESTORE SUPERVISOR KEY         Y02755 21300002
         L     RWORK2,XVA0        RESTORE CONTENTS OF REG 2.     Y02755 21310002
         BR    RRETURN            RETURN TO CALLER               Y02755 21320002
IEARPROB EQU   *                                                 Y02755 21330002
* IF WE GET HERE THEN THE ESTAE ROUTINE GOT CONTROL.             Y02755 21340002
         XR    RRET,RRET          ZERO RRET TO INDICATE ERROR.   Y02755 21350002
         B     IEARSETK           GO SET KEY & RETURN.           Y02755 21360002
         EJECT                                                          21370002
*        MACRO                                                          21380002
*   SUBROUTINE GETWQE WILL GET A WQE FROM THE WQE CELL POOL.     Y02893 21390002
*   THE WQE WILL BE ZEROED.                                      Y02893 21400002
*   INPUTS - UCMWQECP IS THE CELL POOL ID                        Y02893 21410002
*            UCMWQNR IS THE NUMBER OF WQES CURRENTLY IN USE.     Y02893 21420002
*   OUTPUTS - RWQE WILL CONTAIN THE ADDRESS OF THE ZEROED WQE IF Y02893 21430002
*             ONE HAS BEEN OBTAINED.                             Y02893 21440002
*             RWQE WILL BE ZERO IF A WQE WASN'T AVAILABLE        Y02893 21450002
*   PROCESS - REGS 14,15,0,1,2 ARE SAVED AND USED IN THIS ROUTINEY02893 21460002
*             IF A CELL IS NOT AVAILABLE, THE ROUTINE CHECKS IF  Y02893 21470002
*             EXTENSION IS NEEDED. IF ONE IS NEEDED IT IS OBTAINDY02893 21480002
*             AND WE ATTEMPT TO GET A CELL AGAIN.                Y02893 21490002
*                                                                Y02893 21500002
GETWQE   EQU   *                                                 Y02893 21510002
         STM   RRETURN,RWORK2,GETSAVE                            Y02893 21520002
         L     RUCM,UCMBPTR                                             21530002
         USING UCM,RUCM                                                 21540002
         LA    RWORK2,KONE        SET NOT DONE INDICATOR IN R2.  Y02893 21550002
IEAGLOOP LTR   RWORK2,RWORK2      TEST END OF GET LOOP           Y02893 21560002
         BZ    IEAGRETN           YES, RETURN TO USER            Y02893 21570002
* NOT DONE. GET A WQE FROM THE CELLPOOL,                         Y02893 21580002
         L     RID,UCMWQECP       GET CELLPOOL ID FOR WQES.      Y02893 21590002
*        GETCELL CPID=(0),BRANCH=YES GET A WQE CELL              Y02893 21600002
         GETCELL CPID=(0),BRANCH=YES GET A WQE CELL              Y02893 21610002
* NOW CHECK IF CELL WAS OBTAINED. RETURN CODE IS IN R15.         Y02893 21620002
         LTR   RRET,RRET          DID WE GET A CELL              Y02893 21630002
         BNZ   IEAGECHK           NO, CHECK TYPE OF RETURN CODE  Y02893 21640002
* YES, WE GOT A  WQE                                             Y02893 21650002
         XC    0(WMJMSIZE,RWQE),0(RWQE) ZERO OUT THE WQE.        Y02893 21660002
         LH    RWORK2,UCMWQNR     INCREMENT NBR OF WQES.         Y02893 21670002
         LA    RWORK2,ONE(RWORK2)                                Y02893 21680002
         STH   RWORK2,UCMWQNR                                    Y02893 21690002
         SR    RWORK2,RWORK2      INDICATE ALL DONE              Y02893 21700002
         B     IEAGLOOP                                          Y02893 21710002
IEAGECHK EQU   *                  CHECK IF WE SHOULD EXTEND CPOOLY02893 21720002
         CH    RRET,KFOUR         IS EXTENSION NEEDED            Y02893 21730002
         BNE   IEAGNOWQ           NO, GO SET ERROR CONDITION     Y02893 21740002
* YES, EXTENDED THE WQE CELL POOL                                Y02893 21750002
* PROTECT THE CONTENTS OF RWPL2 AROUND THE GETMAIN               Y02893 21760002
         ST    RWPL2,WPL2SAVE     STORE IN OUR SAVEAREA          Y02893 21770002
         LA    RPARM,SPL231       USE SUBPOOL 231                Y02893 21780002
         L     RID,WQEPLSZ        GET SIZE OF EXTENSION          Y02893 21790002
         L     RTCB,TCBSAVE       GET PTRS TO TCB AND ASCB       Y02893 21800002
         L     RASCB,ASCBSAVE                                    Y20893 21810002
*        GETMAIN RC,LV=(0),SP=(1),BRANCH=YES                     Y02893 21820002
         GETMAIN RC,LV=(0),SP=(1),BRANCH=YES                     Y02893 21830002
         L     RWPL2,WPL2SAVE     RESTORE THE CURRENT LINE PTR   Y02893 21840002
* CHECK IF GETMAIN WAS SUCCESSFUL                                Y02893 21850002
         LTR   RRET,RRET          DID WE GET CORE FOR EXTENSION  Y02893 21860002
         BNZ   IEAGNOWQ           NO, SET ERROR CONDITION        Y02893 21870002
* GETMAIN OK, EXTEND CELLPOOL.                                   Y02893 21880002
         ST    RPARM,SPLEXTAD     SAVE ADDR OF THE EXTENSION     Y02756 21890002
         L     RUCM,UCMBPTR       RESTORE BASE FOR UCM           Y02893 21895002
         L     RID,UCMWQECP       GET WQE CELL POOL ID.          Y02893 21900002
         LA    RRET,WMJMSIZE      SIZE OF CELLS REQUIRED.        Y02893 21910002
*  ADDR OF EXTENSION IS IN REG 1.                                Y02756 21920002
*        BLDCPOOL  CPID=(0),SP=231,CSIZE=(15),CPADDR=(1),        Y02756 21930002
*             AUTODEL=YES,POOLSIZ=4,BRANCH=YES,SERIAL=YES      @ZA20159 21940003
         BLDCPOOL  CPID=(0),SP=231,CSIZE=(15),CPADDR=(1),        Y02756X21946003
               AUTODEL=YES,POOLSIZ=4,BRANCH=YES,SERIAL=YES     @ZA20159 21952003
*  CHECK IF EXTENSION IS OK.                                     Y02756 21970002
         LA    RWORK2,KONE        INSURE RWORK2 SET TO LOOP      Y02756 21980002
         LTR   RRET,RRET          WAS CELL POOL EXTENDED.        Y02756 21990002
         BZ    IEAGLOOP           YES, GO BACK AND GET A WQE.    Y02756 22000002
*  EXTENSION WASN'T SUCCESSFUL. FREE THE CORE FOR THE EXTENSION. Y02756 22010002
         L     RID,SPLFRECN       LOAD SUBPOOL AND SIZE          Y02756 22020002
         L     RPARM,SPLEXTAD     GET ADDR OF EXTENSION          Y02756 22030002
*        FREEMAIN  R,LV=(0),A=(1),BRANCH=YES                     Y02756 22040002
         FREEMAIN  R,LV=(0),A=(1),BRANCH=YES                     Y02756 22050002
IEAGNOWQ SR    RWQE,RWQE          SET RWQE TO SHOW NO WQE        Y02756 22060002
         LR    RWORK2,RWQE        GET OUT OF LOOP                Y02756 22070002
         B     IEAGLOOP                                          Y02756 22080002
IEAGRETN LM    RRETURN,RID,GETSAVE RESTORE REG 14 TO 0           Y02756 22090002
         L     RWORK2,GETSAVE+SIXTN RESTORE REG 2.               Y02756 22100002
         BR    RRETURN            RETURN TO CALLER.              Y02756 22110002
         DROP  RUCM                                                     22120002
         EJECT                                                          22130002
*        MACRO - WAITWQE ROUTINE                                 Y02756 22140002
*  WAIT FOR A WQE TO BE FREED.                                   Y02756 22150002
*  INPUT - XVWWB IS SET TO ZERO BY INITIAL SEGMENT AND TO ADDR OFY02756 22160002
*          WWB BY THIS ROUTINE.                                  Y02756 22170002
*  OUTPUT -XVWWB CONTAINS THE ADDR OF THE WWB. AT LEAST ONE WQE  Y02756 22180002
*          HAS BEEN FREED.                                       Y02756 22190002
WAITWQE  STM   RRETURN,RWORK2,WAITSAVE SAVE CALLER'S REGISTERS   Y02756 22200002
* CHECK IF A WWB EXISTS. IF NOT THEN GET ONE                     Y02756 22210002
         CLC   XVWWB,KZERO        HAS A WWB BEEN OBTAINED.       Y02756 22220002
         BNE   IEABWAIT           YES, WAIT ON THE ECB.          Y02756 22230002
*  NO, GET A WWB AND CHAIN IT TO WQE WWB CHAIN.                  Y02756 22240002
         L     RID,WWBPARM        GETMAIN PARM OF SUBPL & SIZE   Y02756 22250002
*        GETMAIN R,LV=(0),BRANCH=YES                             Y02756 22260002
         GETMAIN R,LV=(0),BRANCH=YES                             Y02756 22270002
         ST    RPARM,XVWWB        SAVE ADDR OF WWB               Y02756 22280002
         USING WWB,RPARM          ADDRESSABILITY FOR WWB         Y02756 22290002
* NOW SET UP THE WWB.                                            Y02756 22300002
         MVC   WWBASCB,ASCBSAVE   PUT IN CALLER'S ASCB ADDR.     Y02756 22310002
         ST    RTCB,WWBTCBAD      CALLER'S TCB ADDR              Y02756 22318002
         L     RUCM,UCMBPTR                                             22326002
         USING UCM,RUCM                                                 22334002
* CONNECT THIS WWB IN TO END OF THE CHAIN                        Y02756 22342002
         L     RWORK2,UCMWECBT    GET POINTER TO END OF CHAIN    Y02756 22352002
*  RWORK2 NEW PTS AT LAST WWB ON THE CHAIN.                      Y02756 22362002
*  MOVE END OF CHAIN ENDICATOR FROM PREVIOUS END TO NEW WWB.     Y02756 22372002
         MVC   WWBFWDPT,WWBFWDPT-WWB(RWORK2)                     Y02756 22382002
*  POINT LAST WWB ON CHAIN TO NEW WWB                            Y02756 22392002
         ST    RPARM,WWBFWDPT-WWB(,RWORK2)                       Y02756 22402002
*  POINT NEW WWB BACK TO LAST CHAIN MEMBER                       Y02756 22412002
         ST    RWORK2,WWBBCKPT                                   Y02756 22422002
*  POINT CHAIN TAIL AT NEW WWB.                                  Y02756 22432002
         ST    RPARM,UCMWECBT                                    Y02756 22450002
*  THE NEW WWB IS NOW AT THE END OF THE CHAIN.                   Y02756 22460002
IEABWAIT L     RPARM,XVWWB        INSURE ADDRESSABILITY OF WWB.  Y02756 22470002
         NI    WWBFLAGS,X'FF'-WWBPOSTD  TURN OFF POSTED BIT      Y02756 22480002
         MVC   WWBECB,KZERO       ZERO OUT THE ECB               Y02756 22490002
* FREE THE LOCKS BEFORE ISSUING THE WAIT.                        Y02751 22500002
         BAL   RRET,FRELCKS       CALL THE FREE LOCK SUBROUTINE  Y02751 22510002
* CLEAR RETRY ADDRESS IN PARM AREA.                                     22520002
         L     RPARM,PARMPTR      ADDR OF ESTAE PARM AREA               22530002
         USING PARMLIST,RPARM                                           22540002
         MVC   PARMRTAD,KZERO     CLEAR RETRY ADDR                      22550002
         DROP  RPARM                                                    22560002
         L     RPARM,XVWWB                                              22570002
         USING WWB,RPARM                                                22580002
* NOW CHECK IF WE ARE IN MEMORY ONE. IF NOT THEN TAKE A LONG WAIT.      22590002
         L     RASCB,ASCBSAVE          LOAD ADDR OF OUR ASCB            22600002
         USING ASCB,RASCB                                               22610002
         CLC   ASCBASID,KONE      IN MEMORY ONE WITH COMMTASK.          22620002
         DROP RASCB                                                     22630002
         BNE   IEABLONG           NO GO TAKE A LONG WAIT                22640002
         LA    RPARM,WWBECB       GET ADDR OF ECB IN WAIT BLOCK  Y02756 22650002
*        WAIT  ,ECB=(1)           WAIT FOR A WQE TO BE FREE'D.   Y02756 22660002
         WAIT  ,ECB=(1)           WAIT FOR A WQE TO BE FREE'D.   Y02756 22670002
         B     IEABRETN                                                 22680002
IEABLONG LA    RPARM,WWBECB       ADDR OF ECB IN WAIT BLOCK             22690002
*        WAIT ,ECB=(1),LONG=YES   TAKE A LONG WAIT                      22700002
         WAIT ,ECB=(1),LONG=YES   TAKE A LONG WAIT                      22710002
* NOW SET THE LOCAK AND CMS LOCKS.                               Y02751 22720002
IEABRETN BAL   RRET,SETLCKS                                      Y02751 22730002
         LM    RRETURN,RWORK2,WAITSAVE                           Y02756 22740002
         BR    RRETURN            RETURN TO USER.                Y02756 22750002
         DROP  RPARM                                             Y02756 22760002
         DROP  RUCM                                                     22770002
         EJECT                                                          22780002
*        MACRO                                                   Y02893 22790002
*                                                                Y02893 22800002
*  TEXTLINE - SUBROUTINE                                         Y02893 22810002
*                                                                Y02893 22820002
*  THIS ROUTINE SETS RWPL2(R4) POINTING AT THE NEXT LINE IN THE  Y02893 22830002
*  WPL TO BE PROCESSED.                                          Y02893 22840002
*                                                                Y02893 22850002
*  INPUT - MLPART IS ADDR TO WPLLTP                              Y02893 22860002
*          XVD3TXT1 IF ON INDICATES THAT THE FIRST LINE OF THE   Y02893 22870002
*            WPL WAS JUST PROCESSED.                             Y02893 22880002
*         RWPL2 PTS AT WPLML0 OF CURRENT LINE IF NOT LINE ONE.   Y02893 22890002
*              REGS 1 AND 2 CAN BE USED AS WORK REGS             Y02893 22900002
*                                                                Y02893 22910002
*  OUTPUT- XVD3TXT1 WILL BE OFF                                  Y02893 22920002
*          RWPL2 WILL PT AT WPLML0 FOR THE NEXT LINE             Y02893 22930002
*          XVX0UDCL WILL BE OFF.                                 Y02893 22940002
TEXTLINE TM    XVD3,XVD3TXT1      FIRST LINE JUST PROCESSED      Y02893 22950002
         BZ    IEAXNFST           NO, INCREMENT FOR ML AREA      Y02893 22960002
* THE FIRST LINE WAS JUST PROCESSED. POINT AT THE FIRST LINE     Y02893 22970002
* IN THE MULTI LINE EXTNESION.                                   Y02893 22980002
         L     RWPL2,MLPART       ADDR OF WPLLTF                 Y02893 22990002
         LA    RWPL2,FOUR(RWPL2)  INCR TO FIRST LINE IN WPLML0   Y02893 23000002
         NI    XVD3,X'FF'-XVD3TXT1 TURN OFF LINE I BIT           Y02893 23010002
         NI    XVX0,X'FF'-XVX0UDCL ALSO DEFAULT CONTROL LINE FLAGY02893 23020002
         B     IEAXRETN           RETURN TO CALLER               Y02893 23030002
* RWRL2 PTS AT THE LENGTH OF THE CURRENT LINE(HALFWORD).         Y02893 23040002
* INCREMENT RWPL2 TO THE NEXT LINE                               Y02893 23050002
IEAXNFST SR    R1,R1              ZERO FOR INSERT CHAR           Y02893 23060002
         L     RWORK2,LINDEX      GET INDEX OF LENGTH FROM TABLE Y02893 23070002
         IC    R1,LTABLE(RWORK2)  GET LGH OF CURRENT LINE        Y02893 23080002
         AR    RWPL2,R1           POINT TO NEXT LINE IN WPL      Y02893 23090002
         LA    RWORK2,ONE(RWORK2) INCR LTABLE INDEX              Y02893 23100002
         ST    RWORK2,LINDEX      PUT BACK IN WORKAREA           Y02893 23110002
IEAXRETN BR    RRETURN            RETURN TO USER                 Y02893 23120002
         EJECT                                                          23130002
*        MACRO FRELCKS SUBROUTINE                                Y02893 23140002
*        START OF FRELCKS SEGMENT                                Y02751 23150002
* THE CMS AND LOCAL LOCKS ARE RELEASED                           Y02751 23160002
*   REGISTERS 11, 12 AND 13 ARE SAVED. 11 AND 12 GO IN MLWTO'S   Y02751 23170002
*   WORKAREA AND 13 IS SAVED IN REGISTER 0.                      Y02751 23180002
* RRET(15) IS THE RETURN REGISTER.                               Y02751 23190002
FRELCKS  ST    RBASE,RBASESAV     BASE REG SAVED IN WORKAREA.    Y02751 23200002
         ST    XSAV,XVSAVSAV      EXTENDED SAVE AREA BASE        Y02751 23210002
         LR    RID,RWKREG         MOVE PTR TO SAVEAREA           Y02751 23220002
* FREE THE FRR AND RESET THE PARM AREA PTR                              23230002
*        SETFRR D,WRKREGS=(11,12)                                       23240002
         SETFRR D,WRKREGS=(11,12)                                       23250002
         LA    XSAV,EPARM         ADDR OF ESTAE PARM AREA               23260002
         ST    XSAV,PARMPTR       SAVE NEW ADDR                         23270002
*        SETLOCK RELEASE,TYPE=CMS,                               Y02751 23280002
*              RELATED=(UCM,IEAVMWTO(SETLCKS))                   Y02751 23290002
*        SETLOCK RELEASE,TYPE=LOCAL,                             Y02751 23300002
*              RELATED=(UCM,IEAVMWTO(SETLCKS))                   Y02751 23310002
         SETLOCK RELEASE,TYPE=CMS,                               Y02751*23320002
               RELATED=(UCM,IEAVMWTO(SETLCKS))                   Y02751 23330002
         SETLOCK RELEASE,TYPE=LOCAL,                             Y02751*23340002
               RELATED=(UCM,IEAVMWTO(SETLCKS))                   Y02751 23350002
         LR    RWKREG,RID         RESTORE PTR TO SAVEAREA        Y02751 23360002
         L     RBASE,RBASESAV     RESTORE BASE REG               Y02751 23370002
         LA    XSAV,EPARM         GET ADDR OF ESTAE PARMLIST     Y02751 23380002
         USING PARMLIST,XSAV      ESTABLISH BASE                 Y02751 23390002
         NI    PARMFLAG,X'FF'-PARMFRID  TURN OFF FRR INDICATOR   Y02751 23400002
         DROP  XSAV               RELEASE BASE                   Y02751 23410002
         L     XSAV,XVSAVSAV      RESTORE PTR TO EXTENDED AREA   Y02751 23420002
* RETURN TO CALLER                                               Y02751 23430002
         BR    RRET                                              Y02751 23440002
         EJECT                                                          23450002
*        MACRO                   SETLCKS SUBROUTINE              Y02751 23460002
*   START OF SETLCKS SEGMENT                                     Y02751 23470002
*   THE LOCAL AND CMS LOCKS ARE OBTAINED.                        Y02751 23480002
*   REGISTERS 11, 12 AND 13 ARE SAVED. 11 AND 12 GO IN MLWTO'S   Y02751 23490002
*   WORKAREA AND 13 IS SAVED IN REGISTER 0.                      Y02751 23500002
* RRET(15) IS THE RETURN REGISTER.                               Y02751 23510002
SETLCKS  ST    RBASE,RBASESAV     BASE REG SAVED IN WORKAREA.    Y02751 23520002
         ST    XSAV,XVSAVSAV      EXTENDED SAVE AREA BASE        Y02751 23530002
         LR    RID,RWKREG         MOVE PTR TO SAVEAREA           Y02751 23540002
*        SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02751 23550002
*              RELATED=(UCM,IEAVMWTO(FRELCKS))                   Y02751 23560002
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                  Y02751*23570002
               RELATED=(UCM,IEAVMWTO(FRELCKS))                   Y02751 23580002
*        SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                    Y02751 23590002
*              RELATED=(UCM,IEAVMWTO(FRELCKS))                   Y02751 23600002
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                    Y02751*23610002
               RELATED=(UCM,IEAVMWTO(FRELCKS))                   Y02751 23620002
         LR    RWKREG,RID         RESTORE PTR TO SAVEAREA        Y02751 23630002
         L     RBASE,RBASESAV     RESTORE BASE REG               Y02751 23640002
         L     XSAV,XVSAVSAV      RESTORE PTR TO EXTENDED AREA   Y02751 23650002
* SET UP THE FRR FOR THIS ROUTINE. LET SETFRR USE REGS 2 AND 3. AS      23660002
* WORK REGS. SAVE THE CONTENTS OF 2 AND 3 IN SUBSLIST.                  23670002
         STM   RWORK2,RCVT,SUBSLIST SAVE REGS 2 AND 3.                  23680002
         L     RUCM,UCMBPTR                                             23690002
         USING UCM,RUCM                                                 23700002
         L     RPARM,UCMFRRAD     GET ADDR OF IEAVMFRR                  23710002
         DROP  RUCM                                                     23720002
*        SETFRR A,FRRAD=(RPARM),PARMAD=PARMPTR,WRKREGS=(RWORK2,RCVT)    23730002
         SETFRR A,FRRAD=(RPARM),PARMAD=PARMPTR,WRKREGS=(RWORK2,RCVT)    23740002
         L     RPARM,PARMPTR      GET ADDR OF FRR PARMAREA              23750002
         USING PARMLIST,RPARM                                           23760002
         LA    RWORK2,RECSAVE     ADDR OF OUR REG SAVE AREA             23770002
         ST    RWORK2,PARMRGAD    PT TO REG AREA FOR RETRY              23780002
         MVC   PARMID,MODULEID    IDENTIFY AS IEAVMWTO                  23790002
         DROP  RPARM              DROP PRESENT PARMLIST BASE            23800002
         LA    RWORK2,EPARM       GET PTR TO ESTAE PARMLIST             23810002
         USING PARMLIST,RWORK2    SET ADDRESSABILITY TO ESTAE PARM      23820002
****************************************************************YM04929 23821002
* THE FOLLOWING PARMFRID FIELD IN THE ESTAE PARAMETER LIST IS   YM04929 23822002
* SET TO ZERO TO GUARANTEE THAT RECOVERY WILL BE DONE ON BOTH   YM04929 23823002
* THE ESTAE AND FRR LEVEL.                                      YM04929 23824002
****************************************************************YM04929 23825002
         NI    PARMFLAG,X'FF'-PARMFRID  TURN OFF FRR INDICATOR  YM04929 23830002
         DROP  RWORK2             DROP TEMPORARY BASE                   23840002
         USING PARMLIST,RPARM     RESET BASE TO FRR PARMLIST            23850002
         MVI   PARMFTPT,FTLOCK    SET FOOTPRINT                         23860002
         LA    RWORK2,MWTOCLNP    ADDR OF MLWTO CLEANUP ROUTINE.        23870002
         ST    RWORK2,PARMCLAD                                          23880002
         LM    RWORK2,RCVT,SUBSLIST  RESTORE REGS 2 AND 3               23890002
         DROP  RPARM                                                    23900002
         BR    RRET               RETURN TO CALLER               Y02751 23910002
         EJECT                                                          23920002
*        MACRO                                                          23930002
         DATADEFS                 ,DEFINE CONTROL BLOCKS         Y02893 23940002
         END                                                            23950002
