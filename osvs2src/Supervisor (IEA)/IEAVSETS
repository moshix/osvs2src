         TITLE 'IEAVSETS...AOS/2...PROLOG'                              00050001
IGC079   CSECT                                                          00100002
         USING *,R6                 BR AROUND MODID                     00150002
IGC079   MODID BR=YES               STATUS MACRO'S SERVICE ROUTINE      00382002
         SPACE                                                          00385002
* STATUS - - CHANGE LEVEL 000                                           00388002
   SPACE                                                                00391002
* FUNCTION                                                              00394002
   SPACE                                                                00397002
*      THIS TYPE 1 SVC ROUTINE ALLOWS THE MANIPULATION OF DISPATCHING   00400002
*    STATUS INFORMATION, PARTICULARLY AS IT PRETAINS TO THE             00450001
*    DISPATCHABILITY OF THE TASK.                                       00500001
*    KEY 0 ROUTINES MAY INVOKE STATUS EITHER THROUGH THE SVC            00550002
*    INTERFACE OR VIA A BRANCH ENTRY.  OTHER ROUTINES ARE               00600002
*    RESTRICTED TO THE SVC INTERFACE.                                   00650001
*      ROUTINES WITH A SUPERVISOR PROTECT KEY CAN USE THE STATUS        00700002
*    ROUTINE TO SET OR RESET THE STATUS OF PARTICULAR TASKS.  THE       00750001
*    AFFECTED TASK STATUS CAN BE EITHER THE 'MUST COMPLETE' STATUS      00800001
*    OR THE 'NONDISPATCHABILITY' STATUS.                                00850001
*      FOR KEY 0 CALLERS, THE STATUS ROUTINE SETS (OR RESETS) THE       00900001
*    FOLLOWING CONDITIONS FOR A TASK OR A GROUP OF TASKS.               00950001
*      1. 'MUST COMPLETE' STATUS, SO THAT OTHER TASKS OF THE JOB STEP   01000001
*         ARE MADE NONDISPATCHABLE (OR DISPATCHABLE) WHILE              01050002
*         THE CURRENT TASK IS BEING PERFORMED.                          01100001
*      2. 'NONDISPATCHABILITY' STATUS, SO THAT THE ROUTINES OF THE      01150001
*         TASKS CANNOT (OR CAN) BE RESTARTED BY THE DISPATCHER.         01200001
*      WHEN ENTERED VIA THE MACRO INSTRUCTION                           01250001
*               STATUS SET,MC                                           01300002
*    THE STATUS ROUTINE SETS THE CALLER'S TASK IN 'STEP'                01350002
*    MUST COMPLETE STATUS.  (IF THE RESET OPERAND IS SPECIFIED,         01400001
*    THE 'MUST COMPLETE' STATUS THAT WAS PREVIOUSLY SET IS CLEARED.)    01450001
*    THE ROUTINE SETS THE 'MUST COMPLETE' FLAG IN THE CURRENT TCB,      01500001
*    THE 'PROHIBIT ASYNCHRONOUS EXITS' FLAG IN THE CURRENT TCB,         01550001
*    AND THE STEP 'MUST COMPLETE' NONDISPATCHABILITY FLAG IN            01600002
*    OTHER TCBS OF THE JOB STEP. ALL TASKS IN THE JOB STEP,             01650002
*    INCLUDING THE INITIATOR, ARE AFFECTED.  THE CALLER'S               01750002
*    TASK IS ALWAYS EXEMPT FROM THE SETTING/RESETTING OF DISPATCHABITY. 01900001
*      WHEN ENTERING VIA THE MACRO INSTRUCTION                          01950001
*            STATUS SET,ND,(STEP)(SYSTEM)(TCB ADDR,(MASK)(,E))          02000002
*    THE STATUS ROUTINE SETS THE SPECIFIED PRIMARY NONDISPATCH-         02050001
*    ABILITY FLAGS TCBFLGS4 AND TCBFLGS5 (BYTES 32,33)                  02100001
*    IN THE SPECIFIED SET OF TCB'S.  (IF RESET IS SPECIFIED,  THE       02150001
*    INDICATED PRIMARY NONDISPATCHABILITY FLAGS ARE CLEARED IN THE      02200001
*    SPECIFIED SET OF TCB'S.)  THREE SETS OF TASKS CAN BE SPECIFIED:    02250002
*    THE JOB STEP, A SPECIFIED TASK AND ALL ITS DESCENDANTS,            02300002
*    OR A SINGLE TASK.  IF SYSTEM IS SPECIFIED, A SYSTEM-WIDE           02350002
*    INDICATOR IS SET FOR THE DISPATCHER SO THAT ONLY ADDRESS SPACES    02400002
*    WHICH ARE MARKED EXEMPT WILL BE DISPATCHED. THE CALLER IS          02410002
*    TEMPORARILY MARKED EXEMPT. IF STEP IS SPECIFIED, ALL TASKS OF THE  02450002
*    JOB STEP ARE SET NON-DISPATCHABLE EXCEPT THE CURRENT TASK AND THE  02500001
*    JOB STEP'S INITIATOR.  IF TCB IS SPECIFIED, THE TASK AND ALL ITS   02550001
*    DESCENDANTS ARE SET NONDISPATCHABLE.  IF 'E' IS SPECIFIED,         02600001
*    ONLY THE TASK EXPLICITLY IDENTIFIED IS SET NONDISPATCHABLE.        02650001
*      WHEN ENTERED VIA THE MACRO INSTRUCTION                           02700001
*           STATUS SET,SD,(STEP)(SYSTEM)(TCB ADDR,(MASK)(,E))           02750001
*    THE STATUS ROUTINE SETS THE                                        02800001
*    SPECIFIED SECONDARY NONDISPATCHABILITY FLAGS IN THE SPECIFIED      02850001
*    SET OF TCB'S.  (IF RESET IS SPECIFIED, THE SPECIFIED SECONDARY     02900001
*    NONDISPATCHABILITY FLAGS ARE CLEARED IN THE SPECIFIED SET OF       02950001
*    TCB'S.)  THE SECONDARY NONDISPATCHABILITY FLAGS ARE CONTAINED IN   03000001
*    TCBNDSP0, 1, 2 AND 3.                                              03050002
*    FOUR SETS OF TASKS CAN BE SPECIFIED:                               03100001
*    THE SYSTEM, THE JOB STEP, A SPECIFIED TASK AND ALL ITS             03150001
*    DESCENDANTS, OR A SINGLE TASK.  IF SYSTEM IS SPECIFIED, A SYSTEM-  03200002
*    WIDE INDICATOR IS SET FOR THE DISPATCHER SO THAT ONLY ADDRESS      03250002
*    SPACES WHICH ARE MARKED EXEMPT WILL BE DISPATCHED. THE CALLER      03260002
*    IS TEMPORARILY MARKED EXEMPT.  IF STEP IS SPECIFIED, ALL TASKS     03300002
*    OF THE JOB STEP ARE SET NONDISPATCHABLE EXCEPT THE CURRENT         03350001
*    TASK AND THE JOB STEP'S INITIATOR.  IF A TCB ADDRESS IS SPECIFIED  03400001
*    (TCB ADDRESS,(MASK)), THE TASK AND ITS DESCENDANTS ARE SET NON-    03450001
*    DISPATCHABLE.  IF A TCB ADDRESS IS SPECIFIED, AND ONLY THE TCB     03500001
*    EXPLICITLY IDENTIFIED IS TO BE SET NONDISPATCHABLE, THE 'E'        03550001
*    PARAMETER IS USED.                                                 03600001
*      STATUS WILL AUTOMATICALLY ADJUST THE PRIMARY NONDISPATCH-        03650001
*    ABILITY SUMMARY FLAG (TCBPNDSP) TO INDICATE IF ANY SECONDARY       03700001
*    NONDISPATCHABILITY FLAGS ARE ON.                                   03750001
*      WHEN ENTERED VIA THE MACRO INSTRUCTION                           03760002
*           STATUS STOP,SYNCH                                           03770002
*    THE STATUS ROUTINE DOES ALL NORMAL 'STOP TCB' PROCESSING (FOR ALL  03780002
*    SUBTASKS OF THE CALLER). IN ADDITION, IT PUTS THE CALLER IN A WAIT 03790002
*    CONDITION UNTIL ALL STOP-PENDING CONDITIONS ARE CLEARED.           03792002
*    SUBSEQUENTLY, EXIT AND/OR EXIT PROLOGUE INTERFACE WITH             03792502
*    STATUS WHEN A DEFERED STOP IS COMPLETED TO FOR STATUS TO           03793002
*    DECREMENT THE WAIT COUNT FOR THE ISSUER.                           03793502
*      WHEN ENTERED VIA THE MACRO INSTRUCTION                           03794002
*           STATUS (STOP)(START),SRBS,(ASID=)                           03796002
*    STATUS MAKES QUIESCEABLE SRBS NON-DISPATCHABLE AND SETS TCBS IN    03798002
*    THE ADDRESS SPACE (EXCLUDING THE CALLER) NON-DISPATCHABLE UNTIL    03798402
*    SRBS ARE RESTARTED. THE CALLER IS NOT DISPATCHED UNTIL ALL RUNNING 03798802
*    SRBS HAVE COMPLETED. FOR START, THE CONDITIONS ARE RESET. AN ASID  03799202
*    MAY BE SPECIFIED FOR START ONLY. A BRANCH ENTRY EXISTS FOR START   03799602
*    SRB AT IGC07903. SEE ENTRY INPUT FOR REQUIREMENTS.                 03799702
*    A BRANCH ENTRY EXISTS AT IEAVSSNQ TO STOP NON-QUIESABLE            03801702
*    SRBS (THE SVC STOP SRB IS FOR QUIESABLE SRBS ONLY) WHICH           03803702
*    IS USED BY SWAP - OUT. SEE ENTRY INPUT FOR REQUIREMENTS.           03805702
*      A BRANCH ENTRY EXISTS WHEREBY A CALLER MAY SET HIS OWN TCB NON-  03807702
*    DISPATCHABLE. REGISTERS ARE SET UP AS USUAL FOR THE STATUS BRANCH  03809702
*    ENTRY. CODE 15 INDICATES A SD REQUEST, CODE 16 FOR ND. THE CALLER  03811702
*    IS REQUIRED TO ESTABLISH HIS RESUME PSW/REGISTER ENVIRONMENT       03816602
*    IN HIS RB/TCB.                                                     03826602
*      PROBLEM PROGRAM CALLERS OF STATUS MAY REQUEST ONLY THE STOP/     03833302
*    STOP SYNCH, START SERVICE VIA THE MACRO INSTRUCTION                03850002
*           STATUS (STOP)(START),(TCB=TCB ADDR)(SYNCH)                  03900002
*    WHEN A USER ISSUES A STATUS MACRO INSTRUCTION WITH                 03950001
*    THE START OR STOP OPERAND, THE SET STATUS ROUTINE DETERMINES IF    04000001
*    THE SPECIFIED SUBTASK OF THE CURRENT TASK OR ALL SUBTASKS OF       04050001
*    THE CURRENT TASK ARE TO BE MODIFIED.  WHEN START IS SPECIFIED,     04100001
*    THE STOP/START COUNT IS DECREMENTED IN THE SUBTASK TCB(S) AND      04150001
*    THE NONDISPATCHABILITY FLAGS ARE CLEARED.  WHEN STOP IS SPECIF-    04200001
*    IED, THE STOP/START COUNT IS INCREMENTED IN THE SUBTASK TCB(S)     04250001
*    AND THE NONDISPATCHABILITY FLAGS ARE SET.  A TASK IS SET           04300001
*    NONDISPATCHABLE ONLY IF NO SYSTEM ROUTINES ARE EXECUTING FOR IT    04350001
*    AS INDICATED BY THE TCBATT FLAG.  IF A SYSTEM ROUTINE IS           04400001
*    EXECUTING FOR THE TASK, THE TCBSTPPR FLAG IS SET TO INDICATE THAT  04450001
*    THIS TASK SHOULD BE MADE NONDISPATCHABLE WHEN IT NO LONGER HAS     04500001
*    A SYSTEM ROUTINE EXECUTING.                                        04550001
*      SYSTEM ROUTINES MAY ALSO USE A NEW BRANCH ENTRY POINT TO         04600001
*    STATUS, IEATRSCN.  THIS SUBROUTINE WILL RETURN THE ADDR OF A       04650001
*    SINGLE SUBTASK (IF ANY) EACH TIME IT IS CALLED.  THROUGH MULTIPLE  04700001
*    CALLS TO IEATRSCN, A SYSTEMATIC SEARCH OF A SUBTASK TREE CAN       04750001
*    BE ACCOMPLISHED.                                                   04800001
     EJECT                                                              04850001
* ENTRY POINTS                                                          04900001
     SPACE                                                              04950001
*    1. IGC079  SVC ENTRY                                               05000001
*         ENTERED BY SYSTEM ROUTINES TO MANIPULATE THE                  05050002
*         DISPATCHABILITY OF TASKS, SRBS, AND THE SYSTEM.               05100002
*         ALSO ENTERED BY PROBLEM PROGRAM ROUTINES                      05150001
*         TO PERFORM THE START/STOP, STOP-SYNCH  TCB FUNCTION.          05200002
*    2. IGC07902  BRANCH ENTRY                                          05250001
*         ENTERED BY SYSTEM ROUTINES TO MANIPULATE THE                  05300002
*         DISPATCHABILITY OF TASKS AND SRBS.                            05350002
*    3. IEATRSCN  BRANCH ENTRY                                          05400001
*         ENTERED BY SYSTEM ROUTINES TO CAUSE A                         05450001
*         SEARCH OF A SUBTASK TREE.                                     05500001
*    4. IGC07903 BRANCH ENTRY                                           05504002
*         ENTERED BY SWAP-IN TO START SRBS IN THE                       05508002
*         ADDRESS SPACE TO BE SWAPPED IN.                               05512002
*         (NOTE DURING SWAP-OUT ERROR PROCESSING                        05513002
*          THIS ENTRY POINT IS INVOKEDTO START SRBS)                    05514002
*    5. IEAVSSNQ BRANCH ENTRY                                           05516002
*         ENTERED BY SWAP OUT TO STOP NON-QUIESABLE                     05520002
*         SRBS.                                                         05524002
*    6. IEAVESSS BRANCH ENTRY                                           05528002
*         ENTERED BY EXIT AND EXIT PROLOGUE TO COMPLETE                 05532002
*         STOP SYNCHRONIZED PROCESSING.                                 05536002
*                                                                       05540002
     SPACE                                                              05550001
* INPUT                                                                 05600001
     SPACE                                                              05650001
*    1. IGC079  SVC ENTRY                                               05700001
*        *PSW - TYPE I SVC PSW; LOCAL LOCK HELD                         05750002
*         R0  - BITS 0-15 PRIMARY MASK IF ND, ELSE ASID (OPTIONAL)      05800002
*               BITS 16-31 CODE 0 - RESERVED                            05850001
*                               1 - MC,STEP                             05900001
*                               3 - ND,STEP                             06000001
*                               4 - ND,SYSTEM                           06050001
*                               5 - ND,TCB (INCLUDES SUBTASKS)          06100001
*                               6 - STOP                                06150001
*                               7 - START                               06200001
*                               8 - SD,STEP                             06250001
*                               9 - SD,SYSTEM                           06300001
*                               10 - SD,TCB (INCLUDES SUBTASKS)         06350001
*                               11 - SD,TCB ADDRESS,E                   06400001
*                               12 - ND,TCB ADDRESS,E                   06450001
*                               13 - SRBS                               06460002
*                               14 - SYNCH                              06470002
*                               15 - CALLER,SD                          06480002
*                               16 - CALLER,ND                          06490002
*         R1 - BIT 0  0 = SET, 1 = RESET                                06500001
*              BITS 1-7  0                                              06550001
*              BITS 8-31 TCB ADDRESS (OPTIONAL)                         06600001
*         R2,R8-R13 - IRRELEVANT                                        06650002
*        *R3 - ADDRESS OF CVT                                           06700001
*        *R4 - ADDRESS OF CALLERS TCB                                   06750001
*        *R5 - ADDRESS OF CALLERS RB                                    06800001
*        *R6 - ENTRY POINT ADDRESS (IGC079)                             06850001
*        *R7 - ADDRESS OF ASCB                                          06860002
*        *R14 - RETURN ADDRESS (EXIT PROLOG)                            06900002
*         R15 - SECONDARY MASK IF SD; ELSE ASID (OPTIONAL)              06950002
*         * = SET UP BY SVC FLIH                                        07000001
*    2. IGC07902  BRANCH ENTRY                                          07050001
*         PSW - KEY 0, SUPERVISOR STATE, LOCAL LOCK                     07100002
*         R0,R1 - SAME AS FOR SVC ENTRY                                 07150001
*         R2-R12 - IRRELEVANT                                           07200001
*         R13 - SAME AS R15 IN SVC ENTRY                                07250002
*         R14 - RETURN ADDRESS                                          07300001
*         R15 - ADDRESS OF IGC07902                                     07350001
*    3. IEATRSCN  BRANCH ENTRY                                          07400001
*         PSW - KEY 0, SUPERVISOR STATE, LOCAL LOCK                     07450002
*         R0-R7,R9,R12,R13,R15 - IRRELEVANT                             07500001
*         R8 - ADDRESS OF HIGHEST LEVEL TASK IN TREE TO BE SEARCHED     07550001
*         R10 - ADDRESS OF TASK FROM WHICH SEARCH IS TO START ON        07600001
*               THIS CALL TO IEATRSCN                                   07650001
*         R11 - RETURN ADDRESS (IF NO TCB IS FOUND)                     07700001
*         R14 - RETURN ADDRESS (IF TCB IS FOUND)                        07750001
*    4. IGC07903 BRANCH ENTRY                                   @Y02752 07760002
*        PSW - KEY 0, SUPERVISOR STATE, SALLOC LOCK             @Y02752 07770002
*         R0 - BITS 0-15, ASID                                  @Y02752 07780002
*              BITS 16-31, CODE 13                              @Y02752 07790002
*         R1 - BIT 0 = 1                                        @Y02752 07792002
*         R2-R12 IRRELEVANT                                     @Y02752 07794002
*         R13 - ADDRESS OF 72 BYTE SAVE AREA                    @Y02752 07796002
*         R 14 - RETURN ADDRESS                                 @Y02752 07798002
*         R15 - ADDRESS OF IGC07903                             @Y02752 07798402
*    5. IEAVSSNQ BRANCH ENTRY                                           07798602
*        PSW - KEY 0, SUPERVISOR STATE, LOCAL LOCK                      07798802
*         R0-R13 IRRELEVANT                                             07799002
*         R14 - ENTRY POINT ADDRESS                                     07799202
*         R15 - RETURN ADDRESS                                          07799402
*    6. IEAVESSS BRANCH ENTRY                                           07799602
*        PSW - KEY 0, SUPERVISOR STATE, LOCAL LOCK                      07800002
*         R0-R3, R5-R6, R8-R13 - IRRELEVANT                             07805002
*         R4 -  ADDRESS OF EXITING TCB                                  07810002
*         R7 - ADDRESS OF ASCB                                          07820002
*         R14 - RETURN ADDRESS                                          07830002
*         R15 - ENTRY POINT ADDRESS                                     07835002
   SPACE 2                                                              07840002
* OUTPUT                                                                07850001
   SPACE                                                                07900001
*    1. IGC079  SVC ENTRY                                               07950001
*       **PSW - KEY 0, SUPERVISOR STATE                                 08000002
*       **R0-R13 - UNPREDICTABLE                                        08050001
*       **R14 - UNCHANGED                                               08100001
*         R15 = 0 - NORMAL COMPLETION                                   08150001
*             = 4 - STOP/START FAILED; SPECIFIED TASK NOT A SUBTASK     08200001
*                   OF THE CALLERS TASK                                 08250001
*         ** = USER PSW AND R2-R14 ARE RESTORED BY EXIT PROLOG          08300002
*    2. IGC07902  BRANCH ENTRY                                          08350001
*         R0-R14 - UNCHANGED                                            08400001
*         R15 = 0 (NORMAL COMPLETION)                                   08450001
*    3. IEATRSCN                                                        08500001
*         PSW - SAME STATE AS ENTERED                                   08550002
*         R0-R6,R8,R11-R15 - UNCHANGED                                  08600001
*         R7,R9 - UNPREDICTABLE                                         08650001
*         R10 - ADDRESS OF SELECTED TASK (IF ONE WAS FOUND)             08700001
*    4. IGC07903                                                @Y02752 08710002
*         PSW - KEY 0, SUPERVISOR STATE, SALLOC LOCK            @Y02752 08720002
*         R0-R14 UNCHANGED                                      @Y02752 08730002
*         R15 - 0 (NORMAL COMPLETEION)                          @Y02752 08740002
*    5. IEAVSSNQ                                                        08740902
*        PSW - KEY 0, SUPERVISOR STATE, LOCAL LOCK (NOTE THAT THE       08741802
*                                  LOCAL LOCK MAY HAVE BEEN FREED IN    08742702
*                                  STATUS PROCESSING AND REOBTAINED.)   08743602
*        R0-R10, R15 - UNCHANGED                                        08744502
*        R11-R14 - UNPREDICTABLE                                        08745402
*    6. IEAVESSS                                                        08746302
*        PSW - KEY 0, SUPERVISOR STATE, LOCAL LOCK                      08747202
*        R0-R14 - UNCHANGED                                             08748102
*        R15 UNPREDICTABLE                                              08749002
     SPACE 2                                                            08750001
* EXTERNAL REFERENCES                                                   08800001
     SPACE                                                              08850001
*         IEA0DS DISPATCHER                                             08900002
*         IEAVEMS0 MEMORY SWITCH                                        08950002
*         IGC044R2 CHAP RECOVERY ROUTINE                                09000002
     SPACE 2                                                            09050001
* EXITS,NORMAL                                                          09100001
     SPACE                                                              09150001
*    1. IGC079                                                          09200001
*          TO CALLER VIA BR 14 TO                                       09250002
*         TYPE 1 EXIT TO INDICATE COMPLETION OF STATUS REQUEST.         09300001
*    2. IGC07902                                                        09350001
*          TO CALLER VIA BR 14 TO                                       09400002
*         INDICATE COMPLETION OF STATUS REQUEST.                        09450002
*    3. IGC07903                                                @Y02752 09460002
*          TO CALLER VIA BR 14 TO                               @Y02752 09470002
*          INDICATE COMPLETION OF REQUEST                       @Y02752 09480002
*    4.  IEATRSCN                                                       09600002
*         TO CALLER VIA BR 11 IF NO TASK WAS FOUND IN THE TREE          09650001
*         TO CALLER VIA BR 14 IF A TASK WAS FOUND IN THE TREE.          09700001
*    5. IEAVESSS                                                @Y02752 09707002
*          TO CALLER VIA BR 14 TO                               @Y02752 09714002
*          INDICATE COMPLETION OF REQUEST                       @Y02752 09721002
*    5. IEAVSSNQ                                                @Y02752 09728002
*          TO CALLER VIA BR 15 TO                               @Y02752 09735002
*          INDICATE COMPLETION OF REQUEST                       @Y02752 09742002
       SPACE 2                                                          09750001
* EXITS,ERROR =                                                         09800002
*                                                                       09810002
*    1.  AT THE LABEL 'ABEND14F' THE IMPROPER                           09820002
*         CALLER IS ABENDED.                                            09830002
       SPACE 2                                                          09850001
   SPACE 2                                                              11850001
* ATTRIBUTES                                                            11900001
     SPACE                                                              11950001
*     LOCAL LOCK, KEY 0, SUPERVISOR STATE                               12000002
     SPACE                                                              12050001
*    AOS/2 SYSTEMS                                                      12100001
         SPACE 2                                                        12150001
* CHARACTER CODE DEPENDENCY -- NONE                                     12200001
         SPACE 2                                                        12250001
* NOTES                                                                 12300001
         SPACE                                                          12350001
*    NOTE ***  ALL MANIPULATION OF PRIMARY AND SECONDARY DISPATCH-      12400001
*    ABILITY INFORMATION SHOULD BE DONE VIA THE STATUS INTERFACE.       12450001
*    NOTE ***  KEY 0 CALLERS OF STATUS SHOULD ENSURE THAT THEIR         12500001
*    REQUESTS ARE CONSISTENT WITH SYSTEM INTEGRITY, SINCE THEIR         12550001
*    REQUESTS ARE NOT VALIDITY CHECKED.                                 12600002
         SPACE                                                          12605040
* CHANGE-ACTIVITY                                                       12610040
         SPACE                                                          12615040
*    OZ14227-NO CODE CHANGE. JUST A PTF PROBLEM.               @ZA30358 12620040
*    OZ20174-IMPROPER SERIALIZATION BETWEEN STATUS, DISPATCHER @ZA30358 12625040
*            AND TCTL. STATUS AND DISPATCHER REPLACE NI INSTR  @ZA30358 12630040
*            WITH CS.                                          @ZA30358 12635040
*    OZ30358-FORMERLY, SIGPCPUS WAS CALLED ONLY WHEN STATUS    @ZA30358 12640040
*            STOP OR SET WAS PROCESSED. HOWEVER IT IS ALSO     @ZA30358 12645040
*            NECESSARY TO CLEAR OUT OTHER TASKS WHEN STATUS    @ZA30358 12650040
*            START OR RESET IS BEING PROCESSED. IF A TASK      @ZA30358 12655040
*            BEING STARTED OR RESET IS ACTUALLY ACTIVE ON THE  @ZA30358 12660040
*            OTHER PROCESSOR, THE FOLLOWING MAY OCCUR:         @ZA30358 12665040
*             1. STATUS DECREMENTS ASCBTCBS, BECAUSE THE TASK  @ZA30358 12670040
*                IS DISPATCHABLE.                              @ZA30358 12675040
*             2. THE OTHER TASK ENTERS PAGE WAIT.              @ZA30358 12680040
*             3. BECAUSE THE TASK IS NOW NON-DISPATCHABLE,     @ZA30358 12685040
*                STATUS WILL FAIL TO INCREMENT ASCBTCBS. THIS  @ZA30358 12690040
*                IS INCORRECT.                                 @ZA30358 12695040
*            IT IS NOT NECESSARY TO CALL SIGPCPUS FOR          @ZA30358 12700040
*            STATUS RESET,SMC BECAUSE ASCBTCBS IS NOT          @ZA30358 12704040
*            DECREMENTED THEN.                                 @ZA30358 12708040
*            IT IS NOT NECESSARY TO CALL SIGPCPUS FOR          @ZA30358 12712040
*            STATUS START,SRBS BECAUSE NO PROCESSING IS DONE   @ZA30358 12720040
*            THERE IF STATUS STOP,SRBS IS NOT IN EFFECT.       @ZA30358 12725040
*    OZ32105-AN INTERLOCK WAS POSSIBLE IF THE CALLER HOLDS A   @ZA32105 12727040
*        SPIN LOCK BECAUSE IEAVSETS WILL LOOP ON ASCBCPUS AS   @ZA32105 12729040
*        LONG AS AN ACTIVE TASK IN THE SAME ADDRESS SPACE      @ZA32105 12731040
*        IS SPINNING TO OBTAIN THE SAME SPIN LOCK. THE PROBLEM @ZA32105 12733040
*        DESCRIBED BY THIS SPECIFIC APAR WILL BE SOLVED BY     @ZA32105 12735040
*        HAVING IEAVSETS NOT LOOP ON ASCBCPUS IF IT IS         @ZA32105 12737040
*        CHANGING DISPATCHABILITY FOR A SINGLE TASK AND THAT   @ZA32105 12739040
*        TASK IS NOT ACTIVE.                                   @ZA32105 12741040
         TITLE 'IEAVSETS...AOS/2...COMMUNICATION VECTOR TABLE C.V.T.'   12750001
         CVT   DSECT=YES                                                12800002
         TITLE 'IEAVSETS...AOS/2...PSA'                                 12850002
         IHAPSA                                                         12900002
         TITLE 'IEAVSETS...AOS/2...LCCA'                                12910002
         IHALCCA                                                        12920002
         TITLE 'IEAVSETS...AOS/2...PCCA'                                12930003
         IHAPCCA                                                        12940003
         TITLE 'IEAVSETS...AOS/2...TCB'                                 12950002
         IKJTCB                                                         13000002
         TITLE 'IEAVSETS...AOS/2...RB'                                  13002002
         IHARB                                                          13010002
         TITLE 'IEAVSETS...AOS/2...SRB'                                 13010102
         IHASRB                                                         13010202
         TITLE 'IEAVSETS...AOS/2...ASVT'                                13010402
         IHAASVT                                                        13010802
         TITLE 'IEAVSETS...AOS/2...ASCB'                                13012002
         IHAASCB                                                        13020002
         TITLE 'IEAVSETS...AOS/2...ASXB'                                13030002
         IHAASXB                                                        13040002
         TITLE 'IEAVSETS...AOS/2...CSD'                                 13042002
         IHACSD                                                         13044002
         TITLE 'IEAVSETS...VS/2...CDAL'                        @Z40FPYK 13054040
         CDAL                                                  @Z40FPYK 13064040
         TITLE 'IEAVSETS...AOS/2...JSCB'                                13094002
         IEZJSCB                                                        13144002
         TITLE 'IEAVSETS...AOS/2...WSAVT(LOCAL)'                        13194002
         IHAWSAVT                                                       13244002
         TITLE 'IEAVSETS...AOS/2...WSA(CPU)'                            13244402
         IHAWSAVT CLASS=CPU                                             13244802
         TITLE 'IEAVSETS...AOS/2...WSAVT(GLOBAL)'                       13246002
         IHAWSAVT CLASS=GLOBAL                                          13248002
         TITLE 'IEAVSETS...AOS/2...FRR STACK'                           13249202
         IHAFRRS                                                        13249302
         TITLE ' IEAVSETS...AOS/2...SDWA '                              13252002
         IHASDWA                                                        13252402
         TITLE 'IEAVSETS...AOS/2...WSA'                                 13253302
         SPACE 2                                                        13255202
WSA      DSECT                     SAVE AREA DESECT                     13257102
         DS    3X                  FIRST THREE BYTES OF R0              13258102
ACTCODE  DS    X                   ACTION CODE                          13259102
         DS    14F                 R1-R14                               13260102
         DS    3X                  FIRST THREE BYTES OF R15             13261102
RETNCODE DS    X                   RETURN CODE                          13262102
SWITCHES DS    X                   SWITCHES                             13263102
SAVMSK   DS    X                   MASK IN STNSM                        13264102
RES      DS    2X                  RESERVED                             13265102
STFRRSAV DS    F                   FRR SAVE AREA ADR                    13266102
UNDOIT   EQU   X'80'               RESET SW                             13267102
PRIMARY  EQU   X'40'               PRIMARY NON-DISP SW                  13268102
EXPLICIT EQU   X'20'               EXPLICIT TCB SW                      13269102
BRANCH   EQU   X'10'               BRANCH ENTRY SW                      13270102
XMSTATUS EQU   X'08'               XMSTATUS ENTRY SW                    13271102
SYNCHTCB EQU   X'04'               SYNCH STOP TCB                       13272102
*                                                                       13288802
*        STATUS FRR PARM AREA DSECT          @Y02753                    13290802
*                                                                       13293602
STFRRPAR DSECT                                                          13294002
STFRR15  DS    F                   RESERVED                     @Y02753 13294102
STFRR0   DS    3X                  RESERVED                     @Y02753 13297102
STFRAC   DS    X                   RESERVED                     @Y02753 13300102
STFRR1   DS    F                   RESERVED                     @Y02753 13303102
STFRCURR DS    F                   RESERVED                     @Y02753 13306102
STFRPREV DS    F                   RESERVED                     @Y02753 13309102
STFRE13  EQU   STFRPREV            RESERVED                     @Y02753 13312102
STFRSVSB EQU   STFRPREV            SRB ADDR SAVE AREA           @Y02753 13315102
STFRFLG  DS    X                   FLAG BYTE                    @Y02753 13320202
STFRSALL EQU   X'10'               START SRB CALLER OWNED SALLC @Y02753 13321802
REFRR    EQU   X'08'               STR SRB SRB FRR FLAG         @Y02753 13325302
STBRSRB  EQU   X'04'               STRT SRB BR EN FLAG          @Y02753 13327302
STFRSWIN EQU   X'02'               CALLED BY SWAP-IN           @YM08338 13328102
STFRREXV DS    X                   RESERVED                     @Y02753 13329002
STFRCTH  DS    0H                  RESERVED                     @Y02753 13332502
STFRCTB0 DS    X                   RESERVED                     @Y02753 13335502
STFRCTB1 DS    X                   RESERVED                     @Y02753 13338502
         TITLE 'IEAVSETS...AOS/2...EQUATES'                             13343002
IGC079   CSECT                                                          13346502
         SPACE 2                                                        13350001
*   REGISTER ASSIGNMENT                                                 13400001
R0       EQU   0                   .PARAMETER REG                       13450001
R1       EQU   1                   .PARAMETER REG                       13500001
R2       EQU   2                   .STATUS INTERNAL LINK REG            13550001
R3       EQU   3                   .CVT POINTER                         13600001
R4       EQU   4                   .CALLERS TCB                         13650001
R5       EQU   5                   .SAVE AREA BASE ADDR                 13700002
R6       EQU   6                   .STATUS BASE REG                     13750001
R7       EQU   7                   .ADDR OF TREESCAN RTN                13800001
R8       EQU   8                   .TCB ADDR WORK REG                   13850001
R9       EQU   9                   .TCB ADDR WORK REG                   13900001
R10      EQU   10                  .SEARCHED FOR AND FOUND TCB          13950001
R11      EQU   11                  .ADDR OF 'SCAN COMPLETE' EXIT        14000001
R12      EQU   12                  .STATUS WORK REG                     14050001
R13      EQU   13                  .FRR WORK AREA BASE ADDR             14100002
R14      EQU   14                  .STATUS INTERNAL LINK REG            14150001
R15      EQU   15                  .BR ENTRY BASE AND WORK REG          14200001
*                                                                       14210002
*        FRR REGISTERS                                                  14220002
*                                                                       14230002
STSDWAR1 EQU   1                   SDWA POINTER REG             @Y02753 14240002
STWRK1   EQU   2                   WORK REG 1                   @Y02753 14242002
STPADP   EQU   13                  POINTER TO 6 WORD PARM AREA  @Y02753 14244002
STEPR    EQU   15                  ENTRY REG                    @Y02753 14246002
STRETR   EQU   14                  RETURN REG                   @Y02753 14248002
STBASE   EQU   6                   BASE REG                     @Y02753 14248402
STCODE   EQU   15                  RETURN CODE REG              @Y02753 14248802
STWRK2   EQU   3                   WORK REG 2                   @Y02753 14249202
STWRK3   EQU   11                  WORK REG 3                   @Y02753 14249602
STWSA    EQU   5                   WSA ADDR                     @Y02753 14249702
STWRK0   EQU   0                   WORK REG 0                   @Y02753 14249802
STASCB   EQU   7                   ASCB ADDR REG                @Y02753 14249902
RETSV    EQU   9                   RETURN REG SAVE              @Y02753 14266602
STINTLK  EQU   14                  INTERNAL LINK REG            @Y02753 14276602
         SPACE 2                                                        14283302
*   OTHER 'EQU' DEFINITIONS.                                            14300001
STMC     EQU   1                   .STEP MUST COMPLETE CODE             14350002
STOP     EQU   6                   .STOP CODE MASK                      14600001
START    EQU   7                   .START CODE MASK                     14650001
STOPSYNC EQU   14                  .STOP SYNCH CODE                     14660002
SSRB     EQU   13                  .SRBS CODE                           14700002
ABEND    EQU   13                  .ABEND SVC                           14710002
ONE4FOX  EQU   X'14F'              .ABEND CODE                          14750001
KEYF     EQU   X'80'               .PROTECT KEY MASK                    14800002
OFF      EQU   255                 .OFF MASK                            14850001
C0       EQU   0                   .0                                   14860002
C1       EQU   1                   .1                                   14900001
C2       EQU   2                   .2                                   14950001
C4       EQU   4                   .4                                   15000001
C8       EQU   8                   .8                                   15002002
C16      EQU   16                  .16                                  15010002
C64      EQU   64                  .64                                  15060002
CF       EQU   15                  .MASK FOR ICM                        15070002
E        EQU   8                   .BR CONDITION MASK                   15100001
NE       EQU   7                   .BR CONDITION MASK                   15150001
NZ       EQU   7                   .BR CONDITION MASK                   15200001
NO       EQU   14                  .BR CONDITION MASK                   15250001
DISMASK  EQU   X'FC'                DISABLE MASK IN STNSM               15260002
STREGL   EQU   64                  LENGTH OF MOVE OF REGISTERS  @Y02753 15270002
CXFF     EQU   X'FF'               CONSTANT X'FF'              @Z40FPYK 15280040
         TITLE 'IEAVSETS...AOS/2...INITIALIZING'                        15300001
*   ENTRY POINT TO STATUS VIA SVC ENTRY                                 15350001
         USING PSA,R0                                                   15500002
         USING STFRRPAR,R13                                     @Y02753 15502002
         USING WSA,R5                                                   15510002
         USING ASCB,R3                                                  15550002
*/*STATUS: CHART*/                                                      15552002
*/* E IGC079*/                                                          15554002
*/* P FIND LOCAL SAVE AREA- SAVE REGS*/                                 15556002
         LR    R3,R7                   COPY ASCB ADDR                   15566002
         L     R5,ASCBASXB             ASXB ADDR                        15600002
         L     R5,ASXBSPSA-ASXB(,R5)    WSA TABLE                       15650002
         L     R5,WSALSTAT-WSAL(,R5)    STATUS WSA                      15670002
         STM   R0,R14,WSA              SAVE REGS                        15702002
         MVI   SWITCHES,C0             INIT BITS TO SVC ENTRY           15710002
*/* P (,SUPVTEST) INIT SWITCHES TO SVC ENTRY*/                          15720002
         B     SUPVTEST            .PROCEED TO MAIN PROCESSING          15850001
         SPACE 3                                                        15900001
*   ENTRY POINT TO STATUS VIA A BRANCH ENTRY                            15950001
*   CALLERS BRANCH HERE ON REGISTER 15                                  16000001
*/* E IGC07902*/                                                        16060002
*/* P BOOTSTRAP TO SAVE AREA- SAVE REGS*/                               16070002
IGC07902 L     R15,PSAAOLD             ASCB                             16100002
         L     R15,ASCBASXB-ASCB(,R15)  ASXB                            16150002
         L     R15,ASXBSPSA-ASXB(,R15)  WSA TBL                         16200002
         L     R15,WSALSTAT-WSAL(,R15)  STATUS WSA                      16250002
         STM   R0,R14,0(R15)           SAVE REGS                        16300002
*/* P SET UP ENVIRONMENTAL REGS- INIT SWITCHES TO BRANCH ENTRY*/        16350002
         BALR  R6,R0                    BOOTSTRAP ADDRESSABILITY        16360002
         USING *,R6                                                     16370002
         L     R6,AIGC079          .LOAD NEW BASE REG                   16400001
         USING IGC079,R6                                                16500001
         LR    R5,R15                  SAVE AREA BASE                   16530002
         MVI   SWITCHES,BRANCH         SET BITS TO BRANCH ENTRY         16532002
         LR    R15,R13                 PARM REGS AS IN SVC              16540002
Q01      L     R3,PSAAOLD              ASCB ADDR                        16542002
Q02      L     R4,PSATOLD              CURR TCB                         16552002
*/*SUPVTEST: D (NO,SETTER,YES,) RESET WAS SPECIFIED*/                   16592002
SUPVTEST SR    R13,R13                 ZERO WORK REG                    16710002
         LTR   R1,R1                   TEST FOR RESET SW                16730002
         BNM   SETTER                  BR IF NOT RESET                  16740002
*/* P TURN ON RESET SWITCH*/                                            16740402
         OI    SWITCHES,UNDOIT         SET ON RESET SW                  16742002
*/*SETTER: S SETFRR: SETFRR COVERAGE, GET PARM AREA*/           @Y02753 16744002
*/* D (OTHR,SWCHTEST,STOP,TSTASID,STRT,) STOP/START TCB*/               16752002
SETTER   ST    R13,C4*R15(,R5)          ASSUME RC=0                     16760002
         SETFRR A,FRRAD=ASTNFRR,PARMAD=(R13),WRKREGS=(R8,R2)    @Y02753 16810002
         ST    R13,STFRRSAV        SAVE ADDR OF PARM LIST       @Y02753 16820002
GONONE   CLI   ACTCODE,STOP              LOWER THAN STOP       @YM01681 16850002
         BL    SWCHTEST            .YES, PRIM MASK SW HAS BEEN SET      16900001
         BE    TSTASID                 BR IF STOP                       16910002
         CLI   ACTCODE,STOPSYNC    IS IT STOP SYNCH            @YM04236 16920002
         BE    TSTASID             YES, SKIP AUTHORIZATION CHEC@YM04236 16930002
         CLI   ACTCODE,START             LT OR EQ START        @YM01681 16950002
         BH    SWCHTEST                BR IF NOT START                  17000002
*/* P (,TSTASID) TURN ON RESET SWITCH*/                                 17010002
         OI    SWITCHES,UNDOIT         SET RESET SWITCH                 17050002
         B     TSTASID             GO TO TEST FOR XMSTATUS              17100002
*/*SWCHTEST: D (YES,TSTASID,NO,) BRANCH ENTRY*/                         17150002
SWCHTEST TM    SWITCHES,BRANCH         BRANCH ENTRY                     17200002
         BO    TSTASID                 YES                              17250002
*/* D (NO,ABEND14F,YES,) CALLER IS IN SUPVR KEY*/                       17252002
         L     R2,TCBRBP-TCB(,R4)       CURR RB                         17350002
         TM    RBOPSW+C1-RBSECT(R2),KEYF  SUPUR KEY                     17360002
         BNZ   ABEND14F                NO, SVC ILLEGAL                  17370002
*/*TSTASID: D (YES,NDASID,NO,) REQUEST TO CHG PRIMARY NDISP FLAGS*/     17372002
TSTASID  LA    R2,OFF                  MASK OF FF HEX                   17380002
         NR    R2,R0                   ISOLATE CODE                     17390002
         BZ    ABEND14F                ABEND CALLER IF INVALID          17390402
         LA    R8,QUIRKS(R2)           GET ADDR OF TABLE ENTRY          17392402
         TM    C0(R8),NOTND            TEST IF ND OR SD                 17394402
NDSDB    BZ    NDASID                  BR IF ND                         17398002
*/*SDASID: P (,ASIDTST) GET ASID (IF ANY) FROM REG 0)*/                 17398102
SDASID   LR    R9,R0                   NOT ND, ASID IN 0                17398402
         SRL   R9,C16                  ISOLATE                          17398802
         B     ASIDTST             TEST FOR XMSTATUS                    17399202
*/*NDASID: P GET ASID FROM REG 15- MASK IN REG 0*/                      17399302
NDASID   LR    R9,R15              ND, ASID IN 15                       17399602
         LR    R15,R0              SET UP STATUS MASK REG               17399802
*/* P TURN ON PRIMARY NDISP SWITCH*/                                    17401702
         OI    SWITCHES,PRIMARY        INDICATE PRIMARY (ND)            17403002
*/*ASIDTST: D (NO,NOTSTP,YES,) AN ASID IS SPECIFIED*/                   17405002
ASIDTST  LTR   R9,R9                   ASID IS ZERO                     17406702
         BZ    NOTSTP                  BR IF SO                         17410002
*/* N DEPENDING ON STATUS OPTION, XM IS INVALID, VALID, OR VALID ONLY   17410402
*/* FOR RESET*/                                                         17410802
*/* D (NOXM,NOTSTP,XMOK,XMGO,RSET,) XM VALID FOR THIS FUNCTION*/        17412002
         LA    R10,QUIRKS(R2)           INVALID XM FNS                  17415002
         TM    C0(R10),XMSET+XMRESET    TEST FOR VALID XM CODES         17419302
         BO    XMGO                    BR IF OK                         17426602
         BZ    NOTSTP                  BR NO XMSTATUS          @YM01974 17428602
*/* D (NO,ABEND14F,YES,) RESET SWITCH IS ON*/                           17429002
         LTR   R1,R1                   INVALID IF STOP OR SET           17430602
         BNM   ABEND14F                OK IF RESET, START               17432602
*/* D (NO,XMGO,YES,NOTSTP) REQUEST IS FOR START SRBS*/                  17434602
         CLI   ACTCODE,SSRB            IS CALL FOR START SRBS           17442602
         BNE   XMGO                    IF NOT, NORMAL XMSTATUS          17444602
         B     NOTSTP                GO TO TO ROUTINE                   17446602
*/*ABEND14F: R '14F' ABEND*/                                            17448602
ABEND14F LA    R1,ONE4FOX          .LOAD UP ERROR CODE FOR ABTERM       17450001
         SLL   R1,C4+C8                POSITION CODE                    17500002
         O     R1,HIBIT                TURN ON SYSTEM IND               17550002
QJZ1     SETFRR  D,WRKREGS=(R8,R2)                              @Y02753 17560002
         SVC   ABEND                   ABEND                            17600002
         EJECT                                                          17650001
*/*BADTCB: P SET RETURN CODE FOR INVALID TCB ADDR*/                     17660002
BADTCB   MVI   RETNCODE,C4         .SET 'INVALID TCB' RETURN CODE       17700001
         SPACE                                                          17750001
*/*EXIT: S SETFRR: DELETE FRR COVERAGE */                               17770402
EXIT     SETFRR D,WRKREGS=(R8,R2)                              @Y02752  17770702
         SPACE 2                                               @Z40FPYK 17770840
*/* P RESET STATUS ACTIVE STATE */                             @Z40FPYK 17770940
         NI    ASCBSRQ1,CXFF-ASCBSTA   RESET STATUS ACTIVE     @Z40FPYK 17771040
*                                      FOR NONDISPATCHABLE     @Z40FPYK 17771140
*                                      TESTS NOW BEING VALID   @Z40FPYK 17771240
         SPACE 2                                               @Z40FPYK 17771340
*/*EXIT10: D (NO,EXIT1,YES,) XMSTATUS SWITCH IS ON*/                    17771440
EXIT10   TM    SWITCHES,XMSTATUS       XM STATUS IN OPERATION  @YM02662 17771540
         BZ    EXIT1                   BR IF NOT               @YM02662 17771640
         L     R1,C0(,R5)               RETRIEVE SRB ADDR      @YM02662 17771702
*/*EXFRITL: S EXFREE: FREE SRB SPACE */                                 17772002
EXFRITL  BAL   R8,EXFREE           LINK TO FREE                @YM02662 17773602
*/* S SETLOCK: RELEASE LOCAL LOCK*/                                     17774402
Q41      SETLOCK RELEASE,TYPE=LOCAL,RELATED=Q22                         17775202
*/* R GET  SRB EXIT TO DISP ADDR*/                                      17776002
Q42      L     R14,CVTPTR              ADDR OF CVT                      17776802
         L     R14,CVTSRBRT-CVTMAP(,R14)   ADDR OF SRB EXIT TO DISP     17777602
         BR    R14                 RETURN                               17778402
*/*EXFREE: E FREE SRB*/                                                 17778802
*/* S SETLOCK: OBTAIN SALLOC LOCK*/                                     17779202
EXFREE   EQU   *                   LABEL                       @YM02662 17780002
Q38      SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=Q40             17781002
*/* S FREEMAIN: FREE SRB*/                                              17782002
         LA    R0,SRBSIZE+C4+C4+C4     SIZE OF SRB             @YM02662 17790002
Q39      FREEMAIN RU,A=(1),LV=(0),SP=245,BRANCH=(YES,GLOBAL)            17794002
*/* S SETLOCK: RELEASE SALLOC LOCK*/                                    17794402
Q40      SETLOCK RELEASE,TYPE=SALLOC,RELATED=Q38                        17796002
*/* R RETURN*/                                                          17796402
         BR    R8                      OUT                     @YM02662 17799202
*/*EXIT1: P RESTORE REGS FROM LOCAL WSA */                              17809802
EXIT1    LM    R0,R15,WSA          RESTORE REGS                 @Y02753 17809902
*/* R RETURN*/                                                          17829902
         BR    R14                 .RETURN TO THE STATUS CALLER         17850001
         SPACE 3                                                        17900001
*/*NOTSTP: P SET UP ENTRY CODE AS BR TABLE VECTOR*/                     17910002
NOTSTP   AR    R2,R2                   DOUBLE CODE FOR INDEX            17950002
         LH    R12,BRATAB(R2)     .GO INTO TABLE TO GET RTN'S ADDR      18100002
         B     IGC079(R12)         .BRANCH TO ROUTINE                   18150001
         EJECT                                                          18200002
* BRANCH TABLE TO DETERMINE WHICH ROUTINE TO ENTER                      18250001
*/*BRATAB: D                                                            18362002
*/*(1,MCSTEP,2,ABEND14F,3,NDSTEP,4,NDSYSTEM,5,NDTCB,6,PROCEED,          18364002
*/* 7,PROCEED,8,SDSTEP,9,SDSYSTEM,10,SDTCB,11,SDETCB,12,NDETCB,         18386002
*/* 13,SRBS,14,SYNCH,15,CALLER,16,CALLER) ENTRY CODE*/                  18390002
         TITLE 'IEAVSETS...AOS/2...ND,SYSTEM, SD,SYSTEM'                19300002
* PRIMARY NON-DISPATCHABLE SYSTEM ROUTINE                               21350001
*/*SDSYSTEM: E CODE 9*/                                                 21352002
SDSYSTEM EQU   *                   LABEL                                21360002
*/*NDSYSTEM: E CODE 4*/                                                 21410002
NDSYSTEM L     R2,CVTPTR               ADDR OF CVT                      21650002
         L     R4,CVTCSD-CVTMAP(,R2)       ADDR OF CSD                  21700002
         SR    R1,R1                   PARM REG TO ZERO                 21702002
         L     R15,MEMSW               ADDR OF MEMORY SW                21704002
*/* D (YES,RESETSYS,NO,) THIS REQUEST IS RESET*/                        21704402
         TM    SWITCHES,UNDOIT      .IS THIS A RESET                    21706002
         BO    RESETSYS            .YES                                 21708002
*/*Q04: S SETLOCK: OBTAIN CMS LOCK*/                                    21708403
Q04      SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,RELATED=Q07 OR Q0X         21710003
*/* S SETLOCK: OBTAIN DISPATCHER LOCK*/                                 21714002
Q05      SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,RELATED=Q06               21720002
*/* P SET ISSUER ASCB EXEMPT FROM SYS ND*/                              21722002
         OI    ASCBFLG2,ASCBXMPT       SET ISSUER EXEMPT                21730002
*/* P SET SYSTEM ND FLAG ON*/                                           21740002
         OI    CSDSCFL1-CSD(R4),CSDSYSND  SET SYS ND FLG                21750002
*/* D (YES,NOMP,NO,) RUNNING UP?*/                             @YA02383 21751003
CK4MP    EQU   *             FOR TESTING ONLY                  @YA02383 21753003
         LA    R11,C1        VALUE TO INDICATE 1 CPU           @YA02383 21756003
         CH    R11,CSDCPUOL-CSD(R4)  Q. ONLY 1 CPU ALIVE       @YA02383 21759003
         BE    NOMP          A. YES. SKIP MP LOGIC             @YA02383 21762003
*/* S MEMSW: SWITCH OUT OF NON-EXEMPT A.S.''S*/                @YA02383 21763003
         BALR  R14,R15       GO TO MEMSW - ZERO ASCB ADDR      @YA02383 21765003
*/* P GET ADDR OF PCCA TABLE - INIT FOR 16 PASSES*/            @YA02383 21766003
         L     R11,CVTPCCAT-CVTMAP(,R2)    ADDR OF PCCA TABLE  @YA02383 21768003
         LA    R13,C16       MAX CPUS                          @YA02383 21771003
*/*NEXTCPU: D (YES,SKIP1,NO,) IS THIS PCCA ENTRY ZERO?*/       @YA02383 21772003
NEXTCPU  L     R12,C0(,R11)  ADDR OF PCCA                      @YA02383 21774003
         LTR   R12,R12       Q. ZERO                           @YA02383 21777003
         BZ    SKIP1         A. YES. GET NEXT                  @YA02383 21780003
*/* D (YES,SKIP1,NO,) IS THIS PCCA ENTRY FOR OUR CPU?*/        @YA02383 21781003
         C     R12,PSAPCCAV  Q. IS THIS OUR OWN CPU            @YA02383 21783003
         BE    SKIP1         A. YES. GET NEXT                  @YA02383 21786003
*/* D (YES,SKIP1,NO,) EXEMPT ADDR SPACE ? */                   @YA02383 21787040
         L     R12,PCCAPSAV-PCCA(R12)  GET OTHER CPU PSA ADDR  @YA02383 21789003
         L     R12,PSAAOLD-PSA(R12)  GET OTHER CPU ASCB ADDR   @YA02383 21792003
         TM    ASCBFLG2-ASCB(R12),ASCBXMPT+ASCBPXMT  Q. EXEMPT ADDR    X21795003
                               SPACE PROCESSING ON OTHER CPU   @YA02383 21802003
         BNZ   SKIP1         A. YES. INTERLOCK ON CMS LOCK             X21810003
                               NOT POSSIBLE                    @YA02383 21820003
*/* S (,NDSYSTEM) SETLOCK: RELEASE DISP LOCK*/                 @ZM30628 21825003
Q0X      SETLOCK RELEASE,TYPE=DISP,RELATED=Q05                 @YA02383 21830003
         B     NDSYSTEM      STALL FOR TIME                    @ZM30628 21840003
*/*SKIP1: D (YES,NEXTCPU,NO,) MORE CPUS TO CHECK?*/            @YA02383 21845003
SKIP1    EQU   *             SKIP CHECK OF ASSOCIATED PSA      @YA02383 21850003
         LA    R11,C4(R11)   NEXT ENTRY IN PCCA TABLE          @YA02383 21860003
         BCT   R13,NEXTCPU   BR IF MORE CPUS                   @YA02383 21870003
NOMP     EQU   *             USED TO SKIP MP LOGIC             @YA02383 21880003
*/*NOMP: S SETLOCK: RELEASE DISPATCHER LOCK*/                           21960003
Q06      SETLOCK RELEASE,TYPE=DISP,RELATED=Q05                          22000002
*/* S (,EXIT) SETLOCK: RELEASE CMS LOCK*/                               22030002
Q07      SETLOCK RELEASE,TYPE=CMS,RELATED=Q04                           22050002
         B     EXIT                    OUT                              22150002
*/*RESETSYS: S SETLOCK: OBTAIN DISPATCHER LOCK*/                        22200002
RESETSYS SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,RELATED=Q09               22282002
*/* P RESET SYS ND FLAG*/                                               22284002
         NI    CSDSCFL1-CSD(R4),OFF-CSDSYSND  SET SYS ND FLG            22290002
*/* D (YES,EXEMPT,NO,) ADDRESS SPACE IS PERM EXEMPT*/                   22290102
         TM    ASCBFLG2,ASCBPXMT       A.S. IS PERMANENTLY ND/SD EXEMPT 22290402
         BO    EXEMPT                  BR IF SO                         22290802
*/* P RESET ASCB EXEMPTION BIT*/                                        22290902
         NI    ASCBFLG2,OFF-ASCBXMPT   RESET ISSUERS EXEMPTION          22291202
*/*EXEMPT: S MEMSW: SWITCH INTO HI-PRI A.S.''S*/                        22291602
EXEMPT   BALR  R14,R15                 GO TO MEMSW WITH ZERO ASCB ADDR  22292002
*/* S (,EXIT) SETLOCK: RELEASE DISPATCHER LOCK*/                        22292402
Q09      SETLOCK RELEASE,TYPE=DISP,RELATED=RESETSYS                     22294002
         B     EXIT                    OUT                              22298402
         TITLE 'IEAVSETS...AOS/2...MC,STEP'                             22300001
*   THIS CODE IS ENTERED WHEN MUST COMPLETE STEP IS INDICATED.          22350001
*   IT FIRST DETERMINES IF SET OR RESET AND THEN SETS THE CURRENT TCB.  22400001
*   THEN IT MAKES ALL TASKS IN THE JOB STEP NON-DISPATCHABLE.           22450001
         SPACE                                                          22500001
         USING TCB,R4                                                   22550001
* MUST COMPLETE STEP ROUTINE                                            22600001
*/*MCSTEP: E CODE 1*/                                                   22610002
*/* D (YES,RESETSTP,NO,) THIS IS A RESET REQUEST*/                      22620002
MCSTEP   TM    SWITCHES,UNDOIT      .IS THIS A RESET                    22650002
         BO    RESETSTP            .YES                                 22700001
*/*SETSTP: P TURN ON SMC FLAG IN CALLER TCB*/                           22710002
SETSTP   OI    TCBFLGS2,TCBFJMC    .SET MUST COMPLETE FLAG              22750001
*/* P TURN ON INHIBIT ASYNCH EXITS BIT IN CALLER TCB*/                  22760002
         OI    TCBFLGS1,TCBFX      .INHIBIT ASYNCHRONOUS EXITS          22800001
         LR    R7,R15                  SAVE REG ACROSS SIGPS            22802002
*/* S (,MAIN1) SIGPCPUS: CLEAR OTHER CPUS OUT OF A.S.*/                 22804002
         BAL   R12,SIGPCPUS            CLEAR OTHER CPUS OUT OF A.S.     22810002
         LR    R15,R7                  RESET REG                        22820002
         B     MAIN1               .PROCEED DOWN TCB TREE               22850001
*/*RESETSTP: P TURN OFF SMC IN CALLER TCB*/                             22860002
RESETSTP NI    TCBFLGS2,OFF-TCBFJMC         .RESET MUST COMPLETE        22900001
*/* P TURN OFF INHIBIT ASYNCH EXITS BIT IN CALLER TCB*/                 22910002
         NI    TCBFLGS1,OFF-TCBFX  .ALLOW ASYNCHRONOUS EXITS            22950001
*/*MAIN1: L GET JSTCB (OR INIT TCB, IF ANY)*/                           23000002
MAIN1    L     R10,TCBJSTCB        .GET CALLERS JOB STEP TCB            23300002
         DROP  R4                                                       23350001
         USING TCB,R10                                                  23400001
         L     R2,TCBJSCB              GET STEP JSCB                    23450002
         L     R2,JSCBTCBP-IEZJSCB(,R2) GET INIT TCB IF ANY             23500002
         LTR   R2,R2                   ANY?                             23550002
         BZ    CHKCURR                 BR IF NOT, USE JSTEP TCB         23560002
         LR    R10,R2                  USE INIT TCB                     23570002
*/*CHKCURR: D (YES,SCANTASK,NO,) AT CALLER TCB*/                        23580002
CHKCURR  CR    R4,R10              .IS THIS THE CURRENT TCB             23600001
         LR    R8,R10              .INITIALIZE REG FOR TREE SCAN        23650001
         BE    SCANTASK            .YES, GO SELECT ANOTHER TASK         23750002
*/*MAIN14: D (YES,DECMCT1,NO,) THIS IS A RESET*/                        23800002
MAIN14   TM    SWITCHES,UNDOIT      .IS THIS A RESET                    23900002
         BO    DECMCT1             .YES                                 23950001
*/*STPON1: P INCREMENT SMC CT IN TREE TCB */                            24000002
*/* N ABEND IF COUNT WRAPS TO X'FF' */                                  24010002
STPON1   IC    R12,TCBSTMCT        .GET JB STEP M.C. COUNT              24050002
         TM    TCBSTMCT,OFF        TEST FOR WRAP COND          @YM00217 24052002
         BO    ABEND14F            ABEND IF TOO MANY           @YM00217 24056002
         LA    R12,R1(,R12)         .INCREMENT IT                       24100002
         STC   R12,TCBSTMCT        .RE-STORE IT                         24150001
*/* S TCBRDYCT: APPLY -1 TO TCB READY COUNT*/                           24150402
         L     R9,FOXES                DELTA OF -1                      24152002
         BAL   R11,TCBRDYCT            GO PROCESS ASCBTCBS              24154002
*/* P (,SCANTASK) TURN ON SMC NDISP BIT IN TREE TCB*/                   24156002
         OI    TCBFLGS5,TCBSTP     .SET JB STEP M.C. SUMMARY FLAG       24160002
         B     SCANTASK            .GO SELECT ANOTHER TASK              24200002
*/*DECMCT1: P DECREMENT SMC CT IN TREE TCB */                           24210002
DECMCT1  IC    R12,TCBSTMCT        .GET JB STEP M.C. COUNT              24250001
         BCTR  R12,R0              .DECREMENT IT                        24300001
         CLI   TCBSTMCT,C0         TEST FOR ALREADY ZERO       @YM00217 24310002
         BE    STPOFF              BR IF ALREADY DOWN TO ZERO  @YM00217 24320002
         STC   R12,TCBSTMCT        .RE-STORE IT                         24350001
*/* D (NO,SCANTASK,YES,) COUNT IS NOW ZERO*/                            24360002
         CLI   TCBSTMCT,C0         .IS IT NOW ZERO                      24400002
         BNE   SCANTASK            .NO, GO SELECT ANOTHER TASK          24450002
*/* P TURN OFF SMC NDISP FLAG IN TREE TCB*/                             24450402
STPOFF   NI    TCBFLGS5,OFF-TCBSTP .RESET JB STEP M.C. SUMMARY FLAG     24452002
*/* S TCBRDYCT: APPLY +1 TO TCB READY COUNT*/                           24454002
         LA    R9,C1                   DELTA IS 1                       24460002
         BAL   R11,TCBRDYCT            PROCESS ASCBTCBS                 24470002
*/*SCANTASK: S (NONE,SETSMCT,NEXT,) IEATRSCN: GET NEXT TCB IN TREE*/    24520002
SCANTASK LA    R11,SETSMCT             FINAL EXIT POINT FROM TREESCAN   24550002
         BAL   R14,IEATRSCN        .GO TO TREESCAN                      24820002
* RETURN HERE MEANS ANOTHER SUBTASK HAS BEEN FOUND. ITS ADDR IS IN R10. 24850001
* RETURN TO THE ADDR IN R11 MEANS SCAN COMPLETED                        24900001
*/* D (YES,SCANTASK,NO,) AT CALLER TCB*/                                24910002
         CR    R10,R4              .IS THIS THE CALLERS TASK            24950001
         BE    SCANTASK            .YES, GO SELECT ANOTHER TASK         25000002
*/*CHECKJS: D (YES,MAIN14,NO,SCANTASK) TCB IN SAME STEP (SAME JSTCBS)*/ 25010002
CHECKJS  CLC   TCBJSTCB,TCBJSTCB-TCB(R4) .NO, IS TASK IN SAME STEP      25050001
         BE    MAIN14              .YES, GO SET/RESET MUST COMPLET FLAG 25100001
         B     SCANTASK            .NO, GO SELECT ANOTHER TASK          25150002
         DROP  R10                                                      25200001
*/*SETSMCT: D (YES,DECRSMCT,NO,) THIS IS A RESET*/                      25210002
SETSMCT  IC    R2,ASCBSMCT             CURRENT SMCT                     25214002
         TM    SWITCHES,UNDOIT          TEST FOR SET/RESET              25220002
         BO    DECRSMCT                BR IF RESET                      25230002
*/* P (,EXIT) INCREMENT ASCBSMCT CT*/                                   25232002
         CLI   ASCBSMCT,OFF        TEST FOR OVERFLOW           @YM00217 25234002
         BE    ABEND14F            ABEND IF TOO MANY           @YM00217 25236002
         LA    R2,C1(,R2)          INCR CT                              25240002
         B     SMCT                GO TO SET COUNT                      25241002
*/*DECRSMCT: P (,EXIT) DECREMENT ASCBSMCT CT*/                          25242402
DECRSMCT BCTR  R2,R0               DECREMENT CT                         25244002
         CLI   ASCBSMCT,C0         TEST FOR ALREADY ZERO       @YM00217 25244402
         BE    EXIT                EXIT IF ALREADY DONE        @YM00217 25244802
SMCT     STC   R2,ASCBSMCT         SET NEW CT                           25246002
         B     EXIT                OUT                                  25248002
         EJECT                                                          25248402
*/*SIGPCPUS: E SIGNAL OTHER PROCESSORS */                               25248640
SIGPCPUS DS    0H                  USES REGS 0 1 13 14 15 (12)  @Y02751 25249202
*                                                                       25249340
*  THE SIGPCPUS SUBROUTINE PERFORMS TWO FUNCTIONS.  THE FIRST  @Z40FPYK 25249440
*  WILL CLEAR ACTIVE DISPATCHERS THAT DO NOT HOLD THE LOCAL    @Z40FPYK 25249540
*  LOCK WHILE DISPATCHING A TASK (E.G. TCTL FUNCTION).  THIS   @Z40FPYK 25249640
*  FUNCTION BASICALLY PROVIDES A SYNCHRONIZATION FUNCTION,     @Z40FPYK 25249740
*  BETWEEN STATUS AND THE NON-LOCALLY LOCKED DISPATCHER.       @Z40FPYK 25249840
*  THE SECOND FUNCTION OF SIGPCPUS IS TO CLEAR ALL OTHER       @Z40FPYK 25249940
*  CPUS OF ACTIVE TASKS OPERATING IN THE STATUS MEMORY.        @Z40FPYK 25250040
*  REGISTER CONVENTIONS ARE AS FOLLOWS:                        @Z40FPYK 25250140
*    R0  WORK REGISTER      R8  UNCHANGED                      @Z40FPYK 25250240
*    R1  WORK REGISTER      R9  UNCHANGED                      @Z40FPYK 25250340
*    R2  UNCHANGED          R10 UNCHANGED                      @Z40FPYK 25250440
*    R3  ASCB ADDRESS       R11 WORK REGISTER                  @Z40FPYK 25250540
*    R4  UNCHANGED          R12 RETURN REGISTER                @Z40FPYK 25251540
*    R5  UNCHANGED          R13 WORK REGISTER                  @Z40FPYK 25251640
*    R6  STATUS BASE REG    R14 WORK REGISTER                  @Z40FPYK 25251740
*    R7  UNCHANGED          R15 WORK REGISTER                  @Z40FPYK 25251840
*                                                              @Z40FPYK 25251940
*/* P ASCBSTA =  ON */                                         @Z40FPYK 25252040
         OI    ASCBSRQ1,ASCBSTA        TURN ON STATUS ACTIVE   @Z40FPYK 25252140
*                                      FLAG TO SET UP A        @Z40FPYK 25252240
*                                      NON-DISPATCHABLE STATE  @Z40FPYK 25252340
*                                      IN THIS MEMORY          @Z40FPYK 25252440
         SPACE 2                                               @Z40FPYK 25252540
*/* P OBTAIN CDAL POINTER */                                   @Z40FPYK 25252640
         SPACE 2                                               @Z40FPYK 25252740
         L     R11,CVTPTR              POINT TO THE CVT        @Z40FPYK 25252840
         USING CVT,R11                                         @Z40FPYK 25252940
         L     R11,CVTCDAL             POINT TO THE CDAL       @Z40FPYK 25253040
         DROP  R11                                             @Z40FPYK 25253140
         SPACE 2                                               @Z40FPYK 25253240
*   INDEED THERE ARE ACTIVE NON-LOCALLY LOCKED DISPATCHERS     @Z40FPYK 25253340
*   CURRENTLY ACTIVE.  THIS ROUTINE MUST ANALYZE WHICH CPUS    @Z40FPYK 25253440
*   HAVE THIS CONDITION AND IF THE DISPATCHERS ARE ACTIVE ON   @Z40FPYK 25253540
*   BEHALF OF THE MEMORY STATUS IS ACTIVE IN, THIS CONDITION   @Z40FPYK 25253640
*   MUST BE CLEARED.                                           @Z40FPYK 25253740
         SPACE 2                                               @Z40FPYK 25253840
*/*%MAXCPU: P MAXCPU COUNT = 16 */                             @Z40FPYK 25253940
         SPACE 2                                               @Z40FPYK 25254040
         LA    R1,C16                   SET UP FOR MAXIMUM     @Z40FPYK 25254140
*                                       NUMBER OF CPUS         @Z40FPYK 25254240
         SPACE 2                                               @Z40FPYK 25254940
*/*DISPLOOP: D (YES,,NO,DISPFND) ACTIVE ENTRY ? */             @Z40FPYK 25255040
         SPACE 2                                               @Z40FPYK 25255240
DISPLOOP DS    0H                                              @Z40FPYK 25255340
         USING CDAL,R11                                        @Z40FPYK 25255440
         L     R14,CDALDSP             A DISPATCHER ACTIVE FOR @Z40FPYK 25255540
*                                      THIS CPU ?              @Z40FPYK 25257940
         LTR   R14,R14                 DISP ELEMENT = 0 ?      @Z40FPYK 25258140
         BNZ   DISPFND                 NO,  STALL              @Z40FPYK 25259840
*                                      UNTIL THIS CONDITION IS @Z40FPYK 25262040
*                                      CLEARED                 @Z40FPYK 25262340
         SPACE 2                                               @Z40FPYK 25262640
*/*DISPNXT: P BUMP TO NEXT CPU ENTRY */                        @Z40FPYK 25262940
         SPACE 2                                               @Z40FPYK 25263240
DISPNXT  DS    0H                                              @Z40FPYK 25263540
         LA    R11,C4(R11)             INCREMENT TO NEXT ENTRY @Z40FPYK 25263840
         SPACE 2                                               @Z40FPYK 25263940
*/* D (YES,DISPLOOP,NO,SIGPCPUM) MORE CPU'S ? */               @Z40FPYK 25264040
         SPACE 2                                               @Z40FPYK 25264140
         BCT   R1,DISPLOOP             HAVE ALL CPUS BEEN      @Z40FPYK 25264240
*                                      CHECKED?  IF NOT, WE    @Z40FPYK 25264340
*                                      MUST CONTINUE CHECKING  @Z40FPYK 25264440
         B     SIGPCPUM                ELSE ALL CPUS HAVE BEEN @Z40FPYK 25264540
*                                      EXAMINED.  THE VARIOUS  @Z40FPYK 25264640
*                                      NON-DISPATCHABILITY     @Z40FPYK 25264740
*                                      STATES CAN BE SET       @Z40FPYK 25264840
         SPACE 2                                               @Z40FPYK 25264940
*/*DISPFND: D (YES,,NO,DISPLOOP) ACR ACTIVE ? */               @Z40FPYK 25265040
         SPACE 2                                               @Z40FPYK 25265140
DISPFND  DS    0H                                              @Z40FPYK 25265240
         L     R13,PSALCCAV            LCCA ADDRESS OF OUR CPU @Z40FPYK 25267540
         USING LCCA,R13                                        @Z40FPYK 25267640
         TM    LCCADSF1,LCCAACR        ACR ACTIVE?             @Z40FPYK 25267740
         BZ    DISPLOOP                NO, SPIN UNTIL CDAL=0   @Z40FPYK 25267840
         DROP  R11                                             @Z40FPYK 25267940
         SPACE 2                                               @Z40FPYK 25270240
*/* S (,DISPLOOP)ACR: CALL ACR TO PREVENT INTERLOCK */         @Z40FPYK 25270340
         SPACE 2                                               @Z40FPYK 25270540
         LR    R0,R10                  SAVE R10 ACROSS THE     @Z40FPYK 25270640
*                                      ACR CALL                @Z40FPYK 25270740
         STNSM SAVMSK,DISMASK          DISABLE AND SAVE THE    @Z40FPYK 25270840
*                                      CURRENT MASK            @Z40FPYK 25273240
         USING WSAC,R10                                        @Z40FPYK 25273340
         CALLRTM TYPE=ACRLM,CCA=(R13)                          @Z40FPYK 25273440
         DROP  R10,R13                                         @Z40FPYK 25273540
         USING STFRRPAR,R13                                    @Z40FPYK 25274140
         LR    R10,R0                  RESTORE R10             @Z40FPYK 25275540
         IC    R14,SAVMSK              RESTORE THE SAVED       @Z40FPYK 25275640
         EX    R14,STOMSK              MASK AND ENABLE         @Z40FPYK 25277640
         B     DISPLOOP                CONTINUE CPU CHECK      @Z40FPYK 25277740
*                                      RESTORING REG 14        @Z40FPYK 25278140
*/*SIGPCPUM: D (TCB,,SRB,SIGNSP) TCB OR SRB CALLER */          @Z40FPYK 25278240
         SPACE 2                                               @Z40FPYK 25278340
SIGPCPUM DS    0H                      CLEAR ACTIVE TASKS IN   @Z40FPYK 25278440
*                                      THIS MEMORY             @Z40FPYK 25278540
         L     R11,PSATOLD             GET CURR TCB POINTER     @Y02751 25278640
         LTR   R11,R11                 TEST FOR ZERO(SRB)       @Y02751 25278740
         BZ    SIGNSP                  BR ZERO (SRB)            @Y02751 25278840
*/* P (,%JT0) SET CHECK COUNT = 1 FOR TCB*/                     @Y02751 25278940
         LA    R11,C1                  SET TCB CHECK COUNT      @Y02751 25279040
*/*SIGNSP: P CHECK COUNT = 0 FOR SRB */                         @Y02751 25279140
*/*%JT0: D (NO,SETSIG,YES,) CHECK COUNT MATCH NUMBER ACT CPUS*/@Y02751  25279240
SIGNSP   CL    R11,ASCBCPUS            CHECK CPU COUNT          @Y02751 25279340
*/* R RETURN */                                                         25279440
         BER   R12                     RETRN IF NEED NO SIGP    @Y02751 25279540
         TM    SWITCHES,EXPLICIT       IS REQUEST FOR 1 TCB?   @ZA32105 25279640
         BZ    SETSIG                  NO, QUIESCE ALL TASKS   @ZA32105 25280140
*                                      IN A. S. EXCEPT CURRENT @ZA32105 25280240
*        WE ARE CHANGING DISPATCHABILITY FOR ONLY 1 TASK. IF   @ZA32105 25280340
*        THAT TASK IS NOW ACTIVE, WE MUST CONTINUE WITH SIGP   @ZA32105 25280440
*        PROCESSING. IF IT IS NOT ACTIVE, DO NOT WORRY ABOUT   @ZA32105 25280540
*        OTHER TASKS (AN INTERLOCK WITH A SPIN LOCK IS         @ZA32105 25280640
*        POSSIBLE).                                            @ZA32105 25280740
         TM    TCBXSCT-TCB(R8),TCBACTIV+TCBS3A IS TASK ACTIVE? @ZA32105 25280840
         BZR   R12                     NO, RETURN WITH NO SIGP @ZA32105 25281340
*/*SETSIG: P GET ADDR OF PCCA TABLE - INIT FOR 16 PASSES */     @Y02751 25281440
SETSIG   DS    0H                      TEST LABEL               @Y02751 25281540
         L     R11,CVTPTR              ADDR OF CVT                      25281640
         L     R11,CVTPCCAT-CVTMAP(,R11)   ADDR OF PCCA TABLE           25281740
         LA    R13,C16                  MAX CPUS                        25281840
*/*SIGPLOOP: D (YES,NOSIGP,NO,) THIS PCCA ENTRY IS ZERO*/               25281940
SIGPLOOP L     R1,C0(,R11)             ADDR OF PCCA                     25282040
         LTR   R1,R1                   IS ZERO                          25282140
         BZ    NOSIGP                  IF SO, DO NOT ISSUE RPSGNL       25282240
*/* D (YES,NOSIGP,NO,) THIS PCCA ENTRY IS FOR OUR CPU*/                 25282340
Q12      C     R1,PSAPCCAV             IS THIS OUR OWN CPU              25282440
         BE    NOSIGP                  YES, BR, DO NOT INTRPT ONESELF   25282540
*/* S RPSGNL: SIGP CPU REPRESENTED BY PCCA ENTRY*/                      25282640
Q13      RPSGNL SWITCH,CPU=(1)         INTERRUPT OTHER CPU              25282740
*/*NOSIGP: D (YES,SIGPLOOP,NO,) MORE CPUS TO CHECK*/                    25282840
NOSIGP   LA    R11,C4(,R11)             TO NEXT ENTRY IN PCCA TABLE     25282940
         BCT   R13,SIGPLOOP             BR IF MORE CPUS                 25283002
         L     R13,STFRRSAV        RESTORE FRR PRM POINTER      @Y02753 25285302
         SR    R0,R0               CLEAR REG                    @Y02753 25287302
*/* D (SRB,SIGPSPIN,TCB,) SPIN CT IS 0- WE ARE AN SRB OR TCB*/          25289602
Q14      C     R0,PSATOLD              IS PSATOLD ZERO                  25291902
         BE    SIGPSPIN                BR IF SO, MEANS SRB MODE         25294202
*/* P MAKE SPIN CT 1 SINCE WE ARE A TCB*/                               25296502
         LA    R0,C1                   IN TCB MODE, COUNT WILL BE 1     25298802
*/*SIGPSPIN: D (FAIL,%D6,TAKE,) CS ASCBCPUS AND SPIN CT*/               25301140
SIGPSPIN LR    R1,R0                   SET UP LOW COUNT FOR CS          25303402
Q10      CS    R1,R1,ASCBCPUS          DO WE HAVE A MATCH YET           25305702
*/* R RETURN*/                                                          25308002
         BZR   R12                     YES, RETURN TO CALLER            25310302
*/*%D6: D (NO,SIGPSPIN,YES,) LCCA ACR ACTIVE BIT ON*/                   25312602
         L     R15,PSALCCAV            GET ADDR OF OUR LCCA             25314902
         USING LCCA,R15                                                 25317202
         TM    LCCADSF1,LCCAACR        ACR IS IN PROGRESS               25319502
         BZ    SIGPSPIN                BR IF NOT SO                     25321802
*/* S (,SIGPSPIN) ACR: CALL ACR TO AVOID INTERLOCK*/                    25324140
         LR    R14,R10                 SAVE REG 10 ACROSS ACR CALL      25326402
         USING WSA,R5                                                   25328702
         STNSM SAVMSK,DISMASK          DISABLE ANS SAVE MASK            25331002
         USING WSAC,R10                                                 25333302
         CALLRTM TYPE=ACRLM,CCA=(R15)                                   25335602
         DROP  R10,R15                                                  25337902
         LR    R10,R14                 RESTORE REG 10                   25340202
         IC    R14,SAVMSK              GET SAVED SYS MASK               25342502
         EX    R14,STOMSK              ENABLE                           25344802
         B     SIGPSPIN                TO LOOP                          25347102
STOMSK   STOSM SAVMSK,C0               EXECUTED                         25349402
         SPACE 4                                               @ZA20174 25350440
*/*TCBRDYCT: E UPDATE ASCBTCBS RTN*/                                    25352702
*/* D (NO,%D1,YES,) TCB IS DISPATCHABLE*/                               25354002
TCBRDYCT DS    0H                      USES REGS 9 12 13 (10 11)        25356302
         SR    R12,R12                 ZERO REG                         25358602
         CH    R12,TCBFLGS4-TCB(,R10)   TCB IS NON-DISPATCHIBLE         25360902
         BNER  R11                     RETURN IF SO                     25362902
*/* P SET TCBS3A TO LOCK OUT RESUME */                         @ZA11584 25363240
         L     R12,TCBXSCT-TCB(,R10)   PICK UP TCB ACTIVE WORD @ZA11584 25363440
STATLOOP N     R12,MASK1               INSURE RESUME NOT ACTIVE@ZA11584 25363640
         LR    R0,R12                  INSURE THAT WE LOCK OUT @ZA11584 25363840
         O     R0,MASK2                RESUME WHILE ADJUSTING  @ZA11584 25364040
         CS    R12,R0,TCBXSCT-TCB(R10) THE ASCBTCBS COUNT      @ZA11584 25365040
         BNE   STATLOOP                NO ON -- RESUME ACTIVE  @ZA11584 25365440
*                                      SPIN UNTIL IT FINISHES  @ZA11584 25365840
*/* D (NO,RESETS3A,YES,) WAIT COUNT IN TOP RB IS ZERO */       @ZA20174 25366740
         L     R12,TCBRBP-TCB(,R10)     GET TOP RBADDR                  25367802
         CLI   RBWCF-RBSECT(R12),C0    IS RB WAITING                    25370102
         BNE   RESETS3A                RETURN IF SO            @ZA20174 25371140
*/* P APPLY SUPPLIED DELTA TO ASCBTCBS CT USING CS*/                    25374702
         L     R12,ASCBTCBS            GET COUNT OF READY TCBS          25377002
TRYRDYCT LR    R0,R12                  SET UP FOR CS                    25379302
         AR    R0,R9                   APPLY SUPPLIED DELTA             25381602
Q15      CS    R12,R0,ASCBTCBS         STORE NEW COUNT                  25383902
         BNZ   TRYRDYCT                MISSED - TRY AGAIN               25386202
         LTR     R0,R0                NEW COUNT=0?     @ZD04015         25386540
         BNZ     RESETS3A             NO,DONE - RETURN         @ZA20174 25386640
         LH      R12,ASCBSWCT          GET WAIT COUNT   @ZD04015        25387140
         LA      R12,1(R12)             INCREMENT COUNT BY ONE @ZD04015 25387440
         STH     R12,ASCBSWCT          SAVE NEW WAIT COUNT @ZD04015     25387740
*/*RESETS3A: P TURN OFF TCBS3A BIT*/                           @ZA20174 25387840
RESETS3A L     R12,TCBXSCT-TCB(R10)    GET TCB INTERSECT WORD  @ZA20174 25387940
LOOPS3A  LR    R0,R12                  INIT SWAP OPERAND       @ZA20174 25388040
         N     R0,MASK1                CLEAR TCBS3A IN SWAP OP @ZA20174 25388240
         CS    R12,R0,TCBXSCT-TCB(R10) CLEAR TCBS3A IN TCB     @ZA20174 25388340
         BNE   LOOPS3A                 UPDATE FAIL, RETRY CS   @ZA20174 25388440
*/*%D1: R RETURN*/                                                      25390240
         BR    R11                     DONE RETURN                      25390802
         TITLE 'IEAVSETS...AOS/2...SD,STEP, ND,STEP'                    25393102
*   THIS CODE IS ENTERED WHEN NON-DISPATCHABLE STEP IS SPECIFIED.       25395402
*   IT OBTAINS THE JOB STEP TCB AND SETS ALL DESCENDENTS EXCEPT THE     25397702
*   CURRENT TASK NON-DISPATCHABLE.                                      25400001
         SPACE                                                          25450001
         USING TCB,R4                                                   25500001
*/*NDSTEP: E CODE 3*/                                                   25510002
NDSTEP   EQU   *                   LABEL                                25550002
*/*SDSTEP: E CODE 8*/                                                   25552002
*/* D (YES,STEPND,NO,) PRIMARY REQUEST*/                                25554002
SDSTEP   LR    R7,R15                  COPY MASK                        25560002
         TM    SWITCHES,PRIMARY        TEST FOR ND/SD                   25610002
         BO    STEPND                  BR IF PRIMARY                    25660002
*/* D (YES,ABEND14F,NO,MAINSTEP) STOP TCB BIT IS PRESENT IN MASK*/      25662002
         N     R15,STOPCHEK            SEE IF STOP TCB BIT IN 2NDY MASK 25670002
         BNZ   ABEND14F                IF SO, THAT IS IMMORAL           25680002
         B     MAINSTEP            CONTINUE                             25690002
*/*STEPND: D (YES,ABEND14F,NO,) SET MC BIT IS PRESENT IN MASK*/         25690402
STEPND   N     R15,SMCCHEK         SEE IF SMC BIT IN PRIM MASK          25692002
         BNZ   ABEND14F            BR IF SO - ALSO ILLEGAL              25693002
*/*MAINSTEP: S SIGPCPUS: CLEAR OTHER CPUS FROM A.S.*/          @ZA30358 25694440
MAINSTEP EQU   *                                               @ZA30358 25700440
         SPACE                                                          25706440
*        SIGPCPUS WAS FORMERLY CALLED ONLY FOR SET             @ZA30358 25712440
         BAL   R12,SIGPCPUS        CLEAR OTHER CPUS FROM A.S.  @ZA30358 25718440
*/* D (NO,GETJSTCB,YES,) RESET REQUEST*/                       @ZA30358 25724440
         TM    SWITCHES,UNDOIT     IS THIS A RESET                      25730440
         BNO   GETJSTCB            NO GET THE JOBSTEP TCB      @ZA30358 25736440
*/* P INVERT MASK*/                                                     25752002
         X     R7,FOXES            INVERT MASK                          25760002
*/* D (NO,GETJSTCB,YES,) RUNNING IN SRB MODE*/                          25762002
Q44      L     R1,PSATOLD          ADDR OF CURRENT TCB                  25770002
         LTR   R1,R1                   TEST RUNNING TCBS COUNT          25792002
         BNZ   GETJSTCB                BR IF NOT IN SRB MODE            25794002
*/* P (,JSTEST) START AT TOP TCB IN A.S.*/                              25794102
         L     R10,ASCBASXB            GET ADDR OF ASXB                 25794402
         L     R10,ASXBFTCB-ASXB(,R10)  TOP TCB IN A.S.                 25796002
         B     JSTEST              CONTINUE                             25816002
*/*GETJSTCB: P GET CALLER JSTCB ADDR*/                                  25948002
GETJSTCB L     R10,TCBJSTCB        .GET THE CALLER'S JSTCB              26500001
*/*JSTEST: P ESTABLISH RETURN AT 'GETNEXT' FOR BITSET, BITRESET*/       26510002
JSTEST   LR    R8,R10              .INIT REG FOR TREE SCAN              26550001
         LR    R15,R7                  SET UP MASK REG                  26560002
         LA    R2,GETNEXT          .INIT FLAG MANIPULATOR LINK REG      26600002
*/* D (YES,SETADDR,NO,) LOOKING AT CALLER TCB*/                         26610002
         CR    R4,R10              .IS CALLER THE JOB STEP TCB          26650001
         BE    SETADDR             .YES, BYPASS HIM                     26700001
*/*SETTSTND: D (YES,BITRESET,NO,BITSET) RESET REQUEST*/                 26710002
SETTSTND TM    SWITCHES,UNDOIT      .IS THIS A RESET                    26750002
         BO    BITRESET            .YES, GO TO FLAG RESETTER            26800001
         B     BITSET              .NO, GO INSTEAD TO FLAG SETTER       26850001
         SPACE                                                          26900001
*/*GETNEXT: D (YES,EXIT,NO,) EXPLICIT TCB REQUEST*/                     26910002
GETNEXT  TM    SWITCHES,EXPLICIT   .IS THIS AN EXPLICIT TCB REQUEST     26950002
         BO    EXIT                .YES, GO TO EXIT                     27100002
         SPACE                                                          27150001
*/*SETADDR: S (NONE,EXIT,NEXT,) IEATRSCN: GET NEXT TCB IN TREE*/        27160002
SETADDR  LA    R11,EXIT                SET NO-MORE EXIT ADDR            27200002
         BAL   R14,IEATRSCN        .GO TO TREESCAN TO GET A RELATIVE    27210002
* RETURN HERE MEANS ANOTHER SUBTASK HAS BEEN FOUND. ITS ADDR IS IN R10. 27250001
* RETURN TO THE ADDR IN R11 MEANS SCAN COMPLETED                        27300001
*/*CURRCHK: D (YES,GETNEXT,NO,SETTSTND) LOOKING AT CALLER TCB*/         27310002
CURRCHK  CR    R10,R4              .WAS CALLER'S TCB SELECTED           27350002
         BCR   E,R2                .YES, GO GET ANOTHER TASK            27400001
         B     SETTSTND            .NO, GO DO IT TO THE RELATIVE        27450001
         DROP  R4                                                       27500001
       TITLE 'IEAVSETS...AOS/2...COMMON TCB FLAG SETTER && RESETTER'    27550001
         USING TCB,R10                                                  27600001
* RESET NON-DISPATCHABILITY FLAG MANIPULATOR ROUTINES                   27650001
         SPACE                                                          27700001
*/*BITRESET: S TCBRDYCT: APPLY -1 TO TCB READY COUNT*/                  27702002
BITRESET L     R9,FOXES                SET DELTA TO -1                  27710002
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS RTN               27720002
         LR    R12,R15                 COPY MASK INTO WORK REG          27730002
*/* D (NO,SDRESET,YES,) PRIMARY BITS TO BE AFFECTED*/                   27740002
         TM    SWITCHES,PRIMARY    .IS 2NDARY MASK TO BE AFFECTED       27750002
         BNO   SDRESET             .YES, BR                             27800002
         SPACE                                                          27850001
* RESET PRIMARY NON-DISPACHABILITY FLAGS                                27900001
*/* P 'AND' PRIMARY BITS WITH INVERTED RESET MASK*/                     27910002
         N     R12,TCBFLGS4            N OFF PRIMARY BITS               27950002
         STCM  R12,C8+C4,TCBFLGS4      STORE UPDATED NON-DISP FLAGS     28000002
*/*PTEST: S TCBRDYCT: APPLY +1 TO TCB READY COUNT*/                     28010002
PTEST    LA    R9,C1                   SET UP DELTA OF +1               28050002
         BAL   R11,TCBRDYCT            UPDATE CT NOW THAT BITS RESET    28100002
*/* R RETURN TO CALLER*/                                                28150002
         BR    R2                  .GO GET ANOTHER TASK                 29100001
         SPACE                                                          29150001
* RESET SECONDARY NON-DISPATCHABILITY FLAGS                             29200001
*/*SDRESET: P 'AND' SECONDARY BITS WITH INVERTED RESET MASK*/           29210002
SDRESET  N     R12,TCBNDSP             N OFF SECONDARY BITS             29250002
         ST    R12,TCBNDSP             STORE UPDATED FLAGS              29300002
*/* D (NO,PTEST,YES,) ALL SECONDARY BITS NOW OFF*/                      29310002
         BNZ   PTEST                   BR IF SOME STILL ON              29350002
*/*PBITOFF: P (,PTEST) TURN OFF PRIMARY SUMMARY BIT*/                   29400002
PBITOFF  NI    TCBFLGS5,OFF-TCBPNDSP .NO, RESET PRIM NON-DISP SUM FLAG  29500001
         B     PTEST               .GO TEST FOR POSSIBLE TASK SWITCH    29550001
         EJECT                                                          29750001
* SET NON-DISPATCHABILITY FLAG MANIPULATOR ROUTINES                     29800001
         SPACE                                                          29850001
*/*BITSET: S TCBRDYCT: APPLY -1 TO TCB READY COUNT*/                    29852002
BITSET   L     R9,FOXES                DELTA OF -1                      29860002
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS UPDATE RTN        29870002
*/* D (NO,SDSET,YES,) PRIMARY BITS TO BE AFFECTED*/                     29872002
         LR    R12,R15                 COPY MASK REG INTO WORK REG      29880002
         TM    SWITCHES,PRIMARY    .IS 2NDARY MASK TO BE AFFECTED       29900002
         BNO   SDSET               .YES, BR                             29950002
         SPACE                                                          30000001
* SET PRIMARY NON-DISPATCHABILITY FLAGS                                 30050001
*/*NDSET2: P 'OR' PRIMARY BITS WITH SET MASK*/                          30060002
NDSET2   O     R12,TCBFLGS4            O INDICATED BITS ON              30100002
         STCM  R12,C8+C4,TCBFLGS4      STORE NEW NON-DISP FLGS          30150002
*/*SSET: S TCBRDYCT: APPLY +1 TO TCB READY COUNT*/                      30160002
SSET     LA    R9,C1                   DELTA OF +1                      30200002
         BAL   R11,TCBRDYCT            UPDATE CT NOW THAT BITS SET      30250002
*/*%D2: R RETURN TO CALLER*/                                            30300002
         BR    R2                  .GO GET ANOTHER TASK                 30650001
         SPACE                                                          30700001
* SET SECONDARY NON-DISPATCHABILITY FLAGS                               30750001
*/*SDSET: P 'OR' SECONDARY BITS WITH SET MASK*/'                        30760002
SDSET    O     R12,TCBNDSP             O SECONDARY BITS ON              30800002
         ST    R12,TCBNDSP             STORE NEW SET OF BITS            30850002
*/* D (YES,SSET,NO,) BITS ARE STILL ALL ZERO*/                          30860002
         BZ    SSET                    BR IF NONE ARE NOW ON            30900002
*/* P (,%D2) TURN ON PRIMARY SUMMARY BIT*/                              30910002
         OI    TCBFLGS5,TCBPNDSP       TURN ON PRIM SUM BIT             30950002
         BR    R2                      GO TO GET DESCENDANT             31000002
         TITLE 'IEAVSETS...AOS/2...ND,TCB, SD,TCB'                      31250001
*   THIS CODE IS ENTERED WHEN NONDISPATCHABLE TCB ADDRESS IS SPECIFIED. 31300001
*   IT SETS ALL DESCENDENTS OF THE SPECIFIED TCB NONDISPATCHABLE.       31350001
*   IF THE 'E' PARAMETER HAS BEEN SPECIFIED, ONLY THE TASK              31400001
*   EXPLICITLY IDENTIFIED IS SET NONDISPATCHABLE.                       31450001
         SPACE                                                          31500001
* NON-DISPATCHABILITY EXPLICIT TCB ROUTINE                              31550002
*/*NDETCB: E CODE 12*/                                                  31552002
NDETCB   EQU   *                   LABEL                                31560002
*/*SDETCB: E CODE 11*/                                                  31570002
*/* P TURN ON EXPLICIT TCB SWITCH*/                                     31580002
SDETCB   OI    SWITCHES,EXPLICIT       SET THE EXPLICIT SW              31600002
         SPACE 2                                                        31650001
* NON-DISPATCHABILITY TCB ROUTINE                                       31700002
*/*NDTCB: E CODE 5*/                                                    31702002
NDTCB    EQU   *                   LABEL                                31710002
*/*SDTCB: E CODE 10*/                                                   31720002
*/* D (YES,TCBND,NO,) REQUEST IS FOR PRIMARY ND*/                       31730002
SDTCB    LA    R8,C0(,R1)          .INIT TREESCAN REGS W/SELECTED TCB   31750002
         LR    R10,R8              .SET THE TCB REGISTER                31800001
         LA    R2,GETNEXT          .INIT SUBROUTINE LINK REG            31850001
         LR    R7,R15                  SAVE MASK ACROSS SIGP            31860002
         TM    SWITCHES,PRIMARY        TEST FOR ND/SD                   31870002
         BO    TCBND                  BR IF PRIMARY                     31880002
*/* D (YES,,NO,MAINTCB) MASK INCLUDES STOP TCB BIT*/                    31882002
         N     R15,STOPCHEK            SEE IF STOP TCB BIT IN 2NDY MASK 31890002
         BZ    MAINTCB             GO TO SET                            31894002
*/* D (YES,,NO,ABEND14F) BOTH EXPLICIT AND RESET */                     31894102
         TM    SWITCHES,EXPLICIT+UNDOIT    TEST FOR EXPL AND RESET      31894202
         BNO   ABEND14F            BR IF NOT BOTH               @Y02752 31894302
*/* P (,MAINTCB) RESET STOP COUNT IF ALREADY STOPPED */                 31902202
         L     R15,STOPCHEK        GET STOP BIT MASK            @Y02752 31904202
         N     R15,TCBNDSP         AND WITH SECONDARY BITS      @Y02752 31906202
         BZ    MAINTCB             BRANCH IF NOT SET            @Y02752 31908202
         MVI   TCBSTPCT,C0         SET TO ZERO                  @Y02752 31910202
         B     MAINTCB             CONTINUE                     @Y02752 31910302
*/*TCBND: D (YES,ABEND14F,NO,) MASK INCLUDES SET MC BIT*/               31910502
TCBND    N     R15,SMCCHEK              SEE IF SMC BIT IN PRIM MASK     31918402
         BNZ   ABEND14F                BR IF SO - ALSO ILLEGAL          31926302
*/*MAINTCB: S SIGPCPUS: CLEAR OTHER CPUS OUT OF A.S.*/         @ZA30358 31934240
MAINTCB  EQU   *                                               @ZA30358 31984240
         SPACE                                                          32084240
*        SIGPCPUS WAS FORMERLY CALLED ONLY FOR SET             @ZA30358 32134240
         BAL   R12,SIGPCPUS            CLEAR OTHER CPUS OUT OF @ZA30358 32184240
*                                      ADDRESS SPACE           @ZA30358 32234240
         LR    R15,R7                  RESTORE MASK            @ZA30358 32244240
*/* D (YES,CURRCHK,NO,) REQUEST IS FOR SET*/                   @ZA30358 32284240
         TM    SWITCHES,UNDOIT      .IS THIS A RESET                    32334240
         BNO   CURRCHK                 NO, GO TO SET BITS ON   @ZA30358 32384240
*/* P (,CURRCHK) INVERT MASK BITS FOR RESET*/                           32434240
         X     R15,FOXES               INVERT MASK FOR RESET            32484240
         B     CURRCHK                 GO TO MAINLINE                   32534240
         DROP  R10                                                      33100001
         TITLE 'IEAVSETS...AOS/2...STOP/START'                          33150001
*   THE FOLLOWING SECTION OF CODE VALIDITY CHECKS THE TCB ADDRESS       33200001
*   PASSED IN REGISTER 1 FOR USE IN THE STOP/START FUNCTION.            33250001
*   IF NO TCB ADDR WAS PASSED IN REG 1 THEN THE CURRENT TCB IS USED.    33300001
*                                                                       33350001
         SPACE                                                          33400001
         USING TCB,R9                                                   33450001
*  STOP/START PRE-PROCESSING                                            33500001
*/*PROCEED: E ENTRY CODES 6,7*/                                         33510002
PROCEED  LA    R1,C0(,R1)             .CLEAR HIGH ORDER BYTE OF TCB ADD 33520040
         SR    R2,R2                   INIT STOP-PENDING CT             33530040
         LR    R7,R1                   SAVE TCB ADDR ACROSS SIGPCPUS    33540040
*/* S SIGPCPUS: CLEAR OTHER CPUS OUT OF A.S.*/                          33550040
         SPACE                                                          33560040
*        SIGPCPUS WAS FORMERLY CALLED ONLY FOR STOP            @ZA30358 33570040
         BAL   R12,SIGPCPUS            CLEAR OUT OTHER CPUS             33590002
*/*NOSTOP: D (NO,SETEXIT,YES,) EXPLICIT TCB ADDR SPECIFIED*/            33590402
NOSTOP   LTR   R1,R7                   RESET AND TEST TCB ADDR          33592002
         BZ    SETEXIT                 IF ZERO, TARGET IS ALL SUBTASKS  33594002
*/* D (YES,STOPTEST,NO,) REQUEST VIA BRANCH ENTRY*/                     33644002
         LR    R10,R1              .INIT R10 IN CASE OF FOLLOWING BR'S  33700001
         TM    SWITCHES,BRANCH    .IS THIS A BRANCH ENTRY               33750002
         BO    STOPTEST           .YES, BYPASS VAL CHECK OF TCB ADDR    33800002
*/* D (YES,STOPTEST,NO,) CALLER SVC OLD PSW KEY IS SUPVR*/              33810002
         L     R7,TCBRBP-TCB(,R4)       GET CURRENT RB                  33850002
         TM    RBOPSW+C1-RBSECT(R7),KEYF  TEST KEY FIELD                33880002
         BZ    STOPTEST                BR IF SUPVR KEY                  33920002
*/* L (NO,BADTCB,YES,STOPTEST) FOUND SPECIFIED TCB ON CALLERS SUBTREE*/ 33930002
         LR    R10,R4              .INIT R10 FOR SCAN WITH CUR TCB ADDR 33950002
SEARCH   LR    R9,R10              .SET TCB REG                         34000002
         L     R10,TCBLTC          .LOAD A DAUGHTER                     34050001
SRCH1    LTR   R10,R10             .IS THERE A DAUGHTER/SISTER          34100001
         BZ    GETSIS              .NO, GO GET ONE                      34150001
TCBHIT   CR    R10,R1              .YES, IS THIS THE SPECIFIED TCB      34200001
         BE    STOPTEST            .YES, GO TO STOP OR START            34250002
         B     SEARCH              .NO, RESEARCH                        34300001
GETSIS   L     R10,TCBNTC          .LOAD THE SISTER                     34350001
         CR    R4,R9               .ARE WE BACK TO TOP OF TREE          34400001
         BE    BADTCB              .YES, THE SPECIFIED TCB WASN'T FOUND 34450001
GETMOM   L     R9,TCBOTC           .NO, LOAD THE MOTHER                 34500001
         B     SRCH1               .AND RESEARCH                        34550001
         SPACE 2                                                        34600001
*/*SETEXIT: S (NONE,OVER,NEXT,) IEATRSCN: GET NEXT TCB IN SUBTREE*/     34610002
SETEXIT  LR    R10,R4              .INIT R10 FOR SCAN                   34650001
         LR    R8,R4               .START SCAN FROM CURR TCB            34700001
STRTSCAN LA    R11,OVER                SET NO-MORE RETURN ADDR          34750002
         BAL   R14,IEATRSCN            GO FIND NEXT RELATIVE            34760002
*  RETURN HERE MEANS A RELATIVE WAS FOUND.  ITS ADDRESS IS IN R10.      34800001
*  RETURN TO THE ADDR IN R11 MEANS SCAN COMPLETED.                      34850001
*/*STOPTEST: S TCBRDYCT: APPLY -1 TO TCB READY COUNT*/                  34852002
STOPTEST L     R9,FOXES                DELTA OF -1                      34860002
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS UPDATER           34870002
*/* S TESTSTOP: START/STOP PROCESSING ROUTINE*/                         34880002
         BAL   R14,TESTSTOP        .GO TO STOP OR START RTN             34900002
*/* S TCBRDYCT: APPLY +1 TO TCB READY COUNT*/                           34902002
         LA    R9,C1                   DELTA OF +1                      34910002
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS UPDATER           34920002
*/*CKALTST: D (YES,,NO,SETEXIT) REQUEST IS FOR EXPLICIT TCB*/           34930002
CKALTST  LTR   R1,R1               IS THERE AN ADDR IN R1               34950002
         BZ    STRTSCAN            .NO, GO SCAN FOR MORE DECENDENTS     35000002
*/*OVER: D (NO,EXIT,YES,) ENTRY FOR SYNCH STOP*/                        35010002
OVER     TM    SWITCHES,SYNCHTCB       ENTRY FOR SYNCH STOP             35050002
         BZ    EXIT                BR IF NOT SYNCH                      35060002
*/* D (NO,SYNCHXIT,YES,) THERE ARE PENDING STOPS*/                      35062002
         LTR   R2,R2               ARE ANY STOPS PENDING                35070002
         BZ    SYNCHXIT            BR IF NO NEED TO WAIT                35075002
*/* S TCBRDYCT: APPLY DELTA OF -1*/                                     35080102
Q28      L     R10,PSATOLD         ADDR OF CURRENT TCB                  35080202
         L     R9,FOXES            DELTA OF -1                          35084202
         BAL   R11,TCBRDYCT        GO TO ASCBTCBS UPDATER               35090202
*/* P TURN ON TCB AND RB SYNCH BITS- SET RB WAIT CT*/                   35094802
         L     R7,TCBRBP-TCB(,R4)       GET ADDR OF RB TO WAIT          35099402
         S     R7,CRBPRFXL             ADJUST ADDR TO PREFIX            35104002
         OI    RBFLAGS1-RBPRFX(R7),RBSSSYN SET SYNCH BIT IN WAITING RB  35108602
         LA    R7,RBPRFXLN(,R7)         RESET TO RBSECT                 35113202
         STC   R2,RBWCF-RBSECT(,R7)     STORE WAIT COUNT                35117202
         OI    TCBFBYT2-TCB(R4),TCBSSSYN SET SUMMARY BIT IN TCB         35122402
*/*SYNCHXIT: D (YES,BREXIT,NO,EXIT) BRANCH ENTRY TO SYNCH*/             35127002
SYNCHXIT TM    SWITCHES,BRANCH         TEST FOR BRANCH ENTRY            35131602
         BO    BREXIT                  BR IF BRANCH ENTRY               35136202
         B     EXIT                SVC, BR                              35140802
         DROP  R9                                                       35145402
         EJECT                                                          35150001
*   THE FOLLOWING CODE IS ENTERED ON BEHALF OF THE STOP/START OPTION.   35200001
*   THIS CODE SETS OR RESETS THE STOP/START                             35250001
*   SECONDARY NON-DISPATCHABILITY BIT.  IF NO SECONDARY NON-            35300001
*   DISPATCHABILITY BITS ARE SET THE PRIMARY NON-DISPATCHABILITY        35350001
*   BIT IS RESET.  THE TCB STOP/START COUNT IS ALSO MAINTAINED          35400001
         SPACE                                                          35450001
*/*TESTSTOP: E ADJ TCB BITS */                                 @Z40FPYK 35455040
*/* N ADJUST START STOP COUNT */                               @Z40FPYK 35456040
*/* N ADJUST SD/ND BITS */                                     @Z40FPYK 35457040
*/* D (YES,STCBSTAR,NO,) REQUEST FOR START*/                            35460002
TESTSTOP TM    ACTCODE,START       .IS THIS A START                     35500001
         BO    STCBSTAR            .YES GO TO START                     35550001
         SPACE                                                          35600001
*  STOP ROUTINE                                                         35650001
         USING TCB,R10                                                  35700001
*/*STCBSTOP: P INCREMENT STOP TCB COUNT IN STOPPED TCB */               35710002
*/* N ABEND IF COUNT WRAPS FROM X'FF'             */            @Y02753 35720002
STCBSTOP IC    R12,TCBSTPCT        .GET STOP/START COUNT                35750001
         TM    TCBSTPCT,OFF        TEST FOR WRAP CONDITION     @YM00217 35752002
         BO    ABEND14F            ABEND IF GOING TO WRAP      @YM00217 35756002
         LA    R12,R1(,R12)         .INCREMENT THE COUNT                35800002
         STC   R12,TCBSTPCT        .STORE NEW COUNT                     35850001
*/*TESTRB: D (YES,SETWCPLT,NO,) ATTNS DEFERRED BIT IS ON IN TCB*/       35860002
TESTRB   TM    TCBTSFLG,TCBATT     .ARE ATTENTION EXITS BLOCKED         35900001
         BO    SETWCPLT            .YES                                 35950001
*/* STPPON: P TURN ON STOP BIT AND PRIMARY SUMMARY BIT*/                35960002
STPPON   OI    TCBNDSP2,TCBSTPP    .SET THE STOP FLAG                   36000001
         OI    TCBFLGS5,TCBPNDSP   .SET PRIMARY NON-DISPATCH FLAG       36050001
*/*%D3: R RETURN TO CALLER*/                                            36060002
         BR    R14                 .RETURN TO STOP CALLER               36100001
*/*SETWCPLT: P  TURN ON STOP PENDING BIT*/                              36110002
SETWCPLT OI    TCBTSFLG,TCBSTPPR   .SET STOP PENDING FLAG               36150001
*/* D (YES,%D3,NO,) HAS TASK TERMINATED */                              36152002
         TM    TCBFLGS5,TCBFC       IS TASK TERMINATED         @YM04151 36154002
         BOR   R14                  YES,RETURN AND DONT INCR CT@YM04151 36156002
*/* P (,%D3) INCR COUNT OF STOP PENDING TASKS FOR STOP SYNCH*/          36158002
         LA    R2,C1(,R2)           .BUMP STOP-PENDING CT               36160002
         BR    R14                 .RETURN TO STOP CALLER               36200001
         SPACE 2                                                        36250001
* START ROUTINE                                                         36300001
*/*STCBSTAR: D (YES,STOPOFF,NO,) STOP COUNT IS ALREADY ZERO*/           36310002
STCBSTAR CLI   TCBSTPCT,R0         .IS STOP/START COUNT 0               36350001
         BE    STOPOFF             .YES, RESET STOP PENDING FLAG        36400001
*/* P DECREMENT STOP COUNT */                                           36402002
         SR    R12,R12                 CLEAR WORK REG                   36410002
         IC    R12,TCBSTPCT        .GET STOP/START COUNT                36450001
         BCTR  R12,R0              .DECREMENT THE COUNT                 36500002
         STC   R12,TCBSTPCT        .STORE IT                            36550001
*/* D (NO,%D3,YES,) STOP COUNT IS NOW ZERO*/                            36560002
         LTR   R12,R12             .IS STOP/START COUNT NOW 0           36600002
         BNZR  R14              .NO, RETURN TO START CALLER             36650002
*/*STOPOFF: P TURN OFF STOP BIT AND STOP PENDING BIT*/                  36660002
*/* D (NO,%D3,YES,) ALL SECONDARY BITS ARE NOW OFF*/                    36670002
STOPOFF  NI    TCBTSFLG,OFF-TCBSTPPR     .YES, RESET STOP PEND FLAG     36700001
         NI    TCBNDSP2,OFF-TCBSTPP      .RESET THE STOP FLAG           36750001
         C     R12,TCBNDSP          ANY 2NDARY NON-DISP FLAGS ON?       36800002
         BNZR  R14                 .YES, RETURN TO START CALLER         36850002
*/* P (,%D3) TURN OFF PRIMARY SUMMARY BIT*/                             36860002
         NI    TCBFLGS5,OFF-TCBPNDSP   .NO, RESET PRIM NON-DISP FLAG    36900002
         BR    R14                 .RETURN TO START CALLER              37150002
         DROP  R10                                                      37200001
         TITLE 'IEAVSETS...AOS/2...SYNCHRONOUS STOP SUBTASKS'           37202002
*/*SYNCH: E CODE 14*/                                                   37202402
*/* P (,PROCEED) TURN ON SYNCH TCB SWITCH- INDICATE ALL SUBTASKS*/      37202802
SYNCH    OI    SWITCHES,SYNCHTCB       SET SYNCH STOP BIT               37204002
         SR    R1,R1                   INDICATE ALL SUBTASKS TO STOP    37206002
         NI    SWITCHES,OFF-UNDOIT     CLEAR RESET INDICATOR   @YM08379 37207002
         B     PROCEED                 GO TO STOP CODE                  37208002
         SPACE 2                                                        37208402
*/*IEAVESSS: E SYNCH EP FOR EXIT*/                                      37208502
         ENTRY IEAVESSS                                                 37209102
*/* P SAVE AND SET UP REGS*/                                            37212802
IEAVESSS L     R15,PSAAOLD             ASCB                             37213402
         L     R15,ASCBASXB-ASCB(,R15)  ASXB                            37214002
         L     R15,ASXBSPSA-ASXB(,R15)  WSA TBL                         37214602
         L     R15,WSALSTAT-WSAL(,R15)  STATUS WSA                      37215202
         STM   R0,R14,C0(R15)          SAVE REGS                        37215802
         BALR  R6,R0                    BOOTSTRAP ADDRESSABILITY        37216402
         USING *,R6                                                     37217002
         L     R6,AIGC079          .LOAD NEW BASE REG                   37217602
         USING IGC079,R6                                                37218202
         LR    R5,R15                  WSA BASE                         37218802
         LR    R3,R7                   ASCB BASE                        37219402
*/* P GET MOTHER OF CURRENT TCB*/                                       37220002
         L     R10,TCBOTC-TCB(,R4)       GET NEXT TCB UP                37220602
*/*CHKTCBSS: D (NO,NEXTUP,YES,) THIS TCB WAITING FOR STOP*/             37221202
CHKTCBSS TM    TCBFBYT2-TCB(R10),TCBSSSYN THIS TCB WAITING ON STOPS     37221802
         BZ    NEXTUP                  BR IF NOT                        37222402
*/* P RESET TCB SYNCH BIT */                                            37222602
         NI    TCBFBYT2-TCB(R10),OFF-TCBSSSYN RESET TCB BIT    @YM06115 37222802
*/* S TCBRDYCT: APPLY DELTA OF -1*/                                     37223002
         L     R9,FOXES                DELTA OF -1                      37223602
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS UPDATER           37224202
*/* P GET ADDR OF TOP RB*/                                              37224802
         L     R7,TCBRBP-TCB(,R10)      ADDR OF TOP RB                  37225402
*/*CHKRBSSS: D (NO,NEXTOVER,YES,) THIS RB WAITING FOR STOP*/            37226002
CHKRBSSS S     R7,CRBPRFXL             ADJUST TO PREFIX                 37226402
         TM    RBFLAGS1-RBPRFX(R7),RBSSSYN THIS RB WAITING ON STOPS     37226602
         LA    R7,RBPRFXLN(,R7)         RESET TO RBSECT                 37227002
         BZ    NEXTOVER                BR IF NOT                        37227202
*/* P DECREMENT RB WAIT COUNT*/                                         37227402
         IC    R2,RBWCF-RBSECT(,R7)     GET WAIT COUNT                  37233402
         BCTR  R2,R0                   DECR                             37239802
         STC   R2,RBWCF-RBSECT(,R7)     RESET RB WAIT COUNT             37241002
*/* D (YES,NEXTOVET,NO,) COUNT IS NOW ZERO*/                            37242802
         CLI   RBWCF-RBSECT(R7),C0     IS COUNT NOW ZERO       @YM02758 37243402
         BE    NEXTOVET                BR IF YES               @YM06115 37245202
*/* P (,NEXTOVER) SET TCB SYNCH BIT */                                  37245802
         OI    TCBFBYT2-TCB(R10),TCBSSSYN SET TCB BIT          @YM06115 37246402
         B     NEXTOVER            GO TO NEXT RB               @YM06115 37248202
*/*NEXTOVET: P TURN OFF SYNCH BIT IN RB */                              37248802
NEXTOVET S     R7,CRBPRFXL         ADJUST TO PREFIX            @YM06115 37250002
         NI    RBFLAGS1-RBPRFX(R7),OFF-RBSSSYN RESET RB SYNCH BIT       37251202
         LA    R7,RBPRFXLN(,R7)         RESET TO RBSECT                 37251902
*/*NEXTOVER: D (YES,CHKRBSSS,NO,) NEXT ELEMENT IS RB*/                  37254002
NEXTOVER TM    RBSTAB2-RBSECT(R7),RBTCBNXT TCB IS NEXT ON CHAIN         37254702
         L     R7,RBLINK-RBSECT(,R7)    TO NEXT RB IF ANY               37255402
         BZ    CHKRBSSS                BR IF ANOTHER RB                 37256802
*/* S TCBRDYCT: APPLY DELTA OF +1*/                                     37257502
         LA    R9,C1                   DELTA OF +1                      37258902
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS UPDATER           37259602
*/*NEXTUP: P GET NEXT TCB FROM TCBOTC*/                                 37261702
NEXTUP   L     R10,TCBOTC-TCB(,R10)     ADDR OF NEXT UP TCB             37262402
*/* D (YES,CHKTCBSS,NO,) THERE IS ANOTHER TCB*/                         37263802
         LTR   R10,R10                 IS THERE ANOTHER                 37264502
         BNZ   CHKTCBSS                BR IF THERE IS A TCB             37265202
*/* P RESTORE REGS FROM WSA*/                                           37266602
         LM    R0,R14,WSA              RESTORE REGS                     37267502
*/* R RETURN TO EXIT*/                                                  37268402
         BR    R14                 RETURN TO EXIT                       37270202
         TITLE 'IEAVSETS...AOS/2...STOP/START SRBS'                     37271102
*   THE FOLLOWING CODE IS THE INFAMOUS STATUS STOP/START SRB ROUTINE.   37272002
*   IT CAUSES THE QUIESCING AND RESTARTING OF SYSTEM LEVEL SRBS WITHIN  37273802
*   AN ADDRESS SPACE.                                                   37274702
         SPACE                                                          37275602
*/*SRBS: E CODE 13*/                                                    37276602
*/* D (YES,STARTSRB,NO,) REQUEST IS FOR START*/                         37277602
SRBS     LTR   R1,R1                   TEST FOR START OR STOP           37278602
         BM    STARTSRB                BR IF SIGN BIT ON - MEANS START  37279602
*/* S SIGPCPUS: CLEAR OTHER CPUS OUT OF A.S.*/                          37280602
*/* P GET FIRST TCB IN A.S. TCB Q*/                                     37281602
         LR    R9,R14                  SAVE RETURN ADDR ACROSS CALL     37282602
         BAL   R12,SIGPCPUS            BR TO CLEAR OUT OTHER CPUS       37284302
         LR    R14,R9                  RESTORE REG 14                   37285302
         L     R10,ASCBASXB            ADDR OF ASXB                     37286302
         L     R10,ASXBFTCB-ASXB(,R10)  TOP TCB IN A.S.                 37287002
*/*SRBSTCBS: D (YES,DOWNQ,NO,) THIS IS CURRENT TCB*/                    37288302
SRBSTCBS CR    R10,R4                  AT THE CURRENT TCB               37289602
         BE    DOWNQ                   YES, SKIP TO NEXT TCB            37290902
*/* S TCBRDYCT: APPLY -1 TO TCB READY COUNT*/                           37291902
         L     R9,FOXES                DELTA OF -1                      37292902
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS UPDATER           37293902
*/* P TURN ON STOP SRB BIT AND PRIMARY SUMMARY BIT IN TCB*/             37294902
         OI    TCBNDSP3-TCB(R10),TCBSRBND   TCB ND WHILE SRBS STOPPED   37296102
         OI    TCBFLGS5-TCB(R10),TCBPNDSP  SET PRIMARY SUMMARY BIT      37297402
*/*DOWNQ: P GET ADDR OF NEXT SUBTASK*/                                  37298702
DOWNQ    L     R10,TCBTCB-TCB(,R10)     NEXT TCB ON RDY Q               37300002
*/* D (YES,SRBSTCBS,NO,) MORE TCBS ON Q*/                               37301302
         LTR   R10,R10                 TEST FOR END OF Q                37301902
         BNZ   SRBSTCBS                BR IF MORE TCBS                  37302602
QJFY1    L     R3,CVTPTR           GET ADDR OF CVT              @Y02753 37303902
         MVC   WSA+C4*R14(C4),CVTEXP1-CVTMAP(R3) FORCE DISP ENT @Y02753 37305203
*/* S SETLOCK: OBTAIN DISPATCHER LOCK*/                                 37306502
Q16      SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,RELATED=QK17B             37307802
*/* P INCREMENT STOP SRB COUNT IN ASCB */                               37308402
         L     R3,PSAAOLD          GET ADDRESS OF ASCB          @Y02753 37309102
         LH    R7,ASCBSSRB         GET STOP SRB CT                      37310402
         LA    R7,C1(,R7)               INCR CT                         37311702
         STH   R7,ASCBSSRB             SET NEW CT                       37312702
*/* P SET EXIT REG 9 TO EXIT*/                                          37314302
         LA    R9,EXIT                 SET EXIT REG                     37315602
*/* D (NO,RELDISPL,YES,) ARE ANY SRBS RUNNING*/                         37316202
         CH    R10,ASCBSRBS            TEST FOR ANY RUNNING SRBS        37316902
         BZ    RELDISPL                BR IF NONE TO CALLER RIGHT AWAY  37318202
*/* P SET BIT IN ASCB MAKING ALL TCBS NDISP*/                           37319202
         OI    ASCBFLG1,ASCBSTND       SET TCBS ND WHILE COUNTING DOWN  37320202
*/* P SET PSAANEW TO ZERO*/                                             37321402
Q17      ST    R10,PSAANEW             SET PSAANEW TO ZERO FOR DISP     37322402
*/*     R BR REG 9*/                                                    37322803
         BR R9                         RETURN                  @YA02383 37323203
*/*RELDISPL: S SETLOCK: RELEASE DISPATCHER LOCK */                      37323802
RELDISPL EQU   *                   LABEL                                37324802
QK17B    SETLOCK RELEASE,TYPE=DISP,RELATED=(Q16,SSRBTEST)               37325802
*/*%D4: R BR REG 9*/                                                    37326802
         BR    R9                      OUT                              37328802
         SPACE                                                          37328902
*/*STARTSRB: D (NO,SSRBTEST,YES,) ASID IS SPECIFIED*/                   37329902
STARTSRB SLA   R9,C2                   MULT ASID BY FOUR                37332002
         BZ    SSRBTEST                BR IF NONE SUPPLIED              37332802
*/* P GET ASCB ADDR USING ASID AND ASVT*/                               37333602
Q18      L     R3,CVTPTR               ADDR OF CVT                      37334602
         L     R3,CVTASVT-CVTMAP(,R3)      ADDR OF ASVT                 37335602
         L     R3,ASVTENTY-ASVT-C4(R3,R9) ASID IS INDEX TO ASCB ADDR    37336602
*/*SSRBTEST: S SETLOCK: OBTAIN DISPATCHER LOCK*/                        37337602
SSRBTEST SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,RELATED=(QK17B,STQP)      37339202
*/* P SET RETURN REG 9 TO EXIT*/                                        37340702
         LA    R9,EXIT                 SET RETURN ADDR                  37341002
*/* D (NO,DECRSSRB,YES,RELDISPL) STOP SRB COUNT IS ALREADY ZERO*/       37342802
         LH    R7,ASCBSSRB             GET STOP SRB CT                  37343202
         LTR   R7,R7               TEST IF ZERO ALREADY         @Y02753 37344602
         BNZ   DECRSSRB                BR IF NOT NOW ZERO               37346402
TESTLOCK B     RELDISPL                GO TO RELEASE DISP LOCK          37346802
*/*DECRSSRB: P DECREMENT STOP SRB COUNT*/                               37348202
DECRSSRB BCTR  R7,R0                   DECR CT IN REG                   37349102
         STH   R7,ASCBSSRB             SET CT IN ASCB                   37350002
*/* D (NO,RELDISPL,YES,) COUNT IS NOW ZERO*/                            37351002
         LTR   R7,R7                   NOW CT IS ZERO                   37352502
         BNZ   RELDISPL                NO, EXIT                         37353502
*/* P TURN OFF ASCBSTND ENSURING TCBS CAN RUN; RESET ASCBSNQS*/         37354502
         NI    ASCBFLG2,OFF-ASCBSNQS   RESET TO LET NQ SRBS RUN @Y02752 37355502
         NI    ASCBFLG1,OFF-ASCBSTND   ENSURE TCBS DISPATCHABLE         37356502
*/* S SETLOCK: RELEASE DISP LOCK*/                                      37357502
         BAL   R9,RELDISPL             RELEASE DISP LOCK AND COME BACK  37358502
*/* D (YES,EXIT,NO,) INVOKED BY SWAP-IN? */                    @YM08338 37358702
         L     R13,STFRRSAV        GET FRR PARM ADDR           @YM08338 37358802
         TM    STFRFLG,STFRSWIN    INVOKED BY SWAP-IN?         @YM08338 37358902
         BO    EXIT                SKIP MAKING TCBS DISP.      @YM08338 37359102
*/*SRBFRRT: D (YES,DOSLOCAL,NO,) THIS A REQUEST FOR CURRENT MEMORY*/    37359502
SRBFRRT  LH    R0,WSA              GET INPUT R0-ASID           @YM01997 37360502
         LTR   R0,R0               TEST FOR ZERO-CURRENT       @YM01997 37361502
         BZ    DOSLOCAL            BR IF A LOCAL REQUEST       @YM01997 37364002
         LA    R0,SRBSIZE+C4+C4+C4 SIZE OF SRB                 @YM01997 37364402
         LR    R7,R3               SAVE ASCB ADDR                       37372002
*/* S SETLOCK: OBTAIN SALLOC LOCK */                                    37372502
Q19      SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=Q11             37373002
*/* S GETMAIN: GET SRB TO FINISH START SRBS*/                           37374002
Q20      GETMAIN RU,LV=(0),SP=245,BRANCH=(YES,GLOBAL)                   37376702
*/* D (YES,NORLS,NO,) CALLER ALREADY HELD SALLOC LOCK*/                 37377302
         L     R13,STFRRSAV        GET FRR PARM ADDR            @Y02752 37378502
         TM    STFRFLG,STFRSALL    TEST FOR SALL LOCK ON ENTRY  @Y02752 37380502
         BNZ   NORLS                   BR IF CALLER ALREADY HELD IT     37382602
*/* S SETLOCK: RELEASE SALLOC LOCK*/                                    37383602
Q11      SETLOCK RELEASE,TYPE=SALLOC,RELATED=Q19                        37384602
*/*NORLS: P SET UP SRB FOR START SRBS*/                                 37385602
NORLS    LR    R3,R7                   RESET ASCB ADDR                  37388302
         USING SRB,R1                                                   37389902
         XC    SRB(SRBSIZE),SRB         CLEAR OUT FIELDS                37391902
         ST    R3,SRBASCB              TARGET ADDR SPACE                37393502
         LA    R7,SRBEPSRB             SRB ROUTINE ENTRY PT             37396002
         ST    R7,SRBEP                SET UP IN SRB                    37396302
         LA    R7,RMTRADDR         STATUS RMTR ADDR            @YM02662 37397802
         ST    R7,SRBRMTR              FOR RMTR ADDR                    37398802
Q46      L     R10,PSATOLD             GET CURRENT TCB ADDR             37399802
         LH    R9,ASCBASID             CURRENT ASID                     37400802
         LTR   R10,R10                 IN SRB MODE                      37401802
         BNZ   SRBSCHED                 BR IF IN TCB MODE               37407202
Q47      L     R10,PSALCCAV            GET POINTER TO LCCA              37408102
         LM    R9,R10,LCCASRBF-LCCA(R10) PICK UP ASSOCIATED TCB/ASID    37409102
SRBSCHED STM   R9,R10,SRBFLC           SET UP PARENT TCB/ASID IDS       37410102
*/* S (,EXIT) SCHEDULE: SCHEDULE SRB- EP=SRBEPSRB*/                     37413102
Q21      SCHEDULE SRB=(1),SCOPE=LOCAL                                   37414102
         DROP  R1                                                       37415102
         B     EXIT                      OUT                            37418202
*/*DOSLOCAL: S (,EXIT) SRBFRD0: SET TCBS DISPATCHABLE*/                 37419502
DOSLOCAL BAL   R7,SRBFRD0          LINK TO SET TCBSDISP        @YM01997 37419902
         B     EXIT                LEAVE                       @YM01997 37420302
         SPACE                                                          37420802
         USING *,R15                                                    37421402
*/*SRBEPSRB: E SRB ENTRY FOR START SRBS*/                               37422102
SRBEPSRB L     R6,AIGC079              LOAD COMMON BASE ADDR            37423402
         DROP  R15                                                      37427302
*/* S SETLOCK: OBTAIN LOCAL LOCK*/                                      37428602
Q25      L     R3,PSAAOLD              GET CURRENT ASCB ADDR            37431202
Q26      SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=Q27              37432502
*/* S SETFRR: SET FRR COVERAGE */                                       37433802
QZJ67    SETFRR A,FRRAD=ASTNFRR,PARMAD=(R13),WRKREGS=(R8,R2)            37435102
         OI    STFRFLG,REFRR       SET FLAG FOR RECOVERY RTN            37436402
         ST    R0,STFRSVSB         SET ADDRESS OF SRB FOR FRR           37437702
         LR    R1,R0               PUT ADDRESS IN REG 1 FOR FREEMAIN    37440302
*/*SRBFRTRY: S (,SRBFRD00) SRBFRD0: SET TCBS DISPATCHABLE*/             37441602
SRBFRTRY LA    R7,SRBFRD00         LINK ADDR                   @YM01997 37442902
*/*SRBFRD0: E SET TCBS DISPATCHABLE RTN*/                               37443502
*/* P GET TOP TCB IN ADDR. SPACE*/                                      37444202
SRBFRD0  L     R10,ASCBASXB        GET ADDR OF ASXB            @YM01997 37445002
         L     R10,ASXBFTCB-ASXB(,R10)  GET TOP TCB ADDR       @YM01997 37445902
*/*SRBEPRDY: S TCBRDYCT: APPLY -1 TO READY TCB COUNT*/                  37446302
SRBEPRDY L     R9,FOXES                DELTA OF -1                      37448102
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS UPDATER           37448902
*/* P TURN OFF STOP SRB BIT IN TCB*/                                    37452002
         NI    TCBNDSP3-TCB(R10),OFF-TCBSRBND  TURN OFF NON-DISP BIT    37453302
*/* D (NO,SRBEPTCB,YES,) ALL SECONDARY BITS ARE NOW OFF*/               37454602
         SR    R8,R8                   ZERO FOR COMP                    37455902
         C     R8,TCBNDSP-TCB(,R10)     SECONDARY BITS ALL 0            37457202
         BNE   SRBEPTCB                BR IF NOT                        37458502
*/* P TURN OFF PRIMARY SUMMARY BIT*/                                    37461102
         NI    TCBFLGS5-TCB(R10),OFF-TCBPNDSP  YES, RESET SUMMARY BIT   37462402
*/* S TCBRDYCT: APPLY +1 TO READY TCB COUNT*/                           37463702
         LA    R9,C1                   DELTA OF +1                      37465002
         BAL   R11,TCBRDYCT            GO TO ASCBTCBS UPDATER           37467602
*/*SRBEPTCB: P GET NEXT TCB ON A.S. READY Q*/                           37468902
SRBEPTCB L     R10,TCBTCB-TCB(,R10)     NEXT TCB ON RDY Q               37470202
*/* D (YES,SRBEPRDY,NO,) THERE IS ANOTHER TCB*/                         37472802
         LTR   R10,R10                 ARE THERE ANY MORE               37474102
         BNZ   SRBEPRDY                BR IF MORE                       37475402
         BR    R7                  RETURN                      @YM01997 37476702
SRBFRD00 EQU   *                   LABEL                       @YM01997 37477102
*/*SRBFRD00: S SETFRR: DELETE FRR COVERAGE */                   @Y02753 37477502
QJZ2     SETFRR D,WRKREGS=(R8,R2)                               @Y02753 37478002
*/* P (,EXFRITL) FREE SRB AND RELEASE LOCAL LOCK*/                      37479302
QJZRL    B     EXFRITL             BR TO FREE SRB AND LOCK     @YM02662 37488402
         TITLE 'IEAVSETS...AOS/2... BR ENTRY FOR STARTSRBS'             37497502
         ENTRY IGC07903                                         @Y02752 37498802
*/*IGC07903: E START SRBS BR ENTRY*/                            @Y02752 37500102
*/* P (,STARTSRB) SAVE CALLER REGS, SET UP ENVIRNM. REGS*/              37502702
*                                                                       37504002
*        THIS ROUTINE IS BRANCH ENTERED TO DO A START SRB FUNCTION      37505302
*        SEE PROLOGUE FOR ENTRY REQUIREMENTS                            37506602
*                                                                       37509202
         DROP  R6                                                       37510502
         USING IGC07903,R15                                             37511802
IGC07903 STM   R0,R14,C0(R13)      SAVE REGS                    @Y02752 37514402
         L     R6,AIGC079          GET BASE REG                 @Y02752 37515702
         DROP  R15                                              @Y02752 37517002
         USING IGC079,R6                                        @Y02752 37518302
         LR    R9,R0               SETASID REG                  @Y02752 37519602
         SRL   R9,C16              ADJUST FOR TEST              @Y02752 37520902
         L     R3,PSAAOLD          SET  CURRENT ASCB ADDR       @Y02752 37523502
         SR    R15,R15             CLEAR                        @Y02752 37524802
         ST    R15,R15*C4(,R13)    SET ZERO RET CODE            @Y02752 37526102
         LR    R5,R13              SET SAVE AREA ADDR REG       @Y02752 37527102
         USING WSA,R5                                           @Y02752 37528102
         MVI   SWITCHES,C0         CLEAR, ASSURE BR ENTRY EXIT  @Y02752 37529102
QJYF0    SETFRR A,FRRAD=ASTNFRR,PARMAD=(R13),WRKREGS=(R8,R2)    @Y02752 37532402
QJYF00   ST    R13,STFRRSAV        SAV PARM AREA ADDR           @Y02752 37534502
         OI    STFRFLG,STFRSALL+STBRSRB+STFRSWIN  SALLOC LOCK, BRANCH  X37536602
                                   ENTRY, INVOKED BY SWAP-IN   @YM08338 37537602
         B     STARTSRB            GO TO STARTSRB RTN           @Y02752 37538702
         TITLE 'IEAVSETS...AOS/2...SET CALLER TCB ND,SD'                37540802
*   THIS ROUTINE APPLIES THE GIVEN MASK OF NON-DISPATCHABILITY BITS TO  37542902
*   THE CALLING TCB AND THEN INTERFACES TO THE DISPATCHER.              37543902
         SPACE                                                          37545002
*/*CALLER: E CODE 15,16*/                                               37547102
CALLER   LR    R10,R4                  CURRENT TCB ADDRESS              37549202
*/* S BITSET: SET NDISP BITS ON*/                                       37550202
         BAL   R2,BITSET               GO TO BIT SETTING ROUTINE        37551302
*/*BREXIT: P DISABLE CURRENT PSW USING STNSM*/                          37553402
BREXIT   STNSM C0(R5),OFF-C2-C1        DISABLE TO ENTER DISP            37555502
*/* S SETFRR: PURGE EXISTING FRR STACK*/                                37557602
Q29      SETFRR P,WRKREGS=(R7,R8)      PURGE FRR STACK                  37558602
*/* S SETLOCK: RELEASE LOCAL LOCK*/                                     37559702
Q30      SETLOCK RELEASE,TYPE=LOCAL,RELATED='INPUT REQUIREMENT'         37561802
*/* R DISPATCHER IEA0DS*/                                               37563902
         L     R15,DISPTCHR            GET ENTRY POINT IEA0DS           37564902
         BR    R15                     GO TO DISPATCHER                 37566002
         EJECT                                                          37568102
*/*XMGO: S SETLOCK: OBTAIN SALLOC LOCK*/                                37570202
XMGO     SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=Q33             37571202
*/* S GETMAIN: GET SRB FOR XMSTATUS OPERATION*/                         37572302
         LR    R10,R15                 SAVE                             37574402
         LR    R11,R0                      PARM                         37576502
         ICM   R11,C2,SWITCHES         SAVE FLAGS FOR XMSTATUS          37577502
         LR    R12,R1                          REGS                     37578602
         LA    R0,SRBSIZE+C4+C4+C4     SIZE OF SRB                      37580702
         LR    R2,R3                   SAVE ASCB BASE REG               37582802
Q32      GETMAIN RU,LV=(0),SP=245,BRANCH=(YES,GLOBAL)                   37583802
         USING SRB,R1                                                   37584902
         LR    R3,R2                   RESET ASCB BASE                  37587002
         STM   R10,R12,SRBEND          SET UP PARMS                     37589102
*/* S SETLOCK: RELEASE SALLOC LOCK*/                                    37591102
Q33      SETLOCK RELEASE,TYPE=SALLOC,RELATED=XMGO                       37592002
*/*OWNEDSAL: P INIT FIELDS IN XMSTATUS SRB*/                            37592902
OWNEDSAL XC    SRB(SRBSIZE),SRB        ZERO MAIN PART OF SRB            37594902
         SLA   R9,C2                   MULTIPLY ASID BY FOUR            37597302
Q34      L     R10,CVTPTR              GET ADDR OF CVT                  37598402
         L     R10,CVTASVT-CVTMAP(,R10)    ADDR OF ASVT                 37600002
         L     R15,ASVTENTY-ASVT-C4(R9,R10)  ADDR OF DESIRED ASCB       37602002
         ST    R15,SRBASCB             SET TARGET ASCB ADDR IN SRB      37603002
         LA    R9,XMENTRY              XM STATUS ENTRY POINT            37605602
         LA    R10,RMTRADDR            RMTR ADDR                        37606302
         STM   R9,R10,SRBEP            SET IN SRB                       37607402
Q35      L     R10,PSATOLD             GET CURRENT TCB ADDR             37609202
         LH    R9,ASCBASID             CURRENT ASID                     37611002
         LTR   R10,R10                 IN SRB MODE                      37612802
         BZ    NOASTCB                 BR IF IN SRB MODE       @YM06167 37614602
*                                      TASK MODE                        37615502
Q36      CH    R9,ASCBASID-ASCB(,R15)  SCHEDULE TO CURRENT A.S.@YM06167 37616402
         BE    NOASTCB                 YES, OMIT ASSOCIATION   @YM06167 37617002
*   NOTE THAT THE SRB IS ONLY ASSOCIATED WITH THE ISSUING TCB/ASID FOR  37617302
*   A TASK MODE CROSS MEMORY FUNCTION TO OTHER THAN THE CURRENT A.S.    37617602
*   THIS AVOIDS HAVING A SCHEDULED SRB PURGED AT TASK TERMINATION (IF   37617802
*   IT HAD NOT YET BEEN DISPATCHED). ALSO NOTE, NOW SOME SRBS DO NOT    37618002
*   CONTAIN ISSUER INFORMATION SUCH THAT AN SRB FAILURE CAN BE RELATED  37618202
*   BACK TO THE ISSUING TASK.                                  @YM06167 37620902
         STM   R9,R10,SRBFLC           SET ASSOCIATION FIELDS  @YM06167 37621302
NOASTCB  LA    R9,SRBEND               PARM ADDR                        37621802
         ST    R9,SRBPARM              SET ADDR                         37623602
*/* S (,EXIT) SCHEDULE: XMSTATUS SRB- EP=XMENTRY*/                      37625402
Q37      SCHEDULE SRB=(1),SCOPE=LOCAL                                   37627202
         B     EXIT                    DONE                             37628102
         SPACE 3                                                        37629002
         USING *,R15                                                    37630802
*/*XMENTRY: E SRB ENTRY FOR XMSTATUS OTHER THAN START SRBS*/            37632602
*/* S SETLOCK: OBTAIN LOCAL LOCK*/                                      37633502
XMENTRY  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=Q41              37634402
*/* S SETFRR: SET FRR COVERAGE */                                       37636202
QXMJ     SETFRR A,FRRAD=ASTNFRR,PARMAD=(R13),WRKREGS=(R8,R3)            37638002
QXMRJ    DS    0H                  TEST LABEL                   @Y02752 37639802
         ST    R0,STFRSVSB         SAVE SRB ADDR IN FRR PARM    @Y02752 37640702
*/*XMRTRY: P (,NOTSTP) BOOTSTRAP REGS AND SWITCHES FOR XMSTATUS*/       37642602
XMRTRY   DS    0H                  TEST LABEL                   @Y02752 37643302
Q43      L     R3,PSAAOLD              CURRENT ASCB ADDR                37644102
         L     R5,ASCBASXB             ASXB ADDR                        37646102
         L     R5,ASXBSPSA-ASXB(,R5)    ADDR OF WSAVT                   37647102
         L     R5,WSALSTAT-WSAL(,R5)    ADDR OF STATUS LOCAL WSA        37649602
         ST    R13,STFRRSAV        SAVE PARM AREA ADDRESS      @YM03288 37650602
         ST    R0,WSA                  SAVE SRB ADDR IN WSA             37652202
         L     R6,AIGC079              ESTABLISH COMMON BASE            37654802
         DROP  R15                                                      37655802
         LR    R1,R0                   ADDR OF SRB                      37657402
         LM    R15,R1,SRBEND                                            37660002
         STCM  R0,C2,SWITCHES          SET UP SAME FLAGS HERE           37661002
         OI    SWITCHES,XMSTATUS       ALSO, TURN ON XMSTATUS BIT       37662002
         NI    SWITCHES,OFF-BRANCH     ORIG ENTRY IS IRRELEVANT NOW     37663002
         DROP  R1                                                       37664002
         SR    R4,R4                   CLEAR TCB POINTER                37665002
         LA    R2,OFF                  MASK                             37666002
         NR    R2,R0                   ISOLATE CODE IN R2               37667002
         B     NOTSTP                  BR TO MAINLINE                   37669202
         SPACE 2                                                        37669402
*/*RMTRADDR: E RMTR FOR XMSTATUS */                                     37672002
         USING RMTRADDR,R15                                             37672502
RMTRADDR LR    R8,R14              SAVE RETURN                 @YM02662 37674002
*/* N (,EXFREE) GO TO FREE SRB */                                       37675002
         L     R6,AIGC079          GET COMMON BASE             @YM02662 37677002
         DROP  R15                                                      37679002
         USING IGC079,R6                                                37680002
         B     EXFREE              GO TO FREE                  @YM02662 37680502
         TITLE 'IEAVSETS...AOS/2...IEATRSCN(TREESCAN)'                  37682002
*   THIS IS THE NOTORIOUS TREESCAN ROUTINE.  THE ROUTINE PASSES BACK IN 37684002
*   R10 A DESCENDENT OF THE TCB WHOSE ADDRESS WAS PASSED TO IT IN R10.  37685002
*   R8, R11 AND R14 MUST BE SETUP AS DESCRIBED IN THE PROLOG.           37686002
         SPACE                                                          37687002
         USING TCB,R9                                                   37688002
         USING TREESCAN,R7                                              37689002
*/*IEATRSCN: E TREESCAN - TCB FAMILY SEARCH RTN*/                       37690002
*/* P R9<--R10*/                                                        37691002
IEATRSCN BALR  R7,R0               .LOAD BASE REG                       37692002
TREESCAN LR    R9,R10              .INIT REG FOR SCAN                   37693002
*/* P R10<--LTC(R9)*/                                                   37694002
         L     R10,TCBLTC          .LOAD THE DOTTER                     37700001
*/*SCAN1: D (YES,%D5,NO,) R10=0*/                                       37710002
SCAN1    LTR   R10,R10             .IS THERE A DOTTER/SISTER            37750001
*/* R RETURN REG 14*/                                                   37760002
         BNZR   R14               .YES, RETURN W/DECENDENT IN R10       37800002
*/*%D5: P R10<--NTC(R9)*/                                               37820002
         L     R10,TCBNTC          .NO, LOAD THE SISTER                 37850002
*/* D (NO,GETOTC,YES,) R8=R9*/                                          37860002
         CR    R8,R9               .IS THIS THE TOP TCB                 37900001
*/* R RETURN REG 11*/                                                   37910002
         BER   R11                 .YES, THE TREE'S BEEN SCANNED        37950002
*/*GETOTC: P (,SCAN1) R9<--OTC(R9)*/                                    37960002
GETOTC   L     R9,TCBOTC           .NO, BACKUP ONE RELATIVE             38000001
         B     SCAN1               .GO CHECK HER                        38050001
         DROP  R7,R9                                                    38100001
         TITLE 'IEAVSETS...AOS/2...STOP NON-Q''BLE SRBS (BRANCH ENTRY)' 38110002
*   THIS ROUTINE IS BRANCH-ENTERED BY SWAP TO STOP NON-QUIESCEABLE SRBS 38120002
*   ENTRY-REQUIREMENTS ARE THAT REG 15 CONTAIN THE RETURN ADDRESS, AND  38122002
*   THAT REGS 11-14 MAY NOT BE PRESERVED.                               38126002
         SPACE 2                                                        38130002
*/* E IEAVNQSS*/                                                        38130402
*/* S SETLOCK: OBTAIN LOCAL LOCK*/                                      38130802
IEAVNQSS SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=Q45              38132002
         SPACE 2                                                        38134002
         ENTRY IEAVSSNQ                                                 38140002
*/* E IEAVSSNQ*/                                                        38144002
*/* P BOOTSTRAP TO SAVE AREA- SAVE REGS*/                               38144402
IEAVSSNQ L     R14,PSAAOLD             ASCB                             38144802
         L     R14,ASCBASXB-ASCB(,R14)  ASXB                            38145202
         L     R14,ASXBSPSA-ASXB(,R14)  WSA TBL                         38145502
         L     R14,WSALSTAT-WSAL(,R14)  STATUS WSA                      38145802
         STM   R0,R15,C0(R14)      SAVE REGS                            38146102
         LR    R2,R14              SAVE WSA ADDR                        38146402
*/* P ESTABLISH ADDRESSABILITY*/                                        38148602
         BALR  R6,R0                    BOOTSTRAP ADDRESSABILITY        38149202
         USING *,R6                                                     38149802
         L     R6,AIGC079          .LOAD NEW BASE REG                   38150402
         USING IGC079,R6                                                38151002
Q51      L     R3,PSAAOLD              ADDR OF ASCB                     38151602
*/* S SETLOCK: OBTAIN SALLOC LOCK*/                                     38152202
Q03      SETLOCK OBTAIN,TYPE=SALLOC,MODE=UNCOND,RELATED=(Q48,Q50)       38152802
*/* S SETLOCK: OBTAIN DISPATCHER LOCK*/                                 38153402
Q08      SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,RELATED=(Q49,OUT)         38154002
*/* P SET NONQ SRBS NDISP BIT IN ASCB*/                                 38154602
         OI    ASCBFLG2,ASCBSNQS SET NON-Q SRBS NDISP                   38155202
*/* D (YES,OUT,NO,) COUNT OF RUNNING SRBS IS ZERO*/                     38155802
         SR    R12,R12             CLEAR WORK REG                       38156402
         LH    R12,ASCBSRBS        GET COUNT OF RUNNING SRBS            38157002
         LTR   R12,R12             IS COUNT ZERO                        38157602
         BZ    OUT                 RETURN IF ZERO                       38158202
*/* P RESET NONQ SRBS NDISP BIT IN ASCB*/                               38158802
         NI    ASCBFLG2,OFF-ASCBSNQS OFF NON-Q SRB NDISP BIT            38159402
*/* P SET ALL TCBS IN A.S. NDISP*/                                      38160002
         OI    ASCBFLG1,ASCBSTND MAKE ALL TCBS IN A.S. NDISP            38199902
*/* P ESTABLISH RESUME ENVIRONMENT IN CURRENT TCB/RB*/                  38201902
Q31      L     R13,PSATOLD         GET ADDR OF CURRENT TCB              38209902
         L     R14,TCBRBP-TCB(,R13) GET ADDR OF CURRENT RB              38219902
         LA    R12,IEAVNQSS        REDISP ADDRESS                       38229902
         ST    R12,RBOPSW+C4-RBSECT(,R14) SET UP REDISP PSW ADDR        38239902
         MVC   TCBGRS-TCB(C64,R13),C0(R2) SAVE RESUME REGS              38240902
*/* S SETLOCK: RELEASE LOCAL LOCK*/                                     38242302
Q45      SETLOCK RELEASE,TYPE=LOCAL,RELATED=IEAVNQSS                    38243902
*/* S SETLOCK: RELEASE SALLOC LOCK*/                                    38244302
Q48      SETLOCK RELEASE,TYPE=SALLOC,RELATED=Q03                        38245902
*/* S SETLOCK: RELEASE DISPATCHER LOCK (DISABLED)*/                     38246302
Q49      SETLOCK RELEASE,DISABLED,TYPE=DISP,RELATED=Q08                 38247902
*/* R DISPATCHER*/                                                      38248002
         L     R15,DISPTCHR        GET ADDR OF DISP BR E                38248302
         BR    R15                 GO                                   38248702
*/*OUT: S SETLOCK: RELEASE DISPATCHER LOCK*/                            38248802
OUT      SETLOCK RELEASE,TYPE=DISP,RELATED=Q08                          38249102
*/* S SETLOCK: RELEASE SALLOC LOCK*/                                    38249202
Q50      SETLOCK RELEASE,TYPE=SALLOC,RELATED=Q03                        38249502
*                                                                       38249602
*        NOTE : SINCE TCBS ARE NON-DISPATCHABLE (VIA RCT QUIESCE),      38251602
*        THE NON-DISPATCHABILITY BIT, SET WHEN SRBS WERE STOPPED, IS    38254602
*        RESET NOW TO AVOID SCHEDULING AN SRB DURING SWAP-IN TO RESET   38255602
*        THE TASKS DISPATCHABLE                                @YM08338 38257602
*                                                                       38259802
*/* S SRBFRD0: SET TCBS DISPATCHABLE */                        @YM08338 38260802
         BAL   R7,SRBFRD0          SET TCBS DISPATCHABLE       @YM08338 38261802
*/* P RESTORE INPUT REGS*/                                              38262802
         L     R15,ASCBASXB        ASXB                                 38263802
         L     R15,ASXBSPSA-ASXB(,R15)  WSA TBL                         38264802
         L     R15,WSALSTAT-WSAL(,R15)  STATUS WSA                      38265802
         LM    R0,R15,C0(R15)      LOAD REGS                            38269802
*/* R BR R14*/                                                          38295202
         BR    R15                 RETURN                               38303202
*/*STATUS: END */                                                       38303602
         TITLE 'IEAVSETS...AOS/2...CONSTANTS'                           38303702
*        THESE CONSTANTS ARE ADDRESSABLE BY BOTH THE FRR RTN            38303802
*        AND THE MAIN LINE STATUS CODE.  THE TECHNIQUE USED             38303902
*        IS THAT THE FRR USES THE START OF THE CONSTANTS                38305102
*        AS THE BEGINING OF ADDRESSABILITY AND THE MAINLINE             38307102
*        USES THEN AT THE END OF ITS ADDRESSABILITY.                    38307502
*                                                                       38307902
*        THE FOLLOWING DUMMY CONSTANT MUST BE FIRST                     38308002
*                                                                       38308102
CONST    DS    0D                   DUMMY FOR FRR ADDRESSABILITY        38309002
*        THE FOLLOWING CONSTANTS ARE USED FOR INTRAMODULE               38311002
*        ADDRESSABILITY.                                                38311602
*                                                                       38312002
*                                                                       38314902
AIGC079  DC    A(IGC079)           .ADDR OF STATUS                      38315002
MEMSW    DC    V(IEAVEMS0)         .MEMORY SWITCH EP                    38315102
DISPTCHR DC    V(IEA0DS)           .DISPATCHER EP                       38315502
CRBPRFXL DC    A(RBPRFXLN)         CONSTANT TO ADJUST TO RB PRFX        38316702
ASTNFRR  DC    A(STNFRRE)          ADDRESS OF FRR               @Y02753 38316902
STREMS   DC    AL1(ENDMSGH-STRECPM)  SDUMP RECPM LIST           @Y02753 38317102
STRECPM  DC    CL8'IEAVSETS'       SETRP RECPARM LIST - MOD NM  @Y02753 38317502
         DC    CL8'IGC079'         PARMLIST - CSECT NAME        @Y02753 38317902
         DC    CL8'IGC079'         PARMLIST - FRR ID            @Y02753 38319602
MOREMSG  DC    C' ERROR IN STATUS' END OF SDUMP MSG                     38320202
ENDMSGH  EQU   *                   TAG FOR END OF MSG                   38320802
AIGCR244 DC    V(IGC044R2)         ADDR OF CHAP Q VERIFYER      @Y02753 38321602
SFLAGOFF DC    X'00001002'         DISP AND CMS LOCK STRING    @YA02710 38321703
SFLAGON  DC    X'00001402'         DISP, SALLOC,AND CMS LOCK   @YA02710 38321803
FOXES    DC    4X'FF'              .A WORD OF FOXES                     38322002
SMLHC    DC    X'0000FFFF'         .MASK TO LEAVE ONLY AC       @Y02753 38322102
MASK1    DC    AL1(255-(TCBS3A)),X'FFFFFF' TCBS3A MASK FOR CS  @ZA11584 38322240
MASK2    DC    AL1(TCBS3A),X'000000' SETTING TCBS3A MASK FOR CS@ZA11584 38322340
HIBIT    DC    X'80000000'         .SIGN BIT ONLY                       38322940
SMCCHEK  DC    F'0'                .MASK FOR SMC BIT                    38323040
         ORG   SMCCHEK+TCBFLGS5-TCBFLGS4                                38323140
         DC    AL1(TCBSTP)         .SMC BIT                             38323240
         ORG                                                            38323340
STOPCHEK DC    F'0'                .MASK FOR STOP BIT                   38323640
         ORG   STOPCHEK+TCBNDSP2-TCBNDSP                                38323702
         DC    AL1(TCBSTPP)        .STOP BIT                            38324102
         ORG                                                            38324502
QUIRKS   EQU   *-1                 .CHARACTERISTICS TABLE               38324802
         DC    AL1(NOTND+NOXM)         1                                38325202
         DC    AL1(0)                  2                                38325602
         DC    AL1(ND+XMRESET+ACPMSK+ACSFT)   3                         38325702
         DC    AL1(ND+NOXM+ACSFT)      4                                38326002
         DC    AL1(ND+XMSET+XMRESET+ACPTCB+ACPMSK+ACSFT)  5             38326402
         DC    AL1(NOTND+NOXM+ACPTCB)  6                                38326502
         DC    AL1(NOTND+NOXM+ACPTCB)  7                                38326602
         DC    AL1(NOTND+XMRESET+ACPMSK+ACSFT)   8                      38326702
         DC    AL1(NOTND+NOXM+ACSFT)   9                                38327102
         DC    AL1(NOTND+XMSET+XMRESET+ACPTCB+ACPMSK+ACSFT)  10         38328102
         DC    AL1(NOTND+XMSET+XMRESET+ACPTCB+ACPMSK+ACSFT)  11         38330102
         DC    AL1(ND+XMSET+XMRESET+ACPTCB+ACPMSK+ACSFT) 12             38330502
         DC    AL1(NOTND+XMRESET)      13                               38330902
         DC    AL1(NOTND+NOXM)         14                               38331302
         DC    AL1(NOTND+NOXM+ACPMSK+ACSFT) 15                          38331702
         DC    AL1(ND+NOXM+ACPMSK+ACSFT)  16                            38331802
         SPACE 2                                                        38331902
NOXM     EQU   X'00'                   XM NOT ALLOWED                   38332002
XMSET    EQU   X'02'                   XM ALLOWED FOR SET               38332302
XMRESET  EQU   X'01'                   XM ALLOWED FOR RESET ONLY        38332702
NOTND    EQU   X'40'                   NOT PRIMARY N-DISP PROCESS       38333102
ND       EQU   X'00'                   PRIMARY N-DISP PROCESS           38333202
ACPTCB   EQU   X'20'               FLAG TO SAY TCB ADDR IS PASSED       38333302
ACPMSK   EQU   X'10'               FLAG TO SAY MASK IS PASSED           38333702
ACSFT    EQU   X'08'               FLAG TO SAY RETRY IF FROM TOP        38334002
BRATAB   DC    AL2(ABEND14F-IGC079)  .RESERVED SHOULD NEVER BRANCH HERE 38334602
         DC    AL2(MCSTEP-IGC079)   1 .MUST COMPLETE STEP               38334902
         DC    AL2(ABEND14F-IGC079) 2 .MUST COMPLETE SYSTEM             38335302
         DC    AL2(NDSTEP-IGC079)   3 .NON-DISPATCHABLE STEP            38335702
         DC    AL2(NDSYSTEM-IGC079) 4 .NON-DISPATCHABLE SYSTEM          38335802
         DC    AL2(NDTCB-IGC079)    5 .NON-DISPATCHABL TCB ADDR-ALL SUB 38335902
         DC    AL2(PROCEED-IGC079)  6 .STOP                             38336102
         DC    AL2(PROCEED-IGC079)  7 .START                            38336502
         DC    AL2(SDSTEP-IGC079)   8 .2NDARY DISPATCHABILITY STEP      38336902
         DC    AL2(SDSYSTEM-IGC079) 9 .2NDARY DISPATCHABILITY SYSTEM    38337002
         DC    AL2(SDTCB-IGC079)   10 .2NDARY DISPATCH TCB ADDR-ALL SUB 38337102
         DC    AL2(SDETCB-IGC079)  11 .2NDARY DISPATCH TCB ADDR- 1TASK  38337202
         DC    AL2(NDETCB-IGC079)  12 .NON-DISP TCB ADDR - 1 TASK       38337602
         DC    AL2(SRBS-IGC079)    13 .SYSTEM LEVEL SRBS                38338002
         DC    AL2(SYNCH-IGC079)   14 .STOP SUBTASKS SYNCH              38338302
         DC    AL2(CALLER-IGC079)  15 .SET CALLER SD                    38338702
         DC    AL2(CALLER-IGC079)  16 .SET CALLER ND                    38339102
*/*STFRR: CHART */                                                      38340440
         TITLE 'IEAVSETS...AOS/2...FUNCTIONAL RECOVERY RTNS'            38340540
*/*STNFRRE: E  STATUS  FRR ENTRY */                                     38340640
**********************************************************************  38340740
*        THIS ENTRY FROM RTM IS USED BY ALL STATUS SVC AND SVC       *  38340840
*        FUNCTIONAL BRANCH ENTRIES. THE GENERAL PATH THROUGH         *  38340940
*        THE RECOVERY ROUTINE IS AS FOLLOWS: (NOTE, ACTIONS OF       *  38341002
*        P= PERCOLATE, PD - PERCOLATE AFTER DUMP                        38341302
*                                                                    *  38341602
*        1. MEMEMORY TABLES OK - SDWAFMID=0 - (P)                    *  38342202
*        2. VERIFY ASCB & TCBS - CHAP ENTRY   (P)                    *  38342602
*        3. TEST FOR PECOLATED TO (P)                                *  38344002
*        4. RECORD USING DEFAULTS                                    *  38347002
*        5. ISSUE SDUMP IF ERROR OCCURED IN STATUS (PD)              *  38347502
*                                                                    *  38349002
**********************************************************************  38350002
         DROP  R3                                                       38352002
         USING ASCB,STASCB                                              38354002
         USING SDWA,STSDWAR1                                            38359602
STNFRRE  DS    0H                  TESTING LABEL                        38369602
         BALR  STBASE,C0           ESTAB ADDRESSABILITY                 38369702
         USING *,STBASE                                                 38369802
         L     STBASE,ACONST       GET CONSTANT ADDR FOR BASE           38369902
         USING CONST,STBASE        USE IT FOR ADDRESSABILITY            38371402
*/* P SAVE RETURN REG */                                                38373502
         LR    RETSV,R14           SAVE RETURN REG                      38373902
*/* P GET ADDRESS OF FRR WORK AREA */                                   38374302
         L     STPADP,SDWAPARM     GET WORK AREA ADDRESS                38374702
         L     STWRK1,PSAHLHI      GET LOCKS HELD STRING       @YA02710 38374903
*/* D (YES,STYSALL,NO,) SALLOC LOCK HELD ON ENTRY */                    38375102
         TM    STFRFLG,STFRSALL    TEST IF SALLOC FLAG SET              38375502
         BO    STYSALL             BR IF DONT WANT RELEASED ON FRR ERR  38375902
*/* P (,CKFID) MODIFY SDWA TO REL CMS, DISP, SALLOC WHEN HELD*/         38376303
QSTN0    N     STWRK1,SFLAGON      MODIFY STRING TO REFLECT LOCKS TO   *38376503
                                     BE FREED                  @YA02710 38376703
         B     STOREIT             BR TO SAVE STRING IN SDWA   @YA02710 38377103
*/*STYSALL: P MODIFY SDWA TO RELEASE CMS AND DISP WHEN HELD*/           38377203
STYSALL  N     STWRK1,SFLAGOFF     MODIFY STRING TO REFLECT LOCKS TO   *38377303
                                     BE FREED                  @YA02710 38378003
STOREIT  STH   STWRK1,SDWAACF3-SDWA(STSDWAR1) PUT IN SDWA      @YA02710 38378703
*/*CKFID: D (NO,STPERC,YES,) SDWAFID EQ 0 (TRAN TABLES OK)  */          38379602
CKFID    SR    STWRK1,STWRK1       CLEAR                                38380602
         CH    STWRK1,SDWAFMID      TEST IF RIGHT ASCB TABLES           38382002
         BNE   STPERC              BR NOT TO PERCOLATE                  38383502
*/* D (YES,STPERC,NO,) WAS STATUS PECOLATED TO */                       38385002
         TM    SDWAERRC,SDWAPERC   TEST FOR PECOLATED TO                38386502
         BO    STPERC              PERCOLATE IF SO                      38388002
         OI    SDWADPVA,SDWAHEX    VRA TO CONTAIN HEX DATA              38388702
*                                                                       38389502
*        STATUS RECOVERY DOES NOT COPE WITH UNRECOVERABLE ERRORS        38391002
*        IN ROUTINES CALLED BY STATUS (GETMAIN, SETLOCK, ETC.)          38392502
*                                                                       38394002
         USING STFRRPAR,STPADP                                          38413102
*/* S IGC044R2:  CHAP RECOVERY TO VER. ASCB AND TCB FAM.Q*/             38423302
*                                                                       38425402
*        BRANCH TO CHAP TO VERIFY ASCB AND TCB FAMILY QUEUES            38427502
*        SEE PROLOG FOR INTERFACE                                       38429602
*                                                                       38431702
         LA    R2,STREMS           ADDR OF PARM LIST FOR CHAP           38432702
TQ0      L     STEPR,AIGCR244      GET ADDR OF CHAP ROUTINE             38433802
LKTCH    BALR  STRETR,STEPR        LINK TO CHAP ROUTINE                 38435902
         BALR  STBASE,R0           REGAIN ADDRESSABLITY                 38445302
         USING *,STBASE                                                 38446402
         L     STBASE,ACONST       GET ADDR OF NORM BASE                38456402
         USING CONST,STBASE                                             38466402
*/*STPERC: S SETRP: CONTINUE WITH TERM(PERCOLATE)*/                     39287902
STPERC   SETRP RC=0,RECPARM=STRECPM                                     39289002
*/* R RETURN TO RTM*/                                                   39289502
         BR    RETSV               RETURN TO RTM                        39290102
         SPACE 2                                                        39291202
*        THE FOLLOWING CONSTANT MUST STAY AT FRR END TO ALLOW           39294502
*        ADDRESSABILITY OF THE COMMON CONSTANTS.                        39295602
ACONST   DC    A(CONST)            ADDRESS OF CONSTANTS FOR BASE        39296702
*                                                                       39297802
*/*STFRR: END */                                                        39298902
         EJECT                                                          39300002
         ENTRY IGC07902                                                 39900001
         ENTRY IEATRSCN                                                 39950001
         END                                                            40000001
