TFHX     TITLE 'IEAVTFHX HEX DUMP RTN FOR IEAVTFSD                     *00001000
                        '                                               00002000
IEAVTFHX CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL2(@EP00001-@MAINENT)                                   00007000
         DC    AL1(22)                                             0001 00008000
         DC    C'IEAVTFHX UZ14566 77287'                           0001 00009000
IEAVTT3C DS    0H                                                  0001 00010000
         USING *,@15                                               0001 00011000
         B     @PROLOG                                             0001 00012000
         DC    AL2(@EP00195-IEAVTT3C)                                   00013000
         ENTRY IEAVTT3C                                                 00014000
         DROP  @15                                                      00015000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00016000
         BALR  @12,0                                               0001 00017000
@PSTART  DS    0H                                                  0001 00018000
         USING @PSTART,@12                                         0001 00019000
         L     @00,@SIZDATD                                        0001 00020000
         GETMAIN  R,LV=(0)                                              00021000
         LR    @11,@01                                             0001 00022000
         USING @DATD,@11                                           0001 00023000
         ST    @13,@SA00001+4                                      0001 00024000
         LM    @15,@01,16(@13)                                     0001 00025000
         ST    @11,8(,@13)                                         0001 00026000
         LR    @13,@11                                             0001 00027000
         AH    @15,4(,@15)                                         0001 00028000
         BR    @15                                                 0001 00029000
@EP00001 MVC   @PC00001(12),0(@01)                                 0001 00030000
*                                                                  0037 00031000
*   /*****************************************************************/ 00032000
*   /*                                                               */ 00033000
*   /* INIT                                                          */ 00034000
*   /*                                                               */ 00035000
*   /*****************************************************************/ 00036000
*                                                                  0037 00037000
*   COMPRESS=OFF;                                                  0037 00038000
         NI    COMPRESS,B'01111111'                                0037 00039000
*   LASTLINE='';                                                   0038 00040000
         MVI   LASTLINE,C' '                                       0038 00041000
         MVC   LASTLINE+1(119),LASTLINE                            0038 00042000
*   MIAINDEX=1;                     /* START AT THE FIRST ENTRY OF 0039 00043000
*                                      THE TABLE OF DATA MISSING IN     00044000
*                                      ACTION                        */ 00045000
         LA    MIAINDEX,1                                          0039 00046000
*   MIAPTR=ADDR(SMDLRDAT)+SMDLRLEN; /* LOCATE THE MIATABLE           */ 00047000
         L     @15,@PC00001+4                                      0040 00048000
         L     @15,SMDLRPTR(,@15)                                  0040 00049000
         LA    @14,SMDLRDAT(,@15)                                  0040 00050000
         L     @15,SMDLRLEN(,@15)                                  0040 00051000
         LR    MIAPTR,@14                                          0040 00052000
         ALR   MIAPTR,@15                                          0040 00053000
*   DATAPTR=ADDR(SMDLRDAT);         /* INIT DATA TO BE FMT PTR       */ 00054000
         LR    DATAPTR,@14                                         0041 00055000
*   LENLEFT=SMDLRLEN;               /* KEEP TRACK OF THE LENGTH OF 0042 00056000
*                                      DATA LEFT TO BE FORMATED      */ 00057000
         LR    LENLEFT,@15                                         0042 00058000
*   CONDCODE=GOODCODE;              /* INIT RETURN CODE              */ 00059000
*                                                                  0043 00060000
         SLR   @08,@08                                             0043 00061000
         ST    @08,CONDCODE                                        0043 00062000
*   /*****************************************************************/ 00063000
*   /*                                                               */ 00064000
*   /* LOOP PRINTING EITHER DATA OR A MSG SAYING THAT THE DATA IS    */ 00065000
*   /* MISSING                                                       */ 00066000
*   /*                                                               */ 00067000
*   /*****************************************************************/ 00068000
*                                                                  0044 00069000
*   DO WHILE LENLEFT>0;             /* LOOP AS LONG AS THERE IS DATA    00070000
*                                      LEFT TO BE PRINTED            */ 00071000
         B     @DE00044                                            0044 00072000
@DL00044 DS    0H                                                  0045 00073000
*     IF MIALAST(MIAINDEX)=OFF      /* CHECK FOR THE LAST ENTRY IN 0045 00074000
*                                      THE TABLE                     */ 00075000
*       THEN                        /* IF IT IS NOT THE LAST ENTRY   */ 00076000
         LR    @08,MIAINDEX                                        0045 00077000
         SLA   @08,3                                               0045 00078000
         ST    @08,@TF00001                                        0045 00079000
         ALR   @08,MIAPTR                                          0045 00080000
         AL    @08,@CF00393                                        0045 00081000
         TM    MIALAST(@08),B'10000000'                            0045 00082000
         BNZ   @RF00045                                            0045 00083000
*       IF MIABEGIN(MIAINDEX)=DATAPTR-ADDR(SMDLRDAT)/* CHECK TO SEE     00084000
*                                      IF THE NEXT DATA TO BE FMT IS    00085000
*                                      MISSING                       */ 00086000
*         THEN                      /* YES IT IS MISSING             */ 00087000
         L     @08,@TF00001                                        0046 00088000
         AL    @08,@CF00393                                        0046 00089000
         L     @08,MIABEGIN(@08,MIAPTR)                            0046 00090000
         L     @15,@PC00001+4                                      0046 00091000
         L     @01,SMDLRPTR(,@15)                                  0046 00092000
         LA    @15,SMDLRDAT(,@01)                                  0046 00093000
         LCR   @15,@15                                             0046 00094000
         ALR   @15,DATAPTR                                         0046 00095000
         CR    @08,@15                                             0046 00096000
         BNE   @RF00046                                            0046 00097000
*         DO;                                                      0047 00098000
*           FROMLABL=MIABEGIN(MIAINDEX)+BEGLABEL;/* CALC ADDRESSES 0048 00099000
*                                      FROM OFFSETS FOR THE MISSING     00100000
*                                      DATA                          */ 00101000
         L     @15,@PC00001+8                                      0048 00102000
         L     @15,BEGLABEL(,@15)                                  0048 00103000
         ALR   @08,@15                                             0048 00104000
         ST    @08,FROMLABL                                        0048 00105000
*           TOLABL=MIAEND(MIAINDEX)+BEGLABEL;                      0049 00106000
         L     @08,@TF00001                                        0049 00107000
         AL    @08,@CF00394                                        0049 00108000
         AL    @15,MIAEND-4(@08,MIAPTR)                            0049 00109000
         ST    @15,TOLABL                                          0049 00110000
*           ADPLFMT2=ADDR(MIALABEL);/* PASS THE ADDRESSES OF THE   0050 00111000
*                                      MISSING TO THE FORMAT SERVICE    00112000
*                                      FOR INCLUSION INTO THE MSG    */ 00113000
         L     @08,@PC00001                                        0050 00114000
         L     @08,ABDPLPTR(,@08)                                  0050 00115000
         LA    @15,MIALABEL                                        0050 00116000
         ST    @15,ADPLFMT2(,@08)                                  0050 00117000
*           RFY                                                    0051 00118000
*            (R0,                                                  0051 00119000
*             R1) RSTD;                                            0051 00120000
*           R1=ADDR(ABDPL);         /* POINT TO AMDPRDMP PARM LIST   */ 00121000
         LR    R1,@08                                              0052 00122000
*           CALL LINEPRNT;          /* PRINT BLANK LINE              */ 00123000
         L     @15,ADPLPRNT(,@08)                                  0053 00124000
         BALR  @14,@15                                             0053 00125000
*           R0=ADDR(MIAFP);         /* POINT TO THE FORMAT PATTERN 0054 00126000
*                                      FOR THE MISSING DATA LINE     */ 00127000
         L     R0,@CA00335                                         0054 00128000
         LR    @08,R0                                              0054 00129000
         LR    R0,@08                                              0054 00130000
*           CALL FMTSERV;           /* CALL FORMAT SERVICE           */ 00131000
         L     @08,@PC00001                                        0055 00132000
         L     @08,ABDPLPTR(,@08)                                  0055 00133000
         L     @15,ADPLFRMT(,@08)                                  0055 00134000
         BALR  @14,@15                                             0055 00135000
*           CALL LINEPRNT;          /* PRINT THE FORMATTED LINE      */ 00136000
         L     @08,@PC00001                                        0056 00137000
         L     @08,ABDPLPTR(,@08)                                  0056 00138000
         L     @15,ADPLPRNT(,@08)                                  0056 00139000
         BALR  @14,@15                                             0056 00140000
*           CALL LINEPRNT;          /* BLANK LINE                    */ 00141000
         L     @08,@PC00001                                        0057 00142000
         L     @08,ABDPLPTR(,@08)                                  0057 00143000
         L     @15,ADPLPRNT(,@08)                                  0057 00144000
         BALR  @14,@15                                             0057 00145000
*           RFY                                                    0058 00146000
*            (R0,                                                  0058 00147000
*             R1) UNRSTD;                                          0058 00148000
*           DATAPTR=DATAPTR+(MIAEND(MIAINDEX)-MIABEGIN(MIAINDEX)+1);    00149000
         LA    @08,1                                               0059 00150000
         LR    @04,MIAINDEX                                        0059 00151000
         SLA   @04,3                                               0059 00152000
         LR    @01,MIAPTR                                          0059 00153000
         AL    @01,@CF00394                                        0059 00154000
         L     @15,MIAEND-4(@04,@01)                               0059 00155000
         AL    @04,@CF00393                                        0059 00156000
         SL    @15,MIABEGIN(@04,MIAPTR)                            0059 00157000
         ALR   @15,@08                                             0059 00158000
         ALR   DATAPTR,@15                                         0059 00159000
*                                   /* MOVE THE PTR TO THE NEX DATA     00160000
*                                      TO BE FMT PAST THE MISSING  0060 00161000
*                                      DATA WHICH HAS BEEN REPLACED     00162000
*                                      WITH PADDING                  */ 00163000
*           LENLEFT=LENLEFT-(MIAEND(MIAINDEX)-MIABEGIN(MIAINDEX)+1);    00164000
         SLR   LENLEFT,@15                                         0060 00165000
*                                   /* DECREMENT THE LENGTH LEFT TO     00166000
*                                      FMT                           */ 00167000
*           MIAINDEX=MIAINDEX+1;    /* NOW THAT THIS ENTRY HAS BEEN     00168000
*                                      USED MOVE TO THE NEXT ONE     */ 00169000
         ALR   MIAINDEX,@08                                        0061 00170000
*           REMAINS=0;              /* INDICATE NOTHING REMAINS TO BE   00171000
*                                      FORMATTED OF THIS PART        */ 00172000
         SLR   REMAINS,REMAINS                                     0062 00173000
*         END;                                                     0063 00174000
*       ELSE                        /* THIS IS NOT THE BEGINNING OF A   00175000
*                                      MISSING PART OF THE DATA      */ 00176000
*         DO;                                                      0064 00177000
         B     @RC00046                                            0064 00178000
@RF00046 DS    0H                                                  0065 00179000
*           REMAINS=(MIABEGIN(MIAINDEX)+ADDR(SMDLRDAT))-DATAPTR;/* 0065 00180000
*                                      CALC THE AMOUNT TO BE PRINTED    00181000
*                                      UP TO THE NEXT PIECE OF     0065 00182000
*                                      MISSING DATA                  */ 00183000
         LR    @08,MIAINDEX                                        0065 00184000
         SLA   @08,3                                               0065 00185000
         L     @15,@PC00001+4                                      0065 00186000
         L     REMAINS,SMDLRPTR(,@15)                              0065 00187000
         LA    REMAINS,SMDLRDAT(,REMAINS)                          0065 00188000
         AL    @08,@CF00393                                        0065 00189000
         AL    REMAINS,MIABEGIN(@08,MIAPTR)                        0065 00190000
         SLR   REMAINS,DATAPTR                                     0065 00191000
*           LENLEFT=LENLEFT-REMAINS;/* REDUCE THE AMOUNT LEFT BY THE    00192000
*                                      AMOUNT ABOUT TO BE DONE       */ 00193000
         SLR   LENLEFT,REMAINS                                     0066 00194000
*         END;                                                     0067 00195000
*     ELSE                          /* IF THE LAST MIA ENTRY HAS BEEN   00196000
*                                      REACHED                       */ 00197000
*       DO;                                                        0068 00198000
         B     @RC00045                                            0068 00199000
@RF00045 DS    0H                                                  0069 00200000
*         REMAINS=LENLEFT;          /* THEN PRINT ALL THE DATA LEFT  */ 00201000
         LR    REMAINS,LENLEFT                                     0069 00202000
*         LENLEFT=0;                /* INDICATE NO DATA LEFT UNFMT   */ 00203000
         SLR   LENLEFT,LENLEFT                                     0070 00204000
*       END;                                                       0071 00205000
*                                                                  0072 00206000
*     /***************************************************************/ 00207000
*     /*                                                             */ 00208000
*     /* PRINT OUT THE AMOUNT OF DATA INDICATED BY REMAINS BEGINNING */ 00209000
*     /* AT DATAPTR                                                  */ 00210000
*     /*                                                             */ 00211000
*     /***************************************************************/ 00212000
*                                                                  0072 00213000
*     BYTEONE=BEGLABEL+DATAPTR-ADDR(SMDLRDAT);/* CALC THE          0072 00214000
*                                      OFFSET/ADDRESS OF THE FIRST 0072 00215000
*                                      BYTE OF THIS PART TO BE     0072 00216000
*                                      FORMATTED                     */ 00217000
@RC00045 L     @08,@PC00001+8                                      0072 00218000
         LR    @04,DATAPTR                                         0072 00219000
         AL    @04,BEGLABEL(,@08)                                  0072 00220000
         L     @08,@PC00001+4                                      0072 00221000
         L     @08,SMDLRPTR(,@08)                                  0072 00222000
         LA    @08,SMDLRDAT(,@08)                                  0072 00223000
         SLR   @04,@08                                             0072 00224000
         ST    @04,BYTEONE                                         0072 00225000
*     CURRLABL=BYTEONE&ROUNDED;     /* CALC THE INITIAL LABEL BY   0073 00226000
*                                      ROUNDING DOWN TO A MULTIPLE OF   00227000
*                                      '20'X                         */ 00228000
         N     @04,@CF00319                                        0073 00229000
         ST    @04,CURRLABL                                        0073 00230000
*     DO WHILE REMAINS>0;           /* PRINT OUT ALL THE DATA LINE BY   00231000
*                                      LINE                          */ 00232000
*                                                                  0074 00233000
         B     @DE00074                                            0074 00234000
@DL00074 DS    0H                                                  0075 00235000
*       /*************************************************************/ 00236000
*       /*                                                           */ 00237000
*       /* BUILD PARTIAL BEGINNING OR ENDING LINE IF NECESSARY       */ 00238000
*       /*                                                           */ 00239000
*       /*************************************************************/ 00240000
*                                                                  0075 00241000
*       IF CURRLABL<BYTEONE         /* CHECK THIS LINE FOR NOT     0075 00242000
*                                      BEGINNING AT THE LEFT MARGIN  */ 00243000
*           |REMAINS<BOL            /* OR FOR NOT ENDING AT THE RIGHT   00244000
*                                      MARGIN                        */ 00245000
*         THEN                      /* IF THE EITHER OF THESE      0075 00246000
*                                      CONDITIONS EXIST A PARTIAL  0075 00247000
*                                      LINE WILL HAVE TO BE PRINTED  */ 00248000
         CLC   CURRLABL(4),BYTEONE                                 0075 00249000
         BL    @RT00075                                            0075 00250000
         CH    REMAINS,@CH00137                                    0075 00251000
         BNL   @RF00075                                            0075 00252000
@RT00075 DS    0H                                                  0076 00253000
*         DO;                                                      0076 00254000
*                                                                  0076 00255000
*/* BUILD A DYNAMIC FORMAT PATTERN FOR THE AMDPRDMP FORMAT SERVICE   */ 00256000
*                                                                  0077 00257000
*           FP=''B;                                                0077 00258000
         XC    FP(8),FP                                            0077 00259000
*           ADPLFMT2=ADDR(CURRLABL);/* POINT TO THE LABEL ADDRESS  0078 00260000
*                                      VALUE AS THE LABEL DATA       */ 00261000
         L     @08,@PC00001                                        0078 00262000
         L     @08,ABDPLPTR(,@08)                                  0078 00263000
         LA    @04,CURRLABL                                        0078 00264000
         ST    @04,ADPLFMT2(,@08)                                  0078 00265000
*           FPDATIUS=ON;            /* INDICATE DATA TO BE FORMATTED    00266000
*                                      IS NOT IN THE DUMP            */ 00267000
*           FPDATBUF=ON;            /* INDICATE DATA TO BE PROCESSED */ 00268000
         OI    FPDATIUS,B'00010100'                                0080 00269000
*           FPLEN=LENGTH(CURRLABL)-1;/* GIVE THE DATA LENGTH         */ 00270000
         MVI   FPLEN,X'03'                                         0081 00271000
*           FPDATOFF=0;             /* GIVE THE OFFSET IN THE BUFFER    00272000
*                                      WHERE THE DATA IS TO BE PUT   */ 00273000
         MVI   FPDATOFF,X'00'                                      0082 00274000
*           RFY                                                    0083 00275000
*            (R1,                                                  0083 00276000
*             R0,                                                  0083 00277000
*             RETCODE) RSTD;        /* AMDPRDMP FMT SERV PARMS       */ 00278000
*           R1=ADDR(ABDPL);         /* RESTORE AMDPRDMP PARMLIST PTR */ 00279000
         LR    R1,@08                                              0084 00280000
*           R0=ADDR(FP);            /* FORMAT PATTERN PTR            */ 00281000
         LA    R0,FP                                               0085 00282000
*           CALL FMTSERV;           /* AMDPRDMP FORMAT SERVICE       */ 00283000
         L     @15,ADPLFRMT(,@08)                                  0086 00284000
         BALR  @14,@15                                             0086 00285000
*           IF RETCODE^=0           /* CHECK FOR AN AMDPRDMP SERVICE    00286000
*                                      ERROR                         */ 00287000
*             THEN                  /* IF THERE WAS AN ERROR         */ 00288000
         LTR   RETCODE,RETCODE                                     0087 00289000
         BZ    @RF00087                                            0087 00290000
*             DO;                                                  0088 00291000
*               CONDCODE=FMTERR;    /* CHANGE THE RETURN CODE        */ 00292000
         MVC   CONDCODE(4),@CF00065                                0089 00293000
*               GO TO EXITCODE;     /* RETURN                        */ 00294000
         B     EXITCODE                                            0090 00295000
*             END;                                                 0091 00296000
*           RFY                                                    0092 00297000
*            (R1,                                                  0092 00298000
*             R0,                                                  0092 00299000
*             RETCODE) UNRSTD;      /* FORMAT THE LINE LABEL         */ 00300000
@RF00087 DS    0H                                                  0093 00301000
*                                                                  0093 00302000
*           /*********************************************************/ 00303000
*           /*                                                       */ 00304000
*           /* ADD THE DATA CONVERTED TO PRINTABLE HEX TO THE PARTIAL*/ 00305000
*           /* LINE                                                  */ 00306000
*           /*                                                       */ 00307000
*           /*********************************************************/ 00308000
*                                                                  0093 00309000
*           ADPLFMT2=ADDR(NEXTDATA);/* POINT TO THE NEXT DATA TO BE     00310000
*                                      FORMATTED                     */ 00311000
         L     @08,@PC00001                                        0093 00312000
         L     @08,ABDPLPTR(,@08)                                  0093 00313000
         ST    DATAPTR,ADPLFMT2(,@08)                              0093 00314000
*           IF CURRLABL<BYTEONE     /* CHECK TO SEE IF THIS IS THE 0094 00315000
*                                      FIRST LINE OF THIS PART       */ 00316000
*             THEN                  /* IF IT IS THEN IT MIGHT NOT BE    00317000
*                                      STARTING AT THE LEFT MARGIN   */ 00318000
         L     @08,CURRLABL                                        0094 00319000
         L     @04,BYTEONE                                         0094 00320000
         CR    @08,@04                                             0094 00321000
         BNL   @RF00094                                            0094 00322000
*             FIRST=BYTEONE-CURRLABL;/* CALCULATE THE DISPLACEMENT TO   00323000
*                                      THE FIRST BYTE FROM THE LEFT     00324000
*                                      MARGIN ADDRESS (MULTIPLE OF 0095 00325000
*                                      '20'X)                        */ 00326000
         L     @15,CURRLABL                                        0095 00327000
         SLR   @04,@15                                             0095 00328000
         LR    FIRST,@04                                           0095 00329000
*           ELSE                    /* IF THIS IS NOT THE FIRST LINE */ 00330000
*             FIRST=0;              /* START THE LINE AT THE LEFT  0096 00331000
*                                      MARGIN                        */ 00332000
         B     @RC00094                                            0096 00333000
@RF00094 SLR   FIRST,FIRST                                         0096 00334000
*           IF FIRST+REMAINS>=BOL   /* COMPARE THE REMAINING DATA  0097 00335000
*                                      WITH THE CAPACITY OF THIS LINE*/ 00336000
*             THEN                  /* IF THE REMAINS ARE GREATER  0097 00337000
*                                      THAN OR EQUAL                 */ 00338000
@RC00094 LA    @04,32                                              0097 00339000
         LR    @15,FIRST                                           0097 00340000
         ALR   @15,REMAINS                                         0097 00341000
         CR    @15,@04                                             0097 00342000
         BL    @RF00097                                            0097 00343000
*             LAST=BOL;             /* FORMAT TO CAPACITY            */ 00344000
         ST    @04,LAST                                            0098 00345000
*           ELSE                    /* IF THE CAPACITY IS GREATER    */ 00346000
*             LAST=FIRST+REMAINS;   /* FORMAT ALL THE DATA           */ 00347000
         B     @RC00097                                            0099 00348000
@RF00097 LR    @04,FIRST                                           0099 00349000
         ALR   @04,REMAINS                                         0099 00350000
         ST    @04,LAST                                            0099 00351000
*           GRPNUM=(FIRST/4)+1;     /* CALCULATE WHICH GROUP THE   0100 00352000
*                                      BEGINNING OF THE FORMATTED  0100 00353000
*                                      DATA WILL FALL INTO ON THE  0100 00354000
*                                      PRINTED LINE                  */ 00355000
@RC00097 LR    @04,FIRST                                           0100 00356000
         SRL   @04,2                                               0100 00357000
         AH    @04,@CH00057                                        0100 00358000
         ST    @04,GRPNUM                                          0100 00359000
*           BYTEPOS=FIRST//4;       /* ALSO CALCULATE THE BYTE     0101 00360000
*                                      POSITION WITHIN THE GROUP   0101 00361000
*                                      WHERE THE DATA BEGINNING WILL    00362000
*                                      FALL                          */ 00363000
         LR    @00,FIRST                                           0101 00364000
         SRDA  @00,32                                              0101 00365000
         D     @00,@CF00065                                        0101 00366000
         ST    @00,BYTEPOS                                         0101 00367000
*                                                                  0102 00368000
*           /*********************************************************/ 00369000
*           /*                                                       */ 00370000
*           /* FORMAT 4 BYTE GROUPS TO THE END OF THE LINE           */ 00371000
*           /*                                                       */ 00372000
*           /*********************************************************/ 00373000
*                                                                  0102 00374000
*           DO GRPNUM BY 1 WHILE(GRPNUM<=8&REMAINS>0);/* LOOP      0102 00375000
*                                      FORMATTING DATA INTO EACH   0102 00376000
*                                      GROUP UNTIL THE END OF THE  0102 00377000
*                                      LINE OR THE END OF THE DATA   */ 00378000
         B     @DE00102                                            0102 00379000
@DL00102 DS    0H                                                  0103 00380000
*             IF REMAINS>=4-BYTEPOS /* CHECK THE AMOUNT OF DATA THAT    00381000
*                                      REMAINS AGAINST THE CAPACITY     00382000
*                                      OF THE GROUP ABOUT TO BE    0103 00383000
*                                      FORMATTED                     */ 00384000
*               THEN                /* IF THERE IS MORE DATA THAN  0103 00385000
*                                      WILL FIT IN THIS GROUP        */ 00386000
         L     @04,BYTEPOS                                         0103 00387000
         LA    @15,4                                               0103 00388000
         SLR   @15,@04                                             0103 00389000
         CR    REMAINS,@15                                         0103 00390000
         BL    @RF00103                                            0103 00391000
*               FPLEN=3-BYTEPOS;    /* FORMAT THE MAXIMUM            */ 00392000
         LCR   @04,@04                                             0104 00393000
         AH    @04,@CH00063                                        0104 00394000
         STC   @04,FPLEN                                           0104 00395000
*             ELSE                  /* IF THE AMOUNT OF DATA IS LESS */ 00396000
*               FPLEN=REMAINS-1;    /* FORMAT WHAT DATA IS LEFT      */ 00397000
         B     @RC00103                                            0105 00398000
@RF00103 LR    @04,REMAINS                                         0105 00399000
         BCTR  @04,0                                               0105 00400000
         STC   @04,FPLEN                                           0105 00401000
*             FPDATOFF=GRPOFF(GRPNUM)+(BYTEPOS*2);/* CALCULATE THE 0106 00402000
*                                      OFFSET ON THE PRINTED LINE    */ 00403000
@RC00103 L     @04,GRPNUM                                          0106 00404000
         SLA   @04,2                                               0106 00405000
         L     @15,BYTEPOS                                         0106 00406000
         ALR   @15,@15                                             0106 00407000
         AL    @15,GRPOFF-4(@04)                                   0106 00408000
         STC   @15,FPDATOFF                                        0106 00409000
*             RFY                                                  0107 00410000
*              (R1,                                                0107 00411000
*               R0,                                                0107 00412000
*               RETCODE) RSTD;      /* AMDPRDMP FMT SERV PARMS       */ 00413000
*             R1=ADDR(ABDPL);       /* RESTORE AMDPRDMP PARMLIST PTR */ 00414000
         L     @14,@PC00001                                        0108 00415000
         L     @14,ABDPLPTR(,@14)                                  0108 00416000
         LR    R1,@14                                              0108 00417000
*             R0=ADDR(FP);          /* FORMAT PATTERN PTR            */ 00418000
         LA    R0,FP                                               0109 00419000
*             CALL FMTSERV;         /* AMDPRDMP FORMAT SERVICE       */ 00420000
         L     @15,ADPLFRMT(,@14)                                  0110 00421000
         BALR  @14,@15                                             0110 00422000
*             IF RETCODE^=0         /* CHECK FOR AN AMDPRDMP SERVICE    00423000
*                                      ERROR                         */ 00424000
*               THEN                /* IF THERE WAS AN ERROR         */ 00425000
         LTR   RETCODE,RETCODE                                     0111 00426000
         BZ    @RF00111                                            0111 00427000
*               DO;                                                0112 00428000
*                 CONDCODE=FMTERR;  /* CHANGE THE RETURN CODE        */ 00429000
         MVC   CONDCODE(4),@CF00065                                0113 00430000
*                 GO TO EXITCODE;   /* RETURN                        */ 00431000
         B     EXITCODE                                            0114 00432000
*               END;                                               0115 00433000
*             RFY                                                  0116 00434000
*              (R1,                                                0116 00435000
*               R0,                                                0116 00436000
*               RETCODE) UNRSTD;                                   0116 00437000
@RF00111 DS    0H                                                  0117 00438000
*             BYTEPOS=0;            /* ONCE THE FIRST GROUP IS     0117 00439000
*                                      FORMATTED ALL THE REST WILL 0117 00440000
*                                      BEGIN AT THE LEFT POSITION OF    00441000
*                                      THE GROUP                     */ 00442000
         SLR   @04,@04                                             0117 00443000
         ST    @04,BYTEPOS                                         0117 00444000
*             REMAINS=REMAINS-(FPLEN+1);/* DECREMENT THE COUNT OF  0118 00445000
*                                      REMAINING DATA TO BE FORMATTED*/ 00446000
         LA    @04,1                                               0118 00447000
         SLR   @15,@15                                             0118 00448000
         IC    @15,FPLEN                                           0118 00449000
         ALR   @04,@15                                             0118 00450000
         SLR   REMAINS,@04                                         0118 00451000
*           END;                                                   0119 00452000
         LA    @04,1                                               0119 00453000
         AL    @04,GRPNUM                                          0119 00454000
         ST    @04,GRPNUM                                          0119 00455000
@DE00102 L     @04,GRPNUM                                          0119 00456000
         CH    @04,@CH00050                                        0119 00457000
         BH    @DC00102                                            0119 00458000
         LTR   REMAINS,REMAINS                                     0119 00459000
         BP    @DL00102                                            0119 00460000
@DC00102 DS    0H                                                  0120 00461000
*           BORDERL=ASTERISK;       /* PUT IN THE UNFORMATTED SECTION*/ 00462000
         L     @04,@PC00001                                        0120 00463000
         L     @04,ABDPLPTR(,@04)                                  0120 00464000
         L     @15,ADPLBUF(,@04)                                   0120 00465000
         MVC   BORDERL(1,@15),ASTERISK                             0120 00466000
*           BORDERR=ASTERISK;       /* BORDERS                       */ 00467000
         MVC   BORDERR(1,@15),ASTERISK                             0121 00468000
*           UNFMTSEC(FIRST+1:LAST)=NEXTDATA(1:LAST-FIRST);/* MOVE THE   00469000
*                                      PARTIAL LINE DATA INTO THE  0122 00470000
*                                      UNFORMATTED PART OF THE LINE  */ 00471000
         LR    @14,@15                                             0122 00472000
         ALR   @14,FIRST                                           0122 00473000
         L     @03,LAST                                            0122 00474000
         SLR   @03,FIRST                                           0122 00475000
         BCTR  @03,0                                               0122 00476000
         EX    @03,@SM00395                                        0122 00477000
*           TR(UNFMTSEC,TRTABLE);   /* CHANGE ALL THE UNPRINTABLE  0123 00478000
*                                      EBCDIC CODES INTO PERIODS     */ 00479000
         L     @14,@CA00326                                        0123 00480000
         TR    UNFMTSEC(32,@15),TRTABLE-TRTABLE(@14)               0123 00481000
*                                                                  0124 00482000
*           /*********************************************************/ 00483000
*           /*                                                       */ 00484000
*           /* PRINT THE PARTIAL LINE JUST FORMATTED                 */ 00485000
*           /*                                                       */ 00486000
*           /*********************************************************/ 00487000
*                                                                  0124 00488000
*           RFY                                                    0124 00489000
*             R1 RSTD;                                             0124 00490000
*           R1=ADDR(ABDPL);         /* RESTORE AMDPRDMP PARMLIST PTR */ 00491000
         LR    R1,@04                                              0125 00492000
*           CALL LINEPRNT;          /* PRINT THE OUTPUT BUFFER       */ 00493000
         L     @15,ADPLPRNT(,@04)                                  0126 00494000
         BALR  @14,@15                                             0126 00495000
*           RFY                                                    0127 00496000
*             R1 UNRSTD;                                           0127 00497000
*           CURRLABL=CURRLABL+BOL;  /* CALC NEXT OFFSET LABEL        */ 00498000
         LA    @04,32                                              0128 00499000
         AL    @04,CURRLABL                                        0128 00500000
         ST    @04,CURRLABL                                        0128 00501000
*           DATAPTR=DATAPTR+LAST-FIRST;/* INCREMENT THE ADDRESS OF 0129 00502000
*                                      THE NEXT DATA TO BE FORMATTED    00503000
*                                      BY THE AMOUNT JUST DONE       */ 00504000
         LR    @04,DATAPTR                                         0129 00505000
         AL    @04,LAST                                            0129 00506000
         SLR   @04,FIRST                                           0129 00507000
         LR    DATAPTR,@04                                         0129 00508000
*         END;                      /* OF INDENTED LINE              */ 00509000
*                                                                  0131 00510000
*       /*************************************************************/ 00511000
*       /*                                                           */ 00512000
*       /* FORMAT AND PRINT OUT ALL THE FULL LINES                   */ 00513000
*       /*                                                           */ 00514000
*       /*************************************************************/ 00515000
*                                                                  0131 00516000
*       LINEFP=STANLINE;            /* COPY THE STANDARD LINE FORMAT    00517000
*                                      PATTERN INTO DYNAMIC STORAGE  */ 00518000
@RF00075 MVC   LINEFP(60),STANLINE                                 0131 00519000
*       LFP1=ADDR(CURRLABL);        /* FILL IN THE ADDR OF THE LABEL    00520000
*                                      VALUE                         */ 00521000
         LA    @08,CURRLABL                                        0132 00522000
         ST    @08,LFP1                                            0132 00523000
*       DO WHILE(REMAINS>=BOL);     /* PRINT WHOLE LINES UNTIL THE 0133 00524000
*                                      DATA LEFT IS LESS THAN A WHOLE   00525000
*                                      LINE                          */ 00526000
         B     @DE00133                                            0133 00527000
@DL00133 DS    0H                                                  0134 00528000
*         LFP2=ADDR(NEXTDATA);      /* FILL IN THE ADDR OF THE DATA  */ 00529000
         ST    DATAPTR,LFP2                                        0134 00530000
*         LFP3=ADDR(NEXTDATA);                                     0135 00531000
         ST    DATAPTR,LFP3                                        0135 00532000
*         RFY                                                      0136 00533000
*          (R1,                                                    0136 00534000
*           R0,                                                    0136 00535000
*           RETCODE) RSTD;          /* AMDPRDMP FMT SERV PARMS       */ 00536000
*         R1=ADDR(ABDPL);           /* RESTORE AMDPRDMP PARMLIST PTR */ 00537000
         L     @14,@PC00001                                        0137 00538000
         L     @14,ABDPLPTR(,@14)                                  0137 00539000
         LR    R1,@14                                              0137 00540000
*         R0=ADDR(LINEFP);          /* FORMAT PATTERN PTR            */ 00541000
         LA    R0,LINEFP                                           0138 00542000
*         CALL FMTSERV;             /* AMDPRDMP FORMAT SERVICE       */ 00543000
         L     @15,ADPLFRMT(,@14)                                  0139 00544000
         BALR  @14,@15                                             0139 00545000
*         IF RETCODE^=0             /* CHECK FOR AN AMDPRDMP SERVICE    00546000
*                                      ERROR                         */ 00547000
*           THEN                    /* IF THERE WAS AN ERROR         */ 00548000
         LTR   RETCODE,RETCODE                                     0140 00549000
         BZ    @RF00140                                            0140 00550000
*           DO;                                                    0141 00551000
*             CONDCODE=FMTERR;      /* CHANGE THE RETURN CODE        */ 00552000
         MVC   CONDCODE(4),@CF00065                                0142 00553000
*             GO TO EXITCODE;       /* RETURN                        */ 00554000
         B     EXITCODE                                            0143 00555000
*           END;                                                   0144 00556000
*         RFY                                                      0145 00557000
*          (R1,                                                    0145 00558000
*           R0,                                                    0145 00559000
*           RETCODE) UNRSTD;                                       0145 00560000
@RF00140 DS    0H                                                  0146 00561000
*         TR(UNFMTSEC,TRTABLE);     /* CHANGE ALL THE UNPRINTABLE  0146 00562000
*                                      EBCDIC CODES INTO PERIODS     */ 00563000
         L     @08,@PC00001                                        0146 00564000
         L     @08,ABDPLPTR(,@08)                                  0146 00565000
         L     @08,ADPLBUF(,@08)                                   0146 00566000
         L     @04,@CA00326                                        0146 00567000
         TR    UNFMTSEC(32,@08),TRTABLE-TRTABLE(@04)               0146 00568000
*         CURRLABL=CURRLABL+BOL;    /* CALC NEXT OFFSET LABEL        */ 00569000
         LA    @04,32                                              0147 00570000
         L     @15,CURRLABL                                        0147 00571000
         ALR   @15,@04                                             0147 00572000
         ST    @15,CURRLABL                                        0147 00573000
*         DATAPTR=DATAPTR+BOL;      /* INCREMENT THE ADDRESS OF THE     00574000
*                                      NEXT DATA TO BE FORMATTED BY     00575000
*                                      THE AMOUNT JUST DONE          */ 00576000
         ALR   DATAPTR,@04                                         0148 00577000
*         REMAINS=REMAINS-BOL;      /* CALC HOW MUCH DATA REMAINS TO    00578000
*                                      BE FORMATTED                  */ 00579000
*                                                                  0149 00580000
         SLR   REMAINS,@04                                         0149 00581000
*         /***********************************************************/ 00582000
*         /*                                                         */ 00583000
*         /* THIS CODE SUPRESSES DUPLICATE LINES                     */ 00584000
*         /*                                                         */ 00585000
*         /***********************************************************/ 00586000
*                                                                  0150 00587000
*         IF THISDATA=LASTDATA&REMAINS>=BOL THEN                   0150 00588000
         CLC   THISDATA(112,@08),LASTDATA                          0150 00589000
         BNE   @RF00150                                            0150 00590000
         CR    REMAINS,@04                                         0150 00591000
         BL    @RF00150                                            0150 00592000
*           IF COMPRESS=OFF THEN                                   0151 00593000
         TM    COMPRESS,B'10000000'                                0151 00594000
         BNZ   @RF00151                                            0151 00595000
*             DO;                                                  0152 00596000
*               COMPRESS=ON;                                       0153 00597000
         OI    COMPRESS,B'10000000'                                0153 00598000
*               CMADDR1=THISLBL;                                   0154 00599000
         MVC   CMADDR1(8),THISLBL(@08)                             0154 00600000
*             END;                                                 0155 00601000
*           ELSE                                                   0156 00602000
*             ;                                                    0156 00603000
@RF00151 DS    0H                                                  0157 00604000
*         ELSE                                                     0157 00605000
*           DO;                                                    0157 00606000
         B     @RC00150                                            0157 00607000
@RF00150 DS    0H                                                  0158 00608000
*             LASTLINE=THISLINE;                                   0158 00609000
         L     @08,@PC00001                                        0158 00610000
         L     @08,ABDPLPTR(,@08)                                  0158 00611000
         L     @04,ADPLBUF(,@08)                                   0158 00612000
         MVC   LASTLINE(120),THISLINE(@04)                         0158 00613000
*             IF COMPRESS=ON THEN                                  0159 00614000
         TM    COMPRESS,B'10000000'                                0159 00615000
         BNO   @RF00159                                            0159 00616000
*               DO;                                                0160 00617000
*                 COMPRESS=OFF;                                    0161 00618000
         NI    COMPRESS,B'01111111'                                0161 00619000
*                 THISLINE=CMPRSMSG;                               0162 00620000
         MVC   THISLINE(120,@04),CMPRSMSG                          0162 00621000
*                 CMADDR2=LASTLBL;                                 0163 00622000
         MVC   CMADDR2(8,@04),LASTLBL                              0163 00623000
*                 CMADDR3=CMADDR1;                                 0164 00624000
         MVC   CMADDR3(8,@04),CMADDR1                              0164 00625000
*                 RFY                                              0165 00626000
*                   R1 RSTD;                                       0165 00627000
*                 R1=ADDR(ABDPL);   /* RESTORE AMDPRDMP PARMLIST PTR */ 00628000
         LR    R1,@08                                              0166 00629000
*                 CALL LINEPRNT;    /* PRINT THE OUTPUT BUFFER       */ 00630000
         L     @15,ADPLPRNT(,@08)                                  0167 00631000
         BALR  @14,@15                                             0167 00632000
*                 RFY                                              0168 00633000
*                   R1 UNRSTD;                                     0168 00634000
*                 THISLINE=LASTLINE;                               0169 00635000
         L     @08,@PC00001                                        0169 00636000
         L     @08,ABDPLPTR(,@08)                                  0169 00637000
         L     @08,ADPLBUF(,@08)                                   0169 00638000
         MVC   THISLINE(120,@08),LASTLINE                          0169 00639000
*               END;                                               0170 00640000
*             RFY                                                  0171 00641000
*               R1 RSTD;                                           0171 00642000
@RF00159 DS    0H                                                  0172 00643000
*             R1=ADDR(ABDPL);       /* RESTORE AMDPRDMP PARMLIST PTR */ 00644000
         L     @08,@PC00001                                        0172 00645000
         L     @08,ABDPLPTR(,@08)                                  0172 00646000
         LR    R1,@08                                              0172 00647000
*             CALL LINEPRNT;        /* PRINT THE OUTPUT BUFFER       */ 00648000
         L     @15,ADPLPRNT(,@08)                                  0173 00649000
         BALR  @14,@15                                             0173 00650000
*             RFY                                                  0174 00651000
*               R1 UNRSTD;                                         0174 00652000
*           END;                                                   0175 00653000
*       END;                        /* OF PRINT EACH FULL LINE       */ 00654000
@RC00150 DS    0H                                                  0176 00655000
@DE00133 CH    REMAINS,@CH00137                                    0176 00656000
         BNL   @DL00133                                            0176 00657000
*     END;                          /* OF PRINT EACH LINE            */ 00658000
@DE00074 LTR   REMAINS,REMAINS                                     0177 00659000
         BP    @DL00074                                            0177 00660000
*   END;                            /* OF DO WHILE LENLEFT>0         */ 00661000
@DE00044 LTR   LENLEFT,LENLEFT                                     0178 00662000
         BP    @DL00044                                            0178 00663000
*                                                                  0179 00664000
*   /*****************************************************************/ 00665000
*   /*                                                               */ 00666000
*   /* COMMON EXIT CODE IF AT ANY TIME A TERMINATING CONDITION SHOULD*/ 00667000
*   /* ARRISE THE CONDITION CODE IS SET AND THE CODE BRANCHES HERE   */ 00668000
*   /*                                                               */ 00669000
*   /*****************************************************************/ 00670000
*                                                                  0179 00671000
*EXITCODE:                                                         0179 00672000
*   IF CONDCODE^=GOODCODE           /* CHECK FOR AN ERROR            */ 00673000
*     THEN                          /* IF AN ERROR OCCURRED          */ 00674000
EXITCODE ICM   @10,15,CONDCODE                                     0179 00675000
         BZ    @RF00179                                            0179 00676000
*     DO;                           /* PRINT OUT AN ERROR MSG        */ 00677000
*       DO INDEX=1 TO 2;            /* BLANK LINES                   */ 00678000
         LA    INDEX,1                                             0181 00679000
@DL00181 DS    0H                                                  0182 00680000
*         RFY                                                      0182 00681000
*           R1 RSTD;                                               0182 00682000
*         R1=ADDR(ABDPL);           /* RESTORE AMDPRDMP PARMLIST PTR */ 00683000
         L     @10,@PC00001                                        0183 00684000
         L     @10,ABDPLPTR(,@10)                                  0183 00685000
         LR    R1,@10                                              0183 00686000
*         CALL LINEPRNT;            /* PRINT THE OUTPUT BUFFER       */ 00687000
         L     @15,ADPLPRNT(,@10)                                  0184 00688000
         BALR  @14,@15                                             0184 00689000
*         RFY                                                      0185 00690000
*           R1 UNRSTD;                                             0185 00691000
*       END;                                                       0186 00692000
         AH    INDEX,@CH00057                                      0186 00693000
         CH    INDEX,@CH00059                                      0186 00694000
         BNH   @DL00181                                            0186 00695000
*       MSGPTR=FHXMSG(CONDCODE/4);  /* LOCATE THE PROPER MSG         */ 00696000
         L     @00,CONDCODE                                        0187 00697000
         SRDA  @00,32                                              0187 00698000
         D     @00,@CF00065                                        0187 00699000
         SLA   @01,2                                               0187 00700000
         L     @10,@CA00309                                        0187 00701000
         AL    @10,@CF00394                                        0187 00702000
         L     MSGPTR,FHXMSG-FHXMSG(@01,@10)                       0187 00703000
*       OUTBUF(1:MSGLEN)=MSGTXT(1:MSGLEN);/* COPY THE TEXT           */ 00704000
         L     @10,@PC00001                                        0188 00705000
         L     @10,ABDPLPTR(,@10)                                  0188 00706000
         L     @03,ADPLBUF(,@10)                                   0188 00707000
         SLR   @15,@15                                             0188 00708000
         IC    @15,MSGLEN(,MSGPTR)                                 0188 00709000
         BCTR  @15,0                                               0188 00710000
         EX    @15,@SM00398                                        0188 00711000
*       RFY                                                        0189 00712000
*         R1 RSTD;                                                 0189 00713000
*       R1=ADDR(ABDPL);             /* RESTORE AMDPRDMP PARMLIST PTR */ 00714000
         LR    R1,@10                                              0190 00715000
*       CALL LINEPRNT;              /* PRINT THE OUTPUT BUFFER       */ 00716000
         L     @15,ADPLPRNT(,@10)                                  0191 00717000
         BALR  @14,@15                                             0191 00718000
*       RFY                                                        0192 00719000
*         R1 UNRSTD;                                               0192 00720000
*     END;                          /* OF ERROR MSG                  */ 00721000
*   RETURN CODE(CONDCODE);                                         0194 00722000
@RF00179 L     @10,CONDCODE                                        0194 00723000
         L     @13,4(,@13)                                         0194 00724000
         L     @00,@SIZDATD                                        0194 00725000
         LR    @01,@11                                             0194 00726000
         FREEMAIN R,LV=(0),A=(1)                                        00727000
         LR    @15,@10                                             0194 00728000
         L     @14,12(,@13)                                        0194 00729000
         LM    @00,@12,20(@13)                                     0194 00730000
         BR    @14                                                 0194 00731000
*                                                                  0195 00732000
*   /*****************************************************************/ 00733000
*   /*                                                               */ 00734000
*   /* THIS ENTRY POINT IS THE DEFAULT FORMAT ROUTINE FOR THE SUMMARY*/ 00735000
*   /* DUMP RECORD WHICH CONTAINS AS DATA THE ASID JOBNAME PROCSTEP  */ 00736000
*   /* NAME AND STEPNAME FOR THE RECORDS THAT FOLLOW. ID=3C OR       */ 00737000
*   /* SMDASIDR                                                      */ 00738000
*   /*                                                               */ 00739000
*   /*****************************************************************/ 00740000
*                                                                  0195 00741000
*IEAVTT3C:                                                         0195 00742000
*   ENTRY(ABDPLPTR,SMDLRPTR,BEGLABEL);                             0195 00743000
@EP00195 MVC   @PC00001(12),0(@01)                                 0195 00744000
*   DCL                                                            0196 00745000
*     1 T3CREC DEFINED(SMDLRDAT),   /* MAPPING OF THE DATA PORTION OF   00746000
*                                      THE RECORD FORMATTED BY THIS     00747000
*                                      RTN                           */ 00748000
*      2 T3CASID CHAR(2),                                          0196 00749000
*      2 T3CJOBN CHAR(8),                                          0196 00750000
*      2 T3CPSN CHAR(8),                                           0196 00751000
*      2 T3CSN CHAR(8);                                            0196 00752000
*   DCL                                                            0197 00753000
*    (T3CFP1,                                                      0197 00754000
*     T3CFP2,                                                      0197 00755000
*     T3CFP3,                                                      0197 00756000
*     T3CFP4) CHAR(*) GEND STATIC;  /* THESE ARE THE FORMAT PATTERNS    00757000
*                                      USED TO FORMAT THE DATA IN THE   00758000
*                                      RECORD                        */ 00759000
*   GEN DATA DEFS(T3CFP1,T3CFP2,T3CFP3,T3CFP4);                    0198 00760000
*   RFY                                                            0199 00761000
*    (R0,                                                          0199 00762000
*     R1) RSTD;                                                    0199 00763000
*   R1=ADDR(ABDPL);                                                0200 00764000
         L     @10,@PC00001                                        0200 00765000
         L     R1,ABDPLPTR(,@10)                                   0200 00766000
*   DO INDEX=1 TO 60;               /* PRINT ENOUGH BLANK LINES TO 0201 00767000
*                                      PUT THIS HEADER AT THE TOP OF    00768000
*                                      THE NEXT PAGE                 */ 00769000
         LA    INDEX,1                                             0201 00770000
@DL00201 DS    0H                                                  0202 00771000
*     CALL LINEPRNT;                                               0202 00772000
         L     @10,@PC00001                                        0202 00773000
         L     @10,ABDPLPTR(,@10)                                  0202 00774000
         L     @15,ADPLPRNT(,@10)                                  0202 00775000
         BALR  @14,@15                                             0202 00776000
*   END;                                                           0203 00777000
         AH    INDEX,@CH00057                                      0203 00778000
         CH    INDEX,@CH00171                                      0203 00779000
         BNH   @DL00201                                            0203 00780000
*   R0=ADDR(T3CFP1);                /* FORMAT PATTERN FOR FIRST PART    00781000
*                                      OF DATA                       */ 00782000
         LA    R0,T3CFP1                                           0204 00783000
*   ADPLFMT2=ADDR(SMDLRDAT);        /* DATA TO BE FORMATTED          */ 00784000
         L     @10,@PC00001                                        0205 00785000
         L     @10,ABDPLPTR(,@10)                                  0205 00786000
         L     @15,@PC00001+4                                      0205 00787000
         L     @15,SMDLRPTR(,@15)                                  0205 00788000
         LA    @15,SMDLRDAT(,@15)                                  0205 00789000
         ST    @15,ADPLFMT2(,@10)                                  0205 00790000
*   CALL FMTSERV;                                                  0206 00791000
         L     @15,ADPLFRMT(,@10)                                  0206 00792000
         BALR  @14,@15                                             0206 00793000
*   IF SMDLRLEN>4                   /* CHECK FOR THE LONG FORM OF  0207 00794000
*                                      THIS RECORD                   */ 00795000
*     THEN                                                         0207 00796000
         L     @10,@PC00001+4                                      0207 00797000
         L     @10,SMDLRPTR(,@10)                                  0207 00798000
         L     @10,SMDLRLEN(,@10)                                  0207 00799000
         CH    @10,@CH00065                                        0207 00800000
         BNH   @RF00207                                            0207 00801000
*     DO;                                                          0208 00802000
*       R0=ADDR(T3CFP2);                                           0209 00803000
         LA    R0,T3CFP2                                           0209 00804000
*       R1=ADDR(ABDPL);                                            0210 00805000
         L     @10,@PC00001                                        0210 00806000
         L     @10,ABDPLPTR(,@10)                                  0210 00807000
         LR    R1,@10                                              0210 00808000
*       CALL FMTSERV;                                              0211 00809000
         L     @15,ADPLFRMT(,@10)                                  0211 00810000
         BALR  @14,@15                                             0211 00811000
*       IF T3CSN='        '         /* IS THE STEPNAME FIELD IS BLANK*/ 00812000
*         THEN                      /* YES, SO THE PROC/STEPNAME   0212 00813000
*                                      FIELD IS ONLY A STEPNAME AND     00814000
*                                      THE PROC/STEPNAME LABEL SHOULD   00815000
*                                      BE SKIPPED                    */ 00816000
         L     @10,@PC00001+4                                      0212 00817000
         L     @10,SMDLRPTR(,@10)                                  0212 00818000
         CLC   T3CSN(8,@10),@CC00390                               0212 00819000
         BNE   @RF00212                                            0212 00820000
*         R0=ADDR(T3CFP4);                                         0213 00821000
         LA    R0,T3CFP4                                           0213 00822000
*       ELSE                        /* THE STEPNAME FIELD HAS A VALUE   00823000
*                                      SO FORMAT THE WHOLE RECORD    */ 00824000
*         R0=ADDR(T3CFP3);                                         0214 00825000
         B     @RC00212                                            0214 00826000
@RF00212 LA    R0,T3CFP3                                           0214 00827000
*       R1=ADDR(ABDPL);                                            0215 00828000
@RC00212 L     @10,@PC00001                                        0215 00829000
         L     @10,ABDPLPTR(,@10)                                  0215 00830000
         LR    R1,@10                                              0215 00831000
*       CALL FMTSERV;                                              0216 00832000
         L     @15,ADPLFRMT(,@10)                                  0216 00833000
         BALR  @14,@15                                             0216 00834000
*     END;                                                         0217 00835000
*   CALL LINEPRNT;                                                 0218 00836000
@RF00207 L     @10,@PC00001                                        0218 00837000
         L     @10,ABDPLPTR(,@10)                                  0218 00838000
         L     @15,ADPLPRNT(,@10)                                  0218 00839000
         BALR  @14,@15                                             0218 00840000
*   RFY                                                            0219 00841000
*    (R0,                                                          0219 00842000
*     R1) UNRSTD;                                                  0219 00843000
*   RETURN CODE(0);                                                0220 00844000
         L     @13,4(,@13)                                         0220 00845000
         L     @00,@SIZDATD                                        0220 00846000
         LR    @01,@11                                             0220 00847000
         FREEMAIN R,LV=(0),A=(1)                                        00848000
         SLR   @15,@15                                             0220 00849000
         L     @14,12(,@13)                                        0220 00850000
         LM    @00,@12,20(@13)                                     0220 00851000
         BR    @14                                                 0220 00852000
*   END IEAVTFHX                                                   0221 00853000
*                                                                  0221 00854000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00855000
*/*%INCLUDE SYSLIB  (IHASMDLR)                                       */ 00856000
*/*%INCLUDE SYSLIB  (IHAABDPL)                                       */ 00857000
*                                                                  0221 00858000
*       ;                                                          0221 00859000
@DATA    DS    0H                                                       00860000
@CH00057 DC    H'1'                                                     00861000
@CH00059 DC    H'2'                                                     00862000
@CH00063 DC    H'3'                                                     00863000
@CH00050 DC    H'8'                                                     00864000
@CH00137 DC    H'32'                                                    00865000
@CH00171 DC    H'60'                                                    00866000
@SM00395 MVC   UNFMTSEC(0,@14),NEXTDATA(DATAPTR)                        00867000
@SM00398 MVC   OUTBUF(0,@03),MSGTXT(MSGPTR)                             00868000
@DATD    DSECT                                                          00869000
         DS    0F                                                       00870000
@SA00001 DS    18F                                                      00871000
@PC00001 DS    3F                                                       00872000
@TF00001 DS    F                                                        00873000
IEAVTFHX CSECT                                                          00874000
         DS    0F                                                       00875000
@CF00065 DC    F'4'                                                     00876000
@CH00065 EQU   @CF00065+2                                               00877000
@CF00319 DC    F'-32'                                                   00878000
@CF00393 DC    F'-8'                                                    00879000
@CF00394 DC    F'-4'                                                    00880000
@DATD    DSECT                                                          00881000
         DS    0D                                                       00882000
GRPNUM   DS    F                                                        00883000
BYTEPOS  DS    A                                                        00884000
CONDCODE DS    F                                                        00885000
LAST     DS    A                                                        00886000
BYTEONE  DS    A                                                        00887000
CURRLABL DS    A                                                        00888000
LINEFP   DS    CL60                                                     00889000
         ORG   LINEFP                                                   00890000
@NM00047 DS    CL8                                                      00891000
LFP1     DS    AL4                                                      00892000
@NM00048 DS    CL8                                                      00893000
LFP2     DS    AL4                                                      00894000
@NM00049 DS    CL4                                                      00895000
LFP3     DS    AL4                                                      00896000
         ORG   LINEFP+60                                                00897000
FP       DS    CL8                                                      00898000
         ORG   FP                                                       00899000
FPCODE   DS    BL1                                                      00900000
         ORG   FPCODE                                                   00901000
@NM00050 DS    BL1                                                      00902000
FPDATNOC EQU   FPCODE+0                                                 00903000
FPDATIUS EQU   FPCODE+0                                                 00904000
FPDPHER  EQU   FPCODE+0                                                 00905000
FPDATBUF EQU   FPCODE+0                                                 00906000
FPLABBUF EQU   FPCODE+0                                                 00907000
         ORG   FP+1                                                     00908000
FPLEN    DS    AL1                                                      00909000
FPLABOFF DS    AL1                                                      00910000
FPDATOFF DS    AL1                                                      00911000
FPEND    DS    AL4                                                      00912000
         ORG   FP+8                                                     00913000
MIALABEL DS    CL8                                                      00914000
         ORG   MIALABEL                                                 00915000
FROMLABL DS    AL4                                                      00916000
TOLABL   DS    AL4                                                      00917000
         ORG   MIALABEL+8                                               00918000
LASTLINE DS    CL120                                                    00919000
         ORG   LASTLINE                                                 00920000
LASTLBL  DS    CL8                                                      00921000
LASTDATA DS    CL112                                                    00922000
         ORG   LASTLINE+120                                             00923000
COMPRESS DS    BL1                                                      00924000
CMADDR1  DS    CL8                                                      00925000
IEAVTFHX CSECT                                                          00926000
         DS    0F                                                       00927000
@SIZDATD DC    AL1(0)                                                   00928000
         DC    AL3(@ENDDATD-@DATD)                                      00929000
@CA00309 DC    A(FHXMSG)                                                00930000
@CA00326 DC    A(TRTABLE)                                               00931000
@CA00335 DC    A(MIAFP)                                                 00932000
         DS    0D                                                       00933000
@CC00390 DC    C'        '                                              00934000
STANLINE DS    CL60                                                     00935000
         ORG   STANLINE                                                 00936000
FPLABEL  DS    CL12                                                     00937000
         ORG   FPLABEL                                                  00938000
@NM00005 DC    B'00011111'                                              00939000
@NM00006 DC    XL1'03'                                                  00940000
@NM00007 DC    AL1(86)                                                  00941000
@NM00008 DC    AL1(0)                                                   00942000
@NM00009 DC    AL4(ASTERISK)                                            00943000
@NM00010 DC    A(0)                                                     00944000
         ORG   STANLINE+12                                              00945000
FPHXL1   DS    CL12                                                     00946000
         ORG   FPHXL1                                                   00947000
@NM00011 DC    B'00011111'                                              00948000
@NM00012 DC    XL1'03'                                                  00949000
@NM00013 DC    AL1(119)                                                 00950000
@NM00014 DC    AL1(11)                                                  00951000
@NM00015 DC    AL4(ASTERISK)                                            00952000
@NM00016 DC    A(0)                                                     00953000
         ORG   STANLINE+24                                              00954000
FPHXL2   DS    CL8                                                      00955000
         ORG   FPHXL2                                                   00956000
@NM00017 DC    B'00010111'                                              00957000
@NM00018 DC    XL1'F3'                                                  00958000
@NM00019 DC    AL1(87)                                                  00959000
@NM00020 DC    AL1(20)                                                  00960000
@NM00021 DC    A(0)                                                     00961000
         ORG   STANLINE+32                                              00962000
FPHXL3   DS    CL4                                                      00963000
         ORG   FPHXL3                                                   00964000
@NM00022 DC    B'00010101'                                              00965000
@NM00023 DC    XL1'F3'                                                  00966000
@NM00024 DC    AL1(103)                                                 00967000
@NM00025 DC    AL1(29)                                                  00968000
         ORG   STANLINE+36                                              00969000
FPHXL4   DS    CL4                                                      00970000
         ORG   FPHXL4                                                   00971000
@NM00026 DC    B'00010100'                                              00972000
@NM00027 DC    XL1'03'                                                  00973000
@NM00028 DC    AL1(0)                                                   00974000
@NM00029 DC    AL1(38)                                                  00975000
         ORG   STANLINE+40                                              00976000
FPHXL5   DS    CL4                                                      00977000
         ORG   FPHXL5                                                   00978000
@NM00030 DC    B'00010100'                                              00979000
@NM00031 DC    XL1'03'                                                  00980000
@NM00032 DC    AL1(0)                                                   00981000
@NM00033 DC    AL1(49)                                                  00982000
         ORG   STANLINE+44                                              00983000
FPHXL6   DS    CL4                                                      00984000
         ORG   FPHXL6                                                   00985000
@NM00034 DC    B'00010100'                                              00986000
@NM00035 DC    XL1'03'                                                  00987000
@NM00036 DC    AL1(0)                                                   00988000
@NM00037 DC    AL1(58)                                                  00989000
         ORG   STANLINE+48                                              00990000
FPHXL7   DS    CL4                                                      00991000
         ORG   FPHXL7                                                   00992000
@NM00038 DC    B'00010100'                                              00993000
@NM00039 DC    XL1'03'                                                  00994000
@NM00040 DC    AL1(0)                                                   00995000
@NM00041 DC    AL1(67)                                                  00996000
         ORG   STANLINE+52                                              00997000
FPHXL8   DS    CL4                                                      00998000
         ORG   FPHXL8                                                   00999000
@NM00042 DC    B'00010100'                                              01000000
@NM00043 DC    XL1'03'                                                  01001000
@NM00044 DC    AL1(0)                                                   01002000
@NM00045 DC    AL1(76)                                                  01003000
         ORG   STANLINE+56                                              01004000
@NM00046 DC    A(0)                                                     01005000
         ORG   STANLINE+60                                              01006000
ASTERISK DC    CL1'*'                                                   01007000
CMPRSMSG DC    CL120'********   LINES FROM XXHEREXX TO XTHEREXX ARE THEC01008000
                SAME AS THE ABOVE LINE'                                 01009000
PATCHLOC DC    CL100'IEAVTFHX PATCH AREA. 100 BYTES LONG'               01010000
         DS    CL1                                                      01011000
SMDWSAG  DC    AL2(6)                                                   01012000
         DC    AL2(7)                                                   01013000
         DC    AL2(8)                                                   01014000
         DC    AL2(9)                                                   01015000
         DC    AL2(10)                                                  01016000
         DC    AL2(11)                                                  01017000
         DC    AL2(12)                                                  01018000
         DC    AL2(13)                                                  01019000
         DC    AL2(14)                                                  01020000
         DC    AL2(15)                                                  01021000
         DC    AL2(16)                                                  01022000
SMDWSAC  DC    AL2(17)                                                  01023000
         DC    AL2(18)                                                  01024000
         DC    AL2(19)                                                  01025000
         DC    AL2(20)                                                  01026000
         DC    AL2(21)                                                  01027000
         DC    AL2(22)                                                  01028000
         DC    AL2(23)                                                  01029000
         DC    AL2(24)                                                  01030000
         DC    AL2(25)                                                  01031000
         DC    AL2(26)                                                  01032000
         DC    AL2(27)                                                  01033000
         DC    AL2(28)                                                  01034000
         DC    AL2(29)                                                  01035000
         DC    AL2(30)                                                  01036000
         DC    AL2(54)                                                  01037000
         DC    AL2(55)                                                  01038000
SMDWSAL  DC    AL2(31)                                                  01039000
         DC    AL2(32)                                                  01040000
         DC    AL2(33)                                                  01041000
         DC    AL2(34)                                                  01042000
         DC    AL2(35)                                                  01043000
         DC    AL2(36)                                                  01044000
         DC    AL2(37)                                                  01045000
         DC    AL2(38)                                                  01046000
         DC    AL2(39)                                                  01047000
         DC    AL2(40)                                                  01048000
         DC    AL2(41)                                                  01049000
         DC    AL2(42)                                                  01050000
         DC    AL2(43)                                                  01051000
         DC    AL2(44)                                                  01052000
         DC    AL2(45)                                                  01053000
         DS    CL2                                                      01054000
GRPOFF   DC    A(11)                                                    01055000
         DC    A(20)                                                    01056000
         DC    A(29)                                                    01057000
         DC    A(38)                                                    01058000
         DC    A(49)                                                    01059000
         DC    A(58)                                                    01060000
         DC    A(67)                                                    01061000
         DC    A(76)                                                    01062000
IEAVTFHX CSECT                                                          01063000
T3CFP1 DC X'03F00000'             TEXT                                  01064000
       DC AL4(T3CTXT1)                                                  01065000
       DC X'01F01000'             TEXT                                  01066000
       DC X'15C1202E'             TEXT & ASID                           01067000
       DC AL4(0)                                                        01068000
T3CFP2 DC X'3577333C'             TEXT & JOBNAME                        01069000
       DC AL4(0)                                                        01070000
T3CFP3 DC X'35D74554'             TEXT & PROC STEPNAME                  01071000
       DC X'35875D67'             TEXT & STEPNAME                       01072000
       DC AL4(0)                                                        01073000
T3CFP4 DC X'3787454F'             TEXT & STEPNAME                       01074000
       DC AL4(T3CTXT2)                                                  01075000
       DC AL4(0)                                                        01076000
* NOTE T3CFP3 USES T3CTXT1 & T3CTXT2 AND ASSUMES THEY ARE CONSECUTIVE   01077000
T3CTXT1 DC C'---------------- SUMMARY DUMP OUTPUT FOR ASIDJOBNAME=PROC S01078000
               STEPNAME='                                               01079000
T3CTXT2 DC C'STEPNAME='                                                 01080000
@DATD    DSECT                                                          01081000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01082000
@ENDDATD EQU   *                                                        01083000
IEAVTFHX CSECT                                                          01084000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01085000
@01      EQU   01                                                       01086000
@02      EQU   02                                                       01087000
@03      EQU   03                                                       01088000
@04      EQU   04                                                       01089000
@05      EQU   05                                                       01090000
@06      EQU   06                                                       01091000
@07      EQU   07                                                       01092000
@08      EQU   08                                                       01093000
@09      EQU   09                                                       01094000
@10      EQU   10                                                       01095000
@11      EQU   11                                                       01096000
@12      EQU   12                                                       01097000
@13      EQU   13                                                       01098000
@14      EQU   14                                                       01099000
@15      EQU   15                                                       01100000
MIAINDEX EQU   @07                                                      01101000
MIAPTR   EQU   @09                                                      01102000
LENLEFT  EQU   @10                                                      01103000
REMAINS  EQU   @05                                                      01104000
DATAPTR  EQU   @06                                                      01105000
INDEX    EQU   @03                                                      01106000
FIRST    EQU   @08                                                      01107000
MSGPTR   EQU   @02                                                      01108000
R0       EQU   @00                                                      01109000
RETCODE  EQU   @15                                                      01110000
R1       EQU   @01                                                      01111000
         EXTRN FHXMSG                                                   01112000
         EXTRN TRTABLE                                                  01113000
         EXTRN MIAFP                                                    01114000
SMDLR    EQU   0                                                        01115000
SMDLRHDR EQU   SMDLR                                                    01116000
SMDLRLEN EQU   SMDLRHDR+4                                               01117000
SMDLRDAT EQU   SMDLR+20                                                 01118000
ABDPL    EQU   0                                                        01119000
ADPLFLAG EQU   ABDPL+7                                                  01120000
ADPLBUF  EQU   ABDPL+8                                                  01121000
ADPLPRNT EQU   ABDPL+12                                                 01122000
ADPLFRMT EQU   ABDPL+24                                                 01123000
ADPLFMT2 EQU   ABDPL+48                                                 01124000
FMTSERV  EQU   0                                                        01125000
LINEPRNT EQU   0                                                        01126000
OUTBUF   EQU   0                                                        01127000
BORDERL  EQU   OUTBUF+86                                                01128000
UNFMTSEC EQU   OUTBUF+87                                                01129000
BORDERR  EQU   OUTBUF+119                                               01130000
MSG      EQU   0                                                        01131000
MSGLEN   EQU   MSG                                                      01132000
MSGTXT   EQU   MSG+1                                                    01133000
NEXTDATA EQU   0                                                        01134000
MIATABLE EQU   0                                                        01135000
MIABEGIN EQU   MIATABLE                                                 01136000
MIALAST  EQU   MIABEGIN                                                 01137000
MIAEND   EQU   MIATABLE+4                                               01138000
ABDPLPTR EQU   0                                                        01139000
SMDLRPTR EQU   0                                                        01140000
BEGLABEL EQU   0                                                        01141000
THISLINE EQU   OUTBUF                                                   01142000
THISLBL  EQU   THISLINE                                                 01143000
THISDATA EQU   THISLINE+8                                               01144000
CMMAP    EQU   OUTBUF                                                   01145000
CMADDR3  EQU   CMMAP+22                                                 01146000
CMADDR2  EQU   CMMAP+34                                                 01147000
T3CREC   EQU   SMDLRDAT                                                 01148000
T3CSN    EQU   T3CREC+18                                                01149000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01150000
T3CPSN   EQU   T3CREC+10                                                01151000
T3CJOBN  EQU   T3CREC+2                                                 01152000
T3CASID  EQU   T3CREC                                                   01153000
@NM00052 EQU   CMMAP+30                                                 01154000
@NM00051 EQU   CMMAP                                                    01155000
MIAPAD   EQU   MIAEND                                                   01156000
@NM00004 EQU   OUTBUF                                                   01157000
ADPLABDA EQU   ABDPL+56                                                 01158000
ADPLEXT  EQU   ABDPL+52                                                 01159000
ADPLFMT1 EQU   ABDPL+44                                                 01160000
ADPLCOM4 EQU   ABDPL+40                                                 01161000
ADPLCOM3 EQU   ABDPL+36                                                 01162000
ADPLCOM2 EQU   ABDPL+32                                                 01163000
ADPLCOM1 EQU   ABDPL+28                                                 01164000
ADPLMEMA EQU   ABDPL+20                                                 01165000
ADPLCVT  EQU   ABDPL+16                                                 01166000
@NM00003 EQU   ADPLFLAG                                                 01167000
ADPLDMGT EQU   ADPLFLAG                                                 01168000
ADPLSYTM EQU   ADPLFLAG                                                 01169000
ADPLSNPR EQU   ADPLFLAG                                                 01170000
ADPLSBPL EQU   ABDPL+6                                                  01171000
ADPLASID EQU   ABDPL+4                                                  01172000
ADPLTCB  EQU   ABDPL                                                    01173000
@NM00002 EQU   SMDLRHDR+17                                              01174000
SMDLRMSG EQU   SMDLRHDR+16                                              01175000
SMDLRPL  EQU   SMDLRHDR+12                                              01176000
SMDLRADR EQU   SMDLRHDR+8                                               01177000
@NM00001 EQU   SMDLRHDR+2                                               01178000
SMDLRID  EQU   SMDLRHDR                                                 01179000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01180000
@RC00046 EQU   @RC00045                                                 01181000
@ENDDATA EQU   *                                                        01182000
         END   IEAVTFHX,(C'PLS2115',0701,77287)                         01183000
