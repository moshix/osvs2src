         MACRO                                                          00070000
&NAME    AXR#  &REG1,&REG2                                              00140000
         CNOP  0,4                                                      00560000
&NAME    B     *+8 ..........RECURSIVE CALL TO QSIM TO SIMULATE AXR     00630000
         DC    H'0'                                                     00700000
         ADR   &REG1,&REG2 ........'AXR  REG1,REG2'  IS MEANT           00770000
         ORG   *-2                                                      00840000
         DC    X'36'                                                    00910000
         ORG   *+1                                                      00980000
         L     GR0,*-4                                                  01050000
         BALR  GRR,GRL                                                  01120000
         LR    GRL,GR4 ........RESTORE GRL                              01190000
         MEND                                                           01680000
         MACRO                                                          01750000
&NAME    SXR#  &REG1,&REG2                                              01820000
         CNOP  0,4                                                      02240000
&NAME    B     *+8 ..........RECURSIVE CALL TO QSIM TO SIMULATE SXR     02310000
         DC    H'0'                                                     02380000
         SDR   &REG1,&REG2 ........'SXR  REG1,REG2'  IS MEANT           02450000
         ORG   *-2                                                      02520000
         DC    X'37'                                                    02590000
         ORG   *+1                                                      02660000
         L     GR0,*-4                                                  02730000
         BALR  GRR,GRL                                                  02800000
         LR    GRL,GR4 ........RESTORE GRL                              02870000
         MEND                                                           03360000
         MACRO                                                          03430000
&NAME    MXDR# &REG1,&REG2                                              03500000
         CNOP  0,4                                                      03920000
&NAME    B     *+8 ..........RECURSIVE CALL TO QSIM TO SIMULATE MXDR    03990000
         DC    H'0'                                                     04060000
         MER   &REG1,&REG2 ........'MXDR  REG1,REG2'  IS MEANT          04130000
         ORG   *-2                                                      04200000
         DC    X'27'                                                    04270000
         ORG   *+1                                                      04340000
         L     GR0,*-4                                                  04410000
         BALR  GRR,GRL                                                  04480000
         LR    GRL,GR4 ........RESTORE GRL                              04550000
         MEND                                                           05040000
         MACRO                                                          05110000
&NAME    MXD#  &REG1,&OPND2                                             05180000
         CNOP  0,4                                                      05600000
&NAME    LD    &REG1+2,&OPND2 ....MACRO FOR 'MXD  REG1,OPND2'           05670000
         B     *+8 ..........RECURSIVE CALL TO QSIM TO SIMULATE MXDR    05740000
         DC    H'0'                                                     05810000
         MER   &REG1,&REG1+2 ........'MXDR REG1,REG1+2'  IS MEANT       05880000
         ORG   *-2                                                      05950000
         DC    X'27'                                                    06020000
         ORG   *+1                                                      06090000
         L     GR0,*-4                                                  06160000
         BALR  GRR,GRL                                                  06230000
         LR    GRL,GR4 ........RESTORE GRL                              06300000
         MEND                                                           06790000
         EJECT                                                          07560000
IEAXPALL CSECT                                                          07630000
         PRINT ON,NOGEN,DATA                                            07640000
         SPACE                                                          07700000
*********************************************************************** 07770000
*                                                                     * 07840000
* MODULE NAME - IEAXPALL                                              * 07910000
*                                                                     * 07980000
* TITLE - SIMULATOR INTERFACE FOR EXTENDED PRECISION INSTRUCTIONS     * 08050000
*                                                                     * 08120000
* FUNCTION OPERATION - IEAXPALL HANDLES OPERATION INTERRUPTS. IF THE  * 08190000
*        OP-CODE INTERRUPT OCCURRED AS A RESULT OF AN EXTENDED        * 08260000
*        PRECISION INSTRUCTION, CONTROL IS PASSED TO THE SIMULATOR    * 08330000
*        KERNEL. THE PSW IS MODIFIED APPROPRIATELY AFTER SIMULATION.  * 08400000
*                                                                     * 08470000
* STATUS - CHANGE LEVEL 0                                             * 08540000
*                                                                     * 08610000
* ENTRY POINT - IEAXPALL                                              * 08680000
*                                                                     * 08750000
* INPUT - REGISTER 1 CONTAINS THE POINTER TO A PARAMETER LIST WHICH   * 08820000
*        CONTAINS A PTR TO THE PIE, A PTR TO AN AREA WITH REGS AT     * 08890000
*        INTERRUPT TIME (0-15), A PTR TO A WORK AREA, A PTR TO A BYTE * 08960000
*        WHICH IS NON-ZERO IF THE LAST BIT OF DXR IS NOT TO BE        * 09030000
*        GUARANTEED.                                                  * 09100000
*                                                                     * 09170000
* TABLES/WORK AREAS -                                                 * 09240000
*        1 - RC - REG CODE EXTRACTED FROM THE INSTRUCTION TO BE       * 09310000
*        SIMULATED.                                                   * 09380000
*                                                                     * 09450000
* EXITS - RETURN IS ALWAYS TO THE CALLING ROUTINE VIA REG 14. A RETURN* 09520000
*        CODE IS PLACED IN REG 15.                                    * 09590000
*        CODE    MEANING                                              * 09660000
*        X'00'   OPERATION SUCCESSFUL AND NO EXCEPTIONAL CONDITIONS   * 09730000
*        OCCURRED.                                                    * 09800000
*        X'FF'   1 - AN EXTENDED PRECISION INSTRUCTION WAS NOT        * 09870000
*                    ENCOUNTERED.                                     * 09940000
*                2 - AN INCORRECT FLOATING POINT REGISTER WAS         * 10010000
*                    SPECIFIED (SPECIFICATION).                       * 10080000
*                3 - A PROTECTION, ADDRESSING OR SPECIFICATION        * 10150000
*                    INTERRUPT OCCURRED IN FETCHING THE ARGUMENT      * 10220000
*                    OF AN MXD INSTRUCTION.                           * 10290000
*                4 - OVERFLOW, UNDERFLOW, FLOATING POINT DIVIDE OR    * 10360000
*                    SIGNIFICANCE OCCURRED IN SIMULATING.             * 10430000
*                5 - THIRD BYTE OF DXR NOT X'00' (SPECIFICATION)      * 10500000
*                                                                     * 10570000
* EXTERNAL ROUTINES - THE SIMULATOR KERNEL IEAXKALL                   * 10640000
*                                                                     * 10710000
* ATTRIBUTES - THIS MODULE IS REENTRANT.                              * 10780000
*                                                                     * 10850000
*********************************************************************** 10920000
         EJECT                                                          10990000
* REGISTER DEFINITIONS                                                  11060000
PARM     EQU   1                   PARAMETER REG                        11070000
R2       EQU   2                   UTILITY REG                          11080000
R3       EQU   3                   UTILITY REG                          11090000
R4       EQU   4                   UTILITY REG                          11100000
INST     EQU   5                   PTR TO INSTRUCTION                   11110000
PIEAD    EQU   6                   PTR TO PIE                           11120000
WRK      EQU   7                                                        11130000
BASE     EQU   8                   BASE REG                             11140000
LINK     EQU   9                   BRANCHING REG                        11150000
CODE1    EQU   15                  RETURN CODE REG                      11160000
         SPACE 3                                                        11760000
* MISCELLANEOUS CODES                                                   11830000
LRDRINST EQU   X'25'               EXTENDED OP CODES - LOAD LONG RNDED  11900000
MXDRINST EQU   X'27'                                   MULTIPLY LONG    11970000
LRERINST EQU   X'35'                                   LOAD SHORT RNDED 12040000
SXRINST  EQU   X'37'                                   SUBTRACT         12110000
MXDINST  EQU   X'67'                                   MULTIPLY LONG    12111000
DIVOP    EQU   X'2D'               HALF OF EXTENDED DIVIDE OPCODE       12120000
LOWBY    EQU   X'0F'               SETS OFF HIGH 4 BITS OF A BYTE       12180000
RESULT0  EQU   X'02'               SIMULATED MXD REGS: 0=ARG 2=RESULT   12250000
RESULT4  EQU   X'46'               SIMULATED MXD REGS: 4=ARG 6=RESULT   12320000
XOV      EQU   X'0C'               ERROR CODES - EXPONENT OVERFLOW      12460000
XUN      EQU   X'0D'                             EXPONENT UNDERFLOW     12530000
SIGNIF   EQU   X'0E'                             SIGNIFICANCE           12540000
DCK      EQU   X'0F'                             FLOATING POINT DIVIDE  12600000
ADSUB    EQU   X'F0'               SETS SWITCH TO INDICATE ADD OR SUB   12670000
R2OR6    EQU   X'0F'               SETS SWITCH IF REGS 2 OR 6 ALLOWED   12740000
BADOP    EQU   X'FF'               ERROR RETURN CODE                    12880000
ON       EQU   X'FF'               SETS SOME SWITCHES ON                12950000
         EJECT                                                          13020000
         USING XPALL,15                                                 13090000
         USING WRKAREA,WRK                                              13160000
         SPACE                                                          13230000
XPALL    B     PROLOG                                                   13300000
         DC    X'08'                                                    13370000
         DC    CL8'IEAXPALL'                                            13440000
PROLOG   STM   14,12,12(13)        SAVE REGS                            13510000
         BALR  BASE,0              SET UP ADDRESSABILITY                13580000
         USING *,BASE                                                   13650000
         L     WRK,8(PARM)                                              13720000
         ST    13,SAVESIM+4                                             13790000
         LA    R2,SAVESIM          SAVE AREA FOR KERNEL                 13860000
         ST    R2,8(13)            LINK SAVE AREAS                      13930000
         SPACE                                                          14000000
         MVI   72(WRK),X'00'                                            14070000
         MVC   73(10,WRK),72(WRK)  INITIALIZE WORK AREA                 14140000
         L     PIEAD,0(PARM)       PICK UP ADDRESS OF PIE               14210000
         SPACE                                                          14220000
* CALCULATE PTR TO INSTRUCTION CAUSING INTERRUPT                        14280000
         L     INST,8(PIEAD)                                            14350000
         LA    INST,0(INST)        NEXT INSTRUCTION ADDRESS             14420000
         SH    INST,FOUR           ILC ADJUSTMENT                       14490000
         TM    8(PIEAD),X'80'      ILC 2 ?                              14560000
         BZ    ADD2                YES - ADD 2 TO ADDRESS               14630000
         TM    8(PIEAD),X'C0'      ILC 6 ?                              14700000
         BM    EXTEST              NO - ILC IS 4                        14770000
         SH    INST,TWO            ILC 6 - SUBTRACT 2                   14840000
         B     EXTEST              GO TEST FOR EX                       14910000
ADD2     AH    INST,TWO            ILC 4                                14980000
         SPACE 3                                                        15120000
* THIS ROUTINE TESTS FOR AN EXECUTE INSTRUCTION. IF THE INTERRUPT WAS   15190000
* CAUSED BY AN EXECUTE, THE ADDRESS OF THE EXECUTED INSTRUCTION IS      15260000
* CALCULATED AND THE MASK IS SET.                                       15330000
         SPACE                                                          15400000
EXTEST   CLI   0(INST),X'44'       IS INSTRUCTION AN EXECUTE ?          15470000
         BNE   DIVCK               NO - CHECK FOR DIVIDE                15540000
         BAL   LINK,ADCALC         CALC ADDRESS OF INTERRUPT INST       15610000
         SR    R2,R2                                                    15680000
         IC    R2,1(INST)          PICK UP REG USED FOR EX              15750000
         SRL   R2,4                                                     15820000
         SLL   R2,2                                                     15890000
         LTR   R2,R2               IS EX REG 0 ?                        15940000
         BZ    LOADREG             YES - DO NOT SET MASK                15950000
         L     R2,0(R2,R4)         GET CONTENTS OF REG                  15960000
         STC   R2,BYTES                                                 16030000
         MVC   EXSV,1(R3)          SAVE ORIGINAL FIELD                  16170000
         OI    EXSW,ON             INDICATE EXECUTE INSTRUCTION         16180000
         OC    1(1,R3),BYTES       SET MASK IN INST TO BE EXECUTED      16240000
LOADREG  LR    INST,R3             PICK UP ADDRESS OF INST              16310000
         SPACE 2                                                        16380000
DIVCK    CLC   0(2,INST),DIV       EXTENDED DIVIDE ?                    16520000
         BNE   OPTST               NO - CHECK FOR OTHER EXT INSTS       16590000
         CLI   2(INST),X'00'       THIRD BYTE ZERO ?                    16660000
         BNE   SETSPEC             INDICATE SPECIFICATION ERROR         16730000
         MVI   RC+2,DIVOP          SET DIVIDE OPCODE                    16800000
         MVC   RC+3(1),3(INST)     SET REGISTER CODE                    16870000
         SR    R2,R2                                                    16940000
         IC    R2,3(INST)                                               17010000
         BAL   LINK,SPECTST2       CHECK FOR CORRECT REG SPEC           17080000
         MVC   BYTES(1),3(INST)                                         17150000
         B     REGTST2             CHECK CORRECT R2 SPEC                17220000
         SPACE 2                                                        17290000
* THIS ROUTINE TESTS FOR THE EXTENDED PRECISION INSTRUCTIONS.           17360000
         SPACE                                                          17430000
OPTST    CLI   0(INST),LRDRINST                                         17500000
         BL    ERRRET              NOT TO BE HANDLED                    17570000
         BE    LRDRRTN             HANDLE LRDR INSTRUCTION              17640000
         CLI   0(INST),MXDRINST                                         17710000
         BL    REGTST              HANDLE MXR INSTRUCTION               17780000
         BE    MXDRRTN             HANDLE MXDR INSTRUCTION              17850000
         CLI   0(INST),LRERINST                                         17920000
         BL    ERRRET              NOT TO BE HANDLED                    17990000
         BE    LRERRTN                                                  18060000
         CLI   0(INST),SXRINST                                          18130000
         BH    MXDTST              TEST FOR MXD INSTRUCTION             18200000
         OI    SWITCH,ADSUB        INDICATE ADD OR SUBTRACT             18270000
         B     REGTST              HANDLE ADD OR SUBTRACT               18340000
         EJECT                                                          18410000
MXDTST   CLI   0(INST),MXDINST                                          18480000
         BNE   ERRRET              NOT TO BE HANDLED                    18550000
         SPACE                                                          18620000
* THIS ROUTINE EXAMINES THE ADDRESS PORTION OF AN MXD INSTRUCTION. IF   18690000
* A SPECIFICATION, PROTECTION, OR ADDRESSING INTERRUPT OCCURS IN        18760000
* FETCHING THE ARGUMENT, THE PSW INDICATES THE CONDITION.               18830000
         SPACE                                                          18900000
         BAL   LINK,ADCALC         CALCULATE ARGUMENT ADDRESS           18970000
         BAL   LINK,SPECTST        TEST R1 FOR PROPER REG SPECIFICATION 19040000
         MVC   APSW(4),8(PIEAD)                                         19110000
         MVC   PIEREGS(20),12(PIEAD)                                    19180000
         LA    R4,MXDERR           SPIE EXIT FOR FETCHING ARGUMENT      19250000
         SPIE  (4),(4,5,6)         CATCH PROTECTION, ADDRESSNG AND SPEC 19320000
         LTR   R2,R2                                                    19390000
         MVI   RC+2,MXDRINST       INDICATE MXDR FOR SIMULATOR          19460000
         BZ    ZER                                                      19530000
         MVI   RC+3,RESULT4        INDICATE ARG AND RESULT REGS         19600000
         LD    6,0(R3)             PICK UP ARGUMENT                     19670000
         B     CANCEL                                                   19740000
ZER      MVI   RC+3,RESULT0        INDICATE ARG AND RESULT REGS         19810000
         LD    2,0(R3)             PICK UP ARGUMENT                     19880000
CANCEL   EQU   *                                                        19890000
         SPIE MF=(E,(1))           RESTORE PREVIOUS PICA                20020000
         TM    MXDSW,ON            ERROR ON LOAD ?                      20090000
         BZ    PROGMSK             NO - SET UP FOR KERNEL               20160000
         MVC   8(4,PIEAD),APSW                                          20230000
         MVC   12(20,PIEAD),PIEREGS                                     20300000
         B     ERRRET              RETURN WITH ERROR CODE               20370000
         SPACE 3                                                        20440000
* SPIE EXIT FOR ERROR IN FETCHING THE ARGUMENT OF MXD.                  20510000
MXDERR   OI    MXDSW,ON            INDICATE ERROR IN FETCHING THE ARG   20580000
         BR    14                  RETURN TO SUPERVISOR                 20650000
         SPACE 3                                                        20720000
* THESE ROUTINES INSURE PROPER REG SPECIFICATIONS.                      20790000
         SPACE                                                          20800000
LRERRTN  OI    SWITCH,R2OR6        INDICATE 0,2,4 OR 6 ALLOWED          20930000
MXDRRTN  BAL   LINK,SPECTST        CHECK R1                             21000000
         OI    SWITCH,R2OR6        INDICATE 0,2,4 OR 6 ALLOWED          21070000
         B     REGTST1             GO TEST R2                           21140000
LRDRRTN  OI    SWITCH,R2OR6        INDICATE 0,2,4 OR 6 ALLOWED          21210000
REGTST   BAL   LINK,SPECTST        TEST FOR CORRECT REG                 21280000
REGTST1  MVC   BYTES(1),1(INST)                                         21350000
REGTST2  NI    BYTES,LOWBY                                              21420000
         IC    R2,BYTES            PICK UP R2                           21490000
         BAL   LINK,SPEC2          TEST FOR CORRECT ARGUMENT REG        21560000
         EJECT                                                          21640000
* THIS ROUTINE SETS UP THE PARAMETER AREA FOR THE KERNEL: X'PM0SOPRA',  21650000
* WHERE PM IS THE PROGRAM MASK, S IS DXR SWITCH, OP IS OPCODE OR 2D,    21660000
* R IS REG 1, AND A IS REG 2.                                           21670000
         SPACE                                                          21680000
PROGMSK  IC    R2,8(PIEAD)         GET PROGRAM MASK FROM THE PSW        21700000
         SLL   R2,4                                                     21770000
         STC   R2,RC               SET PROGRAM MASK IN PARM FOR SIM     21840000
         LA    13,SAVESIM          SAVE AREA FOR SIMULATOR              21980000
         CLI   RC+2,X'00'          MXD OR DIVIDE ?                      22050000
         BNZ   QBR                 YES - BRANCH                         22120000
         MVC   RC+2(2),0(INST)     SET OP CODE                          22190000
QBR      LA    R2,RC               SET INSTRUCTION AND REG CODE         22330000
         ST    R2,LIST                  IN PARAMETER LIST               22400000
         LA    R2,SIMWRK           SET ADDRESS OF SIM WORKAREA          22470000
         ST    R2,LIST+4                IN PARAMETER LIST               22540000
         LA    R2,EXCEP            SET ADDRESS OF ERROR RETURN          22610000
         ST    R2,LIST+8                 IN PARAMETER LIST              22680000
         L     R2,12(PARM)         PICK UP DXR ADJUST SW                22890000
         TM    0(R2),X'FF'         SHOULD ADJUST BE DONE?               22900000
         BZ    TOSIM               YES BRANCH                           22980000
         MVI   RC+1,X'01'          INDICATE TO KERNEL NOT TO ADJUST     22990000
TOSIM    LA    PARM,LIST           ADDRESS OF PARAMETER LIST            23030000
         L     15,=V(IEAXKALL)                                          23100000
         BALR  14,15               BRANCH TO SIMULATOR                  23170000
         SPACE                                                          23240000
         LA    LINK,OUT            BRANCH POINT                         23241000
         SR    15,15               INDICATE GOOD RETURN CODE            23250000
SETCC    TM    SWITCH,ADSUB        ADD OR SUBTRACT ?                    23660000
         BCR   8,LINK              NO - RETURN                          23730000
         L     R2,RETCD            PICK UP RETURN CODE                  23800000
         SRL   R2,6                SET UP MASK                          24150000
         SLL   R2,4                    USE TO SET CC                    24220000
         STC   R2,CODE2                                                 24290000
         NI    8(PIEAD),X'CF'                                           24360000
         OC    8(1,PIEAD),CODE2    SET CONDITION CODE                   24430000
         BR    LINK                RETURN                               24440000
         SPACE                                                          24640000
* USING RETURN CODE FROM SIMULATOR, SET PSW APPROPRIATELY               24850000
EXCEP    CLI   RETCD+3,BADOP       DID KERNEL FIND OPCODE ERROR ?       24870000
         BE    ERRRET              GIVE ERROR RETURN CODE               24880000
         BAL   LINK,SETCC          SET CC IF ANY                        24881000
         NI    RETCD+3,X'3F'       ADJUST RETURN CODE                   24882000
         L     15,RETCD            PICK UP RETURN CODE                  24890000
         EX    0,SETINT(15)        ADJUST INTERRUPT CODE                24990000
ERRRET   LA    CODE1,255           SET X'FF' RETURN CODE                25130000
OUT      TM    EXSW,ON             WAS INST AN EXECUTE ?                25270000
         BZ    RETURN              NO - RETURN                          25340000
         MVC   1(1,INST),EXSV      RESTORE FIELD MODIFIED FOR EXECUTE   25410000
         SPACE                                                          25490000
RETURN   L     13,SAVESIM+4        RESTORE CALLER'S SAVE AREA POINTER   25500000
         L     14,12(13)           GET RETURN LOCATION                  25510000
         LM    0,12,20(13)         RESTORE REGISTERS                    25520000
         MVI   12(13),X'FF'        INDICATE RETURN                      25530000
         BR    14                  RETURN                               25540000
         SPACE 3                                                        25550000
SETINT   EQU   *-4                                                      25900000
         MVI   7(PIEAD),XOV                                             25970000
         MVI   7(PIEAD),XUN                                             26040000
         MVI   7(PIEAD),DCK                                             26110000
         MVI   7(PIEAD),DCK                                             26180000
         MVI   7(PIEAD),SIGNIF                                          26250000
         EJECT                                                          26320000
* THIS ROUTINE CALCULATES THE ADDRESS SPECIFIED AS AN ARGUMENT IN AN    26390000
* RX INSTRUCTION.                                                       26460000
         SPACE                                                          26530000
ADCALC   SR    R2,R2                                                    26600000
         MVC   BYTES(1),1(INST)                                         26670000
         NI    BYTES,LOWBY                                              26740000
         IC    R2,BYTES            INDEX REGISTER                       26810000
         L     R4,4(PARM)          PTR TO REGS AT INTERRUPT TIME        26880000
         LTR   R2,R2               REG 0 NOT INDEX REG                  26950000
         BZ    ADD                                                      27020000
         SLL   R2,2                                                     27090000
         L     R2,0(R2,R4)         CONTENTS OF INDEX REG                27160000
         LA    R2,0(R2)                                                 27230000
ADD      SR    R3,R3                                                    27300000
         IC    R3,2(INST)          BASE REGISTER                        27370000
         SRL   R3,4                                                     27440000
         LTR   R3,R3               REG 0 NOT BASE REG                   27510000
         BZ    ADD1                                                     27580000
         SLL   R3,2                                                     27650000
         L     R3,0(R3,R4)         CONTENTS OF BASE REG                 27720000
         LA    R3,0(R3)                                                 27790000
ADD1     AR    R3,R2               BASE, INDEX                          27860000
         MVC   BYTES(2),2(INST)    DISPLACEMENT                         27930000
         NI    BYTES,LOWBY                                              28000000
         AH    R3,BYTES            ADDRESS                              28070000
         BR    LINK                                                     28140000
         EJECT                                                          28210000
* THIS ROUTINE EXAMINES REGISTER FIELDS OF EXTENDED PRECISION           28280000
* INSTRUCTION. IF AN INCORRECT REGISTER IS SPECIFIED, THE PSW IN PIE    28350000
* WILL BE SET TO INDICATE SPECIFICATION.                                28420000
        SPACE                                                           28490000
SPECTST  SR    R2,R2                                                    28560000
         IC    R2,1(INST)          PICK UP REGISTERS TO BE EXAMINED     28630000
SPECTST2 SRA   R2,4                                                     28700000
SPEC2    LTR   R2,R2               IS REG 0 ?                           28770000
         BZ    BACK                YES - RETURN                         28840000
         CH    R2,FOUR             IS REG 4 ?                           28910000
         BE    BACK                YES - RETURN                         28980000
         TM    SWITCH,R2OR6        REG 2 OR REG 6 VALID?                29050000
         BZ    SETSPEC             NO - RETURN WITH ERROR CODE          29120000
         CH    R2,TWO              IS REG 2 ?                           29190000
         BE    BACK                YES - RETURN                         29260000
         CH    R2,SIX              IS REG 6 ?                           29330000
         BNE   SETSPEC             NO - RETURN WITH ERROR CODE          29400000
BACK     NI    SWITCH,X'F0'                                             29470000
         BR    LINK                                                     29540000
SETSPEC  LA    R2,6                SPECIFICATION ERROR CODE             29610000
         STH   R2,6(PIEAD)         SET INTERRUPT CODE IN PSW            29680000
         B     ERRRET                                                   29820000
         EJECT                                                          29890000
* CONSTANT DATA AREAS                                                   29960000
      SPACE                                                             30030000
TWO      DC    H'2'                                                     30100000
FOUR     DC    H'4'                                                     30170000
SIX      DC    H'6'                                                     30240000
DIV      DC    X'B22D'             EXTENDED DIVIDE OPCODE - DXR         30310000
      SPACE    3                                                        30380000
* VARIABLE DATA AREAS                                                   30450000
         SPACE                                                          30520000
WRKAREA  DSECT                                                          30590000
SAVESIM  DS    18F                 SAVE AREA FOR KERNEL                 30660000
RC       DC    F'0'                PARAMETER AREA FOR KERNEL            30730000
BYTES    DC    H'0'                SCRATCH AREA                         30800000
SWITCH   DC    X'00'               ADSUB AND R2OR6 SWITCHES             30870000
CODE2    DC    X'00'               SCRATCH TO BUILD CONDITION CODE      30940000
EXSW     DC    X'00'               INDICATES EXECUTE INSTRUCTION        31010000
EXSV     DC    X'00'               ORIGINAL FIELD OF INST EXECUTED      31080000
MXDSW    DC    X'00'               SWITCH FOR MXD INSTRUCTION           31150000
LIST     DC    A(RC)               PARAMETER LIST FOR KERNEL            31291000
         DC    A(SIMWRK)                                                31292000
         DC    X'80',AL3(EXCEP)                                         31293000
         DS    0D                                                       31300000
RETCD    DS    0F                  RETURN CODE FROM KERNEL              31360000
SIMWRK   DS    35D                 WORK AREA FOR KERNEL                 31430000
PAD      DS    6F                  NOT USED - RESERVED FOR MAINTAINENCE 31780000
APSW     EQU   SIMWRK   DS 1F      SAVE OLD PSW FROM ORIGINAL INTERRUPT 31790000
PIEREGS  EQU   SIMWRK+4 DS 5F      SAVE REGS FROM ORIGINAL INTERRUPT    31800000
SIZ      EQU   *                                                        31810000
         EJECT                                                          31850000
* THE SIMULATOR KERNEL                                                  31860000
GRS      EQU   13 ...........SAVE AREA POINTER                          51170000
GRR      EQU   14 ...........RETURN REGISTER                            51240000
GRL      EQU   15 ...........LINK REGISTER                              51310000
GR0      EQU   0 ............CONTAINS CODE FOR OPERATION AT ENTRY       51380000
GR1      EQU   1 ............SCRATCH REGISTERS                          51450000
GR2      EQU   2                                                        51520000
GR3      EQU   3                                                        51590000
GR4      EQU   4                                                        51660000
GR5      EQU   5                                                        51730000
GR6      EQU   6                                                        51800000
GRM      EQU   7 ............MASK REGISTER TO HOLD MASK '7F'            51870000
GR8      EQU   8 ............ADJUST SWITCH FOR DXR                      51940000
GR9      EQU   9 ............RECURSIVE CALL SWITCH                      52010000
GRW      EQU   12 ...........WORK AREA POINTER                          52080000
FR0      EQU   0 ............FLOATING POINT REGISTERS                   52150000
FR2      EQU   2                                                        52220000
FR4      EQU   4                                                        52290000
FR6      EQU   6                                                        52360000
         SPACE                                                          52430000
SAVEAREA DSECT                                                          52500000
         SPACE                                                          52570000
CODE     EQU   * ............INSTRUCTION CODE                           52640000
SAVEGRW  EQU   *+4*17 .......DISPLACEMENT FOR SAVE BUFFER OF GRW        52710000
         DS    18F                                                      52780000
         SPACE                                                          52850000
WORKAREA DSECT                                                          52920000
         SPACE                                                          52990000
SAVEFR0  DS    D ............SAVE BUFFER FOR FR0                        53060000
SAVEFR2  DS    D ............SAVE BUFFER FOR FR2                        53130000
SAVEFR4  DS    D ............SAVE BUFFER FOR FR4                        53200000
SAVEFR6  DS    D ............SAVE BUFFER FOR FR6                        53270000
OPND1    DS    D ............HIGH-ORDER 14 DIGITS OF OPERAND 1          53340000
         DS    D ............LOW-ORDER 14 DIGITS OF OPERAND 1           53410000
         DS    D ............GUARD DIGIT OF OPERAND1                    53480000
OPND2    DS    D ............HIGH-ORDER 14 DIGITS OF OPERAND 2          53550000
         DS    D ............LOW-ORDER 14 DIGITS OF OPERAND 2           53620000
         DS    D ............GUARD DIGIT OF OPERAND2                    53690000
CHAR1    DS    H ............SIGN/CHAR OF HIGH PART OF OPERAND 1        53760000
HCHAR    DS    H ............MAX(/CHAR1/,/CHAR2/)                       53830000
CHAR2    DS    H ............SIGN/CHAR OF HIGH PART OF OPERAND 2        53900000
ERRFLAG  DS    H ............RETURN CODE                                53970000
PADK     DS    D ............NOT USED - RESERVED FOR MAINTAINENCE       53980000
BUFF1    DS    D ............TEMPORARY STORAGES, USED BY DXR ONLY       54040000
BUFF2    DS    D                                                        54110000
         EJECT                                                          54120000
SAVE     DS    18F ..........SAVE AREA FOR RECURSIVE CALL               54250000
NEWWK    EQU   * ............WORKAREA FOR RECURSIVE CALL                54260000
INCR     EQU   NEWWK-SAVEFR0 INCREMENT TO POINT TO NEW WORKAREA         54270000
RSAVEFR0 DS    D ............SAVE BUFFER FOR FR0                        54280000
RSAVEFR2 DS    D ............SAVE BUFFER FOR FR2                        54290000
RSAVEFR4 DS    D ............SAVE BUFFER FOR FR4                        54300000
RSAVEFR6 DS    D ............SAVE BUFFER FOR FR6                        54310000
ROPND1   DS    D ............HIGH-ORDER 14 DIGITS OF OPERAND 1          54320000
         DS    D ............LOW-ORDER 14 DIGITS OF OPERAND 1           54330000
         DS    D ............GUARD DIGIT OF OPERAND1                    54340000
ROPND2   DS    D ............HIGH-ORDER 14 DIGITS OF OPERAND 2          54350000
         DS    D ............LOW-ORDER 14 DIGITS OF OPERAND 2           54360000
         DS    D ............GUARD DIGIT OF OPERAND2                    54370000
RCHAR1   DS    H ............SIGN/CHAR OF HIGH PART OF OPERAND 1        54380000
RHCHAR   DS    H ............MAX(/CHAR1/,/CHAR2/)                       54390000
RCHAR2   DS    H ............SIGN/CHAR OF HIGH PART OF OPERAND 2        54400000
RERRFLAG DS    H ............RETURN CODE                                54410000
RPADK    DS    D ............NOT USED - RESERVED FOR MAINTAINENCE       54420000
SIZE     EQU   *                                                        54430000
         EJECT                                                          54440000
IEAXKALL CSECT                                                          54530000
         ENTRY IEAXKALL                                                 54540000
         SPACE                                                          54880000
         USING WORKAREA,GRW                                             55020000
         USING SAVEAREA,GRS                                             55090000
         USING *,GRL                                                    55160000
         SPACE                                                          55230000
         B     PROLOGA ............NORMAL ENTRY POINT                   55440000
         DC    X'08'                                                    55510000
         DC    CL8'IEAXKALL'                                            55580000
         SPACE                                                          56140000
PROLOGA  STM   GRR,GRW,12(GRS) .SAVE REGISTERS                          56210000
         L     GRW,4(GR1) ...WORK AREA ADDRESSABILITY                   56280000
         L     GR2,0(GR1)                                               56350000
         L     0,0(GR2) .....INSTRUCTION CODE                           56420000
         ST    0,CODE                                                   56490000
         SR    GR8,GR8 ......CLEAR PROGRAM MASK                         56560000
         SPM   GR8                                                      56630000
         IC    GR8,CODE+1 ...PICK UP ADJUST SWITCH                      56650000
         SR    GR9,GR9 ......INDICATE NOT RECURSIVE CALL                56910000
         BAL   GRL,PROLOGC ..ADJUST BASE REGISTER AND MERGE             56980000
         SPACE                                                          57050000
         USING *,GRL                                                    57120000
         SPACE                                                          57190000
QSIM     B     PROLOGB ......ENTRY POINT FOR RECURSIVE ENTRY            57260000
         DC    X'04'                                                    57330000
         DC    CL5'QSIM'                                                57400000
PROLOGB  STM   GRR,GRW,12(GRS) .SAVE REGISTERS                          57470000
         LA    GRW,INCR(GRW) ADVANCE WORK AREA POINTER                  57540000
         ST    GR0,CODE            SAVE REGISTER CODE                   57610000
         LR    GR9,GR0 ......INDICATE RECURSIVE CALL                    57680000
*                                                                       57820000
*     PROLOG SECTION: DETERMINE OPERATION TO BE SIMULATED,              57890000
*                     STORE OPERANDS, SAVE SIGN AND CHAR. OF            57960000
*                     OPERANDS, AND SCALE OPERANDS                      58030000
*                                                                       58100000
PROLOGC  STD   FR0,SAVEFR0 ..SAVE FLOATING POINT REGISTERS              58170000
         STD   FR2,SAVEFR2                                              58240000
         STD   FR4,SAVEFR4                                              58310000
         STD   FR6,SAVEFR6                                              58380000
         MVI   ERRFLAG,X'00' CLEAR RETURN CODE FLAG                     58450000
         LA    GRM,X'7F' ....SET UP MASK REGISTER FOR X'7F'             58520000
         LR    GR1,GR0 ......DETERMINE 1ST OPERAND REGISTER             58590000
         SRL   GR1,4                                                    58660000
         SLL   GR1,4                                                    58730000
         EX    GR1,STORE1 ...STORE HIGH PART OPERAND 1 IN OPND1         58800000
         MVC   CHAR1(1),OPND1 SAVE SIGN/CHARACTERISTIC OF OPERAND 1     58870000
         MVI   OPND1,X'40' ..FORCE + AND CHARACTERISTIC OF X'40'        58940000
         LR    GR2,GR0 ......DETERMINE 2ND OPERAND REGISTER             59010000
         SLL   GR2,4                                                    59080000
         EX    GR2,STORE2 ...STORE HIGH PART OPERAND 2 IN OPND2         59150000
         MVC   CHAR2(1),OPND2 SAVE SIGN/CHARACTERISTIC OF OPERAND 2     59220000
         MVI   OPND2,X'40' ..FORCE + AND CHARACTERISTIC OF X'40'        59230000
         SPACE                                                          59430000
         CLI   CODE+2,X'35' .IF OP CODE = '35', GO TO LRER SECTION      59500000
         BE    LRER                                                     59570000
         CLI   CODE+2,X'27' .IF OP CODE = '27', GO TO MXDR SECTION      59640000
         BE    MXDR                                                     59710000
         SPACE                                                          59780000
         LA    GR2,X'20'(GR2)                                           59920000
         EX    GR2,STORE3 ...STORE LOW PART OPERAND 2 IN OPND2+8        59990000
         MVI   OPND2+8,X'32' FORCE SIGN + AND CHAR. OF X'32'            60060000
         SPACE                                                          60200000
         CLI   CODE+2,X'25' .IF OP CODE = '25', GO TO LRDR SECTION      60270000
         BE    LRDR                                                     60340000
         SPACE                                                          60410000
         LA    GR1,X'20'(GR1)                                           60550000
         EX    GR1,STORE4 ...STORE LOW PART OPERAND 1 IN OPND1+8        60620000
         MVI   OPND1+8,X'32' FORCE SIGN + AND CHAR. OF X'32'            60690000
         SPACE                                                          60760000
         CLI   CODE+2,X'36' .IF OP CODE = '36', GO TO AXR SECTION       60900000
         BE    AXR                                                      60970000
         CLI   CODE+2,X'37' .IF OP CODE = '37', GO TO SXR SECTION       61040000
         BE    SXR                                                      61110000
         SPACE                                                          61180000
         SDR   FR0,FR0 ......PRENORMALIZE OPERANDS                      61320000
         STD   FR0,OPND1+16 ...CLEAR GUARD DIGIT                        61390000
         BAL   GRR,NORM .......NORMALIZE 1ST OPERAND                    61460000
         LM    GR3,GR6,OPND1 ..SAVE 1ST OPERAND, AND MOVE 2ND           61530000
         MVC   OPND1(16),OPND2 ..OPERAND FOR NORMALIZATION              61600000
         BAL   GRR,NORM .......NORMALIZE 2ND OPERAND                    61670000
         MVC   OPND2(16),OPND1 SWITCH BACK OPERANDS SINCE DXR           61740000
         STM   GR3,GR6,OPND1 ....IS NOT COMMUTATIVE                     61810000
         SPACE                                                          61880000
         CLI   CODE+2,X'26' .IF OP CODE = '26', GO TO MXR SECTION       62020000
         BE    MXR                                                      62090000
         CLI   CODE+2,X'2D' .IF OP CODE = '2D', GO TO DXR SECTION       62230000
         BE    DXR                                                      62300000
         MVI   ERRFLAG,X'FF' IF OP CODE IS NONE OF THE ABOVE,           62370000
         B     EPILOG6 ........ILLEGAL OP CODE.  SET FLAG AND RETURN    62440000
         SPACE 3                                                        62510000
EPILOGA  IC    GR1,OPND1 ....PRE-EPILOG FOR DXR                         62580000
         NR    GR1,GRM ........CHAR. OF SCALED RESULT IN GR1            62650000
         IC    GR2,CHAR2 ......CHAR. OF 2ND OPERAND IN GR2              62720000
         NR    GR2,GRM                                                  62790000
         B     EPILOGB1                                                 62930000
         SPACE                                                          63000000
EPILOGB  IC    GR1,CHAR2 ....PRE-EPILOG FOR MXR AND MXDR                63070000
         NR    GR1,GRM                                                  63140000
         IC    GR2,OPND1                                                63210000
         NR    GR2,GRM ........SUM OF CHAR. OF SCALED RESULT            63280000
         AR    GR1,GR2 ..........AND CHAR. OF 2ND OPERAND IN GR1        63350000
         LA    GR2,X'80' ......TWICE CHAR. BIAS IN GR2                  63420000
         SPACE                                                          63490000
EPILOGB1 LA    GR4,EPILOG5 ..PRE-EPILOG FOR DXR, MXR, MXDR MERGE HERE   63560000
         IC    GR0,CHAR1 ......CHAR. OF 1ST OPERAND TO GR0              63700000
         NR    GR0,GRM                                                  63770000
         XC    CHAR1(1),CHAR2 .MULTIPLY SIGNS OF THE 2 OPERANDS         63840000
         B     EPILOG                                                   63980000
         SPACE                                                          64050000
EPILOGC  LA    GR4,EPILOG5 ..PRE-EPILOG FOR AXR AND SXR                 64120000
         CLI   OPND1+1,X'00'                                            64190000
         BNE   EPILOGC1 .......IF SCALED RESULT NOT 0, SKIP             64260000
         NI    CHAR1,X'7F' ....IF SCALED RESULT 0, SET SIGN +           64330000
         TM    CODE,X'10'                                               64400000
         BNO   EPILOG4 ........IF SIGNIF. MASK OFF, SKIP                64470000
         MVI   ERRFLAG,X'14' ..IF SIGNIF. MASK ON, REPORT THE           64540000
         MVI   OPND1,X'40' ......EXCEPTION, AND FORCE CHAR. OF X'40'    64610000
         B     EPILOGD1 .......SKIP                                     64680000
         SPACE                                                          64750000
EPILOGC1 MVI   ERRFLAG,X'40' ..IF SIGN OF RESULT IS NEGATIVE,           64820000
         TM    CHAR1,X'80' ......SET THE FLAG OF X'40'                  64890000
         BO    EPILOGD1 .......IF SIGN OF RESULT IS POSITIVE,           64960000
         MVI   ERRFLAG,X'80' ....SET THE FLAG OF X'80'                  65030000
         B     EPILOGD1 .......SKIP                                     65100000
         SPACE                                                          65170000
EPILOGD  LA    GR4,EPILOG6 ..PRE-EPILOG FOR LRER AND LRDR.  IN THIS     65240000
*                            CASE, SET TO SKIP LOADING 2ND REGISTER     65310000
         MVC   CHAR1(1),CHAR2 .MOVE SIGN/CHAR OF 2ND TO THAT OF 1ST     65380000
         SPACE                                                          65450000
EPILOGD1 IC    GR0,CHAR1 ....PRE-EPILOG FOR AXR, SXR, LRER, LRDR        65520000
         NR    GR0,GRM ........MERGE HERE                               65590000
         IC    GR1,OPND1 ......CHAR OF BIGGER OR ONLY OPERAND IN GR0    65660000
         NR    GR1,GRM ........CHAR OF SCALED RESULT IN GR1             65730000
         LA    GR2,X'40' ......CHAR BIAS IN GR2                         65800000
         SPACE                                                          65940000
*                                                                       66010000
*     EPILOG NUCLEUS: DETERMINE CHAR. AND SIGN OF RESULT                66080000
*                     TEST EXPONENT OVERFLOW AND UNDERFLOW              66150000
*                     PROVIDE EXPONENT WRAP-AROUND IF CALLED FOR        66220000
*                     LOAD RESULT INTO CORRECT REGISTER(S)              66290000
*                     RESTORE OTHER REGISTERS AND PROGRAM MASK          66360000
*                                                                       66430000
EPILOG   CLC   OPND1(4),ZERO IF SCALED RESULT IS NORMAL 0, SKIP         66500000
         BE    EPILOG4                                                  66570000
         AR    GR1,GR0 ......OTHERWISE, CHAR. OF ANS = GR0+GR1-GR2      66640000
         SR    GR1,GR2                                                  66710000
         BNM   EPILOG2 ......IF CHAR. IS NOT NEGATIVE, SKIP             66780000
         SPACE                                                          66850000
         TM    CODE,X'20' ...UNDERFLOW CASE                             66920000
         BO    EPILOG1                                                  66990000
         SDR   FR0,FR0 ......IF UNDERFLOW MASK IS OFF, WE SHOULD        67060000
         STD   FR0,OPND1 ......GIVE NORMAL ZERO SILENTLY                67130000
         STD   FR0,OPND1+8                                              67200000
         B     EPILOG4 ........SKIP                                     67270000
EPILOG1  OI    ERRFLAG,X'08' IF UNDFLOW MASK IS ON, SET FLAG            67340000
         SPACE                                                          67410000
EPILOG2  CR    GR1,GRM                                                  67480000
         BNH   EPILOG3 ......IF CHAR. IS HIGHER THAN X'7F',             67550000
         OI    ERRFLAG,X'04' ..OVERFLOW CASE.   SET FLAG FOR THIS       67620000
         SPACE                                                          67690000
EPILOG3  NR    GR1,GRM ......CUT DOWN TO NORMAL CHAR. RANGE             67760000
         LA    GR2,X'FF2'(GR1)                                          67830000
         NR    GR2,GRM ......FIX UP LOW ORDER CHARACTERISTIC            67900000
         NI    CHAR1,X'80'                                              67970000
         IC    GR0,CHAR1 ....SIGN BIT FOR THE ANSWER                    68040000
         OR    GR1,GR0 ......SIGN AND CHAR. OF HIGH PART ANS            68110000
         STC   GR1,OPND1                                                68180000
         OR    GR2,GR0 ......SIGN AND CHAR. OF LOW PART ANS             68250000
         STC   GR2,OPND1+8                                              68320000
         SPACE                                                          68390000
EPILOG4  IC    GRM,CODE+3 ...LOCATE RESULT (1ST OPERAND) REGISTER       68460000
         SRL   GRM,4                                                    68530000
         SLL   GRM,2 ........MULTIPLY REG DESIGNATION BY 4              68600000
         LD    FR0,OPND1 ....OVERLAY SAVE BUFFER OF RESULT REGISTER     68670000
         STD   FR0,SAVEFR0(GRM) WITH HIGH PART RESULT                   68740000
         BR    GR4 ..........IF LRER OR LRDR, WE SKIP TO EPILOG6        68880000
EPILOG5  LD    FR0,OPND1+8 ..OVERLAY SAVE BUFFER OF COMPANION RESULT    69020000
         STD   FR0,SAVEFR2(GRM) REGISTER WITH LOW PART RESULT           69090000
         SPACE                                                          69160000
EPILOG6  LD    FR0,SAVEFR0 ..RESTORE ALL FLOATING POINT REGISTERS       69230000
         LD    FR2,SAVEFR2                                              69300000
         LD    FR4,SAVEFR4                                              69370000
         LD    FR6,SAVEFR6                                              69440000
         LM    GRR,GR8,12(GRS) RESTORE OTHER REGISTERS                  69510000
         SPM   GRR ............RESTORE PROGRAM MASK                     69580000
         SR    GRL,GRL                                                  69650000
         IC    GRL,ERRFLAG ....PICK UP ERRFLAG IN GRL                   69720000
         LTR   GR9,GR9 ........IS THIS A RECURSIVE CALL ?               69860000
         L     GR9,56(GRS) ....RESTORE REGISTER 9                       69930000
         L     GRW,SAVEGRW ....RESTORE REGISTER POINTING TO WORK AREA   70000000
         MVI   12(GRS),X'FF' ..RETURN                                   70140000
         BCR   7,GRR ..........BRANCH IF RECURSIVE CALL                 70280000
         L     GRW,4(GR1) .....AREA TO STORE RETURN CODE                70420000
         ST    GRL,0(GRW) .....SAVE RETURN CODE                         70490000
         TM    3(GRW),X'1C' ...EXCEPTIONAL CONDITION ?                  70500000
         L     GRW,SAVEGRW ....RESTORE REGISTER POINTING TO WORK AREA   70510000
         BCR   8,GRR ..........IF RETURN CODE ZERO, TAKE NORMAL RETURN  70700000
         L     GRL,8(GR1) .....GET LOCATION OF ERROR RETURN             70770000
         BR    GRL ............TAKE ERROR RETURN                        70840000
         EJECT                                                          70910000
LRER     LE    FR0,OPND2 ....DOUBLE TO SHORT ROUNDING                   71050000
         CLI   OPND2+4,X'80' ..TEST THE ROUND BIT                       71120000
         BL    LRER1                                                    71190000
         AU    FR0,INCR1 ......IF ROUND-UP, ADD 1 IN THE LAST BIT       71260000
LRER1    STE   FR0,OPND1 ......OVERLAY RESULT OVER 1ST OPERAND          71330000
         B     EPILOGD ........DONE                                     71400000
         SPACE 2                                                        71470000
LRDR     LD    FR0,OPND2 ....EXTENDED TO DOUBLE ROUNDING                71540000
         CLI   OPND2+9,X'80' ..TEST THE ROUND BIT                       71610000
         BL    LRDR1                                                    71680000
         AW    FR0,INCR2 ......IF ROUND-UP, ADD 1 IN THE LAST BIT       71750000
LRDR1    STD   FR0,OPND1 ......OVERLAY RESULT OVER 1ST OPERAND          71820000
         B     EPILOGD ........DONE                                     71890000
         SPACE 2                                                        71960000
SXR      XI    CHAR2,X'80' ..SUBTRACTION.   INVERT SIGN OF OPERAND 2    72030000
         SPACE                                                          72100000
AXR      SDR   FR4,FR4 ......ADDITION                                   72170000
         STD   FR4,OPND1+16 ...CLEAR GUARD DIGIT OF BOTH OPERANDS       72240000
         STD   FR4,OPND2+16                                             72310000
         IC    GR0,CHAR1 ......COMPARE CHAR. OF OPERAND 1 AND           72380000
         IC    GR1,CHAR2 ........OPERAND 2.   HIGHER CHAR. IS STORED    72450000
         NR    GR0,GRM ..........IN HCHAR, AND SET GR2 POINTING TO      72520000
         NR    GR1,GRM ..........OPERAND WITH LOWER CHAR                72590000
         STC   GR0,HCHAR                                                72660000
         LA    GR2,OPND2                                                72730000
         SR    GR0,GR1                                                  72800000
         BP    AXR1                                                     72870000
         BZ    AXR3 ...........IF BOTH CHAR'S ARE SAME, SKIP            72940000
         STC   GR1,HCHAR                                                73010000
         LA    GR2,OPND1                                                73080000
         SPACE                                                          73150000
AXR1     LNR   GR1,GR0 ........NEGATIVE OF CHAR DIFFERENCE              73220000
         C     GR1,LLIM                                                 73290000
         BNL   AXR2 ...........IF DIFFERENCE IN CHAR'S IS GREATER       73360000
         STD   FR4,0(GR2) .......THAN 28, ZERO OUT OPERAND TO BE        73430000
         STD   FR4,8(GR2) .......SHIFTED                                73500000
         B     AXR3 ...........SKIP                                     73570000
         SPACE                                                          73640000
AXR2     LA    GR1,X'40'(GR1) .SUBTRACT DIFFERENCE IN CHAR'S FROM       73710000
         STC   GR1,0(GR2) .......X'40' AND AFFIX IT TO SMALLER OPERAND  73780000
         LA    GR1,X'FF2'(GR1) AFFIX CORRESPONDING CHAR. TO LOW PART    73850000
         STC   GR1,8(GR2) .....NOW WE ALIGN THE SMALLER OPERAND WITH    73920000
         LD    FR0,0(GR2) .......THE LARGER OPERAND, BY UNNORMALIZING   73990000
         LDR   FR2,FR0 ..........THE FORMER WITH CHAR. OF X'40'         74060000
         AW    FR0,CH40 .......SHIFT HIGH ORDER FRACTION                74130000
         STD   FR0,0(GR2) .....HIGH ORDER PART OF ALIGNED RESULT        74200000
         ADR   FR0,FR4 ........NORMALIZE HIGH ORDER PART                74270000
         SDR   FR2,FR0 ........GET DIGITS OF H.O. FRACTION SHIFTED      74340000
         LDR   FR0,FR2 ..........OUT OF H.O. FIELD                      74410000
         AW    FR0,CH32 .......IF NECESSARY SHIFT H.O. PART FURTHER     74480000
         ADR   FR4,FR0 ........NORMALIZE IT                             74550000
         SDR   FR2,FR4 ........GET DIGITS OF H.O. FRACTION SHIFTED      74620000
         LD    FR6,8(GR2) .......OUT OF L.O. PART OF OPERAND            74690000
         AWR   FR0,FR6 ........SHIFTED L.O. FRAC + LOST H.O. DIGITS     74760000
         AW    FR0,CH32 .......THIS IS NECESSARY IF THE LATTER WAS 0    74830000
         STD   FR0,8(GR2) .....LOW ORDER PART OF ALIGNED RESULT         74900000
         SDR   FR0,FR4                                                  74970000
         SDR   FR6,FR0 ........GET DIGITS OF L.O. OPERAND SHIFTED       75040000
         ADR   FR2,FR6 ..........OUT OF L.O. PART OF OPERAND            75110000
         AW    FR2,CH31 .......SHIFT REMAINING DIGITS INTO GUARD        75180000
         STD   FR2,16(GR2) ......DIGIT                                  75250000
         SPACE                                                          75320000
AXR3     L     GR0,CHAR1 ......COMBINE SIGN OF 2 OPERANDS               75390000
         X     GR0,CHAR2                                                75460000
         LTR   GR0,GR0 ........IF THEY ARE OF OPPOSITE SIGN, JUMP       75530000
         BM    AXR8                                                     75600000
         SPACE                                                          75670000
         MVI   OPND1+8,X'00' ..CASE OF LIKE SIGN.   ADD MAGNITUDE       75740000
         MVI   OPND2+8,X'00' ..CLEAR CHAR OF L.O. PARTS OF OPERANDS     75810000
         LD    FR0,OPND1 ......HIGH PART ACCUMULATED IN FR0             75880000
         LM    GR0,GR1,OPND1+8 LOW PART ACCUMULATED IN GR0, GR1         75950000
         AL    GR1,OPND2+12 ...LOW 8 DIGITS OF L.O. SUM                 76020000
         BC    12,AXR4 ........ADD ANY CARRY TO H.O. 6 DIGITS           76090000
         AL    GR0,INCR3 ........OF L.O. SUM                            76160000
AXR4     AL    GR0,OPND2+8 ....H.O. 6 DIGITS OF L.O. SUM                76230000
         C     GR0,ULIM1                                                76300000
         BL    AXR5 ...........IF THERE WAS ANY CARRY INTO BIT 7,       76370000
         AW    FR0,INCR2 ........ADD LOW BIT TO H.O. SUM IN FR0         76440000
AXR5     AW    FR0,OPND2 ......H.O. SUM                                 76510000
         BNZ   AXR6 ...........ENSURE THAT H.O. SUM HAS CHAR. X'40'     76580000
         LD    FR0,CH40 .........IF FRACTION IS ZERO                    76650000
AXR6     CE    FR0,ULIM2                                                76720000
         BL    AXR7 ...........IF SUM LESS THAN 1.0, OK.   JUMP         76790000
         SPACE                                                          76860000
         L     GR2,OPND1+4 ....IF SUM IS GE 1.0, CHAR. WAS RAISED       76930000
         AL    GR2,OPND2+4 ....RECONSTRUCT LOST 15TH DIGIT BY ADDING    77000000
         SLL   GR2,24 ...........14TH DIGITS OF OPERANDS, ADD IT ON     77070000
         ALR   GR0,GR2 ..........TO HEAD OF L.O. SUM, AND SHIFT THE     77140000
         SRDL  GR0,4 ............RESULT 1 DIGIT TO RIGHT                77210000
         SPACE                                                          77280000
AXR7     STD   FR0,OPND1 ......STORE H.O. SUM                           77350000
         STM   GR0,GR1,OPND1+8 STORE L.O. SUM                           77420000
         IC    GR1,OPND1 ......COMPUTE AND AFFIX L.O. CHAR              77490000
         LA    GR1,X'FF2'(GR1)                                          77560000
         STC   GR1,OPND1+8                                              77630000
         LD    FR4,OPND1+16 ...ADD GUARD DIGITS IN PREPARATION FOR      77700000
         AW    FR4,OPND2+16 .....NORMALIZATION.   IF SUM IS GE 1.0      77770000
         B     AXR14 ............THIS IS IRRELEVANT.   JUMP TO MERGE    77840000
         SPACE                                                          77910000
AXR8     LA    GR0,3 ..........CASE OF UNLIKE SIGN.   WE SUBTRACT       77980000
         SR    GR1,GR1 ..........SMALLER OPERAND FROM LARGER OPERAND    78050000
AXR9     LD    FR0,OPND1(GR1) .DETERMINE WHICH OPERAND HAS LARGER       78120000
         CD    FR0,OPND2(GR1) ...MAGNITUDE.   WE MUST COMPARE ALL       78190000
         BL    AXR10 ............3 COMPONENTS                           78260000
         BH    AXR11                                                    78330000
         LA    GR1,8(GR1)                                               78400000
         BCT   GR0,AXR9                                                 78470000
         B     AXR11                                                    78540000
AXR10    LM    GR0,GR5,OPND1 ..IF /OPERAND 2/ IS GREATER THAN           78610000
         MVC   OPND1(24),OPND2 ../OPERAND 1/, SWITCH THEM, SO THAT      78680000
         STM   GR0,GR5,OPND2 ....THE LATTE IS ALWAYS LARGER             78750000
         MVC   CHAR1(1),CHAR2 .ALSO REPLACE CHAR1 WITH CHAR2 FOR SIGN   78820000
         SPACE                                                          78890000
AXR11    LD    FR0,OPND1 ....../OPERAND 1/ - /OPERAND 2/ STARTS HERE    78960000
         LD    FR2,OPND1+8                                              79030000
         LD    FR4,OPND1+16                                             79100000
         SW    FR4,OPND2+16 ...SUBTRACT GUARD DIGIT                     79170000
         BNM   AXR12                                                    79240000
         AW    FR4,INCR4 ......BORROW FROM L.O. DIFFERENCE IF NEEDED    79310000
         SW    FR2,INCR4                                                79380000
AXR12    SW    FR2,OPND2+8 ....SUBTRACT L.O. OPERANDS                   79450000
         BNM   AXR13                                                    79520000
         AW    FR2,INCR5 ......BORROW FROM H.O. DIFFERENCE IF NEEDED    79590000
         AW    FR2,INCR5 ........DO THIS IN 2 STEPS TO PRESERVE CHAR    79660000
         SW    FR0,INCR2 ........OF X'32'                               79730000
AXR13    SW    FR0,OPND2 ......SUBTRACT H.O. OPERANDS                   79800000
         STD   FR0,OPND1                                                79870000
         STD   FR2,OPND1+8                                              79940000
AXR14    STD   FR4,OPND1+16                                             80010000
         BAL   GRR,NORM .......NORMALIZE THE SUM/DIFFERENCE             80080000
         NI    CHAR1,X'80' ....RECONSTRUCT SIGN AND CHAR. OF OPERAND    80150000
         OC    CHAR1(1),HCHAR ...WITH HIGHER MAGNITUDE                  80220000
         B     EPILOGC ........DONE                                     80290000
         SPACE 2                                                        80360000
MXDR     LD    FR0,OPND1 ....DOUBLE BY DOUBLE MULTIPLY                  80430000
         MD    FR0,OPND2 ......H.O. 14 DIGITS OF PRODUCT, NORMALIZED    80500000
         LM    GR0,GR1,OPND1 ..PICK UP 1ST OPERAND IN GR0, GR1, AND     80570000
         SLDL  GR0,4 ............DECOMPOSE IT INTO H.O. 7 DIGITS        80640000
         SRL   GR1,4 ............AND L.O. 7 DIGITS                      80710000
         LM    GR2,GR3,OPND2 ..PICK UP 2ND OPERAND IN GR2, GR3, AND     80780000
         SLDL  GR2,4 ............DECOMPOSE IT INTO H.O. 7 DIGITS        80850000
         SRL   GR3,4 ............AND L.O. 7 DIGITS                      80920000
         LR    GR5,GR0                                                  80990000
         LR    GR0,GR2                                                  81060000
         MR    GR4,GR3 ........H.O. 7 DGT OPND1 * L.O. 7 DGT OPND2      81130000
         MR    GR2,GR1 ........L.O. 7 DGT OPND1 * L.O. 7 DGT OPND2      81200000
         MR    GR0,GR0 ........L.O. 7 DGT OPND1 * H.O. 7 DGT OPND2      81270000
         SLDL  GR2,4 ..........SUM UP THESE PRODUCT WITH CORRECT        81340000
         ALR   GR2,GR1 ..........SCALING, AND IGNORE CARRY INTO H.O.    81410000
         ALR   GR2,GR5 ..........14 DIGITS                              81480000
         SRDL  GR2,4                                                    81550000
         SPACE                                                          81620000
         STM   GR2,GR3,OPND1+8 STORE L.O. UNNORMALIZED RESULT           81690000
         MVI   OPND1+8,X'32' ..FLOAT IT WITH PROPER CHAR.               81760000
         STD   FR0,OPND1 ......STORE H.O. NORMALIZED RESULT             81830000
         LD    FR2,CH40 .......SHIFT OUT FROM H.O. RESULT THE FIELD     81900000
         AWR   FR2,FR0  .........WHICH OVERLAPS WITH L.O. RESULT        81970000
         AD    FR2,ZERO .......NORMALIZE IT                             82040000
         SDR   FR2,FR0  .......NEGATIVE OF OVERLAPPING FIELD            82110000
         AD    FR2,OPND1+8 ....REMOVE OVERLAPPING PART FROM L.O. PART   82180000
         BAL   GRR,NORM1 ......GO TO NORM1 TO ALIGN L.O. PART           82250000
         B     EPILOGB ........DONE                                     82320000
         SPACE 2                                                        82390000
MXR      LR    GR4,GRL ......EXTENDED BY EXTENDED MULTIPLY              82460000
         DROP  GRL ............SWITCH BASE REGISTER                     82530000
         USING QSIM,GR4                                                 82600000
         LR    GR3,GRS ........SWITCH SAVE AREA POINTER                 82670000
         LA    GRS,SAVE                                                 82740000
         ST    GR3,4(GRS)                                               82810000
         ST    GRS,8(GR3)                                               82880000
         SPACE                                                          82950000
         LD    FR0,OPND1+8 ....(A1+A2)*(B1+B2)                          83020000
         MXD#  FR0,OPND2+8 ....A2*B2                                    83090000
         LD    FR4,OPND1                                                83160000
         MXD#  FR4,OPND2+8 ....A1*B2                                    83230000
         AXR#  FR0,FR4 ........A1*B2+A2*B2                              83300000
         LD    FR4,OPND1+8                                              83370000
         MXD#  FR4,OPND2 ......A2*B1                                    83440000
         AXR#  FR0,FR4 ........A2*B1+A1*B2+A2*B2                        83510000
         LD    FR4,OPND1                                                83580000
         MXD#  FR4,OPND2 ......A1*B1                                    83650000
         AXR#  FR0,FR4 ........A1*B1+A2*B1+A1*B2+A2*B2                  83720000
         SPACE                                                          83790000
         STD   FR0,OPND1                                                83860000
         STD   FR2,OPND1+8                                              83930000
         DROP  GR4 ............RESTORE BASE REGISTER                    84000000
         USING QSIM,GRL                                                 84070000
         LR    GRS,GR3 ........RESTORE SAVEAREA POINTER                 84140000
         B     EPILOGB ........DONE                                     84210000
         SPACE 2                                                        84280000
DXR      CLI   OPND2+1,X'00' DIVIDE SIMULATION                          84420000
         BNZ   DXR1 ...........IF DIVISOR NE 0, SKIP AND CONTINUE       84490000
         MVI   ERRFLAG,X'0C' ..IF DIVIDE CHECK, SET FLAG OF '0C'        84560000
         CLI   OPND1+1,X'00' ....OR '10' DEPENDING ON WHETHER  THE      84630000
         BNZ   EPILOG6 ..........DIVIDEND IS NON-ZERO OR ZERO           84700000
         MVI   ERRFLAG,X'10'                                            84770000
         B     EPILOG6 ........ABORT THE OPERATION                      84840000
         SPACE                                                          84910000
DXR1     EQU   *                                                        84980000
         LR    GR4,GRL ........DIVISOR IS NOT ZERO                      85120000
         DROP  GRL ............SWITCH BASE REGISTER                     85190000
         USING QSIM,GR4                                                 85260000
         LR    GR3,GRS ........SWITCH SAVEAREA POINTER                  85330000
         LA    GRS,SAVE                                                 85400000
         ST    GR3,4(GRS)                                               85470000
         ST    GRS,8(GR3)                                               85540000
         SPACE                                                          85610000
         LD    FR4,OPND1 ......(A1+A2)/(B1+B2) WITH EXACT TRUNCATION    85750000
         LD    FR6,OPND1+8                                              85820000
         LDR   FR0,FR4                                                  85890000
         DD    FR0,OPND2 ......Q1=A1/B1 APPROX. H.O. 14 DIGITS OF A/B   85960000
         MD    FR0,DECR .......UNDERESTIMATE Q1 BY Q1*16**-12.          86030000
         STD   FR0,BUFF1 ........THIS DONE SO THAT Q1 AND Q2+Q3 WILL    86100000
         MXD#  FR0,OPND2 ........HAVE THE SAME SIGN                     86170000
         SXR#  FR4,FR0 ........(A1+A2)-Q1*B1  EXACT                     86240000
         LD    FR0,BUFF1                                                86310000
         MXD#  FR0,OPND2+8                                              86380000
         SXR#  FR4,FR0 ........(A1+A2)-Q1*(B1+B2)  CALL THIS A3+A4      86450000
         SPACE                                                          86520000
         LDR   FR0,FR4                                                  86590000
         DD    FR0,OPND2 ......Q2=A2/B1  ESTIMATE FOR NEXT 14 DIGIT     86660000
         STD   FR0,BUFF2                                                86730000
         MXD#  FR0,OPND2                                                86800000
         SXR#  FR4,FR0 ........(A3+A4)-Q2*B1                            86870000
         LD    FR0,BUFF2                                                86940000
         MD    FR0,OPND2+8                                              87010000
         SDR   FR4,FR0 ........(A3+A4)-Q2*(B1+B2)=A-(Q1+Q2)*B SET =A5   87080000
         SPACE                                                          87150000
         DD    FR4,OPND2 ......Q3=A5/B1  REL. ACCURACY ABOUT 16**-38    87220000
         LE    FR0,BUFF1                                                87290000
         ME    FR0,INCR6 ......CRANK Q3 BY Q1*16**-35, SO THAT          87360000
         ADR   FR4,FR0 ..........Q1+Q2+Q3 IS NEVER UNDERESTIMATE        87430000
         LD    FR0,BUFF2                                                87500000
         SDR   FR2,FR2                                                  87570000
         AXR#  FR4,FR0 ........Q2+Q3                                    87640000
         LD    FR0,BUFF1                                                87710000
         AXR#  FR4,FR0 ........Q=Q1+Q2+Q3 TRUNCATED                     87780000
         LTR   GR8,GR8 ........SHOULD WE ADJUST ?                       87850000
         BNZ   DXR2 ...........NO - BRANCH                              87920000
         SPACE                                                          87990000
         STD   FR4,BUFF1 ......THERE IS A FAINT CHANCE THAT Q IS        88060000
         STD   FR6,BUFF2 ........ROUNDED UP WHERE IT SHOULDN'T          88130000
         MXD#  FR4,OPND2 ......SO WE VERIFY THE EXACTNESS OF TRUNC.     88200000
         LD    FR0,OPND1 ......CALL Q=Q1+Q2 ANEW                        88270000
         LD    FR2,OPND1+8                                              88340000
         SXR#  FR0,FR4 ........A-Q1*B1                                  88410000
         LD    FR4,BUFF1                                                88480000
         MXD#  FR4,OPND2+8                                              88550000
         SXR#  FR0,FR4 ........A-Q1*B1-Q1*B2=A-Q1*B                     88620000
         LD    FR4,BUFF2                                                88690000
         MXD#  FR4,OPND2                                                88760000
         SXR#  FR0,FR4 ........A-Q1*B-Q2*B1                             88830000
         LD    FR4,BUFF2                                                88900000
         MXD#  FR4,OPND2+8 ....Q2*B2                                    88970000
         SXR#  FR0,FR4 ........A-Q*B COMPUTED EXACTLY                   89040000
         LD    FR4,BUFF1 ......RELOAD Q1 AND Q2                         89110000
         LD    FR6,BUFF2                                                89180000
         LTDR  FR0,FR0                                                  89320000
         BNM   DXR2 ...........IF Q WAS NOT OVERESTIMATE, OK.  SKIP     89460000
         SPACE                                                          89530000
         MVC   BUFF2+1(7),ZERO+1 IF Q WAS OVER-ESTIMATE, PREPARE        89600000
         LD    FR0,BUFF2 ........DECREMENTER WITH CHAR = CHAR(Q)-14     89670000
         LE    FR2,INCR6 ........AND FRACTION OF 1 IN THE 15TH DIGIT    89740000
         SXR#  FR4,FR0 ........DECREMENT Q                              89810000
         SPACE                                                          89880000
DXR2     STD   FR4,OPND1                                                89950000
         STD   FR6,OPND1+8                                              90020000
         DROP  GR4                                                      90160000
         USING QSIM,GRL .......RESTORE BASE REGISTER                    90230000
         LR    GRS,GR3 ........RESTORE SAVEAREA POINTER                 90300000
         B     EPILOGA ........DONE                                     90440000
         SPACE 2                                                        90510000
NORM     TM    OPND1+1,X'F0' NORMALIZATION SECTION                      90580000
         BCR   7,GRR ..........IF OPND1 ALREADY NORMAL, RETURN          90650000
         LD    FR0,OPND1 ......LOAD OPND1 IN FR0-FR2-FR4                90720000
         LD    FR2,OPND1+8                                              90790000
         LD    FR4,OPND1+16                                             90860000
         AD    FR0,ZERO .......NORMALIZE H.O. PART                      90930000
         LDR   FR6,FR0                                                  91000000
         ADR   FR0,FR2 ........NORMAL SUM OF H.O. AND L.O. PART         91070000
         ADR   FR4,FR0 ........ADD GUARD DIGIT TO COMPLETE H.O. PART    91140000
         STD   FR4,OPND1 ......STORE IT                                 91210000
         SDR   FR4,FR0 ........CONTRIBUTION TO H.O. PART BY GUARD DGT   91280000
         SDR   FR0,FR6 ........CONTRIBUTION TO H.O. PART BY L.O. PART   91350000
         SDR   FR2,FR0 ........L.O. PART YET TO BE ACCOUNTED FOR        91420000
         LTDR  FR4,FR4 ........IF GUARD DIGIT ALREADY HAS CONTRIBUTED   91490000
         BNZ   NORM1 ............TO H.O. SUM, SKIP                      91560000
         AD    FR2,OPND1+16 ...OTHERWISE ADD GUARD DIGIT TO L.O. SUM    91630000
         SPACE                                                          91700000
NORM1    IC    GR1,OPND1 ......PREPARE UNNORMALIZER WITH CHAR 14 LESS   91770000
         LA    GR1,X'FF2'(GR1) ..THAN THAT OF NORMALIZED H.O. PART      91840000
         SLL   GR1,24                                                   91910000
         SR    GR2,GR2                                                  91980000
         STM   GR1,GR2,OPND1+8                                          92050000
         AW    FR2,OPND1+8 ....UNNORMALIZE L.O. SUM SO AS TO BE         92120000
         STD   FR2,OPND1+8 ......ALIGNED WITH H.O. SUM                  92190000
         BR    GRR ..........DONE                                       92260000
         SPACE 3                                                        92330000
STORE1   STD   FR0,OPND1 ......INSTRUCTIONS TO BE EXECUTED TO BRING     92400000
STORE2   STD   FR0,OPND2 ........IN THE OPERANDS                        92470000
STORE3   STD   FR0,OPND2+8                                              92540000
STORE4   STD   FR0,OPND1+8                                              92610000
         DS    0F                                                       92680000
INCR6    DC    X'1E100000' ....16**-35                                  92750000
INCR1    DC    X'40000001' ....FOR ROUNDING                             92890000
INCR3    DC    X'00000001' ....FOR CARRY BIT                            92960000
LLIM     DC    F'-28'      ....TO LIMIT SHIFT                           93030000
ULIM1    DC    X'01000000' ....TO TEST CARRY                            93100000
ULIM2    DC    X'41100000' ....TO TEST CARRY   1.0                      93170000
ZERO     DC    D'0' ..................NORMAL ZERO                       93310000
DECR     DC    X'40FFFFFFFFFFFF00' ...1-16**-12                         93380000
CH31     DC    X'3100000000000000' ...GUARD DGT SCALING CHAR            93520000
CH32     DC    X'3200000000000000' ...L.O. OPERAND SCALING CHAR         93590000
CH40     DC    X'4000000000000000' ...H.O. OPERAND SCALING CHAR         93660000
INCR2    DC    X'4000000000000001' ...FOR ROUNDING                      93730000
INCR4    DC    X'3100000000000010' ...FOR BORROW BY GUARD DIGIT         93800000
INCR5    DC    X'3280000000000000' ...FOR BORROW BY L.O. DIGIT          93870000
         END                                                            94220000
