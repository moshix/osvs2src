         TITLE ' IED1303D - TCAM COMMAND SCHEDULER '                    00500010
IED1303D CSECT                                                          00502010
IED1303D CSECT                                                          00505010
*A375000,476200,479200,925000                                    A50213 00510010
*C415000                                                         A50213 00520010
*D300000,375000,540000                                           A50213 00530010
*A365000,475000,810000,865000                                     M2174 00570010
*C135000,155000-160000,360000-365000,415000,465000,755000-765000  M2174 00640010
*D355000                                                          M2174 00710010
*A665000,880000                                                  A42415 00800010
*C415000,550000-560000                                           A42415 01100010
*C465000,477400,760000-765000                                    X01004 01180010
*D811000-815000,855000                                           X01004 01260010
*A882000                                                         X02004 01340010
*C575000,730000-750000                                           X02004 01420010
*C744000                                                        OX02176 01420110
*THIS IS A DUMMY APAR TO CORRECT FICHE FLAGGING PROBLEM        @OZ19773 01420210
**********************************************************************  01500010
*                                                                     * 02000010
*TITLE: 'IGC1303D'-TCAM COMMAND SCHEDULER                             * 02500010
*                                                                     * 03000010
*FUNCTION:THIS MODULE BUILDS A COMMAND INPUT BLOCK (CIB) FOR THE TCAM * 03500010
*   OPERATOR CONTROL COMMANDS WHICH ARE ENTERED FROM THE SYSTEM       * 04000010
*   CONSOLE. THE COMMANDS ARE   VARY,HOLD,RELEASE,DISPLAY,AND HALT.   * 04500010
*   IT ISSUES A GETMAIN FOR THE REGION IN WHICH TO BUILD THE CIB.THEN * 05000010
*   IT ISSUES A QEDIT MACRO     (WHICH PUTS THE CIB INTO THE CIB      * 05500010
*   CHAIN)AND POSTS AN ECB FOR THE OPERATOR CONTROL SUBTASK. IF THE   * 06000010
*   RETURN CODE FROM QEDIT INDICATES THAT THE MAXIMUM CIB LIMIT HAS   * 06500010
*   BEEN REACHED,THIS MODULE ISSUES A FREEMAIN FOR THE CIB AND REJECTS* 07000010
*   THE COMMAND,ISSUING A MESSAGE TO THE CONSOLE.                     * 07500010
*ENTRY POINT:                                                         * 08000010
*        'IGC1303D'                                                   * 08500010
*                                                                     * 09000010
*INPUT:REGISTER 2 HAS THE ADDRESS OF THE EXTENDED SAVE AREA           * 09500010
*                                                                     * 10000010
*OUTPUT:A CIB IS BUILT AND PUT INTO THE CIB CHAIN.                    * 10500010
*                                                                     * 11000010
*EXTERNAL ROUTINES:NONE                                               * 11500010
*                                                                     * 12000010
*EXITS-NORMAL:THIS MODULE BRANCHES TO THE ADDRESS IN REGISTER 14.     * 12500010
*                                                                     * 13000010
*EXITS-ERROR:THIS MODULE XCTLS TO IGC0503D OR IGC2103D TO ISSUE   M2174 13500010
*   AN ERROR MESSAGE                                              M2174 13700010
*                                                                     * 14000010
*   THE ERRORS RECOGNIZED ARE:                                        * 14500010
*   1.TCAM IS NOT IN THE SYSTEM                                       * 15000010
*   2.TCAM NOT READY                                              M2174 15500010
*   3.REQUIRED PARAMETER MISSING                                  M2174 15700010
*   4.INSUFFICIENT CORE TO BUILD CIB                              M2174 15900010
*   5.MAXIMUM CIB LIMIT IS EXCEEDED                               M2174 16100010
*                                                                     * 16500010
*TABLES/WORK AREAS:                                                   * 17000010
*                                                                     * 17500010
*   EXTENDED SAVE AREA                                                * 18000010
*   CVT                                                               * 18500010
*   CIB                                                               * 19000010
*   AVTCAVTSPLPT                                                      * 19500010
*                                                                     * 20000010
*                                                                     * 20500010
*ATTRIBUTES:REENTERABLE                                               * 21000010
*                                                                     * 21500010
*NOTES:THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRE-   * 22000010
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    * 22500010
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    * 23000010
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    * 23500010
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               * 24000010
*                                                                     * 24500010
*********************************************************************** 25000010
         SPACE 3                                                        25500010
R0       EQU   0                                                        26000010
R1       EQU   1                                                        26500010
R2       EQU   2                        XSA-EXTENEED SAVE AREA ADDRESS  27000010
R3       EQU   3                        BASE REG                        27500010
R4       EQU   4                        BASE FOR CVT                    28000010
R5       EQU   5                        BASE FOR AVT                    28500010
R6       EQU   6                        LENGTH OF CIB                   29000010
R7       EQU   7                        WORK REG                        29500010
R9       EQU   9                        BEGINNING OF OPERAND            30500010
R10      EQU   10                                                       31000010
R11      EQU   11                       BASE FOR SPL                    31500010
R12      EQU   12                                                       32000010
R13      EQU   13                                                       32500010
R14      EQU   14                       RETURN REG                      33000010
R15      EQU   15                       XCTL REG                        33500010
         SPACE 3                                                        34000010
AQTCVTPT EQU   16                       CVT POINTER                     34500010
AQTINVAL EQU   5                        OFFSET FOR MSG-INVALID COMMAND  35000010
AQTNOAQT EQU   36                       OFFSET FOR MSG-NOT ACTIVE M2174 35500010
AQTPMISS EQU   12                       OFFSET FOR MSG-PARM MISS  M2174 36000010
AQTNORDY EQU   37                       OFFSET FOR MSG-TASK BUSY  M2174 36500010
AQTTHREE EQU   3                                                        37000010
TCBABEND EQU   X'80'                    ABNORM TERM IN PROGRESS  A50213 37500010
         SPACE 3                                                        38000010
*INITIALIZATION                                                         38500010
         SPACE                                                          39000010
         BALR  R3,0                     SET UP BASE                     39500010
         USING *,R3                                                     40000010
IED1303D IEDHJN AQT010                  MODULE ID AND DATE       S22025 40500010
         USING AQTXSA,R2                BASE FOR XSA                    42500010
         L     R4,AQTCVTPT              GET CVT POINTER                 43000010
         USING CVT,R4                   CVT ADDRESSABILITY       Y02027 43500010
         L     R5,CVTAQAVT              GET TCX ADDRESS FROM CVT Y02027 44000010
         LTR   R5,R5                    CHECK FOR TCAM IN SYSTEM Y02027 44500010
         BNZ   AQT015                   BRANCH IF TCAM IN SYSTEM Y02027 45000010
         MVI   XAE,AQTNOAQT             SET UP FOR ERROR MSG            45500010
         MVC   XAV(8),AQTTCAM                                           46000010
         B     AQT060                   TAKE ERROR EXIT          X01004 46500010
AQT015   EQU   *                                                        47000010
         USING IEDQTCX,R5               TCX ADDRESSABILITY       Y02027 47500010
         TM    TCXBIT1,AVTREADN         TCAM MARKED AS READY     Y02027 47560010
         BO    AQT017                   BRANCH IF READY           M2174 47620010
AQT016   EQU   *                                                 A50213 47650010
         MVI   XAE,AQTNORDY             SET FOR ERROR MESSAGE     M2174 47680010
         B     AQT060                   XCTL TO IGC0503D TO SEND X01004 47740010
*                                         IEE342I COMMAND REJECTEDM2174 47800010
*                                         TASK BUSY               M2174 47860010
AQT017   EQU   *                                                  M2174 47920010
         TM    TCXBIT1,AVTCLOSN+AVTQUCKN NORMAL TERMINATION      Y02027 47930010
         BNZ   AQT016                   REJECT COMMAND IF YES    A50213 47940010
         L     R6,XAL                   GET OPERAND FIELD POINTER       48000010
         LTR   R7,R6                    SAVE PTR AND CHECK FOR OPERAND  48500010
         BNZ   AQT020                   BRANCH IF OPERAND SPECIFIED     49000010
         MVI   XAE,AQTPMISS             SET MSG CODE                    49500010
         B     AQT060                   SEND MSG                        50000010
AQT020   EQU   *                                                        50500010
         LA    R6,1(R6)                 INCREMENT POINTER               51000010
         CLI   0(R6),C' '               CHECK FOR END OF OPERAND        51500010
         BNE   AQT020                   BRANCH IF NOT THE END           52000010
         LR    R9,R7                    SAVE OPERAND POINTER            52500010
         SR    R6,R7                    GET LENGTH OF OPERANDS          53000010
         LA    R6,1(,R6)                ADD 1 FOR BLANK            1030 53200010
         LR    R10,R6                                                   53500010
         LA    R6,CIBDATA-CIBNEXT(0,R6) GET LENGTH OF CIB               54500010
         LR    R7,R6                    SAVE LENGTH FOR TEST     A42415 54700010
         N     R7,AQTMASK               IS THIS MULTIPLE OF 8    A42415 54900010
         BZ    AQT027                   IF SO, BRANCH            A42415 55100010
         O     R6,AQTMASK               INSURE A SEVEN           A42415 55300010
         LA    R6,ONE(,R6)              GET NEXT MULTIPLE OF 8   A42415 55500010
AQT027   EQU   *                                                 A42415 55700010
         LM    R12,R13,XAV              SAVE VERB                       56500010
         LA    R7,XAS+4                                                 57000010
         STM   R6,R7,XAV                SET LENGTH AND ADDRESS   X02004 57500010
         MVI   XAV+NINE,SP245           SET SUBPOOL FOR VS/2     X02004 57570010
         GETMAIN EC,MF=(E,XAV)          GET CIB                  X02004 57920010
         STM   R12,R13,XAV              RESTORE VERB                    58000010
         L     R1,XAS+4                 GET ADDRESS OF GETMAIN AREA     58500010
         LTR   R15,R15                  CHECK RETURN CODE               59000010
         BZ    AQT030                   BRANCH IF CORE WAS ALLOCATED    59500010
         SPACE 3                                                        60000010
*SET UP PARAMETERS IN XSA FOR ERROR MESSAGE                             60500010
         SPACE                                                          61000010
         MVI   XAE,AQTINVAL             SET MESSAGE CODE                61500010
         MVC   XAV(8),AQTNOCOR          SET UP VARIABLE PART OF MSG     62000010
         B     AQT060                   EXIT TO WRITE MSG        Y02027 62500010
         SPACE 3                                                        63000010
*BUILD CIB                                                              63500010
         SPACE                                                          64000010
AQT030   EQU   *                                                        64500010
         USING CIBDSECT,R1              BASEE FOR CIB DSECT             65000010
         BCTR  R6,0                     DECREMENT FOR EX         Y02027 65100010
         EX    R6,AQTCLEAR              CLEAR CIB                Y02027 65200010
         LA    R6,ONE(R6)               RESTORE REGISTER 6       Y02027 65300010
         SRL   R6,AQTTHREE              CONVERT LENGTH TO DBL WORDS     65500010
         STC   R6,CIBLEN                SAVE LENGTH IN CIB              66000010
         MVC   CIBVERB(1),XAN           VERB CODE                       66500010
         MVC   CIBCONID,XAU             MOVE CONSOLE ID          A42415 66700010
         STH   R10,CIBDATLN             LENGTH OF DATA                  67000010
         BCTR  R10,0                    SUBTRACT 1 FOR EXECUTE          67500010
         EX    R10,AQTMOVE              MOVE OPERAND TO CIB             68000010
         L     R11,TCXCOMPT             ADDR OF TCAM CSCB        Y02027 68500010
         LA    R0,4(0,R11)              ADDR OF CIB CHAIN               69000010
         QEDIT BLOCK=(1),ORIGIN=(0)     QUEUE CIB OFF SPL               69500010
         LTR   R15,R15                  CHECK RETURN CODE               70000010
         BZ    AQT040                   BRANCH IF CIB WAS QUEUED        70500010
         SPACE 3                                                        71000010
*MAXIMUM CIB LIMIT WAS REACHED-FREEMAIN AND SET UP PARM FOR ERROR MSG   71500010
         SPACE                                                          72000010
         SLL   R6,AQTTHREE              GET CIB LENGTH IN BYTES         72500010
         LA    R0,SP245                 VS/2 SUBPOOL FOR FREE    X02004 73000010
         SLL   R0,TOHI                  SET SUBPOOL FOR FREEMAIN X02004 74000010
         OR    R0,R6                    SET SUBPOOL AND LENGTH   X02004 74200010
         L     R1,0(R7)                 SET ADDRESS TO FREE     OX02176 74400010
         FREEMAIN R,LV=(0),A=(1)        FREE CIB                 X02004 74600010
         MVI   XAE,AQTINVAL             ERROR INDICATOR           M2174 75500010
         MVC   XAV(8),AQTCSCB           FOR MAX CIB'S EXCEEDED    M2174 76000010
         B     AQT060                   TAKE ERROR EXIT           M2174 76500010
AQT040   EQU   *                                                        77000010
         L     R1,0(0,R11)              ADDR OF ECB                     77500010
         L     R11,TCXASCB              MCP-ASCB POINTER         Y02027 78000010
*              CROSS MEMORY POST ECB IN CSCB WAITED ON BY OPTCL  Y02027 78100010
         POST  (R1),ASCB=(R11),ERRET=CVTBRET,MF=(E,XASAVLOC)            78200010
         BR    R14                      RETURN                          78500010
         SPACE 3                                                        79000010
*SET UP XSA AND XCTL TO ERROR MSG ROUTINE                               79500010
         SPACE                                                          80000010
AQT060   EQU   *                                                        80500010
         MVC   XAX(8),AQT0503D                                          81000010
         LA    R7,XAX                   POINTER TO XCTL NAME            82000010
         ST    R7,XAP                                                   82500010
         XC    XAD(4),XAD               CLEAR DCB FIELD                 83000010
         LA    R15,XAP                  ADDR OF PTR TO XCTL NAME        83500010
         XCTL  SF=(E,(15))                                              84000010
         SPACE 3                                                        84500010
AQT0503D DC    CL8'IGC0503D'            MODULE NAME                     85000010
AQTTCAM  DC    CL8'TCAM'                TCAM                            86000010
AQTNOCOR DC    CL8'NO CORE-'            NO CORE                         86500010
AQTCSCB  DC    CL8'CSCB USE'            MAX CIB'S EXCEEDED        M2174 86700010
         DS    0F                       ALIGNMENT                       87000010
AQTMASK  DC    X'00000007'              MASK FRO TURNING OFF 1ST 29 BIT 87500010
AQTMOVE  MVC   CIBDATA(3),0(R9)         MOVE OPERAND TO CIB             88000010
AQTCLEAR XC    CIBNEXT(0),CIBNEXT       CLEAR CIB                Y02027 88100010
ONE      EQU   1                        DECIMAL VALUE 1          A42415 88200010
TOHI     EQU   24                       SHIFT MASK TO HIGH BYTE  X02004 88240010
NINE     EQU   9                        CONSTANT OF NINE         X02004 88280010
SP241    EQU   241                      SUBPOOL 241 FOR VS/1 CIB X02004 88320010
SP245    EQU   245                      SUBPOOL 245 FOR VS/2 CIB X02004 88360010
SYSTYPE  EQU   116                      CVT OFFSET TO SYSTEM TYPEX02004 88400010
SYSVS1   EQU   X'20'                    VS/1 SYSTEM SWITCH       X02004 88440010
         EJECT                                                          88500010
AQTXSA   DSECT                                                          89000010
         IEEXSA                                                         89500010
         CVT   DSECT=YES                                                89600010
         TTCXD                                                   Y02027 89700010
         EJECT                                                          90000010
         EJECT                                                          90500010
CIBDSECT DSECT                                                          91000010
         IEZCIB                                                         91500010
         EJECT                                                          92000010
         TAVTD                                                          92500010
         TTCBD                                                          92700010
         END                                                            93000010
