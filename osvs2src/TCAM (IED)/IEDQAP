AP01     TITLE '''IEDQAP'' -- REMOVE ROUTINE'                           00300020
IEDQAP   CSECT                                                          00600020
         SPACE 3                                                        00606054
******************** MICROFICHE FLAGS *********************** SUPT CODE 00612054
*A279000                                                        SA53607 00620000
*A105300-107100,202000,231000-242000,339500-341500,516500-518500 S22025 00640022
*A569000-611000,643000,667000-668000,874007-874910,907400-913400 S22025 00680022
*A931000-932000                                                  S22025 00720022
*C240000                                                         S22025 00760022
*D228000-236000,258000,570000-624000,639000-648000,906000-915000 S22025 00800022
*D924000,933000.934000                                           S22025 00840022
*D252000-257000,904200-905400,920000-927000,939000-944000       SA58444 00860022
*C909400,938000                                                 SA58444 00880022
*A703500                                                        SA67150 00890054
*A703000                                                       @YA05473 00890156
*D703600-703700                                                @YA05473 00890256
*A687000                                                       @YA05443 00890356
*A702500,704000                                                @SA69090 00893056
*C703600                                                       @XA05316 00896056
*D688000                                                       @XA07511 00898009
*D702600-702700                                                @OX11935 00898110
*A703400                                                       @OX11935 00898210
*C703430,703460                                                @OX14760 00898810
*D357000                                                       @OX14760 00899410
         SPACE                                                          00900020
*********************************************************************** 00901020
*                                                                     * 00902054
*MODULE-NAME = IEDQAP                                                 * 00902154
*                                                                     * 00902254
*DESCRIPTIVE-NAME = MSGEDIT REMOVE ROUTINE                            * 00902354
*                                                                     * 00902454
*COPYRIGHTS = 'NONE'                                                  * 00902554
*                                                                     * 00902654
*STATUS: CHANGE LEVEL 5                                               * 00902754
*                                                                     * 00903020
*FUNCTION --                                                          * 00904020
*   REMOVES DATA FROM A SINGLE SPECIFIED LOCATION IN A BUFFER AND     * 00905020
*   OPTIONALLY REPLACES IT WITH OTHER DATA.                           * 00906020
*                                                                     * 00907020
*   ON ENTRY THE ROUTINE COMPUTES THE SIZE OF THE PREFIX, INCLUDING   * 00908020
*   RESERVE CHARACTERS (IF ANY).                                      * 00909020
*                                                                     * 00910020
*   IF THE 'TO' DELIMITER IS A CHARACTER STRING,  THE ROUTINE SETS    * 00911020
*   UP THE 'FROM' DELIMITER EITHER FROM THE SCAN POINTER OR,  IF      * 00912020
*   THE USER SPECIFIES AN OFFSET,  FROM THE PARAMETER LIST PLUS THE   * 00913020
*   PREFIX SIZE.  THE SCAN POINTER IS TEMPORARILY SET TO THE 'FROM'   * 00914020
*   OFFSET.  IF THE BUFFER CONTAINS DATA FROM THE HOLD QUEUE, THE     * 00914822
*   'FROM' OFFSET IS SET TO THE FIRST BYTE OF DATA. THIS ROUTINE      * 00915622
*   LINKS TO THE BUFFER SCAN ROUTINE TO LOOK FOR THE 'TO' CHARACTER   * 00916422
*   STRING.                                                           * 00917222
*                                                                     * 00918020
*   ON RETURN, IF THE ENTIRE STRING WASN'T FOUND, THE ROUTINE CHECKS  * 00918522
*   WHETHER THIS IS AN INBLOCK FUNCTION. IF IN INBLOCK AND NOT END    * 00919022
*   OF MESSAGE, THE ROUTINE LINKS TO THE CROSS-BUFFER SUBROUTINE.     * 00919522
*   OTHERWISE, THE ROUTINE RETURNS TO THE CALLER WITH A MINUS FOUR    * 00920022
*   RETURN CODE IN REGISTER 15.                                       * 00920522
*                                                                     * 00921020
*   IF THE STRING IS FOUND,  THE ROUTINE DETERMINES IF THE 'TO'       * 00922020
*   STRING IS TO BE DELETED.  IF NOT, THE OFFSET RETURNED BY THE SCAN * 00923022
*   ROUTINE IS DECREMENTED BY THE STRING LENGTH (INCL BLANKS).  IF    * 00924022
*   IT IS,  THE OFFSET IS NOT CHANGED.  CONTROL PASSES TO THE         * 00925020
*   FUNCTION TEST SUBROUTINE.                                         * 00926020
*                                                                     * 00927020
*   IF THE 'FROM' DELIMITER IS THE SCAN POINTER,  IT IS LOADED FROM   * 00928020
*   THE PREFIX.  IF IT IS AN OFFSET, IT IS LOADED FROM THE PARA-      * 00929020
*   METER AND THE PREFIX SIZE IS ADDED TO IT.                         * 00930020
*                                                                     * 00931020
*   IF THE 'TO' DELIMITER IS AN EXTENT,  IT IS LOADED FROM THE        * 00932020
*   PARAMETER LIST AND THE 'FROM' DELIMITER IS ADDED TO IT TO MAKE    * 00933020
*   IT AN OFFSET.  CONTROL PASSES TO THE FUNCTION TEST SUBROUTINE.    * 00934020
*                                                                     * 00935020
*   IF THE 'TO' DELIMITER IS AN OFFSET,  IT IS LOADED FROM THE        * 00936020
*   PARAMETER LIST AND THE PREFIX SIZE IS ADDED TO IT.  IT IS THEN    * 00937020
*   COMPARED WITH THE 'FROM' DELIMITER TO MAKE SURE THAT THE 'FROM'   * 00938020
*   DELIMITER PRECEDES IT.  IF IT DOES NOT,  RETURN IS MADE TO THE    * 00939020
*   CALLER.  OTHERWISE CONTROL PASSES TO THE FUNCTION TEST SUB-       * 00940020
*   ROUTINE.                                                          * 00941020
*                                                                     * 00942020
*   FUNCTION TEST SUBROUTINE (FUNCTEST) --                            * 00943020
*   THE 'TO' OFFSET IS SET AS THE DATA OFFSET AND THE LENGTH          * 00944020
*   BETWEEN THE 'TO' AND 'FROM' OFFSETS BECOMES THE INSERT OFFSET.    * 00945020
*   IF THE FUNCTION IS A CONTRACT,  THE ROUTINE BYPASSES THE NEXT     * 00946020
*   INSERT.                                                           * 00947020
*                                                                     * 00948020
*   IF THE FUNCTION IS A REPLACE,  PARAMETERS ARE BUILT FOR THE       * 00949020
*   UNIT REQUEST INTERFACE (IEDQAO) AND EXIT IS MADE TO IT TO         * 00950020
*   INSERT THE REPLACEMENT DATA INTO THE BUFFER.  ON RETURN,  THE     * 00951020
*   ROUTINE DETERMINES IF THE REPLACEMENT DATA WAS EXACTLY AS LONG    * 00952020
*   AS THE REMOVED DATA.  IF SO,  RETURN IS MADE TO THE CALLER.  IF   * 00953020
*   NOT,  THE BUFFER MUST BE CLOSED UP.                               * 00954020
*                                                                     * 00955020
*   IF THE FUNCTION IS CONTRACT,  OR IF THE BUFFER MUST BE CLOSED     * 00956020
*   UP,  PARAMETERS ARE BUILT FOR THE INSERT DATA ROUTINE (IEDQAF)    * 00957020
*   AND THE ROUTINE LINKS TO IT TO SHIFT THE LOGICALLY EMPTY AREA     * 00958020
*   TO THE END OF THE BUFFER.  ON RETURN,  THE DATA OFFSET IS         * 00959020
*   DECREMENTED BY THE INSERT OFFSET AND THE RESULT SET AS THE NEW    * 00960020
*   DATA SIZE (PRFSIZE).  RETURN IS MADE TO THE CALLER.               * 00961020
*                                                                     * 00962020
*   CROSS-BUFFER ROUTINE                                              * 00962122
*   THIS ROUTINE LINKS TO THE UNIT REQUEST ROUTINE AND THE INSERT     * 00962222
*   DATA ROUTINE TO GET AN ADDITIONAL UNIT AND SHIFT INTO IT THE      * 00962322
*   DATA THAT MUST BE PLACED ON THE HOLD QUEUE.  A PREFIX IS BUILT    * 00962422
*   IN THE FIRST UNIT CONTAINING DATA TO BE HELD.  THE ORITINAL       * 00962522
*   BUFFER IS SHORTENED APPROPRIATELY. THE NEW BUFFER IS LINKED ONTO  * 00962622
*   THE HOLD QUEUE.  CONTROL IS RETURNED TO THE CALLER.               * 00962722
*ENTRY POINTS --                                                      * 00963020
*       'IEDQAP01' TO REMOVE AND OPTIONALLY REPLACE DATA IN THE       * 00964020
*   BUFFER.  CALLING SEQUENCE FROM USER INTERFACE IS:                 * 00965020
*                                                                     * 00966020
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        * 00967020
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     * 00968020
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           * 00969020
*        BR    R12                      EXIT TO ROUTINE               * 00970020
*                                                                     * 00971020
*INPUT --                                                             * 00972020
*   REGISTER 1 - THE ADDRESS OF A MACRO-GENERATED PARAMETER LIST.     * 00973020
*   PARAMETER LIST FORMAT IS:                                         * 00974020
*                                                                     * 00975020
*        *********************************                            * 00976020
*        * INDEX *STATUS * INDEX * INDEX *                            * 00977020
*        *  TO   * BYTE  *  TO   *  TO   *   'TO' DELIMITER =         * 00978020
*        *   AP  *       *    AF *    AO *     CHARACTER STRING       * 00979020
*        *********************************                            * 00980020
*        *          INSERT DATA          *                            * 00981020
*        *          (OPTIONAL)           *                            * 00982020
*        *                               *                            * 00983020
*        *********************************                            * 00984020
*        * (UN-  * PARM  *       * REG   *                            * 00985022
*        *  USED)*  LIST * X'00' *   15  *                            * 00986022
*        *       * LNGTH *       * OFFSET*                            * 00987022
*        *********************************                            * 00988020
*        * BLANK *      ADDRESS OF       *                            * 00989020
*        *  CHAR *   CHARACTER STRING    *                            * 00990020
*        * (OPT) *                       *                            * 00991020
*        *********************************                            * 00992020
*        *     'AT'      *                                            * 00993020
*        *   DELIMITER   *                                            * 00994020
*        *   (OPTIONAL)  *                                            * 00995020
*        *****************                                            * 00996020
*                                                                     * 00997020
*        *********************************                            * 00998020
*        * INDEX *STATUS * INDEX * INDEX *                            * 00999020
*        *  TO   * BYTE  *  TO   *  TO   *   'TO' DELIMITER =         * 01000020
*        *   AP  *       *   AF  *   AO  *     EXTENT OR OFFSET       * 01001020
*        *********************************                            * 01002020
*        *          INSERT DATA          *                            * 01003020
*        *          (OPTIONAL)           *                            * 01004020
*        *                               *                            * 01005020
*        *********************************                            * 01006020
*        *     'AT'      *     'TO'      *                            * 01007020
*        *   DELIMITER   *   DELIMITER   *                            * 01008020
*        *   (OPTIONAL)  *               *                            * 01009020
*        *********************************                            * 01010020
*                                                                     * 01011020
*        INSERT DATA WORD:                                            * 01012020
*                                                                     * 01013020
*        *********************************                            * 01014020
*        *LENGTH *      ADDRESS OF       *   DATA =                   * 01015020
*        *  OF   *   CHARACTER STRING    *     CHARACTER STRING       * 01016020
*        * STRING*                       *                            * 01017020
*        *********************************                            * 01018020
*                                                                     * 01019020
*        *********************************                            * 01020020
*        * NO.   * IDLE  *               *   DATA =                   * 01021020
*        *  OF   *  CHAR *   (UNUSED)    *     IDLES                  * 01022020
*        * IDLES *       *               *                            * 01023020
*        *********************************                            * 01024020
*                                                                     * 01025020
*        AP INDEX FLAG: X'01' OFF = REMOVE AT SPECIFIED OFFSET        * 01026020
*                       X'01' ON = REMOVE AT SCAN POINTER             * 01027020
*                                                                     * 01028020
*   REGISTER 3 - ADDRESS OF SCB                                       * 01029020
*                                                                     * 01030020
*   REGISTER 4 - ADDRESS OF LCB                                       * 01031020
*                                                                     * 01032020
*   REGISTER 6 - ADDRESS OF THE CURRENT BUFFER                        * 01033020
*                                                                     * 01034020
*   REGISTER 9 - ADDRESS OF THE AVT                                   * 01035020
*                                                                     * 01036020
*   REGISTER 12 - ENTRY POINT ADDRESS AND BASE REGISTER FOR THIS      * 01037020
*   ROUTINE                                                           * 01038020
*                                                                     * 01039020
*OUTPUT --                                                            * 01040020
*   REGISTER 15 - RETURN CODE.  CONTAINS X'00' ON SUCCESSFUL          * 01041020
*   COMPLETION,  OTHERWISE CONTAINS NONZERO.                          * 01042020
*                                                                     * 01043020
*EXTERNAL REFERENCES --                                               * 01044020
*   'IEDQAF' - INSERT DATA ROUTINE                                    * 01045020
*                                                                     * 01046020
*   'IEDQAO' - UNIT REQUEST INTERFACE                                 * 01047020
*                                                                     * 01048020
*   'IEDQAX' - SCAN BUFFER ROUTINE                                    * 01049022
*                                                                     * 01050020
*   'IEDQUI' - RETURN INTERFACE ROUTINE                               * 01050522
*                                                                     * 01051022
*   HOLD QUEUE                                                        * 01051522
*                                                                     * 01052020
*   AVT - ADDRESS VECTOR TABLE                                        * 01053020
*                                                                     * 01054020
*   BUFFER CURRENTLY BEING PROCESSED                                  * 01055020
*                                                                     * 01056020
*   LCB - LINE CONTROL BLOCK                                          * 01057020
*                                                                     * 01058020
*   SCB - STATION CONTROL BLOCK                                       * 01059020
*                                                                     * 01060020
*EXITS,  NORMAL --                                                    * 01061020
*   THE REQUESTED REMOVE OR REPLACE HAS BEEN PERFORMED.  EXIT IS      * 01062020
*   MADE TO THE CALLER VIA THE RETURN INTERFACE ROUTINE.              * 01063020
*                                                                     * 01064020
*EXITS,  ERROR -- N/A                                                 * 01065020
*                                                                     * 01066020
*TABLES/WORK AREAS -- N/A                                             * 01067020
*                                                                     * 01068020
*ATTRIBUTES -- SERIALLY REUSABLE,  REFRESHABLE,  ENABLED,             * 01069020
*   RESIDENT,  PROBLEM PROGRAM MODE.                                  * 01070020
*                                                                     * 01071020
*CHARACTER CODE DEPENDENCY - THIS MODULE DEPENDS UPON AN INTERNAL     * 01072022
*   REPRESENTATION OF THE EXTERNAL CHARACTER SET WHICH IS             * 01073020
*   EQUIVALENT TO THE ONE USED AT ASSEMBLY TIME.  THE CODING HAS      * 01074020
*   BEEN ARRANGED SO THAT REDEFINITION OF ''CHARACTER'' CONSTANTS,    * 01075020
*   BY REASSEMBLY, WILL RESULT IN A CORRECT MODULE FOR THE NEW        * 01076020
*   DEFINITIONS.                                                      * 01077020
*********************************************************************** 01078020
         EJECT                                                          01079020
********* REGISTER EQUATES *********                                    01200020
         SPACE                                                          01500020
R0       EQU   0                        WORK REGISTER                   01800020
         SPACE                                                          02100020
R1       EQU   1                        PARAMETER LIST ADDRESS          02400020
         SPACE                                                          02700020
RWORK2   EQU   2                        WORK REGISTER                   03000020
         SPACE                                                          03300020
RSCB3    EQU   3                        SCB ADDRESS                     03600020
         SPACE                                                          03900020
RLCB4    EQU   4                        LCB ADDRESS                     04200020
         SPACE                                                          04500020
RSCAN5   EQU   5                        SCAN POINTER ADDRESS            04800020
         SPACE                                                          05100020
RPREFIX  EQU   6                        ADDRESS OF BUFFER               05400020
         SPACE                                                          05700020
RFROM7   EQU   7                        'FROM' OFFSET                   06000020
         SPACE                                                          06300020
RPARM8   EQU   8                        SUB-PARM LIST ADDRESS           06600020
RLIM8    EQU   8                        LIMIT OF SHIFT LOOP             06900020
         SPACE                                                          07200020
RAVT9    EQU   9                        ADDRESS OF AVT                  07500020
         SPACE                                                          07800020
RPFXSZ11 EQU   11                       SIZE OF PREFIX                  08100020
         SPACE                                                          08400020
RBASE    EQU   12                       BASE REGISTER                   08700020
         SPACE                                                          09000020
R13      EQU   13                       SAVE AREA ADDRESS               09300020
R14      EQU   14                       RETURN REGISTER                 09600020
R15      EQU   15                       LINK REGISTER                   09900020
         SPACE                                                          10200020
RTO15    EQU   15                       'TO' OFFSET                     10500020
RDATAD5  EQU   5                        REGISTER                 S22025 10530022
RWORK8   EQU   8                        REGISTER                 S22025 10560022
R10      EQU   10                       REGISTER                 S22025 10590022
LEN      EQU   16                      MOVE LENGTH               S22025 10620022
THREE    EQU   3                        INCREMENT OF THREE       S22025 10650022
MVOFF    EQU   16                       MOVE OFFSET              S22025 10680022
BFREDIT  EQU   X'40'                    DATA MOVEMENT FLAG       S22025 10690022
FIVE     EQU   5                       INCREMENT OF FIVE         S22025 10710022
         SPACE                                                          10800020
********* OTHER EQUATES *********                                       11100020
         SPACE                                                          11400020
ONE      EQU   1                        INCREMENT VALUE OF ONE          11700020
TWO      EQU   2                        OFFSET OF TWO BYTES             12000020
FOUR     EQU   4                        OFFSET OF FOUR BYTES            12300020
EIGHT    EQU   8                        OFFSET OF EIGHT BYTES           12600020
SHIFT8   EQU   8                        SHIFT VALUE OF 1 BYTE           12900020
         SPACE                                                          13200020
INSOFF   EQU   4                        OFFSET TO INSERT OFFSET         13500020
DATOFF   EQU   6                        OFFSET TO DATA OFFSET           13800020
         SPACE                                                          14100020
PARMINDX EQU   0                        OFFSET TO REMOVE INDEX BYTE     14400020
PARMSTAT EQU   1                        OFFSET TO STATUS FIELD          14700020
PARMAF   EQU   2                        OFFSET TO IEDQAF OFFSET         15000020
PARMAO   EQU   3                        OFFSET TO AO OFFSET             15300020
PARMDATA EQU   4                        OFFSET TO INSERT DATA           15600020
         SPACE                                                          15900020
SBPMCHAR EQU   4                        OFFSET TO CHAR STRING ADDR      16200020
         SPACE                                                          16500020
DATASTAT EQU   X'80'                    INSERT DATA = CJARACTERS        16800020
CONTSTAT EQU   X'20'                    INSERT DATA = CONTRACT          17100020
CHARSTAT EQU   X'10'                    'TO' = CHARACTERS               17400020
OFFSSTAT EQU   X'08'                    'TO' = OFFSET                   17700020
TONCSTAT EQU   X'01'                    'TO' INCLUDED IN REMOVE         18000020
         SPACE                                                          18300020
IDLEFLAG EQU   X'01'                    DATA TYPE = IDLES               18600020
SHIFFLAG EQU   X'01'                    SHIFT REQUEST FLAG              18900020
SCANFLAG EQU   X'01'                    REMOVE AT SCAN POINTER          19200020
         SPACE                                                          19500020
TOTALREM EQU   X'80'                    'TOTAL REMOVE' FLAG             19800020
SCANADJ  EQU   X'40'                    'SCAN ADJUSTMENT' FLAG          20100020
BLANK    EQU   X'02'                    BLANK                    S22025 20200022
         EJECT                                                          20400020
         USING IEDQAVTD,RAVT9                                           20700020
         USING IEDQLCB,RLCB4                                            21000020
         USING IEDQPRF,RPREFIX                                          21300020
         USING IEDQSCB,RSCB3                                            21600020
         USING IEDQAP,RBASE                                             21900020
         SPACE                                                          22200020
IEDQAP01 EQU   *                                                        22500020
IEDQAP   IEDHJN REMATOFF                                                23100022
         LH    R0,PARMAF(,R1)           GET AF/AO INDEX          S22025 23700022
         STH   R0,AVTPARM+2             SAVE                     S22025 23800022
         ST    RPREFIX,AVTPARM3         SAVE PASSED BUFFER ADDRESS22025 23900022
         L     RPREFIX,AVTADBUF         GET CURRENT BUFFER       S22025 24000022
         MVC   INSOFF(TWO,RPREFIX),AVTFZERO SET SPACE TO ZERO    S22025 24100022
         MVC   PRFKEY+2(2),PRFSCAN      SAVE SCAN POINTER               24200022
         MVI   PRFKEY+1,AVTEZERO        INDICATE NO SCAN ADJUSTMENT     24300020
         LH    RWORK2,PRFSIZE           GET BUFFER SIZE                 24600020
         LTR   RWORK2,RWORK2            IS THIS A ZERO-LNG BUFFER       24900020
         BZ    ERREXIT                  YES, RETURN WITH ERROR CODE     25000020
         SPACE                                                          25100020
         IC    R15,LCBISZE              PICK UP IDLES COUNT             26400020
         LA    RPFXSZ11,AVTTXTSZ(,R15)  ADD SIZE OF TEXT PREFIX         26700020
         TM    PRFSTAT1,PRFNHDRN        IS IT HEADER PREFIX             27000020
         BO    TSTOCHAR                 NO, GO TEST 'TO' DELIMITER      27300020
         SPACE                                                          27600020
         LA    RPFXSZ11,AVTHDRSZ-AVTTXTSZ(,RPFXSZ11) YES, ADD EXTRA     27900020
         TM    LCBSTAT1,LCBRECVN       RECEIVE OPERATION        SA53607 27950000
         BZ    TSTOCHAR                NO, PROCEED              SA53607 28000000
         TM    SCBBSCFM,SCBDATEN       DATE/TIME REQUESTED      SA53607 28050000
         BZ    TSTOCHAR                NO, PROCEED              SA53607 28100000
         LA    RPFXSZ11,EIGHT(RPFXSZ11) YS, ADD FOR DATE/DIME   SA53607 28150000
         SPACE                                                          28200020
TSTOCHAR EQU   *                                                        28500020
         TM    PARMSTAT(R1),CHARSTAT    'TO' DELIMITER CHAR STRING      28800020
         BO    TOCHAR                   YES, GET 'TO' STRING            29100020
         SPACE                                                          29400020
         LA    RFROM7,FOUR(,R1)                                         29700020
         TM    PARMSTAT(R1),CONTSTAT    IS FUNCTION CONTRACT            30000020
         BO    INITCT1                  YES, POINTING TO DELIMITS       30300020
         SPACE                                                          30600020
         LA    RFROM7,FOUR(,RFROM7)     NO, BUMP ANOTHER WORD           30900020
         SPACE                                                          31200020
INITCT1  EQU   *                                                        31500020
         TM    PARMINDX(R1),SCANFLAG    REMOVE AT SCAN POINTER          31800020
         BNO   LOADFROM                 NO, GO LOAD FROM PARM LIST      32100020
         SPACE                                                          32400020
         CLC   PRFSCAN,PRFSIZE          SCAN POINTER BEYOND BFR END     32700020
         BH    ERREXIT                  YES, RETURN WITH ERROR CODE     33100020
         SPACE                                                          33600020
         LH    RTO15,AVTEZERO(,RFROM7)  NO, GET 'TO' DELIMITER          33900020
         LH    RFROM7,PRFSCAN           SET SCAN POINTER                34200020
         N     RFROM7,AVTCLRHI            AS 'FROM' DELIMITER           34500020
         LTR   RTO15,RTO15              TEST FOR ((R))                  34800020
         BNZ   TSTOOFFS                 NO, GO TEST 'TO' DELIMITER      35100020
         SPACE                                                          35400020
         LA    RTO15,ONE(,RFROM7)       YES, SET 'FROM' DELIMITER       36000020
         B     TESTFUNC                 GO SELECT FUNCTION              36300020
         SPACE                                                          36600020
LOADFROM EQU   *                                                        36900020
         LH    RTO15,TWO(,RFROM7)       GET 'TO' DELIMITER              37200020
         N     RTO15,AVTCLRHI           IS 'TO' SCAN POINTER            37500020
         BNZ   FROMDELM                 NO, PROCEED                     37800020
         SPACE                                                          38100020
         CLC   PRFSCAN,PRFSIZE          SCAN POINTER BEYOND BFR END     38400020
         BH    ERREXIT                  YES, RETURN WITH ERROR CODE     38800020
         SPACE                                                          39300020
         OI    PRFKEY+1,SCANADJ         INDICATE SCAN ADJUSTMENT        39600020
         LH    RTO15,PRFSCAN            YES, SET 'TO' FROM PRFSCAN      39900020
         N     RTO15,AVTCLRHI                                           40200020
         SR    RTO15,RPFXSZ11           MAKE IT A USER OFFSET           40500020
         BCTR  RTO15,AVTEZERO             FOR VALIDITY CHECKING         40800020
         SPACE                                                          41100020
FROMDELM EQU   *                                                        41400020
         LH    RFROM7,AVTEZERO(,RFROM7) GET 'FROM' DELIMITER            41700020
         N     RFROM7,AVTCLRHI                                          42000020
         AR    RFROM7,RPFXSZ11          ADD LENGTH OF PREFIX            42300020
         SPACE                                                          42600020
TSTOOFFS EQU   *                                                        42900020
         LA    RFROM7,ONE(,RFROM7)      BUMP TO START OF SHIFT          43200020
         TM    PARMSTAT(R1),OFFSSTAT    IS 'TO' AN OFFSET               43500020
         BO    VALIDCHK                 YES, MAKE SURE IT IS VALID      43800020
         SPACE                                                          44100020
         AR    RTO15,RFROM7             NO, EXTENT, ADD FOR OFFSET      44400020
         B     TESTFUNC                 GO SELECT FUNCTION              44700020
         SPACE                                                          45000020
VALIDCHK EQU   *                                                        45300020
         LA    RTO15,ONE(RTO15,RPFXSZ11) ADD PREFIX LNG PLUS ONE        45600020
         CR    RFROM7,RTO15             IS 'FROM' BEYOND 'TO'           45900020
         BNL   ERREXIT                  YES, RETURN WITH ERROR CODE     46200020
         SPACE                                                          46500020
         B     TESTFUNC                 GO SELECT FUNCTION              47500020
         EJECT                                                          49200020
TOCHAR   EQU   *                                                        49500020
         LA    RPARM8,FOUR(,R1)                                         49800020
         TM    PARMSTAT(R1),CONTSTAT    IS FUNCTION CONTRACT            50100020
         BO    INITCT2                  YES, POINTING TO AJ PARM        50400020
*                                         LIST                          50700020
         LA    RPARM8,FOUR(,RPARM8)     NO, BUMP ANOTHER WORD           51000020
         SPACE                                                          51300020
INITCT2  EQU   *                                                        51600020
         CLC   AVTADBUF+ONE(THREE),AVTPARM3+ONE ENTRY FROM BN    S22025 51650022
         BE    NOCROSS                  NO                       S22025 51700022
         LR    RFROM7,RPFXSZ11          SET OFFSET FOR START     S22025 51750022
         B     SAVESCAN                 CONTINUE                 S22025 51800022
NOCROSS  EQU   *                                                 S22025 51850022
         TM    PARMINDX(R1),SCANFLAG    REMOVE AT SCAN POINTER          51900020
         BNO   LOADFM2                  NO, GO LOAD FROM PARM LIST      52200020
         SPACE                                                          52500020
         CLC   PRFSCAN,PRFSIZE          SCAN POINTER BEYOND BFR END     52800020
         BH    ERREXIT                  YES, RETURN WITH ERROR CODE     53200020
         SPACE                                                          53700020
         LH    RFROM7,PRFSCAN           GET 'FROM' DELIMITER            54000020
         N     RFROM7,AVTCLRHI                                          54300020
         B     SAVESCAN                 GO PREPARE FOR LINK TO AJ       54600020
         SPACE                                                          54900020
LOADFM2  EQU   *                                                        55200020
         LH    RFROM7,EIGHT(,RPARM8)    GET 'FROM' DELIMITER            55500020
         N     RFROM7,AVTCLRHI                                          55800020
         AR    RFROM7,RPFXSZ11          ADD LENGTH OF PREFIX            56100020
         SPACE                                                          56400020
SAVESCAN EQU   *                                                        56700020
         SR    RWORK2,RWORK2            CLEAR                    S22025 56900022
         LR    R0,RFROM7                GET START FOR SCAN       S22025 57100022
         LA    RFROM7,ONE(,RFROM7)      BUMP OFFSET              S22025 57300022
         LR    R10,R1                   SAVE AP'S PARMLIST       S22025 57500022
         IC    RWORK2,FOUR(,RPARM8)     GET BLANK                S22025 57700022
         L     R1,FOUR(,RPARM8)         GET ADDRESS OF CHAR STRNGS22025 57900022
         TM    AVTEZERO(RPARM8),BLANK   BLANK SPECIFIED          S22025 58100022
         BNO   BLNK                     NO                       S22025 58300022
         LNR   RWORK2,RWORK2            MAKE NEGATIVE            S22025 58500022
BLNK     EQU   *                                                 S22025 58700022
         L     R15,AVTAX                GET ADDRESS OF SCAN      S22025 58900022
         BALR  R14,R15                  LINK TO SCAN             S22025 59100022
         LR    R1,R10                   RESTORE PARMLIST         S22025 59300022
         L     R14,FOUR(,RPARM8)        GET ADDR OF CHARS        S22025 60100022
         SR    R10,R10                  CLEAR                    S22025 60200022
         IC    R10,AVTEZERO(,R14)       GET CHAR LENGTH          S22025 60300022
         CR    R15,R10                  ALL CHARS FOUND          S22025 60400022
         BL    PART                     NO                       S22025 60700022
         LR    R15,R0                   YES,GET NEW OFFSET       S22025 60900022
         LA    R15,ONE(,R15)            BUMP OFFSET TO NEXT      S22025 61100022
         TM    PARMSTAT(R1),TONCSTAT    YES, TEST IF 'TO' STRING        62700020
*                                         INCLUDED IN REMOVE            63000020
         BO    TESTFUNC                 YES, R15 GOOD, PROCEED          63300020
         SPACE                                                          63600020
         LA    RTO15,ONE(,RWORK2)       POINT TO START OF CHARS  S22025 64300022
*        B     TESTFUNC                 PROCEED TO TEST FUNCTION        65100020
         EJECT                                                          65400020
TESTFUNC EQU   *                                                        65700020
         LH    RWORK2,PRFSIZE           PICK UP SIZE OF DATA            66000020
         N     RWORK2,AVTCLRHI                                          66300020
         LA    RWORK2,ONE(,RWORK2)      POINT BEYOND END OF DATA        66600020
         CR    RFROM7,RWORK2            OUT OF THE BUFFER        S22025 66700022
         BNL   ERREXIT                  YES, ERROR               S22025 66800022
         CR    RTO15,RWORK2             TEST 'TO' DELIMITER             66900020
         BL    SETOFF                   IT'S LOW, PROCEED               67200020
         SPACE                                                          67500020
         LR    RTO15,RWORK2             IT'S HIGH, SET TOTAL REMOVE     67800020
         OI    PRFKEY+1,TOTALREM        INDICATE TOTAL REMOVE           68100020
         SPACE                                                          68400020
SETOFF   EQU   *                                                        68700020
         STH   RTO15,DATOFF(,RPREFIX)   SET 'TO' OFFSET IN PREFIX       69000020
         LNR   RFROM7,RFROM7            SUBTRACT TO GET                 69300020
         AR    RFROM7,RTO15               NO. OF AVAILABLE BYTES        69600020
         STH   RFROM7,INSOFF(,RPREFIX)  SET INSERT OFFSET IN PREFIX     69900020
         TM    LCBSTAT1,LCBSENDN        SENDING                  S22025 69950022
         BO    TSTDEL                   YES, NO UPDATE           S22025 70000022
         SPACE 1                                                 S22025 70010022
         OI    PRFTQBCK+TWO,BFREDIT     INDICATE DATA MOVEMENT   S22025 70020022
         MVC   PRFXTRA(1),PARMSTAT(R1)  SAVE STATUS              S22025 70050022
         STH   RFROM7,PRFXTRA+1         SET DELETE LENGTH        S22025 70100022
TSTDEL   EQU   *                                                 S22025 70150022
         SPACE                                                          70200020
         LH    RWORK2,PRFKEY+2          PICK UP SAVED SCAN POINTER      70250020
         N     RWORK2,AVTCLRHI                                          70300020
         LA    RWORK2,ONE(,RWORK2)      ADJUST SCAN POINTER    @YA05473 70310056
         CR    RPFXSZ11,RWORK2          SCAN POINTER IN PREFIX @YA05473 70320056
         BH    ERREXIT                  YES, ERROR BRANCH      @YA05473 70330056
         BCTR  RWORK2,AVTEZERO          NO, RESET SCAN POINTER @YA05473 70340056
         TM    PRFKEY+ONE,SCANADJ       SCAN ADJUSTMENT NEEDED @OX14760 70343010
         BNO   CONTR                    NO, DONT RESET         @OX14760 70346010
         SR    RWORK2,RFROM7            DECREMENT NO. BYTES REMOVED     70350020
         STH   RWORK2,PRFKEY+2          PUT IT BACK                     70400020
CONTR    EQU   *                                               @SA69090 70420056
         SPACE                                                          70450020
         IC    R0,PARMAF(,R1)           PICK UP INSERT-DATA INDEX       70500020
         STC   R0,AVTPARM+2             SAVE IN AVT PARAMETER AREA      70800020
         SPACE                                                          71100020
         TM    PARMSTAT(R1),CONTSTAT    IS FUNCTION CONTRACT            71400020
         BO    CONTRACT                 YES, BYPASS INSERTION           71700020
         SPACE                                                          72000020
         SR    R0,R0                                                    72300020
         STH   R0,AVTPARM               CLEAR AVT PARM AREA             72600020
         TM    PARMSTAT(R1),DATASTAT    IS INSERT DATA CHARACTERS       72900020
         BO    SETPARM                  YES, DATA FLAG IS CORRECT       73200020
         SPACE                                                          73500020
         MVI   AVTPARM+1,IDLEFLAG       SET DATA = IDLES                73800020
         SPACE                                                          74100020
SETPARM  EQU   *                                                        74400020
         SR    R0,R0                    PICK UP                         75300020
         IC    R0,PARMDATA(,R1)           LENGTH OF REPLACE DATA        75600020
         AR    RWORK2,R0                INCREMENT SAVED SCAN POINTER    75900020
         STH   RWORK2,PRFKEY+2          SAVE IT BACK AGAIN              76200020
         SPACE                                                          76500020
         L     R0,PARMDATA(,R1)         LOAD DATA PARAMETER             76800020
         ST    R0,AVTPARM3              PASS IN AVTPARM3                77100020
         IC    R0,PARMAO(,R1)           PICK UP IEDQAO OFFSET           77400020
         STC   R0,AVTPARM               SET IN AVTPARM                  77700020
         BAL   R14,LINK                 LINK TO TEST & LINK             78000020
         SPACE                                                          78300020
         LTR   R15,R15                  TEST IF UNIT NOT FOUND          78600020
         BNZ   ERREXIT                  NOT FOUND, RETURN ERROR         79000020
         SPACE                                                          79500020
         LH    R0,INSOFF(,RPREFIX)      GET NO. OF AVAILABLE BYTES      79800020
         LTR   R0,R0                    IS CLOSE-UP NEEDED              80100020
         BZ    EXIT                     NO, RETURN TO CALLER            80400020
         SPACE                                                          80700020
CONTRACT EQU   *                                                        81000020
         TM    PRFKEY+1,TOTALREM        IS IT TOTAL REMOVE              81300020
         BNO   CLOSEUP                  NO, GO DO CLOSEUP               81600020
         SPACE                                                          81900020
         LH    R0,DATOFF(,RPREFIX)      YES, GET DATA OFFSET            82200020
         N     R0,AVTCLRHI                                              82500020
         BCTR  R0,AVTEZERO              POINT TO LAST BYTE              82800020
         B     EXIT1                    GO SET FINAL SIZE & EXIT        83100020
         SPACE                                                          83400020
CLOSEUP  EQU   *                                                        83700020
         IC    R15,AVTPARM+2            PICK UP INSERT-DATA INDEX       84000020
         LA    R15,SHIFFLAG(,R15)       REQUEST SHIFT FUNCTION          84300020
         STC   R15,AVTPARM              SET IT IN PARM LIST             84600020
         MVI   AVTPARM+1,AVTEZERO       INDICATE DATA = CHARACTERS      84900020
         LH    RLIM8,PRFSIZE            GET TOTAL DATA SIZE             85200020
         N     RLIM8,AVTCLRHI                                           85500020
         LH    RWORK2,DATOFF(,RPREFIX)  GET DATA OFFSET                 85800020
         N     RWORK2,AVTCLRHI                                          86100020
         BCTR  RWORK2,AVTEZERO                                          86400020
         SR    RLIM8,RWORK2             SUBTRACT FOR SHIFT LIMIT        86700020
         LA    R14,EXIT                 SET RETURN TO EXIT              86800020
         SPACE                                                          86900020
LINK     EQU   *                                                        87000020
         LA    R1,AVTPARM               POINT TO CALLED'S PARM LIST     87100020
         L     R15,AVTUI                GET USER INTERFACE ADDRESS      87200020
         BR    R15                      LINK TO CALLED ROUTINE          87300020
         EJECT                                                          87400020
PART     EQU   *                                                 S22025 87400722
         TM    PARMAO(R1),TWO           INBLOCK                  S22025 87400922
         BZ    ERREXIT                  NO                       S22025 87401122
         TM    PRFSTAT1,PRFNLSTN        LAST BUFFER              S22025 87401322
         BNO   ERREXIT                  YES                      S22025 87401522
         CLC   AVTADBUF+1(3),SCBDEOB+1  LAST GOOD EOB IN BUFFER  S22025 87401722
         BNE   NOEOB                    NO, PUT DATA ON HOLD Q   S22025 87401922
         SPACE 1                                                 S22025 87402122
         CH    RFROM7,SCBEOB            EOB IN DATA TO HOLD      S22025 87402322
         BNH   ERREXIT                  YES, DON'T HOLD DATA     S22025 87402522
         SPACE 1                                                 S22025 87402722
NOEOB    EQU   *                                                 S22025 87402922
         LR    R10,R1                   SAVE PARMLIST PTR        S22025 87404222
         LH    RWORK8,PRFSIZE           GET OFFSET OF END        S22025 87404922
         LA    RWORK8,ONE(,RWORK8)      BUMP PAST END            S22025 87405622
         SR    RWORK8,RFROM7            GET LENGTH TO KEEP       S22025 87406322
         STH   RFROM7,DATOFF(,RPREFIX)  SET AS DATA OFFSET       S22025 87407022
         IC    R14,PARMAO(,R1)          GET AO'S INDEX           S22025 87407722
         STC   R14,AVTPARM              SET UP PARM LIST         S22025 87408422
         OI    AVTPARM,ONE              INDICATE DIRECT RETURN   S22025 87409122
         MVI   AVTPARM3,AVTEFF          SET UP FIELD             S22025 87409822
         BAL   R14,LINK                 GO GET A UNIT            S22025 87410522
         LTR   R15,R15                  ANY UNITS AVAILABLE      S22025 87411222
         BNZ   ERREXIT                  NO                       S22025 87411922
         LH    RFROM7,DATOFF(,RPREFIX)  GET TOTAL SPACE          S22025 87412622
         N     RFROM7,AVTCLRHI          CLEAR                    S22025 87413322
         SH    RFROM7,INSOFF(,RPREFIX)  SUBTRACT SPACE AVAIL     S22025 87414022
         BCTR  RFROM7,R0                SUBTRACT ONE             S22025 87414722
         STH   RFROM7,PRFSIZE           SET NEW SIZE             S22025 87415422
         LR    R0,RFROM7                GET OFFSET TO START      S22025 87416122
         LR    RFROM7,RWORK8            GET OFFSET OF NEXT       S22025 87416822
         LR    RWORK8,R0                SAVE OFFSET OF START     S22025 87417522
UNITSCAN EQU   *                        TO FIND THE UNIT         S22025 87418222
         CH    RWORK8,AVTKEYLE          END OF DATA IN THIS UNIT S22025 87418922
         BNH   QMANIP                   YES                      S22025 87419622
         SH    RWORK8,AVTKEYLE          OBTAIN NEXT              S22025 87420322
         B     UNITSCAN                 UNIT                     S22025 87421022
QMANIP   EQU   *                                                 S22025 87421722
         L     RWORK2,PRFLCB-1          LCB ADDRESS              S22025 87422422
         L     RWORK2,LCBDCBPT-IEDQLCB(,RWORK2)  DCB ADDRESS     S22025 87423122
         SR    R0,R0                    INITIALIZE REGISTER      S22025 87423822
         IC    R0,DCBRESER+1-IHADCB(,RWORK2) NO OF TEXT IDLES    S22025 87424522
         LR    RWORK2,R0                SAVE NUMBER IDLES        S22025 87425222
         LA    RWORK2,AVTTXTSZ(,RWORK2) TEXT PREFIX SIZE         S22025 87425922
         LH    R1,PRFSIZE               GET TOTAL SIZE IN OLD    S22025 87426622
         CR    RWORK2,RWORK8            SPACE AVAILABLE          S22025 87427322
         BNH   BLDPRF                   BUILD A PREFIX           S22025 87428022
GETUNIT  EQU   *                                                 S22025 87428722
         SR    R0,R0                    CLEAR                    S22025 87429422
         STH   R0,INSOFF(,RPREFIX)      ZERO SPACE AVAILABLE     S22025 87430122
         LA    R1,AVTPARM               LINK TO                  S22025 87430822
         L     R15,AVTUI                AO TO GET                S22025 87431522
         BALR  R14,R15                  UNIT                     S22025 87432222
         LTR   R15,R15                  ANY UNITS                S22025 87432922
         BNZ   ERREXIT                  NO                       S22025 87433622
         LH    R1,PRFSIZE               GET SIZE OF UNIT         S22025 87434322
         N     R1,AVTCLRHI              CLEAR                    S22025 87435022
         SH    R1,AVTKEYLE              GET CORRECT SIZE         S22025 87435722
         STH   R1,PRFSIZE               STORE                    S22025 87436422
         AH    RWORK8,AVTKEYLE          ADJUST DATA OFFSET       S22025 87437122
BLDPRF   EQU   *                                                 S22025 87437822
         SR    R15,R15                  CLEAR                    S22025 87438522
         IC    R15,PRFNBUNT             GET NO UNITS             S22025 87439222
         SR    R0,R0                    CLEAR                    S22025 87439922
         N     R1,AVTCLRHI              CLEAR  HIGH              S22025 87440622
         LH    R14,AVTKEYLE             GET UNIT SIZE            S22025 87441322
         DR    R0,R14                   DIVIDE                   S22025 87442022
         LTR   R0,R0                    ANY PARTIAL UNITS        S22025 87442722
         BZ    SETUNITS                 NO                       S22025 87443422
         LA    R1,ONE(,R1)              ADD TO NO FILLED         S22025 87444122
SETUNITS EQU   *                        INDICATE NO UNITS IN     S22025 87444822
         STC   R1,PRFNBUNT              SET NO UNITS OLD BUF     S22025 87445522
         SR    R15,R1                   GET NO IN NEW            S22025 87446222
         LR    RDATAD5,RPREFIX          GET FIRST UNIT           S22025 87446922
BLOOP    EQU   *                                                 S22025 87447622
         L     RDATAD5,PRFTIC-IEDQPRF(,RDATAD5)  GET UNIT        S22025 87448322
         BCT   R1,BLOOP                 GET NEXT UNIT            S22025 87449022
         L     RLCB4,PRFLCB-1           GET LCB ADDRESS          S22025 87449722
         MVC   PRFLCB-IEDQPRF(THREE,RDATAD5),LCBSCBA SCB ADDR IN S22025 87450422
         MVC   MVOFF(LEN,RDATAD5),MVOFF(RPREFIX) MOVE PREFIX     S22025 87451122
         L     RLCB4,AVTADBUF           SAVE OLD BUF ADDRESS     S22025 87451822
         ST    RDATAD5,AVTADBUF         SET UP NEW BUF ADDRESS   S22025 87452522
         LR    RPREFIX,RDATAD5          SET BASE TO NEW BUFFER   S22025 87453222
         STC   R15,PRFNBUNT             SET NO UNITS NEW BUF     S22025 87453922
         LA    R15,ONE(,RWORK8)         DATA OFFSET PLUS ONE     S22025 87454622
         STH   R15,DATOFF(,RPREFIX)     DATA OFFSET              S22025 87455322
         BCTR  R15,R0                   SUBT ONE FROM OFFSET     S22025 87456022
         SR    R15,RWORK2               SUBTRACT PREFIX+IDLES    S22025 87456722
         STH   R15,INSOFF(,RPREFIX)     SPACE AVAILABLE          S22025 87457422
         OI    PRFSTAT1,PRFNHDRN        INSURE TEXT BUFFER       S22025 87458122
         OI    PRFTQBCK+TWO,BFREDIT     INDICATE DATA MOVEMENT   S22025 87458422
         STH   RWORK2,PRFSCAN           SCAN PAST PRFIX AND RES  S22025 87458822
         LR    RWORK2,RFROM7            GET OFFSET OF NEXT BYTE  S22025 87459522
         AR    RWORK8,RWORK2            GET SIZE                 S22025 87460222
         STH   RWORK8,PRFSIZE           STORE SIZE               S22025 87460922
         LR    RWORK8,RWORK2            SET UP REG 8 FOR AF      S22025 87461622
         IC    R15,AVTPARM+2            AF INDEX                 S22025 87462322
         LA    R15,ONE(R15)             SHIFT DATA FUNCTION      S22025 87463022
         STC    R15,AVTPARM             PUT INDEX IN PARMLIST    S22025 87463722
         MVI   AVTPARM+1,AVTEZERO       INDICATE DATA IA CHAR    S22025 87464422
         LA    R1,AVTPARM               POINT TO PARMLIST   T    S22025 87465122
         L     R15,AVTUI                GET INTERFACE ROUTINE    S22025 87465822
         BALR  R14,R15                  GO TO AF                 S22025 87466522
         LH    RWORK2,PRFSIZE           GET SIZE SPACE AVAIL     S22025 87467222
         SH    RWORK2,INSOFF(,RPREFIX)  SUBTRACT SPACE AVAIL     S22025 87467922
         STH   RWORK2,PRFSIZE           STORE CORRECT SIZE       S22025 87468622
         LH    R14,AVTHA2               GET TIC ADDR FOR LAST UNIS22025 87469322
         SR    R15,R15                  CLEAR                    S22025 87470022
         IC    R15,PRFNBUNT             NO UNITS IN NEW BUF      S22025 87470722
         B     LNUNIT                   TRY NEXT                 S22025 87471422
FINAL    EQU   *                        LAST UNIT FOUND          S22025 87472122
         L     RDATAD5,PRFTIC-IEDQPRF(,RDATAD5) GET NEXT         S22025 87472822
LNUNIT   EQU   *                        FIND LAST UNIT           S22025 87473522
         BCT   R15,FINAL                FOUND, GET OUT           S22025 87474222
         LR    RFROM7,R10               GET AP PARMLIST          S22025 87474922
         LA    R10,FOUR                 GET OFFSET               S22025 87475622
         SR    RFROM7,R10               BACK UP TO QUEUE         S22025 87476322
         ST    R14,PRFTIC-IEDQPRF(,RDATAD5)  INVALID TIC ADDR    S22025 87477022
         MVI   PRFTIC-IEDQPRF(RDATAD5),EIGHT SET TIC FLAG        S22025 87477722
         LR    RDATAD5,RPREFIX          POINT TO FIRST UNIT      S22025 87478422
         LR    RPREFIX,RLCB4            RESTORE ORIGINAL BUFFER  S22025 87479122
         ST    RPREFIX,AVTADBUF         IN AVT                   S22025 87479822
         NC    ONE(THREE,RFROM7),ONE(RFROM7) IS QUEUE EMPTY      S22025 87480522
         BZ    NOBUFS                   YES                      S22025 87481222
         L     RWORK8,AVTEZERO(,RFROM7) NO GET NEXT BUFFER       S22025 87481922
LOOP1    EQU   *                                                 S22025 87482622
         NC    FIVE(THREE,RWORK8),FIVE(RWORK8) IS THIS LAST ON Q S22025 87483322
         BZ    QLINK                    YES LINK IN NEW BUF      S22025 87484022
         L     RWORK8,FOUR(RWORK8)      NO GET NEXT BUF ADDR     S22025 87484722
         B     LOOP1                    GET NEXT BUF ADDR        S22025 87485422
QLINK    EQU   *                                                 S22025 87486122
         ST    RDATAD5,FOUR(RWORK8)     LINK BUF IN Q            S22025 87486822
         B     LASTBUF                  INDICATE LAST BUFFER     S22025 87487522
NOBUFS   EQU   *                                                 S22025 87488222
         ST    RDATAD5,AVTEZERO(,RFROM7) PUT BUFFER ON QUEUE     S22025 87488922
         MVC   FIVE(THREE,RDATAD5),AVTFZERO  CLEAR LINK FIELD    S22025 87489622
LASTBUF  EQU   *                                                 S22025 87490322
         MVC   INSOFF(TWO,RPREFIX),AVTFZERO NO BYTES LEFT OVER   S22025 87494322
EXIT     EQU   *                                                        87500020
         LH    R0,PRFSIZE               GET OLD BUFFER SIZE             87900020
         N     R0,AVTCLRHI                                              88200020
         SPACE                                                          88500020
EXIT1    EQU   *                                                        88800020
         SH    R0,INSOFF(,RPREFIX)      SUBTRACT LEFT-OVER BYTES        89100020
         STH   R0,PRFSIZE               SET NEW BUFFER SIZE             89400020
         LA    RPFXSZ11,ONE(,RPFXSZ11)  GET SIZE IF 1 DATA BYTE         89450020
         CR    RPFXSZ11,R0              IS THERE 1 DATA BYTE            89500020
         BNH   ZERORTN                  AT LEAST ONE, BRANCH            89550020
         SPACE                                                          89600020
         STH   RPFXSZ11,PRFSIZE         NOT EVEN ONE, FORCE ONE         89650020
         SPACE                                                          89700020
ZERORTN  EQU   *                                                        90000020
         SR    R15,R15                  SET GOOD RETURN CODE            90300020
         SPACE                                                          90360020
         TM    PRFKEY+1,SCANADJ         MUST SCAN BE ADJUSTED           90740022
         BNO   EXIT2                    NO, RETURN TO MH        SA58444 90940022
         SPACE 1                                                        91140022
         MVC   PRFSCAN(2),PRFKEY+2      RESTORE SCAN POINTER            91340022
         SPACE                                                          91800020
EXIT2    EQU   *                                                        93000020
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025 93100022
         B     FOUR(RBASE)              BRANCH TO RETURN ROUTINE S22025 93200022
         SPACE 3                                                        93500020
ERREXIT  EQU   *                                                        93600020
         LA    R15,AVTECD4              SET ERROR RETURN CODE           93700020
         B     EXIT2                    RETURN TO CALLER        SA58444 93800022
         EJECT                                                          95400020
********* DSECTS *********                                              95700020
         SPACE                                                          95770022
         DCBD  DSORG=TX                                                 95840022
         EJECT                                                          95910022
         SPACE                                                          96000020
         TAVTD                                                          96300020
         EJECT                                                          96600020
         TLCBD                                                          96900020
         EJECT                                                          97200020
         TPRFD                                                          97500020
         EJECT                                                          97800020
         TSCBD                                                          98100020
         END                                                            98400020
