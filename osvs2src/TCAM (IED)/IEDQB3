         TITLE 'IEDQB3 - AUTOMATIC DATE/TIME INSERTION ROUTINE'         00100010
IEDQB3   CSECT                                                          00300010
* CHANGE ACTIVITY = AS FOLLOWS:                                         00300110
*D213400-214600,705000-726000                                   SA56226 00300210
*C215400                                                        SA56226 00300310
*A156000                                                       @OX14779 00300410
*C402000-417000                                                @OX14779 00300510
*********************************************************************** 00600010
*                                                                     * 00900010
* MODULE-NAME = IEDQB3                                                * 00920010
*                                                                     * 00940010
* DESCRIPTIVE-NAME = AUTOMATIC DATE/TIME INSERTION ROUTINE            * 00960010
*                                                                     * 00980010
* COPYRIGHT = 'NONE'                                                  * 01000010
*                                                                     * 01020010
* STATUS - CHANGE LEVEL=00                                            * 01100010
*                                                                     * 01300010
*                                                                     * 01500010
* FUNCTION - THIS ROUTINE EXPANDS A HEADER BUFFER AND INSERTS THE     * 01700010
*    DATE AND TIME.  THIS FUNCTION IS PERFORMED ONLY FOR TPROCESS     * 01900010
*    ENTRIES THAT SPECIFY DATE=YES.  IT ALSO REQUIRES THAT DATE=YES   * 02100010
*    BE CODED ON THE ASSOCIATED PCB MACRO.                            * 02300010
*                                                                     * 02500010
*                                                                     * 02700010
* ENTRY POINTS - IEDQB3                                               * 02900010
*                                                                     * 03100010
*                                                                     * 03300010
* INPUT - REGISTER  3 HAS THE SCB ADDRESS                             * 03500010
*         REGISTER  4 HAS THE LCB ADDRESS                             * 03700010
*         REGISTER  9 HAS THE AVT ADDRESS                             * 03900010
*         REGISTER  6 HAS THE BUFFER ADDRESS                          * 04100010
*         REGISTER 13 HAS A SAVEAREA ADDRESS                          * 04300010
*         REGISTER 14 HAS A RETURN ADDRESS                            * 04500010
*         REGISTER 15 HAS THE ENTRY POINT ADDRESS                     * 04700010
*                                                                     * 04900010
*                                                                     * 05100010
* OUTPUT - NONE                                                       * 05300010
*                                                                     * 05500010
*                                                                     * 05700010
* EXTERNAL REFERENCES - AVT,SCB,LCB,BUFFER,BUFFER POOL                * 05900010
*                                                                     * 06100010
*                                                                     * 06300010
* EXITS,NORMAL - RETURN TO ADDRESS IN REGISTER 14                     * 06500010
*                                                                     * 06700010
* EXITS,ERROR - NONE                                                  * 06900010
*                                                                     * 07100010
*                                                                     * 07300010
* TABLES/WORKAREAS - AVTDOUBL                                         * 07500010
*                                                                     * 07700010
*                                                                     * 07900010
* ATTRIBUTES - SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     * 08100010
*    PROBLEM PROBLEM MODE                                             * 08300010
*                                                                     * 08500010
*                                                                     * 08700010
* CHARACTER CODE DEPENDENCIES - THE OPERATION OF THIS MODULE HAS      * 08900010
*    NO CHARACTER CODE DEPENDENCIES.                                  * 09100010
*                                                                     * 09300010
* NOTES - NONE                                                        * 09500010
*                                                                     * 11100010
*********************************************************************** 11400010
         EJECT                                                          11600010
R0       EQU   0                        WORK REGISTER                   11800010
R1       EQU   1                        INPUT REGISTER                  12000010
RWORK2   EQU   2                        WORK REGISTER                   12200010
RSCB     EQU   3                        SCB BASE                        12400010
RLCB     EQU   4                        LCB BASE                        12600010
RWORK3   EQU   5                        WORK REGISTER                   12800010
RPREFIX  EQU   6                        BUFFER BASE REGISTER            13000010
RWORK4   EQU   7                        WORK REGISTER                   13200010
RBUF     EQU   8                        BUFFER POINTER                  13400010
RAVT     EQU   9                        AVT BASE REGISTER               13600010
RWORK    EQU   10                       WORK REGISTER                   13800010
RWORK1   EQU   11                       WORK REGISTER                   14000010
RBASE    EQU   12                       MODULE BASE REGISTER            14200010
RSAVE    EQU   13                       SAVEAREA BASE REGISTER          14400010
RETURN   EQU   14                       RETURN REGISTER                 14600010
RTO      EQU   14                       WORK REGISTER                   14800010
RENTRY   EQU   15                       ENTRY POINT REGISTER            15000010
RFROM    EQU   15                       WORK REGISTER                   15200010
OFF1     EQU   1                        OFFSET OF 1                     15400010
OFF5     EQU   5                        OFFSET OF 5                     15600010
FOUR     EQU   4                        CONSTANT OF FOUR       @OX14779 15700010
OFF8     EQU   8                        OFFSET OF 8                     15800010
ROFF     EQU   12                       OFFSET OF 12                    16000010
         EJECT                                                          16200010
         USING IEDQB3,RBASE             ADDRESSABILITY                  16400010
         USING IEDQSCB,RSCB             SCB ADDRESSABILITY              16600010
         USING IEDQLCB,RLCB             LCB ADDRESSABILITY              16800010
         USING IEDQPRF,RPREFIX          BUFFER ADDRESSABILITY           17000010
         USING IEDQAVTD,RAVT            AVT ADDRESSABILITY              17200010
         STM   RETURN,RBASE,ROFF(RSAVE) SAVE REGISTERS                  17400010
         LR    RBASE,RENTRY             GET ENTRY ADDRESS               17600010
         B     START                    BEGIN                           17800010
IEDQB3   IEDHJN                                                         19900010
START    DS    0H                                                       20300010
BEGIN    EQU   *                                                        21500010
         OI    SCBBSCFM,SCBDATEN        SET DATE INSERTED       SA56226 21540010
         SR    RBUF,RBUF                CLEAR REG                       21600010
         SR    RWORK,RWORK              CLEAR FOR DIVIDE                21900010
         SPACE 2                                                        22000010
*********************************************************************** 22100010
* THIS SECTION DIVIDES PRFSIZE BY KEYLENGTH TO DETERMINE THE NUMBER     22200010
* OF FULL UNOTS AND THE AMOUNT OF DATA IN THE PARTIALLY FILLED UNIT,    22500010
* IF THERE IS ONE.                                                      22800010
*********************************************************************** 22900010
         SPACE 2                                                        23000010
         LH    RWORK1,PRFSIZE           GET AMOUNT OF DATA              23100010
         N     RWORK1,AVTCLRHI          ASSURE POSITIVE VLAUE           23400010
         LH   RWORK2,AVTKEYLE           GET UNIT SIZE                   23700010
         N     RWORK2,AVTCLRHI         AASSURE POSITIVE                 24000010
         DR    RWORK,RWORK2             DIVIDE PRFSIZE BY INIT          24300010
         ST    RWORK1,AVTDOUBL          SAVE NO UNITS FILLED            24600010
         ST    RWORK,AVTDOUBL+4         SAVE NO BYTES IN PARTIAL       -24900010
                                         UNIT, IF ANY                   25200010
         SR    RWORK2,RWORK2            CLEAR FOR COMPARE               25500010
         IC    RWORK2,PRFNBUNT          GET NO UNITS IN BUFFER          25800010
         LTR  RWORK,RWORK               IS THERE A PARTIAL UNIT         26100010
         BZ    UNITFULL                 NO,ALL FULL                     26400010
         SPACE                                                          26700010
         LA    RWORK,OFF8(RWORK)        ADD FOR DATE/TIME               27000010
         CH    RWORK,AVTKEYLE           WILL DATE/TIME FIT IN           27300010
         BNH   WILLFIT                  YES, GO GET DATE/TIME           27600010
         SPACE                                                          27900010
         LA    RWORK1,OFF1(RWORK1)      GET TOTAL NO UNITS THAT        -28200010
                                         CONTAIN DATA                   28500010
         SPACE 2                                                        28600010
*********************************************************************** 28700010
* AT THIS POINT, THERE IS NOT A PARTIALLY FILLED UNIT THAT WILL         28800010
* CONTAIN THE 8 BYTES OF DATE/TIME.  THIS SECTION CHECKS TO SEE IF      29100010
* THERE ARE UNUSED UNITS AT THE END OF THE BUFFER.                      29400010
*********************************************************************** 29500010
         SPACE 2                                                        29600010
UNITFULL EQU   *                                                        29700010
         CR    RWORK1,RWORK2            IS THERE AN EMPTY UNIT         -30000010
                                         ALREADY IN THE BUFFER          30300010
         BL    WILLFIT                  YES, DON'T GET ANOTHER          30600010
         SPACE 2                                                        30700010
*********************************************************************** 30800010
         SPACE                                                          30900010
* THIS SECTION GETS A UNIT FROM TCAM'S BUFFER POLL (IF AVAILABLE).      31200010
*********************************************************************** 31300010
         SPACE 2                                                        31400010
         L     RBUF,AVTBFREB            FIRST UNIT IN POOL              31500010
         LA    RBUF,AVTEZERO(RBUF)      CLEAR GARBAGE                   31800010
         LTR   RBUF,RBUF                POOL EMPTY                      32100010
         BZ    ALLDONE                 YES, CAN'T DO FUNCTION           32400010
         SPACE                                                          32700010
         MVC   AVTBFREB+1(3),OFF5(RBUF) DELINK UNIT                     33000010
         XC    OFF5(3,RBUF),OFF5(RBUF)  CLEAR LINK FIELD                33300010
         LH    RWORK1,AVTAVFCT          GET AVAILABLE UNIT COUNT        33600010
         BCTR  RWORK1,AVTEZERO          SUBTRACT ONE                    33900010
         STH   RWORK1,AVTAVFCT          RESTORE UNIT COUNT              34200010
         SPACE 2                                                        34300010
*********************************************************************** 34400010
* AT THIS POINT, WE KNOW WE HAVE ENOUGH SPACE IN THE BUFFER.  A BACK    34500010
* CHAIN IS SETUP SO THAT EACH UNIT POINTS TO THE PREVIOUS ONE AS        34800010
* WELL AS THE NEXT ONE.  IF A NEW UNIT WAS GOTTEN, IT IS CHAINED IN     35100010
* AND PRFNBUNT IS BUMPED.                                               35400010
*********************************************************************** 35500010
         SPACE 2                                                        35600010
WILLFIT  EQU  *                                                         35700010
         LR    RFROM,RPREFIX            POINT TO FIRST UNIT             36000010
         BCTR  RWORK2,AVTEZERO          SUBTRACT ONE FROM UNITS         36300010
         CLI   PRFNBUNT,OFF1            IS THERE ONLY ONE UNIT          36600010
         BE    ONEUNIT                  YES, NO CHAINING NEEDED         36900010
         SPACE                                                          37200010
LOOP     EQU   *                                                        37500010
         L     RTO,PRFTIC-IEDQPRF(,RFROM) GET ADDRESS OF NEST UNIT      37800010
         ST    RFROM,PRFLINK-1-IEDQPRF(,RTO) SET BACK CHAIN             38100010
         LR    RFROM,RTO                GO TO NEXT UNIT                 38400010
         BCT   RWORK2,LOOP              CONTINE CHAIN                   38700010
ONEUNIT  EQU   *                                                        39000010
         LTR   RBUF,RBUF                DID I GET A UNIT                39300010
         BZ    SHIFT                    NO, READY TO SHIFT DATA         39600010
         SPACE                                                          39900010
         MVC   PRFTIC-IEDQPRF(FOUR,RBUF),PRFTIC-IEDQPRF(RFROM) @OX14779 40200010
*                                       POINT NEW UNIT TO NEXT @OX14779 40400010
*                                        BUFFER                @OX14779 40600010
         IC    RWORK2,PRFTIC-IEDQPRF(,RFROM)  CHAIN NEW UNIT   @OX14779 40800010
         ST    RBUF,PRFTIC-IEDQPRF(,RFROM)    TO PREVIOUS UNIT @OX14779 41000010
         STC   RWORK2,PRFTIC-IEDQPRF(,RFROM)  SAVING TIC FLAGS @OX14779 41200010
         ST    RFROM,PRFLINK-1-IEDQPRF(RBUF)  SET BACK CHAIN   @OX14779 41400010
         IC    RWORK2,PRFNBUNT          GET ORIGINAL COUNT              42000010
         LA    RWORK2,OFF1(RWORK2)     ADD FOR NEW UNIT                 42300010
         STC   RWORK2,PRFNBUNT          STORE NEW COUNT                 42600010
         SPACE 2                                                        42700010
*********************************************************************** 42800010
* NOW WE MUST FIND THE LENGTH TO BE MOVED AND THE TO AND FROM POINTS.   42900010
*********************************************************************** 43000010
         SPACE 2                                                        43100010
SHIFT    EQU   *                                                        43200010
         LR    RFROM,RPREFIX           GET FIRST UNIT                   43500010
         LH    RWORK,PRFSIZE            GET TOTAL SIZE                  43800010
         N     RWORK,AVTCLRHI           CLEAR  HALF                     44100010
LOOP1    EQU   *                                                        44400010
         CH    RWORK,AVTKEYLE           LESS THAN A UNIT                44700010
         BNH   GOTFROM                  YES, THIS IS FROM UNIT          45000010
         SPACE                                                          45300010
         L     RFROM,PRFTIC-IEDQPRF(,RFROM) GET NEXT UNIT               45600010
         SH    RWORK,AVTKEYLE           ADJUST SIZE                     45900010
         B     LOOP1                    TRY NEXT                        46200010
         SPACE                                                          46500010
GOTFROM  EQU   *                                                        46800010
         LR    RWORK1,RFROM             RWORK=ADDRESS OF 'FROM' UNIT    47100010
         LA    RBUF,ROFF(,RWORK1)       RBUF=ADDRESS OF DATA            47400010
         CR    RWORK1,RPREFIX           FIRST UNIT                      47700010
         BNE   NOTFIRST                 NO, IGNORE HEADER FOR NOW       48000010
         SPACE                                                          48300010
         LA    RBUF,AVTHDRSZ(,RBUF)     BUMP PAST HDR PREFIX            48600010
NOTFIRST EQU   *                                                        48900010
         LA    RFROM,ROFF(RWORK,RWORK1) BUMP TO END OF DATA             49200010
         LA    RWORK,OFF8(,RWORK)       BUMP LENGTH FOR INSERT          49500010
         CH    RWORK,AVTKEYLE           WILL UNIT HOLD INSERTION        49800010
         BNH   THISONE                  YES, 'TO' AND 'FROM' SAME       50100010
         SPACE                                                          50400010
         SH    RWORK,AVTKEYLE           GET OFFSET INTO NEW UNIT        50700010
         L     RWORK2,PRFTIC-IEDQPRF(,RWORK1) GET NEW UNIT              51000010
         LA    RWORK4,ROFF(,RWORK2)     BUMP TO START OF DATA           51300010
         LA    RTO,ROFF(RWORK,RWORK2)   GET TARGET ADDRESS+1            51600010
         B     GOTTO                    PREPARE TO MOVE DATA            51900010
         SPACE                                                          52200010
THISONE EQU    *                                                        52500010
         LR    RWORK2,RWORK1            TARGET IN SAME UNIT             52800010
         LR    RWORK4,RBUF                                              53100010
         LA    RTO,OFF8(,RFROM)         BUMP 8 PAST 'FROM' BYTE         53400010
GOTTO    EQU   *                                                        53700010
         LH    RWORK,PRFSIZE            GET TOTAL LENGTH                54000010
         N     RWORK,AVTCLRHI           CLEAR GARBAGE                   54300010
         LA    RWORK3,AVTHDRSZ          GET PREFIX SIZE                 54600010
         SR    RWORK,RWORK3             ADJUST DATA SIZE                54900010
         LTR   RWORK,RWORK              ZERO LENGTH                     55200010
         BZ    ALLDONE                  NO DATA                         55500010
         SPACE                                                          55800010
MOVEL    EQU   *                                                        56100010
         BCTR  RFROM,AVTEZERO           BACK UP TO BYTE                 56400010
         BCTR RTO,AVTEZERO              BACK UP TO TARGET               56700010
         MVC   0(1,RTO),0(RFROM)        MOVE DATA                       57000010
         CR    RFROM,RBUF               END OF 'FROM' UNIT              57300010
         BNE   FROMOK                   NO, CONTINUE                    57600010
         SPACE                                                          57900010
         CR    RWORK1,RPREFIX           FIRST UNIT                      58200010
         BE    SHIFTED                  YES, THAT'S ALL                 58500010
         SPACE                                                          58800010
         L     RWORK1,PRFLINK-1-IEDQPRF(,RWORK1)                        59100010
         LA    RBUF,ROFF(,RWORK1)       GET DATA START                  59400010
         CR    RWORK1,RPREFIX           FIRST UNIT                      59700010
         BNE   NOPRF                    NO, IGNORE PREFIX               60000010
         SPACE                                                          60300010
         LA    RBUF,AVTHDRSZ(,RBUF)     BUMP PAST HDR                   60600010
NOPRF    EQU   *                                                        60900010
         LH    RFROM,AVTKEYLE           GET UNIT SIZE                   61200010
         N     RFROM,AVTCLRHI           CLEAR HALF                      61500010
         LA    RFROM,ROFF(RWORK1,RFROM) GO TO END OF UNIT               61800010
FROMOK   EQU   *                                                        62100010
         CR    RTO,RWORK4               END OF TARGET UNIT              62400010
         BNE   TOOK                     NO, CONTINUE                    62700010
         SPACE                                                          63000010
         L     RWORK2,PRFLINK-1-IEDQPRF(,RWORK2) GET PREVIOUS           63300010
         LA    RWORK4,ROFF(,RWORK2)     START OF DATA                   63600010
* IF THIS IS THE FIRST UNIT, RFROM SHOULD TERMINATE THE LOOP            63900010
         LH    RTO,AVTKEYLE             GET UNIT SIZE                   64200010
         N     RTO,AVTCLRHI             CLEAR                           64500010
         LA    RTO,ROFF(RWORK2,RTO)     GO TO END OF NEW UNIT           64800010
TOOK     EQU   *                                                        65100010
         BCT   RWORK,MOVEL              GET NEXT BYTE                   65400010
         SPACE                                                          65700010
SHIFTED  EQU   *                                                        66000010
         TIME  DEC                                                      66300010
         ST    R1,AVTDOUBL              SAVE DATE                       66600010
         ST    R0,AVTDOUBL+4            SAVE TIME                       66900010
         LR    RTO,RPREFIX              GET BUFFER                      67200010
         LA    RTO,ROFF(,RTO)          BUMP PAST  CCW                   67500010
         LA    RTO,AVTHDRSZ(,RTO)      BUMP PAST HDR                    67800010
         LH    RWORK,PRFSCAN            GET SCAN                        68100010
         N     RWORK,AVTCLRHI           CLEAR                           68400010
         LA    RWORK,OFF8(RWORK)        ADD FOR DATE/TIME               68700010
         STH   RWORK,PRFSCAN            STORE NEW SCAN PTR              69000010
         LH    RWORK,PRFSIZE            GET AMOUNT OF DATA              69300010
         N     RWORK,AVTCLRHI           CLEAR                           69600010
         LA    RWORK,OFF8(RWORK)        ADJUST FOR DATE/TIME            69900010
         STH   RWORK,PRFSIZE            STORE NEW SIZE                  70200010
COPY     EQU   *                                                        72700010
         L     RWORK,SCBDEOB            GET EOB BUFFER ADDRESS          72900010
         LA    RWORK,AVTEZERO(,RWORK)   CLEAR                           73200010
         CR    RWORK,RPREFIX            THIS ONE                        73500010
         BNE   NOTDEOB                  NO, IGNORE OFFSET               73800010
         SPACE                                                          74100010
         LH    RWORK,SCBEOB             GET EOB OFFSET                  74400010
         N     RWORK,AVTCLRHI           CLEAR                           74700010
         LA    RWORK,OFF8(RWORK)        ADJUST FOR DATE/TIME            75000010
         STH   RWORK,SCBEOB             STORE NEW EOB OFFSET            75300010
NOTDEOB  EQU   *                                                        75600010
         SR    RWORK,RWORK              CLEAR                           75900010
         IC    RWORK,LCBISZE            GET NO RESERVES                 76200010
         AR    RTO,RWORK                BUMP PAST                       76500010
         MVC   0(8,RTO),AVTDOUBL        INSERT DATE/TIME                76800010
ALLDONE EQU    *                                                        77100010
         LM    RETURN,RBASE,ROFF(RSAVE) RESTORE GEGISTERS               77400010
         BR    RETURN                   RETURN TO CALLER                77600010
         EJECT                                                          77800010
         TSCBD                                                          78000010
         TLCBD                                                          78300010
         TPRFD                                                          78600010
         TAVTD                                                          78900010
         END                                                            79200010
