         TITLE 'GENERALIZED TRANSLATE ROUTINE                          *00001000
                       '                                                00002000
IKJCB831 CSECT ,                                                   0001 00003000
GENTRANS DS    0H                                                  0001 00004000
         ENTRY GENTRANS                                                 00005000
@MAINENT DS    0H                                                  0001 00006000
         USING *,@15                                               0001 00007000
         B     @PROLOG                                             0001 00008000
         DC    AL2(@EP00001-@MAINENT)                                   00009000
         DC    AL1(16)                                             0001 00010000
         DC    C'IKJCB831  73.255'                                 0001 00011000
         DROP  @15                                                      00012000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00013000
         BALR  @11,0                                               0001 00014000
@PSTART  LA    @12,4095(,@11)                                      0001 00015000
         USING @PSTART,@11                                         0001 00016000
         USING @PSTART+4095,@12                                    0001 00017000
         L     @00,@SIZDATD                                        0001 00018000
         GETMAIN R,LV=(0)                                               00019000
         LR    @10,@01                                             0001 00020000
         USING @DATD,@10                                           0001 00021000
         ST    @13,@SA00001+4                                      0001 00022000
         LM    @15,@01,16(@13)                                     0001 00023000
         ST    @10,8(,@13)                                         0001 00024000
         LR    @13,@10                                             0001 00025000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00026000
         AH    @15,4(,@15)                                         0001 00027000
         BR    @15                                                 0001 00028000
@EP00001 DS    0H                                                  0002 00029000
*                                                                  0073 00030000
*                                                                  0074 00031000
*        GTPLPTR = R1;                                             0074 00032000
         ST    R1,GTPLPTR                                          0074 00033000
*        FAIL = '00'X;                 /* INITIALIZE FAIL BYTE       */ 00034000
         MVI   FAIL,X'00'                                          0075 00035000
*        SWITCH = '0000'X;             /* INITIALIZE SWITCHES        */ 00036000
         MVC   SWITCH(2),@CB00432                                  0076 00037000
*        RTCODE = 0;                   /* INITIALIZE RETURN CODE     */ 00038000
         SR    @06,@06                                             0077 00039000
         ST    @06,RTCODE                                          0077 00040000
*        CALL  GETSTRGE;               /* GET CORE FOR TEXT, ADDRESS */ 00041000
         BAL   @14,GETSTRGE                                        0078 00042000
*        CALL  TRNSLATE;               /* TRANSLATE PARAMETERS       */ 00043000
*                                                                  0079 00044000
         BAL   @14,TRNSLATE                                        0079 00045000
*        IF FAIL ^= 0 & GETFAIL ^= '1'B THEN /* IF GENTRANS FAILED,  */ 00046000
         CLI   FAIL,0                                              0080 00047000
         BE    @RF00080                                            0080 00048000
         TM    GETFAIL,B'01000000'                                 0080 00049000
         BO    @RF00080                                            0080 00050000
*          DO;                         /* IF NOT GETMAIN FAILURE,    */ 00051000
*            GTPLOUTA = 0;                                         0082 00052000
         L     @06,GTPLPTR                                         0082 00053000
         SR    @02,@02                                             0082 00054000
         ST    @02,GTPLOUTA(,@06)                                  0082 00055000
*            R1 = ADDRPTR;             /* PUT ADDRESS IN REG 1       */ 00056000
         L     R1,ADDRPTR                                          0083 00057000
*            SBPOOL = '01'X;           /* SUBPOOL AND                */ 00058000
         MVI   SBPOOL,X'01'                                        0084 00059000
*            SIZE = ADDRCTR + 8 + TEXTCTR; /* LENGTH                 */ 00060000
         LA    @06,8                                               0085 00061000
         AR    @06,ADDRCTR                                         0085 00062000
         AR    @06,TEXTCTR                                         0085 00063000
         ST    @06,@TF00001                                        0085 00064000
         MVC   SIZE(3),@TF00001+1                                  0085 00065000
*            R0 = SPLEN;               /* IN REG 0                   */ 00066000
         L     R0,SPLEN                                            0086 00067000
*            GEN (FREEMAIN R,LV=(0),A=(1));  /* FREE STORAGE         */ 00068000
         FREEMAIN R,LV=(0),A=(1)                                        00069000
*          END;                                                    0088 00070000
*                                                                  0088 00071000
*        R15 = RTCODE;                 /* RETURN CODE IN REG 15      */ 00072000
@RF00080 L     R15,RTCODE                                          0089 00073000
*        RETURN CODE(R15);             /* RETURN TO CALLER           */ 00074000
         LR    @09,@15                                             0090 00075000
         L     @13,4(,@13)                                         0090 00076000
         L     @00,@SIZDATD                                        0090 00077000
         LR    @01,@10                                             0090 00078000
         FREEMAIN R,LV=(0),A=(1)                                        00079000
         LR    @15,@09                                             0090 00080000
         L     @14,12(,@13)                                        0090 00081000
         LM    @00,@12,20(@13)                                     0090 00082000
         BR    @14                                                 0090 00083000
*                                                                  0091 00084000
*/********************************************************************/ 00085000
*/*                                                                  */ 00086000
*/* SEGMENT NAME -                                                   */ 00087000
*/*      GETSTRGE                                                    */ 00088000
*/*                                                                  */ 00089000
*/* FUNCTION -                                                       */ 00090000
*/*      THIS ROUTINE DETERMINES THE AMOUNT OF STORAGE NEEDED FOR    */ 00091000
*/*      THE TEXT UNITS TO BE BUILT, AND THE ADDRESSES OF THE TEXT   */ 00092000
*/*      UNITS.  THE GETMAIN IS ISSUED, AND IF SUCCESSFUL, POINTERS  */ 00093000
*/*      TO THE STORAGE ARE SET UP.  IF THE GETMAIN FAILED, THE      */ 00094000
*/*      RETURN CODE IS SET TO 12.                                   */ 00095000
*/*                                                                  */ 00096000
*/* INPUT -                                                          */ 00097000
*/*      PTR TO PDL                                                  */ 00098000
*/*      PTR TO PCL                                                  */ 00099000
*/*      PTR TO ADDITIONAL TEXT                                      */ 00100000
*/*                                                                  */ 00101000
*/* OUTPUT -                                                         */ 00102000
*/*      PTR TO ADDRESS STORAGE                                      */ 00103000
*/*      PTR TO TEXT STORAGE                                         */ 00104000
*/*      RETURN CODE :                                               */ 00105000
*/*           0 = SUCCESSFUL                                         */ 00106000
*/*           8 = UNSUPPORTED PARAMETER TYPE                         */ 00107000
*/*          12 = GETMAIN FAILURE                                    */ 00108000
*/*                                                                  */ 00109000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00110000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00111000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION       */ 00112000
*/*                                                                  */ 00113000
*/********************************************************************/ 00114000
*    GETSTRGE: PROC;                                               0091 00115000
GETSTRGE STM   @14,@02,@SA00002                                    0091 00116000
         STM   @04,@06,@SA00002+20                                 0091 00117000
         STM   @08,@12,@SA00002+32                                 0091 00118000
*        PCLADS = GTPLPCL;             /* GET PTR TO PCL             */ 00119000
         L     @15,GTPLPTR                                         0092 00120000
         L     @14,GTPLPCL(,@15)                                   0092 00121000
         ST    @14,PCLADS                                          0092 00122000
*        PDLADS = GTPLPDL;             /* AND PTR TO PDL             */ 00123000
         L     @15,GTPLPDL(,@15)                                   0093 00124000
         ST    @15,PDLADS                                          0093 00125000
*        TEXTCTR = 0;                  /* INITIALIZE COUNTERS        */ 00126000
         SR    @09,@09                                             0094 00127000
         LR    TEXTCTR,@09                                         0094 00128000
*        ADDRCTR = 0;                                              0095 00129000
*                                                                  0095 00130000
         LR    ADDRCTR,@09                                         0095 00131000
*        CURPCE = PCLADS + 6;          /* INCREMENT PAST PCL HEADER  */ 00132000
         AH    @14,@CH00140                                        0096 00133000
         LR    CURPCE,@14                                          0096 00134000
*        CURPDE = PDLADS + CMPDEOF;                                0097 00135000
         AH    @15,CMPDEOF(,CURPCE)                                0097 00136000
         LR    CURPDE,@15                                          0097 00137000
*        DO WHILE (PCLEND = '0'B);     /* DO UNTIL END OF PCL FOUND  */ 00138000
         B     @DE00098                                            0098 00139000
@DL00098 DS    0H                                                  0099 00140000
*          CALL PARMSTG;               /* INVOKE PARMSTG             */ 00141000
         BAL   @14,PARMSTG                                         0099 00142000
*          IF FAIL = 0 THEN            /* IF PARMSTG SUCCESSFUL,     */ 00143000
         CLI   FAIL,0                                              0100 00144000
         BNE   @RF00100                                            0100 00145000
*            CURPCE = CURPCE + PCELEN; /* GET NEXT PCE AND REPEAT    */ 00146000
         AH    CURPCE,PCELEN                                       0101 00147000
*          ELSE                                                    0102 00148000
*            PCLEND = '1'B;            /* ELSE, EXIT FROM D0-WHILE   */ 00149000
         B     @RC00100                                            0102 00150000
@RF00100 OI    PCLEND,B'10000000'                                  0102 00151000
*        END;                                                      0103 00152000
*                                                                  0103 00153000
@RC00100 DS    0H                                                  0103 00154000
@DE00098 TM    PCLEND,B'10000000'                                  0103 00155000
         BZ    @DL00098                                            0103 00156000
*        IF FAIL = 0 THEN              /* ERROR FOUND ?              */ 00157000
         CLI   FAIL,0                                              0104 00158000
         BNE   @RF00104                                            0104 00159000
*          DO;                         /* NO -                       */ 00160000
*            PCLEND = '0'B;                                        0106 00161000
         NI    PCLEND,B'01111111'                                  0106 00162000
*            IF GTPLABLK ^= 0 THEN     /* IF ADDITIONAL TEXT SUPPLIED*/ 00163000
         L     @06,GTPLPTR                                         0107 00164000
         L     @06,GTPLABLK(,@06)                                  0107 00165000
         LTR   @06,@06                                             0107 00166000
         BZ    @RF00107                                            0107 00167000
*              ADDRCTR = ADDRCTR + (ADDBLKNM*4); /* ADD TO COUNTER   */ 00168000
         LH    @06,ADDBLKNM(,@06)                                  0108 00169000
         SLA   @06,2                                               0108 00170000
         AR    ADDRCTR,@06                                         0108 00171000
*            SIZE = ADDRCTR+TEXTCTR+8; /* LENGTH AND                 */ 00172000
@RF00107 LR    @06,ADDRCTR                                         0109 00173000
         AR    @06,TEXTCTR                                         0109 00174000
         AH    @06,@CH00162                                        0109 00175000
         ST    @06,@TF00001                                        0109 00176000
         MVC   SIZE(3),@TF00001+1                                  0109 00177000
*            SBPOOL = '01'X;           /* SUBPOOL NUMBER             */ 00178000
         MVI   SBPOOL,X'01'                                        0110 00179000
*            R0 = SPLEN;               /* IN REG 0                   */ 00180000
         L     R0,SPLEN                                            0111 00181000
*            GEN (GETMAIN R,LV=(0));   /* GET CORE                   */ 00182000
*                                                                  0112 00183000
         GETMAIN R,LV=(0)                                               00184000
*            IF R15 ^= 0 THEN          /* IF GETMAIN FAILED,         */ 00185000
         LTR   R15,R15                                             0113 00186000
         BZ    @RF00113                                            0113 00187000
*              DO;                     /* THEN                       */ 00188000
*                RTCODE = 12;          /* SET RETURN CODE            */ 00189000
         MVC   RTCODE(4),@CF00037                                  0115 00190000
*                GETFAIL = '1'B;       /* INDICATE ERROR TYPE        */ 00191000
         OI    GETFAIL,B'01000000'                                 0116 00192000
*              END;                                                0117 00193000
*                                                                  0117 00194000
*            IF FAIL=0 THEN            /* ERROR FOUND ?              */ 00195000
@RF00113 CLI   FAIL,0                                              0118 00196000
         BNE   @RF00118                                            0118 00197000
*              DO;                     /* NO -                       */ 00198000
*                ADDRPTR = R1;         /* SET PTR TO ADDRESS LIST    */ 00199000
         ST    R1,ADDRPTR                                          0120 00200000
*                SPNSIZE = SPLEN;      /* SET SUBPOOL AND SIZE       */ 00201000
         L     @06,ADDRPTR                                         0121 00202000
         MVC   SPNSIZE(4,@06),SPLEN                                0121 00203000
*                NUMENTRY = ADDRCTR/4; /* NUMBER OF ENTRIES          */ 00204000
         LR    @00,ADDRCTR                                         0122 00205000
         SRDA  @00,32                                              0122 00206000
         D     @00,@CF00172                                        0122 00207000
         STH   @01,NUMENTRY(,@06)                                  0122 00208000
*                TEXTPTR = ADDRPTR + ADDRCTR +8; /* AND TEXT STORAGE */ 00209000
         LR    @02,ADDRCTR                                         0123 00210000
         AR    @02,@06                                             0123 00211000
         AH    @02,@CH00162                                        0123 00212000
         ST    @02,TEXTPTR                                         0123 00213000
*                GTPLOUTA = ADDRPTR;                               0124 00214000
         L     @02,GTPLPTR                                         0124 00215000
         ST    @06,GTPLOUTA(,@02)                                  0124 00216000
*              END;                                                0125 00217000
*          END;                                                    0126 00218000
*                                                                  0126 00219000
*END GETSTRGE;                                                     0127 00220000
@EL00002 DS    0H                                                  0127 00221000
@EF00002 DS    0H                                                  0127 00222000
@ER00002 LM    @14,@02,@SA00002                                    0127 00223000
         LM    @04,@06,@SA00002+20                                 0127 00224000
         LM    @08,@12,@SA00002+32                                 0127 00225000
         BR    @14                                                 0127 00226000
*/********************************************************************/ 00227000
*/*                                                                  */ 00228000
*/* SEGMENT NAME -                                                   */ 00229000
*/*      PARMSTG                                                     */ 00230000
*/*                                                                  */ 00231000
*/* FUNCTION -                                                       */ 00232000
*/*      THIS ROUTINE DETERMINES THE AMOUNT OF STORAGE NEEDED TO     */ 00233000
*/*      BUILD THE TEXT FOR EACH PARAMETER IN THE PCL.               */ 00234000
*/*                                                                  */ 00235000
*/* OPERATION -                                                      */ 00236000
*/*      BY EXAMINING THE PCE, THE PARAMETER TYPE IS DETERMINED      */ 00237000
*/*      AND THE APPROPRIATE ROUTINE IS INVOKED TO DETERMINE THE     */ 00238000
*/*      AMOUNT OF CORE FOR THIS PARAMETER. IF THE END OF THE PCL IS */ 00239000
*/*      FOUND, AN INDICATOR IS SET.  IF A SUBFIELD PCE IS FOUND,    */ 00240000
*/*      AN INDICATOR IS SET.  IF THE PARAMETER TYPE IS NEITHER OF   */ 00241000
*/*      THE TYPES POSIT, IDENT, KEYWD, NAME, SUBF, OR ENDP THEN     */ 00242000
*/*      THE RETURN CODE IS SET TO 8 (UNSUPPORTED PARAMETER TYPE).   */ 00243000
*/*                                                                  */ 00244000
*/* INPUT -                                                          */ 00245000
*/*      PTR TO PDL                                                  */ 00246000
*/*      PTR TO PCL                                                  */ 00247000
*/*                                                                  */ 00248000
*/* OUTPUT -                                                         */ 00249000
*/*      A COUNTER INDICATING THE AMOUNT OF STORAGE NEEDED FOR THE   */ 00250000
*/*      ADDRESS LIST.                                               */ 00251000
*/*      A COUNTER INDICATING THE AMOUNT OF STORAGE NEEDED FOR THE   */ 00252000
*/*      TEXT UNITS.                                                 */ 00253000
*/*      SUBSTG = 1 - SUBFIELD PROCESSING                            */ 00254000
*/*      PCLEND = 1 - END OF PCL FOUND                               */ 00255000
*/*      RETURN CODE:                                                */ 00256000
*/*           0 = SUCCESSFUL                                         */ 00257000
*/*           8 = UNSUPPORTED PARAMETER TYPE                         */ 00258000
*/*                                                                  */ 00259000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00260000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00261000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00262000
*/********************************************************************/ 00263000
*    PARMSTG: PROC;                                                0128 00264000
PARMSTG  STM   @14,@02,@SA00003                                    0128 00265000
         STM   @04,@06,@SA00003+20                                 0128 00266000
         STM   @08,@12,@SA00003+32                                 0128 00267000
*        IF CMTYPE = '010'B THEN            /* IF KEYWORD PCE,       */ 00268000
         TM    CMTYPE(CURPCE),B'01000000'                          0129 00269000
         BNO   @RF00129                                            0129 00270000
         TM    CMTYPE(CURPCE),B'10100000'                          0129 00271000
         BNZ   @RF00129                                            0129 00272000
*          CALL STGKEYWD;                   /* GO TO PROCESS         */ 00273000
         BAL   @14,STGKEYWD                                        0130 00274000
*        ELSE                                                      0131 00275000
*          IF CMTYPE = '001'B THEN          /* IF POSIT PCE,         */ 00276000
         B     @RC00129                                            0131 00277000
@RF00129 TM    CMTYPE(CURPCE),B'00100000'                          0131 00278000
         BNO   @RF00131                                            0131 00279000
         TM    CMTYPE(CURPCE),B'11000000'                          0131 00280000
         BNZ   @RF00131                                            0131 00281000
*            DO;                            /* AND                   */ 00282000
*              IF POSTYPE = 7 |             /* DSNAME TYPE, GO TO    */ 00283000
*                 POSTYPE = 8 THEN                                 0133 00284000
         CLI   POSTYPE(CURPCE),7                                   0133 00285000
         BE    @RT00133                                            0133 00286000
         CLI   POSTYPE(CURPCE),8                                   0133 00287000
         BNE   @RF00133                                            0133 00288000
@RT00133 DS    0H                                                  0134 00289000
*                CALL STGDSN;               /* PROCESS DSNAME        */ 00290000
         BAL   @14,STGDSN                                          0134 00291000
*              ELSE                         /* ELSE, HANDLE NON-DSN  */ 00292000
*                CALL STGIDENT;             /* POSIT SAME AS IDENT   */ 00293000
         B     @RC00133                                            0135 00294000
@RF00133 BAL   @14,STGIDENT                                        0135 00295000
*            END;                                                  0136 00296000
*          ELSE                                                    0137 00297000
*            IF CMTYPE = '100'B THEN        /* IF IDENT PCE, GO TO   */ 00298000
         B     @RC00131                                            0137 00299000
@RF00131 TM    CMTYPE(CURPCE),B'10000000'                          0137 00300000
         BNO   @RF00137                                            0137 00301000
         TM    CMTYPE(CURPCE),B'01100000'                          0137 00302000
         BNZ   @RF00137                                            0137 00303000
*              CALL STGIDENT;               /* PROCESS IDENT         */ 00304000
         BAL   @14,STGIDENT                                        0138 00305000
*            ELSE                            /* IF ENDP CPE, SET END */ 00306000
*              IF CURPCE=LENPCL+PCLADS-1 THEN                      0139 00307000
         B     @RC00137                                            0139 00308000
@RF00137 L     @02,PCLADS                                          0139 00309000
         LH    @15,LENPCL(,@02)                                    0139 00310000
         AR    @15,@02                                             0139 00311000
         BCTR  @15,0                                               0139 00312000
         CR    CURPCE,@15                                          0139 00313000
         BNE   @RF00139                                            0139 00314000
*                PCLEND = '1'B;             /* OF PCL INDICATOR      */ 00315000
         OI    PCLEND,B'10000000'                                  0140 00316000
*              ELSE                                                0141 00317000
*                IF CMTYPE = '011'B THEN    /* IF NAME PCE, DO NOT   */ 00318000
         B     @RC00139                                            0141 00319000
@RF00139 TM    CMTYPE(CURPCE),B'01100000'                          0141 00320000
         BNO   @RF00141                                            0141 00321000
         TM    CMTYPE(CURPCE),B'10000000'                          0141 00322000
         BNZ   @RF00141                                            0141 00323000
*                  PCELEN = CMPCELEN;       /* PROCESS-JUST SET LENGH*/ 00324000
         MVC   PCELEN(2),CMPCELEN(CURPCE)                          0142 00325000
*                ELSE                                              0143 00326000
*                  DO;                                             0143 00327000
         B     @RC00141                                            0143 00328000
@RF00141 DS    0H                                                  0144 00329000
*                    IF CMTYPE = '000'B THEN                       0144 00330000
         TM    CMTYPE(CURPCE),B'11100000'                          0144 00331000
         BNZ   @RF00144                                            0144 00332000
*                      DO;                  /* IF SUBF PCE,          */ 00333000
*                        SUBSTG = '1'B;     /* INDICATE SUBFIELD     */ 00334000
         OI    SUBSTG,B'01000000'                                  0146 00335000
*                        PCELEN = 3;        /* SET PCE LENGTH TO 3   */ 00336000
         MVC   PCELEN(2),@CH00119                                  0147 00337000
*                      END;                                        0148 00338000
*                    ELSE                   /* IF NONE OF ABOVE,     */ 00339000
*                      DO;                                         0149 00340000
         B     @RC00144                                            0149 00341000
@RF00144 DS    0H                                                  0150 00342000
*                        RTCODE = 8;        /* SET RETURN CODE       */ 00343000
         MVC   RTCODE(4),@CF00162                                  0150 00344000
*                        NOSUPT = '1'B;     /* UNSUPPORTED PARM TYPE */ 00345000
         OI    NOSUPT,B'00100000'                                  0151 00346000
*                      END;                                        0152 00347000
*                  END;                                            0153 00348000
*                                                                  0153 00349000
*END PARMSTG;                                                      0154 00350000
@EL00003 DS    0H                                                  0154 00351000
@EF00003 DS    0H                                                  0154 00352000
@ER00003 LM    @14,@02,@SA00003                                    0154 00353000
         LM    @04,@06,@SA00003+20                                 0154 00354000
         LM    @08,@12,@SA00003+32                                 0154 00355000
         BR    @14                                                 0154 00356000
*/********************************************************************/ 00357000
*/*                                                                  */ 00358000
*/* SEGMENT NAME -                                                   */ 00359000
*/*      STGKEYWD                                                    */ 00360000
*/*                                                                  */ 00361000
*/* FUNCTION -                                                       */ 00362000
*/*      THIS ROUTINE DETERMINES THE AMOUNT OF STORAGE NEEDED FOR A  */ 00363000
*/*      KEYWORD TEXT UNIT.                                          */ 00364000
*/*                                                                  */ 00365000
*/* OPERATION -                                                      */ 00366000
*/*      IF THE KEYWORD IS IN A SUBFIELD, THE ADDRESS COUNTER        */ 00367000
*/*      IS NOT INCREMENTED. IF THE KEYWORD IS NOT IN A SUBFIELD,    */ 00368000
*/*      THE ADDRESS COUNTER IS INCREMENTED BY 4.  IF THE KEYWORD    */ 00369000
*/*      IS NOT ENTERED, THE TEXT COUNTER IS NOT INCREMENTED.        */ 00370000
*/*      OTHERWISE, THE TEXT COUNTER IS INCREMENTED BY 7.            */ 00371000
*/*                                                                  */ 00372000
*/* INPUT -                                                          */ 00373000
*/*      PTR TO KEYWORD PCE                                          */ 00374000
*/*      PTR TO PDL                                                  */ 00375000
*/*                                                                  */ 00376000
*/* OUTPUT -                                                         */ 00377000
*/*      ADDRESS COUNTER AND TEXT COUNTER INCREMENTED ACCORDING      */ 00378000
*/*      TO INFORMATION GIVEN IN PCE.                                */ 00379000
*/*                                                                  */ 00380000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN BE */ 00381000
*/*        INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE INCLUDE */ 00382000
*/*        FUNCTION HAS RECEIVED A STANDARD DEFINITION.              */ 00383000
*/********************************************************************/ 00384000
*    STGKEYWD: PROC;                                               0155 00385000
STGKEYWD STM   @14,@02,12(@13)                                     0155 00386000
         STM   @04,@06,36(@13)                                     0155 00387000
         STM   @08,@12,52(@13)                                     0155 00388000
*        CURPDE = PDLADS + CMPDEOF;    /* SET UP PDE POINTER         */ 00389000
         LH    CURPDE,CMPDEOF(,CURPCE)                             0156 00390000
         A     CURPDE,PDLADS                                       0156 00391000
*        IF SUBSTG = '0'B THEN         /* IF NOT PROCESSING SUBFIELD,*/ 00392000
         TM    SUBSTG,B'01000000'                                  0157 00393000
         BNZ   @RF00157                                            0157 00394000
*          ADDRCTR = ADDRCTR + 4;      /* ALLOW FOR ADDRESS          */ 00395000
*                                                                  0158 00396000
         AH    ADDRCTR,@CH00172                                    0158 00397000
*        PCELEN = CMPCELEN;            /* SAVE PCE LENGTH            */ 00398000
*                                                                  0159 00399000
@RF00157 MVC   PCELEN(2),CMPCELEN(CURPCE)                          0159 00400000
*        IF KYWDNBR ^= 0 THEN          /* IF PARM WAS ENTERED,       */ 00401000
         LH    @15,KYWDNBR(,CURPDE)                                0160 00402000
         LTR   @15,@15                                             0160 00403000
         BZ    @RF00160                                            0160 00404000
*          TEXTCTR = TEXTCTR + 7;      /* INCREASE STORAGE CTR       */ 00405000
*                                                                  0161 00406000
         AH    TEXTCTR,@CH00125                                    0161 00407000
*END STGKEYWD;                                                     0162 00408000
@EL00004 DS    0H                                                  0162 00409000
@EF00004 DS    0H                                                  0162 00410000
@ER00004 LM    @14,@02,12(@13)                                     0162 00411000
         LM    @04,@06,36(@13)                                     0162 00412000
         LM    @08,@12,52(@13)                                     0162 00413000
         BR    @14                                                 0162 00414000
*/********************************************************************/ 00415000
*/*                                                                  */ 00416000
*/* SEGMENT NAME -                                                   */ 00417000
*/*      STGIDENT                                                    */ 00418000
*/*                                                                  */ 00419000
*/* FUNCTION -                                                       */ 00420000
*/*      THIS ROUTINE DETERMINES THE AMOUNT OF CORE NEEDED FOR AN    */ 00421000
*/*      IDENT OR POSIT (OTHER THAN DSNAME) TEXT UNIT.               */ 00422000
*/*                                                                  */ 00423000
*/* OPERATION -                                                      */ 00424000
*/*      IF PARAMETER IN SUBFIELD, ADDRESS CTR NOT INCREMENTED.  IF  */ 00425000
*/*      THE PARAMETER IS NOT IN A  SUBFIELD, THE ADDRESS COUNTER    */ 00426000
*/*      IS INCREMENTED BY 4. IF THE PARAMETER IS NOT ENTERED, THE   */ 00427000
*/*      TEXT COUNTER IS NOT INCREMENTED.  OTHERWISE, THE TEXT       */ 00428000
*/*      COUNTER IS INCREMENTED BY LENGTH OF THE PARAMETER PLUS 6.   */ 00429000
*/*      IF A LIST IS SPECIFIED, THE TEXT COUNTER IS INCREMENTED     */ 00430000
*/*      BY LENGTH OF PARAMETER PLUS 2 FOR EACH ELEMENT IN THE LIST. */ 00431000
*/*                                                                  */ 00432000
*/* INPUT -                                                          */ 00433000
*/*      PTR TO IDENT OR POSIT PCE                                   */ 00434000
*/*      PTR TO PDL                                                  */ 00435000
*/*                                                                  */ 00436000
*/* OUTPUT -                                                         */ 00437000
*/*      ADDRESS COUNTER AND TEXT COUNTER INCREMENTED ACCORDING      */ 00438000
*/*      TO INFORMATION GIVEN IN PCE.                                */ 00439000
*/*                                                                  */ 00440000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00441000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00442000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00443000
*/********************************************************************/ 00444000
*                                                                  0163 00445000
*    STGIDENT: PROC;                                               0163 00446000
STGIDENT STM   @14,@02,12(@13)                                     0163 00447000
         STM   @04,@06,36(@13)                                     0163 00448000
         STM   @08,@12,52(@13)                                     0163 00449000
*        CURPDE = PDLADS+CMPDEOF;      /* SET UP PDE POINTER         */ 00450000
         LH    CURPDE,CMPDEOF(,CURPCE)                             0164 00451000
         A     CURPDE,PDLADS                                       0164 00452000
*        IF SUBSTG = '0'B THEN         /* IF NOT PROCESSING SUBFIELD,*/ 00453000
         TM    SUBSTG,B'01000000'                                  0165 00454000
         BNZ   @RF00165                                            0165 00455000
*          ADDRCTR = ADDRCTR + 4;      /* ALLOW FOR ADDRESS          */ 00456000
         AH    ADDRCTR,@CH00172                                    0166 00457000
*        PCELEN = CMPCELEN;            /* SAVE PCE LENGTH            */ 00458000
@RF00165 MVC   PCELEN(2),CMPCELEN(CURPCE)                          0167 00459000
*        IF PARMPRES = '1'B THEN       /* IF PARAMETER ENTERED,      */ 00460000
         TM    PARMPRES(CURPDE),B'10000000'                        0168 00461000
         BNO   @RF00168                                            0168 00462000
*          DO;                         /* INCREMENT TEXT STORAGE CTR */ 00463000
*            TEXTCTR = TEXTCTR + (PARMLEN + 6);                    0170 00464000
         LA    @15,6                                               0170 00465000
         AH    @15,PARMLEN(,CURPDE)                                0170 00466000
         AR    TEXTCTR,@15                                         0170 00467000
*            IF CMLIST = '1'B THEN     /* IF LIST OPTION SPECIFIED,  */ 00468000
         TM    CMLIST(CURPCE),B'10000000'                          0171 00469000
         BNO   @RF00171                                            0171 00470000
*              DO WHILE (NEXTPARM ^= PDECMPRE);                    0172 00471000
         B     @DE00172                                            0172 00472000
@DL00172 DS    0H                                                  0173 00473000
*                CURPDE = NEXTPARM;    /* GET NEXT PDE IN LIST       */ 00474000
         L     CURPDE,NEXTPARM(,CURPDE)                            0173 00475000
*                TEXTCTR = TEXTCTR + (PARMLEN + 2);                0174 00476000
         LA    @15,2                                               0174 00477000
         AH    @15,PARMLEN(,CURPDE)                                0174 00478000
         AR    TEXTCTR,@15                                         0174 00479000
*              END;                    /* INCREMENT TEXT STORAGE CTR */ 00480000
@DE00172 CLC   NEXTPARM(4,CURPDE),PDECMPRE                         0175 00481000
         BNE   @DL00172                                            0175 00482000
*          END;                                                    0176 00483000
*END STGIDENT;                                                     0177 00484000
@EL00005 DS    0H                                                  0177 00485000
@EF00005 DS    0H                                                  0177 00486000
@ER00005 LM    @14,@02,12(@13)                                     0177 00487000
         LM    @04,@06,36(@13)                                     0177 00488000
         LM    @08,@12,52(@13)                                     0177 00489000
         BR    @14                                                 0177 00490000
*/********************************************************************/ 00491000
*/*                                                                  */ 00492000
*/* SEGMENT NAME -                                                   */ 00493000
*/*      STGDSN                                                      */ 00494000
*/*                                                                  */ 00495000
*/* FUNCTION -                                                       */ 00496000
*/*      THIS ROUTINE DETERMINES THE AMOUNT OF STORAGE NEEDED        */ 00497000
*/*      FOR A DATA SET NAME TYPE TEXT UNIT.                         */ 00498000
*/*                                                                  */ 00499000
*/* OPERATION -                                                      */ 00500000
*/*      IF DSNAME IS IN SUBFIELD, ADDRESS COUNTER INCREMENTED BY 8  */ 00501000
*/*      (4 FOR ADDRESS OF MEMBER NAME, AND 4 FOR ADDRESS OF         */ 00502000
*/*      PASSWORD).  IF THE DATA SET NAME IS NOT IN A SUBFIELD, THE  */ 00503000
*/*      ADDRESS COUNTER IS INCREMENTED BY 12 (THE ABOVE, PLUS 4 FOR */ 00504000
*/*      THE ADDRESS OF DSNAME).  IF THE PARAMETER IS NOT ENTERED,   */ 00505000
*/*      THE TEXT COUNTER IS NOT INCREMENTED.   IF THE PARAMETER IS  */ 00506000
*/*      ENTERED, THE TEXT COUNTER IS INCREMENTED BY LENGTH OF THE   */ 00507000
*/*      DSNAME PLUS 42 (6 FOR HEADER OF DSNAME UNIT, 6 FOR HEADER   */ 00508000
*/*      OF MEMBER NAME UNIT, 8 FOR MAXIMUM MEMBER NAME, 6 FOR       */ 00509000
*/*      HEADER OF PASSWORD UNIT, 8 FOR MAXIMUM USERID, AND 8 FOR    */ 00510000
*/*      MAXIMUM PASSWORD).  IF A LIST OF DSNAMES IS ENTERED, THE    */ 00511000
*/*      TEXT COUNTER IS INCREMENTED BY THE DSNAME LENGTH PLUS 30    */ 00512000
*/*      FOR EACH DSNAME IN LIST (2 FOR DSNAME LENGTH, 8 FOR         */ 00513000
*/*      MAXIMUM USERID, 2 FOR MEMBER NAME LENGTH, 8 FOR MAXIMUM     */ 00514000
*/*      MEMBER NAME, 2 FOR PASSWORD LENGTH, AND 8 FOR MAXIMUM       */ 00515000
*/*      PASSWORD).                                                  */ 00516000
*/*                                                                  */ 00517000
*/* INPUT -                                                          */ 00518000
*/*      PTR TO DSNAME PCE                                           */ 00519000
*/*      PTR TO PDL                                                  */ 00520000
*/*                                                                  */ 00521000
*/* OUTPUT -                                                         */ 00522000
*/*      ADDRESS COUNTER AND TEXT COUNTER INCREMENTED ACCORDING      */ 00523000
*/*      TO INFORMATION GIVEN IN PCE.                                */ 00524000
*/*                                                                  */ 00525000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00526000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00527000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00528000
*/********************************************************************/ 00529000
*    STGDSN: PROC;                                                 0178 00530000
STGDSN   STM   @14,@02,12(@13)                                     0178 00531000
         STM   @04,@06,36(@13)                                     0178 00532000
         STM   @08,@12,52(@13)                                     0178 00533000
*        CURPDE = PDLADS + CMPDEOF;    /* SET UP PDE POINTER         */ 00534000
         LH    CURPDE,CMPDEOF(,CURPCE)                             0179 00535000
         A     CURPDE,PDLADS                                       0179 00536000
*        PCELEN = CMPCELEN;            /* SAVE PCE LENGTH            */ 00537000
*                                                                  0180 00538000
         MVC   PCELEN(2),CMPCELEN(CURPCE)                          0180 00539000
*        IF SUBSTG = '1'B THEN         /* IF PROCESSING SUBFLD, ALLOW*/ 00540000
         TM    SUBSTG,B'01000000'                                  0181 00541000
         BNO   @RF00181                                            0181 00542000
*          ADDRCTR = ADDRCTR + 8;      /* FOR MBR, PSWORD ADDRESSES  */ 00543000
         AH    ADDRCTR,@CH00162                                    0182 00544000
*        ELSE                          /* ELSE, ALLOW FOR DSN, MBR   */ 00545000
*          ADDRCTR = ADDRCTR + 12;     /* AND PSWORD ADDRESSES       */ 00546000
*                                                                  0183 00547000
         B     @RC00181                                            0183 00548000
@RF00181 AH    ADDRCTR,@CH00037                                    0183 00549000
*        IF PARMPRES = '1'B THEN       /* IF PARAMETER ENTERED,      */ 00550000
@RC00181 TM    PARMPRES(CURPDE),B'10000000'                        0184 00551000
         BNO   @RF00184                                            0184 00552000
*          DO;                         /* INCREMENT TEXT STORAGE CTR */ 00553000
*            TEXTCTR = TEXTCTR + PARMLEN + 42;                     0186 00554000
         LR    @15,TEXTCTR                                         0186 00555000
         AH    @15,PARMLEN(,CURPDE)                                0186 00556000
         AH    @15,@CH00462                                        0186 00557000
         LR    TEXTCTR,@15                                         0186 00558000
*            IF CMLIST = '1'B THEN     /* IF LIST OPTION SPECIFIED,  */ 00559000
         TM    CMLIST(CURPCE),B'10000000'                          0187 00560000
         BNO   @RF00187                                            0187 00561000
*              DO WHILE (DSNNEXT ^= 'FF000000'X);                  0188 00562000
         B     @DE00188                                            0188 00563000
@DL00188 DS    0H                                                  0189 00564000
*                CURPDE = DSNNEXT;     /* GET NEXT PDE IN LIST       */ 00565000
         L     CURPDE,DSNNEXT(,CURPDE)                             0189 00566000
*                                      /* INCREMENT TEXT STORAGE CTR */ 00567000
*                TEXTCTR = TEXTCTR + PARMLEN + 30;                 0190 00568000
         LR    @15,TEXTCTR                                         0190 00569000
         AH    @15,PARMLEN(,CURPDE)                                0190 00570000
         AH    @15,@CH00463                                        0190 00571000
         LR    TEXTCTR,@15                                         0190 00572000
*              END;                                                0191 00573000
@DE00188 CLC   DSNNEXT(4,CURPDE),@CF00192                          0191 00574000
         BNE   @DL00188                                            0191 00575000
*          END;                                                    0192 00576000
*END STGDSN;                                                       0193 00577000
@EL00006 DS    0H                                                  0193 00578000
@EF00006 DS    0H                                                  0193 00579000
@ER00006 LM    @14,@02,12(@13)                                     0193 00580000
         LM    @04,@06,36(@13)                                     0193 00581000
         LM    @08,@12,52(@13)                                     0193 00582000
         BR    @14                                                 0193 00583000
*/********************************************************************/ 00584000
*/*                                                                  */ 00585000
*/* SEGMENT NAME -                                                   */ 00586000
*/*      TRNSLATE                                                    */ 00587000
*/*                                                                  */ 00588000
*/* FUNCTION -                                                       */ 00589000
*/*      THIS ROUTINE BUILDS THE TEXT UNITS FOR EACH PARAMETER       */ 00590000
*/*      ENTERED IN THE PDL.                                         */ 00591000
*/*                                                                  */ 00592000
*/* OPERATION -                                                      */ 00593000
*/*      A ROUTINE IS INVOKED WHICH WILL DETERMINE THE PARAMETER     */ 00594000
*/*      TYPE AND WILL SUBSEQUENTLY INVOKE THE PROPER ROUTINE TO     */ 00595000
*/*      TRANSLATE THE PARAMETER.  THE TRNSLATE ROUTINE WILL THEN    */ 00596000
*/*      INCREMENT TO THE NEXT PCE, AND REPEAT THE PROCESS ABOVE.    */ 00597000
*/*      WHEN THE END OF THE PCL IS REACHED, THE ADDITIONAL BLOCK    */ 00598000
*/*      OF TEXT PASSED BY THE USER (IF ANY) WILL BE APPENDED TO THE */ 00599000
*/*      TEXT JUST BUILT, AND THE INDICATOR WILL BE SET TO SHOW THE  */ 00600000
*/*      END OF THE LIST.                                            */ 00601000
*/*                                                                  */ 00602000
*/* INPUT -                                                          */ 00603000
*/*      PTR TO PDL                                                  */ 00604000
*/*      PTR TO PCL                                                  */ 00605000
*/*      PTR TO KEY LIST                                             */ 00606000
*/*      PTR TO KEYWORD TABLE                                        */ 00607000
*/*      PTR TO ADDITIONAL TEXT                                      */ 00608000
*/*      PTR TO ADDRESS LIST                                         */ 00609000
*/*      PTR TO TEXT STORAGE                                         */ 00610000
*/*                                                                  */ 00611000
*/* OUTPUT -                                                         */ 00612000
*/*       PTR TO A LIST OF ADDRESSES WHICH POINT TO THE TEXT UNITS.  */ 00613000
*/*       RETURN CODE:                                               */ 00614000
*/*             0 = SUCCESSFUL                                       */ 00615000
*/*             4 = INVALID PARAMETERS PASSED TO GENTRANS            */ 00616000
*/*                                                                  */ 00617000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00618000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00619000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00620000
*/********************************************************************/ 00621000
*    TRNSLATE: PROC;                                               0194 00622000
TRNSLATE STM   @14,@12,@SA00007                                    0194 00623000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 00624000
         CLI   FAIL,0                                              0195 00625000
         BNE   @RF00195                                            0195 00626000
*          DO;                              /* NO -                  */ 00627000
*            CURPCE = PCLADS + 6;           /* GET FIRST PCE         */ 00628000
         LA    CURPCE,6                                            0197 00629000
         A     CURPCE,PCLADS                                       0197 00630000
*            CURPDE = PDLADS+CMPDEOF;                              0198 00631000
         LH    CURPDE,CMPDEOF(,CURPCE)                             0198 00632000
         A     CURPDE,PDLADS                                       0198 00633000
*            KEYLIST = GTPLKLST;                                   0199 00634000
         L     @01,GTPLPTR                                         0199 00635000
         L     KEYLIST,GTPLKLST(,@01)                              0199 00636000
*            I = 1;                         /* INITIALIZE SUBSCRIPT  */ 00637000
         LA    I,1                                                 0200 00638000
*            B = KEYLIST;                   /* INIT B FOR KEYLIST    */ 00639000
         ST    KEYLIST,B                                           0201 00640000
*            A = TEXTPTR;                   /* INITIALIZE A FOR TEXT */ 00641000
         L     A,TEXTPTR                                           0202 00642000
*            DO WHILE (CMTYPE ^= '000'B);                          0203 00643000
         B     @DE00203                                            0203 00644000
@DL00203 DS    0H                                                  0204 00645000
*              CALL DETTYPE;                /* DETERMINE PARM TYPE   */ 00646000
         BAL   @14,DETTYPE                                         0204 00647000
*              IF PCLEND = '0'B THEN                               0205 00648000
         TM    PCLEND,B'10000000'                                  0205 00649000
         BNZ   @RF00205                                            0205 00650000
*                DO;                                               0206 00651000
*              CALL TYPEPROC;               /* PROCESS POSSIBLE REPLY*/ 00652000
         BAL   @14,TYPEPROC                                        0207 00653000
*              IF FAIL = 0 THEN             /* ERROR FOUND ?         */ 00654000
         CLI   FAIL,0                                              0208 00655000
         BNE   @RF00208                                            0208 00656000
*                DO;                        /* NO -                  */ 00657000
*                  CURPCE=CURPCE+CMPCELEN;  /* GET NEXT PCE          */ 00658000
         AH    CURPCE,CMPCELEN(,CURPCE)                            0210 00659000
*                  TEXTPTR = A;             /* INCREMENT TEXT PTR    */ 00660000
         ST    A,TEXTPTR                                           0211 00661000
*                  I = I+1;                 /* INCREMENT ADDRESS PTR */ 00662000
         AH    I,@CH00081                                          0212 00663000
*                  KEYLIST = KEYLIST + 4;                          0213 00664000
         AH    KEYLIST,@CH00172                                    0213 00665000
*                  B = KEYLIST;                                    0214 00666000
         ST    KEYLIST,B                                           0214 00667000
*                END;                                              0215 00668000
*              ELSE                         /* IF ERROR FOUND (2ND)  */ 00669000
*                CMTYPE = '000'B;           /* EXIT FROM DO-WHILE    */ 00670000
         B     @RC00208                                            0216 00671000
@RF00208 NI    CMTYPE(CURPCE),B'00011111'                          0216 00672000
*                END;                                              0217 00673000
@RC00208 DS    0H                                                  0218 00674000
*           END;                                                   0218 00675000
*                                                                  0218 00676000
@RF00205 DS    0H                                                  0218 00677000
@DE00203 TM    CMTYPE(CURPCE),B'11100000'                          0218 00678000
         BNZ   @DL00203                                            0218 00679000
*           IF FAIL=0 THEN                  /* ERROR FOUND ?         */ 00680000
         CLI   FAIL,0                                              0219 00681000
         BNE   @RF00219                                            0219 00682000
*              DO;                          /* NO -                  */ 00683000
*                IF GTPLABLK ^= 0 THEN      /* IF TEXT TO BE ADDED,  */ 00684000
         L     @06,GTPLPTR                                         0221 00685000
         L     @06,GTPLABLK(,@06)                                  0221 00686000
         LTR   @06,@06                                             0221 00687000
         BZ    @RF00221                                            0221 00688000
*                  DO K = 1 TO ADDBLKNM;  /* GET ADDRESSES           */ 00689000
         LA    K,1                                                 0222 00690000
         B     @DE00222                                            0222 00691000
@DL00222 DS    0H                                                  0223 00692000
*                    ADDRLIST(I) = ADDBLKPT(K);                    0223 00693000
         LR    @09,I                                               0223 00694000
         SLA   @09,2                                               0223 00695000
         LR    @06,K                                               0223 00696000
         SLA   @06,2                                               0223 00697000
         L     @01,GTPLPTR                                         0223 00698000
         L     @01,GTPLABLK(,@01)                                  0223 00699000
         L     @06,ADDBLKPT-4(@06,@01)                             0223 00700000
         L     @01,ADDRPTR                                         0223 00701000
         ST    @06,ADDRLIST-4(@09,@01)                             0223 00702000
*                    I = I+1;                                      0224 00703000
         AH    I,@CH00081                                          0224 00704000
*                  END;                                            0225 00705000
         AH    K,@CH00081                                          0225 00706000
@DE00222 L     @09,GTPLPTR                                         0225 00707000
         L     @09,GTPLABLK(,@09)                                  0225 00708000
         CH    K,ADDBLKNM(,@09)                                    0225 00709000
         BNH   @DL00222                                            0225 00710000
*                  ADDREND(I-1) = '1'B;   /* INDICATE END OF TEXT  */   00711000
@RF00221 LR    @06,I                                               0226 00712000
         SLA   @06,2                                               0226 00713000
         L     @01,ADDRPTR                                         0226 00714000
         ALR   @01,@06                                             0226 00715000
         OI    ADDREND-8(@01),B'10000000'                          0226 00716000
*              END;                                                0227 00717000
*          END;                                                    0228 00718000
*END TRNSLATE;                                                     0229 00719000
@EL00007 DS    0H                                                  0229 00720000
@EF00007 DS    0H                                                  0229 00721000
@ER00007 LM    @14,@12,@SA00007                                    0229 00722000
         BR    @14                                                 0229 00723000
*/********************************************************************/ 00724000
*/*                                                                  */ 00725000
*/* SEGMENT NAME -                                                   */ 00726000
*/*      DETTYPE                                                     */ 00727000
*/*                                                                  */ 00728000
*/* FUNCTION -                                                       */ 00729000
*/*      THIS ROUTINE INVOKES THE APPROPRIATE ROUTINE TO TRANSLATE   */ 00730000
*/*      A PCE TO TEXT FORMAT.                                       */ 00731000
*/*                                                                  */ 00732000
*/* OPERATION -                                                      */ 00733000
*/*      BY EXAMINING THE PCE TO DETERMINE THE PARAMETER TYPE,       */ 00734000
*/*      THIS ROUTINE ROUTES CONTROL TO VARIOUS TRANSLATING          */ 00735000
*/*      ROUTINES TO BUILD THE TEXT UNITS.                           */ 00736000
*/*                                                                  */ 00737000
*/* INPUT -                                                          */ 00738000
*/*     PTR TO CURRENT PCE                                           */ 00739000
*/*     PTR TO PDL                                                   */ 00740000
*/*     PTR TO KEYLIST                                               */ 00741000
*/*     PTR TO KEYWORD TABLE                                         */ 00742000
*/*     PTR TO ADDRESS LIST                                          */ 00743000
*/*     PTR TO TEXT STORAGE                                          */ 00744000
*/*                                                                  */ 00745000
*/* OUTPUT -                                                         */ 00746000
*/*     PTR TO TEXT FOR CURRENT PARAMETER                            */ 00747000
*/*     PCLEND=1 - END OF PCL FOUND                                  */ 00748000
*/*                                                                  */ 00749000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00750000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00751000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00752000
*/********************************************************************/ 00753000
*    DETTYPE: PROC;                                                0230 00754000
DETTYPE  STM   @14,@02,@SA00008                                    0230 00755000
         STM   @04,@05,@SA00008+20                                 0230 00756000
         STM   @08,@12,@SA00008+28                                 0230 00757000
*        IF FAIL = 0 THEN                                          0231 00758000
         CLI   FAIL,0                                              0231 00759000
         BNE   @RF00231                                            0231 00760000
*          DO;                                                     0232 00761000
*            DO WHILE (CMTYPE = '011'B);    /* IF NAME PCE, INCREMENT*/ 00762000
         B     @DE00233                                            0233 00763000
@DL00233 DS    0H                                                  0234 00764000
*              CURPCE = CURPCE + CMPCELEN;  /* TO NEXT PCE           */ 00765000
         AH    CURPCE,CMPCELEN(,CURPCE)                            0234 00766000
*            END;                                                  0235 00767000
*                                                                  0235 00768000
@DE00233 TM    CMTYPE(CURPCE),B'01100000'                          0235 00769000
         BNO   @DC00233                                            0235 00770000
         TM    CMTYPE(CURPCE),B'10000000'                          0235 00771000
         BZ    @DL00233                                            0235 00772000
@DC00233 DS    0H                                                  0236 00773000
*            IF CMTYPE = '010'B THEN        /* IF KEYWORD PCE,       */ 00774000
         TM    CMTYPE(CURPCE),B'01000000'                          0236 00775000
         BNO   @RF00236                                            0236 00776000
         TM    CMTYPE(CURPCE),B'10100000'                          0236 00777000
         BNZ   @RF00236                                            0236 00778000
*              DO;                          /* THEN                  */ 00779000
*              NAMECTR = 0;                 /* INIT NAME CTR @YM01873*/ 00780000
         SR    @02,@02                                             0238 00781000
         STH   @02,NAMECTR                                         0238 00782000
*              CALL TNKEYWD;                /* TRANSLATE KEYWORD     */ 00783000
         BAL   @14,TNKEYWD                                         0239 00784000
*              END;                                                0240 00785000
*            ELSE                                                  0241 00786000
*              IF CMTYPE = '001'B THEN      /* IF POSIT PCE,         */ 00787000
         B     @RC00236                                            0241 00788000
@RF00236 TM    CMTYPE(CURPCE),B'00100000'                          0241 00789000
         BNO   @RF00241                                            0241 00790000
         TM    CMTYPE(CURPCE),B'11000000'                          0241 00791000
         BNZ   @RF00241                                            0241 00792000
*                DO;                        /* AND                   */ 00793000
*                  IF POSTYPE = 7 |         /* IF DSNAME TYPE THEN   */ 00794000
*                     POSTYPE = 8 THEN                             0243 00795000
         CLI   POSTYPE(CURPCE),7                                   0243 00796000
         BE    @RT00243                                            0243 00797000
         CLI   POSTYPE(CURPCE),8                                   0243 00798000
         BNE   @RF00243                                            0243 00799000
@RT00243 DS    0H                                                  0244 00800000
*                    CALL DSNTRANS;         /* GO TO TRANSLATE DSN   */ 00801000
         BAL   @14,DSNTRANS                                        0244 00802000
*                  ELSE                     /* ELSE, HANDLE POSIT    */ 00803000
*                    CALL TNIDENT;          /* SAME AS IDENT PCE     */ 00804000
         B     @RC00243                                            0245 00805000
@RF00243 BAL   @14,TNIDENT                                         0245 00806000
*                END;                                              0246 00807000
*              ELSE                                                0247 00808000
*                IF CMTYPE = '100'B THEN    /* IF IDENT PCE, GO TO   */ 00809000
         B     @RC00241                                            0247 00810000
@RF00241 TM    CMTYPE(CURPCE),B'10000000'                          0247 00811000
         BNO   @RF00247                                            0247 00812000
         TM    CMTYPE(CURPCE),B'01100000'                          0247 00813000
         BNZ   @RF00247                                            0247 00814000
*                  CALL TNIDENT;            /* TRANSLATE IDENT       */ 00815000
         BAL   @14,TNIDENT                                         0248 00816000
*                ELSE                                              0249 00817000
*                  IF CMTYPE = '000'B THEN  /* IF ENDP OR SUBF,      */ 00818000
         B     @RC00247                                            0249 00819000
@RF00247 TM    CMTYPE(CURPCE),B'11100000'                          0249 00820000
         BNZ   @RF00249                                            0249 00821000
*                    PCLEND = '1'B;         /* INDICATE PCL END      */ 00822000
         OI    PCLEND,B'10000000'                                  0250 00823000
*          END;                                                    0251 00824000
*END DETTYPE;                                                      0252 00825000
@EL00008 DS    0H                                                  0252 00826000
@EF00008 DS    0H                                                  0252 00827000
@ER00008 LM    @14,@02,@SA00008                                    0252 00828000
         LM    @04,@05,@SA00008+20                                 0252 00829000
         LM    @08,@12,@SA00008+28                                 0252 00830000
         BR    @14                                                 0252 00831000
*/********************************************************************/ 00832000
*/*                                                                  */ 00833000
*/* SEGMENT NAME -                                                   */ 00834000
*/*      TNKEYWD                                                     */ 00835000
*/*                                                                  */ 00836000
*/* FUNCTION -                                                       */ 00837000
*/*      THIS ROUTINE TRANSLATES A KEYWORD PARAMETER TO THE TEXT     */ 00838000
*/*      FORMAT.                                                     */ 00839000
*/*                                                                  */ 00840000
*/* OPERATION -                                                      */ 00841000
*/*       IF THE KEYWORD WAS NOT ENTERED, AN INDICATOR IS SET.  IF   */ 00842000
*/*       THE KEYWORD WAS ENTERED, THE PCE POINTER IS INCREMENTED TO */ 00843000
*/*       CORRESPONDING NAME PCE.  IF A SUBFIELD IS ALLOWED FOR      */ 00844000
*/*       THE NAME, INDICATORS ARE SET, THE CURRENT PCE IS SAVED,    */ 00845000
*/*       AND THE POINTER TO THE SUBFIELD PCE IS SET UP.  CONTROL IS */ 00846000
*/*       THEN RETURNED TO THE CALLER.  IF A SUBFIELD IS NOT         */ 00847000
*/*       ALLOWED, THE ROUTINE KEYTRNS IS INVOKED TO HANDLE THE      */ 00848000
*/*       KEYWORD.                                                   */ 00849000
*/*                                                                  */ 00850000
*/* INPUT -                                                          */ 00851000
*/*       PTR TO KEYWORD PCE                                         */ 00852000
*/*       PTR TO PDL                                                 */ 00853000
*/*       PTR TO KEY LIST                                            */ 00854000
*/*       PTR TO KEYWORD TABLE                                       */ 00855000
*/*       PTR TO TEXT STORAGE                                        */ 00856000
*/*                                                                  */ 00857000
*/* OUTPUT -                                                         */ 00858000
*/*       PARMOMIT = 1 - PARAMETER NOT ENTERED                       */ 00859000
*/*       SUBTRN = 1 - SUBFIELD PROCESSING                           */ 00860000
*/*       PTR TO TEXT FOR KEYWORD (IF SUBFIELD NOT ALLOWED)          */ 00861000
*/*       PTR TO SUBFIELD PCE (IF SUBFIELD ALLOWED)                  */ 00862000
*/*                                                                  */ 00863000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 00864000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 00865000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 00866000
*/********************************************************************/ 00867000
*    TNKEYWD: PROC;                                                0253 00868000
TNKEYWD  STM   @14,@02,@SA00009                                    0253 00869000
         STM   @04,@05,@SA00009+20                                 0253 00870000
         STM   @08,@12,@SA00009+28                                 0253 00871000
* AA:    CURPDE = PDLADS + CMPDEOF;         /* SET UP PDE PTR        */ 00872000
AA       LH    CURPDE,CMPDEOF(,CURPCE)                             0254 00873000
         A     CURPDE,PDLADS                                       0254 00874000
*        IF KYWDNBR = 0 THEN                /*IF PARM NOT ENTERED,   */ 00875000
         LH    @15,KYWDNBR(,CURPDE)                                0255 00876000
         LTR   @15,@15                                             0255 00877000
         BNZ   @RF00255                                            0255 00878000
*          DO;                              /* AND                   */ 00879000
*            IF SUBTRN = '1'B THEN          /* WITHIN A SUBFIELD,    */ 00880000
         TM    SUBTRN,B'00010000'                                  0257 00881000
         BNO   @RF00257                                            0257 00882000
*              KYNOFND = '1'B;              /* INDICATE NOT FOUND    */ 00883000
         OI    KYNOFND,B'10000000'                                 0258 00884000
*            ELSE                           /* OTHERWISE             */ 00885000
*              DO;                                                 0259 00886000
         B     @RC00257                                            0259 00887000
@RF00257 DS    0H                                                  0260 00888000
*                PARMOMIT = '1'B;           /* INDICATE PARM OMITTED */ 00889000
         OI    PARMOMIT,B'00000100'                                0260 00890000
*                IF DYNKEY = DALDSNAM |     /* IF KEY FOR            */ 00891000
*                   DYNKEY = DUNDSNAM |     /* DSNAME,               */ 00892000
*                   DYNKEY = DINDSNAM THEN  /* THEN                  */ 00893000
         LA    @02,2                                               0261 00894000
         L     @01,B                                               0261 00895000
         LH    @15,DYNKEY(,@01)                                    0261 00896000
         CR    @15,@02                                             0261 00897000
         BE    @RT00261                                            0261 00898000
         CR    @15,@02                                             0261 00899000
         BE    @RT00261                                            0261 00900000
         CR    @15,@02                                             0261 00901000
         BNE   @RF00261                                            0261 00902000
@RT00261 DS    0H                                                  0262 00903000
*                   DO;                                            0262 00904000
*                     ADDRLIST(I) = 0;      /* SET ADDRLIST TO 0     */ 00905000
         SR    @02,@02                                             0263 00906000
         L     @15,ADDRPTR                                         0263 00907000
         LR    @14,I                                               0263 00908000
         SLA   @14,2                                               0263 00909000
         ST    @02,ADDRLIST-4(@14,@15)                             0263 00910000
*                     I = I+1;              /* INCREMENT SUBSCRIPT   */ 00911000
         LA    @14,1                                               0264 00912000
         AR    I,@14                                               0264 00913000
*                     ADDRLIST(I) = 0;      /* SET ADDRLIST TO 0     */ 00914000
         LR    @09,I                                               0265 00915000
         SLA   @09,2                                               0265 00916000
         ST    @02,ADDRLIST-4(@09,@15)                             0265 00917000
*                     I = I+1;              /* INCREMENT SUBSCRIPT   */ 00918000
         AR    I,@14                                               0266 00919000
*                   END;                                           0267 00920000
*                ELSE                       /* ELSE,                 */ 00921000
*                  DO;                                             0268 00922000
         B     @RC00261                                            0268 00923000
@RF00261 DS    0H                                                  0269 00924000
*                    B = B+2;               /* CHECK ALTERNATE KEY   */ 00925000
         LA    @02,2                                               0269 00926000
         A     @02,B                                               0269 00927000
         ST    @02,B                                               0269 00928000
*                    IF DYNKEY = DALDSNAM | /* IF DSNAME,            */ 00929000
*                       DYNKEY = DUNDSNAM |                        0270 00930000
*                       DYNKEY = DINDSNAM THEN                     0270 00931000
         LA    @15,2                                               0270 00932000
         LH    @02,DYNKEY(,@02)                                    0270 00933000
         CR    @02,@15                                             0270 00934000
         BE    @RT00270                                            0270 00935000
         CR    @02,@15                                             0270 00936000
         BE    @RT00270                                            0270 00937000
         CR    @02,@15                                             0270 00938000
         BNE   @RF00270                                            0270 00939000
@RT00270 DS    0H                                                  0271 00940000
*                      DO;                  /* THEN                  */ 00941000
*                        ADDRLIST(I) = 0;   /* SET ADDRLIST TO 0     */ 00942000
         SR    @02,@02                                             0272 00943000
         L     @15,ADDRPTR                                         0272 00944000
         LR    @14,I                                               0272 00945000
         SLA   @14,2                                               0272 00946000
         ST    @02,ADDRLIST-4(@14,@15)                             0272 00947000
*                        I = I+1;           /* INCREMENT SUBSCRIPT   */ 00948000
         LA    @14,1                                               0273 00949000
         AR    I,@14                                               0273 00950000
*                        ADDRLIST(I) = 0;   /* SET ADDRLIST TO 0     */ 00951000
         LR    @09,I                                               0274 00952000
         SLA   @09,2                                               0274 00953000
         ST    @02,ADDRLIST-4(@09,@15)                             0274 00954000
*                        I = I+1;           /* INCREMENT SUBSCRIPT   */ 00955000
         AR    I,@14                                               0275 00956000
*                      END;                                        0276 00957000
*                  END;                                            0277 00958000
*               END;                                               0278 00959000
*            GO TO CC;                      /* GET NEXT PARM         */ 00960000
         B     CC                                                  0279 00961000
*          END;                                                    0280 00962000
*        ELSE                               /* OTHERWISE,            */ 00963000
*          DO;                                                     0281 00964000
@RF00255 DS    0H                                                  0282 00965000
*            IF SUBTRN = '1'B THEN          /* IF IN A SUBFIELD,     */ 00966000
         TM    SUBTRN,B'00010000'                                  0282 00967000
         BNO   @RF00282                                            0282 00968000
*              KYFOUND = '1'B;              /* INDICATE KEYWORD FOUND*/ 00969000
         OI    KYFOUND,B'01000000'                                 0283 00970000
*            A = ADDR(LEN);                 /* SET TEXT ADDRESSING   */ 00971000
@RF00282 L     A,TEXTPTR                                           0284 00972000
         LA    A,LEN(,A)                                           0284 00973000
*            SAVKEYWD = KYWDNBR;            /* GET THE KEYWORD NUMBER*/ 00974000
         MVC   SAVKEYWD(2),KYWDNBR(CURPDE)                         0285 00975000
*            DO WHILE(SAVKEYWD > 0);        /* INCREMENT THE PCE PTR */ 00976000
         B     @DE00286                                            0286 00977000
@DL00286 DS    0H                                                  0287 00978000
*              CURPCE = CURPCE + CMPCELEN;  /* AND DECREMENT KEYWORD */ 00979000
         AH    CURPCE,CMPCELEN(,CURPCE)                            0287 00980000
*              SAVKEYWD = SAVKEYWD - 1;     /* NUMBER UNTIL POINTING */ 00981000
         LH    @15,SAVKEYWD                                        0288 00982000
         BCTR  @15,0                                               0288 00983000
         STH   @15,SAVKEYWD                                        0288 00984000
*            END;                           /* TO PROPER NAME PCE    */ 00985000
*                                                                  0289 00986000
@DE00286 LH    @15,SAVKEYWD                                        0289 00987000
         LTR   @15,@15                                             0289 00988000
         BP    @DL00286                                            0289 00989000
*            IF CMSUBF = '1'B THEN          /* IF A SUBFIELD WAS     */ 00990000
         TM    CMSUBF(CURPCE),B'00000100'                          0290 00991000
         BNO   @RF00290                                            0290 00992000
*              DO;                          /* SPECIFIED, INDICATE   */ 00993000
*                KEYTRN = '1'B;             /* TO REPEAT DETTYPE     */ 00994000
*                SUBTRN = '1'B;             /* INDICATE SUBF PROCESS */ 00995000
         OI    KEYTRN,B'00110000'                                  0293 00996000
*                B  = B + 2;                /* GET PROPER KEY        */ 00997000
         LA    @15,2                                               0294 00998000
         L     @14,B                                               0294 00999000
         AR    @14,@15                                             0294 01000000
         ST    @14,B                                               0294 01001000
*                SUBPDEPT= CURPCE + 6 + NAMELEN; /* GET SUB PCE OFFST*/ 01002000
         LA    SUBPDEPT,6                                          0295 01003000
         AR    SUBPDEPT,CURPCE                                     0295 01004000
         MVC   @ZT00003+3(1),NAMELEN(CURPCE)                       0295 01005000
         A     SUBPDEPT,@ZT00003                                   0295 01006000
*                SAVPCE = CURPCE;           /* SAVE CURRENT PCE      */ 01007000
         ST    CURPCE,SAVPCE                                       0296 01008000
*                CURPCE = PCLADS+2+SUBOFST; /* SET UP SUB PCE PTR    */ 01009000
         A     @15,PCLADS                                          0297 01010000
         AH    @15,SUBOFST(,SUBPDEPT)                              0297 01011000
         LR    CURPCE,@15                                          0297 01012000
*                IF CMTYPE = '010'B THEN    /* IF SUBF PCE KEYWORD,  */ 01013000
         TM    CMTYPE(CURPCE),B'01000000'                          0298 01014000
         BNO   @RF00298                                            0298 01015000
         TM    CMTYPE(CURPCE),B'10100000'                          0298 01016000
         BNZ   @RF00298                                            0298 01017000
*                  DO;                                             0299 01018000
*                    SUBFOUND = '1'B;       /* INDICATE SO,          */ 01019000
         OI    SUBFOUND,B'00100000'                                0300 01020000
*                    KEYTRN = '0'B;        /* TURN OFF INDICATOR TO  */ 01021000
         NI    KEYTRN,B'11011111'                                  0301 01022000
*                                          /* REPEAT DETTYPE         */ 01023000
*                    GO TO AA;             /* GO PROCESS KEYWORD     */ 01024000
         B     AA                                                  0302 01025000
*                  END;                                            0303 01026000
*                ELSE                      /* IF OTHER TYPE,         */ 01027000
*                  GO TO BB;               /* EXIT TO PROCESS        */ 01028000
*              END;                                                0305 01029000
*            ELSE                           /* IF NO SUBFIELD, GO TO */ 01030000
*              CALL KEYTRNS;                /* TRANSLATE KEYWORD     */ 01031000
@RF00290 BAL   @14,KEYTRNS                                         0306 01032000
*          END;                                                    0307 01033000
*                                                                  0307 01034000
*    CC: IF SUBTRN = '1'B THEN            /* IF IN A SUBFIELD        */ 01035000
CC       TM    SUBTRN,B'00010000'                                  0308 01036000
         BNO   @RF00308                                            0308 01037000
*          DO;                            /* THEN                    */ 01038000
*            CURPCE = CURPCE + CMPCELEN;  /* GET NEXT PCE            */ 01039000
         AH    CURPCE,CMPCELEN(,CURPCE)                            0310 01040000
*            DO WHILE (CMTYPE = '011'B);  /* IF NAME PCE,            */ 01041000
         B     @DE00311                                            0311 01042000
@DL00311 DS    0H                                                  0312 01043000
*              NAMECTR = NAMECTR +1;      /* INCREMENT NAME CTR      */ 01044000
         LA    @02,1                                               0312 01045000
         AH    @02,NAMECTR                                         0312 01046000
         STH   @02,NAMECTR                                         0312 01047000
*              CURPCE = CURPCE + CMPCELEN;/* GET NEXT PCE            */ 01048000
         AH    CURPCE,CMPCELEN(,CURPCE)                            0313 01049000
*            END;                                                  0314 01050000
@DE00311 TM    CMTYPE(CURPCE),B'01100000'                          0314 01051000
         BNO   @DC00311                                            0314 01052000
         TM    CMTYPE(CURPCE),B'10000000'                          0314 01053000
         BZ    @DL00311                                            0314 01054000
@DC00311 DS    0H                                                  0315 01055000
*            IF CMTYPE = '000'B THEN      /* IF END OF SUBFIELD,     */ 01056000
         TM    CMTYPE(CURPCE),B'11100000'                          0315 01057000
         BNZ   @RF00315                                            0315 01058000
*              DO;                        /* THEN, IF KEYWORDS IN    */ 01059000
*                IF KYFOUND = '0'B & KYNOFND = '1'B THEN           0317 01060000
         TM    KYNOFND,B'10000000'                                 0317 01061000
         BNO   @RF00317                                            0317 01062000
         TM    KYFOUND,B'01000000'                                 0317 01063000
         BNZ   @RF00317                                            0317 01064000
*                  PARMOMIT = '1'B;       /* THE SUBFIELD NOT ENTERED*/ 01065000
         OI    PARMOMIT,B'00000100'                                0318 01066000
*                                         /* INDICATE PARM OMITTED   */ 01067000
*                CURPCE = SAVPCE;         /* RESTORE PCE PTR         */ 01068000
@RF00317 L     CURPCE,SAVPCE                                       0319 01069000
*                PCELEN = CMPCELEN;       /* SAVE PCE LENGTH         */ 01070000
         MVC   PCELEN(2),CMPCELEN(CURPCE)                          0320 01071000
*                KEYFIRST = '0'B;         /* TURN OFF INDICATORS     */ 01072000
*                SUBTRN = '0'B;                                    0322 01073000
         NI    KEYFIRST,B'11101110'                                0322 01074000
*                KYFOUND = '0'B;                                   0323 01075000
*                KYNOFND = '0'B;                                   0324 01076000
         NI    KYFOUND,B'00111111'                                 0324 01077000
*                NAMECTR = 0;             /* SET NAME COUNTER TO 0   */ 01078000
         SR    @02,@02                                             0325 01079000
         STH   @02,NAMECTR                                         0325 01080000
*              END;                                                0326 01081000
*            ELSE                         /* IF NOT END OF SUBFIELD, */ 01082000
*              GO TO AA;                  /* PROCESS NEXT KEYWORD    */ 01083000
*          END;                                                    0328 01084000
*   BB:  END TNKEYWD;                                              0329 01085000
*                                                                  0329 01086000
@EL00009 DS    0H                                                  0329 01087000
@EF00009 DS    0H                                                  0329 01088000
@ER00009 LM    @14,@02,@SA00009                                    0329 01089000
         LM    @04,@05,@SA00009+20                                 0329 01090000
         LM    @08,@12,@SA00009+28                                 0329 01091000
         BR    @14                                                 0329 01092000
*/********************************************************************/ 01093000
*/*                                                                  */ 01094000
*/* SEGMENT NAME -                                                   */ 01095000
*/*      TNIDENT                                                     */ 01096000
*/*                                                                  */ 01097000
*/* FUNCTION -                                                       */ 01098000
*/*      THIS ROUTINE TRANSLATES AN IDENT OR POSIT PCE (OTHER THAN   */ 01099000
*/*      DSNAME) TO TEXT FORMAT.                                     */ 01100000
*/*                                                                  */ 01101000
*/* OPERATION -                                                      */ 01102000
*/*      IF THE PARAMETER IS NOT ENTERED, AN INDICATOR IS SET. IF    */ 01103000
*/*      THE PARAMETER IS ENTERED, THE PCE IS EXAMINED TO DETERMINE  */ 01104000
*/*      IF THE PARAMETER IS NUMERIC. IF SO, ROUTINES CONVRT AND     */ 01105000
*/*      NUMLENGH ARE INVOKED TO CONVERT THE PARAMETER TO A BINARY   */ 01106000
*/*      VALUE AND TO OBTAIN THE PROPER LENGTH FOR THE PARAMETER.    */ 01107000
*/*      THE TEXT UNIT IS THEN BUILT. IF A LIST IS ALLOWED FOR       */ 01108000
*/*      THIS PARAMETER, THE ROUTINE LISTTRNS IS INVOKED.            */ 01109000
*/*                                                                  */ 01110000
*/* INPUT -                                                          */ 01111000
*/*      PTR TO POSIT OR IDENT PCE                                   */ 01112000
*/*      PTR TO PDL                                                  */ 01113000
*/*      PTR TO TEXT STORAGE                                         */ 01114000
*/*      PTR TO KEY LIST                                             */ 01115000
*/*                                                                  */ 01116000
*/* OUTPUT -                                                         */ 01117000
*/*      PARMOMIT = 1 - PARAMETER NOT ENTERED                        */ 01118000
*/*      TEXT FOR IDENT OR POSIT PARAMETER                           */ 01119000
*/*                                                                  */ 01120000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01121000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01122000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01123000
*/********************************************************************/ 01124000
*    TNIDENT: PROC;                                                0330 01125000
TNIDENT  STM   @14,@02,@SA00010                                    0330 01126000
         STM   @04,@12,@SA00010+20                                 0330 01127000
*        CURPDE = PDLADS + CMPDEOF;    /* SET UP PDE PTR             */ 01128000
         LH    CURPDE,CMPDEOF(,CURPCE)                             0331 01129000
         A     CURPDE,PDLADS                                       0331 01130000
*        IF PARMPRES = '0'B THEN       /* IF PARM NOT ENTERED,       */ 01131000
         TM    PARMPRES(CURPDE),B'10000000'                        0332 01132000
         BNZ   @RF00332                                            0332 01133000
*          DO;                         /* AND,                       */ 01134000
*            IF SUBTRN = '1'B THEN     /* WITHIN A SUBFIELD,         */ 01135000
         TM    SUBTRN,B'00010000'                                  0334 01136000
         BNO   @RF00334                                            0334 01137000
*              DO;                     /* THEN                       */ 01138000
*                RTCODE = 4;           /* SET RETURN CODE FOR        */ 01139000
         MVC   RTCODE(4),@CF00172                                  0336 01140000
*                INVPARM = '1'B;       /* INVALID PARAMETERS         */ 01141000
         OI    INVPARM,B'10000000'                                 0337 01142000
*              END;                                                0338 01143000
*            PARMOMIT = '1'B;          /* INDICATE NOT ENTERED       */ 01144000
@RF00334 OI    PARMOMIT,B'00000100'                                0339 01145000
*          END;                                                    0340 01146000
*        ELSE                                                      0341 01147000
*          DO;                         /* OTHERWISE,                 */ 01148000
         B     @RC00332                                            0341 01149000
@RF00332 DS    0H                                                  0342 01150000
*            A = ADDR(LEN);                                        0342 01151000
         L     @07,TEXTPTR                                         0342 01152000
         LA    A,LEN(,@07)                                         0342 01153000
*            NUMBER = 1;               /* SET NUMBER IN TEXT TO 1    */ 01154000
         MVC   NUMBER(2,@07),@CH00081                              0343 01155000
*            IF IDFIRST = 2 & IDOTHER = 2 THEN /* IF PARM IS NUMERIC,*/ 01156000
         CLI   IDFIRST(CURPCE),2                                   0344 01157000
         BNE   @RF00344                                            0344 01158000
         CLI   IDOTHER(CURPCE),2                                   0344 01159000
         BNE   @RF00344                                            0344 01160000
*              DO;                                                 0345 01161000
*                 CALL CONVRT;         /* CONVERT TO BINARY          */ 01162000
         BAL   @14,CONVRT                                          0346 01163000
*                 CALL NUMLENGH;       /* GET PROPER LENGTH          */ 01164000
         BAL   @14,NUMLENGH                                        0347 01165000
*              END;                                                0348 01166000
*            ELSE                                                  0349 01167000
*               DO;                    /* IF NON-NUMERIC             */ 01168000
         B     @RC00344                                            0349 01169000
@RF00344 DS    0H                                                  0350 01170000
*                 SAVLEN = PARMLEN;    /* SAVE THE LENGTH AND        */ 01171000
         LH    @07,PARMLEN(,CURPDE)                                0350 01172000
         STH   @07,SAVLEN                                          0350 01173000
*                 IF SAVLEN < 256 THEN /* PUT INTO BUFFER IF POSSIBLE*/ 01174000
         CH    @07,@CH00491                                        0351 01175000
         BNL   @RF00351                                            0351 01176000
*                   ADPARM = ADDR(REALPARM);                       0352 01177000
         LA    @07,REALPARM                                        0352 01178000
         ST    @07,ADPARM                                          0352 01179000
*                 ELSE                 /* OTHERWISE,                 */ 01180000
*                   DO;                /* GETMAIN FOR NEW BUFFER     */ 01181000
         B     @RC00351                                            0353 01182000
@RF00351 DS    0H                                                  0354 01183000
*                     SIZE = PARMLEN;  /* LENGTH, AND                */ 01184000
         LH    @07,PARMLEN(,CURPDE)                                0354 01185000
         ST    @07,@TF00001                                        0354 01186000
         MVC   SIZE(3),@TF00001+1                                  0354 01187000
*                     SBPOOL = '01'X;  /* SUBPOOL NUMBER             */ 01188000
         MVI   SBPOOL,X'01'                                        0355 01189000
*                     R0 = SPLEN;      /* IN REGISTER 0              */ 01190000
         L     R0,SPLEN                                            0356 01191000
*                     GEN (GETMAIN R,LV=(0));  /* ISSUE GETMAIN      */ 01192000
         GETMAIN R,LV=(0)                                               01193000
*                     ADPARM = R1;     /* SAVE GOTTEN AREA           */ 01194000
         ST    R1,ADPARM                                           0358 01195000
*                   END;                                           0359 01196000
*                  SAVPARM(1:PARMLEN)=VALUE(1:PARMLEN);            0360 01197000
@RC00351 L     @07,ADPARM                                          0360 01198000
         LH    @15,PARMLEN(,CURPDE)                                0360 01199000
         BCTR  @15,0                                               0360 01200000
         L     @01,PARMPTR(,CURPDE)                                0360 01201000
         EX    @15,@SM00562                                        0360 01202000
*               END;                                               0361 01203000
*                                                                  0361 01204000
*             LSTLEN=SAVLEN;           /* MOVE LENGTH INTO TEXT      */ 01205000
@RC00344 LH    @07,SAVLEN                                          0362 01206000
         STH   @07,LSTLEN(,A)                                      0362 01207000
*             LSTTEXT(1:SAVLEN) = SAVPARM(1:SAVLEN);/* MOVE PARAMETER   01208000
*                                                      INTO TEXT     */ 01209000
         LR    @15,@07                                             0363 01210000
         BCTR  @15,0                                               0363 01211000
         L     @01,ADPARM                                          0363 01212000
         EX    @15,@SM00564                                        0363 01213000
*             A = A + 2 + SAVLEN;                                  0364 01214000
         LA    @15,2                                               0364 01215000
         AR    @15,A                                               0364 01216000
         AR    @15,@07                                             0364 01217000
         LR    A,@15                                               0364 01218000
*              IF CMLIST = '1'B THEN   /* IF LIST OPTION SPECIFIED,  */ 01219000
         TM    CMLIST(CURPCE),B'10000000'                          0365 01220000
         BNO   @RF00365                                            0365 01221000
*                CALL LISTTRNS;        /* GO TO PROCESS LIST         */ 01222000
         BAL   @14,LISTTRNS                                        0366 01223000
*          END;                                                    0367 01224000
*END TNIDENT;                                                      0368 01225000
@EL00010 DS    0H                                                  0368 01226000
@EF00010 DS    0H                                                  0368 01227000
@ER00010 LM    @14,@02,@SA00010                                    0368 01228000
         LM    @04,@12,@SA00010+20                                 0368 01229000
         BR    @14                                                 0368 01230000
*/********************************************************************/ 01231000
*/*                                                                  */ 01232000
*/* SEGMENT NAME -                                                   */ 01233000
*/*      DSNTRANS                                                    */ 01234000
*/*                                                                  */ 01235000
*/* FUNCTION -                                                       */ 01236000
*/*      THIS ROUTINE TRANSLATES A DSNAME PARAMETER TO TEXT FORMAT.  */ 01237000
*/*                                                                  */ 01238000
*/* OPERATION -                                                      */ 01239000
*/*      AN INDICATOR IS SET TO SHOW DSNAME PROCESSING. A POINTER TO */ 01240000
*/*      THE CORRESPONDING PDE IS SET UP. IF A LIST OF DSNAMES WAS   */ 01241000
*/*      ENTERED, ROUTINE DSNLIST IS INVOKED. OTHERWISE, ROUTINES    */ 01242000
*/*      DSNSNGLE, MBRSNGLE AND PSWSNGLE ARE INVOKED.                */ 01243000
*/*                                                                  */ 01244000
*/* INPUT -                                                          */ 01245000
*/*      PTR TO DSNAME PCE                                           */ 01246000
*/*      PTR TO PDL                                                  */ 01247000
*/*      PTR TO KEY LIST                                             */ 01248000
*/*      PTR TO TEXT STORAGE                                         */ 01249000
*/*      PTR TO ADDRESS LIST                                         */ 01250000
*/*                                                                  */ 01251000
*/* OUTPUT -                                                         */ 01252000
*/*      PTR TO TEXT UNIT FOR DSNAME                                 */ 01253000
*/*                                                                  */ 01254000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01255000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01256000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01257000
*/********************************************************************/ 01258000
*    DSNTRANS: PROC;                                               0369 01259000
DSNTRANS STM   @14,@02,@SA00011                                    0369 01260000
         STM   @04,@06,@SA00011+20                                 0369 01261000
         STM   @08,@12,@SA00011+32                                 0369 01262000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 01263000
         CLI   FAIL,0                                              0370 01264000
         BNE   @RF00370                                            0370 01265000
*          DO;                              /* NO -                  */ 01266000
*            DSNPROC = '1'B;                /* SET DSN INDICATOR     */ 01267000
         OI    DSNPROC,B'00001000'                                 0372 01268000
*            CURPDE = PDLADS + CMPDEOF;     /* SET UP PDE POINTER    */ 01269000
         LH    CURPDE,CMPDEOF(,CURPCE)                             0373 01270000
         A     CURPDE,PDLADS                                       0373 01271000
*            IF SUBTRN = '1'B THEN          /* IF WITHIN A SUBFIELD  */ 01272000
         TM    SUBTRN,B'00010000'                                  0374 01273000
         BNO   @RF00374                                            0374 01274000
*              DO;                          /* AND                   */ 01275000
*                IF PARMPRES = '0'B &       /* DSNAME NOT ENTERED,   */ 01276000
*                   MBRPRES = '0'B &        /* NOR MEMBER NAME,      */ 01277000
*                   PASSPRES = '0'B THEN    /* NOR PASSWORD,         */ 01278000
         TM    PARMPRES(CURPDE),B'10000000'                        0376 01279000
         BNZ   @RF00376                                            0376 01280000
         TM    MBRPRES(CURPDE),B'10000000'                         0376 01281000
         BNZ   @RF00376                                            0376 01282000
         TM    PASSPRES(CURPDE),B'10000000'                        0376 01283000
         BNZ   @RF00376                                            0376 01284000
*                  DO;                      /* THEN                  */ 01285000
*                    RTCODE = 4;            /* SET RETURN CODE FOR   */ 01286000
         MVC   RTCODE(4),@CF00172                                  0378 01287000
*                    INVPARM = '1'B;        /* INVALID PARAMETERS    */ 01288000
         OI    INVPARM,B'10000000'                                 0379 01289000
*                    PARMOMIT = '1'B;       /* PARM NOT ENTERED      */ 01290000
         OI    PARMOMIT,B'00000100'                                0380 01291000
*                  END;                                            0381 01292000
*              END;                                                0382 01293000
@RF00376 DS    0H                                                  0383 01294000
*            IF CMLIST = '1'B &             /* IF LIST POSSIBLE      */ 01295000
*               DSNNEXT ^= PDECMPRE THEN    /* AND LIST ENTERED,     */ 01296000
@RF00374 TM    CMLIST(CURPCE),B'10000000'                          0383 01297000
         BNO   @RF00383                                            0383 01298000
         CLC   DSNNEXT(4,CURPDE),PDECMPRE                          0383 01299000
         BE    @RF00383                                            0383 01300000
*               CALL DSNLIST;               /* THEN PROCESS LIST     */ 01301000
         BAL   @14,DSNLIST                                         0384 01302000
*            ELSE                                                  0385 01303000
*              DO;                          /* ELSE,                 */ 01304000
         B     @RC00383                                            0385 01305000
@RF00383 DS    0H                                                  0386 01306000
*                CALL DSNSNGLE;             /* PROCESS DSNAME        */ 01307000
         BAL   @14,DSNSNGLE                                        0386 01308000
*                CALL MBRSNGLE;             /* PROCESS MEMBER NAME   */ 01309000
         BAL   @14,MBRSNGLE                                        0387 01310000
*                CALL PSWSNGLE;             /* PROCESS PASSWORD      */ 01311000
         BAL   @14,PSWSNGLE                                        0388 01312000
*              END;                                                0389 01313000
*          END;                                                    0390 01314000
*                                                                  0390 01315000
*END DSNTRANS;                                                     0391 01316000
@EL00011 DS    0H                                                  0391 01317000
@EF00011 DS    0H                                                  0391 01318000
@ER00011 LM    @14,@02,@SA00011                                    0391 01319000
         LM    @04,@06,@SA00011+20                                 0391 01320000
         LM    @08,@12,@SA00011+32                                 0391 01321000
         BR    @14                                                 0391 01322000
*/********************************************************************/ 01323000
*/*                                                                  */ 01324000
*/* SEGMENT NAME -                                                   */ 01325000
*/*      KEYTRNS                                                     */ 01326000
*/*                                                                  */ 01327000
*/* FUNCTION -                                                       */ 01328000
*/*      THIS ROUTINE TRANSLATES TO TEXT FORMAT A KEYWORD WHICH HAS  */ 01329000
*/*      NO SUBFIELD.                                                */ 01330000
*/*                                                                  */ 01331000
*/* OPERATION -                                                      */ 01332000
*/*      A SEARCH IS MADE OF THE KEYWORD TABLE FOR A KEY THAT        */ 01333000
*/*      MATCHES THE CURRENT KEY IN THE KEY LIST. IF NO MATCH IS     */ 01334000
*/*      FOUND, THE RETURN CODE IS SET TO 4 (INVALID PARAMETERS).    */ 01335000
*/*      IF A MATCH IS FOUND, THEN IF THE NUMBER IN THE KEYWORD PDE  */ 01336000
*/*      EXCEEDS THE NUMBER IN THE KEYWORD TABLE THE RETURN CODE IS  */ 01337000
*/*      SET TO 4 (INVALID PARAMETERS). OTHERWISE, THE BIT SETTING   */ 01338000
*/*      FOR THE KEYWORD IS PICKED UP FROM THE KEYWORD TABLE AND     */ 01339000
*/*      PUT INTO THE TEXT. IF THE SETTING WAS 0, THEN THE NUMBER    */ 01340000
*/*      AND LENGTH IN THE TEXT ARE SET TO 0. OTHERWISE, THEY ARE    */ 01341000
*/*      SET TO 1.                                                   */ 01342000
*/*                                                                  */ 01343000
*/* INPUT -                                                          */ 01344000
*/*      PTR TO KEYWORD PDE                                          */ 01345000
*/*      PTR TO KEY LIST                                             */ 01346000
*/*      PTR TO KEYWORD TABLE                                        */ 01347000
*/*      PTR TO TEXT STORAGE                                         */ 01348000
*/*                                                                  */ 01349000
*/* OUTPUT -                                                         */ 01350000
*/*      PTR TO KEYWORD TEXT UNIT                                    */ 01351000
*/*      RETURN CODE:                                                */ 01352000
*/*            0 = SUCCESSFUL                                        */ 01353000
*/*            4 = INVALID PARAMETERS PASSED TO GENTRANS             */ 01354000
*/*                                                                  */ 01355000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01356000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01357000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01358000
*/********************************************************************/ 01359000
*    KEYTRNS: PROC;                                                0392 01360000
KEYTRNS  STM   @14,@02,12(@13)                                     0392 01361000
         STM   @04,@12,36(@13)                                     0392 01362000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 01363000
         CLI   FAIL,0                                              0393 01364000
         BNE   @RF00393                                            0393 01365000
*          DO;                              /* NO -                  */ 01366000
*        IF KEYFIRST = '0'B THEN            /* FIRST TIME THROUGH?   */ 01367000
         TM    KEYFIRST,B'00000001'                                0395 01368000
         BNZ   @RF00395                                            0395 01369000
*          DO;                              /* YES -                 */ 01370000
*            KEYFIRST = '1'B;               /* INDICATE SO           */ 01371000
         OI    KEYFIRST,B'00000001'                                0397 01372000
*            A = ADDR(LEN);                                        0398 01373000
         L     A,TEXTPTR                                           0398 01374000
         LA    A,LEN(,A)                                           0398 01375000
*            LSTTEXT(1) = '00'X;            /* INITIALIZE TEXT AREA  */ 01376000
         MVI   LSTTEXT(A),X'00'                                    0399 01377000
*            Y = GTPLTBLE;                 /* SET PTR TO KEYTABLE   */  01378000
         L     @01,GTPLPTR                                         0400 01379000
         MVC   Y(4),GTPLTBLE(@01)                                  0400 01380000
*            DO WHILE (SEARCH = '0'B);      /*SEARCH FOR MATCHING KEY*/ 01381000
         B     @DE00401                                            0401 01382000
@DL00401 DS    0H                                                  0402 01383000
*              IF TABKEY ^= DYNKEY THEN     /* IF NOT MATCHING,      */ 01384000
         L     @01,Y                                               0402 01385000
         MVC   @ZT00002+2(2),TABKEY(@01)                           0402 01386000
         L     @15,@ZT00002                                        0402 01387000
         L     @14,B                                               0402 01388000
         CH    @15,DYNKEY(,@14)                                    0402 01389000
         BE    @RF00402                                            0402 01390000
*                DO;                        /* AND                   */ 01391000
*                  IF TABKEY = 'FFFF'X THEN /* END OF TABLE          */ 01392000
         C     @15,@CF00503                                        0404 01393000
         BNE   @RF00404                                            0404 01394000
*                    DO;                    /* THEN                  */ 01395000
*                      SEARCH = '1'B;       /* EXIT FROM DO-WHILE    */ 01396000
         OI    SEARCH,B'00000010'                                  0406 01397000
*                      RTCODE = 4;          /* SET RETURN CODE       */ 01398000
         MVC   RTCODE(4),@CF00172                                  0407 01399000
*                      INVPARM = '1'B;      /* INDICATE ERROR        */ 01400000
         OI    INVPARM,B'10000000'                                 0408 01401000
*                    END;                                          0409 01402000
*                  ELSE                     /* IF NOT END OF TABLE,  */ 01403000
*                    Y = Y + 4 + TABCNT;    /* PT TO NEXT ELEMENT    */ 01404000
         B     @RC00404                                            0410 01405000
@RF00404 L     @15,Y                                               0410 01406000
         LA    @14,4                                               0410 01407000
         AR    @14,@15                                             0410 01408000
         AH    @14,TABCNT(,@15)                                    0410 01409000
         ST    @14,Y                                               0410 01410000
*                END;                                              0411 01411000
*              ELSE                         /* IF KEYS DO MATCH,     */ 01412000
*                SEARCH = '1'B;             /* EXIT FROM DO-WHILE    */ 01413000
         B     @RC00402                                            0412 01414000
@RF00402 OI    SEARCH,B'00000010'                                  0412 01415000
*            END;                                                  0413 01416000
@RC00402 DS    0H                                                  0413 01417000
@DE00401 TM    SEARCH,B'00000010'                                  0413 01418000
         BZ    @DL00401                                            0413 01419000
*            SEARCH = '0'B;                 /* RESET INDICATOR       */ 01420000
         NI    SEARCH,B'11111101'                                  0414 01421000
*            IF FAIL=0 THEN                 /* ERROR FOUND IN SEARCH?*/ 01422000
         CLI   FAIL,0                                              0415 01423000
         BNE   @RF00415                                            0415 01424000
*              DO;                          /* NO -                  */ 01425000
*                NAMECTR=NAMECTR+KYWDNBR;   /* INCREMENT NAME CTR    */ 01426000
         LH    @15,NAMECTR                                         0417 01427000
         AH    @15,KYWDNBR(,CURPDE)                                0417 01428000
         STH   @15,NAMECTR                                         0417 01429000
*                IF NAMECTR > TABCNT THEN   /* IF NUMBER EXCEEDS     */ 01430000
         L     @02,Y                                               0418 01431000
         CH    @15,TABCNT(,@02)                                    0418 01432000
         BNH   @RF00418                                            0418 01433000
*                  DO;                      /* NUMBER IN TABLE,      */ 01434000
*                    RTCODE = 4;            /* SET RETURN CODE       */ 01435000
         MVC   RTCODE(4),@CF00172                                  0420 01436000
*                    INVPARM = '1'B;        /* INDICATE ERROR        */ 01437000
         OI    INVPARM,B'10000000'                                 0421 01438000
*                  END;                                            0422 01439000
*                ELSE                       /* OTHERWISE,            */ 01440000
*                  DO;                      /* GET BIT SETTING AND   */ 01441000
         B     @RC00418                                            0423 01442000
@RF00418 DS    0H                                                  0424 01443000
*                    BITVALUE = ADDR(TABCNT)+NAMECTR+1;            0424 01444000
         L     BITVALUE,Y                                          0424 01445000
         LA    BITVALUE,TABCNT(,BITVALUE)                          0424 01446000
         AH    BITVALUE,NAMECTR                                    0424 01447000
         AH    BITVALUE,@CH00081                                   0424 01448000
*                    LSTTEXT(1)=LSTTEXT(1)|SETTING;/* PUT INTO TEXT  */ 01449000
         OC    LSTTEXT(1,A),SETTING(BITVALUE)                      0425 01450000
*                    IF SETTING = 0 THEN    /* IF BIT SETTING IS 0   */ 01451000
         CLI   SETTING(BITVALUE),0                                 0426 01452000
         BNE   @RF00426                                            0426 01453000
*                      DO;                  /* THEN                  */ 01454000
*                        LSTLEN = 0;        /* LENGTH AND            */ 01455000
         SR    @02,@02                                             0428 01456000
         STH   @02,LSTLEN(,A)                                      0428 01457000
*                        NUMBER = 0;        /* NUMBER ARE 0.         */ 01458000
         L     @01,TEXTPTR                                         0429 01459000
         STH   @02,NUMBER(,@01)                                    0429 01460000
*                      END;                                        0430 01461000
*                    ELSE                   /* OTHERWISE,            */ 01462000
*                      DO;                                         0431 01463000
         B     @RC00426                                            0431 01464000
@RF00426 DS    0H                                                  0432 01465000
*                        LSTLEN = 1;        /* LENGTH AND            */ 01466000
         LA    @02,1                                               0432 01467000
         STH   @02,LSTLEN(,A)                                      0432 01468000
*                        NUMBER = 1;        /* NUMBER ARE 1          */ 01469000
         L     @01,TEXTPTR                                         0433 01470000
         STH   @02,NUMBER(,@01)                                    0433 01471000
*                      END;                                        0434 01472000
*                    A = A+3;               /* INCREMENT TEXT PTR    */ 01473000
@RC00426 AH    A,@CH00119                                          0435 01474000
*                  END;                                            0436 01475000
*              END;                                                0437 01476000
*            END;                                                  0438 01477000
*           ELSE                           /* IF OTHER THAN FIRST    */ 01478000
*             DO;                          /* TIME THROUGH,          */ 01479000
         B     @RC00395                                            0439 01480000
@RF00395 DS    0H                                                  0440 01481000
*              NAMECTR = NAMECTR+KYWDNBR;  /* INCREMENT NAME CTR     */ 01482000
         LH    @15,NAMECTR                                         0440 01483000
         AH    @15,KYWDNBR(,CURPDE)                                0440 01484000
         STH   @15,NAMECTR                                         0440 01485000
*              IF NAMECTR > TABCNT THEN    /* IF NUMBER EXCEEDS      */ 01486000
         L     @02,Y                                               0441 01487000
         CH    @15,TABCNT(,@02)                                    0441 01488000
         BNH   @RF00441                                            0441 01489000
*                DO;                       /* NUMBER IN TABLE,       */ 01490000
*                  RTCODE = 4;             /* SET RETURN CODE FOR    */ 01491000
         MVC   RTCODE(4),@CF00172                                  0443 01492000
*                  INVPARM = '1'B;         /* INVALID PARAMETERS     */ 01493000
         OI    INVPARM,B'10000000'                                 0444 01494000
*                END;                                              0445 01495000
*              ELSE                        /* OTHERWISE,             */ 01496000
*                DO;                       /* PUT BIT SETTING IN TEXT*/ 01497000
         B     @RC00441                                            0446 01498000
@RF00441 DS    0H                                                  0447 01499000
*                  BITVALUE = ADDR(TABCNT) + NAMECTR+1;            0447 01500000
         L     BITVALUE,Y                                          0447 01501000
         LA    BITVALUE,TABCNT(,BITVALUE)                          0447 01502000
         AH    BITVALUE,NAMECTR                                    0447 01503000
         AH    BITVALUE,@CH00081                                   0447 01504000
*                  LSTTEXT(1) = LSTTEXT(1) | SETTING;              0448 01505000
         OC    LSTTEXT(1,A),SETTING(BITVALUE)                      0448 01506000
*                  A = A+3;                /* INCREMENT TEXT PTR     */ 01507000
         AH    A,@CH00119                                          0449 01508000
*                END;                                              0450 01509000
*            END;                                                  0451 01510000
*          END;                                                    0452 01511000
*END KEYTRNS;                                                      0453 01512000
@EL00012 DS    0H                                                  0453 01513000
@EF00012 DS    0H                                                  0453 01514000
@ER00012 LM    @14,@02,12(@13)                                     0453 01515000
         LM    @04,@12,36(@13)                                     0453 01516000
         BR    @14                                                 0453 01517000
*/********************************************************************/ 01518000
*/*                                                                  */ 01519000
*/* SEGMENT NAME -                                                   */ 01520000
*/*      TYPEPROC                                                    */ 01521000
*/*                                                                  */ 01522000
*/* FUNCTION -                                                       */ 01523000
*/*      THIS ROUTINE HANDLES VARIOUS SITUATIONS THAT COULD ARISE    */ 01524000
*/*      DEPENDING ON THE TYPE OF PARAMETER BEING PASSED.            */ 01525000
*/*                                                                  */ 01526000
*/* OPERATION -                                                      */ 01527000
*/*      IF A KEYWORD WITH A SUBFIELD WAS FOUND, THEN ROUTINE        */ 01528000
*/*      DETTYPE IS INVOKED. OTHERWISE ROUTINES SUBFPROC AND TSTDSN  */ 01529000
*/*      ARE INVOKED.                                                */ 01530000
*/*                                                                  */ 01531000
*/* INPUT -                                                          */ 01532000
*/*      KEYTRN = 1 - PROCESSING KEYWORD WITH SUBFIELD               */ 01533000
*/*      SUBTRN = 1 - PROCESSING SUBFIELD                            */ 01534000
*/*      DSNPROC = 1 - PROCESSING DSNAME                             */ 01535000
*/*      PARMOMIT = 1 - PARAMETER NOT ENTERED                        */ 01536000
*/*      PTR TO KEY LIST                                             */ 01537000
*/*      PTR TO ADDRESS LIST                                         */ 01538000
*/*      PTR TO TEXT UNIT                                            */ 01539000
*/*      PTR TO CURRENT PCE                                          */ 01540000
*/*                                                                  */ 01541000
*/* OUTPUT -                                                         */ 01542000
*/*      PTR TO TEXT OR 0 IN ADDRESS LIST                            */ 01543000
*/*                                                                  */ 01544000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01545000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01546000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01547000
*/********************************************************************/ 01548000
*    TYPEPROC: PROC;                                               0454 01549000
TYPEPROC STM   @14,@02,@SA00013                                    0454 01550000
         STM   @04,@05,@SA00013+20                                 0454 01551000
         STM   @08,@12,@SA00013+28                                 0454 01552000
*        IF FAIL=0 THEN                     /* ERROR FOUND ?         */ 01553000
         CLI   FAIL,0                                              0455 01554000
         BNE   @RF00455                                            0455 01555000
*          DO;                              /* NO -                  */ 01556000
*            IF SUBFOUND = '1'B THEN        /* IF SUBF PCE FOUND     */ 01557000
         TM    SUBFOUND,B'00100000'                                0457 01558000
         BNO   @RF00457                                            0457 01559000
*              DO;                          /* THEN                  */ 01560000
*                SUBFOUND = '0'B;           /* TURN OFF INDICATOR    */ 01561000
         NI    SUBFOUND,B'11011111'                                0459 01562000
*                CALL TSTDSN;               /* GO TO PROCESS TYPE    */ 01563000
         BAL   @14,TSTDSN                                          0460 01564000
*              END;                                                0461 01565000
*            ELSE                       /* IF NOT SUBF PCE FOUND,    */ 01566000
*              DO;                      /* THEN                      */ 01567000
         B     @RC00457                                            0462 01568000
@RF00457 DS    0H                                                  0463 01569000
*                IF KEYTRN = '1'B THEN  /* IF KEYWORD WITH SUBFLD    */ 01570000
         TM    KEYTRN,B'00100000'                                  0463 01571000
         BNO   @RF00463                                            0463 01572000
*                  DO;                  /* THEN                      */ 01573000
*                    KEYTRN = '0'B;     /* TURN OFF INDICATOR        */ 01574000
         NI    KEYTRN,B'11011111'                                  0465 01575000
*                    CALL DETTYPE;      /* PROCESS SUBF TYPE         */ 01576000
         BAL   @14,DETTYPE                                         0466 01577000
*                  END;                                            0467 01578000
*                CALL SUBFPROC;         /* PROCESSING FOR SUBFIELD   */ 01579000
@RF00463 BAL   @14,SUBFPROC                                        0468 01580000
*                CALL TSTDSN;           /* PROCESSING FOR DSNAME     */ 01581000
         BAL   @14,TSTDSN                                          0469 01582000
*              END;                                                0470 01583000
*          END;                                                    0471 01584000
*                                                                  0471 01585000
*END TYPEPROC;                                                     0472 01586000
@EL00013 DS    0H                                                  0472 01587000
@EF00013 DS    0H                                                  0472 01588000
@ER00013 LM    @14,@02,@SA00013                                    0472 01589000
         LM    @04,@05,@SA00013+20                                 0472 01590000
         LM    @08,@12,@SA00013+28                                 0472 01591000
         BR    @14                                                 0472 01592000
*/********************************************************************/ 01593000
*/*                                                                  */ 01594000
*/* SEGMENT NAME -                                                   */ 01595000
*/*      SUBFPROC                                                    */ 01596000
*/*                                                                  */ 01597000
*/* FUNCTION -                                                       */ 01598000
*/*      THIS ROUTINE PERFORMS PROCESSING FOR A SUBFIELD THAT HAS    */ 01599000
*/*      BEEN TRANSLATED.                                            */ 01600000
*/*                                                                  */ 01601000
*/* OPERATION -                                                      */ 01602000
*/*      THE PCE POINTER IS INCREMENTED TO THE NEXT PCE AFTER THE    */ 01603000
*/*      SUBFIELD PCE. IF NAME TYPE, INCREMENT PCE POINTER AGAIN.    */ 01604000
*/*      IF ENDP OR SUBF TYPE, RESTORE POINTER TO PCE WHICH HAD      */ 01605000
*/*      THE SUBFIELD. IF ANY OTHER TYPE, INVOKE ROUTINE DETTYPE     */ 01606000
*/*      TO PROCESS IT.                                              */ 01607000
*/*                                                                  */ 01608000
*/* INPUT -                                                          */ 01609000
*/*      SUBTRN = 1 - PROCESSING SUBFIELD                            */ 01610000
*/*      PTR TO CURRENT PCE                                          */ 01611000
*/*                                                                  */ 01612000
*/* OUTPUT -                                                         */ 01613000
*/*      PTR TO FORMER PCE (WHEN SUBFIELD WAS FOUND)                 */ 01614000
*/*                                                                  */ 01615000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01616000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01617000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01618000
*/********************************************************************/ 01619000
*    SUBFPROC: PROC;                                               0473 01620000
*                                                                  0473 01621000
SUBFPROC STM   @14,@02,@SA00014                                    0473 01622000
         STM   @04,@05,@SA00014+20                                 0473 01623000
         STM   @08,@12,@SA00014+28                                 0473 01624000
*        IF FAIL=0 THEN                     /* ERROR FOUND ?         */ 01625000
         CLI   FAIL,0                                              0474 01626000
         BNE   @RF00474                                            0474 01627000
*          DO;                              /* NO -                  */ 01628000
*            IF SUBTRN = '1'B THEN          /* IN SUBF PROCESSING ?  */ 01629000
         TM    SUBTRN,B'00010000'                                  0476 01630000
         BNO   @RF00476                                            0476 01631000
*              DO;                          /* YES -                 */ 01632000
*                CURPCE=CURPCE+CMPCELEN;    /* GET NEXT PCE          */ 01633000
         AH    CURPCE,CMPCELEN(,CURPCE)                            0478 01634000
*                DO WHILE (CMTYPE='011'B);  /* IF NAME PCE,          */ 01635000
         B     @DE00479                                            0479 01636000
@DL00479 DS    0H                                                  0480 01637000
*                  NAMECTR = NAMECTR+1;     /* INCREMENT NAME CTR    */ 01638000
         LA    @02,1                                               0480 01639000
         AH    @02,NAMECTR                                         0480 01640000
         STH   @02,NAMECTR                                         0480 01641000
*                  CURPCE = CURPCE+CMPCELEN; /* GET NEXT PCE         */ 01642000
         AH    CURPCE,CMPCELEN(,CURPCE)                            0481 01643000
*                END;                       /* REPEAT CHECK FOR NAME */ 01644000
*                                                                  0482 01645000
@DE00479 TM    CMTYPE(CURPCE),B'01100000'                          0482 01646000
         BNO   @DC00479                                            0482 01647000
         TM    CMTYPE(CURPCE),B'10000000'                          0482 01648000
         BZ    @DL00479                                            0482 01649000
@DC00479 DS    0H                                                  0483 01650000
*                IF CMTYPE = '000'B THEN    /* IF NOT NAME, BUT      */ 01651000
         TM    CMTYPE(CURPCE),B'11100000'                          0483 01652000
         BNZ   @RF00483                                            0483 01653000
*                  DO;                      /* ENDP OR SUBF PCE -    */ 01654000
*                    CURPCE = SAVPCE;       /* RESTORE FORMER PCE    */ 01655000
         L     CURPCE,SAVPCE                                       0485 01656000
*                    PCELEN = CMPCELEN;     /* GET PCE LENGTH        */ 01657000
         MVC   PCELEN(2),CMPCELEN(CURPCE)                          0486 01658000
*                    KEYFIRST = '0'B;       /* RESET KEYWD INDICATOR */ 01659000
         NI    KEYFIRST,B'11111110'                                0487 01660000
*                    NAMECTR = 0;           /* RESET NAME CTR        */ 01661000
         SR    @02,@02                                             0488 01662000
         STH   @02,NAMECTR                                         0488 01663000
*                    SUBTRN = '0'B;         /* TURN OFF SUBF INDICATOR* 01664000
         NI    SUBTRN,B'11101111'                                  0489 01665000
*                  END;                                            0490 01666000
*                ELSE                       /* ANY OTHER PCE,        */ 01667000
*                  CALL DETTYPE;            /* GO TO DETERMINE TYPE  */ 01668000
         B     @RC00483                                            0491 01669000
@RF00483 BAL   @14,DETTYPE                                         0491 01670000
*              END;                                                0492 01671000
*            ELSE                                                  0493 01672000
*              DO;                                                 0493 01673000
         B     @RC00476                                            0493 01674000
@RF00476 DS    0H                                                  0494 01675000
*                KEYFIRST = '0'B;          /* RESET KEYWD INDICATOR  */ 01676000
         NI    KEYFIRST,B'11111110'                                0494 01677000
*                NAMECTR = 0;              /* RESET NAME COUNTER     */ 01678000
         SR    @02,@02                                             0495 01679000
         STH   @02,NAMECTR                                         0495 01680000
*              END;                                                0496 01681000
*          END;                                                    0497 01682000
*END SUBFPROC;                                                     0498 01683000
@EL00014 DS    0H                                                  0498 01684000
@EF00014 DS    0H                                                  0498 01685000
@ER00014 LM    @14,@02,@SA00014                                    0498 01686000
         LM    @04,@05,@SA00014+20                                 0498 01687000
         LM    @08,@12,@SA00014+28                                 0498 01688000
         BR    @14                                                 0498 01689000
*/********************************************************************/ 01690000
*/*                                                                  */ 01691000
*/* SEGMENT NAME -                                                   */ 01692000
*/*      TSTDSN                                                      */ 01693000
*/*                                                                  */ 01694000
*/* FUNCTION -                                                       */ 01695000
*/*      THIS ROUTINE PUTS THE KEY INTO THE TEXT UNIT, AND THE       */ 01696000
*/*      ADDRESS OF THE TEXT UNIT INTO THE ADDRESS LIST, UNLESS      */ 01697000
*/*      THE PARAMETER TRANSLATED WAS A DSNAME IN WHICH THIS HAS     */ 01698000
*/*      ALREADY BEEN DONE.                                          */ 01699000
*/*                                                                  */ 01700000
*/* OPERATION -                                                      */ 01701000
*/*      IF A DSNAME WAS NOT TRANSLATED, DETERMINE IF THE PARAMETER  */ 01702000
*/*      WAS ENTERED. IF SO, PUT THE KEY INTO THE TEXT UNIT FROM     */ 01703000
*/*      THE KEY LIST, AND PUT THE ADDRESS OF THE TEXT UNIT INTO     */ 01704000
*/*      THE ADDRESS LIST. OTHERWISE, PUT 0 INTO THE ADDRESS LIST.   */ 01705000
*/*                                                                  */ 01706000
*/* INPUT -                                                          */ 01707000
*/*      DSNPROC = 1 - PROCESSED DSNAME                              */ 01708000
*/*      PARMOMIT =1 - PARAMETER NOT ENTERED                         */ 01709000
*/*      PTR TO KEYLIST                                              */ 01710000
*/*      PTR TO ADDRESS LIST                                         */ 01711000
*/*      PTR TO TEXT UNIT                                            */ 01712000
*/*                                                                  */ 01713000
*/* OUTPUT -                                                         */ 01714000
*/*      POINTER TO TEXT OR 0 IN ADDRESS LIST                        */ 01715000
*/*      KEY IN TEXT UNIT                                            */ 01716000
*/*                                                                  */ 01717000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01718000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01719000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01720000
*/********************************************************************/ 01721000
*    TSTDSN: PROC;                                                 0499 01722000
TSTDSN   STM   @14,@12,12(@13)                                     0499 01723000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 01724000
         CLI   FAIL,0                                              0500 01725000
         BNE   @RF00500                                            0500 01726000
*          DO;                              /* NO -                  */ 01727000
*            IF DSNPROC = '0'B THEN         /* PROCESSING OTHER THAN */ 01728000
         TM    DSNPROC,B'00001000'                                 0502 01729000
         BNZ   @RF00502                                            0502 01730000
*              DO;                          /* DSNAME -              */ 01731000
*                IF PARMOMIT='1'B THEN      /* IF PARM NOT ENTERED,  */ 01732000
         TM    PARMOMIT,B'00000100'                                0504 01733000
         BNO   @RF00504                                            0504 01734000
*                  DO;                                             0505 01735000
*                    ADDRLIST(I)=0;         /* PUT 0 IN ADDRESS LIST */ 01736000
         LR    @06,I                                               0506 01737000
         SLA   @06,2                                               0506 01738000
         SR    @15,@15                                             0506 01739000
         L     @14,ADDRPTR                                         0506 01740000
         ST    @15,ADDRLIST-4(@06,@14)                             0506 01741000
*                    PARMOMIT = '0'B;       /* TURN OFF INDICATOR    */ 01742000
         NI    PARMOMIT,B'11111011'                                0507 01743000
*                  END;                                            0508 01744000
*                ELSE                       /* IF PARM ENTERED,      */ 01745000
*                  DO;                                             0509 01746000
         B     @RC00504                                            0509 01747000
@RF00504 DS    0H                                                  0510 01748000
*                    KEY = DYNKEY;          /* PUT KEY IN TEXT       */ 01749000
         L     @06,TEXTPTR                                         0510 01750000
         L     @01,B                                               0510 01751000
         MVC   KEY(2,@06),DYNKEY(@01)                              0510 01752000
*                    ADDRLIST(I)=TEXTPTR;   /* PUT ADDRESS INTO LIST */ 01753000
         LR    @15,I                                               0511 01754000
         SLA   @15,2                                               0511 01755000
         L     @01,ADDRPTR                                         0511 01756000
         ST    @06,ADDRLIST-4(@15,@01)                             0511 01757000
*                  END;                                            0512 01758000
*              END;                                                0513 01759000
*            ELSE                                                  0514 01760000
*              DSNPROC = '0'B;             /* TURN OFF DSN INDICATOR */ 01761000
         B     @RC00502                                            0514 01762000
@RF00502 NI    DSNPROC,B'11110111'                                 0514 01763000
*          END;                                                    0515 01764000
*                                                                  0515 01765000
*END TSTDSN;                                                       0516 01766000
@EL00015 DS    0H                                                  0516 01767000
@EF00015 DS    0H                                                  0516 01768000
@ER00015 LM    @14,@12,12(@13)                                     0516 01769000
         BR    @14                                                 0516 01770000
*/********************************************************************/ 01771000
*/*                                                                  */ 01772000
*/* SEGMENT NAME -                                                   */ 01773000
*/*      DSNSNGLE                                                    */ 01774000
*/*                                                                  */ 01775000
*/* FUNCTION -                                                       */ 01776000
*/*      THIS ROUTINE TRANSLATES TO TEXT FORMAT A DATA SET NAME      */ 01777000
*/*      WHICH IS NOT ENTERED IN A LIST.                             */ 01778000
*/*                                                                  */ 01779000
*/* OPERATION -                                                      */ 01780000
*/*      IF THE PARAMETER WAS NOT ENTERED, 0 IS PUT INTO THE         */ 01781000
*/*      ADDRESS LIST. ELSE, SET THE KEY AND INITIALIZE THE NUMBER   */ 01782000
*/*      IN THE TEXT UNIT. PUT THE ADDRESS OF THIS TEXT UNIT INTO    */ 01783000
*/*      THE ADDRESS LIST. IF THE DSNAME IS FULLY QUALIFIED, PUT     */ 01784000
*/*      THE DSNAME LENGTH AND DSNAME INTO THE TEXT UNIT. OTHERWISE  */ 01785000
*/*      INVOKE ROUTINE PREFIX TO PREFIX USERID TO THE DSNAME.       */ 01786000
*/*                                                                  */ 01787000
*/* INPUT -                                                          */ 01788000
*/*      PTR TO DSNAME PDE                                           */ 01789000
*/*      PTR TO ADDRESS LIST                                         */ 01790000
*/*      PTR TO TEXT STORAGE                                         */ 01791000
*/*                                                                  */ 01792000
*/* OUTPUT -                                                         */ 01793000
*/*      PTR TO DSNAME TEXT UNIT                                     */ 01794000
*/*                                                                  */ 01795000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01796000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01797000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01798000
*/********************************************************************/ 01799000
*    DSNSNGLE: PROC;                                               0517 01800000
DSNSNGLE STM   @14,@02,12(@13)                                     0517 01801000
         STM   @04,@12,36(@13)                                     0517 01802000
*        IF FAIL=0 THEN                     /* ERROR FOUND ?         */ 01803000
         CLI   FAIL,0                                              0518 01804000
         BNE   @RF00518                                            0518 01805000
*          DO;                              /* NO -                  */ 01806000
*            IF PARMPRES = '1'B THEN        /* IF DSNAME ENTERED,    */ 01807000
         TM    PARMPRES(CURPDE),B'10000000'                        0520 01808000
         BNO   @RF00520                                            0520 01809000
*              DO;                          /* THEN                  */ 01810000
*                A = ADDR(LEN);             /* SET UP BUFFER PTR     */ 01811000
         L     @06,TEXTPTR                                         0522 01812000
         LA    A,LEN(,@06)                                         0522 01813000
*                KEY = DALDSNAM;            /* PUT KEY IN TEXT       */ 01814000
         MVC   KEY(2,@06),@CH00216                                 0523 01815000
*                NUMBER = 1;                /* SET NUMBER TO 1       */ 01816000
         MVC   NUMBER(2,@06),@CH00081                              0524 01817000
*                ADDRLIST(I) = TEXTPTR;     /* PUT TEXT PTR IN LIST  */ 01818000
         LR    @15,I                                               0525 01819000
         SLA   @15,2                                               0525 01820000
         L     @01,ADDRPTR                                         0525 01821000
         ST    @06,ADDRLIST-4(@15,@01)                             0525 01822000
*                    LSTLEN = PARMLEN;      /* AND DSNAME INTO TEXT  */ 01823000
         LH    @06,PARMLEN(,CURPDE)                                0526 01824000
         STH   @06,LSTLEN(,A)                                      0526 01825000
*                    LSTTEXT(1:PARMLEN)=VALUE(1:PARMLEN);          0527 01826000
         LR    @15,@06                                             0527 01827000
         BCTR  @15,0                                               0527 01828000
         L     @01,PARMPTR(,CURPDE)                                0527 01829000
         EX    @15,@SM00574                                        0527 01830000
*                A = A + 2 + LSTLEN;        /* INCREMENT BUFFER PTR  */ 01831000
         LA    @15,2                                               0528 01832000
         AR    @15,A                                               0528 01833000
         AR    @15,@06                                             0528 01834000
         LR    A,@15                                               0528 01835000
*              END;                                                0529 01836000
*           ELSE                            /* IF DSNAME NOT ENTERED,*/ 01837000
*              ADDRLIST(I) = 0;             /* PUT 0 IN ADDRESS LIST */ 01838000
         B     @RC00520                                            0530 01839000
@RF00520 LR    @06,I                                               0530 01840000
         SLA   @06,2                                               0530 01841000
         SR    @15,@15                                             0530 01842000
         L     @14,ADDRPTR                                         0530 01843000
         ST    @15,ADDRLIST-4(@06,@14)                             0530 01844000
*          END;                                                    0531 01845000
*END DSNSNGLE;                                                     0532 01846000
@EL00016 DS    0H                                                  0532 01847000
@EF00016 DS    0H                                                  0532 01848000
@ER00016 LM    @14,@02,12(@13)                                     0532 01849000
         LM    @04,@12,36(@13)                                     0532 01850000
         BR    @14                                                 0532 01851000
*/********************************************************************/ 01852000
*/*                                                                  */ 01853000
*/* SEGMENT NAME -                                                   */ 01854000
*/*      MBRSNGLE                                                    */ 01855000
*/*                                                                  */ 01856000
*/* FUNCTION -                                                       */ 01857000
*/*      THIS ROUTINE TRANSLATES TO TEXT FORMAT THE MEMBER NAME      */ 01858000
*/*      PORTION OF THE DSNAME WHEN THE DSNAME IS NOT ENTERED IN     */ 01859000
*/*      A LIST.                                                     */ 01860000
*/*                                                                  */ 01861000
*/* OPERATION -                                                      */ 01862000
*/*      IF THE PARAMETER WAS NOT ENTERED, 0 IS PUT INTO THE         */ 01863000
*/*      ADDRESS LIST. ELSE, SET THE KEY AND INITIALIZE THE NUMBER   */ 01864000
*/*      IN THE TEXT UNIT. PUT THE ADDRESS OF THIS TEXT UNIT INTO    */ 01865000
*/*      THE ADDRESS LIST. PUT THE MEMBER NAME LENGTH AND THE        */ 01866000
*/*      MEMEBER NAME INTO THE TEXT UNIT.                            */ 01867000
*/*                                                                  */ 01868000
*/* INPUT -                                                          */ 01869000
*/*      PTR TO DSNAME PDE                                           */ 01870000
*/*      PTR TO ADDRESS LIST                                         */ 01871000
*/*      PTR TO TEXT STORAGE                                         */ 01872000
*/*                                                                  */ 01873000
*/* OUTPUT -                                                         */ 01874000
*/*      PTR TO MEMBER NAME TEXT UNIT                                */ 01875000
*/*                                                                  */ 01876000
*/* NOTE:  THIS ROUTINE REPRESENTS A DRIECT LINE FUNCTION AND CAN    */ 01877000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01878000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01879000
*/*                                                                  */ 01880000
*/********************************************************************/ 01881000
*    MBRSNGLE: PROC;                                               0533 01882000
MBRSNGLE STM   @14,@02,12(@13)                                     0533 01883000
         STM   @04,@06,36(@13)                                     0533 01884000
         STM   @08,@12,52(@13)                                     0533 01885000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 01886000
         CLI   FAIL,0                                              0534 01887000
         BNE   @RF00534                                            0534 01888000
*          DO;                              /* NO -                  */ 01889000
*            I = I+1;                       /* INCREMENT SUBSCRIPT   */ 01890000
         LA    @06,1                                               0536 01891000
         AR    I,@06                                               0536 01892000
*            TEXTPTR = A;                   /* INCREMENT TEXT PTR    */ 01893000
*                                                                  0537 01894000
         ST    A,TEXTPTR                                           0537 01895000
*            IF MBRPRES = '1'B THEN         /* IF MEMBER NAME ENTERED*/ 01896000
         TM    MBRPRES(CURPDE),B'10000000'                         0538 01897000
         BNO   @RF00538                                            0538 01898000
*              DO;                          /* SET UP BUFFER PTR     */ 01899000
*                A = ADDR(LEN);                                    0540 01900000
         L     @15,TEXTPTR                                         0540 01901000
         LA    A,LEN(,@15)                                         0540 01902000
*                ADDRLIST(I)=TEXTPTR;       /* PUT TEXT PTR IN LIST  */ 01903000
         LR    @14,I                                               0541 01904000
         SLA   @14,2                                               0541 01905000
         L     @01,ADDRPTR                                         0541 01906000
         ST    @15,ADDRLIST-4(@14,@01)                             0541 01907000
*                KEY = DALMEMBR;            /* PUT KEY IN TEXT       */ 01908000
         MVC   KEY(2,@15),@CH00218                                 0542 01909000
*                NUMBER = 1;                /* SET NUMBER IN TEXT    */ 01910000
         STH   @06,NUMBER(,@15)                                    0543 01911000
*                LSTLEN = MBRLEN;           /* PUT LENGTH AND MEMBER */ 01912000
         LH    @06,MBRLEN(,CURPDE)                                 0544 01913000
         STH   @06,LSTLEN(,A)                                      0544 01914000
*                LSTTEXT(1:MBRLEN)=MBRBUF(1:MBRLEN); /* IN TEXT      */ 01915000
         LR    @15,@06                                             0545 01916000
         BCTR  @15,0                                               0545 01917000
         L     @01,MBRPTR(,CURPDE)                                 0545 01918000
         EX    @15,@SM00576                                        0545 01919000
*                A = A + 2 + MBRLEN;        /* INCREMENT BUFFER PTR  */ 01920000
         LA    @15,2                                               0546 01921000
         AR    @15,A                                               0546 01922000
         AR    @15,@06                                             0546 01923000
         LR    A,@15                                               0546 01924000
*              END;                                                0547 01925000
*            ELSE                           /* IF MEMBER NOT ENTERED,*/ 01926000
*              ADDRLIST(I) = 0;             /* PUT 0 IN ADDRESS LIST */ 01927000
         B     @RC00538                                            0548 01928000
@RF00538 LR    @06,I                                               0548 01929000
         SLA   @06,2                                               0548 01930000
         SR    @15,@15                                             0548 01931000
         L     @14,ADDRPTR                                         0548 01932000
         ST    @15,ADDRLIST-4(@06,@14)                             0548 01933000
*          END;                                                    0549 01934000
*END MBRSNGLE;                                                     0550 01935000
@EL00017 DS    0H                                                  0550 01936000
@EF00017 DS    0H                                                  0550 01937000
@ER00017 LM    @14,@02,12(@13)                                     0550 01938000
         LM    @04,@06,36(@13)                                     0550 01939000
         LM    @08,@12,52(@13)                                     0550 01940000
         BR    @14                                                 0550 01941000
*/********************************************************************/ 01942000
*/*                                                                  */ 01943000
*/* SEGMENT NAME -                                                   */ 01944000
*/*      PSWSNGLE                                                    */ 01945000
*/*                                                                  */ 01946000
*/* FUNCTION -                                                       */ 01947000
*/*      THIS ROUTINE TRANSLATES TO TEXT FORMAT THE PASSWORD PORTION */ 01948000
*/*      OF A DSNAME PARAMETER WHEN THE DSNAME IS NOT ENTERED IN A   */ 01949000
*/*      LIST.                                                       */ 01950000
*/*                                                                  */ 01951000
*/* OPERATION -                                                      */ 01952000
*/*      IF THE PARAMETER WAS NOT ENTERED, 0 IS PUT INTO THE         */ 01953000
*/*      ADDRESS LIST. ELSE, SET THE KEY AND INITIALIZE THE NUMBER   */ 01954000
*/*      IN THE TEXT UNIT. PUT THE PASSWORD LENGTH AND PASSWORD      */ 01955000
*/*      INTO THE TEXT UNIT. PUT THE ADDRESS OF THIS TEXT UNIT       */ 01956000
*/*      INTO THE ADDRESS LIST.                                      */ 01957000
*/*                                                                  */ 01958000
*/* INPUT -                                                          */ 01959000
*/*      PTR TO DSNAME PDE                                           */ 01960000
*/*      PTR TO ADDRESS LIST                                         */ 01961000
*/*      PTR TO TEXT STORAGE                                         */ 01962000
*/*                                                                  */ 01963000
*/* OUTPUT -                                                         */ 01964000
*/*      PTR TO PASSWORD TEXT UNIT                                   */ 01965000
*/*                                                                  */ 01966000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 01967000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 01968000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 01969000
*/********************************************************************/ 01970000
*    PSWSNGLE: PROC;                                               0551 01971000
PSWSNGLE STM   @14,@02,12(@13)                                     0551 01972000
         STM   @04,@06,36(@13)                                     0551 01973000
         STM   @08,@12,52(@13)                                     0551 01974000
*        IF FAIL=0 THEN                     /* ERROR FOUND ?         */ 01975000
         CLI   FAIL,0                                              0552 01976000
         BNE   @RF00552                                            0552 01977000
*          DO;                              /* NO -                  */ 01978000
*            I = I+1;                       /* INCREMENT SUBSCRIPT   */ 01979000
         LA    @06,1                                               0554 01980000
         AR    I,@06                                               0554 01981000
*            TEXTPTR = A;                   /* INCREMENT TEXT PTR    */ 01982000
*                                                                  0555 01983000
         ST    A,TEXTPTR                                           0555 01984000
*            IF PASSPRES = '1'B THEN        /* IF PASSWORD ENTERED,  */ 01985000
         TM    PASSPRES(CURPDE),B'10000000'                        0556 01986000
         BNO   @RF00556                                            0556 01987000
*              DO;                          /* THEN                  */ 01988000
*                A = ADDR(LEN);             /* SET BUFFER PTR        */ 01989000
         L     @15,TEXTPTR                                         0558 01990000
         LA    A,LEN(,@15)                                         0558 01991000
*                ADDRLIST(I)=TEXTPTR;       /* PUT TEXT PTR IN LIST  */ 01992000
         LR    @14,I                                               0559 01993000
         SLA   @14,2                                               0559 01994000
         L     @01,ADDRPTR                                         0559 01995000
         ST    @15,ADDRLIST-4(@14,@01)                             0559 01996000
*                KEY = DALPASSW;            /* PUT KEY IN TEXT       */ 01997000
         MVC   KEY(2,@15),@CH00372                                 0560 01998000
*                NUMBER = 1;                /* PUT NUMBER IN TEXT    */ 01999000
         STH   @06,NUMBER(,@15)                                    0561 02000000
*                LSTLEN = PASSLEN;          /* PUT LENGTH AND PASSWRD*/ 02001000
         LH    @06,PASSLEN(,CURPDE)                                0562 02002000
         STH   @06,LSTLEN(,A)                                      0562 02003000
*                LSTTEXT(1:PASSLEN)=PASSBUF(1:PASSLEN); /* IN TEXT */   02004000
         LR    @15,@06                                             0563 02005000
         BCTR  @15,0                                               0563 02006000
         L     @01,PASSPTR(,CURPDE)                                0563 02007000
         EX    @15,@SM00578                                        0563 02008000
*                A = A + 2 + PASSLEN;       /* INCREMENT BUFFER PTR  */ 02009000
         LA    @15,2                                               0564 02010000
         AR    @15,A                                               0564 02011000
         AR    @15,@06                                             0564 02012000
         LR    A,@15                                               0564 02013000
*              END;                                                0565 02014000
*            ELSE                           /* IF PSWORD NOT ENTERED,*/ 02015000
*              ADDRLIST(I) = 0;             /* PUT 0 IN ADDR LIST    */ 02016000
         B     @RC00556                                            0566 02017000
@RF00556 LR    @06,I                                               0566 02018000
         SLA   @06,2                                               0566 02019000
         SR    @02,@02                                             0566 02020000
         L     @01,ADDRPTR                                         0566 02021000
         ST    @02,ADDRLIST-4(@06,@01)                             0566 02022000
*          END;                                                    0567 02023000
*                                                                  0567 02024000
*END PSWSNGLE;                                                     0568 02025000
@EL00018 DS    0H                                                  0568 02026000
@EF00018 DS    0H                                                  0568 02027000
@ER00018 LM    @14,@02,12(@13)                                     0568 02028000
         LM    @04,@06,36(@13)                                     0568 02029000
         LM    @08,@12,52(@13)                                     0568 02030000
         BR    @14                                                 0568 02031000
*/********************************************************************/ 02032000
*/*                                                                  */ 02033000
*/* SEGMENT NAME -                                                   */ 02034000
*/*      DSNLIST                                                     */ 02035000
*/*                                                                  */ 02036000
*/* FUNCTION -                                                       */ 02037000
*/*      THIS ROUTINE TRANSLATES TO TEXT FORMAT A LIST OF DATA       */ 02038000
*/*      SET NAMES.                                                  */ 02039000
*/*                                                                  */ 02040000
*/* OPERATION -                                                      */ 02041000
*/*      IF NEITHER DSNAME, MEMBER NAME OR PASSWORD ARE ENTERED      */ 02042000
*/*      THEN AN INDICATOR IS SET TO SHOW THE PARAMETER WAS          */ 02043000
*/*      OMITTED. OTHERWISE, ROUTINES LISTDSN, LISTMBR AND           */ 02044000
*/*      LISTPSW ARE INVOKED.                                        */ 02045000
*/*                                                                  */ 02046000
*/* INPUT -                                                          */ 02047000
*/*      PTR TO DSNAME PDE                                           */ 02048000
*/*      PTR TO ADDRESS LIST                                         */ 02049000
*/*      PTR TO TEXT STORAGE                                         */ 02050000
*/*                                                                  */ 02051000
*/* OUTPUT -                                                         */ 02052000
*/*      PTRS TO TEXT UNITS FOR DSNAME, MEMBER NAME, AND PASSWORD    */ 02053000
*/*      PARMOMIT = 1 - PARAMETER NOT ENTERED                        */ 02054000
*/*                                                                  */ 02055000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND        */ 02056000
*/*        CAN BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN      */ 02057000
*/*        THE INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.  */ 02058000
*/********************************************************************/ 02059000
*    DSNLIST: PROC;                                                0569 02060000
DSNLIST  STM   @14,@02,@SA00019                                    0569 02061000
         STM   @04,@06,@SA00019+20                                 0569 02062000
         STM   @08,@12,@SA00019+32                                 0569 02063000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 02064000
         CLI   FAIL,0                                              0570 02065000
         BNE   @RF00570                                            0570 02066000
*          DO;                              /* NO -                  */ 02067000
*            IF PARMPRES ^= '1'B THEN       /* IF DSNAME,            */ 02068000
         TM    PARMPRES(CURPDE),B'10000000'                        0572 02069000
         BO    @RF00572                                            0572 02070000
*              DO;                                                 0573 02071000
*                IF MBRPRES ^= '1'B THEN    /* MEMBER NAME, OR       */ 02072000
         TM    MBRPRES(CURPDE),B'10000000'                         0574 02073000
         BO    @RF00574                                            0574 02074000
*                  DO;                                             0575 02075000
*                    IF PASSPRES ^= '1'B THEN/* PASSWORD NOT ENTERED,*/ 02076000
         TM    PASSPRES(CURPDE),B'10000000'                        0576 02077000
         BO    @RF00576                                            0576 02078000
*                      PARMOMIT = '1'B;     /* INDICATE PARM OMITTED */ 02079000
         OI    PARMOMIT,B'00000100'                                0577 02080000
*                  END;                                            0578 02081000
*              END;                                                0579 02082000
*            ELSE                           /* IF PARAMETER WAS      */ 02083000
*              DO;                          /* ENTERED,              */ 02084000
         B     @RC00572                                            0580 02085000
@RF00572 DS    0H                                                  0581 02086000
*                CALL LISTDSN;              /* GO PROCESS DSNAMES    */ 02087000
         BAL   @14,LISTDSN                                         0581 02088000
*                CALL LISTMBR;              /* PROCESS MEMBER NAMES  */ 02089000
         BAL   @14,LISTMBR                                         0582 02090000
*                CALL LISTPSW;              /* PROCESS PASSWORDS     */ 02091000
         BAL   @14,LISTPSW                                         0583 02092000
*              END;                                                0584 02093000
*          END;                                                    0585 02094000
*                                                                  0585 02095000
*END DSNLIST;                                                      0586 02096000
@EL00019 DS    0H                                                  0586 02097000
@EF00019 DS    0H                                                  0586 02098000
@ER00019 LM    @14,@02,@SA00019                                    0586 02099000
         LM    @04,@06,@SA00019+20                                 0586 02100000
         LM    @08,@12,@SA00019+32                                 0586 02101000
         BR    @14                                                 0586 02102000
*/********************************************************************/ 02103000
*/*                                                                  */ 02104000
*/* SEGMENT NAME -                                                   */ 02105000
*/*      LISTDSN                                                     */ 02106000
*/*                                                                  */ 02107000
*/* FUNCTION -                                                       */ 02108000
*/*      THIS ROUTINE TRANSLATES TO TEXT FORMAT THE DSNAME PARAMETER */ 02109000
*/*      WHEN IT HAS BEEN ENTERED IN A LIST.                         */ 02110000
*/*                                                                  */ 02111000
*/* OPERATION -                                                      */ 02112000
*/*      THE FIRST PDE IN THE LIST IS SAVED. THE KEY IS PUT INTO THE */ 02113000
*/*      TEXT AND THE NUMBER IN THE TEXT IS INITIALIZED TO 1. IF THE */ 02114000
*/*      DSNAME IS FULLY QUALIFIED, THE DSNAME LENGTH AND DSNAME ARE */ 02115000
*/*      PUT INTO THE TEXT. OTHERWISE, THE ROUTINE PREFIX IS INVOKED */ 02116000
*/*      TO PREFIX THE USERID TO THE DSNAME. THE CHAIN POINTER IS    */ 02117000
*/*      EXAMINED TO DETERMINE IF THIS IS THE LAST ELEMENT IN THE    */ 02118000
*/*      LIST. IF SO, PUT THE ADDRESS OF THE TEXT INTO THE ADDRESS   */ 02119000
*/*      LIST AND RETURN TO CALLER. ELSE, POINT TO THE NEXT PDE IN   */ 02120000
*/*      THE LIST AND INCREMENT THE NUMBER IN THE TEXT BY 1. IF THE  */ 02121000
*/*      PARAMETER IS NOT FULLY QUALIFIED, INVOKE ROUTINE PREFIX TO  */ 02122000
*/*      PREFIX THE USERID TO THE DSNAME. IF THE PARAMETER IS FULLY  */ 02123000
*/*      QUALIFIED, PUT THE LENGTH INTO THE TEXT. IF THE LENGTH IS   */ 02124000
*/*      NOT 0, PUT THE DSNAME INTO THE TEXT.                        */ 02125000
*/*      REPEAT THE ABOVE PROCESS UNTIL THE CHAIN POINTER INDICATES  */ 02126000
*/*      THE END OF THE LIST HAS BEEN REACHED.                       */ 02127000
*/*                                                                  */ 02128000
*/* INPUT -                                                          */ 02129000
*/*      PTR TO DSNAME PDE                                           */ 02130000
*/*      PTR TO ADDRESS LIST                                         */ 02131000
*/*      PTR TO TEXT STORAGE                                         */ 02132000
*/*                                                                  */ 02133000
*/* OUTPUT -                                                         */ 02134000
*/*      PTR TO TEXT BUILT FOR DSNAME LIST                           */ 02135000
*/*                                                                  */ 02136000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 02137000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 02138000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 02139000
*/********************************************************************/ 02140000
*    LISTDSN: PROC;                                                0587 02141000
LISTDSN  STM   @14,@02,12(@13)                                     0587 02142000
         STM   @04,@06,36(@13)                                     0587 02143000
         STM   @08,@12,52(@13)                                     0587 02144000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 02145000
         CLI   FAIL,0                                              0588 02146000
         BNE   @RF00588                                            0588 02147000
*          DO;                              /* NO -                  */ 02148000
*            FIRSTPDE = CURPDE;             /* SAVE FIRST PDE IN LIST*/ 02149000
         ST    CURPDE,FIRSTPDE                                     0590 02150000
*            A = ADDR(LEN);                 /* SET PTR TO LIST TEST  */ 02151000
         L     @06,TEXTPTR                                         0591 02152000
         LA    A,LEN(,@06)                                         0591 02153000
*            KEY = DALDSNAM;                /* SET KEY               */ 02154000
         MVC   KEY(2,@06),@CH00216                                 0592 02155000
*            NUMBER = 1;                    /* INITIALIZE NUMBER TO 1*/ 02156000
         MVC   NUMBER(2,@06),@CH00081                              0593 02157000
*                LSTLEN = PARMLEN;          /* PUT LENGTH IN TEXT    */ 02158000
         LH    @06,PARMLEN(,CURPDE)                                0594 02159000
         STH   @06,LSTLEN(,A)                                      0594 02160000
*                IF LSTLEN ^= 0 THEN        /* IF LENGTH NO 0, PUT   */ 02161000
         LTR   @06,@06                                             0595 02162000
         BZ    @RF00595                                            0595 02163000
*                  LSTTEXT(1:PARMLEN)=VALUE(1:PARMLEN); /*DSN IN TEXT*/ 02164000
         BCTR  @06,0                                               0596 02165000
         L     @01,PARMPTR(,CURPDE)                                0596 02166000
         EX    @06,@SM00574                                        0596 02167000
*            A = A + 2 + LSTLEN;            /* INCREMENT TEXT PTR    */ 02168000
@RF00595 LA    @06,2                                               0597 02169000
         AR    @06,A                                               0597 02170000
         AH    @06,LSTLEN(,A)                                      0597 02171000
         LR    A,@06                                               0597 02172000
*            IF FAIL=0 THEN                 /* ERROR FOUND ?         */ 02173000
         CLI   FAIL,0                                              0598 02174000
         BNE   @RF00598                                            0598 02175000
*              DO;                          /* NO -                  */ 02176000
*                DO WHILE (DSNNEXT ^= PDECMPRE);                   0600 02177000
         B     @DE00600                                            0600 02178000
@DL00600 DS    0H                                                  0601 02179000
*                  CURPDE = DSNNEXT;        /* GET NEXT DSNAME PDE   */ 02180000
         L     CURPDE,DSNNEXT(,CURPDE)                             0601 02181000
*                  NUMBER = NUMBER + 1;                            0602 02182000
         L     @06,TEXTPTR                                         0602 02183000
         LA    @15,1                                               0602 02184000
         AH    @15,NUMBER(,@06)                                    0602 02185000
         STH   @15,NUMBER(,@06)                                    0602 02186000
*                      LSTLEN = PARMLEN;    /* PUT LENGTH IN TEXT    */ 02187000
         LH    @06,PARMLEN(,CURPDE)                                0603 02188000
         STH   @06,LSTLEN(,A)                                      0603 02189000
*                      IF LSTLEN ^= 0 THEN  /* IF LENGTH NOT 0, PUT  */ 02190000
         LTR   @06,@06                                             0604 02191000
         BZ    @RF00604                                            0604 02192000
*                        LSTTEXT (1:PARMLEN)=VALUE(1:PARMLEN);     0605 02193000
         BCTR  @06,0                                               0605 02194000
         L     @01,PARMPTR(,CURPDE)                                0605 02195000
         EX    @06,@SM00574                                        0605 02196000
*                      A = A + 2 + LSTLEN;  /* INCREMENT TEXT PTR    */ 02197000
@RF00604 LA    @06,2                                               0606 02198000
         AR    @06,A                                               0606 02199000
         AH    @06,LSTLEN(,A)                                      0606 02200000
         LR    A,@06                                               0606 02201000
*                END;                                              0607 02202000
@DE00600 CLC   DSNNEXT(4,CURPDE),PDECMPRE                          0607 02203000
         BNE   @DL00600                                            0607 02204000
*                  IF FAIL = 0 THEN         /* ERROR FOUND ?         */ 02205000
         CLI   FAIL,0                                              0608 02206000
         BNE   @RF00608                                            0608 02207000
*                    DO;                    /* NO -                  */ 02208000
*                      ADDRLIST(I) = TEXTPTR; /* PTR TO TEXT IN LIST */ 02209000
         LR    @06,I                                               0610 02210000
         SLA   @06,2                                               0610 02211000
         L     @02,TEXTPTR                                         0610 02212000
         L     @01,ADDRPTR                                         0610 02213000
         ST    @02,ADDRLIST-4(@06,@01)                             0610 02214000
*                      I = I+1;             /* INCREMENT SUBSCRIPT   */ 02215000
         AH    I,@CH00081                                          0611 02216000
*                      TEXTPTR = A;         /* INCREMENT TEXT PTR    */ 02217000
         ST    A,TEXTPTR                                           0612 02218000
*                    END;                                          0613 02219000
*              END;                                                0614 02220000
*          END;                                                    0615 02221000
*END LISTDSN;                                                      0616 02222000
@EL00020 DS    0H                                                  0616 02223000
@EF00020 DS    0H                                                  0616 02224000
@ER00020 LM    @14,@02,12(@13)                                     0616 02225000
         LM    @04,@06,36(@13)                                     0616 02226000
         LM    @08,@12,52(@13)                                     0616 02227000
         BR    @14                                                 0616 02228000
*/********************************************************************/ 02229000
*/*                                                                  */ 02230000
*/* SEGMENT NAME -                                                   */ 02231000
*/*      LISTMBR                                                     */ 02232000
*/*                                                                  */ 02233000
*/* FUNCTION -                                                       */ 02234000
*/*      THIS ROUTINE TRANSLATES TO TEXT FORMAT THE MEMBER NAME      */ 02235000
*/*      PORTION OF A DSNAME PARAMETER WHEN THE DSNAME HAS BEEN      */ 02236000
*/*      ENTERED IN A LIST.                                          */ 02237000
*/*                                                                  */ 02238000
*/* OPERATION -                                                      */ 02239000
*/*      THE PDE POINTER IS SET TO THE FIRST PDE IN THE LIST. THE    */ 02240000
*/*      KEY IS PUT INTO THE TEXT AND THE NUMBER IN THE TEXT IS      */ 02241000
*/*      INITIALIZED TO 1. THE MEMBER NAME LENGTH IS PUT INTO THE    */ 02242000
*/*      TEXT. IF THE LENGTH IS NOT 0, PUT THE MEMBER NAME INTO THE  */ 02243000
*/*      TEXT. EXAMINE THE CHAIN POINTER TO DETERMINE IF THIS IS     */ 02244000
*/*      THE LAST ELEMENT IN THE LIST. IF SO, PUT THE ADDRESS OF THE */ 02245000
*/*      TEXT INTO THE ADDRESS LIST. ELSE, POINT TO THE NEXT PDE IN  */ 02246000
*/*      THE LIST AND INCREMENT THE NUMBER IN THE TEXT BY 1. THE     */ 02247000
*/*      MEMBER NAME LENGTH IS PUT INTO THE TEXT. IF THE LENGTH IS   */ 02248000
*/*      NOT 0, PUT THE MEMBER NAME INTO THE TEXT. REPEAT THE ABOVE  */ 02249000
*/*      PROCESS UNTIL THE CHAIN POINTER INDICATES THE END OF THE    */ 02250000
*/*      LIST HAS BEEN REACHED.                                      */ 02251000
*/*                                                                  */ 02252000
*/* INPUT -                                                          */ 02253000
*/*      PTR TO LAST DSNAME PDE IN LIST                              */ 02254000
*/*      PTR TO ADDRESS LIST                                         */ 02255000
*/*      PTR TO TEXT STORAGE                                         */ 02256000
*/*                                                                  */ 02257000
*/* OUTPUT -                                                         */ 02258000
*/*      PTR TO TEXT BUILT FOR MEMBER NAME LIST                      */ 02259000
*/*                                                                  */ 02260000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 02261000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 02262000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 02263000
*/********************************************************************/ 02264000
*    LISTMBR: PROC;                                                0617 02265000
LISTMBR  STM   @14,@02,12(@13)                                     0617 02266000
         STM   @04,@06,36(@13)                                     0617 02267000
         STM   @08,@12,52(@13)                                     0617 02268000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 02269000
         CLI   FAIL,0                                              0618 02270000
         BNE   @RF00618                                            0618 02271000
*          DO;                              /* NO -                  */ 02272000
*            CURPDE = FIRSTPDE;             /* GET FIRST PDE IN LIST */ 02273000
         L     CURPDE,FIRSTPDE                                     0620 02274000
*            A = ADDR(LEN);                 /* SET UP TEXT PTR       */ 02275000
         L     @06,TEXTPTR                                         0621 02276000
         LA    A,LEN(,@06)                                         0621 02277000
*            KEY = DALMEMBR;                /* SET KEY               */ 02278000
         MVC   KEY(2,@06),@CH00218                                 0622 02279000
*            NUMBER = 1;                    /* INITIALIZE NUMBER TO 1*/ 02280000
         MVC   NUMBER(2,@06),@CH00081                              0623 02281000
*            LSTLEN = MBRLEN;               /* PUT LENGTH IN TEXT    */ 02282000
         LH    @06,MBRLEN(,CURPDE)                                 0624 02283000
         STH   @06,LSTLEN(,A)                                      0624 02284000
*            IF LSTLEN ^= 0 THEN            /* IF LENGTH NOT 0, PUT  */ 02285000
         LTR   @06,@06                                             0625 02286000
         BZ    @RF00625                                            0625 02287000
*              LSTTEXT(1:MBRLEN)=MBRBUF(1:MBRLEN); /* MBR IN TEXT    */ 02288000
         BCTR  @06,0                                               0626 02289000
         L     @01,MBRPTR(,CURPDE)                                 0626 02290000
         EX    @06,@SM00576                                        0626 02291000
*            A = A + 2 + MBRLEN;            /* INCRMENT TEXT PTR     */ 02292000
*                                                                  0627 02293000
@RF00625 LA    @06,2                                               0627 02294000
         AR    @06,A                                               0627 02295000
         AH    @06,MBRLEN(,CURPDE)                                 0627 02296000
         LR    A,@06                                               0627 02297000
*            DO WHILE (DSNNEXT ^= PDECMPRE);                       0628 02298000
         B     @DE00628                                            0628 02299000
@DL00628 DS    0H                                                  0629 02300000
*              NUMBER = NUMBER + 1;         /* INCREMENT TEXT NUMBER */ 02301000
         L     @06,TEXTPTR                                         0629 02302000
         LA    @15,1                                               0629 02303000
         AH    @15,NUMBER(,@06)                                    0629 02304000
         STH   @15,NUMBER(,@06)                                    0629 02305000
*              CURPDE = DSNNEXT;            /* POINT TO NEXT PDE     */ 02306000
         L     CURPDE,DSNNEXT(,CURPDE)                             0630 02307000
*              LSTLEN = MBRLEN;             /* PUT LENGTH IN TEXT    */ 02308000
         LH    @06,MBRLEN(,CURPDE)                                 0631 02309000
         STH   @06,LSTLEN(,A)                                      0631 02310000
*              IF LSTLEN ^= 0 THEN          /* IF LENGTH NOT 0, PUT  */ 02311000
         LTR   @06,@06                                             0632 02312000
         BZ    @RF00632                                            0632 02313000
*                LSTTEXT(1:MBRLEN) = MBRBUF(1:MBRLEN); /* MBR IN TEXT*/ 02314000
         BCTR  @06,0                                               0633 02315000
         L     @01,MBRPTR(,CURPDE)                                 0633 02316000
         EX    @06,@SM00576                                        0633 02317000
*              A = A + 2 + MBRLEN;          /* INCREMENT TEXT PTR    */ 02318000
@RF00632 LA    @06,2                                               0634 02319000
         AR    @06,A                                               0634 02320000
         AH    @06,MBRLEN(,CURPDE)                                 0634 02321000
         LR    A,@06                                               0634 02322000
*            END;                           /* LOOP THROUGH DO-WHILE */ 02323000
*                                                                  0635 02324000
@DE00628 CLC   DSNNEXT(4,CURPDE),PDECMPRE                          0635 02325000
         BNE   @DL00628                                            0635 02326000
*            ADDRLIST(I) = TEXTPTR;         /* PTR TO TEXT IN LIST   */ 02327000
         LR    @06,I                                               0636 02328000
         SLA   @06,2                                               0636 02329000
         L     @02,TEXTPTR                                         0636 02330000
         L     @01,ADDRPTR                                         0636 02331000
         ST    @02,ADDRLIST-4(@06,@01)                             0636 02332000
*            I = I+1;                       /* INCREMENT SUBSCRIPT   */ 02333000
         AH    I,@CH00081                                          0637 02334000
*            TEXTPTR = A;                   /* INCREMENT TEXT PTR    */ 02335000
*                                                                  0638 02336000
         ST    A,TEXTPTR                                           0638 02337000
*          END;                                                    0639 02338000
*                                                                  0639 02339000
*END LISTMBR;                                                      0640 02340000
@EL00021 DS    0H                                                  0640 02341000
@EF00021 DS    0H                                                  0640 02342000
@ER00021 LM    @14,@02,12(@13)                                     0640 02343000
         LM    @04,@06,36(@13)                                     0640 02344000
         LM    @08,@12,52(@13)                                     0640 02345000
         BR    @14                                                 0640 02346000
*/********************************************************************/ 02347000
*/*                                                                  */ 02348000
*/* SEGMENT NAME -                                                   */ 02349000
*/*      LISTPSW                                                     */ 02350000
*/*                                                                  */ 02351000
*/* FUNCTION -                                                       */ 02352000
*/*      THIS ROUTINE TRANSLATS TO TEXT FORMAT THE PASSWORD PORTION */  02353000
*/*      OF A DSNAME PARAMETER WHEN THE DSNAME HAS BEEN ENTERED IN   */ 02354000
*/*      A LIST.                                                     */ 02355000
*/*                                                                  */ 02356000
*/* OPERATION -                                                      */ 02357000
*/*      THE PDE POINTER IS SET TO THE FIRST PDE IN THE LIST. THE    */ 02358000
*/*      KEY IS PUT INTO THE TEXT AND THE NUMBER IN THE TEXT IS      */ 02359000
*/*      INITIALIZED TO 1. THE PASSWORD LENGTH IS PUT INTO THE TEXT. */ 02360000
*/*      IF THE LENGTH IS NOT 0, PUT THE PASSWORD INTO THE TEXT.     */ 02361000
*/*      EXAMINE THE CHAIN POINTER TO DETERMINE IF THIS IS LAST      */ 02362000
*/*      ELEMENT IN THE LIST. IF SO, PUT THE ADDRESS OF THE TEXT     */ 02363000
*/*      IN THE ADDRESS LIST. ELSE, POINT TO THE NEXT PDE IN THE     */ 02364000
*/*      LIST AND INCREMENT THE NUMBER IN THE TEXT BY 1. THE         */ 02365000
*/*      PASSWORD LENGTH IS PUT INTO THE TEXT. IF THE LENGTH IS NOT  */ 02366000
*/*      0, PUT THE PASSWORD INTO THE TEXT. REPEAT THE ABOVE         */ 02367000
*/*      PROCESS UNTIL THE CHAIN POINTER INDICATES THE END OF THE    */ 02368000
*/*      LIST HAS BEEN REACHED.                                      */ 02369000
*/*                                                                  */ 02370000
*/* INPUT -                                                          */ 02371000
*/*      PTR TO LAST DSNAME PDE IN LIST                              */ 02372000
*/*      PTR TO ADDRESS LIST                                         */ 02373000
*/*      PTR TO TEXT STORAGE                                         */ 02374000
*/*                                                                  */ 02375000
*/* OUTPUT -                                                         */ 02376000
*/*      PTR TO TEXT BUILT FOR PASSWORD LIST                         */ 02377000
*/*                                                                  */ 02378000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 02379000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 02380000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 02381000
*/********************************************************************/ 02382000
*    LISTPSW: PROC;                                                0641 02383000
LISTPSW  STM   @14,@02,12(@13)                                     0641 02384000
         STM   @04,@12,36(@13)                                     0641 02385000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 02386000
         CLI   FAIL,0                                              0642 02387000
         BNE   @RF00642                                            0642 02388000
*          DO;                              /* NO -                  */ 02389000
*            CURPDE = FIRSTPDE;             /* GET FIRST PDE IN LIST */ 02390000
         L     CURPDE,FIRSTPDE                                     0644 02391000
*            A = ADDR(LEN);                 /* SET UP TEXT PTR       */ 02392000
         L     @06,TEXTPTR                                         0645 02393000
         LA    A,LEN(,@06)                                         0645 02394000
*            KEY = DALPASSW;                /* SET KEY               */ 02395000
         MVC   KEY(2,@06),@CH00372                                 0646 02396000
*            NUMBER = 1;                    /* INITIALIZE NUMBER TO 1*/ 02397000
         MVC   NUMBER(2,@06),@CH00081                              0647 02398000
*            LSTLEN = PASSLEN;              /* PUT LENGTH IN TEXT    */ 02399000
         LH    @06,PASSLEN(,CURPDE)                                0648 02400000
         STH   @06,LSTLEN(,A)                                      0648 02401000
*            IF LSTLEN ^= 0 THEN            /* IF LENGTH NOT 0,PUT  */  02402000
         LTR   @06,@06                                             0649 02403000
         BZ    @RF00649                                            0649 02404000
*              LSTTEXT(1:PASSLEN) = PASSBUF(1:PASSLEN);/*PSWD IN TEXT*/ 02405000
         BCTR  @06,0                                               0650 02406000
         L     @01,PASSPTR(,CURPDE)                                0650 02407000
         EX    @06,@SM00578                                        0650 02408000
*            A = A + 2 + PASSLEN;           /* INCREMENT TEXT PTR    */ 02409000
*                                                                  0651 02410000
@RF00649 LA    @06,2                                               0651 02411000
         AR    @06,A                                               0651 02412000
         AH    @06,PASSLEN(,CURPDE)                                0651 02413000
         LR    A,@06                                               0651 02414000
*            DO WHILE (DSNNEXT ^= PDECMPRE);                       0652 02415000
         B     @DE00652                                            0652 02416000
@DL00652 DS    0H                                                  0653 02417000
*              NUMBER = NUMBER + 1;         /* INCREMENT TEXT NUMBER */ 02418000
         L     @06,TEXTPTR                                         0653 02419000
         LA    @15,1                                               0653 02420000
         AH    @15,NUMBER(,@06)                                    0653 02421000
         STH   @15,NUMBER(,@06)                                    0653 02422000
*              CURPDE = DSNNEXT;            /* GET NEXT PDE IN LIST  */ 02423000
         L     CURPDE,DSNNEXT(,CURPDE)                             0654 02424000
*              LSTLEN = PASSLEN;            /* PUT LENGTH IN TEXT    */ 02425000
         LH    @06,PASSLEN(,CURPDE)                                0655 02426000
         STH   @06,LSTLEN(,A)                                      0655 02427000
*              IF LSTLEN ^= 0 THEN          /* IF LENGTH NOT 0,PUT   */ 02428000
         LTR   @06,@06                                             0656 02429000
         BZ    @RF00656                                            0656 02430000
*                LSTTEXT(1:PASSLEN) = PASSBUF(1:PASSLEN);/* PSWD IN  */ 02431000
         BCTR  @06,0                                               0657 02432000
         L     @01,PASSPTR(,CURPDE)                                0657 02433000
         EX    @06,@SM00578                                        0657 02434000
*              A = A + 2 + PASSLEN;         /* INCREMENT TEXT PTR    */ 02435000
@RF00656 LA    @06,2                                               0658 02436000
         AR    @06,A                                               0658 02437000
         AH    @06,PASSLEN(,CURPDE)                                0658 02438000
         LR    A,@06                                               0658 02439000
*            END;                           /* LOOP THROUGH DO-WHILE */ 02440000
*                                                                  0659 02441000
@DE00652 CLC   DSNNEXT(4,CURPDE),PDECMPRE                          0659 02442000
         BNE   @DL00652                                            0659 02443000
*            ADDRLIST(I) = TEXTPTR;         /* TEXT PTR IN LIST      */ 02444000
         LR    @06,I                                               0660 02445000
         SLA   @06,2                                               0660 02446000
         L     @02,TEXTPTR                                         0660 02447000
         L     @01,ADDRPTR                                         0660 02448000
         ST    @02,ADDRLIST-4(@06,@01)                             0660 02449000
*            TEXTPTR = A;                   /* INCREMENT TEXT PTR    */ 02450000
*                                                                  0661 02451000
         ST    A,TEXTPTR                                           0661 02452000
*          END;                                                    0662 02453000
*                                                                  0662 02454000
*END LISTPSW;                                                      0663 02455000
@EL00022 DS    0H                                                  0663 02456000
@EF00022 DS    0H                                                  0663 02457000
@ER00022 LM    @14,@02,12(@13)                                     0663 02458000
         LM    @04,@12,36(@13)                                     0663 02459000
         BR    @14                                                 0663 02460000
*/********************************************************************/ 02461000
*/*                                                                  */ 02462000
*/* SEGMENT NAME -                                                   */ 02463000
*/*      LISTTRNS                                                    */ 02464000
*/*                                                                  */ 02465000
*/* FUNCTION -                                                       */ 02466000
*/*      THIS ROUTINE TRANSLATS TO TEXT FORMAT A LIST OF IDENT OR    */ 02467000
*/*      POSIT PARAMETERS (OTHER THAN DSNAME).                       */ 02468000
*/*                                                                  */ 02469000
*/* OPERATION -                                                      */ 02470000
*/*      IF THIS IS LAST ELEMENT IN LIST, RETURN TO CALLER. ELSE,    */ 02471000
*/*      POINT TO NEXT PDE IN LIST AND INCREMENT THE NUMBER IN THE   */ 02472000
*/*      TEXT BY 1. IF THE PARAMETER IS NUMERIC, INVOKE ROUTINES     */ 02473000
*/*      CONVRT AND NUMLENGH TO CONVERT THE VALUE TO BINARY. THE     */ 02474000
*/*      LENGTH AND THE PARAMETER ARE PUT INTO THE TEXT. REPEAT THE  */ 02475000
*/*      ABOVE PROCESS UNTIL THE END OF THE LIST IS REACHED.         */ 02476000
*/*                                                                  */ 02477000
*/* INPUT -                                                          */ 02478000
*/*      PTR TO POSIT OR IDENT PCE                                   */ 02479000
*/*      PTR TO PDL                                                  */ 02480000
*/*      PTR TO TEXT STORAGE                                         */ 02481000
*/*                                                                  */ 02482000
*/* OUTPUT -                                                         */ 02483000
*/*      PTR TO TEXT FOR POSIT OR IDENT PARAMETER LIST.              */ 02484000
*/*                                                                  */ 02485000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 02486000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 02487000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 02488000
*/********************************************************************/ 02489000
*    LISTTRNS: PROC;                                               0664 02490000
LISTTRNS STM   @14,@02,@SA00023                                    0664 02491000
         STM   @04,@12,@SA00023+20                                 0664 02492000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 02493000
         CLI   FAIL,0                                              0665 02494000
         BNE   @RF00665                                            0665 02495000
*          DO;                              /* NO -                  */ 02496000
*            DO WHILE (NEXTPARM^= PDECMPRE);/* DO TO END OF LIST:    */ 02497000
         B     @DE00667                                            0667 02498000
@DL00667 DS    0H                                                  0668 02499000
*              NUMBER = NUMBER + 1;         /* INCREMENT TEXT NUMBER */ 02500000
         L     @07,TEXTPTR                                         0668 02501000
         LA    @15,1                                               0668 02502000
         AH    @15,NUMBER(,@07)                                    0668 02503000
         STH   @15,NUMBER(,@07)                                    0668 02504000
*              CURPDE = NEXTPARM;           /* GET NEXT PDE IN LIST  */ 02505000
         L     CURPDE,NEXTPARM(,CURPDE)                            0669 02506000
*              IF IDFIRST = 2 & IDOTHER=2 THEN                     0670 02507000
         CLI   IDFIRST(CURPCE),2                                   0670 02508000
         BNE   @RF00670                                            0670 02509000
         CLI   IDOTHER(CURPCE),2                                   0670 02510000
         BNE   @RF00670                                            0670 02511000
*                DO;                                               0671 02512000
*                  CALL CONVRT;             /* CONVERT IF NUMERIC    */ 02513000
         BAL   @14,CONVRT                                          0672 02514000
*                  CALL NUMLENGH;           /* DETERMINE LENGTH      */ 02515000
         BAL   @14,NUMLENGH                                        0673 02516000
*                END;                                              0674 02517000
*              ELSE                                                0675 02518000
*                DO;                        /* IF NON-NUMERIC,       */ 02519000
         B     @RC00670                                            0675 02520000
@RF00670 DS    0H                                                  0676 02521000
*                  SAVLEN = PARMLEN;        /* SAVE LENGTH           */ 02522000
         LH    @07,PARMLEN(,CURPDE)                                0676 02523000
         STH   @07,SAVLEN                                          0676 02524000
*                  IF SAVLEN <256 THEN      /* IF LESS THAN 255,     */ 02525000
         CH    @07,@CH00491                                        0677 02526000
         BNL   @RF00677                                            0677 02527000
*                    ADPARM = ADDR(REALPARM);  /* SET PTR TO BUFFER  */ 02528000
         LA    @07,REALPARM                                        0678 02529000
         ST    @07,ADPARM                                          0678 02530000
*                  ELSE                                            0679 02531000
*                    DO;                    /* ELSE,                 */ 02532000
         B     @RC00677                                            0679 02533000
@RF00677 DS    0H                                                  0680 02534000
*                      SIZE=PARMLEN;        /* LENGTH AND            */ 02535000
         LH    @07,PARMLEN(,CURPDE)                                0680 02536000
         ST    @07,@TF00001                                        0680 02537000
         MVC   SIZE(3),@TF00001+1                                  0680 02538000
*                      SBPOOL='01'X;        /* SUBPOOL NUMBER        */ 02539000
         MVI   SBPOOL,X'01'                                        0681 02540000
*                      R0=SPLEN;            /* IN REGISTER 0         */ 02541000
         L     R0,SPLEN                                            0682 02542000
*                      GEN(GETMAIN R,LV=(0));  /* GET BUFFER         */ 02543000
         GETMAIN R,LV=(0)                                               02544000
*                      ADPARM=R1;           /* SET POINTER TO BUFFER */ 02545000
         ST    R1,ADPARM                                           0684 02546000
*                    END;                                          0685 02547000
*                  SAVPARM(1:PARMLEN)=VALUE(1:PARMLEN); /* PARAMETER */ 02548000
@RC00677 L     @07,ADPARM                                          0686 02549000
         LH    @15,PARMLEN(,CURPDE)                                0686 02550000
         BCTR  @15,0                                               0686 02551000
         L     @01,PARMPTR(,CURPDE)                                0686 02552000
         EX    @15,@SM00562                                        0686 02553000
*                END;                                              0687 02554000
*              LSTLEN = SAVLEN;             /* PUT LENGTH AND PARM   */ 02555000
@RC00670 LH    @07,SAVLEN                                          0688 02556000
         STH   @07,LSTLEN(,A)                                      0688 02557000
*              LSTTEXT (1:LSTLEN)=SAVPARM(1:LSTLEN); /* INTO TEXT    */ 02558000
         LR    @15,@07                                             0689 02559000
         BCTR  @15,0                                               0689 02560000
         L     @01,ADPARM                                          0689 02561000
         EX    @15,@SM00564                                        0689 02562000
*              A = A + 2 + SAVLEN;          /* INCREMENT TEXT PTR    */ 02563000
         LA    @15,2                                               0690 02564000
         AR    @15,A                                               0690 02565000
         AR    @15,@07                                             0690 02566000
         LR    A,@15                                               0690 02567000
*            END;                                                  0691 02568000
@DE00667 CLC   NEXTPARM(4,CURPDE),PDECMPRE                         0691 02569000
         BNE   @DL00667                                            0691 02570000
*          END;                                                    0692 02571000
*                                                                  0692 02572000
*END LISTTRNS;                                                     0693 02573000
@EL00023 DS    0H                                                  0693 02574000
@EF00023 DS    0H                                                  0693 02575000
@ER00023 LM    @14,@02,@SA00023                                    0693 02576000
         LM    @04,@12,@SA00023+20                                 0693 02577000
         BR    @14                                                 0693 02578000
*/********************************************************************/ 02579000
*/*                                                                  */ 02580000
*/* SEGMENT NAME -                                                   */ 02581000
*/*      CONVRT                                                      */ 02582000
*/*                                                                  */ 02583000
*/* FUNCTION -                                                       */ 02584000
*/*      THIS ROUTINE CONVERTS A NUMERIC PARAMETER FROM DECIMAL TO   */ 02585000
*/*      BINARY.                                                     */ 02586000
*/*                                                                  */ 02587000
*/* OPERATION -                                                      */ 02588000
*/*      IF THE LENGTH OF THE PARAMETER IS GREATER THAN 16, SET THE  */ 02589000
*/*      RETURN CODE TO 4 (INVALID PARAMETERS) AND RETURN TO CALLER. */ 02590000
*/*      ELSE, PERFORM THE CONVERSION.                               */ 02591000
*/*                                                                  */ 02592000
*/* INPUT -                                                          */ 02593000
*/*      PTR TO PDE                                                  */ 02594000
*/*                                                                  */ 02595000
*/* OUTPUT -                                                         */ 02596000
*/*      VALUE CONVERTED TO BINARY                                   */ 02597000
*/*                                                                  */ 02598000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 02599000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 02600000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 02601000
*/********************************************************************/ 02602000
*    CONVRT: PROC OPTIONS(DONTSAVE(4));                            0694 02603000
CONVRT   STM   @14,@03,@SA00024                                    0694 02604000
         STM   @05,@12,@SA00024+24                                 0694 02605000
*        RFY CVBREG RSTD;                                          0695 02606000
*        IF FAIL = 0 THEN              /* ERROR FOUND ?              */ 02607000
         CLI   FAIL,0                                              0696 02608000
         BNE   @RF00696                                            0696 02609000
*          DO;                         /* NO -                       */ 02610000
*            IF PARMLEN > 9  THEN      /* IF PARM > 16 CHARACTERS,   */ 02611000
         LH    @05,PARMLEN(,CURPDE)                                0698 02612000
         CH    @05,@CH00144                                        0698 02613000
         BNH   @RF00698                                            0698 02614000
*              DO;                     /* CANNOT BE CONVERTED        */ 02615000
*                RTCODE = 4;           /* SET RETURN CODE            */ 02616000
         MVC   RTCODE(4),@CF00172                                  0700 02617000
*                INVPARM = '1'B;       /* INDICATE ERROR FOUND       */ 02618000
         OI    INVPARM,B'10000000'                                 0701 02619000
*              END;                                                0702 02620000
*            ELSE                      /* IF PARM NOT > 16 THEN      */ 02621000
*              DO;                     /* CONVERT                    */ 02622000
         B     @RC00698                                            0703 02623000
@RF00698 DS    0H                                                  0704 02624000
*                PKAREA(1)='F0'X;      /* CLEAR PACK AREA            */ 02625000
         MVI   PKAREA,X'F0'                                        0704 02626000
*                P = ADDR(PKAREA(1));                              0705 02627000
         LA    P,PKAREA                                            0705 02628000
*                Q = ADDR(PKAREA(2));                              0706 02629000
         LA    Q,PKAREA+1                                          0706 02630000
*                Q->AREA1 = P->AREA2;                              0707 02631000
         MVC   AREA1(15,Q),AREA2(P)                                0707 02632000
*                Y=16-PARMLEN+ADDR(PKAREA);  /* SET UP POINTER       */ 02633000
         LH    @05,PARMLEN(,CURPDE)                                0708 02634000
         LA    @03,16                                              0708 02635000
         SR    @03,@05                                             0708 02636000
         LA    @15,PKAREA                                          0708 02637000
         AR    @03,@15                                             0708 02638000
         ST    @03,Y                                               0708 02639000
*                PKAREA1(1:PARMLEN) = VALUE(1:PARMLEN);            0709 02640000
         BCTR  @05,0                                               0709 02641000
         L     @01,PARMPTR(,CURPDE)                                0709 02642000
         EX    @05,@SM00580                                        0709 02643000
*                                      /* MOVE PARM TO BUFFER        */ 02644000
*                GENERATE;             /* PACK AND CONVERT TO BINARY */ 02645000
        PACK  CVBAREA(8),PKAREA(16)                                     02646000
        CVB   CVBREG,CVBAREA                                            02647000
*              END;                                                0711 02648000
*          END;                                                    0712 02649000
*END CONVRT;                                                       0713 02650000
@EL00024 DS    0H                                                  0713 02651000
@EF00024 DS    0H                                                  0713 02652000
@ER00024 LM    @14,@03,@SA00024                                    0713 02653000
         LM    @05,@12,@SA00024+24                                 0713 02654000
         BR    @14                                                 0713 02655000
*/********************************************************************/ 02656000
*/*                                                                  */ 02657000
*/* SEGMENT NAME -                                                   */ 02658000
*/*      NUMLENGH                                                    */ 02659000
*/*                                                                  */ 02660000
*/* FUNCTION -                                                       */ 02661000
*/*      THIS ROUTINE DETERMINES THE REQUIRED LENGTH FOR A NUMERIC   */ 02662000
*/*      PARAMETER.                                                  */ 02663000
*/*                                                                  */ 02664000
*/* OPERATION -                                                      */ 02665000
*/*      THE LENGTH TABLE IS SEARCHED FOR A KEY THAT MATCHES THE     */ 02666000
*/*      KEY FOR THIS NUMERIC PARAMETER. IF A MATCH IS NOT FOUND,    */ 02667000
*/*      THE RETURN CODE IS SET TO 4 (INVALID PARAMETERS) AND        */ 02668000
*/*      CONTROL IS RETURNED TO THE CALLER. OF A MATCH IS FOUND,     */ 02669000
*/*      THE CORRESPONDING LENGTH IS GOTTEN. IF THE PARAMETER VALUE  */ 02670000
*/*      EXCEEDS THE MAXIMUM ALLOWABLE FOR ITS LENGTH, THEN THE      */ 02671000
*/*      RETURN CODE IS SET TO 4 (INVALID PARAMETERS). ELSE, THE     */ 02672000
*/*      PARAMETER VALUE AND LENGTH ARE SAVED TO LATER BE PUT IN     */ 02673000
*/*      THE TEXT.                                                   */ 02674000
*/*                                                                  */ 02675000
*/* INPUT -                                                          */ 02676000
*/*      PTR TO BINARY VALUE                                         */ 02677000
*/*      PTR TO KEY LIST                                             */ 02678000
*/*                                                                  */ 02679000
*/* OUTPUT -                                                         */ 02680000
*/*      APPROPRIATE LENGTH AND VALUE                                */ 02681000
*/*                                                                  */ 02682000
*/* NOTE:  THIS ROUTINE REPRESENTS A DIRECT LINE FUNCTION AND CAN    */ 02683000
*/*        BE INCORPORATED AS AN INCLUDED CODE SEGMENT WHEN THE      */ 02684000
*/*        INCLUDE FUNCTION HAS RECEIVED A STANDARD DEFINITION.      */ 02685000
*/********************************************************************/ 02686000
*    NUMLENGH: PROC;                                               0714 02687000
NUMLENGH STM   @14,@12,12(@13)                                     0714 02688000
*RFY (J,K) RSTD;                                                   0715 02689000
*        IF FAIL = 0 THEN                   /* ERROR FOUND ?         */ 02690000
         CLI   FAIL,0                                              0716 02691000
         BNE   @RF00716                                            0716 02692000
*          DO;                              /* NO -                  */ 02693000
*            J = 1;                         /* INITIALIZE SUBSCRIPTS */ 02694000
         LA    @09,1                                               0718 02695000
         LR    J,@09                                               0718 02696000
*            K = 1;                         /* FOR LENGTH TABLE      */ 02697000
*                                                                  0719 02698000
         LR    K,@09                                               0719 02699000
*            DO WHILE (SEARCH = '0'B);      /* SEARCH LENGTH TABLE   */ 02700000
         B     @DE00720                                            0720 02701000
@DL00720 DS    0H                                                  0721 02702000
*              IF LENTABLE(J,K)^=DYNKEY THEN/* IF KEYS DO NOT MATCH  */ 02703000
         LR    @09,J                                               0721 02704000
         AR    @09,@09                                             0721 02705000
         AR    @09,K                                               0721 02706000
         AR    @09,@09                                             0721 02707000
         LA    @01,LENTABLE-6(@09)                                 0721 02708000
         L     @09,B                                               0721 02709000
         CLC   0(2,@01),DYNKEY(@09)                                0721 02710000
         BE    @RF00721                                            0721 02711000
*                DO;                        /* THEN                  */ 02712000
*                  J = J+1;                 /* INCREMENT SUBSCRIPT   */ 02713000
         AH    J,@CH00081                                          0723 02714000
*                  IF LENTABLE(J,K)='00'X THEN   /* IF END OF TABLE  */ 02715000
         LR    @09,J                                               0724 02716000
         AR    @09,@09                                             0724 02717000
         AR    @09,K                                               0724 02718000
         AR    @09,@09                                             0724 02719000
         LH    @09,LENTABLE-6(@09)                                 0724 02720000
         LTR   @09,@09                                             0724 02721000
         BNZ   @RF00724                                            0724 02722000
*                    DO;                    /* THEN                  */ 02723000
*                      RTCODE = 4;          /* SET RETURN CODE       */ 02724000
         MVC   RTCODE(4),@CF00172                                  0726 02725000
*                      INVPARM = '1'B;      /* INDICATE ERROR FOUND  */ 02726000
         OI    INVPARM,B'10000000'                                 0727 02727000
*                      SEARCH = '1'B;       /* EXIT FROM DO-WHILE    */ 02728000
         OI    SEARCH,B'00000010'                                  0728 02729000
*                    END;                                          0729 02730000
*                END;                                              0730 02731000
*              ELSE                         /* IF KEYS DO MATCH,     */ 02732000
*                SEARCH = '1'B;             /* EXIT FROM DO-WHILE    */ 02733000
         B     @RC00721                                            0731 02734000
@RF00721 OI    SEARCH,B'00000010'                                  0731 02735000
*            END;                                                  0732 02736000
*                                                                  0732 02737000
@RC00721 DS    0H                                                  0732 02738000
@DE00720 TM    SEARCH,B'00000010'                                  0732 02739000
         BZ    @DL00720                                            0732 02740000
*            SEARCH = '0'B;                 /* TURN OFF SEARCH BIT   */ 02741000
         NI    SEARCH,B'11111101'                                  0733 02742000
*            IF FAIL = 0 THEN               /* ERROR FOUND IN SEARCH?*/ 02743000
         CLI   FAIL,0                                              0734 02744000
         BNE   @RF00734                                            0734 02745000
*              DO;                          /* NO -                  */ 02746000
*                ADPARM = ADDR(REALPARM);                          0736 02747000
         LA    @09,REALPARM                                        0736 02748000
         ST    @09,ADPARM                                          0736 02749000
*                SAVLEN = LENTABLE(J,2);    /* GET LENGTH FROM TABLE */ 02750000
         LR    @09,J                                               0737 02751000
         SLA   @09,2                                               0737 02752000
         LH    @09,LENTABLE-2(@09)                                 0737 02753000
         STH   @09,SAVLEN                                          0737 02754000
*                TEMPCVB = CVBREG;          /* SAVE CONVERTED VALUE  */ 02755000
         ST    CVBREG,@TF00001                                     0738 02756000
         MVC   TEMPCVB(4),@TF00001                                 0738 02757000
*                IF SAVLEN = 3 THEN         /* IF LENGTH IS 3, AND   */ 02758000
         CH    @09,@CH00119                                        0739 02759000
         BNE   @RF00739                                            0739 02760000
*                  DO;                      /* IF VALUE EXCEEDS MAX  */ 02761000
*                    IF TEMPCVB > 16777215 THEN                    0741 02762000
         CLC   TEMPCVB(4),@CF00549                                 0741 02763000
         BNH   @RF00741                                            0741 02764000
*                      DO;                  /* THEN                  */ 02765000
*                        RTCODE = 4;        /* SET RETURN CODE       */ 02766000
         MVC   RTCODE(4),@CF00172                                  0743 02767000
*                        INVPARM = '1'B;    /* INDICATE ERROR FOUND  */ 02768000
         OI    INVPARM,B'10000000'                                 0744 02769000
*                      END;                                        0745 02770000
*                    ELSE                   /* IF VALUE < MAX THEN   */ 02771000
*                      SAVPARM(1:3) = TEMPCVB(2:4);/* MOVE INTO AREA */ 02772000
         B     @RC00741                                            0746 02773000
@RF00741 L     @09,ADPARM                                          0746 02774000
         MVC   SAVPARM(3,@09),TEMPCVB+1                            0746 02775000
*                  END;                                            0747 02776000
@RC00741 DS    0H                                                  0748 02777000
*                IF SAVLEN = 2 THEN         /* IF LENGTH IS 2, AND   */ 02778000
@RF00739 CLC   SAVLEN(2),@CH00097                                  0748 02779000
         BNE   @RF00748                                            0748 02780000
*                  DO;                      /* IF VALUE EXCEEDS MAX  */ 02781000
*                    IF TEMPCVB > 65535 THEN                       0750 02782000
         CLC   TEMPCVB(4),@CF00550                                 0750 02783000
         BNH   @RF00750                                            0750 02784000
*                      DO;                  /* THEN                  */ 02785000
*                        RTCODE = 4;        /* SET RETURN CODE       */ 02786000
         MVC   RTCODE(4),@CF00172                                  0752 02787000
*                        INVPARM = '1'B;    /* INDICATE ERROR FOUND  */ 02788000
         OI    INVPARM,B'10000000'                                 0753 02789000
*                      END;                                        0754 02790000
*                    ELSE                   /* IF VALUE < MAX THEN   */ 02791000
*                      SAVPARM(1:2) = TEMPCVB(3:4);/* MOVE INTO AREA */ 02792000
         B     @RC00750                                            0755 02793000
@RF00750 L     @09,ADPARM                                          0755 02794000
         MVC   SAVPARM(2,@09),TEMPCVB+2                            0755 02795000
*                  END;                                            0756 02796000
@RC00750 DS    0H                                                  0757 02797000
*                IF SAVLEN = 1 THEN         /* IF LENGTH IS 1,       */ 02798000
@RF00748 CLC   SAVLEN(2),@CH00081                                  0757 02799000
         BNE   @RF00757                                            0757 02800000
*                  DO;                      /* AND                   */ 02801000
*                    IF TEMPCVB > 255 THEN  /* VALUE EXCEEDS MAX     */ 02802000
         CLC   TEMPCVB(4),@CF00195                                 0759 02803000
         BNH   @RF00759                                            0759 02804000
*                      DO;                  /* THEN                  */ 02805000
*                        RTCODE = 4;        /* SET RETURN CODE       */ 02806000
         MVC   RTCODE(4),@CF00172                                  0761 02807000
*                        INVPARM = '1'B;    /* INDICATE ERROR FOUND  */ 02808000
         OI    INVPARM,B'10000000'                                 0762 02809000
*                      END;                                        0763 02810000
*                    ELSE                   /* IF VALUE < MAX,       */ 02811000
*                      SAVPARM(1)=TEMPCVB(4);/* MOVE INTO AREA       */ 02812000
         B     @RC00759                                            0764 02813000
@RF00759 L     @09,ADPARM                                          0764 02814000
         MVC   SAVPARM(1,@09),TEMPCVB+3                            0764 02815000
*                  END;                                            0765 02816000
*                                                                  0765 02817000
*              END;                                                0766 02818000
*          END;                                                    0767 02819000
*RFY (J,K,CVBREG) UNRSTD;                                          0768 02820000
*END NUMLENGH;                                                     0769 02821000
@EL00025 DS    0H                                                  0769 02822000
@EF00025 DS    0H                                                  0769 02823000
@ER00025 LM    @14,@12,12(@13)                                     0769 02824000
         BR    @14                                                 0769 02825000
@PB00025 DS    0H                                                  0770 02826000
*        GENERATE;                                                 0770 02827000
EXTLIST EXTRACT MF=L                                                    02828000
EXTEND  EQU *                                                           02829000
EXTLEN  DC  A(EXTEND-EXTLIST)                                           02830000
*END IKJCB831                                                      0771 02831000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 02832000
*/*%INCLUDE SYSLIB  (IKJZB831)                                        * 02833000
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                        * 02834000
*;                                                                 0771 02835000
@EL00001 L     @13,4(,@13)                                         0771 02836000
@EF00001 L     @00,@SIZDATD                                        0771 02837000
         LR    @01,@10                                             0771 02838000
         FREEMAIN R,LV=(0),A=(1)                                        02839000
@ER00001 LM    @14,@12,12(@13)                                     0771 02840000
         BR    @14                                                 0771 02841000
@DATA    DS    0H                                                       02842000
@CH00081 DC    H'1'                                                     02843000
@CH00097 DC    H'2'                                                     02844000
@CH00119 DC    H'3'                                                     02845000
@CH00140 DC    H'6'                                                     02846000
@CH00125 DC    H'7'                                                     02847000
@CH00144 DC    H'9'                                                     02848000
@CH00463 DC    H'30'                                                    02849000
@CH00462 DC    H'42'                                                    02850000
@CH00491 DC    H'256'                                                   02851000
@CH00216 DC    XL2'0002'                                                02852000
@CH00218 DC    XL2'0003'                                                02853000
@CH00372 DC    XL2'0050'                                                02854000
@SM00562 MVC   SAVPARM(0,@07),VALUE(@01)                                02855000
@SM00564 MVC   LSTTEXT(0,A),SAVPARM(@01)                                02856000
@SM00574 MVC   LSTTEXT(0,A),VALUE(@01)                                  02857000
@SM00576 MVC   LSTTEXT(0,A),MBRBUF(@01)                                 02858000
@SM00578 MVC   LSTTEXT(0,A),PASSBUF(@01)                                02859000
@SM00580 MVC   PKAREA1(0,@03),VALUE(@01)                                02860000
@DATD    DSECT                                                          02861000
         DS    0F                                                       02862000
@SA00001 DS    18F                                                      02863000
@SA00002 DS    13F                                                      02864000
@SA00007 DS    15F                                                      02865000
@SA00003 DS    13F                                                      02866000
@SA00008 DS    12F                                                      02867000
@SA00013 DS    12F                                                      02868000
@SA00009 DS    12F                                                      02869000
@SA00011 DS    13F                                                      02870000
@SA00010 DS    14F                                                      02871000
@SA00024 DS    14F                                                      02872000
@SA00023 DS    14F                                                      02873000
@SA00019 DS    13F                                                      02874000
@SA00014 DS    12F                                                      02875000
@TF00001 DS    F                                                        02876000
@ZTEMPS  DS    0F                                                       02877000
@ZT00002 DC    F'0'                                                     02878000
@ZT00003 DC    F'0'                                                     02879000
@ZTEMPND EQU   *                                                        02880000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         02881000
IKJCB831 CSECT                                                          02882000
         DS    0F                                                       02883000
@CF00172 DC    F'4'                                                     02884000
@CH00172 EQU   @CF00172+2                                               02885000
@CF00162 DC    F'8'                                                     02886000
@CH00162 EQU   @CF00162+2                                               02887000
@CF00037 DC    F'12'                                                    02888000
@CH00037 EQU   @CF00037+2                                               02889000
@CF00195 DC    F'255'                                                   02890000
@CF00550 DC    F'65535'                                                 02891000
@CF00549 DC    F'16777215'                                              02892000
@CF00503 DC    XL4'FFFF'                                                02893000
@CF00192 DC    XL4'FF000000'                                            02894000
@DATD    DSECT                                                          02895000
         DS    0D                                                       02896000
B        DS    A                                                        02897000
Y        DS    A                                                        02898000
GTPLPTR  DS    A                                                        02899000
ADDRPTR  DS    A                                                        02900000
TEXTPTR  DS    A                                                        02901000
PDLADS   DS    A                                                        02902000
PCLADS   DS    A                                                        02903000
EXTPTR   DS    A                                                        02904000
FIRSTPDE DS    A                                                        02905000
SAVPCE   DS    A                                                        02906000
ADPARM   DS    A                                                        02907000
RTCODE   DS    F                                                        02908000
EXTOUTA  DS    A                                                        02909000
PSCBPTR  DS    A                                                        02910000
SAVKEYWD DS    H                                                        02911000
PCELEN   DS    H                                                        02912000
NAMECTR  DS    H                                                        02913000
SAVLEN   DS    H                                                        02914000
SWITCH   DS    CL2                                                      02915000
         ORG   SWITCH                                                   02916000
PCLEND   DS    BL1                                                      02917000
SUBSTG   EQU   SWITCH+0                                                 02918000
KEYTRN   EQU   SWITCH+0                                                 02919000
SUBTRN   EQU   SWITCH+0                                                 02920000
DSNPROC  EQU   SWITCH+0                                                 02921000
PARMOMIT EQU   SWITCH+0                                                 02922000
SEARCH   EQU   SWITCH+0                                                 02923000
KEYFIRST EQU   SWITCH+0                                                 02924000
KYNOFND  DS    BL1                                                      02925000
KYFOUND  EQU   SWITCH+1                                                 02926000
SUBFOUND EQU   SWITCH+1                                                 02927000
@NM00002 EQU   SWITCH+1                                                 02928000
         ORG   SWITCH+2                                                 02929000
FAIL     DS    CL1                                                      02930000
         ORG   FAIL                                                     02931000
INVPARM  DS    BL1                                                      02932000
GETFAIL  EQU   FAIL+0                                                   02933000
NOSUPT   EQU   FAIL+0                                                   02934000
@NM00003 EQU   FAIL+0                                                   02935000
         ORG   FAIL+1                                                   02936000
PKAREA   DS    CL16                                                     02937000
TEMPCVB  DS    CL4                                                      02938000
REALPARM DS    CL255                                                    02939000
         DS    CL2                                                      02940000
SPLEN    DS    CL4                                                      02941000
         ORG   SPLEN                                                    02942000
SBPOOL   DS    CL1                                                      02943000
SIZE     DS    AL3                                                      02944000
         ORG   SPLEN+4                                                  02945000
         DS    CL4                                                      02946000
CVBAREA  DS    CL8                                                      02947000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02948000
@ENDDATD EQU   *                                                        02949000
IKJCB831 CSECT                                                          02950000
         DS    0F                                                       02951000
@SIZDATD DC    AL1(0)                                                   02952000
         DC    AL3(@ENDDATD-@DATD)                                      02953000
         DS    0D                                                       02954000
@CB00432 DC    X'0000'                                                  02955000
         DS    CL2                                                      02956000
PDECMPRE DC    X'FF000000'                                              02957000
PATCH    DC    25F'0'                                                   02958000
LENTABLE DC    XL2'0009'                                                02959000
         DC    H'3'                                                     02960000
         DC    XL2'000A'                                                02961000
         DC    H'3'                                                     02962000
         DC    XL2'000B'                                                02963000
         DC    H'3'                                                     02964000
         DC    XL2'000C'                                                02965000
         DC    H'3'                                                     02966000
         DC    XL2'0012'                                                02967000
         DC    H'2'                                                     02968000
         DC    XL2'0013'                                                02969000
         DC    H'1'                                                     02970000
         DC    XL2'0016'                                                02971000
         DC    H'1'                                                     02972000
         DC    XL2'001B'                                                02973000
         DC    H'3'                                                     02974000
         DC    XL2'001D'                                                02975000
         DC    H'1'                                                     02976000
         DC    XL2'001F'                                                02977000
         DC    H'2'                                                     02978000
         DC    XL2'0023'                                                02979000
         DC    H'2'                                                     02980000
         DC    XL2'0030'                                                02981000
         DC    H'2'                                                     02982000
         DC    XL2'0031'                                                02983000
         DC    H'1'                                                     02984000
         DC    XL2'0032'                                                02985000
         DC    H'2'                                                     02986000
         DC    XL2'0033'                                                02987000
         DC    H'1'                                                     02988000
         DC    XL2'0034'                                                02989000
         DC    H'1'                                                     02990000
         DC    XL2'0036'                                                02991000
         DC    H'1'                                                     02992000
         DC    XL2'0037'                                                02993000
         DC    H'1'                                                     02994000
         DC    XL2'0038'                                                02995000
         DC    H'2'                                                     02996000
         DC    XL2'003E'                                                02997000
         DC    H'1'                                                     02998000
         DC    XL2'003F'                                                02999000
         DC    H'1'                                                     03000000
         DC    XL2'0040'                                                03001000
         DC    H'1'                                                     03002000
         DC    XL2'0041'                                                03003000
         DC    H'3'                                                     03004000
         DC    XL2'0042'                                                03005000
         DC    H'2'                                                     03006000
         DC    XL2'0044'                                                03007000
         DC    H'1'                                                     03008000
         DC    XL2'004A'                                                03009000
         DC    H'1'                                                     03010000
         DC    XL2'004B'                                                03011000
         DC    H'1'                                                     03012000
         DC    XL2'004C'                                                03013000
         DC    H'2'                                                     03014000
         DC    XL2'004E'                                                03015000
         DC    H'1'                                                     03016000
         DC    XL2'000F'                                                03017000
         DC    H'2'                                                     03018000
         DC    XL2'00'                                                  03019000
         DC    H'0'                                                     03020000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       03021000
@01      EQU   01                                                       03022000
@02      EQU   02                                                       03023000
@03      EQU   03                                                       03024000
@04      EQU   04                                                       03025000
@05      EQU   05                                                       03026000
@06      EQU   06                                                       03027000
@07      EQU   07                                                       03028000
@08      EQU   08                                                       03029000
@09      EQU   09                                                       03030000
@10      EQU   10                                                       03031000
@11      EQU   11                                                       03032000
@12      EQU   12                                                       03033000
@13      EQU   13                                                       03034000
@14      EQU   14                                                       03035000
@15      EQU   15                                                       03036000
TEXTCTR  EQU   @07                                                      03037000
ADDRCTR  EQU   @03                                                      03038000
SUBPDEPT EQU   @02                                                      03039000
Q        EQU   @06                                                      03040000
P        EQU   @03                                                      03041000
BITVALUE EQU   @02                                                      03042000
KEYLIST  EQU   @02                                                      03043000
CURPDE   EQU   @02                                                      03044000
CURPCE   EQU   @06                                                      03045000
I        EQU   @07                                                      03046000
A        EQU   @03                                                      03047000
R0       EQU   @00                                                      03048000
R1       EQU   @01                                                      03049000
CVBREG   EQU   @04                                                      03050000
J        EQU   @05                                                      03051000
K        EQU   @08                                                      03052000
R15      EQU   @15                                                      03053000
R10      EQU   @10                                                      03054000
R11      EQU   @11                                                      03055000
R12      EQU   @12                                                      03056000
R13      EQU   @13                                                      03057000
R14      EQU   @14                                                      03058000
R2       EQU   @02                                                      03059000
R3       EQU   @03                                                      03060000
R5       EQU   @05                                                      03061000
R7       EQU   @07                                                      03062000
R9       EQU   @09                                                      03063000
GTPL     EQU   0                                                        03064000
GTPLPDL  EQU   GTPL                                                     03065000
GTPLPCL  EQU   GTPL+4                                                   03066000
GTPLKLST EQU   GTPL+8                                                   03067000
GTPLTBLE EQU   GTPL+12                                                  03068000
GTPLABLK EQU   GTPL+16                                                  03069000
GTPLOUTA EQU   GTPL+20                                                  03070000
DYNKEY   EQU   0                                                        03071000
BITTABLE EQU   0                                                        03072000
TABKEY   EQU   BITTABLE                                                 03073000
TABCNT   EQU   BITTABLE+2                                               03074000
SETTING  EQU   0                                                        03075000
ADDBLOCK EQU   0                                                        03076000
ADDBLKNM EQU   ADDBLOCK                                                 03077000
ADDBLKPT EQU   ADDBLOCK+4                                               03078000
DYNTEXT  EQU   0                                                        03079000
KEY      EQU   DYNTEXT                                                  03080000
NUMBER   EQU   DYNTEXT+2                                                03081000
LEN      EQU   DYNTEXT+4                                                03082000
LISTFRMT EQU   0                                                        03083000
LSTLEN   EQU   LISTFRMT                                                 03084000
LSTTEXT  EQU   LISTFRMT+2                                               03085000
COMNPCE  EQU   0                                                        03086000
COMNFLAG EQU   COMNPCE                                                  03087000
CMTYPE   EQU   COMNFLAG                                                 03088000
CMSUBF   EQU   COMNFLAG                                                 03089000
CMLIST   EQU   COMNFLAG+1                                               03090000
CMPCELEN EQU   COMNPCE+2                                                03091000
CMPDEOF  EQU   COMNPCE+4                                                03092000
IDENTPCE EQU   6                                                        03093000
IDFIRST  EQU   IDENTPCE+1                                               03094000
IDOTHER  EQU   IDENTPCE+2                                               03095000
NAMELEN  EQU   4                                                        03096000
PARMPDE  EQU   0                                                        03097000
PARMPTR  EQU   PARMPDE                                                  03098000
PARMLEN  EQU   PARMPDE+4                                                03099000
PARMFLAG EQU   PARMPDE+6                                                03100000
PARMPRES EQU   PARMFLAG                                                 03101000
NEXTPARM EQU   PARMPDE+8                                                03102000
DSNAMPDE EQU   8                                                        03103000
MBRPTR   EQU   DSNAMPDE                                                 03104000
MBRLEN   EQU   DSNAMPDE+4                                               03105000
MBRFLAG  EQU   DSNAMPDE+6                                               03106000
MBRPRES  EQU   MBRFLAG                                                  03107000
PASSPTR  EQU   DSNAMPDE+8                                               03108000
PASSLEN  EQU   DSNAMPDE+12                                              03109000
PASSFLAG EQU   DSNAMPDE+14                                              03110000
PASSPRES EQU   PASSFLAG                                                 03111000
DSNNEXT  EQU   DSNAMPDE+16                                              03112000
KYWDNBR  EQU   0                                                        03113000
POSTYPE  EQU   6                                                        03114000
VALUE    EQU   0                                                        03115000
MBRBUF   EQU   0                                                        03116000
PASSBUF  EQU   0                                                        03117000
PKAREA1  EQU   0                                                        03118000
AREA1    EQU   0                                                        03119000
AREA2    EQU   0                                                        03120000
LENPCL   EQU   0                                                        03121000
SUBOFST  EQU   0                                                        03122000
SAVPARM  EQU   0                                                        03123000
OUTAREA  EQU   0                                                        03124000
SPNSIZE  EQU   OUTAREA                                                  03125000
NUMENTRY EQU   OUTAREA+4                                                03126000
ADDRLIST EQU   OUTAREA+8                                                03127000
@NM00015 EQU   ADDRLIST                                                 03128000
ADDREND  EQU   @NM00015                                                 03129000
EXTCORE  EQU   0                                                        03130000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    03131000
@NM00016 EQU   @NM00015                                                 03132000
@NM00014 EQU   OUTAREA+6                                                03133000
@NM00013 EQU   DSNAMPDE+15                                              03134000
@NM00012 EQU   PASSFLAG                                                 03135000
@NM00011 EQU   DSNAMPDE+7                                               03136000
@NM00010 EQU   MBRFLAG                                                  03137000
@NM00009 EQU   PARMPDE+7                                                03138000
@NM00008 EQU   PARMFLAG                                                 03139000
PARMQUOT EQU   PARMFLAG                                                 03140000
@NM00007 EQU   IDENTPCE                                                 03141000
@NM00006 EQU   COMNFLAG+1                                               03142000
@NM00005 EQU   COMNFLAG                                                 03143000
@NM00004 EQU   COMNFLAG                                                 03144000
TEXT     EQU   DYNTEXT+6                                                03145000
@NM00001 EQU   ADDBLOCK+2                                               03146000
TABSET   EQU   BITTABLE+4                                               03147000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      03148000
@RF00104 EQU   @EL00002                                                 03149000
@RF00118 EQU   @EL00002                                                 03150000
@RC00141 EQU   @EL00003                                                 03151000
@RC00139 EQU   @EL00003                                                 03152000
@RC00137 EQU   @EL00003                                                 03153000
@RC00131 EQU   @EL00003                                                 03154000
@RC00129 EQU   @EL00003                                                 03155000
@RC00144 EQU   @EL00003                                                 03156000
@RF00160 EQU   @EL00004                                                 03157000
@RF00168 EQU   @EL00005                                                 03158000
@RF00171 EQU   @EL00005                                                 03159000
@RF00184 EQU   @EL00006                                                 03160000
@RF00187 EQU   @EL00006                                                 03161000
@RF00195 EQU   @EL00007                                                 03162000
@RF00219 EQU   @EL00007                                                 03163000
@RF00231 EQU   @EL00008                                                 03164000
@RF00249 EQU   @EL00008                                                 03165000
@RC00247 EQU   @EL00008                                                 03166000
@RC00241 EQU   @EL00008                                                 03167000
@RC00236 EQU   @EL00008                                                 03168000
@RC00257 EQU   CC                                                       03169000
@RC00261 EQU   CC                                                       03170000
@RF00270 EQU   CC                                                       03171000
@RF00315 EQU   AA                                                       03172000
@RF00308 EQU   @EL00009                                                 03173000
BB       EQU   @EL00009                                                 03174000
@RC00332 EQU   @EL00010                                                 03175000
@RF00365 EQU   @EL00010                                                 03176000
@RF00370 EQU   @EL00011                                                 03177000
@RC00383 EQU   @EL00011                                                 03178000
@RC00404 EQU   @RC00402                                                 03179000
@RF00393 EQU   @EL00012                                                 03180000
@RC00395 EQU   @EL00012                                                 03181000
@RC00441 EQU   @EL00012                                                 03182000
@RF00455 EQU   @EL00013                                                 03183000
@RC00457 EQU   @EL00013                                                 03184000
@RF00474 EQU   @EL00014                                                 03185000
@RC00476 EQU   @EL00014                                                 03186000
@RF00500 EQU   @EL00015                                                 03187000
@RC00502 EQU   @EL00015                                                 03188000
@RF00518 EQU   @EL00016                                                 03189000
@RC00520 EQU   @EL00016                                                 03190000
@RF00534 EQU   @EL00017                                                 03191000
@RC00538 EQU   @EL00017                                                 03192000
@RF00552 EQU   @EL00018                                                 03193000
@RC00556 EQU   @EL00018                                                 03194000
@RF00570 EQU   @EL00019                                                 03195000
@RC00572 EQU   @EL00019                                                 03196000
@RF00588 EQU   @EL00020                                                 03197000
@RF00598 EQU   @EL00020                                                 03198000
@RF00608 EQU   @EL00020                                                 03199000
@RF00618 EQU   @EL00021                                                 03200000
@RF00642 EQU   @EL00022                                                 03201000
@RF00665 EQU   @EL00023                                                 03202000
@RF00696 EQU   @EL00024                                                 03203000
@RC00698 EQU   @EL00024                                                 03204000
@PB00024 EQU   @PB00025                                                 03205000
@RF00724 EQU   @RC00721                                                 03206000
@RF00716 EQU   @EL00025                                                 03207000
@RF00734 EQU   @EL00025                                                 03208000
@RF00757 EQU   @EL00025                                                 03209000
@RC00759 EQU   @EL00025                                                 03210000
@RC00133 EQU   @RC00131                                                 03211000
@RC00243 EQU   @RC00241                                                 03212000
@RF00298 EQU   BB                                                       03213000
@RF00415 EQU   @RC00395                                                 03214000
@RC00418 EQU   @RC00395                                                 03215000
@RC00483 EQU   @RC00476                                                 03216000
@RC00504 EQU   @RC00502                                                 03217000
@RF00574 EQU   @RC00572                                                 03218000
@RF00576 EQU   @RC00572                                                 03219000
@PB00023 EQU   @PB00024                                                 03220000
@PB00022 EQU   @PB00023                                                 03221000
@PB00021 EQU   @PB00022                                                 03222000
@PB00020 EQU   @PB00021                                                 03223000
@PB00019 EQU   @PB00020                                                 03224000
@PB00018 EQU   @PB00019                                                 03225000
@PB00017 EQU   @PB00018                                                 03226000
@PB00016 EQU   @PB00017                                                 03227000
@PB00015 EQU   @PB00016                                                 03228000
@PB00014 EQU   @PB00015                                                 03229000
@PB00013 EQU   @PB00014                                                 03230000
@PB00012 EQU   @PB00013                                                 03231000
@PB00011 EQU   @PB00012                                                 03232000
@PB00010 EQU   @PB00011                                                 03233000
@PB00009 EQU   @PB00010                                                 03234000
@PB00008 EQU   @PB00009                                                 03235000
@PB00007 EQU   @PB00008                                                 03236000
@PB00006 EQU   @PB00007                                                 03237000
@PB00005 EQU   @PB00006                                                 03238000
@PB00004 EQU   @PB00005                                                 03239000
@PB00003 EQU   @PB00004                                                 03240000
@PB00002 EQU   @PB00003                                                 03241000
@ENDDATA EQU   *                                                        03242000
         END   IKJCB831                                                 03243000
