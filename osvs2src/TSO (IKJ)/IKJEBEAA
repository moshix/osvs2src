BEAA TITLE 'EDIT COMMAND ACCESS METHOD -VECTOR TABLE ---IKJEBEAA'       00500003
IKJEBEAA CSECT                                                          00510003
*C0-999999                                                     @Y30NQKG 00520003
*          FIX B0A ABEND ON LARGE DATA SET                     @ZA12679 00525003
         SPACE 3                                                        00530003
*   THE FOLLOWING ARE REGISTER ASSIGNMENTS                              00540003
PARMREG0 EQU   0                       PARM POINTER                     00550003
PARMREG1 EQU   1                       PARM POINTER                     00560003
FROMREG  EQU   2                       FROM ADDRESS REGISTER            00570003
TOREG    EQU   3                       TO ADDRESS REGISTER              00580003
WORK2    EQU   2                       WORK REGISTER                    00590003
WORK3    EQU   3                       WORK REGISTER                    00600003
WORK4    EQU   4                       WORK REGISTER                    00610003
WORK5    EQU   5                       WORK REGISTER                    00620003
WORK6    EQU   6                       WORK REGISTER                    00630003
WORK7    EQU   7                       WORK REGISTER                    00640003
WORK8    EQU   8                       WORK REGISTER                    00650003
LINK9    EQU   9                       SUBROUTINE LINK REGISTER         00660003
WORK9    EQU   9                       WORK REGISTER                    00670003
COMMREG  EQU   10                      VECTOR TABLE ADDRESSING          00680003
BASEREG  EQU   11                      BASE REGISTER                    00690003
DATAREG  EQU   12                      UTILITY WORK AREA ADDRESSING     00700003
SAVEREG  EQU   13                      SAVE AREA ADDRESSING             00710003
RETREG   EQU   14                      RETURN REGISTER                  00720003
RETCDREG EQU   15                      RETURN CODE                      00730003
ENTRY    EQU   15                      ENTRY POINT ADDRESS              00740003
         EJECT                                                          00750003
*   DEFINITIONS                                                         00760003
ZERO     EQU   0                       CONSTANT OF ZERO                 00770003
ONE      EQU   1                       CONSTANT OF ONE                  00780003
L2       EQU   2                       LENGTH OF TWO                    00790003
L3       EQU   3                       LENGTH OF THREE                  00800003
L4       EQU   4                       LENGTH OF FOUR                   00810003
L8       EQU   8                       LENGTH OF EIGHT                  00820003
X0       EQU   0                       OFFSET OF ZERO                   00830003
X1       EQU   1                       OFFSET OF ONE                    00840003
FOUR     EQU   4                       CONSTANT OF FOUR                 00850003
K50      EQU   50                      CONSTANT OF 50                   00860003
K78      EQU   78                      CONSTANT OF 78                   00870003
K255     EQU   255                     CONSTANT OF 255                  00880003
PTR      EQU   4                       LENGTH OF ADDRESSES              00890003
NRF      EQU   4                       RECORD DOES NOT EXIST CODE       00900003
EMPTY    EQU   8                       EMPTY DATA SET CODE              00910003
SPONE    EQU   1                       SUBPOOL ONE                      00920003
IOERR    EQU   12                      I/O ERROR CODE                   00930003
SAVEL    EQU   72                      SAVE AREA LENGTH                 00940003
WORD1    EQU   0                       OFFSET TO 1ST PARAMETER WORD     00950003
WORD2    EQU   4                       OFFSET TO 2ND PARAMETER WORD     00960003
WORD3    EQU   8                       OFFSET TO 3RD PARAMETER WORD     00970003
EQUAL    EQU   8                       MASK FOR BRANCH ON EQUAL         00980003
NOTZERO  EQU   7                       MASK FOR BR ON NOT ZERO          00990003
RECHIGH  EQU   2                       MASK, RECORD KEY HIGH            01000003
COMPLETE EQU   X'40'                   I/O COMPLETE FLAG                01010003
GOOD     EQU   X'7F'                   I/O SUCCESSFUL FLAG              01020003
LAST     EQU   X'80'                   LAST ENTRY INDICATOR             01030003
ALL      EQU   X'FF'                   REPRESENTS ALL BITS//BYTE SWITCH 01040003
X3       EQU   3                       MASK TO GET HALFWORD    @ZA12679 01042003
*                                      UNSIGNED DSDBSIZE       @ZA12679 01044003
MAXDSI   EQU   X'F0'                   MAXDSDB SIZE=15*4096    @ZA12679 01046003
DIRCODE  EQU   11                      OFFSET TO INPUT OPTION           01050003
DELKEY   EQU   X'00'                   DELETE INDEX ENTRY CODE          01060003
NEWKEY   EQU   X'01'                   KEY ONLY UPDATE CODE             01070003
ALLKEY   EQU   X'FF'                   ENTIRE NEW ENTRY CODE            01080003
         SPACE 1                                                        01090003
*   MESSAGE REFERENCES-  INSERTION FOR I/O ERROR MESSAGE IS RETURNED    01100003
*     VIA 'SYNADAF' AND STORED IN THE 'IOMSG' FIELD OF THE WORKAREA.    01110003
         EJECT                                                          01120003
*********************************************************************** 01130003
*                                                                     * 01140003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                     * 01150003
*                                                                     * 01160003
*COPYRIGHT N/A                                                        * 01170003
*FUNCTION- THIS LOAD MODULE IS COMPRISED OF 16 CSECTS.                  01180003
*   THE FIRST OF WHICH MUST BE THE VECTOR TABLE. THE                    01190003
*   VECTOR TABLE CONTAINS THE ADDRESSES OF THE FIFTEEN                  01200003
*   ROUTINES WHICH COMPRISE THE EDIT ACCESS METHOD. IN                  01210003
*   ADDITION, THIS TABLE ALSO CONTAINS THE ADDRESS OF                   01220003
*   THE SYNAD ROUTINE. THIS ALLOWS THE SYNAD ADDRESS IN THE             01230003
*   DCB TO BE EASILY RE-ESTABLISHED IF THIS LOAD MODULE                 01240003
*   IS EVER DELETED AND THEN RELOADED.                                  01250003
*                                                                       01260003
*   EACH OF THE FOLLOWING ROUTINES (CSECTS) HAS ITS OWN PROLOGUE      * 01270003
*                                                                     * 01280003
*   THIS VECTOR TABLE IS USED BY ALL ROUTINES IN THIS MODULE THAT     * 01290003
*   CALL OTHER ROUTINES                                               * 01300003
*                                                                     * 01310003
*ENTRY POINTS-  FIVE ENTRY POINTS VIA A CALL FROM IKJEBEUT              01320003
*       IKJEBEDR             -DELETES RECORDS                           01330003
*       IKJEBERR             -READS RECORDS                             01340003
*       IKJEBEWR             -WRITES RECORDS                            01350003
*       IKJEBEWP             -FINAL ENTRY FOR WRITE SEQUENTIAL          01360003
*       IKJEBEWS             -WRITE SEQUENTIAL RECORDS                  01370003
*                                                                       01380003
*INPUT -- FOR INPUT INTO THE LOAD MODULE IKJEBEAA, SEE THE              01390003
*   PROLOGUE DESCRIPTIONS UNDER THE FIVE ROUTINES LISTED                01400003
*   AS ENTRY POINTS ABOVE.                                              01410003
*                                                                       01420003
*OUTPUT -- FOR OUTPUT OF THE LOAD MODULE IKJEBEAA, SEE THE              01430003
*   PROLOGUE DESCRIPTIONS UNDER THE FIVE ROUTINES LISTED                01440003
*   AS ENTRY POINTS ABOVE.                                              01450003
*                                                                       01460003
*EXTERNAL REFERENCES --  THIS FIRST CSECT, IKJEBEAA, CONTAINS         * 01470003
*   VCONS FOR ALL THE ROUTINES IN LOAD MODULE IKJEBEAA.               * 01480003
*                                                                     * 01490003
*EXITS,NORMAL -- SEE EACH INDIVIDUAL ROUTINE PROLOGUE                 * 01500003
*                                                                     * 01510003
*EXITS,ERROR -- SEE EACH INDIVIDUAL ROUTINE PROLOGUE                  * 01520003
*                                                                     * 01530003
*TABLES-                                                              * 01540003
*   'VECTABLE' IS A DSECT THAT DESCRIBES THIS VECTOR TABLE AND IS     * 01550003
*   USED IN THE FOLLOWING ADDITIONAL MODULES-                         * 01560003
*       IKJEBEUI             -UTILITY INITIALIZATION                  * 01570003
*       IKJEBEUT             -UTILITY ACCESSING                       * 01580003
*                                                                     * 01590003
*   RECORD FORMAT-                                                    * 01600003
*        ********************************************************     * 01610003
*        *        *    *    *                                   *     * 01620003
*        *  KEY   * LL * 00 *    DATA                           *     * 01630003
*        *        *    *    *                                   *     * 01640003
*        ********************************************************     * 01650003
*                                                                     * 01660003
*          WHERE-                                                     * 01670003
*            KEY-   IS A 4 BYTE BINARY FIELD DENOTING THE             * 01680003
*                   LOGICAL POSITION OF THE RECORD IN THE DATA SET.   * 01690003
*                                                                     * 01700003
*            LL-    IS A 2 BYTE LENGTH FIELD IN BINARY AND IS THE     * 01710003
*                   TOTAL LENGTH OF THE RECORD, EXCLUDING THE 'KEY'   * 01720003
*                   FIELD.                                            * 01730003
*                                                                     * 01740003
*            00-    IS A 2 BYTE FIELD CONTAINING BINARY ZERO.         * 01750003
*                                                                     * 01760003
*            DATA-  A 1 TO 251 BYTE FIELD THAT IS NOT ACCESSED BY     * 01770003
*                   THESE ROUTINES AND CAN BE IN ANY DATA FORMAT      * 01780003
*                   REPRESENTATION.                                   * 01790003
*                                                                     * 01800003
*   BLOCK FORMATS-                                                    * 01810003
*                                                                     * 01820003
*        DATA BLOCKS-  DESCRIBED IN DSECT 'BUFFER', STARTS AT         * 01830003
*                      LABEL 'DATA'.                                  * 01840003
*                                                                     * 01850003
*        DIRECTORY BLOCK - DESCRIBED IN DSECT 'BUFFER', STARTS AT     * 01860003
*                      LABEL 'NLEV'                                   * 01870003
*                                                                     * 01880003
*ATTRIBUTES- REFRESHABLE,ENABLED,NON-PRIVILEGED                       * 01890003
*                                                                     * 01900003
*NOTES -- THE VCONS ARE ORDER-DEPENDENT BECAUSE THEY ARE MAPPED       * 01910003
*   BY THE DSECT 'VECTABLE'                                           * 01920003
*                                                                     * 01930003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 01940003
*                                                                     * 01950003
*********************************************************************** 01960003
         EJECT                                                          01970003
         SPACE 2                                                        01980003
*   THIS CSECT MUST BE THE FIRST IN THE LOAD MODULE.                  * 01990003
*   THE ENTRIES BELOW ARE ORDER DEPENDENT AND CONTAIN                   02000003
*     THE ADDRESSES FOR THE FOLLOWING ROUTINES                          02010003
         SPACE 2                                                        02020003
         DC    V(IKJEBEAD)             ADD-A-BLOCK                      02030003
         DC    V(IKJEBEAS)             BUFFER ASSIGNMENT                02040003
         DC    V(IKJEBEDL)             REMOVE A RECORD                  02050003
         DC    V(IKJEBEDR)             DELETE A RECORD                  02060003
         DC    V(IKJEBEDS)             DIRECTORY SEARCH                 02070003
         DC    V(IKJEBEDU)             DIRECTORY UPDATE                 02080003
         DC    V(IKJEBELO)             FIND A RECORD                    02090003
         DC    V(IKJEBEMV)             MOVE DATA                        02100003
         DC    V(IKJEBERB)             READ A BLOCK                     02110003
         DC    V(IKJEBERR)             READ A RECORD                    02120003
         DC    V(IKJEBEWA)             WAIT ON I/O                      02130003
         DC    V(IKJEBEWB)             WRITE A BLOCK                    02140003
         DC    V(IKJEBEWP)             PURGE WRITE BUFFERS              02150003
         DC    V(IKJEBEWR)             WRITE A RECORD                   02160003
         DC    V(IKJEBEWS)             WRITE SEQUENTIAL                 02170003
         DC    V(IKJEBESY)             SYNAD ROUTINE                    02180003
 TITLE 'EDIT COMMAND ACCESS METHOD --ADD A BLOCK ROUTINE ---IKJEBEAD'   02190003
*********************************************************************** 02200003
*                                                                     * 02210003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                     * 02220003
*                                                                     * 02230003
*FUNCTION-  -THIS ROUTINE IS USED WHENEVER A NEW BLOCK IS ADDED       * 02240003
*   TO THE UTILITY DATA SET. IF THERE ARE ANY EMPTY BLOCKS IN THE     * 02250003
*   DATA SET, THEY WILL BE RE-USED FIRST. ASSIGNING AN EMPTY BLOCK    * 02260003
*   CONSISTS OF REMOVING IT FROM THE EMPTY BLOCK QUEUE. THIS UNCHAIN- * 02270003
*   ING PROCESS CONSISTS OF PICKING UP THE TTR OF THE FIRST BLOCK ON  * 02280003
*   THE QUEUE FROM THE WORKAREA. THIS BLOCK IS READ IN AND IF ANOTHER * 02290003
*   BLOCK IS CHAINED TO THAT BLOCK, ITS TTR POINTER IS STORED IN THE  * 02300003
*   WORKAREA. WHEN THE LAST BLOCK IS USED, THE QUEUE POINTER (TTR)    * 02310003
*   IS SET TO ZERO.                                                   * 02320003
*        IF THERE ARE NO EMPTY BLOCKS, A BUFFER IS ASSIGNED BY THE    * 02330003
*   BUFFER ASSIGNMENT ROUTINE, IKJEBEAS. THIS EMPTY BUFFER IS         * 02340003
*   USED TO INITIATE A WRITE OPERATION IN ORDER TO FORMAT THE NEW     * 02350003
*   BLOCK IN THE DATA SET.                                            * 02360003
*        THE BUFFER ADDRESS FOR THE ASSIGNED BLOCK IS PASSED BACK     * 02370003
*   IN THE INPUT PARM LIST                                            * 02380003
*                                                                     * 02390003
*                                                                       02400003
*ENTRY POINT- AT IKJEBEAD VIA A CALL FROM-                              02410003
*       IKJEBEWR             -THE WRITE A RECORD ROUTINE              * 02420003
*                                                                     * 02430003
*INPUT- REGISTER ONE POINTS TO A TWO WORD PARAMETER LIST              * 02440003
*   WORD1  -CONTAINS ADDRESS OF THE UTILITY WORKAREA                  * 02450003
*   WORD2  -NOT USED ON INPUT                                         * 02460003
*                                                                     * 02470003
*OUTPUT- REGISTERS AS DESCRIBED UNDER 'EXIT' BELOW                    * 02480003
*   WORD2 OF THE INPUT PARM LIST CONTAINS THE ADDRESS OF THE NEW      * 02490003
*     BUFFER AND BLOCK.                                               * 02500003
*   IF THERE WERE ANY EMPTY BLOCKS, IT REMOVES THE FIRST ONE ON THE   * 02510003
*     QUEUE.                                                          * 02520003
*                                                                     * 02530003
*EXTERNAL REFERENCES --                                               * 02540003
*       IKJEBERB            -READS IN EMPTY BLOCKS                    * 02550003
*       IKJEBEAS            -ASSIGNS A NEW BUFFER                     * 02560003
*       IKJEBEWB            -FORMATS NEW BLOCK                        * 02570003
*       IKJEBEWA            -WAITS ON I/O                             * 02580003
*                                                                     * 02590003
*EXITS,NORMAL --                                                      * 02600003
*   A RETURN CODE OF 0 IN REGISTER 15                                 * 02610003
*   BUFFER ADDRESS IN WORD2 OF PASSED PARAMETER LIST                  * 02620003
*                                                                     * 02630003
*EXITS,ERROR --                                                       * 02640003
*   A RETURN CODE OF 12 IN REGISTER 15  FOR I/O ERRORS                * 02650003
*                                                                     * 02660003
*TABLES/WORKAREA --                                                   * 02670003
*   DEPENDENT ON THE EMPTY BLOCK POINTER IN THE WORKAREA              * 02680003
*   DEPENDENT ON THE TABLE OF ROUTINE ADDRESSES FOR THE ABOVE         * 02690003
*     DESCRIBED EXTERNAL ROUTINES                                     * 02700003
*                                                                     * 02710003
*ATTRIBUTES- REFRESHABLE, ENABLED, NON-PRIVILEGED                     * 02720003
*                                                                     * 02730003
*NOTES -- REGISTER CONVENTIONS ARE AS FOLLOWS-                        * 02740003
*       BASEREG              -BASE REGISTER                           * 02750003
*       DATAREG              -WORK AREA ADDRESSING                    * 02760003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 02770003
*       WORK6                -BUFFER ADDRESSING                       * 02780003
*       WORK7                -BLOCK ADDRESSING                          02790003
*                                                                     * 02800003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 02810003
*                                                                     * 02820003
*********************************************************************** 02830003
         SPACE 2                                                        02840003
IKJEBEAD CSECT                                                          02850003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          02860003
         SAVE  (14,12),T,*                                              02870003
         LA    SAVEREG,SAVEL(SAVEREG)  STEP TO NEXT SAVEAREA            02880003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              02890003
         USING IKJEBEAD,BASEREG                                         02900003
         L     DATAREG,WORD1(PARMREG1) WORKAREA ADDRESS                 02910003
         USING UTILWORK,DATAREG                                         02920003
         L     COMMREG,VTABLE          TABLE OF ROUTINE ADDRESSES       02930003
         USING VECTABLE,COMMREG                                         02940003
         SPACE 2                                                        02950003
*   IF THERE ARE ANY EMPTY BLOCKS, USE THE FIRST OR ONLY IN CHAIN       02960003
         LR    WORK2,PARMREG1          SAVE INPUT PARM LIST ADDRESS     02970003
         OC    DCBEBQX(L4),DCBEBQX     ARE THERE ANY EMPTY BLOCKS       02980003
         BNZ   AD1                     YES-                             02989003
         L     ENTRY,AS                ENTRY POINT ADDRESS              02998003
         CALL  (15)                    ASSIGN A BUFFER                  03007003
         LTR   RETCDREG,RETCDREG       ANY I/O ERRORS                   03016003
         BNZ   AD6                     YES                              03025003
         L     WORK6,L4(PARMREG1)      ASSIGNED BUFFER ADDRESS          03034003
         USING BUFFER,WORK6                                             03043003
         SPACE 2                                                        03060003
*   INITIATE THE WRITE OF THE NEW BLOCK HERE                            03070003
         OI    BUFSTATS,NEWBLK         INDICATE NEWLY ASSIGNED BLOCK    03080003
         L     ENTRY,WB                ENTRY POINT ADDRESS              03090003
         CALL  (15)                    FORMAT THE NEW BLOCK             03100003
         LTR   RETCDREG,RETCDREG       ANY I/O ERRORS                   03110003
         BNZ   AD6                     YES--RETURN                      03120003
         ST    WORK6,WORD2(PARMREG1)   BUFFER ADDRESS TO PARM LIST      03130003
         L     ENTRY,WA                ENTRY POINT ADDRESS              03140003
         CALL  (15)                    WAIT FOR THE I/O                 03150003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       03160003
         BNZ   AD6                     YES-RETURN                       03170003
         SPACE 2                                                        03180003
*   EXIT TO CALLING PROGRAM HERE                                        03190003
AD50     SR    RETCDREG,RETCDREG       SET RETURN CODE                  03200003
AD6      EQU   *                       ERROR RETURNS HERE               03210003
AD5      L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    03220003
         RETURN (14,12),T,RC=(15)      RESTORE THE REGISTERS            03230003
         SPACE 2                                                        03240003
*   EMPTY BLOCK PROCESSING HANDLED HERE                                 03250003
AD1      MVC   PARM2(L4),DCBEBQX       TTR OF FIRST EMPTY BLOCK         03260003
         L     ENTRY,RB                ENTRY POINT ADDRESS              03270003
         CALL  (15)                    READ IN THE EMPTY BLOCK          03280003
         LTR   RETCDREG,RETCDREG       SUCCESSFUL                       03290003
         BNZ   AD6                     NO--TERMINATE                    03300003
AD4      L     WORK6,WORD2(PARMREG1)   BUFFER ADDRESS                   03310003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    03320003
         USING DATA,WORK7              BLOCK ADDRESSABILITY             03330003
         MVC   DCBEBQX(TTR),EBTTR      TTR OF NEXT EMPTY BLOCK, IF ANY  03340003
         MVI   BUFSTATS,ZERO           CLEAR BUFFER STATUS FLAGS        03350003
         B     AD50                    EXIT SUCCESSFULLY                03360003
         SPACE                                                          03370003
         DROP  BASEREG,DATAREG,COMMREG,WORK6,WORK7                      03380003
 TITLE 'EDIT COMMAND ACCESS METHOD  -BUFFER ASSIGNMENT  ---IKJEBEAS'    03390003
*********************************************************************** 03400003
*                                                                     * 03410003
*                                                                     * 03420003
*FUNCTION --  THIS ROUTINE ASSIGNS A BUFFER FOR A GIVEN        *        03430003
*   REQUEST. BUFFERS ARE ASSIGNED BY INSPECTING THE BUFFER     *        03440003
*   CHAIN.  EACH BUFFER IS INTERROGATED TO SEE IF IT IS                 03450003
*   AVAILABLE, I.E. NEITHER THE WAIT, UPDATE, OR BLOCK-                 03460003
*   IN-BUFFER FLAGS ARE ON. THE FIRST FOUND AVAILABLE                   03470003
*   BUFFER IS THEN ASSIGNED TO FULFILL THE REQUEST.            *        03480003
*       IN THE EVENT THAT NO BUFFERS ARE AVAILABLE, AN ATTEMPT *        03490003
*   WILL BE MADE TO FREE-UP BUFFERS, BY EITHER WAITING FOR     *        03500003
*   BUFFERS THAT HAVE AN I/O OPERATION SCHEDULED WHICH HAS     *        03510003
*   NOT YET BEEN WAITED UPON,OR WRITING BACK BUFFERS THAT HAVE *        03520003
*   BEEN UPDATED BUT HAVE NOT BEEN WRITTEN BACK TO DIRECT-     *        03530003
*   ACCESSS.                                                   *        03540003
*                                                                     * 03550003
*ENTRY POINT --  AT IKJEBEAS VIA A CALL FROM EITHER-                  * 03560003
*       IKJEBEAD             -ADD A BLOCK ROUTINE                     * 03570003
*       IKJEBERB             -READ A BLOCK ROUTINE                    * 03580003
*                                                                     * 03590003
*INPUT --  REGISTER 1 POINTS TO A TWO WORD PARM LIST-                 * 03600003
*       WORD1-   -ADDRESS OF WORKAREA//DCB                            * 03610003
*       WORD2-   -NOT USED ON INPUT                                   * 03620003
*                                                                     * 03630003
*OUTPUT --  THE SECOND WORD OF THE INPUT PARM LIST CONTAINS THE       * 03640003
*   ADDRESS OF THE ASSIGNED BUFFER.                                   * 03650003
*   THE REGISTERS ARE AS DESCRIBED UNDER 'EXIT' BELOW.                * 03660003
*                                                                     * 03670003
*EXTERNAL REFERENCES --                                               * 03680003
*       IKJEBEWA             -WAITS ON I/O REQUESTS                   * 03690003
*       IKJEBEWB             -WRITE OUT UPDATED BLOCKS                * 03700003
*                                                                     * 03710003
*EXITS,NORMAL --  REGISTER 15 CONTAINS A RETURN CODE OF 0.            * 03720003
*   WORD2 OF INPUT PARM LIST CONTAINS THE BUFFER ADDRESS              * 03730003
*                                                                     * 03740003
*EXITS,ERROR -- A RETURN CODE OF 12 IN REGISTER 15 FOR I/O ERRORS     * 03750003
*                                                                     * 03760003
*TABLES/WORK AREAS --                                                 * 03770003
*       DEPENDENT ON THE WORKAREA, 'UTILWORK'.                        * 03780003
*       DEPENDENT ON THE BUFFER DESCRIPTION.                          * 03790003
*       DEPENDENT ON THE VECTOR TABLE FOR EXTERNAL REFERENCES         * 03800003
*                                                                     * 03810003
*ATTRIBUTES -- REFERESHABLE, NON-PRIVILEGED,  ENABLED                 * 03820003
*                                                                     * 03830003
*NOTE -- THE REGISTER CONVENTIONS ARE AS FOLLOWS-                     * 03840003
*       BASEREG              -BASE REGISTER                           * 03850003
*       DATAREG              -WORK AREA ADDRESSING                    * 03860003
*       COMMREG              -VECTOR TABLE ADDRESS                    * 03870003
*       WORK6                -BUFFER ADDRESSING                       * 03880003
*                                                                     * 03890003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 03900003
*                                                                     * 03910003
*********************************************************************** 03920003
         SPACE 2                                                        03930003
IKJEBEAS CSECT                                                          03940003
         SPACE                                                          03950003
         SPACE                                                          03960003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          03970003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               03980003
         LA    SAVEREG,SAVEL(SAVEREG)  STEP TO NEXT SAVEAREA            03990003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              04000003
         USING IKJEBEAS,BASEREG                                         04010003
         L     DATAREG,WORD1(PARMREG1) WORKAREA ADDRESS                 04020003
         USING UTILWORK,DATAREG                                         04030003
         L     COMMREG,VTABLE          TABLE OF ROUTINE ADDRESSES       04040003
         USING VECTABLE,COMMREG                                         04050003
         LR    WORK2,PARMREG1          SAVE INPUT PARM ADDRESS          04060003
         SPACE 2                                                        04070003
*   LOOK FOR AN AVAILABLE BUFFER                                        04080003
* CHECK FOR UPDATED,WAITING,LLDB AND BLKINBUF HERE                      04090003
*                                                                       04100003
         USING BUFFER,WORK6                                             04110003
*                                                                       04120003
         LA    WORK3,UPDATED+WAITB+WAITXR+WAITXW+BLKINBUF               04130003
*                                      GET TEST BITS                    04140003
         BAL   RETREG,AS8              TEST BUFFER STATUS               04150003
*                                      IF A SUITABLE BUFFER WAS         04160003
*                                      FOUND,CONTROL IS RETURNED        04170003
*                                      HERE, ELSE THE NEXT              04180003
*                                      INSTRUCTION IS SKIPPED.          04190003
         B     AS2                     *B TO ASSIGN BUFFER              04200003
         SPACE 2                                                        04210003
* CHECK FOR A BUFFER THAT CAN BE WAITED UPON HERE                       04220003
         LA    WORK3,UPDATED+BLKINBUF  GET TEST BITS                    04230003
         BAL   RETREG,AS8              TEST BUFFER STATUS               04240003
*                                      IF A SUITABLE BUFFER HAS         04250003
*                                      BEEN FOUND,CONTROL IS            04260003
*                                      RETURNED HERE,ELSE THE           04270003
*                                      NEXT INSTRUCTION IS              04280003
*                                      SKIPPED.                         04290003
         B     AS3                     *B TO WAIT ON BUFFER             04300003
         SPACE 2                                                        04310003
*   FIND A BUFFER THAT CAN BE PURGED HERE                               04320003
         LA    WORK3,BLKINBUF          STATUS BITS                      04330003
         BAL   RETREG,AS8              FIND PURGE BUFFER                04340003
         B     AS4                     GO PURGE BUFFER                  04350003
         SPACE 2                                                        04360003
* PURGE BUFFER BY WRITING IT TO D-A HERE                                04370003
AS4      ST    WORK6,WORD2(WORK2)      STORE IN PARMLIST                04380003
         LR    PARMREG1,WORK2          ADDRESS LIST                     04390003
         L     ENTRY,WB                ENTRY POINT ADDRESS              04400003
         CALL  (15)                    WRITE OUT THIS BLOCK             04410003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       04420003
         BNZ   AS9                     YES-RETURN                       04430003
         SPACE 2                                                        04440003
*   WAIT FOR A BUFFER TO EMPTY BEFORE ASSIGNING IT                      04450003
AS3      ST    WORK6,WORD2(WORK2)      BUFFER ADDRESS TO LIST           04460003
         L     ENTRY,WA                ENTRY POINT ADDRESS              04470003
         CALL  (15)                    WAIT FOR THE I/O TO COMPLETE     04480003
         LTR   RETCDREG,RETCDREG       ANY I/O ERRORS                   04490003
         BNZ   AS9                     YES-RETURN                       04500003
         SPACE 2                                                        04510003
*   ASSIGN THE SELECTED BUFFER HERE                                     04520003
AS2      ST    WORK6,WORD2(PARMREG1)   BUFFER ADDRESS                   04530003
         SR    RETCDREG,RETCDREG       SET RETURN CODE = 0              04540003
AS9      EQU   *                       RETURN ON ERRORS HERE            04550003
AS11     L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    04560003
         RETURN (14,12),T,RC=(15)      RESTORE THE REGISTERS            04570003
         SPACE 2                                                        04580003
* SEARCH THE BUFFER CHAIN FOR A SUITABLE BUFFER HERE                    04590003
AS8      LH    WORK5,DCBBFNO           TOTAL BUFFERS                    04600003
         LA    WORK6,BUF1              ADDRESS OF FIRST BUF.            04610003
AS81     XR    WORK4,WORK4             CLEAR                            04620003
         IC    WORK4,BUFSTATS          GET BUFFER STATUS                04630003
         NR    WORK4,WORK3             RELEVANT FLAGS ON                04640003
         BZ    X0(,RETREG)             BUFFER IS OK TO USE              04650003
         LA    WORK6,L'BUF1(,WORK6)    NEXT BUFFER ADDRESS              04660003
         BCT   WORK5,AS81              REPEAT FOR ALL BUFFERS           04670003
         B     FOUR(,RETREG)           NONE FOUND-RETURN                04680003
         SPACE 2                                                        04690003
         DROP  BASEREG,DATAREG,COMMREG,WORK6                            04700003
 TITLE 'EDIT COMMAND ACCESS METHOD --RECORD REMOVAL ---IKJEBEDL'        04710003
*********************************************************************** 04720003
*                                                                     * 04730003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                     * 04740003
*                                                                     * 04750003
*FUNCTION --  THIS ROUTINE DELETES THE RECORD INDICATED BY THE        * 04760003
*   'BUFREF' FIELD IN THE SELECTED BUFFER.  DELETION OF A RECORD      * 04770003
*   INVOLVES REMOVING THE LOCATOR FOR THAT RECORD, ADJUSTING THE      * 04780003
*   POSITION OF OTHER LOCATORS IF NECESSARY, UPDATING THE RECORD      * 04790003
*   COUNT, AND MODIFYING THE SPACE CONTROL FIELDS FOR THAT BLOCK.     * 04800003
*       IF THE LAST RECORD OF A DATA BLOCK IS DELETED                   04810003
*   THE DIRECTORY WILL BE UPDATED.                                      04820003
*        ANYTIME A DELETION RESULTS IN AN EMPTY BLOCK, THAT BLOCK     * 04830003
*   WILL BE PLACED IN THE EMPTY BLOCK QUEUE.                          * 04840003
*                                                                     * 04850003
*ENTRY POINT --                                                       * 04860003
*       IKJEBEDL   -VIA A CALL FROM EITHER IKJEBEDR OR IKJEBEWR       * 04870003
*                                                                     * 04880003
*INPUT --  REGISTER ONE POINTS TO A TWO WORD PARAMETER LIST-          * 04890003
*       WORD1-     POINTS TO THE WORKAREA, UTILWORK.                  * 04900003
*       WORD2-     POINTS TO THE SELECTED BUFFER.                     * 04910003
*                                                                     * 04920003
*OUTPUT --  THE RECORD INDICATED BY THE BUFREF FIELD HAS BEEN         * 04930003
*   REMOVED FROM THE BUFFER AND THE DATA BLOCK CONTROL FIELDS         * 04940003
*   UPDATED.  THE DIRECTORY IS UPDATED IF THE LAST LOGICAL RECORD     * 04950003
*   IS DELETED.  THE EMPTY BLOCK QUEUE TAKES ON A NEW ENTRY IF        * 04960003
*   AN EMPTY DATA BLOCK OR DIRECTORY BLOCK RESULTS BECAUSE OF THE     * 04970003
*   RECORD DELETION.                                                  * 04980003
*                                                                     * 04990003
*EXTERNAL REFERENCES --                                               * 05000003
*       IKJEBEMV             -MOVES INDICES OR LOCATORS               * 05010003
*       IKJEBEDU             -UPDATES THE DIRECTORY                     05020003
*       IKJEBEWA             -WAITS ON I/O                              05030003
*       IKJEBEWB             -WRITE OUT BLOCKS                        * 05040003
*                                                                     * 05050003
*EXITS,NORMAL -- RETURNS TO THE CALLING ROUTINE//RETURN CODES-        * 05060003
*       RETURN CODE =0   NORMAL DELETION, OUTPUT AS ABOVE.            * 05070003
*       RETURN CODE =8   EMPTY DATA SET,  OUTPUT AS ABOVE.            * 05080003
*                                                                     * 05090003
*EXITS,ERROR --  RETURNS TO CALLING ROUTINE -                         * 05100003
*       RETURN CODE = 12 I/O ERROR ENCOUNTERED.                       * 05110003
*                                                                     * 05120003
*TABLES/WORKAREAS --                                                  * 05130003
*       DEPENDENT ON EMPTY BLOCK QUEUE POINTER IN WORKAREA.           * 05140003
*       DEPENDENT ON 'BUFFER' DSECT DESCRIPTION                       * 05150003
*                                                                     * 05160003
*ATTRIBUTES -- REFRESHABLE, ENABLED, NON-PRIVILEGED                   * 05170003
*                                                                     * 05180003
*NOTES --  REGISTER CONVENTIONS ARE AS FOLLOWS-                       * 05190003
*       BASEREG              -BASE REGISTER                           * 05200003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 05210003
*       DATAREG              -WORK AREA ADDRESSING                    * 05220003
*       WORK6                -BUFFER ADDRESSING                       * 05230003
*       WORK7                -BLOCK ADDRESSING                          05240003
*       WORK2,WORK3          -WORK REGISTERS                          * 05250003
*       WORK4,WORK5          -WORK REGISTERS                          * 05260003
*                                                                     * 05270003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 05280003
*                                                                     * 05290003
*********************************************************************** 05300003
         SPACE 2                                                        05310003
IKJEBEDL CSECT                                                          05320003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          05330003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               05340003
         LA    SAVEREG,SAVEL(SAVEREG)  STEP TO NEXT SAVEAREA            05350003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              05360003
         USING IKJEBEDL,BASEREG                                         05370003
         L     DATAREG,WORD1(PARMREG1) WORKAREA ADDRESS                 05380003
         USING UTILWORK,DATAREG                                         05390003
         L     COMMREG,VTABLE          TABLE OF ROUTINE ADDRESSES       05400003
         USING VECTABLE,COMMREG                                         05410003
         SPACE 2                                                        05420003
*   INDICATE BUFFER MODIFIED AND DECREMENT THE RECORD COUNT             05430003
         L     WORK6,WORD2(PARMREG1)   BUFFER ADDRESS                   05440003
         USING BUFFER,WORK6                                             05450003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    05460003
         USING DATA,WORK7              BLOCK ADDRESSABILITY             05470003
         OI    BUFSTATS,UPDATED        INDICATE MODIFICATION TO BUFFER  05480003
         LH    WORK4,NUMREC            NUMBER OF RECORDS IN BLOCK       05490003
         BCTR  WORK4,ZERO              REDUCE RECORD COUNT BY ONE       05500003
         LTR   WORK4,WORK4             THIS AN EMPTY BLOCK NOW          05510003
         BNP   DL3                     YES-GO PUT IN EMPTY BLOCK QUEUE  05520003
         STH   WORK4,NUMREC            SAVE NEW RECORD COUNT            05530003
         SPACE 2                                                        05540003
*   OBTAIN CONTENTS OF LOCATOR AND LENGTH OF RECORD                     05550003
         SLA   WORK4,ONE               DOUBLE FOR INCREMENT TO LAST     05560003
         LA    PARMREG0,LOCATORS(WORK4) ADDRESS OF LAST LOCATOR         05570003
         L     WORK4,BUFREF            RECORD LOCATOR ADDRESS           05580003
         LH    WORK2,X0(WORK4)         CONTENTS OF LOCATOR              05590003
         LA    WORK5,DATA(WORK2)       RECORD ADDRESS                   05600003
         MVC   TEMP1(L2),KEYL(WORK5)   LENGTH OF RECORD                 05610003
         LH    WORK3,TEMP1             LENGTH OF RECORD                 05620003
         LA    WORK3,KEYL(WORK3)       ACCOUNT FOR KEY LENGTH           05630003
         SPACE 2                                                        05640003
*   IS THIS THE FIRST PHYSICAL RECORD                                   05650003
         CH    WORK2,DATASTRT          CHECK FOR FIRST PHYSICAL RECORD  05660003
         BE    DL4                     YES                              05670003
         AH    WORK3,RECVSP            OLD USABLE SPACE PLUS NEW        05680003
         STH   WORK3,RECVSP            SAVE FOR FUTURE USE              05690003
         B     DL1                     GO CHECK IF LAST LOGICAL         05700003
         SPACE 2                                                        05710003
*   IS THIS THE LAST LOGICAL RECORD                                     05720003
DL4      AH    WORK3,DATASTRT          OFFSET TO 1ST RECORD PLUS LENGTH 05730003
         STH   WORK3,DATASTRT            OF DELETED RECORD              05740003
DL1      SR    PARMREG0,WORK4          IS DELETED LOCATOR THE LAST      05750003
         BZ    DL9                     YES-MUST CHECK DIRECTORY         05760003
*                                      NO--REGISTER (PARMREG0) NOW      05770003
*                                      CONTAINS THE NO. OF BYTES TO     05780003
*                                      MOVE THE LOCATORS                05790003
         SPACE 2                                                        05800003
*   ADJUST LOCATORS TO FILL EMPTY POSITION                              05810003
         ST    WORK4,TEMP2             DELETED LOCATOR/MOVE-TO ADDRESS  05820003
         LA    WORK4,LOCL(WORK4)       ADDRESS OF NEXT LOCATOR          05830003
         ST    WORK4,TEMP1             MOVE FROM ADDRESS                05840003
         LA    PARMREG1,TEMP1          PARM LIST ADDRESS                05850003
         L     ENTRY,MV                ENTRY POINT ADDRESS              05860003
         CALL  (15)                    MOVE THE LOCATORS DOWN           05870003
         SPACE 2                                                        05880003
*   SET RETURN CODE AND EXIT HERE                                       05890003
DL2      SR    RETCDREG,RETCDREG       SET RETURN CODE = 0.             05900003
         L     WORK4,DCBRECNO          GET PREVIOUS RECORD COUNT        05910003
         BCTR  WORK4,ZERO              LOWER RECORD COUNT BY ONE        05920003
         ST    WORK4,DCBRECNO          STORE NEW COUNT                  05930003
DL15     EQU   *                       LEAVE RETURN CODE AS IS          05940003
DL7      L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    05950003
         RETURN (14,12),T,RC=(15)      RESTORE THE REGISTERS            05960003
         SPACE 2                                                        05970003
*   PUT DATA BLOCKS IN THE EMPTY BLOCK QUEUE HERE                       05980003
DL3      MVC   EBTTR(L4),DCBEBQX       PREVIOUS EB TTR IF ANY, ELSE 0   05990003
         MVC   DCBEBQX(L4),BUFTTR      THIS NEW EB TTR FIRST IN CHAIN   06000003
         L     ENTRY,WB                ENTRY POINT ADDRESS              06010003
         CALL  (15)                    WRITE OUT THE EMPTY BLOCK        06020003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       06030003
         BNZ   DL15                    YES-RETURN                       06040003
         SPACE 2                                                        06050003
*   WAIT FOR THE I/O TO COMPLETE HERE                                   06060003
         L     ENTRY,WA                ENTRY POINT                      06070003
         CALL  (15)                    WAIT FOR I/O                     06080003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       06090003
         BNZ   DL15                    YES-RETURN                       06100003
         SPACE 2                                                        06110003
*   NEED TO UPDATE DIRECTORY VIA AN ENTRY REMOVAL                       06120003
         LA    WORK3,PRIMEKEY          KEY ADDRESS                      06130003
         ST    WORK3,PARM2             TO PARM LIST                     06140003
         ST    DATAREG,PARM1           WORKAREA ADDRESS                 06150003
         MVC   PARM3,BUFTTR            TTR TO LIST                      06160003
         LA    PARMREG1,PARM1          PARM LIST ADDR.                  06170003
         MVI   DIRCODE(PARMREG1),DELKEY DELETE OPTION                   06180003
         L     ENTRY,DU                ROUTINE ADDRESS                  06190003
         CALL  (15)                    UPDATE DIRECTORY                 06200003
         B     DL2                     RETURN                           06210003
         SPACE 2                                                        06220003
*   SAVE KEY NEW-LAST RECORD                                            06230003
DL9      BCTR  WORK4,ZERO              DECREMENT TO PREVIOUS LOCATOR    06240003
         BCTR  WORK4,ZERO              ADDRESS OF NEW LAST LOCATOR      06250003
         LH    WORK2,X0(WORK4)         CONTENTS OF THAT LOCATOR         06260003
         LA    WORK2,DATA(WORK2)       ADDRESS OF RECORD                06270003
         ST    WORK2,PARM2             KEY ADDR. TO LIST                06280003
         MVC   PARM3,BUFTTR            TTR TO LIST                      06290003
         ST    DATAREG,PARM1           WORKAREA ADDR.                   06300003
         LA    PARMREG1,PARM1          PARM LIST ADDR.                  06310003
         MVI   DIRCODE(PARMREG1),NEWKEY KEY ONLY OPTION                 06320003
         L     ENTRY,DU                ROUTINE ADDRESS                  06330003
         CALL  (15)                    UPDATE DIRECTORY                 06340003
         B     DL2                     RETURN                           06350003
         SPACE 2                                                        06360003
         DROP  BASEREG,COMMREG,DATAREG,WORK6,WORK7                      06370003
         TITLE 'EDIT COMMAND ACCESS METHOD -RECORD DELETE ---IKJEBEDR'  06380003
*********************************************************************** 06390003
*                                                                     * 06400003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                     * 06410003
*                                                                     * 06420003
*FUNCTION --  THIS ROUTINE IS USED TO DELETE THE CURRENT              * 06430003
*   REFERENCE RECORD.  IF A KEY IS SPECIFIED ON INPUT, IT REPLACES    * 06440003
*   THE REFERENCE (PRIMEKEY) BEFORE THE OPERATION TAKES PLACE. THE    * 06450003
*   RECORD LOCATING ROUTINE, IKJEBELO, IS USED TO FIND THE RECORD     * 06460003
*   AND IF IT EXISTS THE RECORD IS REMOVED FROM THE DATA SET BY THE   * 06470003
*   RECORD REMOVAL ROUTINE, IKJEBEDL.                                 * 06480003
*        IN THE EVENT THE RECORD DOES NOT EXIST OR AN ERROR IS        * 06490003
*   ENCOUNTERED, THE CURRENT REFERENCE FIELD (PRIMEKEY) IS RESET      * 06500003
*   TO ITS ORIGINAL VALUE.                                            * 06510003
*                                                                     * 06520003
*ENTRY POINT --  IKJEBEDR VIA A CALL FROM IKJEBEUT.                   * 06530003
*                                                                     * 06540003
*INPUT --  REGISTER 1 CONTAINS THE ADDRESS OF THE WORKAREA//DCB.      * 06550003
*          REGISTER 0 OPTIONALLY POINTS TO A KEY VALUE                * 06560003
*                                                                     * 06570003
*OUTPUT --  THE SPECIFIED RECORD HAS BEEN DELETED FROM THE DATA SET   * 06580003
*  OR A RETURN CODE IS PASSED BACK IF IT DOES NOT EXIST.              * 06590003
*   THE REGISTERS ARE DESCRIBED UNDER 'EXIT' BELOW.                   * 06600003
*                                                                     * 06610003
*EXTERNAL REFERENCES --                                               * 06620003
*       IKJEBELO             -FINDS THE SPECIFIED RECORD              * 06630003
*       IKJEBEDL             -DELETES THE SPECIFIED RECORD            * 06640003
*                                                                     * 06650003
*EXITS,NORMAL --   RETURNS TO THE CALLING ROUTINE.                    * 06660003
*       RETURN CODE = 0      -RECORD EXISTS, OUTPUT AS ABOVE.         * 06670003
*       RETURN CODE = 4      -RECORD DOES NOT EXIST.                  * 06680003
*                                                                     * 06690003
*EXITS,ERROR --    RETURNS TO THE CALLING ROUTINE.                    * 06700003
*       RETURN CODE = 12     -I/O ERROR                               * 06710003
*                                                                     * 06720003
*TABLES/WORKAREAS --                                                  * 06730003
*       DEPENDENT ON THE WORKAREA DESCRIPTION 'UTILWORK'.             * 06740003
*       DEPENDENT ON THE VECTOR TABLE, 'VECTABLE', FOR EXTERNAL       * 06750003
*         REFERENCES                                                  * 06760003
*                                                                     * 06770003
*ATTRIBUTES --  REFRESHABLE, NON-PRIVILEGED, ENABLED                  * 06780003
*                                                                     * 06790003
*NOTES  --  REGISTER CONVENTIONS ARE AS FOLLOWS                       * 06800003
*       BASEREG              -BASE REGISTER                           * 06810003
*       DATAREG              -WORK AREA ADDRESSING                    * 06820003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 06830003
*       WORK3,WORK6          -WORK REGISTERS                          * 06840003
*                                                                     * 06850003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 06860003
*                                                                     * 06870003
*********************************************************************** 06880003
         EJECT                                                          06890003
IKJEBEDR CSECT                                                          06900003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          06910003
         SAVE  (14,12),T,*                                              06920003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              06930003
         USING IKJEBEDR,BASEREG                                         06940003
         LR    DATAREG,PARMREG1        WORK AREA ADDRESS                06950003
         USING UTILWORK,DATAREG                                         06960003
         L     COMMREG,VTABLE          TABLE OF ROUTINE ADDRESSES       06970003
         USING VECTABLE,COMMREG                                         06980003
         LA    WORK6,SAVEAREA          NEW SAVE AREA                    06990003
         ST    SAVEREG,WORD2(WORK6)    OLD ADDRESS TO NEW               07000003
         ST    WORK6,WORD3(SAVEREG)    NEW ADDRESS TO OLD               07010003
         LR    SAVEREG,WORK6           NEW SAVE AREA                    07020003
         SPACE 2                                                        07030003
*   HANDLE ANY INPUT KEY HERE                                           07040003
         MVC   SAVEKEY(KEYL),PRIMEKEY  SAVE OLD KEY                     07050003
         LR    WORK3,PARMREG0          KEY ADDRESS, IF ANY.             07060003
         LA    WORK3,ZERO(WORK3)       CLEAR HIGH ORDER BYTE            07070003
         LTR   WORK3,WORK3             IS THERE A KEY SPECIFIED         07080003
         BZ    DR1                     NO--GO FIND OLD REFERENCE        07090003
         MVC   PRIMEKEY(KEYL),X0(WORK3) MOVE IN NEW KEY                 07100003
         SPACE 2                                                        07110003
*   FIND THE SPECIFIED RECORD                                           07120003
DR1      LA    PARMREG1,PARM1          PARAMETER LIST ADDRESS           07130003
         LA    DATAREG,X0(DATAREG)     SET OPTION CODE=0                07140003
         ST    DATAREG,PARM1           PARM LIST FOR LOCATE             07150003
         L     ENTRY,LO                ENTRY POINT ADDRESS              07160003
         CALL  (15)                    FIND THE RECORD                  07170003
         LTR   RETCDREG,RETCDREG       DOES THE RECORD EXIST            07180003
         BZ    DR2                     YES-GO DELETE IT.                07190003
         SPACE 2                                                        07200003
*   ENTER HERE FOR ERRORS OR RECORD DOES NOT EXIST                      07210003
DR70     MVC   PRIMEKEY(KEYL),SAVEKEY  RESET REFERENCE KEY              07220003
DR7      TM    DCBSTATS,ERROR          ANY I/O ERRORS                   07230003
         BO    DR5                     YES-RETURN                       07240003
         LA    RETCDREG,NRF            RETURN CODE FOR NO RECORD        07250003
         SPACE 2                                                        07260003
*   FINAL HOUSEKEEPING AND RETURN HERE                                  07270003
DR5      EQU   *                       RETURN ON ERROR HERE             07280003
DR50     L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA ADDRESS            07290003
         RETURN (14,12),T,RC=(15)      RESTORE THE REGISTERS            07300003
         SPACE 2                                                        07310003
*   IF THE RECORD EXISTS, USE THE RECORD REMOVAL ROUTINE                07320003
DR2      L     ENTRY,DL                ENTRY POINT ADDRESS              07330003
         CALL  (15)                    DELETE THE RECORD                07340003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       07350003
         BZ    DR50                    NO-RETURN TO CALLER              07360003
         CH    RETCDREG,DREMPTY        IS THE DATA SET NOW EMPTY        07370003
         BNE   DR70                    NO-GO CHECK ERROR CONDITIONS     07380003
         SR    RETCDREG,RETCDREG       SET RETURN CODE = 0              07390003
         B     DR50                    RETURN                           07400003
         SPACE                                                          07410003
         DROP  BASEREG,COMMREG,DATAREG                                  07420003
         SPACE                                                          07430003
*   CONSTANT AREA FOR RECORD DELETE ROUTINE                             07440003
DREMPTY  DC    H'8'                    RETURN CODE FOR EMPTY DATA SET   07450003
         TITLE 'EDIT COMMAND ACCESS METHOD -DIRECTORY SEARCH -IKJEBEDS' 07460003
*********************************************************************** 07470003
*                                                                     * 07480003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                     * 07490003
*                                                                     * 07500003
*FUNCTION --  THIS ROUTINE ATTEMPTS TO LOCATE A DIRECTORY INDEX       * 07510003
*   ENTRY GIVEN AN INPUT KEY VALUE.                                     07520003
*        IF THE 'BEGIN' OR 'END' OPTIONS ARE SPECIFIED, THIS ROUTINE  * 07530003
*   WILL LOCATE THE FIRST OR LAST ENTRY RESPECTIVELY. ANYTIME THE     * 07540003
*   CORRECT ENTRY IS FOUND, THE 'DBUFREF' FIELD WILL                    07550003
*   CONTAIN THE ADDRESS OF THE PROPER INDEX ENTRY AND A RETURN CODE   * 07560003
*   OF 0 IS PASSED BACK.                                              * 07570003
*        IF THE INPUT KEY DOES NOT FALL WITHIN THE DIRECTORY LIMITS,  * 07580003
*   A RETURN CODE OF 4 IS PASSED BACK.  A RETURN CODE OF 8 INDICATES  * 07590003
*   AN EMPTY DATA SET. IN BOTH OF THESE CASES, THE 'DBUFREF'            07600003
*   FIELD WILL POINT TO THE NEXT AVAILABLE INDEX ENTRY SLOT.            07610003
*                                                                     * 07620003
*ENTRY POINT --                                                       * 07630003
*       IKJEBEDS   VIA A CALL FROM IKJEBEDL(2), IKJEBEDU, IKJEBELO    * 07640003
*                                                                     * 07650003
*INPUT --  REGISTER 1 POINTS TO A TWO WORD PARAMETER LIST-            * 07660003
*       WORD1-   HIGH ORDER BYTE CONTAINS THE OPTION CODE             * 07670003
*                THREE LOW ORDER BYTES = ADDRESS OF WORKAREA          * 07680003
*       WORD2-   POINTS TO THE DESIRED KEY VALUE                      * 07690003
*                                                                     * 07700003
*OUTPUT --  WORD2 OF THE INPUT PARAMETER LIST WILL CONTAIN THE        * 07710003
*   ADDRESS OF THE LOCATED INDEX BUFFER.  THE BUFREF FIELD WILL       * 07720003
*   THEN POINT TO THE FOUND ENTRY OR THE NEXT AVAILABLE ENTRY         * 07730003
*   DEPENDING ON THE RETURN CODE. SEE 'EXIT' BELOW.                   * 07740003
*                                                                     * 07750003
*EXTERNAL REFERENCES --                                               * 07760003
*   NONE                                                                07770003
*                                                                     * 07780003
*EXITS,NORMAL --                                                      * 07790003
*       -ENTRY FOUND-   WORD2 OF THE INPUT LIST CONTAINS THE          * 07800003
*          SELECTED BUFFER ADDRESS.  RETURN CODE = 0.                 * 07810003
*       -DATA SET EMPTY-  WORD2 OF THE INPUT LIST CONTAINS THE        * 07820003
*          ADDRESS OF THE BUFFER WITH THE NEXT AVAILABLE SLOT.        * 07830003
*          RETURN CODE = 8.                                           * 07840003
*       -ENTRY NOT FOUND-  WORD2 OF THE INPUT LIST CONTAINS THE       * 07850003
*          ADDRESS OF THE BUFFER WITH THE NEXT AVAILABLE SLOT.        * 07860003
*          RETURN CODE = 4.                                           * 07870003
*                                                                     * 07880003
*EXITS,ERROR --                                                         07890003
*       NONE                                                            07900003
*                                                                     * 07910003
*TABLES/WORK AREAS --                                                 * 07920003
*       DEPENDENT ON THE VECTOR TABLE FOR CALL TO EXTERNAL ROUTINES   * 07930003
*       DEPENDENT ON THE BUFFER DESCRIPTION DSECT FOR DIRECTORY       * 07940003
*         BLOCK FORMAT                                                * 07950003
*                                                                     * 07960003
*ATTRIBUTES -- REFRESHABLE, ENABLED, NON-PRIVILEGED                   * 07970003
*                                                                     * 07980003
*NOTES --  REGISTER CONVENTIONS ARE AS FOLLOWS-                       * 07990003
*       BASEREG              -BASE REGISTER                           * 08000003
*       DATAREG              -WORK AREA ADDRESSING                    * 08010003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 08020003
*       WORK6                -DIRECTORY BLOCK BUFFER ADDRESSING       * 08030003
*       WORK7                -BLOCK ADDRESSING                          08040003
*       WORK2                -RETAIN INPUT PARM LIST POINTER          * 08050003
*       WORK3,WORK4,WORK5    -WORK REGISTERS                          * 08060003
*                                                                     * 08070003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 08080003
*                                                                     * 08090003
*********************************************************************** 08100003
         SPACE 2                                                        08110003
IKJEBEDS CSECT                         DIRECTORY SEARCH ROUTINE         08120003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          08130003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               08140003
         LA    SAVEREG,SAVEL(SAVEREG)  NEXT SAVE AREA                   08150003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              08160003
         USING IKJEBEDS,BASEREG        ADDRESSABILITY                   08170003
         L     DATAREG,WORD1(PARMREG1) WORKAREA                         08180003
         USING UTILWORK,DATAREG        ADDRESSABILITY                   08190003
         SPACE 2                                                        08200003
*   SAVE INPUT PARMS AND CHECK FOR EMPTY DATA SET                       08210003
         L     WORK2,WORD2(PARMREG1)   KEY VALUE POINTER                08220003
         MVC   TEMP3(KEYL),X0(WORK2)   INPUT KEY VALUE                  08230003
         L     WORK7,DBUFBLCK          BLOCK ADDRESS                    08240003
         USING DATA,WORK7              ADDRESSABILITY                   08250003
         OC    NUMINDEX,NUMINDEX       IS DSDB EMPTY                    08260003
         BZ    DS170                   YES-EXIT                         08270003
         SPACE 2                                                        08280003
*   DETERMINE THE INPUT OPTION HERE                                     08290003
         CLI   X0(PARMREG1),B          1ST ENTRY OPTION                 08300003
         BE    DS80                    YES-GO PROCESS                   08310003
         CLI   X0(PARMREG1),E          LAST ENTRY OPTION                08320003
         BE    DS100                   YES-GO PROCESS                   08330003
         CLI   X0(PARMREG1),P          PREVIOUS ENTRY OPTION            08340003
         BE    DS120                   YES-GO PROCESS                   08350003
         CLI   X0(PARMREG1),N          NEXT ENTRY OPTION                08360003
         BE    DS130                   YES-GO PROCESS                   08370003
         SPACE 2                                                        08380003
*   PROCESS THE 'CURRENT' (SPECIFIED) OPTION HERE                       08390003
DS60     BAL   LINK9,DS500             GET LAST ENTRY                   08400003
         CLC   TEMP3(KEYL),X0(WORK5)   WITHIN LIMITS?                   08410003
         BH    DS180                   NO-ENTRY NOT FOUND               08420003
DS70     LH    WORK2,NUMINDEX          NO. OF ENTRIES                   08430003
         CH    WORK2,DSENT             BELOW THRESHOLD                  08440003
         BL    DS62                    YES-DO SERIAL SEARCH             08450003
         SPACE 2                                                        08460003
*   INITIALIZE FOR THE BINARY SEARCH HERE                               08470003
*        REGISTER USAGE                                                 08480003
*              WORK2     NO. OF ENTRIES IN LOWER HALF                   08490003
*              WORK3     NO. OF ENTRIES IN UPPER HALF                   08500003
*              WORK4     LOW BOUNDARY ADDRESS                           08510003
*              WORK5     HIGH BOUNDARY ADDRESS                          08520003
*              WORK6     MIDPOINT COMPARISON ADDRESS                    08530003
DS72     LA    WORK4,INDICES           SET LOW PTR. TO FIRST            08540003
         SPACE 2                                                        08550003
*   COMPUTE NO. OF ENTRIES IN EACH HALF                                 08560003
DS74     LR    WORK3,WORK2             NO. OF ENTRIES TO CHECK          08570003
         LA    WORK3,ONE(WORK3)        PLUS ONE                         08580003
         SRL   WORK3,ONE               (N+1)/2=UPPER                    08590003
         SR    WORK2,WORK3             LOWER=TOTAL-UPPER                08600003
         SPACE 2                                                        08610003
*   COMPUTE THE POINT TO MAKE THE COMPARISON                            08620003
DS76     LR    PARMREG1,WORK2          #LOWER ENTRIES                   08630003
         BCTR  PARMREG1,ZERO           LESS ONE                         08640003
         LA    WORK9,KEYL+TTR          SIZE OF EACH ENTRY               08650003
         MR    WORK8,PARMREG1          OFFSET TO START TEST             08660003
         LA    WORK6,ZERO(WORK9,WORK4) COMPARE ADDR=LOW+OFFSET          08670003
         SPACE 2                                                        08680003
*   COMPARE INPUT KEY VERSUS SELECTED ENTRY KEY                         08690003
         CLC   TEMP3(KEYL),ZERO(WORK6) INPUT KEY VS. MIDPOINT           08700003
         BH    DS77                    BRANCH- HIGHER                   08710003
         SPACE 2                                                        08720003
*   IMPUT KEY IS LOW OR EQUAL                                           08730003
         CH    WORK2,DSONE             ONE ENTRY LEFT                   08740003
         LR    WORK5,WORK6             NEW HIGH OR FOUND ENTRY          08750003
         BNE   DS74                    BRANCH-MORE TO CHECK             08760003
         B     DS190                   ENTRY FOUND                      08770003
         SPACE 2                                                        08780003
*   INPUT KEY IS GREATER                                                08790003
DS77     CH    WORK3,DSONE             ONE ENTRY LEFT                   08800003
         BNE   DS78                    NO-BRANCH/CHECK MORE             08810003
         LA    WORK5,KEYL+TTR(WORK6)   SELECTED ENTRY ADDR.             08820003
         B     DS190                   FOUND ENTRY -EXIT                08830003
         SPACE 2                                                        08840003
*   DO SEARCH ON UPPER HALF                                             08850003
DS78     LR    WORK2,WORK3             # ENTRIES TO CHECK               08860003
         LA    WORK4,KEYL+TTR(WORK6)   NEW LOW ADDRESS                  08870003
         B     DS74                    REPEAT THE SEARCH                08880003
         SPACE 2                                                        08890003
*   DO A SERIAL SEARCH HERE                                             08900003
DS62     LA    WORK5,INDICES           1ST ENTRY ADDRESS                08910003
DS64     CLC   TEMP3(KEYL),X0(WORK5)   CORRECT ENTRY                    08920003
         BNH   DS190                   YES-EXIT                         08930003
         LA    WORK5,KEYL+TTR(WORK5)   NEXT ENTRY ADDRESS               08940003
         B     DS64                    REPEAT UNTIL FOUND               08950003
         SPACE 2                                                        08960003
*   PROCESS THE 'BEGIN' (FIRST) OPTION HERE                             08970003
DS80     LA    WORK5,INDICES           FIRST ENTRY ADDRESS              08980003
         B     DS190                   EXIT                             08990003
         SPACE 2                                                        09000003
*   PROCESS THE 'END' (LAST) OPTION HERE                                09010003
DS100    BAL   LINK9,DS500             LOCATE LAST ENTRY                09020003
         B     DS190                   EXIT                             09030003
         SPACE 2                                                        09040003
*   PROCESS THE 'PREVIOUS' OPTION HERE                                  09050003
DS120    BAL   LINK9,DS500             FIND LAST ENTRY                  09060003
         OC    TEMP3(KEYL),TEMP3       SPECIFIED KEY=0                  09070003
         BZ    DS180                   YES-ENTRY NOT FOUND              09080003
         CLC   TEMP3(KEYL),X0(WORK5)   KEY VS. ENTRY VALUE              09090003
         BH    DS190                   USE LAST ENTRY VALUE             09100003
DS124    LA    WORK5,INDICES           1ST ENTRY ADDRESS                09110003
         LA    WORK3,ONE               CONSTANT OF ONE                  09120003
DS128    CLC   TEMP3(KEYL),X0(WORK5)   KEY VS. ENTRY VALUE              09130003
         BNH   DS190                   ENTRY FOUND                      09140003
         MVC   TEMP1(KEYL),X0(WORK5)   ALIGNMENT                        09150003
         L     WORK4,TEMP3             INPUT KEY VALUE                  09160003
         S     WORK4,TEMP1             DIFFERENCE                       09170003
         CLR   WORK4,WORK3             IS DIFFERENCE ONE                09180003
         BE    DS190                   BRANCH-ENTRY FOUND               09190003
         LA    WORK5,KEYL+TTR(WORK5)   NEXT ENTRY ADDRESS               09200003
         B     DS128                   REPEAT UNTIL FOUND               09210003
         SPACE 2                                                        09220003
*   PROCESS THE 'NEXT' OPTION HERE --- FAST PATH                        09230003
DS130    L     WORK5,DBUFREF           LAST ENTRY ADDRESS               09240003
         CLC   TEMP3(KEYL),X0(WORK5)   INPUT KEY VS LAST                09250003
         BNL   DS135                   NOT CORRECT,CHECK FURTHER        09260003
         LR    WORK6,WORK5             SAVE CURRENT                     09270003
         LA    WORK3,INDICES           1ST ENTRY ADDRESS                09280003
         CR    WORK6,WORK3             AT 1ST ENTRY NOW                 09290003
         BNH   DS190                   YES-USE THIS                     09300003
         SH    WORK6,DSDIRSIZ          PREVIOUS ENTRY                   09310003
         CLC   TEMP3(KEYL),X0(WORK6)   KEY VS.PREVIOUS                  09320003
         BL    DS140                   TOO LOW-DO SEARCH                09330003
         B     DS190                   O.K.-USE ENTRY                   09340003
DS135    LA    WORK6,KEYL+TTR(WORK5)   NEXT ENTRY ADDRESS               09350003
         BAL   LINK9,DS500             LAST ENTRY ADDRESS               09360003
         CR    WORK6,WORK5             BEYOND LIMITS NOW?               09370003
         BH    DS180                   YES-ENTRY NOT FOUND              09380003
         LR    WORK5,WORK6             NEXT ENTRY ADDRESS               09390003
         CLC   TEMP3(KEYL),X0(WORK5)   KEY VS. NEXT                     09400003
         BL    DS190                   BRANCH-FOUND ENTRY               09410003
         SPACE 2                                                        09420003
*   PROCESS THE 'NEXT' OPTION HERE --- SLOW PATH                        09430003
DS140    BAL   LINK9,DS500             FIND LAST ENTRY                  09440003
         CLC   TEMP3(KEYL),X0(WORK5)   BEYOND LIMITS?                   09450003
         BNL   DS180                   ENTRY NOT FOUND                  09460003
         LR    WORK4,WORK5             LAST ENTRY ADDRESS               09470003
         LA    WORK3,INDICES           1ST ENTRY ADDRESS                09480003
DS144    SH    WORK4,DSDIRSIZ          PREVIOUS ENTRY ADDR.             09490003
         CLC   TEMP3(KEYL),X0(WORK4)   KEY GREATER PREVIOUS             09500003
         BNL   DS190                   YES-ENTRY FOUND                  09510003
         CR    WORK3,WORK4             AT 1ST ENTRY                     09520003
         BNL   DS148                   YES-USE FIRST ENTRY              09530003
         LR    WORK5,WORK4             LAST CHECKED/NEXT PASS           09540003
         B     DS144                   REPEAT UNTIL FOUND               09550003
DS148    LA    WORK5,INDICES           FIRST ENTRY ADDRESS              09560003
         B     DS190                   EXIT                             09570003
         SPACE 2                                                        09580003
*   DATA SET IS EMPTY                                                   09590003
DS170    LA    WORK5,INDICES           1ST ENTRY ADDRESS                09600003
         LA    RETCDREG,EMPTY          SET RETURN CODE                  09610003
         B     DS200                   GO TO EXIT CODE                  09620003
         SPACE 2                                                        09630003
*   ENTRY WAS NOT FOUND                                                 09640003
DS180    LA    RETCDREG,NRF            SET RETURN CODE                  09650003
         B     DS200                   GO TO EXIT CODE                  09660003
         SPACE 2                                                        09670003
*   NORMAL EXIT HERE                                                    09680003
DS190    SR    RETCDREG,RETCDREG       SET RETURN CODE                  09690003
         SPACE 2                                                        09700003
*   ALL EXITS THRU HERE                                                 09710003
DS200    ST    WORK5,DBUFREF           SELECTED ENTRY                   09720003
         SPACE 2                                                        09730003
*   ALL EXITS THRU HERE                                                 09740003
DS210    L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    09750003
         RETURN (14,12),T,RC=(15)      RESTORE THE REGISTERS            09760003
         SPACE 2                                                        09770003
*   FIND ADDRESS OF LAST ENTRY IN DIRECTORY BLOCK                       09780003
DS500    LH    WORK3,NUMINDEX          NO. OF ENTRIES                   09790003
         LA    WORK5,KEYL+TTR          SIZE OF EACH ENTRY               09800003
         BCTR  WORK3,ZERO              NUMBER LESS ONE                  09810003
         MR    WORK4,WORK3             NO. TIMES SIZE                   09820003
         LA    WORK5,INDICES(WORK5)    LAST ENTRY ADDRESS               09830003
         BR    LINK9                   RETURN                           09840003
         SPACE 2                                                        09850003
         DROP  BASEREG,DATAREG,WORK7   RELEASE                          09860003
         SPACE 2                                                        09870003
*   CONSTANT AREA FOR IKJEBEDS                                          09880003
DSONE    DC    H'1'                    CONSTANT OF ONE                  09890003
DSENT    DC    H'20'                   COMPARE THRESHOLD                09900003
DSDIRSIZ DC    H'7'                    LENGTH PER DIRECTORY ENTRY       09910003
 TITLE 'EDIT COMMAND ACCESS METHOD  -DIRECTORY UPDATE --- IKJEBEDU'     09920003
*********************************************************************** 09930003
*                                                                     * 09940003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                     * 09950003
*                                                                     * 09960003
*FUNCTION --  THIS ROUTINE PERFORMS THE FUNCTION OF UPDATING THE      * 09970003
*   DIRECTORY BLOCK(S) WHENEVER A NEW RECORD IS ADDED TO THE DATA     * 09980003
*   SET SUCH THAT IS AFFECTS THE INDICES.  THIS MAY INVOLVE           * 09990003
*   CREATING A NEW ENTRY OR MODIFYING AN EXISTING ONE.                * 10000003
*       THERE ARE THREE BASIC TYPES OF DIRECTORY OPERATIONS             10010003
*   AND THEY ARE INDICATED BY AN ENTRY CODE.  THEY ARE                  10020003
*   AS FOLLOWS:                                                         10030003
*                                                                       10040003
*       1.  A NEW ENTRY IS TO BE ADDED TO THE DIRECTORY.                10050003
*           IF THERE IS INSUFFICIENT SPACE, THE CURRENT                 10060003
*           DIRECTORY SIZE IS INCREMENTED BY THE BLOCKSIZE              10070003
*           OF THE UTILITY DATA SET.  THIS INVOLVES GETTING             10080003
*           A LARGER CORE AREA, MOVING THE OLD DIRECTORY TO             10090003
*           THE NEW AREA, AND RELEASING THE OLD SPACE.                  10100003
*                                                                       10110003
*       2.  AN ENTRY IS TO BE DELETED FROM THE DIRECTORY.               10120003
*           THIS INVOLVES REPOSITIONING THE OTHER ENTRIES               10130003
*           OR RECOGNIZING THAT THE DATA SET IS EMPTY.                  10140003
*                                                                       10150003
*       3.  MODIFICATION OF A CURRENT ENTRY.  THIS MEANS                10160003
*           A GIVEN ENTRY IS TO HAVE A NEW KEY VALUE                    10170003
*           ASSOCIATED WITH IT.                                         10180003
*                                                                       10190003
*                                                                     * 10200003
*ENTRY POINT --  AT IKJEBEDU VIA A CALL FROM IKJEBEWR                 * 10210003
*                                                                     * 10220003
*INPUT --  REGISTER ONE POINTS TO A THREE WORD PARAMETER LIST         * 10230003
*       WORD1-  ADDRESS OF THE WORKAREA                               * 10240003
*       WORD2-  ADDRESS OF THE NEW KEY VALUE                          * 10250003
*       WORD3-  TTR OF NEW BLOCK ENTRY AND OPTION CODE                  10260003
*               AS FOLLOWS:                                             10270003
*                 DELKEY(00)  DELETE ENTRY                              10280003
*                 NEWKEY(01)  ADD ENTRY                                 10290003
*                 ALLKEY(FF)  MODIFY ENTRY                              10300003
*                                                                     * 10310003
*OUTPUT -- THE NEW INPUT INDEX ENTRY (KEY+TTR) IS ADDED TO THE        * 10320003
*                                                                     * 10330003
*EXTERNAL REFERENCES --                                               * 10340003
*       IKJEBEDS             -SEARCHES THE DIRECTORY                  * 10350003
*       IKJEBEMV            -MOVES ENTRIES                              10360003
*       GETMAIN             -GETS A LARGER BUFFER                       10370003
*       FREEMAIN            -RELEASES OLD BUFFER                        10380003
*                                                                     * 10390003
*EXITS,NORMAL -- RETURNS TO CALLING ROUTINE WITH A RETURN CODE        * 10400003
*   OF ZERO.  OUTPUT AS ABOVE.                                        * 10410003
*                                                                     * 10420003
*EXITS,ERROR -- RETURNS TO CALLING ROUTINE -                   @ZA12679 10423003
*       RETURN CODE = 12 I/O ERROR ENCOUNTERED.                @ZA12679 10432003
*                                                                     * 10450003
*TABLES/WORKAREAS --                                                  * 10460003
*       DEPENDENT ON VECTOR TABLE FOR CALLS TO EXTERNAL ROUTINES      * 10470003
*       DEPENDENT ON BUFFER DESCRIPTION OF DIRECTORY BLOCKS           * 10480003
*                                                                     * 10490003
*ATTRIBUTES -- REFRESHABLE, ENABLED, NON-PRIVILEGED                   * 10500003
*                                                                     * 10510003
*NOTES --  THE REGISTER CONVENTIONS ARE AS FOLLOWS-                   * 10520003
*       BASEREG              -BASE REGISTER                           * 10530003
*       DATAREG              -WORK AREA ADDRESSING                    * 10540003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 10550003
*       WORK7                -NEW DIRECTORY BLOCK ADDRESSING          * 10560003
*       WORK2,WORK3          -WORK REGISTERS                          * 10570003
*       WORK5,WORK8          -WORK REGISTERS                          * 10580003
*                                                                     * 10590003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 10600003
*                                                                     * 10610003
*********************************************************************** 10620003
         SPACE 2                                                        10630003
IKJEBEDU CSECT                         DIRECTORY UPDATE ROUTINE         10640003
*   PERFORM THE INITIALIZATION OPERATIONS HER                           10650003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               10660003
         LA    SAVEREG,SAVEL(SAVEREG)  NEXT SAVE AREA                   10670003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              10680003
         USING IKJEBEDU,BASEREG        ADDRESSABILITY                   10690003
         L     DATAREG,WORD1(PARMREG1) WORKAREA ADDRESS                 10700003
         USING UTILWORK,DATAREG        ADDRESSABILITY                   10710003
         L     COMMREG,VTABLE          ROUTINE ADDRESSES                10720003
         USING VECTABLE,COMMREG        ADDRESSABILITY                   10730003
         SPACE 2                                                        10740003
*   SAVE THE INPUT PARAMETERS                                           10750003
         L     WORK2,WORD2(PARMREG1)   ADDRESS OF KEY                   10760003
         MVC   TEMP1(KEYL),X0(WORK2)   SAVE KEY VALUE                   10770003
         MVC   TEMP2(TTR),WORD3(PARMREG1) SAVE TTR VALUE                10780003
         L     WORK7,DBUFBLCK          BLOCK ADDRESS                    10790003
         USING DATA,WORK7              ADDRESSABILITY                   10800003
         SPACE 2                                                        10810003
*   DETERMINE THE TYPE OF UPDATE HERE                                   10820003
         CLI   DIRCODE(PARMREG1),DELKEY DELETE OPTION?                  10830003
         BE    DU300                   YES-GO PROCESS                   10840003
         CLI   DIRCODE(PARMREG1),NEWKEY KEY ONLY UPDATE?                10850003
         BE    DU200                   YES-GO PROCESS                   10860003
         SPACE 2                                                        10870003
*   PROCESS AS ENTIRE NEW ENTRY HERE                                    10880003
DU50     LH    WORK3,NUMINDEX          NO. OF ENTRIES                   10890003
         LA    WORK5,KEYL+TTR          SIZE OF EACH                     10900003
         LR    WORK8,WORK5             SAVE SIZE                        10910003
         MR    WORK4,WORK3             ENTRIES TIME SIZE                10920003
         LA    WORK5,INDICES(WORK5)    NEXT AVAILABLE SLOT              10930003
         SR    WORK4,WORK4             CLEAR WORKREG           @ZA12679 10940003
         ICM   WORK4,X3,DSDBSIZE       BLOCK SIZE              @ZA12679 10943003
         SH    WORK4,DUDIRSIZ          SIZE OF NEW ENTRY                10950003
         LA    WORK4,DATA(WORK4)       LAST POSSIBLE START              10960003
         CLR   WORK5,WORK4             IS THERE SPACE                   10970003
         BH    DU90                    NO--GO GET NEW BLOCK             10980003
         SPACE 2                                                        10990003
*   FIND CORRECT SLOT BY USING DIRECTORY SEARCH                         11000003
DU60     LA    WORK4,TEMP1             ADDRESS OF NEW KEY               11010003
         ST    WORK4,PARM2             TO PARM LIST                     11020003
         LA    PARMREG1,PARM1          PARM LIST ADDRESS                11030003
         L     ENTRY,DS                ROUTINE ADDRESS                  11040003
         CALL  (15)                    FIND CORRECT POSITION            11050003
         LA    WORK4,EMPTY             EMPTY RETURN CODE                11060003
         CR    WORK4,RETCDREG          IS DATA SET EMPTY                11070003
         BE    DU76                    YES-GO MOVE IN ENTRY             11080003
         SPACE 2                                                        11090003
*   NEED TO MOVE THE ENTRIES DOWN                                       11100003
         LA    WORK4,INDICES           1ST ENTRY ADDRESS                11110003
DU70     CLR   WORK5,WORK4             AT 1ST ENTRY                     11120003
         BE    DU76                    YES-GO USE                       11130003
         SR    WORK5,WORK8             PREVIOUS ENTRY                   11140003
         CLC   TEMP1(KEYL),X0(WORK5)   CORRECT SLOT                     11150003
         BH    DU75                    YES-GO USE                       11160003
         MVC   KEYL+TTR(KEYL+TTR,WORK5),X0(WORK5) MOVE DOWN             11170003
         B     DU70                    GO FIND SLOT                     11180003
         SPACE 2                                                        11190003
*   SET UP THE NEW ENTRY HERE                                           11200003
DU75     LA    WORK5,KEYL+TTR(WORK5)   SET TO AVAILABLE SLOT            11210003
DU76     MVC   KEYL(TTR,WORK5),TEMP2   NEW TTR VALUE                    11220003
         MVC   X0(KEYL,WORK5),TEMP1    NEW KEY VALUE                    11230003
DU80     LH    WORK4,NUMINDEX          NO. OF ENTRIES                   11240003
         LA    WORK4,ONE(WORK4)        PLUS ONE                         11250003
         STH   WORK4,NUMINDEX          NEW TOTAL                        11260003
         B     DU400                   GO EXIT                          11270003
         SPACE 2                                                        11280003
*   GET A LARGER DIRECTORY HERE                                         11290003
DU90     TM    DSDBSIZE,MAXDSI      MAX DIRECTORY SIZE?        @ZA12679 11293003
         BO    DU390                IF SO, RETURN CODE 12      @ZA12679 11296003
         SR    WORK3,WORK3          CLEAR WORKREG              @ZA12679 11299003
         ICM   WORK3,X3,DSDBSIZE    GET CURRENT SIZE           @ZA12679 11302003
         AH    WORK3,DCBBLKSI          INCREMENT BY BLOCKSIZE           11308003
         GETMAIN R,LV=(WORK3),SP=SPONE CORE FOR NEW BLOCK               11317003
         LR    WORK9,PARMREG1          NEW BLOCK ADDRESS                11326003
         SPACE 2                                                        11335003
*   MOVE THE CONTENTS OF PREVIOUS DIRECTORY BLOCK TO NEW                11344003
         SR    PARMREG0,PARMREG0       CLEAR WORKREG           @ZA12679 11348003
         ICM   PARMREG0,X3,DSDBSIZE    NO. OF BYTES TO MOVE    @ZA12679 11353003
         ST    WORK9,TEMPWRD2          MOVE-TO ADDRESS                  11362003
         ST    WORK7,TEMPWRD1          MOVE-FROM ADDRESS                11371003
         LA    PARMREG1,TEMPWRD1       PARM LIST ADDRESS                11380003
         L     ENTRY,MV                ROUTINE ADDRESS                  11389003
         CALL  (15)                    MOVE THE ENTRIES                 11398003
         SPACE 2                                                        11407003
*   FREEMAIN THE OLD DIRECTORY BLOCK HERE                               11416003
         SR    WORK3,WORK3             CLEAR WORKREG           @ZA12679 11419003
         ICM   WORK3,X3,DSDBSIZE       GET DIRECTORY SIZE      @ZA12679 11422003
         FREEMAIN R,LV=(WORK3),A=(WORK7),SP=SPONE FREE OLD              11434003
         SPACE 2                                                        11443003
*   SET UP THE CONTROL FIELDS FOR THE NEW BLOCK HERE                    11452003
         LR    WORK7,WORK9             NEW BLOCK ADDRESS                11461003
         ST    WORK7,DBUFBLCK          SAVE ADDRESS                     11470003
         SR    WORK3,WORK3             CLEAR WORKREG           @ZA12679 11479003
         ICM   WORK3,X3,DSDBSIZE       GET DSDBSIZE            @ZA12679 11482003
         AH    WORK3,DCBBLKSI          PLUS INCREMENT                   11488003
         STH   WORK3,DSDBSIZE          SAVE NEW TOTAL SIZE              11497003
         B     DU50                    HAVE SPACE//GO PROCESS           11506003
         SPACE 2                                                        11515003
*   NEED TO UPDATE THE KEY FIELD OF ENTRY ONLY                          11524003
DU200    LA    WORK5,INDICES           1ST ENTRY ADDRESS                11533003
DU204    CLC   KEYL(TTR,WORK5),TEMP2   TTR MATCH                        11542003
         BE    DU208                   YES-GO PROCESS                   11551003
         LA    WORK5,KEYL+TTR(WORK5)   NEXT ENTRY                       11560003
         B     DU204                   REPEAT UNTIL FOUND               11569003
DU208    MVC   X0(KEYL,WORK5),TEMP1    NEW KEY VALUE                    11578003
         B     DU400                   GO EXIT                          11587003
         SPACE 2                                                        11596003
*   NEED TO REMOVE AN ENTRY HERE                                        11605003
DU300    LA    WORK5,INDICES           1ST ENTRY ADDRESS                11614003
DU304    CLC   KEYL(TTR,WORK5),TEMP2   TTR MATCH?                       11623003
         BE    DU308                   YES-ENTRY FOUND                  11632003
         LA    WORK5,KEYL+TTR(WORK5)   NEXT ENTRY                       11641003
         B     DU304                   REPEAT UNTIL FOUND               11650003
         SPACE 2                                                        11659003
*   HAVE FOUND THE ENTRY TO DELETE                                      11668003
DU308    LH    PARMREG1,NUMINDEX       NO. OF ENTRIES                   11677003
         BCTR  PARMREG1,ZERO           LESS ONE                         11686003
         STH   PARMREG1,NUMINDEX       NEW TOTAL                        11695003
         LTR   PARMREG1,PARMREG1       DATA SET EMPTY NOW               11704003
         BP    DU312                   NO-PROCEED WITH UPDATE           11713003
         OI    DCBSTATS,DSEMPTY        SHOW EMPTY NOW                   11722003
         SPACE 2                                                        11731003
*   UPDATE THE DIRECTORY BLOCK HERE                                     11740003
DU312    LR    PARMREG0,WORK5          ENTRY TO BE DELETED              11749003
         LH    WORK2,DUDIRSIZ          SIZE OF ENTRY                    11758003
         SR    PARMREG0,WORK2          LESS LENGTH                      11767003
         LA    WORK3,INDICES           1ST ENTRY ADDRESS                11776003
         CR    WORK3,PARMREG0          AT 1ST ENTRY NOW                 11785003
         BNH   DU320                   NO--BRANCH                       11794003
         LR    PARMREG0,WORK3          SET TO 1ST ENTRY                 11803003
DU320    ST    PARMREG0,DBUFREF        PREVIOUS ENTRY                   11812003
         AR    WORK2,WORK5             NEXT ENTRY                       11821003
         MH    PARMREG1,DUDIRSIZ       ENTRIES-1 TIMES LENGTH           11830003
         LA    PARMREG1,INDICES(PARMREG1) LAST ENTRY ADDRESS            11839003
         SR    PARMREG1,WORK5          BYTES TO MOVE                    11848003
         BZ    DU400                   LAST ENTRY/RETURN                11857003
         SPACE 2                                                        11866003
*   MUST ADJUST THE INDEX ENTRIES HERE                                  11875003
         LR    PARMREG0,PARMREG1       BYTE COUNT                       11884003
         ST    WORK5,TEMP2             MOVE-TO ADDRESS                  11893003
         ST    WORK2,TEMP1             MOVE-FROM ADDRESS                11902003
         LA    PARMREG1,TEMP1          PARM LIST ADDRESS                11911003
         L     ENTRY,MV                ROUTINE ADDRESS                  11920003
         CALL  (15)                    MOVE ENTRIES DOWN                11929003
         SPACE 2                                                        11938003
*   EXIT PROCESSING HERE                                                11947003
DU400    SR    RETCDREG,RETCDREG       RETURN CODE=0                    11956003
DU410    EQU   *                                               @ZA12679 11960003
         L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    11965003
         RETURN (14,12),T,RC=(15)      RESTORE REGISTERS                11974003
DU390    LA    RETCDREG,IOERR         I/O ERROR                @ZA12679 11977003
         B        DU410               RETURN                   @ZA12679 11980003
         SPACE 2                                                        11983003
         DROP  BASEREG,COMMREG,DATAREG,WORK7 RELEASE                    11992003
         SPACE 2                                                        12001003
*   CONSTANTS FOR IKJEBEDU                                              12010003
DUDIRSIZ DC    H'7'                    LENGTH OF EACH INDEX ENTRY       12019003
 TITLE 'EDIT COMMAND ACCESS METHOD -RECORD LOCATING-  -IKJEBELO-'       12028003
*********************************************************************** 12037003
*                                                                     * 12046003
*STATUS -- VERSION NO. 02, VS     RELEASE NO. 03                      * 12055003
*                                                                     * 12142003
*FUNCTION --  THIS ROUTINE IS USED TO FIND A SPECIFIC RECORD.         * 12150003
*   DEPENDING ON THE OPTION SPECIFIED, THE RECORD MAY BE THE FIRST    * 12170003
*   IN THE DATA SET, THE LAST IN THE DATA SET, THE CURRENT            * 12179003
*   REFERENCE RECORD, THE FIRST PRIOR TO THE REFERENCE RECORD, OR     * 12188003
*   THE NEXT AFTER THE REFERENCE RECORD.  REFERENCE RECORD IS         * 12197003
*   DEFINED AS THE RECORD WITH A KEY VALUE EQUAL TO THAT STORED IN    * 12206003
*   'PRIMEKEY' OF THE WORKAREA.                                       * 12215003
*        IN ALL CASES ABOVE, FINDING THE BLOCK THAT CONTAINS THE      * 12224003
*   DESIRED RECORD INVOLVES USING THE DIRECTORY SEARCH ROUTINE,       * 12233003
*   IKJEBEDS.  IF THE CORRECT BLOCK EXISTS, IT IS READ IN WITH THE    * 12242003
*   READ BLOCK ROUTINE, IKJEBERB. WHEN THE CORRECT RECORD IS LOCATED  * 12251003
*   WITHIN THE DATA BLOCK, THE 'BUFREF' FIELD OF THAT BUFFER CONTAINS * 12260003
*   THE ADDRESS OF THE LOCATOR FOR THAT RECORD.                       * 12269003
*                                                                     * 12278003
*ENTRY POINTS -- AT IKJEBELO VIA A CALL FROM IKJEBEDR, IKJEBERR,      * 12287003
*   OR IKJEBEWR.                                                      * 12296003
*                                                                     * 12305003
*INPUT --  REGISTER 1 POINTS TO A 3 WORD PARAMETER LIST.              * 12314003
*   WORD1 --CONTAINS A POINTER TO WORKAREA//DCB.                      * 12323003
*        HIGH ORDER BYTE CONTAINS AN OPTION CODE AS FOLLOWS-          * 12332003
*          X'00'            -FIND CURRENT REFERENCE RECORD            * 12341003
*          X'01'            -FIND RECORD PRIOR TO REFERENCE           * 12350003
*          X'02'            -FIND RECORD AFTER REFERENCE              * 12359003
*          X'04'            -FIND FIRST RECORD IN DATA SET            * 12368003
*          X'05'            -FIND LAST RECORD IN DATA SET             * 12377003
*                                                                     * 12386003
*   WORD2 AND WORD3 -- NOT USED ON INPUT                              * 12395003
*                                                                     * 12404003
*OUTPUT --  REGISTERS AS DESCRIBED UNDER 'EXIT' BELOW.                * 12439003
*   WORD2 OF THE INPUT PARM LIST CONTAINS THE ADDRESS OF THE BUFFER   * 12448003
*   FOR THE FOUND RECORD.  THE 'BUFREF' FIELD OF THE BUFFER CONTAINS  * 12457003
*   THE ADDRESS OF THE 'LOCATOR' FOR THE FOUND RECORD.  THE 'PRIMEKEY'* 12466003
*   FIELD IN THE WORKAREA IS UPDATED WITH THE FOUND RECORD KEY.       * 12475003
*                                                                     * 12484003
*EXTERNAL REFERENCES --                                               * 12493003
*       IKJEBEDS            -FIND THE DESIRED DATA BLOCK              * 12502003
*       IKJEBERB            -READ IN THE REQUIRED DATA BLOCK          * 12520003
*                                                                     * 12529003
*EXITS,NORMAL -- RETURNS TO CALLING ROUTINE WITH A RETURN CODE--      * 12538003
*       RETURN CODE = 0     -OUTPUT AS ABOVE,  RECORD FOUND           * 12547003
*       RETURN CODE = 4     -NO OUTPUT,        RECORD NOT FOUND       * 12556003
*       RETURN CODE = 8     -NO OUTPUT,        EMPTY DATA SET         * 12565003
*                                                                     * 12574003
*                                                                     * 12583003
*EXITS,ERROR --  RETURNS TO THE CALLING ROUTINE.                      * 12592003
*       RETURN CODE = 12    -I/O ERROR ENCOUNTERED                    * 12610003
*                                                                     * 12619003
*TABLES/WORK AREAS --                                                 * 12628003
*       DEPENDENT ON THE 'BUFFER' DSECT DESCRIPTION.                  * 12637003
*       DEPENDENT ON THE 'UTILWORK' WORKAREA DESCRIPTION              * 12646003
*       DEPENDENT ON THE VECTOR TABLE FOR EXTERNAL REFERENCES         * 12655003
*                                                                     * 12664003
*ATTRIBUTES --  REFRESHABLE, NON-PRIVILEGED, ENABLED                  * 12673003
*                                                                     * 12682003
*NOTES --  THE REGISTER CONVENTIONS ARE AS FOLLOWS                    * 12700003
*       BASEREG                   -BASE REGISTER                      * 12709003
*       DATAREG                   -WORK AREA ADDRESSING               * 12718003
*       COMMREG                    -VECTOR TABLE ADDRESSING           * 12727003
*       WORK6                     -BUFFER ADDRESSING                  * 12736003
*       WORK7                -BLOCK ADDRESSING                          12745003
*       WORK2,WORK3,WORK4,WORK5   -WORK REGISTERS                     * 12754003
*                                                                     * 12763003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 12772003
*                                                                     * 12790003
*********************************************************************** 12799003
         SPACE 2                                                        12808003
IKJEBELO CSECT                                                          12817003
         SPACE                                                          12826003
         SPACE                                                          12835003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          12844003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               12853003
         USING DATA,WORK7              BLOCK ADDRESSABILITY             12862003
         LA    SAVEREG,SAVEL(SAVEREG)  NEXT SAVE AREA                   12880003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              12889003
         USING IKJEBELO,BASEREG                                         12898003
         L     DATAREG,WORD1(PARMREG1) WORK AREA ADDRESS                12907003
         USING UTILWORK,DATAREG                                         12916003
         L     COMMREG,VTABLE          TABLE OF ROUTINE ADDRS           12925003
         USING VECTABLE,COMMREG                                         12934003
         USING BUFFER,WORK6                                             12943003
         SPACE 2                                                        12952003
*   CHECK FOR INPUT OPTION CURRENT OR NEXT                              12970003
         CLI   X0(PARMREG1),K          WAS CURRENT SPECIFIED            12979003
         BE    LO2                     YES -                            12988003
         CLI   X0(PARMREG1),N          WAS NEXT SPECIFIED               12997003
         BE    LO3                     YES -                            13006003
         SPACE 2                                                        13015003
*   SEARCH DIRECTORY AND READ DATA BLOCK INTO CORE,                     13024003
*   DETERMINE OPTION                                                    13033003
         BAL   LINK9,LO1               GET DATA BLOCK                   13042003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       13060003
         BNZ   LO16                    YES, TERMINATE                   13069003
         CLI   X0(PARMREG1),B          WAS BEGIN OPTION SPECIF          13078003
         BE    LO9                     YES -                            13087003
         CLI   X0(PARMREG1),P          PREVIOUS OPTION SPECIFIED        13096003
         BE    LO6                     YES -                            13105003
*                                      NO, MUST BE LAST OPTION          13114003
         SPACE 2                                                        13123003
*   LOCATE LAST RECORD OF DATA BLOCK                                    13132003
         LH    WORK2,NUMREC            NUMBER OF RECORDS                13150003
*                                        IN DATA BLOCK                  13159003
         AR    WORK2,WORK2             TOTAL LENGTH OF LOCATORS         13168003
         LA    WORK3,LOCATORS-LOCL(WORK2)   ADDRESS OF LOCATOR          13177003
         LH    WORK2,X0(WORK3)         CONTENTS OF LOCATOR              13186003
LO8      LA    WORK2,DATA(WORK2)       ADDRESS OF RECORD                13195003
         SPACE 2                                                        13204003
*   SET UP OUTPUT AND RETURN TO CALLING ROUTINE HERE                    13213003
LO12     EQU   *                                                        13222003
         ST    WORK3,BUFREF            ADDRESS OF RECORD LOCATOR        13240003
LO13     MVC   PRIMEKEY(KEYL),X0(WORK2)  SAVE ACTUAL KEY VALUE          13249003
         SR    RETCDREG,RETCDREG       SET RETURN CODE                  13258003
LO16     L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    13267003
         RETURN (14,12),T,RC=(15)      RESTORE REGISTERS                13276003
         SPACE 2                                                        13285003
*   MUST FIND FIRST RECORD OF DATA SET                                  13294003
LO9      LH    WORK2,LOCATORS          CONTENTS OF FIRST LOCATOR        13303003
         LA    WORK3,LOCATORS          ADDRESS OF FIRST LOCATOR         13312003
         B     LO8                     GO FIND ADDRESS OF RECORD        13330003
         SPACE 2                                                        13339003
*   MUST FIND RECORD AFTER CURRENT REFERENCE                            13348003
LO3      BAL   WORK8,LO30              LOCATE NEXT RECORD               13357003
LO32     LTR   RETCDREG,RETCDREG       ANY ERRORS                       13366003
         BNZ   LO16                    YES, TERMINATE                   13375003
         B     LO12                    NO, RETURN LOCATOR ADDR          13384003
         SPACE 2                                                        13393003
*   MUST FIND CURRENT REFERENCE RECORD                                  13402003
LO2      BAL   WORK8,LO20              LOCATE CURRENT RECORD            13420003
         B     LO32                    GO CHECK RETURN CODE             13429003
         SPACE 2                                                        13438003
*   MUST FIND RECORD PRIOR TO CURRENT REFERENCE                         13447003
LO6      LH    WORK5,NUMREC            NUMBER OF RECORDS IN             13456003
*                                        DATA BLOCK                     13465003
         LR    WORK4,WORK5             TOTAL LENGTH OF                  13474003
         AR    WORK4,WORK4               LOCATORS                       13483003
LO62     LA    WORK3,LOCATORS-LOCL(WORK4)   ADDRESS OF LOCATOR          13492003
         LH    WORK2,LOCATORS-LOCL(WORK4)   CONTENTS OF LOCATOR         13510003
         LA    WORK2,DATA(WORK2)       RECORD ADDRESS                   13519003
         CLC   X0(KEYL,WORK2),PRIMEKEY IS THIS THE PREVIOUS REC         13528003
         BL    LO12                    YES, RETURN LOCATOR ADDR         13537003
         BCTR  WORK4,ZERO              DECREMENT TO PICK UP             13546003
         BCTR  WORK4,ZERO                PREVIOUS LOCATOR               13555003
         BCT   WORK5,LO62              REPEAT UNTIL ALL RECORDS         13564003
*                                        HAVE BEEN TESTED               13573003
         SPACE 2                                                        13582003
*   RECORD PRIOR TO CURRENT REFERENCE NOT IN THIS DATA BLOCK,           13600003
*     MUST DO BINARY SEARCH BY KEY                                      13609003
         MVC   HIGHKEY(KEYL),PRIMEKEY  INITIALIZE TOP BOUND FOR         13618003
*                                        SEARCH                         13627003
         SR    WORK4,WORK4             INITIALIZE LOWER BOUND           13636003
         ST    WORK4,LOWKEY              TO ZERO                        13645003
LO63     L     WORK4,LOWKEY            COMPUTE SEARCH KEY =             13654003
         A     WORK4,HIGHKEY             (LOWKEY + HIGHKEY)/2  ,        13663003
         SRL   WORK4,ONE                 IGNORING REMAINDER             13672003
         ST    WORK4,PRIMEKEY          SEARCH KEY                       13690003
         BAL   WORK8,LO30              LOCATE NEXT RECORD AFTER         13699003
*                                        SEARCH KEY                     13708003
         CLC   X0(KEYL,WORK2),HIGHKEY  IS RECORD FOUND A                13717003
*                                        CANDIDATE FOR                  13726003
*                                        PREVIOUS RECORD                13735003
         BNL   LO64                    NO, CHECK FOR CONVERGENCE        13744003
*                                      YES, CHECK IF THIS MUST          13753003
*                                        BE  PREVIOUS RECORD            13762003
         L     WORK4,HIGHKEY           HIGH BOUND                       13780003
         BCTR  WORK4,ZERO                LESS ONE                       13789003
         MVC   TEMP3(KEYL),X0(WORK2)   FOR ALIGNMENT                    13798003
         L     WORK5,TEMP3             KEY OF RECORD FOUND              13807003
         CR    WORK4,WORK5             IS RECORD FOUND                  13816003
*                                        NECESSARILY THE                13825003
*                                        PREVIOUS RECORD                13834003
         BE    LO12                    YES, RETURN                      13843003
         ST    WORK5,LOWKEY            NO, RESET LOWER BOUND            13852003
*                                        AND REPEAT                     13870003
         B     LO63                    REPEAT SEARCH                    13879003
         SPACE 2                                                        13888003
*   NO RECORD FOUND BETWEEN SEARCH KEY AND HIGH BOUND. TEST FOR         13897003
*     CONVERGENCE BEFORE REPEATING SEARCH                               13906003
LO64     L     WORK4,PRIMEKEY          SEARCH KEY PLUS ONE (HIGH        13915003
         AH    WORK4,LOCONST1            ORDER BYTE PRESERVED)          13924003
         C     WORK4,HIGHKEY           CONVERGED YET                    13933003
         BE    LO65                    YES                              13942003
*                                      NO, RESET HIGH BOUND             13960003
*                                        AND REPEAT                     13969003
         ST    WORK4,HIGHKEY           HIGH BOUND = SEARCH KEY+1        13978003
         B     LO63                    REPEAT SEARCH                    13987003
         SPACE 2                                                        13996003
*   CONVERGENCE ATTAINED                                                14005003
LO65     BAL   WORK8,LO20              CHECK FOR RECORD WITH            14014003
*                                        KEY EQUAL TO LAST              14023003
*                                        SEARCH KEY                     14032003
         LTR   RETCDREG,RETCDREG       WAS RECORD FOUND                 14050003
         BZ    LO12                    YES, HAS TO BE PREVIOUS          14059003
*                                        RECORD                         14068003
         OC    LOWKEY(KEYL),LOWKEY     HAS A RECORD BEEN FOUND          14077003
*                                        DURING BINARY SEARCH           14086003
         BNZ   LO66                    YES, HAS TO BE PREVIOUS          14095003
*                                        RECORD                         14104003
*                                      NO, MUST CHECK KEY = 0           14113003
         OC    PRIMEKEY(KEYL),PRIMEKEY HAS KEY = 0 ALREADY BEEN         14122003
*                                        CHECKED                        14140003
         BZ    LO67                    YES, HENCE NO PREVIOUS           14149003
*                                        RECORD EXISTS                  14158003
*                                      NO, MUST SEARCH KEY = 0          14167003
         SR    WORK4,WORK4             SET SEARCH KEY                   14176003
         ST    WORK4,PRIMEKEY            TO ZERO                        14185003
         BAL   WORK8,LO20              SEARCH FOR RECORD KEY 0          14194003
         LTR   RETCDREG,RETCDREG       WAS RECORD FOUND                 14203003
         BZ    LO12                    YES, THIS IS THE PREVIOUS        14212003
*                                        RECORD                         14230003
         B     LO16                    NO, TERMINATE                    14239003
         SPACE 2                                                        14248003
*   PREVIOUS RECORD FOUND TO BE THAT REFERENCED BY LOWKEY, SET          14257003
*     UP REGISTERS FOR RETURN                                           14266003
LO66     MVC   PRIMEKEY(KEYL),LOWKEY   KEY OF PREVIOUS RECORD           14275003
         BAL   WORK8,LO20              SET UP WORK2 AND WORK3           14284003
         B     LO12                    RETURN                           14293003
         SPACE 2                                                        14302003
LO67     LA    RETCDREG,NRF            RETURN CODE FOR RECORD           14320003
*                                        NOT FOUND                      14329003
         B     LO16                    EXIT                             14338003
         SPACE 2                                                        14347003
*   THIS SUBROUTINE LOCATES RECORD WITH KEY EQUAL TO PRIMEKEY           14356003
LO20     MVI   X0(PARMREG1),K          INSURE THAT OPTION CODE          14365003
*                                         IS CORRECT                    14374003
         BAL   LINK9,LO1               GET DATA BLOCK                   14383003
         LTR   RETCDREG,RETCDREG       DATA BLOCK FOUND                 14392003
         BCR   NOTZERO,WORK8           NO, RETURN                       14410003
         LH    WORK5,NUMREC            NUMBER OF RECORDS IN             14419003
*                                        DATA BLOCK                     14428003
         SR    WORK4,WORK4             OFFSET TO FIRST LOCATOR          14437003
LO21     LH    WORK2,LOCATORS(WORK4)   CONTENTS OF LOCATOR              14446003
         LA    WORK3,LOCATORS(WORK4)   ADDRESS OF LOCATOR               14455003
         LA    WORK2,DATA(WORK2)       ADDRESS OF RECORD                14464003
         CLC   PRIMEKEY(KEYL),X0(WORK2)  IS THIS THE REFERENCED         14473003
*                                        RECORD                         14482003
         BCR   EQUAL,WORK8             YES, RETURN                      14491003
         BL    LO22                    NO MORE POSSIBILITES,            14500003
*                                        RECORD NOT IN DATA SET         14509003
         LA    WORK4,LOCL(WORK4)       INCREMENT TO NEXT LOCATOR        14518003
         BCT   WORK5,LO21              REPEAT IF MORE RECORDS           14527003
LO22     LA    RETCDREG,NRF            RETURN CODE FOR NO RECORD        14536003
         BR    WORK8                   RETURN                           14545003
         SPACE 2                                                        14554003
*   THIS SUBROUTINE LOCATES RECORD FOLLOWING REFERENCE                  14563003
*     KEY (PRIMEKEY)                                                    14572003
LO30     MVI   X0(PARMREG1),N          INSURE THAT OPTION CODE          14581003
*                                        IS CORRECT                     14590003
         BAL   LINK9,LO1               GET DATA BLOCK                   14617003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       14624003
         BCR   NOTZERO,WORK8           YES, RETURN                      14640003
         SR    WORK4,WORK4             OFFSET TO FIRST LOCATOR          14650003
LO31     LH    WORK2,LOCATORS(WORK4)   CONTENTS OF LOCATOR              14660003
         LA    WORK3,LOCATORS(WORK4)   ADDRESS OF LOCATOR               14670003
         LA    WORK2,DATA(WORK2)       ADDRESS OF RECORD                14680003
         CLC   X0(KEYL,WORK2),PRIMEKEY IS THIS THE NEXT RECORD          14690003
         BCR   RECHIGH,WORK8           YES, RETURN                      14700003
         LA    WORK4,LOCL(WORK4)       INCREMENT TO NEXT LOCATOR        14710003
         B     LO31                    REPEAT UNTIL FOUND               14720003
         SPACE 2                                                        14730003
*   THIS SUBROUTINE OBTAINS DATA BLOCK USING OPTION CODE                14740003
         SPACE                                                          14750003
*   BEGIN WITH DIRECTORY SEARCH                                         14760003
LO1      LA    WORK4,PRIMEKEY          SEARCH KEY ADDRESS INTO          14770003
         ST    WORK4,WORD2(PARMREG1)      PARM LIST                     14780003
         L     ENTRY,DS                ENTRY POINT ADDRESS              14790003
         CALL  (15)                    FIND TTR OF BLOCK NEEDED         14800003
         CH    RETCDREG,LOEMPTY        EMPTY OR I/O ERROR               14810003
         BNL   LO16                    YES, TERMINATE                   14820003
         LTR   RETCDREG,RETCDREG       WAS THE SEARCH SUCCESSFUL        14830003
         BNZ   LO17                    NO-RECORD NOT FOUND              14840003
         BAL   WORK5,LO18              READ CORRECT DATA BLOCK          14850003
         BR    LINK9                   RETURN                           14860003
         SPACE                                                          14870003
*   READ IN DATA BLOCK                                                  14880003
LO18     EQU   *                       ENTRY                            14890003
         L     WORK4,DBUFREF           FOUND ENTRY ADDRESS              14900003
         MVC   WORD2(TTR,PARMREG1),KEYL(WORK4)  MOVE TTR TO             14910003
*                                               PARM LIST               14920003
         L     ENTRY,RB                ENTRY POINT ADDRESS              14930003
         CALL  (15)                    READ IN DATA BLOCK               14940003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       14950003
         BNZ   LO16                    YES, TERMINATE                   14960003
         L     WORK6,WORD2(PARMREG1)   ADDRESS OF DATA BLOCK            14970003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    14980003
         BR    WORK5                   RETURN                           14990003
LO17     BAL   WORK5,LO18              READ NEXT AVAILABLE BLOCK        15000003
         LA    RETCDREG,NRF            RETURN CODE FOR RECORD           15010003
*                                        NOT FOUND                      15020003
         BR    LINK9                   RETURN                           15030003
         SPACE 2                                                        15040003
         DROP  BASEREG,COMMREG,DATAREG,WORK6,WORK7                      15050003
         SPACE 2                                                        15060003
*   CONSTANT AREA FOR RECORD LOCATE ROUTINE                             15070003
LOEMPTY  DC    H'8'                    DATA SET EMPTY CONSTANT          15080003
LOCONST1 DC    H'1'                    CONSTANT FOR INCREM KEY          15090003
         TITLE 'EDIT COMMAND ACCESS METHOD -MOVE ROUTINE ---IKJEBEMV'   15100003
*********************************************************************** 15110003
*                                                                     * 15120003
*STATUS -- VERSION NO. 02, VS     RELEASE NO. 03                      * 15130003
*                                                                     * 15140003
*FUNCTION- THIS ROUTINE IS USED TO MOVE ANY NUMBER OF BYTES FROM      * 15150003
*   ONE LOCATION TO ANOTHER. MORE SPECIFICALLY IT IS USED FOR THE     * 15160003
*   FOLLOWING-                                                        * 15170003
*       -MOVES RECORDS INTO THE DATA SET BUFFERS                      * 15180003
*       -MOVES RECORDS FROM THE DATA SET BUFFERS                      * 15190003
*       -MOVES RECORD LOCATORS WITHIN THE DATA BLOCKS                 * 15200003
*       -MOVES INDEX ENTRIES WITHIN THE DIRECTORY BLOCKS              * 15210003
*                                                                     * 15220003
*ENTRY POINT- AT IKJEBEMV FROM THE FOLLOWING ROUTINES-                * 15230003
*       IKJEBEDL   (TWO  PLACES)      -RECORD DELETION                * 15240003
*       IKJEBERR                      -READING RECORDS                * 15250003
*       IKJEBEWR   (FOUR PLACES)      -WRITING RECORDS                * 15260003
*                                                                     * 15270003
*INPUT --                                                             * 15280003
*       REGISTER 0 CONTAINS THE LENGTH OF THE DATA TO MOVE            * 15290003
*        REGISTER 1 POINTS TO A TWO WORD PARAMETER LIST               * 15300003
*          WORD1- CONTAINS THE MOVE-FROM ADDRESS                      * 15310003
*          WORD2- CONTAINS THE MOVE-TO   ADDRESS                      * 15320003
*                                                                     * 15330003
*OUTPUT- THE NUMBER OF BYTES INDICATED IN REGISTER 0 ARE MOVED FROM   * 15340003
*   THE ADDRESS CONTAINED IN WORD1 OF THE INPUT LIST TO THE           * 15350003
*   ADDRESS SPECIFIED IN WORD2 OF THE INPUT LIST                      * 15360003
*                                                                     * 15370003
*EXTERNAL REFERENCES -- NONE                                          * 15380003
*                                                                     * 15390003
*EXITS,NORMAL-  NO RETURN CODE, OUTPUT AS ABOVE                       * 15400003
*                                                                     * 15410003
*EXITS,ERROR-  NONE                                                   * 15420003
*                                                                     * 15430003
*TABLES/WORK AREAS- NONE                                              * 15440003
*                                                                     * 15450003
*ATTRIBUTES- REFRESHABLE,ENABLED,NON-PRIVILEGED                       * 15460003
*                                                                     * 15470003
*NOTES --  REGISTER CONVENTIONS ARE AS FOLLOWS-                       * 15480003
*       BASEREG              -BASE REGISTER                           * 15490003
*       PARMREG0             -TOTAL BYTE COUNT                        * 15500003
*       FROMREG              -MOVE-FROM ADDRESS                       * 15510003
*       TOREG                -MOVE-TO  ADDRESS                        * 15520003
*       PARMREG1             -MOVE COUNT PER PASS                     * 15530003
*                                                                     * 15540003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 15550003
*                                                                     * 15560003
*********************************************************************** 15570003
         EJECT                                                          15580003
IKJEBEMV CSECT                                                          15590003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          15600003
         SAVE  (14,12),T,*                                              15610003
         LA    SAVEREG,SAVEL(SAVEREG)  NEXT SAVE AREA                   15620003
         LR    BASEREG,ENTRY                                            15630003
         USING IKJEBEMV,BASEREG                                         15640003
         SPACE                                                          15650003
*   SET UP THE STARTING POSITIONS AND LENGTH MINUS ONE                  15660003
         BCTR  PARMREG0,ZERO           DECREMENT ONE FROM LENGTH        15670003
         L     TOREG,WORD2(PARMREG1)   TO ADDRESS                       15680003
         L     FROMREG,WORD1(PARMREG1) FROM ADDRESS                     15690003
         SPACE                                                          15700003
*   MOVES 256 BYTES ON ALL PASSES EXCEPT THE LAST                       15710003
MV2      LA    PARMREG1,K255           MAXIMUM MOVE LENGTH              15720003
         CR    PARMREG0,PARMREG1       COMPARE BALANCE TO MAXIMUM       15730003
         BNL   MV3                     USE MAXIMUM MOVE LENGTH          15740003
         LR    PARMREG1,PARMREG0       USE BALANCE                      15750003
MV3      EX    PARMREG1,MOVEINST       MOVE REQUIRED AMOUNT             15760003
         LA    PARMREG1,ONE(PARMREG1)  AMOUNT MOVED                     15770003
         AR    FROMREG,PARMREG1        ADJUST FROM ADDRESS              15780003
         AR    TOREG,PARMREG1          ADJUST TO-ADDRESS                15790003
         SR    PARMREG0,PARMREG1       REDUCE THE BALANCE               15800003
         BNM   MV2                     ARE WE FINISHED -NO BRANCH       15810003
         SPACE                                                          15820003
*   EXIT HERE WHEN ALL MOVED                                            15830003
         L     SAVEREG,WORD2(SAVEREG)  YES-OLD SAVE AREA                15840003
         RETURN (14,12),T              RESTORE THE REGISTERS            15850003
         SPACE                                                          15860003
         DROP  BASEREG                                                  15870003
         SPACE 2                                                        15880003
*   CONSTANT AREA FOR IKJEBEMV                                          15890003
MOVEINST MVC   X0(ONE,TOREG),X0(FROMREG) EXECUTED TO MOVE DATA          15900003
 TITLE 'EDIT COMMAND ACCESS METHOD -READ A BLOCK ROUTINE --IKJEBERB'    15910003
*********************************************************************** 15920003
*                                                                     * 15930003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                    *  15940003
*                                                                     * 15950003
*FUNCTION -- THIS ROUTINE READS IN A REQUESTED BLOCK GIVEN A TTR      * 15960003
*   THAT IS PASSED IN THE INPUT PARAMETER LIST.  IF THE REQUESTED     * 15970003
*   BLOCK IS ALREADY IN CORE, NO PHYSICAL I/O IS REQUIRED. THE        * 15980003
*   BUFFER CHAIN IS INSPECTED TO SEE IF THE REQUESTED BLOCK IS        * 15990003
*   PRESENT. IF THE BLOCK IS IN CORE, ITS ADDRESS IS PASSED BACK      * 16000003
*   IN THE PARAMETER LIST.                                            * 16010003
*        IF THE BLOCK IS NOT IN CORE, AN EMPTY BUFFER IS OBTAINED     * 16020003
*   BY CALLING THE BUFFER ASSIGNMENT ROUTINE, IKJEBEAS.  THE BLOCK    * 16030003
*   IS READ IN BY GOING TO THE RESIDENT CONVERT ROUTINE FOR THE       * 16040003
*   TTR TO MBBCCHHR CONVERSION.  A XDAP READ IS THEN PERFORMED TO     * 16050003
*   OBTAIN THE BLOCK.  THE WAIT ROUTINE, IKJEBEWA, INSURES THAT       * 16060003
*   THE I/O IS COMPLETE BEFORE RETURNING THE ADDRESS OF THE BUFFER    * 16070003
*   IN THE INPUT PARAMETER LIST.                                      * 16080003
*                                                                     * 16090003
*ENTRY POINTS --                                                      * 16100003
*       IKJEBERB VIA A CALL FROM EITHER IKJEBEAD, IKJEBEDL,           * 16110003
*        IKJEBEDS, IKJEBEDU, OR IKJEBELO.                             * 16120003
*                                                                     * 16130003
*INPUT -- REGISTER ONE POINTS TO A TWO WORD PARAMETER LIST.           * 16140003
*       WORD1-  CONTAINS A POINTER TO THE WORKAREA, UTILWORK          * 16150003
*       WORD2-  CONTAINS THE TTR OF THE DESIRED BLOCK                 * 16160003
*                                                                     * 16170003
*OUTPUT -- THE SECOND WORD OF THE INPUT PARM LIST CONTAINS THE        * 16180003
*   ADDRESS OF THE BUFFER THAT CONTAINS THE REQUESTED BLOCK.          * 16190003
*                                                                     * 16200003
*EXTERNAL REFERENCES --                                               * 16210003
*       IKJEBEAS             -ASSIGNS BUFFER READ-IN AREA             * 16220003
*       IKJEBEWA             -WAITS ON THE I/O OPERATION              * 16230003
*       IECPCNVT             -RESIDENT CONVERT ROUTINE                * 16240003
*       MACROS USED                                                   * 16250003
*         XDAP               -READ INTO CORE ANY BLOCK                * 16260003
*                                                                     * 16270003
*EXITS,NORMAL -- REGISTER 15 CONTAINS A RETURN CODE OF ZERO WITH      * 16280003
*   OUTPUT AS DESCRIBED ABOVE.                                        * 16290003
*                                                                     * 16300003
*EXITS,ERROR --  REGISTER 15 CONTAINS A RETURN CODE OF TWELVE ON      * 16310003
*   I/O ERRORS.                                                       * 16320003
*                                                                     * 16330003
*TABLES/WORK AREAS -- THIS ROUTINE IS DEPENDENT ON THE WORKAREA       * 16340003
*   FOR THE BUFFER ADDRESSES AND ON 'VECTABLE' FOR THE ADDRESSES      * 16350003
*   OF THE EXTERNAL ROUTINES.                                         * 16360003
*                                                                     * 16370003
*ATTRIBUTES -- REFRESHABLE, NON-PRIVILEGED, ENABLED                   * 16380003
*                                                                     * 16390003
*NOTES -- REGISTER CONVENTIONS ARE AS FOLLOWS-                        * 16400003
*       BASEREG              -BASE REGISTER                           * 16410003
*       DATAREG              -WORK AREA ADDRESSING                    * 16420003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 16430003
*       WORK6                -BUFFER ADDRESSING                       * 16440003
*       WORK7                -BLOCK ADDRESS                             16450003
*       WORK2,3              -WORK REGISTERS                            16460003
*       WORK4,5              -WORK REGISTERS                            16470003
*                                                                     * 16480003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 16490003
*                                                                     * 16500003
*********************************************************************** 16510003
         SPACE 2                                                        16520003
IKJEBERB CSECT                                                          16530003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          16540003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               16550003
         LA    SAVEREG,SAVEL(SAVEREG)  STEP TO NEXT SAVEAREA            16560003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              16570003
         USING IKJEBERB,BASEREG                                         16580003
         L     DATAREG,WORD1(PARMREG1) WORK AREA ADDRESS                16590003
         USING UTILWORK,DATAREG                                         16600003
         L     COMMREG,VTABLE          TABLE OF ROUTINE ADDRESSES       16610003
         USING VECTABLE,COMMREG                                         16620003
         SPACE 2                                                        16630003
*   CHECK IF THE DESIRED BLOCK IS IN CORE                               16640003
RB6      MVI   TTR+WORD2(PARMREG1),ZERO  INSURE TTR0                    16650003
         L     WORK5,WORD2(PARMREG1)   TTR OF DESIRED BLOCK             16660003
         LA    WORK6,BUF1              ADDRESS OF 1ST BUFFER            16670003
         LH    WORK4,DCBBFNO           TOTAL BUFFERS                    16680003
         USING BUFFER,WORK6                                             16690003
RB2      C     WORK5,BUFTTR            IS THIS THE CORRECT BLOCK        16700003
         BE    RB1                     YES-RETURN                       16710003
         LA    WORK6,L'BUF1(WORK6)     NEXT BUF.CNTL FIELD              16720003
         BCT   WORK4,RB2               REPEAT UNTIL FOUND               16730003
*                                      DESIRED BLOCK NOT IN CORE        16740003
         SPACE 2                                                        16750003
*   BLOCK IS NOT IN CORE AND MUST BE READ INTO EMPTY BUFFER             16760003
         L     ENTRY,AS                ENTRY POINT ADDRESS              16770003
         CALL  (15)                    GET AN EMPTY BUFFER              16780003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       16790003
         BNZ   RB13                    YES-RETURN                       16800003
         L     WORK6,WORD2(PARMREG1)   ASSIGNED BUFFER ADDRESS          16810003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    16820003
         USING DATA,WORK7              BLOCK ADDRESSABILITY             16830003
         ST    WORK5,BUFTTR            TTR OF DESIRED BLOCK             16840003
         SPACE 2                                                        16850003
*   POSITION ACCESS METHOD FOR CORRECT BLOCK                            16860003
RB4      LR    PARMREG0,WORK5          TTR TO BE CONVERTED              16870003
         L     PARMREG1,DCBDEBAD       ADDRESS OF DEB                   16880003
         LA    WORK2,RBLKREF           ADDRESS TO RECEIVE MBBCCHHR      16890003
         LR    WORK3,DATAREG           SAVE ADDRESS FOR WORKAREA        16900003
         DROP  DATAREG                                                  16910003
         USING UTILWORK,WORK3                                           16920003
         STM   WORK9,SAVEREG,TEMPREGS  SAVE REGISTERS 9-13              16930003
         L     ENTRY,CVTPTR            ADDRESS OF CVT                   16940003
         USING CVT,ENTRY                                                16950003
         L     ENTRY,CVTPCNVT          ADDRESS OF CONVERT ROUTINE       16960003
         DROP  ENTRY                                                    16970003
         BALR  RETREG,ENTRY            CONVERT TTR TO MBBCCHHR          16980003
         LM    WORK9,SAVEREG,TEMPREGS  RESTORE REGISTERS 9-13           16990003
         DROP  WORK3                                                    17000003
         USING UTILWORK,DATAREG                                         17010003
         SPACE 2                                                        17020003
*   READ IN THE DESIRED BLOCK HERE                                      17030003
         XDAP  XDAPRLST,RI,UTILDCB,DATA,,MF=E   READ IN A BLOCK         17040003
         LA    PARMREG1,PARM1          PARAMETER LIST ADDRESS           17050003
         ST    WORK6,WORD2(PARMREG1)   BUFFER TO WAIT UPON              17060003
         MVI   BUFSTATS,WAITXR         INDICATE OPERATION UPON WHICH    17070003
*                                        TO WAIT                        17080003
         L     ENTRY,WA                ENTRY POINT ADDRESS              17090003
         CALL  (15)                    WAIT FOR THE I/O TO COMPLETE     17100003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       17110003
         BNZ   RB13                    YES-RETURN                       17120003
         SPACE 2                                                        17130003
*   STORE RETURN BUFFER ADDRESS AND EXIT HERE                           17140003
RB1      ST    WORK6,WORD2(PARMREG1)   DESIRED BUFFER ADDRESS           17150003
         SR    RETCDREG,RETCDREG       SET RETURN CODE = 0              17160003
RB13     L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA ADDRESS            17170003
         RETURN (14,12),T,RC=(15)      RESTORE THE REGISTERS            17180003
         SPACE 2                                                        17190003
         DROP  BASEREG,COMMREG,DATAREG,WORK6,WORK7                      17200003
 TITLE 'EDIT COMMAND ACCESS METHOD --READ A RECORD ROUTINE --IKJEBERR'  17210003
*********************************************************************** 17220003
*                                                                     * 17230003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                    *  17240003
*                                                                     * 17250003
*FUNCTION --  THIS ROUTINE SERVES AS THE INTERFACE WHEN READING       * 17260003
*   RECORDS FROM THE UTILITY DATA SET. FIVE DIFFERENT READ OPTIONS    * 17270003
*   ARE POSSIBLE (AS SPECIFIED BELOW), IN ADDITION, AN INPUT KEY      * 17280003
*   MAY BE PROVIDED WHICH WILL REPLACE THE LAST REFERENCED KEY IN     * 17290003
*   THE ACCESS METHOD BEFORE THE OPERATION TAKES PLACE.  THE DESIRED  * 17300003
*   RECORD WILL EITHER BE MOVED TO THE ADDRESS SPECIFIED BY THE       * 17310003
*   CALLER OR A POINTER TO THE RECORD PASSED BACK IN A REGISTER.      * 17320003
*                                                                     * 17330003
*        FINDING THE DESIRED RECORD INVOLVES USING THE RECORD         * 17340003
*   LOCATING ROUTINE (IKJEBELO).  IF THE DESIRED RECORD DOES NOT      * 17349003
*   EXIST, A RETURN CODE OF 4 IS PASSED BACK.  A RETURN CODE OF 12    * 17358003
*   IS PASSED BACK IF AN I/O ERROR IS ENCOUNTERED.                    * 17367003
*                                                                     * 17376003
*ENTRY POINTS --                                                      * 17385003
*       IKJEBERR             VIA A CALL FROM IKJEBEUT                 * 17394003
*                                                                     * 17403003
*INPUT -- REGISTER ONE POINTS TO A 1-3 WORD PARAMETER LIST            * 17412003
*        WORD1-                                                       * 17421003
*         HIGH ORDER BYTE CONTAINS A CODE AS FOLLOWS-                 * 17430003
*           X'00'            READ CURRENT REFERENCE RECORD            * 17439003
*           X'01             READ RECORD PREVIOUS TO REFERENCE        * 17448003
*           X'02'            READ RECORD AFTER REFERENCE              * 17457003
*           X'04'            READ FIRST RECORD IN DATA SET            * 17466003
*           X'05'            READ LAST RECORD IN DATA SET             * 17475003
*         THREE LOW ORDER BYTES CONTAIN A POINTER TO THE WORKAREA/DCB * 17490003
*                                                                     * 17510003
*       WORD2-  OPTIONALLY CONTAINS A POINTER TO A FOUR BYTE BINARY   * 17520003
*         KEY THAT REPLACES THE LAST REFERENCED KEY IN THE ACCESS     * 17530003
*         METHOD BEFORE THE READ OPERATION TAKES PLACE.               * 17540003
*                                                                     * 17550003
*       WORD3-  OPTIONALLY CONTAINS AN ADDRESS WHICH INDICATES        * 17560003
*         WHERE THE LOCATED RECORD IS TO BE PLACED.                   * 17570003
*                                                                     * 17580003
*OUTPUT --  REGISTERS AS DESCRIBED BELOW                              * 17590003
*   THE DESIRED RECORD IS EITHER MOVED TO THE SPECIFIED LOCATION OR   * 17600003
*   A POINTER IS RETURNED TO THE RECORD IN REGISTER ONE.              * 17610003
*                                                                     * 17620003
*EXTERNAL REFERENCES --                                               * 17630003
*       IKJEBELO             -FINDS THE DESIRED RECORD                * 17640003
*       IKJEBEMV             -MOVES RECORD TO USER AREA, ON REQUEST   * 17650003
*                                                                     * 17660003
*EXITS,NORMAL --  A RETURN CODE OF ZERO IN REGISTER 15 AND THE        * 17670003
*   DESIRED RECORD HAS BEEN MADE AVAILABLE TO THE USER.               * 17680003
*        A RETURN CODE OF FOUR IS PASSED BACK IF THE REQUESTED        * 17690003
*   RECORD DOES NOT EXIST                                             * 17700003
*                                                                     * 17710003
*EXITS,ERROR --  A RETURN CODE OF 12 IS RETURNED IN REGISTER 15       * 17720003
*   IF AN I/O ERROR IS ENCOUNTERED                                    * 17730003
*                                                                     * 17740003
*TABLES/WORK AREAS --  THIS ROUTINE IS DEPENDENT ON THE WORKAREA,     * 17750003
*   UTILWORK, FOR THE REFERENCE KEY INFORMATION AND ON THE VECTOR     * 17760003
*   TABLE, 'VECTABLE', FOR THE EXTERNAL REFERENCES.                   * 17770003
*                                                                     * 17780003
*ATTRIBUTES -- REFRESHABLE,NON-PRIVILEGED,ENABLED                     * 17790003
*                                                                     * 17800003
*NOTES --  REGISTER USE IS AS FOLLOWS-                                * 17810003
*       BASEREG              -BASE REGISTER                           * 17820003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 17830003
*       DATAREG              -WORK AREA ADDRESSING                    * 17840003
*       WORK6                -BUFFER ADDRESSING                       * 17850003
*       WORK7                -BLOCK ADDRESSING                          17860003
*       WORK2,WORK4,WORK5    -WORK REGISTERS                          * 17870003
*                                                                     * 17880003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 17890003
*                                                                     * 17900003
*                                                                     * 17910003
*********************************************************************** 17920003
         SPACE 2                                                        17930003
IKJEBERR CSECT                                                          17940003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          17950003
         SAVE  (14,12),T,*                                              17960003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              17970003
         USING IKJEBERR,BASEREG                                         17980003
         L     DATAREG,WORD1(PARMREG1) WORK AREA ADDRESS                17990003
         USING UTILWORK,DATAREG                                         18000003
         L     COMMREG,VTABLE          TABLE OF ROUTINE ADDRESSES       18010003
         USING VECTABLE,COMMREG                                         18020003
         LA    WORK5,SAVEAREA          NEW SAVE AREA                    18030003
         ST    SAVEREG,WORD2(WORK5)    OLD ADDRESS TO NEW               18040003
         ST    WORK5,WORD3(SAVEREG)    NEW ADDRESS TO OLD               18050003
         LR    SAVEREG,WORK5           NEW SAVE AREA                    18060003
         SPACE 2                                                        18070003
*   PROCESS INPUT PARAMETER LIST                                        18080003
         MVC   SAVEKEY(KEYL),PRIMEKEY  SAVE REFERENCE KEY               18090003
         LR    WORK4,PARMREG1          SAVE INPUT PARM LIST ADDRESS     18100003
         TM    X0(PARMREG1),LAST       MORE THAN ONE PARAMETER          18110003
         BO    RR3                     NO--                             18120003
         L     WORK6,WORD2(PARMREG1)   POSSIBLE POINTER TO KEY          18130003
         LA    WORK6,X0(WORK6)         CLEAR HIGH ORDER BYTE            18140003
         LTR   WORK6,WORK6             IS THERE A KEY POINTER           18150003
         BZ    RR3                     NO--                             18160003
RR1      MVC   PRIMEKEY(KEYL),X0(WORK6) RESET REFERENCE KEY             18170003
         SPACE 2                                                        18180003
*   FIND THE SPECIFIED RECORD                                           18190003
RR3      MVC   PARM1(PTR),WORD1(PARMREG1)  INPUT DCB POINTER AND OPTION 18200003
         LA    PARMREG1,PARM1                CODE TO PARAMETER LIST     18210003
         NI    PARM1,ALL-LAST          INSURE HIGH ORDER BIT OFF        18220003
         L     ENTRY,LO                ENTRY POINT ADDRESS              18230003
         CALL  (15)                    FIND THE RECORD                  18240003
         LTR   RETCDREG,RETCDREG       DOES THE RECORD EXIST            18250003
         BNZ   RR40                    NO--                             18260003
         SPACE 2                                                        18270003
*   THE RECORD WAS FOUND -- COMPUTE ADDRESS OF THE RECORD               18280003
RR2      L     WORK6,WORD2(PARMREG1)   BUFFER ADDRESS                   18290003
         USING BUFFER,WORK6                                             18300003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    18310003
         USING DATA,WORK7              BLOCK ADDRESSABILITY             18320003
         L     WORK5,BUFREF            ADDRESS OF RECORD LOCATOR        18330003
         LH    WORK5,X0(WORK5)         CONTENTS OF LOCATOR              18340003
         LA    WORK5,DATA(WORK5)       RECORD ADDRESS                   18350003
         SPACE 2                                                        18360003
*   DETERMINE FORM OF OUTPUT HERE                                       18370003
         TM    X0(WORK4),LAST          MORE THAN ONE PARAMETER          18380003
         BO    RR5                     NO--PASS BACK ADDRESS OF RECORD  18390003
         TM    WORD2(WORK4),LAST       MORE THAN TWO PARAMETERS         18400003
         BO    RR5                     NO--PASS BACK ADDRESS OF RECORD  18410003
         L     WORK2,WORD3(WORK4)      AREA ADDRESS, IF ANY             18420003
         LA    WORK2,X0(WORK2)         CLEAR HIGH ORDER                 18430003
         LTR   WORK2,WORK2             IS THERE AN ADDRESS              18440003
         BNZ   RR4                     YES-MOVE RECORD TO THIS ADDRESS  18450003
         SPACE 2                                                        18460003
*   SET UP RETURN PARM LIST AND RETURN TO CALLER HERE                   18470003
RR5      LR    PARMREG1,WORK5          RECORD ADDRESS                   18480003
         SR    RETCDREG,RETCDREG       RETURN CODE                      18490003
RR6      L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    18500003
         L     RETREG,L3*L4(SAVEREG)   RESTORE REGISTER 14              18510003
         L     PARMREG0,L8*L2+L4(SAVEREG) RESTORE REGISTER 0            18520003
         RETURN (2,12),T               RESTORE REGISTERS 2-12           18530003
         SPACE 2                                                        18540003
*   MOVE THE RECORD TO THE USER SPECIFIED AREA                        * 18550003
RR4      ST    WORK2,TEMP2             MOVE-TO ADDRESS                  18560003
         ST    WORK5,TEMP1             MOVE-FROM ADDRESS                18570003
         LA    PARMREG1,TEMP1          PARAMETER LIST ADDRESS           18580003
         MVC   TEMP3(L2),KEYL(WORK5)   LENGTH OF RECORD                 18590003
         LH    WORK2,TEMP3             LENGTH OF RECORD                 18600003
         LA    WORK2,KEYL(WORK2)       ACCOUNT FOR KEY LENGTH           18610003
         LR    PARMREG0,WORK2          LENGTH TO PARM REGISTER          18620003
         L     ENTRY,MV                ENTRY POINT ADDRESS              18630003
         CALL  (15)                    MOVE RECORD TO CALLERS AREA      18640003
         B     RR5                     RETURN                           18650003
         SPACE 2                                                        18660003
*   ON ERROR CONDITIONS ENTER HERE                                      18670003
RR40     MVC   PRIMEKEY(KEYL),SAVEKEY  RESTORE OLD KEY                  18680003
         TM    DCBSTATS,ERROR          ANY I/O ERRORS                   18690003
         BO    RR6                     YES- R.C. =12                    18700003
RR10     LA    RETCDREG,NRF            NO--RETURN CODE//NO RECORD       18710003
         B     RR6                     RETURN                           18720003
         SPACE 2                                                        18730003
         DROP  BASEREG,COMMREG,DATAREG,WORK6                            18740003
 TITLE 'EDIT COMMAND ACCESS METHOD --THE WAIT ROUTINE  ---IKJEBEWA'     18750003
*********************************************************************** 18760003
*                                                                     * 18770003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                    *  18780003
*                                                                     * 18790003
*FUNCTION -- THIS ROUTINE IS UTILIZED TO INSURE THAT A PREVIOUS I/O   * 18800003
*   REQUEST IS COMPLETE.  A WAIT MACRO IS ISSUED FOR A PRIOR XDAP     * 18810003
*   OPERATION AND A CHECK MACRO FOR A BSAM OPERATION.  IN THE EVENT   * 18820003
*   THAT AN I/O ERROR HAS OCCURRED, THE SYNAD ROUTINE WILL BE         * 18830003
*   GIVEN CONTROL DIRECTLY AFTER THE WAIT OR INDIRECTLY AS A RESULT   * 18840003
*   OF A CHECK MACRO.  THE SYNAD ROUTINE OBTAINS THE ERROR INFORM-    * 18850003
*   ATION VIA THE SYNADAF MACRO.                                      * 18860003
*        IF THE I/O HAS JUST COMPLETED ON A NEWLY FORMATTED BLOCK,    * 18870003
*   ITS TTR IS OBTAINED WITH THE NOTE MACRO AND RETAINED IN THE       * 18880003
*   BUFFER.                                                           * 18890003
*                                                                     * 18900003
*ENTRY POINTS --                                                      * 18910003
*       IKJEBEWA             -VIA A CALL FROM IKJEBEAD, IKJEBEAS,     * 18920003
*                               IKJEBERB, IKJEBEWB.                   * 18930003
*INPUT --  REGISTER 1 POINTS TO A TWO WORD PARAMETER LIST             * 18940003
*       WORD1-  CONTAINS ADDRESS OF THE WORKAREA, UTILWORK            * 18950003
*       WORD2-  CONTAINS ADDRESS OF BUFFER TO 'WAIT' UPON             * 18960003
*                                                                     * 18970003
*OUTPUT --  THE I/O OPERATION ON THE SPECIFIED IS ALLOWED TO          * 18980003
*   COMPLETE. ANY I/O ERROR RESULTS IN THE SYNADAF INFORMATION        * 18990003
*   BEING STORED IN THE 'IOMSG' FIELD OF THE WORKAREA.                * 19000003
*                                                                     * 19010003
*EXTERNAL REFERENCES --                                               * 19020003
*       MACROS USED                                                   * 19030003
*         WAIT               -'WAIT' ON XDAP OPERATION                * 19040003
*         CHECK              -'WAIT' AND 'CHECK' BSAM OPERATION       * 19050003
*         NOTE               -FIND TTR OF LAST NEW BLOCK              * 19060003
*         SYNADAF            -OBTAIN I/O ERROR INFORMATION            * 19070003
*         SYNADRLS           -RELEASE ERROR MESSAGE BUFFER            * 19080003
*                                                                     * 19090003
*EXITS,NORMAL -- REGISTER 15 CONTAINS A RETURN CODE OF ZERO AND THE   * 19100003
*   I/O ON THE SPECIFIED BUFFER IS INSURED OF BEING COMPLETED.        * 19110003
*                                                                     * 19120003
*EXITS,ERROR --  REGISTER 15 CONTAINS A RETURN CODE OF 12.  THE       * 19130003
*   SPECIFIC ERROR INFORMATION IS STORED IN THE WORKAREA.             * 19140003
*                                                                     * 19150003
*TABLES/WORK AREAS -- THIS ROUTINE IS DEPENDENT UPON THE DCB AND      * 19160003
*   BUFFER STATUS SWITCHES, THE BSAM DECBS, THE XDAP ECB, AND         * 19170003
*   THE ERROR MESSAGE FIELD IN THE WORKAREA.                          * 19180003
*                                                                     * 19190003
*ATTRIBUTES -- REFRESHABLE,NON-PRIVILEGED,ENABLED                     * 19200003
*                                                                     * 19210003
*NOTES --  THE REGISTER CONVENTIONS ARE AS FOLLOWS-                   * 19220003
*       BASEREG              -BASE REGISTER                           * 19230003
*       DATAREG              -WORK AREA ADDRESSING                    * 19240003
*       WORK6                -BUFFER ADDRESSING                       * 19250003
*                                                                     * 19260003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 19270003
*                                                                     * 19280003
*********************************************************************** 19290003
         SPACE 2                                                        19300003
IKJEBEWA CSECT                                                          19310003
         ENTRY IKJEBESY                                                 19320003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          19330003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               19340003
         LA    SAVEREG,SAVEL(SAVEREG)  STEP TO NEXT SAVEAREA            19350003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              19360003
         USING IKJEBEWA,BASEREG                                         19370003
         L     DATAREG,WORD1(PARMREG1) WORK AREA ADDRESS                19380003
         USING UTILWORK,DATAREG                                         19390003
         SPACE 2                                                        19400003
*   CHECK FOR TYPE OF OPERATION (BSAM OR XDAP)                          19410003
         L     WORK6,WORD2(PARMREG1)   BUFFER ADDRESS                   19420003
         USING BUFFER,WORK6                                             19430003
         TM    BUFSTATS,WAITB          WAS THIS A BSAM OPERATION        19440003
         BO    WA5                     YES-GO ISSUE CHECK MACRO         19450003
         SPACE 2                                                        19460003
*   INSURE THAT THE XDAP OPERATION IS COMPLETE                          19470003
         LA    PARMREG1,XRECB          ECB FOR XDAP READ                19480003
         TM    BUFSTATS,WAITXR         WAS THIS A XDAP READ             19490003
         BO    WA3                     YES-GO CHECK IF A-OK             19500003
         LA    PARMREG1,XWECB          ECB FOR XDAP WRITE               19510003
WA3      TM    X0(PARMREG1),COMPLETE   IS THE I/O COMPLETE              19520003
         BO    WA6                     YES--GO CHECK STATUS             19530003
         WAIT  ECB=(1)                 WAIT FOR COMPLETION              19540003
         SPACE 2                                                        19550003
*   TEST FOR ERRORS AND PROCESS SAME IN SYNAD ROUTINE                   19560003
WA6      CLI   X0(PARMREG1),GOOD       ANY ERRORS                       19570003
         BE    WA11                    NO--RETURN                       19580003
         L     ENTRY,DCBSYNAD          ADDRESS OF SYNAD ROUTINE         19590003
         BALR  RETREG,ENTRY            PROCESS ERROR INFORMATION        19600003
WA21     LA    RETCDREG,IOERR          SET RETURN CODE =12              19610003
         B     WA2                     RETURN TO CALLER                 19620003
         SPACE 2                                                        19630003
*   INSURE A COMPLETED BSAM OPERATION HERE                              19640003
WA5      LA    PARMREG1,WRDECB         ADDRESS OF BSAM WRITE DECB       19650003
WA52     CHECK (1)                     WAIT FOR COMPLETION OF I/O       19660003
         TM    DCBSTATS,ERROR          WERE THERE ANY ERRORS            19670003
         BO    WA21                    YES--RETURN                      19680003
         SPACE 2                                                        19690003
*   LOG THE TTR OF ALL NEW BLOCKS                                       19700003
         LA    PARMREG1,UTILDCB        DCB ADDRESS                      19710003
         NOTE  (1)                     OBTAIN TTR                       19720003
         ST    PARMREG1,BUFTTR         SAVE TTR                         19730003
         SPACE 2                                                        19740003
*   TURN OFF ALL FLAGS AND EXIT HERE                                    19750003
WA11     NI    BUFSTATS,ALL-WAITB-WAITXR-WAITXW  TURN OFF WAIT FLAGS    19760003
WA1      SR    RETCDREG,RETCDREG       SET RETURN CODE                  19770003
WA2      L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    19780003
         RETURN (14,12),T,RC=(15)      RESTORE THE REGISTERS            19790003
         EJECT                                                          19800003
*   ERROR PROCESSING HERE                                               19810003
*   REGISTER 0 CONTAINS THE ADDRESS OF DECB FOR BSAM OPERATIONS         19820003
*   REGISTER 1 INDICATES BSAM READ OR WRITE AND DCB ADDRESS             19830003
*   REGISTERS 2-13 SAME AS AT 'CHECK' TIME OR WAIT ON XDAP              19840003
*   REGISTER 14 IS THE RETURN ADDRESS                                   19850003
*   REGISTER 15 IS THE ENTRY POINT ADDRESS                              19860003
IKJEBESY EQU   *                       ENTER SYNAD ROUTINE HERE         19870003
*   DETERMINE THE OPERATION IN ERROR                                    19880003
         TM    BUFSTATS,WAITB          IS THIS A BSAM OPERATION         19890003
         BO    SY1                     YES-                             19900003
         SPACE 2                                                        19910003
*   PROCESS XDAP ERRORS HERE                                            19920003
         LA    PARMREG1,XRIOB          XDAP READ IOB ADDRESS            19930003
         TM    BUFSTATS,WAITXR         WAS THIS A XDAP READ             19940003
         BO    SY2                     YES-GO ISSUE SYNADAF             19950003
         LA    PARMREG1,XWIOB          XDAP WRITE IOB ADDRESS           19960003
SY2      SYNADAF ACSMETH=EXCP          OBTAIN ERROR INFORMATION         19970003
SY11     MVC   IOMSG(K78),K50(PARMREG1) I/O ERROR INFO TO WORKAREA      19980003
         SYNADRLS                      RELEASE THE SYNADAF BUFFER       19990003
         OI    DCBSTATS,ERROR          INDICATE PERMANENT ERROR         20000003
         BR    RETREG                  RETURN                           20010003
         SPACE 2                                                        20020003
*   PROCESS BSAM ERRORS HERE                                            20030003
SY1      SYNADAF ACSMETH=BSAM          OBTAIN ERROR INFORMATION         20040003
         B     SY11                    RETURN                           20050003
         SPACE 2                                                        20060003
         DROP  BASEREG,DATAREG,WORK6                                    20070003
 TITLE 'EDIT COMMAND ACCESS METHOD --WRITE A BLOCK ROUTINE ---IKJEBEWB' 20080003
*********************************************************************** 20090003
*                                                                     * 20100003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                    *  20110003
*                                                                     * 20120003
*FUNCTION --  THIS ROUTINE INITIATES A WRITE OPERATION OF THE BLOCK   * 20130003
*   IN A SPECIFIED BUFFER.  BEFORE THE WRITE IS STARTED, ANY PREVIOUS * 20140003
*   I/O IS BROUGHT TO COMPLETION BY CALLING THE WAIT ROUTINE, IKJEBEWA* 20150003
*   NEW BLOCKS ARE WRITTEN OUT WITH A BSAM WRITE AND A XDAP WRITE     * 20160003
*   IS USED ON ALL PREVIOUSLY FORMATTED BLOCKS.                       * 20170003
*        IF AN XDAP WRITE IS USED ON AN OLD BLOCK, ITS TTR IS         * 20180003
*   COMVERTED TO AN ACTUAL DEVICE TRACK ADDRESS BY THE SYSTEM         * 20190003
*   RESIDENT CONVERT ROUTINE, IECPCNVT.                               * 20200003
*        ANYTIME A BLOCK IS WRITTEN OUT, BIT SWITCHES ARE SET IN      * 20210003
*   THE BUFFER INDICATING THE TYPE OF OPERATION AND THE BUFFER        * 20220003
*   ADDRESS IS SAVED IN THE WORKAREA.                                 * 20230003
*                                                                     * 20240003
*ENTRY POINT --                                                       * 20250003
*       IKJEBEWB   -VIA A CALL FROM IKJEBEAD, IKJEBEAS, IKJEBEDL,     * 20259003
*                     IKJEBEDU, AND IKJEBEWR.                         * 20268003
*                                                                     * 20277003
*INPUT --  REGISTER ONE POINTS TO A TWO-WORD PARAMETER LIST           * 20286003
*       WORD1-   CONTAINS THE ADDRESS OF THE WORKAREA                 * 20295003
*       WORD2-   CONTAINS THE ADDRESS OF THE BUFFER THAT CONTAINS     * 20304003
*                THE BLOCK TO BE WRITTEN.                             * 20313003
*                                                                     * 20322003
*OUTPUT -- A WRITE OPERATION TO A DIRECT ACCESS DEVICE IS INITIATED   * 20331003
*   FOR THE BLOCK CONTAINED IN THE SPECIFIED BUFFER.                  * 20340003
*                                                                     * 20349003
*EXTERNAL REFERENCES --                                               * 20358003
*       IKJEBEWA             -WAITS ON ANY I/O IN PROGRESS            * 20367003
*       IECPCNVT             -CONVERTS TTR TO MBBCCHHR                * 20376003
*       MACROS USED                                                   * 20385003
*         WRITE              -INITIATE WRITE OF NEW BLOCK             * 20394003
*         XDAP               -INITIATE WRITE OF OLD BLOCK             * 20403003
*EXITS,NORMAL --  RETURNS TO CALLING ROUTINE WITH REGISTER 15         * 20412003
*   CONTAINING A RETURN CODE OF 0.                                    * 20421003
*                                                                     * 20430003
*EXITS,ERROR --   RETURNS TO CALLING ROUTINE WITH REGISTER 15         * 20439003
*   CONTAINING A RETURN CODE OF 12.                                   * 20448003
*                                                                     * 20457003
*TABLES/WORK AREAS -- THIS ROUTINE IS DEPENDENT ON THE VECTOR TABLE   * 20466003
*   FOR CALLS TO EXTERNAL ROUTINES.  THIS ROUTINE IS DEPENDENT ON THE * 20475003
*   CVT FOR THE ADDRESS OF THE RESIDENT CONVERT ROUTINE, IECPCNVT.    * 20484003
*                                                                     * 20493003
*ATTRIBUTES -- REFRESHABLE, ENABLED, NON-PRIVILEGED                   * 20502003
*                                                                     * 20511003
*NOTES --  REGISTER CONVENTIONS ARE AS FOLLOWS-                       * 20520003
*       BASEREG              -BASE REGISTER                           * 20529003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 20538003
*       DATAREG              -WORKAREA ADDRESSING                     * 20547003
*       WORK6                -BUFFER ADDRESSING                       * 20556003
*       WORK7                -BLOCK ADDRESSING                          20565003
*       WORK2,WORK3          -WORK REGISTERS                          * 20574003
*                                                                     * 20583003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT                        * 20592003
*                                                                     * 20601003
*********************************************************************** 20610003
         SPACE 2                                                        20619003
IKJEBEWB CSECT                                                          20628003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          20637003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               20646003
         LA    SAVEREG,SAVEL(SAVEREG)  STEP TO NEXT SAVE AREA.          20655003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              20664003
         USING IKJEBEWB,BASEREG                                         20673003
         L     DATAREG,WORD1(PARMREG1) WORK AREA ADDRESS                20682003
         USING UTILWORK,DATAREG                                         20691003
         L     COMMREG,VTABLE          TABLE OF ROUTINE ADDRESSES       20700003
         USING VECTABLE,COMMREG                                         20709003
         SPACE 2                                                        20718003
*   DETERMINE THE TYPE OF I/O OPERATION HERE                            20727003
WB3      L     WORK6,WORD2(PARMREG1)   BUFFER ADDRESS                   20736003
         USING BUFFER,WORK6            ADDRESSABILITY                   20745003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    20754003
         USING DATA,WORK7              BLOCK ADDRESSABILITY             20763003
         TM    BUFSTATS,NEWBLK         IS THIS A NEW BLOCK              20772003
         BZ    WB2                     NO--USE XDAP WRITE               20781003
*                                      YES-USE BSAM WRITE               20790003
         SPACE 2                                                        20799003
*   WRITE OUT THE NEW BLOCK                                             20808003
         WRITE WRDECB,SF,UTILDCB,DATA,'S',,,MF=E                        20817003
         MVI   BUFSTATS,WAITB          INDICATE TO WAIT LATER ON        20826003
*                                        THE BSAM WRITE OPERATION       20835003
         SPACE 2                                                        20844003
*   PERFORM FINAL HOUSEKEEPING AND EXIT HERE                            20853003
WB11     SR    RETCDREG,RETCDREG       SET RETURN CODE = 0              20862003
WB10     EQU   *                       RETURN HERE ON ERRORS            20871003
WB5      L     SAVEREG,WORD2(SAVEREG)  OLD SAVE AREA                    20880003
         RETURN (14,12),T,RC=(15)      RESTORE THE REGISTERS            20889003
         SPACE 2                                                        20898003
*   CONVERT TTR OF BLOCK TO ACTUAL TRACK ADDRESS                        20907003
WB2      L     PARMREG0,BUFTTR         TTR TO BE CONVERTED              20916003
         L     PARMREG1,DCBDEBAD       ADDRESS OF DEB                   20925003
         LA    WORK2,WBLKREF           ADDRESS TO RECEIVE MBBCCHHR      20934003
         LR    WORK3,DATAREG           SAVE ADDRESS FOR WORKAREA        20943003
         DROP  DATAREG                                                  20952003
         USING UTILWORK,WORK3                                           20961003
         STM   WORK9,SAVEREG,TEMPREGS  SAVE REGISTERS 9-13              20970003
         L     ENTRY,CVTPTR            ADDRESS OF CVT                   20979003
         USING CVT,ENTRY                                                20988003
         L     ENTRY,CVTPCNVT          ADDRESS OF CONVERT ROUTINE       20997003
         DROP  ENTRY                                                    21006003
         BALR  RETREG,ENTRY            CONVERT TTR TO MBBCCHHR          21015003
         LM    WORK9,SAVEREG,TEMPREGS  RESTORE REGISTERS 9-13           21024003
         DROP  WORK3                                                    21033003
         USING UTILWORK,DATAREG                                         21042003
         SPACE 2                                                        21051003
*   WRITE OUT THE BLOCK WITH AN XDAP-WRITE HERE                         21060003
         XDAP  XDAPWLST,WI,UTILDCB,DATA,,MF=E                           21069003
         MVI   BUFSTATS,WAITXW         SET WAIT FLAG                    21078003
         B     WB11                    RETURN                           21087003
         SPACE 2                                                        21096003
         DROP  BASEREG,COMMREG,DATAREG,WORK6,WORK7                      21105003
 TITLE 'EDIT COMMAND ACCESS METHOD --WRITE PURGE ROUTINE ---IKJEBEWP'   21114003
*****************************************************************       21123003
*                                                                       21132003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                     * 21141003
*                                                                       21150003
*FUNCTION -- THIS ROUTINE IS CALLED AFTER A WRITE SEQUENTIAL            21159003
*   OPERATION HAS COMPLETED.  ITS PURPOSE IS TO WAIT ON ANY             21168003
*   OUTSTANDING I/O AND TO INITIATE AND COMPLETE THE I/O                21177003
*   AND DIRECTORY UPDATING FOR THE LAST BLOCK.  THE LAST                21186003
*   BUFFER PROCESSED IS ALWAYS KNOWN FROM THE 'BUFCURNT'                21195003
*   FIELD.                                                              21204003
*                                                                       21213003
*ENTRY POINTS --                                                        21222003
*       IKJEBEWP             -VIA A CALL FROM IKJEBEUT                  21231003
*                                                                       21240003
*INPUT --  REGISTER 1 POINTS TO A 3-WORD PARAMETER LIST.                21249003
*       WORD1-   ADDRESS OF WORKAREA/DCB                                21258003
*       WORD2-   NOT USED.                                              21267003
*       WORD3-   NOT USED.                                              21276003
*                                                                       21285003
*OUTPUT --  THE OPERATION TAKES PLACE AS DESCRIBED ABOVE. THE           21294003
*       REGISTERS ARE DESCRIBED UNDER 'EXIT' BELOW.                     21303003
*                                                                       21312003
*EXTERNAL REFERENCES --                                                 21321003
*       IKJEBEWB             -WRITES OUT BLOCKS                         21330003
*       IKJEBEWA             -WAITS ON THE I/O                          21339003
*       IKJEBEDU             -UPDATES THE DIRECTORY                     21348003
*                                                                       21357003
*EXITS,NORMAL --  RETURNS TO THE CALLING ROUTINE.  THE OUTPUT           21366003
*   IS DESCRIBED ABOVE.  REGISTER 15 CONTAINS A RETURN CODE             21375003
*   OF ZERO.                                                            21384003
*                                                                       21393003
*EXITS,ERROR --  RETURNS TO THE CALLING ROUTINE WITH REGISTER 15        21402003
*   CONTAINING A RETURN CODE OF 12.                                     21411003
*                                                                       21420003
*TABLES/WORK AREAS --  THIS ROUTINE IS DEPENDENT ON THE VECTOR          21429003
*   TABLE FOR EXTERNAL REFERENCES.                                      21438003
*                                                                       21447003
*ATTRIBUTES --  REFRESHABLE,ENABLED,NON-PRIVILEGED                      21456003
*                                                                       21465003
*NOTES --  REGISTER CONVENTIONS ARE AS FOLLOWS-                         21474003
*       BASEREG              -BASE REGISTER                             21483003
*       COMMREG              -VECTOR TABLE ADDRESSES                    21492003
*       DATAREG              -WORKAREA/DCB ADDRESSING                   21501003
*       WORK6                -BUFFER ADDRESSING                         21510003
*       WORK7                -BUFFER ADDRESSING                         21519003
*       WORK5                -WORK REGISTER                             21528003
*                                                                       21537003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT.                         21546003
*                                                                       21555003
*****************************************************************       21564003
         SPACE 2                                                        21573003
IKJEBEWP CSECT                                                          21582003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          21591003
         SAVE  (14,12),T,*             SAVE THE REGS                    21600003
         LR    BASEREG,ENTRY           BASE ADDRESSING                  21609003
         USING IKJEBEWP,BASEREG        ADDRESSABILITY                   21618003
         L     DATAREG,WORD1(PARMREG1) WORKAREA                         21627003
         USING UTILWORK,DATAREG        ADDRESSABILITY                   21636003
         L     COMMREG,VTABLE          VECTOR TABLE                     21645003
         USING VECTABLE,COMMREG        ADDRESSABILITY                   21654003
         SPACE 2                                                        21663003
*   SET UP A SAVE AREA                                                  21672003
         LA    WORK5,SAVEAREA          1ST SAVEAREA                     21840003
         ST    SAVEREG,WORD2(,WORK5)   OLD AREA TO NEW                  21850003
         ST    WORK5,WORD3(,SAVEREG)   NEW AREA TO OLD                  21860003
         LR    SAVEREG,WORK5           NEW SAVEAREA                     21870003
         SPACE 2                                                        21880003
*   GET ADDRESS OF BUFFER CURRENTLY BEING WRITTEN                       21890003
*     ADDRESS OF THE NEXT BUFFER                                        21900003
         L     WORK7,BUFCURNT          LAST BUFFER PROCESSED            21910003
         USING BUFFER,WORK6            ADDRESSABILITY                   21920003
         L     WORK6,BBKCHAIN-BUFFER(WORK7)  PREV. BUFFER ADDR.         21930003
         SPACE 2                                                        21940003
WP40     TM    BUFSTATS,WAITB          PREVIOUS WAITING                 21950003
         BO    WP70                    NO--GO WRITE CURRENT             21960003
         SPACE 2                                                        21970003
*   INITIATE THE WRITE ON THE CURRENT BUFFER                            21980003
WP50     ST    WORK7,PARM2             BUFFER ADDRESS                   21990003
         LA    PARMREG1,PARM1          PARM LIST ADDR.                  22000003
         L     ENTRY,WB                ROUTINE ADDRESS                  22010003
         CALL  (15)                    WRITE THE BLOCK                  22020003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       22030003
         BNZ   WP130                   YES-GO EXIT                      22040003
         SPACE 2                                                        22050003
WP60     NI    DCBSTATS,ALL-DCBSEQ     OPERATION COMPLETE               22060003
         LR    WORK6,WORK7             CURRENT BUFFER                   22070003
         SPACE 2                                                        22080003
*   WAIT FOR THE COMPLETION OF THE I/O HERE                             22090003
WP70     ST    WORK6,PARM2             BUFFER ADDR. TO LIST             22100003
         LA    PARMREG1,PARM1          PARM LIST ADDR.                  22110003
         L     ENTRY,WA                ROUTINE ADDRESS                  22120003
         CALL  (15)                    WAIT FOR I/O                     22130003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       22140003
         BNZ   WP130                   YES-GO EXIT                      22150003
         SPACE 2                                                        22160003
*   UPDATE THE DIRECTORY HERE                                           22170003
WP80     MVC   PARM3,BUFTTR            TTR-THIS BLOCK                   22180003
         LA    WORK5,BUFREF            HIGH KEY//THIS BLOCK             22190003
         ST    WORK5,PARM2             ADDR. TO PARM LIST               22200003
         LA    PARMREG1,PARM1          PARM LIST ADDR.                  22210003
         MVI   DIRCODE(PARMREG1),ALLKEY ENTIRE ENTRY                    22220003
         L     ENTRY,DU                ROUTINE ADDRESS                  22230003
         CALL  (15)                    UPDATE DIRECTORY                 22240003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       22250003
         BNZ   WP130                   YES-GO EXIT                      22260003
         SPACE 2                                                        22270003
*   CHECK TO SEE IF ALL BUFFERS PROCESSED                               22280003
WP100    TM    DCBSTATS,DCBSEQ         ARE WE FINISHED                  22290003
         BO    WP50                    NO--TAKE ONE MORE PASS           22300003
         SPACE 2                                                        22310003
*   NORMAL EXIT HERE                                                    22320003
WP120    SR    RETCDREG,RETCDREG       RETURN CODE=0                    22330003
*   ERROR EXIT HERE                                                     22340003
WP130    SR    WORK5,WORK5             CLEAR                            22350003
         ST    WORK5,BUFCURNT          INITIALIZE TO 0                  22360003
         STH   WORK5,BUFCTR            INITIALIZE TO 0                  22370003
         L     SAVEREG,WORD2(,SAVEREG) OLD SAVE AREA                    22380003
         RETURN (14,12),T,RC=(15)      RESTORE REGS                     22390003
         SPACE 2                                                        22400003
WPPATCH  DC    C'ZAP HERE'                                              22410003
         DC    7D'0'                                                    22420003
         SPACE 2                                                        22430003
         DROP  BASEREG,DATAREG,COMMREG,WORK6        RELEASE             22440003
 TITLE 'EDIT COMMAND ACCESS METHOD --WRITE A RECORD --- IKJEBEWR'       22450003
*********************************************************************** 22460003
*                                                                     * 22470003
*STATUS -- VERSION NO. 02, VS2     RELEASE NO. 03                    *  22480003
*                                                                     * 22490003
*FUNCTION --  THIS ROUTINE IS CALLED TO PLACE NEW RECORDS IN THE      * 22500003
*   DATA SET.  A CHECK IS ALWAYS MADE TO SEE IF A RECORD EXISTS       * 22510003
*   WITH THE SAME KEY VALUE AS THE NEW INPUT RECORD.  IF A RECORD     * 22520003
*   EXISTS WITH THE SAME KEY VALUE, THE LENGTH OF THE OLD RECORD      * 22530003
*   IS CHECKED TO SEE IF THE NEW RECORD WILL FIT IN ITS PLACE. IF     * 22540003
*   THE OLD RECORD IS THE SAME SIZE OR LARGER, THE NEW RECORD         * 22550003
*   IS MOVED TO THE SAME POSITION AND NO DIRECTORY UPDATING IS        * 22560003
*   NECESSARY.                                                        * 22570003
*        IN THE EVENT THAT THE NEW RECORD IS LARGER, THE OLD RECORD   * 22580003
*   IS DELETED BY USING THE RECORD REMOVAL ROUTINE, IKJEBEDL.  THAT   * 22590003
*   BLOCK IS THEN CHECKED TO SEE IF THERE IS SPACE FOR THE NEW RECORD.* 22600003
*   ANYTIME A RECORD LOGICALLY BELONGS IN A BLOCK AND THERE IS        * 22610003
*   INSUFFICIENT SPACE, IT IS SPLIT INTO TWO DATA BLOCKS.             * 22620003
*        IF THE KEY OF THE INPUT RECORD IS UNIQUE, THE NEW INPUT      * 22630003
*   RECORD MUST BE INSERTED IN THE DATA BLOCK WHERE IT LOGICALLY      * 22640003
*   BELONGS.  AGAIN, AS IN THE ABOVE CASE, THE DATA BLOCK MAY BE      * 22650003
*   REQUIRED TO BE SPLIT INTO TWO DATA BLOCKS.                        * 22660003
*        WHENEVER A NEW RECORD BECOMES THE LAST LOGICAL RECORD OF     * 22670003
*   A DATA BLOCK OR DATA BLOCKS ARE SPLIT, THE DIRECTORY IS UPDATED   * 22680003
*   BY CALLING THE DIRECTORY UPDATE ROUTINE, IKJEBEDU.                * 22690003
*        ANYTIME A BUFFER IS MODIFIED, ITS 'UPDATE' FLAG WILL BE      * 22700003
*   TURNED ON SO THAT THEY GET WRITTEN OUT, IF NECESSARY              * 22710003
*                                                                     * 22720003
*ENTRY POINT --                                                       * 22730003
*       IKJEBEWR             -VIA A CALL FROM IKJEBEUT                * 22740003
*                                                                     * 22750003
*INPUT --  REGISTER 1 POINTS TO A THREE WORD PARAMETER LIST           * 22760003
*       WORD1-   ADDRESS OF THE WORKAREA                              * 22770003
*       WORD2-   ADDRESS OF NEW RECORD TO BE PLACED IN DATA SET       * 22780003
*       WORD3-   NOT USED                                             * 22790003
*                                                                     * 22800003
*OUTPUT --  THE SPECIFIED RECORD HAS BEEN PLACED IN THE DATA SET      * 22810003
*   THE REGISTERS ARE DESCRIBED UNDER 'EXIT' BELOW.                   * 22820003
*                                                                     * 22830003
*EXTERNAL REFERENCES --                                               * 22840003
*       IKJEBELO             -CHECK IF RECORD EXISTS                  * 22850003
*       IKJEBEDL             -DELETE THE OLD RECORD                   * 22860003
*       IKJEBEDU             -UPDATE THE DIRECTORY                    * 22870003
*       IKJEBEAD             -DETERMINE TTR FOR NEW BLOCK             * 22880003
*       IKJEBEMV             -MOVES DATA OR CONTROL INFORMATION       * 22890003
*       IKJEBEWB             -WRITE OUT DATA BLOCKS                   * 22900003
*       GETMAIN              -GET CORE FOR NEW BLOCKS                   22910003
*       FREEMAIN             -RELEASE CORE FOR BLOCKS                   22920003
*                                                                     * 22930003
*EXITS,NORMAL --  OUTPUT AS DESCRIBED ABOVE.  REGISTER 15 CONTAINS    * 22940003
*   A RETURN CODE OF 0.                                               * 22950003
*                                                                     * 22960003
*EXITS,ERROR --  RETURNS TO THE CALLING ROUTINE WITH A RETURN CODE    * 22970003
*   OF 12.                                                            * 22980003
*                                                                     * 22990003
*TABLES/WORK AREAS --                                                 * 23000003
*       DEPENDENT ON THE VECTOR TABLE FOR EXTERNAL REFERENCES.        * 23010003
*                                                                     * 23020003
*ATTRIBUTES -- REFRESHABLE, NON-PRIVILEGED, ENABLED                   * 23030003
*                                                                     * 23040003
*NOTES --  REGISTER CONVENTIONS AREAS FOLLOWS-                        * 23050003
*       BASEREG              -BASE REGISTER                           * 23060003
*       COMMREG              -VECTOR TABLE ADDRESSING                 * 23070003
*       DATAREG              -WORK AREA ADDRESSING                    * 23080003
*       WORK6,8              -BUFFER ADDRESSES                          23090003
*       WORK7,9              -BLOCK ADDRESSES                           23100003
*       WORK2                -INPUT RECORD ADDRESS                    * 23110003
*       WORK3,WORK4,WORK5    -WORK REGISTERS                          * 23120003
*                                                                     * 23130003
*   THIS SUBROUTINE IS CHARACTER CODE INDEPENDENT                     * 23140003
*                                                                     * 23150003
*********************************************************************** 23160003
         SPACE 2                                                        23170003
         SPACE                                                          23180003
IKJEBEWR CSECT                         WRITE A RECORD                   23190003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          23200003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               23210003
         LR    BASEREG,ENTRY           ENTRY POINT ADDRESS              23220003
         USING IKJEBEWR,BASEREG        ADDRESSABILITY                   23230003
         L     DATAREG,WORD1(PARMREG1) WORKAREA/DCB                     23240003
         USING UTILWORK,DATAREG        ADDRESSABILITY                   23250003
         L     COMMREG,VTABLE          ROUTINE ADDRESSED                23260003
         USING VECTABLE,COMMREG        ADDRESSABILITY                   23270003
         LA    WORK5,SAVEAREA          NEW SAVE AREA                    23280003
         ST    SAVEREG,WORD2(,WORK5)   OLD ADDRESS TO NEW               23290003
         ST    WORK5,WORD3(,SAVEREG)   NEW ADDRESS TO OLD               23300003
         LR    SAVEREG,WORK5           NEW SAVE AREA                    23310003
         SPACE 2                                                        23320003
*   CHECK IF THE RECORD ALREADY EXISTS                                  23330003
         L     WORK2,WORD2(,PARMREG1)  ADDRESS OF RECORD                23340003
WR10     LA    PARMREG1,PARM1          PARM LIST ADDRESS                23350003
         LA    DATAREG,X0(DATAREG)     OPTION CODE=0                    23360003
         ST    DATAREG,PARM1           CODE AND DCB TO LIST             23370003
         MVC   PRIMEKEY(KEYL),X0(WORK2) INPUT KEY VALUE                 23380003
         L     ENTRY,LO                ENTRY POINT ADDRESS              23390003
         CALL  (15)                    CHECK FOR RECORD                 23400003
         TM    DCBSTATS,ERROR          ANY I/O ERRORS                   23410003
         BO    WR200                   YES--RETURN                      23420003
         LTR   RETCDREG,RETCDREG       DOES RECORD EXIST                23430003
         BNZ   WR100                   NO--GO PROCESS NEW RECORD        23440003
         SPACE 2                                                        23450003
*   YES, THE RECORD EXISTS // COMPARE THE LENGTHS                       23460003
         L     WORK6,WORD2(,PARMREG1)  BUFFER ADDR. WITH RECORD         23470003
         USING BUFFER,WORK6            BUFFER ADDRESSABILITY            23480003
         L     WORK7,BUFBLOCK          BLOCK ADDR. WITH RECORD          23490003
         USING DATA,WORK7              BLOCK ADDRESSABILITY             23500003
         L     WORK5,BUFREF            LOCATOR ADDRESS                  23510003
         LH    WORK5,X0(WORK5)         LOCATOR CONTENTS                 23520003
         LA    WORK5,DATA(WORK5)       OLD RECORD ADDRESS               23530003
         CLC   KEYL(L2,WORK2),KEYL(WORK5) IS NEW RECORD LARGER          23540003
         BNH   WR180                   NO--GO PROCESS                   23550003
         SPACE 2                                                        23560003
*   NEW RECORD CANNOT GO INTO THE OLD RECORD POSITION                   23570003
*   DELETE THE OLD RECORD // PROCESS NEW RECORD AS INITIAL ENTRY        23580003
         ST    WORK6,PARM2             BUFFER ADDRESS                   23590003
         LA    PARMREG1,PARM1          PARM LIST ADDRESS                23600003
         L     ENTRY,DL                ROUTINE ADDRESS                  23610003
         CALL  (15)                    DELETE OLD RECORD                23620003
         TM    DCBSTATS,ERROR          ANY ERRORS                       23630003
         BO    WR200                   YES-RETURN                       23640003
         B     WR10                    PROCESS NEW RECORD               23650003
         SPACE 2                                                        23660003
WR100    CH    RETCDREG,WREMPTY        IS DATASET EMPTY                 23670003
         BE    WR150                   YES-GO PROCESS RECORD            23680003
         SPACE 2                                                        23690003
*   CHECK IF SPACE IS AVAILABLE IN THE DATA BLOCK                       23700003
         L     WORK6,WORD2(PARMREG1)   BUFFER ADDRESS                   23710003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    23720003
         LH    WORK3,NUMREC            NO. OF RECORDS IN BLOCK          23730003
         LA    WORK3,CTRLEND-DATA+LOCL+KEYL(WORK3,WORK3) PLUS           23740003
*                                      BLOCK AND RECORD OVERHEAD        23750003
         LH    WORK4,DATASTRT          DISPLACEMENT TO THE              23760003
*                                      1ST PHSICAL RECORD               23770003
         SR    WORK4,WORK3             WORK4=AVAILABLE SPACE            23780003
         CH    WORK4,KEYL(WORK2)       IS SPACE AVAILABLE               23790003
*                                      FOR THE NEW RECORD               23800003
         BNL   WR170                   YES-PLACE RECORD IN BLOCK        23810003
         SPACE 2                                                        23820003
*   DETERMINE IF  NEW BLOCK IS REQUIRED, SPACE CAN BE RECLAIMED,        23830003
*     OR THE OLD BLOCK MUST BE SPLIT.                                   23840003
         LH    WORK3,NUMREC            NO. OF RECORDS                   23850003
         AR    WORK3,WORK3             TIMES TWO                        23860003
         LH    WORK3,LOCATORS-LOCL(WORK3) LAST LOCATOR CONTENTS         23870003
         LA    WORK3,DATA(WORK3)       ADDRESS OF LAST RECORD           23880003
         CLC   X0(KEYL,WORK2),X0(WORK3) NEW KEY TO LAST OLD             23890003
         BH    WR150                   NO SPLIT NECESSARY               23900003
         SPACE 2                                                        23910003
*   THE NEW RECORD LOGICALLY BELONGS IN THIS BLOCK AND                  23920003
*     THERE IS INSUFFICIENT SPACE                                       23930003
*   CHECK FOR RECLAIMABLE SPACE                                         23940003
         SPACE 2                                                        23950003
         LH    WORK3,KEYL(WORK2)       NEW RECORD LENGTH                23960003
         LA    WORK3,KEYL(,WORK3)      PLUS KEY LENGTH                  23970003
         AH    WORK4,RECVSP            AVAIL.+RECOVERABLE               23980003
         CR    WORK3,WORK4             SPACE AVAILABLE                  23990003
         BH    WR110                   NO--DO BLOCK SPLIT               24000003
         SPACE 2                                                        24010003
*   RECLAIM SPACE HERE FOR THE NEW RECORD                               24020003
*   GET CORE FOR A NEW BUFFER BLOCK                                     24030003
         MVC   TEMPAREA(WRGMEND-WRGM),WRGM  LIST FORM                   24040003
         LH    WORK3,DCBBLKSI          GETMAIN SIZE                     24050003
         LA    PARMREG1,TEMPAREA       PARM LIST ADDR.                  24060003
         GETMAIN EC,A=TEMPWRD1,LV=(WORK3),MF=(E,(1))  GET CORE          24070003
         LTR   RETCDREG,RETCDREG       CORE AVAILABLE?                  24080003
         BNZ   WR110                   NO--THEN KEEP CORE               24090003
*                                      BLOCK AND SPLIT IT.              24100003
         L     WORK9,TEMPWRD1          ADDR. OF NEW BLOCK               24110003
         XC   NUMREC-DATA(CTRLEND-DATA,WORK9),NUMREC-DATA(WORK9)        24120003
*                                      CLEAR CONTROL FIELDS             24130003
         LH    WORK5,DCBBLKSI          SIZE OF BLOCK                    24140003
         STH   WORK5,DATASTRT-DATA(WORK9) SPACE AVAILABLE               24150003
WR105    LH    WORK5,NUMREC            RECORDS TO MOVE                  24160003
         AR    WORK5,WORK5             TIMES TWO                        24170003
         LH    WORK3,LOCATORS-LOCL(WORK5)  LOCATOR CONTENTS             24180003
         LA    WORK3,DATA(WORK3)       RECORD ADDRESS                   24190003
         MVC   TEMP1(L2),KEYL(WORK3)   RECORD LENGTH                    24200003
         LH    WORK4,TEMP1             RECORD LENGTH                    24210003
         LA    WORK4,KEYL(WORK4)       ACCOUNT FOR KEY                  24220003
         LR    PARMREG0,WORK4          TOTAL LENGTH PARM                24230003
         ST    WORK3,TEMP1             MOVE-FROM ADDRESS                24240003
         LH    WORK3,DATASTRT-DATA(WORK9) NEXT AVAIL. SPACE             24250003
         SR    WORK3,PARMREG0          NEW AVAILABLE                    24260003
         STH   WORK3,DATASTRT-DATA(WORK9) FOR NEXT PASS                 24270003
         LA    WORK4,LOCATORS-LOCL-DATA(WORK5,WORK9) NEXT LOC.          24280003
         STH   WORK3,X0(WORK4)         RECORD LOCATOR                   24290003
         LA    WORK3,X0(WORK3,WORK9)   NEW RECORD ADDR.                 24300003
         ST    WORK3,TEMP2             MOVE-TO ADDRESS                  24310003
         LH    WORK4,NUMREC-DATA(WORK9) NEW BLOCK RECORDS               24320003
         LA    WORK4,ONE(,WORK4)       PLUS ONE                         24330003
         STH   WORK4,NUMREC-DATA(WORK9) NEW TOTAL                       24340003
         LA    PARMREG1,TEMP1          PARM LIST ADDR.                  24350003
         L     ENTRY,MV                ROUTINE ADDRESS                  24360003
         CALL  (15)                    MOVE THE RECORD                  24370003
         LH    WORK5,NUMREC            OLD BLOCK COUNT                  24380003
         BCTR  WORK5,X0                LESS ONE MOVED                   24390003
         STH   WORK5,NUMREC            FOR NEXT PASS                    24400003
         LTR   WORK5,WORK5             ANY LEFT TO MOVE                 24410003
         BNZ   WR105                   YES- REPEAT                      24420003
         SPACE 2                                                        24430003
*   ALL RECORDS HAVE BEEN MOVED                                         24440003
*   NEED TO CLEAN UP THE OLD BLOCK HERE AND CHAIN IN NEW BLOCK          24450003
         L     WORK4,BUFBLOCK          OLD BLOCK ADDR.                  24460003
         ST    WORK9,BUFBLOCK          NEW BLOCK ADDR.                  24470003
         LH    WORK3,DCBBLKSI          SIZE OF BLOCK                    24480003
         FREEMAIN R,LV=(WORK3),A=(WORK4),SP=SPONE RELEASE CORE          24490003
         LR    WORK7,WORK9             NEW BLOCK ADDRESS                24500003
         B     WR170                   HANDLE AS SPACE AVAIL.           24510003
*                                      FOR NEW RECORD.                  24520003
         SPACE 2                                                        24530003
*   THE DATA BLOCK MUST BE SPLIT                                        24540003
*   GET A NEW BLOCK AND INITIALIZE IT HERE                              24550003
         SPACE 2                                                        24560003
WR110    OI    BUFSTATS,BLKINBUF       SAVE THIS BUFFER                 24570003
         LA    PARMREG1,PARM1          PARM LIST ADDRESS                24580003
         L     ENTRY,AD                ROUTINE ADDRESS                  24590003
         CALL  (15)                    ADD A BLOCK                      24600003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       24610003
         BNZ   WR200                   YES-RETURN                       24620003
         NI    BUFSTATS,ALL-BLKINBUF   RESET BUFFER SAVE                24630003
         L     WORK8,WORD2(PARMREG1)   NEW BUFFER ADDRESS               24640003
         L     WORK9,BUFBLOCK-BUFFER(WORK8) BLOCK ADDRESS               24650003
         XC   NUMREC-DATA(CTRLEND-DATA,WORK9),NUMREC-DATA(WORK9)        24660003
         LH    WORK5,DCBBLKSI          BLOCKSIZE                        24670003
         STH   WORK5,DATASTRT-DATA(WORK9) SPACE AVAILABLE               24680003
         SPACE 2                                                        24690003
*   BLOCK MUST BE SPLIT                                                 24700003
         LH    WORK3,NUMREC            TOTAL RECORDS                    24710003
         LA    WORK3,ONE(WORK3)        PLUS ONE                         24720003
         SRA   WORK3,ONE               DIVIDE BY TWO                    24730003
         LA    WORK5,LOCATORS          ALWAYS DELETE 1ST                24740003
         ST    WORK5,BUFREF              LOGICAL RECORD                 24750003
WR115    LH    WORK5,LOCATORS          MOVE 1ST LOGICAL RECORD          24760003
         LA    WORK5,DATA(WORK5)       RECORD ADDRESS                   24770003
         MVC   TEMP1(L2),KEYL(WORK5)   LENGTH OF RECORD                 24780003
         LH    WORK4,TEMP1             PICK UP LENGTH                   24790003
         LA    WORK4,KEYL(WORK4)       ACCOUNT FOR KEY                  24800003
         LR    PARMREG0,WORK4          SET LENGTH PARM                  24810003
         ST    WORK5,TEMP1             MOVE FROM ADDRESS                24820003
         LH    WORK5,DATASTRT-DATA(WORK9) NEXT AVAILABLE                24830003
         SR    WORK5,PARMREG0          NEW AVAILABLE                    24840003
         STH   WORK5,DATASTRT-DATA(WORK9) SAVE FOR NEXT                 24850003
         LH    WORK4,NUMREC-DATA(WORK9) NO. OF RECORDS                  24860003
         AR    WORK4,WORK4             TIMES TWO                        24870003
         LA    WORK4,LOCATORS-DATA(WORK4,WORK9) NEXT POSITION           24880003
         STH   WORK5,X0(WORK4)         OFFSET TO RECORD                 24890003
         LA    WORK5,X0(WORK5,WORK9)   RECORD ADDRESS                   24900003
         ST    WORK5,TEMP2             MOVE TO ADDRESS                  24910003
         LH    WORK4,NUMREC-DATA(WORK9) NO. OF RECORDS                  24920003
         LA    WORK4,ONE(,WORK4)       PLUS ONE                         24930003
         STH   WORK4,NUMREC-DATA(WORK9) SAVE NEW TOTAL                  24940003
         LA    PARMREG1,TEMP1          PARM LIST ADDR.                  24950003
         L     ENTRY,MV                ROUTINE ADDRESS                  24960003
         CALL  (15)                    MOVE RECORD                      24970003
         SPACE 2                                                        24980003
*   DELETE THE OLD RECORD HERE                                          24990003
         ST    WORK6,PARM2             BUFFER ADDRESS                   25000003
         LA    PARMREG1,PARM1          PARM LIST ADDRESS                25010003
         L     ENTRY,DL                ROUTINE ADDRESS                  25020003
         CALL  (15)                    DELETE THE OLD RECORD            25030003
         TM    DCBSTATS,ERROR          ANY ERRORS                       25040003
         BO    WR200                   YES-RETURN                       25050003
         L     WORK5,DCBRECNO          INSURE CURRENT COUNT             25060003
         LA    WORK5,ONE(WORK5)        IS PLUS ONE BECAUSE              25070003
         ST    WORK5,DCBRECNO          OF DELETE PROCESS                25080003
         BCT   WORK3,WR115             REPEAT FOR (N+1)/2 MOVED         25090003
         SPACE 2                                                        25100003
*   UPDATE THE DIRECTORY HERE                                           25110003
WR120    OI    BUFSTATS-BUFFER(WORK8),UPDATED MODIFIED BLOCK            25120003
         LH    WORK3,NUMREC-DATA(WORK9) RECORDS//NEW BLOCK              25130003
         AR    WORK3,WORK3             TIMES TWO                        25140003
         LH    WORK3,LOCATORS-LOCL-DATA(WORK3,WORK9) CONTENTS           25150003
         LA    WORK5,X0(WORK3,WORK9)   RECORD ADDRESS                   25160003
         ST    WORK5,PARM2             RECORD/KEY ADDRESS               25170003
         MVC   PARM3,BUFTTR-BUFFER(WORK8) TTR THIS BLOCK                25180003
         LA    PARMREG1,PARM1          PARM LIST ADDRESS                25190003
         MVI   DIRCODE(PARMREG1),ALLKEY ENTIRE ENTRY                    25200003
         L     ENTRY,DU                ROUTINE ADDRESS                  25210003
         CALL  (15)                    UPDATE THE DIRECTORY             25220003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       25230003
         BNZ   WR200                   YES-RETURN                       25240003
         B     WR10                    PROCESS NEW RECORD               25250003
         SPACE 2                                                        25260003
*   NEED A NEW BLOCK FOR A SINGLE INPUT RECORD                          25270003
WR150    L     ENTRY,AD                ROUTINE ADDRESS                  25280003
         CALL  (15)                    GET A BLOCK                      25290003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       25300003
         BNZ   WR200                   YES-RETURN                       25310003
         OI    DCBSTATS,NBLK           NEW BLOCK OBTAINED               25320003
         L     WORK6,WORD2(PARMREG1)   BUFFER ADDRESS                   25330003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    25340003
         SPACE 2                                                        25350003
*   INITIALIZE THE NEW CONTROL FIELDS HERE                              25360003
WR160    XC    NUMREC(CTRLEND-DATA),NUMREC CLEAR                        25370003
         LH    WORK5,DCBBLKSI          BLOCKSIZE=SPACE                  25380003
         STH   WORK5,DATASTRT          AVAILABLE SPACE                  25390003
*                                                                       25400003
WR170    LH    WORK5,DATASTRT          NEXT SPACE                       25410003
         MVC   TEMP1(L2),KEYL(WORK2)   LENGTH OF NEW RECORD             25420003
         LH    WORK3,TEMP1             LENGTH                           25430003
         LA    WORK3,KEYL(WORK3)       ACCOUNT FOR KEY                  25440003
         SR    WORK5,WORK3             AVAILABLE LESS LENGTH            25450003
         STH   WORK5,DATASTRT          SAVE FOR NEXT UPDATE             25460003
         SPACE 2                                                        25470003
*   SET UP THE RECORD LOCATOR HERE                                      25480003
WR175    LH    WORK5,NUMREC            NO. OF RECORDS                   25490003
         LA    WORK5,ONE(WORK5)        ACCOUNT FOR NEW RECORD           25500003
         AR    WORK5,WORK5             TIMES TWO                        25510003
WR177    LA    WORK4,LOCATORS-LOCL-LOCL(WORK5) LAST OLD                 25520003
         BCTR  WORK5,ZERO              RESET INDEX FOR                  25530003
         BCTR  WORK5,ZERO                NEXT PASS                      25540003
         LTR   WORK5,WORK5             LAST LOCATOR                     25550003
         BNP   WR178                   YES-PUT LOCATOR HERE             25560003
         MVC   LOCL(LOCL,WORK4),X0(WORK4) SLIDE LOCATOR                 25570003
         LH    WORK3,X0(WORK4)         CONTENTS                         25580003
         LA    WORK3,DATA(WORK3)       RECORD ADDRESS                   25590003
         CLC   PRIMEKEY(KEYL),X0(WORK3) NEW KEY VS OLD                  25600003
         BL    WR177                   REPEAT UNTIL SLOT FOUND          25610003
WR178    MVC   LOCL(LOCL,WORK4),DATASTRT NEW  RECORD LOCATOR            25620003
         LH    WORK5,DATASTRT          OFFSET TO RECORD                 25630003
         LA    WORK5,DATA(WORK5)       RECORD ADDRESS                   25640003
         SPACE 2                                                        25650003
*   UPDATE THE RECORD COUNT FOR THIS BLOCK                              25660003
         LH    WORK3,NUMREC            CURRENT COUNT                    25670003
         LA    WORK3,ONE(WORK3)        PLUS ONE                         25680003
         STH   WORK3,NUMREC            UPDATED COUNT                    25690003
         SPACE 2                                                        25700003
*   UPDATE COUNT FOR TOTAL RECORDS IN DATA SET                          25710003
         L     WORK3,DCBRECNO          CURRENT COUNT                    25720003
         LA    WORK3,ONE(,WORK3)       PLUS ONE                         25730003
         ST    WORK3,DCBRECNO          NEW TOTAL                        25740003
         SPACE 2                                                        25750003
*   MOVE THE NEW RECORD TO THE BLOCK                                    25760003
*   WORK5 CONTAINS THE ADDRESS AT WHICH                                 25770003
*     THE RECORD SHOULD BE PLACED                                       25780003
WR180    MVC   TEMP1(L2),KEYL(WORK2)   LENGTH                           25790003
         LH    WORK3,TEMP1             LENGTH OF RECORD                 25800003
         LA    PARMREG0,KEYL(,WORK3)   PLUS KEY                         25810003
         ST    WORK5,TEMP2             MOVE-TO ADDRESS                  25820003
         ST    WORK2,TEMP1             MOVE-FROM ADDRESS                25830003
         LA    PARMREG1,TEMP1          PARM LIST ADDRESS                25840003
         L     ENTRY,MV                ROUTINE ADDRESS                  25850003
         CALL  (15)                    MOVE THE RECORD                  25860003
         SPACE 2                                                        25870003
*   INDICATE THAT THE BLOCK HAS BEEN MODIFIED                           25880003
WR190    OI    BUFSTATS,UPDATED        DATA SET CHANGED                 25890003
         SPACE 2                                                        25900003
*   CHECK IF THE DIRECTORY NEEDS UPDATING HERE                          25910003
         LH    WORK5,NUMREC            NO. OF RECORDS                   25920003
         AR    WORK5,WORK5             TIMES TWO                        25930003
         LH    WORK5,LOCATORS-LOCL(WORK5) CONTENTS OF LAST              25940003
*                                        LOCATOR                        25950003
         LA    WORK5,DATA(WORK5)       LAST RECORD ADDR.                25960003
         CLC   X0(KEYL,WORK2),X0(WORK5) THIS THE INPUT RECORD           25970003
         BNE   WR195                   NO--DIRECTORY OK                 25980003
         SPACE 2                                                        25990003
*   UPDATE THE DIRECTORY HERE                                           26000003
         ST    WORK2,PARM2             NEW KEY ADDRESS                  26010003
         MVC   PARM3,BUFTTR            TTR THIS BLOCK                   26020003
         ST    DATAREG,PARM1           DCB/WORKAREA                     26030003
         LA    PARMREG1,PARM1          PARM LIST ADDR.                  26040003
         MVI   DIRCODE(PARMREG1),NEWKEY KEY ONLY CODE                   26050003
         TM    DCBSTATS,NBLK           DID WE GET NEW BLOCK             26060003
         BZ    WR192                   NO--UPDATE DIRECTORY             26070003
         MVI   DIRCODE(PARMREG1),ALLKEY ALL ENTRY UPDATE                26080003
WR192    L     ENTRY,DU                ROUTINE ADDRESS                  26090003
         CALL  (15)                    UPDATE DIRECTORY                 26100003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       26110003
         BNZ   WR200                   YES-RETURN                       26120003
         SPACE 2                                                        26130003
*   CLEAN UP SWITCHES AND CONTROLS HERE                                 26140003
WR195    NI    DCBSTATS,ALL-DSEMPTY-NBLK SET OFF                        26150003
         SR    RETCDREG,RETCDREG       RETURN CODE                      26160003
         SPACE 2                                                        26170003
*   ERROR EXIT HERE                                                     26180003
WR200    L     SAVEREG,WORD2(SAVEREG) OLD SAVE AREA                     26190003
         RETURN (14,12),T,RC=(15)  RESTORE REGISTERS                    26200003
         SPACE 2                                                        26210003
*   CONSTANT AREA FOR IKJEBEWR                                          26220003
WREMPTY  DC    H'8'                    CONSTANT/EMPTY DATA SET          26230003
         SPACE 2                                                        26240003
WRGM     GETMAIN EC,LV=0,A=0,SP=SPONE,MF=L  LIST FORM                   26250003
WRGMEND  EQU   *                       END OF LIST                      26260003
         SPACE 2                                                        26270003
         DROP  BASEREG,DATAREG,COMMREG,WORK6,WORK7                      26280003
 TITLE 'EDIT COMMAND ACCESS METHOD--WRITE SEQUENTIAL ROUTINE--IKJEBEWS' 26290003
*****************************************************************       26300003
*                                                                       26310003
*STATUS --  VERSION NO. 02, VS2     RELEASE 03                        * 26320003
*                                                                       26330003
*FUNCTION --  THIS ROUTINE IS CALLED WHENEVER IT IS NECESSARY           26340003
*   PLACE RECORDS IN SEQUENTIAL ORDER IN A NEW UTILITY                  26350003
*   DATA SET.  AN ATTEMPT IS MADE TO MAKE FULL USE OF THE               26360003
*   ALLOTTED DATA BUFFERS.  THE DATA BUFFERS ARE IN A CIRCULAR          26370003
*   CHAIN AND PROCESSING ALWAYS BEGINS WITH THE FIRST BUFFER.           26380003
*   WHEN A BUFFER IS FULL, A CHECK IS MADE TO SEE IF THERE IS           26390003
*   ANY OUTSTANDING I/O.  IF SO, THIS I/O IS CHECKED FOR                26400003
*   SATISFACTORY COMPLETION AND THE DIRECTORY IS UPDATED FOR THE        26410003
*   BLOCK THAT WAS JUST WRITTEN OUT. A 'WRITE' IS THEN INITIATED        26420003
*   ON THE NEWLY FILLED BLOCK AND PROCESSING BEGINS WITH THE            26430003
*   NEXT BUFFER. WHEN THE NEXT BUFFER IS FILLED, THE ABOVE              26440003
*   DESCRIBED OPERATION IS REPEATED.                                    26450003
*                                                                       26460003
*   ALL WRITES ARE BSAM FORMAT WRITES.  NO PREFORMATING OF THE          26470003
*   BLOCK IS NECESSARY.  FILLING THE NEXT BUFFER IS ALWAYS              26480003
*   OVERLAPPED WITH THE PRECEDING WRITE.                                26490003
*                                                                       26500003
*   AT THE COMPLETION, THERE MAY BE OUTSTANDING I/O AND A               26510003
*   PARTIALLY FILLED BLOCK THAT NEEDS TO BE WRITTEN OUT.  THESE         26520003
*   I/O OPERATIONS ARE ACCOMPLISHED IN THE WRITE-PURGE ROUTINE          26530003
*   (IKJEBEWP) VIA A CALL FROM THE UTILITY INTERFACE ROUTINE            26540003
*   (IKJEBEUT).  THIS ROUTINE NEVER KNOWS WHEN THE LAST ENTRY           26550003
*   IS MADE TO IT.                                                      26560003
*                                                                       26570003
*ENTRY POINT --                                                         26580003
*       IKJEBEWS             -VIA A CALL FROM IKJEBEUT                  26590003
*                                                                       26600003
*INPUT --  REGISTER 1 POINTS TO A THREE WORD PARM LIST                  26610003
*       WORD1  ADDRESS OF WORKAREA/DCB                                  26620003
*       WORD2  ADDRESS OF INPUT RECORD                                  26630003
*       WORD3  NOT USED                                                 26640003
*                                                                       26650003
*OUTPUT -- THE SPECIFIED RECORD HAS BEEN PLACED IN THE DATA SET.        26660003
*   DIRECTORY UPDATES AND I/O TAKE PLACE AS DESCRIBED ABOVE.            26670003
*   THE REGISTERS ARE DESCRIBED UNDER EXIT BELOW.                       26680003
*                                                                       26690003
*EXTERNAL REFERENCES --                                                 26700003
*       IKJEBEWB             -WRITE OUT BLOCK                           26710003
*       IKJEBEWA             -WAIT ON I/O                               26720003
*       IKJEBEDU             -UPDATE DIRECTORY                          26730003
*       IKJEBEMV             -MOVE RECORD TO BLOCK                      26740003
*                                                                       26750003
*EXITS,NORMAL --  OUTPUT AS DESCRIBED ABOVE. RETURN CODE = 0.           26760003
*                                                                       26770003
*EXITS,ERROR --  RETURNS TO THE CALLING ROUTINE WITH A RETURN           26780003
*   CODE OF 12.                                                         26790003
*                                                                       26800003
*TABLES/WORKAREAS --                                                    26810003
*       DEPENDENT ON THE VECTOR TABLE FOR EXTERNAL REFERENCES.          26820003
*                                                                       26830003
*ATTRIBUTES --  REFRESHABLE,NON-PRIVILIGED,ENABLED.                     26840003
*                                                                       26850003
*NOTES --  REGISTER CONVENTIONS ARE AS FOLLOWS                          26860003
*       BASEREG              -BASE REGISTER                             26870003
*       COMMREG              -VECTOR TABLE                              26880003
*       DATAREG              -WORKAREA/DCB                              26890003
*       WORK2                -INPUT RECORD ADDRESS                      26900003
*       WORK6,WORK8          -BUFFER ADDRESSES                          26910003
*       WORK7,WORK9          -BLOCK ADDRESSES                           26920003
*       WORK3,4,5            -WORK REGISTERS                            26930003
*                                                                       26940003
*   THIS ROUTINE IS CHARACTER CODE INDEPENDENT.                         26950003
*                                                                       26960003
*****************************************************************       26970003
         SPACE 2                                                        26980003
IKJEBEWS CSECT                                                          26990003
*   PERFORM THE INITIALIZATION OPERATIONS HERE                          27000003
         SAVE  (14,12),T,*             SAVE THE REGISTERS               27010003
         LR    BASEREG,ENTRY           BASE REGISTER                    27020003
         USING IKJEBEWS,BASEREG        BASE ADDRESSING                  27030003
         L     DATAREG,WORD1(PARMREG1) DATA AREA                        27040003
         USING UTILWORK,DATAREG        WORKAREA ADDRESSABILITY          27050003
         L     COMMREG,VTABLE          VECTOR TABLE ADDRESS             27060003
         USING VECTABLE,COMMREG        ADDRESSABILITY                   27070003
         SPACE 2                                                        27080003
*   SET UP A SAVE AREA                                                  27090003
         LA    WORK5,SAVEAREA          FIRST SAVE AREA                  27100003
         ST    SAVEREG,WORD2(WORK5)    OLD ADDRESS TO NEW               27110003
         ST    WORK5,WORD3(SAVEREG)    NEW ADDRESS TO OLD               27120003
         LR    SAVEREG,WORK5           NEW SAVEAREA ADDRESS             27130003
         SPACE 2                                                        27140003
*   TEST FOR FIRST ENTRY                                                27150003
WS10     L     WORK2,WORD2(PARMREG1)   INPUT RECORD ADDRESS             27160003
         ST    DATAREG,PARM1           DCB ADDRESS TO PARM LIST         27170003
         TM    DCBSTATS,DCBSEQ         IS THIS 1ST ENTRY                27180003
         BZ    WS100                   YES-GO START 1ST BLOCK           27190003
         SPACE 2                                                        27200003
*   NOT FIRST ENTRY //  FIND NEXT BUFFER TO PROCESS                     27210003
WS20     L     WORK6,BUFCURNT          LAST BUFFER PROCESSED            27219003
         USING BUFFER,WORK6            ADDRESSABILITY                   27228003
         SPACE 2                                                        27237003
*   DETERMINE IF SPACE IS AVAILABLE HERE                                27246003
WS30     L     WORK7,BUFBLOCK          BLOCK ADDRESS                    27255003
         USING DATA,WORK7              ADDRESSABILITY                   27264003
         LH    WORK3,NUMREC            NO. OF RECORDS                   27273003
         LA    WORK3,CTRLEND-DATA+LOCL+KEYL(WORK3,WORK3) PLUS           27282003
*                                      BLOCK AND RECORD OVERHEAD        27291003
         LH    WORK4,DATASTRT          DISPLACEMENT/1ST RECORD          27300003
         SR    WORK4,WORK3             WORK4=AVAILABLE SPACE            27309003
         CH    WORK4,KEYL(WORK2)       IS SPACE AVAILABLE               27318003
         BNL   WS150                   YES-PUT RECORD IN BLOCK          27327003
         SPACE 2                                                        27336003
*   CHECK IF THERE IS AN OUTSTANDING WRITE OPERATION                    27345003
         L     WORK8,BBKCHAIN-BUFFER(WORK6)  PREVIOUS BUFFER            27354003
         TM    BUFSTATS-BUFFER(WORK8),WAITB  WAITING?                   27363003
         BZ    WS40                    NO--GO WRITE BLOCK               27372003
         SPACE 2                                                        27381003
*   WAIT FOR THE I/O HERE                                               27390003
         ST    WORK8,PARM2             BLOCK ADDRESS                    27399003
         LA    PARMREG1,PARM1          PARM LIST ADDRESS                27408003
         L     ENTRY,WA                ROUTINE ADDRESS                  27417003
         CALL  (15)                    WAIT FOR THE I/O                 27426003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       27435003
         BNZ   WS190                   YES-RETURN                       27444003
         SPACE 2                                                        27453003
*   UPDATE THE DIRECTORY HERE                                           27462003
         L     WORK9,BUFBLOCK-BUFFER(WORK8) BLOCK ADDRESS               27471003
         MVC   PARM3,BUFTTR-BUFFER(WORK8)  TTR TO LIST                  27480003
         LA    WORK3,BUFREF-BUFFER(WORK8)  HIGH KEY ADDRESS             27489003
         ST    WORK3,PARM2             ADDR. TO PARM LIST               27498003
         LA    PARMREG1,PARM1          PARM LIST ADDRESS                27507003
         MVI   DIRCODE(PARMREG1),ALLKEY  ENTIRE ENTRY                   27516003
         L     ENTRY,DU                ROUTINE ADDRESS                  27525003
         CALL  (15)                    UPDATE DIRECTORY                 27534003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       27543003
         BNZ   WS190                   YES-RETURN                       27552003
         SPACE 2                                                        27561003
*    SPACE IS NOT AVAILABLE IN THIS BLOCK                               27570003
*    INITIATE A WRITE ON THIS BLOCK                                     27579003
WS40     ST    WORK6,PARM2             BUFFER ADDRESS                   27588003
         LA    PARMREG1,PARM1          PARM LIST ADDRESS                27597003
         L     ENTRY,WB                ROUTINE ADDRESS                  27606003
         CALL  (15)                    WRITE OUT BLOCK                  27615003
         LTR   RETCDREG,RETCDREG       ANY ERRORS                       27624003
         BNZ   WS190                   YES-RETURN                       27633003
         SPACE 2                                                        27642003
WS50     L     WORK6,BUFCHAIN          NEXT BUFFER ADDRESS              27651003
         ST    WORK6,BUFCURNT          CURRENT BUFFER                   27660003
         B     WS130                   SET UP NEW BLOCK                 27669003
         SPACE 2                                                        27678003
*   START WITH THE FIRST AVAILABLE BLOCK HERE                           27687003
WS100    LA    WORK6,BUF1              1ST BUFFER ADDR.                 27696003
         ST    WORK6,BUFCURNT          INDICATE CURRENT BUFFER          27705003
         OI    DCBSTATS,DCBSEQ         SEQ. OPERATION STARTED           27714003
         NI    DCBSTATS,ALL-DSEMPTY    NOT EMPTY NOW                    27723003
         SPACE 2                                                        27732003
*   INITIALIZE THE NEXT BLOCK HERE                                      27741003
WS130    OI    BUFSTATS,NEWBLK         WILL BE NEW BLOCK                27750003
         L     WORK7,BUFBLOCK          BLOCK ADDRESS                    27759003
         XC    NUMREC(CTRLEND-DATA),NUMREC CLEAR CNTL. FIELDS           27768003
         LH    WORK5,DCBBLKSI          BLOCK SIZE IS TOTAL              27777003
         STH   WORK5,DATASTRT            AVAIL. SPACE IN BLOCK          27786003
         SPACE 2                                                        27795003
*   PLACE THE RECORD IN THE BLOCK HERE                                  27804003
WS150    LH    WORK5,DATASTRT          OFFSET TO SPACE                  27813003
         MVC   TEMP1(L2),KEYL(WORK2)   LENGTH OF NEW RECORD             27822003
         LH    PARMREG1,TEMP1          LENGTH OF RECORD                 27831003
         LA    PARMREG1,KEYL(PARMREG1) ACCOUNT FOR KEY                  27840003
         SR    WORK5,PARMREG1          OFFSET TO NEW RECORD             27849003
         STH   WORK5,DATASTRT            TO CONTROL BLOCK               27922003
         LA    WORK5,DATA(WORK5)       OFFSET PLUS BLOCK ADDR.          27930003
         ST    WORK5,TEMP2               THE MOVE TO-ADDR.              27940003
         ST    WORK2,TEMP1             MOVE FROM ADDRESS                27950003
         LR    PARMREG0,PARMREG1       NO. OF BYTES TO MOVE             27960003
         LA    PARMREG1,TEMP1          PARM LIST ADDR.                  27970003
         L     ENTRY,MV                ROUTINE ADDRESS                  27980003
         CALL  (15)                    MOVE THE RECORD                  27990003
         SPACE 2                                                        28000003
*   UPDATE THE BLOCK CONTROL FIELDS HERE                                28010003
WS160    LH    WORK4,NUMREC            PREVIOUS NO. OF RECORDS          28020003
         LA    WORK4,ONE(,WORK4)       ACCOUNT FOR NEW RECORD           28030003
         STH   WORK4,NUMREC            UPDATED TOTAL                    28040003
         SPACE 2                                                        28050003
WS170    LR    WORK5,WORK4             RECORD COUNT                     28060003
         SLA   WORK5,ONE               TIMES TWO                        28070003
         LA    WORK4,LOCATORS-LOCL(WORK5) ADDR. OF NEW LOCATOR          28080003
         MVC   X0(LOCL,WORK4),DATASTRT NEW LOCATOR IN BLOCK             28090003
         MVC   PRIMEKEY,ZERO(WORK2)    HIGH KEY //THIS BLOCK            28100003
         MVC   BUFREF,PRIMEKEY         HIGH KEY THIS BLOCK              28110003
         L     WORK4,DCBRECNO          RECORDS IN DATA SET              28120003
         LA    WORK4,ONE(WORK4)        ADD ONE                          28130003
         ST    WORK4,DCBRECNO          NEW TOTAL                        28140003
         SPACE 2                                                        28150003
*   NORMAL EXIT HERE                                                    28160003
WS180    SR    RETCDREG,RETCDREG       RETURN CODE=0                    28170003
*   ERROR EXIT HERE                                                     28180003
WS190    L     SAVEREG,WORD2(,SAVEREG) OLD SAVE AREA                    28190003
         RETURN (14,12),T,RC=(15)      RESTORE REGS/RETURN              28200003
         SPACE 2                                                        28210003
         DROP  COMMREG,BASEREG,DATAREG,WORK6,WORK7                      28220003
         SPACE 2                                                        28230003
WSPATCH DC     C'ZAP HERE'                                              28240003
         DC    7D'0'                                                    28250003
 TITLE 'EDIT COMMAND ACCESS METHOD--WORKAREA/BUFFER DESCRIPTIONS'       28260003
         IKJEBEUW                                                       28270003
         EJECT                                                          28280003
CVT      DSECT                                                          28290003
         CVT   SYS=MVT                                                  28300003
*********************************************************************** 28310003
         END                                                            28320003
