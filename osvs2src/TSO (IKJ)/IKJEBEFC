EFC     TITLE 'EDIT SERVICE ROUTINE-FINAL COPY-IKJEBEFC'                00050003
*********************************************************************** 00400020
*                                                                     * 00600020
*                                                                     * 01000020
*STATUS-  VERSION NO. 01. OS/360 RELEASE NO. 20                       * 01200020
*                                                                     * 01400020
*FUNCTION/OPERATION-  IKJEBEFC IS AN EDIT SERVICE ROUTINE WHICH IS    * 01600020
*   USED TO COPY THE UTILITY DATA SET BEING EDITED INTO A BSAM DATA   * 01650003
*   SET. THIS ROUTINE WILL READ THE RECORDS FROM THE UTILITY DATA SET,* 02000020
*   CHANGE THE RECORD FORMAT FROM WHAT EXISTS ON THE UTILITY DATA SET * 02200020
*   TO A FORMAT REQUIRED FOR THE BSAM DATA SET, AND WRITE THE RECORDS * 02250003
*   INTO THE BSAM DATA SET.                                           * 02400003
*                                                                     * 02800020
*ENTRY POINTS- IKJEBEFC IS THE MAIN AND ONLY ENTRY POINT.             * 03000020
*                                                                     * 03200020
*INPUT-  REGISTER 1 CONTAINS A POINTER TO EDIT'S COMMUNICATION AREA.  * 03400020
*                                                                     * 03800020
*OUTPUT-  A FORMATTED BSAM DATA SET IS WRITTEN.                       * 03850003
*         REGISTERS AS DESCRIBED UNDER EXITS BELOW.                   * 04600020
*                                                                     * 05200020
*EXTERNAL REFERENCES-                                                 * 05400020
*        IKJEBEUT        -PERFORMS READING OF RECORDS FROM UTILITY    * 05600020
*                         DATA SET                                    * 05800020
*        IKJEBEEX        -UTILITY DATA SET ACCESS TERMINATION         * 06000020
*        MACROS USED -                                                * 06200020
*          IKJEBESV      -SAVE CALLER'S REGISTERS AND ESTABLISH       * 06400020
*                         ADDRESSABILITY                              * 06600020
*          IKJEBERT      -RELOAD CALLER'S REGISTERS AND RETURN CONTROL* 06800020
*                         TO CALLER                                   * 07000020
*          IKJEBESH      -LINKAGE TO EDIT MODULES                     * 07200020
*          IKJEBEML      -STANDARD MESSAGE TO TERMINAL USER           * 07400020
*          IKJEBECA      -LAYOUT AND DESCRIPTION OF COMMUNICATION AREA* 07600020
*          FREEPOOL      -RELEASE BUFFER ACQUIRED BY OPEN MACRO TO    * 07800020
*                        -SYSTEM                                      * 08000020
*          OPEN          -OPEN BSAM DATA SET                          * 08050003
*          CLOSE         -CLOSE BSAM DATA SET                         * 08200003
*          DCBD          -LAYOUT OF DCB FOR BSAM DATA SET             * 08250003
*                                                                     * 08800020
*EXITS,NORMAL-  A RETURN CODE IN REGISTER 15 AS FOLLOWS-              * 08900020
*                                                                     * 09000020
*           RETURN CODE = 0  THE UTILITY DATA SET WAS COPIED          * 09100020
*             SUCCESSFULLY.                                           * 09200020
*                                                                     * 09300020
*           RETURN CODE = 4  THE UTILITY DATA SET CONTAINS NO LOGICAL * 09400020
*             RECORDS                                                 * 09500020
*                                                                     * 09600020
*EXITS,ERROR-   A RETURN CODE IN REGISTER 15 AS FOLLOWS-              * 09700020
*                                                                     * 09800020
*           RETURN CODE = 8  I/O ERROR ON BSAM DATA SET               * 09850003
*                                                                     * 10000020
*           RETURN CODE = 12  I/O ERROR ON UTILITY DATA SET           * 10100020
*                                                                     * 10200020
*TABLES/WORK AREAS - THE EDIT SERVICE ROUTINE WORK AREA OF FIFTY      * 10300020
*   FULLWORDS AND A BUFFER POOL OF 98 FULLWORDS IN THE COMMUNICATION  * 10600020
*   AREA ARE USED                                                     * 10800020
*                                                                     * 11000020
*ATTRIBUTES - REFRESHABLE, ENABLED, NON-PRIVILEGED                    * 11200020
*                                                                     * 11400020
*NOTES - THIS ROUTINE IS CHARACTER CODE INDEPENDENT                   * 11460020
*                                                                     * 11520020
*********************************************************************** 11600020
IKJEBEFC CSECT                                                          11800020
*                                                                       11810003
*A259000-265000,750500-751500                                    A45002 11820003
*D260000-266000                                                  A45002 11830003
*C413500,415000                                                 YA00038 11840003
*D411000-412000                                                 YA00038 11850003
*A410010-411140                                                  Y01676 11860003
*D410020-456000                                                  Y01676 11870003
*D750500-751500                                                  Y02676 11880003
*D410380-410480,410520,410540                                  @YA02797 11890003
*D238000-240000,572000,574000-592000,596000-622000,780000      @YM07645 11900003
*C728000,                                                      @YM07645 11910003
*A133000,141000,214600,215200,247500,363000,364000,373000,     @YM07645 11920003
*A374000,                                                      @YM07645 11930003
*A384200-385600,410005,410101,410102,410275,410277,            @YM07645 11940003
*A413140-427140,                                               @YM07645 11950003
*A428140-443140,552200-555400,564300-566000,                   @YM07645 11960003
*A568090-593000,722016,727000,727500,729000,774600,775200,     @YM07645 11970003
*A780100-781600                                                @YM07645 11980003
*A140500,410007-410103,410110                                  @OZ00809 12000003
*A571001,140501,571501-571503,593010-593020                    @ZA05967 12020003
*C630000,571340,589000-593000                                  @ZA05967 12040003
*D571400                                                       @ZA05967 12060003
*    CODE ADDED TO DEFAULT LRECL,BLKSIZE AND RECFM ONLY FOR    @ZA12422 12080003
*    NEW OR OLD, EMPTY DATA SETS.                              @ZA12422 12100003
         SPACE 2                                                        12120003
*********************************************************************** 12200020
*    EQUATES OF SYMBOLIC REGISTERS                                      12400020
*********************************************************************** 12600020
PARMREG0 EQU   0                       PARAMETER POINTER                12800020
PARMREG1 EQU   1                       PARAMETER POINTER                13000020
TESTREG  EQU   2                       WORK REGISTER                    13200020
ELEMENT  EQU   3                       INDEX PTR INTO A LIST   @YM07645 13250003
ADDREG   EQU   4                       WORK REGISTER                    13600020
DCBREG   EQU   5                       WORK REGISTER                    13800020
WORKREG  EQU   6                       WORK REGISTER                    14000020
REG7     EQU   7                       WORK REGISTER           @OZ00809 14050003
LASTINDX EQU   7                       INDEX TO LAST DECB USED @ZA05967 14100003
BUFLEN   EQU   8                       LENGTH OF BUFFER        @YM07645 14150003
COMMREG  EQU   9                       COMMUNICATION AREA ADDRESSING    14400020
TEMPREG  EQU   10                      WORK REGISTER                    14600020
BASEREG  EQU   11                      BASE REGISTER                    14800020
DATAREG  EQU   12                      WORK REGISTER                    15000020
SAVEREG  EQU   13                      SAVE AREA POINTER                15200020
RETREG   EQU   14                      RETURN REGISTER                  15400020
RETCDREG EQU   15                      RETURN CODE                      15600020
         SPACE 2                                                        15800020
*********************************************************************** 16000020
*    EQUATES OF SYMBOLIC CONSTANTS                                      16200020
*********************************************************************** 16400020
FC0      EQU   0                       CONSTANT OF 0                    16600020
FC1      EQU   1                       CONSTANT OF 1                    16800020
FC2      EQU   2                       CONSTANT OF 2                    17000020
FC3      EQU   3                       CONSTANT OD 3                    17200020
FC4      EQU   4                       CONSTANT OF 4                    17400020
FC6      EQU   6                       CONSTANT OF 6                    17600020
FC8      EQU   8                       CONSTANT OF 8                    17800020
FC10     EQU   10                      CONSTANT OF 10                   18000020
FC12     EQU   12                      CONSTANT OF 12                   18200020
FC16     EQU   16                      CONSTANT OF 16                   18400020
FC20     EQU   20                      CONSTANT OF 20                   18600020
FC29     EQU   29                      CONSTANT OF 29                   18800020
FC50     EQU   50                      CONSTANT OF 50                   19000020
FC78     EQU   78                      CONSTANT OF 78                   19200020
DCBOPEN  EQU   X'10'                   OPEN TEST FLAG                   19400020
FIXED    EQU   X'80'                   FIXED RECORD FORMAT TEST FLAG    19600020
VAR      EQU   X'40'                   VARIABLE RECORD FORMAT TEST FLAG 19800020
FIXEDBL  EQU   X'90'                   FIXED BLOCKED REC. FORMAT BIT    20000020
VARBL    EQU   X'50'                   VARIABLE BLOCKED REC. FORMAT BIT 20200020
RECFSBIT EQU   B'00001000'             STANDARD BLOCKS OR SPANNED       20260020
*                                      RECORDS BIT IN DCBRECFM.         20320020
END      EQU   X'80'                   END OF PARAMETER LIST CODE       20400020
FIRST    EQU   X'04'                   READ 1ST RECORD CODE             20600020
AFTER    EQU   X'02'                   READ NEXT RECORD FLAG            20800020
EXIST    EQU   X'C0'                   RECORD FORMAT TEST FLAG          21000020
ALL      EQU   X'FF'                   USED TO SET SWITCHES             21200020
MESS1    EQU   X'80'                   MESSAGE1 TEST SWITCH             21400020
         LCLA  &MAXBFRS                                        @YM07645 21450003
&MAXBFRS SETA  5                                               @YM07645 21500003
         SPACE 2                                                        21600020
*********************************************************************** 21800020
*    MESSAGE REFERENCES                                                 22000020
*********************************************************************** 22200020
         IKJEBEMI (309)                                                 22400020
         EJECT                                                          22600020
*********************************************************************** 22800020
*    STANDARD ENTRY LINKAGE AND ESTABLISHMENT OF ADDRESSABILITY BOTH    23000020
*    IN THIS ROUTINE AND IN THE COMMUNICATION AREA                      23200020
*********************************************************************** 23400020
         IKJEBESV (14,12),T,*          SAVE CALLER'S REGISTERS AND      23600020
         USING IKJEBECA,COMMREG        ADDRESSABILITY IN COMMUNICATION  24400020
*                                      AREA                             24600020
         MVI   SW,FC0                  TURN SWITCHES OFF                24700020
         MVI   FCSWITCH,FC0            ZERO OUT FC SWITCHES    @YM07645 24750003
         SPACE 2                                                        24800020
*********************************************************************** 25000020
*    MOVE DCB WHICH HAS BEEN INITIALIZED WITH DSORG, MACRF, A SYNAD     25200020
*    EXIT ADDRESS AND AN OPEN EXIT ADDRESS FOR BSAM DATA SET TO         25250003
*    THE COMMUNICATION AREA AND ESTABLISH ITS ADDRESSABILITY HERE       25600020
*********************************************************************** 25800020
         TM    CACFLAG4,CAABEND     CHECK IF ABEND IN PROGRESS   A45002 25850003
         BO    FCAEDCB              IF ABEND, DON'T DESTROY THE  A45002 26000003
*                                   EXISTING DCB                 A45002 26050003
         LA    DCBREG,COFCDCB       NORMAL DCB ADDRESS           A45002 26200003
         B     MOVEDCB              BRANCH TO MOVE DCB           A45002 26250003
FCAEDCB  LA    DCBREG,CAAEDCB       ABEND DCB ADDRESS            A45002 26400003
MOVEDCB  MVC   FC0(FCDCBL,DCBREG),FCDCB MOVE DCB TO AREA         A45002 26450003
         USING IHADCB,DCBREG           ADDRESSABILITY IN DCB DSECT      26800020
         EJECT                                                          26850003
*********************************************************************** 27200020
*    DETERMINE WHETHER FINAL COPY IS TO BE PERFORMED ON EDIT OR SAVE    27400020
*    DATA SET                                                           27600020
*********************************************************************** 27800020
         TM    CAEDFLAG,CAEDFNCP       TEST WHETHER FINAL COPY IS TO    28000020
*                                      BE PERFORMED ON EDIT DATA SET    28200020
         BO    EDITDATA                IF YES,BRANCH TO MOVE EDIT DATA  28300020
*                                      SET DDNAME TO DCB              * 28400020
         SPACE 2                                                        28600020
*********************************************************************** 28800020
*    INITIALIZE DCB WITH THE APPROPRIATE DDNAME FROM COMMUNICATION      29000020
*    AREA HERE                                                          29200020
*********************************************************************** 29400020
         MVC   DCBDDNAM(FC8),CASADDN   MOVE SAVE DATA SET DDNAME FROM   29600020
*                                      COMM. AREA TO DCB                29800020
         B     NEXT                    BRANCH AROUND MOVE FOR EDIT DATA 29900020
*                                      SET DDNAME                     * 30000020
EDITDATA MVC   DCBDDNAM(FC8),CAEDDDN   MOVE EDIT DATA SET DDNAME FROM   30200020
*                                      COMM. AREA TO DCB                30400020
         SPACE 2                                                        30600020
*********************************************************************** 30800020
*    EDIT OR SAVE DATA IS OPENED AND TESTED IF OPEN IS SUCCESSFUL       31000020
*********************************************************************** 31200020
NEXT     MVC   COOPENPL(FCOPENL),FCOPEN                                 31400020
         OPEN  ((DCBREG),(OUTPUT)),MF=(E,COOPENPL)  EXECUTE FORM OF     31600020
*                                      OPEN MACRO                       31800020
         TM    DCBOFLGS,DCBOPEN        CHECK IF DATA SET OPENED         32000020
         BNO   MESSAGE1                BRANCH ON NOT OPEN TO MESSAGE1   32200020
         EJECT                                                          32250003
*********************************************************************** 32600020
*    IKJEBEUT IS CALLED THROUGH IKJEBESH MACRO TO READ FIRST RECORD OF  32800020
*    UTILITY DATA SET                                                   33000020
*********************************************************************** 33200020
         LA    PARMREG1,COOPENPL       GET PARM LIST ADDRESS  @ZA09473  33250003
         ST    PARMREG1,CAESDSPL       SAVE IT FOR FINAL COPY @ZA09473  33300003
         MVC   COWORD1(FC4),CAPTCDCB   PUT ADDR OF CURRENT UTILITY DCB  33400020
*                                      IN THE 3 LOW ORDER BYTES OF      33600020
*                                      1ST PARAM WORD                   33800020
         MVI   COWORD1,FIRST           PUT X'04' IN HIGH ORDER BYTE OF  34000020
*                                      1ST PARAM WORD                   34200020
         XC    COWORD2(FC4),COWORD2       2ND PARAM WORD DOES NOT       34400020
*                                         CONTAIN ANY POINTER           34600020
         LA    TESTREG,PUTAD                                            34800020
         ST    TESTREG,COWORD3         PUT POINTER TO BUFFER POOL       35000020
*                                      WHERE THE RECORD IS TO BE PLACED 35200020
*                                      IN 3 LOW ORDER BYTES OF 3RD      35400020
*                                      PARAM WORD                       35600020
         MVI   COWORD3,END             PUT END OF PARAMETER LIST CODE   35800020
*                                      IN HIGH ORDER BYTE OF 3RD PARAM  36000020
*                                      WORD                             36200020
         IKJEBESH (COMMREG),IKJEBEUT,MF=(E,A),                 @YM07645*36250003
               PARAM=((COMMREG),COWORD1)                       @YM07645 36300003
         LTR   RETCDREG,RETCDREG       TEST RETURN CODE FROM IKJEBEUT   36800020
         BZ    CONT1                   BRANCH IF ZERO TO CONT1          37000020
         C     RETCDREG,FCDC4          TEST WHETHER R.C.=4              37200020
         BE    CLOSE4                  BRANCH TO SET R.C.=4    @YM07645 37250003
         B     CLOSE12                FREE BUFFER POOL RC=12  @YM07645  37300003
         EJECT                                                          37400003
*********************************************************************** 38000020
*    TERMINATION PROCESSING                                             38200020
*********************************************************************** 38400020
CLOSE12  EQU   *                                               @YM07645 38420003
         LA    TEMPREG,FC12    RC=12                           @YM07645 38440003
         B     CLOSED          FREE BUFFER POOL                @YM07645 38460003
CLOSE4   EQU   *                                               @YM07645 38480003
         LA    TEMPREG,FC4     INDICATE DSN IS EMPTY         @YM07645   38500003
         B     CLOSED          FREE BUFFER POOL               @YM07645  38520003
CLOSE0  EQU   *                                                @YM07645 38540003
        SR    TEMPREG,TEMPREG  INCIDATE OK                     @YM07645 38560003
CLOSED   MVC   COOPENPL(FCCLOSEL),FCCLOSE                               38600020
         CLOSE ((DCBREG)),MF=(E,COOPENPL)  EXECUTE FORM OF CLOSE MACRO  38800020
         FREEPOOL IHADCB               RELEASE BUFFER ACQUIRED TO       39000020
*                                      SYSTEM                           39200020
EXIT     LR    RETCDREG,TEMPREG        PUT RET. CODE IN REG. 15         39400020
LINKAGE  IKJEBERT (14,12),T,RC=(15)    RELOAD CALLER'S REGISTERS        39600020
*                                      EXCEPT REG 15 AND RETURN CONTROL 39800020
*                                      TO CALLER                        40000020
         EJECT                                                          40050003
*********************************************************************** 40400020
*    OPEN EXIT ROUTINE                                                  40600020
*********************************************************************** 40800020
OPENEXIT EQU   *                                                        41000020
         ST    RETREG,SAVER14    SAVE REGISTER 14            @YM07645   41000403
         TM    CACFLAG5,CAEDLNDP   IS THIS A LINE DROP         @OZ00809 41000803
*                                  SITUATION                   @OZ00809 41001203
         BZ    NOTLNDP             NO- BYPASS SPECIAL BLOCK    @OZ00809 41001603
*                                  SIZE CREATION               @OZ00809 41002003
         SPACE 2                                                        41002403
*********************************************************************** 41003203
*    PROCESS THE BLOCK SIZE FOR 'USERID'.EDITSAVE.'QUALIFIER'  @OZ00809 41003303
*    DATASET. THIS ROUTINE INSURES THAT THE BLOCKSIZE WILL     @OZ00809 41003703
*    FIT ON THE TRACK LENGTH OF DEVICE SUPPORTED               @OZ00809 41003903
*    BY TSO EDIT                                               @OZ00809 41004203
*********************************************************************** 41004503
         SPACE 2                                                        41004803
FCEDSABK EQU   *                                               @OZ00809 41005103
         LH    WORKREG,CABLK2      GET THE EDITED DATASET'S    @OZ00809 41005403
*                                  BLOCKSIZE                   @OZ00809 41005703
         LH    REG7,CAMAXBLK       GET THE MAX TRACK CAPACITY  @OZ00809 41006003
*                                  SUPPORTED ON THIS DEVICE    @OZ00809 41006303
         LTR   REG7,REG7           CHECK IF CAMAXBLK USED      @OZ00809 41006603
         BZ    NOTLNDP             NO-NO CALCULATION NEEDED    @OZ00809 41007603
         CR    WORKREG,REG7        COMPARE THE SIZES           @OZ00809 41008403
         BNH   NOTLNDP             CURRENT BLOCKING IS OK      @OZ00809 41010003
         LH    TESTREG,CALRECL     GET LRECL OF ORIG DS        @OZ00809 41014003
         S     TESTREG,FCDC4       SUBTRACT 4 FOR REAL LRECL   @OZ00809 41022603
         SR    WORKREG,WORKREG     CLEAR THE REGISTER          @OZ00809 41023403
         DR    WORKREG,TESTREG     GET NO. LRECL'S / BLOCK     @OZ00809 41024203
         SR    WORKREG,WORKREG     CLEAR THE REGISTER          @OZ00809 41026003
         MR    WORKREG,TESTREG     DETERMINE LARGEST BLOCK     @OZ00809 41028303
*                                  CONTAINING INTEGRAL LRECL'S @OZ00809 41029103
         STH   REG7,DCBBLKSI       INSERT THE NEW BLOCKSIZE    @OZ00809 41030003
         BAL   WORKREG,RECFM       ESTABLISH THE RECFM         @OZ00809 41030903
         B     FCEDSAVE            FINISH SETTING UP THE DCB   @OZ00809 41031803
NOTLNDP  EQU   *                                               @OZ00809 41032703
         TM    CASAFLAG,CASADSOR   CHECK FOR FINAL COPY        @OZ00809 41033603
*                                  TO SAVE PDS                 @OZ00809 41034503
         BO    PDS                 IF SO, BR TO PROCESS        @OZ00809 41035403
         TM    CAEDFLAG,CAEDDISP   YES - IS IT OLD?            @ZA12422 41036303
         BNO   ESTRECFM            NO-GO ESTABLISH DEFAULTS    @ZA27583 41037203
*                                  YES-CHECK FOR BLKSIZE AND   @ZA27583 41038103
*                                  RECFM PRESENT- COULD BE AN  @ZA27583 41039003
*                                  ALLOCATED DSN W/O DCB INFO  @ZA27583 41039903
         LH    WORKREG,DCBBLKSI    GET BLOCKSIZE FROM DCB      @ZA27583 41040800
         LTR   WORKREG,WORKREG     ANY VALUE FOUND?            @ZA27583 41041703
         BZ    ESTRECFM            IF NONE GO SET DEFAULTS     @ZA27583 41042603
         LH    WORKREG,DCBLRECL    GET LRECL FROM DCB          @ZA27583 41043500
         LTR   WORKREG,WORKREG     ANY VALUE FOUND?            @ZA27583 41044403
         BZ    ESTRECFM            IF NONE GO SET DEFAULTS     @ZA27583 41045303
         B     DCBCOMP             VALUES PRESENT-CONT PROCESS @ZA27583 41046203
ESTRECFM EQU   *                                               @ZA12422 41047103
         BAL   WORKREG,RECFM           ESTABLISH RECFM           Y01676 41048003
         BAL   WORKREG,BLKSIZE         ESTABLISH BLOCKSIZE       Y01676 41048903
FCEDSAVE EQU   *                   COMPLETE THE DCB            @OZ00809 41049803
         BAL   WORKREG,LRECL           ESTABLISH LRECL           Y01676 41050703
DCBCOMP  EQU   *                   DEFAULTING COMPLETE         @ZA12422 41051603
         BAL   WORKREG,BUFNO           ESTABLISH NO. OF BUFFERS  Y01676 41052503
         BAL   WORKREG,GETPOOL         SET UP BUFFER POOL     @YM07645  41053403
         L     RETREG,SAVER14          RESTORE REGISTER 14    @YM07645  41054303
         BR    RETREG                  RETURN TO OPEN            Y01676 41055203
PDS      EQU   *                                                 Y01676 41056103
         TM    DCBRECFM,FIXED+VAR      RECFM ESTABLISHED FOR DS- Y01676 41057003
         BM    PDS2                    YES, BYPASS DEFAULTING    Y01676 41057903
         BAL   WORKREG,RECFM           NO, ESTABLISH RECFM       Y01676 41058803
PDS2     EQU   *                                                 Y01676 41059703
         LH    WORKREG,DCBLRECL        OBTAIN LRECL              Y01676 41060603
         LTR   WORKREG,WORKREG         TEST LRECL                Y01676 41061503
         BNZ   PDS3                    IF SET, BYPASS DEFAULT    Y01676 41062403
         BAL   WORKREG,LRECL           ESTABLISH LRECL FOR DS    Y01676 41063303
PDS3     EQU   *                                                 Y01676 41064203
         LH    WORKREG,DCBBLKSI        OBTAIN BLOCK SIZE         Y01676 41065103
         LTR   WORKREG,WORKREG         TEST BLKSIZE              Y01676 41066003
         BNZ   PDS4                    IF SET, BYPASS DEFAULT    Y01676 41066903
         BAL   WORKREG,BLKSIZEP        ESTABLISH BLKSIZE FOR DS  Y01676 41067803
PDS4     EQU   *                                                 Y01676 41068703
         BAL   WORKREG,BUFNO           SET NO. OF BFRS. FOR COPY Y01676 41069603
         BAL   WORKREG,GETPOOL         SET UP BUFFER POOL      @YM07645 41070503
         L     RETREG,SAVER14         RESTORE REGISTER 14    @YM07645   41071403
         BR    RETREG                  RETURN TO OPEN            Y01676 41072303
         SPACE 2                                                        41073203
**************************************************************** Y01676 41074103
* THE FOLLOWING SECTION ESTABLISHES THE RECORD FORMAT FOR THE    Y01676 41075003
* OUTPUT DATA SET.                                               Y01676 41075903
**************************************************************** Y01676 41076803
RECFM    EQU   *                                                 Y01676 41084003
         TM    CACFLAG2,CARECFM        CHECK FOR EDITING OF      Y01676 41085003
*                                      VARIABLE RECORDS          Y01676 41086003
         BZ    RECFMVAR                IF SO, BR TO SET RECFM=VB Y01676 41087003
         MVI   DCBRECFM,FIXEDBL        IF NOT, ESTABLISH FIXED   Y01676 41088003
*                                      BLOCKED RECORD FORMAT     Y01676 41089003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41090003
RECFMVAR EQU   *                                                 Y01676 41091003
         MVI   DCBRECFM,VARBL          SET RECFM= VB             Y01676 41092003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41093003
         EJECT                                                          41094003
**************************************************************** Y01676 41100003
* THE FOLLOWING SECTION ESTABLISHES THE BLKSIZE FOR THE OUTPUT   Y01676 41101003
* DATA SET.                                                      Y01676 41102003
**************************************************************** Y01676 41103003
BLKSIZE  EQU   *                                                 Y01676 41104003
         LH    PARMREG1,CABLK2         OBTAIN BLOCK SIZE DEFAULT Y01676 41105003
         STH   PARMREG1,DCBBLKSI       SET BLKSIZE IN DCB        Y01676 41106003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41107003
         SPACE 2                                                        41108003
**************************************************************** Y01676 41109003
*  THE FOLLOWING SECTION ESTABLISHES THE BLKSIZE FOR THE OUTPUT  Y01676 41110003
*  DATA SET WHEN DSORG=PO                                        Y01676 41111003
**************************************************************** Y01676 41112003
BLKSIZEP EQU   *                                                 Y01676 41113003
         TM    DCBRECFM,FIXED          CHECK FOR FIXED RECORDS   Y01676 41114003
         BO    BLKSIZP1                IF SO BRANCH TO PROCESS   Y01676 41115003
         TM    DCBRECFM,VARBL          CHECK FOR RECFM=VB        Y01676 41116003
         BO    BLKSIZE                 IF SO, BR TO SET DEFAULT  Y01676 41117003
*                                      BLKSIZE                   Y01676 41118003
         LH    PARMREG1,DCBLRECL       IF UNBLOCKED, OBTAIN LRECLY01676 41119003
         A     PARMREG1,FCDC4          ADD 4 FOR BLOCK CONTROL WDY01676 41120003
         STH   PARMREG1,DCBBLKSI       SET DCB BLKSIZE VALUE     Y01676 41121003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41122003
BLKSIZP1 EQU   *                                                        41123003
         TM    DCBRECFM,FIXEDBL        CHECK FOR BLOCKED RECORDS Y01676 41124003
         BO    BLKSIZE                 IF BLOCKED, BR TO DEFAULT Y01676 41125003
         LH    PARMREG1,DCBLRECL       UNBLOCKED, OBTAIN LRECL   Y01676 41126003
         STH   PARMREG1,DCBBLKSI       SET BLKSIZE TO LRECL      Y01676 41127003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41128003
         SPACE 2                                                        41129003
**************************************************************** Y01676 41130003
* THE FOLLOWING SECTION ESTABLISHES THE LRECL FOR THE OUTPUT     Y01676 41131003
* DATA SET.                                                      Y01676 41132003
**************************************************************** Y01676 41133003
LRECL    EQU   *                                                 Y01676 41134003
         LH    PARMREG1,CALRECL        OBTAIN EDIT LRECL         Y01676 41135003
         TM    CACFLAG2,CARECFM        CHECK IF VARIABLE RECORD  Y01676 41136003
*                                      EDITING                   Y01676 41137003
         BZ    LRECL2                  IF SO, NO ADJUSTMENT REQ. Y01676 41138003
         S     PARMREG1,FCDC4          SUBTRACT CONTROL WORD     Y01676 41139003
*                                      LENGTH FOR TRUE LRECL     Y01676 41140003
LRECL2   EQU   *                                                 Y01676 41141003
         STH   PARMREG1,DCBLRECL       SET LRECL IN DCB          Y01676 41142003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41143003
         EJECT                                                          41144003
**************************************************************** Y01676 41145003
* THE FOLLOWING SECTION ESTABLISHES THE NO. OF BFRS. FOR THE     Y01676 41146003
* COPY OPERATION.                                                Y01676 41147003
**************************************************************** Y01676 41148003
BUFNO    EQU   *                                                 Y01676 41149003
         SR    TEMPREG,TEMPREG                                   Y01676 41150003
         IC    TEMPREG,DCBBUFNO        OBTAIN BUFNO VALUE        Y01676 41151003
         LTR   TEMPREG,TEMPREG         CHECK FOR ZERO            Y01676 41152003
         BNZ   BUFNO1                  IF NOT, BYPASS TENTATIVE  Y01676 41153003
*                                      DEFAULT OF BUFNO VALUE    Y01676 41154003
         LA    TEMPREG,FC3             TENTATIVE BUFNO VAL. IS 3 Y01676 41155003
BUFNO1   EQU   *                                                 Y01676 41156003
         SR    PARMREG0,PARMREG0                                 Y01676 41157003
         LH    PARMREG1,FCMAXBUF       DIVIDEND IS MAX. BFR.     Y01676 41158003
*                                      STORAGE                   Y01676 41159003
         LH    RETCDREG,DCBBLKSI       DIVISOR IS BLKSIZE        Y01676 41160003
         DR    PARMREG0,RETCDREG       COMPUTE BUFNO VALUE BASED Y01676 41161003
*                                      ON MAX. BFR. STORAGE      Y01676 41162003
         CR    PARMREG1,TEMPREG                                  Y01676 41163003
         BL    BUFNO3                  IF COMPUTED<TENTATIVE,    Y01676 41164003
*                                      USE TENTATIVE VALUE       Y01676 41165003
         CH    PARMREG1,FCMBUFNO       CHECK FOR BUFNO<10        Y01676 41166003
         BL    BUFNO2                  IF SO, BR TO USE COMPUTED Y01676 41167003
*                                      VALUE                     Y01676 41168003
         MVC   DCBBUFNO,FCMBUFNO+FC1   SPECIFY 10 BUFFERS USED   Y01676 41169003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41170003
BUFNO2   STC   PARMREG1,DCBBUFNO       STORE COMPUTED VALUE IN   Y01676 41171003
*                                      DCB.                      Y01676 41172003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41173003
BUFNO3   LA    PARMREG1,FC3            OBTAIN MIN. BUFNO VALUE   Y01676 41174003
         CR    PARMREG1,TEMPREG        CHECK IF MIN. > TENTATIVE Y01676 41175003
         BH    BUFNO2                  IF SO, BRANCH TO USE MIN. Y01676 41176003
         STC   TEMPREG,DCBBUFNO        STORE DEFAULT (OR         Y01676 41177003
*                                      OR ORIGINAL) BUFNO IN DCB Y01676 41178003
         BR    WORKREG                 RETURN TO CALLER          Y01676 41179003
         EJECT                                                          41200003
***                                                            @YM07645 41250003
*  GET A POOL OF BUFFERS AND BUILD BUFFER PTR & DECB QTR LISTS @YM07645 41350003
***                                                            @YM07645 41450003
GETPOOL  EQU   *                                               @YM07645 41550003
         SR    PARMREG0,PARMREG0       ZERO OUT REG 0          @YM07645 41600003
         ICM   PARMREG0,FC4,DCBBUFNO  REG0=X'00NN0000'        @YM07645  41650003
         ICM   PARMREG0,FC3,DCBBLKSI  REG0=X'00NNMMMM'        @YM07645  41700003
         GETPOOL IHADCB,(0)                                    @YM07645 41750003
*                                                              @YM07645 41800003
         LA    TESTREG,DECBS-WRTLEN    JUST BEFORE DECBLIST    @YM07645 41850003
         SR    ELEMENT,ELEMENT         START OF LISTS          @YM07645 41900003
*                                                              @YM07645 41950003
GETBUF   EQU   *                                               @YM07645 42000003
         GETBUF IHADCB,(ADDREG)                                @YM07645 42050003
         LTR   ADDREG,ADDREG           IS THERE A BUFFER ADDR  @YM07645 42100003
         BZ    ENDGBUF                 0 = NO MORE BUFFERS     @YM07645 42150003
         ST    ADDREG,BFRPTRS(ELEMENT) PUT ADDR IN BUFFER LIST @YM07645 42200003
         LA    TESTREG,WRTLEN(TESTREG) NEXT ADDR FOR L-FORM    @YM07645 42250003
         ST    TESTREG,DECBPTRS(ELEMENT) PUT ADDR IN DECB LIST @YM07645 42300003
         MVC   FC0(WRTLEN,TESTREG),WRITEL MOVE WRITE LIST FORM @YM07645 42350003
         LA    ELEMENT,FC4(,ELEMENT)   INCREMENT TO NEXT ELEM  @YM07645 42400003
         B     GETBUF                  GET ANOTHER BUFFER      @YM07645 42450003
*                                                              @YM07645 42500003
ENDGBUF  EQU   *                                               @YM07645 42550003
         ST     ADDREG,BFRPTRS(ELEMENT) ZERO IS END OF LIST    @YM07645 42600003
         ST     ADDREG,DECBPTRS(ELEMENT) ZERO IS END OF LIST   @YM07645 42650003
*                                                              @YM07645 44200003
         BR    WORKREG                 RETURN TO OPEN EXIT     @YM07645 44250003
         EJECT                                                          45650020
*********************************************************************** 47600020
*    MSG1- 'DATA SET (EDIT OR SAVE DSNAME) NOT USABLE+.  OPEN ERROR'    47800020
*    IS ISSUED HERE                                                     48000020
*********************************************************************** 48200020
MESSAGE1 OI    SW,MESS1                TURN MESSAGE1 SWITCH ON          48400020
M13      TM    CAEDFLAG,CAEDFNCP       TEST WHETHER IT IS EDIT DATA SET 48600020
*                                      OR SAVE DATA SET                 48800020
         BO    EDSN1                   EDIT DATA SET THEN GO TO EDSN1   49000020
         SR    TESTREG,TESTREG         CLEAR TESTREG                    49200020
         ST    TESTREG,CADSNPT2        SET CADSNPT2 TO ZERO             49400020
         LA    TESTREG,M309IN1                                          49600020
         STH   TESTREG,CADSNOF2        SET OFFSET VALUE IN CADSNOF2     49800020
         TM    SW,MESS1                TEST WHETHER MESSAGE1 IS ISSUED  50000020
         BO    COMBINE2                BRANCH IF ON TO COMBINE2         50200020
         B     COMBINE3                BRANCH TO COMBINE3 IF MESSAGE2   50400020
*                                      IS ISSUED                        50600020
EDSN1    SR    TESTREG,TESTREG         CLEAR TESTREG                    50800020
         ST    TESTREG,CADSNPTR        SET CADSNPTR TO ZERO             51000020
         LA    TESTREG,M309IN1                                          51200020
         STH   TESTREG,CADSNOFF        SET OFFSET VALUE IN CADSNOFF     51400020
         TM    SW,MESS1                TEST WHETHER MESSAGE1 IS ISSUED  51600020
         BO    COMBINE4                BRANCH TO COMBINE4 IF MESSAGE1   51800020
*                                      IS ISSUED                        52000020
         B     COMBINE3                BRANCH TO COMBINE3 IF MESSAGE3   52200020
*                                      IS ISSUED                        52400020
COMBINE2 MVC   B(FC12),INLIST1                                          52600020
ISSUE1   IKJEBEML M309,M3093,CADSNPT2,MF=(E,B)                          52800020
COMBINE6 NI    SW,ALL-MESS1            TURN MESSAGE1 SWITCH OFF         53000020
         LA    TEMPREG,FC8             SET RETURN CODE TO 8             53200020
         B     EXIT                    BRANCH TO RETURN TO CALLING      53400020
*                                      ROUTINE                          53600020
COMBINE4 MVC   B(FC12),INLIST1                                          53800020
ISSUE2   IKJEBEML M309,M3093,CADSNPTR,MF=(E,B)                          54000020
         B     COMBINE6                BRANCH UNCOND. TO COMBINE6       54200020
         EJECT                                                          54250003
*********************************************************************** 54600020
*    EACH LINE IS FORMATTED FOR OUTPUT TO THE BSAM DATA SET AND         54650003
*    WRITTEN OUT                                                        55000020
*********************************************************************** 55200020
CONT1    EQU   *                                               @YM07645 55220003
         SR    ELEMENT,ELEMENT         FIRST BUFER AND DECB    @YM07645 55240003
         L     TEMPREG,BFRPTRS(ELEMENT)  GET BUFFER ADDR       @YM07645 55260003
         LR    PARMREG0,TEMPREG        THE BEGINNING OF BFR    @YM07645 55280003
         AH    PARMREG0,DCBBLKSI       THE END OF BUFFER       @YM07645 55300003
         ST    PARMREG0,BUFEND         SAVE END OF BFR         @YM07645 55320003
         TM    DCBRECFM,FIXED          TEST WHETHER BSAM DATA  @YM07645 55340003
*                                      SET IS FIXED OR VARIABLE@YM07645 55400003
         BO    FX                      BRANCH AROUND IF FIXED           55800020
VR       LA    ADDREG,PUTAD            FORMAT REC. FOR BSAM VAR.        55850003
*                                      DATA SET                         56200020
         A     ADDREG,FCDC4            PUT ADDR FOR PUT MACRO IN ADDREG 56400020
         LA    TEMPREG,FC4(,TEMPREG)   MAKE ROOM FOR BDW       @YM07645 56420003
         B     ADDREC                  SKIP RECFM=F CODE       @YM07645 56440003
*                                                              @YM07645 56460003
FX       EQU   *                       FORMAT RECORD FOR ..    @YM07645 56480003
         LA    ADDREG,PUTAD            ..BSAM FIXED DSN        @YM07645 56500003
         A     ADDREG,FCDC8            NO X'LL00' FIELD NEEDED @YM07645 56520003
         EJECT                                                          56600003
***************************************************************@YM07645 56800003
*    ADD A RECORD TO THE BUFFER. BEFORE CALLING EUT FOR        @YM07645 56808003
*    ANOTHER RECORD SEE IF THERE IS ROOM IN THE BUFFER FOR     @YM07645 56816003
*    ANOTHER RECORD. IF THERE IS NO ROOM THEN THE BUFFER IS    @YM07645 56824003
*    FULL SO GO SET THE BLOCK DESCRIPTOR WORD. IF THERE IS     @YM07645 56832003
*    ROOM FOR ANOTHER RECORD GET IT AND ADD IT TO THE BUFFER   @YM07645 56840003
***************************************************************@YM07645 56848003
ADDREC   EQU   *                                               @YM07645 56856003
         MVC   COKEYA(FC4),PUTAD       SAVE KEY OF LINE READ  @YM07645  56864003
         LH    PARMREG1,PUTAD+FC4      VAR LRECL=LL IN REC    @YM07645  56872003
         TM    DCBRECFM,VAR           IF VARIABLE FORMAT      @YM07645  56880003
         BO    TESTEND                THEN R1 ALREAD = LRECL  @YM07645  56888003
         LH    PARMREG1,DCBLRECL       GET RECORD LENGTH       @YM07645 56896003
TESTEND  EQU   *                                              @YM07645  56904003
         LA    PARMREG0,FC0(PARMREG1,TEMPREG) CALC END OF REC @YM07645  56912003
         C     PARMREG0,BUFEND      THIS REC PAST END OF BUF  @YM07645  56920003
         BH    SETBDW               PAST END,SET BLOCK...     @YM07645  56928003
*                       .....DESCRIPTOR WORD                  @YM07645  56936003
         BCTR  PARMREG1,0           LRECL=LRECL-ONE           @YM07645  56944003
         EX    PARMREG1,MOVEREC  MOVE FROM PUTAD TO BUFFER    @YM07645  56952003
*                                                             @YM07645  56960003
         LA    TEMPREG,FC1(PARMREG1,TEMPREG) NEXT POSITION    @YM07645  56968003
*                                            IN BUFFER        @YM07645  56976003
CALLEUT  EQU   *                                               @YM07645 57000003
         MVI   COWORD1,AFTER           PUT X'02' IN HIGH ORDER @YM07645 57002003
*                                      BYTE OF 1ST PARAM. WORD @YM07645 57004003
         LA    TESTREG,COKEYA          PUT POINTER TO KEY OF   @YM07645 57006003
*                                      LAST LINE REFERENCED    @YM07645 57008003
*                                      IN 2ND PARAM WORD       @YM07645 57010003
         ST    TESTREG,COWORD2                                 @YM07645 57012003
         IKJEBESH (COMMREG),IKJEBEUT,MF=(E,A),                 @YM07645*57014003
               PARAM=((COMMREG),COWORD1)                       @YM07645 57016003
         LTR   RETCDREG,RETCDREG       TEST FOR ZERO           @YM07645 57018003
         BZ    ADDREC                  0 = ADD REC TO BUF      @YM07645 57020003
*                                                              @YM07645 57022003
         C     RETCDREG,FCDC4          TEST FOR EOF            @YM07645 57024003
         BNE   CLOSE12                 FREE BUFFER POOL RC=12  @YM07645 57026003
*                                                              @YM07645 57028003
         OI    FCSWITCH,FCEOF          INDICATE EOF            @YM07645 57030003
*                                                              @YM07645 57032003
         L     PARMREG0,BFRPTRS(ELEMENT)  START OF BUFFER      @YM07645 57034003
         LR    PARMREG1,TEMPREG        SAVE END OF BUFFER      @YM07645 57036003
         SR    PARMREG1,PARMREG0       CALC BUFFER LEN         @YM07645 57038003
         STH   PARMREG1,DCBBLKSI       SET NEW BLOCK SIZE      @YM07645 57040003
*                                                              @YM07645 57042003
         EJECT                                                 @YM07645 57044003
***************************************************************@YM07645 57046003
*    IF RECFM IS VARIABLE THEN SET THE BLOCK DESCRIPTOR WORD.  @YM07645 57048003
*    SET THE HIGH ORDER BIT IN THE DECB TO 1 TO INDICATE THAT  @YM07645 57050003
*    IT IS BEING USED BY A WRITE AND THEN WRITE THE BUFFER.    @YM07645 57052003
*    FOR END OF FILE WE WANT TO CHECK ALL DECBS THAT ARE BEING @YM07645 57054003
*    USED. ON OUR FIRST PATH THRU FILLING UP OUR BUFFERS WE    @YM07645 57056003
*    JUST FILL ONE THEN WRITE IT, FILL THE NEXT THEN WRITE IT. @YM07645 57058003
*    AFTER ALL THE BUFFERS HAVE BEEN FILLED ONCE THEN WE CHECK @YM07645 57060003
*    A DECB FOR AN ASSOCIATED BUFFER TO INSURE THAT THE I/O IS @YM07645 57062003
*    COMPLETE BEFORE WE USE THAT BUFFER. (SEE LABEL DECBCHK).  @YM07645 57064003
***************************************************************@YM07645 57066003
SETBDW   EQU   *                                               @YM07645 57068003
         TM    DCBRECFM,FIXED          IS IT FIXED DSN         @YM07645 57070003
         BO    WRTBUF                  IF FIXED, WRITE BUF     @YM07645 57072003
*                                                              @YM07645 57074003
         L     PARMREG1,BFRPTRS(ELEMENT)  GET BUFFER ADDRESS   @YM07645 57076003
         SR    TEMPREG,PARMREG1          CALCULATE LENGTH      @YM07645 57078003
         SLL   TEMPREG,FC16               SHIFT TO LEFT        @YM07645 57080003
         ST    TEMPREG,FC0(PARMREG1)      STORE X'LL00'        @YM07645 57082003
*                                                              @YM07645 57084003
WRTBUF   EQU   *                                               @YM07645 57086003
         LA    PARMREG1,DECBPTRS(ELEMENT) ADDR OF DECB PTR     @YM07645 57088003
         OI    FC0(PARMREG1),DECBUSE      DECB BEING USED      @YM07645 57090003
         L     PARMREG1,FC0(PARMREG1)     ADDR OF DECB         @YM07645 57092003
         XC    FC0(FC4,PARMREG1),FC0(PARMREG1) CLEAR DECB      @ZA05967 57094003
         L     PARMREG0,BFRPTRS(ELEMENT)  BUFFER ADDR          @YM07645 57096003
         WRITE (PARMREG1),SF,IHADCB,(PARMREG0),MF=E            @YM07645 57098003
     EJECT                                                              57100003
***************************************************************@YM07645 57102003
*    AFTER HAVING WRITTEN OUT A BUFFER, IF END OF FILE WAS     @YM07645 57104003
*    ENCOUNTERED THEN ALL WE HAVE TO DO IS CHECK EACH DECB TO  @YM07645 57106003
*    INSURE THAT THE ASSOCIATED WRITE IS COMPLETE.             @YM07645 57108003
*    FOR NON EOF GET NEXT BUFFER POINTER. IF THE POINTER IS    @YM07645 57110003
*    ZERO THEN START AT TOP OF DECBPTR LIST TO CHECK FOR WRITE @YM07645 57112003
*    COMPLETION SO WE CAN REUSE A BUFFER.                      @YM07645 57114003
*    IF WE HAVE ANOTHER BUFFER IN THE LIST AND WE WANT TO CHECK@YM07645 57116003
*    IT BEFORE WE FILL IT THEN GO CHECK THE DECB. IF NO NEED   @YM07645 57118003
*    TO CHECK BECAUSE WE HAVEN'T FILLED IT BEFORE THEN GET     @YM07645 57120003
*    BEGINNING AND END OF BUFFER AND FILL IT UP.               @YM07645 57122003
***************************************************************@YM07645 57124003
*                                                              @YM07645 57126003
         LR    LASTINDX,ELEMENT        SAVE INDEX TO LAST DECB @ZA05967 57128003
         LA    ELEMENT,FC4(ELEMENT)    INCR TO NEXT PTR        @ZA05967 57130003
*                                                              @YM07645 57132003
*                                                              @YM07645 57134003
         L     TESTREG,BFRPTRS(ELEMENT)  GET NEXT BFR ADDR     @YM07645 57136003
         LTR   TESTREG,TESTREG           IS BFR PTR ZERO       @YM07645 57138003
         BZ    SETINDEX                  YES, GO TO SETINDEX   @YM07645 57140003
*                                                              @YM07645 57142003
         TM    FCSWITCH,FCEOF          EOF FROM INPUT DATASET  @ZA05967 57144003
         BO    DECBCHK                 CHECK ALL DECB'S        @ZA05967 57146003
*                                                              @ZA05967 57148003
         TM    FCSWITCH,FCWRTCHK       WANT CHECK AFTER WRITE  @YM07645 57150003
         BO    DECBCHK                 YES-CHECK DECB          @YM07645 57152003
*                                                              @YM07645 57154003
BUFADDR  EQU   *                                               @YM07645 57156003
         L     TEMPREG,BFRPTRS(ELEMENT)  GET BUFFER ADDR       @YM07645 57158003
         LR    PARMREG0,TEMPREG        THE BEGINNING OF BFR    @YM07645 57160003
         AH    PARMREG0,DCBBLKSI       THE END OF BUFFER       @YM07645 57162003
         ST    PARMREG0,BUFEND         SAVE END OF BFR         @YM07645 57164003
         TM    DCBRECFM,FIXED          IS IT FIXED DSN         @YM07645 57166003
         BO    ADDREC                  READ A RECORD           @YM07645 57168003
         LA    TEMPREG,FC4(,TEMPREG)   MAKE ROOM FOR BDW       @YM07645 57170003
         B     ADDREC                  GET REC1 FOR            @YM07645 57172003
*                                            BUFFER(ELEMENT)   @YM07645 57174003
         EJECT                                                 @YM07645 57176003
***************************************************************@YM07645 57178003
*    ONCE WE REACH THIS POINT WE HAVE FILLED ALL THE BUFFERS   @YM07645 57200003
*    ONCE AND NOW HAVE TO START CHECKING THEIR ASSOCIATE DECBS @YM07645 57210003
*    TO INSURE THAT THE BUFFER HAS BEEN WRITTEN OUT. NOW WE    @YM07645 57220003
*    START THE SEQUENCE OF CHECK BUFFER(N), FILL BUFFER(N),    @YM07645 57230003
*    WRITE BUFFER(N), CHECK BUFFER(N+1) ETC.                   @YM07645 57240003
*    WE ALSO COME HERE AT EOF BECAUSE WE WANT TO CHECK ALL     @YM07645 57250003
*    OUTSTANDING WRITES AND MAKE SURE THEY ARE COMPLETE BEFORE @YM06745 57260003
*    WE FREE UP THE BUFFER POOL AND CLOSE OUR OUTPUT DATASET   @YM07645 57270003
***************************************************************@YM07645 57280003
SETINDEX EQU   *                                               @YM07645 57290003
         SR    ELEMENT,ELEMENT         FIRST BUF AND DECB      @YM07645 57300003
*                                                              @YM07645 57310003
DECBCHK  EQU   *                                               @YM07645 57400003
         OI    FCSWITCH,FCWRTCHK       WANT CHECK AFTER WRITE  @YM07645 57450003
*                                                              @YM07645 57600003
         LA    PARMREG1,DECBPTRS(ELEMENT) ADDR OF DECB PTR     @YM07645 57650003
         TM    FC0(PARMREG1),DECBUSE   IS DECB BEING USED     @YM07645  57800003
         BZ    INCRELEM                   NOT USED,GET...      @YM07645 57850003
*                                             NEW DECB         @YM07645 58000003
         NI    FC0(PARMREG1),ALL-DECBUSE  DECB NOT BEING USED  @YM07645 58050003
         L     PARMREG1,FC0(PARMREG1)     ADDR OF DECB         @YM07645 58200003
         CHECK (PARMREG1)                 CHECK DECB           @YM07645 58250003
*                                                              @YM07645 58300003
         TM    FCSWITCH,FCEOF            TEST FOR EOF FROM EUT @YM07645 58400003
         BZ    BUFADDR                 FILL ANOTHER BUFFER     @YM07645 58450003
*                                                              @YM07645 58600003
INCRELEM EQU   *                                               @YM07645 58650003
         CR    ELEMENT,LASTINDX        ALL DECB'S CHECKED?     @ZA05967 58800003
         BE    CLOSE0                  FREE BUFFER POOL RC=0   @ZA05967 58850003
         LA    ELEMENT,FC4(ELEMENT)    UPDATE INDEX TO NEXT    @ZA05967 58900003
         L     TESTREG,DECBPTRS(ELEMENT)  DECB,SEE IF LAST     @ZA05967 59000003
         LTR   TESTREG,TESTREG         IF ZERO START AT TOP    @ZA05967 59040003
         BZ    SETINDEX                RESUME CHECKING AT TOP  @ZA05967 59080003
         B     DECBCHK                 CHECK NEXT DECB         @ZA05967 59120003
         EJECT                                                 @YM07645 59200003
*********************************************************************** 59400003
*    SYNAD EXIT ROUTINE                                                 62600020
*********************************************************************** 62800020
FCSYNAD  SYNADAF ACSMETH=BSAM          DIAGNOSE I/O ERROR               62850003
         LA    TESTREG,M3092IN1                                         63200020
         STH   TESTREG,OFFSET2         PUT OFFSET VALUE IN OFFSET2      63400020
         B     M13                     BRANCH UNCOND. TO M13            63600020
COMBINE3 XC    COBUILD2(FC4),COBUILD2  PUT 0 IN PTR FIELD OF COBUILD2   63800020
         MVC   COBUILD2+FC4(FC2),FCDC82  PUT (LENGTH OF SYNADAF         64000020
*                                      MESSAGE) +4 IN 5TH & 6TH BYTES   64200020
*                                      COBUILD2                         64400020
         MVC   COBUILD2+FC6(FC2),OFFSET2  PUT OFFSET IN 7TH & 8TH BYTES 64600020
*                                      OF COBUILD2                      64800020
         MVC   COBUILD2+FC8(FC78),FC50(PARMREG1)  PUT SYNAD MESSAGE     65000020
*                                      IN COBUILD2                      65200020
         SPACE 2                                                        65400020
*********************************************************************** 65600020
*    SYNADRLS MACRO IS ISSUED TO RELEASE THE BUFFER TO THE SYSTEM       65800020
*********************************************************************** 66000020
         SYNADRLS                                                       66200020
         TM    CAEDFLAG,CAEDFNCP       TEST WHETHER FINAL COPY IS TO    66400020
*                                      BE PERFORMED ON EDIT DATA SET    66600020
*                                      OR SAVE DATA SET                 66800020
         BO    EDSN2                   EDIT DATA SET THEN GO TO EDSN2   67000020
*********************************************************************** 67200020
*    MSG2- 'DATA SET (SAVE DSNAME) NOT USABLE+.  I/O SYNAD ERROR        67400020
*    (SYNADINFO)' IS ISSUED HERE                                        67600020
*********************************************************************** 67800020
         MVC   B(FC12),INLIST3                                          68000020
ISSUE3   IKJEBEML M309,M3092,CADSNPT2,COBUILD2,MF=(E,B)                 68200020
COMBINE7 LA    TEMPREG,FC8             SET R.C.=8                       68400020
         B     CLOSED                  BRANCH TO CLOSE BSAM DATA SET    68450003
EDSN2    EQU   *                                                        68800020
         SPACE 2                                                        69000020
*********************************************************************** 69200020
*    MESSAGE3- 'DATA SET (EDIT DSNAME) NOT USABLE+.  I/O SYNAD ERROR    69400020
*    (SYNADINFO) ' IS ISSUED HERE                                       69600020
*********************************************************************** 69800020
         MVC   B(FC12),INLIST3                                          70000020
ISSUE4   IKJEBEML M309,M3092,CADSNPTR,COBUILD2,MF=(E,B)                 70200020
         B     COMBINE7                BRANCH UNCOND. TO COMBINE7       70400020
         SPACE 3                                                        70600020
*********************************************************************** 70800020
*    CONSTANT AREA FOR IKJEBEFC                                         71000020
*********************************************************************** 71200020
FCDC4    DC    F'4'                    FULWORD OF 4                     71400020
FCDC8    DC    F'8'                    FULLWORD OF 8                    71600020
FCEXLST  DC    X'85'                   HEX 85                           71800020
         DC    AL3(OPENEXIT)           ADDR OF OPEN EXIT ROUTINE        72000020
FCDC82   DC    H'82'                   HALFWORD OF 82                   72200020
FCMAXBUF DC    H'10240'                MAXIMUM BUFFER STORAGE    Y01676 72220003
*                                      BY THIS ROUTINE           Y01676 72240003
FCMBUFNO DC    H'&MAXBFRS'             MAXIMUM BUFNO VALUE     @YM07645 72260003
*                                      BY THIS ROUTINE           Y01676 72280003
MOVEREC  MVC   FC0(FC0,TEMPREG),FC0(ADDREG)  MOVE RECRD TO BUF @YM07645 72300003
*                                                                       72320003
INLIST1  IKJEBEML M309,M3091,,MF=L                                      72400020
INLIST3  IKJEBEML M309,M3092,,,MF=L                                     72600020
FCDCB    DCB   DSORG=PS,MACRF=W,SYNAD=FCSYNAD,EXLST=FCEXLST,   @YM07645*72650003
               NCP=&MAXBFRS                                   @YM07645  72700003
         WRITE WRITEL,SF,MF=L                                  @YM07645 72750003
WRTLEN   EQU   *-WRITEL                LENGTH OF LIST FORM     @YM07645 72800003
FCDCBEND EQU   *                                                        73000020
FCDCBL   EQU   FCDCBEND-FCDCB                                           73200020
FCOPEN   OPEN  (,(OUTPUT)),MF=L        LIST FORM OF OPEN MACRO          73400020
OPENEND  EQU   *                                                        73600020
FCOPENL  EQU   OPENEND-FCOPEN                                           73800020
FCCLOSE  CLOSE (,),MF=L                                                 74000020
CLOSEND  EQU   *                                                        74200020
FCCLOSEL EQU   CLOSEND-FCCLOSE                                          74400020
         DCBD  DSORG=PS,DEVD=DA                                         74600020
         SPACE 2                                                        74800020
         IKJEBECA                                                       75000020
         ORG   CASRWKA                 ORG FOR CA'S SERVICE WORK AREA   75200020
COOPENPL DS    F                       ******************************** 75400020
COWORD1  DS    F                       *     SERVICE                  * 75600020
COWORD2  DS    F                       *      ROUTINE                 * 75800020
COWORD3  DS    F                       *       WORK                   * 76000020
A        DS    5F                      *        AREA                  * 76200020
COKEYA   DS    F                       *         FOR ECA              * 76400020
COBUILD2 DS    22F                     ******************************** 76600020
OFFSET2  DS    H                       1ST INSERTION FOR 2ND 2ND-       76800020
*                                      LEVEL OF MSG2 AND MSG3           77000020
SW       DS    X                       MESSAGE1 SWITCH                  77200020
         ORG   CATEMPBF                *  ORG  FOR THE TEMPORARY      * 77400020
B        DS    10F           USED FOR MESSAGE SENDING         @YM07645  77450003
         ORG   CATEMPBF                                       @YM07645  77500003
PUTAD    DS    66F                     *  BUFFER POOL                 * 77600020
COFCDCB  DS    24F                     *  AVAILABLE                   * 77800020
DECBS    DS    0F                      FORCE FULL WORD BDY     @YM07645 78000003
         DS    (&MAXBFRS.*WRTLEN)C     RESERVE DECB SPACE      @YM07645 78010003
&MAXBFRS SETA  &MAXBFRS+1              1 EXTRA POINTER         @YM07645 78020003
DECBPTRS DS    &MAXBFRS.F              N+1 DECB PTRS           @YM07645 78030003
BFRPTRS  DS    &MAXBFRS.F              N+1 BUFFER POINTERS     @YM07645 78040003
FCSWITCH DS    X                       FC SWITCHS              @YM07645 78050003
FCEOF    EQU   X'80'                   1 = END OF FILE IN EUT  @YM07645 78060003
DECBUSE  EQU   X'80'                   1 = DECB BEING USED     @YM07645 78070003
FCWRTCHK EQU   X'10'                   1 = CHECK AFTER A WRITE @YM07645 78080003
BUFEND   DS    F                       END OF BUFFER           @YM07645 78090003
SAVER14  DS    F          SAVE ARE FOR REG 14 IN              @YM07645  78100003
*                         OPEN EXIT                           @YM07645  78110003
         NOPR  ((*-CATEMPBF)/529*16)                          @YM07645  78120003
         END                                                            78200020
