         TITLE 'IKJEE150 - OPERATOR ATTENTION EXIT ROUTINE             *00001000
                        '                                               00002000
IKJEE150 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEE150  73.286'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
REGLIST  DS    0H                                                  0004 00014000
*    LINKAGE CONVENTIONS TO SAVE AREA PROVIDED BY IKJEE100              00015000
     L     R2,EIGHT(NULL,R1)        ADDR OF EXIT PARMS                  00016000
     L     R3,FORTY(NULL,R2)        ADDR OF ATTN EXIT SAVE AREA         00017000
     ST    R13,FOUR(NULL,R3)        SAVE CALLERS SAVE AREA ADDR IN      00018000
*                                     2ND WORD OF OWN SAVE AREA         00019000
     ST    R3,EIGHT(NULL,R13)       SAVE OWN SAVE AREA ADDR IN          00020000
*                                     3RD WORD OF CALLERS SAVE          00021000
     LR    R13,R3                   ADDR OF OWN SAVE AREA               00022000
NULL  EQU  0                        0 DISPLACEMENT                      00023000
FOUR  EQU  4                        LENGTH OR DISPLACEMENT OF FOUR      00024000
EIGHT EQU  8                        LENGTH OR DISPLACEMENT OF EIGHT     00025000
FORTY EQU  40                       LENGTH OR DISPLACEMENT OR FORTY     00026000
*   R3=R1;                          /* ADDRESS OF ATTN EXIT PARAMETER   00027000
*                                      LIST                          */ 00028000
         LR    R3,R1                                               0037 00029000
*   RESPECIFY                                                      0038 00030000
*    (R1) UNRSTD;                   /* FREE FOR COMPILER USAGE       */ 00031000
*   R2=PARMPTR;                     /* ADDRESS OF PARAMETERS FROM  0039 00032000
*                                      IKJEE100                      */ 00033000
         L     R2,PARMPTR(,R3)                                     0039 00034000
*   R4=WORKPTR;                     /* ADDR OF ATTN EXIT RTN W/A     */ 00035000
         L     R4,WORKPTR(,R2)                                     0040 00036000
*   CONCAT='0'B;                    /* INITIALIZE FLAG               */ 00037000
         NI    CONCAT(R2),B'01111111'                              0041 00038000
*   IOPLUPT=CPPLUPT;                /* PTR TO UPT                    */ 00039000
         L     @07,CPPLPTR(,R2)                                    0042 00040000
         MVC   IOPLUPT(4,R4),CPPLUPT(@07)                          0042 00041000
*   IOPLECT=CPPLECT;                /* PTR TO ECT                    */ 00042000
         MVC   IOPLECT(4,R4),CPPLECT(@07)                          0043 00043000
*   IOPLECB=CPECBPTR;               /* PTR TO EGB POSTED BY ATTN EXIT   00044000
*                                      WHEN COMMAND IS ENTERED       */ 00045000
         MVC   IOPLECB(4,R4),CPECBPTR(R2)                          0044 00046000
*   AXLEN=TAIEMSGL+4;               /* SET BUFFER LENGTH             */ 00047000
         LA    @07,4                                               0045 00048000
         L     @15,IBUFPTR(,R3)                                    0045 00049000
         SLR   @15,@07                                             0045 00050000
         L     @14,TAIEPTR(,R3)                                    0045 00051000
         LH    @11,TAIEMSGL(,@14)                                  0045 00052000
         ALR   @07,@11                                             0045 00053000
         STH   @07,AXLEN(,@15)                                     0045 00054000
*   AXOFF=0;                        /* SET BUFFER OFFSET             */ 00055000
         SLR   @07,@07                                             0046 00056000
         STH   @07,AXOFF(,@15)                                     0046 00057000
*   R6=TAIETGET;                    /* MOVE RETURN CODE FOR POSSIBLE    00058000
*                                      ERROR                         */ 00059000
         SLR   R6,R6                                               0047 00060000
         IC    R6,TAIETGET(,@14)                                   0047 00061000
*   R5=1;                           /* SET CODE FOR SERVICE ROUTINE     00062000
*                                      NAME                          */ 00063000
         LA    R5,1                                                0048 00064000
*   IF R6^=0                        /* CHECK RETURN CODE FROM TGET 0049 00065000
*                                      ISSUED BY STAX                */ 00066000
*     THEN                          /* UNSUCCESSFUL, ISSUE AN ERROR  */ 00067000
         CR    R6,@07                                              0049 00068000
         BNE   @RT00049                                            0049 00069000
*     GO TO ERRMSG;                 /* MSG AND RETURN TO INTERRUPTED    00070000
*                                      PROCESSING                    */ 00071000
*   IF TAIEMSGL=0                   /* WHEN INPUT LINE HAS LENGTH  0051 00072000
*                                      ZERO                          */ 00073000
*     THEN                          /* RETURN TO INTERRUPTED         */ 00074000
         CR    @11,@07                                             0051 00075000
         BE    @RT00051                                            0051 00076000
*     GO TO EXIT;                   /* PROCESSING                    */ 00077000
*   IF AXTEXT(TAIEMSGL)='-'         /* IS LAST CHAR OF INPUT LINE A     00078000
*                                      CONTINUATION CHARACTER        */ 00079000
*     THEN                          /* YES,                          */ 00080000
         ALR   @15,@11                                             0053 00081000
         CLI   AXTEXT-1(@15),C'-'                                  0053 00082000
         BNE   @RF00053                                            0053 00083000
*     DO;                           /* USE GETLINE TO GET            */ 00084000
*       CONCAT='1'B;                /* REMAINDER OF LOGICAL LINE     */ 00085000
         OI    CONCAT(R2),B'10000000'                              0055 00086000
*       CALL GETLRTN;               /* AND CONCATENATE IT TO         */ 00087000
         BAL   @14,GETLRTN                                         0056 00088000
*     END;                          /* INPUT LINE                    */ 00089000
*   ELSE                            /* FOR NO CONTINUATION GETMAIN   */ 00090000
*     DO;                           /* A BUFFER TO MOVE THE CMD INTO */ 00091000
         B     @RC00053                                            0058 00092000
@RF00053 DS    0H                                                  0059 00093000
*       RESPECIFY                                                  0059 00094000
*        (R0,                                                      0059 00095000
*         R1) RSTD;                 /* RESTRICT REGS ACROSS GETMAIN  */ 00096000
*       R0=AXLEN+8;                 /* GET LENGTH OF BUFFR NEEDED    */ 00097000
         L     @07,IBUFPTR(,R3)                                    0060 00098000
         LA    R0,8                                                0060 00099000
         AL    @07,@CF00282                                        0060 00100000
         AH    R0,AXLEN(,@07)                                      0060 00101000
*       R6=R0;                      /* SAVE THE LENGTH               */ 00102000
         LR    R6,R0                                               0061 00103000
*       R0=R0|'01000000'X;          /* SET SUBPOOL NUMBER            */ 00104000
         O     R0,@CF00246                                         0062 00105000
*       GEN(GETMAIN R,LV=(0));      /* GET THE BUFFER FOR THE CMD    */ 00106000
         GETMAIN R,LV=(0)                                               00107000
*       ATTNBUFF=R1;                /* SAVE THE ADDRESS              */ 00108000
         ST    R1,ATTNBUFF(,R2)                                    0064 00109000
*       RESPECIFY                                                  0065 00110000
*        (R0,                                                      0065 00111000
*         R1) UNRSTD;               /* FREE FOR COMPILER             */ 00112000
*       CALL BLANK;                 /* BLANK OUT THE BUFFER          */ 00113000
         BAL   @14,BLANK                                           0066 00114000
*       GETTEXT(1:TAIEMSGL)=AXTEXT(1:TAIEMSGL);/* MOVE THE CMD TEXT     00115000
*                                      IN                            */ 00116000
         L     @07,ATTNBUFF(,R2)                                   0067 00117000
         L     @01,TAIEPTR(,R3)                                    0067 00118000
         LH    @15,TAIEMSGL(,@01)                                  0067 00119000
         BCTR  @15,0                                               0067 00120000
         L     @01,IBUFPTR(,R3)                                    0067 00121000
         EX    @15,@SM00283                                        0067 00122000
*       GETLEN=R6;                  /* SET THE BUFFR LENGTH          */ 00123000
         STH   R6,GETLEN(,@07)                                     0068 00124000
*       GETOFF=0;                   /* INITIALIZE THE OFFSET         */ 00125000
         SLR   @15,@15                                             0069 00126000
         STH   @15,GETOFF(,@07)                                    0069 00127000
*     END;                                                         0070 00128000
*                                                                  0070 00129000
*/*                                                                0071 00130000
*    USE COMMAND SCAN TO DETERMINE IF INPUT LINE IS NULL,          0071 00131000
*    A QUESTION MARK OR A COMMAND                                  0071 00132000
*                                                                    */ 00133000
*                                                                  0071 00134000
*SCAN:                                                             0071 00135000
*   CSPLFLG=ADDR(FLAGWORD);         /* INDICATE NO SYNTAX CHECK      */ 00136000
@RC00053 DS    0H                                                  0071 00137000
SCAN     LA    @07,FLAGWORD                                        0071 00138000
         ST    @07,CSPLFLG(,R4)                                    0071 00139000
*   CSPLCBUF=ATTNBUFF;              /* ADDR OF COMMAND BUFFER        */ 00140000
         MVC   CSPLCBUF(4,R4),ATTNBUFF(R2)                         0072 00141000
*   CSPLOA=ADDR(CSOA);              /* ADDRESS OF OUTPUT AREA        */ 00142000
         LA    @07,CMDSCAN(,R4)                                    0073 00143000
         ST    @07,CSPLOA(,R4)                                     0073 00144000
*   RESPECIFY                                                      0074 00145000
*    (R1,                                                          0074 00146000
*     R15) RSTD;                    /* RESTRICT REGS ACROSS SCAN     */ 00147000
*   R1=ADDR(CSPL);                  /* ADDRESS OF PARAMETER LIST     */ 00148000
         LR    R1,R4                                               0075 00149000
*   GEN(LINK EP=IKJSCAN);           /* SCAN THE COMMAND              */ 00150000
         LINK EP=IKJSCAN                                                00151000
*   R6=R15;                         /* MOVE RETURN CODE              */ 00152000
         LR    R6,R15                                              0077 00153000
*   RESPECIFY                                                      0078 00154000
*    (R1,                                                          0078 00155000
*     R15) UNRSTD;                  /* FREE FOR COMPILER USAGE       */ 00156000
*   R5=5;                           /* SERVICE ROUTINE NAME CODE SET */ 00157000
         LA    R5,5                                                0079 00158000
*   IF R6^=0                        /* CHECK FOR SUCCESSFUL        0080 00159000
*                                      COMPLETION                    */ 00160000
*     THEN                          /* UNSUCCESSFUL, ISSUE ERROR MSG */ 00161000
         LTR   R6,R6                                               0080 00162000
         BNZ   @RT00080                                            0080 00163000
*     GO TO ERRMSG;                 /* AND RETURN                    */ 00164000
*   IF CSOANOC='1'B                 /* IS INPUT A NULL LINE?         */ 00165000
*     THEN                          /* YES, RETURN TO INTERRUPTED    */ 00166000
         LA    @07,CMDSCAN(,R4)                                    0082 00167000
         TM    CSOANOC(@07),B'00010000'                            0082 00168000
         BO    @RT00082                                            0082 00169000
*     GO TO EXIT;                   /* PROCESSING                    */ 00170000
*   IF CSOAQM='1'B                  /* IS INPUT A QUESTON MARK       */ 00171000
*     THEN                          /* YES, PUT OUT 2ND LEVEL MSG, A */ 00172000
         TM    CSOAQM(@07),B'00100000'                             0084 00173000
         BO    @RT00084                                            0084 00174000
*     GO TO QMARK;                  /* MODE MSG AND GET A NEW LINE   */ 00175000
*/*                                                                0086 00176000
*    NOTE: IF INPUT LINE IS NOT A QUESTION MARK OR NULL LINE, IT   0086 00177000
*          IS ASSUMED TO BE A COMMAND                              0086 00178000
*                                                                    */ 00179000
*                                                                  0086 00180000
*                                                                  0086 00181000
*/********************************************************************/ 00182000
*/*      WHEN THE INPUT LINE IS A COMMAND, THE SECOND LEVEL MESSAGE  */ 00183000
*/* CHAIN IS DELETED, THE INPUT STACK IS RESET, AND THE CP ECB       */ 00184000
*/* IS POSTED TO NOTIFY OPERATOR THAT PROCESSING ON THE CURRENT      */ 00185000
*/* COMMAND IS TO BE TERMINATED AND THIS NEW COMMAND SHOULD BE       */ 00186000
*/* PROCESSED.                                                       */ 00187000
*/********************************************************************/ 00188000
*                                                                  0086 00189000
*   ECTMSGF='1'B;                   /* SET SWITCH IN ECT WHICH WILL     00190000
*                                      NOTIFY AN I/O SERVICE ROUTINE    00191000
*                                      TO DELETE THE 2ND LEVEL MSG 0086 00192000
*                                      CHAIN                         */ 00193000
         L     @07,CPPLPTR(,R2)                                    0086 00194000
         L     @07,CPPLECT(,@07)                                   0086 00195000
         MVI   ECTMSGF(@07),B'10000000'                            0086 00196000
*/*                                                                0087 00197000
*    USE STACK SERVICE ROUTINE TO RESET THE INPUT STACK TO         0087 00198000
*    THE TERMINAL                                                  0087 00199000
*                                                                    */ 00200000
*                                                                  0087 00201000
*   IOPLIOPB=ADDR(STPB);            /* ADDRESS OF STACK PARAMETER  0087 00202000
*                                      BLOCK                         */ 00203000
         LA    @07,IOBLOCK(,R4)                                    0087 00204000
         ST    @07,IOPLIOPB(,R4)                                   0087 00205000
*   STPB=STKL;                      /* MOVE STACK PARAMETER BLOCK TO    00206000
*                                      DYNAMIC STORAGE               */ 00207000
         MVC   STPB(16,@07),STKL                                   0088 00208000
*   RESPECIFY                                                      0089 00209000
*    (R1,                                                          0089 00210000
*     R15) RSTD;                    /* RESTRICT ACROSS STACK         */ 00211000
*   R1=ADDR(IOPL);                  /* ADDRESS OF PARM LIST          */ 00212000
         LR    R1,R4                                               0090 00213000
*   R15=STKENTRY;                   /* ADDRESS OF STACK              */ 00214000
         L     R15,STKENTRY(,R2)                                   0091 00215000
*   GEN(STACK ENTRY=(15),MF=(E,(1)));                              0092 00216000
         STACK ENTRY=(15),MF=(E,(1))                                    00217000
*   R6=R15;                         /* MOVE RETURN CODE              */ 00218000
         LR    R6,R15                                              0093 00219000
*   RESPECIFY                                                      0094 00220000
*    (R1,                                                          0094 00221000
*     R15) UNRSTD;                  /* FREE REGS FOR COMPILER        */ 00222000
*   R5=2;                           /* SERVICE ROUTINE NAME CODE SET */ 00223000
         LA    R5,2                                                0095 00224000
*   IF R6^=0                        /* CHECK FOR SUCCESSFUL        0096 00225000
*                                      COMPLETION                    */ 00226000
*     THEN                          /* UNSUCCESSFUL, ISSUE AN ERROR  */ 00227000
         LTR   R6,R6                                               0096 00228000
         BNZ   @RT00096                                            0096 00229000
*     GO TO ERRMSG;                 /* MSG AND RETURN TO INTERRUPTED    00230000
*                                      PROCESSING                    */ 00231000
*/*                                                                0098 00232000
*    ADJUST POINTERS TO COMMAND BUFFER AND COMMAND SCAN OUTPUT     0098 00233000
*    AREA FOR NEW COMMAND AND RETURN TO POINT OF INTERRUPTION      0098 00234000
*                                                                    */ 00235000
*                                                                  0098 00236000
*   SCANPTR=ADDR(CSOA);             /* PTR TO CMD SCAN OUTPUT        */ 00237000
         LA    @07,CMDSCAN(,R4)                                    0098 00238000
         ST    @07,SCANPTR(,R2)                                    0098 00239000
*   WORK7PTR=ATTNBUFF;              /* PTR TO COMMAND BUFFER         */ 00240000
         MVC   WORK7PTR(4,R2),ATTNBUFF(R2)                         0099 00241000
*/*                                                                0100 00242000
*    POST THE CP ECB TO NOTIFY OPERATOR CP OR SERVICE ROUTINE      0100 00243000
*    THAT AN ATTENTION INTERRUPT OCCURED AND A LINE OF INPUT IS    0100 00244000
*    READY TO BE PROCESSED                                         0100 00245000
*                                                                    */ 00246000
*                                                                  0100 00247000
*   R5=CPECBPTR;                    /* ADDR OF CPECB TO BE POSTED    */ 00248000
         L     R5,CPECBPTR(,R2)                                    0100 00249000
*   GEN(POST (5));                                                 0101 00250000
         POST (5)                                                       00251000
*   IF HELPBIT='1'B                 /* CHECK IF HELP CP WAS ATTACHED */ 00252000
*     THEN                          /* YES, TEST IF HELP ECB WAS     */ 00253000
         TM    HELPBIT(R2),B'00100000'                             0102 00254000
         BNO   @RF00102                                            0102 00255000
*     IF ATCHECB(2)='0'B            /* POSTED ALREADY                */ 00256000
*       THEN                        /* NO, POST HELP ECB SO THAT     */ 00257000
         L     @07,ATTACHCB(,R2)                                   0103 00258000
         TM    ATCHECB(@07),B'01000000'                            0103 00259000
         BNZ   @RF00103                                            0103 00260000
*       DO;                         /* OPERATOR CP WILL DETACH HELP  */ 00261000
*         GEN(STATUS STOP);         /* STOP HELP CP SUBTASK          */ 00262000
         STATUS STOP                                                    00263000
*         R5=ATTACHCB;                                             0106 00264000
         L     R5,ATTACHCB(,R2)                                    0106 00265000
*         GEN(POST (5));            /* POST ATTACH HELP ECB          */ 00266000
         POST (5)                                                       00267000
*       END;                                                       0108 00268000
*EXIT:                              /* RETURN TO POINT OF          0109 00269000
*                                      INTERRUPTION                  */ 00270000
*   GEN;                                                           0109 00271000
@RF00103 DS    0H                                                  0109 00272000
@RF00102 DS    0H                                                  0109 00273000
EXIT     DS    0H                                                  0109 00274000
     L     R13,FOUR(NULL,R13)       RESTORE SAVE AREA PTR               00275000
     LM    R14,R12,TWELVE(R13)      RESTORE REGISTERS                   00276000
     BCR   FIFTEEN,R14              RETURN                              00277000
TWELVE  EQU 12                      DISPLACEMENT OF TWELVE              00278000
FIFTEEN EQU  15                     MASK OF FIFTEEN                     00279000
*                                                                  0110 00280000
*/********************************************************************/ 00281000
*/*      WHEN THE INPUT LINE IS A QUESTION MARK, THE SECOND LEVEL    */ 00282000
*/* MESSAGE CHAIN IS PUT OUT FOLLOWED BY A MODE MESSAGE USING        */ 00283000
*/* THE PUTLINE SERVICE ROUTINE.  A NEW COMMAND IS OBTAINED USING    */ 00284000
*/* THE GETLINE SERVICE ROUTINE AND PROCESSED AS THE ORIGINAL INPUT  */ 00285000
*/* LINE.                                                            */ 00286000
*/********************************************************************/ 00287000
*                                                                  0110 00288000
*QMARK:                             /* ISSUE 2ND LEVEL MESSAGE CHAIN */ 00289000
*   IOPLIOPB=ADDR(PTPB);            /* PUTLINE PARAMETER BLOCK ADDR  */ 00290000
QMARK    LA    @07,IOBLOCK(,R4)                                    0110 00291000
         ST    @07,IOPLIOPB(,R4)                                   0110 00292000
*   PTPB=PUTL;                      /* CLEAR PARAMETER BLOCK         */ 00293000
         MVC   PTPB(12,@07),PUTL                                   0111 00294000
*   RESPECIFY                                                      0112 00295000
*    (R1,                                                          0112 00296000
*     R15) RSTD;                    /* RESTRICT ACAROSS PUTLINE      */ 00297000
*   R1=ADDR(IOPL);                  /* PARAMETER LIST ADDRESS        */ 00298000
         LR    R1,R4                                               0113 00299000
*   R15=PUTENTRY;                   /* PUTLINE ENTRY POINT           */ 00300000
         L     R15,PUTENTRY(,R2)                                   0114 00301000
*   GEN(PUTLINE OUTPUT=(0),ENTRY=(15),MF=(E,(1)));                 0115 00302000
         PUTLINE OUTPUT=(0),ENTRY=(15),MF=(E,(1))                       00303000
*   R6=R15;                         /* MOVE RETURN CODE              */ 00304000
         LR    R6,R15                                              0116 00305000
*   RESPECIFY                                                      0117 00306000
*    (R1,                                                          0117 00307000
*     R15) UNRSTD;                  /* FREE FOR COMPILER             */ 00308000
*   R5=3;                           /* SERVICE ROUTINE NAME CODE SET */ 00309000
         LA    R5,3                                                0118 00310000
*   IF R6^=0                        /* CHECK FOR SUCCESSFUL        0119 00311000
*                                      COMPLETION                    */ 00312000
*     THEN                          /* UNSUCCESSFUL, ISSUE ERROR MSG */ 00313000
         LTR   R6,R6                                               0119 00314000
         BNZ   @RT00119                                            0119 00315000
*     GO TO ERRMSG;                 /* AND RETURN TO INTERRUPTED   0120 00316000
*                                      PROCESSING                    */ 00317000
*/*                                                                0121 00318000
*    ISSUE MODE MESSAGE                                            0121 00319000
*                                                                    */ 00320000
*                                                                  0121 00321000
*   MSGSEG(1:5)=MSG0021;            /* MOVE MSG HEADER FOR           */ 00322000
         MVC   MSGSEG(5,R4),MSG0021                                0121 00323000
*   MSGTEXT(2:9)=ECTPCMD;           /* MODE MSG USING COMMAND NAME 0122 00324000
*                                      FROM ECT                      */ 00325000
         L     @07,CPPLPTR(,R2)                                    0122 00326000
         L     @07,CPPLECT(,@07)                                   0122 00327000
         MVC   MSGTEXT+1(8,R4),ECTPCMD(@07)                        0122 00328000
*   PTPB(1:12)=PUTL;                /* CLEAR PARAMETER BLOCK         */ 00329000
         LA    @07,IOBLOCK(,R4)                                    0123 00330000
         MVC   PTPB(12,@07),PUTL                                   0123 00331000
*   NOSEGS=1;                       /* OPERATOR SEGMENT MESSAGE      */ 00332000
         MVC   NOSEGS(4,R4),@CF00082                               0124 00333000
*   MSGPTR=ADDR(MSGSEG);            /* ADDR OF MESSAGE               */ 00334000
         LA    @07,MSGSEG(,R4)                                     0125 00335000
         ST    @07,MSGPTR(,R4)                                     0125 00336000
*   R5=ADDR(OLDBLK);                /* ADDRESS OF OUTPUT             */ 00337000
         LA    R5,OLDBLK(,R4)                                      0126 00338000
*   RESPECIFY                                                      0127 00339000
*    (R1,                                                          0127 00340000
*     R15) RSTD;                    /* RESTRICT ACROSS PUTLINE       */ 00341000
*   R1=ADDR(IOPL);                  /* ADDRESS OF PARAMETER LIST     */ 00342000
         LR    R1,R4                                               0128 00343000
*   R15=PUTENTRY;                   /* ADDRESS OF PUTLINE            */ 00344000
         L     R15,PUTENTRY(,R2)                                   0129 00345000
*   GEN(PUTLINE OUTPUT=((5)),ENTRY=(15),MF=(E,(1)));               0130 00346000
         PUTLINE OUTPUT=((5)),ENTRY=(15),MF=(E,(1))                     00347000
*   R6=R15;                         /* MOVE RETURN CODE              */ 00348000
         LR    R6,R15                                              0131 00349000
*   RESPECIFY                                                      0132 00350000
*    (R1,                                                          0132 00351000
*     R15) UNRSTD;                  /* FREE FOR COMPILER USAGE       */ 00352000
*   R5=3;                           /* SERVICE ROUTINE NAME CODE SET */ 00353000
         LA    R5,3                                                0133 00354000
*   IF R6^=0                        /* CHECK FOR SUCCESSFUL        0134 00355000
*                                      COMPLETION                    */ 00356000
*     THEN                          /* UNSUCCESSFUL, ISSUE ERROR MSG */ 00357000
         LTR   R6,R6                                               0134 00358000
         BNZ   @RT00134                                            0134 00359000
*     GO TO ERRMSG;                 /* AND RETURN TO INTERRUPTED   0135 00360000
*                                      PROCESSING                    */ 00361000
*/*                                                                0136 00362000
*    GET A NEW COMMAND AND PROCESS IT AS ORIGINAL INPUT LINE       0136 00363000
*                                                                    */ 00364000
*                                                                  0136 00365000
*   CALL GETLRTN;                   /* GET A NEW LINE OF INPUT       */ 00366000
         BAL   @14,GETLRTN                                         0136 00367000
*   GO TO SCAN;                     /* GO AND CHECK THE NEW LINE   0137 00368000
*                                                                    */ 00369000
         B     SCAN                                                0137 00370000
*                                                                  0138 00371000
*/********************************************************************/ 00372000
*/*      ATTENTION CANNOT BE PROCESSED.  AN ATTEMPT IS MADE TO ISSUE */ 00373000
*/* AN ERROR MSG.  CONTROL RETURNS TO THE POINT OF INTERRUPTION.     */ 00374000
*/********************************************************************/ 00375000
*                                                                  0138 00376000
*ERRMSG:                                                           0138 00377000
*                                                                  0138 00378000
*/*                                                                0138 00379000
*    INITIALIZE FIRST OUTPUT LINE DESCRIPTOR BLOCK                 0138 00380000
*                                                                    */ 00381000
*                                                                  0138 00382000
*   NEXT1=ADDR(BLOCK2);             /* ADDR OF 2ND BLOCK             */ 00383000
ERRMSG   LA    @07,CMDSCAN(,R4)                                    0138 00384000
         LA    @15,MSGSEG(,R4)                                     0138 00385000
         ST    @15,NEXT1(,@07)                                     0138 00386000
*   NOSEGS1=1;                      /* 1 SEGMENT MSG                 */ 00387000
         MVC   NOSEGS1(4,@07),@CF00082                             0139 00388000
*   SEG11=ADDR(ERRORMSG);           /* ADDR OF MSG                   */ 00389000
         LA    @14,ERRORMSG                                        0140 00390000
         ST    @14,SEG11(,@07)                                     0140 00391000
*/*                                                                0141 00392000
*    INITIALIZE 2ND OUTPUT LINE DESCRIPTOR BLOCK                   0141 00393000
*                                                                    */ 00394000
*                                                                  0141 00395000
*   NEXT2=0;                        /* LAST BLOCK                    */ 00396000
         SLR   @07,@07                                             0141 00397000
         ST    @07,NEXT2(,@15)                                     0141 00398000
*   NOSEGS2=3;                      /* 3 SEGMENT MSG                 */ 00399000
         MVC   NOSEGS2(4,@15),@CF00232                             0142 00400000
*   SEG21=ADDR(IDSEG);              /* ADDR OF SEG FOR ID            */ 00401000
         LA    @07,IDSEG                                           0143 00402000
         ST    @07,SEG21(,@15)                                     0143 00403000
*   SEG22=ADDR(NAMESEG(R5));        /* ADDR OF SEG FOR SERVICE     0144 00404000
*                                      ROUTINE NAME                  */ 00405000
         LR    @07,R5                                              0144 00406000
         SLA   @07,4                                               0144 00407000
         LA    @07,NAMESEG-16(@07)                                 0144 00408000
         ST    @07,SEG22(,@15)                                     0144 00409000
*   SEG23=ADDR(CDSEG);              /* ADDR OF SEG FOR RETURN CODE -    00410000
*                                      TO BE BUILT                   */ 00411000
         LA    @07,OLDBLK(,R4)                                     0145 00412000
         ST    @07,SEG23(,@15)                                     0145 00413000
*/*                                                                0146 00414000
*    CONVERT HEX RETURN CODE TO PRINTABLE DECIMAL CHARACTERS AND   0146 00415000
*    BUILD SEGMENT FOR IT                                          0146 00416000
*                                                                    */ 00417000
*                                                                  0146 00418000
*   RESPECIFY                                                      0146 00419000
*    (R1) RSTD;                     /* RESTRICT R1 USAGE             */ 00420000
*   R1=ADDR(PTPB);                  /* USE AS WORKAREA               */ 00421000
         LA    R1,IOBLOCK(,R4)                                     0147 00422000
*   R5=ADDR(CDSEG);                 /* ADDR OF SEG FOR RETURN CODE   */ 00423000
         LR    R5,@07                                              0148 00424000
*   GEN;                                                           0149 00425000
     CVD   R6,NULL(R1)              CONVERT HEX TO PACKED DEC           00426000
     UNPK  FOUR(A3,R5),A6(A2,R1)    UNPACK TO ZONED DECIMAL             00427000
     OI    A6(R5),A0                CHANGE SIGN BITS TO PRINTABLE       00428000
*                                    CHARACTERS                         00429000
A0   EQU 240                        HEX 0                               00430000
A3   EQU 3                          3                                   00431000
A2   EQU 2                          2                                   00432000
A6   EQU 6                          SIX                                 00433000
*   RESPECIFY                                                      0150 00434000
*    (R1) UNRSTD;                   /* FREE FOR COMPILER             */ 00435000
*   CDLEN=7;                        /* LENGTH                        */ 00436000
         LA    @07,OLDBLK(,R4)                                     0151 00437000
         MVC   CDLEN(2,@07),@CH00264                               0151 00438000
*   CDOFF=25;                       /* SET OFFSET                    */ 00439000
         MVC   CDOFF(2,@07),@CH00224                               0152 00440000
*   R5=ADDR(BLOCK1);                /* CHAINED OUTPUT DESCRIPTORS  0153 00441000
*                                      ADDR                          */ 00442000
         LA    R5,CMDSCAN(,R4)                                     0153 00443000
*   PTPB(1:12)=PUTL;                /* MOVE PUTLINE PARM BLOCK TO  0154 00444000
*                                      DYNAMIC STORAGE               */ 00445000
         LA    @07,IOBLOCK(,R4)                                    0154 00446000
         MVC   PTPB(12,@07),PUTL                                   0154 00447000
*   IOPLIOPB=ADDR(PTPB);            /* ADDRESS OF PUTLINE PARM BLOCK */ 00448000
         ST    @07,IOPLIOPB(,R4)                                   0155 00449000
*   RESPECIFY                                                      0156 00450000
*    (R1,                                                          0156 00451000
*     R15) RSTD;                    /* RESTRICT ACROSS PUTLINE       */ 00452000
*   R1=ADDR(IOPL);                  /* ADDRESS OF PARAMETER LIST     */ 00453000
         LR    R1,R4                                               0157 00454000
*   R15=PUTENTRY;                   /* ADDRESS OF PUTLINE            */ 00455000
         L     R15,PUTENTRY(,R2)                                   0158 00456000
*   GEN(PUTLINE OUTPUT=((5),MULTLVL),ENTRY=(15),MF=(E,(1)));       0159 00457000
         PUTLINE OUTPUT=((5),MULTLVL),ENTRY=(15),MF=(E,(1))             00458000
*   RESPECIFY                                                      0160 00459000
*    (R1,                                                          0160 00460000
*     R15) UNRSTD;                  /* FREE FOR COMPILER             */ 00461000
*   GO TO EXIT;                     /* RETURN TO POINT OF          0161 00462000
*                                      INTERRUPTION                0161 00463000
*                                                                    */ 00464000
         B     EXIT                                                0161 00465000
*                                                                  0162 00466000
*/********************************************************************/ 00467000
*/*      THE GETLINE SUBROUTINE GETS AN INPUT LINE FROM THE          */ 00468000
*/* TERMINAL USER BY USING THE GETLINE SERVICE ROUTINE.  A NEW LINE  */ 00469000
*/* IS NECESSARY WHEN THE ORIGINAL LINE ENDS WITH A CONTINUATION     */ 00470000
*/* CHARACTER.  THIS ROUTINE THEN CONCATENATES THE NEW LINE TO THE   */ 00471000
*/* ORIGINAL LINE AND FREES THE GETLINE BUFFER.  IF THE ORIGINAL     */ 00472000
*/* LINE IS A QUESTION MARK A NEW LINE IS OBTAINED AFTER THE         */ 00473000
*/* QUESTION MARK IS PROCESSED.  THE NEW LINE IS MOVED TO THE        */ 00474000
*/* COMMAND BUFFER AND THE GETLINE BUFFER IS FREED.                  */ 00475000
*/********************************************************************/ 00476000
*                                                                  0162 00477000
*GETLRTN:                                                          0162 00478000
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0162 00479000
@EL00001 DS    0H                                                  0162 00480000
@EF00001 DS    0H                                                  0162 00481000
@ER00001 LM    @14,@12,12(@13)                                     0162 00482000
         BR    @14                                                 0162 00483000
@PB00001 DS    0H                                                  0162 00484000
GETLRTN  DS    0H                                                  0163 00485000
*   RESPECIFY                                                      0163 00486000
*    (R2,                                                          0163 00487000
*     R3,                                                          0163 00488000
*     R4,                                                          0163 00489000
*     R5,                                                          0163 00490000
*     R6,                                                          0163 00491000
*     R14) RESTRICTED;                                             0163 00492000
*   SAVE14=R14;                     /* SAVE RETURN POINT             */ 00493000
         ST    R14,SAVE14(,R4)                                     0164 00494000
*   RESPECIFY                                                      0165 00495000
*    (R14) UNRSTD;                  /* FREE FOR COMPILER             */ 00496000
*   IF ATTNBUFF^=0                  /* CHECK IF A FORMER ATTENTION 0166 00497000
*                                      BUFFER SHOULD BE FREED        */ 00498000
*     THEN                          /* YES,                          */ 00499000
         L     @07,ATTNBUFF(,R2)                                   0166 00500000
         LTR   @07,@07                                             0166 00501000
         BZ    @RF00166                                            0166 00502000
*     DO;                           /* FREE BUFFER                   */ 00503000
*       RESPECIFY                                                  0168 00504000
*        (R0,                                                      0168 00505000
*         R1) RSTD;                 /* RESTRICT ACROSS FREEMAIN      */ 00506000
*       R1=ATTNBUFF;                /* GET ADDR OF BUFFER TO BE FREED*/ 00507000
         LR    R1,@07                                              0169 00508000
*       R0=GETLEN;                  /* GET LENGTH TO BE FREED        */ 00509000
         LH    R0,GETLEN(,@07)                                     0170 00510000
*       R0=R0|SPNO;                 /* OR LENGTH WITH SUBPOOL NUMBER */ 00511000
         O     R0,SPNO                                             0171 00512000
*       GEN(FREEMAIN R,LV=(0),A=(1));                              0172 00513000
         FREEMAIN R,LV=(0),A=(1)                                        00514000
*       RESPECIFY                                                  0173 00515000
*        (R0,                                                      0173 00516000
*         R1) UNRSTD;               /* FREE REGS FOR COMPILER        */ 00517000
*       ATTNBUFF=0;                 /* CLEAR INDICATOR FOR GETMAINED */ 00518000
         SLR   @07,@07                                             0174 00519000
         ST    @07,ATTNBUFF(,R2)                                   0174 00520000
*     END;                          /* BUFFER                        */ 00521000
*   IOPLIOPB=ADDR(GTPB);            /* GET ADDRESS OF GETLINE      0176 00522000
*                                      PARAMETER BLOCK               */ 00523000
@RF00166 LA    @07,IOBLOCK(,R4)                                    0176 00524000
         ST    @07,IOPLIOPB(,R4)                                   0176 00525000
*   GTPB(1:8)=GETL;                 /* CLEAR GETLINE PARAMETER BLOCK */ 00526000
         MVC   GTPB(8,@07),GETL                                    0177 00527000
*   RESPECIFY                                                      0178 00528000
*    (R1,                                                          0178 00529000
*     R15) RSTD;                    /* RESTRICT FOR GETLINE          */ 00530000
*   R1=ADDR(IOPL);                  /* GET PARAMETER LIST ADDRESS    */ 00531000
         LR    R1,R4                                               0179 00532000
*   R15=GETENTRY;                   /* GETLINE ENTRY POINT           */ 00533000
         L     R15,GETENTRY(,R2)                                   0180 00534000
*   GEN(GETLINE INPUT=TERM,ENTRY=(15),MF=(E,(1)));                 0181 00535000
         GETLINE INPUT=TERM,ENTRY=(15),MF=(E,(1))                       00536000
*   R6=R15;                         /* MOVE RETURN CODE              */ 00537000
         LR    R6,R15                                              0182 00538000
*   RESPECIFY                                                      0183 00539000
*    (R1,                                                          0183 00540000
*     R15) UNRSTD;                  /* FREE ACROSS COMPILER          */ 00541000
*   R5=4;                           /* SERVICE ROUTINE NAME CODE SET */ 00542000
         LA    R5,4                                                0184 00543000
*   IF R6^=0                        /* CHECK FOR SUCCESSFUL        0185 00544000
*                                      COMPLETION                    */ 00545000
*     THEN                          /* UNSUCCESSFUL,ISSUE AN ERROR 0185 00546000
*                                      MSG                           */ 00547000
         LTR   R6,R6                                               0185 00548000
         BNZ   @RT00185                                            0185 00549000
*     GO TO ERRMSG;                 /* AND RETURN TO INTERRUPTED   0186 00550000
*                                      PROCESSING                    */ 00551000
*   RESPECIFY                                                      0187 00552000
*    (R0) RSTD;                     /* RESTRICT REGISTER USAGE       */ 00553000
*   IF CONCAT='1'B                  /* CHECK IF CONCATENATION      0188 00554000
*                                      NECESSRY                      */ 00555000
*     THEN                          /* CALCULATE COMBINED LENGTH OF  */ 00556000
         TM    CONCAT(R2),B'10000000'                              0188 00557000
         BNO   @RF00188                                            0188 00558000
*     R0=GTLEN+TAIEMSGL+8;          /* BUFFER NECESSARY TO BE GET- 0189 00559000
*                                      MAINED COMBINING BUFFER LENGTH   00560000
*                                      FROM ATTN HANDLER AND       0189 00561000
*                                      GETLINE'S BUFFER LENGTH + 8   */ 00562000
         LA    @07,IOBLOCK(,R4)                                    0189 00563000
         L     @07,GTPBIBUF(,@07)                                  0189 00564000
         L     @01,TAIEPTR(,R3)                                    0189 00565000
         LH    R0,GTLEN(,@07)                                      0189 00566000
         AH    R0,TAIEMSGL(,@01)                                   0189 00567000
         AH    R0,@CH00060                                         0189 00568000
*   ELSE                            /* NO CONTINUATION LINE,       0190 00569000
*                                      THEREFORE                     */ 00570000
*     R0=GTLEN+8;                   /* LENGTH OF GETMAINED BUFFER  0190 00571000
*                                      NEED ONLY BE LENGTH OF ATTN 0190 00572000
*                                      HANDLER BUFFER + 8            */ 00573000
         B     @RC00188                                            0190 00574000
@RF00188 LA    @07,IOBLOCK(,R4)                                    0190 00575000
         L     @07,GTPBIBUF(,@07)                                  0190 00576000
         LA    R0,8                                                0190 00577000
         AH    R0,GTLEN(,@07)                                      0190 00578000
*   R6=R0;                          /* SAVE THE LENGTH               */ 00579000
@RC00188 LR    R6,R0                                               0191 00580000
*   R0=R0|SPNO;                     /* OR R0 WITH SUBPOOL NUMBER     */ 00581000
         O     R0,SPNO                                             0192 00582000
*   RESPECIFY                                                      0193 00583000
*    (R1) RSTD;                     /* RESTRICT ACROSS GETMAIN       */ 00584000
*   GEN(GETMAIN R,LV=(0));          /* GETMAIN BUFFER                */ 00585000
         GETMAIN R,LV=(0)                                               00586000
*   ATTNBUFF=R1;                    /* SAVE ADDR OF GETMAINED BUFFER */ 00587000
         ST    R1,ATTNBUFF(,R2)                                    0195 00588000
*   RESPECIFY                                                      0196 00589000
*    (R0,                                                          0196 00590000
*     R1) UNRSTD;                   /* FREE FOR COMPILER USAGE       */ 00591000
*   CALL BLANK;                     /* BLANK OUT THE BUFFER          */ 00592000
         BAL   @14,BLANK                                           0197 00593000
*   IF CONCAT='1'B                  /* CHECK IF LINE SHOULD BE     0198 00594000
*                                      CONCATENATED TO ORIGINAL      */ 00595000
*     THEN                          /* YES, CONCATENATE TEXT FROM    */ 00596000
         TM    CONCAT(R2),B'10000000'                              0198 00597000
         BNO   @RF00198                                            0198 00598000
*     DO;                           /* GETLINE TO ORIGINAL LINE      */ 00599000
*       CONCAT='0'B;                /* CLEAR FLAG                    */ 00600000
         NI    CONCAT(R2),B'01111111'                              0200 00601000
*       GETTEXT(1:TAIEMSGL)=AXTEXT(1:TAIEMSGL);/* MOVE 1ST LINE OF 0201 00602000
*                                      MSG GOTTEN BY ATTN HANDLER TO    00603000
*                                      GETMAIN AREA                  */ 00604000
         L     @07,ATTNBUFF(,R2)                                   0201 00605000
         L     @01,TAIEPTR(,R3)                                    0201 00606000
         LH    @15,TAIEMSGL(,@01)                                  0201 00607000
         LR    @14,@15                                             0201 00608000
         BCTR  @14,0                                               0201 00609000
         L     @01,IBUFPTR(,R3)                                    0201 00610000
         EX    @14,@SM00283                                        0201 00611000
*       ENDPT=TAIEMSGL              /* ENDING SPOT = LENGTH OF     0202 00612000
*                                      ORIGINAL LINE                 */ 00613000
*           +GTLEN                  /* + LENGTH OF TEXT FROM GETLINE */ 00614000
*           -5;                     /* - 1 FOR OVERLAYED CONTINUATION   00615000
*                                      CHARACTER                     */ 00616000
         LA    @14,IOBLOCK(,R4)                                    0202 00617000
         L     @14,GTPBIBUF(,@14)                                  0202 00618000
         LH    @11,GTLEN(,@14)                                     0202 00619000
         ALR   @11,@15                                             0202 00620000
         SH    @11,@CH00206                                        0202 00621000
         STH   @11,ENDPT(,R4)                                      0202 00622000
*       GETTEXT(TAIEMSGL:ENDPT)=GTTEXT(1:GTLEN-4);/* MOVE 2ND LINE OF   00623000
*                                      MSG GOTTEN BY GETLINE TO    0203 00624000
*                                      GETMAIN AREA                  */ 00625000
         ALR   @07,@15                                             0203 00626000
         SLR   @11,@15                                             0203 00627000
         EX    @11,@SM00285                                        0203 00628000
*     END;                                                         0204 00629000
*   ELSE                            /* NO,                           */ 00630000
*     GETBUFFR(1:GTLEN)=GTBUF(1:GTLEN);/* MOVE LINE TO CMD BUFFER    */ 00631000
         B     @RC00198                                            0205 00632000
@RF00198 L     @07,ATTNBUFF(,R2)                                   0205 00633000
         LA    @15,IOBLOCK(,R4)                                    0205 00634000
         L     @15,GTPBIBUF(,@15)                                  0205 00635000
         LH    @14,GTLEN(,@15)                                     0205 00636000
         BCTR  @14,0                                               0205 00637000
         EX    @14,@SM00287                                        0205 00638000
*FREE:                              /* FREE BUFFER OBTAINED BY     0206 00639000
*                                      GETLINE                       */ 00640000
*   GETLEN=R6;                      /* UPDATE CORRECT GETMAIN'D    0206 00641000
*                                      LENGTH                        */ 00642000
@RC00198 DS    0H                                                  0206 00643000
FREE     L     @07,ATTNBUFF(,R2)                                   0206 00644000
         STH   R6,GETLEN(,@07)                                     0206 00645000
*   RESPECIFY                                                      0207 00646000
*    (R0,                                                          0207 00647000
*     R1) RSTD;                     /* RESTRICT USAGE ACROSS GETMAIN */ 00648000
*   GETOFF=0;                       /* INITIALIZE OFFSET TO ZERO     */ 00649000
         SLR   @15,@15                                             0208 00650000
         STH   @15,GETOFF(,@07)                                    0208 00651000
*   R0=GTLEN;                       /* GET LENGTH FROM HEADER        */ 00652000
         LA    @07,IOBLOCK(,R4)                                    0209 00653000
         L     @07,GTPBIBUF(,@07)                                  0209 00654000
         LH    R0,GTLEN(,@07)                                      0209 00655000
*   R0=R0|SPNO;                     /* SET SUBPOOL NUMBER TO 1       */ 00656000
         O     R0,SPNO                                             0210 00657000
*   R1=GTPBIBUF;                    /* GET ADDRESS OF BUFFER         */ 00658000
         LR    R1,@07                                              0211 00659000
*   RESPECIFY                                                      0212 00660000
*    (R0,                                                          0212 00661000
*     R1) UNRSTD;                   /* FREE FOR COMPILER             */ 00662000
*   RESPECIFY                                                      0213 00663000
*    (R14) RSTD;                    /* RESTRICT RETURN REG           */ 00664000
*   R14=SAVE14;                     /* RESTORE RETURN ADDRESS        */ 00665000
         L     R14,SAVE14(,R4)                                     0214 00666000
*   RETURN;                                                        0215 00667000
@EL00002 DS    0H                                                  0215 00668000
@EF00002 DS    0H                                                  0215 00669000
@ER00002 BR    @14                                                 0215 00670000
*   RESPECIFY                                                      0216 00671000
*    (R14) UNRSTD;                  /* FREE FOR COMPILER             */ 00672000
*   END GETLRTN;                                                   0217 00673000
*                                                                  0218 00674000
*/****************************************************************** */ 00675000
*/*    THE BLANK SUBROUTINE IS USED IN IKJEE150 TO CLEAR OUT A       */ 00676000
*/* COMMAND BUFFER AREA DYNAMICALLY ACQUIRED VIA A GETMAIN           */ 00677000
*/* MACRO INSTRUCTION. THE LENGTH IS VARIABLE AND WHEN IT HAS BEEN   */ 00678000
*/* DETERMINED AND OBTAINED, THIS SUBROUTINE IS CALLED TO BLANK THE  */ 00679000
*/* AREA OUT.                                                        */ 00680000
*/********************************************************************/ 00681000
*                                                                  0218 00682000
*BLANK:                                                            0218 00683000
*   PROC OPTIONS(NOSAVEAREA,DONTSAVE);                             0218 00684000
BLANK    DS    0H                                                  0219 00685000
*   RESPECIFY                                                      0219 00686000
*    (R2,                                                          0219 00687000
*     R3,                                                          0219 00688000
*     R4,                                                          0219 00689000
*     R5,                                                          0219 00690000
*     R6,                                                          0219 00691000
*     R7,                                                          0219 00692000
*     R8,                                                          0219 00693000
*     R9,                                                          0219 00694000
*     R10) RSTD;                                                   0219 00695000
*                                                                  0219 00696000
*/*                                                                0220 00697000
*    CLEAR VARIABLE LENGTH BUFFER                                  0220 00698000
*                                                                    */ 00699000
*                                                                  0220 00700000
*   R7=R6;                          /* SIZE OF BUFFR TO BE CLEARED   */ 00701000
         LR    R7,R6                                               0220 00702000
*   R8=ATTNBUFF;                    /* ADDR OF BUFFR INTO A REG      */ 00703000
         L     @11,ATTNBUFF(,R2)                                   0221 00704000
         LR    R8,@11                                              0221 00705000
*   R10=ATTNBUFF;                   /* PTR FOR USE IN BLANKING OUT   */ 00706000
         LR    R10,@11                                             0222 00707000
*   R9=255;                         /* SET REG FOR MAX LENGTH ON     */ 00708000
*                                                                  0223 00709000
         LA    R9,255                                              0223 00710000
*   /*****************************************************************/ 00711000
*   /*                                                               */ 00712000
*   /* EXECUTE INSTRUCTION                                           */ 00713000
*   /*                                                               */ 00714000
*   /*****************************************************************/ 00715000
*                                                                  0224 00716000
*   GEN(MVI 0(R8),C' ');            /* BLANK 1ST CHAR. IN BUFFER     */ 00717000
         MVI 0(R8),C' '                                                 00718000
*   R8=R8+1;                        /* ADJUST POINTER IN BUFFER      */ 00719000
         AH    R8,@CH00082                                         0225 00720000
*   R7=R7-1;                        /* ADJUST SIZE LEFT              */ 00721000
         BCTR  R7,0                                                0226 00722000
*   GO TO TESTLEN;                  /* CHECK FOR MORE THAN 256       */ 00723000
         B     TESTLEN                                             0227 00724000
*REBLANK:                                                          0228 00725000
*   GEN(EX R9,BLANKOUT);            /* BLANK OUT BUFFR FOR 256 BYTES */ 00726000
REBLANK  EX R9,BLANKOUT                                                 00727000
*   R7=R7-R9-1;                     /* DECREMENT SIZE LEFT TO BE     */ 00728000
*                                                                  0229 00729000
         LR    @11,R7                                              0229 00730000
         SLR   @11,R9                                              0229 00731000
         BCTR  @11,0                                               0229 00732000
         LR    R7,@11                                              0229 00733000
*   /*****************************************************************/ 00734000
*   /*                                                               */ 00735000
*   /* BLANKED                                                       */ 00736000
*   /*                                                               */ 00737000
*   /*****************************************************************/ 00738000
*                                                                  0230 00739000
*   R8=R8+R9+1;                     /* INCREMENT PTR IN BUFFR        */ 00740000
         LR    @11,R8                                              0230 00741000
         ALR   @11,R9                                              0230 00742000
         AH    @11,@CH00082                                        0230 00743000
         LR    R8,@11                                              0230 00744000
*TESTLEN:                                                          0231 00745000
*   IF R7>R9+1                      /* IF MORE THAN 256 BYTES LEFT   */ 00746000
*     THEN                          /* LOOP AND BLANK AGAIN          */ 00747000
TESTLEN  LA    @11,1                                               0231 00748000
         ALR   @11,R9                                              0231 00749000
         CR    R7,@11                                              0231 00750000
         BH    @RT00231                                            0231 00751000
*     GO TO REBLANK;                /* LOOP AGAIN                    */ 00752000
*   R9=R7-1;                        /* SET REG FOR LENGTH ON THE   0233 00753000
*                                      EXECUTE INSTRUCTION           */ 00754000
         LR    R9,R7                                               0233 00755000
         BCTR  R9,0                                                0233 00756000
*   GEN(EX R9,BLANKOUT);            /* GO TO CLEAR REST OF BUFFER    */ 00757000
         EX R9,BLANKOUT                                                 00758000
*   RESPECIFY                                                      0235 00759000
*    (R7,                                                          0235 00760000
*     R8,                                                          0235 00761000
*     R9,                                                          0235 00762000
*     R10) RSTD;                    /* FREE REGISTERS FOR COMPILER   */ 00763000
*   RETURN;                         /* RETURN TO CALLER              */ 00764000
@EL00003 DS    0H                                                  0236 00765000
@EF00003 DS    0H                                                  0236 00766000
@ER00003 BR    @14                                                 0236 00767000
*BLANKOUT:                                                         0237 00768000
*   GEN(MVC 0(1,R8),0(R10));        /* BLANK OUT FOR GIVEN LENGTH    */ 00769000
BLANKOUT MVC 0(1,R8),0(R10)                                             00770000
*   END BLANK;                                                     0238 00771000
         B     @EL00003                                            0238 00772000
*   END IKJEE150                                                   0239 00773000
*                                                                  0239 00774000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00775000
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */ 00776000
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */ 00777000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                       */ 00778000
*/*%INCLUDE SYSLIB  (IKJPTPB )                                       */ 00779000
*/*%INCLUDE SYSLIB  (IKJGTPB )                                       */ 00780000
*/*%INCLUDE SYSLIB  (IKJSTPB )                                       */ 00781000
*/*%INCLUDE SYSLIB  (IKJCSPL )                                       */ 00782000
*/*%INCLUDE SYSLIB  (IKJCSOA )                                       */ 00783000
*/*%INCLUDE SYSLIB  (IKJTAIE )                                       */ 00784000
*                                                                  0239 00785000
*       ;                                                          0239 00786000
@DATA    DS    0H                                                       00787000
@CH00206 DC    H'5'                                                     00788000
@CH00264 DC    H'7'                                                     00789000
@CH00060 DC    H'8'                                                     00790000
@CH00224 DC    H'25'                                                    00791000
@SM00283 MVC   GETTEXT(0,@07),AXTEXT-4(@01)                             00792000
@SM00285 MVC   GETTEXT-1(0,@07),GTTEXT(@14)                             00793000
@SM00287 MVC   GETBUFFR(0,@07),GTBUF(@15)                               00794000
@DATD    DSECT                                                          00795000
         DS    0F                                                       00796000
@PC00001 DS    1F                                                       00797000
@ZTEMPS  DS    C                                                        00798000
@ZTEMPND EQU   *                                                        00799000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00800000
IKJEE150 CSECT                                                          00801000
         DS    0F                                                       00802000
@CF00082 DC    F'1'                                                     00803000
@CH00082 EQU   @CF00082+2                                               00804000
@CF00232 DC    F'3'                                                     00805000
@CF00282 DC    F'-4'                                                    00806000
@CF00246 DC    XL4'01000000'                                            00807000
@DATD    DSECT                                                          00808000
         DS    0D                                                       00809000
IKJEE150 CSECT                                                          00810000
         DS    0F                                                       00811000
@SIZDATD DC    AL1(0)                                                   00812000
         DC    AL3(@ENDDATD-@DATD)                                      00813000
         DS    0D                                                       00814000
ERRORMSG DS    CL42                                                     00815000
         ORG   ERRORMSG                                                 00816000
ERRLEN   DC    H'42'                                                    00817000
ERROFF   DC    H'0'                                                     00818000
ERRTEXT  DC    CL38'IKJ55007I UNABLE TO PROCESS ATTENTION+'             00819000
         ORG   ERRORMSG+42                                              00820000
MSG0021  DS    CL5                                                      00821000
         ORG   MSG0021                                                  00822000
MSG21LEN DC    H'13'                                                    00823000
MSG21OFF DC    H'0'                                                     00824000
MSG21TXT DC    CL1' '                                                   00825000
         ORG   MSG0021+5                                                00826000
         DS    CL1                                                      00827000
IDSEG    DS    CL29                                                     00828000
         ORG   IDSEG                                                    00829000
IDLEN    DC    H'29'                                                    00830000
IDOFF    DC    H'0'                                                     00831000
IDTEXT   DC    CL25'IKJ55007I  ERROR CODE IS '                          00832000
         ORG   IDSEG+29                                                 00833000
         DS    CL3                                                      00834000
FLAGWORD DC    X'10000000'                                              00835000
SPNO     DC    X'01000000'                                              00836000
NAMESEG  DS    CL16                                                     00837000
         ORG   NAMESEG+0                                                00838000
NLEN     DC    H'8'                                                     00839000
NOFF     DC    H'10'                                                    00840000
NTEXT    DC    CL12'TGET'                                               00841000
         ORG   NAMESEG+16                                               00842000
         ORG   NAMESEG+16                                               00843000
         DC    H'9'                                                     00844000
         DC    H'10'                                                    00845000
         DC    CL12'STACK'                                              00846000
         ORG   NAMESEG+32                                               00847000
         ORG   NAMESEG+32                                               00848000
         DC    H'11'                                                    00849000
         DC    H'10'                                                    00850000
         DC    CL12'PUTLINE'                                            00851000
         ORG   NAMESEG+48                                               00852000
         ORG   NAMESEG+48                                               00853000
         DC    H'11'                                                    00854000
         DC    H'10'                                                    00855000
         DC    CL12'GETLINE'                                            00856000
         ORG   NAMESEG+64                                               00857000
         ORG   NAMESEG+64                                               00858000
         DC    H'16'                                                    00859000
         DC    H'10'                                                    00860000
         DC    CL12'COMMAND SCAN'                                       00861000
         ORG   NAMESEG+80                                               00862000
IKJEE150 CSECT                                                          00863000
         DS   0H                                                        00864000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   00865000
IKJEE150 CSECT                                                          00866000
PUTL PUTLINE ,MF=L                                                      00867000
     SPACE                                                              00868000
GETL GETLINE ,MF=L                                                      00869000
     SPACE                                                              00870000
STKL STACK DELETE=ALL,MF=L                                              00871000
@DATD    DSECT                                                          00872000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00873000
@ENDDATD EQU   *                                                        00874000
IKJEE150 CSECT                                                          00875000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00876000
@01      EQU   01                                                       00877000
@02      EQU   02                                                       00878000
@03      EQU   03                                                       00879000
@04      EQU   04                                                       00880000
@05      EQU   05                                                       00881000
@06      EQU   06                                                       00882000
@07      EQU   07                                                       00883000
@08      EQU   08                                                       00884000
@09      EQU   09                                                       00885000
@10      EQU   10                                                       00886000
@11      EQU   11                                                       00887000
@12      EQU   12                                                       00888000
@13      EQU   13                                                       00889000
@14      EQU   14                                                       00890000
@15      EQU   15                                                       00891000
R0       EQU   @00                                                      00892000
R1       EQU   @01                                                      00893000
R2       EQU   @02                                                      00894000
R3       EQU   @03                                                      00895000
R4       EQU   @04                                                      00896000
R5       EQU   @05                                                      00897000
R6       EQU   @06                                                      00898000
R7       EQU   @07                                                      00899000
R8       EQU   @08                                                      00900000
R9       EQU   @09                                                      00901000
R10      EQU   @10                                                      00902000
R14      EQU   @14                                                      00903000
R15      EQU   @15                                                      00904000
R12      EQU   @12                                                      00905000
R13      EQU   @13                                                      00906000
WORKAREA EQU   0                                                        00907000
SRPARM   EQU   WORKAREA                                                 00908000
OLDBLK   EQU   WORKAREA+16                                              00909000
NOSEGS   EQU   OLDBLK                                                   00910000
MSGPTR   EQU   OLDBLK+4                                                 00911000
IOBLOCK  EQU   WORKAREA+24                                              00912000
CMDSCAN  EQU   WORKAREA+40                                              00913000
SAVE14   EQU   WORKAREA+48                                              00914000
MSGSEG   EQU   WORKAREA+52                                              00915000
MSGTEXT  EQU   MSGSEG+4                                                 00916000
ENDPT    EQU   WORKAREA+76                                              00917000
PARMAREA EQU   0                                                        00918000
CPPLPTR  EQU   PARMAREA                                                 00919000
CPECBPTR EQU   PARMAREA+4                                               00920000
PUTENTRY EQU   PARMAREA+8                                               00921000
GETENTRY EQU   PARMAREA+12                                              00922000
WORKPTR  EQU   PARMAREA+20                                              00923000
WORK7PTR EQU   PARMAREA+24                                              00924000
SCANPTR  EQU   PARMAREA+28                                              00925000
EXITFLAG EQU   PARMAREA+32                                              00926000
CONCAT   EQU   EXITFLAG                                                 00927000
HELPBIT  EQU   EXITFLAG                                                 00928000
STKENTRY EQU   PARMAREA+36                                              00929000
ATTACHCB EQU   PARMAREA+48                                              00930000
ATTNBUFF EQU   PARMAREA+64                                              00931000
ATCHECB  EQU   0                                                        00932000
CPPL     EQU   0                                                        00933000
CPPLUPT  EQU   CPPL+4                                                   00934000
CPPLECT  EQU   CPPL+12                                                  00935000
ECT      EQU   0                                                        00936000
ECTMSGF  EQU   ECT+8                                                    00937000
ECTPCMD  EQU   ECT+12                                                   00938000
ECTSWS   EQU   ECT+28                                                   00939000
IOPL     EQU   0                                                        00940000
IOPLUPT  EQU   IOPL                                                     00941000
IOPLECT  EQU   IOPL+4                                                   00942000
IOPLECB  EQU   IOPL+8                                                   00943000
IOPLIOPB EQU   IOPL+12                                                  00944000
PTPB     EQU   0                                                        00945000
GTPB     EQU   0                                                        00946000
GTPBIBUF EQU   GTPB+4                                                   00947000
STPB     EQU   0                                                        00948000
CSPL     EQU   0                                                        00949000
CSPLFLG  EQU   CSPL+12                                                  00950000
CSPLOA   EQU   CSPL+16                                                  00951000
CSPLCBUF EQU   CSPL+20                                                  00952000
CSOA     EQU   0                                                        00953000
CSOAFLG  EQU   CSOA+6                                                   00954000
CSOAQM   EQU   CSOAFLG                                                  00955000
CSOANOC  EQU   CSOAFLG                                                  00956000
AXPL     EQU   0                                                        00957000
TAIEPTR  EQU   AXPL                                                     00958000
IBUFPTR  EQU   AXPL+4                                                   00959000
PARMPTR  EQU   AXPL+8                                                   00960000
TAIE     EQU   0                                                        00961000
TAIEMSGL EQU   TAIE                                                     00962000
TAIETGET EQU   TAIE+2                                                   00963000
AXBUF    EQU   0                                                        00964000
AXLEN    EQU   AXBUF                                                    00965000
AXOFF    EQU   AXBUF+2                                                  00966000
AXTEXT   EQU   AXBUF+4                                                  00967000
GTBUF    EQU   0                                                        00968000
GTLEN    EQU   GTBUF                                                    00969000
GTTEXT   EQU   GTBUF+4                                                  00970000
GETBUFFR EQU   0                                                        00971000
GETLEN   EQU   GETBUFFR                                                 00972000
GETOFF   EQU   GETBUFFR+2                                               00973000
GETTEXT  EQU   GETBUFFR+4                                               00974000
CDSEG    EQU   0                                                        00975000
CDLEN    EQU   CDSEG                                                    00976000
CDOFF    EQU   CDSEG+2                                                  00977000
BLOCK1   EQU   0                                                        00978000
NEXT1    EQU   BLOCK1                                                   00979000
NOSEGS1  EQU   BLOCK1+4                                                 00980000
SEG11    EQU   BLOCK1+8                                                 00981000
BLOCK2   EQU   0                                                        00982000
NEXT2    EQU   BLOCK2                                                   00983000
NOSEGS2  EQU   BLOCK2+4                                                 00984000
SEG21    EQU   BLOCK2+8                                                 00985000
SEG22    EQU   BLOCK2+12                                                00986000
SEG23    EQU   BLOCK2+16                                                00987000
DUMMYPTR EQU   0                                                        00988000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00989000
CDTEXT   EQU   CDSEG+4                                                  00990000
GTOFF    EQU   GTBUF+2                                                  00991000
TAIERSAV EQU   TAIE+8                                                   00992000
TAIEIAD  EQU   TAIE+4                                                   00993000
@NM00012 EQU   TAIE+3                                                   00994000
@NM00011 EQU   CSOA+7                                                   00995000
@NM00010 EQU   CSOAFLG                                                  00996000
@NM00009 EQU   CSOAFLG                                                  00997000
@NM00008 EQU   CSOAFLG                                                  00998000
CSOABAD  EQU   CSOAFLG                                                  00999000
CSOAVNP  EQU   CSOAFLG                                                  01000000
CSOAVWP  EQU   CSOAFLG                                                  01001000
CSOALNM  EQU   CSOA+4                                                   01002000
CSOACNM  EQU   CSOA                                                     01003000
CSPLECB  EQU   CSPL+8                                                   01004000
CSPLECT  EQU   CSPL+4                                                   01005000
CSPLUPT  EQU   CSPL                                                     01006000
STPBOTDD EQU   STPB+12                                                  01007000
STPBINDD EQU   STPB+8                                                   01008000
STPBALSD EQU   STPB+4                                                   01009000
@NM00007 EQU   STPB                                                     01010000
@NM00006 EQU   GTPB                                                     01011000
PTPBFLN  EQU   PTPB+8                                                   01012000
PTPBOPUT EQU   PTPB+4                                                   01013000
@NM00005 EQU   PTPB                                                     01014000
ECTBKPB  EQU   ECT+36                                                   01015000
ECTUSER  EQU   ECT+32                                                   01016000
ECTDDNUM EQU   ECT+29                                                   01017000
@NM00004 EQU   ECTSWS                                                   01018000
ECTBKGRD EQU   ECTSWS                                                   01019000
ECTNNOT  EQU   ECTSWS                                                   01020000
ECTNMAL  EQU   ECTSWS                                                   01021000
ECTLOGF  EQU   ECTSWS                                                   01022000
ECTATRM  EQU   ECTSWS                                                   01023000
@NM00003 EQU   ECTSWS                                                   01024000
ECTNOPD  EQU   ECTSWS                                                   01025000
ECTSCMD  EQU   ECT+20                                                   01026000
ECTSMSG  EQU   ECT+9                                                    01027000
ECTIOWA  EQU   ECT+4                                                    01028000
ECTRTCD  EQU   ECT+1                                                    01029000
ECTRCDF  EQU   ECT                                                      01030000
CPPLPSCB EQU   CPPL+8                                                   01031000
CPPLCBUF EQU   CPPL                                                     01032000
WORKADDR EQU   PARMAREA+60                                              01033000
BASE100  EQU   PARMAREA+56                                              01034000
REGISTR8 EQU   PARMAREA+52                                              01035000
STAESAVE EQU   PARMAREA+44                                              01036000
ATTNSAVE EQU   PARMAREA+40                                              01037000
@NM00002 EQU   EXITFLAG                                                 01038000
@NM00001 EQU   PARMAREA+16                                              01039000
GTEXTLEN EQU   WORKAREA+78                                              01040000
BEG      EQU   WORKAREA+74                                              01041000
MSGOFF   EQU   MSGSEG+2                                                 01042000
MSGLEN   EQU   MSGSEG                                                   01043000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01044000
@RT00049 EQU   ERRMSG                                                   01045000
@RT00051 EQU   EXIT                                                     01046000
@RT00080 EQU   ERRMSG                                                   01047000
@RT00082 EQU   EXIT                                                     01048000
@RT00084 EQU   QMARK                                                    01049000
@RT00096 EQU   ERRMSG                                                   01050000
@RT00119 EQU   ERRMSG                                                   01051000
@RT00134 EQU   ERRMSG                                                   01052000
@RT00185 EQU   ERRMSG                                                   01053000
@RT00231 EQU   REBLANK                                                  01054000
@PB00003 EQU   @EL00001                                                 01055000
@PB00002 EQU   @PB00003                                                 01056000
@ENDDATA EQU   *                                                        01057000
         END   IKJEE150                                                 01058000
