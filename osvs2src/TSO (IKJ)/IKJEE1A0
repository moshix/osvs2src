         TITLE 'IKJEE1A0 - STAE/STAI EXIT RTN FOR OPERATOR CP          *00001000
                        '                                               00002000
         TITLE 'IKJEE1A0 - OPERATOR CP STAE EXIT ROUTINE'               00003000
         EJECT                                                          00004000
IKJEE1A0 CSECT ,                                                   0003 00005000
@MAINENT DS    0H                                                  0003 00006000
         USING *,@15                                               0003 00007000
         B     @PROLOG                                             0003 00008000
         DC    AL1(16)                                             0003 00009000
         DC    C'IKJEE1A0  74.024'                                 0003 00010000
         DROP  @15                                                      00011000
@PROLOG  DS    0H                                                  0004 00012000
REGLIST  DS    0H                                                  0006 00013000
*   R15=0;                          /* STAE ENTRY HAS ZERO R15       */ 00014000
         SLR   R15,R15                                             0041 00015000
*IKJEE1A2:                          /* STAI EXIT ENTRY POINT         */ 00016000
*   GEN;                                                           0042 00017000
IKJEE1A2 DS    0H                                                  0042 00018000
     BALR  R10,E0                     SET UP REGISTER TEN AS BASE REG   00019000
     USING *,R10                      BASE REGISTER                     00020000
E0   EQU   0                          DISPLACEMENT                      00021000
*   R5=R1;                          /* SAVE INPUT REGISTER           */ 00022000
         LR    R5,R1                                               0043 00023000
*   IF R0=12                        /* 12 INDICATES NO W/A GOTTEN    */ 00024000
*     THEN                          /* NO W/A GOTTEN                 */ 00025000
         CH    R0,@CH00092                                         0044 00026000
         BNE   @RF00044                                            0044 00027000
*     DO;                           /* NO RETRY WILL BE ATTEMPTED    */ 00028000
*       RESPECIFY                   /* FREE FOR COMPILER             */ 00029000
*        (R0) UNRESTRICTED;         /* REGISTER ZERO                 */ 00030000
*       R3=R2;                      /* PTR TO EXIT PARM LST IN RI    */ 00031000
         LR    R3,R2                                               0047 00032000
*       NOSEG1=R1;                  /* COMPLETIN CODE IN R1          */ 00033000
         L     @12,STAEAREA(,R3)                                   0048 00034000
         ST    R1,NOSEG1(,@12)                                     0048 00035000
*       RESPECIFY                   /* FREE FOR COMPILER             */ 00036000
*        (R1) UNRESTRICTED;         /* REGISTER ONE                  */ 00037000
*       SRPARM(2)=NOSEG1;           /* MOVE TO FIELD IN WORKAREA     */ 00038000
         L     @11,STAEAREA(,R3)                                   0050 00039000
         L     @11,NOSEG1(,@11)                                    0050 00040000
         ST    @11,SRPARM+4(,@12)                                  0050 00041000
*       NOWORK='1'B;                /* SET INDICATION FOR NOWORK AREA   00042000
*                                      SO THAT RETRY WILL NOT BE   0051 00043000
*                                      TRIED                         */ 00044000
         OI    NOWORK(R3),B'00010000'                              0051 00045000
*       GOTO EXITB;                 /* SKIP PUTTING OUT THE MSG      */ 00046000
         B     EXITB                                               0052 00047000
*     END;                          /* END OF PROCESSING FOR NO W/A  */ 00048000
*   ELSE                            /* W/A AREA GOTTEN               */ 00049000
*     DO;                           /* SO A RETRY WILL BE ATTEMPTED  */ 00050000
@RF00044 DS    0H                                                  0055 00051000
*       R3=EXTPARM;                 /* EXIT RTN PARM ADDR IN STAE WA */ 00052000
         L     R3,EXTPARM(,R5)                                     0055 00053000
*       NOWORK='0'B;                /* SET FLAG TO INDICATE W/A WAS     00054000
*                                      GOTTEN SO THAT RETRY WILL BE     00055000
*                                      ATTEMPTED                     */ 00056000
         NI    NOWORK(R3),B'11101111'                              0056 00057000
*       IF R15^=0                   /* STAE OR STAI ENTRY?           */ 00058000
*         THEN                      /* STAI ENTRY TO IKJEE1A0        */ 00059000
         LTR   R15,R15                                             0057 00060000
         BZ    @RF00057                                            0057 00061000
*         STAIENTR='1'B;            /* INDICATE ENTRY                */ 00062000
         OI    STAIENTR(R3),B'00001000'                            0058 00063000
*       ELSE                        /* STAE ENTRY TO IKJEE1A0        */ 00064000
*         STAIENTR='0'B;            /* INDICATE SOURCE OF ENTRY      */ 00065000
         B     @RC00057                                            0059 00066000
@RF00057 NI    STAIENTR(R3),B'11110111'                            0059 00067000
*       SRPARM(2)=COMPCODE;         /* ABEND COMPL CODE IN WORKAREA  */ 00068000
@RC00057 L     @12,STAEAREA(,R3)                                   0060 00069000
         MVC   SRPARM+4(4,@12),COMPCODE(R5)                        0060 00070000
*       IF RECURSON>3               /* BEEN THROUGH HERE BEFORE?     */ 00071000
*         THEN                      /* YES, SO DON'T CONTINUE        */ 00072000
         LH    @12,RECURSON(,R3)                                   0061 00073000
         CH    @12,@CH00074                                        0061 00074000
         BNH   @RF00061                                            0061 00075000
*         DO;                       /* SET THE RETURN CODE BY        */ 00076000
*           NOWORK='1'B;            /* SETTING NOWORK BIT            */ 00077000
         OI    NOWORK(R3),B'00010000'                              0063 00078000
*           GOTO EXITB;             /* AND THEN GO TO EXIT (RETURN)  */ 00079000
         B     EXITB                                               0064 00080000
*         END;                      /* END OF RECURSION CHECK        */ 00081000
*       ELSE                        /* ELSE,                         */ 00082000
*         RECURSON=RECURSON+1;      /* INCREMENT THE RECURSION COUNT */ 00083000
@RF00061 LA    @12,1                                               0066 00084000
         AH    @12,RECURSON(,R3)                                   0066 00085000
         STH   @12,RECURSON(,R3)                                   0066 00086000
*     END;                          /* END PROCESSING FOR W/A GOTTEN */ 00087000
*   RESPECIFY                       /* RESTRICT FOR PROGRAM'S USE    */ 00088000
*    (R12) RESTRICTED;              /* REGISTER TWELVE               */ 00089000
*                                                                  0068 00090000
*   /*****************************************************************/ 00091000
*   /*                                                               */ 00092000
*   /* A SAVE AREA GOTTEN BY OPERATOR CP AND PASSED TO EXIT RTN IN   */ 00093000
*   /* PARAMETER LIST IS USED BY STAE EXIT RTN AS REGISTER SAVEAREA  */ 00094000
*   /* BECAUSE STAE CANNOT GUARANTEE GETTING A SAVE AREA FOR THE EXIT*/ 00095000
*   /* ROUTINE. REGISTERS 13 AND 14 ARE SAVED IN A DOUBLE WORD BEFORE*/ 00096000
*   /* THE REGISTER SAVE AREA                                        */ 00097000
*   /*                                                               */ 00098000
*   /*****************************************************************/ 00099000
*                                                                  0069 00100000
*   R2=STAESAVE;                    /* GET ADDR OF SAVE AREA FOR 1A0 */ 00101000
         L     R2,STAESAVE(,R3)                                    0069 00102000
*   RESPECIFY                       /* RESTRICT REGISTER USAGE       */ 00103000
*    (R13) RESTRICTED;              /* REGISTER THIRTEEN             */ 00104000
*   GEN(STM R13,R14,E0(R2));        /* SAVE REGISTERS 13 AND 14      */ 00105000
         STM R13,R14,E0(R2)                                             00106000
*   R13=R2+8;                       /* SET R13 WITH SAVE AREA ADDRESS*/ 00107000
         LA    R13,8                                               0072 00108000
         ALR   R13,R2                                              0072 00109000
*   RESPECIFY                       /* FREE REGISTER FOR COMPILER    */ 00110000
*    (R13) UNRESTRICTED;            /* REGISTER THIRTEEN             */ 00111000
*   RESPECIFY                       /* RESTRICT REGISTER USAGE       */ 00112000
*    (R8) RESTRICTED;               /* REGISTER EIGHT                */ 00113000
*   IF ECTATRM='1'B                 /* TEST IF TMP ISSUED DETACH WITH*/ 00114000
*     THEN                          /* STAE - STOP ALL ACTIVE MN     */ 00115000
         L     @11,CPPLPTR(,R3)                                    0075 00116000
         LA    @11,CPPLECT(,@11)                                   0075 00117000
         L     @11,ECTPTR(,@11)                                    0075 00118000
         TM    ECTATRM(@11),B'00100000'                            0075 00119000
         BNO   @RF00075                                            0075 00120000
*     DO;                           /* FUNCTION AND RETURN           */ 00121000
*       R12=WORKADDR;               /* BY IKJEE100 - ADDRESS         */ 00122000
         L     R12,WORKADDR(,R3)                                   0077 00123000
*       RESPECIFY                   /* RESTRICT REGISTER USAGE       */ 00124000
*        (R11) RESTRICTED;          /* REGISTER ELEVEN               */ 00125000
*       R11=BASE100;                /* ADDRESSABILITY FOR ENDRTN SET */ 00126000
         L     R11,BASE100(,R3)                                    0079 00127000
*       R8=REGISTR8;                /* SET UP REGISTERS NEEDED       */ 00128000
         L     R8,REGISTR8(,R3)                                    0080 00129000
*       CALL ENDRN;                 /* GO TO RTN TO STOP ALL MONITORS*/ 00130000
         L     @15,@CV00150                                        0081 00131000
         BALR  @14,@15                                             0081 00132000
*       RESPECIFY                   /* FREE FOR COMPILER             */ 00133000
*        (R11) UNRESTRICTED;        /* REGISTER ELEVEN               */ 00134000
*       RESPECIFY                   /* SAVE RETURN CODE              */ 00135000
*        (R15) RESTRICTED;          /* REGISTER FIFTEEN              */ 00136000
*       R15=0;                      /* SPECIFY NO RETRY              */ 00137000
         SLR   R15,R15                                             0084 00138000
*       GO TO EXITA;                /* GO TO COMMON STAE ROUTINE EXIT*/ 00139000
         B     EXITA                                               0085 00140000
*       RESPECIFY                   /* FREE FOR COMPILER             */ 00141000
*        (R15) UNRESTRICTED;        /* REGISTER FIFTEEN              */ 00142000
*     END;                          /* END OF TMP DETACH PROCESSING  */ 00143000
*   RESPECIFY                       /* FREE REGISTER FOR COMPILER    */ 00144000
*    (R8) UNRESTRICTED;             /* REGISTER EIGHT                */ 00145000
@RF00075 DS    0H                                                  0089 00146000
*   RESPECIFY                       /* RESTRICT USAGE FOR UNPACK     */ 00147000
*    (R1) RESTRICTED;               /* REGISTER ONE                  */ 00148000
*   R1=ADDR(PUTPARM);               /* CLEAR HIGH-ORDER WRD FOR UNPK */ 00149000
         L     @15,STAEAREA(,R3)                                   0090 00150000
         LA    R1,PUTPARM(,@15)                                    0090 00151000
*   R2=ADDR(SRPARM);                /* GET ADDR OF SRPARM            */ 00152000
         LR    R2,@15                                              0091 00153000
*   GEN;                                                           0092 00154000
E1   EQU   1                          OFFSET INTO PUTPARM FOR UNPACKED  00155000
*                                     COMPLETION CODE                   00156000
E5   EQU   5                          OFFSET FOR COMPLETION CODE        00157000
E3   EQU   3                          LENGTH OF TRANSLATED CODE         00158000
E4   EQU   4                          LENGTH OF UNPACKED CODE           00159000
E6   EQU   6                          OFFSET INTO SRPARM OF CODE        00160000
F0   EQU 240                          HEX F0                            00161000
     UNPK  E0(E5,R1),E5(E3,R2)        UNPACK COMPLETION CODE            00162000
     TR    E0(E3,R1),TRTABLE-F0       TRANSLATE COMPLETION CODE         00163000
*   RESPECIFY                       /* FREE REGISTER FOR COMPILER    */ 00164000
*    (R1) UNRESTRICTED;             /* REGISTER ONE                  */ 00165000
*   TEXT2=PUTPARM(1:3);             /* MOVE COMPLETION COE TO MSG    */ 00166000
         L     @15,STAEAREA(,R3)                                   0094 00167000
         MVC   TEXT2(3,@15),PUTPARM(@15)                           0094 00168000
*   IF ECTSCMD(1)=BLANK|ECTSCMD(1)=ZEROS/* IF OPER CMD ABENDED       */ 00169000
*     THEN                          /* THEN PREPARE MESSAGE          */ 00170000
         L     @15,CPPLPTR(,R3)                                    0095 00171000
         LA    @15,CPPLECT(,@15)                                   0095 00172000
         L     @15,ECTPTR(,@15)                                    0095 00173000
         CLC   ECTSCMD(1,@15),BLANK                                0095 00174000
         BE    @RT00095                                            0095 00175000
         SLR   @11,@11                                             0095 00176000
         IC    @11,ECTSCMD(,@15)                                   0095 00177000
         C     @11,ZEROS                                           0095 00178000
         BNE   @RF00095                                            0095 00179000
@RT00095 DS    0H                                                  0096 00180000
*     TEXT1=ECTPCMD;                /* COMMAND NAME FROM ECT         */ 00181000
         L     @15,STAEAREA(,R3)                                   0096 00182000
         MVI   TEXT1+8(@15),C' '                                   0096 00183000
         L     @11,CPPLPTR(,R3)                                    0096 00184000
         LA    @11,CPPLECT(,@11)                                   0096 00185000
         L     @11,ECTPTR(,@11)                                    0096 00186000
         MVC   TEXT1(8,@15),ECTPCMD(@11)                           0096 00187000
*   ELSE                            /* ELSE                          */ 00188000
*     TEXT1=ECTSCMD;                /* GET SUBCOMMAND NAME           */ 00189000
         B     @RC00095                                            0097 00190000
@RF00095 L     @15,STAEAREA(,R3)                                   0097 00191000
         MVI   TEXT1+8(@15),C' '                                   0097 00192000
         L     @11,CPPLPTR(,R3)                                    0097 00193000
         LA    @11,CPPLECT(,@11)                                   0097 00194000
         L     @11,ECTPTR(,@11)                                    0097 00195000
         MVC   TEXT1(8,@15),ECTSCMD(@11)                           0097 00196000
*   IOPLUPT=CPPLUPT;                /* MOVE ADDR OF UPT TO IOPL IN WA*/ 00197000
@RC00095 L     @15,STAEAREA(,R3)                                   0098 00198000
         L     @11,CPPLPTR(,R3)                                    0098 00199000
         MVC   IOPLUPT(4,@15),CPPLUPT(@11)                         0098 00200000
*   IOPLECT=CPPLECT;                /* MOVE ADDR OF ECT TO IOPL      */ 00201000
         MVC   IOPLECT(4,@15),CPPLECT(@11)                         0099 00202000
*   IOPLECB=CPECBPTR;               /* INITIALIZE ADR OF ECB IN IOPL */ 00203000
         L     @11,CPECBPTR(,R3)                                   0100 00204000
         ST    @11,IOPLECB(,@15)                                   0100 00205000
*   CPECB=ZEROS;                    /* CLEAR OUT ECB                 */ 00206000
         MVC   CPECB(4,@11),ZEROS                                  0101 00207000
*   IOPLIOPB=ADDR(PUTPARM);         /* INITIALIZE IOPL TO POINT TO 0102 00208000
*                                      PUTLINE PB                    */ 00209000
         LA    @11,PUTPARM(,@15)                                   0102 00210000
         ST    @11,IOPLIOPB(,@15)                                  0102 00211000
*   PUTPARM=PUTBLOCK;               /* MOVE PUTLINE LIST FORM TO WA  */ 00212000
*                                                                  0103 00213000
         MVC   PUTPARM(12,@15),PUTBLOCK                            0103 00214000
*   /*****************************************************************/ 00215000
*   /*                                                               */ 00216000
*   /* FORMAT ERROR MESSAGES, FIRST AND SECOND LEVEL                 */ 00217000
*   /*                                                               */ 00218000
*   /*****************************************************************/ 00219000
*                                                                  0104 00220000
*   SEGB1PTR=ADDR(PT2SEGBL);        /* CHAIN SEGMENT BLOCKS          */ 00221000
         LA    @11,PT2SEGBL(,@15)                                  0104 00222000
         ST    @11,SEGB1PTR(,@15)                                  0104 00223000
*   NOSEG1=3;                       /* 3 SEGMENTS TO 1ST LEVEL MSG   */ 00224000
         MVC   NOSEG1(4,@15),@CF00074                              0105 00225000
*   LV1SEG1=ADDR(MSGIDHDR);         /* POINT TO MESSAGE SEGMENTS     */ 00226000
         LA    @11,MSGIDHDR                                        0106 00227000
         ST    @11,LV1SEG1(,@15)                                   0106 00228000
*   LV1SEG2=ADDR(SEGMENT1);         /* SEGMENT TWO                   */ 00229000
         LA    @11,SEGMENT1(,@15)                                  0107 00230000
         ST    @11,LV1SEG2(,@15)                                   0107 00231000
*   LV1SEG3=ADDR(E1MSGHDR);         /* SEGMENT THREE                 */ 00232000
         LA    @11,E1MSGHDR                                        0108 00233000
         ST    @11,LV1SEG3(,@15)                                   0108 00234000
*   SEGB2PTR=LASTLVL;               /* END CHAIN OF SEGMENT BLOCKS   */ 00235000
         MVC   SEGB2PTR(4,@15),LASTLVL                             0109 00236000
*   NOSEG2=2;                       /* 2 SEGMENTS FOR 2ND LVL MSG    */ 00237000
         MVC   NOSEG2(4,@15),@CF00186                              0110 00238000
*   LV2SEG1=ADDR(E2MSGHDR);         /* POINT TO MSG SEGMENTS         */ 00239000
         LA    @11,E2MSGHDR                                        0111 00240000
         ST    @11,LV2SEG1(,@15)                                   0111 00241000
*   LV2SEG2=ADDR(SEGMENT2);         /* LEVEL TWO, SEGMENT TWO        */ 00242000
         LA    @11,SEGMENT2(,@15)                                  0112 00243000
         ST    @11,LV2SEG2(,@15)                                   0112 00244000
*   HEADER1=CMDHDR;                 /* INITIALIZE HEADERS OF DYNAMIC */ 00245000
         MVC   HEADER1(4,@15),CMDHDR                               0113 00246000
*   HEADER2=COMPHDR;                /* MESSAGE SEGMENTS              */ 00247000
*                                                                  0114 00248000
         MVC   HEADER2(4,@15),COMPHDR                              0114 00249000
*   /*****************************************************************/ 00250000
*   /*                                                               */ 00251000
*   /* PUT MESSAGE TO TERMINAL                                       */ 00252000
*   /*                                                               */ 00253000
*   /*****************************************************************/ 00254000
*                                                                  0115 00255000
*   R2=ADDR(PT1SEGBL);              /* GET ADDR OF SEGMENT BLOCKS    */ 00256000
         LA    R2,PT1SEGBL(,@15)                                   0115 00257000
*   RESPECIFY                       /* RESTRICT USAGE ACROSS MACRO   */ 00258000
*    (R1,                           /* REGISTER ONE                  */ 00259000
*     R15) RSTD;                    /* REGISTER FIFTEEN              */ 00260000
*   R1=ADDR(SRPARM);                /* POINT TO PUTLINE PARM LIST    */ 00261000
         L     @11,STAEAREA(,R3)                                   0117 00262000
         LR    R1,@11                                              0117 00263000
*   R15=PUTLPTR;                    /* ENTRY POINT TO PUTLINE SR     */ 00264000
         L     R15,PUTLPTR(,R3)                                    0118 00265000
*   GEN(PUTLINE OUTPUT=((2),MULTLVL),ENTRY=(15),MF=(E,(1)));       0119 00266000
         PUTLINE OUTPUT=((2),MULTLVL),ENTRY=(15),MF=(E,(1))             00267000
*   RESPECIFY                       /* FREE FOR COMPILER             */ 00268000
*    (R1) UNRSTD;                   /* REGISTER ONE                  */ 00269000
*EXIT:                                                             0121 00270000
*   RESPECIFY                       /* RESTRICT REGISTER USAGE       */ 00271000
*    (R0) RSTD;                     /* REGISTER ZERO                 */ 00272000
EXIT     DS    0H                                                  0122 00273000
*   R0=ADDR(IKJEE101);              /* ADDR OF STAE RETRY RTN        */ 00274000
         L     R0,@CV00149                                         0122 00275000
         LR    @11,R0                                              0122 00276000
         LR    R0,@11                                              0122 00277000
*   IF NOWORK='0'B                  /* IF W/A WAS GETMAIN'D          */ 00278000
*     THEN                          /* IT WAS, SO                    */ 00279000
         TM    NOWORK(R3),B'00010000'                              0123 00280000
         BNZ   @RF00123                                            0123 00281000
*     R15=4;                        /* SCHEDULE RETRY                */ 00282000
         LA    R15,4                                               0124 00283000
*   ELSE                            /* IT WAS NOT SO                 */ 00284000
*     R15=0;                        /* ELSE DON'T                    */ 00285000
         B     @RC00123                                            0125 00286000
@RF00123 SLR   R15,R15                                             0125 00287000
*   IF STAIENTR='1'B                /* ENTRY WAS FROM THE STAI?      */ 00288000
*     THEN                          /* YES, SET A RC TO CONTINUE     */ 00289000
@RC00123 TM    STAIENTR(R3),B'00001000'                            0126 00290000
         BNO   @RF00126                                            0126 00291000
*     R15=16;                       /* ABEND PROCESSING BUT NO STAI     00292000
*                                      PERCOLATION                   */ 00293000
         LA    R15,16                                              0127 00294000
*EXITA:                                                            0128 00295000
*   RESPECIFY                       /* RESTRICT REGISTER USAGE       */ 00296000
*    (R13) RESTRICTED;              /* REGISTER THIRTEEN             */ 00297000
@RF00126 DS    0H                                                  0128 00298000
EXITA    DS    0H                                                  0129 00299000
*   R13=R13-8;                      /* POINT TO DOUBLE-WD PRECEEDING    00300000
*                                      SAVE AREA                     */ 00301000
         SH    R13,@CH00056                                        0129 00302000
*   GEN(LM R13,R14,E0(R13));        /* RESTORE REGISTERS 13 AND 14   */ 00303000
         LM R13,R14,E0(R13)                                             00304000
*EXITB:                                                            0131 00305000
*   RETURN;                         /* RETURN TO CALLER              */ 00306000
@EL00001 DS    0H                                                  0131 00307000
@EF00001 DS    0H                                                  0131 00308000
@ER00001 BR    @14                                                 0131 00309000
*   RESPECIFY                       /* FREE FOR COMPILER             */ 00310000
*    (R13,                          /* REGISTER THIRTEEN             */ 00311000
*     R15) UNRESTRICTED;            /* REGISTER FIFTEEN              */ 00312000
*                                                                  0132 00313000
*   /*****************************************************************/ 00314000
*   /*                                                               */ 00315000
*   /* TRANSLATE TABLE USED FOR CONVERTING COMPLETION CODE AND THE   */ 00316000
*   /* PATCH AREA                                                    */ 00317000
*   /*                                                               */ 00318000
*   /*****************************************************************/ 00319000
*                                                                  0133 00320000
*   GEN;                                                           0133 00321000
TRTABLE  DC    C'0123456789ABCDEF'  TRANSLATE TABLE FOR COMPLETION      00322000
*                                   CODE                                00323000
PTCHAREA DC CL50'OOOOOOOOOOOOOPATCH AREA FOR OPER STAEOOOOOOOOOOOOO' PA 00324000
PUTBLOCK PUTLINE ,MF=L                                                  00325000
*   END IKJEE1A0                                                   0134 00326000
*                                                                  0134 00327000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */ 00328000
*/*%INCLUDE SYSLIB  (IKJCPPL )                                       */ 00329000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                       */ 00330000
*/*%INCLUDE SYSLIB  (IKJPTPB )                                       */ 00331000
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */ 00332000
*                                                                  0134 00333000
*       ;                                                          0134 00334000
         B     @EL00001                                            0134 00335000
@DATA    DS    0H                                                       00336000
@CH00056 DC    H'8'                                                     00337000
@CH00092 DC    H'12'                                                    00338000
@DATD    DSECT                                                          00339000
         DS    0F                                                       00340000
@PC00001 DS    1F                                                       00341000
@ZTEMPS  DS    C                                                        00342000
@ZTEMPND EQU   *                                                        00343000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         00344000
IKJEE1A0 CSECT                                                          00345000
         DS    0F                                                       00346000
@CF00186 DC    F'2'                                                     00347000
@CF00074 DC    F'3'                                                     00348000
@CH00074 EQU   @CF00074+2                                               00349000
@DATD    DSECT                                                          00350000
         DS    0D                                                       00351000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00352000
@ENDDATD EQU   *                                                        00353000
IKJEE1A0 CSECT                                                          00354000
         DS    0F                                                       00355000
@SIZDATD DC    AL1(0)                                                   00356000
         DC    AL3(@ENDDATD-@DATD)                                      00357000
@CV00149 DC    V(IKJEE101)                                              00358000
@CV00150 DC    V(ENDRN)                                                 00359000
         DS    0D                                                       00360000
LASTLVL  DC    XL4'FF000000'                                            00361000
COMPHDR  DC    XL4'0007001D'                                            00362000
CMDHDR   DC    XL4'000D000A'                                            00363000
ZEROS    DC    XL4'00000000'                                            00364000
BLANK    DC    CL1' '                                                   00365000
         DS    CL3                                                      00366000
MSGIDHDR DS    CL14                                                     00367000
         ORG   MSGIDHDR                                                 00368000
MSGIDHD  DC    XL4'000E0000'                                            00369000
MSGID    DC    CL10'IKJ55008I'                                          00370000
         ORG   MSGIDHDR+14                                              00371000
         DS    CL2                                                      00372000
E1MSGHDR DS    CL28                                                     00373000
         ORG   E1MSGHDR                                                 00374000
E1MSGHD  DC    XL4'001C000A'                                            00375000
ERR1MSG  DC    CL24'ABENDED DUE TO AN ERROR+'                           00376000
         ORG   E1MSGHDR+28                                              00377000
E2MSGHDR DS    CL33                                                     00378000
         ORG   E2MSGHDR                                                 00379000
E2MSGHD  DC    XL4'00210000'                                            00380000
ERR2MSG  DC    CL29'IKJ55008I COMPLETION CODE IS '                      00381000
         ORG   E2MSGHDR+33                                              00382000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00383000
@01      EQU   01                                                       00384000
@02      EQU   02                                                       00385000
@03      EQU   03                                                       00386000
@04      EQU   04                                                       00387000
@05      EQU   05                                                       00388000
@06      EQU   06                                                       00389000
@07      EQU   07                                                       00390000
@08      EQU   08                                                       00391000
@09      EQU   09                                                       00392000
@10      EQU   10                                                       00393000
@11      EQU   11                                                       00394000
@12      EQU   12                                                       00395000
@13      EQU   13                                                       00396000
@14      EQU   14                                                       00397000
@15      EQU   15                                                       00398000
R10      EQU   @10                                                      00399000
R0       EQU   @00                                                      00400000
R1       EQU   @01                                                      00401000
R2       EQU   @02                                                      00402000
R3       EQU   @03                                                      00403000
R4       EQU   @04                                                      00404000
R5       EQU   @05                                                      00405000
R8       EQU   @08                                                      00406000
R11      EQU   @11                                                      00407000
R12      EQU   @12                                                      00408000
R14      EQU   @14                                                      00409000
R13      EQU   @13                                                      00410000
R15      EQU   @15                                                      00411000
         ENTRY IKJEE1A2                                                 00412000
STAEWA   EQU   0                                                        00413000
EXTPARM  EQU   STAEWA                                                   00414000
COMPCODE EQU   STAEWA+4                                                 00415000
EXITPARM EQU   0                                                        00416000
CPPLPTR  EQU   EXITPARM                                                 00417000
CPECBPTR EQU   EXITPARM+4                                               00418000
PUTLPTR  EQU   EXITPARM+8                                               00419000
STAEAREA EQU   EXITPARM+16                                              00420000
@NM00001 EQU   EXITPARM+32                                              00421000
EXITFLAG EQU   @NM00001                                                 00422000
NOWORK   EQU   EXITFLAG                                                 00423000
STAIENTR EQU   EXITFLAG                                                 00424000
RECURSON EQU   @NM00001+2                                               00425000
STAESAVE EQU   EXITPARM+44                                              00426000
REGISTR8 EQU   EXITPARM+52                                              00427000
BASE100  EQU   EXITPARM+56                                              00428000
WORKADDR EQU   EXITPARM+60                                              00429000
EXITWORK EQU   0                                                        00430000
SRPARM   EQU   EXITWORK                                                 00431000
PUTPARM  EQU   EXITWORK+16                                              00432000
PT1SEGBL EQU   EXITWORK+28                                              00433000
SEGB1PTR EQU   PT1SEGBL                                                 00434000
NOSEG1   EQU   PT1SEGBL+4                                               00435000
LV1SEG1  EQU   PT1SEGBL+8                                               00436000
LV1SEG2  EQU   PT1SEGBL+12                                              00437000
LV1SEG3  EQU   PT1SEGBL+16                                              00438000
PT2SEGBL EQU   EXITWORK+48                                              00439000
SEGB2PTR EQU   PT2SEGBL                                                 00440000
NOSEG2   EQU   PT2SEGBL+4                                               00441000
LV2SEG1  EQU   PT2SEGBL+8                                               00442000
LV2SEG2  EQU   PT2SEGBL+12                                              00443000
SEGMENT1 EQU   EXITWORK+64                                              00444000
HEADER1  EQU   SEGMENT1                                                 00445000
TEXT1    EQU   SEGMENT1+4                                               00446000
SEGMENT2 EQU   EXITWORK+80                                              00447000
HEADER2  EQU   SEGMENT2                                                 00448000
TEXT2    EQU   SEGMENT2+4                                               00449000
CPECB    EQU   0                                                        00450000
CPPL     EQU   0                                                        00451000
CPPLUPT  EQU   CPPL+4                                                   00452000
CPPLECT  EQU   CPPL+12                                                  00453000
ECTPTR   EQU   0                                                        00454000
IOPL     EQU   0                                                        00455000
IOPLUPT  EQU   IOPL                                                     00456000
IOPLECT  EQU   IOPL+4                                                   00457000
IOPLECB  EQU   IOPL+8                                                   00458000
IOPLIOPB EQU   IOPL+12                                                  00459000
PTPB     EQU   0                                                        00460000
ECT      EQU   0                                                        00461000
ECTPCMD  EQU   ECT+12                                                   00462000
ECTSCMD  EQU   ECT+20                                                   00463000
ECTSWS   EQU   ECT+28                                                   00464000
ECTATRM  EQU   ECTSWS                                                   00465000
PARMPTR  EQU   0                                                        00466000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    00467000
ECTBKPB  EQU   ECT+36                                                   00468000
ECTUSER  EQU   ECT+32                                                   00469000
ECTDDNUM EQU   ECT+29                                                   00470000
@NM00005 EQU   ECTSWS                                                   00471000
ECTBKGRD EQU   ECTSWS                                                   00472000
ECTNNOT  EQU   ECTSWS                                                   00473000
ECTNMAL  EQU   ECTSWS                                                   00474000
ECTLOGF  EQU   ECTSWS                                                   00475000
@NM00004 EQU   ECTSWS                                                   00476000
ECTNOPD  EQU   ECTSWS                                                   00477000
ECTSMSG  EQU   ECT+9                                                    00478000
ECTMSGF  EQU   ECT+8                                                    00479000
ECTIOWA  EQU   ECT+4                                                    00480000
ECTRTCD  EQU   ECT+1                                                    00481000
ECTRCDF  EQU   ECT                                                      00482000
PTPBFLN  EQU   PTPB+8                                                   00483000
PTPBOPUT EQU   PTPB+4                                                   00484000
@NM00003 EQU   PTPB                                                     00485000
CPPLPSCB EQU   CPPL+8                                                   00486000
CPPLCBUF EQU   CPPL                                                     00487000
ATTNBUFF EQU   EXITPARM+64                                              00488000
ATTACHCB EQU   EXITPARM+48                                              00489000
ATTNSAVE EQU   EXITPARM+40                                              00490000
STACKPTR EQU   EXITPARM+36                                              00491000
@NM00002 EQU   @NM00001+1                                               00492000
RSVD     EQU   EXITFLAG                                                 00493000
SCANPTR  EQU   EXITPARM+28                                              00494000
WORK7PTR EQU   EXITPARM+24                                              00495000
ATTNAREA EQU   EXITPARM+20                                              00496000
GETLPTR  EQU   EXITPARM+12                                              00497000
BIGZERO  EQU   STAEWA+92                                                00498000
ADDR100  EQU   STAEWA+88                                                00499000
REGSTER  EQU   STAEWA+24                                                00500000
LASTPSW  EQU   STAEWA+16                                                00501000
ABENDPSW EQU   STAEWA+8                                                 00502000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      00503000
EXITB    EQU   @EL00001                                                 00504000
@ENDDATA EQU   *                                                        00505000
         END   IKJEE1A0                                                 00506000
