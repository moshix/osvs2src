         TITLE 'IKJEES10 - USER SEND COMMAND MAIN PROCESSOR            *00001000
                       '                                                00002000
IKJEES10 CSECT ,                                                   0001 00003000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00004000
         BALR  @11,0                                               0001 00005000
@PSTART  LA    @09,4095(,@11)                                      0001 00006000
         USING @PSTART,@11                                         0001 00007000
         USING @PSTART+4095,@09                                    0001 00008000
         L     @00,@SIZDATD                                        0001 00009000
         GETMAIN R,LV=(0)                                               00010000
         LR    @12,@01                                             0001 00011000
         USING @DATD,@12                                           0001 00012000
         ST    @13,@SA00001+4                                      0001 00013000
         LM    @00,@01,20(@13)                                     0001 00014000
         ST    @12,8(,@13)                                         0001 00015000
         LR    @13,@12                                             0001 00016000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00017000
         MVC   @PC00001(4),0(@01)                                  0001 00018000
         MODID BRANCH=YES                                               00019000
         EJECT                                                          00020000
         EJECT                                                          00021000
         EJECT                                                          00022000
         EJECT                                                          00023000
REGS     DS    0H                                                  0123 00024000
*         CPPLPTR = R1;             /* SAVE REG1 PARM LIST ADDRESS   */ 00025000
         ST    R1,CPPLPTR                                          0128 00026000
*         RESTRICT (I);             /* RESTRICT REG 4 FOR LOOP CNTRL */ 00027000
*         RESTRICT (R5);            /* RESTRICT REG 5 FOR ARITHMETIC */ 00028000
*         COMMON = COMMON && COMMON;  /* CLEAR COMMON AREA TO ZERO   */ 00029000
         XC    COMMON(32),COMMON                                   0131 00030000
* /*                                                                 */ 00031000
* /*      MOVE LISTS FOR MACRO INSTRUCTIONS TO AUTOMATIC STORAGE     */ 00032000
* /*                                                                 */ 00033000
*         GEN  (MVC   AUTOLIST(LISTEND-LISTBEG),LISTBEG  );        0132 00034000
         MVC   AUTOLIST(LISTEND-LISTBEG),LISTBEG                        00035000
*         PSCBPTR  = CPPLPSCB;      /* SET BASE FOR PSCB STRUCTURE   */ 00036000
         L     @10,CPPLPTR                                         0133 00037000
         MVC   PSCBPTR(4),CPPLPSCB(@10)                            0133 00038000
*         SDECB  = SDECB && SDECB;  /* SET SEND ECB TO ZERO          */ 00039000
         XC    SDECB(4),SDECB                                      0134 00040000
*         IOPLPTR = ADDR(AUTOPARM); /*SET POINTER TO PARM LIST       */ 00041000
         LA    @08,AUTOPARM                                        0135 00042000
         ST    @08,IOPLPTR                                         0135 00043000
*         IOPLUPT = CPPLUPT;        /* UPT ADDR                      */ 00044000
         MVC   IOPLUPT(4,@08),CPPLUPT(@10)                         0136 00045000
*         IOPLECT = CPPLECT;        /* ECT ADDR                      */ 00046000
         MVC   IOPLECT(4,@08),CPPLECT(@10)                         0137 00047000
*         IOPLECB = ADDR(SDECB);    /* ADDR OF SEND ECB              */ 00048000
         LA    @15,SDECB                                           0138 00049000
         ST    @15,IOPLECB(,@08)                                   0138 00050000
*         COMCPPL = CPPLPTR;        /* SET ADDR CPPL IN COMMON       */ 00051000
         ST    @10,COMCPPL                                         0139 00052000
*         IDTBL = ADDR(IDUSRID);    /* SET ADDR OF USERID TABLE    0140 00053000
*                                      IN COMMON FOR IKJEES11        */ 00054000
         LA    @10,IDUSRID                                         0140 00055000
         ST    @10,@TF00001                                        0140 00056000
         MVC   IDTBL(3),@TF00001+1                                 0140 00057000
*         COMMSG7 = ADDR(MSG7INS);  /* SET ADDR USERID AREA FOR MSG7 */ 00058000
         LA    @10,MSG7INS                                         0141 00059000
         ST    @10,@TF00001                                        0141 00060000
         MVC   COMMSG7(3),@TF00001+1                               0141 00061000
*         COMMSGD = ADDR(MSGDINS);  /* INIT MSGD INSERTS PTR   Y02676*/ 00062000
         LA    @10,MSGDINS                                         0142 00063000
         ST    @10,@TF00001                                        0142 00064000
         MVC   COMMSGD(3),@TF00001+1                               0142 00065000
*         R1 = ADDR(COMMON);        /* SET REG 1 = ADDR COMMON PARM     00066000
*                                      LIST FOR IKJEES11             */ 00067000
         LA    R1,COMMON                                           0143 00068000
*         CALL IKJEES11;                                           0144 00069000
         L     @15,@CV00467                                        0144 00070000
         BALR  @14,@15                                             0144 00071000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00072000
*/*                                                                  */ 00073000
*/*              -     R    O    U    T    E    R     -              */ 00074000
*/*                                                                  */ 00075000
*/*   CONTROL IS ROUTED ACCORDING TO 'COMROUT', USED AS AN INDEX     */ 00076000
*/*   INTO THE WHERE-TO-GO TABLE                                     */ 00077000
*/*                                                                  */ 00078000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00079000
*                                                                  0145 00080000
*         ROUTE = WEARTOGO(COMROUT); /* SET BASE FOR NEXTPATH        */ 00081000
         SR    @10,@10                                             0145 00082000
         IC    @10,COMROUT                                         0145 00083000
         SLA   @10,2                                               0145 00084000
         L     @10,WEARTOGO-4(@10)                                 0145 00085000
         ST    @10,ROUTE                                           0145 00086000
*         GOTO NEXTPATH;            /* ROUTE CONTROL TO NEXT PATH    */ 00087000
         BR    @10                                                 0146 00088000
*DODAIR:                            /* SET UP FOR DAIR               */ 00089000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00090000
* /*                                                                 */ 00091000
* /*                 -    D    A    I    R    -                      */ 00092000
* /*                                                                 */ 00093000
* /*                                                                 */ 00094000
* /*      GO TO DAIR WITH CODE X'08' TO REQUEST ALLOCATION OF        */ 00095000
* /*      BROADCAST DATA SET.  SINCE THE DATA SET IS CATALOGED,      */ 00096000
* /*      ONLY THE DSNAME AND DISPOSITION FIELDS NEED BE SUPPLIED.   */ 00097000
* /*                                                                 */ 00098000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00099000
*         DAPLPTR = ADDR(AUTODAPL); /* SET BASE FOR DAPL       Y02676*/ 00100000
DODAIR   LA    @10,AUTODAPL                                        0147 00101000
         ST    @10,DAPLPTR                                         0147 00102000
*         DAPB0PTR = ADDR(AUTODAIR);/* SET BASE FOR DAIR PARM BL     */ 00103000
         LA    @08,AUTODAIR                                        0148 00104000
         ST    @08,DAPB0PTR                                        0148 00105000
*         AUTODAIR=AUTODAIR && AUTODAIR;  /* CLEAR DAIR PARM BL M1861*/ 00106000
         XC    AUTODAIR(84),AUTODAIR                               0149 00107000
*         DA08CD = DAIRCD08;        /* SET DAIR CODE = X'08'         */ 00108000
         MVC   DA08CD(2,@08),DAIRCD08                              0150 00109000
*         DA08PDSN = ADDR(DAIRDSN); /* PTR TO DATA SET NAME          */ 00110000
         LA    @15,DAIRDSN                                         0151 00111000
         ST    @15,DA08PDSN(,@08)                                  0151 00112000
*         DA08DDN  = ' ';           /* DDNAME FIELD = BLANK,       0152 00113000
*                                      DDNAME IS RETURNED HERE       */ 00114000
         MVI   DA08DDN+1(@08),C' '                                 0152 00115000
         MVC   DA08DDN+2(6,@08),DA08DDN+1(@08)                     0152 00116000
         MVI   DA08DDN(@08),C' '                                   0152 00117000
*         DA08UNIT = ' ';           /* UNITNAME = BLANK              */ 00118000
         MVI   DA08UNIT+1(@08),C' '                                0153 00119000
         MVC   DA08UNIT+2(6,@08),DA08UNIT+1(@08)                   0153 00120000
         MVI   DA08UNIT(@08),C' '                                  0153 00121000
*         DA08SER = ' ';            /* VOLUME SERIAL NO. = BLANK     */ 00122000
         MVI   DA08SER+1(@08),C' '                                 0154 00123000
         MVC   DA08SER+2(6,@08),DA08SER+1(@08)                     0154 00124000
         MVI   DA08SER(@08),C' '                                   0154 00125000
*         DA08SHR = '1'B;           /* STATUS = SHARE                */ 00126000
         OI    DA08SHR(@08),B'00001000'                            0155 00127000
*         DA08KEEP = '1'B;          /* NORMAL DISPOSITON = KEEP      */ 00128000
         OI    DA08KEEP(@08),B'00001000'                           0156 00129000
*         DA08KEP = '1'B;           /* CONDITIONAL DISPOSITION = KEEP*/ 00130000
         OI    DA08KEP(@08),B'00001000'                            0157 00131000
*         DA08MNM = ' ';            /* MEMBER NAME = BLANK           */ 00132000
         MVI   DA08MNM+1(@08),C' '                                 0158 00133000
         MVC   DA08MNM+2(6,@08),DA08MNM+1(@08)                     0158 00134000
         MVI   DA08MNM(@08),C' '                                   0158 00135000
*         DA08PSWD = ' ';           /* DATA SET PASSWORD = BLANK     */ 00136000
         MVI   DA08PSWD+1(@08),C' '                                0159 00137000
         MVC   DA08PSWD+2(6,@08),DA08PSWD+1(@08)                   0159 00138000
         MVI   DA08PSWD(@08),C' '                                  0159 00139000
*         DAPLUPT = CPPLUPT;        /* UPT PTR                       */ 00140000
         L     @15,CPPLPTR                                         0160 00141000
         MVC   DAPLUPT(4,@10),CPPLUPT(@15)                         0160 00142000
*         DAPLECT = CPPLECT;        /* ECT PTR                       */ 00143000
         MVC   DAPLECT(4,@10),CPPLECT(@15)                         0161 00144000
*         DAPLECB = ADDR(SDECB);    /* PTR TO THE SEND ECB           */ 00145000
         LA    @14,SDECB                                           0162 00146000
         ST    @14,DAPLECB(,@10)                                   0162 00147000
*         DAPLPSCB = CPPLPSCB;      /* PTR TO PSCB                   */ 00148000
         MVC   DAPLPSCB(4,@10),CPPLPSCB(@15)                       0163 00149000
*         DAPLDAPB = DAPB0PTR;      /* PTR TO DAIR PARM BLOCK        */ 00150000
         ST    @08,DAPLDAPB(,@10)                                  0164 00151000
*         R1 = DAPLPTR;             /* SET REG1 = ADDR PARM LIST     */ 00152000
         LR    R1,@10                                              0165 00153000
*         GEN (LINK  EP=IKJDAIR);  /* LINK TO DAIR WITH CODE'08'     */ 00154000
         LINK  EP=IKJDAIR                                               00155000
*         DAIRRETC = R15;                                          0167 00156000
         ST    R15,DAIRRETC                                        0167 00157000
*         IF DAIRRETC > 0           /* TEST RETURN CODE FROM DAIR    */ 00158000
*           THEN                    /* IF RET CODE NOT ZERO          */ 00159000
         L     @10,DAIRRETC                                        0168 00160000
         LTR   @10,@10                                             0168 00161000
         BP    @RT00168                                            0168 00162000
*             GOTO BADDAIR;         /* ALLOCATION NOT SUCCESSFUL     */ 00163000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00164000
* /*                                                                 */ 00165000
* /*      CALL IO RTN TO OPEN BROADCAST DATA SET                     */ 00166000
* /*      AND READ RECORD1                                           */ 00167000
* /*                                                                 */ 00168000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00169000
*         /* ENQ FOR SHARE ON RECORD 1.                        Y02676*/ 00170000
*         GEN  (ENQ  (QNAME,RNRC1,S,3,SYSTEM),RET=HAVE,MF=(E,ENQSL) );  00171000
         ENQ  (QNAME,RNRC1,S,3,SYSTEM),RET=HAVE,MF=(E,ENQSL)            00172000
*                                   /*                         Y02676*/ 00173000
*         FENQ1 = '1'B;             /* SET FLAG FOR ENQ ON RECORD 1  */ 00174000
         OI    FENQ1,B'10000000'                                   0171 00175000
*         IOPBASE = ADDR(IOPAREA);  /* SET BASE FOR IO PARM LIST     */ 00176000
         LA    @10,IOPAREA                                         0172 00177000
         ST    @10,IOPBASE                                         0172 00178000
*         IOPARML = IOPARML && IOPARML;  /*  CLEAR ENTIRE PARM AREA  */ 00179000
         XC    IOPARML(32,@10),IOPARML(@10)                        0173 00180000
*         P1OPEN = '1'B;            /* SET PARM FLAG FOR OPEN        */ 00181000
         OI    P1OPEN(@10),B'10000000'                             0174 00182000
*         PARMDDNM = DA08DDN;       /* SET DDNAME IN PARM LIST       */ 00183000
         L     @08,DAPB0PTR                                        0175 00184000
         MVC   PARMDDNM(8,@10),DA08DDN(@08)                        0175 00185000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00186000
         LR    R1,@10                                              0176 00187000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO READ RECORD 1  */ 00188000
         L     @15,@CV00471                                        0177 00189000
         BALR  @14,@15                                             0177 00190000
*         RETC = R15;               /* SAVE RETURN CODE FROM REG 15  */ 00191000
         ST    R15,RETC                                            0178 00192000
*         IF RETC > 0               /* TEST RETURN CODE FROM IO RTN  */ 00193000
*           THEN                    /* READ WAS NOT SUCCESSFUL       */ 00194000
         L     @10,RETC                                            0179 00195000
         LTR   @10,@10                                             0179 00196000
         BP    @RT00179                                            0179 00197000
*             GOTO BADIO;           /* GO TO ANALYZE ERROR AND     0180 00198000
*                                      GIVE WARNING MSG              */ 00199000
*         FOPEN = '1'B;             /* SET FLAG FOR GOOD OPEN  Y02676*/ 00200000
         OI    FOPEN,B'01000000'                                   0181 00201000
*         R1PTR = PARMRCD1;         /* SET RECORD1 BASE        Y02676*/ 00202000
         L     @10,IOPBASE                                         0182 00203000
         L     @10,PARMRCD1(,@10)                                  0182 00204000
         ST    @10,@TF00001                                        0182 00205000
         MVC   R1PTR(3),@TF00001+1                                 0182 00206000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00207000
* /*                                                                 */ 00208000
* /*      SET UP USER MAIL MESSAGE RECORD WITH SEND MSG TEXT AND     */ 00209000
* /*      USERID OF SENDER.                                          */ 00210000
* /*                                                                 */ 00211000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00212000
*         MI = 1;                   /* INIT INDEX TO MSG TEXT        */ 00213000
         LA    @08,1                                               0183 00214000
         STC   @08,MI                                              0183 00215000
*         USMPTR = ADDR(MSGAREA2);  /* SET MAIL MSG RCD BASE   Y02676*/ 00216000
         LA    @15,MSGAREA2                                        0184 00217000
         ST    @15,@TF00001                                        0184 00218000
         MVC   USMPTR(3),@TF00001+1                                0184 00219000
*         USMTEXT = ' ';            /* BLANK OUT MSG TEXT AREA       */ 00220000
         MVI   USMTEXT+1(@15),C' '                                 0185 00221000
         MVC   USMTEXT+2(123,@15),USMTEXT+1(@15)                   0185 00222000
         MVI   USMTEXT(@15),C' '                                   0185 00223000
*                                   /* MOVE MSG TEXT TO RECORD       */ 00224000
*         USMTEXT(MI:PDLMLL) = MSGTEXT(1:PDLMLL);                  0186 00225000
         ALR   @08,@15                                             0186 00226000
         SR    @14,@14                                             0186 00227000
         IC    @14,MI                                              0186 00228000
         L     @07,CPDLMSGT                                        0186 00229000
         MVC   @TF00001(2),PDLMLL(@07)                             0186 00230000
         LH    @06,@TF00001                                        0186 00231000
         LR    @03,@06                                             0186 00232000
         SR    @03,@14                                             0186 00233000
         L     @01,PDLMPTR(,@07)                                   0186 00234000
         EX    @03,@SM00540                                        0186 00235000
*         MI = MI + PDLMLL;         /* BUMP INDEX PAST TEXT    Y02676*/ 00236000
         AR    @14,@06                                             0187 00237000
         STC   @14,MI                                              0187 00238000
*         USMTEXT(MI) = ' ';        /* INSERT BLANK BEFORE USERID    */ 00239000
         ALR   @14,@15                                             0188 00240000
         MVI   USMTEXT-1(@14),C' '                                 0188 00241000
*         MI = MI + 1;              /* BUMP INDEX TO NEXT BYTE       */ 00242000
         SR    @08,@08                                             0189 00243000
         IC    @08,MI                                              0189 00244000
         AH    @08,@CH00035                                        0189 00245000
         STC   @08,MI                                              0189 00246000
*         USMTEXT(MI:MI+PSCBUSRL-1) =  PSCBUSER(1:PSCBUSRL);       0190 00247000
         ALR   @08,@15                                             0190 00248000
         L     @14,PSCBPTR                                         0190 00249000
         SR    @07,@07                                             0190 00250000
         IC    @07,PSCBUSRL(,@14)                                  0190 00251000
         LR    @06,@07                                             0190 00252000
         BCTR  @06,0                                               0190 00253000
         EX    @06,@SM00542                                        0190 00254000
*                                   /* APPEND USERID OF SENDER TO MSG*/ 00255000
*         USMLNG = MI+PSCBUSRL;     /* LENGTH OF MSG TEXT PLUS USERID   00256000
*                                      EQUAL TOTAL MSG LENGTH        */ 00257000
         SR    @08,@08                                             0191 00258000
         IC    @08,MI                                              0191 00259000
         AR    @08,@07                                             0191 00260000
         STC   @08,USMLNG(,@15)                                    0191 00261000
*         USMNEXT = 0;              /* NO 'NEXT' MSG           Y02676*/ 00262000
         SR    @08,@08                                             0192 00263000
         ST    @08,@TF00001                                        0192 00264000
         MVC   USMNEXT(3,@15),@TF00001+1                           0192 00265000
*         RNUSD  = R1USPTR;         /* SET RNAME FOR ENQ FROM RECORD1*/ 00266000
         MVC   RNUSD(3),R1USPTR(@10)                               0193 00267000
*                                   /* ENQ EXCLUSIVE ON USER DIRECT. */ 00268000
*         GEN  (ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL) );  00269000
         ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL)            00270000
*         FENQUSD = '1'B;           /* SET FLAG FOR ENQ ON USER DIR  */ 00271000
         OI    FENQUSD,B'00100000'                                 0195 00272000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00273000
* /*                                                                 */ 00274000
* /*      CALL IO RTN TO READ USER MAIL DIRECTORY RECORD             */ 00275000
* /*                                                                 */ 00276000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00277000
*READUSD:                           /* SET UP PARM LIST FOR IO RTN   */ 00278000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00279000
READUSD  L     @10,IOPBASE                                         0196 00280000
         XC    SDIOPARM(20,@10),SDIOPARM(@10)                      0196 00281000
*         P1READ = '1'B;            /* SET PARM FLAG FOR READ        */ 00282000
         OI    P1READ(@10),B'01000000'                             0197 00283000
*         PARMRBA = ADDR(RNUSD);    /* SET RBA OF RECORD TO BE READ  */ 00284000
         LA    @08,RNUSD                                           0198 00285000
         ST    @08,@TF00001                                        0198 00286000
         MVC   PARMRBA(4,@10),@TF00001                             0198 00287000
*         PARMIOAD = ADDR(DIRAREA); /* SET AREA ADDR FOR RECORD      */ 00288000
         LA    @08,DIRAREA                                         0199 00289000
         ST    @08,@TF00001                                        0199 00290000
         MVC   PARMIOAD(4,@10),@TF00001                            0199 00291000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00292000
         LR    R1,@10                                              0200 00293000
*         CALL  IEEVSDIO;           /* CALL IO RTN                   */ 00294000
         L     @15,@CV00471                                        0201 00295000
         BALR  @14,@15                                             0201 00296000
*         RETC = R15;               /* SAVE RETURN CODE FROM REG 15  */ 00297000
         ST    R15,RETC                                            0202 00298000
*         IF RETC > 0               /* TEST IF RET CODE IS ZERO      */ 00299000
*           THEN                    /* UNSUCCESSFUL READ             */ 00300000
         L     @10,RETC                                            0203 00301000
         LTR   @10,@10                                             0203 00302000
         BP    @RT00203                                            0203 00303000
*             GOTO BADIO;           /* GO TO ANALYZE ERROR           */ 00304000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00305000
* /*                                                                 */ 00306000
* /*      SCAN USER MAIL DIRECTORY RECORD FOR SPECIFIED USERID       */ 00307000
* /*                                                                 */ 00308000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00309000
*SCANUSD:                           /* SCAN 1 USER MAIL DIR. RECORD  */ 00310000
*         USDPTR = PARMIOAD;        /* SET MAIL DIR RCD BASE   Y02676*/ 00311000
SCANUSD  L     @10,IOPBASE                                         0205 00312000
         MVC   USDPTR(3),PARMIOAD+1(@10)                           0205 00313000
*         ZERENT = ZERENT && ZERENT; /* UNUSED ENTRY MODEL     Y02676*/ 00314000
         XC    ZERENT(13),ZERENT                                   0206 00315000
*SCUSD1: DO I = 1 TO DIM(USDENTRY); /* SCAN USERID ENTRIES IN  Y02676   00316000
*                                      THIS DIRECTORY RECORD         */ 00317000
SCUSD1   LA    I,1                                                 0207 00318000
@DL00207 DS    0H                                                  0208 00319000
*         IF USDENTRY(I) = ZERENT   /* TEST IF THIS ENTRY = 0        */ 00320000
*           THEN                    /* THIS USERID ENTRY IS ZERO     */ 00321000
         LR    @10,I                                               0208 00322000
         MH    @10,@CH00205                                        0208 00323000
         L     @08,USDPTR-1                                        0208 00324000
         LA    @08,0(,@08)                                         0208 00325000
         ALR   @08,@10                                             0208 00326000
         AL    @08,@CF00545                                        0208 00327000
         CLC   USDENTRY(13,@08),ZERENT                             0208 00328000
         BE    @RT00208                                            0208 00329000
*             GOTO LPEND1;          /* LOOP TO CHECK NEXT ENTRY      */ 00330000
*           ELSE                                                   0210 00331000
*SCUSD2:      DO J = 1 TO IDCNT;    /* SCAN ENTIRE LIST OF USERIDS 0210 00332000
*                                      SPECIFIED IN 'SEND' COMMAND   */ 00333000
SCUSD2   LA    @10,1                                               0210 00334000
         B     @DE00210                                            0210 00335000
@DL00210 DS    0H                                                  0211 00336000
*             IF USDID(I) = IDUSRID(J,1:7)                         0211 00337000
*                                   /* IS THIS USERID          Y02676   00338000
*                                      EQUAL TO 1 SPEC'D IN SEND     */ 00339000
*               THEN                /* USERIDS ARE EQUAL             */ 00340000
         LR    @08,I                                               0211 00341000
         MH    @08,@CH00205                                        0211 00342000
         L     @01,USDPTR-1                                        0211 00343000
         LA    @01,0(,@01)                                         0211 00344000
         LR    @15,@10                                             0211 00345000
         SLA   @15,3                                               0211 00346000
         ALR   @01,@08                                             0211 00347000
         AL    @01,@CF00545                                        0211 00348000
         LA    @08,IDUSRID-8(@15)                                  0211 00349000
         CLC   USDID(7,@01),0(@08)                                 0211 00350000
         BE    @RT00211                                            0211 00351000
*                 GOTO VALIDID;     /* PUT MSG INTO DATA SET FOR THIS   00352000
*                                      USERID                        */ 00353000
*             END SCUSD2;           /* END OF INNER LOOP             */ 00354000
         AH    @10,@CH00035                                        0213 00355000
@DE00210 STC   @10,J                                               0213 00356000
         MVC   @ZT00003+3(1),IDCNT                                 0213 00357000
         C     @10,@ZT00003                                        0213 00358000
         BNH   @DL00210                                            0213 00359000
*LPEND1:                            /* THIS USERID IN DIRECTORY NOT     00360000
*                                      EQUAL TO ONE FROM PARM LIST   */ 00361000
*         END SCUSD1;               /* END OF OUTER LOOP             */ 00362000
LPEND1   AH    I,@CH00035                                          0214 00363000
         CH    I,@CH00034                                          0214 00364000
         BNH   @DL00207                                            0214 00365000
*         IF USDNEXT = 0            /* IS CHAIN PTR = 0        Y02676*/ 00366000
*           THEN                    /* YES, LAST USER MAIL DIR. REC  */ 00367000
         L     @10,USDPTR-1                                        0215 00368000
         LA    @10,0(,@10)                                         0215 00369000
         MVC   @ZT00001+1(3),USDNEXT(@10)                          0215 00370000
         L     @08,@ZT00001                                        0215 00371000
         LTR   @08,@08                                             0215 00372000
         BZ    @RT00215                                            0215 00373000
*             GOTO SCUSD3;          /* GO TO DEQ ON THIS RECORD      */ 00374000
*         RNPREV = RNUSD;           /* SAVE RNAME FOR DEQ            */ 00375000
         MVC   RNPREV(3),RNUSD                                     0217 00376000
*         RNUSD = USDNEXT;          /* RNAME FOR ENQ NEXT      Y02676   00377000
*                                      MAIL DIRECTORY RECORD         */ 00378000
         MVC   RNUSD(3),USDNEXT(@10)                               0218 00379000
*                                   /* ENQ ON NEXT USER MAIL DIR. RC */ 00380000
*         GEN ( ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL) );  00381000
          ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL)           00382000
*                                   /* DEQ ON PREVIOUS DIRECTORY REC */ 00383000
*         GEN ( DEQ  (QNAME,RNPREV,3,SYSTEM),RET=HAVE,MF=(E,DEQL)  );   00384000
          DEQ  (QNAME,RNPREV,3,SYSTEM),RET=HAVE,MF=(E,DEQL)             00385000
*         GOTO READUSD;             /* READ NEXT DIRECTORY RECORD    */ 00386000
         B     READUSD                                             0221 00387000
*SCUSD3:                  /* END OF USER DIRECTORY                   */ 00388000
* GEN;                                                             0222 00389000
SCUSD3   DS    0H                                                  0222 00390000
                DEQ (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL)         00391000
*         FENQUSD = '0'B;           /* TURN ENQ FLAG OFF             */ 00392000
         NI    FENQUSD,B'11011111'                                 0223 00393000
*         IF VALCNT = IDCNT         /* IS VALID CNT = TOTAL USER CNT */ 00394000
*           THEN                    /* YES, ALL USERIDS ARE DONE     */ 00395000
         CLC   VALCNT(1),IDCNT                                     0224 00396000
         BE    @RT00224                                            0224 00397000
*             GOTO EXITCODE;        /* CLEANUP AND RETURN TO TMP     */ 00398000
*           ELSE;                   /* NOT ALL SPEC'D USERIDS WERE 0226 00399000
*                                      FOUND IN DIRECTORY. THOSE THAT   00400000
*                                      REMAIN ON IDUSRID ARE INVALID */ 00401000
*                         /* ISSUE WARNING MSG FOR INVALID USERIDS   */ 00402000
*         P = 1;                    /* SET INDEX TO PUTLINE BUFFER   */ 00403000
         LA    @10,1                                               0227 00404000
         STC   @10,P                                               0227 00405000
*        PTLTEXT(P : TPNLNG) = MSG1TPN; /* PUT MSG ID INTO BUFR     */  00406000
         LA    @08,PTLTEXT-1(@10)                                  0228 00407000
         SR    @15,@15                                             0228 00408000
         IC    @15,TPNLNG                                          0228 00409000
         LR    @14,@15                                             0228 00410000
         SR    @14,@10                                             0228 00411000
         L     @07,@CA00303                                        0228 00412000
         L     @07,MSG1P-MSGTABLE(,@07)                            0228 00413000
         EX    @14,@SM00547                                        0228 00414000
*                                  /* PUT MSG TEXT IN PUTLINE BUFR  */  00415000
*        PTLTEXT(TPNLNG+1 : TPNLNG + MSG1LNG)   = MSG1TEXT;        0229 00416000
         LA    @08,PTLTEXT(@15)                                    0229 00417000
         SR    @06,@06                                             0229 00418000
         IC    @06,MSG1LNG(,@07)                                   0229 00419000
         LR    @14,@06                                             0229 00420000
         BCTR  @14,0                                               0229 00421000
         EX    @14,@SM00549                                        0229 00422000
*        P = P + MSG1LNG + TPNLNG; /* BUMP INDEX PAST MSG TEXT      */  00423000
         AR    @10,@06                                             0230 00424000
         AR    @10,@15                                             0230 00425000
         STC   @10,P                                               0230 00426000
*         PTLTEXT(P) = ' ';         /* INSERT BLANK BEFORE USERIDS   */ 00427000
         LA    @08,PTLTEXT-1(@10)                                  0231 00428000
         MVI   0(@08),C' '                                         0231 00429000
*         P = P + 1;                /* BUMP INDEX PAST BLANK         */ 00430000
         LA    @08,1                                               0232 00431000
         AR    @10,@08                                             0232 00432000
         STC   @10,P                                               0232 00433000
*         DO J = 1 TO IDCNT;        /* SCAN LIST OF SPEC'D USERIDS 0233 00434000
*                                      FOR ANY NOT FOUND IN DIRECTRY */ 00435000
         B     @DE00233                                            0233 00436000
@DL00233 DS    0H                                                  0234 00437000
*         IF IDUSRID(J) ^= BLNKID   /* IS THIS USERID NONBLANK       */ 00438000
*           THEN                    /* YES, THIS USERID IS INVALID   */ 00439000
         SLA   @08,3                                               0234 00440000
         LA    @10,IDUSRID-8(@08)                                  0234 00441000
         CLC   0(8,@10),BLNKID                                     0234 00442000
         BE    @RF00234                                            0234 00443000
*             DO;                   /* ADD USERID TO WARN MSG        */ 00444000
*             PTLTEXT(P:P+7) = IDUSRID(J);                         0236 00445000
         SR    @10,@10                                             0236 00446000
         IC    @10,P                                               0236 00447000
         LA    @01,PTLTEXT-1(@10)                                  0236 00448000
         LA    @15,IDUSRID-8(@08)                                  0236 00449000
         MVC   0(8,@01),0(@15)                                     0236 00450000
*             P = P+ 8;             /* BUMP INDEX PAST USERID        */ 00451000
         AH    @10,@CH00055                                        0237 00452000
         STC   @10,P                                               0237 00453000
*             END;                                                 0238 00454000
*         END;                                                     0239 00455000
@RF00234 LA    @08,1                                               0239 00456000
         MVC   @ZT00003+3(1),J                                     0239 00457000
         A     @08,@ZT00003                                        0239 00458000
@DE00233 STC   @08,J                                               0239 00459000
         MVC   @ZT00003+3(1),IDCNT                                 0239 00460000
         C     @08,@ZT00003                                        0239 00461000
         BNH   @DL00233                                            0239 00462000
*        PTLTEXT(P) = LVL2IND;     /* INDICATE 2ND LEVEL INFORMATION    00463000
*                                     AVAILABLE BY A PLUS '+' SIGN  */  00464000
         SR    @10,@10                                             0240 00465000
         IC    @10,P                                               0240 00466000
         LA    @08,PTLTEXT-1(@10)                                  0240 00467000
         MVC   0(1,@08),LVL2IND                                    0240 00468000
*         PTLLL = P+4;              /* PUTLINE BUF LENG INCL HEADER  */ 00469000
         AH    @10,@CH00152                                        0241 00470000
         STH   @10,PTLLL                                           0241 00471000
*         PTLOFFST = 0;             /* SET OFFSET = 0, NO MSG INSERT */ 00472000
         SR    @10,@10                                             0242 00473000
         STH   @10,PTLOFFST                                        0242 00474000
*         PTLSCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 00475000
         LA    @08,1                                               0243 00476000
         ST    @08,PTLSCNT                                         0243 00477000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT        */ 00478000
         LA    @15,PTLBUF                                          0244 00479000
         ST    @15,PTLSPTR                                         0244 00480000
*        PTLSNEXT = ADDR(PTLEVEL2);/* PTR TO 2ND LEVEL MSG SEG BLK  */  00481000
         LA    @15,PTLEVEL2                                        0245 00482000
         ST    @15,PTLSNEXT                                        0245 00483000
*        PL2NEXT = 0;              /* PTR TO 3RD LEVEL MSG = 0      */  00484000
         ST    @10,PL2NEXT                                         0246 00485000
*        PL2SCNT = 1;              /* NO. OF SEGMENTS = 1           */  00486000
         ST    @08,PL2SCNT                                         0247 00487000
*        PL2SPTR = MSG1L2(1);      /* PTR TO 2ND LEVEL MSG SEGMENT  */  00488000
         L     @10,@CA00303                                        0248 00489000
         L     @10,MSG1P-MSGTABLE(,@10)                            0248 00490000
         L     @10,MSG1LVL2(,@10)                                  0248 00491000
         MVC   PL2SPTR(4),MSG1L2(@10)                              0248 00492000
*         GOTO WARNMSG;             /* 'PUTLINE' WARNING MSG         */ 00493000
         B     WARNMSG                                             0249 00494000
*VALIDID:                           /* USERID FOUND IN DATA SET      */ 00495000
* /*                                                                 */ 00496000
* /*                                                                 */ 00497000
*         VALCNT = VALCNT + 1;      /* BUMP CNT OF VALID IDS         */ 00498000
VALIDID  LA    @10,1                                               0250 00499000
         MVC   @ZT00003+3(1),VALCNT                                0250 00500000
         A     @10,@ZT00003                                        0250 00501000
         STC   @10,VALCNT                                          0250 00502000
*         IDUSRID(J) = BLNKID;      /* BLANK OUT USERID ENTRY        */ 00503000
         SR    @10,@10                                             0251 00504000
         IC    @10,J                                               0251 00505000
         SLA   @10,3                                               0251 00506000
         LA    @08,IDUSRID-8(@10)                                  0251 00507000
         MVC   0(8,@08),BLNKID                                     0251 00508000
*         IF USDEND(I) = 0          /* PTR TO MSG CHAIN = 0    Y02676*/ 00509000
*           THEN                    /* YES, NO MSGS FOR THIS USERID  */ 00510000
         LR    @10,I                                               0252 00511000
         MH    @10,@CH00205                                        0252 00512000
         L     @08,USDPTR-1                                        0252 00513000
         LA    @08,0(,@08)                                         0252 00514000
         ALR   @08,@10                                             0252 00515000
         AL    @08,@CF00551                                        0252 00516000
         MVC   @ZT00001+1(3),USDEND-10(@08)                        0252 00517000
         L     @10,@ZT00001                                        0252 00518000
         LTR   @10,@10                                             0252 00519000
         BNZ   @RF00252                                            0252 00520000
*             DO;                                                  0253 00521000
*               FCHAIN = '0'B;      /* NO MSG UPDATE           Y02676*/ 00522000
         NI    FCHAIN,B'11101111'                                  0254 00523000
*               GOTO NOCHN1;        /* SKIP READ OF OLD LAST   Y02676*/ 00524000
         B     NOCHN1                                              0255 00525000
*             END;                                                 0256 00526000
*         FCHAIN = '1'B;            /* SET FLAG FOR MSG CHAIN        */ 00527000
@RF00252 OI    FCHAIN,B'00010000'                                  0257 00528000
*         RNUSM = USDEND(I);        /* RBA FOR READ OF         Y02676   00529000
*                                      OLD LAST MSG                  */ 00530000
         LR    @10,I                                               0258 00531000
         MH    @10,@CH00205                                        0258 00532000
         L     @08,USDPTR-1                                        0258 00533000
         LA    @08,0(,@08)                                         0258 00534000
         ALR   @08,@10                                             0258 00535000
         AL    @08,@CF00551                                        0258 00536000
         MVC   RNUSM(3),USDEND-10(@08)                             0258 00537000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00538000
* /*                                                                 */ 00539000
* /*      READ FORMER LAST MAIL MESSAGE RECORD                       */ 00540000
* /*                                                                 */ 00541000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00542000
*         SDIOPARM = SDIOPARM && SDIOPARM;  /* CLEAR PARM AREA       */ 00543000
         L     @10,IOPBASE                                         0259 00544000
         XC    SDIOPARM(20,@10),SDIOPARM(@10)                      0259 00545000
*         P1READ = '1'B;            /* SET FLAG FOR READ             */ 00546000
         OI    P1READ(@10),B'01000000'                             0260 00547000
*         PARMRBA = ADDR(RNUSM);    /* SET RBA ADDR OF REC TO BE READ*/ 00548000
         LA    @08,RNUSM                                           0261 00549000
         ST    @08,@TF00001                                        0261 00550000
         MVC   PARMRBA(4,@10),@TF00001                             0261 00551000
*         PARMIOAD = ADDR(MSGAREA); /* SET AREA ADDR                 */ 00552000
         LA    @08,MSGAREA                                         0262 00553000
         ST    @08,@TF00001                                        0262 00554000
         MVC   PARMIOAD(4,@10),@TF00001                            0262 00555000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00556000
         LR    R1,@10                                              0263 00557000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO READ USER MSG  */ 00558000
         L     @15,@CV00471                                        0264 00559000
         BALR  @14,@15                                             0264 00560000
*         RETC = R15;               /* SAVE RETURN CODE REG 15       */ 00561000
         ST    R15,RETC                                            0265 00562000
*         IF RETC > 0               /* IF RETURN CODE IS NOT ZERO    */ 00563000
*           THEN                    /* IO OPERATION WAS NOT SUCCESS  */ 00564000
         L     @10,RETC                                            0266 00565000
         LTR   @10,@10                                             0266 00566000
         BP    @RT00266                                            0266 00567000
*             GOTO BADIO;           /* ANALYZE ERROR AND GIVE WARNING*/ 00568000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00569000
* /*                                                                 */ 00570000
* /*      WRITE NEW MAIL MESSAGE RECORD IN FIRST FREE SPACE          */ 00571000
* /*      IN DATA SET                                                */ 00572000
* /*                                                                 */ 00573000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00574000
*NOCHN1:                            /* CHAIN FLAG HAS BEEN SET       */ 00575000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00576000
NOCHN1   L     @10,IOPBASE                                         0268 00577000
         XC    SDIOPARM(20,@10),SDIOPARM(@10)                      0268 00578000
*         P2WRDAF = '1'B;           /* SET FLAG FOR WRITE TYPE 'DAF' */ 00579000
         OI    P2WRDAF(@10),B'01000000'                            0269 00580000
*         PARMRBA  = ADDR(R1USPTR); /* SET RBA OF FIRST DIRECTORY REC   00581000
*                                      TO START BDAM EXTENDED SEARCH */ 00582000
         L     @08,R1PTR-1                                         0270 00583000
         LA    @08,0(,@08)                                         0270 00584000
         LA    @08,R1USPTR(,@08)                                   0270 00585000
         ST    @08,@TF00001                                        0270 00586000
         MVC   PARMRBA(4,@10),@TF00001                             0270 00587000
*         PARMIOAD = ADDR(MSGAREA2);/* SET AREA ADDR                 */ 00588000
         LA    @08,MSGAREA2                                        0271 00589000
         ST    @08,@TF00001                                        0271 00590000
         MVC   PARMIOAD(4,@10),@TF00001                            0271 00591000
*         PARMKEY  = USMKEY;        /* SET KEY TO BE WRITTEN         */ 00592000
         MVC   PARMKEY(1,@10),USMKEY                               0272 00593000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00594000
         LR    R1,@10                                              0273 00595000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO WRITE          */ 00596000
         L     @15,@CV00471                                        0274 00597000
         BALR  @14,@15                                             0274 00598000
*         RETC  = R15;              /* SAVE RETURN CODE REG 15       */ 00599000
         ST    R15,RETC                                            0275 00600000
*         IF RETC > 0               /* IF RETURN CODE IS NOT ZERO    */ 00601000
*           THEN                    /* IO OPERATION WAS NOT SUCCESS  */ 00602000
         L     @10,RETC                                            0276 00603000
         LTR   @10,@10                                             0276 00604000
         BP    @RT00276                                            0276 00605000
*             GO TO BADIOA;         /* ANALYZE ERROR AND GIVE WARNING*/ 00606000
*         USDEND(I) = PARMRBA(2:4); /* SET NEW CHAIN END PTR   Y02676*/ 00607000
         L     @10,USDPTR-1                                        0278 00608000
         LA    @10,0(,@10)                                         0278 00609000
         LR    @08,I                                               0278 00610000
         MH    @08,@CH00205                                        0278 00611000
         L     @01,IOPBASE                                         0278 00612000
         MVC   @ZT00001+1(3),PARMRBA+1(@01)                        0278 00613000
         L     @15,@ZT00001                                        0278 00614000
         ST    @15,@TF00001                                        0278 00615000
         ST    @08,@TF00002                                        0278 00616000
         ALR   @08,@10                                             0278 00617000
         AL    @08,@CF00551                                        0278 00618000
         MVC   USDEND-10(3,@08),@TF00001+1                         0278 00619000
*         IF FCHAIN = '1'B          /* TEST MSG CHAIN FLAG           */ 00620000
*           THEN                    /* YES, THERE IS PREVIOUS MSG    */ 00621000
         TM    FCHAIN,B'00010000'                                  0279 00622000
         BO    @RT00279                                            0279 00623000
*             GOTO CHAIN3;          /* UPDATE PREVIOUS USER MAIL MSG    00624000
*                                      RECORD AND REWRITE IT         */ 00625000
*         USDRBA(I) = PARMRBA(2:4); /* PUT FEEDBACK FROM WRITE INTO     00626000
*                                      DIRECTORY RECORD - START CHAIN*/ 00627000
         ST    @15,@TF00001                                        0281 00628000
         AL    @10,@TF00002                                        0281 00629000
         AL    @10,@CF00554                                        0281 00630000
         MVC   USDRBA-7(3,@10),@TF00001+1                          0281 00631000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00632000
* /*                                                                 */ 00633000
* /*      WRITE DIRECTORY RECORD UPDATED WITH PTR TO MSG RECORD      */ 00634000
* /*      JUST WRITTEN                                               */ 00635000
* /*                                                                 */ 00636000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00637000
*CHAIN5:                            /* DIRECTORY RECORD UPDATE Y02676*/ 00638000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00639000
CHAIN5   L     @10,IOPBASE                                         0282 00640000
         XC    SDIOPARM(20,@10),SDIOPARM(@10)                      0282 00641000
*         P2WRDI = '1'B;            /* SET PARM FLAG FOR WRITE 'DI'  */ 00642000
         OI    P2WRDI(@10),B'10000000'                             0283 00643000
*         PARMRBA = ADDR(RNUSD);    /* SET RBA OF RECORD TO WRITE    */ 00644000
         LA    @08,RNUSD                                           0284 00645000
         ST    @08,@TF00001                                        0284 00646000
         MVC   PARMRBA(4,@10),@TF00001                             0284 00647000
*         PARMIOAD = ADDR(DIRAREA); /* AREA ADDR OF RECORD TO WRITE  */ 00648000
         LA    @08,DIRAREA                                         0285 00649000
         ST    @08,@TF00001                                        0285 00650000
         MVC   PARMIOAD(4,@10),@TF00001                            0285 00651000
*         PARMKEY = USDKEY;         /* SET KEY FOR USER DIRECTORY    */ 00652000
         MVC   PARMKEY(1,@10),USDKEY                               0286 00653000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00654000
         LR    R1,@10                                              0287 00655000
*         CALL  IEEVSDIO;           /* CALL IO TO WRITE USER DIR. RC */ 00656000
         L     @15,@CV00471                                        0288 00657000
         BALR  @14,@15                                             0288 00658000
*         RETC = R15;               /* SAVE RETURN CODE REG15        */ 00659000
         ST    R15,RETC                                            0289 00660000
*         IF RETC > 0               /* IF RETURN CODE IS NOT ZERO    */ 00661000
*           THEN                    /* IO OPERATION WAS NOT SUCCESS  */ 00662000
         L     @10,RETC                                            0290 00663000
         LTR   @10,@10                                             0290 00664000
         BP    @RT00290                                            0290 00665000
*             GOTO BADIO;           /* ANALYZE ERROR AND GIVE WARNING*/ 00666000
*         IF VALCNT = IDCNT         /* IS VALID CNT = TOTAL CNT      */ 00667000
*           THEN                    /* ALL USERIDS HAVE BEEN DONE    */ 00668000
         CLC   VALCNT(1),IDCNT                                     0292 00669000
         BE    @RT00292                                            0292 00670000
*             GOTO EXITCODE;        /* CLEANUP AND RETURN            */ 00671000
*           ELSE                    /* MORE USERIDS TO PROCESS       */ 00672000
*             GOTO SCUSD2;          /* CONTINUE SCAN OF USER DIR REC */ 00673000
         B     SCUSD2                                              0294 00674000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00675000
* /*                                                                 */ 00676000
* /*      UPDATE CHAIN PTR IN PREVIOUS MSG RECORD AND WRITE          */ 00677000
* /*                                                                 */ 00678000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00679000
*CHAIN3:                            /* PREVIOUS MSG RECORD UPDATE    */ 00680000
*         FCHAIN = '0'B;            /* TURN OFF CHAIN FLAG           */ 00681000
CHAIN3   NI    FCHAIN,B'11101111'                                  0295 00682000
*         USMPTR = ADDR(MSGAREA);   /* SET BASE, LAST MSG RCD  Y02676*/ 00683000
         LA    @10,MSGAREA                                         0296 00684000
         ST    @10,@TF00001                                        0296 00685000
         MVC   USMPTR(3),@TF00001+1                                0296 00686000
*         USMNEXT = PARMRBA(2:4);   /* NEW 'NEXT' FOR          Y02676   00687000
*                                      FORMER LAST MSG               */ 00688000
         L     @08,IOPBASE                                         0297 00689000
         MVC   USMNEXT(3,@10),PARMRBA+1(@08)                       0297 00690000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00691000
         XC    SDIOPARM(20,@08),SDIOPARM(@08)                      0298 00692000
*         P2WRDI = '1'B;            /* SET PARM FLAG FOR WRITE 'DI'  */ 00693000
         OI    P2WRDI(@08),B'10000000'                             0299 00694000
*         PARMKEY = USMKEY;         /* SET KEY FOR USER MAIL MSG REC */ 00695000
         MVC   PARMKEY(1,@08),USMKEY                               0300 00696000
*         PARMRBA = ADDR(RNUSM);    /* SET RBA OF RECORD TO UPDATE   */ 00697000
         LA    @15,RNUSM                                           0301 00698000
         ST    @15,@TF00001                                        0301 00699000
         MVC   PARMRBA(4,@08),@TF00001                             0301 00700000
*         PARMIOAD = ADDR(MSGAREA); /* SET AREA ADDRESS              */ 00701000
         ST    @10,@TF00001                                        0302 00702000
         MVC   PARMIOAD(4,@08),@TF00001                            0302 00703000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00704000
         LR    R1,@08                                              0303 00705000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO WRITE          */ 00706000
         L     @15,@CV00471                                        0304 00707000
         BALR  @14,@15                                             0304 00708000
*         RETC = R15;               /* SAVE RETURN CODE REG 15       */ 00709000
         ST    R15,RETC                                            0305 00710000
*         IF RETC ^= 0              /* RETURN CODE BAD         Y02676*/ 00711000
*           THEN                    /* YES, I/O FAILED         Y02676*/ 00712000
         L     @10,RETC                                            0306 00713000
         LTR   @10,@10                                             0306 00714000
         BNZ   @RT00306                                            0306 00715000
*             GOTO BADIO;           /* GIVE WARNING            Y02676*/ 00716000
*         GOTO CHAIN5;              /* DO DIR RCD UPDATE       Y02676*/ 00717000
         B     CHAIN5                                              0308 00718000
* /*                         T E R M I N A L                         */ 00719000
* /*                            E R R O R                            */ 00720000
* /*                         M E S S A G E S                         */ 00721000
* /*                                                                 */ 00722000
*BADIOA:                  /*'WRITE IN NEXT FREE SPACE'NOT SUCCESSFUL */ 00723000
*         FFLUSH = '1'B;            /* SET FLAG TO FLUSH STACK AND 0309 00724000
*                                      CLEAR THE INPUT QUEUE         */ 00725000
BADIOA   OI    FFLUSH,B'00000100'                                  0309 00726000
*         IF RETC = DSFULL          /* CHECK RET CODE FROM IO RTN    */ 00727000
*           THEN                    /* USER MAIL SECTION WAS FULL    */ 00728000
         L     @10,RETC                                            0310 00729000
         MVC   @ZT00003+3(1),DSFULL                                0310 00730000
         C     @10,@ZT00003                                        0310 00731000
         BNE   @RF00310                                            0310 00732000
*             DO;                   /* ISSUE WARNING MSG TO SENDER   */ 00733000
*            PTLTEXT(1:TPNLNG) = MSG4TPN; /* PUT MSG ID INTO BUFR   */  00734000
         SR    @10,@10                                             0312 00735000
         IC    @10,TPNLNG                                          0312 00736000
         LR    @08,@10                                             0312 00737000
         BCTR  @08,0                                               0312 00738000
         L     @15,@CA00303                                        0312 00739000
         L     @15,MSG4P-MSGTABLE(,@15)                            0312 00740000
         EX    @08,@SM00556                                        0312 00741000
*                                  /* PUT MSG TEXT IN PUTLINE BUFR  */  00742000
*             PTLTEXT(TPNLNG+1 : TPNLNG+MSG4LNG) = MSG4TEXT;       0313 00743000
         LA    @08,PTLTEXT(@10)                                    0313 00744000
         SR    @14,@14                                             0313 00745000
         IC    @14,MSG4LNG(,@15)                                   0313 00746000
         LR    @07,@14                                             0313 00747000
         BCTR  @07,0                                               0313 00748000
         EX    @07,@SM00558                                        0313 00749000
*             PTLTEXT(TPNLNG+MSG4SECT : TPNLNG+MSG4SECT+4) = MSG4MAIL;  00750000
         SR    @08,@08                                             0314 00751000
         IC    @08,MSG4SECT(,@15)                                  0314 00752000
         AR    @08,@10                                             0314 00753000
         LA    @01,PTLTEXT-1(@08)                                  0314 00754000
         MVC   0(5,@01),MSG4MAIL(@15)                              0314 00755000
*             PTLLL = MSG4LNG + TPNLNG + 1;                        0315 00756000
         LA    @08,1                                               0315 00757000
         AR    @14,@10                                             0315 00758000
         AR    @14,@08                                             0315 00759000
         STH   @14,PTLLL                                           0315 00760000
*             PTLOFFST = 0;         /* SET OFFSET = 0, NO MSG INSERT */ 00761000
         SR    @10,@10                                             0316 00762000
         STH   @10,PTLOFFST                                        0316 00763000
*             PTLSNEXT = 0;         /* PTR TO 2ND LEVEL MSG = ZERO   */ 00764000
         ST    @10,PTLSNEXT                                        0317 00765000
*             PTLSCNT = 1;          /* NO. OF MSG SEGMENTS = 1       */ 00766000
         ST    @08,PTLSCNT                                         0318 00767000
*             PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT    */ 00768000
         LA    @10,PTLBUF                                          0319 00769000
         ST    @10,PTLSPTR                                         0319 00770000
*             GOTO WARNMSG;         /* ISSUE PUTLINE TO SENDER       */ 00771000
         B     WARNMSG                                             0320 00772000
*             END;                                                 0321 00773000
*           ELSE;                   /* DATA SET NOT FULL. CHECK FOR     00774000
*                                      OTHER ERRORS IN BADIO         */ 00775000
@RF00310 DS    0H                                                  0323 00776000
*BADIO:                             /* TEST RETURN CODE FROM IO RTN  */ 00777000
*         FFLUSH = '1'B;            /* SET FLAG TO FLUSH STACK AND 0323 00778000
*                                      CLEAR THE INPUT QUEUE         */ 00779000
BADIO    OI    FFLUSH,B'00000100'                                  0323 00780000
*         IF RETC = NOCORE          /* TEST RET CODE FOR 'NO CORE'   */ 00781000
*           THEN                    /* YES, IO ROUTINE DID NOT HAVE     00782000
*                                      ENOUGH CORE FOR ITS GETMAIN   */ 00783000
         L     @10,RETC                                            0324 00784000
         MVC   @ZT00003+3(1),NOCORE                                0324 00785000
         C     @10,@ZT00003                                        0324 00786000
         BE    @RT00324                                            0324 00787000
*             GOTO NOMAIN;          /* ISSUE WARNING MSG -  NOT ENOUGH  00788000
*                                      MAIN STORAGE TO EXECUTE COMMAND* 00789000
*           ELSE                    /* ENOUGH CORE AVAILABLE,      0326 00790000
*                                      ERROR IN BROADCAST DATA SET,     00791000
*                                      NOT IN SEND PROCESSOR         */ 00792000
*             GOTO NOTUSABL;        /* ISSUE WARNING MSG -         0326 00793000
*                                      BROADCAST DATA SET NOT USABLE */ 00794000
*                                                                  0326 00795000
         B     NOTUSABL                                            0326 00796000
*NOMAIN:        /* NOT ENOUGH MAIN STORAGE TO EXECUTE COMMAND        */ 00797000
*         PTLTEXT(1:TPNLNG) = MSGCTPN; /* PUT MSG ID INTO BUFFER     */ 00798000
NOMAIN   SR    @10,@10                                             0327 00799000
         IC    @10,TPNLNG                                          0327 00800000
         LR    @08,@10                                             0327 00801000
         BCTR  @08,0                                               0327 00802000
         L     @15,@CA00303                                        0327 00803000
         L     @15,MSGCP-MSGTABLE(,@15)                            0327 00804000
         EX    @08,@SM00560                                        0327 00805000
*                                   /* PUT MSG TEXT IN PUTLINE BUFR  */ 00806000
*         PTLTEXT(TPNLNG+1:TPNLNG+MSGCLNG) = MSGCTEXT;             0328 00807000
         LA    @08,PTLTEXT(@10)                                    0328 00808000
         SR    @14,@14                                             0328 00809000
         IC    @14,MSGCLNG(,@15)                                   0328 00810000
         LR    @07,@14                                             0328 00811000
         BCTR  @07,0                                               0328 00812000
         EX    @07,@SM00562                                        0328 00813000
*         PTLLL = MSGCLNG + TPNLNG +4; /* SET TOTAL LENGTH BUFFER    */ 00814000
         AR    @14,@10                                             0329 00815000
         AH    @14,@CH00152                                        0329 00816000
         STH   @14,PTLLL                                           0329 00817000
*         PTLOFFST = 0;             /* SET OFFSET = 0, NO MSG INSERT */ 00818000
         SR    @10,@10                                             0330 00819000
         STH   @10,PTLOFFST                                        0330 00820000
*         PTLSNEXT = 0;             /* PTR TO 2ND LEVEL MSG = ZERO   */ 00821000
         ST    @10,PTLSNEXT                                        0331 00822000
*         PTLSCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 00823000
         MVC   PTLSCNT(4),@CF00035                                 0332 00824000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT        */ 00825000
         LA    @10,PTLBUF                                          0333 00826000
         ST    @10,PTLSPTR                                         0333 00827000
*         GOTO WARNMSG;             /* ISSUE PUTLINE TO ACCOUNT TERM */ 00828000
*                                                                  0334 00829000
         B     WARNMSG                                             0334 00830000
*BADDAIR:                 /* CALL TO DAIR NOT SUCCESSFUL             */ 00831000
*         FFLUSH = '1'B;            /* SET FLAG TO FLUSH STACK AND 0335 00832000
*                                      CLEAR THE INPUT QUEUE         */ 00833000
BADDAIR  OI    FFLUSH,B'00000100'                                  0335 00834000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00835000
*/*                                                                  */ 00836000
*/*  CALL IKJEFF18 TO ANALYZE THE DAIR FAILURE AND ISSUE WARNING MSG */ 00837000
*/*                                                                  */ 00838000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00839000
*         F18DAPL = ADDR(DAPL);     /* SET DAPL PTR PARM       Y02676*/ 00840000
         MVC   F18DAPL(4),DAPLPTR                                  0336 00841000
*         F18DARC = ADDR(DAIRRETC); /* SET RET CODE PTR PARM   Y02676*/ 00842000
         LA    @10,DAIRRETC                                        0337 00843000
         ST    @10,F18DARC                                         0337 00844000
*         F18F02A = ADDR(F18F02);   /* SET IKJEFF02 PTR PARM   Y02676*/ 00845000
         LA    @10,F18F02                                          0338 00846000
         ST    @10,F18F02A                                         0338 00847000
*         F18CLNOA = ADDR(F18CLNO); /* SET CALL NUMBER PARM    Y02676*/ 00848000
         LA    @10,F18CLNO                                         0339 00849000
         ST    @10,F18CLNOA                                        0339 00850000
*         R1 = ADDR(F18PARMS);      /* SET PARM REGISTER       Y02676*/ 00851000
         LA    R1,F18PARMS                                         0340 00852000
*         GEN (LINK EP=IKJEFF18);   /* LINK TO DAIR ERROR      Y02676   00853000
*                                      ANALYSIS ROUTINE              */ 00854000
         LINK EP=IKJEFF18                                               00855000
*         GOTO EXITCODE;            /* CLEANUP AND RETURN TO TMP     */ 00856000
*                                                                  0342 00857000
*                                                                  0342 00858000
         B     EXITCODE                                            0342 00859000
*NOTUSABL:                /* BROADCAST DATA SET IS NOT USABLE NOW -     00860000
*                            ISSUE A WARNING MSG TO SENDER           */ 00861000
*        PTLTEXT(1:TPNLNG) = MSG5TPN;   /* PUT MSG ID INTO BUFR     */  00862000
NOTUSABL SR    @10,@10                                             0343 00863000
         IC    @10,TPNLNG                                          0343 00864000
         LR    @08,@10                                             0343 00865000
         BCTR  @08,0                                               0343 00866000
         L     @15,@CA00303                                        0343 00867000
         L     @15,MSG5P-MSGTABLE(,@15)                            0343 00868000
         EX    @08,@SM00564                                        0343 00869000
*                                  /* PUT MSG TEXT IN PUTLINE BUFR  */  00870000
*        PTLTEXT(TPNLNG+1 : TPNLNG+MSG5LNG) = MSG5TEXT;            0344 00871000
         LA    @08,PTLTEXT(@10)                                    0344 00872000
         SR    @14,@14                                             0344 00873000
         IC    @14,MSG5LNG(,@15)                                   0344 00874000
         LR    @07,@14                                             0344 00875000
         BCTR  @07,0                                               0344 00876000
         EX    @07,@SM00566                                        0344 00877000
*                                  /* INDICATE 2ND LVL MSG WITH '+' */  00878000
*        PTLTEXT(TPNLNG+MSG5LNG+1 ) = LVL2IND;                     0345 00879000
         LR    @08,@10                                             0345 00880000
         AR    @08,@14                                             0345 00881000
         LA    @01,PTLTEXT(@08)                                    0345 00882000
         MVC   0(1,@01),LVL2IND                                    0345 00883000
*        PTLLL = MSG5LNG + TPNLNG + 5;  /* SET TOTAL LENGTH OF BUFR */  00884000
         AR    @14,@10                                             0346 00885000
         AH    @14,@CH00344                                        0346 00886000
         STH   @14,PTLLL                                           0346 00887000
*         PTLOFFST = 0;             /* SET OFFSET = 0, NO MSG INSERT */ 00888000
         SR    @10,@10                                             0347 00889000
         STH   @10,PTLOFFST                                        0347 00890000
*         PTLSCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 00891000
         MVC   PTLSCNT(4),@CF00035                                 0348 00892000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT        */ 00893000
         LA    @10,PTLBUF                                          0349 00894000
         ST    @10,PTLSPTR                                         0349 00895000
*/*      SET UP SECOND LEVEL MESSAGE                                */  00896000
*         IF RETC = BADFMT          /* TEST FOR BAD FORMAT     Y02676*/ 00897000
*           THEN                    /* YES, BAD FORMAT DS      Y02676*/ 00898000
         L     @10,RETC                                            0350 00899000
         MVC   @ZT00003+3(1),BADFMT                                0350 00900000
         C     @10,@ZT00003                                        0350 00901000
         BNE   @RF00350                                            0350 00902000
*             PL2SPTR = MSG5L2(3);  /* PTR TO 2ND LVL MSG SEG- Y02676   00903000
*                                      'BAD FORMAT'                  */ 00904000
         L     @10,MSG5LVL2(,@15)                                  0351 00905000
         MVC   PL2SPTR(4),MSG5L2+8(@10)                            0351 00906000
*        IF RETC = OPENERR         /* TEST FOR OPEN ERROR           */  00907000
*          THEN                    /* YES, OPEN ERROR ON BROADCAST  */  00908000
@RF00350 L     @10,RETC                                            0352 00909000
         MVC   @ZT00003+3(1),OPENERR                               0352 00910000
         C     @10,@ZT00003                                        0352 00911000
         BNE   @RF00352                                            0352 00912000
*            PL2SPTR = MSG5L2(2);  /* PTR TO 2ND LVL MSG SEGMENT - 0353 00913000
*                                     'CANNOT OPEN DATA SET'        */  00914000
         L     @10,@CA00303                                        0353 00915000
         L     @10,MSG5P-MSGTABLE(,@10)                            0353 00916000
         L     @10,MSG5LVL2(,@10)                                  0353 00917000
         MVC   PL2SPTR(4),MSG5L2+4(@10)                            0353 00918000
*          ELSE                                                    0354 00919000
*            PL2SPTR = MSG5L2(1);  /* PTR TO 2ND LVL MSG SEGMENT - 0354 00920000
*                                     'I/O SYNAD ERROR'             */  00921000
*                                                                  0354 00922000
         B     @RC00352                                            0354 00923000
@RF00352 L     @10,@CA00303                                        0354 00924000
         L     @10,MSG5P-MSGTABLE(,@10)                            0354 00925000
         L     @10,MSG5LVL2(,@10)                                  0354 00926000
         MVC   PL2SPTR(4),MSG5L2(@10)                              0354 00927000
*MSG5OUT:               /* FINISH SETUP FOR PUTLINE                 */  00928000
*        PTLSNEXT = ADDR(PTLEVEL2); /* PTR TO 2ND LEVEL MSG         */  00929000
@RC00352 DS    0H                                                  0355 00930000
MSG5OUT  LA    @10,PTLEVEL2                                        0355 00931000
         ST    @10,PTLSNEXT                                        0355 00932000
*        PL2NEXT= 0;               /* PTR TO 3RD LEVEL MSG = 0      */  00933000
         SR    @10,@10                                             0356 00934000
         ST    @10,PL2NEXT                                         0356 00935000
*        PL2SCNT = 1;              /* SEGMENT COUNT = 1             */  00936000
         MVC   PL2SCNT(4),@CF00035                                 0357 00937000
*        GOTO WARNMSG;             /* PUTLINE MSG TO SENDER         */  00938000
*                                                                  0358 00939000
*                                                                  0358 00940000
         B     WARNMSG                                             0358 00941000
*BADPARSE:                        /* NON-ZERO RETURN CODE FROM PARSE */ 00942000
*         FFLUSH = '1'B;            /* SET FLAG TO FLUSH STACK AND 0359 00943000
*                                      CLEAR THE INPUT QUEUE         */ 00944000
BADPARSE OI    FFLUSH,B'00000100'                                  0359 00945000
*        IF COMRETC = PANOSPAC    /* CHECK RET CODE FOR 'NO SPACE'   */ 00946000
*          THEN                   /* YES, NOT ENOUGH CORE FOR PARSE  */ 00947000
         LH    @10,COMRETC                                         0360 00948000
         MVC   @ZT00003+3(1),PANOSPAC                              0360 00949000
         C     @10,@ZT00003                                        0360 00950000
         BE    @RT00360                                            0360 00951000
*            GOTO NOMAIN;         /* GIVE WARNING MSG                */ 00952000
*        IF COMRETC = PANOPRMT    /* CHECK RET CODE FOR 'NO PROMPT'     00953000
*                                                               M2583*/ 00954000
*          THEN                   /* YES, SENDER IN 'NO PROMPT' MODE    00955000
*                                                               M2583*/ 00956000
         MVC   @ZT00003+3(1),PANOPRMT                              0362 00957000
         C     @10,@ZT00003                                        0362 00958000
         BE    @RT00362                                            0362 00959000
*            GOTO EXIT3;          /* TERMINATE WITH NO ACTION, REQUIRD  00960000
*                                    PROMPTING NOT POSSIBLE     M2583*/ 00961000
*        PL2SPTR = MSGBL2(3);     /* SET PTR TO FIRST MSG SEGMENT  0364 00962000
*                                     FOR 2ND LEVEL MSG -          0364 00963000
*                                     'PARSE  ERROR CODE'            */ 00964000
         L     @10,@CA00303                                        0364 00965000
         L     @10,MSGBP-MSGTABLE(,@10)                            0364 00966000
         L     @10,MSGBLVL2(,@10)                                  0364 00967000
         MVC   PL2SPTR(4),MSGBL2+8(@10)                            0364 00968000
*        GOTO CONVRETC;           /* CONVERT PARSE ERROR CODE FOR MSG*/ 00969000
*                                                                  0365 00970000
*                                                                  0365 00971000
         B     CONVRETC                                            0365 00972000
*BADTPUT:                 /* NON-ZERO RETURN CODE FROM TPUT          */ 00973000
*         FFLUSH = '1'B;            /* SET FLAG TO FLUSH STACK AND 0366 00974000
*                                      CLEAR THE INPUT QUEUE         */ 00975000
BADTPUT  OI    FFLUSH,B'00000100'                                  0366 00976000
*        PL2SPTR = MSGBL2(2);     /* SET PTR TO FIRST MSG SEGMENT  0367 00977000
*                                     FOR 2ND LEVEL MSG -          0367 00978000
*                                     'TPUT   ERROR CODE'            */ 00979000
         L     @10,@CA00303                                        0367 00980000
         L     @10,MSGBP-MSGTABLE(,@10)                            0367 00981000
         L     @10,MSGBLVL2(,@10)                                  0367 00982000
         MVC   PL2SPTR(4),MSGBL2+4(@10)                            0367 00983000
*        GOTO CONVRETC;           /* CONVERT TPUT ERROR CODE FOR MSG */ 00984000
*                                                                  0368 00985000
*                                                                  0368 00986000
         B     CONVRETC                                            0368 00987000
*BADPUTL:                    /* NON-ZERO RETURN CODE FROM PUTLINE    */ 00988000
*         FFLUSH = '1'B;            /* SET FLAG TO FLUSH STACK AND 0369 00989000
*                                      CLEAR THE INPUT QUEUE         */ 00990000
BADPUTL  OI    FFLUSH,B'00000100'                                  0369 00991000
*        IF COMRETC = PUNOSPAC    /* CHECK RET CODE FOR 'NO SPACE'   */ 00992000
*          THEN                   /* YES, NOT ENOUGH CORE FOR PUTLINE*/ 00993000
         LH    @10,COMRETC                                         0370 00994000
         MVC   @ZT00003+3(1),PUNOSPAC                              0370 00995000
         C     @10,@ZT00003                                        0370 00996000
         BE    @RT00370                                            0370 00997000
*            GOTO NOMAIN;         /* GIVE WARNING MSG                */ 00998000
*        IF FBADPUTL = '1'B       /* CHECK FOR PREVIOUS PUTLINE ERROR*/ 00999000
*          THEN                   /* YES, 2ND PUTLINE ERROR          */ 01000000
         TM    FBADPUTL,B'00001000'                                0372 01001000
         BO    @RT00372                                            0372 01002000
*            GOTO EXIT0;          /* CLEANUP AND EXIT QUIETLY        */ 01003000
*        FBADPUTL = '1'B;         /* SET FLAG FOR PUTLINE ERROR      */ 01004000
         OI    FBADPUTL,B'00001000'                                0374 01005000
*        PL2SPTR = MSGBL2(1);     /* SET PTR TO FIRST MSG SEGMENT  0375 01006000
*                                     FOR 2ND LEVEL MSG -          0375 01007000
*                                     'PUTLINE ERROR CODE'           */ 01008000
         L     @10,@CA00303                                        0375 01009000
         L     @10,MSGBP-MSGTABLE(,@10)                            0375 01010000
         L     @10,MSGBLVL2(,@10)                                  0375 01011000
         MVC   PL2SPTR(4),MSGBL2(@10)                              0375 01012000
*                                 /* CONVERT PUTLINE ERR CODE FOR MSG*/ 01013000
*                                                                  0376 01014000
*CONVRETC:                /* CONVERT RETURN CODE TO EBCDIC FOR MSG  */  01015000
*        R5 = COMRETC;             /* REG 5 = RETURN CODE FROM COMMON*/ 01016000
CONVRETC LH    R5,COMRETC                                          0376 01017000
*        GEN;                                                      0377 01018000
         CVD   R5,WORK8               CONVERT RETURN CODE TO DECIMAL    01019000
         UNPK  WORK4(4),WORK8+5(3)    UNPACK INTO EBCDIC FORM           01020000
         OI    WORK4+3,X'F0'          CHANGE SIGN TO HEX'F0'            01021000
*        SRERRCD = WORK4(3:4);        /* SET FIELD FOR MSG INSERT  0378 01022000
*                                        OF ERROR CODE              */  01023000
         MVC   SRERRCD(2),WORK4+2                                  0378 01024000
*        SD2LL = 6;                   /* LENGTH OF BFR INCL HDR(4)  */  01025000
         MVC   SD2LL(2),@CH00513                                   0379 01026000
*        SD2OFFST = 29;               /* SET OFFSET FOR ERROR CODE 0380 01027000
*                                        INSERTION IN MSG TEXT     0380 01028000
*                                        FOR 2ND LEVEL MSG          */  01029000
         MVC   SD2OFFST(2),@CH00514                                0380 01030000
*        SD2TEXT = SRERRCD;           /* INSERTION TEXT, ERROR CODE */  01031000
*                                                                  0381 01032000
         MVC   SD2TEXT(2),SRERRCD                                  0381 01033000
*        PTLTEXT(1:TPNLNG) = MSGBTPN; /* PUT MSG ID INTO BUFFER     */  01034000
         SR    @10,@10                                             0382 01035000
         IC    @10,TPNLNG                                          0382 01036000
         LR    @08,@10                                             0382 01037000
         BCTR  @08,0                                               0382 01038000
         L     @15,@CA00303                                        0382 01039000
         L     @15,MSGBP-MSGTABLE(,@15)                            0382 01040000
         EX    @08,@SM00568                                        0382 01041000
*        PTLTEXT(TPNLNG+1 : MSGBLNG+TPNLNG) = MSGBTEXT;            0383 01042000
         LA    @08,PTLTEXT(@10)                                    0383 01043000
         SR    @14,@14                                             0383 01044000
         IC    @14,MSGBLNG(,@15)                                   0383 01045000
         AR    @14,@10                                             0383 01046000
         LCR   @10,@10                                             0383 01047000
         AR    @10,@14                                             0383 01048000
         BCTR  @10,0                                               0383 01049000
         EX    @10,@SM00570                                        0383 01050000
*        PTLOFFST = 0;                /* NO MSG INSERT ON LEVEL 1   */  01051000
         SR    @10,@10                                             0384 01052000
         STH   @10,PTLOFFST                                        0384 01053000
*        PTLLL = MSGBLNG + TPNLNG + 4; /* LENGTH OF BUFR INCL HDR(4)*/  01054000
         AH    @14,@CH00152                                        0385 01055000
         STH   @14,PTLLL                                           0385 01056000
*        PTLSNEXT = ADDR(PTLEVEL2);   /* PTR TO 2ND LEVEL MSG       */  01057000
         LA    @08,PTLEVEL2                                        0386 01058000
         ST    @08,PTLSNEXT                                        0386 01059000
*        PTLSCNT = 1;                 /* 1 SEGMENT FOR LEVEL 1      */  01060000
         MVC   PTLSCNT(4),@CF00035                                 0387 01061000
*        PTLSPTR = ADDR(PTLBUF);      /* PTR TO MSG SEGMENT         */  01062000
         LA    @08,PTLBUF                                          0388 01063000
         ST    @08,PTLSPTR                                         0388 01064000
*        PL2NEXT = 0;                 /* PTR TO 3RD LEVEL MSG = 0   */  01065000
         ST    @10,PL2NEXT                                         0389 01066000
*        PL2SCNT = 2;                 /* 2 SEGMENTS FOR LEVEL 2     */  01067000
         MVC   PL2SCNT(4),@CF00123                                 0390 01068000
*        PL2SPT2 = ADDR(SEGDESC2);    /* PTR TO MSG SEG 2 FOR LVL 2 */  01069000
         LA    @10,SEGDESC2                                        0391 01070000
         ST    @10,PL2SPT2                                         0391 01071000
*        GOTO WARNMSG;                /* 'PUTLINE' MSG TO SENDER   0392 01072000
*                                        'COMMAND SYSTEM ERROR+'    */  01073000
         B     WARNMSG                                             0392 01074000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01075000
* /*                                                                 */ 01076000
* /*            -    P    U    T    L    I    N    E    -            */ 01077000
* /*                                                                 */ 01078000
* /*      'PUTLINE' WARNING MSG TO TERMINAL THAT ISSUED 'SEND'       */ 01079000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01080000
*WARNMSG:                 /* ISSUE WARNING MSG TO SENDER             */ 01081000
*         R1 = IOPLPTR;   /* SET REG 1 TO IOPL ADDR FOR PUTLINE      */ 01082000
WARNMSG  L     R1,IOPLPTR                                          0393 01083000
*                                   /* ISSUE PUTLINE                 */ 01084000
* GEN;                                                             0394 01085000
          PUTLINE  PARM=PUTLL,OUTPUT=(PTLSEGBL,MULTLVL),MF=(E,(1))      01086000
*         COMRETC = R15;            /* SAVE REG 15 RETURN CODE       */ 01087000
         STH   R15,COMRETC                                         0395 01088000
*         IF COMRETC > 0            /* CHECK PUTLINE RETURN CODE     */ 01089000
*           THEN                    /* NON-ZERO RET CODE, ERROR      */ 01090000
         LH    @10,COMRETC                                         0396 01091000
         LTR   @10,@10                                             0396 01092000
         BP    @RT00396                                            0396 01093000
*             GOTO BADPUTL;         /* ANALYZE PUTLINE ERROR         */ 01094000
*         GOTO EXITCODE;            /* CLEANUP AND RETURN TO TMP     */ 01095000
         B     EXITCODE                                            0398 01096000
* /*                         W A R N I N G                           */ 01097000
* /*                        M E S S A G E S                          */ 01098000
* /*                                                                 */ 01099000
*MSG0OUT:                /* FORMAT WARNING MSG FOR TRUNCATED MSG TEXT*/ 01100000
*        FMSG0 = '0'B;             /* TURN OFF MSG 0 FLAG           */  01101000
MSG0OUT  NI    FMSG0,B'11111110'                                   0399 01102000
*        PTLTEXT(1:TPNLNG) = MSGATPN;   /* PUT MSG ID INTO BUFR     */  01103000
         SR    @10,@10                                             0400 01104000
         IC    @10,TPNLNG                                          0400 01105000
         LR    @08,@10                                             0400 01106000
         BCTR  @08,0                                               0400 01107000
         L     @15,@CA00303                                        0400 01108000
         L     @15,MSGAP-MSGTABLE(,@15)                            0400 01109000
         EX    @08,@SM00573                                        0400 01110000
*                                  /* PUT MSG TEXT IN PUTLINE BUFR  */  01111000
*        PTLTEXT(TPNLNG+1 : TPNLNG+MSGALNG) = MSGATEXT;            0401 01112000
         LA    @08,PTLTEXT(@10)                                    0401 01113000
         SR    @14,@14                                             0401 01114000
         IC    @14,MSGALNG(,@15)                                   0401 01115000
         LR    @07,@14                                             0401 01116000
         BCTR  @07,0                                               0401 01117000
         EX    @07,@SM00575                                        0401 01118000
*        PTLLL = MSGALNG + TPNLNG + 4;  /* SET TOTAL LENGTH BUFR   0402 01119000
*                                      INCLUDING 4-BYTE HEADER       */ 01120000
         AR    @14,@10                                             0402 01121000
         AH    @14,@CH00152                                        0402 01122000
         STH   @14,PTLLL                                           0402 01123000
*         PTLOFFST = 0;             /* SET OFFSET = 0, NO MSG INSERT */ 01124000
         SR    @10,@10                                             0403 01125000
         STH   @10,PTLOFFST                                        0403 01126000
*         PTLSCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 01127000
         MVC   PTLSCNT(4),@CF00035                                 0404 01128000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT        */ 01129000
         LA    @08,PTLBUF                                          0405 01130000
         ST    @08,PTLSPTR                                         0405 01131000
*         PTLSNEXT = 0;             /* PTR TO 2ND LEVEL MSG = ZERO   */ 01132000
         ST    @10,PTLSNEXT                                        0406 01133000
*         GOTO WARNMSG;             /* ISSUE PUTLINE OF THIS MSG     */ 01134000
*                                                                  0407 01135000
         B     WARNMSG                                             0407 01136000
*MSG2OUT:                           /*   FORMAT WARNING MSG -      0408 01137000
*                                       'USERS (USERID) NOT LOGGED ON*/ 01138000
*         P = 1;                    /* INIT INDEX TO PUTLINE BUFFER  */ 01139000
MSG2OUT  LA    @10,1                                               0408 01140000
         STC   @10,P                                               0408 01141000
*        PTLTEXT(P:TPNLNG) = MSG2TPN;   /* PUT MSG ID INTO BUFR     */  01142000
         LA    @08,PTLTEXT-1(@10)                                  0409 01143000
         SR    @15,@15                                             0409 01144000
         IC    @15,TPNLNG                                          0409 01145000
         LR    @14,@15                                             0409 01146000
         SR    @14,@10                                             0409 01147000
         L     @07,@CA00303                                        0409 01148000
         L     @07,MSG2P-MSGTABLE(,@07)                            0409 01149000
         EX    @14,@SM00577                                        0409 01150000
*                                  /* PUT MSG TEXT BEGINNING IN BUFR*/  01151000
*        PTLTEXT(TPNLNG+1 : TPNLNG + MSG2BEGL)= MSG2BEG;           0410 01152000
         LA    @08,PTLTEXT(@15)                                    0410 01153000
         SR    @06,@06                                             0410 01154000
         IC    @06,MSG2BEGL(,@07)                                  0410 01155000
         LR    @14,@06                                             0410 01156000
         BCTR  @14,0                                               0410 01157000
         EX    @14,@SM00579                                        0410 01158000
*        P = P + MSG2BEGL+ TPNLNG; /* BUMP INDEX PAST BEGINNING TEXT*/  01159000
         AR    @10,@06                                             0411 01160000
         AR    @10,@15                                             0411 01161000
         STC   @10,P                                               0411 01162000
*        PTLTEXT(P) = ' ';         /* INSERT BLANK BEFORE USERIDS   */  01163000
         LA    @08,PTLTEXT-1(@10)                                  0412 01164000
         MVI   0(@08),C' '                                         0412 01165000
*        P = P + 1;                /* BUMP INDEX PAST BLANK         */  01166000
         AH    @10,@CH00035                                        0413 01167000
         STC   @10,P                                               0413 01168000
*M2LOOP:                  /* LOOP TO PUT USERIDS INTO MSG2 TEXT      */ 01169000
*         /* SCAN ENTIRE LIST OF USERIDS SPEC'D IN COMMAND, IDUSRID  */ 01170000
*         DO J = 1 TO IDCNT;                                       0414 01171000
M2LOOP   LA    @10,1                                               0414 01172000
         B     @DE00414                                            0414 01173000
@DL00414 DS    0H                                                  0415 01174000
*         IF IDUSRID(J) ^= BLNKID   /* IS THIS USERID ENTRY NONBLANK */ 01175000
*           THEN                    /* YES, THIS USER NOT HANDLED    */ 01176000
         SLA   @10,3                                               0415 01177000
         LA    @08,IDUSRID-8(@10)                                  0415 01178000
         CLC   0(8,@08),BLNKID                                     0415 01179000
         BE    @RF00415                                            0415 01180000
*             DO;                   /* ADD THIS USERID TO WARN MSG   */ 01181000
*               PTLTEXT(P:P+7) = IDUSRID(J); /* PUT USERID INTO MSG  */ 01182000
         SR    @08,@08                                             0417 01183000
         IC    @08,P                                               0417 01184000
         LA    @01,PTLTEXT-1(@08)                                  0417 01185000
         LA    @15,IDUSRID-8(@10)                                  0417 01186000
         MVC   0(8,@01),0(@15)                                     0417 01187000
*               P = P+ 8;           /* BUMP BUFFER INDEX P           */ 01188000
         AH    @08,@CH00055                                        0418 01189000
         STC   @08,P                                               0418 01190000
*             END;                  /* END OF INNER LOOP             */ 01191000
*         END M2LOOP;               /* END OF OUTER LOOP             */ 01192000
@RF00415 LA    @10,1                                               0420 01193000
         MVC   @ZT00003+3(1),J                                     0420 01194000
         A     @10,@ZT00003                                        0420 01195000
@DE00414 STC   @10,J                                               0420 01196000
         MVC   @ZT00003+3(1),IDCNT                                 0420 01197000
         C     @10,@ZT00003                                        0420 01198000
         BNH   @DL00414                                            0420 01199000
*                                  /* PUT MSG TEXT ENDING IN BUFR   */  01200000
*        PTLTEXT(P : P+MSG2ENDL-1) = MSG2END;                      0421 01201000
         SR    @10,@10                                             0421 01202000
         IC    @10,P                                               0421 01203000
         LA    @08,PTLTEXT-1(@10)                                  0421 01204000
         L     @15,@CA00303                                        0421 01205000
         L     @15,MSG2P-MSGTABLE(,@15)                            0421 01206000
         SR    @14,@14                                             0421 01207000
         IC    @14,MSG2ENDL(,@15)                                  0421 01208000
         LR    @07,@14                                             0421 01209000
         BCTR  @07,0                                               0421 01210000
         EX    @07,@SM00581                                        0421 01211000
*        P = P + MSG2ENDL -1;      /* BUMP INDEX TO LENGTH OF MSG   */  01212000
         AR    @10,@14                                             0422 01213000
         BCTR  @10,0                                               0422 01214000
         STC   @10,P                                               0422 01215000
*         PTLLL = P+4;              /* PUTLINE BUFFER LENGTH INCLUDING  01216000
*                                      4-BYTE HEADER                 */ 01217000
         AH    @10,@CH00152                                        0423 01218000
         STH   @10,PTLLL                                           0423 01219000
*        PTLSNEXT = 0;             /* PTR TO 2ND LEVEL MSG = ZERO   */  01220000
         SR    @10,@10                                             0424 01221000
         ST    @10,PTLSNEXT                                        0424 01222000
*         PTLSCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 01223000
         MVC   PTLSCNT(4),@CF00035                                 0425 01224000
*         PTLOFFST = 0;             /* SET OFFSET = 0, NO MSG INSERT */ 01225000
         STH   @10,PTLOFFST                                        0426 01226000
*         PTLSPTR = ADDR(PTLBUF);  /* SET PTR TO MSG SEGMENT        */  01227000
         LA    @10,PTLBUF                                          0427 01228000
         ST    @10,PTLSPTR                                         0427 01229000
*         GOTO WARNMSG;                                            0428 01230000
         B     WARNMSG                                             0428 01231000
*MSG7OUT:                           /* FORMAT WARNING MSG 7          */ 01232000
*         FMSG7 = '0'B;             /* TURN MSG7 FLAG OFF            */ 01233000
MSG7OUT  NI    FMSG7,B'11101111'                                   0429 01234000
*        PTLTEXT(1 : TPNLNG) = MSG7TPN; /* PUT MSG ID IN BUFR       */  01235000
         SR    @10,@10                                             0430 01236000
         IC    @10,TPNLNG                                          0430 01237000
         LR    @08,@10                                             0430 01238000
         BCTR  @08,0                                               0430 01239000
         L     @15,@CA00303                                        0430 01240000
         L     @15,MSG7P-MSGTABLE(,@15)                            0430 01241000
         EX    @08,@SM00583                                        0430 01242000
*                                  /* PUT BEGINNING MSG TEXT IN BUFR*/  01243000
*        PTLTEXT(TPNLNG+1 : TPNLNG+MSG7BEGL) = MSG7BEG;            0431 01244000
         LA    @08,PTLTEXT(@10)                                    0431 01245000
         SR    @14,@14                                             0431 01246000
         IC    @14,MSG7BEGL(,@15)                                  0431 01247000
         LR    @07,@14                                             0431 01248000
         BCTR  @07,0                                               0431 01249000
         EX    @07,@SM00585                                        0431 01250000
*        P = TPNLNG + MSG7BEGL + 1; /* BUMP INDEX PAST BEGINNING TXT*/  01251000
         LA    @08,1                                               0432 01252000
         AR    @10,@14                                             0432 01253000
         AR    @10,@08                                             0432 01254000
         STC   @10,P                                               0432 01255000
*        PTLTEXT(P) = ' ';         /* INSERT BLANK BEFORE USERIDS   */  01256000
         LA    @01,PTLTEXT-1(@10)                                  0433 01257000
         MVI   0(@01),C' '                                         0433 01258000
*        P = P+1;                  /* BUMP INDEX PAST BLANK         */  01259000
         AR    @10,@08                                             0434 01260000
         STC   @10,P                                               0434 01261000
*         PTLTEXT(P:P+M7IND) = MSG7INS;  /* PUT USERID INSERT INTO 0435 01262000
*                                           MSG7 TEXT                */ 01263000
         LA    @01,PTLTEXT-1(@10)                                  0435 01264000
         SR    @14,@14                                             0435 01265000
         IC    @14,M7IND                                           0435 01266000
         EX    @14,@SM00587                                        0435 01267000
*         P = P+M7IND-1;           /* BUMP INDEX PAST USERID INSERT  */ 01268000
         AR    @10,@14                                             0436 01269000
         BCTR  @10,0                                               0436 01270000
         STC   @10,P                                               0436 01271000
*                                  /* PUT MSG TEXT ENDING IN BUFFER */  01272000
*        PTLTEXT(P : P+MSG7ENDL) = MSG7END;                        0437 01273000
         LA    @01,PTLTEXT-1(@10)                                  0437 01274000
         SR    @14,@14                                             0437 01275000
         IC    @14,MSG7ENDL(,@15)                                  0437 01276000
         EX    @14,@SM00589                                        0437 01277000
*        P = P+ MSG7ENDL - 1;      /* BUMP P TO TOTAL MSG LENGTH   0438 01278000
*                                     INCLUDING USERID INSERT       */  01279000
         AR    @10,@14                                             0438 01280000
         BCTR  @10,0                                               0438 01281000
         STC   @10,P                                               0438 01282000
*         PTLLL = P+4;              /* TOTAL PUTLINE BUFFER LENGTH =    01283000
*                                      MSG TEXT LENGTH + 4 BYTES FOR    01284000
*                                      HEADER                        */ 01285000
         AH    @10,@CH00152                                        0439 01286000
         STH   @10,PTLLL                                           0439 01287000
*         PTLOFFST = 0;             /* SET OFFSET = 0, NO MSG INSERT */ 01288000
         SR    @10,@10                                             0440 01289000
         STH   @10,PTLOFFST                                        0440 01290000
*         PTLSNEXT = 0;             /* PTR TO 2ND LEVEL MSG = ZERO   */ 01291000
         ST    @10,PTLSNEXT                                        0441 01292000
*         PTLSCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 01293000
         ST    @08,PTLSCNT                                         0442 01294000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT        */ 01295000
         LA    @10,PTLBUF                                          0443 01296000
         ST    @10,PTLSPTR                                         0443 01297000
*         GOTO WARNMSG;             /* ISSUE PUTLINE OF THIS MSG     */ 01298000
         B     WARNMSG                                             0444 01299000
*MSGDOUT:                           /* FORMAT WARNING MSG D    Y02676*/ 01300000
*         FMSGD = '0'B;             /* TURN MSGD FLAG OFF      Y02676*/ 01301000
MSGDOUT  NI    FMSGD,B'11111011'                                   0445 01302000
*         PTLTEXT(1:TPNLNG) = MSGDTPN; /* COPY MSG ID          Y02676*/ 01303000
         SR    @10,@10                                             0446 01304000
         IC    @10,TPNLNG                                          0446 01305000
         LR    @08,@10                                             0446 01306000
         BCTR  @08,0                                               0446 01307000
         L     @15,@CA00303                                        0446 01308000
         L     @15,MSGDP-MSGTABLE(,@15)                            0446 01309000
         EX    @08,@SM00592                                        0446 01310000
*                                   /* COPY MSG D START        Y02676*/ 01311000
*         PTLTEXT(TPNLNG+1:TPNLNG+MSGDBEGL) = MSGDBEG;             0447 01312000
         LA    @08,PTLTEXT(@10)                                    0447 01313000
         SR    @14,@14                                             0447 01314000
         IC    @14,MSGDBEGL(,@15)                                  0447 01315000
         LR    @07,@14                                             0447 01316000
         BCTR  @07,0                                               0447 01317000
         EX    @07,@SM00594                                        0447 01318000
*         P = TPNLNG + MSGDBEGL + 1; /* BUMP INDEX             Y02676*/ 01319000
         LA    @08,1                                               0448 01320000
         AR    @10,@14                                             0448 01321000
         AR    @10,@08                                             0448 01322000
         STC   @10,P                                               0448 01323000
*         PTLTEXT(P) = ' ';         /* INSERT BLANK BEFORE     Y02676   01324000
*                                      INSERTS                       */ 01325000
         LA    @01,PTLTEXT-1(@10)                                  0449 01326000
         MVI   0(@01),C' '                                         0449 01327000
*         P = P+1;                  /* BUMP INDEX PAST BLANK   Y02676*/ 01328000
         AR    @10,@08                                             0450 01329000
         STC   @10,P                                               0450 01330000
*                                   /* COPY USERID INSERTS     Y02676*/ 01331000
*         PTLTEXT(P:P+MDIND) = MSGDINS;                            0451 01332000
         LA    @01,PTLTEXT-1(@10)                                  0451 01333000
         SR    @14,@14                                             0451 01334000
         IC    @14,MDIND                                           0451 01335000
         EX    @14,@SM00596                                        0451 01336000
*         P = P+MDIND-1;            /* BUMP INDEX PAST INSERTS Y02676*/ 01337000
         AR    @10,@14                                             0452 01338000
         BCTR  @10,0                                               0452 01339000
         STC   @10,P                                               0452 01340000
*                                   /* COPY MSG D END          Y02676*/ 01341000
*         PTLTEXT(P:P+MSGDENDL) = MSGDEND;                         0453 01342000
         LA    @01,PTLTEXT-1(@10)                                  0453 01343000
         SR    @14,@14                                             0453 01344000
         IC    @14,MSGDENDL(,@15)                                  0453 01345000
         EX    @14,@SM00598                                        0453 01346000
*         P = P+ MSGDENDL - 1;      /* BUMP INDEX TO END       Y02676*/ 01347000
         AR    @10,@14                                             0454 01348000
         BCTR  @10,0                                               0454 01349000
         STC   @10,P                                               0454 01350000
*         PTLLL = P+4;              /* PUTLINE BUFFER LENGTH   Y02676   01351000
*                                      IS TEXT LENGTH + HEADER       */ 01352000
         AH    @10,@CH00152                                        0455 01353000
         STH   @10,PTLLL                                           0455 01354000
*         PTLOFFST = 0;             /* NO MSG INSERT           Y02676*/ 01355000
         SR    @10,@10                                             0456 01356000
         STH   @10,PTLOFFST                                        0456 01357000
*         PTLSNEXT = 0;             /* NO 2ND LEVEL MSG        Y02676*/ 01358000
         ST    @10,PTLSNEXT                                        0457 01359000
*         PTLSCNT = 1;              /* 1 MSG SEGMENT           Y02676*/ 01360000
         ST    @08,PTLSCNT                                         0458 01361000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO SEGMENT      Y02676*/ 01362000
         LA    @10,PTLBUF                                          0459 01363000
         ST    @10,PTLSPTR                                         0459 01364000
*         GOTO WARNMSG;             /* ISSUE PUTLINE           Y02676*/ 01365000
         B     WARNMSG                                             0460 01366000
*MSGEOUT:                           /* FORMAT WARNING MSG E    Y02676*/ 01367000
*         FMSGE = '0'B;             /* TURN OFF MSG E FLAG     Y02676*/ 01368000
MSGEOUT  NI    FMSGE,B'10111111'                                   0461 01369000
*         PTLTEXT(1:TPNLNG) = MSGETPN; /* COPY MSG ID          Y02676*/ 01370000
         SR    @10,@10                                             0462 01371000
         IC    @10,TPNLNG                                          0462 01372000
         LR    @08,@10                                             0462 01373000
         BCTR  @08,0                                               0462 01374000
         L     @15,@CA00303                                        0462 01375000
         L     @15,MSGEP-MSGTABLE(,@15)                            0462 01376000
         EX    @08,@SM00601                                        0462 01377000
*                                   /* COPY MESSAGE TEXT       Y02676*/ 01378000
*         PTLTEXT(TPNLNG+1:TPNLNG+MSGELNG) = MSGETEXT;             0463 01379000
         LA    @08,PTLTEXT(@10)                                    0463 01380000
         SR    @14,@14                                             0463 01381000
         IC    @14,MSGELNG(,@15)                                   0463 01382000
         LR    @07,@14                                             0463 01383000
         BCTR  @07,0                                               0463 01384000
         EX    @07,@SM00603                                        0463 01385000
*         PTLLL = MSGELNG + TPNLNG + 4; /* SET SEGMENT LENGTH  Y02676*/ 01386000
         AR    @14,@10                                             0464 01387000
         AH    @14,@CH00152                                        0464 01388000
         STH   @14,PTLLL                                           0464 01389000
*         PTLOFFST = 0;             /* NO MSG INSERT           Y02676*/ 01390000
         SR    @10,@10                                             0465 01391000
         STH   @10,PTLOFFST                                        0465 01392000
*         PTLSCNT = 1;              /* 1 MSG SEGMENT           Y02676*/ 01393000
         MVC   PTLSCNT(4),@CF00035                                 0466 01394000
*         PTLSNEXT = 0;             /* NO 2ND LEVEL MSG        Y02676*/ 01395000
         ST    @10,PTLSNEXT                                        0467 01396000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT  Y02676*/ 01397000
         LA    @10,PTLBUF                                          0468 01398000
         ST    @10,PTLSPTR                                         0468 01399000
*         GOTO WARNMSG;             /* ISSUE PUTLINE           Y02676*/ 01400000
         B     WARNMSG                                             0469 01401000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01402000
* /*                                                                 */ 01403000
* /*      CALL IO RTN TO CLOSE BROADCAST DATA SET                    */ 01404000
* /*                                                                 */ 01405000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01406000
*LCLOSE:                            /* CLOSE BROADCAST DATA SET      */ 01407000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM LIST AREA   */ 01408000
LCLOSE   L     @10,IOPBASE                                         0470 01409000
         XC    SDIOPARM(20,@10),SDIOPARM(@10)                      0470 01410000
*         P2CLOSE = '1'B;           /* SET PARM FLAG FOR CLOSE       */ 01411000
         OI    P2CLOSE(@10),B'00100000'                            0471 01412000
*         R1 = IOPBASE;             /* REG1 = ADDR PARM LIST         */ 01413000
         LR    R1,@10                                              0472 01414000
*         CALL IEEVSDIO;            /* CALL IO RTN TO CLOSE DATA SET */ 01415000
         L     @15,@CV00471                                        0473 01416000
         BALR  @14,@15                                             0473 01417000
*         FOPEN = '0'B;             /* TURN OPEN FLAG OFF            */ 01418000
         NI    FOPEN,B'10111111'                                   0474 01419000
*         GOTO EXIT1;               /* CONTINUE CLEANUP              */ 01420000
         B     EXIT1                                               0475 01421000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01422000
* /*                                                                 */ 01423000
* /*            -    C    L    E    A    N    U    P    -            */ 01424000
* /*                                                                 */ 01425000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01426000
*EXITCODE:                          /* CLEANUP, DEQ, RETURN TO TMP   */ 01427000
*         IF FMSG0 = '1'B           /* TEST FLAG FOR MSG 0           */ 01428000
*           THEN                    /* SEND MSG TEXT WAS TRUNCATED   */ 01429000
EXITCODE TM    FMSG0,B'00000001'                                   0476 01430000
         BO    @RT00476                                            0476 01431000
*             GOTO MSG0OUT;         /* SET UP WARNING MSG TO SENDER  */ 01432000
*         IF FMSG7 = '1'B           /* TEST FLAG FOR MSG 7           */ 01433000
*           THEN                    /* YES, SOME USERS NOT ACCEPTING    01434000
*                                      MSGS, GIVE WARNING TO SENDER  */ 01435000
         TM    FMSG7,B'00010000'                                   0478 01436000
         BO    @RT00478                                            0478 01437000
*             GOTO MSG7OUT;         /* ISSUE WARNING MSG 7           */ 01438000
*         IF FMSGE = '1'B           /* TEST MSGE FLAG          Y02676*/ 01439000
*           THEN                    /* YES, SOME USERIDS       Y02676   01440000
*                                      IGNORED                       */ 01441000
         TM    FMSGE,B'01000000'                                   0480 01442000
         BO    @RT00480                                            0480 01443000
*             GOTO MSGEOUT;         /* ISSUE WARNING MSG E     Y02676*/ 01444000
*         IF FMSGD = '1'B           /* TEST MSGD FLAG          Y02676*/ 01445000
*           THEN                    /* YES, SOME USERS COULD   Y02676   01446000
*                                      NOT GET MESSAGE               */ 01447000
         TM    FMSGD,B'00000100'                                   0482 01448000
         BO    @RT00482                                            0482 01449000
*             GOTO MSGDOUT;         /* ISSUE WARNING MSG D     Y02676*/ 01450000
*EXIT0:                             /* ENTRY AFTER 2 PUTLINE ERRORS  */ 01451000
*         IF FENQUSD = '1'B         /* TEST ENQ FLAG FOR USER DIRECT.*/ 01452000
*           THEN                    /* YES, USER DIRECT. IS ENQ'ED ON*/ 01453000
EXIT0    TM    FENQUSD,B'00100000'                                 0484 01454000
         BNO   @RF00484                                            0484 01455000
*             DO;                   /* DEQ ON USER MAIL DIRECTORY    */ 01456000
*               GEN( DEQ (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL) ); 01457000
          DEQ (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL)               01458000
*               FENQUSD = '0'B;     /* TURN OFF ENQ FLAG             */ 01459000
         NI    FENQUSD,B'11011111'                                 0487 01460000
*             END;                                                 0488 01461000
*         IF FENQ1 = '1'B           /* TEST ENQ FLAG FOR RECORD 1    */ 01462000
*           THEN                    /* RECORD 1 IS ENQ'ED ON         */ 01463000
@RF00484 TM    FENQ1,B'10000000'                                   0489 01464000
         BNO   @RF00489                                            0489 01465000
*             DO;                   /* DEQ ON RECORD 1               */ 01466000
*               GEN( DEQ (QNAME,RNRC1,3,SYSTEM),RET=HAVE,MF=(E,DEQL) ); 01467000
          DEQ (QNAME,RNRC1,3,SYSTEM),RET=HAVE,MF=(E,DEQL)               01468000
*               FENQ1 = '0'B;       /* TURN OFF ENQ FLAG             */ 01469000
         NI    FENQ1,B'01111111'                                   0492 01470000
*             END;                                                 0493 01471000
*         IF FOPEN = '1'B           /* TEST FLAG FOR DATA SET OPEN   */ 01472000
*           THEN                    /* BROADCAST DATA SET IS OPEN    */ 01473000
@RF00489 TM    FOPEN,B'01000000'                                   0494 01474000
         BO    @RT00494                                            0494 01475000
*             GOTO LCLOSE;          /* CLOSE BROADCAST DATA SET      */ 01476000
*EXIT1:                             /* DATA SET HAS BEEN CLOSED      */ 01477000
*         IF FPARS = '1'B           /* HAS PARSE BEEN INVOKED        */ 01478000
*           THEN                    /* PDL STORAGE IS ALLOCATED      */ 01479000
EXIT1    TM    FPARS,B'00100000'                                   0496 01480000
         BNO   @RF00496                                            0496 01481000
*            DO;                    /* RELEASE STORAGE ALLOCATED FOR    01482000
*                                      PDL FROM SUBPOOL 1            */ 01483000
*              R5 = ADDR(PDLPTR);   /* PUT PTR TO PDL INTO REG 5     */ 01484000
         LA    R5,PDLPTR                                           0498 01485000
*              GEN   (  IKJRLSA  (R5) );                           0499 01486000
           IKJRLSA  (R5)                                                01487000
*              FPARS = '0'B;        /* TURN PARSE FLAG OFF           */ 01488000
         NI    FPARS,B'11011111'                                   0500 01489000
*            END;                                                  0501 01490000
*                                                                  0501 01491000
*EXIT3:                             /* CLEANUP DONE, RETURN TO TMP   */ 01492000
*         IF FFLUSH = '1'B          /* IS FLAG ON TO FLUSH STACK AND    01493000
*                                      CLEAR THE INPUT QUEUE?        */ 01494000
*           THEN                    /* YES, ABNORMAL COMPLETION      */ 01495000
@RF00496 DS    0H                                                  0502 01496000
EXIT3    TM    FFLUSH,B'00000100'                                  0502 01497000
         BNO   @RF00502                                            0502 01498000
*            DO;                    /* FLUSH STACK & CLEAR INPUT Q   */ 01499000
*                                                                  0503 01500000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01501000
* /*                                                                 */ 01502000
* /* ABNORMAL COMPLETION - FLUSH THE STACK AND CLEAR THE INPUT QUEUE */ 01503000
* /*                                                                 */ 01504000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 01505000
*FLUSHQ:                            /* FLUSH STACK, CLEAR INPUT Q   */  01506000
*        R1 = ADDR(AUTOPARM);       /* REG 1 = ADDR STACK PARM AREA */  01507000
FLUSHQ   LA    R1,AUTOPARM                                         0504 01508000
*        R5 = ADDR(STPBAREA);       /* SET PTR TO STACK PARM BLOCK  */  01509000
         LA    R5,STPBAREA                                         0505 01510000
*        GEN;                                                      0506 01511000
         STACK  PARM=(R5),MF=(E,(1))   FLUSH THE STACK                  01512000
         TCLEARQ  INPUT                CLEAR THE INPUT QUEUE            01513000
*         RETURN CODE(12);          /* RETURN TO TMP WITH      Y02676   01514000
*                                      CODE 12                       */ 01515000
         L     @13,4(,@13)                                         0507 01516000
         L     @00,@SIZDATD                                        0507 01517000
         LR    @01,@12                                             0507 01518000
         FREEMAIN R,LV=(0),A=(1)                                        01519000
         LA    @15,12                                              0507 01520000
         L     @14,12(,@13)                                        0507 01521000
         LM    @00,@12,20(@13)                                     0507 01522000
         BR    @14                                                 0507 01523000
*           END;                     /* END OF ABNORMAL COMPLETION  */  01524000
*EXIT4:                             /* BRANCH PT AFTER STACK & CLEARQ*/ 01525000
*         RETURN CODE(0);           /* RETURN TO TMP WITH      Y02676   01526000
*                                      CODE 0                        */ 01527000
*                                                                  0509 01528000
*                                                                  0509 01529000
@RF00502 DS    0H                                                  0509 01530000
EXIT4    L     @13,4(,@13)                                         0509 01531000
         L     @00,@SIZDATD                                        0509 01532000
         LR    @01,@12                                             0509 01533000
         FREEMAIN R,LV=(0),A=(1)                                        01534000
         SR    @15,@15                                             0509 01535000
         L     @14,12(,@13)                                        0509 01536000
         LM    @00,@12,20(@13)                                     0509 01537000
         BR    @14                                                 0509 01538000
*         GENERATE;                                                0510 01539000
LISTBEG  ENQ   (QNAME,,S,3,SYSTEM),RET=HAVE,MF=L                 Y02676 01540000
         ENQ   (QNAME,,E,3,SYSTEM),RET=HAVE,MF=L                 Y02676 01541000
         DEQ   (QNAME,,3,SYSTEM),RET=HAVE,MF=L                   Y02676 01542000
         PUTLINE  OUTPUT=(0,MULTLVL),MF=L                               01543000
         STACK  DELETE=ALL,MF=L                                         01544000
LISTEND  EQU   *                   END OF LIST FORMS                    01545000
SPARE    DC    50X'00'              PATCH AREA                   Y02676 01546000
*         END IKJEES10                                             0511 01547000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01548000
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        * 01549000
*/*%INCLUDE SYSLIB  (IKJDAPL )                                        * 01550000
*/*%INCLUDE SYSLIB  (IKJDAP08)                                        * 01551000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        * 01552000
*/*%INCLUDE SYSLIB  (IKJSTPB )                                        * 01553000
*/*%INCLUDE SYSLIB  (IKJZT301)                                        * 01554000
*/*%INCLUDE SYSLIB  (IKJZT304)                                        * 01555000
*/*%INCLUDE SYSLIB  (IKJZT305)                                        * 01556000
*/*%INCLUDE SYSLIB  (IKJPSCB )                                        * 01557000
*;                                                                 0511 01558000
@EL00001 L     @13,4(,@13)                                         0511 01559000
@EF00001 L     @00,@SIZDATD                                        0511 01560000
         LR    @01,@12                                             0511 01561000
         FREEMAIN R,LV=(0),A=(1)                                        01562000
@ER00001 LM    @14,@12,12(@13)                                     0511 01563000
         BR    @14                                                 0511 01564000
@DATA    DS    0H                                                       01565000
@CH00152 DC    H'4'                                                     01566000
@CH00344 DC    H'5'                                                     01567000
@CH00513 DC    H'6'                                                     01568000
@CH00055 DC    H'8'                                                     01569000
@CH00034 DC    H'9'                                                     01570000
@CH00205 DC    H'13'                                                    01571000
@CH00514 DC    H'29'                                                    01572000
@SM00540 MVC   USMTEXT-1(0,@08),MSGTEXT(@01)                            01573000
@SM00542 MVC   USMTEXT-1(0,@08),PSCBUSER(@14)                           01574000
@SM00547 MVC   0(0,@08),MSG1TPN(@07)                                    01575000
@SM00549 MVC   0(0,@08),MSG1TEXT(@07)                                   01576000
@SM00556 MVC   PTLTEXT(0),MSG4TPN(@15)                                  01577000
@SM00558 MVC   0(0,@08),MSG4TEXT(@15)                                   01578000
@SM00560 MVC   PTLTEXT(0),MSGCTPN(@15)                                  01579000
@SM00562 MVC   0(0,@08),MSGCTEXT(@15)                                   01580000
@SM00564 MVC   PTLTEXT(0),MSG5TPN(@15)                                  01581000
@SM00566 MVC   0(0,@08),MSG5TEXT(@15)                                   01582000
@SM00568 MVC   PTLTEXT(0),MSGBTPN(@15)                                  01583000
@SM00570 MVC   0(0,@08),MSGBTEXT(@15)                                   01584000
@SM00573 MVC   PTLTEXT(0),MSGATPN(@15)                                  01585000
@SM00575 MVC   0(0,@08),MSGATEXT(@15)                                   01586000
@SM00577 MVC   0(0,@08),MSG2TPN(@07)                                    01587000
@SM00579 MVC   0(0,@08),MSG2BEG(@07)                                    01588000
@SM00581 MVC   0(0,@08),MSG2END(@15)                                    01589000
@SM00583 MVC   PTLTEXT(0),MSG7TPN(@15)                                  01590000
@SM00585 MVC   0(0,@08),MSG7BEG(@15)                                    01591000
@SM00587 MVC   0(0,@01),MSG7INS                                         01592000
@SM00589 MVC   0(0,@01),MSG7END(@15)                                    01593000
@SM00592 MVC   PTLTEXT(0),MSGDTPN(@15)                                  01594000
@SM00594 MVC   0(0,@08),MSGDBEG(@15)                                    01595000
@SM00596 MVC   0(0,@01),MSGDINS                                         01596000
@SM00598 MVC   0(0,@01),MSGDEND(@15)                                    01597000
@SM00601 MVC   PTLTEXT(0),MSGETPN(@15)                                  01598000
@SM00603 MVC   0(0,@08),MSGETEXT(@15)                                   01599000
@DATD    DSECT                                                          01600000
         DS    0F                                                       01601000
@SA00001 DS    18F                                                      01602000
@PC00001 DS    1F                                                       01603000
@SAV001  EQU   @SA00001                                                 01604000
@TF00001 DS    F                                                        01605000
@TF00002 DS    F                                                        01606000
@ZTEMPS  DS    0F                                                       01607000
@ZT00001 DC    F'0'                                                     01608000
@ZT00003 DC    F'0'                                                     01609000
@ZTEMPND EQU   *                                                        01610000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         01611000
@TEMPS   EQU   @ZTEMPS                                                  01612000
@L       EQU   @ZLEN                                                    01613000
IKJEES10 CSECT                                                          01614000
         DS    0F                                                       01615000
@CF00545 DC    F'-13'                                                   01616000
@CF00554 DC    F'-6'                                                    01617000
@CF00551 DC    F'-3'                                                    01618000
@CF00035 DC    F'1'                                                     01619000
@CH00035 EQU   @CF00035+2                                               01620000
@CF00123 DC    F'2'                                                     01621000
@DATD    DSECT                                                          01622000
         DS    0D                                                       01623000
ROUTE    DS    A                                                        01624000
CPPLPTR  DS    A                                                        01625000
DAPLPTR  DS    A                                                        01626000
DAPB0PTR DS    A                                                        01627000
DAIRRETC DS    A                                                        01628000
IOPBASE  DS    A                                                        01629000
IOPLPTR  DS    A                                                        01630000
STPBPTR  DS    A                                                        01631000
PSCBPTR  DS    A                                                        01632000
RETC     DS    A                                                        01633000
P        DS    AL1                                                      01634000
R1PTR    DS    AL3                                                      01635000
         DS    CL1                                                      01636000
USDPTR   DS    AL3                                                      01637000
         DS    CL1                                                      01638000
USMPTR   DS    AL3                                                      01639000
J        DS    AL1                                                      01640000
MI       DS    AL1                                                      01641000
         DS    CL2                                                      01642000
COMMON   DS    CL32                                                     01643000
         ORG   COMMON                                                   01644000
FLAGS    DS    BL2                                                      01645000
         ORG   FLAGS                                                    01646000
FLOGON   DS    BL1                                                      01647000
FOPEN    EQU   FLAGS+0                                                  01648000
FPARS    EQU   FLAGS+0                                                  01649000
FMSG7    EQU   FLAGS+0                                                  01650000
FWTO2    EQU   FLAGS+0                                                  01651000
FMSGD    EQU   FLAGS+0                                                  01652000
FNOW     EQU   FLAGS+0                                                  01653000
FMSG0    EQU   FLAGS+0                                                  01654000
FENQ1    DS    BL1                                                      01655000
FMSGE    EQU   FLAGS+1                                                  01656000
FENQUSD  EQU   FLAGS+1                                                  01657000
FCHAIN   EQU   FLAGS+1                                                  01658000
FBADPUTL EQU   FLAGS+1                                                  01659000
FFLUSH   EQU   FLAGS+1                                                  01660000
         ORG   COMMON+2                                                 01661000
COMROUT  DS    AL1                                                      01662000
VALCNT   DS    AL1                                                      01663000
COMCPPL  DS    AL4                                                      01664000
CPDLMSGT DS    AL4                                                      01665000
PDLPTR   DS    AL4                                                      01666000
@NM00001 DS    CL4                                                      01667000
         ORG   @NM00001                                                 01668000
IDCNT    DS    AL1                                                      01669000
IDTBL    DS    AL3                                                      01670000
         ORG   COMMON+20                                                01671000
@NM00002 DS    CL4                                                      01672000
         ORG   @NM00002                                                 01673000
M7IND    DS    AL1                                                      01674000
COMMSG7  DS    AL3                                                      01675000
         ORG   COMMON+24                                                01676000
@NM00003 DS    CL4                                                      01677000
         ORG   @NM00003                                                 01678000
MDIND    DS    AL1                                                      01679000
COMMSGD  DS    AL3                                                      01680000
         ORG   COMMON+28                                                01681000
@NM00004 DS    CL4                                                      01682000
         ORG   @NM00004                                                 01683000
COMRETC  DS    FL2                                                      01684000
@NM00005 DS    FL2                                                      01685000
         ORG   COMMON+32                                                01686000
MSG7INS  DS    CL160                                                    01687000
MSGDINS  DS    CL160                                                    01688000
PTLBUF   DS    CL214                                                    01689000
         ORG   PTLBUF                                                   01690000
PTLLL    DS    FL2                                                      01691000
PTLOFFST DS    FL2                                                      01692000
PTLTEXT  DS    CL210                                                    01693000
         ORG   PTLBUF+214                                               01694000
         DS    CL2                                                      01695000
PTLSEGBL DS    CL16                                                     01696000
         ORG   PTLSEGBL                                                 01697000
PTLSNEXT DS    AL4                                                      01698000
PTLSCNT  DS    FL4                                                      01699000
PTLSPTR  DS    AL4                                                      01700000
PTLSPTR2 DS    AL4                                                      01701000
         ORG   PTLSEGBL+16                                              01702000
PTLEVEL2 DS    CL16                                                     01703000
         ORG   PTLEVEL2                                                 01704000
PL2NEXT  DS    AL4                                                      01705000
PL2SCNT  DS    FL4                                                      01706000
PL2SPTR  DS    AL4                                                      01707000
PL2SPT2  DS    AL4                                                      01708000
         ORG   PTLEVEL2+16                                              01709000
SEGDESC1 DS    CL34                                                     01710000
         ORG   SEGDESC1                                                 01711000
SD1LL    DS    FL2                                                      01712000
SD1OFFST DS    FL2                                                      01713000
SD1TEXT  DS    CL30                                                     01714000
         ORG   SEGDESC1+34                                              01715000
         DS    CL2                                                      01716000
SEGDESC2 DS    CL6                                                      01717000
         ORG   SEGDESC2                                                 01718000
SD2LL    DS    FL2                                                      01719000
SD2OFFST DS    FL2                                                      01720000
SD2TEXT  DS    CL2                                                      01721000
         ORG   SEGDESC2+6                                               01722000
         DS    CL2                                                      01723000
AUTODAPL DS    CL20                                                     01724000
AUTODAIR DS    CL84                                                     01725000
F18PARMS DS    CL16                                                     01726000
         ORG   F18PARMS                                                 01727000
F18DAPL  DS    AL4                                                      01728000
F18DARC  DS    AL4                                                      01729000
F18F02A  DS    AL4                                                      01730000
F18CLNOA DS    AL4                                                      01731000
         ORG   F18PARMS+16                                              01732000
IOPAREA  DS    CL32                                                     01733000
AUTOPARM DS    CL16                                                     01734000
DIRAREA  DS    CL129                                                    01735000
         DS    CL3                                                      01736000
MSGAREA  DS    CL129                                                    01737000
         DS    CL3                                                      01738000
MSGAREA2 DS    CL129                                                    01739000
WORK4    DS    CL4                                                      01740000
ZERENT   DS    CL13                                                     01741000
         DS    CL2                                                      01742000
SDECB    DS    CL4                                                      01743000
AUTOLIST DS    CL64                                                     01744000
         ORG   AUTOLIST                                                 01745000
ENQSL    DS    CL12                                                     01746000
ENQEL    DS    CL12                                                     01747000
DEQL     DS    CL12                                                     01748000
PUTLL    DS    CL12                                                     01749000
STPBAREA DS    CL16                                                     01750000
         ORG   AUTOLIST+64                                              01751000
RNUSD    DS    CL3                                                      01752000
RNPREV   DS    CL3                                                      01753000
RNUSM    DS    CL3                                                      01754000
         DS    CL3                                                      01755000
SRERRCD  DS    CL2                                                      01756000
         DS    CL6                                                      01757000
WORK8    DS    CL8                                                      01758000
IDUSRID  DS    20CL8                                                    01759000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01760000
@ENDDATD EQU   *                                                        01761000
@DATEND  EQU   *                                                        01762000
IKJEES10 CSECT                                                          01763000
         DS    0F                                                       01764000
@SIZDATD DC    AL1(1)                                                   01765000
         DC    AL3(@ENDDATD-@DATD)                                      01766000
@SIZ001  EQU   @SIZDATD                                                 01767000
@CA00303 DC    A(MSGTABLE)                                              01768000
@CV00467 DC    V(IKJEES11)                                              01769000
@CV00471 DC    V(IEEVSDIO)                                              01770000
         DS    0D                                                       01771000
F18F02   DC    A(0)                                                     01772000
F18CLNO  DC    AL2(1)                                                   01773000
TPNLNG   DC    AL1(9)                                                   01774000
PANOPRMT DC    AL1(4)                                                   01775000
PANOSPAC DC    AL1(16)                                                  01776000
PUNOSPAC DC    AL1(16)                                                  01777000
DAIRCD08 DC    X'0008'                                                  01778000
DAIRDSN  DS    CL15                                                     01779000
         ORG   DAIRDSN                                                  01780000
DSLNGTH  DC    X'000D'                                                  01781000
DSNAME   DC    CL13'SYS1.BRODCAST'                                      01782000
         ORG   DAIRDSN+15                                               01783000
SDERR    DC    X'80'                                                    01784000
NOCORE   DC    X'40'                                                    01785000
BADFMT   DC    X'10'                                                    01786000
IOERR    DC    X'08'                                                    01787000
OPENERR  DC    X'02'                                                    01788000
DSFULL   DC    X'01'                                                    01789000
USDKEY   DC    X'01'                                                    01790000
USMKEY   DC    X'03'                                                    01791000
LVL2IND  DC    CL1'+'                                                   01792000
BLNKID   DC    CL8' '                                                   01793000
QNAME    DC    CL8'SYSIKJBC'                                            01794000
RNRC1    DC    X'000000'                                                01795000
         DS    CL1                                                      01796000
WEARTOGO DC    AL4(EXITCODE)                                            01797000
         DC    AL4(EXIT1)                                               01798000
         DC    AL4(EXIT3)                                               01799000
         DC    AL4(MSG2OUT)                                             01800000
         DC    AL4(BADPARSE)                                            01801000
         DC    AL4(BADTPUT)                                             01802000
         DC    AL4(DODAIR)                                              01803000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01804000
@01      EQU   01                                                       01805000
@02      EQU   02                                                       01806000
@03      EQU   03                                                       01807000
@04      EQU   04                                                       01808000
@05      EQU   05                                                       01809000
@06      EQU   06                                                       01810000
@07      EQU   07                                                       01811000
@08      EQU   08                                                       01812000
@09      EQU   09                                                       01813000
@10      EQU   10                                                       01814000
@11      EQU   11                                                       01815000
@12      EQU   12                                                       01816000
@13      EQU   13                                                       01817000
@14      EQU   14                                                       01818000
@15      EQU   15                                                       01819000
@0       EQU   00                                                       01820000
@1       EQU   01                                                       01821000
@2       EQU   02                                                       01822000
@3       EQU   03                                                       01823000
@4       EQU   04                                                       01824000
@5       EQU   05                                                       01825000
@6       EQU   06                                                       01826000
@7       EQU   07                                                       01827000
@8       EQU   08                                                       01828000
@9       EQU   09                                                       01829000
@A       EQU   10                                                       01830000
@B       EQU   11                                                       01831000
@C       EQU   12                                                       01832000
@D       EQU   13                                                       01833000
@E       EQU   14                                                       01834000
@F       EQU   15                                                       01835000
R1       EQU   @01                                                      01836000
I        EQU   @04                                                      01837000
R5       EQU   @05                                                      01838000
R15      EQU   @15                                                      01839000
R0       EQU   @00                                                      01840000
R14      EQU   @14                                                      01841000
         EXTRN MSGTABLE                                                 01842000
NEXTPATH EQU   0                                                        01843000
CPPL     EQU   0                                                        01844000
CPPLUPT  EQU   CPPL+4                                                   01845000
CPPLPSCB EQU   CPPL+8                                                   01846000
CPPLECT  EQU   CPPL+12                                                  01847000
DAPL     EQU   0                                                        01848000
DAPLUPT  EQU   DAPL                                                     01849000
DAPLECT  EQU   DAPL+4                                                   01850000
DAPLECB  EQU   DAPL+8                                                   01851000
DAPLPSCB EQU   DAPL+12                                                  01852000
DAPLDAPB EQU   DAPL+16                                                  01853000
DAPB08   EQU   0                                                        01854000
DA08CD   EQU   DAPB08                                                   01855000
DA08FLG  EQU   DAPB08+2                                                 01856000
DA08PDSN EQU   DAPB08+8                                                 01857000
DA08DDN  EQU   DAPB08+12                                                01858000
DA08UNIT EQU   DAPB08+20                                                01859000
DA08SER  EQU   DAPB08+28                                                01860000
DA08MNM  EQU   DAPB08+52                                                01861000
DA08PSWD EQU   DAPB08+60                                                01862000
DA08DSP1 EQU   DAPB08+68                                                01863000
DA08SHR  EQU   DA08DSP1                                                 01864000
DA08DPS2 EQU   DAPB08+69                                                01865000
DA08KEEP EQU   DA08DPS2                                                 01866000
DA08DPS3 EQU   DAPB08+70                                                01867000
DA08KEP  EQU   DA08DPS3                                                 01868000
DA08CTL  EQU   DAPB08+71                                                01869000
IOPARML  EQU   0                                                        01870000
SDIOPARM EQU   IOPARML                                                  01871000
@NM00027 EQU   SDIOPARM                                                 01872000
P1OPEN   EQU   @NM00027                                                 01873000
P1READ   EQU   @NM00027                                                 01874000
@NM00028 EQU   SDIOPARM+1                                               01875000
P2WRDI   EQU   @NM00028                                                 01876000
P2WRDAF  EQU   @NM00028                                                 01877000
P2CLOSE  EQU   @NM00028                                                 01878000
PARMKEY  EQU   SDIOPARM+2                                               01879000
PARMRBA  EQU   SDIOPARM+4                                               01880000
PARMIOAD EQU   SDIOPARM+8                                               01881000
PARMDDNM EQU   SDIOPARM+12                                              01882000
PARMRCD1 EQU   IOPARML+28                                               01883000
IOPL     EQU   0                                                        01884000
IOPLUPT  EQU   IOPL                                                     01885000
IOPLECT  EQU   IOPL+4                                                   01886000
IOPLECB  EQU   IOPL+8                                                   01887000
STPB     EQU   0                                                        01888000
R1BC     EQU   0                                                        01889000
R1BCPTRP EQU   R1BC                                                     01890000
R1USPTRP EQU   R1BC+4                                                   01891000
R1USPTR  EQU   R1USPTRP+1                                               01892000
USDIR    EQU   0                                                        01893000
USDENTRY EQU   USDIR                                                    01894000
USDID    EQU   USDENTRY                                                 01895000
USDRBA   EQU   USDENTRY+7                                               01896000
USDEND   EQU   USDENTRY+10                                              01897000
USDNEXT  EQU   USDIR+126                                                01898000
USMSG    EQU   0                                                        01899000
USMLNG   EQU   USMSG                                                    01900000
USMTEXT  EQU   USMSG+1                                                  01901000
USMNEXT  EQU   USMSG+126                                                01902000
MSG1     EQU   0                                                        01903000
MSG1TPN  EQU   MSG1                                                     01904000
MSG1LVL2 EQU   MSG1+16                                                  01905000
MSG1LNG  EQU   MSG1+20                                                  01906000
MSG1TEXT EQU   MSG1+21                                                  01907000
MSG2     EQU   0                                                        01908000
MSG2TPN  EQU   MSG2                                                     01909000
MSG2BEGL EQU   MSG2+16                                                  01910000
MSG2BEG  EQU   MSG2+17                                                  01911000
MSG2ENDL EQU   MSG2+25                                                  01912000
MSG2END  EQU   MSG2+26                                                  01913000
MSG4     EQU   0                                                        01914000
MSG4TPN  EQU   MSG4                                                     01915000
MSG4LNG  EQU   MSG4+16                                                  01916000
MSG4TEXT EQU   MSG4+17                                                  01917000
MSG4SECT EQU   MSG4+52                                                  01918000
MSG4MAIL EQU   MSG4+53                                                  01919000
MSG5     EQU   0                                                        01920000
MSG5TPN  EQU   MSG5                                                     01921000
MSG5LVL2 EQU   MSG5+16                                                  01922000
MSG5LNG  EQU   MSG5+20                                                  01923000
MSG5TEXT EQU   MSG5+21                                                  01924000
MSG7     EQU   0                                                        01925000
MSG7TPN  EQU   MSG7                                                     01926000
MSG7BEGL EQU   MSG7+16                                                  01927000
MSG7BEG  EQU   MSG7+17                                                  01928000
MSG7ENDL EQU   MSG7+25                                                  01929000
MSG7END  EQU   MSG7+26                                                  01930000
MSGA     EQU   0                                                        01931000
MSGATPN  EQU   MSGA                                                     01932000
MSGALNG  EQU   MSGA+16                                                  01933000
MSGATEXT EQU   MSGA+17                                                  01934000
MSGB     EQU   0                                                        01935000
MSGBTPN  EQU   MSGB                                                     01936000
MSGBLVL2 EQU   MSGB+16                                                  01937000
MSGBLNG  EQU   MSGB+20                                                  01938000
MSGBTEXT EQU   MSGB+21                                                  01939000
MSGC     EQU   0                                                        01940000
MSGCTPN  EQU   MSGC                                                     01941000
MSGCLNG  EQU   MSGC+16                                                  01942000
MSGCTEXT EQU   MSGC+17                                                  01943000
MSGD     EQU   0                                                        01944000
MSGDTPN  EQU   MSGD                                                     01945000
MSGDBEGL EQU   MSGD+16                                                  01946000
MSGDBEG  EQU   MSGD+17                                                  01947000
MSGDENDL EQU   MSGD+25                                                  01948000
MSGDEND  EQU   MSGD+26                                                  01949000
MSGE     EQU   0                                                        01950000
MSGETPN  EQU   MSGE                                                     01951000
MSGELNG  EQU   MSGE+16                                                  01952000
MSGETEXT EQU   MSGE+17                                                  01953000
MSG1L2   EQU   0                                                        01954000
MSG5L2   EQU   0                                                        01955000
MSGBL2   EQU   0                                                        01956000
PSCB     EQU   0                                                        01957000
PSCBUSER EQU   PSCB                                                     01958000
PSCBUSRL EQU   PSCB+7                                                   01959000
PSCBATR1 EQU   PSCB+16                                                  01960000
MSGTEXT  EQU   0                                                        01961000
PDLMSG   EQU   0                                                        01962000
PDLMPTR  EQU   PDLMSG                                                   01963000
@NM00050 EQU   PDLMSG+4                                                 01964000
PDLMLL   EQU   @NM00050                                                 01965000
TMPLIST  EQU   0                                                        01966000
MSG1P    EQU   MSGTABLE                                                 01967000
MSG2P    EQU   MSGTABLE+4                                               01968000
MSG4P    EQU   MSGTABLE+12                                              01969000
MSG5P    EQU   MSGTABLE+16                                              01970000
MSG7P    EQU   MSGTABLE+24                                              01971000
MSGAP    EQU   MSGTABLE+36                                              01972000
MSGBP    EQU   MSGTABLE+40                                              01973000
MSGCP    EQU   MSGTABLE+44                                              01974000
MSGDP    EQU   MSGTABLE+48                                              01975000
MSGEP    EQU   MSGTABLE+52                                              01976000
MBL2SEGA EQU   MSGBL2                                                   01977000
MBL2SEGB EQU   MSGBL2+4                                                 01978000
MBL2SEGC EQU   MSGBL2+8                                                 01979000
MSG9P    EQU   MSGTABLE+32                                              01980000
M1L2SEGA EQU   MSG1L2                                                   01981000
M5L2SEGA EQU   MSG5L2                                                   01982000
M5L2SEGB EQU   MSG5L2+4                                                 01983000
M5L2SEGC EQU   MSG5L2+8                                                 01984000
*                                      START UNREFERENCED COMPONENTS    01985000
PDLMRES  EQU   @NM00050+3                                               01986000
PDLMFL   EQU   @NM00050+2                                               01987000
PSCBU    EQU   PSCB+64                                                  01988000
PSCBRSZ  EQU   PSCB+60                                                  01989000
PSCBLINE EQU   PSCB+59                                                  01990000
PSCBCHAR EQU   PSCB+58                                                  01991000
PSCBUPTL EQU   PSCB+56                                                  01992000
PSCBUPT  EQU   PSCB+52                                                  01993000
PSCBRLGB EQU   PSCB+48                                                  01994000
PSCBDEST EQU   PSCB+40                                                  01995000
@NM00049 EQU   PSCB+36                                                  01996000
@NM00048 EQU   PSCB+32                                                  01997000
@NM00047 EQU   PSCB+28                                                  01998000
PSCBLTI2 EQU   PSCB+24                                                  01999000
PSCBLTIM EQU   PSCB+20                                                  02000000
PSCBATR2 EQU   PSCB+18                                                  02001000
@NM00046 EQU   PSCBATR1                                                 02002000
@NM00045 EQU   PSCBATR1                                                 02003000
@NM00044 EQU   PSCBATR1                                                 02004000
PSCBATTN EQU   PSCBATR1                                                 02005000
PSCBVMNT EQU   PSCBATR1                                                 02006000
PSCBJCL  EQU   PSCBATR1                                                 02007000
PSCBACCT EQU   PSCBATR1                                                 02008000
PSCBCTRL EQU   PSCBATR1                                                 02009000
PSCBGPNM EQU   PSCB+8                                                   02010000
@NM00043 EQU   MSGE+9                                                   02011000
@NM00042 EQU   MSGD+9                                                   02012000
@NM00041 EQU   MSGC+9                                                   02013000
@NM00040 EQU   MSGB+9                                                   02014000
@NM00039 EQU   MSGA+9                                                   02015000
@NM00038 EQU   MSG7+9                                                   02016000
@NM00037 EQU   MSG5+9                                                   02017000
@NM00036 EQU   MSG4+66                                                  02018000
@NM00035 EQU   MSG4+58                                                  02019000
@NM00034 EQU   MSG4+9                                                   02020000
@NM00033 EQU   MSG2+9                                                   02021000
@NM00032 EQU   MSG1+9                                                   02022000
USDREND  EQU   USDIR+125                                                02023000
@NM00031 EQU   USDIR+117                                                02024000
@NM00030 EQU   R1BC+45                                                  02025000
R1LEVEL  EQU   R1BC+38                                                  02026000
R1DSN    EQU   R1BC+14                                                  02027000
R1BCMAX  EQU   R1BC+12                                                  02028000
R1RECNUM EQU   R1BC+8                                                   02029000
R1USFLGS EQU   R1USPTRP                                                 02030000
R1BCPTR  EQU   R1BCPTRP+1                                               02031000
R1BCFLGS EQU   R1BCPTRP                                                 02032000
STPBOTDD EQU   STPB+12                                                  02033000
STPBINDD EQU   STPB+8                                                   02034000
STPBALSD EQU   STPB+4                                                   02035000
@NM00029 EQU   STPB                                                     02036000
IOPLIOPB EQU   IOPL+12                                                  02037000
PARMDCB  EQU   IOPARML+24                                               02038000
PARMLMCT EQU   IOPARML+20                                               02039000
PARMFDBK EQU   SDIOPARM+3                                               02040000
P2DEVAD  EQU   @NM00028                                                 02041000
P2DEL    EQU   @NM00028                                                 02042000
P1READ1  EQU   @NM00027                                                 02043000
P1CREATE EQU   @NM00027                                                 02044000
DA08ALN  EQU   DAPB08+76                                                02045000
DA08DSO  EQU   DAPB08+75                                                02046000
@NM00026 EQU   DAPB08+72                                                02047000
@NM00025 EQU   DA08CTL                                                  02048000
DA08ATRL EQU   DA08CTL                                                  02049000
DA08DMMY EQU   DA08CTL                                                  02050000
DA08PERM EQU   DA08CTL                                                  02051000
DA08RLSE EQU   DA08CTL                                                  02052000
DA08UID  EQU   DA08CTL                                                  02053000
DA08ABKL EQU   DA08CTL                                                  02054000
DA08TRKS EQU   DA08CTL                                                  02055000
DA08UNCT EQU   DA08DPS3                                                 02056000
DA08CATL EQU   DA08DPS3                                                 02057000
DA08DELE EQU   DA08DPS3                                                 02058000
@NM00024 EQU   DA08DPS3                                                 02059000
@NM00023 EQU   DA08DPS3                                                 02060000
@NM00022 EQU   DA08DPS3                                                 02061000
@NM00021 EQU   DA08DPS3                                                 02062000
DA08UCAT EQU   DA08DPS2                                                 02063000
DA08CAT  EQU   DA08DPS2                                                 02064000
DA08DEL  EQU   DA08DPS2                                                 02065000
@NM00020 EQU   DA08DPS2                                                 02066000
@NM00019 EQU   DA08DPS2                                                 02067000
@NM00018 EQU   DA08DPS2                                                 02068000
@NM00017 EQU   DA08DPS2                                                 02069000
DA08OLD  EQU   DA08DSP1                                                 02070000
DA08MOD  EQU   DA08DSP1                                                 02071000
DA08NEW  EQU   DA08DSP1                                                 02072000
@NM00016 EQU   DA08DSP1                                                 02073000
@NM00015 EQU   DA08DSP1                                                 02074000
@NM00014 EQU   DA08DSP1                                                 02075000
@NM00013 EQU   DA08DSP1                                                 02076000
DA08DQTY EQU   DAPB08+48                                                02077000
DA08SQTY EQU   DAPB08+44                                                02078000
DA08PQTY EQU   DAPB08+40                                                02079000
DA08BLK  EQU   DAPB08+36                                                02080000
DA08CTRC EQU   DAPB08+6                                                 02081000
DA08DARC EQU   DAPB08+4                                                 02082000
@NM00012 EQU   DA08FLG                                                  02083000
@NM00011 EQU   DA08FLG                                                  02084000
@NM00010 EQU   DA08FLG                                                  02085000
@NM00009 EQU   DA08FLG                                                  02086000
@NM00008 EQU   DA08FLG                                                  02087000
@NM00007 EQU   DA08FLG                                                  02088000
@NM00006 EQU   DA08FLG                                                  02089000
DA08FPE  EQU   DA08FLG                                                  02090000
CPPLCBUF EQU   CPPL                                                     02091000
*                                      END UNREFERENCED COMPONENTS      02092000
@RT00168 EQU   BADDAIR                                                  02093000
@RT00179 EQU   BADIO                                                    02094000
@RT00203 EQU   BADIO                                                    02095000
@RT00208 EQU   LPEND1                                                   02096000
@RT00211 EQU   VALIDID                                                  02097000
@RT00215 EQU   SCUSD3                                                   02098000
@RT00224 EQU   EXITCODE                                                 02099000
@RT00266 EQU   BADIO                                                    02100000
@RT00276 EQU   BADIOA                                                   02101000
@RT00279 EQU   CHAIN3                                                   02102000
@RT00290 EQU   BADIO                                                    02103000
@RT00292 EQU   EXITCODE                                                 02104000
@RF00292 EQU   SCUSD2                                                   02105000
@RT00306 EQU   BADIO                                                    02106000
@RT00324 EQU   NOMAIN                                                   02107000
@RF00324 EQU   NOTUSABL                                                 02108000
@RT00360 EQU   NOMAIN                                                   02109000
@RT00362 EQU   EXIT3                                                    02110000
@RT00370 EQU   NOMAIN                                                   02111000
@RT00372 EQU   EXIT0                                                    02112000
@RT00396 EQU   BADPUTL                                                  02113000
@RT00476 EQU   MSG0OUT                                                  02114000
@RT00478 EQU   MSG7OUT                                                  02115000
@RT00480 EQU   MSGEOUT                                                  02116000
@RT00482 EQU   MSGDOUT                                                  02117000
@RT00494 EQU   LCLOSE                                                   02118000
@EL01    EQU   @EL00001                                                 02119000
@ENDDATA EQU   *                                                        02120000
         END   IKJEES10                                                 02121000
