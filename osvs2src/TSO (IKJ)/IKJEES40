         TITLE 'IKJEES40 - ACCOUNT/BROADCAST DATA SET INTERFACE      '  00001000
IKJEES40 CSECT ,                                                   0001 00002000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00003000
         BALR  @11,0                                               0001 00004000
@PSTART  DS    0H                                                  0001 00005000
         USING @PSTART,@11                                         0001 00006000
         L     @00,@SIZDATD                                        0001 00007000
         GETMAIN R,LV=(0)                                               00008000
         LR    @12,@01                                             0001 00009000
         USING @DATD,@12                                           0001 00010000
         ST    @13,@SA00001+4                                      0001 00011000
         LM    @00,@01,20(@13)                                     0001 00012000
         ST    @12,8(,@13)                                         0001 00013000
         LR    @13,@12                                             0001 00014000
         XC    @ZTEMPS(@ZLEN),@ZTEMPS                                   00015000
         MVC   @PC00001(4),0(@01)                                  0001 00016000
         MODID BRANCH = YES                                             00017000
         EJECT                                                          00018000
         EJECT                                                          00019000
         EJECT                                                          00020000
         EJECT                                                          00021000
         EJECT                                                          00022000
         EJECT                                                          00023000
         EJECT                                                          00024000
         EJECT                                                          00025000
         EJECT                                                          00026000
REGS     DS    0H                                                  0103 00027000
         EJECT                                                          00028000
*         CPPLPTR = R1;             /* SAVE REG1 PARM LIST ADDRESS   */ 00029000
         ST    R1,CPPLPTR                                          0108 00030000
*         UIDLPTR = UIDLPTRP;       /* SET BASE FOR DUIDL STRUCTURE     00031000
*                                      FROM ACCOUNT PARM LIST        */ 00032000
         L     @10,CPPLPTR                                         0109 00033000
         MVC   UIDLPTR(4),UIDLPTRP(@10)                            0109 00034000
*         FLAGS = FLAGS && FLAGS;   /* CLEAR FLAG AREA TO ZERO       */ 00035000
         XC    FLAGS(2),FLAGS                                      0110 00036000
*         RESTRICT (IOPBASE);       /* RESTRICT REG 3 FOR LOOP CNTRL */ 00037000
*         RESTRICT (I);             /* RESTRICT REG 4 FOR LOOP CNTRL */ 00038000
*         RESTRICT (R5);            /* RESTRICT REG 5 FOR ARITHMETIC */ 00039000
*         /* MOVE LIST FORMS OF MACROS TO AUTOMATIC STORAGE          */ 00040000
*         GEN  (MVC   AUTOLIST(LISTEND-LISTBEG),LISTBEG );         0114 00041000
         MVC   AUTOLIST(LISTEND-LISTBEG),LISTBEG                        00042000
*         SDECB = SDECB && SDECB;   /* SET SEND ECB = 0              */ 00043000
*                                                                  0115 00044000
         XC    SDECB(4),SDECB                                      0115 00045000
*         /* IF IN THE BACKGROUND, ASSIGN DDNAME = SYSLBC.           */ 00046000
*         IF ECTBKGRD = '1'B                                       0116 00047000
*           THEN                    /* BACKGROUND,            Y02676 */ 00048000
         L     @10,CPPLPTR                                         0116 00049000
         L     @10,ECTPTR(,@10)                                    0116 00050000
         TM    ECTBKGRD(@10),B'00000010'                           0116 00051000
         BNO   @RF00116                                            0116 00052000
*             DO;                                                  0117 00053000
*               BCDDNM = 'SYSLBC';  /* ASSIGN DDNAME = SYSLBC Y02676 */ 00054000
         MVI   BCDDNM+6,C' '                                       0118 00055000
         MVI   BCDDNM+7,C' '                                       0118 00056000
         MVC   BCDDNM(6),@CC00376                                  0118 00057000
*               GOTO OPENBC;        /* SKIP DAIR              Y02676 */ 00058000
         B     OPENBC                                              0119 00059000
*             END;                                                 0120 00060000
* GEN(EJECT);                                                      0121 00061000
@RF00116 DS    0H                                                  0121 00062000
         EJECT                                                          00063000
* /*                                                                 */ 00064000
* /*                 -    D    A    I    R    -                      */ 00065000
* /*                                                                 */ 00066000
* /*      GO TO DAIR WITH CODE X'08' TO REQUEST ALLOCATION OF        */ 00067000
* /*      BROADCAST DATA SET.  SINCE THE DATA SET IS CATALOGED,      */ 00068000
* /*      ONLY THE DSNAME AND DISPOSITION FIELDS NEED BE SUPPLIED.   */ 00069000
* /*                                                                 */ 00070000
*         DAPB0PTR = ADDR(AUTODAIR);/* SET BASE FOR DAIR PARM BL     */ 00071000
         LA    @10,AUTODAIR                                        0122 00072000
         ST    @10,DAPB0PTR                                        0122 00073000
*         DAPB08=DAPB08 && DAPB08;  /* CLEAR DAIR PARM BL            */ 00074000
         XC    DAPB08(84,@10),DAPB08(@10)                          0123 00075000
*         DA08CD = DAIRCD08;        /* SET DAIR CODE = X'08'         */ 00076000
         MVC   DA08CD(2,@10),DAIRCD08                              0124 00077000
*         DA08PDSN = ADDR(DAIRDSN); /* PTR TO DATA SET NAME          */ 00078000
         LA    @02,DAIRDSN                                         0125 00079000
         ST    @02,DA08PDSN(,@10)                                  0125 00080000
*         DA08DDN  = ' ';           /* DDNAME FIELD = BLANK,       0126 00081000
*                                      DDNAME IS RETURNED HERE       */ 00082000
         MVI   DA08DDN+1(@10),C' '                                 0126 00083000
         MVC   DA08DDN+2(6,@10),DA08DDN+1(@10)                     0126 00084000
         MVI   DA08DDN(@10),C' '                                   0126 00085000
*         DA08UNIT = ' ';           /* UNITNAME = BLANK              */ 00086000
         MVI   DA08UNIT+1(@10),C' '                                0127 00087000
         MVC   DA08UNIT+2(6,@10),DA08UNIT+1(@10)                   0127 00088000
         MVI   DA08UNIT(@10),C' '                                  0127 00089000
*         DA08SER = ' ';            /* VOLUME SERIAL NO. = BLANK     */ 00090000
         MVI   DA08SER+1(@10),C' '                                 0128 00091000
         MVC   DA08SER+2(6,@10),DA08SER+1(@10)                     0128 00092000
         MVI   DA08SER(@10),C' '                                   0128 00093000
*         DA08MNM = ' ';            /* MEMBER NAME = BLANK           */ 00094000
         MVI   DA08MNM+1(@10),C' '                                 0129 00095000
         MVC   DA08MNM+2(6,@10),DA08MNM+1(@10)                     0129 00096000
         MVI   DA08MNM(@10),C' '                                   0129 00097000
*         DA08PSWD = ' ';           /* DATA SET PASSWORD = BLANK     */ 00098000
         MVI   DA08PSWD+1(@10),C' '                                0130 00099000
         MVC   DA08PSWD+2(6,@10),DA08PSWD+1(@10)                   0130 00100000
         MVI   DA08PSWD(@10),C' '                                  0130 00101000
*         DA08SHR = '1'B;           /* STATUS = SHARE                */ 00102000
         OI    DA08SHR(@10),B'00001000'                            0131 00103000
*         DA08KEEP = '1'B;          /* NORMAL DISPOSITION = KEEP     */ 00104000
         OI    DA08KEEP(@10),B'00001000'                           0132 00105000
*         DA08KEP = '1'B;           /* CONDITIONAL DISPOSITION = KEEP*/ 00106000
         OI    DA08KEP(@10),B'00001000'                            0133 00107000
*         DAPLPTR = ADDR(AUTODAPL); /* SET PTR TO PARM LIST          */ 00108000
         LA    @02,AUTODAPL                                        0134 00109000
         ST    @02,DAPLPTR                                         0134 00110000
*         DAPLUPT = CPPLUPT;        /* UPT ADDR                      */ 00111000
         L     @15,CPPLPTR                                         0135 00112000
         MVC   DAPLUPT(4,@02),CPPLUPT(@15)                         0135 00113000
*         DAPLECT = CPPLECT;        /* ECT ADDR                      */ 00114000
         MVC   DAPLECT(4,@02),CPPLECT(@15)                         0136 00115000
*         DAPLECB = ADDR(SDECB);    /* ADDR OF SEND ECB              */ 00116000
         LA    @14,SDECB                                           0137 00117000
         ST    @14,DAPLECB(,@02)                                   0137 00118000
*         DAPLPSCB = CPPLPSCB;      /* PTR TO PSCB                   */ 00119000
         MVC   DAPLPSCB(4,@02),CPPLPSCB(@15)                       0138 00120000
*         DAPLDAPB = DAPB0PTR;      /* PTR TO DAIR PARM BLOCK        */ 00121000
         ST    @10,DAPLDAPB(,@02)                                  0139 00122000
*         R1 = DAPLPTR;             /* SET REG1 = ADDR PARM LIST     */ 00123000
         LR    R1,@02                                              0140 00124000
*         GEN  (LINK  EP=IKJDAIR);  /* LINK TO DAIR '08' TO        0141 00125000
*                                      ALLOCATE BROADCAST DATA SET   */ 00126000
         LINK  EP=IKJDAIR                                               00127000
*         DAIRRETC = R15;           /* SAVE RETURN CODE FROM REG 15  */ 00128000
         ST    R15,DAIRRETC                                        0142 00129000
*         IF DAIRRETC > 0           /* TEST RETURN CODE FROM DAIR    */ 00130000
*           THEN                    /* IF RET CODE NOT ZERO          */ 00131000
         L     @10,DAIRRETC                                        0143 00132000
         LTR   @10,@10                                             0143 00133000
         BP    @RT00143                                            0143 00134000
*             GOTO BADDAIR;         /* ALLOCATION NOT SUCCESSFUL     */ 00135000
*         BCDDNM = DA08DDN;         /* SAVE DDNAME FROM DAIR         */ 00136000
         L     @10,DAPB0PTR                                        0145 00137000
         MVC   BCDDNM(8),DA08DDN(@10)                              0145 00138000
* GEN(EJECT);                                                      0146 00139000
         EJECT                                                          00140000
* /*                                                                 */ 00141000
* /*      CALL IO RTN TO OPEN BROADCAST DATA SET                     */ 00142000
* /*      THE DCB FOR THIS OPEN SPECIFIES FEEDBACK IN RBA FORM.      */ 00143000
* /*      READ FIRST RECORD OF BROADCAST DATA SET                    */ 00144000
* /*                                                                 */ 00145000
*OPENBC:  ;                         /* ENQ FOR SHARE ON FIRST RECORD */ 00146000
OPENBC   DS    0H                                                  0148 00147000
*         GEN  (ENQ  (QNAME,RNRC1,S,3,SYSTEM),RET=HAVE,MF=(E,ENQSL) );  00148000
         ENQ  (QNAME,RNRC1,S,3,SYSTEM),RET=HAVE,MF=(E,ENQSL)            00149000
*         FENQ1 = '1'B;             /* SET FLAG FOR ENQ ON RECORD 1  */ 00150000
         OI    FENQ1,B'01000000'                                   0149 00151000
*         IOPBASE = ADDR(IOPAREA);  /* SET BASE FOR IO PARM LIST     */ 00152000
         LA    IOPBASE,IOPAREA                                     0150 00153000
*         IOPARML = IOPARML && IOPARML;   /* CLEAR ENTIRE PARM AREA  */ 00154000
         XC    IOPARML(32,IOPBASE),IOPARML(IOPBASE)                0151 00155000
*         P1OPEN = '1'B;            /* SET PARM FLAG FOR OPEN        */ 00156000
         OI    P1OPEN(IOPBASE),B'10000000'                         0152 00157000
*         PARMDDNM = BCDDNM;        /* SET DDNAME IN PARM LIST       */ 00158000
         MVC   PARMDDNM(8,IOPBASE),BCDDNM                          0153 00159000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00160000
         LR    R1,IOPBASE                                          0154 00161000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO READ RECORD 1  */ 00162000
         L     @15,@CV00381                                        0155 00163000
         BALR  @14,@15                                             0155 00164000
*         RETC = R15;               /* SAVE RETURN CODE FROM REG 15  */ 00165000
         ST    R15,RETC                                            0156 00166000
*         IF RETC > 0               /* TEST RETURN CODE FROM IO RTN  */ 00167000
*           THEN                    /* READ WAS NOT SUCCESSFUL       */ 00168000
         L     @10,RETC                                            0157 00169000
         LTR   @10,@10                                             0157 00170000
         BP    @RT00157                                            0157 00171000
*             GOTO BADIO;           /* GO TO ANALYZE ERROR AND     0158 00172000
*                                      GIVE WARNING MSG              */ 00173000
*         R1PTR = PARMRCD1;         /* SET BASE FOR RECORD1          */ 00174000
         L     @10,PARMRCD1(,IOPBASE)                              0159 00175000
         ST    @10,@TF00001                                        0159 00176000
         MVC   R1PTR(3),@TF00001+1                                 0159 00177000
*         FOPEN = '1'B;             /* SET FLAG FOR GOOD OPEN        */ 00178000
         OI    FOPEN,B'00000010'                                   0160 00179000
*         RNUSD = R1USPTR;          /* SET ADDR FIRST USER DIR RECORD*/ 00180000
         MVC   RNUSD(3),R1USPTR(@10)                               0161 00181000
*SUBLIST:                 /* PROCESS 1 USERID SUBLIST OF PARM LIST   */ 00182000
*         IF UIDLCT = 0             /* TEST NO. USERIDS IN THIS LIST */ 00183000
*           THEN                    /* NO USERIDS IN THIS LIST       */ 00184000
SUBLIST  L     @10,UIDLPTR                                         0162 00185000
         MVC   @ZT00002+2(2),UIDLCT(@10)                           0162 00186000
         L     @02,@ZT00002                                        0162 00187000
         LTR   @02,@02                                             0162 00188000
         BZ    @RT00162                                            0162 00189000
*             GOTO SUBLEND;         /* GET PTR TO NEXT PARM SUBLIST  */ 00190000
*         JCNT = UIDLCT;            /* SET NO. USERIDS IN THIS LIST  */ 00191000
         MVC   JCNT(1),UIDLCT+1(@10)                               0164 00192000
*         J = 0;                    /*INIT INDEX TO USERID LIST      */ 00193000
         MVI   J,X'00'                                             0165 00194000
*         IF UIDADD = '1'B          /* TEST 'ADD' FLAG IN PARM LIST  */ 00195000
*           THEN                    /* 'ADD' SPEC'D IN PARM LIST     */ 00196000
         TM    UIDADD(@10),B'10000000'                             0166 00197000
         BNO   @RF00166                                            0166 00198000
*             FADD = '1'B;          /* SET FLAG FOR 'ADD' REQUESTED  */ 00199000
         OI    FADD,B'10000000'                                    0167 00200000
*           ELSE                    /* 'ADD' NOT SPEC'D              */ 00201000
*             IF UIDDEL = '1'B      /* TEST 'DELETE' FLAG IN PARM    */ 00202000
*               THEN                /* 'DELETE' SPEC'D IN PARM LIST  */ 00203000
         B     @RC00166                                            0168 00204000
@RF00166 L     @10,UIDLPTR                                         0168 00205000
         TM    UIDDEL(@10),B'01000000'                             0168 00206000
         BNO   @RF00168                                            0168 00207000
*                 FDEL = '1'B;      /* SET FLAG FOR 'DELETE' SPEC'D  */ 00208000
         OI    FDEL,B'01000000'                                    0169 00209000
*               ELSE                /* 'DELETE' NOT SPEC'D           */ 00210000
*                 IF UIDCHG = '1'B  /* TEST 'CHANGE' FLAG IN PARM    */ 00211000
*                   THEN            /* 'CHANGE' SPEC'D IN PARM LIST  */ 00212000
         B     @RC00168                                            0170 00213000
@RF00168 L     @10,UIDLPTR                                         0170 00214000
         TM    UIDCHG(@10),B'00100000'                             0170 00215000
         BNO   @RF00170                                            0170 00216000
*                     FCHNG = '1'B; /* SET FLAG FOR 'CHANGE SPEC'D   */ 00217000
         OI    FCHNG,B'00100000'                                   0171 00218000
*                   ELSE            /* PARMLIST IS BAD               */ 00219000
*                     GOTO SUBLEND; /* PROCESS NEXT USERID SUBLIST   */ 00220000
*SUBL2:                   /* PROCESS 1 USERID FROM ACCT PARM LIST    */ 00221000
*         J = J+1;                  /* BUMP INDEX TO USERID LIST     */ 00222000
@RC00168 DS    0H                                                  0173 00223000
@RC00166 DS    0H                                                  0173 00224000
SUBL2    LA    @10,1                                               0173 00225000
         MVC   @ZT00003+3(1),J                                     0173 00226000
         A     @10,@ZT00003                                        0173 00227000
         STC   @10,J                                               0173 00228000
*         IF J > JCNT               /* CHECK FOR END OF THIS SUBLIST */ 00229000
*           THEN                    /* END OF THIS USERID SUBLIST    */ 00230000
         CLC   J(1),JCNT                                           0174 00231000
         BH    @RT00174                                            0174 00232000
*             GOTO SUBLEND;         /* GET PTR TO NEXT SUBLIST       */ 00233000
*                                   /* ENQ 'E' ON USER MAIL DIRECTRY */ 00234000
*         GEN (ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL) );   00235000
         ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL)            00236000
*         FENQUSD = '1'B;           /* SET FLAG FOR ENQ ON DIRECTORY */ 00237000
         OI    FENQUSD,B'00010000'                                 0177 00238000
*READUSD:                 /* READ A USER MAIL DIRECTORY RECORD       */ 00239000
* /*                                                                 */ 00240000
* /*      CALL IO RTN TO READ USER DIRECTORY RECORD                  */ 00241000
* /*                                                                 */ 00242000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00243000
READUSD  XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0178 00244000
*         P1READ = '1'B;            /* SET PARM FLAG FOR READ        */ 00245000
         OI    P1READ(IOPBASE),B'01000000'                         0179 00246000
*         PARMRBA = ADDR(RNUSD);    /* SET RBA OF RECORD TO BE READ  */ 00247000
         LA    @10,RNUSD                                           0180 00248000
         ST    @10,@TF00001                                        0180 00249000
         MVC   PARMRBA(4,IOPBASE),@TF00001                         0180 00250000
*         PARMIOAD = ADDR(DIRAREA); /* SET AREA ADDR FOR RECORD      */ 00251000
         LA    @10,DIRAREA                                         0181 00252000
         ST    @10,@TF00001                                        0181 00253000
         MVC   PARMIOAD(4,IOPBASE),@TF00001                        0181 00254000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00255000
         LR    R1,IOPBASE                                          0182 00256000
*         CALL  IEEVSDIO;           /* CALL IO RTN                   */ 00257000
         L     @15,@CV00381                                        0183 00258000
         BALR  @14,@15                                             0183 00259000
*         RETC = R15;               /* SAVE RETURN CODE FROM REG 15  */ 00260000
         ST    R15,RETC                                            0184 00261000
*         IF RETC > 0               /* TEST IF RET CODE IS ZERO      */ 00262000
*           THEN                    /* UNSUCCESSFUL READ             */ 00263000
         L     @10,RETC                                            0185 00264000
         LTR   @10,@10                                             0185 00265000
         BP    @RT00185                                            0185 00266000
*             GOTO BADIO;           /* GO TO ANALYZE ERROR           */ 00267000
*         USDPTR = ADDR(DIRAREA);   /* SET DIR RCD BASE              */ 00268000
         LA    @10,DIRAREA                                         0187 00269000
         ST    @10,@TF00001                                        0187 00270000
         MVC   USDPTR(3),@TF00001+1                                0187 00271000
*         DO I = 1 TO DIM(USDENTRY); /* SCAN EVERY ENTRY             */ 00272000
         LA    I,1                                                 0188 00273000
@DL00188 DS    0H                                                  0189 00274000
*         IF UIDUSER(J,1:7)=USDID(I)/* DOES USERID IN DIRECTORY EQUAL   00275000
*                                      USERID IN PARM LIST           */ 00276000
*           THEN                    /* YES, USERIDS ARE EQUAL        */ 00277000
         SR    @10,@10                                             0189 00278000
         IC    @10,J                                               0189 00279000
         SLA   @10,3                                               0189 00280000
         LR    @02,I                                               0189 00281000
         MH    @02,@CH00078                                        0189 00282000
         L     @01,USDPTR-1                                        0189 00283000
         LA    @01,0(,@01)                                         0189 00284000
         L     @15,UIDLPTR                                         0189 00285000
         ALR   @15,@10                                             0189 00286000
         ALR   @01,@02                                             0189 00287000
         AL    @01,@CF00457                                        0189 00288000
         CLC   UIDUSER-8(7,@15),USDID(@01)                         0189 00289000
         BE    @RT00189                                            0189 00290000
*             GOTO IDFND;           /* PROCESS THIS USERID           */ 00291000
*         END;                      /* END OF THIS RECORD SCAN       */ 00292000
         AH    I,@CH00034                                          0191 00293000
         CH    I,@CH00230                                          0191 00294000
         BNH   @DL00188                                            0191 00295000
*         IF USDNEXT = 0            /* IS PTR TO NEXT DIRECTORY    0192 00296000
*                                      RECORD = 0                    */ 00297000
*           THEN                    /* YES, END OF USER DIRECTORY    */ 00298000
         L     @10,USDPTR-1                                        0192 00299000
         LA    @10,0(,@10)                                         0192 00300000
         MVC   @ZT00001+1(3),USDNEXT(@10)                          0192 00301000
         L     @02,@ZT00001                                        0192 00302000
         LTR   @02,@02                                             0192 00303000
         BZ    @RT00192                                            0192 00304000
*             GOTO DIREND;          /* TAKE ACTION ACCORDING TO PARM */ 00305000
*         RNPREV = RNUSD;           /* SAVE RBA OF THIS RECORD FOR 0194 00306000
*                                      LATER DEQ                     */ 00307000
         MVC   RNPREV(3),RNUSD                                     0194 00308000
*         RNUSD = USDNEXT;          /* RNAME FOR NEXT ENQ            */ 00309000
         MVC   RNUSD(3),USDNEXT(@10)                               0195 00310000
*                                   /* ENQ ON USER DIRECTORY RECORD  */ 00311000
*         GEN (ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL) );   00312000
         ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL)            00313000
*                                   /* DEQ ON PREVIOUS DIRECTORY REC */ 00314000
*         GEN (DEQ  (QNAME,RNPREV,3,SYSTEM),RET=HAVE,MF=(E,DEQL) );     00315000
         DEQ  (QNAME,RNPREV,3,SYSTEM),RET=HAVE,MF=(E,DEQL)              00316000
*         GOTO READUSD;             /* READ NEXT USER DIRECTORY REC  */ 00317000
         B     READUSD                                             0198 00318000
* /*                                                                 */ 00319000
* /*      USERID SPECIFIED IN PARM LIST FOUND IN DATA SET DIRECTORY  */ 00320000
* /*                                                                 */ 00321000
*IDFND:                   /* USERID FOUND IN DIRECTORY               */ 00322000
*         IF FCHNG = '1'B           /* TEST 'CHANGE' FLAG            */ 00323000
*           THEN                    /* 'CHANGE' SPEC'D IN PARM LIST  */ 00324000
IDFND    TM    FCHNG,B'00100000'                                   0199 00325000
         BO    @RT00199                                            0199 00326000
*             GOTO CHNG1;           /* PROCESS THIS USERID FOR CHANGE*/ 00327000
*           ELSE                    /* 'CHANGE' NOT REQUESTED        */ 00328000
*             GOTO DELADD;          /* DO COMMON PROCESSING FOR    0201 00329000
*                                      'DELETE' AND 'ADD'            */ 00330000
         B     DELADD                                              0201 00331000
*SUBLEND:                 /* END OF SUBLIST OF PARM LIST FROM ACCT   */ 00332000
*         IF UIDLNEX = 0            /* IS CHAIN PTR = 0              */ 00333000
*           THEN                    /* YES, END OF PARM LIST         */ 00334000
SUBLEND  L     @10,UIDLPTR                                         0202 00335000
         L     @10,UIDLNEX(,@10)                                   0202 00336000
         LTR   @10,@10                                             0202 00337000
         BZ    @RT00202                                            0202 00338000
*             GOTO EXITCODE;        /* GOTO CLEANUP & RETURN TO ACCT */ 00339000
*           ELSE;                   /* MORE USERID SUBLISTS REMAIN   */ 00340000
*         UIDLPTR = UIDLNEX;        /* SET BASE FOR NEXT SUBLIST     */ 00341000
         ST    @10,UIDLPTR                                         0205 00342000
*         GOTO SUBLIST;             /* PROCESS NEXT SUBLIST          */ 00343000
         B     SUBLIST                                             0206 00344000
* GEN(EJECT);                                                      0207 00345000
         EJECT                                                          00346000
* /*                                                                 */ 00347000
*DIREND:                  /* END OF DIRECTORY REACHED WITHOUT FINDING   00348000
*                            USERID SPECIFIED IN PARM LIST FROM ACCT */ 00349000
*         IF FDEL = '1'B            /* TEST DELETE FLAG              */ 00350000
*           THEN                    /* 'DELETE' SPEC'D IN PARM LIST  */ 00351000
DIREND   TM    FDEL,B'01000000'                                    0208 00352000
         BO    @RT00208                                            0208 00353000
*             GOTO DEQUSD;          /* DEQ ON DIRECTORY AND PROCESS     00354000
*                                      NEXT USERID. THIS USERID IS 0209 00355000
*                                      EFFECTIVELY DELETED SINCE IT     00356000
*                                      WAS NOT FOUND IN DIRECTORY    */ 00357000
*         IF FCHNG = '1'B           /* TEST 'CHANGE' FLAG            */ 00358000
*           THEN                    /* 'CHANGE' REQUESTED IN PARM    */ 00359000
         TM    FCHNG,B'00100000'                                   0210 00360000
         BO    @RT00210                                            0210 00361000
*             GOTO CHNGEND;         /* PROCESS 'CHANGE'              */ 00362000
*                         /* FALL THRU TO 'ADD' PROCESSING           */ 00363000
* /*               -     A          D         D      -               */ 00364000
* /*                                                                 */ 00365000
* /*      'ADD' USERID TO DATA SET DIRECTORY                         */ 00366000
* /*                                                                 */ 00367000
*ADDUSR:  NEXTUSD = R1USPTR;        /* SET ADDR OF NEXT DIRECTORY REC   00368000
*                                      TO BE SCANNED IF NO FREE ENTRY   00369000
*                                      IS FOUND IN THIS RECORD.      */ 00370000
ADDUSR   L     @10,R1PTR-1                                         0212 00371000
         LA    @10,0(,@10)                                         0212 00372000
         MVC   NEXTUSD(3),R1USPTR(@10)                             0212 00373000
*ADDUSR2:                 /* SCAN USER DIRECTORY RECORD              */ 00374000
*         DO I = 1 TO DIM(USDENTRY); /* SCAN ALL ENTRIES             */ 00375000
ADDUSR2  LA    I,1                                                 0213 00376000
@DL00213 DS    0H                                                  0214 00377000
*         IF USDENTRY(I) = ZERENT   /* IS THIS ENTRY = 0             */ 00378000
*           THEN                    /* YES, THIS ENTRY IS AVAILABLE  */ 00379000
         LR    @10,I                                               0214 00380000
         MH    @10,@CH00078                                        0214 00381000
         L     @02,USDPTR-1                                        0214 00382000
         LA    @02,0(,@02)                                         0214 00383000
         ALR   @02,@10                                             0214 00384000
         AL    @02,@CF00457                                        0214 00385000
         CLC   USDENTRY(13,@02),ZERENT                             0214 00386000
         BE    @RT00214                                            0214 00387000
*             GOTO ADDUSR3;         /* ADD NEW USERID HERE           */ 00388000
*         END;                      /* END OF THIS RECORD SCAN, NO 0216 00389000
*                                      AVAILABLE ENTRY WAS FOUND     */ 00390000
         AH    I,@CH00034                                          0216 00391000
         CH    I,@CH00230                                          0216 00392000
         BNH   @DL00213                                            0216 00393000
*         IF NEXTUSD = 0            /* IS PTR TO NEXT DIRECT. REC =0 */ 00394000
*           THEN                    /* YES, END OF DIRECTORY         */ 00395000
         L     @10,NEXTUSD-1                                       0217 00396000
         LA    @10,0(,@10)                                         0217 00397000
         LTR   @10,@10                                             0217 00398000
         BZ    @RT00217                                            0217 00399000
*             GOTO ADDUSD;          /* ADD A NEW USER DIRECTORY RECORD  00400000
*                                      TO DATA SET                   */ 00401000
*                                   /* DEQ ON THIS DIRECTORY RECORD  */ 00402000
*         GEN (DEQ  (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL) ); 0219 00403000
         DEQ  (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL)               00404000
*         RNUSD = NEXTUSD;          /* SET RNAME FOR NEXT DIRECT.REC */ 00405000
         MVC   RNUSD(3),NEXTUSD                                    0220 00406000
*         GEN (ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL) );   00407000
         ENQ  (QNAME,RNUSD,E,3,SYSTEM),RET=HAVE,MF=(E,ENQEL)            00408000
*         FENQUSD = '1'B;           /* SET FLAG FOR ENQ ON DIRECTORY */ 00409000
         OI    FENQUSD,B'00010000'                                 0222 00410000
*         SDIOPARM = SDIOPARM && SDIOPARM;  /* CLEAR IO PARM LIST */    00411000
         XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0223 00412000
*         P1READ = '1'B;           /* SET PARM FLAG FOR READ         */ 00413000
         OI    P1READ(IOPBASE),B'01000000'                         0224 00414000
*         PARMRBA= ADDR(RNUSD);    /* SET RBA OF RECORD TO READ      */ 00415000
         LA    @10,RNUSD                                           0225 00416000
         ST    @10,@TF00001                                        0225 00417000
         MVC   PARMRBA(4,IOPBASE),@TF00001                         0225 00418000
*         PARMIOAD = ADDR(DIRAREA);  /* SET AREA ADDR FOR READ       */ 00419000
         LA    @10,DIRAREA                                         0226 00420000
         ST    @10,@TF00001                                        0226 00421000
         MVC   PARMIOAD(4,IOPBASE),@TF00001                        0226 00422000
*         R1 = IOPBASE;            /* R1 = ADDR IO PARM LIST         */ 00423000
         LR    R1,IOPBASE                                          0227 00424000
*         CALL IEEVSDIO;           /* READ A USER MAIL DIRECTORY REC */ 00425000
         L     @15,@CV00381                                        0228 00426000
         BALR  @14,@15                                             0228 00427000
*         RETC = R15;              /* SAVE RETURN CODE FROM IO       */ 00428000
         ST    R15,RETC                                            0229 00429000
*         IF RETC > 0              /* TEST FOR SUCCESSFUL READ       */ 00430000
*            THEN                  /* READ WAS NOT SUCCESSFUL        */ 00431000
         L     @10,RETC                                            0230 00432000
         LTR   @10,@10                                             0230 00433000
         BP    @RT00230                                            0230 00434000
*               GOTO BADIO;        /* ANALYZE ERROR AND GIVE WARNING */ 00435000
*         USDPTR = ADDR(DIRAREA);   /* SET BASE FOR DIR RCD          */ 00436000
         LA    @10,DIRAREA                                         0232 00437000
         ST    @10,@TF00001                                        0232 00438000
         MVC   USDPTR(3),@TF00001+1                                0232 00439000
*         NEXTUSD = USDNEXT;        /* SET ADDR NEXT DIR RCD       0233 00440000
*                                      TO BE SCANNED AFTER THIS ONE  */ 00441000
         MVC   NEXTUSD(3),USDNEXT(@10)                             0233 00442000
*         GOTO ADDUSR2;             /* SCAN THIS RECORD FOR FREE   0234 00443000
*                                      SPACE TO ADD USERID           */ 00444000
         B     ADDUSR2                                             0234 00445000
* GEN(EJECT);                                                      0235 00446000
         EJECT                                                          00447000
* /*                                                                 */ 00448000
* /*      SET UP NEW DIRECTORY RECORD FOR ADDED USERID               */ 00449000
* /*                                                                 */ 00450000
*ADDUSD:                  /* ADD USERID TO NEW DIRECTORY RECORD      */ 00451000
*         DIRAREA2 = DIRAREA2 && DIRAREA2 ; /* SET AREA TO ZERO      */ 00452000
ADDUSD   XC    DIRAREA2(129),DIRAREA2                              0236 00453000
*         USDPTR = ADDR(DIRAREA2);  /* SET BASE FOR DIR RC         0237 00454000
*                                      TO BE FORMATTED               */ 00455000
         LA    @10,DIRAREA2                                        0237 00456000
         ST    @10,@TF00001                                        0237 00457000
         MVC   USDPTR(3),@TF00001+1                                0237 00458000
*         USDID(1) = UIDUSER(J);    /* PUT ADDED USERID INTO FIRST 0238 00459000
*                                      ENTRY OF NEW DIRECTORY RECORD */ 00460000
         SR    @02,@02                                             0238 00461000
         IC    @02,J                                               0238 00462000
         SLA   @02,3                                               0238 00463000
         L     @01,UIDLPTR                                         0238 00464000
         ALR   @01,@02                                             0238 00465000
         MVC   USDID(7,@10),UIDUSER-8(@01)                         0238 00466000
*         USDREND = '7F'X;         /* SET END OF RECORD INDICATOR    */ 00467000
         MVI   USDREND(@10),X'7F'                                  0239 00468000
*         IF FOLDMSG = '1'B                                        0240 00469000
*           THEN                                                   0240 00470000
         TM    FOLDMSG,B'00010000'                                 0240 00471000
         BNO   @RF00240                                            0240 00472000
*             DO;                                                  0241 00473000
*             FOLDMSG = '0'B;                                      0242 00474000
         NI    FOLDMSG,B'11101111'                                 0242 00475000
*             USDRBA(1) = OLDCHN;   /* SET PTR TO MSG CHAIN          */ 00476000
         MVC   USDRBA(3,@10),OLDCHN                                0243 00477000
*             USDEND(1) = OLDEND;   /* SET PTR TO MSG CHAIN END      */ 00478000
         MVC   USDEND(3,@10),OLDEND                                0244 00479000
*             END;                                                 0245 00480000
* /*                                                                 */ 00481000
* /*      WRITE NEW DIRECTORY RECORD                                 */ 00482000
* /*                                                                 */ 00483000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00484000
@RF00240 XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0246 00485000
*         P2WRDAF = '1'B;           /* SET FLAG FOR WRITE 'DAF'      */ 00486000
         OI    P2WRDAF(IOPBASE),B'01000000'                        0247 00487000
*         PARMRBA = ADDR(R1USPTR);  /* SET RBA TO BEGIN SEARCH       */ 00488000
         L     @10,R1PTR-1                                         0248 00489000
         LA    @10,0(,@10)                                         0248 00490000
         LA    @10,R1USPTR(,@10)                                   0248 00491000
         ST    @10,@TF00001                                        0248 00492000
         MVC   PARMRBA(4,IOPBASE),@TF00001                         0248 00493000
*         PARMIOAD = ADDR(DIRAREA2);/* SET AREA ADDR FOR RECORD      */ 00494000
         LA    @10,DIRAREA2                                        0249 00495000
         ST    @10,@TF00001                                        0249 00496000
         MVC   PARMIOAD(4,IOPBASE),@TF00001                        0249 00497000
*         PARMKEY = USDKEY;         /* SET KEY FOR USER DIRECTORY    */ 00498000
         MVC   PARMKEY(1,IOPBASE),USDKEY                           0250 00499000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00500000
         LR    R1,IOPBASE                                          0251 00501000
*         CALL  IEEVSDIO;           /* CALL IO RTN                   */ 00502000
         L     @15,@CV00381                                        0252 00503000
         BALR  @14,@15                                             0252 00504000
*         RETC = R15;               /* SAVE RETURN CODE FROM REG 15  */ 00505000
         ST    R15,RETC                                            0253 00506000
*         IF RETC > 0               /* TEST IF RET CODE IS ZERO      */ 00507000
*           THEN                    /* UNSUCCESSFUL READ             */ 00508000
         L     @10,RETC                                            0254 00509000
         LTR   @10,@10                                             0254 00510000
         BP    @RT00254                                            0254 00511000
*             GOTO BADIOA;          /* GO TO ANALYZE ERROR           */ 00512000
* /*                                                                 */ 00513000
* /*      CHAIN NEW USER DIRECTORY RECORD                            */ 00514000
* /*                                                                 */ 00515000
*         USDPTR = ADDR(DIRAREA);   /* SET BASE FOR DIR RCD          */ 00516000
         LA    @10,DIRAREA                                         0256 00517000
         ST    @10,@TF00001                                        0256 00518000
         MVC   USDPTR(3),@TF00001+1                                0256 00519000
*         USDNEXT = PARMRBA;        /* SET CHAIN PTR LAST DIR      0257 00520000
*                                      RECORD TO POINT TO NEW RECORD    00521000
*                                      JUST WRITTEN                  */ 00522000
         MVC   USDNEXT(3,@10),PARMRBA+1(IOPBASE)                   0257 00523000
*                                   /* PARMRBA = FEEBACK FROM 'WRITE'*/ 00524000
*         GOTO WRITUSD;             /* WRITE UPDATED DIRECTORY REC   */ 00525000
         B     WRITUSD                                             0258 00526000
* GEN(EJECT);                                                      0259 00527000
         EJECT                                                          00528000
*ADDUSR3:                /* ADD NEW USERID TO AVAILABLE ENTRY FOUND */  00529000
*         IF FOLDMSG = '1'B         /* FLAG FOR OLD MESSAGE CHAIN FOR   00530000
*                                      'FORMER'USERID IF 'CHANGE'    */ 00531000
*           THEN                    /* THERE IS A MSG CHAIN TO ADD   */ 00532000
ADDUSR3  TM    FOLDMSG,B'00010000'                                 0260 00533000
         BNO   @RF00260                                            0260 00534000
*             DO;                                                  0261 00535000
*             FOLDMSG = '0'B;       /* TURN FLAG OFF                 */ 00536000
         NI    FOLDMSG,B'11101111'                                 0262 00537000
*             USDRBA(I) = OLDCHN;   /* PUT PTR TO MSG CHAIN FOR 'FORMER 00538000
*                                      USERID INTO DIRECTORY ENTRY FOR  00539000
*                                      NEW USERID JUST ADDED         */ 00540000
         L     @10,USDPTR-1                                        0263 00541000
         LA    @10,0(,@10)                                         0263 00542000
         LR    @02,I                                               0263 00543000
         MH    @02,@CH00078                                        0263 00544000
         ST    @02,@TF00001                                        0263 00545000
         ALR   @02,@10                                             0263 00546000
         AL    @02,@CF00459                                        0263 00547000
         MVC   USDRBA-7(3,@02),OLDCHN                              0263 00548000
*             USDEND(I) = OLDEND;   /* SET PTR TO MSG CHAIN END      */ 00549000
         AL    @10,@TF00001                                        0264 00550000
         AL    @10,@CF00460                                        0264 00551000
         MVC   USDEND-10(3,@10),OLDEND                             0264 00552000
*             END;                                                 0265 00553000
*         USDID(I) = UIDUSER(J);    /* PUT USERID TO BE ADDED INTO 0266 00554000
*                                      DIRECTORY ENTRY               */ 00555000
@RF00260 LR    @10,I                                               0266 00556000
         MH    @10,@CH00078                                        0266 00557000
         L     @02,USDPTR-1                                        0266 00558000
         LA    @02,0(,@02)                                         0266 00559000
         ALR   @02,@10                                             0266 00560000
         AL    @02,@CF00457                                        0266 00561000
         SR    @10,@10                                             0266 00562000
         IC    @10,J                                               0266 00563000
         SLA   @10,3                                               0266 00564000
         L     @01,UIDLPTR                                         0266 00565000
         ALR   @01,@10                                             0266 00566000
         MVC   USDID(7,@02),UIDUSER-8(@01)                         0266 00567000
*         GOTO WRITUSD;             /* WRITE UPDATED DIRECTORY REC   */ 00568000
         B     WRITUSD                                             0267 00569000
* /*                                                                 */ 00570000
* /*      'CHANGE' - USERID NOT FOUND IN DIRECTORY                   */ 00571000
* /*                                                                 */ 00572000
*CHNGEND:                 /* 'CHANGE' - END OF DIRECTORY REACHED     */ 00573000
*         S = J // 2;               /* DIVIDE J BY 2. REMAINDER IN S */ 00574000
CHNGEND  SR    @00,@00                                             0268 00575000
         IC    @00,J                                               0268 00576000
         SRDA  @00,32                                              0268 00577000
         D     @00,@CF00073                                        0268 00578000
         STC   @00,S                                               0268 00579000
*         IF  S = 0                 /* IF REMAINDER IS 0, J IS EVEN,    00580000
*                                      AND USERID IS 'NEW' USERID  0269 00581000
*                                      OF THE PAIR SPEC'D FOR CHANGE */ 00582000
*           THEN                    /* USERID IS 'NEW' FOR 'CHANGE'  */ 00583000
         CLI   S,0                                                 0269 00584000
         BE    @RT00269                                            0269 00585000
*             GOTO ADDUSR;          /* ADD THIS USERID TO DIRECTORY  */ 00586000
*           ELSE;                   /* USERID IS 'FORMER' FOR CHANGE */ 00587000
*         FOLDMSG = '0'B;           /* SET FLAG OFF - NO MSG CHAIN 0272 00588000
*                                      FOR THIS FORMER(OLD) USERID   */ 00589000
         NI    FOLDMSG,B'11101111'                                 0272 00590000
*         GOTO DEQUSD;              /* DEQ ON DIRECTORY RECORD AND 0273 00591000
*                                      PROCESS NEXT USERID           */ 00592000
         B     DEQUSD                                              0273 00593000
* GEN(EJECT);                                                      0274 00594000
         EJECT                                                          00595000
* /*                                                                 */ 00596000
* /*            -    C    H    A    N    G    E    -                 */ 00597000
* /*                                                                 */ 00598000
*CHNG1:                   /* 'CHANGE' SPECIFIED IN PARM LIST         */ 00599000
*         S = J // 2;               /* DIVIDE J BY 2. REMAINDER IN S */ 00600000
CHNG1    SR    @00,@00                                             0275 00601000
         IC    @00,J                                               0275 00602000
         SRDA  @00,32                                              0275 00603000
         D     @00,@CF00073                                        0275 00604000
         STC   @00,S                                               0275 00605000
*         IF S = 0                  /* IF REMAINDER IS 0, J IS EVEN     00606000
*                                      AND USERID IS 'NEW' USERID  0276 00607000
*                                      OF THE PAIR SPEC'D FOR CHANGE */ 00608000
*           THEN                    /* USERID IS 'NEW' FOR 'CHANGE'  */ 00609000
         CLI   S,0                                                 0276 00610000
         BE    @RT00276                                            0276 00611000
*             GOTO CNEW;            /* PROCESS FOR 'NEW'             */ 00612000
*           ELSE;                   /* J IS ODD, USERID IS 'FORMER'  */ 00613000
*         IF USDRBA(I) = 0          /* IS PTR TO MSG CHAIN = 0       */ 00614000
*           THEN                    /* NO MSGS FOR THIS USERID       */ 00615000
         LR    @10,I                                               0279 00616000
         MH    @10,@CH00078                                        0279 00617000
         L     @02,USDPTR-1                                        0279 00618000
         LA    @02,0(,@02)                                         0279 00619000
         ALR   @02,@10                                             0279 00620000
         AL    @02,@CF00459                                        0279 00621000
         MVC   @ZT00001+1(3),USDRBA-7(@02)                         0279 00622000
         L     @10,@ZT00001                                        0279 00623000
         LTR   @10,@10                                             0279 00624000
         BNZ   @RF00279                                            0279 00625000
*             FOLDMSG = '0'B;       /* TURN OFF FLAG FOR MSG CHAIN   */ 00626000
         NI    FOLDMSG,B'11101111'                                 0280 00627000
*           ELSE                    /* MSG CHAIN FOR THIS USERID     */ 00628000
*             DO;                                                  0281 00629000
         B     @RC00279                                            0281 00630000
@RF00279 DS    0H                                                  0282 00631000
*             FOLDMSG = '1'B;       /* SET FLAG FOR MSG CHAIN FOR  0282 00632000
*                                      OLD ('FORMER') USERID         */ 00633000
         OI    FOLDMSG,B'00010000'                                 0282 00634000
*             OLDCHN = USDRBA(I);   /* SAVE PTR TO MSG CHAIN TO ADD     00635000
*                                      TO END OF CHAIN OF MSGS FOR 0283 00636000
*                                      'NEW' USERID OF'CHANGE PAIR'  */ 00637000
         L     @10,USDPTR-1                                        0283 00638000
         LA    @10,0(,@10)                                         0283 00639000
         LR    @02,I                                               0283 00640000
         MH    @02,@CH00078                                        0283 00641000
         ST    @02,@TF00001                                        0283 00642000
         ALR   @02,@10                                             0283 00643000
         AL    @02,@CF00459                                        0283 00644000
         MVC   OLDCHN(3),USDRBA-7(@02)                             0283 00645000
*             OLDEND = USDEND(I);   /* SAVE CURRENT END PTR          */ 00646000
         AL    @10,@TF00001                                        0284 00647000
         AL    @10,@CF00460                                        0284 00648000
         MVC   OLDEND(3),USDEND-10(@10)                            0284 00649000
*             END;                                                 0285 00650000
*         GOTO DELENT;              /* DELETE THIS USERID DIRECTORY     00651000
*                                      ENTRY                         */ 00652000
         B     DELENT                                              0286 00653000
* GEN(EJECT);                                                      0287 00654000
         EJECT                                                          00655000
* /*                                                                 */ 00656000
* /*      CHANGE -  USERID IS 'NEW'                                  */ 00657000
* /*                                                                 */ 00658000
*CNEW:                    /* USERID IS NEW OF PAIR FOR 'CHANGE'      */ 00659000
*         IF FOLDMSG = '0'B         /* IS THERE MSG CHAIN FOR      0288 00660000
*                                      'FORMER' USERID OF CHANGE PAIR*/ 00661000
*           THEN                    /* FLAG OFF, NO MSG CHAIN        */ 00662000
CNEW     TM    FOLDMSG,B'00010000'                                 0288 00663000
         BZ    @RT00288                                            0288 00664000
*             GOTO DEQUSD;          /* DEQ ON DIRECTORY RECORD,    0289 00665000
*                                      PROCESSING DONE FOR THIS USRID*/ 00666000
*           ELSE;                   /* FLAG ON, MSG CHAIN EXISTS     */ 00667000
*         FOLDMSG = '0'B;           /* TURN FLAG OFF                 */ 00668000
         NI    FOLDMSG,B'11101111'                                 0291 00669000
*         RNUSM = USDEND(I);        /* SET ADDR LAST MSG RECORD      */ 00670000
         L     @10,USDPTR-1                                        0292 00671000
         LA    @10,0(,@10)                                         0292 00672000
         LR    @02,I                                               0292 00673000
         MH    @02,@CH00078                                        0292 00674000
         ST    @02,@TF00001                                        0292 00675000
         ALR   @02,@10                                             0292 00676000
         AL    @02,@CF00460                                        0292 00677000
         MVC   RNUSM(3),USDEND-10(@02)                             0292 00678000
*         USDEND(I) = OLDEND;       /* SET PTR TO NEW CHAIN END      */ 00679000
         LR    @02,@10                                             0293 00680000
         AL    @02,@TF00001                                        0293 00681000
         AL    @02,@CF00460                                        0293 00682000
         MVC   USDEND-10(3,@02),OLDEND                             0293 00683000
*         IF USDRBA(I) = 0          /* IS MSG CHAIN PTR = 0          */ 00684000
*           THEN                    /* NO MSGS FOR 'NEW' USERID      */ 00685000
         LR    @02,@10                                             0294 00686000
         AL    @02,@TF00001                                        0294 00687000
         AL    @02,@CF00459                                        0294 00688000
         MVC   @ZT00001+1(3),USDRBA-7(@02)                         0294 00689000
         L     @02,@ZT00001                                        0294 00690000
         LTR   @02,@02                                             0294 00691000
         BNZ   @RF00294                                            0294 00692000
*             DO;                                                  0295 00693000
*             USDRBA(I) = OLDCHN;   /* PUT PTR TO MSG CHAIN FOR 'FORME  00694000
*                                    R'INTO DIRECTORY ENTRY FOR 'NEW'*/ 00695000
         AL    @10,@TF00001                                        0296 00696000
         AL    @10,@CF00459                                        0296 00697000
         MVC   USDRBA-7(3,@10),OLDCHN                              0296 00698000
*             GOTO WRITUSD;         /* WRITE UPDATED DIRECTORY RECORD*/ 00699000
         B     WRITUSD                                             0297 00700000
*             END;                                                 0298 00701000
* /*                                                                 */ 00702000
* /*      CALL I/O RTN TO READ LAST USER MAIL MSG RECORD             */ 00703000
* /*                                                                 */ 00704000
*         SDIOPARM = SDIOPARM && SDIOPARM;  /* CLEAR PARM AREA       */ 00705000
@RF00294 XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0299 00706000
*         P1READ = '1'B;            /* SET FLAG FOR READ             */ 00707000
         OI    P1READ(IOPBASE),B'01000000'                         0300 00708000
*         PARMRBA = ADDR(RNUSM);    /* SET RBA ADDR OF REC TO BE READ*/ 00709000
         LA    @10,RNUSM                                           0301 00710000
         ST    @10,@TF00001                                        0301 00711000
         MVC   PARMRBA(4,IOPBASE),@TF00001                         0301 00712000
*         PARMIOAD = ADDR(MSGAREA); /* SET AREA ADDR                 */ 00713000
         LA    @10,MSGAREA                                         0302 00714000
         ST    @10,@TF00001                                        0302 00715000
         MVC   PARMIOAD(4,IOPBASE),@TF00001                        0302 00716000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00717000
         LR    R1,IOPBASE                                          0303 00718000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO READ USER MSG  */ 00719000
         L     @15,@CV00381                                        0304 00720000
         BALR  @14,@15                                             0304 00721000
*         RETC = R15;               /* SAVE RETURN CODE REG 15       */ 00722000
         ST    R15,RETC                                            0305 00723000
*         IF RETC > 0               /* IF RETURN CODE IS NOT ZERO    */ 00724000
*           THEN                    /* IO OPERATION WAS NOT SUCCESS  */ 00725000
         L     @10,RETC                                            0306 00726000
         LTR   @10,@10                                             0306 00727000
         BP    @RT00306                                            0306 00728000
*             GOTO BADIO;           /* ANALYZE ERROR AND GIVE WARNING*/ 00729000
*         USMPTR = ADDR(MSGAREA);   /* SET BASE FOR USER MSG RCD     */ 00730000
         LA    @10,MSGAREA                                         0308 00731000
         ST    @10,@TF00001                                        0308 00732000
         MVC   USMPTR(3),@TF00001+1                                0308 00733000
*         USMNEXT = OLDCHN;         /* PUT PTR MSG CHAIN FOR       0309 00734000
*                                      'FORMER' USERID INTO CHAIN PTR   00735000
*                                      FIELD OF LAST MSG RECORD FOR     00736000
*                                      'NEW' USERID                  */ 00737000
         MVC   USMNEXT(3,@10),OLDCHN                               0309 00738000
* /*                                                                 */ 00739000
* /*      CALL IO RTN TO WRITE UPDATED USER MSG RECORD               */ 00740000
* /*                                                                 */ 00741000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00742000
         XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0310 00743000
*         P2WRDI = '1'B;            /* SET PARM FLAG FOR WRITE 'DI'  */ 00744000
         OI    P2WRDI(IOPBASE),B'10000000'                         0311 00745000
*         PARMKEY = USMKEY;         /* SET KEY FOR USER MSG RECORD   */ 00746000
         MVC   PARMKEY(1,IOPBASE),USMKEY                           0312 00747000
*         PARMRBA = ADDR(RNUSM);    /* SET RBA OF RECORD TO UPDATE   */ 00748000
         LA    @02,RNUSM                                           0313 00749000
         ST    @02,@TF00001                                        0313 00750000
         MVC   PARMRBA(4,IOPBASE),@TF00001                         0313 00751000
*         PARMIOAD = ADDR(MSGAREA); /* SET AREA ADDRESS              */ 00752000
         ST    @10,@TF00001                                        0314 00753000
         MVC   PARMIOAD(4,IOPBASE),@TF00001                        0314 00754000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00755000
         LR    R1,IOPBASE                                          0315 00756000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO WRITE          */ 00757000
         L     @15,@CV00381                                        0316 00758000
         BALR  @14,@15                                             0316 00759000
*         RETC = R15;               /* SAVE RETURN CODE REG 15       */ 00760000
         ST    R15,RETC                                            0317 00761000
*         IF RETC > 0               /* TEST RETURN CODE FOR ZERO     */ 00762000
*            THEN                                                  0318 00763000
         L     @10,RETC                                            0318 00764000
         LTR   @10,@10                                             0318 00765000
         BP    @RT00318                                            0318 00766000
*               GO TO BADIO;        /* GO TO ANALYZE ERROR           */ 00767000
*           ELSE                    /* WRITE WAS SUCCESSFUL          */ 00768000
*             GOTO WRITUSD;         /* END OF USER PROCESSING        */ 00769000
         B     WRITUSD                                             0320 00770000
* GEN(EJECT);                                                      0321 00771000
         EJECT                                                          00772000
*DELADD:                  /* 'DELETE' AND 'ADD' COMMON CODE          */ 00773000
*         IF USDRBA(I) ^= 0         /* IS MSG CHAIN FIELD NON-ZERO   */ 00774000
*           THEN                    /* YES, MSG CHAIN FOR THIS USERID*/ 00775000
DELADD   LR    @10,I                                               0322 00776000
         MH    @10,@CH00078                                        0322 00777000
         L     @02,USDPTR-1                                        0322 00778000
         LA    @02,0(,@02)                                         0322 00779000
         ALR   @02,@10                                             0322 00780000
         AL    @02,@CF00459                                        0322 00781000
         MVC   @ZT00001+1(3),USDRBA-7(@02)                         0322 00782000
         L     @10,@ZT00001                                        0322 00783000
         LTR   @10,@10                                             0322 00784000
         BNZ   @RT00322                                            0322 00785000
*             GOTO DELMSG;          /* DELETE MSGS FOR THIS USERID   */ 00786000
*           ELSE;                   /* NO MSGS FOR THIS USERID       */ 00787000
*CHKREQ:  IF FADD = '1'B            /* TEST IF 'ADD' SPEC'D          */ 00788000
*           THEN                    /* YES, 'ADD' FUNCTION REQUESTED */ 00789000
CHKREQ   TM    FADD,B'10000000'                                    0325 00790000
         BO    @RT00325                                            0325 00791000
*             GOTO ADD1;            /* DELETE MSG CHAIN BUT NOT USRID*/ 00792000
*           ELSE;                   /* 'DELETE' FUNCTION REQUESTED   */ 00793000
* GEN(EJECT);                                                      0328 00794000
         EJECT                                                          00795000
*DELENT:                  /* DELETE USERID FROM DIRECTORY            */ 00796000
*         USDENTRY(I) = ZERENT;     /* ZERO OUT USERID ENTRY FROM  0329 00797000
*                                      DIRECTORY RECORD              */ 00798000
DELENT   LR    @10,I                                               0329 00799000
         MH    @10,@CH00078                                        0329 00800000
         L     @02,USDPTR-1                                        0329 00801000
         LA    @02,0(,@02)                                         0329 00802000
         ALR   @02,@10                                             0329 00803000
         AL    @02,@CF00457                                        0329 00804000
         MVC   USDENTRY(13,@02),ZERENT                             0329 00805000
*         GOTO WRITUSD;             /* WRITE UPDATED DIRECTORY REC   */ 00806000
         B     WRITUSD                                             0330 00807000
* /*                                                                 */ 00808000
* /*                 -    A         D         D    -                 */ 00809000
* /*                                                                 */ 00810000
*ADD1:                    /* REMOVE CHAIN PTR FROM 'ADD'ED USERID. 0331 00811000
*                            ANY MESSAGES HAVE ALREADY BEEN DELETED  */ 00812000
*         IF USDRBA(I) = 0          /* IS MSG CHAIN PTR = 0          */ 00813000
*           THEN                    /* YES, NO MSG CHAIN TO DELETE,     00814000
*                                      NO UPDATE NEEDED TO DIRECTORY */ 00815000
ADD1     L     @10,USDPTR-1                                        0331 00816000
         LA    @10,0(,@10)                                         0331 00817000
         LR    @02,I                                               0331 00818000
         MH    @02,@CH00078                                        0331 00819000
         ST    @02,@TF00001                                        0331 00820000
         ALR   @02,@10                                             0331 00821000
         AL    @02,@CF00459                                        0331 00822000
         MVC   @ZT00001+1(3),USDRBA-7(@02)                         0331 00823000
         L     @02,@ZT00001                                        0331 00824000
         LTR   @02,@02                                             0331 00825000
         BZ    @RT00331                                            0331 00826000
*             GOTO DEQUSD;          /* DEQ ON DIRECTORY RECORD       */ 00827000
*           ELSE;                   /* MSG CHAIN PTR MUST BE DELETED,   00828000
*                                      MSG RECORDS ARE ALREADY DELETD*/ 00829000
*         USDRBA(I) = ZERENT(1:3);  /* ZERO OUT PTR TO MSG CHAIN IN     00830000
*                                      DIRECTORY RECORD              */ 00831000
         LR    @02,@10                                             0334 00832000
         AL    @02,@TF00001                                        0334 00833000
         AL    @02,@CF00459                                        0334 00834000
         MVC   USDRBA-7(3,@02),ZERENT                              0334 00835000
*         USDEND(I) = ZERENT(1:3);  /* ZERO PTR TO CHAIN END         */ 00836000
         AL    @10,@TF00001                                        0335 00837000
         AL    @10,@CF00460                                        0335 00838000
         MVC   USDEND-10(3,@10),ZERENT                             0335 00839000
*         GOTO WRITUSD;             /* WRITE UPDATED DIRECTORY RECORD*/ 00840000
         B     WRITUSD                                             0336 00841000
* /*                                                                 */ 00842000
* /*      CALL IO RTN TO 'DELETE' MSG RECORD                         */ 00843000
* /*                                                                 */ 00844000
*DELMSG:                  /* DELETE MSG RECORDS FOR THIS USERID      */ 00845000
*         RNUSM = USDRBA(I);        /* SET ADDR USER MSG RECORD      */ 00846000
DELMSG   LR    @10,I                                               0337 00847000
         MH    @10,@CH00078                                        0337 00848000
         L     @02,USDPTR-1                                        0337 00849000
         LA    @02,0(,@02)                                         0337 00850000
         ALR   @02,@10                                             0337 00851000
         AL    @02,@CF00459                                        0337 00852000
         MVC   RNUSM(3),USDRBA-7(@02)                              0337 00853000
* /*                                                                 */ 00854000
* /*        CLOSE THE DCB FOR FEEDBACK IN RBA FORM.                  */ 00855000
* /*                                                                 */ 00856000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM LIST AREA   */ 00857000
         XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0338 00858000
*         P2CLOSE = '1'B;           /* SET PARM FLAG FOR CLOSE       */ 00859000
         OI    P2CLOSE(IOPBASE),B'00100000'                        0339 00860000
*         R1 = IOPBASE;             /* REG1 = ADDR PARM LIST         */ 00861000
         LR    R1,IOPBASE                                          0340 00862000
*         CALL IEEVSDIO;            /* CALL IO RTN TO CLOSE DATA SET */ 00863000
         L     @15,@CV00381                                        0341 00864000
         BALR  @14,@15                                             0341 00865000
*         FOPEN = '0'B;             /* INDICATE DCB CLOSED           */ 00866000
         NI    FOPEN,B'11111101'                                   0342 00867000
* /*                                                                 */ 00868000
* /*      OPEN DCB TO GET FEEDBACK IN ACTUAL DEVICE ADDR FORM        */ 00869000
* /*                                                                 */ 00870000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM LIST AREA   */ 00871000
         XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0343 00872000
*         P1OPEN = '1'B;            /* SET PARM FLAG FOR OPEN        */ 00873000
         OI    P1OPEN(IOPBASE),B'10000000'                         0344 00874000
*         P2ACCT = '1'B;            /* SET INDICATOR SO I/O RTN WILL    00875000
*                                      USE PROPER DCB TO GET FEEDBACK   00876000
*                                      IN 'ACTUAL DEVICE ADDR' FORM  */ 00877000
         OI    P2ACCT(IOPBASE),B'00001000'                         0345 00878000
*         PARMDDNM = BCDDNM;        /* SET DDNAME IN PARM LIST       */ 00879000
         MVC   PARMDDNM(8,IOPBASE),BCDDNM                          0346 00880000
*         R1 = IOPBASE;             /* REG1 = ADDR PARM LIST         */ 00881000
         LR    R1,IOPBASE                                          0347 00882000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO OPEN DATA SET  */ 00883000
         L     @15,@CV00381                                        0348 00884000
         BALR  @14,@15                                             0348 00885000
*         RETC = R15;               /* SAVE RETURN CODE FROM IO RTN  */ 00886000
         ST    R15,RETC                                            0349 00887000
*         IF RETC > 0               /* RETURN CODE GREATER THAN ZERO */ 00888000
*           THEN                    /* OPEN WAS NOT SUCCESSFUL       */ 00889000
         L     @10,RETC                                            0350 00890000
         LTR   @10,@10                                             0350 00891000
         BP    @RT00350                                            0350 00892000
*             GOTO BADIO;           /* GOTO ANALYZE ERROR AND GIVE 0351 00893000
*                                      WARNING MSG                   */ 00894000
*         FOPEN = '1'B;             /* INDICATE DATA SET OPEN        */ 00895000
         OI    FOPEN,B'00000010'                                   0352 00896000
* /*                                                                 */ 00897000
* /*      CALL IO RTN TO READ USER MAIL MSG RECORD                   */ 00898000
* /*                                                                 */ 00899000
*READMSG:                 /* READ USER MSG RECORD                    */ 00900000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00901000
READMSG  XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0353 00902000
*         P1READ = '1'B;            /* SET FLAG FOR READ             */ 00903000
         OI    P1READ(IOPBASE),B'01000000'                         0354 00904000
*         USMDEVAD(1:3) = RNUSM;    /* SET RBA OF MAIL MSG RECORD    */ 00905000
         MVC   USMDEVAD(3),RNUSM                                   0355 00906000
*         PARMRBA = ADDR(USMDEVAD); /* SET RBA ADDR OF REC TO BE READ*/ 00907000
         LA    @10,USMDEVAD                                        0356 00908000
         ST    @10,@TF00001                                        0356 00909000
         MVC   PARMRBA(4,IOPBASE),@TF00001                         0356 00910000
*         PARMIOAD = ADDR(MSGAREA); /* SET AREA ADDR                 */ 00911000
         LA    @10,MSGAREA                                         0357 00912000
         ST    @10,@TF00001                                        0357 00913000
         MVC   PARMIOAD(4,IOPBASE),@TF00001                        0357 00914000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00915000
         LR    R1,IOPBASE                                          0358 00916000
*         CALL  IEEVSDIO;           /* CALL IO RTN TO READ USER MSG  */ 00917000
         L     @15,@CV00381                                        0359 00918000
         BALR  @14,@15                                             0359 00919000
*         RETC = R15;               /* SAVE RETURN CODE REG 15       */ 00920000
         ST    R15,RETC                                            0360 00921000
*         IF RETC > 0               /* IF RETURN CODE IS NOT ZERO    */ 00922000
*           THEN                    /* IO OPERATION WAS NOT SUCCESS  */ 00923000
         L     @10,RETC                                            0361 00924000
         LTR   @10,@10                                             0361 00925000
         BP    @RT00361                                            0361 00926000
*             GOTO BADIO;           /* ANALYZE ERROR AND GIVE WARNING*/ 00927000
*         MSGAREA2 = MSGAREA2 && MSGAREA2; /* SET MSG RECORD TO ZERO */ 00928000
         XC    MSGAREA2(129),MSGAREA2                              0363 00929000
*         MSGAREA2(1) = PARMFDBK;   /* PUT FEEDBACK FROM READ INTO 1ST  00930000
*                                      BYTE OF DATA FOR DELETION     */ 00931000
         MVC   MSGAREA2(1),PARMFDBK(IOPBASE)                       0364 00932000
*         P1READ = '0'B;            /* TURN OFF READ FLAG            */ 00933000
         NI    P1READ(IOPBASE),B'10111111'                         0365 00934000
*         P2WRDI = '1'B;            /* SET PARM FLAG FOR WRITE 'DI'  */ 00935000
*         P2DEL = '1'B;             /* SET PARM FLAG FOR DELETION    */ 00936000
         OI    P2WRDI(IOPBASE),B'10010000'                         0367 00937000
*         PARMRBA = ADDR(RNUSM);    /* SET RBA OF RECORD TO DELETE   */ 00938000
         LA    @10,RNUSM                                           0368 00939000
         ST    @10,@TF00001                                        0368 00940000
         MVC   PARMRBA(4,IOPBASE),@TF00001                         0368 00941000
*         PARMKEY = KEYFF;          /* SET KEY = 'FF' FOR RECORD TO     00942000
*                                      BE DELETED                    */ 00943000
         MVC   PARMKEY(1,IOPBASE),KEYFF                            0369 00944000
*         PARMIOAD = ADDR(MSGAREA2);/* WRITE RECORD OF ALL ZEROES    */ 00945000
         LA    @10,MSGAREA2                                        0370 00946000
         ST    @10,@TF00001                                        0370 00947000
         MVC   PARMIOAD(4,IOPBASE),@TF00001                        0370 00948000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00949000
         LR    R1,IOPBASE                                          0371 00950000
*         CALL  IEEVSDIO;           /* CALL IO RTN                   */ 00951000
         L     @15,@CV00381                                        0372 00952000
         BALR  @14,@15                                             0372 00953000
*         RETC = R15;               /* SAVE RETURN CODE FROM REG 15  */ 00954000
         ST    R15,RETC                                            0373 00955000
*         IF RETC > 0               /* TEST IF RET CODE IS ZERO      */ 00956000
*           THEN                                                   0374 00957000
         L     @10,RETC                                            0374 00958000
         LTR   @10,@10                                             0374 00959000
         BP    @RT00374                                            0374 00960000
*             GOTO BADIO;           /* GO TO ANALYZE ERROR           */ 00961000
*         USMPTR = ADDR(MSGAREA);   /* SET BASE FOR USER MSG RCD     */ 00962000
         LA    @10,MSGAREA                                         0376 00963000
         ST    @10,@TF00001                                        0376 00964000
         MVC   USMPTR(3),@TF00001+1                                0376 00965000
*         IF USMNEXT = 0            /* IS MSG CHAIN PTR = 0          */ 00966000
*           THEN                    /* END OF MSG CHAIN              */ 00967000
         MVC   @ZT00001+1(3),USMNEXT(@10)                          0377 00968000
         L     @02,@ZT00001                                        0377 00969000
         LTR   @02,@02                                             0377 00970000
         BZ    @RT00377                                            0377 00971000
*             GOTO CHKREQ;          /* CHECK PARMS REQUESTED         */ 00972000
*         RNUSM = USMNEXT;          /* SET ADDR NEXT MSG RCD         */ 00973000
         MVC   RNUSM(3),USMNEXT(@10)                               0379 00974000
*         GOTO READMSG;             /* READ NEXT USER MSG RECORD     */ 00975000
         B     READMSG                                             0380 00976000
* GEN(EJECT);                                                      0381 00977000
         EJECT                                                          00978000
*WRITUSD:                 /* WRITE USER MAIL DIRECTORY RECORD        */ 00979000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM AREA        */ 00980000
WRITUSD  XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0382 00981000
*         P2WRDI = '1'B;            /* SET PARM FLAG FOR WRITE 'DI'  */ 00982000
         OI    P2WRDI(IOPBASE),B'10000000'                         0383 00983000
*         PARMRBA = ADDR(RNUSD);    /* SET RBA OF RECORD TO WRITE    */ 00984000
         LA    @10,RNUSD                                           0384 00985000
         ST    @10,@TF00001                                        0384 00986000
         MVC   PARMRBA(4,IOPBASE),@TF00001                         0384 00987000
*         PARMIOAD = ADDR(DIRAREA); /* AREA ADDR OF RECORD TO WRITE  */ 00988000
         LA    @10,DIRAREA                                         0385 00989000
         ST    @10,@TF00001                                        0385 00990000
         MVC   PARMIOAD(4,IOPBASE),@TF00001                        0385 00991000
*         PARMKEY = USDKEY;         /* SET KEY FOR USER DIRECTORY    */ 00992000
         MVC   PARMKEY(1,IOPBASE),USDKEY                           0386 00993000
*         R1 = IOPBASE;             /* REG 1 = ADDR PARM LIST        */ 00994000
         LR    R1,IOPBASE                                          0387 00995000
*         CALL  IEEVSDIO;           /* CALL IO TO WRITE USER DIR. RC */ 00996000
         L     @15,@CV00381                                        0388 00997000
         BALR  @14,@15                                             0388 00998000
*         RETC = R15;               /* SAVE RETURN CODE REG15        */ 00999000
         ST    R15,RETC                                            0389 01000000
*TESTWRIT:                          /* TEST RET CODE AFTER WRITE     */ 01001000
*         IF RETC > 0               /* IF RETURN CODE IS NOT ZERO    */ 01002000
*           THEN                    /* IO OPERATION WAS NOT SUCCESS  */ 01003000
TESTWRIT L     @10,RETC                                            0390 01004000
         LTR   @10,@10                                             0390 01005000
         BP    @RT00390                                            0390 01006000
*             GOTO BADIO;           /* ANALYZE ERROR AND GIVE WARNING*/ 01007000
*DEQUSD:                   /* DEQUEUE ON USER MAIL DIRECTORY RECORD  */ 01008000
*             GEN ( DEQ (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL) );  01009000
DEQUSD    DEQ (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL)               01010000
*             FENQUSD = '0'B;       /* TURN OFF ENQ FLAG             */ 01011000
         NI    FENQUSD,B'11101111'                                 0393 01012000
*         RNUSD = R1USPTR;          /* SET RBA FOR NEXT ENQ AND READ */ 01013000
         L     @10,R1PTR-1                                         0394 01014000
         LA    @10,0(,@10)                                         0394 01015000
         MVC   RNUSD(3),R1USPTR(@10)                               0394 01016000
*         GOTO SUBL2;               /* PROCESS NEXT USERID IN PARMLIS*/ 01017000
         B     SUBL2                                               0395 01018000
*NOMAIN:        /* NOT ENOUGH MAIN STORAGE TO EXECUTE COMMAND        */ 01019000
*         PTLTEXT(1:TPNLNG) = MSGCTPN; /* PUT MSG ID INTO BUFFER     */ 01020000
NOMAIN   SR    @10,@10                                             0396 01021000
         IC    @10,TPNLNG                                          0396 01022000
         LR    @02,@10                                             0396 01023000
         BCTR  @02,0                                               0396 01024000
         L     @15,@CA00219                                        0396 01025000
         L     @15,MSGCP-MSGTABLE(,@15)                            0396 01026000
         EX    @02,@SM00463                                        0396 01027000
*                                   /* PUT MSG TEXT IN PUTLINE BUFR  */ 01028000
*         PTLTEXT(TPNLNG+1:TPNLNG+MSGCLNG) = MSGCTEXT;             0397 01029000
         LA    @02,PTLTEXT(@10)                                    0397 01030000
         SR    @14,@14                                             0397 01031000
         IC    @14,MSGCLNG(,@15)                                   0397 01032000
         LR    @09,@14                                             0397 01033000
         BCTR  @09,0                                               0397 01034000
         EX    @09,@SM00465                                        0397 01035000
*         PTLLL = MSGCLNG + TPNLNG +4; /* SET TOTAL LENGTH BUFFER    */ 01036000
         AR    @14,@10                                             0398 01037000
         AH    @14,@CH00118                                        0398 01038000
         STH   @14,PTLLL                                           0398 01039000
*         PTLOFFST = 0;             /* SET OFFSET = 0, NO MSG INSERT */ 01040000
         SR    @10,@10                                             0399 01041000
         STH   @10,PTLOFFST                                        0399 01042000
*         PTLSNEXT = 0;             /* PTR TO 2ND LEVEL MSG = ZERO   */ 01043000
         ST    @10,PTLSNEXT                                        0400 01044000
*         PTLSCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 01045000
         MVC   PTLSCNT(4),@CF00034                                 0401 01046000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT        */ 01047000
         LA    @10,PTLBUF                                          0402 01048000
         ST    @10,PTLSPTR                                         0402 01049000
*         GOTO WARNMSG;             /* ISSUE PUTLINE TO ACCOUNT TERM */ 01050000
*                                                                  0403 01051000
         B     WARNMSG                                             0403 01052000
*BADIOA:                  /*'WRITE IN NEXT FREE SPACE'NOT SUCCESSFUL */ 01053000
*         IF RETC = DSFULL          /* CHECK RET CODE FROM IO RTN    */ 01054000
*           THEN                    /* USER MAIL SECTION WAS FULL    */ 01055000
BADIOA   L     @10,RETC                                            0404 01056000
         MVC   @ZT00003+3(1),DSFULL                                0404 01057000
         C     @10,@ZT00003                                        0404 01058000
         BNE   @RF00404                                            0404 01059000
*             DO;                   /* ISSUE WARNING MSG TO ACCOUNT  */ 01060000
*               PTLTEXT(1:TPNLNG) = MSG4TPN; /* PUT MSG ID INTO BUFR */ 01061000
         SR    @10,@10                                             0406 01062000
         IC    @10,TPNLNG                                          0406 01063000
         LR    @02,@10                                             0406 01064000
         BCTR  @02,0                                               0406 01065000
         L     @15,@CA00219                                        0406 01066000
         L     @15,MSG4P-MSGTABLE(,@15)                            0406 01067000
         EX    @02,@SM00467                                        0406 01068000
*                                   /* PUT MSG TEXT IN PUTLINE BUFR  */ 01069000
*               PTLTEXT(TPNLNG+1:TPNLNG+MSG4LNG) = MSG4TEXT;       0407 01070000
         LA    @02,PTLTEXT(@10)                                    0407 01071000
         SR    @14,@14                                             0407 01072000
         IC    @14,MSG4LNG(,@15)                                   0407 01073000
         LR    @09,@14                                             0407 01074000
         BCTR  @09,0                                               0407 01075000
         EX    @09,@SM00469                                        0407 01076000
*               PTLTEXT(TPNLNG+MSG4SECT: TPNLNG+MSG4SECT+8) = MSG4USER; 01077000
         SR    @02,@02                                             0408 01078000
         IC    @02,MSG4SECT(,@15)                                  0408 01079000
         AR    @02,@10                                             0408 01080000
         LA    @01,PTLTEXT-1(@02)                                  0408 01081000
         MVI   8(@01),C' '                                         0408 01082000
         MVC   0(8,@01),MSG4USER(@15)                              0408 01083000
*               PTLLL = MSG4LNG + TPNLNG +4; /* SET TOTAL LENGTH BUFR*/ 01084000
         AR    @14,@10                                             0409 01085000
         AH    @14,@CH00118                                        0409 01086000
         STH   @14,PTLLL                                           0409 01087000
*               PTLOFFST = 0;       /* SET OFFSET = 0, NO MSG INSERT */ 01088000
         SR    @10,@10                                             0410 01089000
         STH   @10,PTLOFFST                                        0410 01090000
*               PTLSNEXT = 0;       /* PTR TO 2ND LEVEL MSG = ZERO   */ 01091000
         ST    @10,PTLSNEXT                                        0411 01092000
*               PTLSCNT = 1;        /* NO. OF MSG SEGMENTS = 1       */ 01093000
         MVC   PTLSCNT(4),@CF00034                                 0412 01094000
*               PTLSPTR = ADDR(PTLBUF);/* SET PTR TO MSG SEGMENT     */ 01095000
         LA    @10,PTLBUF                                          0413 01096000
         ST    @10,PTLSPTR                                         0413 01097000
*               GOTO WARNMSG;       /* ISSUE PUTLINE TO ACCOUNT TERM */ 01098000
         B     WARNMSG                                             0414 01099000
*             END;                                                 0415 01100000
*           ELSE;                   /* DATA SET NOT FULL. CHECK FOR     01101000
*                                      OTHER ERRORS IN BADIO         */ 01102000
@RF00404 DS    0H                                                  0417 01103000
* /*                                                                 */ 01104000
*BADIO:                             /* TEST RETURN CODE FROM IO RTN  */ 01105000
*         IF RETC = NOCORE          /* TEST RET CODE FOR 'NO CORE'   */ 01106000
*           THEN                    /* YES, IO ROUTINE DID NOT HAVE     01107000
*                                      ENOUGH CORE FOR ITS GETMAIN   */ 01108000
BADIO    L     @10,RETC                                            0417 01109000
         MVC   @ZT00003+3(1),NOCORE                                0417 01110000
         C     @10,@ZT00003                                        0417 01111000
         BE    @RT00417                                            0417 01112000
*             GOTO NOMAIN;          /* ISSUE WARNING MSG -  NOT ENOUGH  01113000
*                                      MAIN STORAGE TO EXECUTE COMMAND* 01114000
*           ELSE                    /* ENOUGH CORE AVAILABLE,      0419 01115000
*                                      ERROR IN BROADCAST DATA SET,     01116000
*                                      NOT IN SEND PROCESSOR         */ 01117000
*             GOTO NOTUSABL;        /* ISSUE WARNING MSG -         0419 01118000
*                                      BROADCAST DATA SET NOT USABLE */ 01119000
         B     NOTUSABL                                            0419 01120000
*BADDAIR:                 /* CALL TO DAIR NOT SUCCESSFUL             */ 01121000
*/*                                                                  */ 01122000
*/*  CALL IKJEFF18 TO ANALYZE THE DAIR FAILURE AND ISSUE WARNING MSG */ 01123000
*/*                                                                  */ 01124000
*         F18DAPL = ADDR(DAPL);     /* SET DAPL PTR PARM             */ 01125000
BADDAIR  MVC   F18DAPL(4),DAPLPTR                                  0420 01126000
*         F18DARC = ADDR(DAIRRETC); /* SET RET CODE PTR PARM         */ 01127000
         LA    @10,DAIRRETC                                        0421 01128000
         ST    @10,F18DARC                                         0421 01129000
*         F18F02A = ADDR(F18F02);   /* SET IKJEFF02 PTR PARM         */ 01130000
         LA    @10,F18F02                                          0422 01131000
         ST    @10,F18F02A                                         0422 01132000
*         F18CLNOA = ADDR(F18CLNO); /* SET CALL NUMBER PARM          */ 01133000
         LA    @10,F18CLNO                                         0423 01134000
         ST    @10,F18CLNOA                                        0423 01135000
*         GEN (LINK EP=IKJEFF18);   /* LINK TO DAIR ERROR          0424 01136000
*                                      ANALYSIS ROUTINE              */ 01137000
         LINK EP=IKJEFF18                                               01138000
*             GOTO EXITCODE;        /* CLEANUP AND RETURN TO ACCOUNT */ 01139000
*                                                                  0425 01140000
         B     EXITCODE                                            0425 01141000
*NOTUSABL:                /* BROADCAST DATA SET IS NOT USABLE NOW -     01142000
*                            ISSUE A WARNING MSG TO SENDER           */ 01143000
*        PTLTEXT(1:TPNLNG) = MSG5TPN;   /* PUT MSG ID INTO BUFR     */  01144000
NOTUSABL SR    @10,@10                                             0426 01145000
         IC    @10,TPNLNG                                          0426 01146000
         LR    @02,@10                                             0426 01147000
         BCTR  @02,0                                               0426 01148000
         L     @15,@CA00219                                        0426 01149000
         L     @15,MSG5P-MSGTABLE(,@15)                            0426 01150000
         EX    @02,@SM00471                                        0426 01151000
*                                  /* PUT MSG TEXT IN PUTLINE BUFR  */  01152000
*        PTLTEXT(TPNLNG+1 : TPNLNG+MSG5LNG) = MSG5TEXT;            0427 01153000
         LA    @02,PTLTEXT(@10)                                    0427 01154000
         SR    @14,@14                                             0427 01155000
         IC    @14,MSG5LNG(,@15)                                   0427 01156000
         LR    @09,@14                                             0427 01157000
         BCTR  @09,0                                               0427 01158000
         EX    @09,@SM00473                                        0427 01159000
*                                  /* INDICATE 2ND LVL MSG WITH '+' */  01160000
*        PTLTEXT(TPNLNG+MSG5LNG+1 ) = LVL2IND;                     0428 01161000
         LR    @02,@10                                             0428 01162000
         AR    @02,@14                                             0428 01163000
         LA    @01,PTLTEXT(@02)                                    0428 01164000
         MVC   0(1,@01),LVL2IND                                    0428 01165000
*        PTLLL = MSG5LNG + TPNLNG + 5;  /* SET TOTAL LENGTH OF BUFR */  01166000
         AR    @14,@10                                             0429 01167000
         AH    @14,@CH00240                                        0429 01168000
         STH   @14,PTLLL                                           0429 01169000
*         PTLOFFST = 0;             /* SET OFFSET = 0, NO MSG INSERT */ 01170000
         SR    @10,@10                                             0430 01171000
         STH   @10,PTLOFFST                                        0430 01172000
*         PTLSCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 01173000
         MVC   PTLSCNT(4),@CF00034                                 0431 01174000
*         PTLSPTR = ADDR(PTLBUF);   /* SET PTR TO MSG SEGMENT        */ 01175000
*                                                                  0432 01176000
         LA    @10,PTLBUF                                          0432 01177000
         ST    @10,PTLSPTR                                         0432 01178000
* /*   SET UP SECOND LEVEL MESSAGE                                   */ 01179000
*         IF RETC = OPENERR         /* CHECK RET CODE FOR OPEN ERROR */ 01180000
*           THEN                    /* YES, OPEN ERROR OCCURRED     */  01181000
         L     @10,RETC                                            0433 01182000
         MVC   @ZT00003+3(1),OPENERR                               0433 01183000
         C     @10,@ZT00003                                        0433 01184000
         BNE   @RF00433                                            0433 01185000
*                                   /* SET UP 2ND LEVEL MSG -      0434 01186000
*                                      'OPEN SVC ERROR'             */  01187000
*              PL2SPTR = MSG5L2(2); /* PTR TO 2ND LVL MSG SEG YM1846 */ 01188000
         L     @10,MSG5LVL2(,@15)                                  0434 01189000
         MVC   PL2SPTR(4),MSG5L2+4(@10)                            0434 01190000
*         IF RETC = IOERR           /* CHECK FOR I/O ERROR           */ 01191000
*           THEN                    /* YES, I/O ERROR OCCURRED       */ 01192000
@RF00433 L     @10,RETC                                            0435 01193000
         MVC   @ZT00003+3(1),IOERR                                 0435 01194000
         C     @10,@ZT00003                                        0435 01195000
         BNE   @RF00435                                            0435 01196000
*                                   /* SET UP 2ND LEVEL MSG -      0436 01197000
*                                      'I/O ERROR'                   */ 01198000
*              PL2SPTR = MSG5L2(1); /* PTR TO 2ND LVL MSG SEG YM1846 */ 01199000
         L     @10,@CA00219                                        0436 01200000
         L     @10,MSG5P-MSGTABLE(,@10)                            0436 01201000
         L     @10,MSG5LVL2(,@10)                                  0436 01202000
         MVC   PL2SPTR(4),MSG5L2(@10)                              0436 01203000
*           ELSE                    /* SET UP 2ND LEVEL MSG -      0437 01204000
*                                      'INCORRECT FORMAT'            */ 01205000
*              PL2SPTR = MSG5L2(3); /* PTR TO 2ND LVL MSG SEG YM1846 */ 01206000
*                                                                  0437 01207000
         B     @RC00435                                            0437 01208000
@RF00435 L     @10,@CA00219                                        0437 01209000
         L     @10,MSG5P-MSGTABLE(,@10)                            0437 01210000
         L     @10,MSG5LVL2(,@10)                                  0437 01211000
         MVC   PL2SPTR(4),MSG5L2+8(@10)                            0437 01212000
*MSG5OUT:               /* FINISH SETUP FOR PUTLINE                  */ 01213000
*         PTLSNEXT = ADDR(PTLEVEL2); /* SET PTR TO 2ND LEVEL MSG   0438 01214000
*                                       SEGMENT BLOCK                */ 01215000
@RC00435 DS    0H                                                  0438 01216000
MSG5OUT  LA    @10,PTLEVEL2                                        0438 01217000
         ST    @10,PTLSNEXT                                        0438 01218000
*         PL2NEXT = 0;              /* PTR TO 3RD LEVEL MSG = 0      */ 01219000
         SR    @10,@10                                             0439 01220000
         ST    @10,PL2NEXT                                         0439 01221000
*         PL2SCNT = 1;              /* NO. OF MSG SEGMENTS = 1       */ 01222000
         MVC   PL2SCNT(4),@CF00034                                 0440 01223000
*                                   /* PUTLINE MSG TO ACCOUNT TERM   */ 01224000
*                                                                  0441 01225000
* /*                                                                 */ 01226000
* /*            -    P    U    T    L    I    N    E    -            */ 01227000
* /*                                                                 */ 01228000
* /*      'PUTLINE' WARNING MSG TO ACCOUNT TERMINAL.                 */ 01229000
*WARNMSG:                 /* ISSUE WARNING MSG TO ACCOUNT TERMINAL   */ 01230000
*         IOPLPTR = ADDR(AUTOPARM); /* SET POINTER TO PARM LIST      */ 01231000
WARNMSG  LA    @10,AUTOPARM                                        0441 01232000
         ST    @10,IOPLPTR                                         0441 01233000
*         IOPLUPT = CPPLUPT;        /* UPT ADDR                      */ 01234000
         L     @02,CPPLPTR                                         0442 01235000
         MVC   IOPLUPT(4,@10),CPPLUPT(@02)                         0442 01236000
*         IOPLECT = CPPLECT;        /* ECT ADDR                      */ 01237000
         MVC   IOPLECT(4,@10),CPPLECT(@02)                         0443 01238000
*         IOPLECB = ADDR(SDECB);    /* ADDR OF SEND ECB              */ 01239000
         LA    @02,SDECB                                           0444 01240000
         ST    @02,IOPLECB(,@10)                                   0444 01241000
*         R1 = IOPLPTR;             /* REG 1 = ADDR IOPL FOR PUTLINE */ 01242000
         LR    R1,@10                                              0445 01243000
*                                   /* ISSUE PUTLINE                 */ 01244000
*    GEN ( PUTLINE  PARM=PUTLL,OUTPUT=(PTLSEGBL,MULTLVL),MF=(E,(1)) );  01245000
          PUTLINE  PARM=PUTLL,OUTPUT=(PTLSEGBL,MULTLVL),MF=(E,(1))      01246000
*         RETC = R15;               /* PUTLINE RET CODE FROM REG 15  */ 01247000
         ST    R15,RETC                                            0447 01248000
*         IF RETC = 0               /* CHECK RET CODE FOR ZERO       */ 01249000
*           THEN                    /* YES, SUCCESSFUL PUTLINE RETURN*/ 01250000
         L     @10,RETC                                            0448 01251000
         LTR   @10,@10                                             0448 01252000
         BZ    @RT00448                                            0448 01253000
*             GOTO EXITCODE;        /* CLEANUP AND END PROCESSING    */ 01254000
*         IF RETC = PUNOSPAC        /* CHECK RET CODE FOR 'NO SPACE' */ 01255000
*           THEN                    /* YES,NOT ENOUGH CORE FOR PUTLINE* 01256000
         MVC   @ZT00003+3(1),PUNOSPAC                              0450 01257000
         C     @10,@ZT00003                                        0450 01258000
         BE    @RT00450                                            0450 01259000
*             GOTO NOMAIN;          /* ISSUE WARNING MSG             */ 01260000
*           ELSE;                   /* SOME PUTLINE ERROR OTHER THAN    01261000
*                                      INSUFFICIENT MAIN STORAGE     */ 01262000
*                                                                  0452 01263000
*        IF FBADPUTL = '1'B       /* CHECK FOR PREVIOUS PUTLINE ERROR*/ 01264000
*          THEN                   /* YES, 2ND PUTLINE ERROR          */ 01265000
         TM    FBADPUTL,B'00000100'                                0453 01266000
         BO    @RT00453                                            0453 01267000
*            GOTO EXIT1;          /* CLEANUP AND EXIT QUIETLY        */ 01268000
*        FBADPUTL = '1'B;         /* SET FLAG FOR PUTLINE ERROR      */ 01269000
         OI    FBADPUTL,B'00000100'                                0455 01270000
*        PL2SPTR = MSGBL2(1);     /* SET PTR TO FIRST MSG SEGMENT  0456 01271000
*                                     FOR 2ND LEVEL MSG -          0456 01272000
*                                     'PUTLINE ERROR CODE'           */ 01273000
         L     @02,@CA00219                                        0456 01274000
         L     @02,MSGBP-MSGTABLE(,@02)                            0456 01275000
         L     @02,MSGBLVL2(,@02)                                  0456 01276000
         MVC   PL2SPTR(4),MSGBL2(@02)                              0456 01277000
*                         /* CONVERT RETURN CODE TO EBCDIC FOR MSG  */  01278000
*        R5 = RETC;               /* REG 5 = RETURN CODE FROM COMMON*/  01279000
         LR    R5,@10                                              0457 01280000
*        GEN;                                                      0458 01281000
         CVD   R5,WORK8               CONVERT RETURN CODE TO DECIMAL    01282000
         UNPK  WORK4(4),WORK8+5(3)    UNPACK INTO EBCDIC FORM           01283000
         OI    WORK4+3,X'F0'          CHANGE SIGN TO HEX'F0'            01284000
*        SRERRCD = WORK4(3:4);        /* SET FIELD FOR MSG INSERT  0459 01285000
*                                        OF ERROR CODE              */  01286000
         MVC   SRERRCD(2),WORK4+2                                  0459 01287000
*        SD2LL = 6;                   /* LENGTH OF BFR INCL HDR(4)  */  01288000
         MVC   SD2LL(2),@CH00444                                   0460 01289000
*        SD2OFFST = 29;               /* SET OFFSET FOR ERROR CODE 0461 01290000
*                                        INSERTION IN MSG TEXT     0461 01291000
*                                        FOR 2ND LEVEL MSG          */  01292000
         MVC   SD2OFFST(2),@CH00445                                0461 01293000
*        SD2TEXT = SRERRCD;           /* INSERTION TEXT, ERROR CODE */  01294000
*                                                                  0462 01295000
         MVC   SD2TEXT(2),SRERRCD                                  0462 01296000
*        PTLTEXT(1:TPNLNG) = MSGBTPN; /* PUT MSG ID INTO BUFFER     */  01297000
         SR    @10,@10                                             0463 01298000
         IC    @10,TPNLNG                                          0463 01299000
         LR    @02,@10                                             0463 01300000
         BCTR  @02,0                                               0463 01301000
         L     @15,@CA00219                                        0463 01302000
         L     @15,MSGBP-MSGTABLE(,@15)                            0463 01303000
         EX    @02,@SM00476                                        0463 01304000
*        PTLTEXT(TPNLNG+1 : MSGBLNG+TPNLNG) = MSGBTEXT;            0464 01305000
         LA    @02,PTLTEXT(@10)                                    0464 01306000
         SR    @14,@14                                             0464 01307000
         IC    @14,MSGBLNG(,@15)                                   0464 01308000
         AR    @14,@10                                             0464 01309000
         LCR   @10,@10                                             0464 01310000
         AR    @10,@14                                             0464 01311000
         BCTR  @10,0                                               0464 01312000
         EX    @10,@SM00478                                        0464 01313000
*        PTLOFFST = 0;                /* NO MSG INSERT ON LEVEL 1   */  01314000
         SR    @10,@10                                             0465 01315000
         STH   @10,PTLOFFST                                        0465 01316000
*        PTLLL = MSGBLNG + TPNLNG + 4; /* LENGTH OF BUFR INCL HDR(4)*/  01317000
         AH    @14,@CH00118                                        0466 01318000
         STH   @14,PTLLL                                           0466 01319000
*        PTLSNEXT = ADDR(PTLEVEL2);   /* PTR TO 2ND LEVEL MSG       */  01320000
         LA    @02,PTLEVEL2                                        0467 01321000
         ST    @02,PTLSNEXT                                        0467 01322000
*        PTLSCNT = 1;                 /* 1 SEGMENT FOR LEVEL 1      */  01323000
         MVC   PTLSCNT(4),@CF00034                                 0468 01324000
*        PTLSPTR = ADDR(PTLBUF);      /* PTR TO MSG SEGMENT         */  01325000
         LA    @02,PTLBUF                                          0469 01326000
         ST    @02,PTLSPTR                                         0469 01327000
*        PL2NEXT = 0;                 /* PTR TO 3RD LEVEL MSG = 0   */  01328000
         ST    @10,PL2NEXT                                         0470 01329000
*        PL2SCNT = 2;                 /* 2 SEGMENTS FOR LEVEL 2     */  01330000
         MVC   PL2SCNT(4),@CF00073                                 0471 01331000
*        PL2SPT2 = ADDR(SEGDESC2);    /* PTR TO MSG SEG 2 FOR LVL 2 */  01332000
         LA    @10,SEGDESC2                                        0472 01333000
         ST    @10,PL2SPT2                                         0472 01334000
*        GOTO WARNMSG;                /* 'PUTLINE' MSG TO ACCOUNT   */  01335000
         B     WARNMSG                                             0473 01336000
*LCLOSE:                  /* CLOSE BROADCAST DATA SET                */ 01337000
*         SDIOPARM = SDIOPARM && SDIOPARM; /* CLEAR PARM LIST AREA   */ 01338000
LCLOSE   XC    SDIOPARM(20,IOPBASE),SDIOPARM(IOPBASE)              0474 01339000
*         P2CLOSE = '1'B;           /* SET PARM FLAG FOR CLOSE       */ 01340000
         OI    P2CLOSE(IOPBASE),B'00100000'                        0475 01341000
*         R1 = IOPBASE;             /* REG1 = ADDR PARM LIST         */ 01342000
         LR    R1,IOPBASE                                          0476 01343000
*         CALL IEEVSDIO;            /* CALL IO RTN TO CLOSE DATA SET */ 01344000
         L     @15,@CV00381                                        0477 01345000
         BALR  @14,@15                                             0477 01346000
*         FOPEN = '0'B;             /* TURN OPEN FLAG OFF            */ 01347000
         NI    FOPEN,B'11111101'                                   0478 01348000
*         GOTO EXIT1;               /* CONTINUE CLEANUP              */ 01349000
         B     EXIT1                                               0479 01350000
*EXITCODE:                /* CLEANUP, DEQ, RELEASE DATA SET, RETURN  */ 01351000
*         IF FENQUSD = '1'B         /* TEST ENQ FLAG FOR USER DIRECT.*/ 01352000
*           THEN                    /* YES, USER DIRECT. IS ENQ'ED ON*/ 01353000
EXITCODE TM    FENQUSD,B'00010000'                                 0480 01354000
         BNO   @RF00480                                            0480 01355000
*             DO;                   /* DEQ ON USER MAIL DIRECTORY    */ 01356000
*              GEN ( DEQ (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL) ); 01357000
          DEQ (QNAME,RNUSD,3,SYSTEM),RET=HAVE,MF=(E,DEQL)               01358000
*              FENQUSD = '0'B;      /* TURN OFF ENQ FLAG             */ 01359000
         NI    FENQUSD,B'11101111'                                 0483 01360000
*             END;                                                 0484 01361000
*                                                                  0484 01362000
*         IF FENQ1 = '1'B           /* TEST ENQ FLAG FOR RECORD 1    */ 01363000
*           THEN                    /* RECORD 1 IS ENQ'ED ON         */ 01364000
@RF00480 TM    FENQ1,B'01000000'                                   0485 01365000
         BNO   @RF00485                                            0485 01366000
*             DO;                   /* DEQ ON RECORD 1               */ 01367000
*              GEN ( DEQ (QNAME,RNRC1,3,SYSTEM),RET=HAVE,MF=(E,DEQL) ); 01368000
          DEQ (QNAME,RNRC1,3,SYSTEM),RET=HAVE,MF=(E,DEQL)               01369000
*              FENQ1 = '0'B;         /* TURN OFF ENQ FLAG             * 01370000
         NI    FENQ1,B'10111111'                                   0488 01371000
*             END;                                                 0489 01372000
*         IF FOPEN = '1'B           /* TEST FLAG FOR DATA SET OPEN   */ 01373000
*           THEN                    /* BROADCAST DATA SET IS OPEN    */ 01374000
@RF00485 TM    FOPEN,B'00000010'                                   0490 01375000
         BO    @RT00490                                            0490 01376000
*             GOTO LCLOSE;          /* CLOSE BROADCAST DATA SET      */ 01377000
*                                                                  0491 01378000
*EXIT1:                   /* DATA SET HAS BEEN CLOSED                */ 01379000
*         RETURN CODE(0);           /* RETURN TO CALLER WITH       0492 01380000
*                                      CODE 0                        */ 01381000
*                                                                  0492 01382000
*                                                                  0492 01383000
EXIT1    L     @13,4(,@13)                                         0492 01384000
         L     @00,@SIZDATD                                        0492 01385000
         LR    @01,@12                                             0492 01386000
         FREEMAIN R,LV=(0),A=(1)                                        01387000
         SR    @15,@15                                             0492 01388000
         L     @14,12(,@13)                                        0492 01389000
         LM    @00,@12,20(@13)                                     0492 01390000
         BR    @14                                                 0492 01391000
*         GEN;                                                     0493 01392000
SPARE    DC    50X'00'              PATCH AREA                          01393000
*         END   IKJEES40                                           0494 01394000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01395000
*/*%INCLUDE SYSLIB  (IKJECT  )                                        * 01396000
*/*%INCLUDE SYSLIB  (IKJEFUDL)                                        * 01397000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        * 01398000
*/*%INCLUDE SYSLIB  (IKJDAPL )                                        * 01399000
*/*%INCLUDE SYSLIB  (IKJDAP08)                                        * 01400000
*/*%INCLUDE SYSLIB  (IKJZT301)                                        * 01401000
*/*%INCLUDE SYSLIB  (IKJZT304)                                        * 01402000
*/*%INCLUDE SYSLIB  (IKJZT305)                                        * 01403000
*;                                                                 0494 01404000
@EL00001 L     @13,4(,@13)                                         0494 01405000
@EF00001 L     @00,@SIZDATD                                        0494 01406000
         LR    @01,@12                                             0494 01407000
         FREEMAIN R,LV=(0),A=(1)                                        01408000
@ER00001 LM    @14,@12,12(@13)                                     0494 01409000
         BR    @14                                                 0494 01410000
@DATA    DS    0H                                                       01411000
@CH00118 DC    H'4'                                                     01412000
@CH00240 DC    H'5'                                                     01413000
@CH00444 DC    H'6'                                                     01414000
@CH00230 DC    H'9'                                                     01415000
@CH00078 DC    H'13'                                                    01416000
@CH00445 DC    H'29'                                                    01417000
@SM00463 MVC   PTLTEXT(0),MSGCTPN(@15)                                  01418000
@SM00465 MVC   0(0,@02),MSGCTEXT(@15)                                   01419000
@SM00467 MVC   PTLTEXT(0),MSG4TPN(@15)                                  01420000
@SM00469 MVC   0(0,@02),MSG4TEXT(@15)                                   01421000
@SM00471 MVC   PTLTEXT(0),MSG5TPN(@15)                                  01422000
@SM00473 MVC   0(0,@02),MSG5TEXT(@15)                                   01423000
@SM00476 MVC   PTLTEXT(0),MSGBTPN(@15)                                  01424000
@SM00478 MVC   0(0,@02),MSGBTEXT(@15)                                   01425000
@DATD    DSECT                                                          01426000
         DS    0F                                                       01427000
@SA00001 DS    18F                                                      01428000
@PC00001 DS    1F                                                       01429000
@SAV001  EQU   @SA00001                                                 01430000
@TF00001 DS    F                                                        01431000
@ZTEMPS  DS    0F                                                       01432000
@ZT00001 DC    F'0'                                                     01433000
@ZT00002 DC    F'0'                                                     01434000
@ZT00003 DC    F'0'                                                     01435000
@ZTEMPND EQU   *                                                        01436000
@ZLEN    EQU   @ZTEMPND-@ZTEMPS                                         01437000
@TEMPS   EQU   @ZTEMPS                                                  01438000
@L       EQU   @ZLEN                                                    01439000
IKJEES40 CSECT                                                          01440000
         DS    0F                                                       01441000
@CF00457 DC    F'-13'                                                   01442000
@CF00459 DC    F'-6'                                                    01443000
@CF00460 DC    F'-3'                                                    01444000
@CF00034 DC    F'1'                                                     01445000
@CH00034 EQU   @CF00034+2                                               01446000
@CF00073 DC    F'2'                                                     01447000
@DATD    DSECT                                                          01448000
         DS    0D                                                       01449000
CPPLPTR  DS    A                                                        01450000
UIDLPTR  DS    A                                                        01451000
IOPLPTR  DS    A                                                        01452000
DAPLPTR  DS    A                                                        01453000
DAPB0PTR DS    A                                                        01454000
DAIRRETC DS    A                                                        01455000
RETC     DS    A                                                        01456000
         DS    CL1                                                      01457000
OLDCHN   DS    AL3                                                      01458000
         DS    CL1                                                      01459000
OLDEND   DS    AL3                                                      01460000
         DS    CL1                                                      01461000
NEXTUSD  DS    AL3                                                      01462000
S        DS    AL1                                                      01463000
J        DS    AL1                                                      01464000
JCNT     DS    AL1                                                      01465000
         DS    CL2                                                      01466000
R1PTR    DS    AL3                                                      01467000
         DS    CL1                                                      01468000
USDPTR   DS    AL3                                                      01469000
         DS    CL1                                                      01470000
USMPTR   DS    AL3                                                      01471000
AUTOPARM DS    CL16                                                     01472000
AUTODAPL DS    CL20                                                     01473000
         DS    CL4                                                      01474000
AUTODAIR DS    CL84                                                     01475000
BCDDNM   DS    CL8                                                      01476000
F18PARMS DS    CL16                                                     01477000
         ORG   F18PARMS                                                 01478000
F18DAPL  DS    AL4                                                      01479000
F18DARC  DS    AL4                                                      01480000
F18F02A  DS    AL4                                                      01481000
F18CLNOA DS    AL4                                                      01482000
         ORG   F18PARMS+16                                              01483000
IOPAREA  DS    CL32                                                     01484000
AUTOLIST DS    CL56                                                     01485000
         ORG   AUTOLIST                                                 01486000
ENQSL    DS    CL12                                                     01487000
ENQEL    DS    CL12                                                     01488000
DEQL     DS    CL12                                                     01489000
PUTLL    DS    CL20                                                     01490000
         ORG   AUTOLIST+56                                              01491000
PTLBUF   DS    CL104                                                    01492000
         ORG   PTLBUF                                                   01493000
PTLLL    DS    FL2                                                      01494000
PTLOFFST DS    FL2                                                      01495000
PTLTEXT  DS    CL100                                                    01496000
         ORG   PTLBUF+104                                               01497000
PTLSEGBL DS    CL12                                                     01498000
         ORG   PTLSEGBL                                                 01499000
PTLSNEXT DS    AL4                                                      01500000
PTLSCNT  DS    FL4                                                      01501000
PTLSPTR  DS    AL4                                                      01502000
         ORG   PTLSEGBL+12                                              01503000
PTLEVEL2 DS    CL16                                                     01504000
         ORG   PTLEVEL2                                                 01505000
PL2NEXT  DS    AL4                                                      01506000
PL2SCNT  DS    FL4                                                      01507000
PL2SPTR  DS    AL4                                                      01508000
PL2SPT2  DS    AL4                                                      01509000
         ORG   PTLEVEL2+16                                              01510000
SEGDESC2 DS    CL6                                                      01511000
         ORG   SEGDESC2                                                 01512000
SD2LL    DS    FL2                                                      01513000
SD2OFFST DS    FL2                                                      01514000
SD2TEXT  DS    CL2                                                      01515000
         ORG   SEGDESC2+6                                               01516000
FLAGS    DS    BL2                                                      01517000
         ORG   FLAGS                                                    01518000
MYFLGS   DS    BL1                                                      01519000
         ORG   MYFLGS                                                   01520000
FADD     DS    BL1                                                      01521000
FDEL     EQU   MYFLGS+0                                                 01522000
FCHNG    EQU   MYFLGS+0                                                 01523000
FOLDMSG  EQU   MYFLGS+0                                                 01524000
@NM00033 EQU   MYFLGS+0                                                 01525000
FBADPUTL EQU   MYFLGS+0                                                 01526000
FOPEN    EQU   MYFLGS+0                                                 01527000
@NM00034 EQU   MYFLGS+0                                                 01528000
         ORG   FLAGS+1                                                  01529000
@NM00035 DS    BL1                                                      01530000
         ORG   @NM00035                                                 01531000
@NM00036 DS    BL1                                                      01532000
FENQ1    EQU   @NM00035+0                                               01533000
@NM00037 EQU   @NM00035+0                                               01534000
FENQUSD  EQU   @NM00035+0                                               01535000
         ORG   FLAGS+2                                                  01536000
RNUSD    DS    CL3                                                      01537000
RNPREV   DS    CL3                                                      01538000
RNUSM    DS    CL3                                                      01539000
USMDEVAD DS    CL8                                                      01540000
         DS    CL3                                                      01541000
SDECB    DS    CL4                                                      01542000
WORK4    DS    CL4                                                      01543000
SRERRCD  DS    CL2                                                      01544000
DIRAREA2 DS    CL129                                                    01545000
         DS    CL1                                                      01546000
DIRAREA  DS    CL129                                                    01547000
         DS    CL3                                                      01548000
MSGAREA  DS    CL129                                                    01549000
         DS    CL3                                                      01550000
MSGAREA2 DS    CL129                                                    01551000
         DS    CL7                                                      01552000
WORK8    DS    CL8                                                      01553000
IKJEES40 CSECT                                                          01554000
         DS    0F                                                       01555000
@SIZDATD DC    AL1(1)                                                   01556000
         DC    AL3(@ENDDATD-@DATD)                                      01557000
@SIZ001  EQU   @SIZDATD                                                 01558000
@CA00219 DC    A(MSGTABLE)                                              01559000
@CV00381 DC    V(IEEVSDIO)                                              01560000
         DS    0D                                                       01561000
F18F02   DC    A(0)                                                     01562000
F18CLNO  DC    AL2(1)                                                   01563000
TPNLNG   DC    AL1(9)                                                   01564000
PUNOSPAC DC    AL1(16)                                                  01565000
         DS    CL1                                                      01566000
RNAME    DS    AL3                                                      01567000
@CC00376 DC    C'SYSLBC'                                                01568000
DAIRCD08 DC    X'0008'                                                  01569000
DAIRDSN  DS    CL15                                                     01570000
         ORG   DAIRDSN                                                  01571000
DSLNGTH  DC    X'000D'                                                  01572000
DSNAME   DC    CL13'SYS1.BRODCAST'                                      01573000
         ORG   DAIRDSN+15                                               01574000
SDERR    DC    X'80'                                                    01575000
NOCORE   DC    X'40'                                                    01576000
BADFMT   DC    X'10'                                                    01577000
IOERR    DC    X'08'                                                    01578000
OPENERR  DC    X'02'                                                    01579000
DSFULL   DC    X'01'                                                    01580000
LVL2IND  DC    CL1'+'                                                   01581000
QNAME    DC    CL8'SYSIKJBC'                                            01582000
RNRC1    DC    X'000000'                                                01583000
KEYFF    DC    X'FF'                                                    01584000
USDKEY   DC    X'01'                                                    01585000
USMKEY   DC    X'03'                                                    01586000
ZEROES   DC    13AL1(0)                                                 01587000
@DATD    DSECT                                                          01588000
IKJEES40 CSECT ,                   RESUME CSECT                         01589000
LISTBEG   ENQ   (QNAME,RNAME,S,3,SYSTEM),RET=HAVE,MF=L                  01590000
          ENQ   (QNAME,RNAME,E,3,SYSTEM),RET=HAVE,MF=L                  01591000
          DEQ   (QNAME,RNAME,3,SYSTEM),RET=HAVE,MF=L                    01592000
          PUTLINE   OUTPUT=(0,MULTLVL),MF=L                             01593000
LISTEND  EQU   *                   END OF LIST FORMS                    01594000
@DATD    DSECT                                                          01595000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01596000
@ENDDATD EQU   *                                                        01597000
@DATEND  EQU   *                                                        01598000
IKJEES40 CSECT                                                          01599000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01600000
@01      EQU   01                                                       01601000
@02      EQU   02                                                       01602000
@03      EQU   03                                                       01603000
@04      EQU   04                                                       01604000
@05      EQU   05                                                       01605000
@06      EQU   06                                                       01606000
@07      EQU   07                                                       01607000
@08      EQU   08                                                       01608000
@09      EQU   09                                                       01609000
@10      EQU   10                                                       01610000
@11      EQU   11                                                       01611000
@12      EQU   12                                                       01612000
@13      EQU   13                                                       01613000
@14      EQU   14                                                       01614000
@15      EQU   15                                                       01615000
@0       EQU   00                                                       01616000
@1       EQU   01                                                       01617000
@2       EQU   02                                                       01618000
@3       EQU   03                                                       01619000
@4       EQU   04                                                       01620000
@5       EQU   05                                                       01621000
@6       EQU   06                                                       01622000
@7       EQU   07                                                       01623000
@8       EQU   08                                                       01624000
@9       EQU   09                                                       01625000
@A       EQU   10                                                       01626000
@B       EQU   11                                                       01627000
@C       EQU   12                                                       01628000
@D       EQU   13                                                       01629000
@E       EQU   14                                                       01630000
@F       EQU   15                                                       01631000
IOPBASE  EQU   @03                                                      01632000
R1       EQU   @01                                                      01633000
I        EQU   @04                                                      01634000
R5       EQU   @05                                                      01635000
R15      EQU   @15                                                      01636000
R0       EQU   @00                                                      01637000
         EXTRN MSGTABLE                                                 01638000
ACCTCPPL EQU   0                                                        01639000
CPPLUPT  EQU   ACCTCPPL+4                                               01640000
CPPLPSCB EQU   ACCTCPPL+8                                               01641000
CPPLECT  EQU   ACCTCPPL+12                                              01642000
UIDLPTRP EQU   ACCTCPPL+16                                              01643000
ECT      EQU   0                                                        01644000
ECTSWS   EQU   ECT+28                                                   01645000
ECTBKGRD EQU   ECTSWS                                                   01646000
DUIDL    EQU   0                                                        01647000
UIDLNEX  EQU   DUIDL                                                    01648000
UIDLSWS  EQU   DUIDL+4                                                  01649000
UIDADD   EQU   UIDLSWS                                                  01650000
UIDDEL   EQU   UIDLSWS                                                  01651000
UIDCHG   EQU   UIDLSWS                                                  01652000
UIDLCT   EQU   DUIDL+6                                                  01653000
UIDUSER  EQU   DUIDL+8                                                  01654000
IOPL     EQU   0                                                        01655000
IOPLUPT  EQU   IOPL                                                     01656000
IOPLECT  EQU   IOPL+4                                                   01657000
IOPLECB  EQU   IOPL+8                                                   01658000
DAPL     EQU   0                                                        01659000
DAPLUPT  EQU   DAPL                                                     01660000
DAPLECT  EQU   DAPL+4                                                   01661000
DAPLECB  EQU   DAPL+8                                                   01662000
DAPLPSCB EQU   DAPL+12                                                  01663000
DAPLDAPB EQU   DAPL+16                                                  01664000
DAPB08   EQU   0                                                        01665000
DA08CD   EQU   DAPB08                                                   01666000
DA08FLG  EQU   DAPB08+2                                                 01667000
DA08PDSN EQU   DAPB08+8                                                 01668000
DA08DDN  EQU   DAPB08+12                                                01669000
DA08UNIT EQU   DAPB08+20                                                01670000
DA08SER  EQU   DAPB08+28                                                01671000
DA08MNM  EQU   DAPB08+52                                                01672000
DA08PSWD EQU   DAPB08+60                                                01673000
DA08DSP1 EQU   DAPB08+68                                                01674000
DA08SHR  EQU   DA08DSP1                                                 01675000
DA08DPS2 EQU   DAPB08+69                                                01676000
DA08KEEP EQU   DA08DPS2                                                 01677000
DA08DPS3 EQU   DAPB08+70                                                01678000
DA08KEP  EQU   DA08DPS3                                                 01679000
DA08CTL  EQU   DAPB08+71                                                01680000
IOPARML  EQU   0                                                        01681000
SDIOPARM EQU   IOPARML                                                  01682000
@NM00025 EQU   SDIOPARM                                                 01683000
P1OPEN   EQU   @NM00025                                                 01684000
P1READ   EQU   @NM00025                                                 01685000
@NM00026 EQU   SDIOPARM+1                                               01686000
P2WRDI   EQU   @NM00026                                                 01687000
P2WRDAF  EQU   @NM00026                                                 01688000
P2CLOSE  EQU   @NM00026                                                 01689000
P2DEL    EQU   @NM00026                                                 01690000
P2ACCT   EQU   @NM00026                                                 01691000
PARMKEY  EQU   SDIOPARM+2                                               01692000
PARMFDBK EQU   SDIOPARM+3                                               01693000
PARMRBA  EQU   SDIOPARM+4                                               01694000
PARMIOAD EQU   SDIOPARM+8                                               01695000
PARMDDNM EQU   SDIOPARM+12                                              01696000
PARMRCD1 EQU   IOPARML+28                                               01697000
MSG4     EQU   0                                                        01698000
MSG4TPN  EQU   MSG4                                                     01699000
MSG4LNG  EQU   MSG4+16                                                  01700000
MSG4TEXT EQU   MSG4+17                                                  01701000
MSG4SECT EQU   MSG4+52                                                  01702000
MSG4USER EQU   MSG4+66                                                  01703000
MSG5     EQU   0                                                        01704000
MSG5TPN  EQU   MSG5                                                     01705000
MSG5LVL2 EQU   MSG5+16                                                  01706000
MSG5LNG  EQU   MSG5+20                                                  01707000
MSG5TEXT EQU   MSG5+21                                                  01708000
MSGB     EQU   0                                                        01709000
MSGBTPN  EQU   MSGB                                                     01710000
MSGBLVL2 EQU   MSGB+16                                                  01711000
MSGBLNG  EQU   MSGB+20                                                  01712000
MSGBTEXT EQU   MSGB+21                                                  01713000
MSGC     EQU   0                                                        01714000
MSGCTPN  EQU   MSGC                                                     01715000
MSGCLNG  EQU   MSGC+16                                                  01716000
MSGCTEXT EQU   MSGC+17                                                  01717000
MSG5L2   EQU   0                                                        01718000
MSGBL2   EQU   0                                                        01719000
R1BC     EQU   0                                                        01720000
R1BCPTRP EQU   R1BC                                                     01721000
R1USPTRP EQU   R1BC+4                                                   01722000
R1USPTR  EQU   R1USPTRP+1                                               01723000
USDIR    EQU   0                                                        01724000
USDENTRY EQU   USDIR                                                    01725000
USDID    EQU   USDENTRY                                                 01726000
USDRBA   EQU   USDENTRY+7                                               01727000
USDEND   EQU   USDENTRY+10                                              01728000
USDREND  EQU   USDIR+125                                                01729000
USDNEXT  EQU   USDIR+126                                                01730000
USMSG    EQU   0                                                        01731000
USMNEXT  EQU   USMSG+126                                                01732000
PARM     EQU   0                                                        01733000
ECTPTR   EQU   CPPLECT                                                  01734000
MSG4P    EQU   MSGTABLE+12                                              01735000
MSG5P    EQU   MSGTABLE+16                                              01736000
MSGBP    EQU   MSGTABLE+40                                              01737000
MSGCP    EQU   MSGTABLE+44                                              01738000
ZERENT   EQU   ZEROES                                                   01739000
MBL2SEGA EQU   MSGBL2                                                   01740000
MSG9P    EQU   MSGTABLE+32                                              01741000
M5L2SEGA EQU   MSG5L2                                                   01742000
M5L2SEGB EQU   MSG5L2+4                                                 01743000
M5L2SEGC EQU   MSG5L2+8                                                 01744000
*                                      START UNREFERENCED COMPONENTS    01745000
USMTEXT  EQU   USMSG+1                                                  01746000
USMLNG   EQU   USMSG                                                    01747000
@NM00039 EQU   USDIR+117                                                01748000
@NM00038 EQU   R1BC+45                                                  01749000
R1LEVEL  EQU   R1BC+38                                                  01750000
R1DSN    EQU   R1BC+14                                                  01751000
R1BCMAX  EQU   R1BC+12                                                  01752000
R1RECNUM EQU   R1BC+8                                                   01753000
R1USFLGS EQU   R1USPTRP                                                 01754000
R1BCPTR  EQU   R1BCPTRP+1                                               01755000
R1BCFLGS EQU   R1BCPTRP                                                 01756000
@NM00032 EQU   MSGC+9                                                   01757000
@NM00031 EQU   MSGB+9                                                   01758000
@NM00030 EQU   MSG5+9                                                   01759000
@NM00029 EQU   MSG4+58                                                  01760000
@NM00028 EQU   MSG4+53                                                  01761000
@NM00027 EQU   MSG4+9                                                   01762000
PARMDCB  EQU   IOPARML+24                                               01763000
PARMLMCT EQU   IOPARML+20                                               01764000
P1READ1  EQU   @NM00025                                                 01765000
P1CREATE EQU   @NM00025                                                 01766000
DA08ALN  EQU   DAPB08+76                                                01767000
DA08DSO  EQU   DAPB08+75                                                01768000
@NM00024 EQU   DAPB08+72                                                01769000
@NM00023 EQU   DA08CTL                                                  01770000
DA08ATRL EQU   DA08CTL                                                  01771000
DA08DMMY EQU   DA08CTL                                                  01772000
DA08PERM EQU   DA08CTL                                                  01773000
DA08RLSE EQU   DA08CTL                                                  01774000
DA08UID  EQU   DA08CTL                                                  01775000
DA08ABKL EQU   DA08CTL                                                  01776000
DA08TRKS EQU   DA08CTL                                                  01777000
DA08UNCT EQU   DA08DPS3                                                 01778000
DA08CATL EQU   DA08DPS3                                                 01779000
DA08DELE EQU   DA08DPS3                                                 01780000
@NM00022 EQU   DA08DPS3                                                 01781000
@NM00021 EQU   DA08DPS3                                                 01782000
@NM00020 EQU   DA08DPS3                                                 01783000
@NM00019 EQU   DA08DPS3                                                 01784000
DA08UCAT EQU   DA08DPS2                                                 01785000
DA08CAT  EQU   DA08DPS2                                                 01786000
DA08DEL  EQU   DA08DPS2                                                 01787000
@NM00018 EQU   DA08DPS2                                                 01788000
@NM00017 EQU   DA08DPS2                                                 01789000
@NM00016 EQU   DA08DPS2                                                 01790000
@NM00015 EQU   DA08DPS2                                                 01791000
DA08OLD  EQU   DA08DSP1                                                 01792000
DA08MOD  EQU   DA08DSP1                                                 01793000
DA08NEW  EQU   DA08DSP1                                                 01794000
@NM00014 EQU   DA08DSP1                                                 01795000
@NM00013 EQU   DA08DSP1                                                 01796000
@NM00012 EQU   DA08DSP1                                                 01797000
@NM00011 EQU   DA08DSP1                                                 01798000
DA08DQTY EQU   DAPB08+48                                                01799000
DA08SQTY EQU   DAPB08+44                                                01800000
DA08PQTY EQU   DAPB08+40                                                01801000
DA08BLK  EQU   DAPB08+36                                                01802000
DA08CTRC EQU   DAPB08+6                                                 01803000
DA08DARC EQU   DAPB08+4                                                 01804000
@NM00010 EQU   DA08FLG                                                  01805000
@NM00009 EQU   DA08FLG                                                  01806000
@NM00008 EQU   DA08FLG                                                  01807000
@NM00007 EQU   DA08FLG                                                  01808000
@NM00006 EQU   DA08FLG                                                  01809000
@NM00005 EQU   DA08FLG                                                  01810000
@NM00004 EQU   DA08FLG                                                  01811000
DA08FPE  EQU   DA08FLG                                                  01812000
IOPLIOPB EQU   IOPL+12                                                  01813000
@NM00003 EQU   UIDLSWS                                                  01814000
ECTBKPB  EQU   ECT+36                                                   01815000
ECTUSER  EQU   ECT+32                                                   01816000
ECTDDNUM EQU   ECT+29                                                   01817000
@NM00002 EQU   ECTSWS                                                   01818000
ECTNNOT  EQU   ECTSWS                                                   01819000
ECTNMAL  EQU   ECTSWS                                                   01820000
ECTLOGF  EQU   ECTSWS                                                   01821000
ECTATRM  EQU   ECTSWS                                                   01822000
@NM00001 EQU   ECTSWS                                                   01823000
ECTNOPD  EQU   ECTSWS                                                   01824000
ECTSCMD  EQU   ECT+20                                                   01825000
ECTPCMD  EQU   ECT+12                                                   01826000
ECTSMSG  EQU   ECT+9                                                    01827000
ECTMSGF  EQU   ECT+8                                                    01828000
ECTIOWA  EQU   ECT+4                                                    01829000
ECTRTCD  EQU   ECT+1                                                    01830000
ECTRCDF  EQU   ECT                                                      01831000
CPPLECB  EQU   ACCTCPPL+20                                              01832000
CPPLCBUF EQU   ACCTCPPL                                                 01833000
*                                      END UNREFERENCED COMPONENTS      01834000
@RT00143 EQU   BADDAIR                                                  01835000
@RT00157 EQU   BADIO                                                    01836000
@RT00162 EQU   SUBLEND                                                  01837000
@RF00170 EQU   SUBLEND                                                  01838000
@RT00174 EQU   SUBLEND                                                  01839000
@RT00185 EQU   BADIO                                                    01840000
@RT00189 EQU   IDFND                                                    01841000
@RT00192 EQU   DIREND                                                   01842000
@RT00199 EQU   CHNG1                                                    01843000
@RF00199 EQU   DELADD                                                   01844000
@RT00202 EQU   EXITCODE                                                 01845000
@RT00208 EQU   DEQUSD                                                   01846000
@RT00210 EQU   CHNGEND                                                  01847000
@RT00214 EQU   ADDUSR3                                                  01848000
@RT00217 EQU   ADDUSD                                                   01849000
@RT00230 EQU   BADIO                                                    01850000
@RT00254 EQU   BADIOA                                                   01851000
@RT00269 EQU   ADDUSR                                                   01852000
@RT00276 EQU   CNEW                                                     01853000
@RC00279 EQU   DELENT                                                   01854000
@RT00288 EQU   DEQUSD                                                   01855000
@RT00306 EQU   BADIO                                                    01856000
@RT00318 EQU   BADIO                                                    01857000
@RF00318 EQU   WRITUSD                                                  01858000
@RT00322 EQU   DELMSG                                                   01859000
@RT00325 EQU   ADD1                                                     01860000
@RT00331 EQU   DEQUSD                                                   01861000
@RT00350 EQU   BADIO                                                    01862000
@RT00361 EQU   BADIO                                                    01863000
@RT00374 EQU   BADIO                                                    01864000
@RT00377 EQU   CHKREQ                                                   01865000
@RT00390 EQU   BADIO                                                    01866000
@RT00417 EQU   NOMAIN                                                   01867000
@RF00417 EQU   NOTUSABL                                                 01868000
@RT00448 EQU   EXITCODE                                                 01869000
@RT00450 EQU   NOMAIN                                                   01870000
@RT00453 EQU   EXIT1                                                    01871000
@RT00490 EQU   LCLOSE                                                   01872000
@EL01    EQU   @EL00001                                                 01873000
@ENDDATA EQU   *                                                        01874000
         END   IKJEES40                                                 01875000
