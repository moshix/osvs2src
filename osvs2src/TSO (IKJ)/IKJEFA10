         TITLE 'IKJEFA10 - ACCOUNT/ADD SUBCOMMAND (PARSE/CREATE ROUTINE*00001000
               E)       '                                               00002000
IKJEFA10 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA10  78.174'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN  R,LV=(0)                                              00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*          ACCTPLP=R1;                  /* INITIALIZE PTR TO ACCOUNT    00022000
*                                          PARAMETER LIST            */ 00023000
         LR    ACCTPLP,R1                                          0039 00024000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 00025000
*          COMMON=COMMON&&COMMON;       /* CLEAR COMMUNICATIONS AREA */ 00026000
         XC    COMMON(47),COMMON                                   0041 00027000
*          PERFGRP=PERFGRP&&PERFGRP;    /* CLEAR PERF GROUP AREA   0042 00028000
*                                                              Y02678*/ 00029000
         XC    PERFGRP(32),PERFGRP                                 0042 00030000
*          GETPTRS=GETPTRS&&GETPTRS;    /* CLEAR GETMAIN POINTERS    */ 00031000
         XC    GETPTRS(20),GETPTRS                                 0043 00032000
*          STOWLIST=STOWLIST&&STOWLIST; /* CLEAR STOW LIST           */ 00033000
         XC    STOWLIST(14),STOWLIST                               0044 00034000
*          /* MOVE L-FORMS OF O/S MACROS INTO DYNAMIC STORAGE        */ 00035000
*          DYNLFORM(1:INLINLNG)=INLINLFM(1:INLINLNG);              0045 00036000
         L     @10,INLINLNG                                        0045 00037000
         BCTR  @10,0                                               0045 00038000
         EX    @10,@SM00453                                        0045 00039000
*          ACIOPTR=ADDR(ACIOPARM);      /* BASE FOR I/O SUBROUTINE   */ 00040000
         LA    @10,ACIOPARM                                        0046 00041000
         ST    @10,ACIOPTR                                         0046 00042000
*          ACIOPARM=ACIOPARM&&ACIOPARM; /* CLEAR I/O PARM AREA       */ 00043000
         XC    ACIOPARM(24),ACIOPARM                               0047 00044000
*          STOWC='01'X;                 /* INDICATE ONE DATA HALFWORD*/ 00045000
         MVI   STOWC,X'01'                                         0048 00046000
*          BLDLPTR=ADDR(BLDLLIST);      /* NAME FOR BLDL PARAM LIST  */ 00047000
         LA    @10,BLDLLIST                                        0049 00048000
         ST    @10,BLDLPTR                                         0049 00049000
*          DCBPTR=ADDR(DYNUADCB);       /* PTR TO UADS BPAM DCB      */ 00050000
         LA    @10,DYNUADCB                                        0050 00051000
         ST    @10,DCBPTR                                          0050 00052000
*          ECBPTR=ACCTECBP;             /* POINT TO ACCOUNT'S ECB    */ 00053000
         L     @05,ACCTECBP(,ACCTPLP)                              0051 00054000
         ST    @05,ECBPTR                                          0051 00055000
*          IOPLPTR=ADDR(PUTLLIST);      /* PTR TO PUTLINE PARAM LIST */ 00056000
         LA    @05,PUTLLIST                                        0052 00057000
         ST    @05,IOPLPTR                                         0052 00058000
*          NODELADR=ADDR(NLSTTAB);      /* POINT TO NODELIST TABLE   */ 00059000
         LA    @15,NLSTTAB                                         0053 00060000
         ST    @15,NODELADR                                        0053 00061000
*          MSGBASE=ADDR(MSGTABLE);      /* BASE FOR ADD MESSAGES     */ 00062000
         L     MSGBASE,@CV00213                                    0054 00063000
*          PUTLLIST(1:12)=ACCTPL;       /* FIRST THREE WORDS FROM  0055 00064000
*                                          ACCOUNT PARAMETER LIST    */ 00065000
         MVC   PUTLLIST(12),ACCTPL(ACCTPLP)                        0055 00066000
*          PTPBPTR=ADDR(DYNPTLST);      /* POINT TO PUTLINE PARM BLK */ 00067000
         LA    @15,DYNPTLST                                        0056 00068000
         ST    @15,PTPBPTR(,@05)                                   0056 00069000
*          PTPBOPUT=ADDR(OUTLNDS);      /* POINT TO OUTPUT LINE DESC.*/ 00070000
         LA    @05,OUTLNDS                                         0057 00071000
         ST    @05,PTPBOPUT(,@15)                                  0057 00072000
*          OUTLNDS=OUTLNDS&&OUTLNDS;    /* CLEAR OUTPUT LINE       0058 00073000
*                                          DESCRIPTORS FOR PUTLINE   */ 00074000
         XC    OUTLNDS(40),OUTLNDS                                 0058 00075000
*          OUT1LINK=ADDR(OUTLD2);       /* INITIALIZE LINKAGE FOR  0059 00076000
*                                          2 MESSAGE LEVELS          */ 00077000
         LA    @05,OUTLD2                                          0059 00078000
         ST    @05,OUT1LINK                                        0059 00079000
*          /* BUILD PARAMETER BLOCK FOR IKJEFA52 - WRITE SUBROUTINE  */ 00080000
*          ACIOFLGS='10001000'B;        /* SET FLAGS TO INDICATE   0060 00081000
*                                          A) SINGLE PHYSICAL MEMBR I/O 00082000
*                                          B) WRITE OP'N REQUESTED   */ 00083000
         MVI   ACIOFLGS,B'10001000'                                0060 00084000
*          ACIODCBA=ADDR(DYNUADCB);     /* UADS DCB ADDRESS          */ 00085000
         STCM  @10,7,ACIODCBA                                      0061 00086000
*          ACIOLINK=0;                  /* NO BLDL CHAIN ELEMENT     */ 00087000
         SLR   @10,@10                                             0062 00088000
         ST    @10,ACIOLINK                                        0062 00089000
*          ACIONMBR=1;                  /* NO. OF MEMBERS = ONE      */ 00090000
         MVI   ACIONMBR,X'01'                                      0063 00091000
*          ACIOPUTL=ACCTPLP;            /* PTR TO ACCOUNT PARM LIST  */ 00092000
         ST    ACCTPLP,ACIOPUTL                                    0064 00093000
*          ACIOMSGN='6';                /* ADD MSG NMBR FOR I/O MSG  */ 00094000
         MVI   ACIOMSGN,C'6'                                       0065 00095000
*          /* INITIALIZE PARSE PARAMETER CONTROL LIST (PCL) FR. MODEL*/ 00096000
*          /* PCL MUST BE MOVED INTO DYNAMIC STORAGE SINCE IT WILL BE*/ 00097000
*          /* MODIFIED IN THE NODELIST VALIDITY CK EXIT RTNE-NLSTEXIT*/ 00098000
*          RFY R0 RSTD;                 /* RESERVE REG. FOR GETMAIN  */ 00099000
*          R0=PCLLNGTH;                 /* SET LENGTH = PCL SIZE     */ 00100000
         L     @10,PCLMODAD                                        0067 00101000
         LH    R0,PCLLNGTH(,@10)                                   0067 00102000
*          PLENGTH=R0;                  /* SAVE LENGTH FOR FREEMAIN  */ 00103000
         ST    R0,PLENGTH                                          0068 00104000
*          /* USE OS/360 GETMAIN MACRO TO OBTAIN WORK AREA.          */ 00105000
*          GEN (GETMAIN EC,LV=(R0),A=PCLPTR,MF=(E,DYNGTLST))       0069 00106000
*            SETS(PCLPTR) REFS(R0,DYNGTLST);                       0069 00107000
         GETMAIN EC,LV=(R0),A=PCLPTR,MF=(E,DYNGTLST)                    00108000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00109000
*          RETNCODE=R15;                /* SAVE GETMAIN RETURN CODE  */ 00110000
         LR    RETNCODE,R15                                        0071 00111000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00112000
*          /* CHECK RETURN CODE                                      */ 00113000
*          IF RETNCODE^=0                                          0073 00114000
*            THEN                       /* GETMAIN FAILED            */ 00115000
         LTR   RETNCODE,RETNCODE                                   0073 00116000
         BNZ   @RT00073                                            0073 00117000
*              GO TO GETMERR;           /* GO PUT OUT MESSAGE & LEAVE*/ 00118000
*          RFY (R1,R14,R15) RSTD;       /* RESTRICT WORK REGISTERS   */ 00119000
*          R0=PCLPTR;                   /* GET TO ADDRESS            */ 00120000
         L     R0,PCLPTR                                           0076 00121000
*          R1=PLENGTH;                  /* LOAD R1 WITH LENGTH       */ 00122000
         L     @10,PLENGTH                                         0077 00123000
         LR    R1,@10                                              0077 00124000
*          R14=PCLMODAD;                /* GET FROM ADDRESS          */ 00125000
         L     R14,PCLMODAD                                        0078 00126000
*          R15=PLENGTH;                 /* LOAD R15 WITH LENGTH      */ 00127000
         LR    R15,@10                                             0079 00128000
*          GEN (MVCL  R0,R14)           /* MOVE PCL TO GOTTEN CORE   */ 00129000
*            REFS(R0,R1,R14,R15);                                  0080 00130000
         MVCL  R0,R14                                                   00131000
*          RFY (R0,R1,R14,R15) UNRSTD;  /* RELEASE WORK REGISTERS    */ 00132000
*          PPLPTR=ADDR(PARSLIST);       /* ESTABLISH PPL ADDRESSABLTY*/ 00133000
         LA    @10,PARSLIST                                        0082 00134000
         ST    @10,PPLPTR                                          0082 00135000
*          EXITADD=ADDR(NLSTEXIT);      /* POINT TO ADD'S EXIT       */ 00136000
         LA    @15,NLSTEXIT                                        0083 00137000
         ST    @15,EXITADD                                         0083 00138000
*          NODEPTR=ADDR(NLSTTAB);       /* POINT TO THE NODELIST TAB */ 00139000
         LA    @15,NLSTTAB                                         0084 00140000
         ST    @15,NODEPTR                                         0084 00141000
*          PERFPTR=ADDR(PERFGRP);       /* POINT TO AREA FOR PERF GRP*/ 00142000
         LA    @15,PERFGRP                                         0085 00143000
         ST    @15,PERFPTR                                         0085 00144000
*          CMDIND=1;                    /* INDICATE ADD CMD NODELIST */ 00145000
         MVI   CMDIND,X'01'                                        0086 00146000
*          RFY R13 RSTD;                /* RESTRICT SAVE AREA POINTER*/ 00147000
*          SAVARAD=R13;                 /* POINT TO ADD'S SAVE AREA  */ 00148000
         ST    R13,SAVARAD                                         0088 00149000
*          /* INITIALIZE PARSE PARAMETER LIST                        */ 00150000
*          PARSLIST(1:12)=ACCTPL;       /* FIRST THREE WORDS FROM  0089 00151000
*                                          ACCOUNT PARAMETER LIST    */ 00152000
         MVC   PARSLIST(12),ACCTPL(ACCTPLP)                        0089 00153000
*          PPLPCL=ADDR(PARSMACS);       /* ADDRESS OF DYNAMIC PCL    */ 00154000
         L     @15,PCLPTR                                          0090 00155000
         ST    @15,PPLPCL(,@10)                                    0090 00156000
*          PPLANS=ADDR(ADDPDLAD);       /* ADDPDLAD WILL CONTAIN   0091 00157000
*                                          ADDRESS OF PDL AFTER PARSE   00158000
*                                          EXECUTES                  */ 00159000
         LA    @15,ADDPDLAD                                        0091 00160000
         ST    @15,PPLANS(,@10)                                    0091 00161000
*          PPLCBUF=CMDBUFAD;            /* ADDR OF ADD COMMAND BUFFER*/ 00162000
         L     @15,CMDBUFAD(,ACCTPLP)                              0092 00163000
         ST    @15,PPLCBUF(,@10)                                   0092 00164000
*          PPLUWA=ADDR(VCHKPL);         /* ADDRESS OF EXIT ROUTINE 0093 00165000
*                                          PARAMETER LIST            */ 00166000
         LA    @15,VCHKPL                                          0093 00167000
         ST    @15,PPLUWA(,@10)                                    0093 00168000
*          /*  LINK TO PARSE SERVICE ROUTINE                         */ 00169000
*          GEN (LINK  EP=IKJPARS,MF=(E,PARSLIST))                  0094 00170000
*            FLOWS(NLSTEXIT) REFS(PARSLIST);                       0094 00171000
         LINK  EP=IKJPARS,MF=(E,PARSLIST)                               00172000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00173000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 00174000
         LR    RETNCODE,R15                                        0096 00175000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00176000
*          /* CHECK RETURN CODE FOR SUCCESSFUL COMPLETION.  IF PARSE */ 00177000
*          /* HAS NOT SUCCEEDED, CALL 'PARSERR' TO ANALYZE ERROR.    */ 00178000
*          IF RETNCODE^=0                                          0098 00179000
*            THEN                       /* PARSE FAILED              */ 00180000
         LTR   RETNCODE,RETNCODE                                   0098 00181000
         BZ    @RF00098                                            0098 00182000
*              DO;                                                 0099 00183000
*              ERRFLG='1'B;             /* TURN ON ERROR FLAG        */ 00184000
         OI    ERRFLG,B'01000000'                                  0100 00185000
*              IF RETNCODE=20                                      0101 00186000
*                THEN                   /* 20 = VAL CK FAILURE       */ 00187000
         C     RETNCODE,@CF00070                                   0101 00188000
         BNE   @RF00101                                            0101 00189000
*                  RETNCODE=EXITRTCD;   /* GET RET CODE FROM EXIT    */ 00190000
         L     RETNCODE,EXITRTCD                                   0102 00191000
*              IF RETNCODE=4|RETNCODE=8                            0103 00192000
*                THEN                   /* 4 = UNABLE TO PROMPT,   0103 00193000
*                                          8 = ATTENTION,            */ 00194000
@RF00101 C     RETNCODE,@CF00049                                   0103 00195000
         BE    @RT00103                                            0103 00196000
         C     RETNCODE,@CF00040                                   0103 00197000
         BE    @RT00103                                            0103 00198000
*                  GOTO CLEANUP0;       /* NO MSG. - JUST GO CLEAN UP*/ 00199000
*              /* WAS IT AN 'INSUFFICIENT SPACE' PROBLEM ?           */ 00200000
*              IF RETNCODE=16                                      0105 00201000
*                THEN                   /* YES - GETMAIN FAILURE     */ 00202000
         C     RETNCODE,@CF00042                                   0105 00203000
         BNE   @RF00105                                            0105 00204000
*                  DO;                                             0106 00205000
*                  OUT1LINK=0;          /* INDICATE NO 2ND LEVEL MSG */ 00206000
         SLR   @10,@10                                             0107 00207000
         ST    @10,OUT1LINK                                        0107 00208000
*                  OUT1SCNT='02'X;      /* 1ST LEVEL MSG SEG COUNT =2*/ 00209000
         MVI   OUT1SCNT,X'02'                                      0108 00210000
*                  OUT1SEG1=ADDMSG(2);  /* ADDR OF 'NO SPACE' MESSAGE*/ 00211000
         L     @10,ADDMSG+4(,MSGBASE)                              0109 00212000
         ST    @10,OUT1SEG1                                        0109 00213000
*                  OUT1SEG2=ADDMSG(3);  /* 2ND SEGMT='EXECUTE COMMAND*/ 00214000
         L     @10,ADDMSG+8(,MSGBASE)                              0110 00215000
         ST    @10,OUT1SEG2                                        0110 00216000
*                  GOTO ERRMSG;         /* GO TO ERROR TERMINATION   */ 00217000
         B     ERRMSG                                              0111 00218000
*                  END;                                            0112 00219000
*              /* MUST BE COMPLETION CODE 12 OR CODE > 20            */ 00220000
*              OUT2SEG2=ADDMSG(35);     /* 2ND SEGMT = 'PARSE '      */ 00221000
@RF00105 L     @10,ADDMSG+136(,MSGBASE)                            0113 00222000
         ST    @10,OUT2SEG2                                        0113 00223000
*              GOTO CMDSYSER;           /* GO TO PUT OUT 'COMMAND  0114 00224000
*                                          STSTEM ERROR MESSAGE'   0114 00225000
*                                          AND TERMINATE             */ 00226000
         B     CMDSYSER                                            0114 00227000
*              END;                                                0115 00228000
*          /* BUILD USERID SEGMENT FOR MESSAGES JUST IN CASE ...     */ 00229000
*          USRIDLN=USRLEN+4;            /* USERID SEGMENT LENGTH     */ 00230000
@RF00098 SLR   @10,@10                                             0116 00231000
         IC    @10,USRLEN                                          0116 00232000
         LA    @10,4(,@10)                                         0116 00233000
         STH   @10,USRIDLN                                         0116 00234000
*          USERID=USRID;                /* USERID FROM PARSE PDE     */ 00235000
         MVC   USERID(7),USRID                                     0117 00236000
*          /* ENQ ON THE DATA SET ('OPENUADS' = MINOR NAME)          */ 00237000
*          GEN (ENQ   ,RET=NONE,MF=(E,DYNNQLST))                   0118 00238000
*            REFS(MAJNAME,MINNAME,DYNNQLST);                       0118 00239000
         ENQ   ,RET=NONE,MF=(E,DYNNQLST)                                00240000
*          ENQSW='1'B;                  /* INDICATE THAT THE UADS IS    00241000
*                                          ENQ'D UPON                */ 00242000
         OI    ENQSW,B'10000000'                                   0119 00243000
*          /* INITIALIZE ELEMENTS OF BLDL LIST BEFORE AUGMENT/CREATE */ 00244000
*          /* DECISION WHICH FOLLOWS.                                */ 00245000
*          NUMOFENT=1;                  /* ONE ENTRY                 */ 00246000
         MVC   NUMOFENT(2),@CH00032                                0120 00247000
*          ENTLNGTH=LENGTH(BLDLENTY);   /* LENGTH = FOURTEEN BYTES   */ 00248000
         MVC   ENTLNGTH(2),@CH00257                                0121 00249000
*          BLDLNAME=USRID;              /* NAME FROM 'NODELIST'      */ 00250000
         MVC   BLDLNAME(8),USRID                                   0122 00251000
*          BLDLNAME(USRLEN+1)='0';      /* INDICATES BASE MEMBER     */ 00252000
         SLR   @10,@10                                             0123 00253000
         IC    @10,USRLEN                                          0123 00254000
         LA    @01,BLDLNAME(@10)                                   0123 00255000
         MVI   0(@01),C'0'                                         0123 00256000
*          /* CHECK FOR USER ATTENTION INTERRUPT BEFORE CONTINUING   */ 00257000
*          IF ATTENTN='1'B                                         0124 00258000
*            THEN                       /* USER WANTS ATTENTION      */ 00259000
         L     @10,ACCTECBP(,ACCTPLP)                              0124 00260000
         TM    ATTENTN(@10),B'01000000'                            0124 00261000
         BO    @RT00124                                            0124 00262000
*              GO TO CLEANUP0;          /* STOP -GO DIRECTLY TO CLNUP*/ 00263000
*          /* MUST NOW DETERMINE WHETHER THIS COMMAND IS INTENDED TO */ 00264000
*          /* CREATE A NEW USER ENTRY OR MERELY AUGMENT AN OLD ONE.  */ 00265000
*          /* IF A DATALIST IS PRESENT, THIS IS 'AUGMENT' MODE.      */ 00266000
*          IF DATAKEY(16)='1'B                                     0126 00267000
*            THEN                       /* 'DATA' KEYWORD IN COMMAND */ 00268000
         L     @10,ADDPDLAD                                        0126 00269000
         TM    DATAKEY+1(@10),B'00000001'                          0126 00270000
         BNO   @RF00126                                            0126 00271000
*              DO;                                                 0127 00272000
*              NUMOFLVL=NUMOFLV;        /* SET NUMBER OF ITEMS IN  0128 00273000
*                                          NODELIST                  */ 00274000
         IC    @06,NUMOFLV                                         0128 00275000
         STC   @06,NUMOFLVL                                        0128 00276000
*              DATASUBP=ADDR(DATASUBF); /* POINT TO DATA SUBFIELD PDE*/ 00277000
         LA    @06,DATASUBF(,@10)                                  0129 00278000
         ST    @06,DATASUBP                                        0129 00279000
*              /* THEN, SEE IF THE 'SIZE' KEYWORD WAS SUPPLIED       */ 00280000
*              IF SIZEKEY(16)='1'B                                 0130 00281000
*                THEN                   /* YES 'SIZE' SUPPLIED       */ 00282000
         TM    SIZEKEY+1(@10),B'00000001'                          0130 00283000
         BNO   @RF00130                                            0130 00284000
*                  DO;                                             0131 00285000
*                  SIZED=SIZE;          /* PUT SIZE VALUE IN COMMON1 */ 00286000
         L     @06,SIZNOADR(,@10)                                  0132 00287000
         MVC   SIZED(5),SIZE(@06)                                  0132 00288000
*                  SIZEL=SIZNOLNG;      /* PUT SIZE LENGTH IN COMMON */ 00289000
         LH    @06,SIZNOLNG(,@10)                                  0133 00290000
         STH   @06,SIZEL                                           0133 00291000
*                  SIZEH=SIZEHEX;       /* PUT HEX SIZE IN COMMON    */ 00292000
         LH    @10,SIZEHEX(,@10)                                   0134 00293000
         N     @10,@CF00457                                        0134 00294000
         STH   @10,SIZEH                                           0134 00295000
*                  END;                                            0135 00296000
*              /* THEN, SEE IF UNIT NAME PARAMETER WAS SPECIFIED     */ 00297000
*              IF UNITKEY(16)='1'B                                 0136 00298000
*                THEN                   /* YES 'UNIT' SUPPLIED       */ 00299000
@RF00130 L     @10,ADDPDLAD                                        0136 00300000
         TM    UNITKEY+1(@10),B'00000001'                          0136 00301000
         BNO   @RF00136                                            0136 00302000
*                  DO;                                             0137 00303000
*                  UNITN=UNITNAME       /* PUT UNIT VALUE IN COMMON1 */ 00304000
*                    (1:UNITNLNG);                                 0138 00305000
         MVI   UNITN+1,C' '                                        0138 00306000
         MVC   UNITN+2(6),UNITN+1                                  0138 00307000
         LH    @06,UNITNLNG(,@10)                                  0138 00308000
         BCTR  @06,0                                               0138 00309000
         L     @10,UNITNADR(,@10)                                  0138 00310000
         EX    @06,@SM00458                                        0138 00311000
*                  END;                                            0139 00312000
*                ELSE                                              0140 00313000
*                  UNITN='        ';    /* INIT UNIT NAME TO BLANKS  */ 00314000
         B     @RC00136                                            0140 00315000
@RF00136 MVC   UNITN(8),@CC00401                                   0140 00316000
*              RFY R1 RSTD;             /* RESTRICT PARAMETER POINTER*/ 00317000
@RC00136 DS    0H                                                  0142 00318000
*              R1=ADDR(COMMON);         /* INITIALIZE PTR TO ADD'S 0142 00319000
*                                          COMMUNICATION AREA        */ 00320000
         LA    R1,COMMON                                           0142 00321000
*              CALL IKJEFA12;           /* CALL 'ADD-AUGMENT'        */ 00322000
         L     @15,@CV00157                                        0143 00323000
         BALR  @14,@15                                             0143 00324000
*              RFY R1 UNRSTD;           /* RELEASE PARAMETER POINTER */ 00325000
*              GOTO CLEANUP0;           /* ON RETURN FROM IKJEFA12 THE  00326000
*                                          AUGMENT PROCESSING HAS BEEN  00327000
*                                          COMPLETED                 */ 00328000
         B     CLEANUP0                                            0145 00329000
*              END;                                                0146 00330000
*          /**********************************************************/ 00331000
*          /* THIS IS AN 'ADD-CREATE' COMMAND.  THIS SECTION ACTS    */ 00332000
*          /* WITH THE UNDERSTANDING THAT THE USERID SPECIFIED IN THE*/ 00333000
*          /* NODELIST DOES NOT ALREADY EXIST IN THE UADS.  IF THE   */ 00334000
*          /* USERID ALREADY EXISTS, THE TERMINAL USER WILL BE SO    */ 00335000
*          /* INFORMED AND RETURN WILL BE MADE TO ACCOUNT.           */ 00336000
*          /**********************************************************/ 00337000
*          GEN (USING IHADCB,R2)        /* ADDRESSABILITY FOR DCB    */ 00338000
*            REFS(R2);                                             0147 00339000
@RF00126 DS    0H                                                  0147 00340000
         USING IHADCB,R2                                                00341000
*          RFY R2 RSTD;                 /* RESERVE REG FOR DCB BASE  */ 00342000
*          R2=ADDR(DYNUADCB);           /* LOAD DCB POINTER          */ 00343000
         LA    R2,DYNUADCB                                         0149 00344000
*          /* OPEN THE UADS FOR OUTPUT                               */ 00345000
*          GEN (OPEN  ((R2),(OUTPUT)),MF=(E,DYNOPLST))             0150 00346000
*            REFS(R2,DYNOPLST);                                    0150 00347000
         OPEN  ((R2),(OUTPUT)),MF=(E,DYNOPLST)                          00348000
*          /* CHECK FOR SUCCESSFUL OPEN                              */ 00349000
*          IF DCBOFLGS(4)='0'B          /* OPEN FAILED               */ 00350000
*            THEN                                                  0151 00351000
         TM    DCBOFLGS,B'00010000'                                0151 00352000
         BNZ   @RF00151                                            0151 00353000
*              DO;                      /* SET PARAMETERS FOR PUTLINE*/ 00354000
*                OUT1SCNT='01'X;        /* 1ST LEVEL MSG SEG COUNT =1*/ 00355000
         MVI   OUT1SCNT,X'01'                                      0153 00356000
*                OUT1SEG1=ADDMSG(8);    /* ADDR OF UADS NO GOOD MSG  */ 00357000
         L     @10,ADDMSG+28(,MSGBASE)                             0154 00358000
         ST    @10,OUT1SEG1                                        0154 00359000
*                OUT2SCNT='01'X;        /* 2ND LEVEL MSG SEG COUNT =1*/ 00360000
         MVI   OUT2SCNT,X'01'                                      0155 00361000
*                OUT2SEG1=ADDMSG(9);    /* 2ND LVL = 'CANNOT OPEN'   */ 00362000
         L     @10,ADDMSG+32(,MSGBASE)                             0156 00363000
         ST    @10,OUT2SEG1                                        0156 00364000
*                GOTO ERRMSG;           /* ISSUE ERROR MSG AND QUIT  */ 00365000
         B     ERRMSG                                              0157 00366000
*              END;                                                0158 00367000
*          IF DCBBLKSI=0                /* WAS BLOCK SIZE SPECIFIED? */ 00368000
*            THEN                       /* NO,                       */ 00369000
@RF00151 LH    @10,DCBBLKSI                                        0159 00370000
         LTR   @10,@10                                             0159 00371000
         BNZ   @RF00159                                            0159 00372000
*              DO;                      /* SET PARAMETERS FOR PUTLINE*/ 00373000
*                OUT1SCNT='01'X;        /* 1ST LEVEL MSG SEG COUNT =1*/ 00374000
         MVI   OUT1SCNT,X'01'                                      0161 00375000
*                OUT1SEG1=ADDMSG(8);    /* ADDR OF UADS NO GOOD MSG  */ 00376000
         L     @10,ADDMSG+28(,MSGBASE)                             0162 00377000
         ST    @10,OUT1SEG1                                        0162 00378000
*                OUT2SCNT='01'X;        /* 2ND LEVEL MSG SEG COUNT =1*/ 00379000
         MVI   OUT2SCNT,X'01'                                      0163 00380000
*                OUT2SEG1=ADDMSG(12);   /* 2ND LVL='BLKSIZE TOO SMALL*/ 00381000
         L     @10,ADDMSG+44(,MSGBASE)                             0164 00382000
         ST    @10,OUT2SEG1                                        0164 00383000
*                GOTO ERRMSG;           /* GO TO ERROR TERMINATION   */ 00384000
         B     ERRMSG                                              0165 00385000
*              END;                                                0166 00386000
*          WKAREALN=DCBBLKSI;           /* SAVE LENGTH FOR FREEMAIN  */ 00387000
@RF00159 LH    @10,DCBBLKSI                                        0167 00388000
         ST    @10,WKAREALN                                        0167 00389000
*          /* DO A 'BLDL' ON THE UADS DIRECTORY TO LOOK UP USERID    */ 00390000
*          GEN (BLDL  (R2),BLDLLIST)                               0168 00391000
*            REFS(R2,BLDLLIST);                                    0168 00392000
         BLDL  (R2),BLDLLIST                                            00393000
*          RFY R2 UNRSTD;               /* RELEASE DCB BASE REGISTER */ 00394000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00395000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 00396000
         LR    RETNCODE,R15                                        0171 00397000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00398000
*          /* MAKE CERTAIN THE USERID DOES NOT EXIST IN THE UADS     */ 00399000
*          IF RETNCODE^=4                                          0173 00400000
*            THEN                       /* UNDESIRABLE RETURN CODE   */ 00401000
         C     RETNCODE,@CF00049                                   0173 00402000
         BE    @RF00173                                            0173 00403000
*              DO;                      /* ASCERTAIN EXACT CAUSE     */ 00404000
*                IF RETNCODE=0          /* USERID ALLREADY IN THE UAD*/ 00405000
*                  THEN                                            0175 00406000
         LTR   RETNCODE,RETNCODE                                   0175 00407000
         BNZ   @RF00175                                            0175 00408000
*                    DO;                /* SET PARAMETERS FOR PUTLINE*/ 00409000
*                      OUT1SCNT='03'X;  /* 1ST LEVEL MSG SEG COUNT =3*/ 00410000
         MVI   OUT1SCNT,X'03'                                      0177 00411000
*                      OUT1SEG1=ADDMSG(19); /* ADDR OF 'EXISTS' MSG  */ 00412000
         L     @10,ADDMSG+72(,MSGBASE)                             0178 00413000
         ST    @10,OUT1SEG1                                        0178 00414000
*                      OUT1SEG2=ADDMSG(20); /* ADDR OF 'USERID' PREF */ 00415000
         L     @10,ADDMSG+76(,MSGBASE)                             0179 00416000
         ST    @10,OUT1SEG2                                        0179 00417000
*                      USRIDOF=10;      /* OFFSET FOR INSERTION      */ 00418000
         MVC   USRIDOF(2),@CH00059                                 0180 00419000
*                      OUT1SEG3=ADDR(USRIDSEG); /* USERID SEG ADDR   */ 00420000
         LA    @10,USRIDSEG                                        0181 00421000
         ST    @10,OUT1SEG3                                        0181 00422000
*                      GOTO ERRMSG;     /* ISSUE ERROR MSG AND QUIT  */ 00423000
         B     ERRMSG                                              0182 00424000
*                    END;                                          0183 00425000
*                IF RETNCODE=8          /* DID AN I/O ERROR OCCURR   */ 00426000
*                  THEN                 /* YES,                      */ 00427000
@RF00175 C     RETNCODE,@CF00040                                   0184 00428000
         BNE   @RF00184                                            0184 00429000
*                    DO;                /* SET PARAMETERS FOR PUTLINE*/ 00430000
*                      OUT1SCNT='01'X;  /* 1ST LEVEL MSG SEG COUNT =1*/ 00431000
         MVI   OUT1SCNT,X'01'                                      0186 00432000
*                      OUT1SEG1=ADDMSG(8); /* ADDR OF UADS NO GD MSG */ 00433000
         L     @10,ADDMSG+28(,MSGBASE)                             0187 00434000
         ST    @10,OUT1SEG1                                        0187 00435000
*                      OUT2SCNT='01'X;  /* 2ND LEVEL MSG SEG COUNT =1*/ 00436000
         MVI   OUT2SCNT,X'01'                                      0188 00437000
*                      OUT2SEG1=ADDMSG(10); /* 2ND LVL='BLDL I/O ERR'*/ 00438000
         L     @10,ADDMSG+36(,MSGBASE)                             0189 00439000
         ST    @10,OUT2SEG1                                        0189 00440000
*                      GOTO ERRMSG;     /* ISSUE ERROR MSG AND QUIT  */ 00441000
         B     ERRMSG                                              0190 00442000
*                    END;                                          0191 00443000
*                /* AN INVALID RETURN CODE WAS RETURNED FROM BLDL    */ 00444000
*                OUT2SEG2=ADDMSG(36);   /* 2ND. SEGMENT=BLDL         */ 00445000
@RF00184 L     @10,ADDMSG+140(,MSGBASE)                            0192 00446000
         ST    @10,OUT2SEG2                                        0192 00447000
*                GO TO CMDSYSER;       /*GO TO PUT OUT 'COMMAND SYSTEM  00448000
*                                       ERROR MESSAGE' & LEAVE       */ 00449000
         B     CMDSYSER                                            0193 00450000
*              END;                                                0194 00451000
*          /* NEXT, GET MAIN STORAGE IN WHICH TO BUILD A NEW USER    */ 00452000
*          /* MEMBER BLOCK                                           */ 00453000
*          RFY R0 RSTD;                 /* RESERVE REG. FOR GETMAIN  */ 00454000
@RF00173 DS    0H                                                  0196 00455000
*          R0=WKAREALN;                 /* SET LENGTH = UADS BLKSIZE */ 00456000
         L     R0,WKAREALN                                         0196 00457000
*          /* USE OS/360 GETMAIN MACRO TO OBTAIN WORK AREA.          */ 00458000
*          GEN (GETMAIN EC,LV=(R0),A=WKAREAAD,MF=(E,DYNGTLST))     0197 00459000
*            REFS(R0,DYNGTLST) SETS(WKAREAAD);                     0197 00460000
         GETMAIN EC,LV=(R0),A=WKAREAAD,MF=(E,DYNGTLST)                  00461000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00462000
*          RETNCODE=R15;                /* SAVE GETMAIN RETURN CODE  */ 00463000
         LR    RETNCODE,R15                                        0199 00464000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00465000
*          /* CHECK RETURN CODE                                      */ 00466000
*          IF RETNCODE^=0                                          0201 00467000
*            THEN                       /* GETMAIN FAILED            */ 00468000
         LTR   RETNCODE,RETNCODE                                   0201 00469000
         BNZ   @RT00201                                            0201 00470000
*              GO TO GETMERR;           /* GO PUT OUT MESSAGE & LEAVE*/ 00471000
*          HEDBPTR=WKAREAAD;            /* INITIALIZE HEADER BASE PTR*/ 00472000
         L     @10,WKAREAAD                                        0203 00473000
         LR    HEDBPTR,@10                                         0203 00474000
*          RFY (R1,R15) RSTD;           /* RESTRICT WORK REGISTERS   */ 00475000
*          R0=WKAREAAD;                 /* GET TO ADDRESS            */ 00476000
         LR    R0,@10                                              0205 00477000
*          R1=WKAREALN;                 /* LOAD R1 WITH LENGTH       */ 00478000
         L     R1,WKAREALN                                         0206 00479000
*          R15=0;                       /* LOAD R15 WITH 0 LENGTH    */ 00480000
         SLR   R15,R15                                             0207 00481000
*          GEN (MVCL  R0,R14)           /* CLEAR GOTTEN CORE         */ 00482000
*            REFS(R0,R1,R15);                                      0208 00483000
         MVCL  R0,R14                                                   00484000
*          RFY (R0,R1,R15) UNRSTD;      /* RELEASE WORK REGISTERS    */ 00485000
*          /* INITIALIZE HEADER QUANTITIES - HEDBPTR IS BASE PTR     */ 00486000
*          UADSBLNG=WKAREALN;           /* BLK LENGTH FR DCB TO BUFFR*/ 00487000
         L     @10,WKAREALN                                        0210 00488000
         STH   @10,UADSBLNG(,HEDBPTR)                              0210 00489000
*          UADSFSQP=LENGTH(DHED);       /* PTR TO 1ST FSQE INITIALIZED  00490000
*                                          TO FIRST BYTE AFTER HEADER*/ 00491000
         MVC   UADSFSQP(2,HEDBPTR),@CH00447                        0211 00492000
*          UADSUSER=BLDLNAME;           /* MEMBER NAME FROM BLDL LIST*/ 00493000
         MVC   UADSUSER(8,HEDBPTR),BLDLNAME                        0212 00494000
*          UADSEXPF='1'B;               /* INDICATE THIS USER HAS  0213 00495000
*                                          EXPANDED HEADER     Y02678*/ 00496000
         OI    UADSEXPF(HEDBPTR),B'01000000'                       0213 00497000
*          /* CHECK FOR A MAXIMUM REGION SIZE PARAMETER              */ 00498000
*          IF MAXSZKEY(16)='1'B         /* WAS MAXSIZE SPECIFIED?    */ 00499000
*            THEN                       /* YES,                      */ 00500000
         L     @10,ADDPDLAD                                        0214 00501000
         TM    MAXSZKEY+1(@10),B'00000001'                         0214 00502000
         BNO   @RF00214                                            0214 00503000
*              UADSMAXC=MAXSZHEX;       /* SAVE BINARY VALUE         */ 00504000
         LH    @10,MAXSZHEX(,@10)                                  0215 00505000
         N     @10,@CF00457                                        0215 00506000
         STH   @10,UADSMAXC(,HEDBPTR)                              0215 00507000
*          /* SET USER ATTRIBUTES                                    */ 00508000
*          /* CHECK FOR OPERATOR CAPABILITY ATTRIBUTE                */ 00509000
*          IF OPERKEY(16)='1'B                                     0216 00510000
*            THEN                       /* 'OPER' WAS SPECIFIED      */ 00511000
@RF00214 L     @10,ADDPDLAD                                        0216 00512000
         TM    OPERKEY+1(@10),B'00000001'                          0216 00513000
         BNO   @RF00216                                            0216 00514000
*              USATR00='1'B;            /* INDICATE THAT THIS USER MAY  00515000
*                                          USE THE OPERATOR COMMANDS */ 00516000
         OI    USATR00(HEDBPTR),B'10000000'                        0217 00517000
*          /* CHECK FOR ACCOUNT CAPABILITY ATTRIBUTE                 */ 00518000
*          IF ACCTKEY(16)='1'B                                     0218 00519000
*            THEN                       /* 'ACCT' WAS SPECIFIED      */ 00520000
@RF00216 L     @10,ADDPDLAD                                        0218 00521000
         TM    ACCTKEY+1(@10),B'00000001'                          0218 00522000
         BNO   @RF00218                                            0218 00523000
*              USATR01='1'B;            /* INDICATE THAT THIS USER MAY  00524000
*                                          USE THE ACCOUNT COMMANDS  */ 00525000
         OI    USATR01(HEDBPTR),B'01000000'                        0219 00526000
*          /* CHECK FOR SUBMIT CAPABILITY ATTRIBUTE                  */ 00527000
*          IF JCLKEY(16)='1'B                                      0220 00528000
*            THEN                       /* 'JCL' WAS SPECIFIED       */ 00529000
@RF00218 L     @10,ADDPDLAD                                        0220 00530000
         TM    JCLKEY+1(@10),B'00000001'                           0220 00531000
         BNO   @RF00220                                            0220 00532000
*              USATR02='1'B;            /* INDICATE THAT THIS USER MAY  00533000
*                                          USE THE SUBMIT COMMAND    */ 00534000
         OI    USATR02(HEDBPTR),B'00100000'                        0221 00535000
*          /* CHECK FOR MOUNT CAPABILITY ATTRIBUTE             Y02678*/ 00536000
*          IF MONTKEY(16)='1'B                                     0222 00537000
*            THEN                       /* 'MOUNT' WAS SPECIFIED     */ 00538000
@RF00220 L     @10,ADDPDLAD                                        0222 00539000
         TM    MONTKEY+1(@10),B'00000001'                          0222 00540000
         BNO   @RF00222                                            0222 00541000
*              USATR03='1'B;            /* INDICATE THAT THIS USER MAY  00542000
*                                          USE THE MOUNT CAPABILITY     00543000
*                                                              Y02678*/ 00544000
         OI    USATR03(HEDBPTR),B'00010000'                        0223 00545000
*          IF USERKEY(16)='1'B          /* WAS USERDATA SPECIFIED?   */ 00546000
*            THEN                       /* YES,                      */ 00547000
@RF00222 L     @10,ADDPDLAD                                        0224 00548000
         TM    USERKEY+1(@10),B'00000001'                          0224 00549000
         BNO   @RF00224                                            0224 00550000
*              UADSINST=USDAHEX;        /* MOVE USERDATA INTO HEADER */ 00551000
         MVC   UADSINST(2,HEDBPTR),USDAHEX(@10)                    0225 00552000
*          IF DESTKEY(16)='1'B          /* WAS DESTINATION SPECIFIED?*/ 00553000
*            THEN                       /* YES,                      */ 00554000
@RF00224 L     @10,ADDPDLAD                                        0226 00555000
         TM    DESTKEY+1(@10),B'00000001'                          0226 00556000
         BNO   @RF00226                                            0226 00557000
*              UADSDEST=DEST(1:DESTLNG);/* MOVE DESTINATION INTO   0227 00558000
*                                          HEADER              Y02678*/ 00559000
         MVI   UADSDEST+1(HEDBPTR),C' '                            0227 00560000
         MVC   UADSDEST+2(6,HEDBPTR),UADSDEST+1(HEDBPTR)           0227 00561000
         LH    @05,DESTLNG(,@10)                                   0227 00562000
         BCTR  @05,0                                               0227 00563000
         L     @10,DESTADR(,@10)                                   0227 00564000
         EX    @05,@SM00462                                        0227 00565000
*          /* INITIALIZE FIRST FSQE IN WORD FOLLOWING HDR            */ 00566000
*          FSQEPTR=HEDBPTR+LENGTH(DHED);/* INITIALIZE FSQE BASE PTR  */ 00567000
@RF00226 LA    @10,64                                              0228 00568000
         LR    FSQEPTR,HEDBPTR                                     0228 00569000
         ALR   FSQEPTR,@10                                         0228 00570000
*          FSQELNTH=UADSBLNG-           /* LENGTH OF FREE AREA =     */ 00571000
*            LENGTH(DHED);              /* TOTAL BLK LNGTH-HDR LNGTH */ 00572000
         LCR   @10,@10                                             0229 00573000
         AH    @10,UADSBLNG(,HEDBPTR)                              0229 00574000
         STH   @10,FSQELNTH(,FSQEPTR)                              0229 00575000
*          FSQELBIT(7:8)='00'B;         /* TRUNCATED TO MULTIPLE OF 4*/ 00576000
         NI    FSQELBIT(FSQEPTR),B'11111100'                       0230 00577000
*          FSQENEXT=0;                  /* THIS IS THE ONLY FSQE   0231 00578000
*                                          ON THE CHAIN              */ 00579000
         SLR   @10,@10                                             0231 00580000
         STH   @10,FSQENEXT(,FSQEPTR)                              0231 00581000
*          SPACMPTR=HEDBPTR;            /* ADDRESS OF MEMBER BLOCK   */ 00582000
         ST    HEDBPTR,SPACMPTR                                    0232 00583000
*          SPACMCNT=1;                  /* INDICATE ONE MEMBER BLOCK    00584000
*                                          IN MAIN STORAGE BUFFER    */ 00585000
         MVC   SPACMCNT(2),@CH00032                                0233 00586000
*          SPACLNTH=LENGTH(UPT);        /* REQUEST FOR 16-BYTE AREA  */ 00587000
         MVC   SPACLNTH(2),@CH00078                                0234 00588000
*          CALL GETSPACE;               /* CALL GETSPACE TO ACQUIRE     00589000
*                                          SPACE IN THE MEMBER BLOCK    00590000
*                                          FOR THE UPT               */ 00591000
         BAL   @14,GETSPACE                                        0235 00592000
*          UADSUPTP=SPACOFST;           /* OFFSET FROM USER HDR ORIGN*/ 00593000
         L     @10,SPACOFST                                        0236 00594000
         ST    @10,UADSUPTP(,HEDBPTR)                              0236 00595000
*          UPTPTR=HEDBPTR+SPACOFST;     /* POINT TO UADS UPT        1*/ 00596000
         ALR   @10,HEDBPTR                                         0237 00597000
         LR    UPTPTR,@10                                          0237 00598000
*          UPTPREFX=USRID(1:7);         /* INSERT USERID            1*/ 00599000
         MVC   UPTPREFX(7,UPTPTR),USRID                            0238 00600000
*          UPTPREFL=USRLEN;             /* INSERT LENGTH OF USERID  1*/ 00601000
         IC    @10,USRLEN                                          0239 00602000
         STC   @10,UPTPREFL(,UPTPTR)                               0239 00603000
*          IF PERFKEY(16)='1'B          /* WAS PERF GROUP SPECIFIED? */ 00604000
*            THEN                       /* YES,                      */ 00605000
         L     @10,ADDPDLAD                                        0240 00606000
         TM    PERFKEY+1(@10),B'00000001'                          0240 00607000
         BNO   @RF00240                                            0240 00608000
*              DO;                      /* PUT PERF GROUPS IN MEMBER    00609000
*                                                              Y02678*/ 00610000
*              SPACLNTH=32;             /* REQUEST FOR 256-BIT AREA     00611000
*                                                              Y02678*/ 00612000
         MVC   SPACLNTH(2),@CH00301                                0242 00613000
*              CALL GETSPACE;           /* CALL GETSPACE TO ACQUIRE     00614000
*                                          SPACE IN THE MEMBER BLOCK    00615000
*                                          FOR THE PERF GROUPS Y02678*/ 00616000
         BAL   @14,GETSPACE                                        0243 00617000
*              UADSPERP=SPACOFST;       /* POINT TO UADS PERF GROUP     00618000
*                                                              Y02678*/ 00619000
         L     @10,SPACOFST                                        0244 00620000
         ST    @10,UADSPERP(,HEDBPTR)                              0244 00621000
*              PERFPTR=HEDBPTR+SPACOFST;/* REUSE PTR TO REFERENCE  0245 00622000
*                                          MEMBER BLOCK        Y02678*/ 00623000
         ALR   @10,HEDBPTR                                         0245 00624000
         ST    @10,PERFPTR                                         0245 00625000
*              UADSPERG=PERFGRP;        /* MOVE PERF GROUP TO MEMBER    00626000
*                                          BLOCK               Y02678*/ 00627000
         MVC   UADSPERG(32,@10),PERFGRP                            0246 00628000
*              END;                                                0247 00629000
*          /* NEXT INITIALIZE LOOP CONTROLS FOR BUILDING A USER      */ 00630000
*          /* TREE OF NODES.                                         */ 00631000
*          MARKMARK=ADDR(UADSPWD1)-4;   /* SET 'MARKMARK' AS IF OFFSET  00632000
*                                          TO INITIAL PASSWORD NODE     00633000
*                                          WERE PART OF A STD NODE BL*/ 00634000
@RF00240 LA    MARKMARK,UADSPWD1(,HEDBPTR)                         0248 00635000
         SL    MARKMARK,@CF00049                                   0248 00636000
*          /* THE FOLLOWING DO GROUP CREATES THE NODES AND DATA FLDS */ 00637000
*          /* SPECIFIED IN THE ADD COMMAND, ONE ITERATION CONSTRUCTS */ 00638000
*          /* ONE NODE PLUS, IF APPLICABLE, ONE DATA FIELD.          */ 00639000
*          DO LOOPCNT=NUMOFLV-1         /* GROUP WILL BE EXECUTED FOR   00640000
*                                          EACH LEVEL IN THE UADS.   */ 00641000
*             BY -1 TO 1;               /* OPTIMUM LOOP CONTROLS     */ 00642000
         SLR   LOOPCNT,LOOPCNT                                     0249 00643000
         IC    LOOPCNT,NUMOFLV                                     0249 00644000
         BCTR  LOOPCNT,0                                           0249 00645000
         B     @DE00249                                            0249 00646000
@DL00249 DS    0H                                                  0250 00647000
*            SPACLNTH=LENGTH(UADSNODE); /* SET GETSPACE REQUEST FOR     00648000
*                                          A NODE.                   */ 00649000
         MVC   SPACLNTH(2),@CH00388                                0250 00650000
*            CALL GETSPACE;             /* CALL GETSPACE TO ACQUIRE     00651000
*                                          SPACE IN THE MEMBER BLOCK */ 00652000
         BAL   @14,GETSPACE                                        0251 00653000
*            MARKMARK->UADSNSUB=SPACOFST; /* COMPUTE NEW NODE OFFSET */ 00654000
         L     @10,SPACOFST                                        0252 00655000
         ST    @10,UADSNSUB(,MARKMARK)                             0252 00656000
*            UADSNPTR=MARKMARK->UADSNSUB+HEDBPTR; /* SET NEW NODE PTR*/ 00657000
         ALR   @10,HEDBPTR                                         0253 00658000
         LR    UADSNPTR,@10                                        0253 00659000
*            UADSNFLG='1'B;             /* SET END-OF-LOCAL-LATERAL     00660000
*                                          CHAIN FLAG                */ 00661000
         OI    UADSNFLG(UADSNPTR),B'10000000'                      0254 00662000
*            IF LOOPCNT=1               /* IS THIS THE PROCEDURE NAME*/ 00663000
*              THEN                     /* YES,                      */ 00664000
         C     LOOPCNT,@CF00032                                    0255 00665000
         BNE   @RF00255                                            0255 00666000
*                DO;                                               0256 00667000
*                SPACLNTH=24;           /* LENGTH OF PROCEDURE FIELD */ 00668000
         MVC   SPACLNTH(2),@CH00078                                0257 00669000
*                CALL GETSPACE;         /* CALL GETSPACE TO ACQUIRE     00670000
*                                          SPACE IN THE MEMBER BLOCK */ 00671000
         BAL   @14,GETSPACE                                        0258 00672000
*                UADSNDAT=SPACOFST;     /* OFFSET TO DATA FLD      0259 00673000
*                                          TO NODE SLOT              */ 00674000
         L     @10,SPACOFST                                        0259 00675000
         ST    @10,UADSNDAT(,UADSNPTR)                             0259 00676000
*                UADSRPTR=UADSNDAT+HEDBPTR; /* SET PROCNAME INFO BASE*/ 00677000
         ALR   @10,HEDBPTR                                         0260 00678000
         LR    UADSRPTR,@10                                        0260 00679000
*                UADSRNAM=PROCNM;       /* PROCNAME VIA PARSE PDE    */ 00680000
         MVC   UADSRNAM(8,UADSRPTR),PROCNM                         0261 00681000
*                UADSUNAM='        ';   /* INITIALIZE UNITNAME=BLANKS*/ 00682000
         MVC   UADSUNAM(8,UADSRPTR),@CC00401                       0262 00683000
*                /* THEN, SEE IF UNIT NAME PARAMETER WAS SPECIFIED   */ 00684000
*                IF UNITKEY(16)='1'B                               0263 00685000
*                  THEN                 /* UNIT PARAMETER SPECIFIED  */ 00686000
         L     @10,ADDPDLAD                                        0263 00687000
         TM    UNITKEY+1(@10),B'00000001'                          0263 00688000
         BNO   @RF00263                                            0263 00689000
*                    UADSUNAM(1:UNITNLNG)=/* MOVE UNIT NAME TO PROC  */ 00690000
*                       UNITNAME;       /*    INFO FIELD             */ 00691000
         LH    @15,UNITNLNG(,@10)                                  0264 00692000
         BCTR  @15,0                                               0264 00693000
         L     @10,UNITNADR(,@10)                                  0264 00694000
         EX    @15,@SM00465                                        0264 00695000
*                UADSRCTR=1;            /* SET CTR = 1 USE OF FIELD  */ 00696000
@RF00263 MVI   UADSRCTR(UADSRPTR),X'01'                            0265 00697000
*                RSIZSW='0'B;           /* INITIALIZE 'EXCESSIVE SIZE'  00698000
*                                          SWITCH TO 'OFF' SETTING   */ 00699000
         NI    RSIZSW,B'11101111'                                  0266 00700000
*                /* THEN, SEE IF THE 'SIZE' KEYWORD WAS SUPPLIED     */ 00701000
*                IF SIZEKEY(16)='0'B                               0267 00702000
*                  THEN                 /* NO 'SIZE' SUPPLIED        */ 00703000
         L     @10,ADDPDLAD                                        0267 00704000
         TM    SIZEKEY+1(@10),B'00000001'                          0267 00705000
         BZ    @RT00267                                            0267 00706000
*                    GO TO LOOPEND;     /* DEFAULT=0                 */ 00707000
*                UADSRSIZ=SIZEHEX;      /* SAVE BINARY VALUE         */ 00708000
         LH    @10,SIZEHEX(,@10)                                   0269 00709000
         N     @10,@CF00457                                        0269 00710000
         STH   @10,UADSRSIZ(,UADSRPTR)                             0269 00711000
*                /* SEE IF 'UADSRSIZ' HAS TO BE CHECKED FOR MAX LIMIT*/ 00712000
*                IF UADSMAXC=0                                     0270 00713000
*                  THEN                 /* NO LIMIT TO MAXIMUM SIZE  */ 00714000
         LH    @10,UADSMAXC(,HEDBPTR)                              0270 00715000
         N     @10,@CF00457                                        0270 00716000
         LTR   @10,@10                                             0270 00717000
         BZ    @RT00270                                            0270 00718000
*                    GO TO LOOPEND;     /* LEAVE NOW - NO CHECK NEEDD*/ 00719000
*                /* MAKE CERTAIN 'UADSRSIZ' DOESN'T EXCEED 'UADSMAXC'*/ 00720000
*                IF UADSMAXC<UADSRSIZ                              0272 00721000
*                  THEN                 /* 'SIZE' VALUE TOO LARGE    */ 00722000
         CLC   UADSMAXC(2,HEDBPTR),UADSRSIZ(UADSRPTR)              0272 00723000
         BNL   @RF00272                                            0272 00724000
*                    DO;                                           0273 00725000
*                      UADSRSIZ=UADSMAXC;/* OVERRIDE WITH 'UADSMAXC' */ 00726000
         LH    @10,UADSMAXC(,HEDBPTR)                              0274 00727000
         N     @10,@CF00457                                        0274 00728000
         STH   @10,UADSRSIZ(,UADSRPTR)                             0274 00729000
*                      RSIZSW='1'B;     /* SIGNAL FOR EXCESSIVE SIZE    00730000
*                                          MESSAGE                   */ 00731000
         OI    RSIZSW,B'00010000'                                  0275 00732000
*                    END;                                          0276 00733000
*                END;                                              0277 00734000
*              ELSE                                                0278 00735000
*            IF LOOPCNT=2               /*IS THIS THE ACCOUNT NO.    */ 00736000
*              THEN                     /* YES,                      */ 00737000
         B     @RC00255                                            0278 00738000
@RF00255 C     LOOPCNT,@CF00100                                    0278 00739000
         BNE   @RF00278                                            0278 00740000
*                DO;                                               0279 00741000
*                IF ACCTNO(1:2)='* '    /* CHECK FOR '*'             */ 00742000
*                  THEN                 /* AN '*' WAS SPECIFIED      */ 00743000
         CLC   ACCTNO(2),@CC00409                                  0280 00744000
         BE    @RT00280                                            0280 00745000
*                    GO TO LOOPEND;     /* GO TO BUMP PTRS AND LOOP  */ 00746000
*                SPACLNTH=ACTLEN+45;    /* LENGTH OF ACCT. NO. FIELD */ 00747000
         SLR   @10,@10                                             0282 00748000
         IC    @10,ACTLEN                                          0282 00749000
         LA    @10,45(,@10)                                        0282 00750000
         STH   @10,SPACLNTH                                        0282 00751000
*                CALL GETSPACE;         /* CALL GETSPACE TO ACQUIRE     00752000
*                                          SPACE IN THE MEMBER BLOCK */ 00753000
         BAL   @14,GETSPACE                                        0283 00754000
*                UADSNDAT=SPACOFST;     /* OFFSET TO DATA FLD      0284 00755000
*                                          TO NODE SLOT              */ 00756000
         L     @10,SPACOFST                                        0284 00757000
         ST    @10,UADSNDAT(,UADSNPTR)                             0284 00758000
*                UADSAPTR=UADSNDAT+HEDBPTR; /* SET ACCT NO. INFO BASE*/ 00759000
         ALR   @10,HEDBPTR                                         0285 00760000
         LR    UADSAPTR,@10                                        0285 00761000
*                UADSALEN=ACTLEN;       /* ACCT NO. LENGTH FROM PDE  */ 00762000
         SLR   @10,@10                                             0286 00763000
         IC    @10,ACTLEN                                          0286 00764000
         STC   @10,UADSALEN(,UADSAPTR)                             0286 00765000
*                UADSANUM(1:ACTLEN)=    /* ACCT NO. FROM NODELIST TAB*/ 00766000
*                   ACCTNO;                                        0287 00767000
         BCTR  @10,0                                               0287 00768000
         EX    @10,@SM00468                                        0287 00769000
*                UADSACTR=1;            /* SET CTR = 1 USE OF FIELD  */ 00770000
         MVI   UADSACTR(UADSAPTR),X'01'                            0288 00771000
*                END;                                              0289 00772000
*              ELSE                                                0290 00773000
*                DO;                                               0290 00774000
         B     @RC00278                                            0290 00775000
@RF00278 DS    0H                                                  0291 00776000
*                IF PASSWD(1:2)='* '    /* CHECK FOR '*'             */ 00777000
*                  THEN                 /* AN '*' WAS SPECIFIED      */ 00778000
         CLC   PASSWD(2),@CC00409                                  0291 00779000
         BE    @RT00291                                            0291 00780000
*                    GO TO LOOPEND;     /* GO TO BUMP PTRS AND LOOP  */ 00781000
*                SPACLNTH=12;           /* LENGTH OF PASSWORD FIELD  */ 00782000
         MVC   SPACLNTH(2),@CH00388                                0293 00783000
*                CALL GETSPACE;         /* CALL GETSPACE TO ACQUIRE     00784000
*                                          SPACE IN THE MEMBER BLOCK */ 00785000
         BAL   @14,GETSPACE                                        0294 00786000
*                UADSNDAT=SPACOFST;     /* OFFSET TO DATA FLD      0295 00787000
*                                          TO NODE SLOT              */ 00788000
         L     @10,SPACOFST                                        0295 00789000
         ST    @10,UADSNDAT(,UADSNPTR)                             0295 00790000
*                UADSPPTR=UADSNDAT+HEDBPTR; /* SET PASSWORD INFO BASE*/ 00791000
         ALR   @10,HEDBPTR                                         0296 00792000
         LR    UADSPPTR,@10                                        0296 00793000
*                UADSPPWD=PASSWD;       /* PASSWORD VIA PDE          */ 00794000
         MVC   UADSPPWD(8,UADSPPTR),PASSWD                         0297 00795000
*                UADSPCTR=1;            /* SET CTR = 1 USE OF FIELD  */ 00796000
         MVI   UADSPCTR(UADSPPTR),X'01'                            0298 00797000
*                END;                                              0299 00798000
*LOOPEND:    /* BUMP LOCATING POINTERS TO NEXT DATA ITEM             */ 00799000
*            MARKMARK=UADSNPTR;         /* NEW NODE BECOMES OLD      */ 00800000
@RC00278 DS    0H                                                  0300 00801000
@RC00255 DS    0H                                                  0300 00802000
LOOPEND  LR    MARKMARK,UADSNPTR                                   0300 00803000
*          END;                         /* END OF ITERATIVE DO-GROUP -  00804000
*                                          RETURN TO TOP FOR THE NEXT   00805000
*                                          LOWER LEVEL IN THE UADS.  */ 00806000
         BCTR  LOOPCNT,0                                           0301 00807000
@DE00249 LTR   LOOPCNT,LOOPCNT                                     0301 00808000
         BP    @DL00249                                            0301 00809000
*          /**********************************************************/ 00810000
*          /* AT THIS POINT, A COMPLETE USER ENTRY EXISTS IN THE WORK*/ 00811000
*          /* AREA IN MAIN STORAGE - ALL THAT REMAINS IS TO WRITE THE*/ 00812000
*          /* AREA OUT TO THE UADS AS A NEW MEMBER AND CLOSE THE UADS*/ 00813000
*          /**********************************************************/ 00814000
*          /* CHECK FOR USER ATTENTION INTERRUPT BEFORE WRITE OPNS   */ 00815000
*          IF ATTENTN='1'B                                         0302 00816000
*            THEN                       /* USER WANTS ATTENTION      */ 00817000
         L     @10,ACCTECBP(,ACCTPLP)                              0302 00818000
         TM    ATTENTN(@10),B'01000000'                            0302 00819000
         BO    @RT00302                                            0302 00820000
*              GO TO CLEANUP0;          /* STOP -GO DIRECTLY TO CLNUP*/ 00821000
*          /* COMPLETE PARAMETER BLOCK FOR IKJEFA52- WRITE SUBROUTINE*/ 00822000
*          ACIOMPTR=ADDR(UADSUSER);     /* USER NAME RIGHT FROM HEADR*/ 00823000
         LA    @10,UADSUSER(,HEDBPTR)                              0304 00824000
         ST    @10,ACIOMPTR                                        0304 00825000
*          ACIOBUFR=HEDBPTR;            /* ADDRESS OF OUTPUT BUFFER  */ 00826000
         STCM  HEDBPTR,7,ACIOBUFR                                  0305 00827000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 00828000
*          R1=ACIOPTR;                  /* INITIALIZE PTR TO READ/WRITE 00829000
*                                          PARAMETER LIST            */ 00830000
         L     R1,ACIOPTR                                          0307 00831000
*          CALL IKJEFA52;               /* INVOKE WRITE PGM -IKJEFA52*/ 00832000
         L     @15,@CV00158                                        0308 00833000
         BALR  @14,@15                                             0308 00834000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 00835000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00836000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 00837000
         LR    RETNCODE,R15                                        0311 00838000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00839000
*          /* CHECK RETURN CODE                                      */ 00840000
*          IF RETNCODE^=0                                          0313 00841000
*            THEN                       /* WRITE ROUTINE FAILED      */ 00842000
         LTR   RETNCODE,RETNCODE                                   0313 00843000
         BZ    @RF00313                                            0313 00844000
*              DO;                                                 0314 00845000
*                ERRFLG='1'B;           /* TURN ON ERROR FLAG        */ 00846000
         OI    ERRFLG,B'01000000'                                  0315 00847000
*                GO TO CLEANUP0;        /* MSG. ALREADY PUT OUT -  0316 00848000
*                                          JUST CLEAN UP AND LEAVE   */ 00849000
         B     CLEANUP0                                            0316 00850000
*              END;                                                0317 00851000
*          /* NOW, STOW NEW USERID IN UADS DIRECTORY                 */ 00852000
*          STOWNAME=BLDLNAME;           /* MEMBER NAME FROM BLDL LIST*/ 00853000
@RF00313 MVC   STOWNAME(8),BLDLNAME                                0318 00854000
*          RFY R2 RSTD;                 /* RESTRICT DCB PTR          */ 00855000
*          R2=ADDR(DYNUADCB);           /* POINT TO OUTPUT DCB       */ 00856000
         LA    R2,DYNUADCB                                         0320 00857000
*          /* ISSUE OS/360 STOW MACRO TO CREATE A NEW DIRECTORY ENTRY*/ 00858000
*          GEN (STOW  (R2),STOWLIST,A)  /* 'A' MEANS ADD NEW ENTRY   */ 00859000
*            REFS(R2,STOWLIST);                                    0321 00860000
         STOW  (R2),STOWLIST,A                                          00861000
*          RFY R2 UNRSTD;               /* RELEASE DCB BASE REGISTER */ 00862000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00863000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 00864000
         LR    RETNCODE,R15                                        0324 00865000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00866000
*          /* CHECK RETURN CODE                                      */ 00867000
*          IF RETNCODE^=0                                          0326 00868000
*            THEN                       /* STOW FAILED               */ 00869000
         LTR   RETNCODE,RETNCODE                                   0326 00870000
         BNZ   @RT00326                                            0326 00871000
*              GO TO STOWERR;           /* GO ANALYZE FAILURE        */ 00872000
*          /* BUILD RETURN PARAMETER LIST FOR ACCOUNT                */ 00873000
*          /* FIRST, GET DYNAMIC STORAGE FOR RETURN PARAMETER TO ACCT*/ 00874000
*          GEN (GETMAIN EC,LV=16,A=UIDLAD,MF=(E,DYNGTLST))         0328 00875000
*            SETS(UIDLAD) REFS(DYNGTLST);                          0328 00876000
         GETMAIN EC,LV=16,A=UIDLAD,MF=(E,DYNGTLST)                      00877000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00878000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 00879000
         LR    RETNCODE,R15                                        0330 00880000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00881000
*          /* CHECK RETURN CODE                                      */ 00882000
*          IF RETNCODE^=0                                          0332 00883000
*            THEN                       /* GETMAIN FAILED            */ 00884000
         SLR   @10,@10                                             0332 00885000
         CR    RETNCODE,@10                                        0332 00886000
         BNE   @RT00332                                            0332 00887000
*              GO TO GETMERR;           /* GO PUT OUT MESSAGE & LEAVE*/ 00888000
*          UIDLPTR=UIDLAD;              /* MOVE PTR TO ACCT PARMLIST */ 00889000
         L     @15,UIDLAD                                          0334 00890000
         ST    @15,UIDLPTR(,ACCTPLP)                               0334 00891000
*          UIDLNEX=0;                   /* ZERO CHAIN ELEMENT        */ 00892000
         ST    @10,UIDLNEX(,@15)                                   0335 00893000
*          UIDLSWS='8000'X;             /* SET SWITCH INDICATING   0336 00894000
*                                          'ADD' USERID              */ 00895000
         MVC   UIDLSWS(2,@15),@CB00413                             0336 00896000
*          UIDLCT=1;                    /* INDICATE ONLY ONE USERID  */ 00897000
         MVC   UIDLCT(2,@15),@CH00032                              0337 00898000
*          UIDUSER(1)=USERID;           /* USERID FROM MSG. SEGMENT  */ 00899000
         MVI   UIDUSER+7(@15),C' '                                 0338 00900000
         MVC   UIDUSER(7,@15),USERID                               0338 00901000
*          /* CHECK FOR 'EXCESSIVE SIZE' CONDITION                   */ 00902000
*          IF RSIZSW='1'B                                          0339 00903000
*            THEN                       /* 'SIZE' EXCEEDED 'MAXSIZE' */ 00904000
         TM    RSIZSW,B'00010000'                                  0339 00905000
         BNO   @RF00339                                            0339 00906000
*              DO;                                                 0340 00907000
*                /* PUT OUT A MESSAGE TO THE TERMINAL USER AT THIS   */ 00908000
*                /* TIME INFORMING HIM THAT SIZE EXCEEDED MAXSIZE    */ 00909000
*                OUT1LINK=0;            /* INDICATE NO 2ND LEVEL MSG */ 00910000
         ST    @10,OUT1LINK                                        0341 00911000
*                OUT1SCNT='03'X;        /* 1ST LEVEL MSG SEG COUNT =3*/ 00912000
         MVI   OUT1SCNT,X'03'                                      0342 00913000
*                OUT1SEG1=ADDMSG(27);   /* ADDR OF 'SIZE > MAXSIZE'  */ 00914000
         L     @10,ADDMSG+104(,MSGBASE)                            0343 00915000
         ST    @10,OUT1SEG1                                        0343 00916000
*                SIZLN=SIZNOLNG+4;      /* LENGTH OF SIZE SEGMENT    */ 00917000
         L     @10,ADDPDLAD                                        0344 00918000
         LH    @01,SIZNOLNG(,@10)                                  0344 00919000
         LA    @01,4(,@01)                                         0344 00920000
         STH   @01,SIZLN                                           0344 00921000
*                SIZOF=22;              /* OFFSET FOR TEXT INSERTION */ 00922000
         MVC   SIZOF(2),@CH00415                                   0345 00923000
*                SIZ=SIZE;              /* TEXT (SIZE)               */ 00924000
         L     @10,SIZNOADR(,@10)                                  0346 00925000
         MVC   SIZ(5),SIZE(@10)                                    0346 00926000
*                OUT1SEG2=ADDR(SIZSEG); /* ADDR OF 'SIZE' SEGMENT    */ 00927000
         LA    @10,SIZSEG                                          0347 00928000
         ST    @10,OUT1SEG2                                        0347 00929000
*                USRIDOF=55;            /* OFFSET FOR USERID INSERTN */ 00930000
         MVC   USRIDOF(2),@CH00416                                 0348 00931000
*                OUT1SEG3=ADDR(USRIDSEG); /* ADDR OF USERID SEGMENT  */ 00932000
         LA    @10,USRIDSEG                                        0349 00933000
         ST    @10,OUT1SEG3                                        0349 00934000
*                CALL INFOMSG;          /* GO PUT OUT MSG AND RETURN */ 00935000
         BAL   @14,INFOMSG                                         0350 00936000
*              END;                                                0351 00937000
*          OUT1LINK=0;                  /* INDICATE NO 2ND LEVEL MSG */ 00938000
@RF00339 SLR   @10,@10                                             0352 00939000
         ST    @10,OUT1LINK                                        0352 00940000
*          OUT1SCNT='01'X;              /* 1ST LEVEL MSG SEG COUNT =1*/ 00941000
         MVI   OUT1SCNT,X'01'                                      0353 00942000
*          OUT1SEG1=ADDMSG(1);          /* PTR TO 'ADDED' MESSAGE    */ 00943000
         L     @10,ADDMSG(,MSGBASE)                                0354 00944000
         ST    @10,OUT1SEG1                                        0354 00945000
*          CALL INFOMSG;                /* REPORT SUCCESS TO TERMINAL*/ 00946000
         BAL   @14,INFOMSG                                         0355 00947000
*          GOTO CLEANUP0;                                          0356 00948000
         B     CLEANUP0                                            0356 00949000
*ERRMSG:   /**********************************************************/ 00950000
*          /* ERRMSG: CONTROL PASSED HERE TO OUTPUT AN ERROR MESSAGE */ 00951000
*          /* AND SET THE ERROR FLAG                                 */ 00952000
*          /**********************************************************/ 00953000
*          ERRFLG='1'B;                 /* TURN ON ERROR FLAG        */ 00954000
ERRMSG   OI    ERRFLG,B'01000000'                                  0357 00955000
*          /* ISSUE OS/360 PUTLINE MACRO TO WRITE THE MESSAGE        */ 00956000
*          GEN (PUTLINE ,MF=(E,PUTLLIST))                          0358 00957000
*            REFS(PUTLLIST);                                       0358 00958000
         PUTLINE ,MF=(E,PUTLLIST)                                       00959000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00960000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 00961000
         LR    RETNCODE,R15                                        0360 00962000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00963000
*          IF RETNCODE^=0               /* WAS PUTLINE SUCCESSFUL    */ 00964000
*            THEN                       /* NO,                       */ 00965000
         LTR   RETNCODE,RETNCODE                                   0362 00966000
         BZ    @RF00362                                            0362 00967000
*              PUTERR='1'B;             /* TURN ON PUTLINE ERROR FLAG*/ 00968000
         OI    PUTERR,B'00100000'                                  0363 00969000
*CLEANUP0: /**********************************************************/ 00970000
*          /* CTL. PASSED OR DROPPED HERE TO EXIT                    */ 00971000
*          /**********************************************************/ 00972000
*          /* RELEASE PARSE'S PDL                                    */ 00973000
*          GEN (IKJRLSA ADDPDLAD)       /* ISSUE TSO MAC TO FREE PDL */ 00974000
*            REFS(ADDPDLAD);                                       0364 00975000
@RF00362 DS    0H                                                  0364 00976000
CLEANUP0 IKJRLSA ADDPDLAD                                               00977000
*          /* IS THERE A PARSE PCL WORK AREA TO BE FREED ?           */ 00978000
*          IF PCLPTR^=0                                            0365 00979000
*            THEN                       /* YES - MUST ISSUE FREEMAIN */ 00980000
         L     @10,PCLPTR                                          0365 00981000
         LTR   @10,@10                                             0365 00982000
         BZ    @RF00365                                            0365 00983000
*              /* ISSUE OS/360 FREEMAIN                              */ 00984000
*              GEN (FREEMAIN V,A=PCLPTR,MF=(E,DYNFRLST))           0366 00985000
*                REFS(PCLPTR,DYNFRLST);                            0366 00986000
         FREEMAIN V,A=PCLPTR,MF=(E,DYNFRLST)                            00987000
*          /* IS THERE A 'CREATE' MODE WORK AREA TO RELEASE ?        */ 00988000
*          IF WKAREAAD^=0                                          0367 00989000
*            THEN                       /* YES - MUST ISSUE FREEMAIN */ 00990000
@RF00365 L     @10,WKAREAAD                                        0367 00991000
         LTR   @10,@10                                             0367 00992000
         BZ    @RF00367                                            0367 00993000
*              /* ISSUE OS/360 FREEMAIN                              */ 00994000
*              GEN (FREEMAIN V,A=WKAREAAD,MF=(E,DYNFRLST))         0368 00995000
*                 REFS(WKAREAAD,WKAREAAD,DYNFRLST);                0368 00996000
         FREEMAIN V,A=WKAREAAD,MF=(E,DYNFRLST)                          00997000
*          /* IS THE UADS 'OUTPUT' DCB OPEN ?                        */ 00998000
*          RFY (R2) RSTD;               /* RESERVE REG. FOR DCB BASE */ 00999000
@RF00367 DS    0H                                                  0370 01000000
*          R2=ADDR(DYNUADCB);           /* GET ADDRESS OF OUTPUT DCB */ 01001000
         LA    R2,DYNUADCB                                         0370 01002000
*          IF DCBOFLGS(4)='1'B                                     0371 01003000
*            THEN                       /* YES - CLOSE IT            */ 01004000
         TM    DCBOFLGS,B'00010000'                                0371 01005000
         BNO   @RF00371                                            0371 01006000
*              DO;                                                 0372 01007000
*              GEN (CLOSE ((R2),REREAD),MF=(E,DYNOPLST))           0373 01008000
*                REFS(R2,DYNOPLST);                                0373 01009000
         CLOSE ((R2),REREAD),MF=(E,DYNOPLST)                            01010000
*              END;                                                0374 01011000
*          RFY (R2) UNRSTD;             /* RELEASE DCB BASE REGISTER */ 01012000
@RF00371 DS    0H                                                  0376 01013000
*          /* IS THE UADS ENQ'D UPON?                                */ 01014000
*          IF ENQSW='1'B                                           0376 01015000
*            THEN                       /* YES - DEQ                 */ 01016000
         TM    ENQSW,B'10000000'                                   0376 01017000
         BNO   @RF00376                                            0376 01018000
*              DO;                                                 0377 01019000
*              /* ISSUE OS/360 DEQ MACRO TO FREE 'SYSIKJUA' RESOURCE */ 01020000
*              GEN (DEQ   ,RET=NONE,MF=(E,DYNNQLST))               0378 01021000
*                REFS(MAJNAME,MINNAME,DYNNQLST);                   0378 01022000
         DEQ   ,RET=NONE,MF=(E,DYNNQLST)                                01023000
*              ENQSW='0'B;              /* RESET ENQ STATUS SWITCH   */ 01024000
         NI    ENQSW,B'01111111'                                   0379 01025000
*              END;                                                0380 01026000
*          IF ERRFLG='1'B               /* HAS AN ERROR OCCURRED?    */ 01027000
*            THEN                                                  0381 01028000
@RF00376 TM    ERRFLG,B'01000000'                                  0381 01029000
         BNO   @RF00381                                            0381 01030000
*              ACCTECB='40FFFFFF'X;     /* SIGNAL EXCEPTION TO ACCT  */ 01031000
         L     @10,ACCTECBP(,ACCTPLP)                              0382 01032000
         MVC   ACCTECB(4,@10),@CF00420                             0382 01033000
*          RETURN;                      /* RETURN TO CALLER          */ 01034000
@EL00001 L     @13,4(,@13)                                         0383 01035000
@EF00001 L     @00,@SIZDATD                                        0383 01036000
         LR    @01,@11                                             0383 01037000
         FREEMAIN R,LV=(0),A=(1)                                        01038000
@ER00001 LM    @14,@12,12(@13)                                     0383 01039000
         BR    @14                                                 0383 01040000
*GETMERR:  /**********************************************************/ 01041000
*          /* CONTROL PASSED HERE ON A GETMAIN FAILURE               */ 01042000
*          /**********************************************************/ 01043000
*          /* SET PARAMETERS FOR PUTLINE MESSAGE                     */ 01044000
*          OUT1LINK=0;                  /* INDICATE NO 2ND LEVEL MSG */ 01045000
GETMERR  SLR   @10,@10                                             0384 01046000
         ST    @10,OUT1LINK                                        0384 01047000
*          OUT1SCNT='02'X;              /* 1ST LEVEL MSG SEG COUNT =2*/ 01048000
         MVI   OUT1SCNT,X'02'                                      0385 01049000
*          OUT1SEG1=ADDMSG(2);          /* ADDR OF 'NO SPACE' MESSAGE*/ 01050000
         L     @10,ADDMSG+4(,MSGBASE)                              0386 01051000
         ST    @10,OUT1SEG1                                        0386 01052000
*          OUT1SEG2=ADDMSG(3);          /* 2ND SEGMT='EXECUTE COMMAND*/ 01053000
         L     @10,ADDMSG+8(,MSGBASE)                              0387 01054000
         ST    @10,OUT1SEG2                                        0387 01055000
*          GOTO ERRMSG;                 /* GO TO ERROR TERMINATION   */ 01056000
         B     ERRMSG                                              0388 01057000
*STOWERR:  /**********************************************************/ 01058000
*          /* CONTROL PASSED HERE ON A NON-ZERO RETURN CODE FROM STOW*/ 01059000
*          /**********************************************************/ 01060000
*          OUT1SCNT='01'X;              /* 1ST LEVEL MSG SEG COUNT =1*/ 01061000
STOWERR  MVI   OUT1SCNT,X'01'                                      0389 01062000
*          OUT1SEG1=ADDMSG(8);          /* ADDR OF UADS NO GOOD MSG  */ 01063000
         L     @10,ADDMSG+28(,MSGBASE)                             0390 01064000
         ST    @10,OUT1SEG1                                        0390 01065000
*          OUT2SCNT='01'X;              /* ASSUME 1 SEGMT TO 2ND LVL */ 01066000
         MVI   OUT2SCNT,X'01'                                      0391 01067000
*          /* IS THE DIRECTORY FULL ?                                */ 01068000
*          IF RETNCODE=12                                          0392 01069000
*            THEN                       /* YES - DIRECTORY FULL      */ 01070000
         C     RETNCODE,@CF00388                                   0392 01071000
         BNE   @RF00392                                            0392 01072000
*              DO;                                                 0393 01073000
*                OUT2SEG1=ADDMSG(13);   /* ADDR OF 'NO DIRECTRY SPACE*/ 01074000
         L     @10,ADDMSG+48(,MSGBASE)                             0394 01075000
         ST    @10,OUT2SEG1                                        0394 01076000
*                GOTO ERRMSG;           /* GO TO ERROR TERMINATION   */ 01077000
         B     ERRMSG                                              0395 01078000
*              END;                                                0396 01079000
*          /* WAS THE RETURN CODE 'I/O ERROR' (16)                   */ 01080000
*          IF RETNCODE=16                                          0397 01081000
*            THEN                       /* YES - STOW I/O ERROR      */ 01082000
@RF00392 C     RETNCODE,@CF00042                                   0397 01083000
         BNE   @RF00397                                            0397 01084000
*              DO;                                                 0398 01085000
*                OUT2SEG1=ADDMSG(11);   /* ADDR OF 'STOW I/O ERROR'  */ 01086000
         L     @10,ADDMSG+40(,MSGBASE)                             0399 01087000
         ST    @10,OUT2SEG1                                        0399 01088000
*                GOTO ERRMSG;           /* GO TO ERROR TERMINATION   */ 01089000
         B     ERRMSG                                              0400 01090000
*              END;                                                0401 01091000
*          /* RETURN MUST BE INVALID RETURN CODE                     */ 01092000
*          OUT2SEG2=ADDMSG(41);         /* ADDR OF 'STOW' PREFIX     */ 01093000
@RF00397 L     @10,ADDMSG+160(,MSGBASE)                            0402 01094000
         ST    @10,OUT2SEG2                                        0402 01095000
*          /* GO PUT OUT 'COMMAND SYSTEM ERROR' MESSAGE & TERMINATE  */ 01096000
*CMDSYSER: /**********************************************************/ 01097000
*          /* CONTROL PASSED HERE ON AN UNUSUAL RETURN CODE FROM A   */ 01098000
*          /* SERVICE ROUTINE                                        */ 01099000
*          /**********************************************************/ 01100000
*          OUT1SCNT='01'X;              /* 1ST LEVEL MSG SEG COUNT =1*/ 01101000
CMDSYSER MVI   OUT1SCNT,X'01'                                      0403 01102000
*          OUT1SEG1=ADDMSG(5);          /* ADDR OF 'CMD SYSTM ERROR' */ 01103000
         L     @10,ADDMSG+16(,MSGBASE)                             0404 01104000
         ST    @10,OUT1SEG1                                        0404 01105000
*          OUT2SCNT='03'X;              /* 2ND LEVEL MSG SEG COUNT =3*/ 01106000
         MVI   OUT2SCNT,X'03'                                      0405 01107000
*          OUT2SEG1=ADDMSG(6);          /* BASE SEGMT= 'ERROR CODE'  */ 01108000
         L     @10,ADDMSG+20(,MSGBASE)                             0406 01109000
         ST    @10,OUT2SEG1                                        0406 01110000
*          CVD (RETNCODE,DECRTCD);      /* CONVERT THE RETURN CODE TO   01111000
*                                          DECIMAL                   */ 01112000
         CVD   RETNCODE,DECRTCD                                    0407 01113000
*          UNPK (BCDRTNCD,DECRTCD(7:8));/*UNPACK IT INTO THE MESSAGE */ 01114000
         UNPK  BCDRTNCD(2),DECRTCD+6(2)                            0408 01115000
*          ERRRTNLN=6;                  /* SET SEGMENT LENGTH        */ 01116000
         MVC   ERRRTNLN(2),@CH00426                                0409 01117000
*          ERRRTNOF=22;                 /* SET SEGMENT OFFSET        */ 01118000
         MVC   ERRRTNOF(2),@CH00415                                0410 01119000
*          OUT2SEG3=ADDR(ERRRTNSG);     /* 3RD SEG ADR TO OUT LN DESC*/ 01120000
         LA    @10,ERRRTNSG                                        0411 01121000
         ST    @10,OUT2SEG3                                        0411 01122000
*          SIGN=SIGN|'F0'X;             /* RESET THE SIGN FIELD      */ 01123000
         OI    SIGN,X'F0'                                          0412 01124000
*          GOTO ERRMSG;                 /* GO TO ERROR TERMINATION   */ 01125000
         B     ERRMSG                                              0413 01126000
*GETSPACE: /**********************************************************/ 01127000
*          /* GETSPACE: CALL GETSPACE ROUTINE TO ACQUIRE SPACE FOR   */ 01128000
*          /* THE UADS UPT IMAGE                                     */ 01129000
*          /**********************************************************/ 01130000
*          PROC;                                                   0414 01131000
         B     @EL00001                                            0414 01132000
GETSPACE STM   @14,@12,@SA00002                                    0414 01133000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 01134000
*          R1=ADDR(SPACPARM);           /* INITIALIZE PTR TO GETSPACE   01135000
*                                          PARAMETER LIST            */ 01136000
         LA    R1,SPACPARM                                         0416 01137000
*          CALL IKJEFA53;               /* CALL GETSPACE MODULE      */ 01138000
         L     @15,@CV00159                                        0417 01139000
         BALR  @14,@15                                             0417 01140000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 01141000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 01142000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 01143000
         LR    RETNCODE,R15                                        0420 01144000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 01145000
*          /* CHECK RETURN CODE                                      */ 01146000
*          IF RETNCODE>=8                                          0422 01147000
*            THEN                       /* NO SPACE AVAILABLE        */ 01148000
         C     RETNCODE,@CF00040                                   0422 01149000
         BL    @RF00422                                            0422 01150000
*              DO;                      /* SET PARAMETERS FOR PUTLINE*/ 01151000
*                OUT1SCNT='01'X;        /* 1ST LEVEL MSG SEG COUNT =1*/ 01152000
         MVI   OUT1SCNT,X'01'                                      0424 01153000
*                OUT1SEG1=ADDMSG(8);    /* ADDR OF UADS NO GOOD MSG  */ 01154000
         L     @10,ADDMSG+28(,MSGBASE)                             0425 01155000
         ST    @10,OUT1SEG1                                        0425 01156000
*                OUT2SCNT='01'X;        /* 2ND LEVEL MSG SEG COUNT =1*/ 01157000
         MVI   OUT2SCNT,X'01'                                      0426 01158000
*                OUT2SEG1=ADDMSG(12);   /* 2ND LVL='BLKSIZE TOO SMALL*/ 01159000
         L     @10,ADDMSG+44(,MSGBASE)                             0427 01160000
         ST    @10,OUT2SEG1                                        0427 01161000
*                RETURN TO ERRMSG;      /* GO TO ERROR TERMINATION   */ 01162000
         LA    @14,ERRMSG                                          0428 01163000
         LM    @15,@12,@SA00002+4                                  0428 01164000
         BR    @14                                                 0428 01165000
*              END;                                                0429 01166000
*          END GETSPACE;                                           0430 01167000
@EL00002 DS    0H                                                  0430 01168000
@EF00002 DS    0H                                                  0430 01169000
@ER00002 LM    @14,@12,@SA00002                                    0430 01170000
         BR    @14                                                 0430 01171000
*INFOMSG:  /**********************************************************/ 01172000
*          /* INFOMSG: CONTROL PASSED HERE TO OUTPUT AN INFORMATIONAL*/ 01173000
*          /* DIAGNOSTIC MESSAGE                                     */ 01174000
*          /**********************************************************/ 01175000
*          PROC;                                                   0431 01176000
INFOMSG  STM   @14,@12,@SA00003                                    0431 01177000
*          /* ISSUE OS/360 PUTLINE MACRO TO WRITE THE MESSAGE        */ 01178000
*          GEN (PUTLINE ,MF=(E,PUTLLIST))                          0432 01179000
*            REFS(PUTLLIST);                                       0432 01180000
         PUTLINE ,MF=(E,PUTLLIST)                                       01181000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 01182000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 01183000
         LR    RETNCODE,R15                                        0434 01184000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 01185000
*          IF RETNCODE^=0               /* WAS PUTLINE SUCCESSFUL    */ 01186000
*            THEN                       /* NO,                       */ 01187000
         LTR   RETNCODE,RETNCODE                                   0436 01188000
         BZ    @RF00436                                            0436 01189000
*               DO;                                                0437 01190000
*                 ERRFLG='1'B;          /* TURN ON ERROR FLAG        */ 01191000
*                 PUTERR='1'B;          /* TURN ON PUTLINE ERROR FLAG*/ 01192000
         OI    ERRFLG,B'01100000'                                  0439 01193000
*               END;                                               0440 01194000
*          OUT1LINK=ADDR(OUTLD2);       /* RE-INITIALIZE LINKAGE TO     01195000
*                                          ASSUME 2 MESSAGE LEVELS   */ 01196000
@RF00436 LA    @10,OUTLD2                                          0441 01197000
         ST    @10,OUT1LINK                                        0441 01198000
*          END INFOMSG;                                            0442 01199000
@EL00003 DS    0H                                                  0442 01200000
@EF00003 DS    0H                                                  0442 01201000
@ER00003 LM    @14,@12,@SA00003                                    0442 01202000
         BR    @14                                                 0442 01203000
*NLSTEXIT: /**********************************************************/ 01204000
*          /* NLSTEXIT: CONTROL PASSED HERE FROM IKJEFA55 TO ALLOW   */ 01205000
*          /* MODIFICATION OF THE PARSE PCL DEPENDING ON THE NUMBER  */ 01206000
*          /* OF ITEMS IN THE NODELIST                               */ 01207000
*          /**********************************************************/ 01208000
*          PROC OPTIONS(NOSAVEAREA);                               0443 01209000
NLSTEXIT STM   @14,@12,12(@13)                                     0443 01210000
*          /* FIX UP ADDRESSABILITY                                  */ 01211000
*          RFY (R1,R2,R13) RSTD;                                   0444 01212000
*          R2 = R1;                     /* GET SAVE AREA PTR         */ 01213000
         LR    R2,R1                                               0445 01214000
*          GEN (LM  R2,R12,28(R2));     /* RESTORE REGISTERS         */ 01215000
         LM  R2,R12,28(R2)                                              01216000
*          SAVE13 = R13;                /* SAVE IKJEFA55 SAVEAREA PTR*/ 01217000
         LR    SAVE13,R13                                          0447 01218000
*          R13 = R1;                    /* SET SAVE AREA PTR         */ 01219000
         LR    R13,R1                                              0448 01220000
*          RFY (R1,R2) UNRSTD;                                     0449 01221000
*          RETCODE=0;                   /* INDICATE NODELIST OK      */ 01222000
         SLR   RETCODE,RETCODE                                     0450 01223000
*          IF NUMOFLV=4                 /* IS THIS A CREATE COMMAND? */ 01224000
*            THEN                       /* YES,                      */ 01225000
         CLI   NUMOFLV,4                                           0451 01226000
         BNE   @RF00451                                            0451 01227000
*              DO;                                                 0452 01228000
*              /******************************************************* 01229000
*              CONTROL DROPS TO HERE IF ALL NODE LEVELS ARE PRESENT     01230000
*              THE NODELIST.  THIS MEANS THAT A DATALIST IS NOT    0453 01231000
*              EXPECTED AND THEREFORE, PARSE IS MADE TO IGNORE THE 0453 01232000
*              DATA KEYWORD BY INCREASING THE PCE LENGTH OF THE PCE     01233000
*              PRECEDING THE IKJKEYWD PCE FOR 'DATA' SO THAT PARSE 0453 01234000
*              SKIPS OVER THE 'DATA' PCES (1 FOR IKJKEYWD & 1 FOR  0453 01235000
*              IKJNAME).                                           0453 01236000
*              *******************************************************/ 01237000
*              /* MAKE SURE THE USERID IS NOT = '*'                  */ 01238000
*              IF USRID(1)='*'                                     0453 01239000
*                THEN                   /* TOO BAD - USERID=* IS   0453 01240000
*                                          INVALID IN CREATE MODE    */ 01241000
         CLI   USRID,C'*'                                          0453 01242000
         BNE   @RF00453                                            0453 01243000
*                  DO;                                             0454 01244000
*                  RETCODE=8;           /* TELL PARSE TO JUST PROMPT */ 01245000
         LA    RETCODE,8                                           0455 01246000
*                  /* SET PARAMETERS FOR PARSE SECOND LEVEL MESSAGE  */ 01247000
*                  OUT1LINK=0;          /* INDICATE NO 2ND LEVEL MSG */ 01248000
         SLR   @10,@10                                             0456 01249000
         ST    @10,OUT1LINK                                        0456 01250000
*                  OUT1SCNT='01'X;      /* 1ST LEVEL MSG SEG COUNT =1*/ 01251000
         MVI   OUT1SCNT,X'01'                                      0457 01252000
*                  OUT1SEG1=ADDMSG(26); /* ADDR OF INVALID NODELIST  */ 01253000
         L     @10,ADDMSG+100(,MSGBASE)                            0458 01254000
         ST    @10,OUT1SEG1                                        0458 01255000
*                  CALL INFOMSG;        /* REPORT SUCCESS TO TERMINAL*/ 01256000
         BAL   @14,INFOMSG                                         0459 01257000
*                  END;                                            0460 01258000
*                ELSE                                              0461 01259000
*                  DO;                                             0461 01260000
         B     @RC00453                                            0461 01261000
@RF00453 DS    0H                                                  0462 01262000
*                  PCEPTR=ADDR(PARSMACS)/* POINT TO NOLIM PCE        */ 01263000
*                   +NOLIMLNO;                                     0462 01264000
         LH    PCEPTR,NOLIMLNO                                     0462 01265000
         AL    PCEPTR,PCLPTR                                       0462 01266000
*                  PCELNG=CREATLNG;     /* INCREASE 'NOLIM' NAME PCE    01267000
*                                          LENGTH TO ENCOMPASS     0463 01268000
*                                          DATA PCES                 */ 01269000
         LH    @10,CREATLNG                                        0463 01270000
         STH   @10,PCELNG(,PCEPTR)                                 0463 01271000
*                  END;                                            0464 01272000
*              END;                                                0465 01273000
*          ELSE                                                    0466 01274000
*            DO;                                                   0466 01275000
         B     @RC00451                                            0466 01276000
@RF00451 DS    0H                                                  0467 01277000
*            /*******************************************************   01278000
*            CONTROL DROPS TO HERE IF NO GAPS WERE DISCOVERED.     0467 01279000
*            NUMOFLVL CONTAINS THE NUMBER OF ITEMS (< 4) FOUND IN  0467 01280000
*            THE NODELIST.  THIS INDICATES AUGMENT MODE.  THEREFORE,    01281000
*            THE PCE LENGTH OF THE PCE PRECEDING THE CREATE MODE   0467 01282000
*            KEYWORD PCES (OPER, ACCT, JCL, MAXSIZE, ETC.) IS INCREASED 01283000
*            TO CAUSE PARSE TO SKIP OVER THESE KEYWORDS.           0467 01284000
*            *********************************************************/ 01285000
*            PCEPTR=ADDR(PARSMACS)+UNITLNGO;/* POINT TO UNIT PCE   0467 01286000
*                                              LENGTH                */ 01287000
         L     @10,PCLPTR                                          0467 01288000
         LH    PCEPTR,UNITLNGO                                     0467 01289000
         ALR   PCEPTR,@10                                          0467 01290000
*            PCELNG=AUGMTLNG;            /* INCREASE 'UNIT' NAME PCE    01291000
*                                          LENGTH TO ENCOMPASS     0468 01292000
*                                          CREATE KEYWORD PCES       */ 01293000
         LH    @05,AUGMTLNG                                        0468 01294000
         STH   @05,PCELNG(,PCEPTR)                                 0468 01295000
*            /* THEN, THE DATA SUBFIELD MUST BE ALTERED TO PARSE FOR */ 01296000
*            /* A NUMBER OF ITEMS EQUAL TO 4-NUMOFLVL STARTING FROM  */ 01297000
*            /* THE LAST ITEM.                                       */ 01298000
*            PCEPTR=ADDR(PARSMACS)+DATSUBFO;/* POINT TO DATA SUBFIELD   01299000
*                                              OFFSET                */ 01300000
         AH    @10,DATSUBFO                                        0469 01301000
         LR    PCEPTR,@10                                          0469 01302000
*            IF NUMOFLV=3                                          0470 01303000
*              THEN                                                0470 01304000
         CLI   NUMOFLV,3                                           0470 01305000
         BNE   @RF00470                                            0470 01306000
*                PCELNG=ONEITMOF;       /* SUBFIELD OFFSET TO      0471 01307000
*                                          PROCEDURE NAME ONLY       */ 01308000
         LH    @10,ONEITMOF                                        0471 01309000
         STH   @10,PCELNG(,PCEPTR)                                 0471 01310000
*              ELSE                                                0472 01311000
*                IF NUMOFLV=2                                      0472 01312000
*                  THEN                                            0472 01313000
         B     @RC00470                                            0472 01314000
@RF00470 CLI   NUMOFLV,2                                           0472 01315000
         BNE   @RF00472                                            0472 01316000
*                    PCELNG=TWOITMOF;   /* SUBFIELD OFFSET TO JUST 0473 01317000
*                                          ACCTNMBR & PROCNAME PCES  */ 01318000
         LH    @10,TWOITMOF                                        0473 01319000
         STH   @10,PCELNG(,PCEPTR)                                 0473 01320000
*            END;                                                  0474 01321000
@RF00472 DS    0H                                                  0474 01322000
@RC00470 DS    0H                                                  0475 01323000
*          R13=SAVE13;                  /* RESTORE IKJEFA55'S SAVE AREA 01324000
*                                          POINTER                   */ 01325000
@RC00451 LR    R13,SAVE13                                          0475 01326000
*          RETURN CODE(RETCODE);                                   0476 01327000
         LR    @15,RETCODE                                         0476 01328000
         L     @14,12(,@13)                                        0476 01329000
         LM    @00,@12,20(@13)                                     0476 01330000
         BR    @14                                                 0476 01331000
*          END NLSTEXIT;                                           0477 01332000
*          END IKJEFA10                                            0478 01333000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01334000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 01335000
*/*%INCLUDE SYSLIB  (IKJEFUDL)                                        * 01336000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        * 01337000
*/*%INCLUDE SYSLIB  (IKJPPL  )                                        * 01338000
*/*%INCLUDE SYSLIB  (IKJPTPB )                                        * 01339000
*/*%INCLUDE SYSLIB  (IKJUPT  )                                        * 01340000
*;                                                                 0478 01341000
@DATA    DS    0H                                                       01342000
@CH00426 DC    H'6'                                                     01343000
@CH00059 DC    H'10'                                                    01344000
@CH00257 DC    H'14'                                                    01345000
@CH00415 DC    H'22'                                                    01346000
@CH00078 DC    H'24'                                                    01347000
@CH00301 DC    H'32'                                                    01348000
@CH00416 DC    H'55'                                                    01349000
@CH00447 DC    H'64'                                                    01350000
@SM00453 MVC   DYNLFORM(0),INLINLFM                                     01351000
@SM00458 MVC   UNITN(0),UNITNAME(@10)                                   01352000
@SM00462 MVC   UADSDEST(0,HEDBPTR),DEST(@10)                            01353000
@SM00465 MVC   UADSUNAM(0,UADSRPTR),UNITNAME(@10)                       01354000
@SM00468 MVC   UADSANUM(0,UADSAPTR),ACCTNO                              01355000
@DATD    DSECT                                                          01356000
         DS    0F                                                       01357000
@SA00001 DS    18F                                                      01358000
@SA00003 DS    15F                                                      01359000
@SA00002 DS    0F                                                       01360000
         DS    15F                                                      01361000
IKJEFA10 CSECT                                                          01362000
         DS    0F                                                       01363000
@CF00032 DC    F'1'                                                     01364000
@CH00032 EQU   @CF00032+2                                               01365000
@CF00100 DC    F'2'                                                     01366000
@CF00049 DC    F'4'                                                     01367000
@CF00040 DC    F'8'                                                     01368000
@CF00388 DC    F'12'                                                    01369000
@CH00388 EQU   @CF00388+2                                               01370000
@CF00042 DC    F'16'                                                    01371000
@CF00070 DC    F'20'                                                    01372000
@CF00420 DC    XL4'40FFFFFF'                                            01373000
@CF00457 DC    XL4'0000FFFF'                                            01374000
@DATD    DSECT                                                          01375000
         DS    0D                                                       01376000
ADDPDLAD DS    A                                                        01377000
VCHKPL   DS    CL26                                                     01378000
         ORG   VCHKPL                                                   01379000
EXITADD  DS    AL4                                                      01380000
EXITRTCD DS    AL4                                                      01381000
NODEPTR  DS    AL4                                                      01382000
PERFPTR  DS    AL4                                                      01383000
PPLPTR   DS    AL4                                                      01384000
SAVARAD  DS    AL4                                                      01385000
CMDIND   DS    FL1                                                      01386000
NUMOFLV  DS    FL1                                                      01387000
         ORG   VCHKPL+26                                                01388000
NLSTTAB  DS    CL66                                                     01389000
         ORG   NLSTTAB                                                  01390000
USRLEN   DS    FL1                                                      01391000
USRID    DS    CL8                                                      01392000
PASSWD   DS    CL8                                                      01393000
ACTLEN   DS    FL1                                                      01394000
ACCTNO   DS    CL40                                                     01395000
PROCNM   DS    CL8                                                      01396000
         ORG   NLSTTAB+66                                               01397000
COMMON   DS    CL47                                                     01398000
         ORG   COMMON                                                   01399000
ACIOPTR  DS    AL4                                                      01400000
BLDLPTR  DS    AL4                                                      01401000
DATASUBP DS    AL4                                                      01402000
DCBPTR   DS    AL4                                                      01403000
ECBPTR   DS    AL4                                                      01404000
IOPLPTR  DS    AL4                                                      01405000
NODELADR DS    AL4                                                      01406000
SIZEH    DS    FL2                                                      01407000
SIZEL    DS    FL2                                                      01408000
SIZED    DS    CL5                                                      01409000
UNITN    DS    CL8                                                      01410000
NUMOFLVL DS    FL1                                                      01411000
ENQSW    DS    BL1                                                      01412000
ERRFLG   EQU   COMMON+46                                                01413000
PUTERR   EQU   COMMON+46                                                01414000
RSIZSW   EQU   COMMON+46                                                01415000
@NM00017 EQU   COMMON+46                                                01416000
@NM00018 EQU   COMMON+46                                                01417000
@NM00019 EQU   COMMON+46                                                01418000
@NM00020 EQU   COMMON+46                                                01419000
         ORG   COMMON+47                                                01420000
         DS    CL1                                                      01421000
PUTLLIST DS    CL16                                                     01422000
OUTLNDS  DS    CL40                                                     01423000
         ORG   OUTLNDS                                                  01424000
OUT1LINK DS    AL4                                                      01425000
@NM00021 DS    CL3                                                      01426000
OUT1SCNT DS    CL1                                                      01427000
OUT1SEG1 DS    AL4                                                      01428000
OUT1SEG2 DS    AL4                                                      01429000
OUT1SEG3 DS    AL4                                                      01430000
OUTLD2   DS    CL20                                                     01431000
         ORG   OUTLD2                                                   01432000
@NM00022 DS    AL4                                                      01433000
@NM00023 DS    CL3                                                      01434000
OUT2SCNT DS    CL1                                                      01435000
OUT2SEG1 DS    AL4                                                      01436000
OUT2SEG2 DS    AL4                                                      01437000
OUT2SEG3 DS    AL4                                                      01438000
         ORG   OUTLNDS+40                                               01439000
DECRTCD  DS    CL8                                                      01440000
ERRRTNSG DS    CL6                                                      01441000
         ORG   ERRRTNSG                                                 01442000
ERRRTNLN DS    FL2                                                      01443000
ERRRTNOF DS    FL2                                                      01444000
BCDRTNCD DS    CL2                                                      01445000
         ORG   BCDRTNCD                                                 01446000
@NM00024 DS    CL1                                                      01447000
SIGN     DS    BL1                                                      01448000
         ORG   ERRRTNSG+6                                               01449000
USRIDSEG DS    CL11                                                     01450000
         ORG   USRIDSEG                                                 01451000
USRIDLN  DS    FL2                                                      01452000
USRIDOF  DS    FL2                                                      01453000
USERID   DS    CL7                                                      01454000
         ORG   USRIDSEG+11                                              01455000
         DS    CL1                                                      01456000
SIZSEG   DS    CL9                                                      01457000
         ORG   SIZSEG                                                   01458000
SIZLN    DS    FL2                                                      01459000
SIZOF    DS    FL2                                                      01460000
SIZ      DS    CL5                                                      01461000
         ORG   SIZSEG+9                                                 01462000
         DS    CL1                                                      01463000
GETPTRS  DS    CL20                                                     01464000
         ORG   GETPTRS                                                  01465000
PCLPTR   DS    AL4                                                      01466000
PLENGTH  DS    FL4                                                      01467000
UIDLAD   DS    AL4                                                      01468000
WKAREAAD DS    AL4                                                      01469000
WKAREALN DS    FL4                                                      01470000
         ORG   GETPTRS+20                                               01471000
BLDLLIST DS    CL18                                                     01472000
         ORG   BLDLLIST                                                 01473000
NUMOFENT DS    FL2                                                      01474000
ENTLNGTH DS    FL2                                                      01475000
BLDLENTY DS    CL14                                                     01476000
         ORG   BLDLENTY                                                 01477000
BLDLNAME DS    CL8                                                      01478000
         ORG   BLDLLIST+18                                              01479000
         DS    CL2                                                      01480000
ACIOPARM DS    CL24                                                     01481000
         ORG   ACIOPARM                                                 01482000
ACIOFLGS DS    BL1                                                      01483000
         ORG   ACIOFLGS                                                 01484000
@NM00025 DS    BL1                                                      01485000
@NM00026 EQU   ACIOFLGS+0                                               01486000
@NM00027 EQU   ACIOFLGS+0                                               01487000
@NM00028 EQU   ACIOFLGS+0                                               01488000
@NM00029 EQU   ACIOFLGS+0                                               01489000
@NM00030 EQU   ACIOFLGS+0                                               01490000
@NM00031 EQU   ACIOFLGS+0                                               01491000
@NM00032 EQU   ACIOFLGS+0                                               01492000
         ORG   ACIOPARM+1                                               01493000
ACIODCBA DS    AL3                                                      01494000
ACIOMPTR DS    AL4                                                      01495000
@NM00033 DS    AL4                                                      01496000
ACIOLINK DS    AL4                                                      01497000
ACIONMBR DS    FL1                                                      01498000
ACIOBUFR DS    AL3                                                      01499000
ACIOPUTL DS    AL4                                                      01500000
         ORG   ACIOPUTL                                                 01501000
ACIOMSGN DS    CL1                                                      01502000
         ORG   ACIOPARM+24                                              01503000
STOWLIST DS    CL14                                                     01504000
         ORG   STOWLIST                                                 01505000
STOWNAME DS    CL8                                                      01506000
@NM00034 DS    CL3                                                      01507000
STOWC    DS    CL1                                                      01508000
@NM00035 DS    CL2                                                      01509000
         ORG   STOWLIST+14                                              01510000
         DS    CL2                                                      01511000
SPACPARM DS    CL12                                                     01512000
         ORG   SPACPARM                                                 01513000
@NM00036 DS    CL8                                                      01514000
         ORG   @NM00036                                                 01515000
SPACMPTR DS    AL4                                                      01516000
SPACMCNT DS    FL2                                                      01517000
SPACLNTH DS    FL2                                                      01518000
         ORG   SPACPARM+8                                               01519000
@NM00037 DS    CL4                                                      01520000
         ORG   @NM00037                                                 01521000
SPACOFST DS    AL4                                                      01522000
         ORG   SPACPARM+12                                              01523000
PERFGRP  DS    CL32                                                     01524000
PARSLIST DS    CL28                                                     01525000
IKJEFA10 CSECT                                                          01526000
         DS    0F                                                       01527000
@SIZDATD DC    AL1(1)                                                   01528000
         DC    AL3(@ENDDATD-@DATD)                                      01529000
@CV00157 DC    V(IKJEFA12)                                              01530000
@CV00158 DC    V(IKJEFA52)                                              01531000
@CV00159 DC    V(IKJEFA53)                                              01532000
@CV00213 DC    V(MSGTABLE)                                              01533000
         DS    0D                                                       01534000
PCLMODAD DC    AL4(PCLMODEL)                                            01535000
CREATLNG DC    AL2(SIZEPCE-NOLIMPCE)                                    01536000
AUGMTLNG DC    AL2(AUGMPCE-UNITPCE)                                     01537000
ONEITMOF DC    AL2(PROCPCE-PCLSTART-2)                                  01538000
TWOITMOF DC    AL2(ACCTPCE-PCLSTART-2)                                  01539000
UNITLNGO DC    AL2(UNITPCE-PCLSTART+2)                                  01540000
NOLIMLNO DC    AL2(NOLIMPCE-PCLSTART+2)                                 01541000
DATSUBFO DC    AL2(SIZEPCE-PCLSTART-2)                                  01542000
@CC00401 DC    C'        '                                              01543000
@CC00409 DC    C'* '                                                    01544000
@CB00413 DC    X'8000'                                                  01545000
MAJNAME  DC    CL8'SYSIKJUA'                                            01546000
MINNAME  DC    CL8'OPENUADS'                                            01547000
@DATD    DSECT                                                          01548000
IKJEFA10 CSECT                                                          01549000
         EXTRN IKJEFA55                 ADDR OF PARSE VALIDCK EXIT      01550000
         EXTRN ACCTEXTR                 ADDR OF PARSE VALIDCK EXIT      01551000
         EXTRN PASSEXTR                 ADDR OF PARSE VALIDCK EXIT      01552000
         EXTRN PROCEXTR                 ADDR OF PARSE VALIDCK EXIT      01553000
         EXTRN SIZEEXIT                 ADDR OF PARSE VALIDCK EXIT      01554000
         EXTRN USDAEXIT                 ADDR OF PARSE VALIDCK EXIT      01555000
         EXTRN PERFEXIT                 ADDR OF PARSE VALIDCK EXIT      01556000
PCLMODEL CSECT                                                          01557000
PCLSTART EQU   *                                                        01558000
PCLMODEL IKJPARM  DSECT=ADDPDLD                                         01559000
NODEPDE  IKJPOSIT PSTRING,PROMPT='(NODELIST)',VALIDCK=IKJEFA55,        *01560000
               HELP=('NODELIST - FORMAT IS (USERID / PASSWORD / ACCOUNT*01561000
                NUMBER / PROCEDURE NAME)')                              01562000
SIZEPDE  IKJKEYWD                                                       01563000
         IKJNAME  'SIZE',SUBFLD=SIZESUB                                 01564000
UNITPDE  IKJKEYWD                                                       01565000
UNITPCE  EQU   *                   ** THIS STATEMENT MUST PRECEDE      *01566000
                                   ** 'UNITPDE' GROUP BECAUSE THE PCE  *01567000
                                   ** LENGTH OF 'UNIT' MAY BE MODIFIED  01568000
*                                  ** TO OVERLAP CREATE MODE PDES       01569000
         IKJNAME  'UNIT',SUBFLD=UNITSUB                                 01570000
OPERPDE  IKJKEYWD DEFAULT='NOOPER'                                      01571000
         IKJNAME  'OPER'                                                01572000
         IKJNAME  'NOOPER'                                              01573000
ACCTPDE  IKJKEYWD DEFAULT='NOACCT'                                      01574000
         IKJNAME  'ACCT'                                                01575000
         IKJNAME  'NOACCT'                                              01576000
JCLPDE   IKJKEYWD DEFAULT='NOJCL'                                       01577000
         IKJNAME  'JCL'                                                 01578000
         IKJNAME  'NOJCL'                                               01579000
MONTPDE  IKJKEYWD DEFAULT='NOMOUNT'                                     01580000
         IKJNAME  'MOUNT'                                               01581000
         IKJNAME  'NOMOUNT'                                             01582000
USERPDE  IKJKEYWD                                                       01583000
         IKJNAME  'USERDATA',SUBFLD=USERSUB                             01584000
DESTPDE  IKJKEYWD DEFAULT='NODEST'                                      01585000
         IKJNAME  'DESTINATION',SUBFLD=DESTSUB                          01586000
         IKJNAME  'NODEST'                                              01587000
PERFPDE  IKJKEYWD DEFAULT='NOPERFORM'                                   01588000
         IKJNAME  'PERFORM',SUBFLD=PERFSUB                              01589000
         IKJNAME  'NOPERFORM'                                           01590000
MAXSZPDE IKJKEYWD DEFAULT='NOLIM'                                       01591000
         IKJNAME  'MAXSIZE',SUBFLD=MAXSUB                               01592000
NOLIMPCE EQU   *                   ** THIS STATEMENT MUST PRECEDE      *01593000
                                   ** 'NOLIMPDE' GROUP BECAUSE THE PCE *01594000
                                   ** LENGTH OF 'NOLIM' MAY BE MODIFIED 01595000
*                                  ** TO OVERLAP 'DATAPDE' BY NLSTEXIT  01596000
         IKJNAME  'NOLIM'                                               01597000
AUGMPCE  EQU   *                                                        01598000
DATAPDE  IKJKEYWD DEFAULT='DATA'                                        01599000
         IKJNAME  'DATA',SUBFLD=DATALIST                                01600000
SIZEPCE  EQU   *                                                        01601000
SIZESUB  IKJSUBF                                                        01602000
SIZNO    IKJIDENT 'SIZE VALUE',MAXLNTH=5,FIRST=NUMERIC,OTHER=NUMERIC,  *01603000
               PROMPT='REGION SIZE FOR PROCEDURE(S)',                  *01604000
               HELP=('A NUMBER LESS THAN 65535'),VALIDCK=SIZEEXIT       01605000
UNITSUB  IKJSUBF                                                        01606000
UNITNAM  IKJIDENT 'UNIT NAME',MAXLNTH=8,FIRST=ALPHANUM,                *01607000
               HELP=('AN EIGHT CHARACTER DEVICE GROUP GENERIC NAME'),  *01608000
               OTHER=ALPHANUM,PROMPT='DEVICE GROUP GENERIC NAME'        01609000
USERSUB  IKJSUBF                                                        01610000
USERNAM  IKJIDENT 'INSTALLATION DATA',MAXLNTH=4,FIRST=ALPHANUM,        *01611000
               OTHER=ALPHANUM,VALIDCK=USDAEXIT,                        *01612000
               HELP=('FOUR EBCDIC CHARACTERS REPRESENTING HEX DIGITS'),*01613000
               PROMPT='INSTALLATION DATA'                               01614000
DESTSUB  IKJSUBF                                                        01615000
DESTNAM  IKJIDENT 'DESTINATION',MAXLNTH=7,FIRST=ALPHA,                 *01616000
               OTHER=ALPHANUM,PROMPT='DESTINATION NAME',               *01617000
               HELP=('A SEVEN CHARACTER USERID DESTINATION')            01618000
PERFSUB  IKJSUBF                                                        01619000
PERFNAM  IKJIDENT 'PERFORMANCE GROUP',LIST,MAXLNTH=3,FIRST=NUMERIC,    *01620000
               OTHER=NUMERIC,VALIDCK=PERFEXIT,                         *01621000
               PROMPT='PERFORMANCE GROUP(S)',                          *01622000
               HELP=('A LIST OF NUMBERS BETWEEN 1 AND 255')             01623000
MAXSUB   IKJSUBF                                                        01624000
MAXSZ    IKJIDENT 'MAXSIZE VALUE',MAXLNTH=5,FIRST=NUMERIC,             *01625000
               OTHER=NUMERIC,                                          *01626000
               PROMPT='MAXIMUM REGION SIZE FOR THIS USERID',           *01627000
               HELP=('A NUMBER LESS THAN 65535'),VALIDCK=SIZEEXIT       01628000
DATALIST IKJSUBF                                                        01629000
PASSD    IKJIDENT 'DATALIST-PASSWORD',LIST,MAXLNTH=8,                  *01630000
               FIRST=ANY,OTHER=ALPHANUM,VALIDCK=PASSEXTR,              *01631000
               PROMPT='DATALIST-PASSWORD'                               01632000
ACCTPCE  EQU   *                                                        01633000
ACCTD    IKJIDENT 'DATALIST-ACCOUNT NUMBER',LIST,                      *01634000
               MAXLNTH=40,FIRST=ANY,OTHER=ANY,VALIDCK=ACCTEXTR,        *01635000
               PROMPT='DATALIST-ACCOUNT NUMBER'                         01636000
PROCPCE  EQU   *                                                        01637000
PROCD    IKJIDENT 'DATALIST-PROCEDURE NAME',LIST,MAXLNTH=8,            *01638000
               FIRST=ANY,OTHER=ALPHANUM,VALIDCK=PROCEXTR,              *01639000
               PROMPT='DATALIST-PROCEDURE NAME'                         01640000
         IKJENDP                                                        01641000
@DATD    DSECT                                                          01642000
IKJEFA10 CSECT                                                          01643000
INLINLFM DS    0F                                                       01644000
         DCB   DSORG=PO,DDNAME=SYSUADS,MACRF=(W),RECFM=FB,OPTCD=W       01645000
         ENQ   (MAJNAME,MINNAME,E,8,SYSTEM),MF=L                        01646000
         FREEMAIN V,SP=1,MF=L              LENGTH & ADD SET BY E        01647000
         GETMAIN EC,SP=1,MF=L              LENGTH & ANS PTR SET BY E    01648000
         OPEN  (,),MF=L                    DCB & OPTION SET BY E FORM   01649000
         PUTLINE ,OUTPUT=(0,TERM,MULTLVL,INFOR),MF=L                    01650000
INLINLNG DC    A(*-INLINLFM)              LENGTH OF L-FORM MACROS       01651000
@DATD    DSECT                                                          01652000
DYNLFORM DS    0F                                                       01653000
DYNUADCB DCB   DSORG=PO,DDNAME=SYSUADS,MACRF=(W)                        01654000
DYNNQLST ENQ   (MAJNAME,,,,),MF=L         WILL BE INIT'D FROM INLINENQ  01655000
DYNFRLST FREEMAIN V,SP=1,MF=L             LENGTH & ADD SET BY E         01656000
DYNGTLST GETMAIN EC,SP=1,MF=L             WILL BE INIT'D FROM INLINGTM  01657000
DYNOPLST OPEN  (,),MF=L                   WILL BE INIT'D FROM INLINOPN  01658000
DYNPTLST PUTLINE ,MF=L                    WILL BE INIT'D FROM INLINPTL  01659000
         DCBD  DSORG=PO,DEVD=DA           DATA CONTROL BLOCK MAPPING    01660000
IKJEFA10 CSECT                                                          01661000
         DS   0H                                                        01662000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   01663000
@DATD    DSECT                                                          01664000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01665000
@ENDDATD EQU   *                                                        01666000
IKJEFA10 CSECT                                                          01667000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01668000
@01      EQU   01                                                       01669000
@02      EQU   02                                                       01670000
@03      EQU   03                                                       01671000
@04      EQU   04                                                       01672000
@05      EQU   05                                                       01673000
@06      EQU   06                                                       01674000
@07      EQU   07                                                       01675000
@08      EQU   08                                                       01676000
@09      EQU   09                                                       01677000
@10      EQU   10                                                       01678000
@11      EQU   11                                                       01679000
@12      EQU   12                                                       01680000
@13      EQU   13                                                       01681000
@14      EQU   14                                                       01682000
@15      EQU   15                                                       01683000
PCEPTR   EQU   @02                                                      01684000
SAVE13   EQU   @04                                                      01685000
MARKMARK EQU   @02                                                      01686000
LOOPCNT  EQU   @05                                                      01687000
RETNCODE EQU   @04                                                      01688000
RETCODE  EQU   @03                                                      01689000
MSGBASE  EQU   @06                                                      01690000
ACCTPLP  EQU   @07                                                      01691000
UPTPTR   EQU   @02                                                      01692000
FSQEPTR  EQU   @02                                                      01693000
UADSRPTR EQU   @02                                                      01694000
UADSAPTR EQU   @02                                                      01695000
UADSPPTR EQU   @02                                                      01696000
UADSNPTR EQU   @03                                                      01697000
HEDBPTR  EQU   @04                                                      01698000
R0       EQU   @00                                                      01699000
R1       EQU   @01                                                      01700000
R2       EQU   @02                                                      01701000
R13      EQU   @13                                                      01702000
R14      EQU   @14                                                      01703000
R15      EQU   @15                                                      01704000
R12      EQU   @12                                                      01705000
DHED     EQU   0                                                        01706000
UADSMHDR EQU   DHED                                                     01707000
UADSBLNG EQU   UADSMHDR                                                 01708000
UADSFSQP EQU   UADSMHDR+2                                               01709000
UADSUSER EQU   UADSMHDR+4                                               01710000
UADSBN01 EQU   UADSMHDR+12                                              01711000
UADSEXPF EQU   UADSBN01+1                                               01712000
UADSMAXC EQU   UADSMHDR+14                                              01713000
UADSATTR EQU   DHED+16                                                  01714000
USATR00  EQU   UADSATTR                                                 01715000
USATR01  EQU   UADSATTR                                                 01716000
USATR02  EQU   UADSATTR                                                 01717000
USATR03  EQU   UADSATTR                                                 01718000
UADSINST EQU   DHED+18                                                  01719000
UADSUPTP EQU   DHED+20                                                  01720000
UADSPWD1 EQU   DHED+24                                                  01721000
UADSPERP EQU   DHED+28                                                  01722000
UADSDEST EQU   DHED+32                                                  01723000
UADSNODE EQU   0                                                        01724000
UADSNWD1 EQU   UADSNODE                                                 01725000
UADSNFLG EQU   UADSNWD1                                                 01726000
UADSNSUB EQU   UADSNODE+4                                               01727000
UADSNDAT EQU   UADSNODE+8                                               01728000
DPOBD    EQU   0                                                        01729000
UADSPCTR EQU   DPOBD                                                    01730000
UADSPPWD EQU   DPOBD+4                                                  01731000
DNOBD    EQU   0                                                        01732000
UADSACTR EQU   DNOBD                                                    01733000
UADSALEN EQU   DNOBD+44                                                 01734000
UADSANUM EQU   DNOBD+45                                                 01735000
DROBD    EQU   0                                                        01736000
UADSRCTR EQU   DROBD                                                    01737000
UADSRNAM EQU   DROBD+4                                                  01738000
UADSRSIZ EQU   DROBD+14                                                 01739000
UADSUNAM EQU   DROBD+16                                                 01740000
UADSFSQE EQU   0                                                        01741000
FSQELNTH EQU   UADSFSQE                                                 01742000
FSQENEXT EQU   UADSFSQE+2                                               01743000
DUIDL    EQU   0                                                        01744000
UIDLNEX  EQU   DUIDL                                                    01745000
UIDLSWS  EQU   DUIDL+4                                                  01746000
UIDLCT   EQU   DUIDL+6                                                  01747000
UIDUSER  EQU   DUIDL+8                                                  01748000
IOPL     EQU   0                                                        01749000
IOPLIOPB EQU   IOPL+12                                                  01750000
PPL      EQU   0                                                        01751000
PPLPCL   EQU   PPL+12                                                   01752000
PPLANS   EQU   PPL+16                                                   01753000
PPLCBUF  EQU   PPL+20                                                   01754000
PPLUWA   EQU   PPL+24                                                   01755000
PTPB     EQU   0                                                        01756000
PTPBOPUT EQU   PTPB+4                                                   01757000
UPT      EQU   0                                                        01758000
UPTSWS   EQU   UPT+12                                                   01759000
UPTPREFX EQU   UPT+16                                                   01760000
UPTPREFL EQU   UPT+23                                                   01761000
ACCTPL   EQU   0                                                        01762000
ACCTECBP EQU   ACCTPL+8                                                 01763000
CMDBUFAD EQU   ACCTPL+12                                                01764000
UIDLPTR  EQU   ACCTPL+16                                                01765000
ACCTECB  EQU   0                                                        01766000
ATTENTN  EQU   ACCTECB                                                  01767000
ADDMSG   EQU   0                                                        01768000
UADSPERG EQU   0                                                        01769000
ADDPDL   EQU   0                                                        01770000
SIZEKEY  EQU   ADDPDL+16                                                01771000
UNITKEY  EQU   ADDPDL+18                                                01772000
OPERKEY  EQU   ADDPDL+20                                                01773000
ACCTKEY  EQU   ADDPDL+22                                                01774000
JCLKEY   EQU   ADDPDL+24                                                01775000
MONTKEY  EQU   ADDPDL+26                                                01776000
USERKEY  EQU   ADDPDL+28                                                01777000
DESTKEY  EQU   ADDPDL+30                                                01778000
PERFKEY  EQU   ADDPDL+32                                                01779000
MAXSZKEY EQU   ADDPDL+34                                                01780000
DATAKEY  EQU   ADDPDL+36                                                01781000
@NM00041 EQU   ADDPDL+40                                                01782000
SIZNOADR EQU   @NM00041                                                 01783000
SIZNOLNG EQU   @NM00041+4                                               01784000
SIZEHEX  EQU   @NM00041+6                                               01785000
@NM00042 EQU   ADDPDL+48                                                01786000
UNITNADR EQU   @NM00042                                                 01787000
UNITNLNG EQU   @NM00042+4                                               01788000
@NM00044 EQU   ADDPDL+56                                                01789000
USDAHEX  EQU   @NM00044+6                                               01790000
@NM00047 EQU   ADDPDL+64                                                01791000
DESTADR  EQU   @NM00047                                                 01792000
DESTLNG  EQU   @NM00047+4                                               01793000
@NM00049 EQU   ADDPDL+72                                                01794000
@NM00054 EQU   ADDPDL+84                                                01795000
MAXSZHEX EQU   @NM00054+6                                               01796000
DATASUBF EQU   ADDPDL+92                                                01797000
DEST     EQU   0                                                        01798000
SIZE     EQU   0                                                        01799000
UNITNAME EQU   0                                                        01800000
PCLLNGTH EQU   0                                                        01801000
PARSMACS EQU   0                                                        01802000
PCELNG   EQU   0                                                        01803000
PTPBPTR  EQU   IOPLIOPB                                                 01804000
FSQELBIT EQU   FSQELNTH+1                                               01805000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01806000
@NM00056 EQU   @NM00054+4                                               01807000
@NM00055 EQU   @NM00054                                                 01808000
@NM00053 EQU   @NM00049+8                                               01809000
@NM00052 EQU   @NM00049+6                                               01810000
@NM00051 EQU   @NM00049+4                                               01811000
@NM00050 EQU   @NM00049                                                 01812000
@NM00048 EQU   @NM00047+6                                               01813000
@NM00046 EQU   @NM00044+4                                               01814000
@NM00045 EQU   @NM00044                                                 01815000
@NM00043 EQU   @NM00042+6                                               01816000
@NM00040 EQU   ADDPDL+38                                                01817000
@NM00039 EQU   ADDPDL+8                                                 01818000
@NM00038 EQU   ADDPDL                                                   01819000
@NM00016 EQU   ACCTECB                                                  01820000
@NM00015 EQU   ACCTPL                                                   01821000
@NM00014 EQU   UPT+15                                                   01822000
UPTLDEL  EQU   UPT+14                                                   01823000
UPTCDEL  EQU   UPT+13                                                   01824000
UPTWTP   EQU   UPTSWS                                                   01825000
UPTMODE  EQU   UPTSWS                                                   01826000
UPTALD   EQU   UPTSWS                                                   01827000
UPTPAUS  EQU   UPTSWS                                                   01828000
UPTNCOM  EQU   UPTSWS                                                   01829000
UPTMID   EQU   UPTSWS                                                   01830000
UPTNPRM  EQU   UPTSWS                                                   01831000
UPTRCVR  EQU   UPTSWS                                                   01832000
UPTUSER  EQU   UPT+2                                                    01833000
@NM00013 EQU   UPT                                                      01834000
PTPBFLN  EQU   PTPB+8                                                   01835000
@NM00012 EQU   PTPB                                                     01836000
PPLECB   EQU   PPL+8                                                    01837000
PPLECT   EQU   PPL+4                                                    01838000
PPLUPT   EQU   PPL                                                      01839000
IOPLECB  EQU   IOPL+8                                                   01840000
IOPLECT  EQU   IOPL+4                                                   01841000
IOPLUPT  EQU   IOPL                                                     01842000
@NM00011 EQU   UIDLSWS                                                  01843000
UIDCHG   EQU   UIDLSWS                                                  01844000
UIDDEL   EQU   UIDLSWS                                                  01845000
UIDADD   EQU   UIDLSWS                                                  01846000
@NM00010 EQU   DROBD+12                                                 01847000
@NM00009 EQU   DROBD+1                                                  01848000
UADSADRF EQU   DNOBD+4                                                  01849000
@NM00008 EQU   DNOBD+1                                                  01850000
@NM00007 EQU   DPOBD+1                                                  01851000
UADSNNEX EQU   UADSNWD1+1                                               01852000
@NM00006 EQU   UADSNWD1                                                 01853000
@NM00005 EQU   DHED+44                                                  01854000
UADSSOUT EQU   DHED+43                                                  01855000
UADSSUBM EQU   DHED+42                                                  01856000
UADSSUBC EQU   DHED+41                                                  01857000
UADSSUBH EQU   DHED+40                                                  01858000
@NM00004 EQU   UADSATTR                                                 01859000
USATR04  EQU   UADSATTR                                                 01860000
@NM00003 EQU   UADSATTR                                                 01861000
@NM00002 EQU   UADSBN01+1                                               01862000
UADSXUSD EQU   UADSBN01+1                                               01863000
UADSXBLK EQU   UADSBN01+1                                               01864000
UADSNUSP EQU   UADSBN01+1                                               01865000
@NM00001 EQU   UADSBN01                                                 01866000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01867000
@RT00073 EQU   GETMERR                                                  01868000
@RT00103 EQU   CLEANUP0                                                 01869000
@RT00124 EQU   CLEANUP0                                                 01870000
@RT00201 EQU   GETMERR                                                  01871000
@RT00267 EQU   LOOPEND                                                  01872000
@RT00270 EQU   LOOPEND                                                  01873000
@RF00272 EQU   @RC00255                                                 01874000
@RT00280 EQU   LOOPEND                                                  01875000
@RT00291 EQU   LOOPEND                                                  01876000
@RT00302 EQU   CLEANUP0                                                 01877000
@RT00326 EQU   STOWERR                                                  01878000
@RT00332 EQU   GETMERR                                                  01879000
@RF00381 EQU   @EL00001                                                 01880000
@RF00422 EQU   @EL00002                                                 01881000
@RC00453 EQU   @RC00451                                                 01882000
@ENDDATA EQU   *                                                        01883000
         END   IKJEFA10,(C'PLS0952',0701,78174)                         01884000
