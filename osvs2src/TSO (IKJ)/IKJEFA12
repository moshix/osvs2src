         TITLE 'IKJEFA12 - ACCOUNT/ADD SUBCOMMAND (AUGMENT MODE        *00001000
                        '                                               00002000
IKJEFA12 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA12  73.360'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*          COMMPTR=R1;                  /* GET POINTER TO COMMON     */ 00022000
         LR    COMMPTR,R1                                          0022 00023000
*          RFY R1 UNRSTD;               /* RELEASE REGISTER 1        */ 00024000
*          SWITCHES='0'B;               /* CLEAR SWITCHES            */ 00025000
         MVI   SWITCHES,B'00000000'                                0024 00026000
*          STOWLIST=STOWLIST&&STOWLIST; /* CLEAR STOW LIST           */ 00027000
         XC    STOWLIST(14),STOWLIST                               0025 00028000
*          STOWC='01'X;                 /* INDICATE ONE DATA HALFWORD*/ 00029000
         MVI   STOWC,X'01'                                         0026 00030000
*          /* MOVE L-FORMS OF O/S MACROS INTO DYNAMIC STORAGE        */ 00031000
*          DYNLFORM(1:INLINLNG)=INLINLFM(1:INLINLNG);              0027 00032000
         L     @10,INLINLNG                                        0027 00033000
         BCTR  @10,0                                               0027 00034000
         EX    @10,@SM00322                                        0027 00035000
*          OUTLNDS=OUTLNDS&&OUTLNDS;    /* CLEAR OUTPUT LINE       0028 00036000
*                                          DESCRIPTORS FOR PUTLINE   */ 00037000
         XC    OUTLNDS(40),OUTLNDS                                 0028 00038000
*          OUT1LINK=ADDR(OUTLD2);       /* INITIALIZE LINKAGE FOR  0029 00039000
*                                          2 MESSAGE LEVELS          */ 00040000
         LA    @10,OUTLD2                                          0029 00041000
         ST    @10,OUT1LINK                                        0029 00042000
*          MSGBASE=ADDR(MSGTABLE);      /* BASE PTR FOR MSG PTR TABLE*/ 00043000
         L     MSGBASE,@CV00118                                    0030 00044000
*          GEN (USING IHADCB,DCBREG)    /* ESTABLISH DCB ADDRESSABLTY*/ 00045000
*            REFS(DCBREG);                                         0031 00046000
         USING IHADCB,DCBREG                                            00047000
*          RFY (DCBREG) RSTD;           /* RESERVE REG. FOR DCB BASE */ 00048000
*          DCBREG=ADDR(BPAMDCB);        /* LOAD DCB POINTER          */ 00049000
         LA    DCBREG,BPAMDCB                                      0033 00050000
*          /* OPEN THE UADS FOR UPDATE MODE                          */ 00051000
*          GEN (OPEN  ((DCBREG),(UPDAT)),MF=(E,DYNOPLST))          0034 00052000
*            REFS(DCBREG,DYNOPLST);                                0034 00053000
         OPEN  ((DCBREG),(UPDAT)),MF=(E,DYNOPLST)                       00054000
*          /* CHECK FOR A SUCCESSFUL OPEN                            */ 00055000
*          IF DCBOFLGS(4)='0'B                                     0035 00056000
*            THEN                       /* OPEN FAILED               */ 00057000
         TM    DCBOFLGS,B'00010000'                                0035 00058000
         BNZ   @RF00035                                            0035 00059000
*              DO;                                                 0036 00060000
*                /* SET PARAMETERS FOR PUTLINE MESSAGE               */ 00061000
*                OUT1SCNT='01'X;        /* 1ST LEVEL MSG SEG COUNT =1*/ 00062000
         MVI   OUT1SCNT,X'01'                                      0037 00063000
*                OUT1SEG1=ADDMSG(8);    /* ADDR OF UADS NO GOOD MSG  */ 00064000
         L     @10,ADDMSG+28(,MSGBASE)                             0038 00065000
         ST    @10,OUT1SEG1                                        0038 00066000
*                OUT2SCNT='01'X;        /* 2ND LEVEL MSG SEG COUNT =1*/ 00067000
         MVI   OUT2SCNT,X'01'                                      0039 00068000
*                OUT2SEG1=ADDMSG(9);    /* 2ND LVL = 'CANNOT OPEN'   */ 00069000
         L     @10,ADDMSG+32(,MSGBASE)                             0040 00070000
         ST    @10,OUT2SEG1                                        0040 00071000
*                GOTO ERRMSG;           /* GO PUT OUT MESSAGE & LEAVE*/ 00072000
         B     ERRMSG                                              0041 00073000
*              END;                                                0042 00074000
*          RFY (DCBREG) UNRSTD;         /* RELEASE REG. FOR DCB BASE */ 00075000
@RF00035 DS    0H                                                  0044 00076000
*          /**********************************************************/ 00077000
*          /* SCAN THE DATA KEYWORD SUBFIELD PDES FOR DUPLICATE      */ 00078000
*          /* ENTRIES WITHIN LIST ON EACH LEVEL.                     */ 00079000
*          /**********************************************************/ 00080000
*          /* SCAN EACH DATA SUBFIELD LEVEL (I.E., PASSWORDS,        */ 00081000
*          /* ACCOUNT NUMBERS, PROC NAMES) WITH ONE ITERATION        */ 00082000
*          DO LEVLPTR=DATASUBP          /* BEGINNING OF SUBFIELD     */ 00083000
*             BY LNDAPDE                /* INCREMENT BY PDE SIZE     */ 00084000
*             TO DATASUBP+(2*LNDAPDE);  /* LAST BYTE OF SUBFIELD     */ 00085000
         L     LEVLPTR,DATASUBP(,COMMPTR)                          0044 00086000
         B     @DE00044                                            0044 00087000
@DL00044 DS    0H                                                  0045 00088000
*            ARGPDPTR=LEVLPTR;          /* FIRST PDE IN A LIST       */ 00089000
         LR    ARGPDPTR,LEVLPTR                                    0045 00090000
*            /* IS THIS ARGUMENT LAST IN THE CHAIN ?                 */ 00091000
*            DO WHILE ARGPDPTR^=0 &     /* LOOP TILL LINK PTR = 0    */ 00092000
*             ARGPDPTR->DATACHN^=0;                                0046 00093000
         B     @DE00046                                            0046 00094000
@DL00046 DS    0H                                                  0047 00095000
*              ARGPTR=ARGPDPTR->DATAPTR;/* ARGUMENT FOR SCAN FOR   0047 00096000
*                                          DUPLICATES                */ 00097000
         L     ARGPTR,DATAPTR(,ARGPDPTR)                           0047 00098000
*              PREPDPTR=ARGPDPTR;       /* SAVE INITIAL PTR AS     0048 00099000
*                                          'PREVIOUS' PDE PTR        */ 00100000
         LR    PREPDPTR,ARGPDPTR                                   0048 00101000
*              CURPDPTR=ARGPDPTR->DATACHN; /* INITIALIZE 'CURRENT' 0049 00102000
*                                             ITEM PDE PTR           */ 00103000
         SLR   CURPDPTR,CURPDPTR                                   0049 00104000
         ICM   CURPDPTR,7,DATACHN(ARGPDPTR)                        0049 00105000
*              /* TOP OF SCAN FOR ONE ARGUMENT                       */ 00106000
*              DO WHILE CURPDPTR^=0;    /* LOOP TILL LINK POINTER = 0*/ 00107000
         B     @DE00050                                            0050 00108000
@DL00050 DS    0H                                                  0051 00109000
*                CURRPTR=DATAPTR;       /* COMPARAND FOR COMPARE     */ 00110000
         L     CURRPTR,DATAPTR(,CURPDPTR)                          0051 00111000
*                /* DOES 'ARGUMENT' = 'CURRENT' ?                    */ 00112000
*                IF ARGPDPTR->DATALNTH=DATALNTH /* IF LENGTH IS EQUAL*/ 00113000
*                    &ARGPTR->DATAITEM(1:DATALNTH)                 0052 00114000
*                    =DATAITEM(1:DATALNTH) /* AND TEXT IS EQUAL      */ 00115000
*                  THEN                 /* A DUPLICATE IS FOUND      */ 00116000
         LH    @10,DATALNTH(,CURPDPTR)                             0052 00117000
         CH    @10,DATALNTH(,ARGPDPTR)                             0052 00118000
         BNE   @RF00052                                            0052 00119000
         LR    @15,@10                                             0052 00120000
         BCTR  @15,0                                               0052 00121000
         EX    @15,@SC00324                                        0052 00122000
         BNE   @RF00052                                            0052 00123000
*                    DO;                                           0053 00124000
*                      PREPDPTR->DATACHN=DATACHN; /* REMOVE 'CURRENT'   00125000
*                                                    ITEM            */ 00126000
         MVC   DATACHN(3,PREPDPTR),DATACHN(CURPDPTR)               0054 00127000
*                      /* SET PARAMETERS FOR PUTLINE MESSAGE         */ 00128000
*                      OUT1LINK=0;      /* INDICATE NO 2ND LEVEL     */ 00129000
         SLR   @14,@14                                             0055 00130000
         ST    @14,OUT1LINK                                        0055 00131000
*                      OUT1SCNT='02'X;  /* 1ST LVL SEG COUNT =2      */ 00132000
         MVI   OUT1SCNT,X'02'                                      0056 00133000
*                      OUT1SEG1=ADDMSG(15); /* 'DUPLICATE ITEM XXXX     00134000
*                                              IGNORED'              */ 00135000
         L     @14,ADDMSG+56(,MSGBASE)                             0057 00136000
         ST    @14,OUT1SEG1                                        0057 00137000
*                      INSTLN=DATALNTH+4; /* DATA SEGMT LENGTH       */ 00138000
         AH    @10,@CH00073                                        0058 00139000
         STH   @10,INSTLN                                          0058 00140000
*                      INSTOF=25;       /* OFFSET FOR INSERTION      */ 00141000
         MVC   INSTOF(2),@CH00247                                  0059 00142000
*                      INSTTX(1:DATALNTH)=DATAITEM; /* TEXT          */ 00143000
         EX    @15,@SM00326                                        0060 00144000
*                      OUT1SEG2=ADDR(INSTSEG); /* 2ND SEG PTR        */ 00145000
         LA    @10,INSTSEG                                         0061 00146000
         ST    @10,OUT1SEG2                                        0061 00147000
*                      CALL INFOMSG;    /* GO PUT OUT MSG            */ 00148000
         BAL   @14,INFOMSG                                         0062 00149000
*                    END;                                          0063 00150000
*                      ELSE                                        0064 00151000
*                        PREPDPTR=CURPDPTR;   /* MAKE 'CURRENT' PDE     00152000
*                                                  'PREVIOUS'        */ 00153000
         B     @RC00052                                            0064 00154000
@RF00052 LR    PREPDPTR,CURPDPTR                                   0064 00155000
*                    /* CONTROL RETURNED HERE FROM MESSAGE HANDLER   */ 00156000
*                    CURPDPTR=DATACHN; /* UPDT 'CURRENT' PTR         */ 00157000
@RC00052 SLR   @10,@10                                             0065 00158000
         ICM   @10,7,DATACHN(CURPDPTR)                             0065 00159000
         LR    CURPDPTR,@10                                        0065 00160000
*              END;                     /* END OF SCAN FOR ONE ITEM  */ 00161000
@DE00050 LTR   CURPDPTR,CURPDPTR                                   0066 00162000
         BNZ   @DL00050                                            0066 00163000
*                    ARGPDPTR=ARGPDPTR->DATACHN; /* BUMP ARGUMENT PDE*/ 00164000
         SLR   @10,@10                                             0067 00165000
         ICM   @10,7,DATACHN(ARGPDPTR)                             0067 00166000
         LR    ARGPDPTR,@10                                        0067 00167000
*            END;                       /* END OF SCANS FOR ONE    0068 00168000
*                                          DATA SUBFIELD LEVEL       */ 00169000
@DE00046 LTR   ARGPDPTR,ARGPDPTR                                   0068 00170000
         BZ    @DC00046                                            0068 00171000
         ICM   @10,7,DATACHN(ARGPDPTR)                             0068 00172000
         BNZ   @DL00046                                            0068 00173000
@DC00046 DS    0H                                                  0069 00174000
*          END;                         /* LOOP FOR ANOTHER LEVL     */ 00175000
         AL    LEVLPTR,LNDAPDE                                     0069 00176000
@DE00044 L     @10,LNDAPDE                                         0069 00177000
         ALR   @10,@10                                             0069 00178000
         AL    @10,DATASUBP(,COMMPTR)                              0069 00179000
         CR    LEVLPTR,@10                                         0069 00180000
         BNH   @DL00044                                            0069 00181000
*          ACIODCBA=ADDR(BPAMDCB);      /* POINT TO UPDATE DCB       */ 00182000
         L     @10,ACIOPTR(,COMMPTR)                               0070 00183000
         LA    @15,BPAMDCB                                         0070 00184000
         STCM  @15,7,ACIODCBA(@10)                                 0070 00185000
*          /* SEE IF THE USERID IS AN '*'                            */ 00186000
*          IF USRID(1)='*'                                         0071 00187000
*            THEN                       /* USERID='*' MEANS 'ADD DATA-  00188000
*                                          LIST TO ALL USERIDS'.     */ 00189000
         L     @01,NODEPLAD(,COMMPTR)                              0071 00190000
         CLI   USRID(@01),C'*'                                     0071 00191000
         BNE   @RF00071                                            0071 00192000
*              /* OPEN THE UADS FOR BSAM INPUT AND SET THE READ      */ 00193000
*              /* SUBROUTINE PARAMETER LIST FOR DIRECTORY OPERATIONS */ 00194000
*              DO;                                                 0072 00195000
*                ACIODRCT=ADDR(DIRWAREA); /* POINT TO DIRECTORY WORK    00196000
*                                            AREA                    */ 00197000
         LA    @15,DIRWAREA                                        0073 00198000
         ST    @15,ACIODRCT(,@10)                                  0073 00199000
*                DIRDCB=BSAMDCB;        /* MOVE MODEL DCB INTO WKAREA*/ 00200000
         MVC   DIRDCB(88),BSAMDCB                                  0074 00201000
*                DIRMNSW='1'B;          /* INDICATE DIRECTORY WORK 0075 00202000
*                                          AREA GOTTEN IN STATUS SWS */ 00203000
         OI    DIRMNSW,B'01000000'                                 0075 00204000
*                /* OPEN THE DCB FOR INPUT                           */ 00205000
*                RFY (DCBREG) RSTD;     /* RESERVE REG. FOR DCB BASE */ 00206000
*                DCBREG=ADDR(DIRDCB);   /* SET ADDR OF BSAM DCB      */ 00207000
         LA    DCBREG,DIRDCB                                       0077 00208000
*                /* ISSUE OS/360 OPEN MACRO                          */ 00209000
*                GEN (OPEN  ((DCBREG),(INPUT)),MF=(E,DYNOPLST))    0078 00210000
*                  REFS(DCBREG,DYNOPLST);                          0078 00211000
         OPEN  ((DCBREG),(INPUT)),MF=(E,DYNOPLST)                       00212000
*                /* CHECK FOR SUCCESSFUL OPEN                        */ 00213000
*                IF DCBOFLGS(4)='0'B                               0079 00214000
*                  THEN                 /* OPEN FAILED               */ 00215000
         TM    DCBOFLGS,B'00010000'                                0079 00216000
         BNZ   @RF00079                                            0079 00217000
*                    DO;                                           0080 00218000
*                      /* SET PARAMETERS FOR PUTLINE MESSAGE         */ 00219000
*                      OUT1SCNT='01'X;  /* 1ST LEVEL MSG SEG COUNT =1*/ 00220000
         MVI   OUT1SCNT,X'01'                                      0081 00221000
*                      OUT1SEG1=ADDMSG(8); /* PTR TO UADS NO GOOD MSG*/ 00222000
         L     @10,ADDMSG+28(,MSGBASE)                             0082 00223000
         ST    @10,OUT1SEG1                                        0082 00224000
*                      OUT2SCNT='01'X;  /* 2ND LEVEL MSG SEG COUNT =1*/ 00225000
         MVI   OUT2SCNT,X'01'                                      0083 00226000
*                      OUT2SEG1=ADDMSG(9); /* 2ND LVL = 'CANNOT OPEN'*/ 00227000
         L     @10,ADDMSG+32(,MSGBASE)                             0084 00228000
         ST    @10,OUT2SEG1                                        0084 00229000
*                      GOTO ERRMSG;     /* GO PUT OUT MESSAGE & LEAVE*/ 00230000
         B     ERRMSG                                              0085 00231000
*                    END;                                          0086 00232000
*                RFY (DCBREG) UNRSTD;   /* RELEASE REG. FOR DCB BASE */ 00233000
@RF00079 DS    0H                                                  0088 00234000
*RDDIRECT:       /* CTL. PASSED HERE TO READ DIRECTORY BLOCK ONLY    */ 00235000
*                ACIOFLGS='00110100'B;  /* SET I/O SUBROUTINE FLAGS FOR 00236000
*                                          A) LOGICAL MEMBER I/O REQ'D  00237000
*                                          B) ACIOMPTR = MEMBERNAME PTR 00238000
*                                          C) ACIODRCT=PTR TO WORK AREA 00239000
*                                          D) BUFFER FOR ONE EXTRA BLK  00240000
*                                          E) READ DIRECTORY ONLY    */ 00241000
RDDIRECT L     @10,ACIOPTR(,COMMPTR)                               0088 00242000
         MVI   ACIOFLGS(@10),B'00110100'                           0088 00243000
*                CALL READ;             /* GO TO CALL IKJEFA51       */ 00244000
         BAL   @14,READ                                            0089 00245000
*                ACIOFL06='0'B;         /* TURN OFF 'DIRECTORY ONLY' */ 00246000
         L     @10,ACIOPTR(,COMMPTR)                               0090 00247000
         NI    ACIOFL06(@10),B'11111011'                           0090 00248000
*                ACIOMPTR=ADDR(DIRENTRX); /* POINT TO FIRST USERID   */ 00249000
         LA    @15,DIRENTRX                                        0091 00250000
         ST    @15,ACIOMPTR(,@10)                                  0091 00251000
*                BLDLNAME=DIRMNAME;     /* SAVE USERID IN CASE     0092 00252000
*                                          OF ERROR                  */ 00253000
         L     @10,BLDLPTR(,COMMPTR)                               0092 00254000
         MVC   BLDLNAME(8,@10),DIRMNAME(@15)                       0092 00255000
*              END;                                                0093 00256000
*            ELSE                       /* THE USERID WAS SPECIFIED  */ 00257000
*              DO;                                                 0094 00258000
         B     @RC00071                                            0094 00259000
@RF00071 DS    0H                                                  0095 00260000
*              RFY R0 RSTD;             /* RESTRICT REGISTER 0       */ 00261000
*              R0=BLDLPTR;              /* LOAD BLDL PARAMETER REG   */ 00262000
         L     R0,BLDLPTR(,COMMPTR)                                0096 00263000
*              /* DO A 'BLDL' ON THE UADS DIRECTORY TO FIND USERID   */ 00264000
*              GEN (BLDL  BPAMDCB,(R0))                            0097 00265000
*                REFS(BPAMDCB,R0);                                 0097 00266000
         BLDL  BPAMDCB,(R0)                                             00267000
*              RFY R0 UNRSTD;           /* RELEASE REGISTER 0        */ 00268000
*              RFY R15 RSTD;            /* RESTRICT RETURN CODE REG  */ 00269000
*              RETNCODE=R15;            /* SAVE RETURN CODE          */ 00270000
         LR    RETNCODE,R15                                        0100 00271000
*              RFY R15 UNRSTD;          /* RELEASE RETURN CODE REG   */ 00272000
*              /* MAKE CERTAIN THE USERID ALREADY EXISTS IN THE UADS */ 00273000
*              IF RETNCODE^=0                                      0102 00274000
*                THEN                   /* USERID NOT FOUND          */ 00275000
         SLR   @10,@10                                             0102 00276000
         CR    RETNCODE,@10                                        0102 00277000
         BE    @RF00102                                            0102 00278000
*                  /* ASCERTAIN EXACT CAUSE                          */ 00279000
*                  IF RETNCODE=4                                   0103 00280000
*                    THEN               /* MISSING USERID            */ 00281000
         LA    @07,4                                               0103 00282000
         CR    RETNCODE,@07                                        0103 00283000
         BNE   @RF00103                                            0103 00284000
*                      DO;                                         0104 00285000
*                      /* SET PARAMETERS FOR PUTLINE MESSAGE         */ 00286000
*                      OUT1LINK=0;      /* INDICATE NO 2ND LEVEL MSG */ 00287000
         ST    @10,OUT1LINK                                        0105 00288000
*                      OUT1SCNT='03'X;  /* 1ST LEVEL MSG SEG COUNT =3*/ 00289000
         MVI   OUT1SCNT,X'03'                                      0106 00290000
*                      OUT1SEG1=ADDMSG(17);/* ADD OF MISSING ITEM MSG*/ 00291000
         L     @10,ADDMSG+64(,MSGBASE)                             0107 00292000
         ST    @10,OUT1SEG1                                        0107 00293000
*                      OUT1SEG2=ADDMSG(20);/* ADDR OF 'USERID' PREFIX*/ 00294000
         L     @10,ADDMSG+76(,MSGBASE)                             0108 00295000
         ST    @10,OUT1SEG2                                        0108 00296000
*                      USRIDLN=USRLEN+4;/* USERID SEGMENT LENGTH     */ 00297000
         L     @10,NODEPLAD(,COMMPTR)                              0109 00298000
         SLR   @05,@05                                             0109 00299000
         IC    @05,USRLEN(,@10)                                    0109 00300000
         ALR   @07,@05                                             0109 00301000
         STH   @07,USRIDLN                                         0109 00302000
*                      USRIDOF=10;      /* OFFSET FOR TEXT INSERTION */ 00303000
         MVC   USRIDOF(2),@CH00258                                 0110 00304000
*                      USRIDI=USRID;    /* USERID FROM NODELIST TABLE*/ 00305000
         MVC   USRIDI(8),USRID(@10)                                0111 00306000
*                      OUT1SEG3=ADDR(USRIDSEG);/* USERID SEGMENT ADDR*/ 00307000
         LA    @10,USRIDSEG                                        0112 00308000
         ST    @10,OUT1SEG3                                        0112 00309000
*                      GOTO ERRMSG;     /* GO PUT OUT MESSAGE & LEAVE*/ 00310000
         B     ERRMSG                                              0113 00311000
*                      END;                                        0114 00312000
*                    ELSE               /* A PERMANENT I/O ERROR   0115 00313000
*                                          OCCURRED WHEN BLDL ATTEMPTED 00314000
*                                          TO SEARCH THE DIRECTORY.  */ 00315000
*                      DO;                                         0115 00316000
@RF00103 DS    0H                                                  0116 00317000
*                      /* SET PARAMETERS FOR PUTLINE MESSAGE         */ 00318000
*                      OUT1SCNT='01'X;  /* 1ST LEVEL MSG SEG COUNT =1*/ 00319000
         MVI   OUT1SCNT,X'01'                                      0116 00320000
*                      OUT1SEG1=ADDMSG(8);/* ADDR OF UADS NO GOOD MSG*/ 00321000
         L     @10,ADDMSG+28(,MSGBASE)                             0117 00322000
         ST    @10,OUT1SEG1                                        0117 00323000
*                      OUT2SCNT='01'X;  /* 2ND LEVEL MSG SEG COUNT =1*/ 00324000
         MVI   OUT2SCNT,X'01'                                      0118 00325000
*                      OUT2SEG1=ADDMSG(10);/* 2ND LVL = 'BLDL I/O ERR*/ 00326000
         L     @10,ADDMSG+36(,MSGBASE)                             0119 00327000
         ST    @10,OUT2SEG1                                        0119 00328000
*                      GOTO ERRMSG;     /* GO PUT OUT MESSAGE & LEAVE*/ 00329000
         B     ERRMSG                                              0120 00330000
*                      END;                                        0121 00331000
*                  ACIOFLGS='01010000'B;/* SET FLAGS TO INDICATE   0122 00332000
*                                          A) LOGICAL MEMBER I/O REQ'D  00333000
*                                          B) ACIOMPTR = BLDL ENTRY PTR 00334000
*                                          C) ACIODRCT NOT PERTINENT    00335000
*                                          D) BUFFR FOR 1 EXTRA BLOCK*/ 00336000
@RF00102 L     @10,ACIOPTR(,COMMPTR)                               0122 00337000
         MVI   ACIOFLGS(@10),B'01010000'                           0122 00338000
*                  ACIOMPTR=BLDLPTR;    /* PTR TO BLDL ENTRY         */ 00339000
         L     @15,BLDLPTR(,COMMPTR)                               0123 00340000
         ST    @15,ACIOMPTR(,@10)                                  0123 00341000
*              END;                                                0124 00342000
*USERLOOP: /* CTL. RETURNED HERE UPON COMPLETION OF THE PROCESSING   */ 00343000
*          /* FOR ONE USERID TO READ THE NEXT ONE                    */ 00344000
*          /* BUILD USERID SEGMENT FOR MESSAGES JUST IN CASE ...     */ 00345000
*          /* SCAN FOR & DELETE TRAILING BLANKS                      */ 00346000
*          USERLNTH=8;                  /* INIT USERID LENGTH TO MAX */ 00347000
@RC00071 DS    0H                                                  0125 00348000
USERLOOP MVI   USERLNTH,X'08'                                      0125 00349000
*          DO WHILE BLDLNAME(USERLNTH)=' ';/* LOOP TILL NON-BLANK    */ 00350000
         B     @DE00126                                            0126 00351000
@DL00126 DS    0H                                                  0127 00352000
*            USERLNTH=USERLNTH-1;       /* DECREMENT LENGTH OF SEG   */ 00353000
         SLR   @10,@10                                             0127 00354000
         IC    @10,USERLNTH                                        0127 00355000
         BCTR  @10,0                                               0127 00356000
         STC   @10,USERLNTH                                        0127 00357000
*          END;                                                    0128 00358000
@DE00126 SLR   @10,@10                                             0128 00359000
         IC    @10,USERLNTH                                        0128 00360000
         L     @15,BLDLPTR(,COMMPTR)                               0128 00361000
         ALR   @10,@15                                             0128 00362000
         CLI   BLDLNAME-1(@10),C' '                                0128 00363000
         BE    @DL00126                                            0128 00364000
*          USERLNTH=USERLNTH-1;         /* DECREMENT PAST INDEX      */ 00365000
         SLR   @10,@10                                             0129 00366000
         IC    @10,USERLNTH                                        0129 00367000
         BCTR  @10,0                                               0129 00368000
         STC   @10,USERLNTH                                        0129 00369000
*          USERNAME=BLDLNAME(1:USERLNTH);/* SAVE NAME FOR ENQUEUE    */ 00370000
         MVI   USERNAME+1,C' '                                     0130 00371000
         MVC   USERNAME+2(5),USERNAME+1                            0130 00372000
         LR    @14,@10                                             0130 00373000
         BCTR  @14,0                                               0130 00374000
         EX    @14,@SM00330                                        0130 00375000
*          USRIDI=USERNAME(1:USERLNTH); /* SAVE NAME FOR MESSAGE     */ 00376000
         MVI   USRIDI+1,C' '                                       0131 00377000
         MVC   USRIDI+2(6),USRIDI+1                                0131 00378000
         EX    @14,@SM00332                                        0131 00379000
*          USRIDLN=USERLNTH+4;          /* SET LENGTH OF MSG SEG     */ 00380000
         AH    @10,@CH00073                                        0132 00381000
         STH   @10,USRIDLN                                         0132 00382000
*          /*** INSERTION OFFSET IS SET WHEN MESSAGE IS BUILT      ***/ 00383000
*          /* FETCH A USER ENTRY FROM THE UADS                       */ 00384000
*          CALL READ;                   /* INVOKE READ PGM - IKJEFA51*/ 00385000
         BAL   @14,READ                                            0133 00386000
*          READMNSW='1'B;               /* INDICATE THAT AN INPUT BUFR  00387000
*                                          AND A BLDL CHAIN EXISTS 0134 00388000
*                                          IN THE STATUS SWITCHES    */ 00389000
         OI    READMNSW(COMMPTR),B'00000010'                       0134 00390000
*          HEDBPTR=ACIOBUFR;            /* ESTABLISH USER ENTRY    0135 00391000
*                                          ADDRESSABILITY            */ 00392000
         L     @10,ACIOPTR(,COMMPTR)                               0135 00393000
         SLR   HEDBPTR,HEDBPTR                                     0135 00394000
         ICM   HEDBPTR,7,ACIOBUFR(@10)                             0135 00395000
*          /* IF SIZE WAS SPECIFIED AND IT IS GREATER THAN MAXSIZE 0136 00396000
*             SET RSIZSW SO THAT IKJEFA13 WILL OVERRIDE THE SIZE   0136 00397000
*             VALUE WITH THE MAXSIZE VALUE.                          */ 00398000
*          IF SIZEH^='0'B               /* THEN, SEE IF THE 'SIZE' 0136 00399000
*                                          KEYWORD WAS SUPPLIED      */ 00400000
*            & UADSMAXC^=0              /* IS MAXIMUM SIZE SPECIFIED?*/ 00401000
*             & SIZEH>UADSMAXC          /* DOES SIZE EXCEED MAXSIZE? */ 00402000
*                THEN                   /* YES,                      */ 00403000
         SLR   @10,@10                                             0136 00404000
         ICM   @10,3,SIZEH(COMMPTR)                                0136 00405000
         LTR   @10,@10                                             0136 00406000
         BZ    @RF00136                                            0136 00407000
         SLR   @10,@10                                             0136 00408000
         ICM   @10,3,UADSMAXC(HEDBPTR)                             0136 00409000
         LTR   @10,@10                                             0136 00410000
         BZ    @RF00136                                            0136 00411000
         CLC   SIZEH(2,COMMPTR),UADSMAXC(HEDBPTR)                  0136 00412000
         BNH   @RF00136                                            0136 00413000
*                  RSIZSW='1'B;         /* SET 'EXCESSIVE SIZE' SWTCH*/ 00414000
         OI    RSIZSW(COMMPTR),B'00010000'                         0137 00415000
*          /**********************************************************/ 00416000
*          /* CONTROL PASSES HERE TO IKJEFA13 WHERE THE NODE         */ 00417000
*          /* SPECIFIED BY THE NODELIST IS LOCATED (FINDNODE ROUTINE)*/ 00418000
*          /* AND THE ITEM(S) IN THE DATA SUBFIELD ARE ADDED (ADDER).*/ 00419000
*          /* IF IKJEFA13 SUCCEEDS, CONTROL WILL BE RETURNED TO THIS */ 00420000
*          /* POINT.  IF A GETMAIN FAILS, CONTROL WILL BE RETURNED TO*/ 00421000
*          /* 'RDGETERR'.  IF 'FINDNODE' FAILS TO FIND THE NODE(S),  */ 00422000
*          /* OR 'ADDER' FINDS A DUPLICATE ITEM, CONTROL WILL RETURN */ 00423000
*          /* TO 'ADDERCLN'.                                         */ 00424000
*          /**********************************************************/ 00425000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 00426000
@RF00136 DS    0H                                                  0139 00427000
*          R1=COMMPTR;                  /* POINT TO COMMUNICATION ARE*/ 00428000
         LR    R1,COMMPTR                                          0139 00429000
*          CALL IKJEFA13;               /* GO DO THE WORK            */ 00430000
         L     @15,@CV00077                                        0140 00431000
         BALR  @14,@15                                             0140 00432000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 00433000
*          /**********************************************************/ 00434000
*          /* AT THIS POINT, THE USERID HAS BEEN COMPLETELY UPDATED  */ 00435000
*          /* IN THE MAIN STORAGE BUFFER.                            */ 00436000
*          /**********************************************************/ 00437000
*          /* CHECK FOR USER ATTENTION INTERRUPT BEFORE WRITE OPNS   */ 00438000
*          IF ATTENTN='1'B                                         0142 00439000
*            THEN                       /* USER WANTS ATTENTION      */ 00440000
         L     @10,ECBPTR(,COMMPTR)                                0142 00441000
         TM    ATTENTN(@10),B'01000000'                            0142 00442000
         BO    @RT00142                                            0142 00443000
*              GO TO CLEANUP1;          /* STOP -GO DIRECTLY TO CLNUP*/ 00444000
*          /* NOW, ENQ ON THE USERID BEFORE WRITING INTO THE UADS    */ 00445000
*          /* ISSUE OS/360 ENQ MACRO ON THE USERID AS A MINOR NAME   */ 00446000
*          GEN (ENQ   (,MINNAME),,MF=(E,DYNNQLST))                 0144 00447000
*            REFS(DYNNQLST,MAJNAME,MINNAME);                       0144 00448000
         ENQ   (,MINNAME),,MF=(E,DYNNQLST)                              00449000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00450000
*          ENQRCPTR=R15;                /* SAVE RETURN CODE PTR      */ 00451000
         LR    ENQRCPTR,R15                                        0146 00452000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00453000
*          /* CHECK RETURN CODE                                      */ 00454000
*          IF ENQRCPTR^=0                                          0148 00455000
*            THEN                       /* ENQ EXCEPTION             */ 00456000
         LTR   ENQRCPTR,ENQRCPTR                                   0148 00457000
         BZ    @RF00148                                            0148 00458000
*              DO;                                                 0149 00459000
*                /****************************************************/ 00460000
*                /* ACTION TAKEN HERE TO RELEASE THE READ ROUTINE'S  */ 00461000
*                /* BUFFER AND PUT OUT A MESSAGE INDICATING THAT THIS*/ 00462000
*                /* USERID IS IN USE.                                */ 00463000
*                /****************************************************/ 00464000
*                ACIOFL05='0'B;         /* MAKE CERTAIN THAT NO    0150 00465000
*                                          WRITING TAKES PLACE       */ 00466000
         L     @10,ACIOPTR(,COMMPTR)                               0150 00467000
         NI    ACIOFL05(@10),B'11110111'                           0150 00468000
*                CALL WRITE;            /* SCRATCH READ ROUTINE STG  */ 00469000
         BAL   @14,WRITE                                           0151 00470000
*                READMNSW='0'B;         /* INDICATE READ ROUTINE   0152 00471000
*                                          STORAGE HAS BEEN FREED    */ 00472000
         NI    READMNSW(COMMPTR),B'11111101'                       0152 00473000
*                /* ANALYZE RETURN CODE FURTHER                      */ 00474000
*                IF ENQRTCD=4                                      0153 00475000
*                  THEN                 /* USERID IS ENQUEUED        */ 00476000
         CLI   ENQRTCD+3(ENQRCPTR),4                               0153 00477000
         BNE   @RF00153                                            0153 00478000
*                    DO;                                           0154 00479000
*                    OUT1LINK=0;        /* INDICATE NO 2ND LEVEL MSG */ 00480000
         SLR   @10,@10                                             0155 00481000
         ST    @10,OUT1LINK                                        0155 00482000
*                    OUT1SCNT='02'X;    /* 1ST LEVEL MSG SEG COUNT =2*/ 00483000
         MVI   OUT1SCNT,X'02'                                      0156 00484000
*                    OUT1SEG1=ADDMSG(18);/* ADDR OF 'USER IN USE' MSG*/ 00485000
         L     @10,ADDMSG+68(,MSGBASE)                             0157 00486000
         ST    @10,OUT1SEG1                                        0157 00487000
*                    USRIDOF=35;        /* OFFSET FOR USERID INSERTN */ 00488000
         MVC   USRIDOF(2),@CH00266                                 0158 00489000
*                    OUT1SEG2=ADDR(USRIDSEG); /* 2ND SEGMENT = USERID*/ 00490000
         LA    @10,USRIDSEG                                        0159 00491000
         ST    @10,OUT1SEG2                                        0159 00492000
*                    CALL INFOMSG;      /* GO PUT OUT MSG            */ 00493000
         BAL   @14,INFOMSG                                         0160 00494000
*                    GOTO ADDERCLN;     /* GO TO CLEANUP & RETURN    */ 00495000
         B     ADDERCLN                                            0161 00496000
*                    END;                                          0162 00497000
*                  ELSE                 /* PROGRAM MALFUNCTION       */ 00498000
*                    DO;                                           0163 00499000
@RF00153 DS    0H                                                  0164 00500000
*                    RETNCODE=ENQRTCD;  /* GET ENQUEUE RETURN CODE   */ 00501000
         SLR   RETNCODE,RETNCODE                                   0164 00502000
         IC    RETNCODE,ENQRTCD+3(,ENQRCPTR)                       0164 00503000
*                    OUT2SEG2=ADDMSG(37); /* ADDR OF 'ENQ' PREFIX    */ 00504000
         L     @10,ADDMSG+144(,MSGBASE)                            0165 00505000
         ST    @10,OUT2SEG2                                        0165 00506000
*                    GOTO CMDSYSER;     /* GO PUT OUT MESSAGE & LEAVE*/ 00507000
         B     CMDSYSER                                            0166 00508000
*                    END;                                          0167 00509000
*              END;                                                0168 00510000
*          USRENQSW='1'B;               /* INDICATE THAT ENQ WAS DONE*/ 00511000
@RF00148 OI    USRENQSW,B'00010000'                                0169 00512000
*          /* NOW, SEE IF A NEW UADS MEMBER NEEDS TO BE WRITTEN      */ 00513000
*          IF XBLKUSED='1'B                                        0170 00514000
*            THEN                       /* EXTRA BLOCK USED -WRITE IT*/ 00515000
         TM    XBLKUSED(COMMPTR),B'00000001'                       0170 00516000
         BNO   @RF00170                                            0170 00517000
*              DO;                                                 0171 00518000
*              RFY (DCBREG) RSTD;       /* RESERVE REG. FOR DCB BASE */ 00519000
*                DCBREG=DCBPTR;         /* POINT TO 'OUTPUT' DCB     */ 00520000
         L     DCBREG,DCBPTR(,COMMPTR)                             0173 00521000
*                /* IS THE DCB FOR 'OUTPUT' OPEN ?                   */ 00522000
*                IF DCBOFLGS(4)='0'B                               0174 00523000
*                  THEN                 /* 'OUTPUT' DCB NOT YET OPEND*/ 00524000
         TM    DCBOFLGS,B'00010000'                                0174 00525000
         BNZ   @RF00174                                            0174 00526000
*                    DO;                                           0175 00527000
*                      /* ISSUE OS/360 OPEN MACRO                    */ 00528000
*                      GEN (OPEN  ((DCBREG),(OUTPUT)),MF=(E,DYNOPLST))  00529000
*                        REFS(DCBREG,DYNOPLST);                    0176 00530000
         OPEN  ((DCBREG),(OUTPUT)),MF=(E,DYNOPLST)                      00531000
*                      /* CHECK FOR SUCCESSFUL OPEN                  */ 00532000
*                      IF DCBOFLGS(4)='0'B                         0177 00533000
*                        THEN           /* OPEN FAILED               */ 00534000
         TM    DCBOFLGS,B'00010000'                                0177 00535000
         BNZ   @RF00177                                            0177 00536000
*                          DO;                                     0178 00537000
*                            /* SET PARAMETERS FOR PUTLINE MESSAGE   */ 00538000
*                            OUT1SCNT='01'X; /* 1ST LVL SEG COUNT = 1*/ 00539000
         MVI   OUT1SCNT,X'01'                                      0179 00540000
*                            OUT1SEG1=ADDMSG(8); /* UADS NO GOOD MSG */ 00541000
         L     @10,ADDMSG+28(,MSGBASE)                             0180 00542000
         ST    @10,OUT1SEG1                                        0180 00543000
*                            OUT2SCNT='01'X; /* 2ND LVL SEG COUNT = 1*/ 00544000
         MVI   OUT2SCNT,X'01'                                      0181 00545000
*                            OUT2SEG1=ADDMSG(9); /* 'CANNOT OPEN' MSG*/ 00546000
         L     @10,ADDMSG+32(,MSGBASE)                             0182 00547000
         ST    @10,OUT2SEG1                                        0182 00548000
*                            GOTO ERRMSG;/* GO PUT OUT MSG & LEAVE   */ 00549000
         B     ERRMSG                                              0183 00550000
*                          END;                                    0184 00551000
*                    END;                                          0185 00552000
@RF00177 DS    0H                                                  0186 00553000
*                /* PREPARE ALTERNATE PARAMETER LIST FOR WRITE ROUTNE*/ 00554000
*                HEDBPTR=ACIONMBR*UADSBLNG+HEDBPTR; /* RESET BLK BASE*/ 00555000
@RF00174 L     @10,ACIOPTR(,COMMPTR)                               0186 00556000
         SLR   @07,@07                                             0186 00557000
         IC    @07,ACIONMBR(,@10)                                  0186 00558000
         MH    @07,UADSBLNG(,HEDBPTR)                              0186 00559000
         ALR   HEDBPTR,@07                                         0186 00560000
*                ACIOALTL=ACIOPARM;     /* INITIALIZE ALTERNATE      */ 00561000
         MVC   ACIOALTL(24),ACIOPARM(@10)                          0187 00562000
*                ACIOPTRS=ACIOPTR;      /* SAVE ACIOPTR              */ 00563000
         LR    ACIOPTRS,@10                                        0188 00564000
*                ACIOPTR=ADDR(ACIOALTL);/* USE ALTERNATE PARMLIST    */ 00565000
         LA    @10,ACIOALTL                                        0189 00566000
         ST    @10,ACIOPTR(,COMMPTR)                               0189 00567000
*                ACIOFLGS='10001000'B;  /* SET FLAGS TO INDICATE   0190 00568000
*                                          A) SINGLE PHYSICAL MEMBR I/O 00569000
*                                          B) WRITE OP'N REQUESTED   */ 00570000
         MVI   ACIOFLGS(@10),B'10001000'                           0190 00571000
*                ACIODCBA=DCBREG;       /* UADS 'OUTPUT' DCB ADDR    */ 00572000
         STCM  DCBREG,7,ACIODCBA(@10)                              0191 00573000
*                ACIOMPTR=ADDR(UADSUSER); /* USER NAME RIGHT FROM HDR*/ 00574000
         LA    @07,UADSUSER(,HEDBPTR)                              0192 00575000
         ST    @07,ACIOMPTR(,@10)                                  0192 00576000
*                ACIOLINK=0;            /* NO BLDL CHAIN ELEMENT     */ 00577000
         SLR   @07,@07                                             0193 00578000
         ST    @07,ACIOLINK(,@10)                                  0193 00579000
*                ACIONMBR=1;            /* NO. OF MEMBERS = ONE      */ 00580000
         MVI   ACIONMBR(@10),X'01'                                 0194 00581000
*                ACIOBUFR=HEDBPTR;      /* ADDRESS OF OUTPUT BLOCK   */ 00582000
         STCM  HEDBPTR,7,ACIOBUFR(@10)                             0195 00583000
*                CALL WRITE;            /* INVOKE WRITE PGM -IKJEFA52*/ 00584000
         BAL   @14,WRITE                                           0196 00585000
*                ACIOPTR=ACIOPTRS;      /* RESTORE PTR TO I/O PARM   */ 00586000
         ST    ACIOPTRS,ACIOPTR(,COMMPTR)                          0197 00587000
*                /* NEXT, STOW NEW MEMBER NAME IN UADS DIRECTORY     */ 00588000
*                STOWNAME=UADSUSER;     /* MEMBERNAME =(USERID+INDEX)*/ 00589000
         MVC   STOWNAME(8),UADSUSER(HEDBPTR)                       0198 00590000
*                /* ISSUE OS/360 STOW MACRO ('A'=ADD NEW ENTRY)      */ 00591000
*                GEN (STOW  (DCBREG),STOWLIST,A)                   0199 00592000
*                  REFS(DCBREG,STOWLIST);                          0199 00593000
         STOW  (DCBREG),STOWLIST,A                                      00594000
*                RFY R15 RSTD;          /* RESTRICT REGISTER 15      */ 00595000
*                RETNCODE=R15;          /* SAVE RETURN CODE          */ 00596000
         LR    RETNCODE,R15                                        0201 00597000
*                RFY R15 UNRSTD;        /* RELEASE REGISTER 15       */ 00598000
*                /* CHECK RETURN CODE                                */ 00599000
*                IF RETNCODE^=0                                    0203 00600000
*                  THEN                 /* STOW FAILED               */ 00601000
         LTR   RETNCODE,RETNCODE                                   0203 00602000
         BNZ   @RT00203                                            0203 00603000
*                    GO TO STOWERR;     /* GO ANALYZE FAILURE        */ 00604000
*                STOWSW='1'B;           /* SIGNAL THAT STOW WAS DONE */ 00605000
         OI    STOWSW,B'00100000'                                  0205 00606000
*                DCBREG=ADDR(BPAMDCB);  /* RESET PTR TO UPDATE DCB   */ 00607000
         LA    DCBREG,BPAMDCB                                      0206 00608000
*                RFY DCBREG UNRSTD;     /* GIVE REGS. BACK TO COMPILR*/ 00609000
*              END;                     /* NEW MEMBER/BLOCK CREATED  */ 00610000
*          /* NOW, WRITE THE OLD MEMBER/BLOCK(S) BACK TO THE UADS    */ 00611000
*          ACIOFL05='1'B;               /* REQUEST WRITE OPERATION   */ 00612000
@RF00170 L     @10,ACIOPTR(,COMMPTR)                               0209 00613000
         OI    ACIOFL05(@10),B'00001000'                           0209 00614000
*          CALL WRITE;                  /* INVOKE WRITE PGM -IKJEFA52*/ 00615000
         BAL   @14,WRITE                                           0210 00616000
*          READMNSW='0'B;               /* INDICATE READ ROUTINE   0211 00617000
*                                          STORAGE HAS BEEN FREED    */ 00618000
         NI    READMNSW(COMMPTR),B'11111101'                       0211 00619000
*          ADDEDSW='1'B;                /* INDICATE THAT ADD HAS   0212 00620000
*                                          ACCOMPLISHED SOMETHING    */ 00621000
         OI    ADDEDSW,B'10000000'                                 0212 00622000
*          /* DEQ THE USERID                                         */ 00623000
*          GEN (DEQ   (,MINNAME),,MF=(E,DYNDQLST))                 0213 00624000
*            REFS(DYNDQLST,MAJNAME,MINNAME);                       0213 00625000
         DEQ   (,MINNAME),,MF=(E,DYNDQLST)                              00626000
*          USRENQSW='0'B;               /* INDICATE THAT USERID DEQ'D*/ 00627000
         NI    USRENQSW,B'11101111'                                0214 00628000
*          /* CHECK FOR 'EXCESSIVE SIZE' CONDITION                   */ 00629000
*          IF RSIZSW='1'B                                          0215 00630000
*            THEN                       /* 'SIZE' EXCEEDED 'MAXSIZE' */ 00631000
         TM    RSIZSW(COMMPTR),B'00010000'                         0215 00632000
         BNO   @RF00215                                            0215 00633000
*              DO;                                                 0216 00634000
*                RSIZSW='0'B;           /* RESET 'EXCESSIVE SIZE' SW */ 00635000
         NI    RSIZSW(COMMPTR),B'11101111'                         0217 00636000
*                /* PUT OUT A MESSAGE TO THE TERMINAL USER AT THIS   */ 00637000
*                /* TIME INFORMING HIM THAT SIZE EXCEEDED MAXSIZE    */ 00638000
*                OUT1LINK=0;            /* INDICATE NO 2ND LEVEL MSG */ 00639000
         SLR   @10,@10                                             0218 00640000
         ST    @10,OUT1LINK                                        0218 00641000
*                OUT1SCNT='03'X;        /* 1ST LEVEL MSG SEG COUNT =3*/ 00642000
         MVI   OUT1SCNT,X'03'                                      0219 00643000
*                OUT1SEG1=ADDMSG(27);   /* ADDR OF 'SIZE > MAXSIZE'  */ 00644000
         L     @10,ADDMSG+104(,MSGBASE)                            0220 00645000
         ST    @10,OUT1SEG1                                        0220 00646000
*                INSTLN=SIZEL+4;        /* LENGTH OF SIZE SEGMENT    */ 00647000
         LH    @10,SIZEL(,COMMPTR)                                 0221 00648000
         LA    @15,4                                               0221 00649000
         ALR   @15,@10                                             0221 00650000
         STH   @15,INSTLN                                          0221 00651000
*                INSTOF=22;             /* OFFSET FOR TEXT INSERTION */ 00652000
         MVC   INSTOF(2),@CH00272                                  0222 00653000
*                INSTTX(1:SIZEL)=SIZED; /* TEXT (SIZE)               */ 00654000
         BCTR  @10,0                                               0223 00655000
         EX    @10,@SM00342                                        0223 00656000
*                OUT1SEG2=ADDR(INSTSEG);/* ADDR OF 'SIZE' SEGMENT    */ 00657000
         LA    @10,INSTSEG                                         0224 00658000
         ST    @10,OUT1SEG2                                        0224 00659000
*                USRIDOF=55;            /* OFFSET FOR USERID INSERTN */ 00660000
         MVC   USRIDOF(2),@CH00273                                 0225 00661000
*                OUT1SEG3=ADDR(USRIDSEG); /* ADDR OF USERID SEGMENT  */ 00662000
         LA    @10,USRIDSEG                                        0226 00663000
         ST    @10,OUT1SEG3                                        0226 00664000
*                CALL INFOMSG;          /* GO PUT OUT MSG            */ 00665000
         BAL   @14,INFOMSG                                         0227 00666000
*              END;                                                0228 00667000
*ADDERCLN: /**********************************************************/ 00668000
*          /* CTL. PASSED OR DROPPED HERE TO CHECK FOR MORE USERS    */ 00669000
*          /* CTL. IS RETURNED HERE FROM IKJEFA13 IF THE NODE(S)     */ 00670000
*          /* SPECIFIED IN THE NODELIST WAS(WERE) NOT FOUND OR IF THE*/ 00671000
*          /* FIRST LEVEL IN THE DATA SUBFIELD ALREADY EXISTED UNDER */ 00672000
*          /* THE SPECIFIED NODE.                                    */ 00673000
*          /**********************************************************/ 00674000
*          /* ADD PROCESSING IS NOW COMPLETE FOR THIS USERID         */ 00675000
*          /* SHOULD WE LOOK FOR MORE ?                              */ 00676000
*          IF USRID(1)='*'                                         0229 00677000
*            THEN                       /* MORE USERS MAY BE IN UADS */ 00678000
@RF00215 DS    0H                                                  0229 00679000
ADDERCLN L     @10,NODEPLAD(,COMMPTR)                              0229 00680000
         CLI   USRID(@10),C'*'                                     0229 00681000
         BNE   @RF00229                                            0229 00682000
*              DO;                                                 0230 00683000
*USERLEND:     /* CTL. PASSED OR DROPPED HERE TO SAVE NEXT USERID    */ 00684000
*              /* AND, IF NECESSARY, RESTORE THE I/O PARAMETER LIST  */ 00685000
*              /* FIRST, SEE IF RESTORATION IS NEEDED                */ 00686000
*              IF ACIOFL04='0'B                                    0231 00687000
*                THEN                   /* A READ RETRY WAS DONE     */ 00688000
USERLEND L     @10,ACIOPTR(,COMMPTR)                               0231 00689000
         TM    ACIOFL04(@10),B'00010000'                           0231 00690000
         BNZ   @RF00231                                            0231 00691000
*                  DO;                                             0232 00692000
*                  ACIOMPTR=ACIOSAVE;   /* RESET TO NEXT USERID      */ 00693000
         L     @15,ACIOSAVE                                        0233 00694000
         ST    @15,ACIOMPTR(,@10)                                  0233 00695000
*                  ACIOFLGS=ACIOSAFL;   /* RESTORE FLAGS             */ 00696000
         MVC   ACIOFLGS(1,@10),ACIOSAFL                            0234 00697000
*                  END;                                            0235 00698000
*              XBLKUSED='0'B;           /* REINITIALIZE TO 'NOT USED'*/ 00699000
@RF00231 NI    XBLKUSED(COMMPTR),B'11111110'                       0236 00700000
*              BLDLNAME=DIRMNAME;       /* SAVE NEW USERID IN CASE 0237 00701000
*                                          OF ERROR                  */ 00702000
         L     @10,BLDLPTR(,COMMPTR)                               0237 00703000
         L     @01,ACIOPTR(,COMMPTR)                               0237 00704000
         L     @15,ACIOMPTR(,@01)                                  0237 00705000
         MVC   BLDLNAME(8,@10),DIRMNAME(@15)                       0237 00706000
*              /* WAS A NEW MEMBERNAME STOWED IN THE DIRECTORY ?     */ 00707000
*              IF STOWSW='1'B                                      0238 00708000
*                THEN                 /* CURRENT DIRECTORY BLOCK IS     00709000
*                                          OBSOLETE - MUST UPDATE IT */ 00710000
         TM    STOWSW,B'00100000'                                  0238 00711000
         BNO   @RF00238                                            0238 00712000
*                  /* NEXT USERID MAY HAVE BEEN RELOCATED (BY STOW)  */ 00713000
*                  /* IN THE NEXT DIRECTORY BLOCK.  ALL THREE OF     */ 00714000
*                  /* THE FOLLOWING CONDITIONS MUST BE MET FOR THIS  */ 00715000
*                  /* TO HAPPEN.                                     */ 00716000
*                  IF ACIOMPTR+LENGTH(DIRENTRY)+                   0239 00717000
*                   (DIRC&'00011111'B)*2>=                         0239 00718000
*                   ADDR(DIRBLOCK)+DIRBLEXT&                       0239 00719000
*                   LENGTH(DIRBLOCK)-DIRBLEXT<                     0239 00720000
*                   LENGTH(STOWLIST)&                              0239 00721000
*                   STOWNAME<BLDLNAME                              0239 00722000
*                    THEN               /* NEXT USERID IS NOW IN BEGIN- 00723000
*                                          NING OF NEXT DIRECTORY BLK*/ 00724000
         LA    @14,14                                              0239 00725000
         LR    @09,@15                                             0239 00726000
         ALR   @09,@14                                             0239 00727000
         LA    @08,31                                              0239 00728000
         SLR   @07,@07                                             0239 00729000
         IC    @07,DIRC(,@15)                                      0239 00730000
         NR    @08,@07                                             0239 00731000
         ALR   @08,@08                                             0239 00732000
         ALR   @09,@08                                             0239 00733000
         LH    @08,DIRBLEXT                                        0239 00734000
         LA    @15,DIRBLOCK                                        0239 00735000
         ALR   @15,@08                                             0239 00736000
         CR    @09,@15                                             0239 00737000
         BL    @RF00239                                            0239 00738000
         LCR   @08,@08                                             0239 00739000
         AH    @08,@CH00226                                        0239 00740000
         CR    @08,@14                                             0239 00741000
         BNL   @RF00239                                            0239 00742000
         CLC   STOWNAME(8),BLDLNAME(@10)                           0239 00743000
         BNL   @RF00239                                            0239 00744000
*                      DO;                                         0240 00745000
*                      STOWSW='0'B;     /* RESET STOW SWITCH         */ 00746000
         NI    STOWSW,B'11011111'                                  0241 00747000
*                      GO TO RDDIRECT;  /* READ NEXT DIRECTORY BLOCK    00748000
*                                             AND CONTINUE OPERATIONS*/ 00749000
         B     RDDIRECT                                            0242 00750000
*                      END;                                        0243 00751000
*                    ELSE               /* NEED TO REREAD CURRENT BLK*/ 00752000
*                      DO;                                         0244 00753000
@RF00239 DS    0H                                                  0245 00754000
*                      /* ISSUE BACKSPACE MACRO TO REPOSITION        */ 00755000
*                      GEN (BSP   DIRDCB)                          0245 00756000
*                        REFS(DIRDCB);                             0245 00757000
         BSP   DIRDCB                                                   00758000
*                      RFY R15 RSTD;    /* RESTRICT RETURN CODE REG. */ 00759000
*                      RETNCODE=R15;    /* SAVE RETURN CODE          */ 00760000
         LR    RETNCODE,R15                                        0247 00761000
*                      RFY R15 UNRSTD;  /* RELEASE RETURN CODE REG.  */ 00762000
*                      /* CHECK RETURN CODE                          */ 00763000
*                      IF RETNCODE^=0                              0249 00764000
*                        THEN           /* BSP FAILED                */ 00765000
         LTR   RETNCODE,RETNCODE                                   0249 00766000
         BZ    @RF00249                                            0249 00767000
*                          DO;                                     0250 00768000
*                          /* SET PARAMETERS FOR PUTLINE MSG         */ 00769000
*                          OUT1SCNT='01'X; /* 1ST LVL = 1 SEGMT      */ 00770000
         MVI   OUT1SCNT,X'01'                                      0251 00771000
*                          OUT1SEG1=ADDMSG(8); /* UADS NO GOOD       */ 00772000
         L     @10,ADDMSG+28(,MSGBASE)                             0252 00773000
         ST    @10,OUT1SEG1                                        0252 00774000
*                          OUT2SCNT='02'X;/* 2ND LEVEL MSG SEG COUNT */ 00775000
         MVI   OUT2SCNT,X'02'                                      0253 00776000
*                          OUT2SEG1=ADDMSG(14); /* BACKSP ERROR      */ 00777000
         L     @10,ADDMSG+52(,MSGBASE)                             0254 00778000
         ST    @10,OUT2SEG1                                        0254 00779000
*                          CVD (RETNCODE,DECRTCD);/* CONVERT THE CODE   00780000
*                                                    TO  DECIMAL     */ 00781000
         CVD   RETNCODE,DECRTCD                                    0255 00782000
*                          UNPK (BCDRTNCD,DECRTCD(7:8));           0256 00783000
         UNPK  BCDRTNCD(2),DECRTCD+6(2)                            0256 00784000
*                          ERRRTNLN=6;  /* SET SEGMENT LENGTH        */ 00785000
         MVC   ERRRTNLN(2),@CH00047                                0257 00786000
*                          ERRRTNOF=30; /* SET SEGMENT OFFSET        */ 00787000
         MVC   ERRRTNOF(2),@CH00281                                0258 00788000
*                          OUT2SEG2=ADDR(ERRRTNSG);/* 3RD SEG ADR    */ 00789000
         LA    @10,ERRRTNSG                                        0259 00790000
         ST    @10,OUT2SEG2                                        0259 00791000
*                          SIGN=SIGN|'F0'X;/* RESET THE SIGN FIELD   */ 00792000
         OI    SIGN,X'F0'                                          0260 00793000
*                          GOTO ERRMSG; /* GO PUT OUT MSG & LEAVE    */ 00794000
         B     ERRMSG                                              0261 00795000
*                          END;                                    0262 00796000
*                      ACIOFL06='1'B;   /* PREPARE FOR READ DIRECTORY   00797000
*                                            BLOCK ONLY              */ 00798000
@RF00249 L     @10,ACIOPTR(,COMMPTR)                               0263 00799000
         OI    ACIOFL06(@10),B'00000100'                           0263 00800000
*                      CALL READ;       /* INVOKE READ SUBROUTINE    */ 00801000
         BAL   @14,READ                                            0264 00802000
*                      ACIOFL06='0'B;   /* TURN OFF 'DIRECTORY ONLY  */ 00803000
         L     @10,ACIOPTR(,COMMPTR)                               0265 00804000
         NI    ACIOFL06(@10),B'11111011'                           0265 00805000
*                      /* DOES MEMBER NAME PTR NEED TO BE BUMPED     */ 00806000
*                      IF STOWNAME<BLDLNAME                        0266 00807000
*                        THEN           /* YES - NEXT USERID WAS BMPD*/ 00808000
         L     @01,BLDLPTR(,COMMPTR)                               0266 00809000
         CLC   STOWNAME(8),BLDLNAME(@01)                           0266 00810000
         BNL   @RF00266                                            0266 00811000
*                          /* STEP PTR BY LENGTH OF NEW ENTRY        */ 00812000
*                          ACIOMPTR=ACIOMPTR+LENGTH(DIRENTRY);     0267 00813000
         LA    @15,14                                              0267 00814000
         AL    @15,ACIOMPTR(,@10)                                  0267 00815000
         ST    @15,ACIOMPTR(,@10)                                  0267 00816000
*                      STOWSW='0'B;     /* RESET STOW SWITCH         */ 00817000
@RF00266 NI    STOWSW,B'11011111'                                  0268 00818000
*                      END;                                        0269 00819000
*              GO TO USERLOOP;          /* LOOP TO PROCESS NEXT USER */ 00820000
         B     USERLOOP                                            0270 00821000
*              END;                                                0271 00822000
*FINDTEST: /**********************************************************/ 00823000
*          /* CTL. PASSED OR DROPPED HERE TO SEE IF                  */ 00824000
*          /* THE ADD PROCESSOR FOUND ANY NODES TO AUGMENT.          */ 00825000
*          /**********************************************************/ 00826000
*          IF NONODESW='0'B & FINDEXSW='1'B                        0272 00827000
*            THEN                       /* NEVER FOUND ANY NODES AND    00828000
*                                          FINDNODE ROUTINE HAS BEEN    00829000
*                                          EXECUTED                  */ 00830000
@RF00229 DS    0H                                                  0272 00831000
FINDTEST TM    FINDEXSW(COMMPTR),B'00000100'                       0272 00832000
         BNO   @RF00272                                            0272 00833000
         TM    NONODESW(COMMPTR),B'00001000'                       0272 00834000
         BNZ   @RF00272                                            0272 00835000
*              DO;                                                 0273 00836000
*                /* SET PARAMETERS FOR PUTLINE MESSAGE               */ 00837000
*                OUT1LINK=0;            /* INDICATE NO 2ND LEVEL MSG */ 00838000
         SLR   @10,@10                                             0274 00839000
         ST    @10,OUT1LINK                                        0274 00840000
*                OUT1SCNT='03'X;        /* 1ST LEVEL MSG SEG COUNT =3*/ 00841000
         MVI   OUT1SCNT,X'03'                                      0275 00842000
*                OUT1SEG1=ADDMSG(17);   /* ADDR OF MISSING ITEM MSG  */ 00843000
         L     @10,ADDMSG+64(,MSGBASE)                             0276 00844000
         ST    @10,OUT1SEG1                                        0276 00845000
*                INSTOF=10;             /* OFFSET FOR TEXT INSERTION */ 00846000
         MVC   INSTOF(2),@CH00258                                  0277 00847000
*                OUT1SEG3=ADDR(INSTSEG);/* POINT TO INSERT SEGMENT   */ 00848000
         LA    @10,INSTSEG                                         0278 00849000
         ST    @10,OUT1SEG3                                        0278 00850000
*                /* CHECK FOR ACCOUNT NUMBER                         */ 00851000
*                IF NUMOFLVL=3                                     0279 00852000
*                  THEN                 /* LAST NODE ITEM WAS ACCT NO*/ 00853000
         CLI   NUMOFLVL(COMMPTR),3                                 0279 00854000
         BNE   @RF00279                                            0279 00855000
*                    /* MAKE SURE IT'S NOT AN '*'                    */ 00856000
*                    IF ACCTNO(1:2)^='* '                          0280 00857000
*                      THEN             /* ACCT NUMBER NOT AN '*'    */ 00858000
         L     @10,NODEPLAD(,COMMPTR)                              0280 00859000
         CLC   ACCTNO(2,@10),@CC00285                              0280 00860000
         BE    @RF00280                                            0280 00861000
*                        DO;            /* BUILD ACCT-MISSING MSG    */ 00862000
*                        OUT1SEG2=ADDMSG(22);/* 'ACCOUNT NUMBER' PRE */ 00863000
         L     @15,ADDMSG+84(,MSGBASE)                             0282 00864000
         ST    @15,OUT1SEG2                                        0282 00865000
*                        INSTLN=ACTLEN+4;/* LENGTH OF ACCT NO SEG    */ 00866000
         LA    @05,4                                               0283 00867000
         SLR   @15,@15                                             0283 00868000
         IC    @15,ACTLEN(,@10)                                    0283 00869000
         ALR   @05,@15                                             0283 00870000
         STH   @05,INSTLN                                          0283 00871000
*                        INSTTX=ACCTNO; /* ACCTNO FROM NODELIST TABLE*/ 00872000
         MVC   INSTTX(40),ACCTNO(@10)                              0284 00873000
*                        GOTO ERRMSG;   /* GO PUT OUT MESSAGE & LEAVE*/ 00874000
         B     ERRMSG                                              0285 00875000
*                        END;                                      0286 00876000
*                /* MAKE SURE PASSWORD IS NOT AN '*'                 */ 00877000
*                IF PASSWD(1)^='*'                                 0287 00878000
*                  THEN                 /* ENTRIES SEARCHED          */ 00879000
@RF00280 DS    0H                                                  0287 00880000
@RF00279 L     @10,NODEPLAD(,COMMPTR)                              0287 00881000
         CLI   PASSWD(@10),C'*'                                    0287 00882000
         BE    @RF00287                                            0287 00883000
*                    DO;                                           0288 00884000
*                    OUT1SEG2=ADDMSG(21); /* 'PASSWORD' PREFIX       */ 00885000
         L     @15,ADDMSG+80(,MSGBASE)                             0289 00886000
         ST    @15,OUT1SEG2                                        0289 00887000
*                    INSTLN=12;         /* LENGTH OF PASSWORD SEGMENT*/ 00888000
         MVC   INSTLN(2),@CH00055                                  0290 00889000
*                    INSTTX(1:8)=PASSWD;/* PASSWD FROM NODELIST TABLE*/ 00890000
         MVC   INSTTX(8),PASSWD(@10)                               0291 00891000
*                    GOTO ERRMSG;       /* GO PUT OUT MESSAGE & LEAVE*/ 00892000
         B     ERRMSG                                              0292 00893000
*                    END;                                          0293 00894000
*              END;                                                0294 00895000
@RF00287 DS    0H                                                  0295 00896000
*          /* SEE IF ANY USEFUL WORK HAS BEEN ACCOMPLISHED           */ 00897000
*          IF ADDEDSW='1'B                                         0295 00898000
*            THEN                       /* YES - SOMETHING USEFUL DON*/ 00899000
@RF00272 TM    ADDEDSW,B'10000000'                                 0295 00900000
         BNO   @RF00295                                            0295 00901000
*              DO;                                                 0296 00902000
*                /* PUT OUT MESSAGE SAYING ADD HAS COMPLETED         */ 00903000
*                OUT1LINK=0;            /* INDICATE NO 2ND LEVEL MSG */ 00904000
         SLR   @10,@10                                             0297 00905000
         ST    @10,OUT1LINK                                        0297 00906000
*                OUT1SCNT='01'X;        /* 1ST LEVEL MSG SEG COUNT =1*/ 00907000
         MVI   OUT1SCNT,X'01'                                      0298 00908000
*                OUT1SEG1=ADDMSG(1);    /* PTR TO 'ADDED' MESSAGE    */ 00909000
         L     @10,ADDMSG(,MSGBASE)                                0299 00910000
         ST    @10,OUT1SEG1                                        0299 00911000
*                CALL INFOMSG;          /* GO PUT OUT MSG            */ 00912000
         BAL   @14,INFOMSG                                         0300 00913000
*              END;                                                0301 00914000
*            ELSE                       /* NO WORK ACCOMPLISHED      */ 00915000
*              ERRFLG = '1'B;           /* TURN ON ERROR FLAG        */ 00916000
         B     @RC00295                                            0302 00917000
@RF00295 OI    ERRFLG(COMMPTR),B'01000000'                         0302 00918000
*          GOTO CLEANUP1;               /* GO TO CLEANUP & RETURN    */ 00919000
         B     CLEANUP1                                            0303 00920000
*CMDSYSER: /**********************************************************/ 00921000
*          /* CONTROL PASSED HERE ON AN UNUSUAL RETURN CODE FROM A   */ 00922000
*          /* SERVICE ROUTINE                                        */ 00923000
*          /**********************************************************/ 00924000
*          OUT1SCNT='01'X;              /* 1ST LEVEL MSG SEG COUNT =1*/ 00925000
CMDSYSER MVI   OUT1SCNT,X'01'                                      0304 00926000
*          OUT1SEG1=ADDMSG(5);          /* ADDR OF 'CMD SYSTM ERROR' */ 00927000
         L     @10,ADDMSG+16(,MSGBASE)                             0305 00928000
         ST    @10,OUT1SEG1                                        0305 00929000
*          OUT2SCNT='03'X;              /* 2ND LEVEL MSG SEG COUNT =3*/ 00930000
         MVI   OUT2SCNT,X'03'                                      0306 00931000
*          OUT2SEG1=ADDMSG(6);          /* BASE SEGMT= 'ERROR CODE'  */ 00932000
         L     @10,ADDMSG+20(,MSGBASE)                             0307 00933000
         ST    @10,OUT2SEG1                                        0307 00934000
*          CVD (RETNCODE,DECRTCD);      /* CONVERT THE RETURN CODE TO   00935000
*                                          DECIMAL                   */ 00936000
         CVD   RETNCODE,DECRTCD                                    0308 00937000
*          UNPK (BCDRTNCD,DECRTCD(7:8));/*UNPACK IT INTO THE MESSAGE */ 00938000
         UNPK  BCDRTNCD(2),DECRTCD+6(2)                            0309 00939000
*          ERRRTNLN=6;                  /* SET SEGMENT LENGTH        */ 00940000
         MVC   ERRRTNLN(2),@CH00047                                0310 00941000
*          ERRRTNOF=22;                 /* SET SEGMENT OFFSET        */ 00942000
         MVC   ERRRTNOF(2),@CH00272                                0311 00943000
*          OUT2SEG3=ADDR(ERRRTNSG);     /* 3RD SEG ADR TO OUT LN DESC*/ 00944000
         LA    @10,ERRRTNSG                                        0312 00945000
         ST    @10,OUT2SEG3                                        0312 00946000
*          SIGN=SIGN|'F0'X;             /* RESET THE SIGN FIELD      */ 00947000
         OI    SIGN,X'F0'                                          0313 00948000
*          /* GO TO ERROR TERMINATION                                */ 00949000
*ERRMSG:   /**********************************************************/ 00950000
*          /* ERRMSG: CONTROL PASSED HERE TO OUTPUT AN ERROR MESSAGE */ 00951000
*          /* AND SET THE ERROR FLAG                                 */ 00952000
*          /**********************************************************/ 00953000
*          ERRFLG='1'B;                 /* TURN ON ERROR FLAG        */ 00954000
ERRMSG   OI    ERRFLG(COMMPTR),B'01000000'                         0314 00955000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 00956000
*          R1=IOPLPTR;                  /* PARAMETER LIST ADDR TO R1 */ 00957000
         L     @10,IOPLPTR(,COMMPTR)                               0316 00958000
         LR    R1,@10                                              0316 00959000
*          PTPBOPUT=ADDR(OUTLNDS);      /* POINT TO LINE DESCRIPTOR  */ 00960000
         L     @10,PTPBPTR(,@10)                                   0317 00961000
         LA    @07,OUTLNDS                                         0317 00962000
         ST    @07,PTPBOPUT(,@10)                                  0317 00963000
*          /* ISSUE OS/360 PUTLINE MACRO TO WRITE THE MESSAGE        */ 00964000
*          GEN (PUTLINE ,MF=(E,(1)))                               0318 00965000
*            REFS(R1);                                             0318 00966000
         PUTLINE ,MF=(E,(1))                                            00967000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 00968000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00969000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 00970000
         LR    RETNCODE,R15                                        0321 00971000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00972000
*          IF RETNCODE^=0               /* WAS PUTLINE SUCCESSFUL    */ 00973000
*            THEN                       /* NO,                       */ 00974000
         LTR   RETNCODE,RETNCODE                                   0323 00975000
         BZ    @RF00323                                            0323 00976000
*              PUTERR='1'B;             /* TURN ON PUTLINE ERROR FLAG*/ 00977000
         OI    PUTERR(COMMPTR),B'00100000'                         0324 00978000
*CLEANUP1: /**********************************************************/ 00979000
*          /* CTL. PASSED OR DROPPED HERE TO CLEAN UP AND EXIT       */ 00980000
*          /* IS THERE A READ SUBROUTINE BUFFER TO BE RELEASED ?     */ 00981000
*          /**********************************************************/ 00982000
*          IF READMNSW='1'B                                        0325 00983000
*            THEN                       /* YES - USE WRITE TO FREE IT*/ 00984000
@RF00323 DS    0H                                                  0325 00985000
CLEANUP1 TM    READMNSW(COMMPTR),B'00000010'                       0325 00986000
         BNO   @RF00325                                            0325 00987000
*              DO;                                                 0326 00988000
*                ACIOFL05='0'B;         /* MAKE CERTAIN THAT NO    0327 00989000
*                                          WRITING TAKES PLACE       */ 00990000
         L     @10,ACIOPTR(,COMMPTR)                               0327 00991000
         NI    ACIOFL05(@10),B'11110111'                           0327 00992000
*                CALL WRITE;            /* SCRATCH READ ROUTINE STG  */ 00993000
         BAL   @14,WRITE                                           0328 00994000
*                READMNSW='0'B;         /* RESET READ WKAREA GOTTEN  */ 00995000
         NI    READMNSW(COMMPTR),B'11111101'                       0329 00996000
*              END;                                                0330 00997000
*          RFY (DCBREG) RSTD;           /* RESERVE REG. FOR DCB BASE */ 00998000
@RF00325 DS    0H                                                  0332 00999000
*          DCBREG=ADDR(BPAMDCB);        /* POINT TO UPDAT MODE DCB   */ 01000000
         LA    DCBREG,BPAMDCB                                      0332 01001000
*          /* IS THE BPAM 'UPDAT' MODE DCB OPEN ?                    */ 01002000
*          IF DCBOFLGS(4)='1'B                                     0333 01003000
*            THEN                       /* YES - UPDAT DCB OPEN      */ 01004000
         TM    DCBOFLGS,B'00010000'                                0333 01005000
         BNO   @RF00333                                            0333 01006000
*              /* ISSUE OS/360 CLOSE MACRO TO CLOSE IT               */ 01007000
*              GEN (CLOSE ((DCBREG),REREAD),MF=(E,DYNOPLST))       0334 01008000
*                REFS(DCBREG,DYNOPLST);                            0334 01009000
         CLOSE ((DCBREG),REREAD),MF=(E,DYNOPLST)                        01010000
*          /* IS THERE A DIRECTORY WORK AREA TO BE CHECKED ?         */ 01011000
*          IF DIRMNSW='1'B                                         0335 01012000
*            THEN                       /* DIRECTORY WORK AREA EXISTS*/ 01013000
@RF00333 TM    DIRMNSW,B'01000000'                                 0335 01014000
         BNO   @RF00335                                            0335 01015000
*              DO;                                                 0336 01016000
*              DCBREG=ADDR(DIRDCB);     /* POINT TO DIRECTORY DCB    */ 01017000
         LA    DCBREG,DIRDCB                                       0337 01018000
*              /* IS THE BSAM (DIRECTORY) DCB OPEN ?                 */ 01019000
*              IF DCBOFLGS(4)='1'B                                 0338 01020000
*                THEN                   /* YES - BSAM DCB OPEN       */ 01021000
         TM    DCBOFLGS,B'00010000'                                0338 01022000
         BNO   @RF00338                                            0338 01023000
*                  /* ISSUE OS/360 CLOSE MACRO TO CLOSE IT           */ 01024000
*                  GEN (CLOSE ((DCBREG),REREAD),MF=(E,DYNOPLST))   0339 01025000
*                    REFS(DCBREG,DYNOPLST);                        0339 01026000
         CLOSE ((DCBREG),REREAD),MF=(E,DYNOPLST)                        01027000
*                RFY (DCBREG) UNRSTD;   /* GIVE REG. BACK TO COMPILER*/ 01028000
@RF00338 DS    0H                                                  0341 01029000
*              END;                                                0341 01030000
*          /* IS THE USERID ENQ'D ON ?                               */ 01031000
*          IF USRENQSW='1'B                                        0342 01032000
*            THEN                       /* YES - USERID ENQ'D ON     */ 01033000
@RF00335 TM    USRENQSW,B'00010000'                                0342 01034000
         BNO   @RF00342                                            0342 01035000
*              DO;                                                 0343 01036000
*              GEN (DEQ   (,MINNAME),,MF=(E,DYNDQLST))             0344 01037000
*                REFS(MAJNAME,MINNAME);                            0344 01038000
         DEQ   (,MINNAME),,MF=(E,DYNDQLST)                              01039000
*              USRENQSW='0'B;           /* SIGNAL THAT USERID IS DEQD*/ 01040000
         NI    USRENQSW,B'11101111'                                0345 01041000
*              END;                                                0346 01042000
*           RETURN;                     /* RETURN TO IKJEFA10        */ 01043000
@EL00001 L     @13,4(,@13)                                         0347 01044000
@EF00001 L     @00,@SIZDATD                                        0347 01045000
         LR    @01,@11                                             0347 01046000
         FREEMAIN R,LV=(0),A=(1)                                        01047000
@ER00001 LM    @14,@12,12(@13)                                     0347 01048000
         BR    @14                                                 0347 01049000
*STOWERR:  /**********************************************************/ 01050000
*          /* CONTROL PASSED HERE ON A NON-ZERO RETURN CODE FROM STOW*/ 01051000
*          /**********************************************************/ 01052000
*          OUT1SCNT='01'X;              /* 1ST LEVEL MSG SEG COUNT =1*/ 01053000
STOWERR  MVI   OUT1SCNT,X'01'                                      0348 01054000
*          OUT1SEG1=ADDMSG(8);          /* ADDR OF UADS NO GOOD MSG  */ 01055000
         L     @10,ADDMSG+28(,MSGBASE)                             0349 01056000
         ST    @10,OUT1SEG1                                        0349 01057000
*          OUT2SCNT='01'X;              /* ASSUME 1 SEGMT TO 2ND LVL */ 01058000
         MVI   OUT2SCNT,X'01'                                      0350 01059000
*          /* IS THE DIRECTORY FULL ?                                */ 01060000
*          IF RETNCODE=12                                          0351 01061000
*            THEN                       /* YES - DIRECTORY FULL      */ 01062000
         CH    RETNCODE,@CH00055                                   0351 01063000
         BNE   @RF00351                                            0351 01064000
*              OUT2SEG1=ADDMSG(13);     /* ADDR OF 'NO DIRECTRY SPACE*/ 01065000
         L     @10,ADDMSG+48(,MSGBASE)                             0352 01066000
         ST    @10,OUT2SEG1                                        0352 01067000
*            ELSE                                                  0353 01068000
*              IF RETNCODE=4                                       0353 01069000
*                THEN                   /* RETURN IS DUPLICATE USERID * 01070000
         B     @RC00351                                            0353 01071000
@RF00351 CH    RETNCODE,@CH00073                                   0353 01072000
         BNE   @RF00353                                            0353 01073000
*                  DO;                                             0354 01074000
*                  OUT1SEG1=ADDMSG(5);  /* CHANGE 1ST LEVEL TO 'COMMAND 01075000
*                                          SYSTEM ERROR'             */ 01076000
         L     @10,ADDMSG+16(,MSGBASE)                             0355 01077000
         ST    @10,OUT1SEG1                                        0355 01078000
*                  OUT2SCNT='02'X;      /* 2ND LEVEL MSG SEG COUNT =2*/ 01079000
         MVI   OUT2SCNT,X'02'                                      0356 01080000
*                  OUT2SEG1=ADDMSG(7);  /* ADDR OF 'DUPLICATE USERID'*/ 01081000
         L     @10,ADDMSG+24(,MSGBASE)                             0357 01082000
         ST    @10,OUT2SEG1                                        0357 01083000
*                  USRIDLN=12;          /* SET LENGTH OF SEGMENT     */ 01084000
         MVC   USRIDLN(2),@CH00055                                 0358 01085000
*                  USRIDOF=27;          /* OFFSET FOR INSERTION      */ 01086000
         MVC   USRIDOF(2),@CH00271                                 0359 01087000
*                  USRIDI=STOWNAME;     /* GET MEMBER NAME           */ 01088000
         MVC   USRIDI(8),STOWNAME                                  0360 01089000
*                  OUT2SEG2=ADDR(USRIDSEG); /* USERID SEGMENT ADDR   */ 01090000
         LA    @10,USRIDSEG                                        0361 01091000
         ST    @10,OUT2SEG2                                        0361 01092000
*                  END;                                            0362 01093000
*          /* WAS THE RETURN CODE 'I/O ERROR' (16) OR GREATER ?      */ 01094000
*          IF RETNCODE>12                                          0363 01095000
*            THEN                       /* YES - STOW I/O ERROR      */ 01096000
@RF00353 DS    0H                                                  0363 01097000
@RC00351 CH    RETNCODE,@CH00055                                   0363 01098000
         BNH   @RF00363                                            0363 01099000
*                OUT2SEG1=ADDMSG(11);   /* ADDR OF 'STOW I/O ERROR'  */ 01100000
         L     @10,ADDMSG+40(,MSGBASE)                             0364 01101000
         ST    @10,OUT2SEG1                                        0364 01102000
*          GOTO ERRMSG;                 /* GO PUT OUT MESSAGE & LEAVE*/ 01103000
         B     ERRMSG                                              0365 01104000
*READERR:  /**********************************************************/ 01105000
*          /* CONTROL PASSED HERE ON A READ ROUTINE ERROR            */ 01106000
*          /**********************************************************/ 01107000
*          /* CHECK FOR DIRECTORY 'END-OF-FILE' INDICATION           */ 01108000
*          IF READRTCD=24                                          0366 01109000
*            THEN                       /* 'END-OF-FILE' IN DIRECTORY*/ 01110000
READERR  L     @10,READRTCD                                        0366 01111000
         CH    @10,@CH00062                                        0366 01112000
         BE    @RT00366                                            0366 01113000
*              GO TO FINDTEST;          /* GO CK FOR USEFUL WORK DONE*/ 01114000
*          /* WAS IT A BLDL I/O ERROR ?                              */ 01115000
*          IF READRTCD=8                                           0368 01116000
*            THEN                       /* BLDL I/O ERROR            */ 01117000
         CH    @10,@CH00040                                        0368 01118000
         BNE   @RF00368                                            0368 01119000
*              DO;                                                 0369 01120000
*                /* SET PARAMETERS FOR PUTLINE MESSAGE               */ 01121000
*                OUT1SCNT='01'X;        /* 1ST LEVEL MSG SEG COUNT =1*/ 01122000
         MVI   OUT1SCNT,X'01'                                      0370 01123000
*                OUT1SEG1=ADDMSG(8);    /* ADDR OF UADS NO GOOD MSG  */ 01124000
         L     @10,ADDMSG+28(,MSGBASE)                             0371 01125000
         ST    @10,OUT1SEG1                                        0371 01126000
*                OUT2SCNT='01'X;        /* 2ND LEVEL MSG SEG COUNT =1*/ 01127000
         MVI   OUT2SCNT,X'01'                                      0372 01128000
*                OUT2SEG1=ADDMSG(10);   /* 2ND LEVEL = 'BLDL I/O ERR'*/ 01129000
         L     @10,ADDMSG+36(,MSGBASE)                             0373 01130000
         ST    @10,OUT2SEG1                                        0373 01131000
*                GOTO ERRMSG;           /* GO PUT OUT MESSAGE & LEAVE*/ 01132000
         B     ERRMSG                                              0374 01133000
*              END;                                                0375 01134000
*          /* WAS IT AN 'INSUFFICIENT SPACE' PROBLEM ?               */ 01135000
*          IF READRTCD=12                                          0376 01136000
*            THEN                       /* READ HAD A GETMAIN FAILURE*/ 01137000
@RF00368 CLC   READRTCD(4),@CF00055                                0376 01138000
         BNE   @RF00376                                            0376 01139000
*              /* CTL. PASSED HERE TO ATTEMPT RECOVERY FROM GETMAIN  */ 01140000
*              /* FAILURES IN AUGMENT MODE BY REDUCING READ REQUEST  */ 01141000
*RDGETERR:     DO;                                                 0377 01142000
RDGETERR DS    0H                                                  0378 01143000
*              /* SET PARAMETERS FOR PUTLINE MESSAGE                 */ 01144000
*              OUT1LINK=0;              /* INDICATE NO 2ND LEVEL MSG */ 01145000
         SLR   @10,@10                                             0378 01146000
         ST    @10,OUT1LINK                                        0378 01147000
*              OUT1SEG1=ADDMSG(2);      /* PTR TO 'NO SPACE' MSG     */ 01148000
         L     @15,ADDMSG+4(,MSGBASE)                              0379 01149000
         ST    @15,OUT1SEG1                                        0379 01150000
*              IF ACIOLINK=0            /* DID BLDL WORK?            */ 01151000
*                THEN                   /* NO,                       */ 01152000
         L     @01,ACIOPTR(,COMMPTR)                               0380 01153000
         C     @10,ACIOLINK(,@01)                                  0380 01154000
         BNE   @RF00380                                            0380 01155000
*                  DO;                                             0381 01156000
*                  OUT1SCNT='02'X;      /* 1ST LEVEL MSG SEG COUNT=2 */ 01157000
         MVI   OUT1SCNT,X'02'                                      0382 01158000
*                  OUT1SEG2=ADDMSG(4);  /* 2ND SEGMT='FOR USERID     */ 01159000
         L     @10,ADDMSG+12(,MSGBASE)                             0383 01160000
         ST    @10,OUT1SEG2                                        0383 01161000
*                  GOTO ERRMSG;         /* GO PUT OUT MESSAGE & LEAVE*/ 01162000
         B     ERRMSG                                              0384 01163000
*                  END;                                            0385 01164000
*              OUT1SCNT='03'X;          /* 1ST LEVEL MSG SEG COUNT=3 */ 01165000
@RF00380 MVI   OUT1SCNT,X'03'                                      0386 01166000
*              OUT1SEG2=ADDMSG(4);      /* 2ND SEGMT='FOR USERID     */ 01167000
         L     @10,ADDMSG+12(,MSGBASE)                             0387 01168000
         ST    @10,OUT1SEG2                                        0387 01169000
*              USRIDOF=37;              /* OFFSET FOR USERID INSERTN */ 01170000
         MVC   USRIDOF(2),@CH00267                                 0388 01171000
*              OUT1SEG3=ADDR(USRIDSEG); /* 3RD SEG = USERID          */ 01172000
         LA    @10,USRIDSEG                                        0389 01173000
         ST    @10,OUT1SEG3                                        0389 01174000
*              IF USRID(1)^='*'         /* WAS USERID SPECIFIED?     */ 01175000
*                THEN                   /* YES - USERID IS SPECIFIC  */ 01176000
         L     @10,NODEPLAD(,COMMPTR)                              0390 01177000
         CLI   USRID(@10),C'*'                                     0390 01178000
         BE    @RF00390                                            0390 01179000
*                  IF ACIOFL04='0'B     /* WAS EXTRA BLOCK REQUESTED?*/ 01180000
*                    THEN               /* NO - REQUEST ALREADY    0391 01181000
*                                          MINIMIZED                 */ 01182000
         L     @10,ACIOPTR(,COMMPTR)                               0391 01183000
         TM    ACIOFL04(@10),B'00010000'                           0391 01184000
         BZ    @RT00391                                            0391 01185000
*                      GOTO ERRMSG;     /* GO PUT OUT MESSAGE & LEAVE*/ 01186000
*                    ELSE               /* YES - GETMAIN REQUEST CAN    01187000
*                                          BE REDUCED                */ 01188000
*                      DO;                                         0393 01189000
*                      ACIOFL04='0'B;   /* TURN OFF EXTRA BLK REQ FLG*/ 01190000
         NI    ACIOFL04(@10),B'11101111'                           0394 01191000
*                      GO TO USERLOOP;  /* LOOP TO RETRY READ        */ 01192000
         B     USERLOOP                                            0395 01193000
*                      END;                                        0396 01194000
*                ELSE                   /* USERID = '*'              */ 01195000
*                  IF ACIOFL04='0'B     /* WAS EXTRA BLOCK REQUESTED?*/ 01196000
*                    THEN               /* NO - REQUEST MINIMIZED    */ 01197000
@RF00390 L     @10,ACIOPTR(,COMMPTR)                               0397 01198000
         TM    ACIOFL04(@10),B'00010000'                           0397 01199000
         BNZ   @RF00397                                            0397 01200000
*                      DO;                                         0398 01201000
*                      CALL INFOMSG;    /* GO PUT OUT MSG            */ 01202000
         BAL   @14,INFOMSG                                         0399 01203000
*                      GOTO USERLEND;   /* GO TO SCAN NEXT ITEM      */ 01204000
         B     USERLEND                                            0400 01205000
*                      END;                                        0401 01206000
*                    ELSE               /* EXTRA BLOCK REQUESTED - 0402 01207000
*                                          GETMAIN REQ CAN BE REDUCED*/ 01208000
*                      DO;                                         0402 01209000
@RF00397 DS    0H                                                  0403 01210000
*                      ACIOSAVE=ACIOMPTR;   /* SAVE MARKER TO NEXT 0403 01211000
*                                              USERID                */ 01212000
         L     @10,ACIOPTR(,COMMPTR)                               0403 01213000
         L     @15,ACIOMPTR(,@10)                                  0403 01214000
         ST    @15,ACIOSAVE                                        0403 01215000
*                      ACIOSAFL=ACIOFLGS;   /* ALSO SAVE FLAGS       */ 01216000
         MVC   ACIOSAFL(1),ACIOFLGS(@10)                           0404 01217000
*                      ACIOMPTR=ADDR(BLDLNAME); /* POINT TO SAVED  0405 01218000
*                                                    CURRENT USERID  */ 01219000
         L     @01,BLDLPTR(,COMMPTR)                               0405 01220000
         LA    @15,BLDLNAME(,@01)                                  0405 01221000
         ST    @15,ACIOMPTR(,@10)                                  0405 01222000
*                      ACIOFLGS='00'X;   /* SET SUBR FLAGS FOR:    0406 01223000
*                                           A) LOGICAL MEMBER I/O  0406 01224000
*                                           B) 2ND WORD=MEMBERNAME PTR  01225000
*                                           C) 3RD WORD NOT USED   0406 01226000
*                                           D) NO EXTRA BLOCK        */ 01227000
         MVI   ACIOFLGS(@10),X'00'                                 0406 01228000
*                      GO TO USERLOOP;  /* BRANCH TO TOP TO RETRY    */ 01229000
         B     USERLOOP                                            0407 01230000
*                      END;                                        0408 01231000
*              END;                                                0409 01232000
*          ERRFLG='1'B;                 /* TURN ON ERROR FLAG        */ 01233000
@RF00376 OI    ERRFLG(COMMPTR),B'01000000'                         0410 01234000
*          /* MESSAGE ALREADY PUT OUT FOR I/O ERROR BY READ ROUTINE? */ 01235000
*          IF READRTCD=20                                          0411 01236000
*            THEN                       /* YES,                      */ 01237000
         L     @10,READRTCD                                        0411 01238000
         CH    @10,@CH00257                                        0411 01239000
         BE    @RT00411                                            0411 01240000
*              GOTO CLEANUP1;           /* GO CLEAN UP AND EXIT      */ 01241000
*          /* MUST BE ERROR CODE 28 OR INVALID CODE                  */ 01242000
*          /* SET PARAMETERS FOR PUTLINE MESSAGE                     */ 01243000
*          RETNCODE=READRTCD;           /* GET READ RETURN CODE      */ 01244000
         LR    RETNCODE,@10                                        0413 01245000
*          OUT2SEG2=ADDMSG(25);         /* ADDR OF 'READ' PREFIX     */ 01246000
         L     @10,ADDMSG+96(,MSGBASE)                             0414 01247000
         ST    @10,OUT2SEG2                                        0414 01248000
*          GOTO CMDSYSER;               /* GO PUT OUT MESSAGE & LEAVE*/ 01249000
         B     CMDSYSER                                            0415 01250000
*INFOMSG:  /**********************************************************/ 01251000
*          /* CTL. PASSED HERE TO OUTPUT AN INFORMATIONAL MESSAGE    */ 01252000
*          /**********************************************************/ 01253000
*          PROC;                                                   0416 01254000
INFOMSG  STM   @14,@12,@SA00002                                    0416 01255000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 01256000
*          R1=IOPLPTR;                  /* PARAMETER LIST ADDR TO R1 */ 01257000
         L     @10,IOPLPTR(,COMMPTR)                               0418 01258000
         LR    R1,@10                                              0418 01259000
*          PTPBOPUT=ADDR(OUTLNDS);      /* POINT TO LINE DESCRIPTOR  */ 01260000
         L     @10,PTPBPTR(,@10)                                   0419 01261000
         LA    @07,OUTLNDS                                         0419 01262000
         ST    @07,PTPBOPUT(,@10)                                  0419 01263000
*          /* ISSUE OS/360 PUTLINE MACRO TO WRITE THE MESSAGE        */ 01264000
*          GEN (PUTLINE ,MF=(E,(1)))                               0420 01265000
*            REFS(R1);                                             0420 01266000
         PUTLINE ,MF=(E,(1))                                            01267000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 01268000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 01269000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 01270000
         LR    RETNCODE,R15                                        0423 01271000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 01272000
*          /* CHECK RETURN CODE                                      */ 01273000
*          IF RETNCODE^=0                                          0425 01274000
*            THEN                       /* PUTLINE EXCEPTION         */ 01275000
         LTR   RETNCODE,RETNCODE                                   0425 01276000
         BZ    @RF00425                                            0425 01277000
*               DO;                                                0426 01278000
*                 ERRFLG='1'B;          /* TURN ON ERROR FLAG        */ 01279000
*                 PUTERR='1'B;          /* TURN ON PUTLINE ERROR FLAG*/ 01280000
         OI    ERRFLG(COMMPTR),B'01100000'                         0428 01281000
*                 RETURN TO CLEANUP1;   /* GO TO TERMINATION         */ 01282000
         LA    @14,CLEANUP1                                        0429 01283000
         LM    @15,@12,@SA00002+4                                  0429 01284000
         BR    @14                                                 0429 01285000
*               END;                                               0430 01286000
*          OUT1LINK=ADDR(OUTLD2);       /* RE-INITIALIZE LINKAGE TO     01287000
*                                          ASSUME 2 MESSAGE LEVELS   */ 01288000
@RF00425 LA    @10,OUTLD2                                          0431 01289000
         ST    @10,OUT1LINK                                        0431 01290000
*          END INFOMSG;                                            0432 01291000
@EL00002 DS    0H                                                  0432 01292000
@EF00002 DS    0H                                                  0432 01293000
@ER00002 LM    @14,@12,@SA00002                                    0432 01294000
         BR    @14                                                 0432 01295000
*READ:     /**********************************************************/ 01296000
*          /* CTL. PASSED HERE TO CALL THE ACCOUNT/READ ROUTINE      */ 01297000
*          /**********************************************************/ 01298000
*          PROC;                                                   0433 01299000
READ     STM   @14,@12,@SA00003                                    0433 01300000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 01301000
*          R1=ACIOPTR;                  /* PARAMETER LIST ADDR TO R1 */ 01302000
         L     R1,ACIOPTR(,COMMPTR)                                0435 01303000
*          CALL IKJEFA51;               /* INVOKE READ PGM - IKJEFA51*/ 01304000
         L     @15,@CV00078                                        0436 01305000
         BALR  @14,@15                                             0436 01306000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 01307000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG. */ 01308000
*          IF R15^=0                    /* CHECK RETURN CODE         */ 01309000
*            THEN                       /* READ I/O ERROR            */ 01310000
         LTR   R15,R15                                             0439 01311000
         BZ    @RF00439                                            0439 01312000
*              DO;                                                 0440 01313000
*              READRTCD=R15;            /* SAVE RETURN CODE          */ 01314000
         ST    R15,READRTCD                                        0441 01315000
*              RETURN TO READERR;       /* GO TO HANDLE AND EXIT     */ 01316000
         LA    @14,READERR                                         0442 01317000
         LM    @15,@12,@SA00003+4                                  0442 01318000
         BR    @14                                                 0442 01319000
*              END;                                                0443 01320000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG.  */ 01321000
*          END READ;                                               0445 01322000
@EL00003 DS    0H                                                  0445 01323000
@EF00003 DS    0H                                                  0445 01324000
@ER00003 LM    @14,@12,@SA00003                                    0445 01325000
         BR    @14                                                 0445 01326000
*WRITE:    /**********************************************************/ 01327000
*          /* CTL. PASSED HERE TO CALL THE ACCOUNT/WRITE ROUTINE     */ 01328000
*          /**********************************************************/ 01329000
*          PROC;                                                   0446 01330000
WRITE    STM   @14,@12,@SA00004                                    0446 01331000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 01332000
*          R1=ACIOPTR;                  /* PARAMETER BLK ADDR TO R1  */ 01333000
         L     R1,ACIOPTR(,COMMPTR)                                0448 01334000
*          CALL IKJEFA52;               /* INVOKE WRITE PGM -IKJEFA52*/ 01335000
         L     @15,@CV00079                                        0449 01336000
         BALR  @14,@15                                             0449 01337000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 01338000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 01339000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 01340000
         LR    RETNCODE,R15                                        0452 01341000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 01342000
*          /* CHECK RETURN CODE                                      */ 01343000
*          IF RETNCODE^=0                                          0454 01344000
*            THEN                       /* WRITE ROUTINE FAILED      */ 01345000
         LTR   RETNCODE,RETNCODE                                   0454 01346000
         BZ    @RF00454                                            0454 01347000
*               DO;                                                0455 01348000
*                 ERRFLG='1'B;          /* TURN ON ERROR FLAG        */ 01349000
         OI    ERRFLG(COMMPTR),B'01000000'                         0456 01350000
*                 RETURN TO CLEANUP1;   /* GO TO TERMINATION         */ 01351000
         LA    @14,CLEANUP1                                        0457 01352000
         LM    @15,@12,@SA00004+4                                  0457 01353000
         BR    @14                                                 0457 01354000
*               END;                                               0458 01355000
*          END WRITE;                                              0459 01356000
@EL00004 DS    0H                                                  0459 01357000
@EF00004 DS    0H                                                  0459 01358000
@ER00004 LM    @14,@12,@SA00004                                    0459 01359000
         BR    @14                                                 0459 01360000
*          END IKJEFA12                                            0460 01361000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01362000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 01363000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        * 01364000
*/*%INCLUDE SYSLIB  (IKJPTPB )                                        * 01365000
*;                                                                 0460 01366000
@DATA    DS    0H                                                       01367000
@CH00073 DC    H'4'                                                     01368000
@CH00047 DC    H'6'                                                     01369000
@CH00040 DC    H'8'                                                     01370000
@CH00258 DC    H'10'                                                    01371000
@CH00257 DC    H'20'                                                    01372000
@CH00272 DC    H'22'                                                    01373000
@CH00062 DC    H'24'                                                    01374000
@CH00247 DC    H'25'                                                    01375000
@CH00271 DC    H'27'                                                    01376000
@CH00281 DC    H'30'                                                    01377000
@CH00266 DC    H'35'                                                    01378000
@CH00267 DC    H'37'                                                    01379000
@CH00273 DC    H'55'                                                    01380000
@CH00226 DC    H'256'                                                   01381000
@SM00322 MVC   DYNLFORM(0),INLINLFM                                     01382000
@SC00324 CLC   DATAITEM(0,ARGPTR),DATAITEM(CURRPTR)                     01383000
@SM00326 MVC   INSTTX(0),DATAITEM(CURRPTR)                              01384000
@SM00330 MVC   USERNAME(0),BLDLNAME(@15)                                01385000
@SM00332 MVC   USRIDI(0),USERNAME                                       01386000
@SM00342 MVC   INSTTX(0),SIZED(COMMPTR)                                 01387000
@DATD    DSECT                                                          01388000
         DS    0F                                                       01389000
@SA00001 DS    18F                                                      01390000
@SA00002 DS    15F                                                      01391000
@SA00004 DS    0F                                                       01392000
@SA00003 DS    0F                                                       01393000
         DS    15F                                                      01394000
IKJEFA12 CSECT                                                          01395000
         DS    0F                                                       01396000
@CF00055 DC    F'12'                                                    01397000
@CH00055 EQU   @CF00055+2                                               01398000
@DATD    DSECT                                                          01399000
         DS    0D                                                       01400000
ACIOSAVE DS    A                                                        01401000
OUTLNDS  DS    CL40                                                     01402000
         ORG   OUTLNDS                                                  01403000
@NM00010 DS    CL20                                                     01404000
         ORG   @NM00010                                                 01405000
OUT1LINK DS    AL4                                                      01406000
@NM00011 DS    CL3                                                      01407000
OUT1SCNT DS    CL1                                                      01408000
OUT1SEG1 DS    AL4                                                      01409000
OUT1SEG2 DS    AL4                                                      01410000
OUT1SEG3 DS    AL4                                                      01411000
         ORG   OUTLNDS+20                                               01412000
OUTLD2   DS    CL20                                                     01413000
         ORG   OUTLD2                                                   01414000
@NM00012 DS    AL4                                                      01415000
@NM00013 DS    CL3                                                      01416000
OUT2SCNT DS    CL1                                                      01417000
OUT2SEG1 DS    AL4                                                      01418000
OUT2SEG2 DS    AL4                                                      01419000
OUT2SEG3 DS    AL4                                                      01420000
         ORG   OUTLNDS+40                                               01421000
         DS    CL4                                                      01422000
DECRTCD  DS    CL8                                                      01423000
ERRRTNSG DS    CL6                                                      01424000
         ORG   ERRRTNSG                                                 01425000
ERRRTNLN DS    FL2                                                      01426000
ERRRTNOF DS    FL2                                                      01427000
BCDRTNCD DS    CL2                                                      01428000
         ORG   BCDRTNCD                                                 01429000
@NM00014 DS    CL1                                                      01430000
SIGN     DS    BL1                                                      01431000
         ORG   ERRRTNSG+6                                               01432000
USRIDSEG DS    CL12                                                     01433000
         ORG   USRIDSEG                                                 01434000
USRIDLN  DS    FL2                                                      01435000
USRIDOF  DS    FL2                                                      01436000
USRIDI   DS    CL8                                                      01437000
         ORG   USRIDSEG+12                                              01438000
INSTSEG  DS    CL44                                                     01439000
         ORG   INSTSEG                                                  01440000
INSTLN   DS    FL2                                                      01441000
INSTOF   DS    FL2                                                      01442000
INSTTX   DS    CL40                                                     01443000
         ORG   INSTSEG+44                                               01444000
ACIOSAFL DS    BL1                                                      01445000
         DS    CL1                                                      01446000
ACIOALTL DS    CL24                                                     01447000
DIRWAREA DS    CL344                                                    01448000
         ORG   DIRWAREA                                                 01449000
DIRDCB   DS    CL88                                                     01450000
DIRBLOCK DS    CL256                                                    01451000
         ORG   DIRBLOCK                                                 01452000
DIRBLEXT DS    FL2                                                      01453000
DIRENTRX DS    CL254                                                    01454000
         ORG   DIRWAREA+344                                             01455000
STOWLIST DS    CL14                                                     01456000
         ORG   STOWLIST                                                 01457000
STOWNAME DS    CL8                                                      01458000
@NM00027 DS    CL3                                                      01459000
STOWC    DS    CL1                                                      01460000
@NM00028 DS    CL2                                                      01461000
         ORG   STOWLIST+14                                              01462000
         DS    CL2                                                      01463000
@NM00029 DS    CL4                                                      01464000
         ORG   @NM00029                                                 01465000
READRTCD DS    FL4                                                      01466000
         ORG   @NM00029+4                                               01467000
SWITCHES DS    CL1                                                      01468000
         ORG   SWITCHES                                                 01469000
ADDEDSW  DS    BL1                                                      01470000
DIRMNSW  EQU   SWITCHES+0                                               01471000
STOWSW   EQU   SWITCHES+0                                               01472000
USRENQSW EQU   SWITCHES+0                                               01473000
         ORG   SWITCHES+1                                               01474000
MINNAME  DS    CL8                                                      01475000
         ORG   MINNAME                                                  01476000
USERLNTH DS    FL1                                                      01477000
USERNAME DS    CL7                                                      01478000
         ORG   MINNAME+8                                                01479000
IKJEFA12 CSECT                                                          01480000
         DS    0F                                                       01481000
@SIZDATD DC    AL1(1)                                                   01482000
         DC    AL3(@ENDDATD-@DATD)                                      01483000
@CV00077 DC    V(IKJEFA13)                                              01484000
@CV00078 DC    V(IKJEFA51)                                              01485000
@CV00079 DC    V(IKJEFA52)                                              01486000
@CV00118 DC    V(MSGTABLE)                                              01487000
         DS    0D                                                       01488000
LNDAPDE  DC    AL4(12)                                                  01489000
@CC00285 DC    C'* '                                                    01490000
MAJNAME  DC    CL8'SYSIKJUA'                                            01491000
@DATD    DSECT                                                          01492000
IKJEFA12 CSECT                                                          01493000
INLINLFM DS    0F                                                       01494000
         DCB   DSORG=PO,DDNAME=SYSUADS,MACRF=(R,W),OPTCD=W,NCP=10       01495000
         DEQ   (MAJNAME,,,SYSTEM),RET=HAVE,MF=L                         01496000
         ENQ   (MAJNAME,,E,,SYSTEM),RET=USE,MF=L                        01497000
         OPEN  (,),MF=L                    DCB & OPTION SET BY E FORM   01498000
INLINLNG DC    A(*-INLINLFM)               LENGTH OF L-FORM MACROS      01499000
BSAMDCB  DCB   DSORG=PS,DDNAME=SYSUADS,MACRF=(R),BLKSIZE=256,RECFM=F    01500000
         DCBD  DSORG=PO,DEVD=DA           DATA CONTROL BLOCK MAPPING    01501000
@DATD    DSECT                                                          01502000
DYNLFORM DS    0F                                                       01503000
BPAMDCB  DCB   DSORG=PO,DDNAME=SYSUADS,MACRF=(R,W),OPTCD=W,NCP=10       01504000
DYNDQLST DEQ  (,,,),RET=HAVE,MF=L         WILL BE INIT'D FROM INLINLFM  01505000
DYNNQLST ENQ  (,,,,),RET=USE,MF=L         WILL BE INIT'D FROM INLINLFM  01506000
DYNOPLST OPEN  (,),MF=L                   WILL BE INIT'D FROM INLINLFM  01507000
IKJEFA12 CSECT                                                          01508000
         DS   0H                                                        01509000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   01510000
@DATD    DSECT                                                          01511000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01512000
@ENDDATD EQU   *                                                        01513000
IKJEFA12 CSECT                                                          01514000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01515000
@01      EQU   01                                                       01516000
@02      EQU   02                                                       01517000
@03      EQU   03                                                       01518000
@04      EQU   04                                                       01519000
@05      EQU   05                                                       01520000
@06      EQU   06                                                       01521000
@07      EQU   07                                                       01522000
@08      EQU   08                                                       01523000
@09      EQU   09                                                       01524000
@10      EQU   10                                                       01525000
@11      EQU   11                                                       01526000
@12      EQU   12                                                       01527000
@13      EQU   13                                                       01528000
@14      EQU   14                                                       01529000
@15      EQU   15                                                       01530000
CURRPTR  EQU   @08                                                      01531000
CURPDPTR EQU   @02                                                      01532000
ARGPTR   EQU   @09                                                      01533000
ARGPDPTR EQU   @03                                                      01534000
PREPDPTR EQU   @07                                                      01535000
LEVLPTR  EQU   @06                                                      01536000
RETNCODE EQU   @06                                                      01537000
ENQRCPTR EQU   @02                                                      01538000
ACIOPTRS EQU   @03                                                      01539000
MSGBASE  EQU   @05                                                      01540000
COMMPTR  EQU   @04                                                      01541000
HEDBPTR  EQU   @06                                                      01542000
R0       EQU   @00                                                      01543000
R1       EQU   @01                                                      01544000
DCBREG   EQU   @02                                                      01545000
R15      EQU   @15                                                      01546000
         ENTRY ADDERCLN                                                 01547000
         ENTRY RDGETERR                                                 01548000
DHED     EQU   0                                                        01549000
UADSMHDR EQU   DHED                                                     01550000
UADSBLNG EQU   UADSMHDR                                                 01551000
UADSUSER EQU   UADSMHDR+4                                               01552000
UADSBN01 EQU   UADSMHDR+12                                              01553000
UADSMAXC EQU   UADSMHDR+14                                              01554000
UADSATTR EQU   DHED+16                                                  01555000
IOPL     EQU   0                                                        01556000
IOPLIOPB EQU   IOPL+12                                                  01557000
PTPB     EQU   0                                                        01558000
PTPBOPUT EQU   PTPB+4                                                   01559000
COMMON   EQU   0                                                        01560000
ACIOPTR  EQU   COMMON                                                   01561000
BLDLPTR  EQU   COMMON+4                                                 01562000
DATASUBP EQU   COMMON+8                                                 01563000
DCBPTR   EQU   COMMON+12                                                01564000
ECBPTR   EQU   COMMON+16                                                01565000
IOPLPTR  EQU   COMMON+20                                                01566000
NODEPLAD EQU   COMMON+24                                                01567000
SIZEH    EQU   COMMON+28                                                01568000
SIZEL    EQU   COMMON+30                                                01569000
SIZED    EQU   COMMON+32                                                01570000
NUMOFLVL EQU   COMMON+45                                                01571000
ERRFLG   EQU   COMMON+46                                                01572000
PUTERR   EQU   COMMON+46                                                01573000
RSIZSW   EQU   COMMON+46                                                01574000
NONODESW EQU   COMMON+46                                                01575000
FINDEXSW EQU   COMMON+46                                                01576000
READMNSW EQU   COMMON+46                                                01577000
XBLKUSED EQU   COMMON+46                                                01578000
ACCTECB  EQU   0                                                        01579000
ATTENTN  EQU   ACCTECB                                                  01580000
NLSTTAB  EQU   0                                                        01581000
USRLEN   EQU   NLSTTAB                                                  01582000
USRID    EQU   NLSTTAB+1                                                01583000
PASSWD   EQU   NLSTTAB+9                                                01584000
ACTLEN   EQU   NLSTTAB+17                                               01585000
ACCTNO   EQU   NLSTTAB+18                                               01586000
ADDMSG   EQU   0                                                        01587000
@NM00015 EQU   0                                                        01588000
BLDLNAME EQU   @NM00015+4                                               01589000
ACIOPARM EQU   0                                                        01590000
ACIOFLGS EQU   ACIOPARM                                                 01591000
ACIOFL04 EQU   ACIOFLGS                                                 01592000
ACIOFL05 EQU   ACIOFLGS                                                 01593000
ACIOFL06 EQU   ACIOFLGS                                                 01594000
ACIODCBA EQU   ACIOPARM+1                                               01595000
ACIOMPTR EQU   ACIOPARM+4                                               01596000
ACIODRCT EQU   ACIOPARM+8                                               01597000
ACIOLINK EQU   ACIOPARM+12                                              01598000
ACIONMBR EQU   ACIOPARM+16                                              01599000
ACIOBUFR EQU   ACIOPARM+17                                              01600000
@NM00023 EQU   ACIOPARM+20                                              01601000
DIRENTRY EQU   0                                                        01602000
DIRMNAME EQU   DIRENTRY                                                 01603000
DIRC     EQU   DIRENTRY+11                                              01604000
ENQRTCD  EQU   0                                                        01605000
DATAPDE  EQU   0                                                        01606000
DATAPTR  EQU   DATAPDE                                                  01607000
DATALNTH EQU   DATAPDE+4                                                01608000
DATACHN  EQU   DATAPDE+9                                                01609000
DATAITEM EQU   0                                                        01610000
PTPBPTR  EQU   IOPLIOPB                                                 01611000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01612000
@NM00031 EQU   DATAPDE+8                                                01613000
@NM00030 EQU   DATAPDE+6                                                01614000
@NM00026 EQU   DIRENTRY+12                                              01615000
@NM00025 EQU   DIRENTRY+8                                               01616000
@NM00024 EQU   @NM00023                                                 01617000
@NM00022 EQU   ACIOFLGS                                                 01618000
@NM00021 EQU   ACIOFLGS                                                 01619000
@NM00020 EQU   ACIOFLGS                                                 01620000
@NM00019 EQU   ACIOFLGS                                                 01621000
@NM00018 EQU   ACIOFLGS                                                 01622000
@NM00017 EQU   @NM00015+2                                               01623000
@NM00016 EQU   @NM00015                                                 01624000
@NM00009 EQU   NLSTTAB+58                                               01625000
@NM00008 EQU   ACCTECB                                                  01626000
@NM00007 EQU   COMMON+46                                                01627000
@NM00006 EQU   COMMON+37                                                01628000
PTPBFLN  EQU   PTPB+8                                                   01629000
@NM00005 EQU   PTPB                                                     01630000
IOPLECB  EQU   IOPL+8                                                   01631000
IOPLECT  EQU   IOPL+4                                                   01632000
IOPLUPT  EQU   IOPL                                                     01633000
@NM00004 EQU   DHED+40                                                  01634000
UADSDEST EQU   DHED+32                                                  01635000
UADSPERP EQU   DHED+28                                                  01636000
UADSPWD1 EQU   DHED+24                                                  01637000
UADSUPTP EQU   DHED+20                                                  01638000
UADSINST EQU   DHED+18                                                  01639000
@NM00003 EQU   UADSATTR                                                 01640000
USATR03  EQU   UADSATTR                                                 01641000
USATR02  EQU   UADSATTR                                                 01642000
USATR01  EQU   UADSATTR                                                 01643000
USATR00  EQU   UADSATTR                                                 01644000
@NM00002 EQU   UADSBN01+1                                               01645000
UADSEXPF EQU   UADSBN01+1                                               01646000
UADSNUSP EQU   UADSBN01+1                                               01647000
@NM00001 EQU   UADSBN01                                                 01648000
UADSFSQP EQU   UADSMHDR+2                                               01649000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01650000
@RT00142 EQU   CLEANUP1                                                 01651000
@RT00203 EQU   STOWERR                                                  01652000
@RF00238 EQU   USERLOOP                                                 01653000
@RC00295 EQU   CLEANUP1                                                 01654000
@RF00342 EQU   @EL00001                                                 01655000
@RF00363 EQU   ERRMSG                                                   01656000
@RT00366 EQU   FINDTEST                                                 01657000
@RT00391 EQU   ERRMSG                                                   01658000
@RT00411 EQU   CLEANUP1                                                 01659000
@RF00439 EQU   @EL00003                                                 01660000
@RF00454 EQU   @EL00004                                                 01661000
@PB00004 EQU   @EL00001                                                 01662000
@PB00003 EQU   @PB00004                                                 01663000
@PB00002 EQU   @PB00003                                                 01664000
@ENDDATA EQU   *                                                        01665000
         END   IKJEFA12                                                 01666000
