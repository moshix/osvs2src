         TITLE 'IKJEFA13 - ACCOUNT/ADD SUBCOMMAND (AUGMENT MODULE 2)   *00001000
                       '                                                00002000
IKJEFA13 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA13  73.209'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*          COMMPTR=R1;                  /* GET POINTER TO COMMON     */ 00022000
         LR    COMMPTR,R1                                          0029 00023000
*          RFY R1 UNRSTD;               /* RELEASE REGISTER 1        */ 00024000
*          FNOUTPTR=0;                  /* CLEAR PTR TO SKIP FREEMAIN*/ 00025000
         SLR   @09,@09                                             0031 00026000
         ST    @09,FNOUTPTR                                        0031 00027000
*          /* MOVE L-FORMS OF O/S MACROS INTO DYNAMIC STORAGE        */ 00028000
*          DYNLFORM(1:INLINLNG)=INLINLFM(1:INLINLNG);              0032 00029000
         L     @09,INLINLNG                                        0032 00030000
         BCTR  @09,0                                               0032 00031000
         EX    @09,@SM00413                                        0032 00032000
*          OUTLNDS=OUTLNDS&&OUTLNDS;    /* CLEAR OUTPUT LINE       0033 00033000
*                                          DESCRIPTORS FOR PUTLINE   */ 00034000
         XC    OUTLNDS(52),OUTLNDS                                 0033 00035000
*          OUT1LINK=ADDR(OUTLD2);       /* INITIALIZE LINKAGE FOR  0034 00036000
*                                          2 MESSAGE LEVELS          */ 00037000
         LA    @09,OUTLD2                                          0034 00038000
         ST    @09,OUT1LINK                                        0034 00039000
*          MSGBASE=ADDR(MSGTABLE);      /* BASE FOR MSG PTR TABLE    */ 00040000
         L     MSGBASE,@CV00111                                    0035 00041000
*          /* BUILD USERID SEGMENT FOR MESSAGES JUST IN CASE ...     */ 00042000
*          /* SCAN FOR & DELETE TRAILING BLANKS                      */ 00043000
*          USRIDLN=LENGTH(USRIDSEG);    /* INIT USERID LENGTH TO MAX */ 00044000
         MVC   USRIDLN(2),@CH00055                                 0036 00045000
*          DO WHILE BLDLLIST(USRIDLN)=' '; /* LOOP TILL NON-BLANK    */ 00046000
         B     @DE00037                                            0037 00047000
@DL00037 DS    0H                                                  0038 00048000
*            USRIDLN=USRIDLN-1;         /* DECREMENT LENGTH OF SEGMEN*/ 00049000
         LH    @09,USRIDLN                                         0038 00050000
         BCTR  @09,0                                               0038 00051000
         STH   @09,USRIDLN                                         0038 00052000
*          END;                                                    0039 00053000
@DE00037 LH    @09,USRIDLN                                         0039 00054000
         L     @15,BLDLPTR(,COMMPTR)                               0039 00055000
         ALR   @09,@15                                             0039 00056000
         AL    @09,@CF00344                                        0039 00057000
         CLI   BLDLLIST(@09),C' '                                  0039 00058000
         BE    @DL00037                                            0039 00059000
*          USRIDLN=USRIDLN-1;           /* DECREMENT PAST INDEX      */ 00060000
         LH    @09,USRIDLN                                         0040 00061000
         BCTR  @09,0                                               0040 00062000
         STH   @09,USRIDLN                                         0040 00063000
*          USRIDI=BLDLNAME;             /* USERID FROM SAVE SLOT     */ 00064000
         MVC   USRIDI(8),BLDLNAME(@15)                             0041 00065000
*          /*** INSERTION OFFSET IS SET WHEN MESSAGE IS BUILT      ***/ 00066000
*          HEDBPTR=ACIOBUFR;            /* ESTABLISH USER ADDRESSBLTY*/ 00067000
         L     @09,ACIOPTR(,COMMPTR)                               0042 00068000
         SLR   HEDBPTR,HEDBPTR                                     0042 00069000
         ICM   HEDBPTR,7,ACIOBUFR(@09)                             0042 00070000
*          N=NUMOFLVL;                  /* SET WORK COUNTER TO NUMBER   00071000
*                                          OF LEVELS IN THE NODELIST */ 00072000
         SLR   N,N                                                 0043 00073000
         IC    N,NUMOFLVL(,COMMPTR)                                0043 00074000
*          IF RSIZSW='1'B               /* IS SIZE > MAXSIZE?        */ 00075000
*            THEN                       /* YES,                      */ 00076000
         TM    RSIZSW(COMMPTR),B'00010000'                         0044 00077000
         BNO   @RF00044                                            0044 00078000
*              PSIZE=UADSMAXC;          /* USE MAXSIZE               */ 00079000
         SLR   @09,@09                                             0045 00080000
         ICM   @09,3,UADSMAXC(HEDBPTR)                             0045 00081000
         STH   @09,PSIZE                                           0045 00082000
*            ELSE                       /* NO,                       */ 00083000
*              PSIZE=SIZEH;             /* USE SPECIFIED SIZE        */ 00084000
         B     @RC00044                                            0046 00085000
@RF00044 SLR   @09,@09                                             0046 00086000
         ICM   @09,3,SIZEH(COMMPTR)                                0046 00087000
         STH   @09,PSIZE                                           0046 00088000
*          /**********************************************************/ 00089000
*          /* THIS SECTION SEARCHES FOR THE 'LOWEST' LEVEL IN THE    */ 00090000
*          /* NODELIST = *.  THE NUMBER OF NODES AT THAT LEVEL REPRE-*/ 00091000
*          /* SENTS AN UPPER BOUND TO THE NUMBER OF NODES TO WHICH   */ 00092000
*          /* THE DATALIST MUST BE ADDED.                            */ 00093000
*          /**********************************************************/ 00094000
*          NUMOFNDS=1;                  /* INITIALIZE NUMBER OF NODES*/ 00095000
@RC00044 LA    NUMOFNDS,1                                          0047 00096000
*          UADSNPTR=ADDR(UADSPWD1);     /* INITIALIZE NODE BASE AS IF   00097000
*                                          OFFSET TO INITIAL PASSWORD   00098000
*                                          NODE WERE PART OF A     0048 00099000
*                                          STANDARD NODE BLOCK       */ 00100000
         LA    UADSNPTR,UADSPWD1(,HEDBPTR)                         0048 00101000
*          IF ACCTNO(1:2)='* '          /* IS THE ACCTNO AN ASTERISK?*/ 00102000
*            THEN                       /* YES -                     */ 00103000
         L     @09,NODELADR(,COMMPTR)                              0049 00104000
         CLC   ACCTNO(2,@09),@CC00312                              0049 00105000
         BNE   @RF00049                                            0049 00106000
*              DO;                                                 0050 00107000
*                /* CHAIN DOWN TO ACCOUNT NUMBER LEVEL OF USER MEMBER*/ 00108000
*                UADSNPTR=UADSNNEX+HEDBPTR;/* POINT TO FIRST PASSWORD*/ 00109000
         SLR   @09,@09                                             0051 00110000
         ICM   @09,7,UADSNNEX(UADSNPTR)                            0051 00111000
         AR    @09,HEDBPTR                                         0051 00112000
         LR    UADSNPTR,@09                                        0051 00113000
*                UADSNPTR=UADSNSUB+HEDBPTR;/* POINT TO FIRST ACCTNO. */ 00114000
         LR    @09,HEDBPTR                                         0052 00115000
         A     @09,UADSNSUB(,UADSNPTR)                             0052 00116000
         LR    UADSNPTR,@09                                        0052 00117000
*                /* COUNT THE NODES ON THE ACCOUNT NUMBER LEVEL      */ 00118000
*                DO WHILE UADSNNEX^=0;    /* LOOP TILL NO MORE NODES */ 00119000
         B     @DE00053                                            0053 00120000
@DL00053 DS    0H                                                  0054 00121000
*                  NUMOFNDS=NUMOFNDS+1;   /* COUNT ONE               */ 00122000
         AH    NUMOFNDS,@CH00032                                   0054 00123000
*                  UADSNPTR=UADSNNEX+                              0055 00124000
*                     HEDBPTR;          /* STEP SIDEWAYS TO NEXT NODE*/ 00125000
         SLR   @09,@09                                             0055 00126000
         ICM   @09,7,UADSNNEX(UADSNPTR)                            0055 00127000
         AR    @09,HEDBPTR                                         0055 00128000
         LR    UADSNPTR,@09                                        0055 00129000
*                END;                                              0056 00130000
@DE00053 ICM   @09,7,UADSNNEX(UADSNPTR)                            0056 00131000
         BNZ   @DL00053                                            0056 00132000
*              END;                                                0057 00133000
*            ELSE                                                  0058 00134000
*              IF PASSWD(1:2)='* '      /* IS THE PASSWD AN ASTERISK?*/ 00135000
*                THEN                   /* YES -                     */ 00136000
         B     @RC00049                                            0058 00137000
@RF00049 L     @09,NODELADR(,COMMPTR)                              0058 00138000
         CLC   PASSWD(2,@09),@CC00312                              0058 00139000
         BNE   @RF00058                                            0058 00140000
*                  /* COUNT THE NODES ON THE PASSWORD LEVEL          */ 00141000
*                  DO WHILE UADSNNEX^=0;/* LOOP TILL NO MORE NODES   */ 00142000
         B     @DE00059                                            0059 00143000
@DL00059 DS    0H                                                  0060 00144000
*                    NUMOFNDS=NUMOFNDS+1;/* COUNT ONE                */ 00145000
         AH    NUMOFNDS,@CH00032                                   0060 00146000
*                    UADSNPTR=UADSNNEX+                            0061 00147000
*                      HEDBPTR;         /* STEP SIDEWAYS TO NEXT NODE*/ 00148000
         SLR   @09,@09                                             0061 00149000
         ICM   @09,7,UADSNNEX(UADSNPTR)                            0061 00150000
         AR    @09,HEDBPTR                                         0061 00151000
         LR    UADSNPTR,@09                                        0061 00152000
*                  END;                                            0062 00153000
@DE00059 ICM   @09,7,UADSNNEX(UADSNPTR)                            0062 00154000
         BNZ   @DL00059                                            0062 00155000
*          /* NUMOFNDS NOW = THE NUMBER OF NODES AT LEVEL N.         */ 00156000
*          RFY R0 RSTD;                 /* RESERVE REGS. FOR GETMAIN */ 00157000
@RF00058 DS    0H                                                  0063 00158000
@RC00049 DS    0H                                                  0064 00159000
*          /* CALCULATE AMOUNT OF WORKING STORAGE NEEDED BY FINDNODE */ 00160000
*          R0=4*(NUMOFNDS+N);           /* MAY BE MORE THAN NECESSARY*/ 00161000
         LR    R0,NUMOFNDS                                         0064 00162000
         AR    R0,N                                                0064 00163000
         SLA   R0,2                                                0064 00164000
*          FNOUTLNG=R0;                 /* SAVE LENGTH FOR FREEMAIN  */ 00165000
         ST    R0,FNOUTLNG                                         0065 00166000
*          /* ISSUE GETMAIN TO OBTAIN FINDNODE WORKING STORAGE       */ 00167000
*          GEN (GETMAIN EC,LV=(R0),A=FNOUTPTR,MF=(E,DYNGTLST))     0066 00168000
*            REFS(DYNGTLST) SETS(FNOUTPTR);                        0066 00169000
         GETMAIN EC,LV=(R0),A=FNOUTPTR,MF=(E,DYNGTLST)                  00170000
*          RFY R0 UNRSTD;               /* GIVE BACK REGISTER        */ 00171000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 00172000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 00173000
         LR    RETNCODE,R15                                        0069 00174000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 00175000
*          /* CHECK RETURN CODE                                      */ 00176000
*          IF RETNCODE^=0                                          0071 00177000
*            THEN                       /* GETMAIN FAILED            */ 00178000
         SLR   @09,@09                                             0071 00179000
         CR    RETNCODE,@09                                        0071 00180000
         BNE   @RT00071                                            0071 00181000
*              GOTO NOSPACE;            /* SCRATCH READ ROUTINE STG  */ 00182000
*          FINDPTR=FNOUTPTR;            /* INITIALIZE FINDNODE OUTPUT   00183000
*                                          LIST INDEX                */ 00184000
         L     @04,FNOUTPTR                                        0073 00185000
         LR    FINDPTR,@04                                         0073 00186000
*          MARKMARK=FNOUTPTR+FNOUTLNG-4;/* POINT TO LAST WORD        */ 00187000
         L     @15,FNOUTLNG                                        0074 00188000
         LR    MARKMARK,@04                                        0074 00189000
         AR    MARKMARK,@15                                        0074 00190000
         SH    MARKMARK,@CH00108                                   0074 00191000
*          /* SET UP TO CLEAR THE WORK AREA TO ZEROES                */ 00192000
*          RFY (R0,R1,R15) RSTD;        /* RESTRICT WORK REGISTERS   */ 00193000
*          R0=FNOUTPTR;                 /* GET TO ADDRESS            */ 00194000
         LR    R0,@04                                              0076 00195000
*          R1=FNOUTLNG;                 /* LOAD R1 WITH LENGTH       */ 00196000
         L     @14,FNOUTLNG                                        0077 00197000
         LR    R1,@14                                              0077 00198000
*          R15=0;                       /* LOAD R15 WITH 0 LENGTH    */ 00199000
         SLR   @04,@04                                             0078 00200000
         LR    R15,@04                                             0078 00201000
*          GEN (MVCL  R0,R14)           /* CLEAR GOTTEN CORE         */ 00202000
*            REFS(R0,R1,R15);                                      0079 00203000
         MVCL  R0,R14                                                   00204000
*          RFY (R0,R1,R15) UNRSTD;      /* RELEASE WORK REGISTERS    */ 00205000
*          /* BEGIN SEARCH FOR NODE(S) SPECIFIED BY NODELIST OPERAND */ 00206000
*          MARKFLAG(1)='1'B;            /* TURN ON 'BOTTOM-OF-LIST'     00207000
*                                          INDICATOR                 */ 00208000
         OI    MARKFLAG(MARKMARK),B'10000000'                      0081 00209000
*          MARKER=UADSPWD1+HEDBPTR;     /* INITIALIZE TO ADDRESS OF     00210000
*                                          FIRST PASSWORD NODE       */ 00211000
         LR    @04,HEDBPTR                                         0082 00212000
         A     @04,UADSPWD1(,HEDBPTR)                              0082 00213000
         STCM  @04,7,MARKER(MARKMARK)                              0082 00214000
*          NODEPDE=NODEPDE&&NODEPDE;    /* CLEAR DUMMY PDE           */ 00215000
         XC    NODEPDE(14),NODEPDE                                 0083 00216000
*          LSCANPTR=ADDR(SCANLIST);     /* LATSCAN PARM LIST BASE PTR*/ 00217000
         LA    LSCANPTR,SCANLIST                                   0084 00218000
*          /* SEE IF THE PASSWORD IS IN THE NODELIST                 */ 00219000
*          IF PASSWD(1)='00'X                                      0085 00220000
*            THEN                       /* ITEM NOT IN NODELIST      */ 00221000
         L     @15,NODELADR(,COMMPTR)                              0085 00222000
         CLI   PASSWD(@15),X'00'                                   0085 00223000
         BE    @RT00085                                            0085 00224000
*              GO TO MRKRTST1;          /* END-OF-ROUTINE            */ 00225000
*          /* IS THE NODELIST PASSWORD AN '*' ?                      */ 00226000
*          IF PASSWD(1:2)='* '                                     0087 00227000
*            THEN                       /* THIS LEVEL IS NON-SPECIFIC*/ 00228000
         CLC   PASSWD(2,@15),@CC00312                              0087 00229000
         BE    @RT00087                                            0087 00230000
*              GO TO ANODETST;          /* GO LOOK FOR ACCT NUMBER   */ 00231000
*          PASSWDP=ADDR(PASSWD);        /* GET ADDRESS OF PASSWORD   */ 00232000
         LA    @03,PASSWD(,@15)                                    0089 00233000
         ST    @03,PASSWDP                                         0089 00234000
*          PWLEN1=8;                    /* GET LENGTH OF PASSWORD    */ 00235000
         MVC   PWLEN1(2),@CH00040                                  0090 00236000
*          /* BUILD PARAMETER LIST FOR 'LATSCAN' SUBROUTINE          */ 00237000
*          SCANTYPE=1;                  /* INIT SCANTYPE FOR PASSWORD*/ 00238000
         MVI   SCANTYPE(LSCANPTR),X'01'                            0091 00239000
*          SCANPDE=ADDR(PASSWDP);       /* POINT TO PASSWORD PDE     */ 00240000
         LA    @03,PASSWDP                                         0092 00241000
         STCM  @03,7,SCANPDE(LSCANPTR)                             0092 00242000
*          SCANFLGS='00'X;              /* SCAN LOCAL LATERAL CHAIN  */ 00243000
         MVI   SCANFLGS(LSCANPTR),X'00'                            0093 00244000
*          SCANBEGN=MARKER;             /* BEGINNING OF SCAN         */ 00245000
         STCM  @04,7,SCANBEGN(LSCANPTR)                            0094 00246000
*          CALL IKJLSCAN;               /* CALL 'LATSCAN' SUBROUTINE */ 00247000
         BAL   @14,IKJLSCAN                                        0095 00248000
*          /* CHECK RETURN CODE - DID WE FIND THE NODELIST PASSWORD  */ 00249000
*          IF SCANRTCD^=0                                          0096 00250000
*            THEN                       /* NO - NODE ITEM NOT FOUND  */ 00251000
         LTR   SCANRTCD,SCANRTCD                                   0096 00252000
         BNZ   @RT00096                                            0096 00253000
*              GOTO NONODE;             /* GO TO ERROR TERMINATION   */ 00254000
*          MARKER=SCANANSR->UADSNSUB+   /* MOVE MARKER TO LOWER LEVEL*/ 00255000
*             HEDBPTR;                                             0098 00256000
         L     @04,SCANANSR(,LSCANPTR)                             0098 00257000
         LR    @15,HEDBPTR                                         0098 00258000
         A     @15,UADSNSUB(,@04)                                  0098 00259000
         STCM  @15,7,MARKER(MARKMARK)                              0098 00260000
*          /* SEE IF THE ACCOUNT NUMBER LEVEL IS IN THE NODELIST     */ 00261000
*          IF ACCTNO(1)='00'X                                      0099 00262000
*            THEN                       /* ITEM NOT IN NODELIST      */ 00263000
         L     @04,NODELADR(,COMMPTR)                              0099 00264000
         CLI   ACCTNO(@04),X'00'                                   0099 00265000
         BE    @RT00099                                            0099 00266000
*              GO TO MRKRTST1;          /* END-OF-ROUTINE            */ 00267000
*          IF ACCTNO(1:2)='* '                                     0101 00268000
*            THEN                       /* THIS LEVEL IS NON-SPECIFIC*/ 00269000
         CLC   ACCTNO(2,@04),@CC00312                              0101 00270000
         BNE   @RF00101                                            0101 00271000
*              DO;                                                 0102 00272000
*              /* ALL NODES ON THIS LEVEL QUALIFIED FOR AUGMENTATION.   00273000
*                 LOOP TILL THIS NODE THE LAST ONE IN LOCAL LATERAL     00274000
*                 CHAIN.                                             */ 00275000
*              DO WHILE MARKFLAG(1)='1'B;                          0103 00276000
         B     @DE00103                                            0103 00277000
@DL00103 DS    0H                                                  0104 00278000
*                FOUNDNDE=MARKER->UADSNSUB+ /* PUT NODE ADDRESS IN   */ 00279000
*                   HEDBPTR;            /*   FINDNODE OUTPUT LIST    */ 00280000
         SLR   @04,@04                                             0104 00281000
         ICM   @04,7,MARKER(MARKMARK)                              0104 00282000
         LR    @15,HEDBPTR                                         0104 00283000
         A     @15,UADSNSUB(,@04)                                  0104 00284000
         STCM  @15,7,FOUNDNDE(FINDPTR)                             0104 00285000
*                FINDPTR=FINDPTR+4;     /* STEP TO NEXT WORD IN    0105 00286000
*                                          FINDNODE OUTPUT LIST      */ 00287000
         AH    FINDPTR,@CH00108                                    0105 00288000
*                IF MARKER->UADSNFLG='1'B/* IS THIS THE END OF CHAIN?*/ 00289000
*                  THEN                 /* YES,                      */ 00290000
         TM    UADSNFLG(@04),B'10000000'                           0106 00291000
         BNO   @RF00106                                            0106 00292000
*                    MARKFLAG(1)='0'B;  /* TERMINATE LOOP            */ 00293000
         NI    MARKFLAG(MARKMARK),B'01111111'                      0107 00294000
*                MARKER=MARKER->UADSNNEX+ /* STEP MARKER TO NEXT NODE*/ 00295000
*                   HEDBPTR;            /*   ON THE SAME LEVEL       */ 00296000
@RF00106 SLR   @04,@04                                             0108 00297000
         ICM   @04,7,MARKER(MARKMARK)                              0108 00298000
         SLR   @15,@15                                             0108 00299000
         ICM   @15,7,UADSNNEX(@04)                                 0108 00300000
         AR    @15,HEDBPTR                                         0108 00301000
         STCM  @15,7,MARKER(MARKMARK)                              0108 00302000
*                END;                                              0109 00303000
@DE00103 TM    MARKFLAG(MARKMARK),B'10000000'                      0109 00304000
         BO    @DL00103                                            0109 00305000
*              GOTO NONODE;                                        0110 00306000
         B     NONODE                                              0110 00307000
*              END;                                                0111 00308000
*          ACCTNOP=ADDR(ACCTNO);        /* GET ADDRESS OF ACCT NUMBER*/ 00309000
@RF00101 L     @04,NODELADR(,COMMPTR)                              0112 00310000
         LA    @03,ACCTNO(,@04)                                    0112 00311000
         ST    @03,ACCTNOP                                         0112 00312000
*          ACTLEN1=ACTLEN;              /* GET LENGTH OF ACCT NUMBER */ 00313000
         SLR   @03,@03                                             0113 00314000
         IC    @03,ACTLEN(,@04)                                    0113 00315000
         STH   @03,ACTLEN1                                         0113 00316000
*          /* BUILD PARAMETER LIST FOR 'LATSCAN' SUBROUTINE          */ 00317000
*          SCANTYPE=2;                  /* INIT SCANTYPE FOR ACCTNO  */ 00318000
         MVI   SCANTYPE(LSCANPTR),X'02'                            0114 00319000
*          SCANPDE=ADDR(ACCTNOP);       /* POINT TO ACCT NUM PDE     */ 00320000
         LA    @04,ACCTNOP                                         0115 00321000
         STCM  @04,7,SCANPDE(LSCANPTR)                             0115 00322000
*          SCANFLGS='00'X;              /* SCAN LOCAL LATERAL CHAIN  */ 00323000
         MVI   SCANFLGS(LSCANPTR),X'00'                            0116 00324000
*          SCANBEGN=MARKER;             /* BEGINNING OF SCAN         */ 00325000
         MVC   SCANBEGN(3,LSCANPTR),MARKER(MARKMARK)               0117 00326000
*          CALL IKJLSCAN;               /* CALL 'LATSCAN' SUBROUTINE */ 00327000
         BAL   @14,IKJLSCAN                                        0118 00328000
*          /* CHECK RETURN CODE - DID WE FIND THIS NODELIST ITEM     */ 00329000
*          IF SCANRTCD^=0                                          0119 00330000
*            THEN                       /* NO - NODE ITEM NOT FOUND  */ 00331000
         LTR   SCANRTCD,SCANRTCD                                   0119 00332000
         BNZ   @RT00119                                            0119 00333000
*              GOTO NONODE;             /* GO TO ERROR TERMINATION   */ 00334000
*          MARKER=SCANANSR->UADSNSUB+                              0121 00335000
*             HEDBPTR;                  /* MOVE MARKER TO LOWER LEVEL*/ 00336000
         L     @04,SCANANSR(,LSCANPTR)                             0121 00337000
         LR    @15,HEDBPTR                                         0121 00338000
         A     @15,UADSNSUB(,@04)                                  0121 00339000
         STCM  @15,7,MARKER(MARKMARK)                              0121 00340000
*          GOTO MRKRTST1;                                          0122 00341000
         B     MRKRTST1                                            0122 00342000
*ANODETST: /* THE NODELIST PASSWORD WAS AN ASTERISK. CHECK THE ACCOUNT  00343000
*             NUMBER                                                 */ 00344000
*          IF ACCTNO(1)='00'X           /* WAS THE ACCTNO SPECIFIED? */ 00345000
*            THEN                       /* ITEM NOT IN NODELIST      */ 00346000
ANODETST L     @04,NODELADR(,COMMPTR)                              0123 00347000
         CLI   ACCTNO(@04),X'00'                                   0123 00348000
         BE    @RT00123                                            0123 00349000
*              GOTO ALLNODES;           /* ALL PASSWDS ARE QUALIFIED */ 00350000
*          MARKER=MARKER->UADSNSUB+                                0125 00351000
*             HEDBPTR;                  /* MOVE MARKER TO ACTNO LEVEL*/ 00352000
         SLR   @01,@01                                             0125 00353000
         ICM   @01,7,MARKER(MARKMARK)                              0125 00354000
         LR    @00,HEDBPTR                                         0125 00355000
         A     @00,UADSNSUB(,@01)                                  0125 00356000
         STCM  @00,7,MARKER(MARKMARK)                              0125 00357000
*          IF ACCTNO(1:2)='* '                                     0126 00358000
*            THEN                       /* THIS LEVEL IS NON-SPECIFIC*/ 00359000
         CLC   ACCTNO(2,@04),@CC00312                              0126 00360000
         BE    @RT00126                                            0126 00361000
*              GOTO ALLNODES;           /* ALL ACCOUNT NUMBERS ARE 0127 00362000
*                                          QUALIFIED                 */ 00363000
*          ACCTNOP=ADDR(ACCTNO);        /* GET ADDRESS OF ACCT NUMBER*/ 00364000
         LA    @15,ACCTNO(,@04)                                    0128 00365000
         ST    @15,ACCTNOP                                         0128 00366000
*          ACTLEN1=ACTLEN;              /* GET LENGTH OF ACCT NUMBER */ 00367000
         SLR   @15,@15                                             0129 00368000
         IC    @15,ACTLEN(,@04)                                    0129 00369000
         STH   @15,ACTLEN1                                         0129 00370000
*          /* BUILD PARAMETER LIST FOR 'LATSCAN' SUBROUTINE          */ 00371000
*          SCANTYPE=2;                  /* INCREMENT SCAN TYPE INDEX */ 00372000
         MVI   SCANTYPE(LSCANPTR),X'02'                            0130 00373000
*          SCANPDE=ADDR(ACCTNOP);       /* POINT TO ACCT NUMBER PDE  */ 00374000
         LA    @04,ACCTNOP                                         0131 00375000
         STCM  @04,7,SCANPDE(LSCANPTR)                             0131 00376000
*          SCANFLGS='80'X;              /* SCAN TOTAL LATERAL CHAIN  */ 00377000
         MVI   SCANFLGS(LSCANPTR),X'80'                            0132 00378000
*          DO WHILE MARKER^=HEDBPTR;    /* LOOP FOR ALL PASSWORDS    */ 00379000
         B     @DE00133                                            0133 00380000
@DL00133 DS    0H                                                  0134 00381000
*            SCANBEGN=MARKER;           /* BEGINNING OF SCAN         */ 00382000
         MVC   SCANBEGN(3,LSCANPTR),MARKER(MARKMARK)               0134 00383000
*            CALL IKJLSCAN;             /* CALL 'LATSCAN' SUBROUTINE */ 00384000
         BAL   @14,IKJLSCAN                                        0135 00385000
*            /* CHECK RETURN CODE - DID WE FIND THIS NODELIST ITEM   */ 00386000
*            IF SCANRTCD^=0                                        0136 00387000
*              THEN                     /* NO - NODE ITEM NOT FOUND  */ 00388000
         LTR   SCANRTCD,SCANRTCD                                   0136 00389000
         BNZ   @RT00136                                            0136 00390000
*                GOTO NONODE;           /* GO TO ERROR TERMINATION   */ 00391000
*            FOUNDNDE=SCANANSR->        /* PUT NODE ADDRESS IN       */ 00392000
*               UADSNSUB+HEDBPTR;       /*   FINDNODE OUTPUT LIST    */ 00393000
         L     @04,SCANANSR(,LSCANPTR)                             0138 00394000
         LR    @15,HEDBPTR                                         0138 00395000
         A     @15,UADSNSUB(,@04)                                  0138 00396000
         STCM  @15,7,FOUNDNDE(FINDPTR)                             0138 00397000
*            FINDPTR=FINDPTR+4;         /* STEP TO NEXT WORD IN    0139 00398000
*                                          FINDNODE OUTPUT LIST      */ 00399000
         AH    FINDPTR,@CH00108                                    0139 00400000
*            MARKER=SCANANSR->          /* STEP MARKER TO NEXT NODE  */ 00401000
*               UADSNNEX+HEDBPTR;       /*   ON THE SAME LEVEL       */ 00402000
         SLR   @15,@15                                             0140 00403000
         ICM   @15,7,UADSNNEX(@04)                                 0140 00404000
         AR    @15,HEDBPTR                                         0140 00405000
         STCM  @15,7,MARKER(MARKMARK)                              0140 00406000
*            END;                                                  0141 00407000
@DE00133 SLR   @04,@04                                             0141 00408000
         ICM   @04,7,MARKER(MARKMARK)                              0141 00409000
         CR    HEDBPTR,@04                                         0141 00410000
         BNE   @DL00133                                            0141 00411000
*          GOTO NONODE;                                            0142 00412000
         B     NONODE                                              0142 00413000
*ALLNODES: /* CTL. PASSED HERE WHEN ALL NODES ON THIS LEVEL QUALIFIED   00414000
*             FOR AUGMENTATION.                                      */ 00415000
*          /* LOOP TILL THIS NODE THE LAST ONE IN TOTAL LATERAL CHAIN*/ 00416000
*          DO WHILE MARKER^=HEDBPTR;                               0143 00417000
ALLNODES B     @DE00143                                            0143 00418000
@DL00143 DS    0H                                                  0144 00419000
*            FOUNDNDE=MARKER->UADSNSUB+ /* PUT NODE ADDRESS IN       */ 00420000
*               HEDBPTR;                /*   FINDNODE OUTPUT LIST    */ 00421000
         SLR   @04,@04                                             0144 00422000
         ICM   @04,7,MARKER(MARKMARK)                              0144 00423000
         LR    @15,HEDBPTR                                         0144 00424000
         A     @15,UADSNSUB(,@04)                                  0144 00425000
         STCM  @15,7,FOUNDNDE(FINDPTR)                             0144 00426000
*            FINDPTR=FINDPTR+4;         /* STEP TO NEXT WORD IN    0145 00427000
*                                          FINDNODE OUTPUT LIST      */ 00428000
         AH    FINDPTR,@CH00108                                    0145 00429000
*            MARKER=MARKER->UADSNNEX+   /* STEP MARKER TO NEXT NODE  */ 00430000
*               HEDBPTR;                /*   ON THE SAME LEVEL       */ 00431000
         SLR   @15,@15                                             0146 00432000
         ICM   @15,7,UADSNNEX(@04)                                 0146 00433000
         AR    @15,HEDBPTR                                         0146 00434000
         STCM  @15,7,MARKER(MARKMARK)                              0146 00435000
*            END;                                                  0147 00436000
@DE00143 SLR   @04,@04                                             0147 00437000
         ICM   @04,7,MARKER(MARKMARK)                              0147 00438000
         CR    HEDBPTR,@04                                         0147 00439000
         BNE   @DL00143                                            0147 00440000
*          GOTO NONODE;                                            0148 00441000
         B     NONODE                                              0148 00442000
*MRKRTST1: /* CTL. PASSED HERE FROM 'PARMTEST' UPON EXHAUSTION OF THE*/ 00443000
*          /* ITEMS IN THE NODELIST.                                 */ 00444000
*          FOUNDNDE=MARKER;             /* MARKER CONTAINS SOUGHT NDE*/ 00445000
MRKRTST1 MVC   FOUNDNDE(3,FINDPTR),MARKER(MARKMARK)                0149 00446000
*          FNOEOLST='1'B;               /* SET END-OF-LIST FLAG      */ 00447000
         OI    FNOEOLST(FINDPTR),B'10000000'                       0150 00448000
*          NONODESW='1'B;               /* SET 'NO-NODES-FOUND'    0151 00449000
*                                          INDICATOR OFF (ONE)       */ 00450000
*          FINDEXSW='1'B;               /* INDICATE FINDNODE ROUTINE    00451000
*                                          HAS BEEN EXECUTED         */ 00452000
         OI    NONODESW(COMMPTR),B'00001100'                       0152 00453000
*          GO TO ADDER;                 /* GO TO 'ADDER' ROUTINE     */ 00454000
         B     ADDER                                               0153 00455000
*NONODE:   /* CTL PASSED HERE TO SEE IF ANY NODES WERE FOUND         */ 00456000
*          /* IS THE OUTPUT LIST EMPTY ?                             */ 00457000
*          IF FINDPTR=FNOUTPTR                                     0154 00458000
*            THEN                       /* NO NODE ADDRESSES EVER PUT   00459000
*                                          IN OUTPUT LIST            */ 00460000
NONODE   C     FINDPTR,FNOUTPTR                                    0154 00461000
         BNE   @RF00154                                            0154 00462000
*              DO;                                                 0155 00463000
*                /****************************************************/ 00464000
*                /* ACTION TAKEN HERE TO RELEASE THE READ ROUTINE'S  */ 00465000
*                /* BUFFER AND BYPASS THE 'ADDER' ROUTINE            */ 00466000
*                /****************************************************/ 00467000
*                CALL WRITE;            /* SCRATCH READ ROUTINE'S STG*/ 00468000
         BAL   @14,WRITE                                           0156 00469000
*                FINDEXSW='1'B;         /* INDICATE FINDNODE ROUTINE    00470000
*                                          HAS BEEN EXECUTED         */ 00471000
         OI    FINDEXSW(COMMPTR),B'00000100'                       0157 00472000
*                GOTO ERREXIT;          /* BYPASS 'ADDER'            */ 00473000
         B     ERREXIT                                             0158 00474000
*              END;                                                0159 00475000
*          FINDPTR=FINDPTR-4;           /* STEP BACK TO LAST USED PTR*/ 00476000
@RF00154 SH    FINDPTR,@CH00108                                    0160 00477000
*          FNOEOLST='1'B;               /* SET END-OF-LIST FLAG      */ 00478000
         OI    FNOEOLST(FINDPTR),B'10000000'                       0161 00479000
*          NONODESW='1'B;               /* SET 'NO-NODES-FOUND'    0162 00480000
*                                          INDICATOR OFF (ONE)       */ 00481000
*          FINDEXSW='1'B;               /* INDICATE FINDNODE ROUTINE    00482000
*                                          HAS BEEN EXECUTED         */ 00483000
         OI    NONODESW(COMMPTR),B'00001100'                       0163 00484000
*ADDER:    /* CTL. PASSED OR DROPPED TO HERE TO ADD THE 'DATALIST'   */ 00485000
*          /* ITEMS TO EACH CHAIN LISTED IN THE FINDNODE OUTPUT LIST */ 00486000
*          ADDWKAR=ADDWKAR&&ADDWKAR;    /* CLEAR ADDER WORK AREA     */ 00487000
ADDER    XC    ADDWKAR(36),ADDWKAR                                 0164 00488000
*          MARKMARK=ADDR(ADDWKAR);      /* INITIALIZE MARKER OF    0165 00489000
*                                          MARKERS                   */ 00490000
         LA    MARKMARK,ADDWKAR                                    0165 00491000
*          SETFLAG='1'B;                /* SET END-OF-LIST FLAG      */ 00492000
         OI    SETFLAG(MARKMARK),B'10000000'                       0166 00493000
*          FINDPTR=FNOUTPTR;            /* POINT TO 1ST OUTPUT NODE  */ 00494000
         L     FINDPTR,FNOUTPTR                                    0167 00495000
*          SPACMPTR=HEDBPTR;            /* ADDR OF USER ENTRY BUFFER */ 00496000
         ST    HEDBPTR,SPACMPTR                                    0168 00497000
*          SPACMCNT=ACIONMBR;           /* NO. OF MEMBER BLKS IN BUFR*/ 00498000
         L     @04,ACIOPTR(,COMMPTR)                               0169 00499000
         SLR   @15,@15                                             0169 00500000
         IC    @15,ACIONMBR(,@04)                                  0169 00501000
         STH   @15,SPACMCNT                                        0169 00502000
*ADDRBEGN: /* BEGIN ADDING ITEMS SPECIFIED BY 'DATA' KEYWORD SUBFIELD*/ 00503000
*          MARKER1=DATASUBP;            /* POINT TO FIRST DATA PDE   */ 00504000
ADDRBEGN MVC   MARKER1(3,MARKMARK),DATASUBP+1(COMMPTR)             0170 00505000
*          SCANTYPE=1;                  /* INITIALIZE SCAN TYPE INDEX*/ 00506000
         MVI   SCANTYPE(LSCANPTR),X'01'                            0171 00507000
*          /* IS THIS DATA ITEM IN THE DATALIST ?                    */ 00508000
*          DO WHILE DATAADR=0;                                     0172 00509000
         B     @DE00172                                            0172 00510000
@DL00172 DS    0H                                                  0173 00511000
*            MARKER1=MARKER1+12;        /* STEP 'MARKER1' TO NEXT PDE*/ 00512000
         LA    @04,12                                              0173 00513000
         SLR   @15,@15                                             0173 00514000
         ICM   @15,7,MARKER1(MARKMARK)                             0173 00515000
         AR    @04,@15                                             0173 00516000
         STCM  @04,7,MARKER1(MARKMARK)                             0173 00517000
*            SCANTYPE=SCANTYPE+1;       /* INCREMENT SCAN TYPE INDEX */ 00518000
         LA    @04,1                                               0174 00519000
         SLR   @15,@15                                             0174 00520000
         IC    @15,SCANTYPE(,LSCANPTR)                             0174 00521000
         AR    @04,@15                                             0174 00522000
         STC   @04,SCANTYPE(,LSCANPTR)                             0174 00523000
*          END;                                                    0175 00524000
@DE00172 SLR   @04,@04                                             0175 00525000
         ICM   @04,7,MARKER1(MARKMARK)                             0175 00526000
         L     @04,DATAADR(,@04)                                   0175 00527000
         LTR   @04,@04                                             0175 00528000
         BZ    @DL00172                                            0175 00529000
*          /* IS THIS DATALIST ITEM AN '*' ?                         */ 00530000
*          /* MAKE CERTAIN THIS LEVEL IN THIS USER IS UNSUPPORTED    */ 00531000
*          DO WHILE DATAITEM(1:2)='* ';                            0176 00532000
         B     @DE00176                                            0176 00533000
@DL00176 DS    0H                                                  0177 00534000
*            IF FOUNDNDE->UADSNDAT^=0                              0177 00535000
*              THEN                 /* INFORMATION PTR EXISTS        */ 00536000
         SLR   @04,@04                                             0177 00537000
         ICM   @04,7,FOUNDNDE(FINDPTR)                             0177 00538000
         L     @04,UADSNDAT(,@04)                                  0177 00539000
         LTR   @04,@04                                             0177 00540000
         BZ    @RF00177                                            0177 00541000
*                DO;                                               0178 00542000
*ASTKERR:        /****************************************************/ 00543000
*                /* ACTION TAKEN HERE TO RELEASE THE READ ROUTINE'S  */ 00544000
*                /* BUFFER AND PUT OUT A MESSAGE INDICATING THAT     */ 00545000
*                /* THE '*' IN THE DATA SUBFLD IS INCOMPATIBLE       */ 00546000
*                /* WITH THE CURRENT USERID.                         */ 00547000
*                /****************************************************/ 00548000
*                CALL WRITE;            /* SCRATCH READ ROUTINE STG  */ 00549000
ASTKERR  BAL   @14,WRITE                                           0179 00550000
*                /* SET PARAMETERS FOR PUTLINE MESSAGE               */ 00551000
*                OUT1LINK=0;            /* INDICATE NO 2ND LEVEL MSG */ 00552000
         SLR   @09,@09                                             0180 00553000
         ST    @09,OUT1LINK                                        0180 00554000
*                OUT1SCNT='03'X;        /* 1ST LEVEL MSG SEG COUNT =3*/ 00555000
         MVI   OUT1SCNT,X'03'                                      0181 00556000
*                OUT1SEG1=ADDMSG(29);   /* PTR TO 'LEVEL REQUIRED'   */ 00557000
         L     @09,ADDMSG+112(,MSGBASE)                            0182 00558000
         ST    @09,OUT1SEG1                                        0182 00559000
*                USRIDOF=35;            /* OFFSET FOR USERID INSERTN */ 00560000
         MVC   USRIDOF(2),@CH00334                                 0183 00561000
*                OUT1SEG2=ADDR(USRIDSEG);/* 2ND SEGMT = USERID       */ 00562000
         LA    @09,USRIDSEG                                        0184 00563000
         ST    @09,OUT1SEG2                                        0184 00564000
*                /* WHICH LEVEL IS SUPPORTED AND NOT SPECIFIED?      */ 00565000
*                IF SCANTYPE=1                                     0185 00566000
*                  THEN                 /* PASSWORD LEVEL SUPPORTED  */ 00567000
         CLI   SCANTYPE(LSCANPTR),1                                0185 00568000
         BNE   @RF00185                                            0185 00569000
*                    OUT1SEG3=ADDMSG(30); /* 3RD SEG='PASSWORDS      */ 00570000
         L     @09,ADDMSG+116(,MSGBASE)                            0186 00571000
         ST    @09,OUT1SEG3                                        0186 00572000
*                  ELSE                 /* MUST BE ACCOUNT NUMBERS   */ 00573000
*                    OUT1SEG3=ADDMSG(31);/* 3RD SEG='ACCTNMBRS'      */ 00574000
         B     @RC00185                                            0187 00575000
@RF00185 L     @09,ADDMSG+120(,MSGBASE)                            0187 00576000
         ST    @09,OUT1SEG3                                        0187 00577000
*                GOTO INFOMSG;          /* GO PUT OUT MESSAGE & LEAVE*/ 00578000
         B     INFOMSG                                             0188 00579000
*                END;                                              0189 00580000
*              ELSE                     /* LEVEL IS NOT SUPPORTED    */ 00581000
*                DO;                                               0190 00582000
@RF00177 DS    0H                                                  0191 00583000
*                MARKER1=MARKER1+12;    /* BUMP 'MARKER1' TO NEXT PDE*/ 00584000
         LA    @04,12                                              0191 00585000
         SLR   @15,@15                                             0191 00586000
         ICM   @15,7,MARKER1(MARKMARK)                             0191 00587000
         AR    @04,@15                                             0191 00588000
         STCM  @04,7,MARKER1(MARKMARK)                             0191 00589000
*                SCANTYPE=SCANTYPE+1;   /* INCREMENT SCAN TYPE INDEX */ 00590000
         LA    @04,1                                               0192 00591000
         SLR   @15,@15                                             0192 00592000
         IC    @15,SCANTYPE(,LSCANPTR)                             0192 00593000
         AR    @04,@15                                             0192 00594000
         STC   @04,SCANTYPE(,LSCANPTR)                             0192 00595000
*                FOUNDNDE=FOUNDNDE ->   /* MOVE STARTING POINT DOWN  */ 00596000
*                  UADSNSUB+HEDBPTR;    /* ONE LEVEL                 */ 00597000
         SLR   @04,@04                                             0193 00598000
         ICM   @04,7,FOUNDNDE(FINDPTR)                             0193 00599000
         LR    @15,HEDBPTR                                         0193 00600000
         A     @15,UADSNSUB(,@04)                                  0193 00601000
         STCM  @15,7,FOUNDNDE(FINDPTR)                             0193 00602000
*                END;                                              0194 00603000
*            END;                                                  0195 00604000
@DE00176 SLR   @04,@04                                             0195 00605000
         ICM   @04,7,MARKER1(MARKMARK)                             0195 00606000
         L     @04,DATAADR(,@04)                                   0195 00607000
         CLC   DATAITEM(2,@04),@CC00312                            0195 00608000
         BE    @DL00176                                            0195 00609000
*DUPLSCAN:       /* CTL. PASSED OR DROPPED HERE TO MAKE CERTAIN THE  */ 00610000
*                /* DATALIST ITEM IS NOT DUPLICATED IN THE UADS USER */ 00611000
*                /* INDEX STRUCTURE                                  */ 00612000
*                SCANPDE=MARKER1;       /* POINT TO SEARCH ARG. PDE  */ 00613000
DUPLSCAN MVC   SCANPDE(3,LSCANPTR),MARKER1(MARKMARK)               0196 00614000
*                SCANFLGS='00'X;        /* REQUEST LOCAL LAT'L SCAN  */ 00615000
         MVI   SCANFLGS(LSCANPTR),X'00'                            0197 00616000
*                SCANBEGN=FOUNDNDE;     /* ADDR OF 1ST NODE IN CHAIN    00617000
*                                          TO BE SCANNED             */ 00618000
         MVC   SCANBEGN(3,LSCANPTR),FOUNDNDE(FINDPTR)              0198 00619000
*                CALL IKJLSCAN;         /* CALL 'LATSCAN' SUBROUTINE */ 00620000
         BAL   @14,IKJLSCAN                                        0199 00621000
*                /* CHECK RETURN CODE - WAS THIS DATALIST ITEM       */ 00622000
*                /* ALREADY IN THE UADS UNDER THE SUBJECT NODE LEVEL */ 00623000
*                IF SCANRTCD^=4                                    0200 00624000
*                  THEN                 /* DUPLICATE OR NON-SUPPORT  */ 00625000
         CH    SCANRTCD,@CH00108                                   0200 00626000
         BNE   @RT00200                                            0200 00627000
*                    GOTO SCANERR;                                 0201 00628000
*          MARKER2=SCANANSR;            /* SAVE NODE ADDR RETURNED 0202 00629000
*                                          BY 'LATSCAN' SUBROUTINE   */ 00630000
         L     @04,SCANANSR(,LSCANPTR)                             0202 00631000
         ST    @04,MARKER2(,MARKMARK)                              0202 00632000
*ADDNODE:  /* CTL. PASSED OR DROPPED HERE TO BUILD A NEW NODE        */ 00633000
*          SPACLNTH=LENGTH(UADSNODE);   /* REQUEST SPACE FOR A NODE  */ 00634000
ADDNODE  MVC   SPACLNTH(2),@CH00055                                0203 00635000
*          CALL GETSPACE;               /* GET SPACE IN MEMBER BLOCK */ 00636000
         BAL   @14,GETSPACE                                        0204 00637000
*          MARKER3=SPACOFST;            /* SAVE 'OFFSET' TO        0205 00638000
*                                          SPACE FOR NEW NODE        */ 00639000
         L     @04,SPACOFST                                        0205 00640000
         ST    @04,MARKER3(,MARKMARK)                              0205 00641000
*          UADSNPTR=MARKER3+HEDBPTR;    /* LOAD NODE BLOCK BASE PTR  */ 00642000
         AR    @04,HEDBPTR                                         0206 00643000
         LR    UADSNPTR,@04                                        0206 00644000
*          /* IS THIS DATA ITEM AN '*'                               */ 00645000
*          IF DATAITEM(1:2)='* '                                   0207 00646000
*            THEN                       /* YES - DATA ITEM IS AN '*' */ 00647000
         SLR   @04,@04                                             0207 00648000
         ICM   @04,7,MARKER1(MARKMARK)                             0207 00649000
         L     @04,DATAADR(,@04)                                   0207 00650000
         CLC   DATAITEM(2,@04),@CC00312                            0207 00651000
         BNE   @RF00207                                            0207 00652000
*              /* SEE IF THIS NODE LEVEL FOR THIS USER IS UNSUPPORTED*/ 00653000
*              IF MARKER2->UADSNDAT^=0                             0208 00654000
*                THEN                   /* INFORMATION PTR EXISTS    */ 00655000
         L     @04,MARKER2(,MARKMARK)                              0208 00656000
         L     @04,UADSNDAT(,@04)                                  0208 00657000
         LTR   @04,@04                                             0208 00658000
         BNZ   @RT00208                                            0208 00659000
*                  GO TO ASTKERR;       /* GO SET 'INCOMPATIBLE' MSG */ 00660000
*                ELSE                   /* 0 INFO PTR MATCHES '*'    */ 00661000
*                  GO TO LATLINK;       /* GO TO BYPASS INFO. SCAN   */ 00662000
         B     LATLINK                                             0210 00663000
*          SCANPDE=MARKER1;             /* PREPARE 'LATSCAN' PARMLIST*/ 00664000
@RF00207 MVC   SCANPDE(3,LSCANPTR),MARKER1(MARKMARK)               0211 00665000
*          SCANFLGS='80'X;              /* REQUEST TOTAL LAT'L SCAN  */ 00666000
         MVI   SCANFLGS(LSCANPTR),X'80'                            0212 00667000
*          SCANBEGN=UADSPWD1+HEDBPTR;   /* START SCAN PARAMETER AT 0213 00668000
*                                          PASSWORD LEVEL            */ 00669000
         LR    @04,HEDBPTR                                         0213 00670000
         A     @04,UADSPWD1(,HEDBPTR)                              0213 00671000
         STCM  @04,7,SCANBEGN(LSCANPTR)                            0213 00672000
*          /* CYCLE DOWN TO LEVEL INDICATED BY 'SCANTYPE'            */ 00673000
*          DO LOOPCNT=SCANTYPE-1 TO 1 BY -1; /* OPTIMUM CTLS         */ 00674000
         SLR   LOOPCNT,LOOPCNT                                     0214 00675000
         IC    LOOPCNT,SCANTYPE(,LSCANPTR)                         0214 00676000
         BCTR  LOOPCNT,0                                           0214 00677000
         B     @DE00214                                            0214 00678000
@DL00214 DS    0H                                                  0215 00679000
*            SCANBEGN=SCANBEGN->UADSNSUB+HEDBPTR; /* STEP DOWN SCAN     00680000
*                                                    STARTING POINT  */ 00681000
         SLR   @04,@04                                             0215 00682000
         ICM   @04,7,SCANBEGN(LSCANPTR)                            0215 00683000
         LR    @15,HEDBPTR                                         0215 00684000
         A     @15,UADSNSUB(,@04)                                  0215 00685000
         STCM  @15,7,SCANBEGN(LSCANPTR)                            0215 00686000
*          END;                         /* SCANBEGN WILL POINT TO THE   00687000
*                                          'LEFTMOST' NODE ON SCANTYPE  00688000
*                                          LEVEL WHEN LOOP IS DONE   */ 00689000
         BCTR  LOOPCNT,0                                           0216 00690000
@DE00214 LTR   LOOPCNT,LOOPCNT                                     0216 00691000
         BP    @DL00214                                            0216 00692000
*          /* CTL. RETURNED HERE TO RECALL 'LATSCAN' IF PROCNAME     */ 00693000
*          /* SUBFIELDS DO NOT MATCH                                 */ 00694000
*          CALL IKJLSCAN;               /* INVOKE 'LATSCAN'          */ 00695000
         BAL   @14,IKJLSCAN                                        0217 00696000
*          /* CHECK RETURN CODE                                      */ 00697000
*          IF SCANRTCD=4                                           0218 00698000
*            THEN                       /* NO DUPLICATE INFO FOUND   */ 00699000
         CH    SCANRTCD,@CH00108                                   0218 00700000
         BE    @RT00218                                            0218 00701000
*              GO TO ADDINFO;           /* GO TO BUILD AN INFO FIELD */ 00702000
*          /* EXAMINE RETURN CODE FURTHER                            */ 00703000
*          IF SCANRTCD^=0                                          0220 00704000
*            THEN                       /* LEVEL NOT SUPPORTED       */ 00705000
         LTR   SCANRTCD,SCANRTCD                                   0220 00706000
         BNZ   @RT00220                                            0220 00707000
*              GO TO SCANERR;           /* GO SET 'INCOMPATIBLE' MSG */ 00708000
*          /* IS THIS A PROCEDURE NAME DATA ITEM                     */ 00709000
*          IF SCANTYPE^=3                                          0222 00710000
*            THEN                       /* NO - NOT A PROCEDURE NAME */ 00711000
         CLI   SCANTYPE(LSCANPTR),3                                0222 00712000
         BE    @RF00222                                            0222 00713000
*              DO;                      /* UTILIZE EXISTING INFO BLOCK  00714000
*                                          FOR THIS DATA ITEM        */ 00715000
*              UADSNDAT=SCANANSR->UADSNDAT;/* OFFSET TO INFO FIELD INTO 00716000
*                                             NEW NODE'S OFFSET FIELD*/ 00717000
         L     @04,SCANANSR(,LSCANPTR)                             0224 00718000
         L     @04,UADSNDAT(,@04)                                  0224 00719000
         ST    @04,UADSNDAT(,UADSNPTR)                             0224 00720000
*              GO TO COUNTUSE;          /* GO COUNT THIS USE         */ 00721000
         B     COUNTUSE                                            0225 00722000
*              END;                                                0226 00723000
*          /* AT THIS POINT THE ITEM IS IDENTIFIED AS A PROCEDURE    */ 00724000
*          /* MUST CHECK TWO OTHER FIELDS BEFORE CONFIRMING DUPLICATE*/ 00725000
*          DO WHILE SCANRTCD=0;         /* LOOP FOR ALL = PROCEDURES */ 00726000
@RF00222 B     @DE00227                                            0227 00727000
@DL00227 DS    0H                                                  0228 00728000
*            UADSRPTR=SCANANSR->                                   0228 00729000
*               UADSNDAT+HEDBPTR;       /* POINT TO PROC DATA FIELD  */ 00730000
         L     @04,SCANANSR(,LSCANPTR)                             0228 00731000
         L     @04,UADSNDAT(,@04)                                  0228 00732000
         LR    UADSRPTR,HEDBPTR                                    0228 00733000
         AR    UADSRPTR,@04                                        0228 00734000
*            /* COMPARE INPUT DATA TO EXISTING DATA                  */ 00735000
*            IF UNITN=UADSUNAM          /* ARE UNIT NAMES            */ 00736000
*              & PSIZE=UADSRSIZ         /*  AND SIZE VALUES EQUAL?   */ 00737000
*              THEN                     /* YES,                      */ 00738000
         CLC   UNITN(8,COMMPTR),UADSUNAM(UADSRPTR)                 0229 00739000
         BNE   @RF00229                                            0229 00740000
         CLC   PSIZE(2),UADSRSIZ(UADSRPTR)                         0229 00741000
         BNE   @RF00229                                            0229 00742000
*                DO;                    /* UTILIZE EXISTING INFO BLOCK  00743000
*                                          FOR THIS DATA ITEM        */ 00744000
*                UADSNDAT=SCANANSR->    /* OFFSET TO INFO FIELD INTO */ 00745000
*                 UADSNDAT;             /*    NEW NODE'S OFFSET FIELD*/ 00746000
         ST    @04,UADSNDAT(,UADSNPTR)                             0231 00747000
*                GO TO COUNTUSE;        /* GO COUNT THIS USE         */ 00748000
         B     COUNTUSE                                            0232 00749000
*                END;                                              0233 00750000
*            SCANBEGN=SCANANSR->        /* POINT TO NEXT NODE        */ 00751000
*               UADSNNEX+HEDBPTR;                                  0234 00752000
@RF00229 L     @04,SCANANSR(,LSCANPTR)                             0234 00753000
         SLR   @02,@02                                             0234 00754000
         ICM   @02,7,UADSNNEX(@04)                                 0234 00755000
         LR    @04,HEDBPTR                                         0234 00756000
         AR    @04,@02                                             0234 00757000
         STCM  @04,7,SCANBEGN(LSCANPTR)                            0234 00758000
*            IF SCANANSR->UADSNNEX=0    /* IS THERE ANOTHER OFFSET?  */ 00759000
*              THEN                     /* NO,                       */ 00760000
         LTR   @02,@02                                             0235 00761000
         BZ    @RT00235                                            0235 00762000
*                GO TO ADDINFO;         /* GO TO BUILD AN INFO FIELD */ 00763000
*            /* RECALL THE LATERAL SCAN SUBROUTINE TO CONTINUE     0237 00764000
*               DUPLICATE SEARCH WITH NEXT NODE                      */ 00765000
*            CALL IKJLSCAN;             /* INVOKE 'LATSCAN'          */ 00766000
         BAL   @14,IKJLSCAN                                        0237 00767000
*          END;                                                    0238 00768000
@DE00227 LTR   SCANRTCD,SCANRTCD                                   0238 00769000
         BZ    @DL00227                                            0238 00770000
*ADDINFO:  /* CTL. PASSED HERE TO BUILD AN INFORMATION BLOCK         */ 00771000
*          SPACLNTH=DTABLNTH(SCANTYPE); /* BLOCK LENGTH FROM       0239 00772000
*                                          DATA ATTRIBUTE TABLE      */ 00773000
ADDINFO  SLR   @04,@04                                             0239 00774000
         IC    @04,SCANTYPE(,LSCANPTR)                             0239 00775000
         SLA   @04,2                                               0239 00776000
         LA    @02,DTATBL                                          0239 00777000
         LA    @01,0(@04,@02)                                      0239 00778000
         AL    @01,@CF00418                                        0239 00779000
         SLR   @00,@00                                             0239 00780000
         IC    @00,DTABLNTH-1(,@01)                                0239 00781000
         STH   @00,SPACLNTH                                        0239 00782000
*          /* IS THERE A VARIABLE LENGTH INCREMENT TO BE ADDED       */ 00783000
*          IF DTAFLGS(SCANTYPE,1)='1'B                             0240 00784000
*            THEN                       /* VARIABLE-LENGTH INFO. FLD */ 00785000
         ALR   @02,@04                                             0240 00786000
         AL    @02,@CF00419                                        0240 00787000
         TM    DTAFLGS(@02),B'10000000'                            0240 00788000
         BNO   @RF00240                                            0240 00789000
*              SPACLNTH=SPACLNTH+DATALNTH; /* INCREMENT BY LENGTH  0241 00790000
*                                             FROM PDE               */ 00791000
         SLR   @04,@04                                             0241 00792000
         ICM   @04,7,MARKER1(MARKMARK)                             0241 00793000
         AH    @00,DATALNTH(,@04)                                  0241 00794000
         STH   @00,SPACLNTH                                        0241 00795000
*          CALL GETSPACE;               /* GET SPACE IN MEMBER BLOCK */ 00796000
@RF00240 BAL   @14,GETSPACE                                        0242 00797000
*          UADSNDAT=SPACOFST;           /* OFFSET TO DATA FIELD    0243 00798000
*                                          TO NODE SLOT              */ 00799000
         L     @04,SPACOFST                                        0243 00800000
         ST    @04,UADSNDAT(,UADSNPTR)                             0243 00801000
*          DATAPTR=UADSNDAT+HEDBPTR+DTAOFFST(SCANTYPE); /* POINT TO     00802000
*                                                          INFO FIELD*/ 00803000
         AR    @04,HEDBPTR                                         0244 00804000
         SLR   @15,@15                                             0244 00805000
         IC    @15,SCANTYPE(,LSCANPTR)                             0244 00806000
         SLA   @15,2                                               0244 00807000
         LA    @14,DTATBL                                          0244 00808000
         LA    @01,0(@15,@14)                                      0244 00809000
         AL    @01,@CF00420                                        0244 00810000
         SLR   DATAPTR,DATAPTR                                     0244 00811000
         IC    DATAPTR,DTAOFFST-2(,@01)                            0244 00812000
         AR    @04,DATAPTR                                         0244 00813000
         LR    DATAPTR,@04                                         0244 00814000
*          /* CHECK AGAIN FOR VARIABLE LENGTH BLOCK TYPE             */ 00815000
*          IF DTAFLGS(SCANTYPE,1)='1'B                             0245 00816000
*            THEN                       /* VARIABLE LENGTH INFO FIELD*/ 00817000
         ALR   @14,@15                                             0245 00818000
         AL    @14,@CF00419                                        0245 00819000
         TM    DTAFLGS(@14),B'10000000'                            0245 00820000
         BNO   @RF00245                                            0245 00821000
*              DO;                                                 0246 00822000
*                VLNTHLNG=DATALNTH;     /* VARIABLE LENGTH INDICATOR    00823000
*                                          FROM LENGTH FIELD IN PDE  */ 00824000
         SLR   @04,@04                                             0247 00825000
         ICM   @04,7,MARKER1(MARKMARK)                             0247 00826000
         LH    @15,DATALNTH(,@04)                                  0247 00827000
         STC   @15,VLNTHLNG(,DATAPTR)                              0247 00828000
*                DATAPTR=DATAPTR+1;     /* BUMP PTR PAST V-LNTH BYTE */ 00829000
         AH    DATAPTR,@CH00032                                    0248 00830000
*                DATAPTR->DATAITEM(1:DATALNTH)=DATAITEM; /* MOVE DATA*/ 00831000
         BCTR  @15,0                                               0249 00832000
         L     @04,DATAADR(,@04)                                   0249 00833000
         EX    @15,@SM00421                                        0249 00834000
*              END;                                                0250 00835000
*            ELSE                       /* DATA LNGTH IS EIGHT CHARS */ 00836000
*              DATAPTR->DATAITEM=                                  0251 00837000
*                 DATAITEM(1:DATALNTH); /* GET DATA FROM PDE LIST    */ 00838000
         B     @RC00245                                            0251 00839000
@RF00245 MVI   DATAITEM+1(DATAPTR),C' '                            0251 00840000
         MVC   DATAITEM+2(6,DATAPTR),DATAITEM+1(DATAPTR)           0251 00841000
         SLR   @04,@04                                             0251 00842000
         ICM   @04,7,MARKER1(MARKMARK)                             0251 00843000
         LH    @15,DATALNTH(,@04)                                  0251 00844000
         BCTR  @15,0                                               0251 00845000
         L     @04,DATAADR(,@04)                                   0251 00846000
         EX    @15,@SM00421                                        0251 00847000
*          /* NOW, SEE IF SIZE AND UNIT PARAMETERS NEED TO BE STORED */ 00848000
*          IF SCANTYPE=3                                           0252 00849000
*            THEN                       /* YES THIS IS PROCNAME LEVEL*/ 00850000
@RC00245 CLI   SCANTYPE(LSCANPTR),3                                0252 00851000
         BNE   @RF00252                                            0252 00852000
*              DO;                                                 0253 00853000
*              UADSRPTR=UADSNDAT+                                  0254 00854000
*                  HEDBPTR;             /* PROCEDURE INFO FIELD BASE */ 00855000
         LR    UADSRPTR,HEDBPTR                                    0254 00856000
         A     UADSRPTR,UADSNDAT(,UADSNPTR)                        0254 00857000
*              UADSRSIZ=PSIZE;          /* SIZE VALUE SET UP IN    0255 00858000
*                                          IKJEFA55                  */ 00859000
         SLR   @04,@04                                             0255 00860000
         ICM   @04,3,PSIZE                                         0255 00861000
         STH   @04,UADSRSIZ(,UADSRPTR)                             0255 00862000
*              UADSUNAM=UNITN;          /* UNITNAME TO INFO FLD      */ 00863000
         MVC   UADSUNAM(8,UADSRPTR),UNITN(COMMPTR)                 0256 00864000
*              END;                                                0257 00865000
*COUNTUSE: /* CTL. PASSED OR DROPPED HERE TO INCREMENT INFO USE COUNT*/ 00866000
*          COUNTPTR=UADSNDAT+HEDBPTR;   /* BASE OF INFO FIELD        */ 00867000
@RF00252 DS    0H                                                  0258 00868000
COUNTUSE LR    COUNTPTR,HEDBPTR                                    0258 00869000
         A     COUNTPTR,UADSNDAT(,UADSNPTR)                        0258 00870000
*          /* MAKE CERTAIN THAT USE COUNT WILL NOT OVERFLOW          */ 00871000
*          IF USECOUNT>=255                                        0259 00872000
*            THEN                       /* COUNTER FILLED TO CAPACITY*/ 00873000
         CLI   USECOUNT(COUNTPTR),255                              0259 00874000
         BL    @RF00259                                            0259 00875000
*              DO;                                                 0260 00876000
*                /****************************************************/ 00877000
*                /* RELEASE READ ROUTINE BUFFER AND PUT OUT A MESSAGE*/ 00878000
*                /* INDICATING THAT USE COUNTER IS EXHAUSTED         */ 00879000
*                /****************************************************/ 00880000
*                CALL WRITE;            /* SCRATCH READ ROUTINE STG  */ 00881000
         BAL   @14,WRITE                                           0261 00882000
*                /* SET PARAMETERS FOR PUTLINE MESSAGE               */ 00883000
*                OUT1SCNT='02'X;        /* 1ST LEVEL MSG SEG COUNT =2*/ 00884000
         MVI   OUT1SCNT,X'02'                                      0262 00885000
*                OUT1SEG1=ADDMSG(32);   /* ADDR OF 'UNABLE TO ADD'   */ 00886000
         L     @09,ADDMSG+124(,MSGBASE)                            0263 00887000
         ST    @09,OUT1SEG1                                        0263 00888000
*                USRIDOF=35;            /* OFFSET FOR USERID INSERTN */ 00889000
         MVC   USRIDOF(2),@CH00334                                 0264 00890000
*                OUT1SEG2=ADDR(USRIDSEG); /* ADDR OF USERID SEGMENT  */ 00891000
         LA    @09,USRIDSEG                                        0265 00892000
         ST    @09,OUT1SEG2                                        0265 00893000
*                OUT2SCNT='04'X;        /* 2ND LEVEL MSG SEG COUNT =4*/ 00894000
         MVI   OUT2SCNT,X'04'                                      0266 00895000
*                OUT2SEG1=ADDMSG(39);   /* ADDR OF 'COUNTER EXHAUSTED*/ 00896000
         L     @09,ADDMSG+152(,MSGBASE)                            0267 00897000
         ST    @09,OUT2SEG1                                        0267 00898000
*                USERSEG2=USRIDSEG;     /* INITIALIZE ADD'L SEGMENT  */ 00899000
         MVC   USERSEG2(11),USRIDSEG                               0268 00900000
*                USRSG2OF=59;           /* OFFSET FOR 2ND LVL INSERTN*/ 00901000
         MVC   USRSG2OF(2),@CH00354                                0269 00902000
*                INSTOF=10;             /* OFFSET FOR TEXT INSERTION */ 00903000
         MVC   INSTOF(2),@CH00355                                  0270 00904000
*                OUT2SEG3=ADDR(INSTSEG); /* ADDR OF INSERT SEGMENT   */ 00905000
         LA    @09,INSTSEG                                         0271 00906000
         ST    @09,OUT2SEG3                                        0271 00907000
*                OUT2SEG4=ADDR(USERSEG2); /* ADDR OF ADD'L USER SEGMT*/ 00908000
         LA    @09,USERSEG2                                        0272 00909000
         ST    @09,OUT2SEG4                                        0272 00910000
*                /* IS THIS THE ACCOUNT NUMBER LEVEL ?               */ 00911000
*                IF SCANTYPE=2                                     0273 00912000
*                  THEN                 /* ACCOUNT NUMBER LEVEL      */ 00913000
         CLI   SCANTYPE(LSCANPTR),2                                0273 00914000
         BNE   @RF00273                                            0273 00915000
*                    DO;                                           0274 00916000
*                      OUT2SEG2=ADDMSG(22); /* 'ACCOUNT NUMBER' PREFX*/ 00917000
         L     @09,ADDMSG+84(,MSGBASE)                             0275 00918000
         ST    @09,OUT2SEG2                                        0275 00919000
*                      INSTLN=DATALNTH+4; /* LENGTH OF ACCT NMBR SEGM*/ 00920000
         SLR   @10,@10                                             0276 00921000
         ICM   @10,7,MARKER1(MARKMARK)                             0276 00922000
         LH    @09,DATALNTH(,@10)                                  0276 00923000
         LA    @04,4                                               0276 00924000
         AR    @04,@09                                             0276 00925000
         STH   @04,INSTLN                                          0276 00926000
*                      INSTTX(1:DATALNTH)=                         0277 00927000
*                        DATAITEM;      /* ACCT NMBR VIA PARSE PDE   */ 00928000
         BCTR  @09,0                                               0277 00929000
         L     @10,DATAADR(,@10)                                   0277 00930000
         EX    @09,@SM00423                                        0277 00931000
*                    END;                                          0278 00932000
*                  ELSE                 /* MUST BE PROCNAME LEVEL    */ 00933000
*                    DO;                                           0279 00934000
         B     @RC00273                                            0279 00935000
@RF00273 DS    0H                                                  0280 00936000
*                      OUT2SEG2=ADDMSG(23); /* PTR TO 'PROCNAME' PRFX*/ 00937000
         L     @09,ADDMSG+88(,MSGBASE)                             0280 00938000
         ST    @09,OUT2SEG2                                        0280 00939000
*                      INSTLN=DATALNTH+4; /* LENGTH OF PROCNAME SEGMT*/ 00940000
         SLR   @10,@10                                             0281 00941000
         ICM   @10,7,MARKER1(MARKMARK)                             0281 00942000
         LH    @09,DATALNTH(,@10)                                  0281 00943000
         LA    @04,4                                               0281 00944000
         AR    @04,@09                                             0281 00945000
         STH   @04,INSTLN                                          0281 00946000
*                      INSTTX(1:DATALNTH)=                         0282 00947000
*                        DATAITEM;      /* PROC NAME VIA PARSE PDE   */ 00948000
         BCTR  @09,0                                               0282 00949000
         L     @10,DATAADR(,@10)                                   0282 00950000
         EX    @09,@SM00423                                        0282 00951000
*                    END;                                          0283 00952000
*                GOTO INFOMSG;          /* GO PUT OUT MESSAGE & LEAVE*/ 00953000
         B     INFOMSG                                             0284 00954000
*              END;                                                0285 00955000
*          USECOUNT=USECOUNT+1;         /* COUNT ONE                 */ 00956000
@RF00259 LA    @04,1                                               0286 00957000
         SLR   @15,@15                                             0286 00958000
         IC    @15,USECOUNT(,COUNTPTR)                             0286 00959000
         AR    @04,@15                                             0286 00960000
         STC   @04,USECOUNT(,COUNTPTR)                             0286 00961000
*LATLINK:  /* CTL. PASSED OR DROPPED HERE TO LINK NEW NODE TO TREE   */ 00962000
*          UADSNWD1=MARKER2->UADSNWD1;  /* COPY LATERAL OFFSET FROM     00963000
*                                          'OLD' NODE TO 'NEW' ONE   */ 00964000
LATLINK  L     @04,MARKER2(,MARKMARK)                              0287 00965000
         L     @02,UADSNWD1(,@04)                                  0287 00966000
         ST    @02,UADSNWD1(,UADSNPTR)                             0287 00967000
*          MARKER2->UADSNWD1=MARKER3;   /* OFFSET TO NEW NODE TO LAT'L  00968000
*                                          OFFSET SLOT OF 'OLD' NODE */ 00969000
         L     @15,MARKER3(,MARKMARK)                              0288 00970000
         ST    @15,UADSNWD1(,@04)                                  0288 00971000
*          /* IS THE DATA ITEM THE FIRST ONE IN A PDE CHAIN ?        */ 00972000
*          IF MARKER1=12*(SCANTYPE-1)+DATASUBP /* PDE = 1ST (OR    0289 00973000
*                                                       ONLY) FOR THIS  00974000
*                                                       OPERAND      */ 00975000
*               &SETFLAG^='1'B          /* THIS IS NOT THE HIGHEST 0289 00976000
*                                          LEVEL BEING ADDED TO ('HIGH' 00977000
*                                          BEING 'TOWARDS USERID')   */ 00978000
*            THEN                       /* VERTICAL OFFSET FLD OF NODE  00979000
*                                          ABOVE MUST BE FILLED IN   */ 00980000
         LA    @14,12                                              0289 00981000
         SLR   @01,@01                                             0289 00982000
         IC    @01,SCANTYPE(,LSCANPTR)                             0289 00983000
         BCTR  @01,0                                               0289 00984000
         MR    @00,@14                                             0289 00985000
         A     @01,DATASUBP(,COMMPTR)                              0289 00986000
         SLR   @00,@00                                             0289 00987000
         ICM   @00,7,MARKER1(MARKMARK)                             0289 00988000
         CR    @01,@00                                             0289 00989000
         BNE   @RF00289                                            0289 00990000
         TM    SETFLAG(MARKMARK),B'10000000'                       0289 00991000
         BO    @RF00289                                            0289 00992000
*              DO;                                                 0290 00993000
*                RFY R1 RSTD;           /* RESTRICT R1 FOR WORK REG  */ 00994000
*                R1=MARKMARK-12;        /* USE R1 AS TEMPORARY BASE  */ 00995000
         LCR   @14,@14                                             0292 00996000
         AR    @14,MARKMARK                                        0292 00997000
         LR    R1,@14                                              0292 00998000
*                R1=R1->MARKER3+HEDBPTR; /* ESTABLISH BASE FOR HIGHER   00999000
*                                           NEW NODE                 */ 01000000
         LR    @00,HEDBPTR                                         0293 01001000
         A     @00,MARKER3(,R1)                                    0293 01002000
         LR    R1,@00                                              0293 01003000
*                R1->UADSNSUB=MARKER3;  /* OFFSET OF NEW NODE TO   0294 01004000
*                                           OFFSET FIELD OF 'FATHER' */ 01005000
         ST    @15,UADSNSUB(,R1)                                   0294 01006000
*                MARKER2->UADSNFLG='1'B; /* MARKER2 LOCATES END OF 0295 01007000
*                                           PREVIOUS LATERAL CHAIN   */ 01008000
         OI    UADSNFLG(@04),B'10000000'                           0295 01009000
*              END;                                                0296 01010000
*                                       /* CONTINUE - EITHER PDE NOT    01011000
*                                          1ST IN CHAIN OR THIS IS THE  01012000
*                                          TOP OF THE 'AUGMENT' TREE */ 01013000
*                                                                  0297 01014000
*          /* CTL. PASSED OR DROPPED HERE TO TEST FOR LAST PDE       */ 01015000
*          IF SCANTYPE=3                                           0297 01016000
*            THEN                       /* NO MORE LEVELS            */ 01017000
@RF00289 CLI   SCANTYPE(LSCANPTR),3                                0297 01018000
         BE    @RT00297                                            0297 01019000
*              GO TO CHAINTST;          /* GO SEE IF THIS IS LAST  0298 01020000
*                                          PDE IN THE CHAIN          */ 01021000
*          R1=MARKMARK;                 /* SAVE 'MARKMARK' TEMPORARLY*/ 01022000
         LR    R1,MARKMARK                                         0299 01023000
*          MARKMARK=MARKMARK+12;        /* BUMP TO NEXT SET OF MARKRS*/ 01024000
         LA    @04,12                                              0300 01025000
         AR    MARKMARK,@04                                        0300 01026000
*          MARKER1=12*SCANTYPE+DATASUBP;/* SET NEW MARKER1 TO      0301 01027000
*                                                 NEXT PDE IN PDL    */ 01028000
         SLR   @15,@15                                             0301 01029000
         IC    @15,SCANTYPE(,LSCANPTR)                             0301 01030000
         LR    @03,@04                                             0301 01031000
         MR    @02,@15                                             0301 01032000
         A     @03,DATASUBP(,COMMPTR)                              0301 01033000
         STCM  @03,7,MARKER1(MARKMARK)                             0301 01034000
*          SCANTYPE=SCANTYPE+1;         /* INCREMENT SCAN TYPE INDEX */ 01035000
         AH    @15,@CH00032                                        0302 01036000
         STC   @15,SCANTYPE(,LSCANPTR)                             0302 01037000
*          R1=R1->MARKER2->UADSNSUB+HEDBPTR; /* PICK UP OFFSET TO NEXT  01038000
*                                               LOWER LEVEL FROM NODE   01039000
*                                               POINTED TO BY OLD  0303 01040000
*                                               MARKER2              */ 01041000
         L     @04,MARKER2(,R1)                                    0303 01042000
         LR    @00,HEDBPTR                                         0303 01043000
         A     @00,UADSNSUB(,@04)                                  0303 01044000
         LR    R1,@00                                              0303 01045000
*          /* SEE IF LOWER LEVEL NODE IS LAST IN A LOCAL LAT'L CHAIN */ 01046000
*          DO WHILE R1->UADSNFLG^='1'B;                            0304 01047000
         B     @DE00304                                            0304 01048000
@DL00304 DS    0H                                                  0305 01049000
*            R1=R1->UADSNNEX+HEDBPTR;   /* MOVE TO NEXT LAT'L        */ 01050000
         SLR   @04,@04                                             0305 01051000
         ICM   @04,7,UADSNNEX(R1)                                  0305 01052000
         AR    @04,HEDBPTR                                         0305 01053000
         LR    R1,@04                                              0305 01054000
*          END;                                                    0306 01055000
@DE00304 TM    UADSNFLG(R1),B'10000000'                            0306 01056000
         BNO   @DL00304                                            0306 01057000
*          MARKER2=R1;                  /* SAVE THIS NODE IN MARKER2 */ 01058000
         ST    R1,MARKER2(,MARKMARK)                               0307 01059000
*          GO TO ADDNODE;               /* LOOP TO ADD NEXT DATA ITEM*/ 01060000
         B     ADDNODE                                             0308 01061000
*          RFY R1 UNRSTD;               /* RELEASE WORK REGISTER     */ 01062000
*CHAINTST: /**********************************************************/ 01063000
*          /* SCAN PDE CHAIN TO DETERMINE IF ANY MORE ITEMS HAHE     */ 01064000
*          /* BEEN SPECIFIED.                                        */ 01065000
*          /**********************************************************/ 01066000
*          IF DATACHN^=0                                           0310 01067000
*            THEN                       /* PDE NOT LAST IN CHAIN     */ 01068000
CHAINTST SLR   @04,@04                                             0310 01069000
         ICM   @04,7,MARKER1(MARKMARK)                             0310 01070000
         ICM   @15,7,DATACHN(@04)                                  0310 01071000
         BZ    @RF00310                                            0310 01072000
*              DO;                                                 0311 01073000
*                MARKER1=DATACHN;       /* BUMP MARKER1 TO NEXT PDE  */ 01074000
         SLR   @15,@15                                             0312 01075000
         ICM   @15,7,DATACHN(@04)                                  0312 01076000
         STCM  @15,7,MARKER1(MARKMARK)                             0312 01077000
*                /* IS THIS THE HIGHEST LEVEL BEING AUGMENTED        */ 01078000
*                IF SETFLAG='1'B                                   0313 01079000
*                  THEN                 /* YES - USING 1ST MARKER SET*/ 01080000
         TM    SETFLAG(MARKMARK),B'10000000'                       0313 01081000
         BO    @RT00313                                            0313 01082000
*                    GO TO DUPLSCAN;    /* GO CHECK FOR A DUPLICATE  */ 01083000
*                MARKER2=MARKER3+HEDBPTR; /* NEW NODE BECOMES OLD ONE*/ 01084000
         LR    @04,HEDBPTR                                         0315 01085000
         A     @04,MARKER3(,MARKMARK)                              0315 01086000
         ST    @04,MARKER2(,MARKMARK)                              0315 01087000
*                GO TO ADDNODE;         /* LOOP TO ADD NEXT DATA ITEM*/ 01088000
         B     ADDNODE                                             0316 01089000
*              END;                                                0317 01090000
*          /* IS THIS THE HIGHEST LEVEL BEING AUGMENTED              */ 01091000
*          IF SETFLAG^='1'B                                        0318 01092000
*            THEN                       /* NO - NOT HIGHEST LEVEL    */ 01093000
@RF00310 TM    SETFLAG(MARKMARK),B'10000000'                       0318 01094000
         BO    @RF00318                                            0318 01095000
*              DO;                                                 0319 01096000
*                MARKMARK=MARKMARK-12;  /* RESET 'MARKMARK' TO PREVIOUS 01097000
*                                          SET OF MARKERS            */ 01098000
         SH    MARKMARK,@CH00055                                   0320 01099000
*                SCANTYPE=SCANTYPE-1;   /* DECREMENT SCAN TYPE INDEX */ 01100000
         SLR   @04,@04                                             0321 01101000
         IC    @04,SCANTYPE(,LSCANPTR)                             0321 01102000
         BCTR  @04,0                                               0321 01103000
         STC   @04,SCANTYPE(,LSCANPTR)                             0321 01104000
*                GO TO CHAINTST;        /* LOOP TO SEE IF CHAIN ABOVE   01105000
*                                          IS EXHAUSTED              */ 01106000
         B     CHAINTST                                            0322 01107000
*              END;                                                0323 01108000
*          /* MORE NODES IN THE FINDNODE OUTPUT LIST ?               */ 01109000
*          IF FNOEOLST^='1'B                                       0324 01110000
*            THEN                       /* MORE AUGMENTING TO DO     */ 01111000
@RF00318 TM    FNOEOLST(FINDPTR),B'10000000'                       0324 01112000
         BO    @RF00324                                            0324 01113000
*              DO;                                                 0325 01114000
*                FINDPTR=FINDPTR+4;     /* BUMP LIST INDEX           */ 01115000
         AH    FINDPTR,@CH00108                                    0326 01116000
*                GO TO ADDRBEGN;        /* GO START ALL OVER AGAIN   */ 01117000
         B     ADDRBEGN                                            0327 01118000
*              END;                                                0328 01119000
*          /* IS THERE A FINDNODE WORK AREA TO BE FREED ?            */ 01120000
*          IF FNOUTPTR^=0                                          0329 01121000
*            THEN                       /* YES - MUST ISSUE FREEMAIN */ 01122000
@RF00324 L     @10,FNOUTPTR                                        0329 01123000
         LTR   @10,@10                                             0329 01124000
         BZ    @RF00329                                            0329 01125000
*              DO;                                                 0330 01126000
*              /* ISSUE FREEMAIN                                     */ 01127000
*              GEN (FREEMAIN V,A=FNOUTPTR,MF=(E,DYNFRLST))         0331 01128000
*                REFS(FNOUTPTR,DYNFRLST);                          0331 01129000
         FREEMAIN V,A=FNOUTPTR,MF=(E,DYNFRLST)                          01130000
*              FNOUTPTR=0;              /* INDICATE CORE FREED       */ 01131000
         SLR   @10,@10                                             0332 01132000
         ST    @10,FNOUTPTR                                        0332 01133000
*              END;                                                0333 01134000
*          RETURN;                      /* RETURN TO IKJEFA12        */ 01135000
@EL00001 L     @13,4(,@13)                                         0334 01136000
@EF00001 L     @00,@SIZDATD                                        0334 01137000
         LR    @01,@11                                             0334 01138000
         FREEMAIN R,LV=(0),A=(1)                                        01139000
@ER00001 LM    @14,@12,12(@13)                                     0334 01140000
         BR    @14                                                 0334 01141000
*/* END OF IKJEFA13 - RETURN TO IKJEFA12 TO WRITE NEW USER.          */ 01142000
*SCANERR:  /**********************************************************/ 01143000
*          /* BEGIN CLEAN UP BY RELEASING READ ROUTINE'S BUFFER      */ 01144000
*          /* STORAGE AND SETTING LINKAGE TO 'ADDERCLN' AFTER        */ 01145000
*          /* MESSAGE.                                               */ 01146000
*          /**********************************************************/ 01147000
*          CALL WRITE;                  /* SCRATCH READ ROUTINE STG  */ 01148000
SCANERR  BAL   @14,WRITE                                           0335 01149000
*          OUT1LINK=0;                  /* INDICATE NO 2ND LEVEL MSG */ 01150000
         SLR   @09,@09                                             0336 01151000
         ST    @09,OUT1LINK                                        0336 01152000
*          /* ANALYZE SCAN ROUTINE RETURN CODE TO SET PARAMETER      */ 01153000
*          /* FOR THE APPROPRIATE MESSAGE                            */ 01154000
*          IF SCANRTCD=0                                           0337 01155000
*            THEN                       /* DUPLICATE ITEM IN THE UADS*/ 01156000
         CR    SCANRTCD,@09                                        0337 01157000
         BE    @RT00337                                            0337 01158000
*              GO TO DUPLMSG;           /* GO SET UP FOR 'DUPLICATE' */ 01159000
*          OUT1SCNT='03'X;              /* 1ST LEVEL MSG SEG COUNT =3*/ 01160000
         MVI   OUT1SCNT,X'03'                                      0339 01161000
*          OUT1SEG1=ADDMSG(28);         /* PTR TO 'LEVEL UNSUPPORTED'*/ 01162000
         L     @09,ADDMSG+108(,MSGBASE)                            0340 01163000
         ST    @09,OUT1SEG1                                        0340 01164000
*          USRIDOF=35;                  /* OFFSET FOR USERID INSERTN */ 01165000
         MVC   USRIDOF(2),@CH00334                                 0341 01166000
*          OUT1SEG2=ADDR(USRIDSEG);     /* 2ND SEGMT = USERID        */ 01167000
         LA    @09,USRIDSEG                                        0342 01168000
         ST    @09,OUT1SEG2                                        0342 01169000
*          /* WHICH LEVEL IS UNSUPPORTED ?                           */ 01170000
*          IF SCANTYPE=1                                           0343 01171000
*            THEN                       /* PASSWORDS UNSUPPORTED     */ 01172000
         CLI   SCANTYPE(LSCANPTR),1                                0343 01173000
         BNE   @RF00343                                            0343 01174000
*              OUT1SEG3=ADDMSG(30);     /* 3RD SEGMT = 'PASSWORDS'   */ 01175000
         L     @09,ADDMSG+116(,MSGBASE)                            0344 01176000
         ST    @09,OUT1SEG3                                        0344 01177000
*            ELSE                       /* ACCOUNT IS UNSUPPORTED    */ 01178000
*              OUT1SEG3=ADDMSG(31);     /* 3RD SEGMT = 'ACCT NMBRS'  */ 01179000
         B     @RC00343                                            0345 01180000
@RF00343 L     @09,ADDMSG+120(,MSGBASE)                            0345 01181000
         ST    @09,OUT1SEG3                                        0345 01182000
*          GOTO INFOMSG;                /* GO PUT OUT MESSAGE & LEAVE*/ 01183000
         B     INFOMSG                                             0346 01184000
*DUPLMSG:  /* CTL. PASSED HERE TO SET 'DUPLICATE ITEM' MESSAGE       */ 01185000
*          OUT1SCNT='05'X;              /* 1ST LEVEL MSG SEG COUNT =5*/ 01186000
DUPLMSG  MVI   OUT1SCNT,X'05'                                      0347 01187000
*          OUT1SEG1=ADDMSG(19);         /* PTR TO 'ALREADY EXISTS'   */ 01188000
         L     @09,ADDMSG+72(,MSGBASE)                             0348 01189000
         ST    @09,OUT1SEG1                                        0348 01190000
*          OUT1SEG3=ADDR(INSTSEG);      /* POINT TO INSERT SEGMENT   */ 01191000
         LA    @09,INSTSEG                                         0349 01192000
         ST    @09,OUT1SEG3                                        0349 01193000
*          INSTLN=DATALNTH+4;           /* LENGTH OF INSERT SEGMENT  */ 01194000
         SLR   @09,@09                                             0350 01195000
         ICM   @09,7,MARKER1(MARKMARK)                             0350 01196000
         LH    @07,DATALNTH(,@09)                                  0350 01197000
         LA    @04,4                                               0350 01198000
         AR    @04,@07                                             0350 01199000
         STH   @04,INSTLN                                          0350 01200000
*          INSTOF=10;                   /* OFFSET FOR TEXT INSERTION */ 01201000
         MVC   INSTOF(2),@CH00355                                  0351 01202000
*          INSTTX(1:DATALNTH)=          /* DATA ITEM VIA PARSE PDE   */ 01203000
*            DATAITEM;                                             0352 01204000
         BCTR  @07,0                                               0352 01205000
         L     @09,DATAADR(,@09)                                   0352 01206000
         EX    @07,@SM00425                                        0352 01207000
*          OUT1SEG4=ADDMSG(38);         /* ADDR OF 'UNDER USERID' SEG*/ 01208000
         L     @09,ADDMSG+148(,MSGBASE)                            0353 01209000
         ST    @09,OUT1SEG4                                        0353 01210000
*          USRIDOF=25;                  /* OFFSET FOR USERID INSERTN */ 01211000
         MVC   USRIDOF(2),@CH00368                                 0354 01212000
*          OUT1SEG5=ADDR(USRIDSEG);     /* ADDR OF USERID SEGMENT    */ 01213000
         LA    @09,USRIDSEG                                        0355 01214000
         ST    @09,OUT1SEG5                                        0355 01215000
*          /* IS IT A PASSWORD DUPLICATE ?                           */ 01216000
*          IF SCANTYPE=1                                           0356 01217000
*            THEN                       /* PASSWORD DUPLICATED       */ 01218000
         CLI   SCANTYPE(LSCANPTR),1                                0356 01219000
         BNE   @RF00356                                            0356 01220000
*              OUT1SEG2=ADDMSG(21);     /* PTR TO 'PASSWORD' PREFIX  */ 01221000
         L     @09,ADDMSG+80(,MSGBASE)                             0357 01222000
         ST    @09,OUT1SEG2                                        0357 01223000
*          /* IS IT AN ACCOUNT NUMBER DUPLICATE ?                    */ 01224000
*          IF SCANTYPE=2                                           0358 01225000
*            THEN                       /* ACCOUNT NUMBER DUPLICATED */ 01226000
@RF00356 CLI   SCANTYPE(LSCANPTR),2                                0358 01227000
         BNE   @RF00358                                            0358 01228000
*              OUT1SEG2=ADDMSG(22);     /* 'ACCOUNT NUMBER' PREFIX   */ 01229000
         L     @09,ADDMSG+84(,MSGBASE)                             0359 01230000
         ST    @09,OUT1SEG2                                        0359 01231000
*          IF SCANTYPE=3                                           0360 01232000
*            THEN                       /* MUST BE A PROCNAME DUPLICT*/ 01233000
@RF00358 CLI   SCANTYPE(LSCANPTR),3                                0360 01234000
         BNE   @RF00360                                            0360 01235000
*              OUT1SEG2=ADDMSG(23);     /* PTR TO 'PROCNAME' PREFIX  */ 01236000
         L     @09,ADDMSG+88(,MSGBASE)                             0361 01237000
         ST    @09,OUT1SEG2                                        0361 01238000
*          /* FALL THRU TO ISSUE ERROR MESSAGE                       */ 01239000
*INFOMSG:  /**********************************************************/ 01240000
*          /* INFOMSG: CONTROL PASSED HERE TO OUTPUT AN ERROR        */ 01241000
*          /* MESSAGE AND RETURN TO IKJEFA12(ADDERCLN).              */ 01242000
*          /**********************************************************/ 01243000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 01244000
@RF00360 DS    0H                                                  0362 01245000
INFOMSG  DS    0H                                                  0363 01246000
*          R1=IOPLPTR;                  /* PARAMETER LIST ADDR TO R1 */ 01247000
         L     @10,IOPLPTR(,COMMPTR)                               0363 01248000
         LR    R1,@10                                              0363 01249000
*          PTPBOPUT=ADDR(OUTLNDS);      /* POINT TO LINE DESCRIPTOR  */ 01250000
         L     @10,PTPBPTR(,@10)                                   0364 01251000
         LA    @09,OUTLNDS                                         0364 01252000
         ST    @09,PTPBOPUT(,@10)                                  0364 01253000
*          /* ISSUE OS/360 PUTLINE MACRO TO WRITE THE MESSAGE        */ 01254000
*          GEN (PUTLINE ,MF=(E,(1)))                               0365 01255000
*            REFS(R1);                                             0365 01256000
         PUTLINE ,MF=(E,(1))                                            01257000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 01258000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 01259000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 01260000
         LR    RETNCODE,R15                                        0368 01261000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 01262000
*          IF RETNCODE^=0               /* WAS PUTLINE SUCCESSFUL    */ 01263000
*            THEN                       /* NO,                       */ 01264000
         LTR   RETNCODE,RETNCODE                                   0370 01265000
         BZ    @RF00370                                            0370 01266000
*              PUTERR='1'B;             /* TURN ON PUTLINE ERROR FLAG*/ 01267000
         OI    PUTERR(COMMPTR),B'00100000'                         0371 01268000
*ERREXIT:  /* IS THERE A FINDNODE WORK AREA TO BE FREED ?            */ 01269000
*          IF FNOUTPTR^=0                                          0372 01270000
*            THEN                       /* YES - MUST ISSUE FREEMAIN */ 01271000
@RF00370 DS    0H                                                  0372 01272000
ERREXIT  L     @10,FNOUTPTR                                        0372 01273000
         LTR   @10,@10                                             0372 01274000
         BZ    @RF00372                                            0372 01275000
*              /* ISSUE FREEMAIN                                     */ 01276000
*              GEN (FREEMAIN V,A=FNOUTPTR,MF=(E,DYNFRLST))         0373 01277000
*                REFS(FNOUTPTR,DYNFRLST);                          0373 01278000
         FREEMAIN V,A=FNOUTPTR,MF=(E,DYNFRLST)                          01279000
*          RETURN TO ADDERCLN;                                     0374 01280000
@RF00372 L     @13,4(,@13)                                         0374 01281000
         L     @00,@SIZDATD                                        0374 01282000
         LR    @01,@11                                             0374 01283000
         FREEMAIN R,LV=(0),A=(1)                                        01284000
         L     @14,@CV00115                                        0374 01285000
         LM    @15,@12,16(@13)                                     0374 01286000
         BR    @14                                                 0374 01287000
*NOSPACE:  /**********************************************************/ 01288000
*          /* NOSPACE: CONTROL PASSED HERE TO CALL WRITE AND RETURN  */ 01289000
*          /* TO IKJEFA12.                                           */ 01290000
*          /**********************************************************/ 01291000
*          CALL WRITE;                  /* FREE READ ROUTINE STORAGE */ 01292000
NOSPACE  BAL   @14,WRITE                                           0375 01293000
*          /* IS THERE A FINDNODE WORK AREA TO BE FREED ?            */ 01294000
*          IF FNOUTPTR^=0                                          0376 01295000
*            THEN                       /* YES - MUST ISSUE FREEMAIN */ 01296000
         L     @10,FNOUTPTR                                        0376 01297000
         LTR   @10,@10                                             0376 01298000
         BZ    @RF00376                                            0376 01299000
*              /* ISSUE FREEMAIN                                     */ 01300000
*              GEN (FREEMAIN V,A=FNOUTPTR,MF=(E,DYNFRLST))         0377 01301000
*                REFS(FNOUTPTR,DYNFRLST);                          0377 01302000
         FREEMAIN V,A=FNOUTPTR,MF=(E,DYNFRLST)                          01303000
*          RETURN TO RDGETERR;          /* TREAT AS A READ ROUTINE 0378 01304000
*                                          GETMAIN FAILURE           */ 01305000
@RF00376 L     @13,4(,@13)                                         0378 01306000
         L     @00,@SIZDATD                                        0378 01307000
         LR    @01,@11                                             0378 01308000
         FREEMAIN R,LV=(0),A=(1)                                        01309000
         L     @14,@CV00114                                        0378 01310000
         LM    @15,@12,16(@13)                                     0378 01311000
         BR    @14                                                 0378 01312000
*WRITE:    /**********************************************************/ 01313000
*          /* WRITE: THIS ROUTINE CALLS IKJEFA52 TO FREE THE STORAGE */ 01314000
*          /*   ACQUIRED BY THE READ ROUTINE (IKJEFA51).             */ 01315000
*          /**********************************************************/ 01316000
*          PROC;                                                   0379 01317000
WRITE    STM   @14,@12,@SA00002                                    0379 01318000
*          ACIOFL05='0'B;               /* MAKE CERTAIN NO WRITING 0380 01319000
*                                          TAKES PLACE               */ 01320000
         L     @10,ACIOPTR(,COMMPTR)                               0380 01321000
         NI    ACIOFL05(@10),B'11110111'                           0380 01322000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER POINTER*/ 01323000
*          R1=ACIOPTR;                  /* PARAMETER BLK ADDR TO R1  */ 01324000
         LR    R1,@10                                              0382 01325000
*          CALL IKJEFA52;               /* INVOKE WRITE PGM -IKJEFA52*/ 01326000
         L     @15,@CV00112                                        0383 01327000
         BALR  @14,@15                                             0383 01328000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER POINTER */ 01329000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 01330000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 01331000
         LR    RETNCODE,R15                                        0386 01332000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 01333000
*          /* CHECK RETURN CODE                                      */ 01334000
*          IF RETNCODE^=0                                          0388 01335000
*            THEN                       /* WRITE ROUTINE FAILED      */ 01336000
         LTR   RETNCODE,RETNCODE                                   0388 01337000
         BZ    @RF00388                                            0388 01338000
*               ERRFLG='1'B;            /* TURN ON ERROR FLAG        */ 01339000
         OI    ERRFLG(COMMPTR),B'01000000'                         0389 01340000
*          READMNSW='0'B;               /* INDICATE THAT READ ROUTINE   01341000
*                                          STORAGE HAS BEEN RELEASED */ 01342000
@RF00388 NI    READMNSW(COMMPTR),B'11111101'                       0390 01343000
*          END WRITE;                                              0391 01344000
@EL00002 DS    0H                                                  0391 01345000
@EF00002 DS    0H                                                  0391 01346000
@ER00002 LM    @14,@12,@SA00002                                    0391 01347000
         BR    @14                                                 0391 01348000
*GETSPACE: /**********************************************************/ 01349000
*          /* GETSPACE: THIS ROUTINE CALLS IKJEFA53 TO OBTAIN SPACE  */ 01350000
*          /*   IN A MEMBER BLOCK                                    */ 01351000
*          /**********************************************************/ 01352000
*          PROC;                                                   0392 01353000
GETSPACE STM   @14,@06,@SA00003                                    0392 01354000
         STM   @08,@12,@SA00003+36                                 0392 01355000
*          RFY R1 RSTD;                 /* RESTRICT PARAMETER REG    */ 01356000
*RETRY:    R1=ADDR(SPACEPB);            /* ADDR OF PARAMETER BLOCK   */ 01357000
RETRY    LA    R1,SPACEPB                                          0394 01358000
*          CALL IKJEFA53;               /* INVOKE GETSPACE MODULE    */ 01359000
         L     @15,@CV00113                                        0395 01360000
         BALR  @14,@15                                             0395 01361000
*          RFY R1 UNRSTD;               /* RELEASE PARAMETER REG     */ 01362000
*          RFY R15 RSTD;                /* RESTRICT RETURN CODE REG  */ 01363000
*          RETNCODE=R15;                /* SAVE RETURN CODE          */ 01364000
         LR    RETNCODE,R15                                        0398 01365000
*          RFY R15 UNRSTD;              /* RELEASE RETURN CODE REG   */ 01366000
*          /* CHECK RETURN CODE                                      */ 01367000
*          IF RETNCODE<8                                           0400 01368000
*            THEN                       /* SPACE AVAILABLE           */ 01369000
         CH    RETNCODE,@CH00040                                   0400 01370000
         BL    @RT00400                                            0400 01371000
*              RETURN;                                             0401 01372000
*          /* SEE IF THE EXTRA BLOCK IS AVAILABLE                    */ 01373000
*          IF ACIOFL04='0'B|XBLKUSED='1'B                          0402 01374000
*            THEN                       /* EXTRA BLOCK NOT AVAILABLE */ 01375000
         L     @09,ACIOPTR(,COMMPTR)                               0402 01376000
         TM    ACIOFL04(@09),B'00010000'                           0402 01377000
         BZ    @RT00402                                            0402 01378000
         TM    XBLKUSED(COMMPTR),B'00000001'                       0402 01379000
         BNO   @RF00402                                            0402 01380000
@RT00402 DS    0H                                                  0403 01381000
*              DO;                                                 0403 01382000
*                /* ACTION TAKEN HERE TO RELEASE THE READ ROUTINE  0404 01383000
*                   BUFFER AND PUT OUT A MESSAGE INDICATING THAT   0404 01384000
*                   WORKING STORAGE HAS BEEN EXHAUSTED IN          0404 01385000
*                   ATTEMPTING TO SATISFY THE ADD COMMAND.         0404 01386000
*                   DECIDE WHICH MESSAGE TO WRITE - IF BLOCK       0404 01387000
*                   WAS NOT AVAILABLE, SAY 'NO SPACE'                */ 01388000
*                IF ACIOFL04='0'B                                  0404 01389000
*                  THEN                 /* NO EXTRA BLOCK THERE      */ 01390000
         L     @09,ACIOPTR(,COMMPTR)                               0404 01391000
         TM    ACIOFL04(@09),B'00010000'                           0404 01392000
         BNZ   @RF00404                                            0404 01393000
*                    RETURN TO NOSPACE; /* TREAT AS A READ ROUTINE 0405 01394000
*                                           GETMAIN FAILURE          */ 01395000
         LA    @14,NOSPACE                                         0405 01396000
         LM    @15,@06,@SA00003+4                                  0405 01397000
         LM    @08,@12,@SA00003+36                                 0405 01398000
         BR    @14                                                 0405 01399000
*                CALL WRITE;            /* SCRATCH READ ROUTINE STG  */ 01400000
@RF00404 BAL   @14,WRITE                                           0406 01401000
*                /* SET PARAMETERS FOR PUTLINE MESSAGE               */ 01402000
*                OUT1SCNT='02'X;        /* 1ST LEVEL MSG SEG COUNT =2*/ 01403000
         MVI   OUT1SCNT,X'02'                                      0407 01404000
*                OUT1SEG1=ADDMSG(32);   /* ADDR OF 'UNABLE TO ADD'   */ 01405000
         L     @09,ADDMSG+124(,MSGBASE)                            0408 01406000
         ST    @09,OUT1SEG1                                        0408 01407000
*                USRIDOF=35;            /* OFFSET FOR USERID INSERTN */ 01408000
         MVC   USRIDOF(2),@CH00334                                 0409 01409000
*                OUT1SEG2=ADDR(USRIDSEG); /* ADDR OF USERID SEGMT    */ 01410000
         LA    @09,USRIDSEG                                        0410 01411000
         ST    @09,OUT1SEG2                                        0410 01412000
*                OUT2SCNT='02'X;        /* 2ND LEVEL MSG SEG COUNT =1*/ 01413000
         MVI   OUT2SCNT,X'02'                                      0411 01414000
*                OUT2SEG1=ADDMSG(33);   /* 2ND LVL = 'SIMPLER FORM'  */ 01415000
         L     @09,ADDMSG+128(,MSGBASE)                            0412 01416000
         ST    @09,OUT2SEG1                                        0412 01417000
*                USERSEG2=USRIDSEG;     /* INITIALIZE ADD'L SEGMENT  */ 01418000
         MVC   USERSEG2(11),USRIDSEG                               0413 01419000
*                USRSG2OF=53;           /* OFFSET FOR 2ND LVL INSERTN*/ 01420000
         MVC   USRSG2OF(2),@CH00382                                0414 01421000
*                OUT2SEG2=ADDR(USERSEG2); /* ADDR OF ADD'L USRSEG    */ 01422000
         LA    @10,USERSEG2                                        0415 01423000
         ST    @10,OUT2SEG2                                        0415 01424000
*                RETURN TO INFOMSG;     /* GO PUT OUT MESSAGE & LEAVE*/ 01425000
         LA    @14,INFOMSG                                         0416 01426000
         LM    @15,@06,@SA00003+4                                  0416 01427000
         LM    @08,@12,@SA00003+36                                 0416 01428000
         BR    @14                                                 0416 01429000
*              END;                                                0417 01430000
*          /* INITIALIZE THE EXTRA BLOCK ACQUIRED BY THE READ      0418 01431000
*             SUBROUTINE.                                          0418 01432000
*             FIRST, MAKE SURE THAT 9 EXTENSIONS HAVE NOT BEEN USED  */ 01433000
*          IF ACIONMBR>9                                           0418 01434000
*            THEN                       /* TOO MANY EXTENSIONS       */ 01435000
@RF00402 L     @09,ACIOPTR(,COMMPTR)                               0418 01436000
         CLI   ACIONMBR(@09),9                                     0418 01437000
         BNH   @RF00418                                            0418 01438000
*              DO;                                                 0419 01439000
*                /* RELEASE READ ROUTINE BUFFER AND PUT OUT A MESSAGE   01440000
*                   INDICATING THAT EXTENSION BLOCKS ARE EXHAUSTED   */ 01441000
*                CALL WRITE;            /* SCRATCH READ ROUTINE STG  */ 01442000
         BAL   @14,WRITE                                           0420 01443000
*                /* SET PARAMETERS FOR PUTLINE MESSAGE               */ 01444000
*                OUT1SCNT='02'X;        /* 1ST LEVEL MSG SEG COUNT =2*/ 01445000
         MVI   OUT1SCNT,X'02'                                      0421 01446000
*                OUT1SEG1=ADDMSG(32);   /* ADDR OF 'UNABLE TO ADD'   */ 01447000
         L     @09,ADDMSG+124(,MSGBASE)                            0422 01448000
         ST    @09,OUT1SEG1                                        0422 01449000
*                USRIDOF=35;            /* OFFSET FOR USERID INSERTN */ 01450000
         MVC   USRIDOF(2),@CH00334                                 0423 01451000
*                OUT1SEG2=ADDR(USRIDSEG); /* ADDR OF USERID SEGMENT  */ 01452000
         LA    @09,USRIDSEG                                        0424 01453000
         ST    @09,OUT1SEG2                                        0424 01454000
*                OUT2SCNT='02'X;        /* 2ND LEVEL MSG SEG COUNT =2*/ 01455000
         MVI   OUT2SCNT,X'02'                                      0425 01456000
*                OUT2SEG1=ADDMSG(34);   /* ADDR OF 'EXTENSNS EXHAUSTD*/ 01457000
         L     @09,ADDMSG+132(,MSGBASE)                            0426 01458000
         ST    @09,OUT2SEG1                                        0426 01459000
*                USERSEG2=USRIDSEG;     /* INITIALIZE ADD'L SEGMENT  */ 01460000
         MVC   USERSEG2(11),USRIDSEG                               0427 01461000
*                USRSG2OF=48;           /* OFFSET FOR 2ND LVL INSERTN*/ 01462000
         MVC   USRSG2OF(2),@CH00385                                0428 01463000
*                OUT2SEG2=ADDR(USERSEG2); /* ADDR OF ADD'L USER SEGMT*/ 01464000
         LA    @10,USERSEG2                                        0429 01465000
         ST    @10,OUT2SEG2                                        0429 01466000
*                RETURN TO INFOMSG;     /* GO PUT OUT MESSAGE & LEAVE*/ 01467000
         LA    @14,INFOMSG                                         0430 01468000
         LM    @15,@06,@SA00003+4                                  0430 01469000
         LM    @08,@12,@SA00003+36                                 0430 01470000
         BR    @14                                                 0430 01471000
*              END;                                                0431 01472000
*          HEDBPTR=ACIONMBR*UADSBLNG+ACIOBUFR;/* POINT TO EXTRA BLOCK*/ 01473000
@RF00418 L     @09,ACIOPTR(,COMMPTR)                               0432 01474000
         SLR   @06,@06                                             0432 01475000
         IC    @06,ACIONMBR(,@09)                                  0432 01476000
         LR    @04,@06                                             0432 01477000
         MH    @04,UADSBLNG(,HEDBPTR)                              0432 01478000
         SLR   @15,@15                                             0432 01479000
         ICM   @15,7,ACIOBUFR(@09)                                 0432 01480000
         AR    @04,@15                                             0432 01481000
         LR    HEDBPTR,@04                                         0432 01482000
*          DHED=DHED&&DHED;             /* CLEAR HEADER PORTION      */ 01483000
         XC    DHED(64,HEDBPTR),DHED(HEDBPTR)                      0433 01484000
*          UADSBLNG=ACIOBUFR->UADSBLNG; /* MEMBER BLOCK LENGTH       */ 01485000
         LH    @09,UADSBLNG(,@15)                                  0434 01486000
         STH   @09,UADSBLNG(,HEDBPTR)                              0434 01487000
*          UADSFSQP=LENGTH(UADSMHDR);   /* OFFSET TO FSQE            */ 01488000
         MVC   UADSFSQP(2,HEDBPTR),@CH00042                        0435 01489000
*          UADSUSER=BLDLNAME;           /* START WITH BASE MEMBER NAM*/ 01490000
         L     @09,BLDLPTR(,COMMPTR)                               0436 01491000
         MVC   UADSUSER(8,HEDBPTR),BLDLNAME(@09)                   0436 01492000
*          DHED(USRIDLN+1)=ACIONMBR|'0';/* POINT TO INDEX BYTE     0437 01493000
*                                           POSITION & MAKE IT EBCDIC*/ 01494000
         LH    @09,USRIDLN                                         0437 01495000
         O     @06,@CF00386                                        0437 01496000
         STC   @06,DHED(@09,HEDBPTR)                               0437 01497000
*          FSQEPTR=HEDBPTR+UADSFSQP;    /* BASE FOR FREE SP Q ELEMENT*/ 01498000
         LH    @09,UADSFSQP(,HEDBPTR)                              0438 01499000
         LR    FSQEPTR,HEDBPTR                                     0438 01500000
         AR    FSQEPTR,@09                                         0438 01501000
*          FSQELNTH=UADSBLNG-UADSFSQP;  /* LENGTH OF FREE AREA = TOTAL  01502000
*                                          BLOCK LNTH - HDR LENGTH   */ 01503000
         LCR   @09,@09                                             0439 01504000
         AH    @09,UADSBLNG(,HEDBPTR)                              0439 01505000
         STH   @09,FSQELNTH(,FSQEPTR)                              0439 01506000
*          FSQELBIT(7:8)='00'B;         /* TRUNCATED TO MULTIPLE OF 4*/ 01507000
         LA    @06,1                                               0440 01508000
         LR    @04,FSQEPTR                                         0440 01509000
         AR    @04,@06                                             0440 01510000
         NI    FSQELBIT(@04),B'11111100'                           0440 01511000
*          FSQENEXT=0;                  /* THIS IS THE ONLY FSQE   0441 01512000
*                                          ON THE CHAIN              */ 01513000
         SLR   @04,@04                                             0441 01514000
         STH   @04,FSQENEXT(,FSQEPTR)                              0441 01515000
*          HEDBPTR=ACIOBUFR;            /* RESTORE BASE PTR          */ 01516000
         LR    HEDBPTR,@15                                         0442 01517000
*          SPACMCNT=SPACMCNT+1;         /* INCREMENT GETSPACE COUNT     01518000
*                                          OF MEMBER BLOCKS          */ 01519000
         AH    @06,SPACMCNT                                        0443 01520000
         STH   @06,SPACMCNT                                        0443 01521000
*          XBLKUSED='1'B;               /* SIGNAL 'EXTRA BLOCK USED' */ 01522000
         OI    XBLKUSED(COMMPTR),B'00000001'                       0444 01523000
*          /* SET UP TO CLEAR THE WORK AREA TO ZEROES                */ 01524000
*          RFY (R0,R1,R15) RSTD;        /* RESTRICT WORK REGISTERS   */ 01525000
*          R0=FSQEPTR+4;                /* GET TO ADDRESS            */ 01526000
         LA    @14,4                                               0446 01527000
         LR    R0,FSQEPTR                                          0446 01528000
         AR    R0,@14                                              0446 01529000
*          R1=FSQELNTH-4;               /* LOAD R1 WITH LENGTH       */ 01530000
         SR    @09,@14                                             0447 01531000
         LR    R1,@09                                              0447 01532000
*          R15=0;                       /* LOAD R15 WITH 0 LENGTH    */ 01533000
         LR    R15,@04                                             0448 01534000
*          GEN (MVCL  R0,R14)           /* CLEAR GOTTEN CORE         */ 01535000
*            REFS(R0,R1,R15);                                      0449 01536000
         MVCL  R0,R14                                                   01537000
*          RFY (R0,R1,R15) UNRSTD;      /* RELEASE WORK REGISTERS    */ 01538000
*          GOTO RETRY;                  /* RETRY GETSPACE            */ 01539000
         B     RETRY                                               0451 01540000
*          END GETSPACE;                                           0452 01541000
@EL00003 DS    0H                                                  0452 01542000
@EF00003 DS    0H                                                  0452 01543000
@ER00003 LM    @14,@06,@SA00003                                    0452 01544000
         LM    @08,@12,@SA00003+36                                 0452 01545000
         BR    @14                                                 0452 01546000
*IKJLSCAN: /**********************************************************/ 01547000
*          /* IKJLSCAN - 'LATSCAN' SUBROUTINE -                      */ 01548000
*          /*    SCANS THE INFORMATION FIELDS ON A GIVEN LEVEL IN THE*/ 01549000
*          /*    UADS FOR AN INFORMATION ITEM WHICH MATCHES A GIVEN  */ 01550000
*          /*    INPUT ITEM FROM THE PDL.                            */ 01551000
*          /*                                                        */ 01552000
*          /* IKJLSCAN IS ENTERED FROM 'FINDNODE' OR 'ADDER' WITH    */ 01553000
*          /*    LSCANPTR POINTING TO A PARAMETER BLOCK:             */ 01554000
*          /*                                                        */ 01555000
*          /*         +0 ********************************            */ 01556000
*          /*            *       *                      *            */ 01557000
*          /*            * TYPE  *     PDE ADDRESS      *            */ 01558000
*          /*            *       *                      *            */ 01559000
*          /*         +4 ********************************            */ 01560000
*          /*            *       *                      *            */ 01561000
*          /*            * FLAGS * BEGINNING NODE ADDR  *            */ 01562000
*          /*            *       *                      *            */ 01563000
*          /*         +8 ********************************            */ 01564000
*          /*            *                              *            */ 01565000
*          /*            *        LATSCAN ANSWER        *            */ 01566000
*          /*            *                              *            */ 01567000
*          /*            ********************************            */ 01568000
*          /*                                                        */ 01569000
*          /*    WHERE -                                             */ 01570000
*          /*       TYPE     = AN INDEX TO A DATA ATTRIBUTE TABLE    */ 01571000
*          /*                  CONTAINING LENGTH AND OFFSET INFO.    */ 01572000
*          /*                   '01'X  = PASSWORD                    */ 01573000
*          /*                   '02'X  = ACCOUNT NUMBER              */ 01574000
*          /*                   '03'X  = PROCEDURE NAME              */ 01575000
*          /*       PDE ADDR = ADDR OF PARSE PDE LOCATING INPUT      */ 01576000
*          /*                  SCAN ARGUMENT                         */ 01577000
*          /*       FLAGS      DEFINED AS FOLLOWS:                   */ 01578000
*          /*                   BIT 0 = 0  'LOCAL' LATERAL SCAN      */ 01579000
*          /*                         = 1  'TOTAL' LATERAL SCAN      */ 01580000
*          /*                   BIT 2-7 UNUSED                       */ 01581000
*          /*       BEGINNING NODE ADDR =                            */ 01582000
*          /*                  ADDR OF NODE WHERE SCAN IS TO START   */ 01583000
*          /*       LATSCAN ANSWER (SUPPLIED BY LATSCAN ROUTINE) =   */ 01584000
*          /*                  ADDR OF NODE REPRESENTING MATCHING    */ 01585000
*          /*                  INFO                                  */ 01586000
*          /*                               -OR-                     */ 01587000
*          /*                  ADDR OF LAST NODE IN SCANNED CHAIN    */ 01588000
*          /*                                                        */ 01589000
*          /* TABLES, WORK AREAS -                                   */ 01590000
*          /*    DTATBL - DATA ITEM ATTRIBUTE TABLE                  */ 01591000
*          /*                                                        */ 01592000
*          /* IKJLSCAN RETURNS TO ITS CALLER WITH A RETURN CODE IN   */ 01593000
*          /*    SCANRTCD AS FOLLOWS:                                */ 01594000
*          /*       0 - INFORMATION FOUND, ANSWER CONTAINS NODE ADDR */ 01595000
*          /*       4 - INFORMATION NOT FOUND, ANSWER POINTS TO LAST */ 01596000
*          /*             NODE IN SCANNED CHAIN                      */ 01597000
*          /*       8 - LEVEL NOT SUPPORTED FOR THIS USER            */ 01598000
*          /*             (ANSWER PTR UNALTERED)                     */ 01599000
*          /**********************************************************/ 01600000
*          PROC;                                                   0453 01601000
IKJLSCAN STM   @14,@01,12(@13)                                     0453 01602000
         STM   @03,@12,32(@13)                                     0453 01603000
*          /* FIRST, SEE IF THIS LEVEL IS SUPPORTED                  */ 01604000
*          IF SCANBEGN->UADSNDAT=0                                 0454 01605000
*            THEN                       /* INFO OFFSET = 0 MEANS   0454 01606000
*                                          NON-SUPPORT               */ 01607000
         SLR   @10,@10                                             0454 01608000
         ICM   @10,7,SCANBEGN(LSCANPTR)                            0454 01609000
         L     @10,UADSNDAT(,@10)                                  0454 01610000
         LTR   @10,@10                                             0454 01611000
         BNZ   @RF00454                                            0454 01612000
*              DO;                                                 0455 01613000
*              SCANRTCD=8;              /* INDICATE 'NON-SUPPORT'    */ 01614000
         LA    SCANRTCD,8                                          0456 01615000
*              RETURN;                  /* RETURN TO CALLER          */ 01616000
@EL00004 DS    0H                                                  0457 01617000
@EF00004 DS    0H                                                  0457 01618000
@ER00004 LM    @14,@01,12(@13)                                     0457 01619000
         LM    @03,@12,32(@13)                                     0457 01620000
         BR    @14                                                 0457 01621000
*              END;                                                0458 01622000
*          RELFACTR=HEDBPTR+DTAOFFST(SCANTYPE); /* COMPUTE RELOCATION   01623000
*                                                  FACTOR FOR DATA   */ 01624000
@RF00454 SLR   @10,@10                                             0459 01625000
         IC    @10,SCANTYPE(,LSCANPTR)                             0459 01626000
         SLA   @10,2                                               0459 01627000
         LA    @15,DTATBL                                          0459 01628000
         LR    RELFACTR,HEDBPTR                                    0459 01629000
         LA    @01,0(@10,@15)                                      0459 01630000
         AL    @01,@CF00420                                        0459 01631000
         SLR   @00,@00                                             0459 01632000
         IC    @00,DTAOFFST-2(,@01)                                0459 01633000
         AR    RELFACTR,@00                                        0459 01634000
*          NODEPTR=SCANBEGN;            /* INITIALIZE PTR TO 1ST NODE*/ 01635000
         SLR   NODEPTR,NODEPTR                                     0460 01636000
         ICM   NODEPTR,7,SCANBEGN(LSCANPTR)                        0460 01637000
*          DATAPTR=NODEPTR->UADSNDAT+RELFACTR; /* POINT TO DATA FIELD*/ 01638000
         LR    DATAPTR,RELFACTR                                    0461 01639000
         A     DATAPTR,UADSNDAT(,NODEPTR)                          0461 01640000
*          ARGUMENT=INFOFLD(1:PDDATLNG);/* PAD ARGUMENT WITH BLANKS  */ 01641000
         MVI   ARGUMENT+1,C' '                                     0462 01642000
         MVC   ARGUMENT+2(38),ARGUMENT+1                           0462 01643000
         SLR   @14,@14                                             0462 01644000
         ICM   @14,7,SCANPDE(LSCANPTR)                             0462 01645000
         LH    @09,PDDATLNG(,@14)                                  0462 01646000
         BCTR  @09,0                                               0462 01647000
         L     @01,PDDATPTR(,@14)                                  0462 01648000
         EX    @09,@SM00433                                        0462 01649000
*          COMPLNTH=DTALNTH(SCANTYPE);  /* SET COMPARE LENGTH FROM 0463 01650000
*                                          ATTRIBUTE TABLE           */ 01651000
         AL    @15,@CF00344                                        0463 01652000
         SLR   COMPLNTH,COMPLNTH                                   0463 01653000
         IC    COMPLNTH,DTALNTH-3(@10,@15)                         0463 01654000
*LSCMPARE: /* SEE IF A LENGTH COMPARISON IS NECESSARY                */ 01655000
*          IF DTAFLGS(SCANTYPE,1)='1'B                             0464 01656000
*            THEN                       /* DATA LENGTH IS VARIABLE   */ 01657000
LSCMPARE SLR   @10,@10                                             0464 01658000
         IC    @10,SCANTYPE(,LSCANPTR)                             0464 01659000
         SLA   @10,2                                               0464 01660000
         LA    @15,DTATBL                                          0464 01661000
         ALR   @15,@10                                             0464 01662000
         AL    @15,@CF00419                                        0464 01663000
         TM    DTAFLGS(@15),B'10000000'                            0464 01664000
         BNO   @RF00464                                            0464 01665000
*              /* SEE IF THE LENGTHS ARE EQUAL                       */ 01666000
*              IF PDDATLNG^=VLNTHLNG                               0465 01667000
*                THEN                   /* LENGTHS UNEQUAL - NO MATCH*/ 01668000
         SLR   @10,@10                                             0465 01669000
         ICM   @10,7,SCANPDE(LSCANPTR)                             0465 01670000
         SLR   @15,@15                                             0465 01671000
         IC    @15,VLNTHLNG(,DATAPTR)                              0465 01672000
         CH    @15,PDDATLNG(,@10)                                  0465 01673000
         BNE   @RT00465                                            0465 01674000
*                  GO TO NOMATCH;       /* GO SEE IF MORE NODES EXIST*/ 01675000
*                ELSE                   /* LENGTHS MATCH-CLR TO COMPR*/ 01676000
*                  DO;                                             0467 01677000
*                    COMPLNTH=VLNTHLNG; /* PICK UP VARIABLE LENGTH   */ 01678000
         LR    COMPLNTH,@15                                        0468 01679000
*                    DATAPTR=DATAPTR+1; /* STEP PTR PAST LENGTH BYTE */ 01680000
         AH    DATAPTR,@CH00032                                    0469 01681000
*                  END;                                            0470 01682000
*          /* SEE IF WE HAVE A MATCH                                 */ 01683000
*          IF ARGUMENT(1:COMPLNTH)=UADSFLD(1:COMPLNTH)             0471 01684000
*            THEN                       /* WE FOUND DATA SOUGHT FOR  */ 01685000
@RF00464 LR    @10,COMPLNTH                                        0471 01686000
         BCTR  @10,0                                               0471 01687000
         EX    @10,@SC00435                                        0471 01688000
         BNE   @RF00471                                            0471 01689000
*              DO;                                                 0472 01690000
*              SCANRTCD=0;              /* INDICATE ITEM FOUND       */ 01691000
         SLR   SCANRTCD,SCANRTCD                                   0473 01692000
*              GOTO SETANSR;            /* GO PLUG IN SCAN ANSR      */ 01693000
         B     SETANSR                                             0474 01694000
*              END;                                                0475 01695000
*NOMATCH:  /* CHECK FOR END OF LOCAL LATERAL CHAIN                   */ 01696000
*          IF NODEPTR->UADSNFLG='0'B                               0476 01697000
*            THEN                       /* THIS IS NOT THE LAST NODE */ 01698000
@RF00471 DS    0H                                                  0476 01699000
NOMATCH  TM    UADSNFLG(NODEPTR),B'10000000'                       0476 01700000
         BZ    @RT00476                                            0476 01701000
*              GO TO NODUPDAT;          /* GO UPDATE NODEPTR TO NEXT */ 01702000
*          /* CHECK FOR A LOCAL SCAN REQUEST                         */ 01703000
*          IF SCANFLGS(1)^='0'B                                    0478 01704000
*            THEN                       /* A TOTAL SCAN REQUESTED    */ 01705000
         TM    SCANFLGS(LSCANPTR),B'10000000'                      0478 01706000
         BZ    @RF00478                                            0478 01707000
*              DO;                                                 0479 01708000
*              /* CHECK FOR END OF TOTAL LATERAL CHAIN               */ 01709000
*              IF NODEPTR->UADSNNEX^=0                             0480 01710000
*                THEN                   /* THIS IS NOT THE LAST NODE */ 01711000
         ICM   @10,7,UADSNNEX(NODEPTR)                             0480 01712000
         BZ    @RF00480                                            0480 01713000
*NODUPDAT:         /* CTL. PASSED OR DROPPED HERE TO UPDATE 'NODEPTR'*/ 01714000
*                  DO;                                             0481 01715000
NODUPDAT DS    0H                                                  0482 01716000
*                  NODEPTR=NODEPTR->UADSNNEX+HEDBPTR; /* PT. TO NEXT */ 01717000
         SLR   @10,@10                                             0482 01718000
         ICM   @10,7,UADSNNEX(NODEPTR)                             0482 01719000
         AR    @10,HEDBPTR                                         0482 01720000
         LR    NODEPTR,@10                                         0482 01721000
*                  DATAPTR=NODEPTR->UADSNDAT+RELFACTR; /* PT. TO DATA*/ 01722000
         LR    DATAPTR,RELFACTR                                    0483 01723000
         A     DATAPTR,UADSNDAT(,NODEPTR)                          0483 01724000
*                  GO TO LSCMPARE;      /* GO BACK TO SCAN SOME MORE */ 01725000
         B     LSCMPARE                                            0484 01726000
*                  END;                                            0485 01727000
*              END;                                                0486 01728000
@RF00480 DS    0H                                                  0487 01729000
*          /* CTL. PASSED OR DROPPED HERE TO INDICATE 'NOT-FOUND' RC */ 01730000
*          SCANRTCD=4;                  /* INDICATE ITEM NOT FOUND   */ 01731000
@RF00478 LA    SCANRTCD,4                                          0487 01732000
*SETANSR:  /* SET POINTER TO NODE IN ANSWER SLOT IN PARAMETER LIST   */ 01733000
*          SCANANSR=NODEPTR;            /* STORE IN WORD 3           */ 01734000
SETANSR  ST    NODEPTR,SCANANSR(,LSCANPTR)                         0488 01735000
*          END IKJLSCAN;                /* END OF 'LATSCAN' SUBR     */ 01736000
         B     @EL00004                                            0489 01737000
*          END IKJEFA13                                            0490 01738000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01739000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 01740000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        * 01741000
*/*%INCLUDE SYSLIB  (IKJPTPB )                                        * 01742000
*;                                                                 0490 01743000
         B     @EL00001                                            0490 01744000
@DATA    DS    0H                                                       01745000
@CH00032 DC    H'1'                                                     01746000
@CH00108 DC    H'4'                                                     01747000
@CH00040 DC    H'8'                                                     01748000
@CH00355 DC    H'10'                                                    01749000
@CH00055 DC    H'12'                                                    01750000
@CH00042 DC    H'16'                                                    01751000
@CH00368 DC    H'25'                                                    01752000
@CH00334 DC    H'35'                                                    01753000
@CH00385 DC    H'48'                                                    01754000
@CH00382 DC    H'53'                                                    01755000
@CH00354 DC    H'59'                                                    01756000
@SM00413 MVC   DYNLFORM(0),INLINLFM                                     01757000
@SM00421 MVC   DATAITEM(0,DATAPTR),DATAITEM(@04)                        01758000
@SM00423 MVC   INSTTX(0),DATAITEM(@10)                                  01759000
@SM00425 MVC   INSTTX(0),DATAITEM(@09)                                  01760000
@SM00433 MVC   ARGUMENT(0),INFOFLD(@01)                                 01761000
@SC00435 CLC   ARGUMENT(0),UADSFLD(DATAPTR)                             01762000
@DATD    DSECT                                                          01763000
         DS    0F                                                       01764000
@SA00001 DS    18F                                                      01765000
@SA00003 DS    14F                                                      01766000
@SA00002 DS    0F                                                       01767000
         DS    15F                                                      01768000
IKJEFA13 CSECT                                                          01769000
         DS    0F                                                       01770000
@CF00419 DC    F'-4'                                                    01771000
@CF00418 DC    F'-3'                                                    01772000
@CF00420 DC    F'-2'                                                    01773000
@CF00344 DC    F'-1'                                                    01774000
@CF00386 DC    XL3'0'                                                   01775000
         DC    C'0'                                                     01776000
@DATD    DSECT                                                          01777000
         DS    0D                                                       01778000
UADSPPTR DS    A                                                        01779000
UADSAPTR DS    A                                                        01780000
PSIZE    DS    H                                                        01781000
         DS    CL2                                                      01782000
OUTLNDS  DS    CL52                                                     01783000
         ORG   OUTLNDS                                                  01784000
@NM00016 DS    CL28                                                     01785000
         ORG   @NM00016                                                 01786000
OUT1LINK DS    AL4                                                      01787000
@NM00017 DS    CL3                                                      01788000
OUT1SCNT DS    CL1                                                      01789000
OUT1SEG1 DS    AL4                                                      01790000
OUT1SEG2 DS    AL4                                                      01791000
OUT1SEG3 DS    AL4                                                      01792000
OUT1SEG4 DS    AL4                                                      01793000
OUT1SEG5 DS    AL4                                                      01794000
         ORG   OUTLNDS+28                                               01795000
OUTLD2   DS    CL24                                                     01796000
         ORG   OUTLD2                                                   01797000
@NM00018 DS    AL4                                                      01798000
@NM00019 DS    CL3                                                      01799000
OUT2SCNT DS    CL1                                                      01800000
OUT2SEG1 DS    AL4                                                      01801000
OUT2SEG2 DS    AL4                                                      01802000
OUT2SEG3 DS    AL4                                                      01803000
OUT2SEG4 DS    AL4                                                      01804000
         ORG   OUTLNDS+52                                               01805000
USRIDSEG DS    CL12                                                     01806000
         ORG   USRIDSEG                                                 01807000
USRIDLN  DS    FL2                                                      01808000
USRIDOF  DS    FL2                                                      01809000
USRIDI   DS    CL8                                                      01810000
         ORG   USRIDSEG+12                                              01811000
USERSEG2 DS    CL11                                                     01812000
         ORG   USERSEG2                                                 01813000
@NM00020 DS    FL2                                                      01814000
USRSG2OF DS    FL2                                                      01815000
@NM00021 DS    CL7                                                      01816000
         ORG   USERSEG2+11                                              01817000
         DS    CL1                                                      01818000
INSTSEG  DS    CL44                                                     01819000
         ORG   INSTSEG                                                  01820000
INSTLN   DS    FL2                                                      01821000
INSTOF   DS    FL2                                                      01822000
INSTTX   DS    CL40                                                     01823000
         ORG   INSTSEG+44                                               01824000
SPACEPB  DS    CL12                                                     01825000
         ORG   SPACEPB                                                  01826000
@NM00024 DS    CL8                                                      01827000
         ORG   @NM00024                                                 01828000
SPACMPTR DS    AL4                                                      01829000
SPACMCNT DS    FL2                                                      01830000
SPACLNTH DS    FL2                                                      01831000
         ORG   SPACEPB+8                                                01832000
@NM00025 DS    CL4                                                      01833000
         ORG   @NM00025                                                 01834000
SPACOFST DS    AL4                                                      01835000
         ORG   SPACEPB+12                                               01836000
SCANLIST DS    CL12                                                     01837000
@NM00041 DS    CL8                                                      01838000
         ORG   @NM00041                                                 01839000
FNOUTPTR DS    AL4                                                      01840000
FNOUTLNG DS    FL4                                                      01841000
         ORG   @NM00041+8                                               01842000
ADDWKAR  DS    CL36                                                     01843000
NODEPDE  DS    CL14                                                     01844000
         ORG   NODEPDE                                                  01845000
PASSWDP  DS    AL4                                                      01846000
PWLEN1   DS    AL2                                                      01847000
@NM00049 DS    BL2                                                      01848000
ACCTNOP  DS    AL4                                                      01849000
ACTLEN1  DS    AL2                                                      01850000
         ORG   NODEPDE+14                                               01851000
ARGUMENT DS    CL40                                                     01852000
IKJEFA13 CSECT                                                          01853000
         DS    0F                                                       01854000
@SIZDATD DC    AL1(1)                                                   01855000
         DC    AL3(@ENDDATD-@DATD)                                      01856000
@CV00111 DC    V(MSGTABLE)                                              01857000
@CV00112 DC    V(IKJEFA52)                                              01858000
@CV00113 DC    V(IKJEFA53)                                              01859000
@CV00114 DC    V(RDGETERR)                                              01860000
@CV00115 DC    V(ADDERCLN)                                              01861000
         DS    0D                                                       01862000
@CC00312 DC    C'* '                                                    01863000
DTATBL   DS    CL12                                                     01864000
         ORG   DTATBL                                                   01865000
@NM00053 DS    CL4                                                      01866000
         ORG   @NM00053                                                 01867000
@NM00054 DC    X'00'                                                    01868000
@NM00055 DC    AL1(12)                                                  01869000
@NM00056 DC    AL1(4)                                                   01870000
@NM00057 DC    AL1(8)                                                   01871000
         ORG   DTATBL+4                                                 01872000
@NM00058 DS    CL4                                                      01873000
         ORG   @NM00058                                                 01874000
@NM00059 DC    X'80'                                                    01875000
         ORG   @NM00059                                                 01876000
@NM00060 DS    BL1                                                      01877000
         ORG   @NM00058+1                                               01878000
@NM00061 DC    AL1(45)                                                  01879000
@NM00062 DC    AL1(44)                                                  01880000
@NM00063 DS    AL1                                                      01881000
         ORG   DTATBL+8                                                 01882000
@NM00064 DS    CL4                                                      01883000
         ORG   @NM00064                                                 01884000
@NM00065 DC    X'00'                                                    01885000
@NM00066 DC    AL1(24)                                                  01886000
@NM00067 DC    AL1(4)                                                   01887000
@NM00068 DC    AL1(8)                                                   01888000
         ORG   DTATBL+12                                                01889000
@DATD    DSECT                                                          01890000
IKJEFA13 CSECT                                                          01891000
INLINLFM DS    0F                                                       01892000
         FREEMAIN V,SP=1,MF=L             LENGTH AND ADD. SET BY E      01893000
         GETMAIN EC,SP=1,MF=L             LENGTH & ANS PTR SET BY E     01894000
INLINLNG DC    A(*-INLINLFM)              LENGTH OF L-FORM LIST         01895000
@DATD    DSECT                                                          01896000
DYNLFORM DS    0F                                                       01897000
DYNFRLST FREEMAIN V,SP=1,MF=L             WILL BE INIT'D FROM INLINLFM  01898000
DYNGTLST GETMAIN EC,MF=L                  WILL BE INIT'D FROM INLINLFM  01899000
IKJEFA13 CSECT                                                          01900000
         DS   0H                                                        01901000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   01902000
@DATD    DSECT                                                          01903000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01904000
@ENDDATD EQU   *                                                        01905000
IKJEFA13 CSECT                                                          01906000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01907000
@01      EQU   01                                                       01908000
@02      EQU   02                                                       01909000
@03      EQU   03                                                       01910000
@04      EQU   04                                                       01911000
@05      EQU   05                                                       01912000
@06      EQU   06                                                       01913000
@07      EQU   07                                                       01914000
@08      EQU   08                                                       01915000
@09      EQU   09                                                       01916000
@10      EQU   10                                                       01917000
@11      EQU   11                                                       01918000
@12      EQU   12                                                       01919000
@13      EQU   13                                                       01920000
@14      EQU   14                                                       01921000
@15      EQU   15                                                       01922000
DATAPTR  EQU   @02                                                      01923000
COMPLNTH EQU   @04                                                      01924000
RELFACTR EQU   @05                                                      01925000
NODEPTR  EQU   @03                                                      01926000
COUNTPTR EQU   @02                                                      01927000
FINDPTR  EQU   @09                                                      01928000
MARKMARK EQU   @05                                                      01929000
NUMOFNDS EQU   @02                                                      01930000
N        EQU   @05                                                      01931000
LOOPCNT  EQU   @02                                                      01932000
RETNCODE EQU   @02                                                      01933000
SCANRTCD EQU   @02                                                      01934000
LSCANPTR EQU   @06                                                      01935000
MSGBASE  EQU   @10                                                      01936000
COMMPTR  EQU   @08                                                      01937000
FSQEPTR  EQU   @05                                                      01938000
UADSRPTR EQU   @02                                                      01939000
UADSNPTR EQU   @03                                                      01940000
HEDBPTR  EQU   @07                                                      01941000
R0       EQU   @00                                                      01942000
R1       EQU   @01                                                      01943000
R15      EQU   @15                                                      01944000
R14      EQU   @14                                                      01945000
DHED     EQU   0                                                        01946000
UADSMHDR EQU   DHED                                                     01947000
UADSBLNG EQU   UADSMHDR                                                 01948000
UADSFSQP EQU   UADSMHDR+2                                               01949000
UADSUSER EQU   UADSMHDR+4                                               01950000
UADSBN01 EQU   UADSMHDR+12                                              01951000
UADSMAXC EQU   UADSMHDR+14                                              01952000
UADSATTR EQU   DHED+16                                                  01953000
UADSPWD1 EQU   DHED+24                                                  01954000
UADSNODE EQU   0                                                        01955000
UADSNWD1 EQU   UADSNODE                                                 01956000
UADSNFLG EQU   UADSNWD1                                                 01957000
UADSNNEX EQU   UADSNWD1+1                                               01958000
UADSNSUB EQU   UADSNODE+4                                               01959000
UADSNDAT EQU   UADSNODE+8                                               01960000
DPOBD    EQU   0                                                        01961000
DNOBD    EQU   0                                                        01962000
DROBD    EQU   0                                                        01963000
UADSRSIZ EQU   DROBD+14                                                 01964000
UADSUNAM EQU   DROBD+16                                                 01965000
UADSFSQE EQU   0                                                        01966000
FSQELNTH EQU   UADSFSQE                                                 01967000
FSQENEXT EQU   UADSFSQE+2                                               01968000
IOPL     EQU   0                                                        01969000
IOPLIOPB EQU   IOPL+12                                                  01970000
PTPB     EQU   0                                                        01971000
PTPBOPUT EQU   PTPB+4                                                   01972000
COMMON   EQU   0                                                        01973000
ACIOPTR  EQU   COMMON                                                   01974000
BLDLPTR  EQU   COMMON+4                                                 01975000
DATASUBP EQU   COMMON+8                                                 01976000
IOPLPTR  EQU   COMMON+20                                                01977000
NODELADR EQU   COMMON+24                                                01978000
SIZEH    EQU   COMMON+28                                                01979000
UNITN    EQU   COMMON+37                                                01980000
NUMOFLVL EQU   COMMON+45                                                01981000
ERRFLG   EQU   COMMON+46                                                01982000
PUTERR   EQU   COMMON+46                                                01983000
RSIZSW   EQU   COMMON+46                                                01984000
NONODESW EQU   COMMON+46                                                01985000
FINDEXSW EQU   COMMON+46                                                01986000
READMNSW EQU   COMMON+46                                                01987000
XBLKUSED EQU   COMMON+46                                                01988000
ADDMSG   EQU   0                                                        01989000
BLDLLIST EQU   0                                                        01990000
BLDLNAME EQU   BLDLLIST+4                                               01991000
@NM00026 EQU   0                                                        01992000
@NM00027 EQU   @NM00026                                                 01993000
ACIOFL04 EQU   @NM00027                                                 01994000
ACIOFL05 EQU   @NM00027                                                 01995000
ACIONMBR EQU   @NM00026+16                                              01996000
ACIOBUFR EQU   @NM00026+17                                              01997000
@NM00038 EQU   @NM00026+20                                              01998000
LSCANBLK EQU   0                                                        01999000
SCANTYPE EQU   LSCANBLK                                                 02000000
SCANPDE  EQU   LSCANBLK+1                                               02001000
SCANFLGS EQU   LSCANBLK+4                                               02002000
SCANBEGN EQU   LSCANBLK+5                                               02003000
SCANANSR EQU   LSCANBLK+8                                               02004000
FSQELBIT EQU   0                                                        02005000
@NM00040 EQU   0                                                        02006000
MARKFLAG EQU   @NM00040                                                 02007000
MARKER   EQU   @NM00040+1                                               02008000
@NM00042 EQU   0                                                        02009000
FNOEOLST EQU   @NM00042                                                 02010000
FOUNDNDE EQU   @NM00042+1                                               02011000
@NM00044 EQU   0                                                        02012000
SETFLAG  EQU   @NM00044                                                 02013000
MARKER1  EQU   @NM00044+1                                               02014000
MARKER2  EQU   @NM00044+4                                               02015000
MARKER3  EQU   @NM00044+8                                               02016000
@NM00046 EQU   0                                                        02017000
DATAADR  EQU   @NM00046                                                 02018000
DATALNTH EQU   @NM00046+4                                               02019000
DATACHN  EQU   @NM00046+9                                               02020000
DATAITEM EQU   0                                                        02021000
USECOUNT EQU   0                                                        02022000
NLSTTAB  EQU   0                                                        02023000
PASSWD   EQU   NLSTTAB+9                                                02024000
ACTLEN   EQU   NLSTTAB+17                                               02025000
ACCTNO   EQU   NLSTTAB+18                                               02026000
@NM00069 EQU   0                                                        02027000
DTAFLGS  EQU   @NM00069                                                 02028000
DTABLNTH EQU   @NM00069+1                                               02029000
DTAOFFST EQU   @NM00069+2                                               02030000
DTALNTH  EQU   @NM00069+3                                               02031000
VLNTHLNG EQU   0                                                        02032000
UADSFLD  EQU   0                                                        02033000
@NM00070 EQU   0                                                        02034000
PDDATPTR EQU   @NM00070                                                 02035000
PDDATLNG EQU   @NM00070+4                                               02036000
INFOFLD  EQU   0                                                        02037000
PTPBPTR  EQU   IOPLIOPB                                                 02038000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02039000
@NM00071 EQU   @NM00070+6                                               02040000
@NM00052 EQU   NLSTTAB+58                                               02041000
@NM00051 EQU   NLSTTAB+1                                                02042000
@NM00050 EQU   NLSTTAB                                                  02043000
@NM00048 EQU   @NM00046+8                                               02044000
@NM00047 EQU   @NM00046+6                                               02045000
@NM00045 EQU   @NM00044                                                 02046000
@NM00043 EQU   @NM00042                                                 02047000
@NM00039 EQU   @NM00038                                                 02048000
@NM00037 EQU   @NM00026+12                                              02049000
@NM00036 EQU   @NM00026+8                                               02050000
@NM00035 EQU   @NM00026+4                                               02051000
@NM00034 EQU   @NM00026+1                                               02052000
@NM00033 EQU   @NM00027                                                 02053000
@NM00032 EQU   @NM00027                                                 02054000
@NM00031 EQU   @NM00027                                                 02055000
@NM00030 EQU   @NM00027                                                 02056000
@NM00029 EQU   @NM00027                                                 02057000
@NM00028 EQU   @NM00027                                                 02058000
@NM00023 EQU   BLDLLIST+2                                               02059000
@NM00022 EQU   BLDLLIST                                                 02060000
@NM00015 EQU   COMMON+46                                                02061000
@NM00014 EQU   COMMON+32                                                02062000
@NM00013 EQU   COMMON+30                                                02063000
@NM00012 EQU   COMMON+16                                                02064000
@NM00011 EQU   COMMON+12                                                02065000
PTPBFLN  EQU   PTPB+8                                                   02066000
@NM00010 EQU   PTPB                                                     02067000
IOPLECB  EQU   IOPL+8                                                   02068000
IOPLECT  EQU   IOPL+4                                                   02069000
IOPLUPT  EQU   IOPL                                                     02070000
@NM00009 EQU   DROBD+12                                                 02071000
UADSRNAM EQU   DROBD+4                                                  02072000
@NM00008 EQU   DROBD+1                                                  02073000
UADSRCTR EQU   DROBD                                                    02074000
UADSANUM EQU   DNOBD+45                                                 02075000
UADSALEN EQU   DNOBD+44                                                 02076000
UADSADRF EQU   DNOBD+4                                                  02077000
@NM00007 EQU   DNOBD+1                                                  02078000
UADSACTR EQU   DNOBD                                                    02079000
UADSPPWD EQU   DPOBD+4                                                  02080000
@NM00006 EQU   DPOBD+1                                                  02081000
UADSPCTR EQU   DPOBD                                                    02082000
@NM00005 EQU   UADSNWD1                                                 02083000
@NM00004 EQU   DHED+40                                                  02084000
UADSDEST EQU   DHED+32                                                  02085000
UADSPERP EQU   DHED+28                                                  02086000
UADSUPTP EQU   DHED+20                                                  02087000
UADSINST EQU   DHED+18                                                  02088000
@NM00003 EQU   UADSATTR                                                 02089000
USATR03  EQU   UADSATTR                                                 02090000
USATR02  EQU   UADSATTR                                                 02091000
USATR01  EQU   UADSATTR                                                 02092000
USATR00  EQU   UADSATTR                                                 02093000
@NM00002 EQU   UADSBN01+1                                               02094000
UADSEXPF EQU   UADSBN01+1                                               02095000
UADSNUSP EQU   UADSBN01+1                                               02096000
@NM00001 EQU   UADSBN01                                                 02097000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02098000
@RT00071 EQU   NOSPACE                                                  02099000
@RT00085 EQU   MRKRTST1                                                 02100000
@RT00087 EQU   ANODETST                                                 02101000
@RT00096 EQU   NONODE                                                   02102000
@RT00099 EQU   MRKRTST1                                                 02103000
@RT00119 EQU   NONODE                                                   02104000
@RT00123 EQU   ALLNODES                                                 02105000
@RT00126 EQU   ALLNODES                                                 02106000
@RT00136 EQU   NONODE                                                   02107000
@RC00185 EQU   INFOMSG                                                  02108000
@RT00200 EQU   SCANERR                                                  02109000
@RT00208 EQU   ASTKERR                                                  02110000
@RF00208 EQU   LATLINK                                                  02111000
@RT00218 EQU   ADDINFO                                                  02112000
@RT00220 EQU   SCANERR                                                  02113000
@RT00235 EQU   ADDINFO                                                  02114000
@RC00273 EQU   INFOMSG                                                  02115000
@RT00297 EQU   CHAINTST                                                 02116000
@RT00313 EQU   DUPLSCAN                                                 02117000
@RF00329 EQU   @EL00001                                                 02118000
@RT00337 EQU   DUPLMSG                                                  02119000
@RC00343 EQU   INFOMSG                                                  02120000
@RT00400 EQU   @EL00003                                                 02121000
@RT00465 EQU   NOMATCH                                                  02122000
@RT00476 EQU   NODUPDAT                                                 02123000
@PB00004 EQU   @EL00001                                                 02124000
@PB00003 EQU   @PB00004                                                 02125000
@PB00002 EQU   @PB00003                                                 02126000
@ENDDATA EQU   *                                                        02127000
         END   IKJEFA13                                                 02128000
