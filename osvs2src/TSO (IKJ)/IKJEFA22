         TITLE 'I K J E F A 2 2  --  CHANGE PASSWORD/ACCOUNT NUMBER ROU*00001000
               TINE    '                                                00002000
IKJEFA22 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA22  73.209'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*         CTRLTABP = R1;              /* ADDR OF THE CHANGE        0021 00022000
*                                        CONTROL TABLE               */ 00023000
         LR    CTRLTABP,R1                                         0021 00024000
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REG       */ 00025000
*         /* ALLOCATE WORK REGISTERS.                                */ 00026000
*         HEDBPTR = HEADADDR;         /* ASSIGN PTR TO USER HEADER   */ 00027000
         SLR   @10,@10                                             0023 00028000
         ICM   @10,7,HEADADDR(CTRLTABP)                            0023 00029000
         LR    HEDBPTR,@10                                         0023 00030000
*         SRCHIND = 0;                /* INIT THE SEARCH INDICATOR   */ 00031000
         MVI   SRCHIND(CTRLTABP),X'00'                             0024 00032000
*         CFLAGS = '0'B;              /* INITIALIZE ALL FLAGS        */ 00033000
         MVI   CFLAGS,B'00000000'                                  0025 00034000
*         /* PARTIAL BUILDING OF GETSPACE/FREESPACE PARAMETER LIST.  */ 00035000
*         /* IT WILL BE COMPLETED AT EACH POINT OF CALL.             */ 00036000
*         READBUFF = HEADADDR;        /* PTR TO USERID TREE BUFFER   */ 00037000
         ST    @10,READBUFF                                        0026 00038000
*         NUMBLOKS = BLKCNT;          /* NO. OF BLOCKS IN BUFFER     */ 00039000
         SLR   @10,@10                                             0027 00040000
         IC    @10,BLKCNT(,CTRLTABP)                               0027 00041000
         STH   @10,NUMBLOKS                                        0027 00042000
*         /***********************************************************/ 00043000
*         /*                                                         */ 00044000
*         /*          CHANGE LEVEL  =  PASSWORD LEVEL                */ 00045000
*         /*                                                         */ 00046000
*         /***********************************************************/ 00047000
*         DPOBPTR = PASSADDR;         /* GET ADDR FROM CTRLTAB       */ 00048000
         L     DPOBPTR,PASSADDR(,CTRLTABP)                         0028 00049000
*         NLPWOBAD = DPOBPTR;         /* SAVE ADDR OF THIS OBLK      */ 00050000
         LR    NLPWOBAD,DPOBPTR                                    0029 00051000
*         /* DETERMINE WHETHER CHANGE LEVEL = PASSWORD LEVEL. IF IT  */ 00052000
*         /* IS, THEN SEARCH FOR THE DATALIST PASSWORD. IF NOT, THEN */ 00053000
*         /* CONTINUE AT THE ACCTNMBR LEVEL.                         */ 00054000
*         IF CHLEVL = 3                                            0030 00055000
*           THEN                      /* CHANGE LEVEL ^= PASSWD LEVL */ 00056000
         CLI   CHLEVL(CTRLTABP),3                                  0030 00057000
         BE    @RT00030                                            0030 00058000
*             GOTO ACLEVL;            /* CONTINUE AT THE ACTNBR LEVL */ 00059000
*         /* AN '*' IN THE PASSWORD POSITION MEANS: CHANGE ALL PASS- */ 00060000
*         /* WORDS TO THE NEW PASSWORD.                              */ 00061000
*         IF PASSWD(1) = '*'          /* NLPASSWORD = '*'?           */ 00062000
*           THEN                      /* YES,                        */ 00063000
         L     @10,NODELPTR(,CTRLTABP)                             0032 00064000
         CLI   PASSWD(@10),C'*'                                    0032 00065000
         BE    @RT00032                                            0032 00066000
*             GOTO CHALLPW;           /* GO CHANGE ALL PASSWORDS     */ 00067000
*         DPOBPTR = HEDBPTR+UADSPWD1; /* REF 1ST PASSWRD OBLK        */ 00068000
         LR    DPOBPTR,HEDBPTR                                     0034 00069000
         A     DPOBPTR,UADSPWD1(,HEDBPTR)                          0034 00070000
*         /* SEARCH FOR THE PASSWORD SPECIFIED IN THE DATALIST.      */ 00071000
*         LOOPFLG = '0'B;             /* RESET LOOP FLAG             */ 00072000
         NI    LOOPFLG,B'11111011'                                 0035 00073000
*         DO WHILE LOOPFLG = '0'B;    /* LOOP TO END OF PASSWD CHAIN */ 00074000
         B     @DE00036                                            0036 00075000
@DL00036 DS    0H                                                  0037 00076000
*           UADSPPTR = HEDBPTR+UADSPDAT;/* REF THE PASSWD DATA FIELD */ 00077000
         LR    UADSPPTR,HEDBPTR                                    0037 00078000
         A     UADSPPTR,UADSPDAT(,DPOBPTR)                         0037 00079000
*           /* COMPARE THE UADS PASSWORD TO THE DATALIST PASSWORD.   */ 00080000
*           IF UADSPPWD = DPASSWD                                  0038 00081000
*             THEN                    /* THE DLPASSWORD EXISTS IN THIS  00082000
*                                        CHAIN. PRUNING IS NECESSARY */ 00083000
         L     @10,DATALPTR(,CTRLTABP)                             0038 00084000
         CLC   UADSPPWD(8,UADSPPTR),DPASSWD(@10)                   0038 00085000
         BNE   @RF00038                                            0038 00086000
*               DO;                                                0039 00087000
*               DLPWOBAD = DPOBPTR;   /* SAVE THE ADDR OF THIS OBLK  */ 00088000
         ST    DPOBPTR,DLPWOBAD                                    0040 00089000
*               GOTO ACTWSRCH;        /* GO SEARCH FOR ACTNBR TWINS  */ 00090000
         B     ACTWSRCH                                            0041 00091000
*               END;                                               0042 00092000
*           /* THE DATALIST PASSWORD HAS NOT BEEN FOUND YET. IF THERE   00093000
*              ARE MORE PASSWORDS IN THIS CHAIN, THEN CONTINUE THE 0043 00094000
*              SEARCH.                                               */ 00095000
*           IF PFLG01 = '1'B          /* WAS THIS THE LAST PASSWORD? */ 00096000
*             THEN                    /* YES,                        */ 00097000
@RF00038 TM    PFLG01(DPOBPTR),B'10000000'                         0043 00098000
         BNO   @RF00043                                            0043 00099000
*               LOOPFLG = '1'B;       /* TERMINATE LOOP              */ 00100000
         OI    LOOPFLG,B'00000100'                                 0044 00101000
*             ELSE                    /* NO,                         */ 00102000
*               DPOBPTR = HEDBPTR     /* REF THE NEXT PASSWORD OBLK  */ 00103000
*                 +UADSPNEX;                                       0045 00104000
         B     @RC00043                                            0045 00105000
@RF00043 LR    @10,HEDBPTR                                         0045 00106000
         SLR   @09,@09                                             0045 00107000
         ICM   @09,7,UADSPNEX(DPOBPTR)                             0045 00108000
         AR    @10,@09                                             0045 00109000
         LR    DPOBPTR,@10                                         0045 00110000
*         END;                                                     0046 00111000
@RC00043 DS    0H                                                  0046 00112000
@DE00036 TM    LOOPFLG,B'00000100'                                 0046 00113000
         BZ    @DL00036                                            0046 00114000
*         /* THE DATALIST PASSWORD DOES NOT EXIST IN THIS CHAIN.     */ 00115000
*         /* THEREFORE, PRUNING IS NOT NECESSARY. CHANGE THE NODE-   */ 00116000
*         /* LIST PASSWORD DATA FIELD.                               */ 00117000
*         DPOBPTR = NLPWOBAD;         /* REF THE NLPASSWORD OBLK     */ 00118000
         LR    DPOBPTR,NLPWOBAD                                    0047 00119000
*         UADSPPTR = HEDBPTR+UADSPDAT;/* REF THE DATA FIELD          */ 00120000
         LR    UADSPPTR,HEDBPTR                                    0048 00121000
         A     UADSPPTR,UADSPDAT(,DPOBPTR)                         0048 00122000
*         UADSPPWD = DPASSWD;         /* INSERT THE NEW PASSWORD     */ 00123000
         L     @10,DATALPTR(,CTRLTABP)                             0049 00124000
         MVC   UADSPPWD(8,UADSPPTR),DPASSWD(@10)                   0049 00125000
*         GOTO CHGEOK;                /* WRITE THIS TREE BACK INTO 0050 00126000
*                                        THE UADS                    */ 00127000
         B     CHGEOK                                              0050 00128000
*CHALLPW: /* ALL PASSWORDS IN THIS TREE ARE TO BE CHANGED TO THE     */ 00129000
*         /* DATALIST PASSWORD. ALL ACCTNMBRS WILL BECOME BROTHERS.  */ 00130000
*         /* TWINS CREATED BY THIS MERGE MUST BE PRUNED FROM THE     */ 00131000
*         /* USERID TREE.                                            */ 00132000
*         UADSPPTR = HEDBPTR+UADSPDAT;/* REF ITS DATA FIELD          */ 00133000
CHALLPW  LR    UADSPPTR,HEDBPTR                                    0051 00134000
         A     UADSPPTR,UADSPDAT(,DPOBPTR)                         0051 00135000
*         UADSPPWD = DPASSWD;         /* INSERT THE DATALIST PASSWRD */ 00136000
         L     @10,DATALPTR(,CTRLTABP)                             0052 00137000
         MVC   UADSPPWD(8,UADSPPTR),DPASSWD(@10)                   0052 00138000
*         PNEXSAVE = UADSPNEX;        /* SAVE OFFSET TO NEXT OBLK    */ 00139000
         SLR   @10,@10                                             0053 00140000
         ICM   @10,7,UADSPNEX(DPOBPTR)                             0053 00141000
         ST    @10,PNEXSAVE                                        0053 00142000
*         UADSPNEX = 0;               /* SET OFFSET TO NEXT OBLK TO 0,  00143000
*                                        INDICATING END OF CHAIN     */ 00144000
         SLR   @10,@10                                             0054 00145000
         STCM  @10,7,UADSPNEX(DPOBPTR)                             0054 00146000
*         /* IF THIS TREE HAS ONLY ONE PASSWORD, THEN NO OTHER CHAN- */ 00147000
*         /* GES ARE NECESSARY.                                      */ 00148000
*         IF PFLG01 = '1'B            /* ANY BROTHERS?               */ 00149000
*           THEN                      /* NO,                         */ 00150000
         TM    PFLG01(DPOBPTR),B'10000000'                         0055 00151000
         BO    @RT00055                                            0055 00152000
*             GOTO CHGEOK;            /* GO WRITE THIS TREE BACK   0056 00153000
*                                        INTO THE UADS               */ 00154000
*         PFLG01 = '1'B;              /* SET CHAIN FLAG TO '1'       */ 00155000
         OI    PFLG01(DPOBPTR),B'10000000'                         0057 00156000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF THE FIRST ACCTNMBR OBLK */ 00157000
         LR    DNOBPTR,HEDBPTR                                     0058 00158000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0058 00159000
*         /* MERGE ALL ACCTNMBR CHAINS BY CHANGING ALL COUSINS TO    */ 00160000
*         /* BROTHERS.                                               */ 00161000
*         /* CHANGE ALL CHAIN FLAGS THAT ARE '1' TO '0', EXCEPT THE  */ 00162000
*         /* LAST ONE IN THE TOTAL CHAIN.                            */ 00163000
*         DO WHILE UADSANEX ^= 0;     /* END OF TOTAL CHAIN?         */ 00164000
         B     @DE00059                                            0059 00165000
@DL00059 DS    0H                                                  0060 00166000
*             AFLG01 = '0'B;          /* CHANGE FLAG TO '0'          */ 00167000
         NI    AFLG01(DNOBPTR),B'01111111'                         0060 00168000
*             DNOBPTR = HEDBPTR+UADSANEX; /* REF THE NEXT ACCT OBLK  */ 00169000
         LR    @10,HEDBPTR                                         0061 00170000
         SLR   @09,@09                                             0061 00171000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0061 00172000
         AR    @10,@09                                             0061 00173000
         LR    DNOBPTR,@10                                         0061 00174000
*             END;                                                 0062 00175000
@DE00059 ICM   @10,7,UADSANEX(DNOBPTR)                             0062 00176000
         BNZ   @DL00059                                            0062 00177000
*         /* SEARCH THE TOTAL ACCTNMBR CHAIN FOR TWINS.              */ 00178000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF THE FIRST ACCTNMBR OBLK */ 00179000
         LR    DNOBPTR,HEDBPTR                                     0063 00180000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0063 00181000
*         /* COMPARE THIS ACCTNMBR TO ALL OTHERS IN THE TOTAL CHAIN  */ 00182000
*         /* IF THIS IS THE LAST ACCTNMBR IN THE TOTAL CHAIN,        */ 00183000
*         /* THEN THE SEARCH FOR ACCTNMBR TWINS IS FINISHED.         */ 00184000
*         LOOPFLG2 = '0'B;            /* RESET LOOP FLAG             */ 00185000
         NI    LOOPFLG2,B'11111101'                                0064 00186000
*         DO WHILE LOOPFLG2 = '0'B;   /* LOOP TO END OF ACCTNBR CHAIN*/ 00187000
         B     @DE00065                                            0065 00188000
@DL00065 DS    0H                                                  0066 00189000
*           ACTWIN2 = DNOBPTR;        /* SAVE THE ADDR OF THIS OBLK  */ 00190000
         LR    ACTWIN2,DNOBPTR                                     0066 00191000
*           ADATSAVE = UADSADAT;      /* SAVE THE OFFSET TO ITS DFLD */ 00192000
         L     @10,UADSADAT(,DNOBPTR)                              0067 00193000
         ST    @10,ADATSAVE                                        0067 00194000
*           /* REFERENCE THE FIRST BROTHER AND COMPARE THE DATA      */ 00195000
*           /* FIELD OFFSETS. IF THEY ARE EQUAL, THEN THE ACCTNMBRS  */ 00196000
*           /* MUST BE EQUAL.                                        */ 00197000
*TCTWSR2:   DO WHILE UADSANEX ^= 0;   /* LOOP TO END OF ACCTNBR CHAIN*/ 00198000
TCTWSR2  B     @DE00068                                            0068 00199000
@DL00068 DS    0H                                                  0069 00200000
*             DNOBPTR = HEDBPTR+UADSANEX;/* REF THE BROTHER OBLK     */ 00201000
         LR    @10,HEDBPTR                                         0069 00202000
         SLR   @07,@07                                             0069 00203000
         ICM   @07,7,UADSANEX(DNOBPTR)                             0069 00204000
         AR    @10,@07                                             0069 00205000
         LR    DNOBPTR,@10                                         0069 00206000
*             IF UADSADAT = ADATSAVE  /* ARE THE DATA OFFSETS EQUAL? */ 00207000
*               THEN                  /* YES, TWINS HAVE BEEN FOUND  */ 00208000
         CLC   UADSADAT(4,DNOBPTR),ADATSAVE                        0070 00209000
         BNE   @RF00070                                            0070 00210000
*                 DO;                                              0071 00211000
*                 ACTWIN1 = DNOBPTR;  /* SAVE ADDR OF SECOND TWIN    */ 00212000
         LR    ACTWIN1,DNOBPTR                                     0072 00213000
*                 ACTWSRF = '0'B;     /* SET FLAG TO DETERMINE FLOW  */ 00214000
         NI    ACTWSRF,B'11101111'                                 0073 00215000
*                 GOTO PRTWSRCH;      /* GO SEARCH FOR PROC TWINS    */ 00216000
         B     PRTWSRCH                                            0074 00217000
*                 END;                                             0075 00218000
*             END;                                                 0076 00219000
@RF00070 DS    0H                                                  0076 00220000
@DE00068 ICM   @10,7,UADSANEX(DNOBPTR)                             0076 00221000
         BNZ   @DL00068                                            0076 00222000
*           DNOBPTR = ACTWIN2;        /* REF THE ACCTNMBR JUST USED     00223000
*                                        FOR COMPARISON              */ 00224000
         LR    DNOBPTR,ACTWIN2                                     0077 00225000
*           IF AFLG01 = '1'B          /* END OF CHAIN?               */ 00226000
*             THEN                    /* YES,                        */ 00227000
         TM    AFLG01(DNOBPTR),B'10000000'                         0078 00228000
         BNO   @RF00078                                            0078 00229000
*               LOOPFLG2 = '1'B;      /* TERMINATE LOOP              */ 00230000
         OI    LOOPFLG2,B'00000010'                                0079 00231000
*             ELSE                                                 0080 00232000
*               DNOBPTR = HEDBPTR+    /* REF ITS BROTHER AND MAKE IT */ 00233000
*                 UADSANEX;           /* THE BASIS FOR COMPARISON    */ 00234000
         B     @RC00078                                            0080 00235000
@RF00078 LR    @10,HEDBPTR                                         0080 00236000
         SLR   @09,@09                                             0080 00237000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0080 00238000
         AR    @10,@09                                             0080 00239000
         LR    DNOBPTR,@10                                         0080 00240000
*           END;                                                   0081 00241000
@RC00078 DS    0H                                                  0081 00242000
@DE00065 TM    LOOPFLG2,B'00000010'                                0081 00243000
         BZ    @DL00065                                            0081 00244000
*         /* PRUNE ALL PASSWORDS AFTER THE FIRST ONE IN THE CHAIN    */ 00245000
*         /* FROM THIS USERID TREE.                                  */ 00246000
*         DO WHILE PNEXSAVE ^= 0;     /* LOOP TO END OF CHAIN        */ 00247000
         B     @DE00082                                            0082 00248000
@DL00082 DS    0H                                                  0083 00249000
*           DPOBPTR = HEDBPTR+PNEXSAVE; /* REF THE NEXT OBLK         */ 00250000
         LR    DPOBPTR,HEDBPTR                                     0083 00251000
         A     DPOBPTR,PNEXSAVE                                    0083 00252000
*           /* PREPARE TO FREE THE PASSWORD DATA FIELD.              */ 00253000
*           AREAOFST = UADSPDAT;      /* OFFSET TO THIS DATAFLD      */ 00254000
         L     @10,UADSPDAT(,DPOBPTR)                              0084 00255000
         ST    @10,AREAOFST                                        0084 00256000
*           AREALNTH = 12;            /* NUMBER OF BYTES TO BE FREED */ 00257000
         MVC   AREALNTH(2),@CH00055                                0085 00258000
*           CALL IKJFRSP;             /* GO FREE THIS DATA FIELD     */ 00259000
         BAL   @14,IKJFRSP                                         0086 00260000
*           PNEXSAVE = UADSPNEX;      /* SAVE OFFSET TO NEXT OBLK    */ 00261000
         SLR   @10,@10                                             0087 00262000
         ICM   @10,7,UADSPNEX(DPOBPTR)                             0087 00263000
         ST    @10,PNEXSAVE                                        0087 00264000
*           /* PREPARE TO FREE THE PASSWORD OFFSET BLOCK.            */ 00265000
*           AREAOFST = DPOBPTR-HEDBPTR;/* OFFSET TO THIS OBLK        */ 00266000
         LR    @10,DPOBPTR                                         0088 00267000
         SR    @10,HEDBPTR                                         0088 00268000
         ST    @10,AREAOFST                                        0088 00269000
*           CALL IKJFRSP;             /* GO FREE THIS OFFSET BLOCK   */ 00270000
         BAL   @14,IKJFRSP                                         0089 00271000
*           END;                                                   0090 00272000
@DE00082 L     @10,PNEXSAVE                                        0090 00273000
         LTR   @10,@10                                             0090 00274000
         BNZ   @DL00082                                            0090 00275000
*         GOTO CHGEOK;                /* GO WRITE THIS TREE BACK INTO   00276000
*                                        THE UADS                    */ 00277000
         B     CHGEOK                                              0091 00278000
*ACTWSRCH:/* A MERGING OF TWO ACCTNMBR CHAINS IS NECESSARY BECAUSE   */ 00279000
*         /* OF THE PRUNING OF A PASSWORD FROM THE TREE. THE TWO     */ 00280000
*         /* CHAINS MUST BE COMPARED TO ASSURE THAT THE MERGE WILL   */ 00281000
*         /* NOT RESULT IN TWINS. IF IT DOES, THEN ONE OF THE TWINS  */ 00282000
*         /* MUST BE PRUNED FROM THE TREE.                           */ 00283000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF THE SUBFIELD            */ 00284000
ACTWSRCH LR    DNOBPTR,HEDBPTR                                     0092 00285000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0092 00286000
*         /* BEGINNING OF THE SEARCH LOOP                            */ 00287000
*         LOOPFLG = '0'B;             /* RESET LOOP FLAG             */ 00288000
         NI    LOOPFLG,B'11111011'                                 0093 00289000
*         DO WHILE LOOPFLG = '0'B;    /* LOOP TO END OF ACCTNBR CHAIN*/ 00290000
         B     @DE00094                                            0094 00291000
@DL00094 DS    0H                                                  0095 00292000
*           ACTWIN2 = DNOBPTR;        /* SAVE ADDR OF THIS OBLK IN 0095 00293000
*                                        THE DLPASSWORD ACTNBR CHAIN */ 00294000
         LR    ACTWIN2,DNOBPTR                                     0095 00295000
*           ADATSAVE = UADSADAT;      /* SAVE OFFSET TO THIS DATAFLD */ 00296000
         L     @10,UADSADAT(,DNOBPTR)                              0096 00297000
         ST    @10,ADATSAVE                                        0096 00298000
*           DPOBPTR = NLPWOBAD;       /* REF THE NLPASSWORD OBLK     */ 00299000
         LR    DPOBPTR,NLPWOBAD                                    0097 00300000
*           DNOBPTR = HEDBPTR+UADSPSUB; /* REF ITS DATA FIELD        */ 00301000
         LR    DNOBPTR,HEDBPTR                                     0098 00302000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0098 00303000
*           /* COMPARE THE OFFSETS TO THE DATA FIELDS. IF THE ACCTNBRS  00304000
*              ARE THE SAME, THEN THEIR OFFSET BLOCKS MUST POINT TO     00305000
*              THE SAME DATA FIELDS.                                 */ 00306000
*           LOOPFLG2 = '0'B;          /* RESET LOOP FLAG             */ 00307000
         NI    LOOPFLG2,B'11111101'                                0099 00308000
*           DO WHILE LOOPFLG2 = '0'B; /* LOOP TO END OF ACCTNBR CHAIN*/ 00309000
         B     @DE00100                                            0100 00310000
@DL00100 DS    0H                                                  0101 00311000
*             IF UADSADAT = ADATSAVE  /* OFFSETS TO DATAFLDS EQUAL?  */ 00312000
*             THEN                    /* YES, TWINS EXIST            */ 00313000
         CLC   UADSADAT(4,DNOBPTR),ADATSAVE                        0101 00314000
         BNE   @RF00101                                            0101 00315000
*               DO;                                                0102 00316000
*               ACTWIN1 = DNOBPTR;    /* SAVE ADDR OF THIS TWIN OBLK */ 00317000
         LR    ACTWIN1,DNOBPTR                                     0103 00318000
*               ACTWSRF = '1'B;       /* FLAG TO DETERMINE FLOW      */ 00319000
         OI    ACTWSRF,B'00010000'                                 0104 00320000
*               GOTO PRTWSRCH;        /* GO SEARCH FOR PROC TWINS IN    00321000
*                                        THESE TWO ACCTNMBR CHAINS   */ 00322000
         B     PRTWSRCH                                            0105 00323000
*               END;                                               0106 00324000
*             IF AFLG01 = '1'B        /* WAS THIS THE LAST ACCTNMBR? */ 00325000
*               THEN                  /* YES,                        */ 00326000
@RF00101 TM    AFLG01(DNOBPTR),B'10000000'                         0107 00327000
         BNO   @RF00107                                            0107 00328000
*                 LOOPFLG2 = '1'B;    /* TERMINATE LOOP              */ 00329000
         OI    LOOPFLG2,B'00000010'                                0108 00330000
*               ELSE                  /* NO,                         */ 00331000
*                 DNOBPTR = HEDBPTR   /* REF THE NEXT ACCTNMBR OBLK  */ 00332000
*                   +UADSANEX;        /* UNDER THE NODELIST PASSWORD */ 00333000
         B     @RC00107                                            0109 00334000
@RF00107 LR    @10,HEDBPTR                                         0109 00335000
         SLR   @07,@07                                             0109 00336000
         ICM   @07,7,UADSANEX(DNOBPTR)                             0109 00337000
         AR    @10,@07                                             0109 00338000
         LR    DNOBPTR,@10                                         0109 00339000
*             END;                                                 0110 00340000
@RC00107 DS    0H                                                  0110 00341000
@DE00100 TM    LOOPFLG2,B'00000010'                                0110 00342000
         BZ    @DL00100                                            0110 00343000
*ACTWSR1:   /* CONTINUATION AFTER A TWIN HAS BEEN PRUNED.            */ 00344000
*           DNOBPTR = ACTWIN2;        /* REF THE LAST-USED ACCTNMBR     00345000
*                                        OBLK UNDER THE DLPASSWORD   */ 00346000
ACTWSR1  LR    DNOBPTR,ACTWIN2                                     0111 00347000
*           /* ARE THERE MORE ACCTNMBRS UNDER THE DATALIST PASSWORD? */ 00348000
*           IF AFLG01 = '1'B          /* WAS THIS THE LAST ACCTNMBR? */ 00349000
*             THEN                    /* YES,                        */ 00350000
         TM    AFLG01(DNOBPTR),B'10000000'                         0112 00351000
         BNO   @RF00112                                            0112 00352000
*               LOOPFLG = '1'B;       /* TERMINATE LOOP              */ 00353000
         OI    LOOPFLG,B'00000100'                                 0113 00354000
*             ELSE                    /* NO,                         */ 00355000
*               DNOBPTR = HEDBPTR     /* REF THE NEXT ACCTNMBR OBLK  */ 00356000
*                 +UADSANEX;          /* UNDER THE DATALIST PASSWORD */ 00357000
         B     @RC00112                                            0114 00358000
@RF00112 LR    @10,HEDBPTR                                         0114 00359000
         SLR   @09,@09                                             0114 00360000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0114 00361000
         AR    @10,@09                                             0114 00362000
         LR    DNOBPTR,@10                                         0114 00363000
*           END;                                                   0115 00364000
@RC00112 DS    0H                                                  0115 00365000
@DE00094 TM    LOOPFLG,B'00000100'                                 0115 00366000
         BZ    @DL00094                                            0115 00367000
*         DPOBPTR = DLPWOBAD;         /* REF THE DLPASSWORD OBLK     */ 00368000
         L     DPOBPTR,DLPWOBAD                                    0116 00369000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF THE FIRST ACCTNMBR IN 0117 00370000
*                                        THIS LOCAL CHAIN            */ 00371000
         LR    DNOBPTR,HEDBPTR                                     0117 00372000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0117 00373000
*ACMERGE: /* THIS SECTION OF CODE WILL MERGE TWO ACCTNMBR CHAINS.    */ 00374000
*         /* THE MERGE IS MADE NECESSARY BY THE PRUNING OF ONE PASS- */ 00375000
*         /* WORD TWIN FROM THE TREE.                                */ 00376000
*         /* FIND THE LAST ACCTNMBR IN THIS LOCAL CHAIN.             */ 00377000
*         DO WHILE AFLG01 = '0'B;     /* MORE BROTHERS?              */ 00378000
ACMERGE  B     @DE00118                                            0118 00379000
@DL00118 DS    0H                                                  0119 00380000
*           DNOBPTR = HEDBPTR+UADSANEX;/* REF THE NEXT ACCTNMBR OBLK */ 00381000
         LR    @10,HEDBPTR                                         0119 00382000
         SLR   @09,@09                                             0119 00383000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0119 00384000
         AR    @10,@09                                             0119 00385000
         LR    DNOBPTR,@10                                         0119 00386000
*           END;                                                   0120 00387000
@DE00118 TM    AFLG01(DNOBPTR),B'10000000'                         0120 00388000
         BZ    @DL00118                                            0120 00389000
*         /* CHECK WHETHER THIS IS ALSO THE END OF THE TOTAL CHAIN.  */ 00390000
*         /* IF IT IS, THEN THIS PROCESS MUST START WITH THE CHAIN   */ 00391000
*         /* UNDER THE OTHER PASSWORD TWIN.                          */ 00392000
*         IF UADSANEX = 0             /* END OF TOTAL CHAIN?         */ 00393000
*           THEN                      /* YES,                        */ 00394000
         SLR   @10,@10                                             0121 00395000
         ICM   @10,7,UADSANEX(DNOBPTR)                             0121 00396000
         LTR   @10,@10                                             0121 00397000
         BZ    @RT00121                                            0121 00398000
*             GOTO ACMERG2;           /* START WITH OTHER TWIN CHAIN */ 00399000
*         LASTOB = DNOBPTR;           /* SAVE ADDR OF THIS LAST OBLK */ 00400000
         ST    DNOBPTR,LASTOB                                      0123 00401000
*         ACSNOFS = UADSANEX;         /* SAVE OFFSET TO COUSIN       */ 00402000
         LR    ACSNOFS,@10                                         0124 00403000
*         CSNSAVE = ACSNOFS;          /* SAME AS ABOVE,FOR LATER USE */ 00404000
         ST    ACSNOFS,CSNSAVE                                     0125 00405000
*         DPOBPTR = NLPWOBAD;         /* REF THE OTHER TWIN OBLK     */ 00406000
         LR    DPOBPTR,NLPWOBAD                                    0126 00407000
*         SUBOFS = UADSPSUB;          /* SAVE OFFSET TO FIRST ACCT-     00408000
*                                        NMBR OBLK                   */ 00409000
         L     @10,UADSPSUB(,DPOBPTR)                              0127 00410000
         ST    @10,SUBOFS                                          0127 00411000
*         /* COMPARE COUSIN-OFFSET FROM THE FIRST CHAIN TO THE ABOVE */ 00412000
*         /* OFFSET. IF THEY ARE EQUAL, THEN THE TWO CHAINS ARE      */ 00413000
*         /* ADJACENT AND OFFSETS DO NOT HAVE TO BE CHANGED.         */ 00414000
*         IF ACSNOFS = SUBOFS                                      0128 00415000
*           THEN                      /* YES, THEY ARE ADJACENT      */ 00416000
         CR    ACSNOFS,@10                                         0128 00417000
         BNE   @RF00128                                            0128 00418000
*             DO;                                                  0129 00419000
*               DNOBPTR = LASTOB;     /* REF LAST OBLK UNDER FIRST 0130 00420000
*                                        PASSWORD TWIN               */ 00421000
         L     @10,LASTOB                                          0130 00422000
         LR    DNOBPTR,@10                                         0130 00423000
*               AFLG01 = '0'B;        /* SET CHAIN FLAG TO 0, CHANGING  00424000
*                                        COUSINS TO BROTHERS         */ 00425000
         NI    AFLG01(DNOBPTR),B'01111111'                         0131 00426000
*               GOTO PWPRUNE;         /* GO FREE THE OBLK AND DATAFD */ 00427000
         B     PWPRUNE                                             0132 00428000
*             END;                                                 0133 00429000
*ACMERG1: /* THE TWO CHAINS ARE NOT ADJACENT. FIND THE END OF THE    */ 00430000
*         /* NEXT INTERVENING CHAIN AND CHECK WHETHER IT POINTS TO   */ 00431000
*         /* THE SECOND TWIN CHAIN.                                  */ 00432000
*         DNOBPTR = HEDBPTR+ACSNOFS;  /* REF FIRST OBLK OF THE INTER-   00433000
*                                        VENING CHAIN                */ 00434000
@RF00128 DS    0H                                                  0134 00435000
ACMERG1  LR    DNOBPTR,HEDBPTR                                     0134 00436000
         AR    DNOBPTR,ACSNOFS                                     0134 00437000
*         /* FIND THE END OF THIS CHAIN.                             */ 00438000
*         DO WHILE AFLG01 = '0'B;     /* MORE BROTHERS?              */ 00439000
         B     @DE00135                                            0135 00440000
@DL00135 DS    0H                                                  0136 00441000
*           DNOBPTR = HEDBPTR+UADSANEX;/* REF THE NEXT OBLK          */ 00442000
         LR    @10,HEDBPTR                                         0136 00443000
         SLR   @09,@09                                             0136 00444000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0136 00445000
         AR    @10,@09                                             0136 00446000
         LR    DNOBPTR,@10                                         0136 00447000
*           END;                                                   0137 00448000
@DE00135 TM    AFLG01(DNOBPTR),B'10000000'                         0137 00449000
         BZ    @DL00135                                            0137 00450000
*         /* END OF THIS CHAIN. IF IT IS ALSO THE END OF THE TOTAL   */ 00451000
*         /* CHAIN, THEN THE SEARCH MUST BEGIN WITH THE OTHER TWIN   */ 00452000
*         /* CHAIN.                                                  */ 00453000
*         IF UADSANEX = 0             /* END OF TOTAL CHAIN?         */ 00454000
*           THEN                      /* YES,                        */ 00455000
         SLR   @10,@10                                             0138 00456000
         ICM   @10,7,UADSANEX(DNOBPTR)                             0138 00457000
         LTR   @10,@10                                             0138 00458000
         BZ    @RT00138                                            0138 00459000
*             GOTO ACMERG2;           /* GO START WITH OTHER TWIN    */ 00460000
*         CSNPTR = DNOBPTR;           /* SAVE ADDR OF THIS OBLK      */ 00461000
         ST    DNOBPTR,CSNPTR                                      0140 00462000
*         ACSNOFS = UADSANEX;         /* SAVE OFFSET TO COUSIN       */ 00463000
         LR    ACSNOFS,@10                                         0141 00464000
*         /* COMPARE THE ABOVE OFFSET TO THE OFFSET TO THE TWIN      */ 00465000
*         /* CHAIN. REPEAT THE PROCESS UNTIL THE TWIN CHAIN IS FOUND */ 00466000
*         IF ACSNOFS ^= SUBOFS                                     0142 00467000
*           THEN                      /* THIS IS NOT THE OFFSET TO 0142 00468000
*                                        THE TWIN CHAIN              */ 00469000
         C     ACSNOFS,SUBOFS                                      0142 00470000
         BNE   @RT00142                                            0142 00471000
*             GOTO ACMERG1;           /* CONTINUE THE SEARCH         */ 00472000
*         /* THE TWIN CHAIN HAS BEEN FOUND. START THE MERGE          */ 00473000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF FIRST OBLK OF SECOND  0144 00474000
*                                        TWIN CHAIN                  */ 00475000
         LR    DNOBPTR,HEDBPTR                                     0144 00476000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0144 00477000
*         /* FIND THE END OF THE SECOND TWIN CHAIN.                  */ 00478000
*         DO WHILE AFLG01 = '0'B;     /* MORE BROTHERS?              */ 00479000
         B     @DE00145                                            0145 00480000
@DL00145 DS    0H                                                  0146 00481000
*           DNOBPTR = HEDBPTR+UADSANEX;/* REF NEXT OBLK              */ 00482000
         LR    @10,HEDBPTR                                         0146 00483000
         SLR   @09,@09                                             0146 00484000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0146 00485000
         AR    @10,@09                                             0146 00486000
         LR    DNOBPTR,@10                                         0146 00487000
*           END;                                                   0147 00488000
@DE00145 TM    AFLG01(DNOBPTR),B'10000000'                         0147 00489000
         BZ    @DL00145                                            0147 00490000
*         ANEXSAVE = UADSANEX;        /* SAVE OFFSET TO NEXT CHAIN   */ 00491000
         SLR   ANEXSAVE,ANEXSAVE                                   0148 00492000
         ICM   ANEXSAVE,7,UADSANEX(DNOBPTR)                        0148 00493000
*         UADSANEX = CSNSAVE;         /* CONNECT THE INTERVENING   0149 00494000
*                                        CHAIN(S) TO THE END OF THE     00495000
*                                        SECOND TWIN CHAIN           */ 00496000
         MVC   UADSANEX(3,DNOBPTR),CSNSAVE+1                       0149 00497000
*         DNOBPTR = CSNPTR;           /* REF THE LAST OBLK OF THE  0150 00498000
*                                        INTERVENING CHAIN(S)        */ 00499000
         L     DNOBPTR,CSNPTR                                      0150 00500000
*         UADSANEX = ANEXSAVE;        /* CONNECT THE ABOVE OBLK TO THE  00501000
*                                        REST OF THE TOTAL CHAIN     */ 00502000
         STCM  ANEXSAVE,7,UADSANEX(DNOBPTR)                        0151 00503000
*         DNOBPTR = LASTOB;           /* REF LAST OBLK IN FIRST TWIN */ 00504000
         L     DNOBPTR,LASTOB                                      0152 00505000
*         UADSANEX = ACSNOFS;         /* CONNECT THE TWO TWIN CHAINS */ 00506000
         STCM  ACSNOFS,7,UADSANEX(DNOBPTR)                         0153 00507000
*         AFLG01 = '0'B;              /* SET CHAIN FLAG TO 0, CHANGING  00508000
*                                        COUSINS TO BROTHERS         */ 00509000
         NI    AFLG01(DNOBPTR),B'01111111'                         0154 00510000
*         GOTO PWPRUNE;               /* MERGING IS COMPLETED. GO FREE  00511000
*                                        THE PWD OBLK AND DATA FIELD */ 00512000
         B     PWPRUNE                                             0155 00513000
*ACMERG2: /* THE END OF THE TOTAL CHAIN WAS REACHED BEFORE THE       */ 00514000
*         /* TWIN CHAIN WAS FOUND. RESET APPROPRIATE PTRS AND START  */ 00515000
*         /* THE MERGE PROCESS WITH THE OTHER TWIN CHAIN.            */ 00516000
*         DPOBPTR = DLPWOBAD;         /* REF ONE TWIN PWD OBLK       */ 00517000
ACMERG2  L     @10,DLPWOBAD                                        0156 00518000
         LR    DPOBPTR,@10                                         0156 00519000
*         SUBOFS = UADSPSUB;          /* SAVE OFFSET TO 1ST ACTNBR   */ 00520000
         L     @09,UADSPSUB(,DPOBPTR)                              0157 00521000
         ST    @09,SUBOFS                                          0157 00522000
*         DPOBPTR = NLPWOBAD;         /* REF THE OTHER TWIN OBLK     */ 00523000
         LR    DPOBPTR,NLPWOBAD                                    0158 00524000
*         ACSNOFS = UADSPSUB;         /* SAVE OFFSET TO 1ST ACTNBR   */ 00525000
         L     ACSNOFS,UADSPSUB(,DPOBPTR)                          0159 00526000
*         UADSPSUB = SUBOFS;          /* CONNECT CHAIN OF OTHER TWIN */ 00527000
         ST    @09,UADSPSUB(,DPOBPTR)                              0160 00528000
*         DPOBPTR = DLPWOBAD;         /* REF 1ST TWIN AGAIN          */ 00529000
         LR    DPOBPTR,@10                                         0161 00530000
*         UADSPSUB = ACSNOFS;         /* CONNECT CHAIN OF OTHER TWIN */ 00531000
         ST    ACSNOFS,UADSPSUB(,DPOBPTR)                          0162 00532000
*         DNOBPTR = HEDBPTR+ACSNOFS;  /* REF FIRST ACCTNMBR OBLK     */ 00533000
         LR    DNOBPTR,HEDBPTR                                     0163 00534000
         AR    DNOBPTR,ACSNOFS                                     0163 00535000
*         GOTO ACMERGE;               /* GO START THE PROCESS AGAIN  */ 00536000
         B     ACMERGE                                             0164 00537000
*PWPRUNE: /* THIS SECTION OF CODE WILL PRUNE ONE PASSWORD OFFSET     */ 00538000
*         /* BLOCK AND DATA FIELD FROM THE TREE.                     */ 00539000
*         DPOBPTR = NLPWOBAD;         /* REF THE OBLK TO BE PRUNED   */ 00540000
PWPRUNE  LR    DPOBPTR,NLPWOBAD                                    0165 00541000
*         PRUNOFS = NLPWOBAD-HEDBPTR; /* RECALCULATE OFFSET TO OBLK     00542000
*                                        THAT IS TO BE PRUNED        */ 00543000
         LR    PRUNOFS,NLPWOBAD                                    0166 00544000
         SR    PRUNOFS,HEDBPTR                                     0166 00545000
*         CSNSAVE = UADSPNEX;         /* SAVE OFFSET TO BROTHER      */ 00546000
         SLR   @10,@10                                             0167 00547000
         ICM   @10,7,UADSPNEX(DPOBPTR)                             0167 00548000
         ST    @10,CSNSAVE                                         0167 00549000
*         DPOBPTR = HEDBPTR+UADSPWD1; /* REF FIRST OBLK IN PWD CHAIN */ 00550000
         LR    DPOBPTR,HEDBPTR                                     0168 00551000
         A     DPOBPTR,UADSPWD1(,HEDBPTR)                          0168 00552000
*         /* CHECK WHETHER THE OBLK TO BE PRUNED IS THE FIRST ONE    */ 00553000
*         /* IN THE CHAIN.                                           */ 00554000
*         IF DPOBPTR = NLPWOBAD                                    0169 00555000
*           THEN                      /* YES,                        */ 00556000
         CR    DPOBPTR,NLPWOBAD                                    0169 00557000
         BNE   @RF00169                                            0169 00558000
*             UADSPWD1 = CSNSAVE;     /* PUT THE OFFSET TO THE BROTHER  00559000
*                                        OBLK INTO THE USER HEADER   */ 00560000
         ST    @10,UADSPWD1(,HEDBPTR)                              0170 00561000
*           ELSE                                                   0171 00562000
*             DO;                                                  0171 00563000
         B     @RC00169                                            0171 00564000
@RF00169 DS    0H                                                  0172 00565000
*             /* FIND THE BROTHER OBLK WHICH POINTS TO THE OBLK TO BE*/ 00566000
*             /* PRUNED FROM THE TREE.                               */ 00567000
*             DO WHILE PRUNOFS ^= UADSPNEX;                        0172 00568000
         B     @DE00172                                            0172 00569000
@DL00172 DS    0H                                                  0173 00570000
*               DPOBPTR = HEDBPTR+UADSPNEX;/* REF THE NEXT PASSWD    */ 00571000
         LR    @10,HEDBPTR                                         0173 00572000
         SLR   @09,@09                                             0173 00573000
         ICM   @09,7,UADSPNEX(DPOBPTR)                             0173 00574000
         AR    @10,@09                                             0173 00575000
         LR    DPOBPTR,@10                                         0173 00576000
*               END;                                               0174 00577000
@DE00172 SLR   @10,@10                                             0174 00578000
         ICM   @10,7,UADSPNEX(DPOBPTR)                             0174 00579000
         CR    PRUNOFS,@10                                         0174 00580000
         BNE   @DL00172                                            0174 00581000
*             /* THE DESIRED BROTHER OBLK HAS BEEN FOUND.            */ 00582000
*             UADSPNEX = CSNSAVE;     /* PUT THE BROTHER-OFFSET FROM    00583000
*                                        THE PRUNED OBLK INTO THIS 0175 00584000
*                                        OBLK                        */ 00585000
         L     @10,CSNSAVE                                         0175 00586000
         STCM  @10,7,UADSPNEX(DPOBPTR)                             0175 00587000
*             /* IF THE OBLK TO BE PRUNED IS THE LAST ONE IN THE     */ 00588000
*             /* TOTAL CHAIN, THEN THE CHAIN FLAG IN THE 'NEW' LAST  */ 00589000
*             /* OBLK MUST BE SET TO 1, INDICATING END OF CHAIN.     */ 00590000
*             IF CSNSAVE = 0                                       0176 00591000
*               THEN                  /* YES, IT IS THE LAST OBLK    */ 00592000
         LTR   @10,@10                                             0176 00593000
         BNZ   @RF00176                                            0176 00594000
*                 PFLG01 = '1'B;      /* SET CHAIN FLAG IN NEW LAST     00595000
*                                        OBLK TO 1                   */ 00596000
         OI    PFLG01(DPOBPTR),B'10000000'                         0177 00597000
*             END;                                                 0178 00598000
@RF00176 DS    0H                                                  0179 00599000
*         DPOBPTR = NLPWOBAD;         /* REF THE OBLK TO BE PRUNED   */ 00600000
@RC00169 LR    DPOBPTR,NLPWOBAD                                    0179 00601000
*         AREAOFST = UADSPDAT;        /* OFFSET TO DATA FIELD        */ 00602000
         L     @10,UADSPDAT(,DPOBPTR)                              0180 00603000
         ST    @10,AREAOFST                                        0180 00604000
*         AREALNTH = 12;              /* NUMBER OF BYTES TO BE FREED */ 00605000
         MVC   AREALNTH(2),@CH00055                                0181 00606000
*         CALL IKJFRSP;               /* GO FREE THE DATA FIELD      */ 00607000
         BAL   @14,IKJFRSP                                         0182 00608000
*         /* PREPARE TO FREE THE OFFSET BLOCK                        */ 00609000
*         AREAOFST = PRUNOFS;         /* OFFSET TO THIS OBLOK        */ 00610000
         ST    PRUNOFS,AREAOFST                                    0183 00611000
*         CALL IKJFRSP;               /* GO FREE THE OFFSET BLOCK    */ 00612000
         BAL   @14,IKJFRSP                                         0184 00613000
*         GOTO CHGEOK;                /* GO WRITE THIS TREE BACK INTO   00614000
*                                        THE UADS                    */ 00615000
         B     CHGEOK                                              0185 00616000
*PRTWSRCH:/* MERGING OF TWO PROCNAME CHAINS IS NECESSARY BECAUSE     */ 00617000
*         /* AN ACCTNMBR (ONE OF A PAIR OF TWINS) HAS TO BE PRUNED   */ 00618000
*         /* FROM THE TREE. THE TWO CHAINS MUST BE COMPARED TO       */ 00619000
*         /* ASSURE THAT THE MERGE WILL NOT RESULT IN PROC TWINS.    */ 00620000
*         /* IF IT DOES, THEN ONE OF THE TWINS MUST BE PRUNED FROM   */ 00621000
*         /* THE TREE.                                               */ 00622000
*         DNOBPTR = ACTWIN2;          /* REF FIRST ACCTNMBR TWIN     */ 00623000
PRTWSRCH LR    DNOBPTR,ACTWIN2                                     0186 00624000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF ITS FIRST PROCNAME OBLK */ 00625000
         LR    DROBPTR,HEDBPTR                                     0187 00626000
         A     DROBPTR,UADSASUB(,DNOBPTR)                          0187 00627000
*PRTWSR1: /* BEGINNING OF THE SEARCH LOOP.                           */ 00628000
*         RDATSAVE = UADSRDAT;        /* SAVE OFFSET TO DATA FIELD   */ 00629000
PRTWSR1  L     @07,UADSRDAT(,DROBPTR)                              0188 00630000
         ST    @07,RDATSAVE                                        0188 00631000
*         UADSRPTR = HEDBPTR+RDATSAVE;/* REF THE DATA FIELD          */ 00632000
         AR    @07,HEDBPTR                                         0189 00633000
         LR    UADSRPTR,@07                                        0189 00634000
*         PRCOMP = UADSRNAM;          /* SAVE THIS PROCNAME          */ 00635000
         MVC   PRCOMP(8),UADSRNAM(UADSRPTR)                        0190 00636000
*         PRTWIN1 = DROBPTR;          /* SAVE ADDR OF THIS OBLK      */ 00637000
         ST    DROBPTR,PRTWIN1                                     0191 00638000
*         DNOBPTR = ACTWIN1;          /* REF THE SECOND ACTNBR TWIN  */ 00639000
         LR    DNOBPTR,ACTWIN1                                     0192 00640000
*         /* IT IS POSSIBLE THAT ALL PROCS UNDER THE TWIN HAVE       */ 00641000
*         /* BEEN PRUNED. IF SO, THEN THE SUB OFFSET WAS SET TO 0.   */ 00642000
*         IF UADSASUB = 0             /* ANY PROCS LEFT?             */ 00643000
*           THEN                      /* NO,                         */ 00644000
         L     @07,UADSASUB(,DNOBPTR)                              0193 00645000
         LTR   @07,@07                                             0193 00646000
         BZ    @RT00193                                            0193 00647000
*             GOTO PRTWSR3;           /* GO CHECK WHERE TO CONTINUE  */ 00648000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF ITS FIRST PROCNAME OBLK */ 00649000
         AR    @07,HEDBPTR                                         0195 00650000
         LR    DROBPTR,@07                                         0195 00651000
*         /* COMPARE THE PROCEDURE NAMES. IF TWO EQUAL NAMES ARE     */ 00652000
*         /* FOUND, THEN COMPARE THE DATA FIELDS. IF THESE ARE NOT   */ 00653000
*         /* EQUAL, THEN THE MERGE IS NOT POSSIBLE SINCE IT IS NOT   */ 00654000
*         /* KNOWN WHICH ATTRIBUTES ARE TO BE KEPT.                  */ 00655000
*         LOOPFLG = '0'B;             /* RESET LOOP FLAG             */ 00656000
         NI    LOOPFLG,B'11111011'                                 0196 00657000
*         DO WHILE LOOPFLG = '0'B;    /* LOOP TO END OF ACCTNBR CHAIN*/ 00658000
         B     @DE00197                                            0197 00659000
@DL00197 DS    0H                                                  0198 00660000
*           UADSRPTR = HEDBPTR+UADSRDAT;/* REF THIS PROC DATA FIELD  */ 00661000
         L     @07,UADSRDAT(,DROBPTR)                              0198 00662000
         LR    UADSRPTR,HEDBPTR                                    0198 00663000
         AR    UADSRPTR,@07                                        0198 00664000
*           IF PRCOMP = UADSRNAM      /* ARE THE PROCNAMES EQUAL?    */ 00665000
*             THEN                    /* YES,                        */ 00666000
         CLC   PRCOMP(8),UADSRNAM(UADSRPTR)                        0199 00667000
         BNE   @RF00199                                            0199 00668000
*               /* DO THEY USE THE SAME DATA FIELDS? IF NOT, THEN    */ 00669000
*               /* THE DATA IS DIFFERENT AND THE MERGE IS IMPOSSIBLE.*/ 00670000
*               IF RDATSAVE ^= UADSRDAT                            0200 00671000
*                 THEN                /* THE DATA IS NOT EQUAL       */ 00672000
         C     @07,RDATSAVE                                        0200 00673000
         BE    @RF00200                                            0200 00674000
*                   DO;                                            0201 00675000
*                   MSGNMBR = 15;     /* 13- IMPOSSIBLE MERGE        */ 00676000
         MVI   MSGNMBR(CTRLTABP),X'0F'                             0202 00677000
*                   RETURN;           /* CHANGE CP WILL ISSUE THE  0203 00678000
*                                        ERROR MSG & CONTINUE WITH 0203 00679000
*                                        THE NEXT USERID, IF ANY     */ 00680000
@EL00001 L     @13,4(,@13)                                         0203 00681000
@EF00001 L     @00,@SIZDATD                                        0203 00682000
         LR    @01,@11                                             0203 00683000
         FREEMAIN R,LV=(0),A=(1)                                        00684000
@ER00001 LM    @14,@12,12(@13)                                     0203 00685000
         BR    @14                                                 0203 00686000
*                   END;                                           0204 00687000
*                 ELSE                /* THE DATA IS EQUAL           */ 00688000
*                   DO;                                            0205 00689000
@RF00200 DS    0H                                                  0206 00690000
*                   PRTWIN2 = DROBPTR;/* SAVE ADDR OF THIS TWIN      */ 00691000
         ST    DROBPTR,PRTWIN2                                     0206 00692000
*                   GOTO PRPRUNE;     /* GO PRUNE ONE TWIN           */ 00693000
         B     PRPRUNE                                             0207 00694000
*                   END;                                           0208 00695000
*           /* PROCNAMES ARE NOT EQUAL. CONTINUE THE SEARCH          */ 00696000
*           IF FLGR01 = '1'B          /* ARE THERE MORE BROTHERS?    */ 00697000
*             THEN                    /* NO,                         */ 00698000
@RF00199 TM    FLGR01(DROBPTR),B'10000000'                         0209 00699000
         BNO   @RF00209                                            0209 00700000
*               LOOPFLG = '1'B;       /* TERMINATE LOOP              */ 00701000
         OI    LOOPFLG,B'00000100'                                 0210 00702000
*             ELSE                    /* YES,                        */ 00703000
*               DROBPTR = HEDBPTR     /* REF THE BROTHER OBLK        */ 00704000
*                 +UADSRNEX;                                       0211 00705000
         B     @RC00209                                            0211 00706000
@RF00209 LR    @07,HEDBPTR                                         0211 00707000
         SLR   @05,@05                                             0211 00708000
         ICM   @05,7,UADSRNEX(DROBPTR)                             0211 00709000
         AR    @07,@05                                             0211 00710000
         LR    DROBPTR,@07                                         0211 00711000
*           END;                                                   0212 00712000
@RC00209 DS    0H                                                  0212 00713000
@DE00197 TM    LOOPFLG,B'00000100'                                 0212 00714000
         BZ    @DL00197                                            0212 00715000
*PRTWSR2: /* LABEL FOR RETURN POINT AFTER ONE TWIN HAS BEEN PRUNED.  */ 00716000
*         DROBPTR = PRTWIN1;          /* REF THE LAST-USED OBLK IN 0213 00717000
*                                        THE ACTWIN2 CHAIN           */ 00718000
PRTWSR2  L     DROBPTR,PRTWIN1                                     0213 00719000
*         /* ARE THERE MORE PROCNAMES IN THE ACTWIN2 CHAIN?          */ 00720000
*         IF FLGR01 = '0'B                                         0214 00721000
*           THEN                      /* YES,                        */ 00722000
         TM    FLGR01(DROBPTR),B'10000000'                         0214 00723000
         BNZ   @RF00214                                            0214 00724000
*             DO;                                                  0215 00725000
*               DROBPTR = HEDBPTR     /* REF THE BROTHER OBLK        */ 00726000
*                 +UADSRNEX;                                       0216 00727000
         LR    @07,HEDBPTR                                         0216 00728000
         SLR   @05,@05                                             0216 00729000
         ICM   @05,7,UADSRNEX(DROBPTR)                             0216 00730000
         AR    @07,@05                                             0216 00731000
         LR    DROBPTR,@07                                         0216 00732000
*               GOTO PRTWSR1;         /* CONTINUE THE TWIN SEARCH    */ 00733000
         B     PRTWSR1                                             0217 00734000
*             END;                                                 0218 00735000
*           ELSE                      /* NO, SEARCH IS COMPLETED,    */ 00736000
*PRTWSR3:     /* CHECK CONTROL FLAG TO DETERMINE WHERE TO CONTINUE.  */ 00737000
*             IF ALLACFLG = '1'B                                   0219 00738000
*               THEN                                               0219 00739000
@RF00214 DS    0H                                                  0219 00740000
PRTWSR3  TM    ALLACFLG,B'00100000'                                0219 00741000
         BO    @RT00219                                            0219 00742000
*                 GOTO CHTWSR2;       /* CONTINUE SEARCH UNDER NEXT 2   00743000
*                                        ACCTNMBRS IN A LOCAL CHAIN  */ 00744000
*               ELSE                                               0221 00745000
*                 GOTO PRMERGE;       /* GO MERGE THE TWO PROCNAME 0221 00746000
*                                        CHAINS OF ACTWIN1 & ACTWIN2 */ 00747000
         B     PRMERGE                                             0221 00748000
*PRPRUNE: /* THIS SECTION OF CODE WILL PRUNE A PROCEDURE NAME OFF-   */ 00749000
*         /* SET BLOCK, ONE OF A PAIR OF TWINS, FROM THE TREE. THE   */ 00750000
*         /* TWINS ARE THE RESULT OF THE MERGE OF TWO PROCNAME       */ 00751000
*         /* CHAINS UNDER ACCTNMBR TWINS.                            */ 00752000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF ITS DATA FIELD          */ 00753000
PRPRUNE  LR    UADSRPTR,HEDBPTR                                    0222 00754000
         A     UADSRPTR,UADSRDAT(,DROBPTR)                         0222 00755000
*         UADSRCTR = UADSRCTR-1;      /* DECREMENT THE USE COUNTER   */ 00756000
         SLR   @07,@07                                             0223 00757000
         IC    @07,UADSRCTR(,UADSRPTR)                             0223 00758000
         BCTR  @07,0                                               0223 00759000
         STC   @07,UADSRCTR(,UADSRPTR)                             0223 00760000
*         RNEXSAVE = UADSRNEX;        /* SAVE OFFSET TO NEXT OBLK    */ 00761000
         SLR   @07,@07                                             0224 00762000
         ICM   @07,7,UADSRNEX(DROBPTR)                             0224 00763000
         ST    @07,RNEXSAVE                                        0224 00764000
*         /* SAVE THE CHAIN FLAG BEFORE PRUNING THE OFFSET BLOCK     */ 00765000
*         IF FLGR01 = '0'B            /* CHAIN FLAG = '0'?           */ 00766000
*           THEN                      /* YES,                        */ 00767000
         TM    FLGR01(DROBPTR),B'10000000'                         0225 00768000
         BNZ   @RF00225                                            0225 00769000
*             FLGSAVE = '0'B;         /* SET FLAGSAVE TO '0'         */ 00770000
         NI    FLGSAVE,B'01111111'                                 0226 00771000
*           ELSE                      /* NO,                         */ 00772000
*             FLGSAVE = '1'B;         /* SET FLAGSAVE TO '1'         */ 00773000
         B     @RC00225                                            0227 00774000
@RF00225 OI    FLGSAVE,B'10000000'                                 0227 00775000
*         DPOBPTR = HEDBPTR+UADSPWD1; /* REF FIRST PASSWORD OBLK     */ 00776000
@RC00225 LR    DPOBPTR,HEDBPTR                                     0228 00777000
         A     DPOBPTR,UADSPWD1(,HEDBPTR)                          0228 00778000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF FIRST ACCTNMBR OBLK     */ 00779000
         LR    DNOBPTR,HEDBPTR                                     0229 00780000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0229 00781000
*         /* IT IS POSSIBLE THAT NO PROCNAMES ARE LEFT UNDER THE     */ 00782000
*         /* FIRST ACCTNMBR. FIND THE 1ST ACCTNMBR OFFSET BLOCK IN   */ 00783000
*         /* WHICH THE SUB OFFSET IS NOT 0.                          */ 00784000
*         DO WHILE UADSASUB = 0;      /* ALL PROCNAMES PRUNED?       */ 00785000
         B     @DE00230                                            0230 00786000
@DL00230 DS    0H                                                  0231 00787000
*           DNOBPTR = HEDBPTR+UADSANEX;/* REF NEXT ACCTNMBR OBLK     */ 00788000
         LR    @07,HEDBPTR                                         0231 00789000
         SLR   @05,@05                                             0231 00790000
         ICM   @05,7,UADSANEX(DNOBPTR)                             0231 00791000
         AR    @07,@05                                             0231 00792000
         LR    DNOBPTR,@07                                         0231 00793000
*           END;                                                   0232 00794000
@DE00230 L     @07,UADSASUB(,DNOBPTR)                              0232 00795000
         LTR   @07,@07                                             0232 00796000
         BZ    @DL00230                                            0232 00797000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF FIRST PROCNAME OBLK     */ 00798000
         L     @05,UADSASUB(,DNOBPTR)                              0233 00799000
         AR    @05,HEDBPTR                                         0233 00800000
         LR    DROBPTR,@05                                         0233 00801000
*         PRUNOFS = PRTWIN2-HEDBPTR;  /* RECALCULATE OFFSET TO OBLK     00802000
*                                        TO BE PRUNED                */ 00803000
         L     @05,PRTWIN2                                         0234 00804000
         LR    PRUNOFS,@05                                         0234 00805000
         SR    PRUNOFS,HEDBPTR                                     0234 00806000
*         /* IF THE OFFSET BLOCK TO BE PRUNED IS THE FIRST ONE IN    */ 00807000
*         /* THE TOTAL CHAIN, NO CHANGES TO OTHER OBLKS ARE NECES-   */ 00808000
*         /* SARY. IF NOT, THEN THE BROTHER OR COUSIN POINTING TO    */ 00809000
*         /* THE TWIN TO BE PRUNED MUST BE FOUND.                    */ 00810000
*         IF DROBPTR = PRTWIN2        /* FIRST OBLK IN TOTAL CHAIN?  */ 00811000
*           THEN                      /* YES,                        */ 00812000
         CR    DROBPTR,@05                                         0235 00813000
         BE    @RT00235                                            0235 00814000
*             GOTO PRPRUN3;           /* GO FREE THIS OBLK           */ 00815000
*         /* FIND THE OFFSET BLOCK POINTING TO THE TWIN OBLK BY      */ 00816000
*         /* COMPARING UADSRNEX TO THE KNOWN OFFSET.                 */ 00817000
*         DO WHILE UADSRNEX ^= PRUNOFS;/* DOES THIS OBLK POINT TO THE   00818000
*                                         OBLK TO BE PRUNED?         */ 00819000
         B     @DE00237                                            0237 00820000
@DL00237 DS    0H                                                  0238 00821000
*           DROBPTR = HEDBPTR+UADSRNEX;/* REF NEXT OBLK IN THE CHAIN */ 00822000
         LR    @05,HEDBPTR                                         0238 00823000
         SLR   @03,@03                                             0238 00824000
         ICM   @03,7,UADSRNEX(DROBPTR)                             0238 00825000
         AR    @05,@03                                             0238 00826000
         LR    DROBPTR,@05                                         0238 00827000
*           END;                                                   0239 00828000
@DE00237 SLR   @05,@05                                             0239 00829000
         ICM   @05,7,UADSRNEX(DROBPTR)                             0239 00830000
         CR    PRUNOFS,@05                                         0239 00831000
         BNE   @DL00237                                            0239 00832000
*         /* THE ABOVE DESCRIBED OFFSET BLOCK HAS BEEN FOUND. INSERT */ 00833000
*         /* CHAIN FLAG OF TWIN IF THAT FLAG IS '1', I.E., IF THE    */ 00834000
*         /* TWIN IS THE LAST OFFSET BLOCK IN ITS LOCAL CHAIN.       */ 00835000
*         IF FLGSAVE = '1'B                                        0240 00836000
*           THEN                      /* YES, LAST IN CHAIN,         */ 00837000
         TM    FLGSAVE,B'10000000'                                 0240 00838000
         BNO   @RF00240                                            0240 00839000
*             FLGR01 = '1'B;          /* INSERT FLAG OF TWIN         */ 00840000
         OI    FLGR01(DROBPTR),B'10000000'                         0241 00841000
*         UADSRNEX = RNEXSAVE;        /* INSERT THE OFFSET TO THE  0242 00842000
*                                        NEXT OBLK. THIS UNHOOKS THE    00843000
*                                        TWIN FROM THE CHAIN         */ 00844000
@RF00240 MVC   UADSRNEX(3,DROBPTR),RNEXSAVE+1                      0242 00845000
*PRPRUN3: /* PRUNE THE TWIN OFFSET BLOCK FROM THE TREE.              */ 00846000
*         /* IF THE PROC OFFSET BLOCK TO BE PRUNED IS THE ONLY ONE   */ 00847000
*         /* UNDER ITS ACCTNMBR, THEN SET THE SUB OFFSET IN THE      */ 00848000
*         /* ACCTNMBR OBLK TO 0 FOR LATER USE.                       */ 00849000
*         DNOBPTR = ACTWIN1;          /* REF THE ACCTNMBR TWIN       */ 00850000
PRPRUN3  LR    DNOBPTR,ACTWIN1                                     0243 00851000
*         DROBPTR = PRTWIN2;          /* REF THE PROC TO BE PRUNED   */ 00852000
         L     DROBPTR,PRTWIN2                                     0244 00853000
*         /* IS THE PROC TWIN THE 1ST ONE IN ITS CHAIN?              */ 00854000
*         IF UADSASUB = PRUNOFS                                    0245 00855000
*           THEN                      /* YES,                        */ 00856000
         C     PRUNOFS,UADSASUB(,DNOBPTR)                          0245 00857000
         BNE   @RF00245                                            0245 00858000
*             /* IF IT IS ALSO THE LAST ONE, THEN IT IS THE ONLY ONE */ 00859000
*             IF FLGR01 = '1'B                                     0246 00860000
*               THEN                  /* IT IS THE ONLY PROC         */ 00861000
         TM    FLGR01(DROBPTR),B'10000000'                         0246 00862000
         BNO   @RF00246                                            0246 00863000
*                 UADSASUB = 0;       /* SET SUB OFFSET TO 0         */ 00864000
         SLR   @05,@05                                             0247 00865000
         ST    @05,UADSASUB(,DNOBPTR)                              0247 00866000
*               ELSE                  /* NOT THE ONLY ONE,           */ 00867000
*                 UADSASUB = RNEXSAVE;/* INSERT OFFSET TO BROTHER    */ 00868000
         B     @RC00246                                            0248 00869000
@RF00246 L     @05,RNEXSAVE                                        0248 00870000
         ST    @05,UADSASUB(,DNOBPTR)                              0248 00871000
*         AREAOFST = PRUNOFS;         /* OFFSET TO OBLK TO BE FREED  */ 00872000
@RC00246 DS    0H                                                  0249 00873000
@RF00245 ST    PRUNOFS,AREAOFST                                    0249 00874000
*         AREALNTH = 12;              /* NUMBER OF BYTES TO BE FREED */ 00875000
         MVC   AREALNTH(2),@CH00055                                0250 00876000
*         CALL IKJFRSP;               /* GO FREE THIS OBLK           */ 00877000
         BAL   @14,IKJFRSP                                         0251 00878000
*         GOTO PRTWSR2;               /* CONTINUE THE SEARCH FOR   0252 00879000
*                                        PROCNAME TWINS              */ 00880000
         B     PRTWSR2                                             0252 00881000
*PRMERGE: /* THIS SECTION OF CODE WILL MERGE TWO PROCNAME CHAINS.    */ 00882000
*         /* PROCNAME TWINS, IF ANY WERE FOUND, HAVE BEEN PRUNED.    */ 00883000
*         /* THE MERGE IS MADE NECESSARY BY THE PRUNING OF ONE       */ 00884000
*         /* ACCTNMBR TWIN FROM THE TREE.                            */ 00885000
*         DNOBPTR = ACTWIN1;          /* REF THE TWIN TO BE PRUNED   */ 00886000
PRMERGE  LR    DNOBPTR,ACTWIN1                                     0253 00887000
*         /* IF THERE ARE NO PROCS LEFT UNDER THIS ACCTNMBR TWIN,    */ 00888000
*         /* THEN MERGING IS UNNECESSARY.                            */ 00889000
*         IF UADSASUB = 0                                          0254 00890000
*           THEN                      /* NO PROCS LEFT               */ 00891000
         L     @07,UADSASUB(,DNOBPTR)                              0254 00892000
         LTR   @07,@07                                             0254 00893000
         BZ    @RT00254                                            0254 00894000
*             GOTO MRGNEXT;           /* BYPASS THE MERGING SECTION  */ 00895000
*         DNOBPTR = ACTWIN2;          /* REF THE OTHER ACTNBR TWIN   */ 00896000
         LR    DNOBPTR,ACTWIN2                                     0256 00897000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF ITS FIRST PROC OBLK     */ 00898000
         LR    DROBPTR,HEDBPTR                                     0257 00899000
         A     DROBPTR,UADSASUB(,DNOBPTR)                          0257 00900000
*PRMERG1: /* FIND THE LAST OFFSET BLOCK IN THIS LOCAL CHAIN.         */ 00901000
*         DO WHILE FLGR01 = '0'B;     /* ANY BROTHERS?               */ 00902000
PRMERG1  B     @DE00258                                            0258 00903000
@DL00258 DS    0H                                                  0259 00904000
*           DROBPTR = HEDBPTR+UADSRNEX;/* REF THE NEXT BROTHER OBLK  */ 00905000
         LR    @07,HEDBPTR                                         0259 00906000
         SLR   @05,@05                                             0259 00907000
         ICM   @05,7,UADSRNEX(DROBPTR)                             0259 00908000
         AR    @07,@05                                             0259 00909000
         LR    DROBPTR,@07                                         0259 00910000
*           END;                                                   0260 00911000
@DE00258 TM    FLGR01(DROBPTR),B'10000000'                         0260 00912000
         BZ    @DL00258                                            0260 00913000
*         /* CHECK WHETHER THIS IS ALSO THE END OF THE TOTAL CHAIN.  */ 00914000
*         /* IF IT IS, THEN THIS PROCESS MUST START WITH THE CHAIN   */ 00915000
*         /* UNDER THE OTHER ACCTNMBR TWIN.                          */ 00916000
*         IF UADSRNEX = 0             /* END OF TOTAL CHAIN?         */ 00917000
*           THEN                      /* YES,                        */ 00918000
         SLR   @07,@07                                             0261 00919000
         ICM   @07,7,UADSRNEX(DROBPTR)                             0261 00920000
         LTR   @07,@07                                             0261 00921000
         BZ    @RT00261                                            0261 00922000
*             GOTO PRMERG5;           /* START WITH OTHER TWIN CHAIN */ 00923000
*         LASTOB = DROBPTR;           /* SAVE ADDR OF THIS LAST OBLK */ 00924000
         ST    DROBPTR,LASTOB                                      0263 00925000
*         ACSNOFS = UADSRNEX;         /* SAVE OFFSET TO COUSIN       */ 00926000
         SLR   @05,@05                                             0264 00927000
         ICM   @05,7,UADSRNEX(DROBPTR)                             0264 00928000
         LR    ACSNOFS,@05                                         0264 00929000
*         CSNSAVE = ACSNOFS;          /* SAME AS ABOVE,FOR LATER USE */ 00930000
         ST    ACSNOFS,CSNSAVE                                     0265 00931000
*         DNOBPTR = ACTWIN1;          /* REF THE OTHER TWIN OBLK     */ 00932000
         LR    DNOBPTR,ACTWIN1                                     0266 00933000
*         SUBOFS = UADSASUB;          /* SAVE OFFSET TO ITS FIRST  0267 00934000
*                                        PROCNAME OBLK               */ 00935000
         L     @05,UADSASUB(,DNOBPTR)                              0267 00936000
         ST    @05,SUBOFS                                          0267 00937000
*         /* COMPARE COUSIN-OFFSET FROM THE FIRST CHAIN TO THE ABOVE */ 00938000
*         /* OFFSET. IF THEY ARE EQUAL, THEN THE TWO CHAINS ARE      */ 00939000
*         /* ADJACENT AND OFFSETS DO NOT HAVE TO BE CHANGED.         */ 00940000
*         IF ACSNOFS = SUBOFS                                      0268 00941000
*           THEN                      /* YES, THEY ARE ADJACENT      */ 00942000
         CR    ACSNOFS,@05                                         0268 00943000
         BNE   @RF00268                                            0268 00944000
*             DO;                                                  0269 00945000
*               DROBPTR = LASTOB;     /* REF LAST OBLK UNDER FIRST 0270 00946000
*                                        ACCTNMBR TWIN               */ 00947000
         L     @07,LASTOB                                          0270 00948000
         LR    DROBPTR,@07                                         0270 00949000
*               FLGR01 = '0'B;        /* CHANGE COUSIN TO BROTHER    */ 00950000
         NI    FLGR01(DROBPTR),B'01111111'                         0271 00951000
*               GOTO MRGNEXT;         /* GO CHK WHERE TO CONTINUE    */ 00952000
         B     MRGNEXT                                             0272 00953000
*             END;                                                 0273 00954000
*PRMERG2: /* THE TWO CHAINS ARE NOT ADJACENT. FIND THE END OF THE    */ 00955000
*         /* NEXT INTERVENING CHAIN AND CHECK WHETHER IT POINTS TO   */ 00956000
*         /* THE SECOND TWIN CHAIN.                                  */ 00957000
*         DROBPTR = HEDBPTR+ACSNOFS;  /* REF FIRST OBLK OF THE INTER-   00958000
*                                        VENING CHAIN                */ 00959000
@RF00268 DS    0H                                                  0274 00960000
PRMERG2  LR    DROBPTR,HEDBPTR                                     0274 00961000
         AR    DROBPTR,ACSNOFS                                     0274 00962000
*         /* FIND THE END OF THIS CHAIN.                             */ 00963000
*         DO WHILE FLGR01 = '0'B;     /* ANY BROTHERS?               */ 00964000
         B     @DE00275                                            0275 00965000
@DL00275 DS    0H                                                  0276 00966000
*           DROBPTR = HEDBPTR+UADSRNEX;/* REF THE NEXT OBLK          */ 00967000
         LR    @07,HEDBPTR                                         0276 00968000
         SLR   @05,@05                                             0276 00969000
         ICM   @05,7,UADSRNEX(DROBPTR)                             0276 00970000
         AR    @07,@05                                             0276 00971000
         LR    DROBPTR,@07                                         0276 00972000
*             END;                                                 0277 00973000
@DE00275 TM    FLGR01(DROBPTR),B'10000000'                         0277 00974000
         BZ    @DL00275                                            0277 00975000
*         /* END OF THIS CHAIN. IF IT IS ALSO THE END OF THE TOTAL   */ 00976000
*         /* CHAIN, THEN THE SEARCH MUST BEGIN WITH THE OTHER TWIN.  */ 00977000
*         IF UADSRNEX = 0             /* END OF TOTAL CHAIN?         */ 00978000
*           THEN                      /* YES,                        */ 00979000
         SLR   @07,@07                                             0278 00980000
         ICM   @07,7,UADSRNEX(DROBPTR)                             0278 00981000
         LTR   @07,@07                                             0278 00982000
         BZ    @RT00278                                            0278 00983000
*             GOTO PRMERG5;           /* GO START WITH OTHER TWIN    */ 00984000
*         CSNPTR = DROBPTR;           /* SAVE ADDR OF THIS OBLK      */ 00985000
         ST    DROBPTR,CSNPTR                                      0280 00986000
*         ACSNOFS = UADSRNEX;         /* SAVE OFFSET TO COUSIN       */ 00987000
         SLR   @05,@05                                             0281 00988000
         ICM   @05,7,UADSRNEX(DROBPTR)                             0281 00989000
         LR    ACSNOFS,@05                                         0281 00990000
*         /* COMPARE THE ABOVE OFFSET TO THE OFFSET TO THE TWIN      */ 00991000
*         /* CHAIN. REPEAT THE PROCESS UNTIL THE TWIN CHAIN IS FOUND */ 00992000
*         IF ACSNOFS ^= SUBOFS                                     0282 00993000
*           THEN                      /* THIS IS NOT THE OFFSET TO 0282 00994000
*                                        THE TWIN CHAIN              */ 00995000
         C     ACSNOFS,SUBOFS                                      0282 00996000
         BNE   @RT00282                                            0282 00997000
*             GOTO PRMERG2;           /* CONTINUE THE SEARCH         */ 00998000
*         /* THE TWIN CHAIN HAS BEEN FOUND. START THE MERGE          */ 00999000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF FIRST OBLK OF SECOND  0284 01000000
*                                        TWIN CHAIN                  */ 01001000
         LR    DROBPTR,HEDBPTR                                     0284 01002000
         A     DROBPTR,UADSASUB(,DNOBPTR)                          0284 01003000
*         /* FIND THE END OF THE SECOND TWIN CHAIN.                  */ 01004000
*         DO WHILE FLGR01 = '0'B;     /* ANY BROTHERS?               */ 01005000
         B     @DE00285                                            0285 01006000
@DL00285 DS    0H                                                  0286 01007000
*           DROBPTR = HEDBPTR+UADSRNEX;/* REF THE NEXT OBLK          */ 01008000
         LR    @05,HEDBPTR                                         0286 01009000
         SLR   @03,@03                                             0286 01010000
         ICM   @03,7,UADSRNEX(DROBPTR)                             0286 01011000
         AR    @05,@03                                             0286 01012000
         LR    DROBPTR,@05                                         0286 01013000
*             END;                                                 0287 01014000
@DE00285 TM    FLGR01(DROBPTR),B'10000000'                         0287 01015000
         BZ    @DL00285                                            0287 01016000
*         RNEXSAVE = UADSRNEX;        /* SAVE OFFSET TO NEXT CHAIN   */ 01017000
         SLR   @05,@05                                             0288 01018000
         ICM   @05,7,UADSRNEX(DROBPTR)                             0288 01019000
         ST    @05,RNEXSAVE                                        0288 01020000
*         UADSRNEX = CSNSAVE;         /* CONNECT THE INTERVENING   0289 01021000
*                                        CHAIN(S) TO THE END OF THE     01022000
*                                        SECOND TWIN CHAIN           */ 01023000
         MVC   UADSRNEX(3,DROBPTR),CSNSAVE+1                       0289 01024000
*         DROBPTR = CSNPTR;           /* REF THE LAST OBLK OF THE  0290 01025000
*                                        INTERVENING CHAIN(S)        */ 01026000
         L     DROBPTR,CSNPTR                                      0290 01027000
*         UADSRNEX = RNEXSAVE;        /* CONNECT THE ABOVE OBLK TO THE  01028000
*                                        REST OF THE TOTAL CHAIN     */ 01029000
         STCM  @05,7,UADSRNEX(DROBPTR)                             0291 01030000
*         DROBPTR = LASTOB;           /* REF FIRST OBLK IN THE FIRST    01031000
*                                        TWIN CHAIN                  */ 01032000
         L     DROBPTR,LASTOB                                      0292 01033000
*         UADSRNEX = ACSNOFS;         /* CONNECT THE TWO TWIN CHAINS */ 01034000
         STCM  ACSNOFS,7,UADSRNEX(DROBPTR)                         0293 01035000
*         FLGR01 = '0'B;              /* CHANGE COUSINS TO BROTHERS  */ 01036000
         NI    FLGR01(DROBPTR),B'01111111'                         0294 01037000
*MRGNEXT: /* CHECK CONTROL FLAG TO DETERMINE WHERE TO GO NEXT.       */ 01038000
*         IF ACPRFLG = '1'B                                        0295 01039000
*           THEN                                                   0295 01040000
MRGNEXT  TM    ACPRFLG,B'00000001'                                 0295 01041000
         BO    @RT00295                                            0295 01042000
*             GOTO ACCHGE2;           /* GO MAKE REQUIRED ADJUSTMENTS   01043000
*                                        BEFORE PRUNING THE OBLK     */ 01044000
*         GOTO ACPRUNE;               /* MERGING IS COMPLETED. GO FREE  01045000
*                                        ONE ACCTNMBR TWIN           */ 01046000
         B     ACPRUNE                                             0297 01047000
*PRMERG5: /* THE END OF THE TOTAL CHAIN WAS REACHED BEFORE THE       */ 01048000
*         /* SECOND TWIN CHAIN WAS FOUND. RESET APPROPRIATE PTRS     */ 01049000
*         /* AND START THE MERGE PROCESS WITH THE OTHER TWIN CHAIN.  */ 01050000
*         DNOBPTR = ACTWIN2;          /* REF ONE TWIN OBLK           */ 01051000
PRMERG5  LR    DNOBPTR,ACTWIN2                                     0298 01052000
*         SUBOFS = UADSASUB;          /* SAVE OFFSET TO ITS 1ST PROC */ 01053000
         L     @05,UADSASUB(,DNOBPTR)                              0299 01054000
         ST    @05,SUBOFS                                          0299 01055000
*         DNOBPTR = ACTWIN1;          /* REF THE OTHER ACTNBR TWIN   */ 01056000
         LR    DNOBPTR,ACTWIN1                                     0300 01057000
*         ACSNOFS = UADSASUB;         /* SAVE OFFSET TO ITS 1ST PROC */ 01058000
         L     ACSNOFS,UADSASUB(,DNOBPTR)                          0301 01059000
*         UADSASUB = SUBOFS;          /* INSERT OFFSET TO OTHER TWIN'S  01060000
*                                        FIRST PROC                  */ 01061000
         ST    @05,UADSASUB(,DNOBPTR)                              0302 01062000
*         DNOBPTR = ACTWIN2;          /* REF 1ST TWIN AGAIN          */ 01063000
         LR    DNOBPTR,ACTWIN2                                     0303 01064000
*         UADSASUB = ACSNOFS;         /* INSERT OFFSET TO OTHER TWIN'S  01065000
*                                        FIRST PROC                  */ 01066000
         ST    ACSNOFS,UADSASUB(,DNOBPTR)                          0304 01067000
*         DROBPTR = HEDBPTR+ACSNOFS;  /* REF FIRST PROCNAME OBLK     */ 01068000
         LR    DROBPTR,HEDBPTR                                     0305 01069000
         AR    DROBPTR,ACSNOFS                                     0305 01070000
*         GOTO PRMERG1;               /* GO START THE PROCESS AGAIN  */ 01071000
         B     PRMERG1                                             0306 01072000
*ACPRUNE: /* THIS SECTION OF CODE WILL PRUNE AN ACCTNMBR OFFSET      */ 01073000
*         /* BLOCK, ONE OF A PAIR OF TWINS, FROM THE TREE.           */ 01074000
*         DNOBPTR = ACTWIN1;          /* REF THE TWIN TO BE PRUNED   */ 01075000
ACPRUNE  LR    DNOBPTR,ACTWIN1                                     0307 01076000
*         IF UADSADAT ^= 0            /* ARE ACCT NMBRS SUPPORTED    */ 01077000
*           THEN                      /* YES,                        */ 01078000
         L     @07,UADSADAT(,DNOBPTR)                              0308 01079000
         LTR   @07,@07                                             0308 01080000
         BZ    @RF00308                                            0308 01081000
*             DO;                                                  0309 01082000
*               UADSAPTR = HEDBPTR+UADSADAT;/* REF ITS DATA FIELD    */ 01083000
         AR    @07,HEDBPTR                                         0310 01084000
         ST    @07,UADSAPTR                                        0310 01085000
*               UADSACTR = UADSACTR-1;      /* DECREMENT THE USE CNT */ 01086000
         SLR   @05,@05                                             0311 01087000
         IC    @05,UADSACTR(,@07)                                  0311 01088000
         BCTR  @05,0                                               0311 01089000
         STC   @05,UADSACTR(,@07)                                  0311 01090000
*             END;                                                 0312 01091000
*         ANEXSAVE = UADSANEX;        /* SAVE OFFSET TO NEXT OBLK    */ 01092000
@RF00308 SLR   ANEXSAVE,ANEXSAVE                                   0313 01093000
         ICM   ANEXSAVE,7,UADSANEX(DNOBPTR)                        0313 01094000
*         /* SAVE THE CHAIN FLAG BEFORE PRUNING THE OFFSET BLOCK     */ 01095000
*         IF AFLG01 = '0'B            /* CHAIN FLAG = '0'?           */ 01096000
*           THEN                      /* YES,                        */ 01097000
         TM    AFLG01(DNOBPTR),B'10000000'                         0314 01098000
         BNZ   @RF00314                                            0314 01099000
*             FLGSAVE = '0'B;         /* SET FLAGSAVE TO '0'         */ 01100000
         NI    FLGSAVE,B'01111111'                                 0315 01101000
*           ELSE                      /* NO,                         */ 01102000
*             FLGSAVE = '1'B;         /* SET FLAGSAVE TO '1'         */ 01103000
         B     @RC00314                                            0316 01104000
@RF00314 OI    FLGSAVE,B'10000000'                                 0316 01105000
*         DPOBPTR = HEDBPTR+UADSPWD1; /* REF FIRST PASSWORD OBLK     */ 01106000
@RC00314 LR    DPOBPTR,HEDBPTR                                     0317 01107000
         A     DPOBPTR,UADSPWD1(,HEDBPTR)                          0317 01108000
*         /* IT IS POSSIBLE THAT NO ACCTNMBRS ARE LEFT UNDER THE     */ 01109000
*         /* FIRST PASSWORD. FIND THE 1ST PASSWORD OFFSET BLOCK IN   */ 01110000
*         /* WHICH THE SUB OFFSET IS NOT 0.                          */ 01111000
*         DO WHILE UADSPSUB = 0;      /* ALL ACCTNMBRS PRUNED?       */ 01112000
         B     @DE00318                                            0318 01113000
@DL00318 DS    0H                                                  0319 01114000
*           DPOBPTR = HEDBPTR+UADSPNEX;/* REF NEXT PASSWORD OBLK     */ 01115000
         LR    @07,HEDBPTR                                         0319 01116000
         SLR   @03,@03                                             0319 01117000
         ICM   @03,7,UADSPNEX(DPOBPTR)                             0319 01118000
         AR    @07,@03                                             0319 01119000
         LR    DPOBPTR,@07                                         0319 01120000
*           END;                                                   0320 01121000
@DE00318 L     @07,UADSPSUB(,DPOBPTR)                              0320 01122000
         LTR   @07,@07                                             0320 01123000
         BZ    @DL00318                                            0320 01124000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF FIRST ACCTNMBR OBLK IN     01125000
*                                        THE TOTAL CHAIN             */ 01126000
         L     @15,UADSPSUB(,DPOBPTR)                              0321 01127000
         AR    @15,HEDBPTR                                         0321 01128000
         LR    DNOBPTR,@15                                         0321 01129000
*         PRUNOFS = ACTWIN1-HEDBPTR;  /* RECALCULATE OFFSET TO OBLK     01130000
*                                        TO BE PRUNED                */ 01131000
         LR    PRUNOFS,ACTWIN1                                     0322 01132000
         SR    PRUNOFS,HEDBPTR                                     0322 01133000
*         /* IF THE OFFSET BLOCK TO BE PRUNED IS THE FIRST ONE IN    */ 01134000
*         /* THE TOTAL CHAIN, NO CHANGES TO OTHER OBLKS ARE NECES-   */ 01135000
*         /* SARY. IF NOT, THEN THE BROTHER OR COUSIN POINTING TO    */ 01136000
*         /* THE TWIN TO BE PRUNED MUST BE FOUND.                    */ 01137000
*         IF DNOBPTR = ACTWIN1        /* FIRST IN TOTAL CHAIN?       */ 01138000
*           THEN                      /* YES,                        */ 01139000
         CR    DNOBPTR,ACTWIN1                                     0323 01140000
         BE    @RT00323                                            0323 01141000
*             GOTO ACPRUN3;           /* GO FREE THIS OBLK           */ 01142000
*         /* FIND THE OFFSET BLOCK POINTING TO THE TWIN OFFSET BLOCK */ 01143000
*         /* BY COMPARING UADSANEX TO THE KNOWN OFFSET.              */ 01144000
*         DO WHILE UADSANEX ^= PRUNOFS;/* DOES THIS OBLK POINT TO THE   01145000
*                                         OBLK TO BE PRUNED?         */ 01146000
         B     @DE00325                                            0325 01147000
@DL00325 DS    0H                                                  0326 01148000
*           DNOBPTR = HEDBPTR+UADSANEX;/* REF NEXT OBLK IN THE CHAIN */ 01149000
         LR    @05,HEDBPTR                                         0326 01150000
         SLR   @15,@15                                             0326 01151000
         ICM   @15,7,UADSANEX(DNOBPTR)                             0326 01152000
         AR    @05,@15                                             0326 01153000
         LR    DNOBPTR,@05                                         0326 01154000
*           END;                                                   0327 01155000
@DE00325 SLR   @05,@05                                             0327 01156000
         ICM   @05,7,UADSANEX(DNOBPTR)                             0327 01157000
         CR    PRUNOFS,@05                                         0327 01158000
         BNE   @DL00325                                            0327 01159000
*         /* THE ABOVE DESCRIBED OFFSET BLOCK HAS BEEN FOUND.        */ 01160000
*         /* INSERT THE CHAIN FLAG OF THE OFFSET BLOCK TO BE PRUNED  */ 01161000
*         /* IF THAT FLAG WAS '1'.                                   */ 01162000
*         IF FLGSAVE = '1'B                                        0328 01163000
*           THEN                                                   0328 01164000
         TM    FLGSAVE,B'10000000'                                 0328 01165000
         BNO   @RF00328                                            0328 01166000
*             AFLG01 = '1'B;          /* CHANGE FLAG OF BROTHER TO 1 */ 01167000
         OI    AFLG01(DNOBPTR),B'10000000'                         0329 01168000
*         UADSANEX = ANEXSAVE;        /* INSERT THE OFFSET TO THE  0330 01169000
*                                        NEXT OBLK. THIS UNHOOKS THE    01170000
*                                        TWIN FROM THE CHAIN         */ 01171000
@RF00328 STCM  ANEXSAVE,7,UADSANEX(DNOBPTR)                        0330 01172000
*         ACTWIN3 = DNOBPTR;          /* SAVE THE ADDR OF THIS OBLK  */ 01173000
         ST    DNOBPTR,ACTWIN3                                     0331 01174000
*ACPRUN3: /* PRUNE THE TWIN OFFSET BLOCK FROM THE TREE.              */ 01175000
*         /* IF THE ACTNO OFFSET BLOCK TO BE PRUNED IS THE ONLY ONE  */ 01176000
*         /* UNDER ITS PASSWORD, THEN SET THE SUB OFFSET IN THE      */ 01177000
*         /* PASSWORD OBLK TO 0 FOR LATER USE.                       */ 01178000
*         DPOBPTR = NLPWOBAD;         /* REF THE NODELST PASSWRD     */ 01179000
ACPRUN3  LR    DPOBPTR,NLPWOBAD                                    0332 01180000
*         DNOBPTR = ACTWIN1;          /* REF THE ACCTNMBR TWIN       */ 01181000
         LR    DNOBPTR,ACTWIN1                                     0333 01182000
*         /* IS THE ACTNO TWIN THE 1ST ONE IN ITS CHAIN?             */ 01183000
*         IF UADSPSUB = PRUNOFS                                    0334 01184000
*           THEN                      /* YES,                        */ 01185000
         C     PRUNOFS,UADSPSUB(,DPOBPTR)                          0334 01186000
         BNE   @RF00334                                            0334 01187000
*             /* IF IT IS ALSO THE LAST ONE, THEN IT IS THE ONLY ONE */ 01188000
*             IF AFLG01 = '1'B                                     0335 01189000
*               THEN                  /* IT IS THE ONLY ACTNO        */ 01190000
         TM    AFLG01(DNOBPTR),B'10000000'                         0335 01191000
         BNO   @RF00335                                            0335 01192000
*                 UADSPSUB = 0;       /* SET SUB OFFSET TO 0         */ 01193000
         SLR   @10,@10                                             0336 01194000
         ST    @10,UADSPSUB(,DPOBPTR)                              0336 01195000
*               ELSE                  /* NOT THE ONLY ONE,           */ 01196000
*                 UADSPSUB = ANEXSAVE;/* INSERT OFFSET TO BROTHER    */ 01197000
         B     @RC00335                                            0337 01198000
@RF00335 ST    ANEXSAVE,UADSPSUB(,DPOBPTR)                         0337 01199000
*         AREAOFST = PRUNOFS;         /* OFFSET TO OBLK TO BE FREED  */ 01200000
@RC00335 DS    0H                                                  0338 01201000
@RF00334 ST    PRUNOFS,AREAOFST                                    0338 01202000
*         AREALNTH = 12;              /* NUMBER OF BYTES TO BE FREED */ 01203000
         MVC   AREALNTH(2),@CH00055                                0339 01204000
*         CALL IKJFRSP;               /* GO FREE THIS OBLK           */ 01205000
         BAL   @14,IKJFRSP                                         0340 01206000
*         /* FREESPACE WAS SUCCESSFUL. CHECK CONTROL FLAG TO DETER-  */ 01207000
*         /* MINE WHERE TO CONTINUE.                                 */ 01208000
*         IF ACPRFLG = '1'B                                        0341 01209000
*           THEN                                                   0341 01210000
         TM    ACPRFLG,B'00000001'                                 0341 01211000
         BO    @RT00341                                            0341 01212000
*             GOTO CHKACDF;           /* GO PROCESS THE ACCTNMBR DATA-  01213000
*                                        FIELD ASSOCIATED WITH THE 0342 01214000
*                                        PRUNED OFFSET BLOCK         */ 01215000
*         IF ACTWSRF = '1'B                                        0343 01216000
*           THEN                                                   0343 01217000
         TM    ACTWSRF,B'00010000'                                 0343 01218000
         BNO   @RF00343                                            0343 01219000
*             DO;                     /* CONTINUE THE SEARCH FOR   0344 01220000
*                                        ACCTNMBR TWINS              */ 01221000
*             DPOBPTR = NLPWOBAD;     /* REF THE NODELIST PASSWORD   */ 01222000
         LR    DPOBPTR,NLPWOBAD                                    0345 01223000
*             /* IT IS POSSIBLE THAT THERE ARE NO ACCTNMBRS LEFT     */ 01224000
*             /* UNDER THIS PASSWORD. IF SO, NO MERGING IS NECESSARY.*/ 01225000
*             IF UADSPSUB = 0         /* ANY ACTNBRS LEFT?           */ 01226000
*               THEN                  /* NO,                         */ 01227000
         L     @10,UADSPSUB(,DPOBPTR)                              0346 01228000
         LTR   @10,@10                                             0346 01229000
         BZ    @RT00346                                            0346 01230000
*                 GOTO PWPRUNE;       /* GO PRUNE THE NODELST PWD    */ 01231000
*               ELSE                  /* YES,                        */ 01232000
*                 GOTO ACTWSR1;       /* CONTINUE SEARCH FOR TWINS   */ 01233000
         B     ACTWSR1                                             0348 01234000
*             END;                                                 0349 01235000
*         DNOBPTR = ACTWIN3;          /* REF THE PREVIOUS ACCTNMBR   */ 01236000
@RF00343 L     DNOBPTR,ACTWIN3                                     0350 01237000
*         GOTO TCTWSR2;               /* CONTINUE THE TWIN SEARCH    */ 01238000
         B     TCTWSR2                                             0351 01239000
*ACLEVL:  /***********************************************************/ 01240000
*         /*                                                         */ 01241000
*         /*          CHANGE LEVEL  =  ACCTNMBR LEVEL                */ 01242000
*         /*                                                         */ 01243000
*         /***********************************************************/ 01244000
*         /* AN '*' IN THE ACCTNMBR POSITION OF THE NODELIST MEANS:  */ 01245000
*         /* CHANGE ALL ACCTNMBRS TO THE NEW ACCTNMBR. THIS CASE     */ 01246000
*         /* WILL BE HANDLED BY A SEPARATE SECTION OF CODE.          */ 01247000
*         IF ACCTNO(1:2) = '* '       /* NLACCTNMBR = '*'?           */ 01248000
*           THEN                      /* YES,                        */ 01249000
ACLEVL   L     @10,NODELPTR(,CTRLTABP)                             0352 01250000
         CLC   ACCTNO(2,@10),@CC00240                              0352 01251000
         BE    @RT00352                                            0352 01252000
*             GOTO CHALLAC;           /* GO TO SPECIAL SECTION TO  0353 01253000
*                                        HANDLE THIS CASE            */ 01254000
*         DPOBPTR = PASSADDR;         /* GET PTR TO PASSWRD OBLK FROM   01255000
*                                        THE CHANGE CONTROL TABLE    */ 01256000
         L     DPOBPTR,PASSADDR(,CTRLTABP)                         0354 01257000
*         NLPWOBAD = DPOBPTR;         /* SAVE ADDR OF THIS OBLK      */ 01258000
         LR    NLPWOBAD,DPOBPTR                                    0355 01259000
*         OACSAVE = ACCTADDR;         /* GET PTR TO ACCTNBR OBLK FROM   01260000
*                                        THE CHANGE CONTROL TABLE    */ 01261000
         L     @10,ACCTADDR(,CTRLTABP)                             0356 01262000
         ST    @10,OACSAVE                                         0356 01263000
*         /* SEARCH FOR THE ACCTNMBR SPECIFIED IN THE DATALIST.      */ 01264000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF 1ST ACCTNMBR OBLK IN  0357 01265000
*                                        THE LOCAL CHAIN             */ 01266000
         LR    DNOBPTR,HEDBPTR                                     0357 01267000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0357 01268000
*         CALL DLACLS;                /* GO TO SEARCH RTNE           */ 01269000
         BAL   @14,DLACLS                                          0358 01270000
*         /* DOES THE NEW ACCTNMBR EXIST IN THE LOCAL CHAIN?         */ 01271000
*         IF ACTWIN2 ^= 0                                          0359 01272000
*           THEN                      /* YES, PRUNING IS NECESSARY   */ 01273000
         LTR   ACTWIN2,ACTWIN2                                     0359 01274000
         BZ    @RF00359                                            0359 01275000
*             DO;                                                  0360 01276000
*               ACTWIN1 = OACSAVE;    /* SET PTR TO TWIN OBLK        */ 01277000
         L     ACTWIN1,OACSAVE                                     0361 01278000
*               ACPRFLG = '1'B;       /* FLAG WILL DETERMINE ACTION     01279000
*                                        AFTER PROC TWIN PRUNING     */ 01280000
         OI    ACPRFLG,B'00000001'                                 0362 01281000
*               GOTO PRTWSRCH;         /* GO SEARCH FOR PROCTWINS     * 01282000
         B     PRTWSRCH                                            0363 01283000
*             END;                                                 0364 01284000
*         CALL DLACTS;                /* GO SEARCH THE TOTAL CHAIN   */ 01285000
@RF00359 BAL   @14,DLACTS                                          0365 01286000
*         /* DOES THE NEW ACCTNMBR EXIST IN THE TOTAL CHAIN?         */ 01287000
*         IF CSNPTR ^= 0                                           0366 01288000
*           THEN                      /* YES,                        */ 01289000
         L     @10,CSNPTR                                          0366 01290000
         LTR   @10,@10                                             0366 01291000
         BNZ   @RT00366                                            0366 01292000
*             GOTO ACCHGE1;           /* GO MAKE APPROPRIATE CHANGES */ 01293000
*         /* DETERMINE WHETHER THE EXISTING NODELIST DATA FIELD CAN  */ 01294000
*         /* BE USED (USE CTR = 1). IF NOT, THEN A NEW DATA FIELD    */ 01295000
*         /* MUST BE CREATED.                                        */ 01296000
*         DNOBPTR = OACSAVE;          /* REF THE NLACCTNMBR OBLK     */ 01297000
         L     DNOBPTR,OACSAVE                                     0368 01298000
*         UADSAPTR = HEDBPTR+UADSADAT;/* REF ITS DATAFLD             */ 01299000
         LR    @10,HEDBPTR                                         0369 01300000
         A     @10,UADSADAT(,DNOBPTR)                              0369 01301000
         ST    @10,UADSAPTR                                        0369 01302000
*         /* CHECK THE USE CTR. IF THE FIELD IS SHARED BY COUSINS,   */ 01303000
*         /* THEN IT CANNOT BE USED.                                 */ 01304000
*         IF UADSACTR > 1                                          0370 01305000
*           THEN                      /* THE DATAFLD IS SHARED       */ 01306000
         CLI   UADSACTR(@10),1                                     0370 01307000
         BNH   @RF00370                                            0370 01308000
*             DO;                                                  0371 01309000
*               UADSACTR = UADSACTR-1;/* DECREMENT THE USE CTR       */ 01310000
         SLR   @09,@09                                             0372 01311000
         IC    @09,UADSACTR(,@10)                                  0372 01312000
         BCTR  @09,0                                               0372 01313000
         STC   @09,UADSACTR(,@10)                                  0372 01314000
*               GOTO NEWACDF;         /* GO BUILD A NEW DATAFLD      */ 01315000
         B     NEWACDF                                             0373 01316000
*             END;                                                 0374 01317000
*         /* THE FIELD IS NOT SHARED. IT WILL BE USED IF THE NEW     */ 01318000
*         /* ACCTNMBR HAS THE SAME LENGTH AS THE OLD ONE. IF IT DOES */ 01319000
*         /* NOT, THEN THE EXISTING FIELD WILL BE FREED AND A NEW    */ 01320000
*         /* FIELD WILL BE BUILT.                                    */ 01321000
*         IF UADSALEN ^= DACTLEN                                   0375 01322000
*           THEN                      /* THE LENGTHS ARE DIFFERENT   */ 01323000
@RF00370 L     @10,DATALPTR(,CTRLTABP)                             0375 01324000
         L     @09,UADSAPTR                                        0375 01325000
         CLC   UADSALEN(1,@09),DACTLEN(@10)                        0375 01326000
         BE    @RF00375                                            0375 01327000
*             DO;                                                  0376 01328000
*               ADATSAVE = UADSADAT;  /* SAVE OFFSET TO OLD DATAFLD  */ 01329000
         L     @10,UADSADAT(,DNOBPTR)                              0377 01330000
         ST    @10,ADATSAVE                                        0377 01331000
*               FLDFLG = '1'B;        /* SET FLAG: OLD DATAFLD HAS 0378 01332000
*                                        TO BE FREED                 */ 01333000
         OI    FLDFLG,B'01000000'                                  0378 01334000
*               GOTO NEWACDF;         /* GO BUILD A NEW DATAFLD AND     01335000
*                                        FREE THE EXISTING ONE       */ 01336000
         B     NEWACDF                                             0379 01337000
*             END;                                                 0380 01338000
*         /* THE EXISTING FIELD CAN BE USED.                         */ 01339000
*         UADSANUM(1:DACTLEN) =       /* INSERT THE NEW ACCTNMBR     */ 01340000
*           DACCTNO;                                               0381 01341000
@RF00375 L     @10,UADSAPTR                                        0381 01342000
         L     @09,DATALPTR(,CTRLTABP)                             0381 01343000
         SLR   @07,@07                                             0381 01344000
         IC    @07,DACTLEN(,@09)                                   0381 01345000
         BCTR  @07,0                                               0381 01346000
         EX    @07,@SM00304                                        0381 01347000
*ACNEXT:  /* AT LEAST ONE ACCTNMBR HAS NOW BEEN PROCESSED AND THIS   */ 01348000
*         /* USERID TREE HAS BEEN CHANGED (THE WORK COPY). DETERMINE */ 01349000
*         /* WHERE PROCESSING IS TO CONTINUE.                        */ 01350000
*         DPOBPTR = NLPWOBAD;         /* REF PASSWD JUST PROCESSED   */ 01351000
ACNEXT   LR    DPOBPTR,NLPWOBAD                                    0382 01352000
*         /* IF A PASSWORD WAS SPECIFIED, OR THERE ARE NO MORE PASS- */ 01353000
*         /* WORDS IN THE CHAIN, THEN ALL NECESSARY CHANGES HAVE     */ 01354000
*         /* BEEN MADE TO THIS TREE. OTHERWISE, IKJEFA20 WILL SEARCH */ 01355000
*         /* FOR THE SPECIFIED ACCTNMBR IN THE REMAINING BRANCHES    */ 01356000
*         /* OF THIS TREE.                                           */ 01357000
*         IF PASSWD(1) ^= '*'         /* PASSWORD SPECIFIED?         */ 01358000
*          | PFLG01 = '1'B            /* OR END OF CHAIN?            */ 01359000
*           THEN                      /* YES, ONE OF THE ABOVE,      */ 01360000
         L     @10,NODELPTR(,CTRLTABP)                             0383 01361000
         CLI   PASSWD(@10),C'*'                                    0383 01362000
         BNE   @RT00383                                            0383 01363000
         TM    PFLG01(DPOBPTR),B'10000000'                         0383 01364000
         BO    @RT00383                                            0383 01365000
*             GOTO CHGEOK;            /* CHANGE CP WILL WRITE THIS 0384 01366000
*                                        TREE BACK INTO THE UADS     */ 01367000
*         PASSADDR = HEDBPTR          /* REF THE NEXT PASSWORD OBLK  */ 01368000
*           +UADSPNEX;                                             0385 01369000
         LR    @10,HEDBPTR                                         0385 01370000
         SLR   @07,@07                                             0385 01371000
         ICM   @07,7,UADSPNEX(DPOBPTR)                             0385 01372000
         AR    @10,@07                                             0385 01373000
         ST    @10,PASSADDR(,CTRLTABP)                             0385 01374000
*         SRCHIND = 1;                /* SEARCH FOR THE NODELIST ACCT-  01375000
*                                        NMBR UNDER THE NEXT PASSWRD */ 01376000
         MVI   SRCHIND(CTRLTABP),X'01'                             0386 01377000
*         TRCHGE = '1'B;              /* THIS TREE HAS BEEN CHANGED  */ 01378000
         OI    TRCHGE(CTRLTABP),B'10000000'                        0387 01379000
*         RETURN;                     /* RETURN TO THE CHANGE CP     */ 01380000
         B     @EL00001                                            0388 01381000
*NEWACDF: /* THIS SECTION OF CODE WILL CREATE A NEW ACCTNMBR DATAFLD */ 01382000
*         AREALNTH = 45+DACTLEN;      /* NUMBER OF BYTES NECESSARY:     01383000
*                                        CONSTANT AREA + LENGTH OF 0389 01384000
*                                        THE NEW ACCTNMBR            */ 01385000
NEWACDF  L     @10,DATALPTR(,CTRLTABP)                             0389 01386000
         LA    @09,45                                              0389 01387000
         SLR   @07,@07                                             0389 01388000
         IC    @07,DACTLEN(,@10)                                   0389 01389000
         AR    @09,@07                                             0389 01390000
         STH   @09,AREALNTH                                        0389 01391000
*         RFY R1 RSTD;                /* RESTRICT PARAMETER REG      */ 01392000
*         R1 = ADDR(GETFREE);         /* PTR TO GETSPACE PARMLIST    */ 01393000
         LA    R1,GETFREE                                          0391 01394000
*         CALL IKJEFA53;              /* CALL THE GETSPACE ROUTINE   */ 01395000
         L     @15,@CV00107                                        0392 01396000
         BALR  @14,@15                                             0392 01397000
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REG       */ 01398000
*         RFY R15 RSTD;               /* RESTRICT RETURN CODE REG    */ 01399000
*         RETCODE = R15;              /* ASSIGN THE RETURN CODE      */ 01400000
         ST    R15,RETCODE(,CTRLTABP)                              0395 01401000
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REG     */ 01402000
*         /* CHECK THE RETURN CODE FROM GETSPACE.                    */ 01403000
*         IF RETCODE ^= 0                                          0397 01404000
*           THEN                      /* GETSPACE UNSUCCESSFUL       */ 01405000
         L     @10,RETCODE(,CTRLTABP)                              0397 01406000
         LTR   @10,@10                                             0397 01407000
         BZ    @RF00397                                            0397 01408000
*             DO;                                                  0398 01409000
*               MSGNMBR = 23;         /* SET ERROR MSG NUMBER        */ 01410000
         MVI   MSGNMBR(CTRLTABP),X'17'                             0399 01411000
*               RETURN;               /* CHANGE CP WILL ISSUE THE  0400 01412000
*                                        ERROR MSG & CONTINUE WITH 0400 01413000
*                                        THE NEXT USERID, IF ANY     */ 01414000
         B     @EL00001                                            0400 01415000
*             END;                                                 0401 01416000
*         NEWDFPTR = HEDBPTR+AREAOFST;/* ADDR OF THE NEW DATAFLD     */ 01417000
@RF00397 L     @10,AREAOFST                                        0402 01418000
         LR    NEWDFPTR,HEDBPTR                                    0402 01419000
         AR    NEWDFPTR,@10                                        0402 01420000
*         NEWDFPTR -> DNOBD(1:45) =   /* COPY THE EXISTING DATA, EX- */ 01421000
*           UADSAPTR -> DNOBD(1:45);  /* CLUDING THE ACCTNMBR, INTO     01422000
*                                        THE NEW DATAFLD             */ 01423000
         L     @09,UADSAPTR                                        0403 01424000
         MVC   DNOBD(45,NEWDFPTR),DNOBD(@09)                       0403 01425000
*         UADSADAT = AREAOFST;        /* PUT OFFSET TO NEW DATAFLD 0404 01426000
*                                        INTO THE OFFSET BLOCK       */ 01427000
         ST    @10,UADSADAT(,DNOBPTR)                              0404 01428000
*         UADSAPTR = NEWDFPTR;        /* REF THE NEW DATAFLD         */ 01429000
         ST    NEWDFPTR,UADSAPTR                                   0405 01430000
*         UADSACTR = 1;               /* SET USE CTR TO 1            */ 01431000
         L     @10,UADSAPTR                                        0406 01432000
         MVI   UADSACTR(@10),X'01'                                 0406 01433000
*         UADSALEN = DACTLEN;         /* INSERT NEW LENGTH           */ 01434000
         L     @09,DATALPTR(,CTRLTABP)                             0407 01435000
         SLR   @07,@07                                             0407 01436000
         IC    @07,DACTLEN(,@09)                                   0407 01437000
         STC   @07,UADSALEN(,@10)                                  0407 01438000
*         UADSANUM(1:DACTLEN) =       /* INSERT NEW ACCTNMBR         */ 01439000
*           DACCTNO;                                               0408 01440000
         BCTR  @07,0                                               0408 01441000
         EX    @07,@SM00304                                        0408 01442000
*         /* CHECK CONTROL FLAG TO DETERMINE WHERE TO CONTINUE.      */ 01443000
*         IF NACDFLG = '1'B                                        0409 01444000
*           THEN                                                   0409 01445000
         TM    NACDFLG,B'00001000'                                 0409 01446000
         BO    @RT00409                                            0409 01447000
*             GOTO NACNF2;            /* GO TO INDICATED SECTION     */ 01448000
*         /* CHECK WHETHER THE OLD DATA FIELD HAS TO BE FREED.       */ 01449000
*         IF FLDFLG = '0'B                                         0411 01450000
*           THEN                      /* NO,                         */ 01451000
         TM    FLDFLG,B'01000000'                                  0411 01452000
         BZ    @RT00411                                            0411 01453000
*             GOTO ACNEXT;            /* GO CHECK WHERE PROCESSING 0412 01454000
*                                        IS TO CONTINUE              */ 01455000
*         UADSAPTR = HEDBPTR+ADATSAVE;/* REF THE OLD DATAFLD         */ 01456000
         LR    @10,HEDBPTR                                         0413 01457000
         A     @10,ADATSAVE                                        0413 01458000
         ST    @10,UADSAPTR                                        0413 01459000
*FREACDF: /* THIS SECTION WILL PRUNE AN ACCTNMBR DATA FIELD FROM     */ 01460000
*         /* THE USERID TREE.                                        */ 01461000
*         AREALNTH = 45+UADSALEN;     /* NUMBER OF BYTES TO BE FREED */ 01462000
FREACDF  LA    @10,45                                              0414 01463000
         L     @09,UADSAPTR                                        0414 01464000
         SLR   @07,@07                                             0414 01465000
         IC    @07,UADSALEN(,@09)                                  0414 01466000
         AR    @10,@07                                             0414 01467000
         STH   @10,AREALNTH                                        0414 01468000
*         AREAOFST = ADATSAVE;        /* OFFSET TO FIELD TO BE FREED */ 01469000
         L     @10,ADATSAVE                                        0415 01470000
         ST    @10,AREAOFST                                        0415 01471000
*         CALL IKJFRSP;               /* GO FREE THIS DATA FIELD     */ 01472000
         BAL   @14,IKJFRSP                                         0416 01473000
*         FLDFLG = '0'B;              /* SET CONTROL FLAG BACK TO 0  */ 01474000
         NI    FLDFLG,B'10111111'                                  0417 01475000
*         GOTO ACNEXT;                /* GO CHECK WHERE PROCESSING 0418 01476000
*                                        IS TO CONTINUE              */ 01477000
         B     ACNEXT                                              0418 01478000
*ACCHGE1: /* THE NEW ACCTNMBR ALREADY EXISTS IN A COUSIN CHAIN OF    */ 01479000
*         /* THIS TREE. THE COUSIN DATA FIELD WILL BE USED AND THE   */ 01480000
*         /* NODELIST ACCTNMBR DATA FIELD WILL BE FREED IF IT IS     */ 01481000
*         /* NOT SHARED (USE CTR = 1).                               */ 01482000
*         UADSAPTR = NDFPTR;          /* REF THE COUSIN DATAFLD      */ 01483000
ACCHGE1  L     @10,NDFPTR                                          0419 01484000
         ST    @10,UADSAPTR                                        0419 01485000
*         /* CHECK THE USE COUNTER BEFORE INCREMENTING IT. IT CANNOT */ 01486000
*         /* EXCEED 255.                                             */ 01487000
*         IF UADSACTR = 255                                        0420 01488000
*           THEN                      /* CTR LIMIT HAS BEEN REACHED  */ 01489000
         CLI   UADSACTR(@10),255                                   0420 01490000
         BNE   @RF00420                                            0420 01491000
*             DO;                                                  0421 01492000
*               MSGNMBR = 30;         /* SET MSG NO FOR IKJEFA20     */ 01493000
         MVI   MSGNMBR(CTRLTABP),X'1E'                             0422 01494000
*               GOTO WORKEND;         /* GO RETURN                   */ 01495000
         B     WORKEND                                             0423 01496000
*             END;                                                 0424 01497000
*         UADSACTR = UADSACTR+1;      /* INCREMENT THE USE CTR       */ 01498000
@RF00420 L     @10,UADSAPTR                                        0425 01499000
         LA    @09,1                                               0425 01500000
         SLR   @07,@07                                             0425 01501000
         IC    @07,UADSACTR(,@10)                                  0425 01502000
         AR    @09,@07                                             0425 01503000
         STC   @09,UADSACTR(,@10)                                  0425 01504000
*         DNOBPTR = OACSAVE;          /* REF THE NODELIST ACTNO OBLK */ 01505000
         L     DNOBPTR,OACSAVE                                     0426 01506000
*         ADATSAVE = UADSADAT;        /* SAVE OFFSET TO ITS DATAFLD  */ 01507000
         L     @10,UADSADAT(,DNOBPTR)                              0427 01508000
         ST    @10,ADATSAVE                                        0427 01509000
*         UADSADAT = RDATSAVE;        /* PUT OFFSET TO COUSIN DATAFLD   01510000
*                                        INTO THIS OFFSET BLOCK      */ 01511000
         L     @09,RDATSAVE                                        0428 01512000
         ST    @09,UADSADAT(,DNOBPTR)                              0428 01513000
*         UADSAPTR = HEDBPTR+ADATSAVE;/* REF NODELIST ACTNO DATAFLD  */ 01514000
         AR    @10,HEDBPTR                                         0429 01515000
         ST    @10,UADSAPTR                                        0429 01516000
*         /* IF THE NODELIST ACCTNMBR DATA FIELD IS NOT SHARED, IT   */ 01517000
*         /* WILL BE PRUNED FROM THIS USERID TREE.                   */ 01518000
*         IF UADSACTR = 1                                          0430 01519000
*           THEN                      /* THIS DATAFLD IS NOT SHARED  */ 01520000
         CLI   UADSACTR(@10),1                                     0430 01521000
         BE    @RT00430                                            0430 01522000
*             GOTO FREACDF;           /* GO PRUNE IT FROM THE TREE   */ 01523000
*         UADSACTR = UADSACTR-1;      /* DECREMENT ITS USE CTR       */ 01524000
         SLR   @09,@09                                             0432 01525000
         IC    @09,UADSACTR(,@10)                                  0432 01526000
         BCTR  @09,0                                               0432 01527000
         STC   @09,UADSACTR(,@10)                                  0432 01528000
*         GOTO ACNEXT;                /* GO CHECK WHERE PROCESSING 0433 01529000
*                                        IS TO CONTINUE              */ 01530000
         B     ACNEXT                                              0433 01531000
*ACCHGE2: /* THE NEW ACCTNMBR ALREADY EXISTS IN THE SAME LOCAL CHAIN */ 01532000
*         /* AS THE NODELIST ACCTNMBR. THE LATTER'S OFFSET BLOCK     */ 01533000
*         /* WILL BE PRUNED FROM THE TREE. ITS DATA FIELD WILL ALSO  */ 01534000
*         /* BE FREED IF IT IS NOT SHARED. THE TWO PROCNAME CHAINS   */ 01535000
*         /* HAVE BEEN MERGED AND PROCNAME TWINS, IF ANY WERE FOUND, */ 01536000
*         /* HAVE BEEN PRUNED.                                       */ 01537000
*         DNOBPTR = OACSAVE;          /* REF THE NODELIST ACTNO OBLK */ 01538000
ACCHGE2  L     DNOBPTR,OACSAVE                                     0434 01539000
*         ADATSAVE = UADSADAT;        /* SAVE OFFSET TO ITS DATAFLD  */ 01540000
         L     @07,UADSADAT(,DNOBPTR)                              0435 01541000
         ST    @07,ADATSAVE                                        0435 01542000
*         GOTO ACPRUNE;               /* GO TO PRUNING SECTION       */ 01543000
         B     ACPRUNE                                             0436 01544000
*CHKACDF: /* AFTER PRUNING THE NODELIST ACCTNMBR OFFSET BLOCK,       */ 01545000
*         /* CHECK ITS DATA FIELD. IF IT IS NOT SHARED (USE CTR = 1) */ 01546000
*         /* IT WILL ALSO BE FREED.                                  */ 01547000
*         UADSAPTR = HEDBPTR+ADATSAVE;/* REF NODELIST ACTNO DATAFLD  */ 01548000
CHKACDF  LR    @10,HEDBPTR                                         0437 01549000
         A     @10,ADATSAVE                                        0437 01550000
         ST    @10,UADSAPTR                                        0437 01551000
*         UADSACTR = UADSACTR+1;      /* RESET USE CTR. IT WAS DECRE-   01552000
*                                        MENTED IN THE COMMON ACCTNMBR  01553000
*                                        OBLK PRUNING SECTION        */ 01554000
         LA    @09,1                                               0438 01555000
         SLR   @07,@07                                             0438 01556000
         IC    @07,UADSACTR(,@10)                                  0438 01557000
         AR    @09,@07                                             0438 01558000
         STC   @09,UADSACTR(,@10)                                  0438 01559000
*         ACPRFLG = '0'B;             /* RESET THIS CONTROL FLAG     */ 01560000
         NI    ACPRFLG,B'11111110'                                 0439 01561000
*         /* IS THIS DATA FIELD SHARED WITH COUSINS?                 */ 01562000
*         IF UADSACTR > 1                                          0440 01563000
*           THEN                      /* IT IS SHARED,               */ 01564000
         CLI   UADSACTR(@10),1                                     0440 01565000
         BNH   @RF00440                                            0440 01566000
*             UADSACTR = UADSACTR-1;  /* DECREMENT ITS USE CTR       */ 01567000
         BCTR  @09,0                                               0441 01568000
         STC   @09,UADSACTR(,@10)                                  0441 01569000
*           ELSE                      /* IT IS NOT SHARED,           */ 01570000
*             GOTO FREACDF;           /* GO PRUNE IT FROM THE TREE   */ 01571000
*         GOTO ACNEXT;                /* GO CHECK WHERE PROCESSING 0443 01572000
*                                        IS TO CONTINUE              */ 01573000
         B     ACNEXT                                              0443 01574000
*CHALLAC: /* THIS SECTION OF CODE WILL CHANGE ALL ACCTNMBRS IN A     */ 01575000
*         /* LOCAL ACCTNMBR CHAIN TO THE NEW ACCTNMBR SPECIFIED IN   */ 01576000
*         /* THE DATA SUBFIELD OF THE COMMAND. ALL UNNECESSARY DATA  */ 01577000
*         /* FIELDS & OFFSET BLOCKS WILL BE PRUNED FROM THE TREE.    */ 01578000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF 1ST OBLK IN LOC CHAIN   */ 01579000
CHALLAC  LR    DNOBPTR,HEDBPTR                                     0444 01580000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0444 01581000
*         OACSAVE = DNOBPTR;          /* SAVE ADDR OF THIS OBLK      */ 01582000
         ST    DNOBPTR,OACSAVE                                     0445 01583000
*         ODFPTR = HEDBPTR+UADSADAT;  /* SAVE ADDR OF ITS DATAFLD    */ 01584000
         LR    @10,HEDBPTR                                         0446 01585000
         A     @10,UADSADAT(,DNOBPTR)                              0446 01586000
         ST    @10,ODFPTR                                          0446 01587000
*         /* IS THIS THE ONLY ACCTNMBR IN THIS CHAIN? IF IT IS, THEN */ 01588000
*         /* MERGING OF PROCNAME CHAINS IS NOT NECESSARY.            */ 01589000
*         IF AFLG01 = '0'B                                         0447 01590000
*           THEN                      /* NO, THERE ARE BROTHERS      */ 01591000
         TM    AFLG01(DNOBPTR),B'10000000'                         0447 01592000
         BZ    @RT00447                                            0447 01593000
*             GOTO CHTWSR1;           /* GO SEARCH FOR PROC TWINS    */ 01594000
*NACLS:   /* IF THE NEW ACCTNMBR EXISTS IN THIS CHAIN, THEN ITS      */ 01595000
*         /* DATA FIELD MUST BE USED.                                */ 01596000
*         RDATSAVE = UADSADAT;        /* SAVE ADDR OF 1ST DATAFLD    */ 01597000
NACLS    L     @10,UADSADAT(,DNOBPTR)                              0449 01598000
         ST    @10,RDATSAVE                                        0449 01599000
*         CALL DLACLS;                /* GO TO SEARCH SUBRTNE        */ 01600000
         BAL   @14,DLACLS                                          0450 01601000
*         /* DOES THE NEW ACCTNMBR EXIST IN THIS CHAIN? IF NOT, THEN */ 01602000
*         /* SEARCH THE TOTAL CHAIN. A COUSIN DATA FIELD MUST BE     */ 01603000
*         /* USED IF IT EXISTS.                                      */ 01604000
*         IF ACTWIN2 = 0                                           0451 01605000
*           THEN                      /* NO, IT WAS NOT FOUND,       */ 01606000
         LTR   ACTWIN2,ACTWIN2                                     0451 01607000
         BZ    @RT00451                                            0451 01608000
*             GOTO NACTS;             /* GO SEARCH THE TOTAL CHAIN   */ 01609000
*         /* THE NEW ACCTNMBR EXISTS IN THIS LOCAL CHAIN. SWITCH     */ 01610000
*         /* THE DATA FIELD OFFSET TO THE 1ST OFFSET BLOCK IN THE    */ 01611000
*         /* CHAIN TO FACILITATE THE PRUNING OF THE UNNECESSARY      */ 01612000
*         /* OFFSET BLOCKS.                                          */ 01613000
*         ADATSAVE = UADSADAT;        /* SAVE OFFSET TO THE NEW ACCT-   01614000
*                                        NMBR DATA FIELD             */ 01615000
         L     @10,UADSADAT(,DNOBPTR)                              0453 01616000
         ST    @10,ADATSAVE                                        0453 01617000
*         UADSADAT = RDATSAVE;        /* PUT IN OFFSET TO 1ST DATAFD */ 01618000
         L     @09,RDATSAVE                                        0454 01619000
         ST    @09,UADSADAT(,DNOBPTR)                              0454 01620000
*         DNOBPTR = OACSAVE;          /* REF 1ST OBLK AGAIN          */ 01621000
         L     DNOBPTR,OACSAVE                                     0455 01622000
*         UADSADAT = ADATSAVE;        /* PUT IN OFFSET TO NEW ACCT-     01623000
*                                        NMBR DATA FIELD             */ 01624000
         ST    @10,UADSADAT(,DNOBPTR)                              0456 01625000
*ACHNPR1: /* IF THERE ARE NO BROTHERS, THEN PRUNING IS UNNECESSARY.  */ 01626000
*         IF AFLG01 = '1'B                                         0457 01627000
*           THEN                      /* NO BROTHERS,                */ 01628000
ACHNPR1  TM    AFLG01(DNOBPTR),B'10000000'                         0457 01629000
         BO    @RT00457                                            0457 01630000
*             GOTO ACNEXT2;           /* GO CHECK WHERE PROCESSING 0458 01631000
*                                        IS TO CONTINUE              */ 01632000
*         /* MUST MAKE SURE THAT THE 1ST OFFSET BLOCK POINTS TO THE  */ 01633000
*         /* BEGINNING OF THE PROC CHAIN. IT IS POSSIBLE THAT THERE  */ 01634000
*         /* ARE NO PROCS LEFT UNDER THE 1ST ACCTNMBR, SO THAT THE   */ 01635000
*         /* 1ST PROC IS UNDER ONE OF THE BROTHERS THAT WILL BE      */ 01636000
*         /* PRUNED FROM THE TREE.                                   */ 01637000
*         IF UADSASUB = 0             /* ANY PROCS UNDER 1ST ACTNBR? */ 01638000
*           THEN                      /* NO,                         */ 01639000
         L     @10,UADSASUB(,DNOBPTR)                              0459 01640000
         LTR   @10,@10                                             0459 01641000
         BNZ   @RF00459                                            0459 01642000
*             DO;                                                  0460 01643000
*             /* FIND THE 1ST REMAINING PROC UNDER THE CURRENT PASSWD*/ 01644000
*             DNOBPTR = HEDBPTR+UADSANEX; /* REF THE 1ST ACTN BROTHER*/ 01645000
         LR    @10,HEDBPTR                                         0461 01646000
         SLR   @09,@09                                             0461 01647000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0461 01648000
         AR    @10,@09                                             0461 01649000
         LR    DNOBPTR,@10                                         0461 01650000
*             /* PROC CHAIN START UNDER THIS ACCTNMBR?               */ 01651000
*             DO WHILE UADSASUB = 0;                               0462 01652000
         B     @DE00462                                            0462 01653000
@DL00462 DS    0H                                                  0463 01654000
*               DNOBPTR = HEDBPTR+UADSANEX;/* REF THE NEXT BROTHER   */ 01655000
         LR    @10,HEDBPTR                                         0463 01656000
         SLR   @09,@09                                             0463 01657000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0463 01658000
         AR    @10,@09                                             0463 01659000
         LR    DNOBPTR,@10                                         0463 01660000
*               END;                                               0464 01661000
@DE00462 L     @10,UADSASUB(,DNOBPTR)                              0464 01662000
         LTR   @10,@10                                             0464 01663000
         BZ    @DL00462                                            0464 01664000
*             SUBOFS = UADSASUB;      /* SAVE OFFSET TO 1ST PROC     */ 01665000
         ST    @10,SUBOFS                                          0465 01666000
*             DNOBPTR = OACSAVE;      /* REF 1ST ACCTNMBR AGAIN      */ 01667000
         L     DNOBPTR,OACSAVE                                     0466 01668000
*             UADSASUB = SUBOFS;      /* CONNECT 1ST PROC TO IT      */ 01669000
         ST    @10,UADSASUB(,DNOBPTR)                              0467 01670000
*               END;                                               0468 01671000
*         /* START THE PRUNING PROCESS WITH THE 1ST BROTHER.         */ 01672000
*         DNOBPTR = HEDBPTR+UADSANEX;                              0469 01673000
@RF00459 LR    @10,HEDBPTR                                         0469 01674000
         SLR   @09,@09                                             0469 01675000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0469 01676000
         AR    @10,@09                                             0469 01677000
         LR    DNOBPTR,@10                                         0469 01678000
*ACHNPR2: /* BEGINNING OF THE PRUNING SECTION.                       */ 01679000
*         ANEXSAVE = UADSANEX;        /* SAVE OFFSET TO NEXT OBLK    */ 01680000
ACHNPR2  SLR   ANEXSAVE,ANEXSAVE                                   0470 01681000
         ICM   ANEXSAVE,7,UADSANEX(DNOBPTR)                        0470 01682000
*         /* SAVE THE CHAIN FLAG.                                    */ 01683000
*         IF AFLG01 = '1'B                                         0471 01684000
*           THEN                                                   0471 01685000
         TM    AFLG01(DNOBPTR),B'10000000'                         0471 01686000
         BNO   @RF00471                                            0471 01687000
*             FLGSAVE = '1'B;                                      0472 01688000
         OI    FLGSAVE,B'10000000'                                 0472 01689000
*           ELSE                                                   0473 01690000
*             FLGSAVE = '0'B;                                      0473 01691000
         B     @RC00471                                            0473 01692000
@RF00471 NI    FLGSAVE,B'01111111'                                 0473 01693000
*         UADSAPTR = HEDBPTR+UADSADAT;/* REF ITS DATA FIELD          */ 01694000
@RC00471 L     @10,UADSADAT(,DNOBPTR)                              0474 01695000
         LR    @09,HEDBPTR                                         0474 01696000
         AR    @09,@10                                             0474 01697000
         ST    @09,UADSAPTR                                        0474 01698000
*         /* CHECK WHETHER THE DATAFLD CAN BE FREED (IF USE CTR = 1) */ 01699000
*         IF UADSACTR = 1                                          0475 01700000
*           THEN                      /* YES,                        */ 01701000
         CLI   UADSACTR(@09),1                                     0475 01702000
         BNE   @RF00475                                            0475 01703000
*             DO;                                                  0476 01704000
*               AREAOFST = UADSADAT;  /* OFFSET TO AREA TO BE FREED  */ 01705000
         ST    @10,AREAOFST                                        0477 01706000
*               AREALNTH = 45+UADSALEN;/* LENGTH TO BE FREED         */ 01707000
         LA    @10,45                                              0478 01708000
         SLR   @07,@07                                             0478 01709000
         IC    @07,UADSALEN(,@09)                                  0478 01710000
         AR    @10,@07                                             0478 01711000
         STH   @10,AREALNTH                                        0478 01712000
*               CALL IKJFRSP;         /* GO FREE THE DATAFLD         */ 01713000
         BAL   @14,IKJFRSP                                         0479 01714000
*             END;                                                 0480 01715000
*           ELSE                      /* NO,                         */ 01716000
*             UADSACTR = UADSACTR-1;  /* DECREMENT THE USE COUNTER   */ 01717000
         B     @RC00475                                            0481 01718000
@RF00475 L     @10,UADSAPTR                                        0481 01719000
         SLR   @09,@09                                             0481 01720000
         IC    @09,UADSACTR(,@10)                                  0481 01721000
         BCTR  @09,0                                               0481 01722000
         STC   @09,UADSACTR(,@10)                                  0481 01723000
*         /* PRUNE ONE ACCTNMBR OFFSET BLOCK FROM THE TREE.          */ 01724000
*         AREAOFST = DNOBPTR-HEDBPTR; /* OFFSET TO AREA TO BE FREED  */ 01725000
@RC00475 LR    @10,DNOBPTR                                         0482 01726000
         SR    @10,HEDBPTR                                         0482 01727000
         ST    @10,AREAOFST                                        0482 01728000
*         AREALNTH = 12;              /* LENGTH TO BE FREED          */ 01729000
         MVC   AREALNTH(2),@CH00055                                0483 01730000
*         CALL IKJFRSP;               /* GO FREE THE OBLK            */ 01731000
         BAL   @14,IKJFRSP                                         0484 01732000
*         /* CHECK FOR MORE BROTHERS IN THIS CHAIN.                  */ 01733000
*         IF FLGSAVE = '0'B                                        0485 01734000
*           THEN                      /* MORE OBLKS TO BE FREED      */ 01735000
         TM    FLGSAVE,B'10000000'                                 0485 01736000
         BNZ   @RF00485                                            0485 01737000
*             DO;                                                  0486 01738000
*               DNOBPTR =             /* REF THE NEXT OBLK           */ 01739000
*                 HEDBPTR+ANEXSAVE;                                0487 01740000
         LR    DNOBPTR,HEDBPTR                                     0487 01741000
         AR    DNOBPTR,ANEXSAVE                                    0487 01742000
*               GOTO ACHNPR2;         /* CONTINUE PRUNING            */ 01743000
         B     ACHNPR2                                             0488 01744000
*             END;                                                 0489 01745000
*         /* PRUNING IN THIS LOCAL CHAIN HAS BEEN COMPLETED.         */ 01746000
*         DNOBPTR = OACSAVE;          /* REF THE 1ST OBLK AGAIN      */ 01747000
@RF00485 L     DNOBPTR,OACSAVE                                     0490 01748000
*         UADSANEX = ANEXSAVE;        /* INSERT THE OFFSET TO THE 1ST   01749000
*                                        OBLK IN THE NEXT CHAIN      */ 01750000
         STCM  ANEXSAVE,7,UADSANEX(DNOBPTR)                        0491 01751000
*         AFLG01 = '1'B;              /* SET THE CHAIN FLAG TO 1 - 0492 01752000
*                                        END OF THIS LOCAL CHAIN     */ 01753000
         OI    AFLG01(DNOBPTR),B'10000000'                         0492 01754000
*         GOTO ACNEXT2;               /* GO CHECK WHERE PROCESSING 0493 01755000
*                                        IS TO CONTINUE              */ 01756000
         B     ACNEXT2                                             0493 01757000
*NACTS:   /* SEARCH THE TOTAL CHAIN FOR THE NEW ACCTNMBR.            */ 01758000
*         CALL DLACTS;                /* GO TO TOTAL SEARCH SUBRTNE  */ 01759000
NACTS    BAL   @14,DLACTS                                          0494 01760000
*         /* DOES THE NEW ACCTNMBR EXIST IN THE TOTAL CHAIN?         */ 01761000
*         IF CSNPTR = 0                                            0495 01762000
*           THEN                      /* NO,                         */ 01763000
         L     @10,CSNPTR                                          0495 01764000
         LTR   @10,@10                                             0495 01765000
         BZ    @RT00495                                            0495 01766000
*             GOTO NACNF1;            /* GO MAKE APPROPRIATE CHANGES */ 01767000
*         /* THE NEW ACCTNMBR EXISTS IN A COUSIN CHAIN. THE COUSIN   */ 01768000
*         /* DATA FIELD MUST BE USED.                                */ 01769000
*         /* CHECK THE USE COUNTER BEFORE INCREMENTING IT. IT CANNOT */ 01770000
*         /* EXCEED 255.                                             */ 01771000
*         IF UADSACTR = 255                                        0497 01772000
*           THEN                      /* CTR LIMIT HAS BEEN REACHED  */ 01773000
         L     @10,UADSAPTR                                        0497 01774000
         CLI   UADSACTR(@10),255                                   0497 01775000
         BNE   @RF00497                                            0497 01776000
*             DO;                                                  0498 01777000
*               MSGNMBR = 30;         /* SET MSG NO FOR IKJEFA20     */ 01778000
         MVI   MSGNMBR(CTRLTABP),X'1E'                             0499 01779000
*               GOTO WORKEND;         /* GO RETURN                   */ 01780000
         B     WORKEND                                             0500 01781000
*             END;                                                 0501 01782000
*         UADSACTR = UADSACTR+1;      /* INCREMENT THE USE CTR       */ 01783000
@RF00497 L     @10,UADSAPTR                                        0502 01784000
         LA    @09,1                                               0502 01785000
         SLR   @07,@07                                             0502 01786000
         IC    @07,UADSACTR(,@10)                                  0502 01787000
         AR    @09,@07                                             0502 01788000
         STC   @09,UADSACTR(,@10)                                  0502 01789000
*         DNOBPTR = OACSAVE;          /* REF 1ST OBLK AGAIN          */ 01790000
         L     DNOBPTR,OACSAVE                                     0503 01791000
*         ADATSAVE = UADSADAT;        /* SAVE OFFSET TO ITS DATAFLD  */ 01792000
         L     @10,UADSADAT(,DNOBPTR)                              0504 01793000
         ST    @10,ADATSAVE                                        0504 01794000
*         UADSADAT = RDATSAVE;        /* INSERT OFFSET TO COUSIN DFD */ 01795000
         L     @10,RDATSAVE                                        0505 01796000
         ST    @10,UADSADAT(,DNOBPTR)                              0505 01797000
*PRADF:   /* LABEL FOR BRANCH POINT.                                 */ 01798000
*         UADSAPTR = ODFPTR;          /* REF DATAFLD OF 1ST OBLK     */ 01799000
PRADF    L     @10,ODFPTR                                          0506 01800000
         ST    @10,UADSAPTR                                        0506 01801000
*         /* CHECK WHETHER THIS DATA FIELD CAN BE FREED.             */ 01802000
*         IF UADSACTR = 1                                          0507 01803000
*           THEN                      /* YES,                        */ 01804000
         CLI   UADSACTR(@10),1                                     0507 01805000
         BNE   @RF00507                                            0507 01806000
*             DO;                                                  0508 01807000
*               AREAOFST = ADATSAVE;  /* OFFSET TO AREA TO BE FREED  */ 01808000
         L     @09,ADATSAVE                                        0509 01809000
         ST    @09,AREAOFST                                        0509 01810000
*               AREALNTH = 45+UADSALEN;/* LENGTH TO BE FREED         */ 01811000
         LA    @09,45                                              0510 01812000
         SLR   @07,@07                                             0510 01813000
         IC    @07,UADSALEN(,@10)                                  0510 01814000
         AR    @09,@07                                             0510 01815000
         STH   @09,AREALNTH                                        0510 01816000
*               CALL IKJFRSP;         /* GO FREE THE DATAFLD         */ 01817000
         BAL   @14,IKJFRSP                                         0511 01818000
*             END;                                                 0512 01819000
*           ELSE                      /* NO,                         */ 01820000
*             UADSACTR = UADSACTR-1;  /* DECREMENT THE USE CTR       */ 01821000
         B     @RC00507                                            0513 01822000
@RF00507 L     @10,UADSAPTR                                        0513 01823000
         SLR   @09,@09                                             0513 01824000
         IC    @09,UADSACTR(,@10)                                  0513 01825000
         BCTR  @09,0                                               0513 01826000
         STC   @09,UADSACTR(,@10)                                  0513 01827000
*         GOTO ACHNPR1;               /* GO TO THE PRUNING SECTION   */ 01828000
         B     ACHNPR1                                             0514 01829000
*NACNF1:  /* THE NEW ACCTNMBR DOES NOT EXIST IN THIS TREE. CREATE A  */ 01830000
*         /* NEW DATA FIELD FOR IT.                                  */ 01831000
*         DNOBPTR = OACSAVE;          /* REF THE 1ST OBLK AGAIN      */ 01832000
NACNF1   L     DNOBPTR,OACSAVE                                     0515 01833000
*         UADSAPTR = ODFPTR;          /* REF ITS DATA FIELD          */ 01834000
         L     @10,ODFPTR                                          0516 01835000
         ST    @10,UADSAPTR                                        0516 01836000
*         ADATSAVE = UADSADAT;        /* SAVE OFFSET TO ITS DATAFLD  */ 01837000
         L     @10,UADSADAT(,DNOBPTR)                              0517 01838000
         ST    @10,ADATSAVE                                        0517 01839000
*         NACDFLG = '1'B;             /* SET FLAG FOR LOGIC FLOW     */ 01840000
         OI    NACDFLG,B'00001000'                                 0518 01841000
*         GOTO NEWACDF;               /* GO CREATE A NEW DATAFLD     */ 01842000
         B     NEWACDF                                             0519 01843000
*NACNF2:  /* RETURN POINT AFTER A NEW DATA FIELD HAS BEEN CREATED.   */ 01844000
*         UADSADRF =                  /* SET THE DRIVER FIELD IN THE */ 01845000
*           UADSADRF&&UADSADRF;       /* DATA FIELD TO ZERO          */ 01846000
NACNF2   L     @10,UADSAPTR                                        0520 01847000
         XC    UADSADRF(40,@10),UADSADRF(@10)                      0520 01848000
*         NACDFLG = '0'B;             /* RESET THE CONTROL FLAG      */ 01849000
         NI    NACDFLG,B'11110111'                                 0521 01850000
*         GOTO PRADF;                 /* GO FREE THE OLD DATAFLD     */ 01851000
         B     PRADF                                               0522 01852000
*CHTWSR1: /* THE PROCNAME CHAINS UNDER THE ACCTNMBRS OF THIS LOCAL   */ 01853000
*         /* ACCTNMBR CHAIN MUST BE COMPARED TO MAKE SURE THAT NO    */ 01854000
*         /* TWINS EXIST. THESE CHAINS WILL BE MERGED INTO ONE AND   */ 01855000
*         /* ONE OF EACH PAIR OF TWINS MUST BE PRUNED. IF THE TWINS  */ 01856000
*         /* DO NOT HAVE IDENTICAL DATA FIELDS, HOWEVER, THEN THE    */ 01857000
*         /* MERGE IS NOT POSSIBLE & AN ERROR MSG WILL BE ISSUED.    */ 01858000
*         ACTWIN1 = DNOBPTR;          /* REF THE 1ST ACCTNMBR OBLK   */ 01859000
CHTWSR1  LR    ACTWIN1,DNOBPTR                                     0523 01860000
*         ACTWIN2 = HEDBPTR+UADSANEX; /* REF ITS BROTHER. THEIR PROC-   01861000
*                                        NAME CHAINS WILL BE COMPARD */ 01862000
         LR    ACTWIN2,HEDBPTR                                     0524 01863000
         SLR   @07,@07                                             0524 01864000
         ICM   @07,7,UADSANEX(DNOBPTR)                             0524 01865000
         AR    ACTWIN2,@07                                         0524 01866000
*         ALLACFLG = '1'B;            /* SET FLAG FOR LOGIC FLOW     */ 01867000
         OI    ALLACFLG,B'00100000'                                0525 01868000
*         /* GO TO THE TWIN SEARCH SECTION & PRUNE ONE OF EACH PAIR  */ 01869000
*         /* OF TWINS THAT ARE FOUND.                                */ 01870000
*         GOTO PRTWSRCH;                                           0526 01871000
         B     PRTWSRCH                                            0526 01872000
*CHTWSR2: /* RETURN POINT AFTER TWIN SEARCH AND PRUNING.             */ 01873000
*         DNOBPTR = ACTWIN2;          /* REF THE 2ND OF THE TWO ACCT-   01874000
*                                        NMBRS WHOSE PROCNAME CHAINS    01875000
*                                        WHERE JUST COMPARED         */ 01876000
CHTWSR2  LR    DNOBPTR,ACTWIN2                                     0527 01877000
*         /* DOES THIS 2ND ACCTNMBR HAVE MORE BROTHERS?              */ 01878000
*         IF AFLG01 = '0'B                                         0528 01879000
*           THEN                      /* YES,                        */ 01880000
         TM    AFLG01(DNOBPTR),B'10000000'                         0528 01881000
         BNZ   @RF00528                                            0528 01882000
*             DO;                                                  0529 01883000
*               ACTWIN2 =             /* REF ITS BROTHER FOR THE     */ 01884000
*                 HEDBPTR+UADSANEX;   /* NEXT COMPARISON OF PROCS    */ 01885000
         LR    ACTWIN2,HEDBPTR                                     0530 01886000
         SLR   @07,@07                                             0530 01887000
         ICM   @07,7,UADSANEX(DNOBPTR)                             0530 01888000
         AR    ACTWIN2,@07                                         0530 01889000
*               /* GO TO THE TWIN SEARCH SECTION AGAIN.              */ 01890000
*               GOTO PRTWSRCH;                                     0531 01891000
         B     PRTWSRCH                                            0531 01892000
*             END;                                                 0532 01893000
*         /* END OF CHAIN HAS BEEN REACHED. REF THE 1ST OF THE TWO   */ 01894000
*         /* ACCTNMBRS AGAIN. THIS PROCESS WILL CONTINUE UNTIL EVERY */ 01895000
*         /* PROCNAME CHAIN UNDER THIS PASSWORD HAS BEEN COMPARED    */ 01896000
*         /* TO ALL OTHERS.                                          */ 01897000
*         DNOBPTR = ACTWIN1;                                       0533 01898000
@RF00528 LR    DNOBPTR,ACTWIN1                                     0533 01899000
*         DNOBPTR = HEDBPTR+UADSANEX; /* REF ITS BROTHER             */ 01900000
         LR    @10,HEDBPTR                                         0534 01901000
         SLR   @09,@09                                             0534 01902000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0534 01903000
         AR    @10,@09                                             0534 01904000
         LR    DNOBPTR,@10                                         0534 01905000
*         /* ARE THERE MORE BROTHERS?                                */ 01906000
*         IF AFLG01 = '0'B                                         0535 01907000
*           THEN                      /* YES,                        */ 01908000
         TM    AFLG01(DNOBPTR),B'10000000'                         0535 01909000
         BZ    @RT00535                                            0535 01910000
*             GOTO CHTWSR1;           /* CONTINUE THE PROCESS        */ 01911000
*         /* THE SEARCH FOR & PRUNING OF POSSIBLE PROCNAME TWINS     */ 01912000
*         /* HAS BEEN COMPLETED. ALL PROCNAME CHAINS UNDER THIS      */ 01913000
*         /* PASSWORD WILL NOW BE MERGED INTO ONE CHAIN.             */ 01914000
*         DNOBPTR = OACSAVE;          /* REF 1ST ACCTNMBR OBLK       */ 01915000
         L     DNOBPTR,OACSAVE                                     0537 01916000
*CHMRG2:  /* ANY MORE ACCTNMBRS IN THIS CHAIN?                       */ 01917000
*         IF AFLG01 = '1'B                                         0538 01918000
*           THEN                      /* NO, THE MERGE IS COMPLETE   */ 01919000
CHMRG2   TM    AFLG01(DNOBPTR),B'10000000'                         0538 01920000
         BNO   @RF00538                                            0538 01921000
*             DO;                                                  0539 01922000
*               DNOBPTR = OACSAVE;    /* REF 1ST ACCTNMBR IN CHAIN   */ 01923000
         L     DNOBPTR,OACSAVE                                     0540 01924000
*               GOTO NACLS;           /* START THE PRUNING PROCESS   */ 01925000
         B     NACLS                                               0541 01926000
*             END;                                                 0542 01927000
*         /* IT IS POSSIBLE THAT AN ACCTNMBR HAS NO PROCS LEFT. IF   */ 01928000
*         /* SO, CONTINUE WITH THE NEXT ACCTNMBR.                    */ 01929000
*         IF UADSASUB ^= 0                                         0543 01930000
*           THEN                      /* YES PROCS LEFT,             */ 01931000
@RF00538 L     @10,UADSASUB(,DNOBPTR)                              0543 01932000
         LTR   @10,@10                                             0543 01933000
         BZ    @RF00543                                            0543 01934000
*             DO;                                                  0544 01935000
*             /* REF THE 1ST PROCNAME OBLK UNDER THIS ACCTNMBR.      */ 01936000
*             DROBPTR = HEDBPTR+UADSASUB;                          0545 01937000
         AR    @10,HEDBPTR                                         0545 01938000
         LR    DROBPTR,@10                                         0545 01939000
*             /* FIND THE END OF THIS PROCNAME CHAIN & SET THE CHAIN */ 01940000
*             /* FLAG TO '0'B. THIS MERGES IT WITH THE NEXT CHAIN.   */ 01941000
*             DO WHILE FLGR01 = '0'B; /* END OF CHAIN?               */ 01942000
         B     @DE00546                                            0546 01943000
@DL00546 DS    0H                                                  0547 01944000
*               DROBPTR =             /* REF THE NEXT PROC BROTHER   */ 01945000
*                 HEDBPTR+UADSRNEX;                                0547 01946000
         LR    @10,HEDBPTR                                         0547 01947000
         SLR   @09,@09                                             0547 01948000
         ICM   @09,7,UADSRNEX(DROBPTR)                             0547 01949000
         AR    @10,@09                                             0547 01950000
         LR    DROBPTR,@10                                         0547 01951000
*               END;                                               0548 01952000
@DE00546 TM    FLGR01(DROBPTR),B'10000000'                         0548 01953000
         BZ    @DL00546                                            0548 01954000
*             FLGR01 = '0'B;          /* SET CHAIN FLAG TO ZERO      */ 01955000
         NI    FLGR01(DROBPTR),B'01111111'                         0549 01956000
*             SUBOFS = DROBPTR;       /* SAVE ADDR OF THIS OBLK      */ 01957000
         ST    DROBPTR,SUBOFS                                      0550 01958000
*             END;                                                 0551 01959000
*         DNOBPTR = HEDBPTR+UADSANEX; /* REF NEXT ACCTNMBR IN CHAIN  */ 01960000
@RF00543 LR    @10,HEDBPTR                                         0552 01961000
         SLR   @09,@09                                             0552 01962000
         ICM   @09,7,UADSANEX(DNOBPTR)                             0552 01963000
         AR    @10,@09                                             0552 01964000
         LR    DNOBPTR,@10                                         0552 01965000
*         /* IF THIS IS THE LAST ACCTNMBR IN THIS LOCAL CHAIN AND    */ 01966000
*         /* THERE ARE NO PROCS LEFT UNDER IT, THEN THE CHAIN FLAG   */ 01967000
*         /* IN THE LAST PROC OBLK OF THE PREVIOUS CHAIN MUST BE     */ 01968000
*         /* SET TO '1'.                                             */ 01969000
*         IF AFLG01 = '1'B            /* LAST ACCTNMBR IN LOC CHAIN? */ 01970000
*           THEN                      /* YES,                        */ 01971000
         TM    AFLG01(DNOBPTR),B'10000000'                         0553 01972000
         BNO   @RF00553                                            0553 01973000
*             /* ANY PROCS LEFT UNDER THIS ACCTNMBR?                 */ 01974000
*             IF UADSASUB = 0                                      0554 01975000
*               THEN                  /* NO,                         */ 01976000
         L     @10,UADSASUB(,DNOBPTR)                              0554 01977000
         LTR   @10,@10                                             0554 01978000
         BNZ   @RF00554                                            0554 01979000
*                 DO;                                              0555 01980000
*                   DROBPTR = SUBOFS; /* REF LAST EXISTING PROC      */ 01981000
         L     DROBPTR,SUBOFS                                      0556 01982000
*                   FLGR01 = '1'B;    /* SET ITS CHAIN FLAG TO '1' TO   01983000
*                                        INDICATE END OF CHAIN       */ 01984000
         OI    FLGR01(DROBPTR),B'10000000'                         0557 01985000
*                 END;                                             0558 01986000
*         GOTO CHMRG2;                /* GO CHECK WHERE TO CONTINUE  */ 01987000
         B     CHMRG2                                              0559 01988000
*ACNEXT2: /* DETERMINE WHERE PROCESSING IS TO CONTINUE. IF THERE ARE */ 01989000
*         /* MORE PASSWORDS TO BE PROCESSED IN THIS TREE, THEN       */ 01990000
*         /* REFERENCE THE NEXT PASSWORD AND CONTINUE. IF NOT, THEN  */ 01991000
*         /* RETURN TO IKJEFA20 TO WRITE THIS TREE INTO THE UADS.    */ 01992000
*         DPOBPTR = NLPWOBAD;         /* REF PASSWORD JUST PROCESSED */ 01993000
ACNEXT2  LR    DPOBPTR,NLPWOBAD                                    0560 01994000
*         /* IF A PASSWORD WAS SPECIFIED, OR THERE ARE NO MORE PASS- */ 01995000
*         /* WORDS IN THE CHAIN, THEN ALL NECESSARY CHANGES HAVE     */ 01996000
*         /* BEEN MADE TO THIS TREE.                                 */ 01997000
*         IF PASSWD(1) ^= '*'         /* PASSWORD SPECIFIED?         */ 01998000
*          | PFLG01 = '1'B            /* OR END OF CHAIN?            */ 01999000
*           THEN                      /* YES, ONE OF THE ABOVE       */ 02000000
         L     @10,NODELPTR(,CTRLTABP)                             0561 02001000
         CLI   PASSWD(@10),C'*'                                    0561 02002000
         BNE   @RT00561                                            0561 02003000
         TM    PFLG01(DPOBPTR),B'10000000'                         0561 02004000
         BO    @RT00561                                            0561 02005000
*             GOTO CHGEOK;            /* GO SET INDICATORS & RETURN  */ 02006000
*         DPOBPTR = HEDBPTR+UADSPNEX; /* REF THE NEXT PASSWD OBLK    */ 02007000
         LR    @10,HEDBPTR                                         0563 02008000
         SLR   @09,@09                                             0563 02009000
         ICM   @09,7,UADSPNEX(DPOBPTR)                             0563 02010000
         AR    @10,@09                                             0563 02011000
         LR    DPOBPTR,@10                                         0563 02012000
*         NLPWOBAD = DPOBPTR;         /* SAVE ADDR OF THIS OBLK      */ 02013000
         LR    NLPWOBAD,DPOBPTR                                    0564 02014000
*         GOTO CHALLAC;               /* CONTINUE UNDER NEXT PASSWRD */ 02015000
         B     CHALLAC                                             0565 02016000
*CHGEOK:  /* THIS TREE HAS BEEN CHANGED SUCCESSFULLY. SET APPROPRI-  */ 02017000
*         /* ATE INDICATORS AND RETURN TO CHANGE (IKJEFA20).         */ 02018000
*         MSGNMBR = 0;                /* ALL REQUIRED CHANGES TO THIS   02019000
*                                        TREE HAVE BEEN MADE         */ 02020000
CHGEOK   MVI   MSGNMBR(CTRLTABP),X'00'                             0566 02021000
*WORKEND: /* THIS ROUTINE HAS COMPLETED PROCESSING. RETURN TO        */ 02022000
*         /* CHANGE (IKJEFA20) WITH EITHER A REQUEST TO WRITE THIS   */ 02023000
*         /* TREE BACK INTO THE UADS, OR A REQUEST TO PERFORM        */ 02024000
*         /* ANOTHER SEARCH, OR A REQUEST TO ISSUE AN ERROR MESSAGE. */ 02025000
*         RETURN;                                                  0567 02026000
         B     @EL00001                                            0567 02027000
*DLACLS:  /***********************************************************/ 02028000
*         /* THIS SUBROUTINE WILL SEARCH FOR AN ACCTNMBR IN A        */ 02029000
*         /* LOCAL ACCTNMBR CHAIN.                                   */ 02030000
*         /***********************************************************/ 02031000
*         PROC;                                                    0568 02032000
DLACLS   STM   @14,@02,12(@13)                                     0568 02033000
         STM   @04,@08,36(@13)                                     0568 02034000
         STM   @10,@12,60(@13)                                     0568 02035000
*         /* BEGINNING OF THE SEARCH LOOP (LOCAL CHAIN).             */ 02036000
*         LOOPFLG = '0'B;             /* RESET LOOP FLAG             */ 02037000
         NI    LOOPFLG,B'11111011'                                 0569 02038000
*         DO WHILE LOOPFLG = '0'B;    /* ANY BROTHERS?               */ 02039000
         B     @DE00570                                            0570 02040000
@DL00570 DS    0H                                                  0571 02041000
*           UADSAPTR = HEDBPTR+UADSADAT;/* REF ACCTNMBR DATAFLD      */ 02042000
         LR    @10,HEDBPTR                                         0571 02043000
         A     @10,UADSADAT(,DNOBPTR)                              0571 02044000
         ST    @10,UADSAPTR                                        0571 02045000
*           /* COMPARE LENGTH OF THE NEW ACCTNMBR TO LENGTH OF UADS  */ 02046000
*           /* ACCTNMBR. AFTER FINDING TWO EQUAL LENGTHS, COMPARE THE*/ 02047000
*           /* ACCOUNT NUMBERS.                                      */ 02048000
*           /* COMPARE THE NEW ACCTNMBR TO THE UADS ACCTNMBR         */ 02049000
*           IF UADSALEN = DACTLEN                                  0572 02050000
*            & UADSANUM(1:DACTLEN)                                 0572 02051000
*               = DACCTNO(1:DACTLEN)                               0572 02052000
*                 THEN                /* THE NEW ACCTNMBR EXISTS IN     02053000
*                                        THE LOCAL CHAIN.            */ 02054000
         L     @07,DATALPTR(,CTRLTABP)                             0572 02055000
         CLC   UADSALEN(1,@10),DACTLEN(@07)                        0572 02056000
         BNE   @RF00572                                            0572 02057000
         SLR   @05,@05                                             0572 02058000
         IC    @05,DACTLEN(,@07)                                   0572 02059000
         BCTR  @05,0                                               0572 02060000
         EX    @05,@SC00311                                        0572 02061000
         BNE   @RF00572                                            0572 02062000
*                   DO;                                            0573 02063000
*                   ACTWIN2 = DNOBPTR;/* SAVE ADDR OF THIS OBLK      */ 02064000
         LR    ACTWIN2,DNOBPTR                                     0574 02065000
*                   RETURN;           /* GO BACK TO POINT OF CALL    */ 02066000
@EL00002 DS    0H                                                  0575 02067000
@EF00002 DS    0H                                                  0575 02068000
@ER00002 LM    @14,@02,12(@13)                                     0575 02069000
         LM    @04,@08,36(@13)                                     0575 02070000
         LM    @10,@12,60(@13)                                     0575 02071000
         BR    @14                                                 0575 02072000
*                   END;                                           0576 02073000
*           /* THE NEW ACCTNMBR HAS NOT BEEN FOUND YET. IF THERE     */ 02074000
*           /* ARE MORE ACCTNMBRS IN THIS CHAIN, THEN CONTINUE THE   */ 02075000
*           /* SEARCH.                                               */ 02076000
*           IF AFLG01 = '1'B          /* IS THIS THE END OF CHAIN?   */ 02077000
*             THEN                    /* YES,                        */ 02078000
@RF00572 TM    AFLG01(DNOBPTR),B'10000000'                         0577 02079000
         BNO   @RF00577                                            0577 02080000
*               LOOPFLG = '1'B;       /* TERMINATE LOOP              */ 02081000
         OI    LOOPFLG,B'00000100'                                 0578 02082000
*             ELSE                                                 0579 02083000
*               DNOBPTR = HEDBPTR+    /* REF NEXT ACCTNMBR OBLK      */ 02084000
*                 UADSANEX;                                        0579 02085000
         B     @RC00577                                            0579 02086000
@RF00577 LR    @10,HEDBPTR                                         0579 02087000
         SLR   @07,@07                                             0579 02088000
         ICM   @07,7,UADSANEX(DNOBPTR)                             0579 02089000
         AR    @10,@07                                             0579 02090000
         LR    DNOBPTR,@10                                         0579 02091000
*           END;                                                   0580 02092000
@RC00577 DS    0H                                                  0580 02093000
@DE00570 TM    LOOPFLG,B'00000100'                                 0580 02094000
         BZ    @DL00570                                            0580 02095000
*         /* THE NEW ACCTNMBR DOES NOT EXIST IN THIS LOCAL CHAIN.    */ 02096000
*         ACTWIN2 = 0;                /* 0- ACCTNMBR NOT FOUND       */ 02097000
         SLR   ACTWIN2,ACTWIN2                                     0581 02098000
*         END DLACLS;                 /* GO BACK TO POINT OF CALL    */ 02099000
         B     @EL00002                                            0582 02100000
*DLACTS:  /***********************************************************/ 02101000
*         /* THIS SUBROUTINE WILL SEARCH FOR AN ACCTNMBR IN THE      */ 02102000
*         /* TOTAL LATERAL CHAIN.                                    */ 02103000
*         /***********************************************************/ 02104000
*         PROC;                                                    0583 02105000
DLACTS   STM   @14,@12,12(@13)                                     0583 02106000
*         DPOBPTR = HEDBPTR+UADSPWD1; /* REF THE 1ST PASSWORD OBLK   */ 02107000
         LR    DPOBPTR,HEDBPTR                                     0584 02108000
         A     DPOBPTR,UADSPWD1(,HEDBPTR)                          0584 02109000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF THE 1ST PROCNAME OBLK   */ 02110000
         LR    DNOBPTR,HEDBPTR                                     0585 02111000
         A     DNOBPTR,UADSPSUB(,DPOBPTR)                          0585 02112000
*         /* BEGINNING OF THE SEARCH LOOP.                           */ 02113000
*         DO WHILE DNOBPTR ^= HEDBPTR;/* MORE ACCTNMBRS?             */ 02114000
         B     @DE00586                                            0586 02115000
@DL00586 DS    0H                                                  0587 02116000
*           UADSAPTR = HEDBPTR+UADSADAT;/* REF THE ACCTNMBR DATAFLD  */ 02117000
         L     @10,UADSADAT(,DNOBPTR)                              0587 02118000
         LR    @07,HEDBPTR                                         0587 02119000
         AR    @07,@10                                             0587 02120000
         ST    @07,UADSAPTR                                        0587 02121000
*           /* IS THIS LENGTH EQUAL TO THE DATALIST ACCTNMBR LENGTH? */ 02122000
*           /* COMPARE THE DATALIST ACCTNMBR TO THE UADS ACCTNMBR    */ 02123000
*           IF UADSALEN = DACTLEN                                  0588 02124000
*            & UADSANUM(1:DACTLEN)                                 0588 02125000
*               = DACCTNO(1:DACTLEN)                               0588 02126000
*                 THEN                /* THE DATALIST ACCTNMBR EXISTS   02127000
*                                        IN THIS COUSIN CHAIN        */ 02128000
         L     @05,DATALPTR(,CTRLTABP)                             0588 02129000
         CLC   UADSALEN(1,@07),DACTLEN(@05)                        0588 02130000
         BNE   @RF00588                                            0588 02131000
         SLR   @02,@02                                             0588 02132000
         IC    @02,DACTLEN(,@05)                                   0588 02133000
         BCTR  @02,0                                               0588 02134000
         EX    @02,@SC00313                                        0588 02135000
         BNE   @RF00588                                            0588 02136000
*                   DO;                                            0589 02137000
*                   CSNPTR = DNOBPTR; /* SAVE ADDR OF THIS OBLK      */ 02138000
         ST    DNOBPTR,CSNPTR                                      0590 02139000
*                   RDATSAVE = UADSADAT;/* SAVE OFFSET TO THIS DFLD  */ 02140000
         ST    @10,RDATSAVE                                        0591 02141000
*                   NDFPTR = UADSAPTR;/* SAVE ADDR OF THIS DATAFLD   */ 02142000
         ST    @07,NDFPTR                                          0592 02143000
*                   RETURN;           /* GO BACK TO POINT OF CALL    */ 02144000
@EL00003 DS    0H                                                  0593 02145000
@EF00003 DS    0H                                                  0593 02146000
@ER00003 LM    @14,@12,12(@13)                                     0593 02147000
         BR    @14                                                 0593 02148000
*                   END;                                           0594 02149000
*           /* THE DESIRED ACCTNMBR HAS NOT BEEN FOUND YET. IF THERE */ 02150000
*           /* ARE MORE ACCTNMBRS IN THE TOTAL CHAIN, THEN CONTINUE  */ 02151000
*           /* THE SEARCH.                                           */ 02152000
*           DNOBPTR = HEDBPTR+UADSANEX;/* REF NEXT ACCTNMBR OBLK      * 02153000
@RF00588 LR    @10,HEDBPTR                                         0595 02154000
         SLR   @07,@07                                             0595 02155000
         ICM   @07,7,UADSANEX(DNOBPTR)                             0595 02156000
         AR    @10,@07                                             0595 02157000
         LR    DNOBPTR,@10                                         0595 02158000
*           END;                                                   0596 02159000
@DE00586 CR    DNOBPTR,HEDBPTR                                     0596 02160000
         BNE   @DL00586                                            0596 02161000
*         CSNPTR = 0;                 /* 0- ACCTNMBR NOT FOUND       */ 02162000
         SLR   @10,@10                                             0597 02163000
         ST    @10,CSNPTR                                          0597 02164000
*         /*RESTORE REGISTER 14 AND RETURN.                          */ 02165000
*         END DLACTS;                 /* RETURN TO POINT OF CALL     */ 02166000
         B     @EL00003                                            0598 02167000
*IKJFRSP: /***********************************************************/ 02168000
*         /* THIS SUBROUTINE WILL INTERFACE WITH THE FREESPACE       */ 02169000
*         /* ROUTINE (IKJEFA54) AND CHECK ITS RETURN CODE. IF        */ 02170000
*         /* FREESPACE WAS SUCCESSFUL, CONTROL WILL BE PASSED BACK   */ 02171000
*         /* TO THE POINT OF CALL. IF NOT, CONTROL WILL BE RETURNED  */ 02172000
*         /* TO THE CHANGE CP (IKJEFA20) WHICH WILL ISSUE THE        */ 02173000
*         /* APPROPRIATE ERROR MESSAGE.                              */ 02174000
*         /***********************************************************/ 02175000
*         PROC;                                                    0599 02176000
IKJFRSP  STM   @14,@12,@SA00004                                    0599 02177000
*         RFY R1 RSTD;                /* RESTRICT PARAMETER REG      */ 02178000
*         R1 = ADDR(GETFREE);         /* PTR TO FREESPACE PARMLIST   */ 02179000
         LA    R1,GETFREE                                          0601 02180000
*         CALL IKJEFA54;              /* GO TO THE FREESPACE ROUTINE */ 02181000
         L     @15,@CV00108                                        0602 02182000
         BALR  @14,@15                                             0602 02183000
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REG       */ 02184000
*         RFY R15 RSTD;               /* RESTRICT RETURN CODE REG    */ 02185000
*         RETCODE = R15;              /* ASSIGN THE RETURN CODE      */ 02186000
         ST    R15,RETCODE(,CTRLTABP)                              0605 02187000
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REG     */ 02188000
*         IF RETCODE ^= 0                                          0607 02189000
*           THEN                      /* FREESPACE UNSUCCESSFUL      */ 02190000
         L     @10,RETCODE(,CTRLTABP)                              0607 02191000
         LTR   @10,@10                                             0607 02192000
         BZ    @RF00607                                            0607 02193000
*             DO;                                                  0608 02194000
*               MSGNMBR = 24;         /* SET ERROR MSG NUMBER        */ 02195000
         MVI   MSGNMBR(CTRLTABP),X'18'                             0609 02196000
*               RETURN TO WORKEND;    /* CHANGE CP WILL ISSUE THE  0610 02197000
*                                        ERROR MSG & CONTINUE WITH 0610 02198000
*                                        THE NEXT USERID, IF ANY     */ 02199000
         LA    @14,WORKEND                                         0610 02200000
         LM    @15,@12,@SA00004+4                                  0610 02201000
         BR    @14                                                 0610 02202000
*             END;                                                 0611 02203000
*         END IKJFRSP;                                             0612 02204000
@EL00004 DS    0H                                                  0612 02205000
@EF00004 DS    0H                                                  0612 02206000
@ER00004 LM    @14,@12,@SA00004                                    0612 02207000
         BR    @14                                                 0612 02208000
*         END IKJEFA22                                             0613 02209000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 02210000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 02211000
*;                                                                 0613 02212000
         B     @EL00001                                            0613 02213000
@DATA    DS    0H                                                       02214000
@CH00055 DC    H'12'                                                    02215000
@SM00304 MVC   UADSANUM(0,@10),DACCTNO(@09)                             02216000
@SC00311 CLC   UADSANUM(0,@10),DACCTNO(@07)                             02217000
@SC00313 CLC   UADSANUM(0,@07),DACCTNO(@05)                             02218000
@DATD    DSECT                                                          02219000
         DS    0F                                                       02220000
@SA00001 DS    18F                                                      02221000
@SA00004 DS    0F                                                       02222000
         DS    15F                                                      02223000
IKJEFA22 CSECT                                                          02224000
         DS    0F                                                       02225000
@DATD    DSECT                                                          02226000
         DS    0D                                                       02227000
UADSAPTR DS    A                                                        02228000
DLPWOBAD DS    A                                                        02229000
OACSAVE  DS    A                                                        02230000
RNEXSAVE DS    A                                                        02231000
PNEXSAVE DS    A                                                        02232000
ADATSAVE DS    A                                                        02233000
RDATSAVE DS    A                                                        02234000
ODFPTR   DS    A                                                        02235000
NDFPTR   DS    A                                                        02236000
LASTOB   DS    A                                                        02237000
ACTWIN3  DS    A                                                        02238000
PRTWIN1  DS    A                                                        02239000
PRTWIN2  DS    A                                                        02240000
CSNSAVE  DS    A                                                        02241000
CSNPTR   DS    A                                                        02242000
SUBOFS   DS    A                                                        02243000
GETFREE  DS    CL12                                                     02244000
         ORG   GETFREE                                                  02245000
READBUFF DS    AL4                                                      02246000
NUMBLOKS DS    AL2                                                      02247000
AREALNTH DS    AL2                                                      02248000
AREAOFST DS    AL4                                                      02249000
         ORG   GETFREE+12                                               02250000
PRCOMP   DS    CL8                                                      02251000
CFLAGS   DS    CL1                                                      02252000
         ORG   CFLAGS                                                   02253000
FLGSAVE  DS    BL1                                                      02254000
FLDFLG   EQU   CFLAGS+0                                                 02255000
ALLACFLG EQU   CFLAGS+0                                                 02256000
ACTWSRF  EQU   CFLAGS+0                                                 02257000
NACDFLG  EQU   CFLAGS+0                                                 02258000
LOOPFLG  EQU   CFLAGS+0                                                 02259000
LOOPFLG2 EQU   CFLAGS+0                                                 02260000
ACPRFLG  EQU   CFLAGS+0                                                 02261000
         ORG   CFLAGS+1                                                 02262000
IKJEFA22 CSECT                                                          02263000
         DS    0F                                                       02264000
@SIZDATD DC    AL1(1)                                                   02265000
         DC    AL3(@ENDDATD-@DATD)                                      02266000
@CV00107 DC    V(IKJEFA53)                                              02267000
@CV00108 DC    V(IKJEFA54)                                              02268000
         DS    0D                                                       02269000
@CC00240 DC    C'* '                                                    02270000
IKJEFA22 CSECT                                                          02271000
         DS   0H                                                        02272000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   02273000
@DATD    DSECT                                                          02274000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                02275000
@ENDDATD EQU   *                                                        02276000
IKJEFA22 CSECT                                                          02277000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       02278000
@01      EQU   01                                                       02279000
@02      EQU   02                                                       02280000
@03      EQU   03                                                       02281000
@04      EQU   04                                                       02282000
@05      EQU   05                                                       02283000
@06      EQU   06                                                       02284000
@07      EQU   07                                                       02285000
@08      EQU   08                                                       02286000
@09      EQU   09                                                       02287000
@10      EQU   10                                                       02288000
@11      EQU   11                                                       02289000
@12      EQU   12                                                       02290000
@13      EQU   13                                                       02291000
@14      EQU   14                                                       02292000
@15      EQU   15                                                       02293000
PRUNOFS  EQU   @07                                                      02294000
ACSNOFS  EQU   @07                                                      02295000
ACTWIN2  EQU   @09                                                      02296000
ACTWIN1  EQU   @10                                                      02297000
NEWDFPTR EQU   @02                                                      02298000
ANEXSAVE EQU   @02                                                      02299000
NLPWOBAD EQU   @08                                                      02300000
CTRLTABP EQU   @06                                                      02301000
UADSRPTR EQU   @03                                                      02302000
UADSPPTR EQU   @02                                                      02303000
DROBPTR  EQU   @02                                                      02304000
DNOBPTR  EQU   @03                                                      02305000
DPOBPTR  EQU   @05                                                      02306000
HEDBPTR  EQU   @04                                                      02307000
R1       EQU   @01                                                      02308000
R15      EQU   @15                                                      02309000
DHED     EQU   0                                                        02310000
UADSMHDR EQU   DHED                                                     02311000
UADSBN01 EQU   UADSMHDR+12                                              02312000
UADSATTR EQU   DHED+16                                                  02313000
UADSPWD1 EQU   DHED+24                                                  02314000
DPOB     EQU   0                                                        02315000
PFLG01   EQU   DPOB                                                     02316000
UADSPNEX EQU   DPOB+1                                                   02317000
UADSPSUB EQU   DPOB+4                                                   02318000
UADSPDAT EQU   DPOB+8                                                   02319000
DNOB     EQU   0                                                        02320000
AFLG01   EQU   DNOB                                                     02321000
UADSANEX EQU   DNOB+1                                                   02322000
UADSASUB EQU   DNOB+4                                                   02323000
UADSADAT EQU   DNOB+8                                                   02324000
DROB     EQU   0                                                        02325000
FLGR01   EQU   DROB                                                     02326000
UADSRNEX EQU   DROB+1                                                   02327000
UADSRDAT EQU   DROB+8                                                   02328000
DPOBD    EQU   0                                                        02329000
UADSPPWD EQU   DPOBD+4                                                  02330000
DNOBD    EQU   0                                                        02331000
UADSACTR EQU   DNOBD                                                    02332000
UADSADRF EQU   DNOBD+4                                                  02333000
UADSALEN EQU   DNOBD+44                                                 02334000
UADSANUM EQU   DNOBD+45                                                 02335000
DROBD    EQU   0                                                        02336000
UADSRCTR EQU   DROBD                                                    02337000
UADSRNAM EQU   DROBD+4                                                  02338000
CTRLTAB  EQU   0                                                        02339000
DATALPTR EQU   CTRLTAB+8                                                02340000
NODELPTR EQU   CTRLTAB+12                                               02341000
BLKCNT   EQU   CTRLTAB+16                                               02342000
HEADADDR EQU   CTRLTAB+17                                               02343000
PASSADDR EQU   CTRLTAB+20                                               02344000
ACCTADDR EQU   CTRLTAB+24                                               02345000
RETCODE  EQU   CTRLTAB+32                                               02346000
CHLEVL   EQU   CTRLTAB+36                                               02347000
SRCHIND  EQU   CTRLTAB+37                                               02348000
MSGNMBR  EQU   CTRLTAB+38                                               02349000
TRCHGE   EQU   CTRLTAB+39                                               02350000
NLSTTAB  EQU   0                                                        02351000
PASSWD   EQU   NLSTTAB+9                                                02352000
ACCTNO   EQU   NLSTTAB+18                                               02353000
DLSTTAB  EQU   0                                                        02354000
DPASSWD  EQU   DLSTTAB+9                                                02355000
DACTLEN  EQU   DLSTTAB+17                                               02356000
DACCTNO  EQU   DLSTTAB+18                                               02357000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    02358000
@NM00027 EQU   DLSTTAB+76                                               02359000
@NM00026 EQU   DLSTTAB+68                                               02360000
@NM00025 EQU   DLSTTAB+66                                               02361000
@NM00024 EQU   DLSTTAB+58                                               02362000
@NM00023 EQU   DLSTTAB+1                                                02363000
@NM00022 EQU   DLSTTAB                                                  02364000
@NM00021 EQU   NLSTTAB+58                                               02365000
@NM00020 EQU   NLSTTAB+17                                               02366000
@NM00019 EQU   NLSTTAB+1                                                02367000
@NM00018 EQU   NLSTTAB                                                  02368000
@NM00017 EQU   CTRLTAB+39                                               02369000
@NM00016 EQU   CTRLTAB+39                                               02370000
@NM00015 EQU   CTRLTAB+28                                               02371000
@NM00014 EQU   CTRLTAB+4                                                02372000
@NM00013 EQU   CTRLTAB                                                  02373000
UADSUNAM EQU   DROBD+16                                                 02374000
UADSRSIZ EQU   DROBD+14                                                 02375000
@NM00012 EQU   DROBD+12                                                 02376000
@NM00011 EQU   DROBD+1                                                  02377000
@NM00010 EQU   DNOBD+1                                                  02378000
@NM00009 EQU   DPOBD+1                                                  02379000
UADSPCTR EQU   DPOBD                                                    02380000
@NM00008 EQU   DROB+4                                                   02381000
@NM00007 EQU   DROB                                                     02382000
@NM00006 EQU   DNOB                                                     02383000
@NM00005 EQU   DPOB                                                     02384000
@NM00004 EQU   DHED+40                                                  02385000
UADSDEST EQU   DHED+32                                                  02386000
UADSPERP EQU   DHED+28                                                  02387000
UADSUPTP EQU   DHED+20                                                  02388000
UADSINST EQU   DHED+18                                                  02389000
@NM00003 EQU   UADSATTR                                                 02390000
USATR03  EQU   UADSATTR                                                 02391000
USATR02  EQU   UADSATTR                                                 02392000
USATR01  EQU   UADSATTR                                                 02393000
USATR00  EQU   UADSATTR                                                 02394000
UADSMAXC EQU   UADSMHDR+14                                              02395000
@NM00002 EQU   UADSBN01+1                                               02396000
UADSEXPF EQU   UADSBN01+1                                               02397000
UADSNUSP EQU   UADSBN01+1                                               02398000
@NM00001 EQU   UADSBN01                                                 02399000
UADSUSER EQU   UADSMHDR+4                                               02400000
UADSFSQP EQU   UADSMHDR+2                                               02401000
UADSBLNG EQU   UADSMHDR                                                 02402000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      02403000
@RT00030 EQU   ACLEVL                                                   02404000
@RT00032 EQU   CHALLPW                                                  02405000
@RT00055 EQU   CHGEOK                                                   02406000
@RT00121 EQU   ACMERG2                                                  02407000
@RT00138 EQU   ACMERG2                                                  02408000
@RT00142 EQU   ACMERG1                                                  02409000
@RT00193 EQU   PRTWSR3                                                  02410000
@RT00219 EQU   CHTWSR2                                                  02411000
@RF00219 EQU   PRMERGE                                                  02412000
@RT00235 EQU   PRPRUN3                                                  02413000
@RT00254 EQU   MRGNEXT                                                  02414000
@RT00261 EQU   PRMERG5                                                  02415000
@RT00278 EQU   PRMERG5                                                  02416000
@RT00282 EQU   PRMERG2                                                  02417000
@RT00295 EQU   ACCHGE2                                                  02418000
@RT00323 EQU   ACPRUN3                                                  02419000
@RT00341 EQU   CHKACDF                                                  02420000
@RT00346 EQU   PWPRUNE                                                  02421000
@RF00346 EQU   ACTWSR1                                                  02422000
@RT00352 EQU   CHALLAC                                                  02423000
@RT00366 EQU   ACCHGE1                                                  02424000
@RT00383 EQU   CHGEOK                                                   02425000
@RT00409 EQU   NACNF2                                                   02426000
@RT00411 EQU   ACNEXT                                                   02427000
@RT00430 EQU   FREACDF                                                  02428000
@RF00440 EQU   FREACDF                                                  02429000
@RT00447 EQU   CHTWSR1                                                  02430000
@RT00451 EQU   NACTS                                                    02431000
@RT00457 EQU   ACNEXT2                                                  02432000
@RT00495 EQU   NACNF1                                                   02433000
@RC00507 EQU   ACHNPR1                                                  02434000
@RT00535 EQU   CHTWSR1                                                  02435000
@RF00554 EQU   CHMRG2                                                   02436000
@RF00553 EQU   CHMRG2                                                   02437000
@RT00561 EQU   CHGEOK                                                   02438000
WORKEND  EQU   @EL00001                                                 02439000
@RF00607 EQU   @EL00004                                                 02440000
@PB00004 EQU   @EL00001                                                 02441000
@PB00003 EQU   @PB00004                                                 02442000
@PB00002 EQU   @PB00003                                                 02443000
@ENDDATA EQU   *                                                        02444000
         END   IKJEFA22                                                 02445000
