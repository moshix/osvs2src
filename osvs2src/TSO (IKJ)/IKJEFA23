         TITLE 'I K J E F A 2 3  --  CHANGE PROCEDURE NAME ROUTINE     *00001000
                        '                                               00002000
IKJEFA23 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA23  74.024'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*         CTRLTABP = R1;              /* ADDR OF THE CHANGE        0021 00022000
*                                        CONTROL TABLE               */ 00023000
         LR    CTRLTABP,R1                                         0021 00024000
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REG       */ 00025000
*         HEDBPTR = HEADADDR;         /* ASSIGN PTR TO USER HEADER   */ 00026000
         SLR   HEDBPTR,HEDBPTR                                     0023 00027000
         ICM   HEDBPTR,7,HEADADDR(CTRLTABP)                        0023 00028000
*         SRCHIND = 0;                /* INIT THE SEARCH INDICATOR   */ 00029000
         MVI   SRCHIND(CTRLTABP),X'00'                             0024 00030000
*         CFLAGS = '0000'X;           /* INITIALIZE ALL FLAGS        */ 00031000
         MVC   CFLAGS(2),@CB00179                                  0025 00032000
*         DLPROC = DPROCNM;           /* TRANSFER THE DATALIST     0026 00033000
*                                        PROCNAME TO ITS WORK AREA   */ 00034000
         L     @10,DATALPTR(,CTRLTABP)                             0026 00035000
         MVC   DLPROC(8),DPROCNM(@10)                              0026 00036000
*         NEWUNAM = UNITNAM;          /* PUT UNIT INTO WORK VARIABLE */ 00037000
         MVC   NEWUNAM(8),UNITNAM(@10)                             0027 00038000
*         NEWRSIZ = SIZE;             /* PUT SIZE INTO WORK VARIABLE */ 00039000
         SLR   @07,@07                                             0028 00040000
         ICM   @07,3,SIZE(@10)                                     0028 00041000
         STH   @07,NEWRSIZ                                         0028 00042000
*         /* PROCSIZE MUST NOT BE GREATER THAN THE MAXIMUM REGION    */ 00043000
*         /* SIZE SPECIFIED FOR THIS USER.                           */ 00044000
*         /* FIRST CHECK FOR 'NOLIM' MAXSIZE.                        */ 00045000
*         IF UADSMAXC ^= 0            /* MAXSIZE = 'NOLIM',          */ 00046000
*          & NEWRSIZ > UADSMAXC       /* PROC SIZE GREATER THAN MAXS?*/ 00047000
*           THEN                      /* YES,                        */ 00048000
         SLR   @10,@10                                             0029 00049000
         ICM   @10,3,UADSMAXC(HEDBPTR)                             0029 00050000
         LTR   @10,@10                                             0029 00051000
         BZ    @RF00029                                            0029 00052000
         CLC   NEWRSIZ(2),UADSMAXC(HEDBPTR)                        0029 00053000
         BNH   @RF00029                                            0029 00054000
*             DO;                                                  0030 00055000
*             NEWRSIZ = UADSMAXC;     /* REDUCE IT TO MAXSIZE        */ 00056000
         SLR   @10,@10                                             0031 00057000
         ICM   @10,3,UADSMAXC(HEDBPTR)                             0031 00058000
         STH   @10,NEWRSIZ                                         0031 00059000
*             STGFLG = '1'B;          /* THE USER WILL BE INFORMED OF   00060000
*                                        THIS CONDITION IF PROCESSING   00061000
*                                        IS COMPLETED NORMALLY       */ 00062000
         OI    STGFLG,B'10000000'                                  0032 00063000
*             END;                                                 0033 00064000
*         /* PARTIAL BUILDING OF GETSPACE/FREESPACE PARAMETER LIST.  */ 00065000
*         /* IT WILL BE COMPLETED AT EACH POINT OF CALL.             */ 00066000
*         READBUFF = HEADADDR;        /* PTR TO USERID TREE BUFFER   */ 00067000
@RF00029 SLR   @04,@04                                             0034 00068000
         ICM   @04,7,HEADADDR(CTRLTABP)                            0034 00069000
         ST    @04,READBUFF                                        0034 00070000
*         NUMBLOKS = BLKCNT;          /* NO. OF BLOCKS IN BUFFER     */ 00071000
*                                                                  0035 00072000
         SLR   @04,@04                                             0035 00073000
         IC    @04,BLKCNT(,CTRLTABP)                               0035 00074000
         STH   @04,NUMBLOKS                                        0035 00075000
*         /* SAVE THE ADDR OF THE 1ST PROCNAME OFFSET BLOCK IN THE   */ 00076000
*         /* TOTAL CHAIN. IT WILL BE NEEDED LATER.                   */ 00077000
*         DPOBPTR = HEDBPTR+UADSPWD1; /* REF THE FIRST PASSWORD OBLK */ 00078000
         LR    DPOBPTR,HEDBPTR                                     0036 00079000
         AL    DPOBPTR,UADSPWD1(,HEDBPTR)                          0036 00080000
*         DNOBPTR = HEDBPTR+UADSPSUB; /* REF THE FIRST ACCTNMBR OBLK */ 00081000
         LR    DNOBPTR,HEDBPTR                                     0037 00082000
         AL    DNOBPTR,UADSPSUB(,DPOBPTR)                          0037 00083000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF THE FIRST PROCNAME OBLK */ 00084000
         LR    DROBPTR,HEDBPTR                                     0038 00085000
         AL    DROBPTR,UADSASUB(,DNOBPTR)                          0038 00086000
*         FRSTDROB = DROBPTR;         /* SAVE THIS ADDRESS           */ 00087000
         LR    FRSTDROB,DROBPTR                                    0039 00088000
*         /* GET ALL THREE POINTERS FROM THE CONTROL TABLE.          */ 00089000
*         DPOBPTR = PASSADDR;         /* GET PASSWORD OBLK ADDR      */ 00090000
         L     DPOBPTR,PASSADDR(,CTRLTABP)                         0040 00091000
*         DNOBPTR = ACCTADDR;         /* GET ACCTNMBR OBLK ADDR      */ 00092000
         L     DNOBPTR,ACCTADDR(,CTRLTABP)                         0041 00093000
*         DROBPTR = PROCADDR;         /* GET PROCNAME OBLK ADDR      */ 00094000
         L     DROBPTR,PROCADDR(,CTRLTABP)                         0042 00095000
*SVPTRS:  /* SAVE CURRENT CONTROL BLOCK POINTERS                     */ 00096000
*         OPWSAVE = DPOBPTR;          /* SAVE PTR TO PASSWD OBLK     */ 00097000
SVPTRS   ST    DPOBPTR,OPWSAVE                                     0043 00098000
*         OACSAVE = DNOBPTR;          /* SAVE PTR TO ACTNO OBLK      */ 00099000
         ST    DNOBPTR,OACSAVE                                     0044 00100000
*         OPRSAVE = DROBPTR;          /* SAVE PTR TO PROCNAME OBLK   */ 00101000
         LR    OPRSAVE,DROBPTR                                     0045 00102000
*         /* CHECK WHETHER THE COMMAND SPECIFIES A PROCNAME OR AN    */ 00103000
*         /* '*' IN THE PROCNAME POSITION OF THE NODELIST. THE '*'   */ 00104000
*         /* CASE WILL BE HANDLED BY A SEPARATE SECTION OF CODE.     */ 00105000
*         IF PROCNM(1) = '*'                                       0046 00106000
*           THEN                      /* YES, PROCNAME = '*'         */ 00107000
         L     @08,NODELPTR(,CTRLTABP)                             0046 00108000
         CLI   PROCNM(@08),C'*'                                    0046 00109000
         BE    @RT00046                                            0046 00110000
*             GOTO CHALLPR;           /* GO HANDLE THIS CASE         */ 00111000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REFERENCE THE DATA FIELD    */ 00112000
         L     @02,UADSRDAT(,DROBPTR)                              0048 00113000
         LR    UADSRPTR,HEDBPTR                                    0048 00114000
         ALR   UADSRPTR,@02                                        0048 00115000
*         NDFPTR = UADSRPTR;          /* SAVE THE ABOVE ADDRESS      */ 00116000
         ST    UADSRPTR,NDFPTR                                     0049 00117000
*         RDATSAVE = UADSRDAT;        /* SAVE THE OFFSET             */ 00118000
         ST    @02,RDATSAVE                                        0050 00119000
*         ODFPTR = NDFPTR;            /* SAVE THE ABOVE ADDRESS      */ 00120000
         L     @02,NDFPTR                                          0051 00121000
         LR    ODFPTR,@02                                          0051 00122000
*         /* CHECK WHETHER THE INPUT COMMAND SPECIFIES A DATALIST.   */ 00123000
*         /* THE COMMAND MUST SPECIFY EITHER A DATALIST (NEW PROCNM) */ 00124000
*         /* OR DATA ITEMS (SIZE OR UNIT), OR BOTH.                  */ 00125000
*         IF DLPROC(1) ^= '00'X       /* NEW PROCNAME SPECIFIED?     */ 00126000
*           THEN                      /* YES,                        */ 00127000
         CLI   DLPROC,X'00'                                        0052 00128000
         BNE   @RT00052                                            0052 00129000
*             GOTO NPRLS;             /* GO SEARCH FOR THE NEW PROC-    00130000
*                                        NAME IN THE LOCAL CHAIN     */ 00131000
*         /* CHECK WHETHER THE DATA FIELD IS SHARED (CTR>1). IF IT   */ 00132000
*         /* IS, THEN THE NEW DATA MUST BE COMPARED TO THE EXISTING  */ 00133000
*         /* DATA. IF THEY ARE NOT EQUAL, A NEW DATA FIELD MUST BE   */ 00134000
*         /* CREATED.                                                */ 00135000
*         IF UADSRCTR > 1             /* IS THE DATA FIELD SHARED?   */ 00136000
*           THEN                      /* YES,                        */ 00137000
         CLI   UADSRCTR(UADSRPTR),1                                0054 00138000
         BH    @RT00054                                            0054 00139000
*             GOTO CHKODF;            /* GO COMPARE THE DATA         */ 00140000
*         CALL PRDFCH;                /* GO INSERT NEW DATA ITEMS    */ 00141000
         BAL   @14,PRDFCH                                          0056 00142000
*CHKCSN1: /* IT IS POSSIBLE THAT THIS PROCNAME EXISTS IN ANOTHER     */ 00143000
*         /* CHAIN AND NOW HAS THE SAME DATAFIELD BECAUSE OF THE     */ 00144000
*         /* CHANGES. IF SO, THE NODELIST PROCNAME DATAFIELD WILL    */ 00145000
*         /* BE FREED AND ITS OFFSET BLOCK WILL POINT TO THE COUSIN  */ 00146000
*         /* DATAFIELD. THE COUSIN USE COUNTER WILL BE INCREMENTED   */ 00147000
*         /* BY 1.                                                   */ 00148000
*         DROBPTR = FRSTDROB;         /* REF 1ST PROC OBLK IN THE  0057 00149000
*                                        TOTAL CHAIN                 */ 00150000
CHKCSN1  LR    DROBPTR,FRSTDROB                                    0057 00151000
*         /* IF NO PROCNAME IS BEING CHANGED, THEN THE NODELIST      */ 00152000
*         /* PROCNAME MUST BE MOVED TO THE FIELD THAT WILL BE USED   */ 00153000
*         /* FOR COMPARISON IN THE SEARCH.                           */ 00154000
*         IF DLPROC(1) = '00'X                                     0058 00155000
*           THEN                      /* NO, NO NEW PROCNAME,        */ 00156000
         CLI   DLPROC,X'00'                                        0058 00157000
         BNE   @RF00058                                            0058 00158000
*             DLPROC = PROCNM;        /* TRANSFER NODELIST PROCNAME  */ 00159000
         L     @10,NODELPTR(,CTRLTABP)                             0059 00160000
         MVC   DLPROC(8),PROCNM(@10)                               0059 00161000
*CHKCSN2: /* SEARCH THE TOTAL CHAIN FOR THE NODELIST PROCNAME.       */ 00162000
*         CALL DLPRTS;                /* GO TO SUBRTNE FOR SEARCH    */ 00163000
@RF00058 DS    0H                                                  0060 00164000
CHKCSN2  BAL   @14,DLPRTS                                          0060 00165000
*         /* CHECK THE PTR SET BY THE SUBRTNE. THE NODELIST PROC     */ 00166000
*         /* WILL OF COURSE BE FOUND IN THE CHAIN WHERE THE CHANGES  */ 00167000
*         /* HAVE BEEN MADE. IGNORE THAT OFFSET BLOCK & CONTINUE.    */ 00168000
*         IF NPRSAVE = OPRSAVE        /* PTR = NODELST PROC PTR?     */ 00169000
*           THEN                      /* YES, IGNORE IT,             */ 00170000
         CR    NPRSAVE,OPRSAVE                                     0061 00171000
         BNE   @RF00061                                            0061 00172000
*CHKCSN3:     /* ARE THERE MORE PROCNAMES IN THE TOTAL CHAIN?        */ 00173000
*             IF UADSRNEX = 0                                      0062 00174000
*               THEN                  /* NO,                         */ 00175000
CHKCSN3  SLR   @10,@10                                             0062 00176000
         ICM   @10,7,UADSRNEX(DROBPTR)                             0062 00177000
         LTR   @10,@10                                             0062 00178000
         BZ    @RT00062                                            0062 00179000
*                 GOTO PRNEXT;        /* GO CHECK WHERE PROCESSING 0063 00180000
*                                        IS TO CONTINUE              */ 00181000
*               ELSE                  /* YES,                        */ 00182000
*                 DO;                                              0064 00183000
*                   DROBPTR =         /* REF THE NEXT PROC OBLK      */ 00184000
*                     HEDBPTR+UADSRNEX;                            0065 00185000
         ALR   @10,HEDBPTR                                         0065 00186000
         LR    DROBPTR,@10                                         0065 00187000
*                   GOTO CHKCSN2;     /* CONTINUE THE SEARCH         */ 00188000
         B     CHKCSN2                                             0066 00189000
*                 END;                                             0067 00190000
*         /* IF THE PTR WAS SET TO 0, THEN THE END OF THE TOTAL      */ 00191000
*         /* CHAIN WAS REACHED WITHOUT FINDING THE NODELIST PROCNAME */ 00192000
*         IF NPRSAVE = 0              /* NOT FOUND?                  */ 00193000
*          | ODFPTR = NDFPTR          /* OR POINTING TO SAME DATFLD? */ 00194000
*           THEN                      /* YES, ONE OF THE ABOVE,      */ 00195000
@RF00061 LTR   NPRSAVE,NPRSAVE                                     0068 00196000
         BZ    @RT00068                                            0068 00197000
         L     @10,NDFPTR                                          0068 00198000
         CR    ODFPTR,@10                                          0068 00199000
         BE    @RT00068                                            0068 00200000
*             GOTO PRNEXT;            /* GO CHECK WHERE TO CONTINUE  */ 00201000
*         /* THE PROCNAME WAS FOUND IN A COUSIN CHAIN. COPY ITS      */ 00202000
*         /* DATAFLD INTO THE MODEL DATAFLD AND THEN COMPARE IT TO   */ 00203000
*         /* THE NODELIST PROCNAME DATAFLD.                          */ 00204000
*         DROBDMDL = DROBD;           /* COPY COUSIN DATAFLD         */ 00205000
         MVC   DROBDMDL(24),DROBD(UADSRPTR)                        0070 00206000
*         UADSRPTR = ODFPTR;          /* REF NODELST PROC DATAFLD    */ 00207000
         LR    UADSRPTR,ODFPTR                                     0071 00208000
*         /* ONLY THE SIZE AND UNIT NAME HAVE TO BE COMPARED.        */ 00209000
*         IF UADSRSIZ ^= TEMPRSIZ     /* IS SIZE DIFFERENT?          */ 00210000
*          | UADSUNAM ^= TEMPUNAM     /* OR UNIT NAME DIFFERENT?     */ 00211000
*           THEN                      /* YES, THEREFORE DATAFLDS ARE    00212000
*                                        NOT THE SAME                */ 00213000
         CLC   UADSRSIZ(2,UADSRPTR),TEMPRSIZ                       0072 00214000
         BNE   @RT00072                                            0072 00215000
         CLC   UADSUNAM(8,UADSRPTR),TEMPUNAM                       0072 00216000
         BNE   @RT00072                                            0072 00217000
*             GOTO CHKCSN3;           /* CONTINUE THE PROCESS UNTIL     00218000
*                                        END OF TOT CHAIN IS REACHED */ 00219000
*         /* AN IDENTICAL DATAFLD WAS FOUND. IT WILL BE USED.        */ 00220000
*         UADSRPTR = NDFPTR;          /* REF THE COUSIN DATAFLD      */ 00221000
         LR    UADSRPTR,@10                                        0074 00222000
*         /* GO CHECK THE USE COUNTER AND, IF NOT GREATER THAN 255,  */ 00223000
*         /* INCREMENT IT BY ONE.                                    */ 00224000
*         CALL CTRCHK;                /*                             */ 00225000
         BAL   @14,CTRCHK                                          0075 00226000
*         DROBPTR = OPRSAVE;          /* REF THE NODELST PROC OBLK   */ 00227000
         LR    DROBPTR,OPRSAVE                                     0076 00228000
*         AREAOFST = UADSRDAT;        /* PUT OFFSET TO DATAFLD INTO     00229000
*                                        FREESPACE RTNE PARMLIST     */ 00230000
         L     @10,UADSRDAT(,DROBPTR)                              0077 00231000
         ST    @10,AREAOFST                                        0077 00232000
*         AREALNTH = 24;              /* SAME WITH LNGTH TO BE FREED */ 00233000
         MVC   AREALNTH(2),@CH00062                                0078 00234000
*         CALL IKJFRSP;               /* GO FREE THE DATAFLD         */ 00235000
         BAL   @14,IKJFRSP                                         0079 00236000
*         UADSRDAT = RDATSAVE;        /* TRANSFER OFFSET TO COUSIN 0080 00237000
*                                        DATAFLD INTO NODELST PROC 0080 00238000
*                                        OFFSET BLOCK                */ 00239000
         L     @10,RDATSAVE                                        0080 00240000
         ST    @10,UADSRDAT(,DROBPTR)                              0080 00241000
*         GOTO PRNEXT;                /* GO CHECK WHERE PROCESSING 0081 00242000
*                                        IS TO CONTINUE              */ 00243000
         B     PRNEXT                                              0081 00244000
*CHKODF:  /* THE NLPROC DATA FIELD IS SHARED WITH COUSINS, BUT SINCE */ 00245000
*         /* NO DATALIST WAS ENTERED, THE FIELD CAN BE USED IF THE   */ 00246000
*         /* COMMAND DATA ITEMS ARE NOT DIFFERENT FROM THE EXISTING  */ 00247000
*         /* DATA. IF THEY ARE, THEN A NEW DATA FIELD MUST BE BUILT. */ 00248000
*         CALL CMPRND;                /* GO COMPARE THE NEW DATA     */ 00249000
CHKODF   BAL   @14,CMPRND                                          0082 00250000
*         /* IS THE NEW DATA EQUAL TO THE EXISTING DATA?             */ 00251000
*         IF PRDFLG = '1'B                                         0083 00252000
*           THEN                      /* YES,                        */ 00253000
         TM    PRDFLG,B'00000010'                                  0083 00254000
         BO    @RT00083                                            0083 00255000
*             GOTO PRNEXT;            /* GO CHECK WHERE PROCESSING 0084 00256000
*                                        IS TO CONTINUE              */ 00257000
*NPRDF:   /* GO CREATE A NEW DATA FIELD.                             */ 00258000
*         CALL NEWPRDF;                                            0085 00259000
NPRDF    BAL   @14,NEWPRDF                                         0085 00260000
*         CALL PRDFCH;                /* GO INSERT NEW DATA ITEMS, IF   00261000
*                                        ANY WERE ENTERED            */ 00262000
         BAL   @14,PRDFCH                                          0086 00263000
*         /* DOES THE COMMAND SPECIFY A NEW PROCNAME?                */ 00264000
*         IF DLPROC(1) = '00'X                                     0087 00265000
*           THEN                      /* NO,                         */ 00266000
         CLI   DLPROC,X'00'                                        0087 00267000
         BNE   @RF00087                                            0087 00268000
*             DO;                                                  0088 00269000
*               ODFPTR = UADSRPTR;    /* TRANSFER PTR FOR LATER USE  */ 00270000
         LR    ODFPTR,UADSRPTR                                     0089 00271000
*               GOTO CHKCSN1;         /* GO CHECK FOR COUSIN WITH  0090 00272000
*                                        EQUAL DATA                  */ 00273000
         B     CHKCSN1                                             0090 00274000
*             END;                                                 0091 00275000
*         UADSRNAM = DLPROC;          /* INSERT THE NEW PROCNAME     */ 00276000
@RF00087 MVC   UADSRNAM(8,UADSRPTR),DLPROC                         0092 00277000
*PRNEXT:  /* AT LEAST ONE PROCNAME HAS NOW BEEN PROCESSED AND THIS   */ 00278000
*         /* USERID TREE HAS BEEN CHANGED (THE COPY ONLY). DETERMINE */ 00279000
*         /* WHERE PROCESSING IS TO CONTINUE.                        */ 00280000
*         TRCHGE = '1'B;              /* 1- THIS TREE HAS BEEN CHNGD */ 00281000
PRNEXT   OI    TRCHGE(CTRLTABP),B'10000000'                        0093 00282000
*         /* CHECK WHETHER MORE ACCTNMBRS HAVE TO BE PROCESSED UNDER */ 00283000
*         /* THE CURRENTLY REFERENCED PASSWORD. THIS IS POSSIBLE     */ 00284000
*         /* ONLY IF THE NODELIST ACCTNMBR = '*'.                    */ 00285000
*         DNOBPTR = OACSAVE;          /* REF ORIGINAL ACCTNMBR AGAIN */ 00286000
         L     DNOBPTR,OACSAVE                                     0094 00287000
*         /* NODELIST ACCTNMBR = '*'?                                */ 00288000
*         IF ACCTNO(1:2) = '* '                                    0095 00289000
*           THEN                      /* YES,                        */ 00290000
         L     @10,NODELPTR(,CTRLTABP)                             0095 00291000
         CLC   ACCTNO(2,@10),@CC00205                              0095 00292000
         BNE   @RF00095                                            0095 00293000
*             /* CHECK THE CHAIN FLAG IN THE OFFSET BLOCK            */ 00294000
*             IF AFLG01 = '0'B        /* MORE ACTNMBRS IN LOC CHAIN? */ 00295000
*               THEN                  /* YES,                        */ 00296000
         TM    AFLG01(DNOBPTR),B'10000000'                         0096 00297000
         BNZ   @RF00096                                            0096 00298000
*                 DO;                                              0097 00299000
*                   ACCTADDR =        /* PUT PTR TO NEXT ACCTNMBR..  */ 00300000
*                     HEDBPTR+UADSANEX;/* OBLK INTO CTRLTAB          */ 00301000
         LR    @10,HEDBPTR                                         0098 00302000
         SLR   @04,@04                                             0098 00303000
         ICM   @04,7,UADSANEX(DNOBPTR)                             0098 00304000
         ALR   @10,@04                                             0098 00305000
         ST    @10,ACCTADDR(,CTRLTABP)                             0098 00306000
*                   SRCHIND = 2;      /* SIGNAL IKJEFA20 TO REENTER     00307000
*                                        THE PROCNAME SEARCH LOOP    */ 00308000
         MVI   SRCHIND(CTRLTABP),X'02'                             0099 00309000
*                   RETURN;           /* RETURN TO IKJEFA20          */ 00310000
@EL00001 L     @13,4(,@13)                                         0100 00311000
@EF00001 L     @00,@SIZDATD                                        0100 00312000
         LR    @01,@11                                             0100 00313000
         FREEMAIN R,LV=(0),A=(1)                                        00314000
@ER00001 LM    @14,@12,12(@13)                                     0100 00315000
         BR    @14                                                 0100 00316000
*                 END;                                             0101 00317000
*PRNEXT2: /* CHECK WHETHER MORE PASSWORDS HAVE TO BE PROCESSED FOR   */ 00318000
*         /* THIS USERID. IF YES, THEN SIGNAL IKJEFA20 TO SEARCH FOR */ 00319000
*         /* THE NODELIST PROCNAME AND/OR ACCTNMBR UNDER THE NEXT    */ 00320000
*         /* PASSWORD. IF AN ACCTNMBR WAS SPECIFIED, IT WILL HAVE TO */ 00321000
*         /* BE FOUND FIRST.                                         */ 00322000
*         DPOBPTR = OPWSAVE;          /* REF ORIGINAL PASSWD AGAIN   */ 00323000
@RF00096 DS    0H                                                  0102 00324000
@RF00095 DS    0H                                                  0102 00325000
PRNEXT2  L     DPOBPTR,OPWSAVE                                     0102 00326000
*         /* NODELIST PASSWORD = '*'?                                */ 00327000
*         IF PASSWD(1) = '*'                                       0103 00328000
*           THEN                      /* YES,                        */ 00329000
         L     @10,NODELPTR(,CTRLTABP)                             0103 00330000
         CLI   PASSWD(@10),C'*'                                    0103 00331000
         BNE   @RF00103                                            0103 00332000
*             /* CHECK THE CHAIN FLAG IN THE PASSWORD OFFSET BLOCK.  */ 00333000
*             IF PFLG01 = '0'B        /* MORE PASSWORDS?             */ 00334000
*               THEN                  /* YES,                        */ 00335000
         TM    PFLG01(DPOBPTR),B'10000000'                         0104 00336000
         BNZ   @RF00104                                            0104 00337000
*                 DO;                                              0105 00338000
*                   PASSADDR =        /* PUT PTR TO THE NEXT PASSWD  */ 00339000
*                     HEDBPTR+UADSPNEX;/* OBLK INTO THE CHANGE     0106 00340000
*                                        CONTROL TABLE               */ 00341000
         LR    @10,HEDBPTR                                         0106 00342000
         SLR   @07,@07                                             0106 00343000
         ICM   @07,7,UADSPNEX(DPOBPTR)                             0106 00344000
         ALR   @10,@07                                             0106 00345000
         ST    @10,PASSADDR(,CTRLTABP)                             0106 00346000
*                   SRCHIND = 1;      /* SIGNAL IKJEFA20 TO REENTER     00347000
*                                        THE ACCTNMBR SEARCH LOOP    */ 00348000
         MVI   SRCHIND(CTRLTABP),X'01'                             0107 00349000
*                   RETURN;           /* RETURN TO IKJEFA20          */ 00350000
         B     @EL00001                                            0108 00351000
*                 END;                                             0109 00352000
*         /* NO, THEREFORE NO MORE CHANGES ARE NECESSARY FOR THIS    */ 00353000
*         /* USERID TREE.                                            */ 00354000
*         GOTO CHGEOK;                /* SET INDICATORS & RETURN     */ 00355000
         B     CHGEOK                                              0110 00356000
*NPRLS:   /* GO SEARCH FOR THE NEW PROCNAME IN THIS LOCAL CHAIN.     */ 00357000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF 1ST OBLK IN LOC CHAIN   */ 00358000
NPRLS    LR    DROBPTR,HEDBPTR                                     0111 00359000
         AL    DROBPTR,UADSASUB(,DNOBPTR)                          0111 00360000
*         CALL DLPRLS;                                             0112 00361000
         BAL   @14,DLPRLS                                          0112 00362000
*         /* DOES THE NEW PROCNAME EXIST IN THIS LOCAL CHAIN?        */ 00363000
*         IF NPRSAVE ^= 0                                          0113 00364000
*           THEN                      /* YES,                        */ 00365000
         LTR   NPRSAVE,NPRSAVE                                     0113 00366000
         BNZ   @RT00113                                            0113 00367000
*             GOTO PRCHGE1;           /* GO MAKE REQUIRED CHANGES    */ 00368000
*         /* THIS SECTION OF CODE WILL SEARCH FOR A PROCNAME         */ 00369000
*         /* IN THE TOTAL LATERAL CHAIN (ALL PROCS IN THE TREE).     */ 00370000
*         DROBPTR = FRSTDROB;         /* REF 1ST OBLK IN TOTAL CHAIN */ 00371000
         LR    DROBPTR,FRSTDROB                                    0115 00372000
*         CALL DLPRTS;                /* GO TO THE SEARCH RTNE       */ 00373000
         BAL   @14,DLPRTS                                          0116 00374000
*         /* DOES THE PROCNAME EXIST IN THE TOTAL CHAIN?             */ 00375000
*         IF NPRSAVE = 0                                           0117 00376000
*           THEN                      /* NO,                         */ 00377000
         LTR   NPRSAVE,NPRSAVE                                     0117 00378000
         BZ    @RT00117                                            0117 00379000
*             GOTO PRCHGE6;           /* GO CHECK OLD PROC DATAFLD   */ 00380000
*           ELSE                      /* YES,                        */ 00381000
*             DO;                                                  0119 00382000
*               FLDFLG3 = '1'B;       /* 1- COUSIN EXISTS            */ 00383000
         OI    FLDFLG3,B'00000100'                                 0120 00384000
*               GOTO CHKDLDF;         /* GO CHECK ITS DATA FIELD TO     00385000
*                                        SEE IF IT CAN BE USED       */ 00386000
         B     CHKDLDF                                             0121 00387000
*             END;                                                 0122 00388000
*PRCHGE1: /* THE NEW (DATALIST) PROCNAME EXISTS IN THE LOCAL CHAIN.  */ 00389000
*         /* ITS OFFSET BLOCK AND, IF POSSIBLE, ITS DATA FIELD WILL  */ 00390000
*         /* BE PRUNED FROM THE TREE.                                */ 00391000
*         UADSRPTR = ODFPTR;          /* REF THE OLD PROC DATA FLD  */  00392000
PRCHGE1  LR    UADSRPTR,ODFPTR                                     0123 00393000
*         /* CHECK THE USE CTR OF THE OLD PROCNAME. IF THE FIELD IS  */ 00394000
*         /* SHARED WITH COUSINS, THEN IT CANNOT BE USED.            */ 00395000
*         IF UADSRCTR > 1                                          0124 00396000
*           THEN                      /* YES, IT IS SHARED AND CANNOT   00397000
*                                        BE USED                     */ 00398000
         CLI   UADSRCTR(UADSRPTR),1                                0124 00399000
         BH    @RT00124                                            0124 00400000
*             GOTO PRCHGE2;           /* GO CHECK WHETHER THE NEW DF    00401000
*                                        CAN BE USED                 */ 00402000
*         /* NO, IT IS NOT SHARED AND WILL BE USED                   */ 00403000
*         DROBPTR = NPRSAVE;          /* REF THE NEW PROC DATA FLD   */ 00404000
         LR    DROBPTR,NPRSAVE                                     0126 00405000
*         UADSRPTR = NDFPTR;          /* REF THE DATA FIELD          */ 00406000
         L     UADSRPTR,NDFPTR                                     0127 00407000
*         /* CHECK THE USE COUNTER IN THE NEW DATA FIELD. IF THE     */ 00408000
*         /* FIELD IS BEING SHARED WITH COUSINS, THEN IT CANNOT BE   */ 00409000
*         /* PRUNED FROM THE TREE.                                   */ 00410000
*         IF UADSRCTR > 1             /* IS DATA FIELD BEING SHARED? */ 00411000
*           THEN                      /* YES,                        */ 00412000
         CLI   UADSRCTR(UADSRPTR),1                                0128 00413000
         BNH   @RF00128                                            0128 00414000
*             DO;                                                  0129 00415000
*               UADSRCTR = UADSRCTR-1;/* DECREMENT THE USE COUNTER   */ 00416000
         SLR   @15,@15                                             0130 00417000
         IC    @15,UADSRCTR(,UADSRPTR)                             0130 00418000
         BCTR  @15,0                                               0130 00419000
         STC   @15,UADSRCTR(,UADSRPTR)                             0130 00420000
*               GOTO FREEOB;          /* GO FREE THE OFFSET BLOCK    */ 00421000
         B     FREEOB                                              0131 00422000
*             END;                                                 0132 00423000
*         AREAOFST = UADSRDAT;        /* OFFSET TO AREA TO BE FREED  */ 00424000
@RF00128 L     @15,UADSRDAT(,DROBPTR)                              0133 00425000
         ST    @15,AREAOFST                                        0133 00426000
*         AREALNTH = 24;              /* NUMBER OF BYTES TO BE FREED */ 00427000
         MVC   AREALNTH(2),@CH00062                                0134 00428000
*         CALL IKJFRSP;               /* GO FREE THE DATA FIELD      */ 00429000
         BAL   @14,IKJFRSP                                         0135 00430000
*FREEOB:  /* PRUNE THE OFFSET BLOCK AND CHANGE THE AFFECTED          */ 00431000
*         /* OFFSETS AND CHAIN FLAGS.                                */ 00432000
*         CSNSAVE = UADSRNEX;         /* SAVE OFFSET TO NEXT OFFSET     00433000
*                                        BLOCK, WHICH CAN BE A BROTHER  00434000
*                                        OR COUSIN                   */ 00435000
FREEOB   SLR   @15,@15                                             0136 00436000
         ICM   @15,7,UADSRNEX(DROBPTR)                             0136 00437000
         ST    @15,CSNSAVE                                         0136 00438000
*         /* SAVE THE CHAIN FLAG                                     */ 00439000
*         IF FLGR01 = '1'B            /* CHAIN FLAG = 1?             */ 00440000
*           THEN                      /* YES,                        */ 00441000
         TM    FLGR01(DROBPTR),B'10000000'                         0137 00442000
         BNO   @RF00137                                            0137 00443000
*             FLGSAVE = '1'B;         /* SAVE FLAG = 1               */ 00444000
         OI    FLGSAVE,B'00100000'                                 0138 00445000
*           ELSE                      /* NO,                         */ 00446000
*             FLGSAVE = '0'B;         /* SAVE FLAG = 0               */ 00447000
         B     @RC00137                                            0139 00448000
@RF00137 NI    FLGSAVE,B'11011111'                                 0139 00449000
*         PRUNOFS = NPRSAVE-HEDBPTR;  /* RECALCULATE THE OFFSET TO 0140 00450000
*                                        THE OBLK TO BE PRUNED       */ 00451000
@RC00137 LR    @03,NPRSAVE                                         0140 00452000
         SLR   @03,HEDBPTR                                         0140 00453000
         ST    @03,PRUNOFS                                         0140 00454000
*         AREAOFST = PRUNOFS;         /* OFFSET TO OBLK TO BE FREED  */ 00455000
         ST    @03,AREAOFST                                        0141 00456000
*         AREALNTH = 12;              /* NUMBER OF BYTES TO BE FREED */ 00457000
         MVC   AREALNTH(2),@CH00055                                0142 00458000
*         CALL IKJFRSP;               /* GO FREE THE OFFSET BLOCK    */ 00459000
         BAL   @14,IKJFRSP                                         0143 00460000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF THE FIRST PROC OFFSET 0144 00461000
*                                        BLOCK IN THIS LOCAL CHAIN   */ 00462000
         LR    DROBPTR,HEDBPTR                                     0144 00463000
         AL    DROBPTR,UADSASUB(,DNOBPTR)                          0144 00464000
*         /* IF THE PRUNED OFFSET BLOCK WAS THE FIRST ONE IN THE     */ 00465000
*         /* LOCAL CHAIN, THEN THE OFFSET TO THE PROC OFFSET BLOCK   */ 00466000
*         /* IN THE ACCTNMBR OFFSET BLOCK MUST BE CHANGED. ALSO, IF  */ 00467000
*         /* THIS WAS NOT THE FIRST PROCNAME IN THE TOTAL CHAIN, THE */ 00468000
*         /* COUSIN OFFSET BLOCK MUST BE FOUND AND CHANGED.          */ 00469000
*         IF DROBPTR = NPRSAVE        /* WAS THE PRUNED OB THE FIRST    00470000
*                                        ONE IN THE LOCAL CHAIN?     */ 00471000
*           THEN                      /* YES,                        */ 00472000
         CR    DROBPTR,NPRSAVE                                     0145 00473000
         BNE   @RF00145                                            0145 00474000
*             DO;                                                  0146 00475000
*               UADSASUB = CSNSAVE;   /* PUT THE OFFSET TO THE NEXT     00476000
*                                        OB INTO THE ACCTNMBR OB     */ 00477000
         L     @04,CSNSAVE                                         0147 00478000
         ST    @04,UADSASUB(,DNOBPTR)                              0147 00479000
*               GO TO FNDCSN;         /* GO SEARCH FOR THE COUSIN IN    00480000
*                                        THE PREVIOUS CHAIN          */ 00481000
         B     FNDCSN                                              0148 00482000
*             END;                                                 0149 00483000
*         /* NO, FIND THE BROTHER WHICH POINTS TO THE PRUNED OB      */ 00484000
*FNDPRBR: /* SEARCH FOR THE BROTHER OFFSET BLOCK THAT POINTS TO THE  */ 00485000
*         /* PRUNED OFFSET BLOCK. TO DO THIS, FIND THE BLOCK THAT    */ 00486000
*         /* CONTAINS THE KNOWN OFFSET TO THE PRUNED BLOCK.          */ 00487000
*         IF PRUNOFS ^= UADSRNEX      /* DOES THIS OB CONTAIN THE  0150 00488000
*                                        OFFSET TO THE PRUNED OB?    */ 00489000
*           THEN                      /* NO,                         */ 00490000
@RF00145 DS    0H                                                  0150 00491000
FNDPRBR  SLR   @07,@07                                             0150 00492000
         ICM   @07,7,UADSRNEX(DROBPTR)                             0150 00493000
         C     @07,PRUNOFS                                         0150 00494000
         BE    @RF00150                                            0150 00495000
*             DO;                                                  0151 00496000
*               DROBPTR = HEDBPTR     /* REF THE NEXT OB             */ 00497000
*                 +UADSRNEX;                                       0152 00498000
         ALR   @07,HEDBPTR                                         0152 00499000
         LR    DROBPTR,@07                                         0152 00500000
*               GOTO FNDPRBR;         /* CONTINUE THE SEARCH         */ 00501000
         B     FNDPRBR                                             0153 00502000
*             END;                                                 0154 00503000
*         UADSRNEX = CSNSAVE;         /* PUT THE OFFSET TO THE NEXT     00504000
*                                        OB INTO THIS OB             */ 00505000
@RF00150 MVC   UADSRNEX(3,DROBPTR),CSNSAVE+1                       0155 00506000
*         /* PUT THE CHAIN FLAG FROM THE PRUNED OBLK INTO THIS OBLK  */ 00507000
*         IF FLGSAVE = '1'B           /* WAS FLAG = 1?               */ 00508000
*           THEN                      /* YES,                        */ 00509000
         TM    FLGSAVE,B'00100000'                                 0156 00510000
         BNO   @RF00156                                            0156 00511000
*             FLGR01 = '1'B;          /* SET CHAIN FLAG TO 1         */ 00512000
         OI    FLGR01(DROBPTR),B'10000000'                         0157 00513000
*           ELSE                      /* NO,                         */ 00514000
*             FLGR01 = '0'B;          /* SET CHAIN FLAG TO 0         */ 00515000
         B     @RC00156                                            0158 00516000
@RF00156 NI    FLGR01(DROBPTR),B'01111111'                         0158 00517000
*         /* CHECK THIS CONTROL FLAG. IF IT IS ON, THEN A NEW DATA   */ 00518000
*         /* FIELD MUST BE CREATED.                                  */ 00519000
*         IF FLDFLG2 = '1'B                                        0159 00520000
*           THEN                      /* YES,                        */ 00521000
@RC00156 TM    FLDFLG2,B'00001000'                                 0159 00522000
         BO    @RT00159                                            0159 00523000
*             GOTO NPRDF;             /* GO CREATE A NEW DATA FIELD  */ 00524000
*PRDFCH2: /* DETERMINE WHICH DATA FIELD IS BEING USED AND THEN SET   */ 00525000
*         /* APPROPRIATE POINTERS.                                   */ 00526000
*         IF FLDFLG = '1'B                                         0161 00527000
*           THEN                      /* DLPROC DATA FIELD IS USED   */ 00528000
PRDFCH2  TM    FLDFLG,B'00010000'                                  0161 00529000
         BNO   @RF00161                                            0161 00530000
*             DO;                                                  0162 00531000
*               UADSRPTR = NDFPTR;    /* ADDR OF DLPROC DATA FIELD   */ 00532000
         L     @07,NDFPTR                                          0163 00533000
         LR    UADSRPTR,@07                                        0163 00534000
*               ODFPTR = NDFPTR;      /* SWITCH PTRS FOR LATER USE   */ 00535000
         LR    ODFPTR,@07                                          0164 00536000
*             END;                                                 0165 00537000
*           ELSE                      /* NLPROC DATA FIELD IS USED   */ 00538000
*             DO;                                                  0166 00539000
         B     @RC00161                                            0166 00540000
@RF00161 DS    0H                                                  0167 00541000
*               UADSRPTR = ODFPTR;    /* REF NLPROC DATA FIELD       */ 00542000
         LR    UADSRPTR,ODFPTR                                     0167 00543000
*               UADSRNAM = DLPROC;    /* INSERT THE NEW PROCNAME     */ 00544000
         MVC   UADSRNAM(8,UADSRPTR),DLPROC                         0168 00545000
*             END;                                                 0169 00546000
*         CALL PRDFCH;                /* GO INSERT NEW DATA ITEMS, 0170 00547000
*                                        IF ANY WERE ENTERED         */ 00548000
@RC00161 BAL   @14,PRDFCH                                          0170 00549000
*         /* GO CHECK WHETHER AN IDENTICAL COUSIN DATA FIELD EXISTS  */ 00550000
*         /* IN ANOTHER PART OF THE TOTAL CHAIN. IF SO, THEN THE     */ 00551000
*         /* COUSIN DATA FIELD MUST BE USED.                         */ 00552000
*         GOTO CHKCSN1;                                            0171 00553000
         B     CHKCSN1                                             0171 00554000
*FNDCSN:  /* THIS SECTION OF CODE WILL SEARCH FOR THE PROCNAME OFF-  */ 00555000
*         /* SET BLOCK WHICH CONTAINS THE OFFSET TO THE PRUNED OFF-  */ 00556000
*         /* SET BLOCK. THE SEARCH IS MADE IN THE TOTAL CHAIN SINCE  */ 00557000
*         /* THE PRUNED BLOCK WAS THE FIRST IN ITS LOCAL CHAIN.      */ 00558000
*         /* IF THE PRUNED OFFSET BLOCK WAS THE 1ST IN THE TOTAL     */ 00559000
*         /* CHAIN, THEN NO SEARCH IS NECESSARY.                     */ 00560000
*         IF NPRSAVE = FRSTDROB       /*                             */ 00561000
*           THEN                      /* YES, 1ST IN TOTAL CHAIN,    */ 00562000
FNDCSN   CR    NPRSAVE,FRSTDROB                                    0172 00563000
         BNE   @RF00172                                            0172 00564000
*             DO;                                                  0173 00565000
*               /* RESET ADDR OF 1ST OFFSET BLOCK IN THE TOTAL CHAIN */ 00566000
*               FRSTDROB = HEDBPTR+UADSASUB;                       0174 00567000
         LR    FRSTDROB,HEDBPTR                                    0174 00568000
         AL    FRSTDROB,UADSASUB(,DNOBPTR)                         0174 00569000
*               GOTO PRDFCH2;         /* GO CHANGE DATFLD            */ 00570000
         B     PRDFCH2                                             0175 00571000
*             END;                                                 0176 00572000
*         DROBPTR = FRSTDROB;         /* REF 1ST OBLK IN TOTAL CHAIN */ 00573000
@RF00172 LR    DROBPTR,FRSTDROB                                    0177 00574000
*FNDCSN2: /* CHECK WHETHER THIS OFFSET BLOCK POINTS TO THE PRUNED OB */ 00575000
*         DO WHILE PRUNOFS ^= UADSRNEX;                            0178 00576000
FNDCSN2  B     @DE00178                                            0178 00577000
@DL00178 DS    0H                                                  0179 00578000
*           DROBPTR = HEDBPTR+UADSRNEX;/* REF THE NEXT OB            */ 00579000
         LR    @07,HEDBPTR                                         0179 00580000
         SLR   @04,@04                                             0179 00581000
         ICM   @04,7,UADSRNEX(DROBPTR)                             0179 00582000
         ALR   @07,@04                                             0179 00583000
         LR    DROBPTR,@07                                         0179 00584000
*             END;                                                 0180 00585000
@DE00178 L     @07,PRUNOFS                                         0180 00586000
         SLR   @04,@04                                             0180 00587000
         ICM   @04,7,UADSRNEX(DROBPTR)                             0180 00588000
         CR    @07,@04                                             0180 00589000
         BNE   @DL00178                                            0180 00590000
*         UADSRNEX = CSNSAVE;         /* PUT THE OFFSET TO THE NEXT     00591000
*                                        OB INTO THIS OB             */ 00592000
         MVC   UADSRNEX(3,DROBPTR),CSNSAVE+1                       0181 00593000
*         GOTO PRDFCH2;                                            0182 00594000
         B     PRDFCH2                                             0182 00595000
*PRCHGE2: /* THE DATA FIELD OF THE NODELIST (OLD) PROCNAME CANNOT    */ 00596000
*         /* BE USED. IF THE USE CTR OF THE DATALIST (NEW) PROCNAME  */ 00597000
*         /* DATA FIELD IS 1, THEN THIS FIELD WILL BE USED. IF NOT,  */ 00598000
*         /* THEN A COMPARISON OF DATA IS NECESSARY.                 */ 00599000
*         UADSRPTR = NDFPTR;          /* REF THE DLPROC DATA FIELD   */ 00600000
PRCHGE2  L     @03,NDFPTR                                          0183 00601000
         LR    UADSRPTR,@03                                        0183 00602000
*         /* IS THIS DATA FIELD SHARED WITH COUSINS?                 */ 00603000
*         IF UADSRCTR > 1                                          0184 00604000
*           THEN                      /* YES,                        */ 00605000
         CLI   UADSRCTR(UADSRPTR),1                                0184 00606000
         BH    @RT00184                                            0184 00607000
*             GOTO CHKDLDF;           /* GO COMPARE THE DATA         */ 00608000
*         /* THIS FIELD IS NOT SHARED AND CAN THEREFORE BE USED.     */ 00609000
*         UADSRPTR = ODFPTR;          /* REF THE NLPROC DATA FIELD   */ 00610000
         LR    UADSRPTR,ODFPTR                                     0186 00611000
*         NDFPTR -> DROBD = DROBD;    /* COPY THE NLPROC DF INTO THE    00612000
*                                        DLPROC DATA FLD             */ 00613000
         L     @15,NDFPTR                                          0187 00614000
         MVC   DROBD(24,@15),DROBD(UADSRPTR)                       0187 00615000
*         UADSRCTR = UADSRCTR-1;      /* DECREMENT THE NLPROC USECTR */ 00616000
         SLR   @14,@14                                             0188 00617000
         IC    @14,UADSRCTR(,UADSRPTR)                             0188 00618000
         BCTR  @14,0                                               0188 00619000
         STC   @14,UADSRCTR(,UADSRPTR)                             0188 00620000
*         UADSRPTR = NDFPTR;          /* REF THE NEW DATA FIELD      */ 00621000
         LR    UADSRPTR,@15                                        0189 00622000
*         UADSRCTR = 1;                                            0190 00623000
         MVI   UADSRCTR(UADSRPTR),X'01'                            0190 00624000
*         UADSRNAM = DLPROC;          /* INSERT NEW PROCNAME         */ 00625000
         MVC   UADSRNAM(8,UADSRPTR),DLPROC                         0191 00626000
*         DROBPTR = NPRSAVE;          /* REF THE DLPROC OBLK         */ 00627000
         LR    DROBPTR,NPRSAVE                                     0192 00628000
*PRCHGE3: RDATSAVE = UADSRDAT;        /* SAVE OFFSET TO DATA FIELD   */ 00629000
PRCHGE3  L     @15,UADSRDAT(,DROBPTR)                              0193 00630000
         ST    @15,RDATSAVE                                        0193 00631000
*         DROBPTR = OPRSAVE;          /* REF OLD OFFSET BLOCK        */ 00632000
         LR    DROBPTR,OPRSAVE                                     0194 00633000
*         UADSRDAT = RDATSAVE;        /* PUT THE OFFSET TO THE DLPROC   00634000
*                                        DATA FIELD INTO THIS OBLK   */ 00635000
         ST    @15,UADSRDAT(,DROBPTR)                              0195 00636000
*         DROBPTR = NPRSAVE;          /* THE DLPROC OBLK WILL BE   0196 00637000
*                                        PRUNED FROM THE TREE        */ 00638000
         LR    DROBPTR,NPRSAVE                                     0196 00639000
*         FLDFLG = '1'B;              /* 1- INDICATES THAT THE DLPROC   00640000
*                                        DATA FIELD IS BEING USED    */ 00641000
         OI    FLDFLG,B'00010000'                                  0197 00642000
*         GOTO FREEOB;                /* GO PRUNE THE OBLK           */ 00643000
         B     FREEOB                                              0198 00644000
*CHKDLDF: /* BUILD A WORKING MODEL OF THE NODELIST PROC DATA FIELD.  */ 00645000
*         /* CHANGE DATA ITEMS THAT WERE SPECIFIED IN THE COMMAND    */ 00646000
*         /* AND THEN COMPARE THIS MODEL TO THE DATALIST PROC DATA   */ 00647000
*         /* FIELD, EXCLUDING THE USE COUNTER.                       */ 00648000
*         UADSRPTR = ODFPTR;          /* REF THE NLPROC DATA FLD     */ 00649000
CHKDLDF  LR    UADSRPTR,ODFPTR                                     0199 00650000
*         DROBDMDL = DROBD;           /* COPY IT INTO MODEL DATA FLD */ 00651000
         MVC   DROBDMDL(24),DROBD(UADSRPTR)                        0200 00652000
*         TEMPRSIZ = NEWRSIZ;         /* INSERT THE NEW PROCSIZE     */ 00653000
         SLR   @03,@03                                             0201 00654000
         ICM   @03,3,NEWRSIZ                                       0201 00655000
         STH   @03,TEMPRSIZ                                        0201 00656000
*         TEMPUNAM = NEWUNAM;         /* INSERT THE NEW UNIT NAME    */ 00657000
         MVC   TEMPUNAM(8),NEWUNAM                                 0202 00658000
*         UADSRPTR = NDFPTR;          /* REF THE DLPROC DATA FLD     */ 00659000
         L     UADSRPTR,NDFPTR                                     0203 00660000
*         /* CHECK THE LOOP CONTROL FLAG. '1' INDICATES THAT THE     */ 00661000
*         /* DATALIST PROCNAME EXISTS IN A COUSIN CHAIN, BUT NOT     */ 00662000
*         /* IN THE SAME LOCAL CHAIN.                                */ 00663000
*         IF FLDFLG3 = '1'B                                        0204 00664000
*           THEN                      /* DLPROC EXISTS IN COUSIN..   */ 00665000
         TM    FLDFLG3,B'00000100'                                 0204 00666000
         BO    @RT00204                                            0204 00667000
*             GOTO PRCHGE4;           /* CHAIN, GO COMPARE DATAFLDS  */ 00668000
*         /* COMPARE THE MODEL TO THE DATALIST PROCNAME DATAFLD.     */ 00669000
*         /* ONLY THE SIZE AND UNIT NAME HAVE TO BE COMPARED.        */ 00670000
*         IF UADSRSIZ = TEMPRSIZ      /* IS SIZE THE SAME?           */ 00671000
*          & UADSUNAM = TEMPUNAM      /* AND UNIT NAME EQUAL?        */ 00672000
*           THEN                      /* THEY ARE EQUAL              */ 00673000
         CLC   UADSRSIZ(2,UADSRPTR),TEMPRSIZ                       0206 00674000
         BNE   @RF00206                                            0206 00675000
         CLC   UADSUNAM(8,UADSRPTR),TEMPUNAM                       0206 00676000
         BNE   @RF00206                                            0206 00677000
*             DO;                                                  0207 00678000
*               UADSRPTR = ODFPTR;    /* REF THE NLPROC DATA FIELD   */ 00679000
         LR    UADSRPTR,ODFPTR                                     0208 00680000
*               UADSRCTR = UADSRCTR-1;/* DECREMENT THE USE CTR       */ 00681000
         SLR   @15,@15                                             0209 00682000
         IC    @15,UADSRCTR(,UADSRPTR)                             0209 00683000
         BCTR  @15,0                                               0209 00684000
         STC   @15,UADSRCTR(,UADSRPTR)                             0209 00685000
*               DROBPTR = NPRSAVE;    /* REF THE DLPROC OBLK         */ 00686000
         LR    DROBPTR,NPRSAVE                                     0210 00687000
*               GOTO PRCHGE3;         /* GO MAKE NECESSARY CHANGES   */ 00688000
         B     PRCHGE3                                             0211 00689000
*             END;                                                 0212 00690000
*         /* THE DATALIST PROCNAME DATA FIELD CANNOT BE USED. A NEW  */ 00691000
*         /* DATA FIELD MUST BE CREATED.                             */ 00692000
*         DROBPTR = OPRSAVE;          /* REF THE NLPROC OBLK         */ 00693000
@RF00206 LR    DROBPTR,OPRSAVE                                     0213 00694000
*         UADSRPTR = ODFPTR;          /* REF THE NLPROC DATA FIELD   */ 00695000
         LR    UADSRPTR,ODFPTR                                     0214 00696000
*         FLDFLG2 = '1'B;             /* 1 - CREATE NEW DATA FIELD   */ 00697000
         OI    FLDFLG2,B'00001000'                                 0215 00698000
*         GOTO FREEOB;                /* GO PRUNE THE DLPROC OBLK    */ 00699000
         B     FREEOB                                              0216 00700000
*PRCHGE4: /* COMPARE THE MODEL TO THE DATALIST PROCNAME DATA FIELD.  */ 00701000
*         /* ONLY THE SIZE AND UNIT NAME HAVE TO BE COMPARED.        */ 00702000
*         FLDFLG3 = '0'B;             /* FIRST RESET CONTROL FLAG    */ 00703000
PRCHGE4  NI    FLDFLG3,B'11111011'                                 0217 00704000
*         IF UADSRSIZ ^= TEMPRSIZ     /* IS SIZE DIFFERENT?          */ 00705000
*          | UADSUNAM ^= TEMPUNAM     /* OR UNIT NAME DIFFERENT?     */ 00706000
*           THEN                      /* YES, THEREFORE DATAFLDS ARE    00707000
*                                        NOT THE SAME                */ 00708000
         CLC   UADSRSIZ(2,UADSRPTR),TEMPRSIZ                       0218 00709000
         BNE   @RT00218                                            0218 00710000
         CLC   UADSUNAM(8,UADSRPTR),TEMPUNAM                       0218 00711000
         BNE   @RT00218                                            0218 00712000
*             GOTO PRCHGE6;           /* CHECK WHETHER THE NLPROC DATA  00713000
*                                        FIELD CAN BE USED           */ 00714000
*         /* THE DATALIST PROCNAME DATA FIELD, EXISTING IN A COUSIN  */ 00715000
*         /* CHAIN, WILL BE USED.                                    */ 00716000
*         DROBPTR = OPRSAVE;          /* REF THE NLPROC OBLK         */ 00717000
         LR    DROBPTR,OPRSAVE                                     0220 00718000
*         UADSRDAT = RDATSAVE;        /* INSERT OFFSET TO COUSIN DF  */ 00719000
         L     @10,RDATSAVE                                        0221 00720000
         ST    @10,UADSRDAT(,DROBPTR)                              0221 00721000
*         UADSRPTR = NDFPTR;          /* REF THE DLPROC DATA FIELD   */ 00722000
         L     UADSRPTR,NDFPTR                                     0222 00723000
*         /* GO CHECK THE USE COUNTER AND, IF NOT GREATER THAN 255,  */ 00724000
*         /* INCREMENT IT BY ONE.                                    */ 00725000
*         CALL CTRCHK;                /*                             */ 00726000
         BAL   @14,CTRCHK                                          0223 00727000
*         UADSRPTR = ODFPTR;          /* REF THE NLPROC DATA FIELD   */ 00728000
         LR    UADSRPTR,ODFPTR                                     0224 00729000
*         /* IF THE USE COUNTER IN THE NODELIST PROC DATA FIELD IS   */ 00730000
*         /* 1 (NOT SHARED), THEN THIS FIELD WILL BE PRUNED.         */ 00731000
*         IF UADSRCTR = 1                                          0225 00732000
*           THEN                      /* FIELD IS NOT SHARED,        */ 00733000
         CLI   UADSRCTR(UADSRPTR),1                                0225 00734000
         BE    @RT00225                                            0225 00735000
*             GO TO PRCHGE5;          /* GO PRUNE IT FROM THE TREE   */ 00736000
*         UADSRCTR = UADSRCTR-1;      /* DECREMENT THE USE CTR       */ 00737000
         SLR   @10,@10                                             0227 00738000
         IC    @10,UADSRCTR(,UADSRPTR)                             0227 00739000
         BCTR  @10,0                                               0227 00740000
         STC   @10,UADSRCTR(,UADSRPTR)                             0227 00741000
*         GOTO PRNEXT;                /* GO CHECK WHERE PROCESSING 0228 00742000
*                                        IS TO CONTINUE              */ 00743000
         B     PRNEXT                                              0228 00744000
*PRCHGE5: /* PRUNE THE NODELIST PROCNAME DATA FIELD FROM THE TREE.   */ 00745000
*         AREAOFST = ODFPTR-HEDBPTR;  /* CALCULATE OFFSET TO THE   0229 00746000
*                                        NLPROC DATA FIELD           */ 00747000
PRCHGE5  LR    @10,ODFPTR                                          0229 00748000
         SLR   @10,HEDBPTR                                         0229 00749000
         ST    @10,AREAOFST                                        0229 00750000
*         AREALNTH = 24;              /* NUMBER OF BYTES TO BE FREED */ 00751000
         MVC   AREALNTH(2),@CH00062                                0230 00752000
*         CALL IKJFRSP;               /* FREE THIS DATA FIELD        */ 00753000
         BAL   @14,IKJFRSP                                         0231 00754000
*         GOTO PRNEXT;                /* GO CHECK WHERE PROCESSING 0232 00755000
*                                        IS TO CONTINUE              */ 00756000
         B     PRNEXT                                              0232 00757000
*PRCHGE6: /* THE DATALIST PROCNAME DOES NOT EXIST IN THIS TREE, OR   */ 00758000
*         /* ITS DATA FIELD CANNOT BE USED.                          */ 00759000
*         UADSRPTR = ODFPTR;          /* REF THE NLPROC DATA FIELD   */ 00760000
PRCHGE6  LR    UADSRPTR,ODFPTR                                     0233 00761000
*         /* CHECK THE USE COUNTER. IF IT IS 1, THEN THIS FIELD WILL */ 00762000
*         /* BE USED. IF THE FIELD IS SHARED, THEN IT CANNOT BE      */ 00763000
*         /* USED AND A NEW DATA FIELD MUST BE CREATED.              */ 00764000
*         IF UADSRCTR > 1                                          0234 00765000
*           THEN                      /* THIS DATA FLD IS SHARED     */ 00766000
         CLI   UADSRCTR(UADSRPTR),1                                0234 00767000
         BNH   @RF00234                                            0234 00768000
*             DO;                                                  0235 00769000
*               DROBPTR = OPRSAVE;    /* REF THE NLPROC OBLK         */ 00770000
         LR    DROBPTR,OPRSAVE                                     0236 00771000
*               CALL NEWPRDF;         /* GO CREATE A NEW DATA FLD    */ 00772000
         BAL   @14,NEWPRDF                                         0237 00773000
*             END;                                                 0238 00774000
*         /* IT IS NOT SHARED AND WILL BE USED                       */ 00775000
*         UADSRNAM = DLPROC;          /* INSERT THE NEW PROCNAME     */ 00776000
@RF00234 MVC   UADSRNAM(8,UADSRPTR),DLPROC                         0239 00777000
*         CALL PRDFCH;                /* GO INSERT NEW DATA ITEMS, IF   00778000
*                                        SPECIFIED IN THE COMMAND    */ 00779000
         BAL   @14,PRDFCH                                          0240 00780000
*         GOTO PRNEXT;                /* GO CHECK WHERE PROCESSING 0241 00781000
*                                        IS TO CONTINUE              */ 00782000
         B     PRNEXT                                              0241 00783000
*CHALLPR: /* AN '*' WAS ENTERED IN THE PROCNAME POSITION OF THE      */ 00784000
*         /* NODELIST. IF THE PASSWORD AND ACCTNMBR ARE ALSO '*',    */ 00785000
*         /* THEN THE REQUESTED CHANGE APPLIES TO ALL PROCNAMES IN   */ 00786000
*         /* THE USERID TREE. IF EITHER A PASSWORD OR AN ACCTNMBR    */ 00787000
*         /* WAS SPECIFIED, THEN THE CHANGE APPLIES ONLY TO SPECIFIC */ 00788000
*         /* LOCAL CHAINS.                                           */ 00789000
*         DROBPTR = HEDBPTR+UADSASUB; /* REF THE 1ST PROC OBLK UNDER    00790000
*                                        THE CURRENTLY REFERENCED  0242 00791000
*                                        ACCTNMBR                    */ 00792000
CHALLPR  LR    DROBPTR,HEDBPTR                                     0242 00793000
         AL    DROBPTR,UADSASUB(,DNOBPTR)                          0242 00794000
*         /* IF NO NEW PROCNAME IS SPECIFIED, THEN ONLY DATA FIELDS  */ 00795000
*         /* HAVE TO BE CHANGED.                                     */ 00796000
*         IF DPROCNM(1) = '00'X                                    0243 00797000
*           THEN                      /* NO NEW PROCNAME SPECIFIED   */ 00798000
         L     @07,DATALPTR(,CTRLTABP)                             0243 00799000
         CLI   DPROCNM(@07),X'00'                                  0243 00800000
         BE    @RT00243                                            0243 00801000
*             GOTO ALLPRDF;           /* GO CHANGE DATA FIELDS       */ 00802000
*                                                                  0244 00803000
*         LASTOB = DROBPTR;           /* SAVE ADDR FOR LATER USE     */ 00804000
         LR    LASTOB,DROBPTR                                      0245 00805000
*         CALL DLPRLS;                /* SEARCH THIS LOCAL CHAIN FOR    00806000
*                                        THE NEW PROCNAME            */ 00807000
         BAL   @14,DLPRLS                                          0246 00808000
*         /* DOES THE NEW PROCNAME ALREADY EXIST IN THIS CHAIN?      */ 00809000
*         IF NPRSAVE ^= 0                                          0247 00810000
*           THEN                      /* YES,                        */ 00811000
         SLR   @04,@04                                             0247 00812000
         CR    NPRSAVE,@04                                         0247 00813000
         BNE   @RT00247                                            0247 00814000
*             GOTO NPRFND;            /* GO CHECK THE DATA           */ 00815000
*         OPRSAVE = 0;                /* FOR LATER USE: NEW PROC NOT    00816000
*                                        FOUND IN THIS CHAIN         */ 00817000
         LR    OPRSAVE,@04                                         0249 00818000
*TSPREP:  /* PREPARE TO SEARCH THE TOTAL CHAIN FOR THE NEW PROC.     */ 00819000
*         DROBPTR = FRSTDROB;         /* REF 1ST OBLK IN TOTAL CHAIN */ 00820000
TSPREP   LR    DROBPTR,FRSTDROB                                    0250 00821000
*PROCTS:  /* SEARCH THE TOTAL CHAIN FOR THE NEW PROCNAME             */ 00822000
*         CALL DLPRTS;                /* GO TO SEARCH SUBRTNE        */ 00823000
PROCTS   BAL   @14,DLPRTS                                          0251 00824000
*         /* DOES THE NEW PROCNAME EXIST IN THIS TREE?               */ 00825000
*         IF NPRSAVE = 0                                           0252 00826000
*           THEN                      /* NO,                         */ 00827000
         LTR   NPRSAVE,NPRSAVE                                     0252 00828000
         BZ    @RT00252                                            0252 00829000
*             GOTO PRNFND;            /* GO MAKE APPROPRIATE CHANGES */ 00830000
*         /* THE NEW PROCNAME WAS FOUND. CHECK WHETHER IT IS THE     */ 00831000
*         /* SAME ONE ALREADY FOUND IN THE LOCAL CHAIN. IF SO,       */ 00832000
*         /* IGNORE IT AND CONTINUE THE SEARCH.                      */ 00833000
*         IF NPRSAVE = OPRSAVE                                     0254 00834000
*           THEN                      /* IT IS THE SAME,             */ 00835000
         CR    NPRSAVE,OPRSAVE                                     0254 00836000
         BE    @RT00254                                            0254 00837000
*             GOTO PROCTS2;           /* CONTINUE THE SEARCH         */ 00838000
*         /* IT IS NOT THE SAME. COMPARE ITS DATA TO THE NEW DATA,   */ 00839000
*         /* IF ANY, TO SEE IF ITS DATA FIELD CAN BE USED.           */ 00840000
*         CALL CMPRND;                /* GO TO COMPARE SUBRTNE       */ 00841000
         BAL   @14,CMPRND                                          0256 00842000
*         /* CAN THIS DATA FIELD BE USED?                            */ 00843000
*         IF PRDFLG = '1'B                                         0257 00844000
*           THEN                      /* YES,                        */ 00845000
         TM    PRDFLG,B'00000010'                                  0257 00846000
         BO    @RT00257                                            0257 00847000
*             GOTO CSNDOK;            /* GO MAKE APPROPRIATE CHANGES */ 00848000
*PROCTS2: /* ARE THERE MORE PROCNAMES IN THIS TOTAL CHAIN? IF SO,    */ 00849000
*         /* THEN CONTINUE THE SEARCH.                               */ 00850000
*         IF UADSRNEX = 0                                          0259 00851000
*           THEN                      /* NO, END OF TOTAL CHAIN      */ 00852000
PROCTS2  SLR   @08,@08                                             0259 00853000
         ICM   @08,7,UADSRNEX(DROBPTR)                             0259 00854000
         LTR   @08,@08                                             0259 00855000
         BZ    @RT00259                                            0259 00856000
*             GOTO PRNFND;            /* GO MAKE CHANGES             */ 00857000
*         DROBPTR = HEDBPTR+UADSRNEX; /* REF THE NEXT PROC OBLK      */ 00858000
         ALR   @08,HEDBPTR                                         0261 00859000
         LR    DROBPTR,@08                                         0261 00860000
*         GOTO PROCTS;                /* GO CONTINUE THE SEARCH      */ 00861000
         B     PROCTS                                              0262 00862000
*NPRFND:  /* THE NEW PROCNAME EXISTS IN THIS LOCAL CHAIN. COMPARE    */ 00863000
*         /* ITS DATA TO THE NEW DATA, IF ANY. IF NOT EQUAL, THEN    */ 00864000
*         /* SEARCH THE TOTAL CHAIN TO SEE IF THIS PROCNAME, WITH    */ 00865000
*         /* EQUAL DATA, EXISTS SOMEWHERE ELSE IN THIS TREE.         */ 00866000
*         OPRSAVE = NPRSAVE;          /* TRANSFER PTR FOR LATER USE  */ 00867000
NPRFND   LR    OPRSAVE,NPRSAVE                                     0263 00868000
*         CALL CMPRND;                /* GO TO COMPARE SUBRTNE       */ 00869000
         BAL   @14,CMPRND                                          0264 00870000
*         /* IS THE DATA EQUAL?                                      */ 00871000
*         IF PRDFLG = '0'B                                         0265 00872000
*           THEN                      /* NO,                         */ 00873000
         TM    PRDFLG,B'00000010'                                  0265 00874000
         BZ    @RT00265                                            0265 00875000
*             GOTO TSPREP;            /* GO SEARCH THE TOTAL CHAIN   */ 00876000
*         /* THIS DATA FIELD WILL BE USED.                           */ 00877000
*RCHNPR:  /* THIS SECTION WILL CHANGE ONE PROCNAME CHAIN. THE FIRST  */ 00878000
*         /* OFFSET BLOCK WILL BE RETAINED AND ALL OTHERS WILL BE    */ 00879000
*         /* PRUNED FROM THE TREE. THEIR DATA FIELDS WILL ALSO BE    */ 00880000
*         /* FREED IF THEY ARE NOT SHARED.                           */ 00881000
*         DROBPTR = LASTOB;           /* REF 1ST OBLK IN THIS CHAIN  */ 00882000
RCHNPR   LR    DROBPTR,LASTOB                                      0267 00883000
*         /* IS THE NEW PROC OFFSET BLOCK THE 1ST IN THE CHAIN?      */ 00884000
*         IF NPRSAVE = LASTOB                                      0268 00885000
*           THEN                      /* YES,                        */ 00886000
         CR    NPRSAVE,LASTOB                                      0268 00887000
         BE    @RT00268                                            0268 00888000
*             GOTO CSNDOK2;           /* GO CHECK WHERE TO CONTINUE  */ 00889000
*         /* THE NEW PROC OFFSET BLOCK IS NOT THE FIRST IN THE LOCAL */ 00890000
*         /* CHAIN. TRANSFER THE OFFSET TO ITS DATA FIELD TO THE     */ 00891000
*         /* FIRST OFFSET BLOCK AND VICE VERSA. THIS WILL GREATLY    */ 00892000
*         /* FACILITATE THE PRUNING OF THE OFFSET BLOCKS.            */ 00893000
*         ADATSAVE = UADSRDAT;        /* SAVE OFFSET TO DATAFLD      */ 00894000
         L     ADATSAVE,UADSRDAT(,DROBPTR)                         0270 00895000
*         DROBPTR = NPRSAVE;          /* REF THE NEW PROC OBLK       */ 00896000
         LR    DROBPTR,NPRSAVE                                     0271 00897000
*         RDATSAVE = UADSRDAT;        /* SAVE OFFSET TO ITS DATAFLD  */ 00898000
         L     @15,UADSRDAT(,DROBPTR)                              0272 00899000
         ST    @15,RDATSAVE                                        0272 00900000
*         UADSRDAT = ADATSAVE;        /* TRANSFER DATAFLD OFFSET     */ 00901000
         ST    ADATSAVE,UADSRDAT(,DROBPTR)                         0273 00902000
*         DROBPTR = LASTOB;           /* REF THE 1ST OBLK AGAIN      */ 00903000
         LR    DROBPTR,LASTOB                                      0274 00904000
*         UADSRDAT = RDATSAVE;        /* TRANSFER DATAFLD OFFSET     */ 00905000
         ST    @15,UADSRDAT(,DROBPTR)                              0275 00906000
*         RNEXSAVE = UADSRNEX;        /* SAVE OFFSET TO NEXT OBLK    */ 00907000
         SLR   RNEXSAVE,RNEXSAVE                                   0276 00908000
         ICM   RNEXSAVE,7,UADSRNEX(DROBPTR)                        0276 00909000
*RCHNPR2: /* BEGINNING OF THE PRUNING LOOP.                          */ 00910000
*         DROBPTR = HEDBPTR+RNEXSAVE; /* REF THE NEXT PROC OBLK      */ 00911000
RCHNPR2  LR    DROBPTR,HEDBPTR                                     0277 00912000
         ALR   DROBPTR,RNEXSAVE                                    0277 00913000
*         /* SAVE THE CHAIN FLAG OF THIS OFFSET BLOCK.               */ 00914000
*         IF FLGR01 = '1'B                                         0278 00915000
*           THEN                                                   0278 00916000
         TM    FLGR01(DROBPTR),B'10000000'                         0278 00917000
         BNO   @RF00278                                            0278 00918000
*             FLGSAVE = '1'B;                                      0279 00919000
         OI    FLGSAVE,B'00100000'                                 0279 00920000
*           ELSE                                                   0280 00921000
*             FLGSAVE = '0'B;                                      0280 00922000
         B     @RC00278                                            0280 00923000
@RF00278 NI    FLGSAVE,B'11011111'                                 0280 00924000
*         RNEXSAVE = UADSRNEX;        /* SAVE OFFSET TO NEXT OBLK    */ 00925000
@RC00278 SLR   RNEXSAVE,RNEXSAVE                                   0281 00926000
         ICM   RNEXSAVE,7,UADSRNEX(DROBPTR)                        0281 00927000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF THIS DATA FIELD         */ 00928000
         LR    UADSRPTR,HEDBPTR                                    0282 00929000
         AL    UADSRPTR,UADSRDAT(,DROBPTR)                         0282 00930000
*         /* IF THE DATA FIELD IS NOT SHARED, THEN FREE IT.          */ 00931000
*         IF UADSRCTR > 1                                          0283 00932000
*           THEN                      /* IT IS SHARED                */ 00933000
         CLI   UADSRCTR(UADSRPTR),1                                0283 00934000
         BNH   @RF00283                                            0283 00935000
*             DO;                                                  0284 00936000
*               UADSRCTR = UADSRCTR-1;/* DECREMENT THE USE COUNTER   */ 00937000
         SLR   @15,@15                                             0285 00938000
         IC    @15,UADSRCTR(,UADSRPTR)                             0285 00939000
         BCTR  @15,0                                               0285 00940000
         STC   @15,UADSRCTR(,UADSRPTR)                             0285 00941000
*               GOTO RCHNPR3;         /* BYPASS DATAFLD PRUNING      */ 00942000
         B     RCHNPR3                                             0286 00943000
*             END;                                                 0287 00944000
*         /* PRUNE THE PROCNAME DATA FIELD FROM THE TREE.            */ 00945000
*         AREAOFST = UADSRDAT;        /* OFFSET TO AREA TO BE FREED  */ 00946000
@RF00283 L     @04,UADSRDAT(,DROBPTR)                              0288 00947000
         ST    @04,AREAOFST                                        0288 00948000
*         AREALNTH = 24;              /* LENGTH TO BE FREED          */ 00949000
         MVC   AREALNTH(2),@CH00062                                0289 00950000
*         CALL IKJFRSP;               /* GO FREE THE DATAFLD         */ 00951000
         BAL   @14,IKJFRSP                                         0290 00952000
*RCHNPR3: /* PRUNE THE PROCNAME OFFSET BLOCK FROM THE TREE.          */ 00953000
*         AREAOFST = DROBPTR-HEDBPTR; /* OFFSET TO AREA TO BE FREED  */ 00954000
RCHNPR3  LR    @04,DROBPTR                                         0291 00955000
         SLR   @04,HEDBPTR                                         0291 00956000
         ST    @04,AREAOFST                                        0291 00957000
*         AREALNTH = 12;              /* LENGTH TO BE FREED          */ 00958000
         MVC   AREALNTH(2),@CH00055                                0292 00959000
*         CALL IKJFRSP;               /* GO FREE THE OFFSET BLOCK    */ 00960000
         BAL   @14,IKJFRSP                                         0293 00961000
*         /* CHECK THE CHAIN FLAG OF THE OFFSET BLOCK JUST PRUNED.   */ 00962000
*         /* '1' INDICATES END OF LOCAL CHAIN & END OF PRUNING.      */ 00963000
*         IF FLGSAVE = '0'B                                        0294 00964000
*           THEN                      /* NO, NOT END OF CHAIN,       */ 00965000
         TM    FLGSAVE,B'00100000'                                 0294 00966000
         BZ    @RT00294                                            0294 00967000
*             GOTO RCHNPR2;           /* CONTINUE PRUNING            */ 00968000
*         /* ALL OFFSET BLOCKS IN THIS CHAIN, EXCEPT THE FIRST,      */ 00969000
*         /* HAVE NOW BEEN PRUNED.                                   */ 00970000
*         DROBPTR = LASTOB;           /* REF 1ST OBLK AGAIN          */ 00971000
         LR    DROBPTR,LASTOB                                      0296 00972000
*         FLGR01 = '1'B;              /* SET ITS CHAIN FLAG TO '1'   */ 00973000
         OI    FLGR01(DROBPTR),B'10000000'                         0297 00974000
*         UADSRNEX = RNEXSAVE;        /* INSERT OFFSET TO THE BEGIN-    00975000
*                                        NING OF THE NEXT CHAIN      */ 00976000
         STCM  RNEXSAVE,7,UADSRNEX(DROBPTR)                        0298 00977000
*         GOTO PRNEXT3;               /* GO CHECK WHERE PROCESSING 0299 00978000
*                                        IS TO CONTINUE              */ 00979000
         B     PRNEXT3                                             0299 00980000
*CSNDOK:  /* A COUSIN WAS FOUND WHOSE DATA FIELD CAN BE USED.        */ 00981000
*         /* GO CHECK THE USE COUNTER AND, IF NOT GREATER THAN 255,  */ 00982000
*         /* INCREMENT IT BY ONE.                                    */ 00983000
*         CALL CTRCHK;                                             0300 00984000
CSNDOK   BAL   @14,CTRCHK                                          0300 00985000
*         DROBPTR = LASTOB;           /* REF 1ST OBLK IN THIS CHAIN  */ 00986000
         LR    DROBPTR,LASTOB                                      0301 00987000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF ITS DATA FIELD          */ 00988000
         LR    UADSRPTR,HEDBPTR                                    0302 00989000
         AL    UADSRPTR,UADSRDAT(,DROBPTR)                         0302 00990000
*         /* CAN ITS DATA FIELD BE FREED?                            */ 00991000
*         IF UADSRCTR > 1                                          0303 00992000
*           THEN                      /* NO,                         */ 00993000
         CLI   UADSRCTR(UADSRPTR),1                                0303 00994000
         BNH   @RF00303                                            0303 00995000
*             UADSRCTR = UADSRCTR-1;  /* DECREMENT ITS USE CTR       */ 00996000
         SLR   @02,@02                                             0304 00997000
         IC    @02,UADSRCTR(,UADSRPTR)                             0304 00998000
         BCTR  @02,0                                               0304 00999000
         STC   @02,UADSRCTR(,UADSRPTR)                             0304 01000000
*           ELSE                      /* YES,                        */ 01001000
*             DO;                                                  0305 01002000
         B     @RC00303                                            0305 01003000
@RF00303 DS    0H                                                  0306 01004000
*               AREAOFST = UADSRDAT;  /* OFFSET TO AREA TO BE FREED  */ 01005000
         L     @04,UADSRDAT(,DROBPTR)                              0306 01006000
         ST    @04,AREAOFST                                        0306 01007000
*               AREALNTH = 24;        /* LENGTH TO BE FREED          */ 01008000
         MVC   AREALNTH(2),@CH00062                                0307 01009000
*               CALL IKJFRSP;         /* GO FREE THIS DATA FIELD     */ 01010000
         BAL   @14,IKJFRSP                                         0308 01011000
*             END;                                                 0309 01012000
*         UADSRDAT = RDATSAVE;        /* INSERT OFFSET TO THE COUSIN    01013000
*                                        DATA FIELD                  */ 01014000
@RC00303 L     @04,RDATSAVE                                        0310 01015000
         ST    @04,UADSRDAT(,DROBPTR)                              0310 01016000
*CSNDOK2: /* IF THIS IS THE ONLY OFFSET BLOCK IN THIS LOCAL CHAIN,   */ 01017000
*         /* THEN NO FURTHER CHANGES ARE NECESSARY.                  */ 01018000
*         IF FLGR01 ='1'B                                          0311 01019000
*           THEN                      /* YES, END OF CHAIN           */ 01020000
CSNDOK2  TM    FLGR01(DROBPTR),B'10000000'                         0311 01021000
         BO    @RT00311                                            0311 01022000
*             GOTO PRNEXT3;           /* GO CHECK WHERE PROCESSING 0312 01023000
*                                        IS TO CONTINUE              */ 01024000
*         RNEXSAVE = UADSRNEX;        /* SAVE OFFSET TO BROTHER      */ 01025000
         SLR   RNEXSAVE,RNEXSAVE                                   0313 01026000
         ICM   RNEXSAVE,7,UADSRNEX(DROBPTR)                        0313 01027000
*         GOTO RCHNPR2;               /* GO PRUNE ALL OTHER OFFSET 0314 01028000
*                                        BLOCKS IN THIS CHAIN        */ 01029000
         B     RCHNPR2                                             0314 01030000
*PRNFND:  /* NO PROCNAME WITH THE REQUIRED DATA EXISTS IN THIS       */ 01031000
*         /* TREE. CHECK WHETHER AN EXISTING DATA FIELD IN THIS      */ 01032000
*         /* LOCAL CHAIN CAN BE USED.                                */ 01033000
*         /* DOES THE NEW PROCNAME EXIST IN THIS CHAIN (WITH DIF-    */ 01034000
*         /* FERENT DATA)?                                           */ 01035000
*         IF OPRSAVE = 0                                           0315 01036000
*           THEN                      /* NO,                         */ 01037000
PRNFND   LTR   OPRSAVE,OPRSAVE                                     0315 01038000
         BZ    @RT00315                                            0315 01039000
*             GOTO PRNFND2;           /* GO REF THE 1ST OBLK         */ 01040000
*         DROBPTR = OPRSAVE;          /* REF THE NEW PROC OBLK       */ 01041000
         LR    DROBPTR,OPRSAVE                                     0317 01042000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF ITS DATA FIELD          */ 01043000
         LR    UADSRPTR,HEDBPTR                                    0318 01044000
         AL    UADSRPTR,UADSRDAT(,DROBPTR)                         0318 01045000
*         /* CAN THIS DATA FIELD BE USED?                            */ 01046000
*         IF UADSRCTR > 1                                          0319 01047000
*           THEN                      /* NO,                         */ 01048000
         CLI   UADSRCTR(UADSRPTR),1                                0319 01049000
         BNH   @RF00319                                            0319 01050000
*             CALL NEWPRDF;           /* GO CREATE A NEW DATAFLD     */ 01051000
         BAL   @14,NEWPRDF                                         0320 01052000
*         CALL PRDFCH;                /* INSERT NEW DATA, IF ANY     */ 01053000
@RF00319 BAL   @14,PRDFCH                                          0321 01054000
*         NPRSAVE = OPRSAVE;          /* TRANSFER FOR LATER USE      */ 01055000
         LR    NPRSAVE,OPRSAVE                                     0322 01056000
*         UADSRNAM = DLPROC;          /* INSERT THE NEW PROCNAME     */ 01057000
         MVC   UADSRNAM(8,UADSRPTR),DLPROC                         0323 01058000
*         GOTO RCHNPR;                /* GO TO PRUNING SECTION       */ 01059000
         B     RCHNPR                                              0324 01060000
*PRNFND2: /* USE THE 1ST PROC OFFSET BLOCK IN THIS CHAIN AND         */ 01061000
*         /* PRUNE ALL OTHERS.                                       */ 01062000
*         DROBPTR = LASTOB;           /* REF 1ST OBLK IN THIS CHAIN  */ 01063000
PRNFND2  LR    DROBPTR,LASTOB                                      0325 01064000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF ITS DATA FIELD          */ 01065000
         LR    UADSRPTR,HEDBPTR                                    0326 01066000
         AL    UADSRPTR,UADSRDAT(,DROBPTR)                         0326 01067000
*         /* CAN THIS DATA FIELD BE USED?                            */ 01068000
*         IF UADSRCTR > 1                                          0327 01069000
*           THEN                      /* NO,                         */ 01070000
         CLI   UADSRCTR(UADSRPTR),1                                0327 01071000
         BNH   @RF00327                                            0327 01072000
*             CALL NEWPRDF;           /* GO CREATE A NEW DATAFLD     */ 01073000
         BAL   @14,NEWPRDF                                         0328 01074000
*         UADSRSIZ = 0;               /* INSERT DEFAULT VALUE        */ 01075000
@RF00327 SLR   @02,@02                                             0329 01076000
         STH   @02,UADSRSIZ(,UADSRPTR)                             0329 01077000
*         UADSUNAM = ' ';             /* INSERT DEFAULT VALUE        */ 01078000
         MVI   UADSUNAM+1(UADSRPTR),C' '                           0330 01079000
         MVC   UADSUNAM+2(6,UADSRPTR),UADSUNAM+1(UADSRPTR)         0330 01080000
         MVI   UADSUNAM(UADSRPTR),C' '                             0330 01081000
*         CALL PRDFCH;                /* GO INSERT NEW DATA, IF ANY  */ 01082000
         BAL   @14,PRDFCH                                          0331 01083000
*         UADSRNAM = DLPROC;          /* INSERT THE NEW PROCNAME     */ 01084000
         MVC   UADSRNAM(8,UADSRPTR),DLPROC                         0332 01085000
*         GOTO CSNDOK2;               /* GO CHECK FOR BROTHERS       */ 01086000
         B     CSNDOK2                                             0333 01087000
*ALLPRDF: /* CHANGE ALL DATA FIELDS IN A LOCAL CHAIN.                */ 01088000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF THE PROC DATAFLD        */ 01089000
ALLPRDF  LR    UADSRPTR,HEDBPTR                                    0334 01090000
         AL    UADSRPTR,UADSRDAT(,DROBPTR)                         0334 01091000
*         CALL CMPRND;                /* GO COMPARE THE EXISTING DATA   01092000
*                                        TO THE NEW DATA             */ 01093000
         BAL   @14,CMPRND                                          0335 01094000
*         /* IS THE EXISTING DATA EQUAL TO THE NEW DATA? IF NOT,     */ 01095000
*         /* THEN THE TOTAL CHAIN MUST BE SEARCHED TO SEE WHETHER    */ 01096000
*         /* THIS SAME PROCNAME, WITH THE CORRECT DATA, ALREADY      */ 01097000
*         /* EXISTS IN ANOTHER CHAIN.                                */ 01098000
*         IF PRDFLG = '0'B                                         0336 01099000
*           THEN                      /* NO, DATA IS NOT EQUAL,      */ 01100000
         TM    PRDFLG,B'00000010'                                  0336 01101000
         BZ    @RT00336                                            0336 01102000
*             GOTO SRCHND;            /* GO SEARCH THE TOTAL CHAIN   */ 01103000
*NEXTDF:  /* CHECK FOR MORE PROCNAMES IN THIS CHAIN.                 */ 01104000
*         IF FLGR01 = '1'B                                         0338 01105000
*           THEN                      /* END OF LOCAL CHAIN          */ 01106000
NEXTDF   TM    FLGR01(DROBPTR),B'10000000'                         0338 01107000
         BO    @RT00338                                            0338 01108000
*             GOTO PRNEXT3;           /* GO CHECK WHERE PROCESSING IS   01109000
*                                        TO CONTINUE                 */ 01110000
*         DROBPTR = HEDBPTR+UADSRNEX; /* REF THE NEXT PROCNAME OBLK  */ 01111000
         LR    @07,HEDBPTR                                         0340 01112000
         SLR   @04,@04                                             0340 01113000
         ICM   @04,7,UADSRNEX(DROBPTR)                             0340 01114000
         ALR   @07,@04                                             0340 01115000
         LR    DROBPTR,@07                                         0340 01116000
*         GOTO ALLPRDF;               /* GO PROCESS THIS PROCNAME    */ 01117000
         B     ALLPRDF                                             0341 01118000
*SRCHND:  /* SEARCH THE TOTAL CHAIN TO SEE WHETHER THIS PROCNAME,    */ 01119000
*         /* WITH THE REQUIRED DATA, ALREADY EXISTS IN ANOTHER CHAIN */ 01120000
*         OPRSAVE = DROBPTR;          /* SAVE ADDR OF THIS OBLK      */ 01121000
SRCHND   LR    OPRSAVE,DROBPTR                                     0342 01122000
*         ODFPTR = UADSRPTR;          /* SAVE ADDR OF THIS DATAFLD   */ 01123000
         LR    ODFPTR,UADSRPTR                                     0343 01124000
*         DLPROC = UADSRNAM;          /* TRANSFER THE PROCNAME TO  0344 01125000
*                                        ANOTHER VARIABLE            */ 01126000
         MVC   DLPROC(8),UADSRNAM(UADSRPTR)                        0344 01127000
*         DROBPTR = FRSTDROB;         /* REF 1ST OBLK IN TOTAL CHAIN */ 01128000
         LR    DROBPTR,FRSTDROB                                    0345 01129000
*SRCHND2: /* GO TO THE SEARCH SUBROUTINE TO PERFORM THE SEARCH.      */ 01130000
*         CALL DLPRTS;                                             0346 01131000
SRCHND2  BAL   @14,DLPRTS                                          0346 01132000
*         /* WAS THE PROCNAME FOUND?                                 */ 01133000
*         IF NPRSAVE = 0                                           0347 01134000
*           THEN                      /* NO,                         */ 01135000
         LTR   NPRSAVE,NPRSAVE                                     0347 01136000
         BZ    @RT00347                                            0347 01137000
*             GOTO CHGDF;             /* GO MAKE APPROPRIATE CHANGES */ 01138000
*         /* IT WAS FOUND. DOES IT POINT TO THE SAME DATA FIELD? IF  */ 01139000
*         /* YES, IGNORE IT AND CONTINUE THE SEARCH.                 */ 01140000
*         IF ODFPTR = NDFPTR                                       0349 01141000
*           THEN                      /* YES,                        */ 01142000
         C     ODFPTR,NDFPTR                                       0349 01143000
         BNE   @RF00349                                            0349 01144000
*SRCHND3:     /* ARE THERE MORE PROCNAMES IN THE TOTAL CHAIN?        */ 01145000
*             IF UADSRNEX ^= 0                                     0350 01146000
*               THEN                  /* YES,                        */ 01147000
SRCHND3  SLR   @07,@07                                             0350 01148000
         ICM   @07,7,UADSRNEX(DROBPTR)                             0350 01149000
         LTR   @07,@07                                             0350 01150000
         BZ    @RF00350                                            0350 01151000
*                 DO;                                              0351 01152000
*                   DROBPTR =         /* REF THE NEXT PROCNAME OBLK  */ 01153000
*                     HEDBPTR+UADSRNEX;                            0352 01154000
         ALR   @07,HEDBPTR                                         0352 01155000
         LR    DROBPTR,@07                                         0352 01156000
*                   GOTO SRCHND2;     /* GO CONTINUE THE SEARCH      */ 01157000
         B     SRCHND2                                             0353 01158000
*                 END;                                             0354 01159000
*               ELSE                  /* NO, THEREFORE A USABLE DATA    01160000
*                                        FIELD WAS NOT FOUND         */ 01161000
*                 GOTO CHGDF;         /* GO MAKE APPROPRIATE CHANGES */ 01162000
*         /* IT POINTS TO A DIFFERENT DATA FIELD. COMPARE THE DATA.  */ 01163000
*         /* BUILD A MODEL OF THE CURRENT DATA FIELD AND INSERT THE  */ 01164000
*         /* NEW DATA ITEM(S) FROM THE COMMAND. THEN COMPARE THE     */ 01165000
*         /* COUSIN DATA FIELD TO THIS MODEL.                        */ 01166000
*         UADSRPTR = ODFPTR;          /* REF CURRENT PROC DATAFLD    */ 01167000
@RF00349 LR    UADSRPTR,ODFPTR                                     0356 01168000
*         DROBDMDL = DROBD;           /* COPY IT INTO MODEL          */ 01169000
         MVC   DROBDMDL(24),DROBD(UADSRPTR)                        0357 01170000
*         UADSRPTR = ADDR(DROBDMDL);  /* SET PTR TO MODEL            */ 01171000
         LA    UADSRPTR,DROBDMDL                                   0358 01172000
*         CALL PRDFCH;                /* GO INSERT NEW DATA ITEMS    */ 01173000
         BAL   @14,PRDFCH                                          0359 01174000
*         UADSRPTR = NDFPTR;          /* REF COUSIN DATA FIELD       */ 01175000
         L     UADSRPTR,NDFPTR                                     0360 01176000
*         /* ONLY THE SIZE AND UNIT NAME HAVE TO BE COMPARED.        */ 01177000
*         IF UADSRSIZ ^= TEMPRSIZ     /* IS SIZE DIFFERENT?          */ 01178000
*          | UADSUNAM ^= TEMPUNAM     /* OR UNIT NAME DIFFERENT?     */ 01179000
*           THEN                      /* YES, THEREFORE COUSIN DATA     01180000
*                                        FIELD CANNOT BE USED        */ 01181000
         CLC   UADSRSIZ(2,UADSRPTR),TEMPRSIZ                       0361 01182000
         BNE   @RT00361                                            0361 01183000
         CLC   UADSUNAM(8,UADSRPTR),TEMPUNAM                       0361 01184000
         BNE   @RT00361                                            0361 01185000
*             GOTO SRCHND3;           /* CONTINUE THE PROCESS UNTIL     01186000
*                                        END OF TOT CHAIN IS REACHED */ 01187000
*         /* A USABLE DATA FIELD WAS FOUND.                          */ 01188000
*         /* GO CHECK THE USE COUNTER AND, IF NOT GREATER THAN 255,  */ 01189000
*         /* INCREMENT IT BY ONE.                                    */ 01190000
*         CALL CTRCHK;                /*                             */ 01191000
         BAL   @14,CTRCHK                                          0363 01192000
*         DROBPTR = OPRSAVE;          /* REF THE ORIGINAL OBLK AGAIN */ 01193000
         LR    DROBPTR,OPRSAVE                                     0364 01194000
*         UADSRPTR = ODFPTR;          /* REF ITS DATAFLD             */ 01195000
         LR    UADSRPTR,ODFPTR                                     0365 01196000
*         /* CAN ITS DATA FIELD BE FREED?                            */ 01197000
*         IF UADSRCTR = 1                                          0366 01198000
*           THEN                      /* YES,                        */ 01199000
         CLI   UADSRCTR(UADSRPTR),1                                0366 01200000
         BNE   @RF00366                                            0366 01201000
*             DO;                                                  0367 01202000
*               AREAOFST = UADSRDAT;  /* OFFSET TO AREA TO BE FREED  */ 01203000
         L     @07,UADSRDAT(,DROBPTR)                              0368 01204000
         ST    @07,AREAOFST                                        0368 01205000
*               AREALNTH = 24;        /* LENGTH TO BE FREED          */ 01206000
         MVC   AREALNTH(2),@CH00062                                0369 01207000
*               CALL IKJFRSP;         /* GO FREE THE DATAFLD         */ 01208000
         BAL   @14,IKJFRSP                                         0370 01209000
*             END;                                                 0371 01210000
*           ELSE                      /* NO,                         */ 01211000
*             UADSRCTR = UADSRCTR-1;  /* DECREMENT THE USE CTR       */ 01212000
         B     @RC00366                                            0372 01213000
@RF00366 SLR   @07,@07                                             0372 01214000
         IC    @07,UADSRCTR(,UADSRPTR)                             0372 01215000
         BCTR  @07,0                                               0372 01216000
         STC   @07,UADSRCTR(,UADSRPTR)                             0372 01217000
*         UADSRDAT = RDATSAVE;        /* INSERT OFFSET TO COUSIN   0373 01218000
*                                        DATA FIELD                  */ 01219000
@RC00366 L     @07,RDATSAVE                                        0373 01220000
         ST    @07,UADSRDAT(,DROBPTR)                              0373 01221000
*         GOTO NEXTDF;                /* GO CONTINUE WITH THE NEXT 0374 01222000
*                                        PROCNAME IN THE LOCAL CHAIN */ 01223000
         B     NEXTDF                                              0374 01224000
*CHGDF:   /* NO USABLE DATA FIELD WAS FOUND. CHANGE THE EXISTING     */ 01225000
*         /* DATA FIELD IF IT IS NOT SHARED. IF IT IS SHARED, THEN   */ 01226000
*         /* CREATE A NEW ONE.                                       */ 01227000
*         DROBPTR = OPRSAVE;          /* REF THE OBLK IN QUESTION    */ 01228000
CHGDF    LR    DROBPTR,OPRSAVE                                     0375 01229000
*         UADSRPTR = ODFPTR;          /* REF ITS DATAFLD             */ 01230000
         LR    UADSRPTR,ODFPTR                                     0376 01231000
*         /* IS IT SHARED?                                           */ 01232000
*         IF UADSRCTR > 1                                          0377 01233000
*           THEN                      /* YES,                        */ 01234000
         CLI   UADSRCTR(UADSRPTR),1                                0377 01235000
         BNH   @RF00377                                            0377 01236000
*             CALL NEWPRDF;           /* CREATE A NEW PROC DATAFLD   */ 01237000
         BAL   @14,NEWPRDF                                         0378 01238000
*         CALL PRDFCH;                /* INSERT THE NEW DATA         */ 01239000
@RF00377 BAL   @14,PRDFCH                                          0379 01240000
*         GOTO NEXTDF;                /* GO CONTINUE WITH THE NEXT 0380 01241000
*                                        PROCNAME IN THE LOCAL CHAIN */ 01242000
         B     NEXTDF                                              0380 01243000
*PRNEXT3: /* A LOCAL PROCNAME CHAIN HAS BEEN CHANGED. DETERMINE      */ 01244000
*         /* WHERE PROCESSING IS TO CONTINUE.                        */ 01245000
*         DNOBPTR = OACSAVE;          /* REF ORIGINAL ACTNO AGAIN    */ 01246000
PRNEXT3  L     DNOBPTR,OACSAVE                                     0381 01247000
*         /* ARE THERE MORE ACCTNMBRS TO BE PROCESSED UNDER THE      */ 01248000
*         /* CURRENT PASSWORD? THIS IS POSSIBLE ONLY IF THE NODELIST */ 01249000
*         /* ACCTNMBR = '*'.                                         */ 01250000
*         IF ACCTNO(1:2) = '* '                                    0382 01251000
*           THEN                      /* YES,                        */ 01252000
         L     @04,NODELPTR(,CTRLTABP)                             0382 01253000
         CLC   ACCTNO(2,@04),@CC00205                              0382 01254000
         BNE   @RF00382                                            0382 01255000
*             /* CHECK THE CHAIN FLAG IN THE ACCTNMBR OFFSET BLOCK.  */ 01256000
*             IF AFLG01 = '0'B        /* MORE ACCTNMBRS?             */ 01257000
*               THEN                  /* YES,                        */ 01258000
         TM    AFLG01(DNOBPTR),B'10000000'                         0383 01259000
         BNZ   @RF00383                                            0383 01260000
*                 DO;                                              0384 01261000
*                   DNOBPTR =         /* REF THE NEXT BROTHER OBLK   */ 01262000
*                     HEDBPTR+UADSANEX;                            0385 01263000
         LR    @04,HEDBPTR                                         0385 01264000
         SLR   @15,@15                                             0385 01265000
         ICM   @15,7,UADSANEX(DNOBPTR)                             0385 01266000
         ALR   @04,@15                                             0385 01267000
         LR    DNOBPTR,@04                                         0385 01268000
*                   OACSAVE = DNOBPTR;/* SAVE THIS ADDR              */ 01269000
         ST    DNOBPTR,OACSAVE                                     0386 01270000
*                   GOTO CHALLPR;     /* PROCESS NEXT PROC CHAIN     */ 01271000
         B     CHALLPR                                             0387 01272000
*                 END;                                             0388 01273000
*               ELSE                  /* NO MORE ACTNOS FOR THIS PWD */ 01274000
*                 GOTO PRNEXT4;       /* GO CHECK PASSWORDS          */ 01275000
*           ELSE                      /* ACCTNMBR WAS SPECIFIED,     */ 01276000
*             DO;                                                  0390 01277000
@RF00382 DS    0H                                                  0391 01278000
*               TRCHGE = '1'B;        /* 1- THIS TREE HAS BEEN CHGD  */ 01279000
         OI    TRCHGE(CTRLTABP),B'10000000'                        0391 01280000
*               GOTO PRNEXT2;         /* GO CHECK FOR MORE PASSWRDS  */ 01281000
         B     PRNEXT2                                             0392 01282000
*             END;                                                 0393 01283000
*PRNEXT4: /* THE END OF A LOCAL ACCTNMBR CHAIN HAS BEEN REACHED,     */ 01284000
*         /* CHECK FOR MORE PASSWORDS.                               */ 01285000
*         DPOBPTR = OPWSAVE;          /* REF CURRENT PASSWD OBLK     */ 01286000
PRNEXT4  L     DPOBPTR,OPWSAVE                                     0394 01287000
*         /* NODELIST PASSWORD = '*'?                                */ 01288000
*         IF PASSWD(1) = '*'                                       0395 01289000
*           THEN                      /* YES,                        */ 01290000
         L     @07,NODELPTR(,CTRLTABP)                             0395 01291000
         CLI   PASSWD(@07),C'*'                                    0395 01292000
         BNE   @RF00395                                            0395 01293000
*             /* CHECK THE CHAIN FLAG IN THE PASSWORD OFFSET BLOCK.  */ 01294000
*             IF PFLG01 = '0'B        /* MORE PASSWORDS?             */ 01295000
*               THEN                  /* YES,                        */ 01296000
         TM    PFLG01(DPOBPTR),B'10000000'                         0396 01297000
         BNZ   @RF00396                                            0396 01298000
*                 DO;                                              0397 01299000
*                   DPOBPTR =         /* REF NEXT PASSWORD BROTHER   */ 01300000
*                     HEDBPTR+UADSPNEX;                            0398 01301000
         LR    @04,HEDBPTR                                         0398 01302000
         SLR   @15,@15                                             0398 01303000
         ICM   @15,7,UADSPNEX(DPOBPTR)                             0398 01304000
         ALR   @04,@15                                             0398 01305000
         LR    DPOBPTR,@04                                         0398 01306000
*                   DNOBPTR =         /* REF FIRST ACCTNO OBLK       */ 01307000
*                     HEDBPTR+UADSPSUB;                            0399 01308000
         LR    DNOBPTR,HEDBPTR                                     0399 01309000
         AL    DNOBPTR,UADSPSUB(,DPOBPTR)                          0399 01310000
*                   DROBPTR =         /* REF FIRST PROCEDURE OBLK    */ 01311000
*                     HEDBPTR+UADSASUB;                            0400 01312000
         LR    DROBPTR,HEDBPTR                                     0400 01313000
         AL    DROBPTR,UADSASUB(,DNOBPTR)                          0400 01314000
*                   GOTO SVPTRS;      /* CONTINUE WITH NEXT PASSWORD */ 01315000
         B     SVPTRS                                              0401 01316000
*                 END;                                             0402 01317000
*         /* NO, THEREFORE NO MORE CHANGES ARE NECESSARY FOR THIS    */ 01318000
*         /* USERID TREE.                                            */ 01319000
*         GOTO CHGEOK;                /* GO SET INDICATORS & RETURN  */ 01320000
         B     CHGEOK                                              0403 01321000
*CHGEOK:  /* THIS TREE HAS BEEN CHANGED SUCCESSFULLY. SET APPROPRI-  */ 01322000
*         /* ATE INDICATORS AND RETURN TO CHANGE (IKJEFA20).         */ 01323000
*         SRCHIND = 0;                /* NO FURTHER SEARCH REQUIRED  */ 01324000
CHGEOK   MVI   SRCHIND(CTRLTABP),X'00'                             0404 01325000
*         /* CHECK WHETHER SIZE WAS REDUCED TO MAXSIZE. IF SO,       */ 01326000
*         /* IKJEFA20 WILL INFORM THE USER OF THIS ACTION.           */ 01327000
*         IF STGFLG = '1'B                                         0405 01328000
*           THEN                      /* YES, MSG IS NECESSARY       */ 01329000
         TM    STGFLG,B'10000000'                                  0405 01330000
         BNO   @RF00405                                            0405 01331000
*             MSGNMBR = 14;           /* SET MSG NUMBER FOR IKJEFA20 */ 01332000
         MVI   MSGNMBR(CTRLTABP),X'0E'                             0406 01333000
*           ELSE                      /* NO,                         */ 01334000
*             MSGNMBR = 0;            /* INDIC SUCCESSFUL COMPLETION */ 01335000
         B     @RC00405                                            0407 01336000
@RF00405 MVI   MSGNMBR(CTRLTABP),X'00'                             0407 01337000
*WORKEND: /* THIS ROUTINE HAS COMPLETED PROCESSING. RETURN TO        */ 01338000
*         /* CHANGE (IKJEFA20) WITH EITHER A REQUEST TO WRITE THIS   */ 01339000
*         /* TREE BACK INTO THE UADS, OR A REQUEST TO PERFORM        */ 01340000
*         /* ANOTHER SEARCH, OR A REQUEST TO ISSUE AN ERROR MESSAGE. */ 01341000
*         RETURN;                                                  0408 01342000
         B     @EL00001                                            0408 01343000
*DLPRLS:  /***********************************************************/ 01344000
*         /* THIS SUBROUTINE WILL SEARCH FOR A GIVEN PROCNAME IN A   */ 01345000
*         /* LOCAL LATERAL CHAIN. IF FOUND, A POINTER WILL RECEIVE   */ 01346000
*         /* THE ADDRESS OF ITS OFFSET BLOCK. IF NOT FOUND, THE      */ 01347000
*         /* POINTER WILL BE SET TO ZERO.                            */ 01348000
*         /***********************************************************/ 01349000
*         PROC;                                                    0409 01350000
DLPRLS   STM   @14,@01,12(@13)                                     0409 01351000
         STM   @04,@12,36(@13)                                     0409 01352000
*DLPRLS1: /* BEGINNING OF THE SEARCH LOOP.                           */ 01353000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF THE PROC DATA FIELD     */ 01354000
DLPRLS1  LR    UADSRPTR,HEDBPTR                                    0410 01355000
         AL    UADSRPTR,UADSRDAT(,DROBPTR)                         0410 01356000
*         /* COMPARE THE GIVEN PROCNAME TO THE UADS PROCNAME.        */ 01357000
*         IF DLPROC = UADSRNAM                                     0411 01358000
*           THEN                      /* YES, THEY ARE EQUAL         */ 01359000
         CLC   DLPROC(8),UADSRNAM(UADSRPTR)                        0411 01360000
         BNE   @RF00411                                            0411 01361000
*             DO;                                                  0412 01362000
*               NPRSAVE = DROBPTR;    /* SAVE ADDR OF THIS OBLK      */ 01363000
         LR    NPRSAVE,DROBPTR                                     0413 01364000
*               NDFPTR = UADSRPTR;    /* SAVE ADDR OF THIS DATA FLD  */ 01365000
         ST    UADSRPTR,NDFPTR                                     0414 01366000
*              RETURN;                /* GO BACK TO POINT OF CALL    */ 01367000
@EL00002 DS    0H                                                  0415 01368000
@EF00002 DS    0H                                                  0415 01369000
@ER00002 LM    @14,@01,12(@13)                                     0415 01370000
         LM    @04,@12,36(@13)                                     0415 01371000
         BR    @14                                                 0415 01372000
*             END;                                                 0416 01373000
*         /* ARE THERE MORE BROTHERS IN THIS LOCAL CHAIN?            */ 01374000
*         IF FLGR01 = '0'B                                         0417 01375000
*           THEN                      /* YES,                        */ 01376000
@RF00411 TM    FLGR01(DROBPTR),B'10000000'                         0417 01377000
         BNZ   @RF00417                                            0417 01378000
*             DO;                                                  0418 01379000
*               DROBPTR = HEDBPTR     /* REF THE NEXT PROCNAME IN..  */ 01380000
*                 +UADSRNEX;          /* THIS LOCAL CHAIN            */ 01381000
         LR    @10,HEDBPTR                                         0419 01382000
         SLR   @07,@07                                             0419 01383000
         ICM   @07,7,UADSRNEX(DROBPTR)                             0419 01384000
         ALR   @10,@07                                             0419 01385000
         LR    DROBPTR,@10                                         0419 01386000
*               GOTO DLPRLS1;         /* CONTINUE THE SEARCH         */ 01387000
         B     DLPRLS1                                             0420 01388000
*             END;                                                 0421 01389000
*         /* THE PROCNAME DOES NOT EXIST IN THIS LOCAL CHAIN.        */ 01390000
*         NPRSAVE = 0;                /* 0- PROCNAME NOT FOUND       */ 01391000
@RF00417 SLR   NPRSAVE,NPRSAVE                                     0422 01392000
*         END DLPRLS;                 /* GO BACK TO POINT OF CALL    */ 01393000
         B     @EL00002                                            0423 01394000
*NEWPRDF: /***********************************************************/ 01395000
*         /* THIS SUBROUTINE WILL GET SPACE FOR A NEW PROCNAME DATA  */ 01396000
*         /* FIELD AND THEN INSERT THE APPROPRIATE DATA.             */ 01397000
*         /***********************************************************/ 01398000
*         PROC;                                                    0424 01399000
NEWPRDF  STM   @14,@03,@SA00003                                    0424 01400000
         STM   @05,@12,@SA00003+24                                 0424 01401000
*         UADSRCTR = UADSRCTR-1;      /* DECREMENT THE USE COUNTER IN   01402000
*                                        THE EXISTING FIELD          */ 01403000
         SLR   @10,@10                                             0425 01404000
         IC    @10,UADSRCTR(,UADSRPTR)                             0425 01405000
         BCTR  @10,0                                               0425 01406000
         STC   @10,UADSRCTR(,UADSRPTR)                             0425 01407000
*         AREALNTH = 24;              /* NUMBER OF BYTES NECESSARY 0426 01408000
*                                        FOR THE NEW DATA FIELD      */ 01409000
         MVC   AREALNTH(2),@CH00062                                0426 01410000
*         RFY R1 RSTD;                                             0427 01411000
*         R1 = ADDR(GETFREE);         /* PTR TO GETSPACE PARMLIST    */ 01412000
         LA    R1,GETFREE                                          0428 01413000
*         CALL IKJEFA53;              /* GET THE REQUIRED SPACE      */ 01414000
         L     @15,@CV00094                                        0429 01415000
         BALR  @14,@15                                             0429 01416000
*         RFY R1 UNRSTD;                                           0430 01417000
*         RFY R15 RSTD;               /* RESTRICT THE RETURN CODE REG*/ 01418000
*         RETCODE = R15;              /* SAVE THE RETURN CODE        */ 01419000
         ST    R15,RETCODE(,CTRLTABP)                              0432 01420000
*         RFY R15 UNRSTD;             /* RELEASE THE RETURN CODE REG */ 01421000
*         /* CHECK THE GETSPACE RETURN CODE.                         */ 01422000
*         IF RETCODE ^= 0             /* GETSPACE SUCCESSFUL?        */ 01423000
*           THEN                      /* NO,                         */ 01424000
         L     @10,RETCODE(,CTRLTABP)                              0434 01425000
         LTR   @10,@10                                             0434 01426000
         BZ    @RF00434                                            0434 01427000
*             DO;                                                  0435 01428000
*               SRCHIND = 0;          /* 0- PROCESSING OF THIS USERID   01429000
*                                        IS COMPLETED                */ 01430000
         MVI   SRCHIND(CTRLTABP),X'00'                             0436 01431000
*               MSGNMBR = 23;         /* SET ERROR MSG NUMBER        */ 01432000
         MVI   MSGNMBR(CTRLTABP),X'17'                             0437 01433000
*               RETURN TO WORKEND;    /* CHANGE CP WILL ISSUE THE  0438 01434000
*                                        ERROR MSG & CONTINUE WITH 0438 01435000
*                                        THE NEXT USERID, IF ANY     */ 01436000
         LA    @14,WORKEND                                         0438 01437000
         LM    @15,@03,@SA00003+4                                  0438 01438000
         LM    @05,@12,@SA00003+24                                 0438 01439000
         BR    @14                                                 0438 01440000
*             END;                                                 0439 01441000
*         NEWDFPTR = HEDBPTR+AREAOFST;/* CALCULATE ADDR OF THE NEW 0440 01442000
*                                        DATA FIELD                  */ 01443000
@RF00434 L     @10,AREAOFST                                        0440 01444000
         LR    NEWDFPTR,HEDBPTR                                    0440 01445000
         ALR   NEWDFPTR,@10                                        0440 01446000
*         NEWDFPTR->DROBD =           /* COPY THE EXISTING DATAFIELD */ 01447000
*           UADSRPTR->DROBD;          /* INTO THE NEW DATA FIELD     */ 01448000
         MVC   DROBD(24,NEWDFPTR),DROBD(UADSRPTR)                  0441 01449000
*         UADSRDAT = AREAOFST;        /* PUT THE NEW OFFSET INTO THE    01450000
*                                        OFFSET BLOCK                */ 01451000
         ST    @10,UADSRDAT(,DROBPTR)                              0442 01452000
*         UADSRPTR = NEWDFPTR;        /* THE ORIGINAL DATA FIELD IS     01453000
*                                        NOW UNHOOKED FROM THIS LOCAL   01454000
*                                        PROC CHAIN                  */ 01455000
         LR    UADSRPTR,NEWDFPTR                                   0443 01456000
*         UADSRCTR = 1;               /* SET USE CTR TO 1            */ 01457000
         MVI   UADSRCTR(UADSRPTR),X'01'                            0444 01458000
*         END NEWPRDF;                /* RETURN TO POINT OF CALL     */ 01459000
@EL00003 DS    0H                                                  0445 01460000
@EF00003 DS    0H                                                  0445 01461000
@ER00003 LM    @14,@03,@SA00003                                    0445 01462000
         LM    @05,@12,@SA00003+24                                 0445 01463000
         BR    @14                                                 0445 01464000
*PRDFCH:  /***********************************************************/ 01465000
*         /* THIS SUBROUTINE WILL PUT THE NEW PROCSIZE AND/OR THE    */ 01466000
*         /* NEW UNIT NAME INTO THE PROCNAME DATA FIELD.             */ 01467000
*         /***********************************************************/ 01468000
*         PROC;                                                    0446 01469000
PRDFCH   STM   @14,@12,12(@13)                                     0446 01470000
*         /* IS A PROCSIZE SPECIFIED IN THE COMMAND?                 */ 01471000
*         IF SIZESW = '1'B                                         0447 01472000
*           THEN                      /* YES,                        */ 01473000
         TM    SIZESW(CTRLTABP),B'01000000'                        0447 01474000
         BNO   @RF00447                                            0447 01475000
*             UADSRSIZ = NEWRSIZ;     /* INSERT THE NEW PROCSIZE     */ 01476000
         SLR   @10,@10                                             0448 01477000
         ICM   @10,3,NEWRSIZ                                       0448 01478000
         STH   @10,UADSRSIZ(,UADSRPTR)                             0448 01479000
*         /* IS A UNIT NAME SPECIFIED IN THE COMMAND?                */ 01480000
*         IF UNITSW = '1'B                                         0449 01481000
*           THEN                      /* YES,                        */ 01482000
@RF00447 TM    UNITSW(CTRLTABP),B'00100000'                        0449 01483000
         BNO   @RF00449                                            0449 01484000
*             UADSUNAM = NEWUNAM;     /* INSERT THE NEW UNIT NAME    */ 01485000
         MVC   UADSUNAM(8,UADSRPTR),NEWUNAM                        0450 01486000
*         END PRDFCH;                 /* GO BACK TO POINT OF CALL    */ 01487000
@EL00004 DS    0H                                                  0451 01488000
@EF00004 DS    0H                                                  0451 01489000
@ER00004 LM    @14,@12,12(@13)                                     0451 01490000
         BR    @14                                                 0451 01491000
*CMPRND:  /***********************************************************/ 01492000
*         /* THIS SUBROUTINE WILL COMPARE THE NEW PROCSIZE, OR THE   */ 01493000
*         /* NEW UNIT NAME, OR BOTH, TO THE EXISTING VALUES IN A     */ 01494000
*         /* PROCNAME DATA FIELD AND SET A FLAG INDICATING EQUAL OR  */ 01495000
*         /* NOT EQUAL.                                              */ 01496000
*         /***********************************************************/ 01497000
*         PROC;                                                    0452 01498000
CMPRND   STM   @14,@03,12(@13)                                     0452 01499000
         STM   @05,@12,40(@13)                                     0452 01500000
*         PRDFLG = '0'B;              /* INIT THIS CONTROL FLAG      */ 01501000
         NI    PRDFLG,B'11111101'                                  0453 01502000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF THE PROCNAME DATAFLD    */ 01503000
         LR    UADSRPTR,HEDBPTR                                    0454 01504000
         AL    UADSRPTR,UADSRDAT(,DROBPTR)                         0454 01505000
*         /* DOES THE COMMAND SPECIFY A PROCSIZE?                    */ 01506000
*         IF SIZESW = '1'B                                         0455 01507000
*           THEN                      /* YES,                        */ 01508000
         TM    SIZESW(CTRLTABP),B'01000000'                        0455 01509000
         BNO   @RF00455                                            0455 01510000
*             /* COMPARE IT TO THE EXISTING PROCSIZE.                */ 01511000
*             IF NEWRSIZ ^= UADSRSIZ                               0456 01512000
*               THEN                  /* THEY ARE NOT EQUAL          */ 01513000
         CLC   NEWRSIZ(2),UADSRSIZ(UADSRPTR)                       0456 01514000
         BNE   @RT00456                                            0456 01515000
*                 RETURN;             /* LEAVE FLAG AT '0' & RETURN  */ 01516000
*         /* DOES THE COMMAND SPECIFY A UNIT NAME?                   */ 01517000
*         IF UNITSW = '1'B                                         0458 01518000
*           THEN                      /* YES,                        */ 01519000
@RF00455 TM    UNITSW(CTRLTABP),B'00100000'                        0458 01520000
         BNO   @RF00458                                            0458 01521000
*             /* COMPARE IT TO THE EXISTING UNIT NAME.               */ 01522000
*             IF NEWUNAM ^= UADSUNAM                               0459 01523000
*               THEN                  /* THEY ARE NOT EQUAL          */ 01524000
         CLC   NEWUNAM(8),UADSUNAM(UADSRPTR)                       0459 01525000
         BNE   @RT00459                                            0459 01526000
*                 RETURN;             /* LEAVE FLAG AT '0' & RETURN  */ 01527000
*         PRDFLG = '1'B;              /* 1- EQUAL, OR NO NEW DATA  0461 01528000
*                                        SPECIFIED IN THE COMMAND    */ 01529000
@RF00458 OI    PRDFLG,B'00000010'                                  0461 01530000
*         END CMPRND;                 /* RETURN TO POINT OF CALL     */ 01531000
@EL00005 DS    0H                                                  0462 01532000
@EF00005 DS    0H                                                  0462 01533000
@ER00005 LM    @14,@03,12(@13)                                     0462 01534000
         LM    @05,@12,40(@13)                                     0462 01535000
         BR    @14                                                 0462 01536000
*DLPRTS:  /***********************************************************/ 01537000
*         /* THIS SUBROUTINE WILL SEARCH FOR A PROCNAME IN THE       */ 01538000
*         /* TOTAL LATERAL CHAIN (ALL PROCS IN THE TREE).            */ 01539000
*         /***********************************************************/ 01540000
*         PROC;                                                    0463 01541000
DLPRTS   STM   @14,@01,12(@13)                                     0463 01542000
         STM   @05,@12,40(@13)                                     0463 01543000
*DLPRTS2: /* BEGINNING OF THE SEARCH LOOP.                           */ 01544000
*         UADSRPTR = HEDBPTR+UADSRDAT;/* REF THE PROCNAME DATA FIELD */ 01545000
DLPRTS2  L     @10,UADSRDAT(,DROBPTR)                              0464 01546000
         LR    UADSRPTR,HEDBPTR                                    0464 01547000
         ALR   UADSRPTR,@10                                        0464 01548000
*         /* IS THIS THE DESIRED PROCNAME?                           */ 01549000
*         IF DLPROC = UADSRNAM                                     0465 01550000
*           THEN                      /* YES,                        */ 01551000
         CLC   DLPROC(8),UADSRNAM(UADSRPTR)                        0465 01552000
         BNE   @RF00465                                            0465 01553000
*             DO;                                                  0466 01554000
*               RDATSAVE = UADSRDAT;  /* SAVE OFFSET TO ITS DATAFLD  */ 01555000
         ST    @10,RDATSAVE                                        0467 01556000
*               NPRSAVE = DROBPTR;    /* SAVE ADDR OF THIS OFFSET BK */ 01557000
         LR    NPRSAVE,DROBPTR                                     0468 01558000
*               NDFPTR = UADSRPTR;    /* SAVE ADDR OF THIS DATA FLD  */ 01559000
         ST    UADSRPTR,NDFPTR                                     0469 01560000
*               RETURN;               /* RETURN TO POINT OF CALL     */ 01561000
@EL00006 DS    0H                                                  0470 01562000
@EF00006 DS    0H                                                  0470 01563000
@ER00006 LM    @14,@01,12(@13)                                     0470 01564000
         LM    @05,@12,40(@13)                                     0470 01565000
         BR    @14                                                 0470 01566000
*             END;                                                 0471 01567000
*         /* ARE THERE MORE PROCNAMES? CHECK THE PTR TO THE NEXT     */ 01568000
*         /* PROCNAME OFFSET BLOCK. ZERO INDICATES END OF TOTAL      */ 01569000
*         /* LATERAL CHAIN.                                          */ 01570000
*         IF UADSRNEX ^= 0                                         0472 01571000
*           THEN                      /* THERE ARE MORE PROCNAMES    */ 01572000
@RF00465 SLR   @10,@10                                             0472 01573000
         ICM   @10,7,UADSRNEX(DROBPTR)                             0472 01574000
         LTR   @10,@10                                             0472 01575000
         BZ    @RF00472                                            0472 01576000
*             DO;                                                  0473 01577000
*               DROBPTR = HEDBPTR     /* REF THE NEXT PROCNAME OFF-  */ 01578000
*                 +UADSRNEX;          /* SET BLOCK                   */ 01579000
         ALR   @10,HEDBPTR                                         0474 01580000
         LR    DROBPTR,@10                                         0474 01581000
*               GOTO DLPRTS2;         /* CONTINUE THE SEARCH         */ 01582000
         B     DLPRTS2                                             0475 01583000
*             END;                                                 0476 01584000
*           ELSE                      /* THE PROCNAME DOES NOT EXIST    01585000
*                                        IN THIS TREE                */ 01586000
*             NPRSAVE = 0;            /* 0- PROCNAME NOT FOUND       */ 01587000
@RF00472 SLR   NPRSAVE,NPRSAVE                                     0477 01588000
*         END DLPRTS;                 /* RETURN TO POINT OF CALL     */ 01589000
         B     @EL00006                                            0478 01590000
*CTRCHK:  /***********************************************************/ 01591000
*         /* THIS SUBROUTINE WILL CHECK THE USE COUNTER IN THE PROC- */ 01592000
*         /* NAME DATA FIELD. IT CANNOT EXCEED 255. IF IT DOES,      */ 01593000
*         /* CONTROL RETURNS TO IKJEFA20 WITH MSGNMBR IN CTRLTAB     */ 01594000
*         /* SET TO 30. IF THE COUNTER IS < 255, IT IS INCREMENTED.  */ 01595000
*         /***********************************************************/ 01596000
*         PROC;                                                    0479 01597000
CTRCHK   STM   @14,@12,12(@13)                                     0479 01598000
*         /* IS THE USE CTR 255 (MAXIMUM)?                           */ 01599000
*         IF UADSRCTR = 255                                        0480 01600000
*           THEN                      /* CTR LIMIT HAS BEEN REACHED  */ 01601000
         CLI   UADSRCTR(UADSRPTR),255                              0480 01602000
         BNE   @RF00480                                            0480 01603000
*             DO;                                                  0481 01604000
*               MSGNMBR = 30;         /* SET MSGNO IN CTRLTAB        */ 01605000
         MVI   MSGNMBR(CTRLTABP),X'1E'                             0482 01606000
*               RETURN TO WORKEND;    /* RETURN TO IKJEFA20          */ 01607000
         LA    @14,WORKEND                                         0483 01608000
         LM    @15,@12,16(@13)                                     0483 01609000
         BR    @14                                                 0483 01610000
*             END;                                                 0484 01611000
*         UADSRCTR = UADSRCTR+1;      /* INCREMENT THE USE COUNTER   */ 01612000
@RF00480 LA    @10,1                                               0485 01613000
         SLR   @15,@15                                             0485 01614000
         IC    @15,UADSRCTR(,UADSRPTR)                             0485 01615000
         ALR   @10,@15                                             0485 01616000
         STC   @10,UADSRCTR(,UADSRPTR)                             0485 01617000
*         END CTRCHK;                 /* RETURN TO POINT OF CALL     */ 01618000
@EL00007 DS    0H                                                  0486 01619000
@EF00007 DS    0H                                                  0486 01620000
@ER00007 LM    @14,@12,12(@13)                                     0486 01621000
         BR    @14                                                 0486 01622000
*IKJFRSP: /***********************************************************/ 01623000
*         /* THIS SUBROUTINE WILL INTERFACE WITH THE FREESPACE       */ 01624000
*         /* ROUTINE (IKJEFA54) AND CHECK ITS RETURN CODE. IF        */ 01625000
*         /* FREESPACE WAS SUCCESSFUL, CONTROL WILL BE PASSED BACK   */ 01626000
*         /* TO THE POINT OF CALL. IF NOT, CONTROL WILL BE RETURNED  */ 01627000
*         /* TO THE CHANGE CP (IKJEFA20) WHICH WILL ISSUE THE        */ 01628000
*         /* APPROPRIATE ERROR MESSAGE.                              */ 01629000
*         /***********************************************************/ 01630000
*         PROC;                                                    0487 01631000
IKJFRSP  STM   @14,@12,@SA00008                                    0487 01632000
*         RFY R1 RSTD;                                             0488 01633000
*         R1 = ADDR(GETFREE);         /* PTR TO FREESPACE PARMLIST   */ 01634000
         LA    R1,GETFREE                                          0489 01635000
*         CALL IKJEFA54;              /* GO TO THE FREESPACE ROUTINE */ 01636000
         L     @15,@CV00095                                        0490 01637000
         BALR  @14,@15                                             0490 01638000
*         RFY R1 UNRSTD;                                           0491 01639000
*         RFY R15 RSTD;               /* RESTRICT THE RETURN CODE REG*/ 01640000
*         RETCODE = R15;              /* SAVE THE RETURN CODE        */ 01641000
         ST    R15,RETCODE(,CTRLTABP)                              0493 01642000
*         RFY R15 UNRSTD;             /* RELEASE THE RETURN CODE REG */ 01643000
*         /* CHECK THE FREESPACE RETURN CODE.                        */ 01644000
*         IF RETCODE ^= 0                                          0495 01645000
*           THEN                      /* FREESPACE UNSUCCESSFUL      */ 01646000
         L     @10,RETCODE(,CTRLTABP)                              0495 01647000
         LTR   @10,@10                                             0495 01648000
         BZ    @RF00495                                            0495 01649000
*             DO;                                                  0496 01650000
*               SRCHIND = 0;          /* 0- PROCESSING OF THIS USERID   01651000
*                                        IS COMPLETED                */ 01652000
         MVI   SRCHIND(CTRLTABP),X'00'                             0497 01653000
*               MSGNMBR = 24;         /* SET ERROR MSG NUMBER        */ 01654000
         MVI   MSGNMBR(CTRLTABP),X'18'                             0498 01655000
*               RETURN TO WORKEND;    /* CHANGE CP WILL ISSUE THE  0499 01656000
*                                        ERROR MSG & CONTINUE WITH 0499 01657000
*                                        THE NEXT USERID, IF ANY     */ 01658000
         LA    @14,WORKEND                                         0499 01659000
         LM    @15,@12,@SA00008+4                                  0499 01660000
         BR    @14                                                 0499 01661000
*             END;                                                 0500 01662000
*         END IKJFRSP;                /* GO BACK TO POINT OF CALL    */ 01663000
@EL00008 DS    0H                                                  0501 01664000
@EF00008 DS    0H                                                  0501 01665000
@ER00008 LM    @14,@12,@SA00008                                    0501 01666000
         BR    @14                                                 0501 01667000
*         END IKJEFA23                                             0502 01668000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 01669000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 01670000
*;                                                                 0502 01671000
@DATA    DS    0H                                                       01672000
@CH00055 DC    H'12'                                                    01673000
@CH00062 DC    H'24'                                                    01674000
@DATD    DSECT                                                          01675000
         DS    0F                                                       01676000
@SA00001 DS    18F                                                      01677000
@SA00003 DS    0F                                                       01678000
@SA00008 DS    0F                                                       01679000
         DS    15F                                                      01680000
IKJEFA23 CSECT                                                          01681000
         DS    0F                                                       01682000
@DATD    DSECT                                                          01683000
         DS    0D                                                       01684000
OPWSAVE  DS    A                                                        01685000
OACSAVE  DS    A                                                        01686000
RDATSAVE DS    A                                                        01687000
NDFPTR   DS    A                                                        01688000
CSNSAVE  DS    A                                                        01689000
PRUNOFS  DS    A                                                        01690000
SAVE14   DS    A                                                        01691000
NEWRSIZ  DS    H                                                        01692000
DLPROC   DS    CL8                                                      01693000
NEWUNAM  DS    CL8                                                      01694000
         DS    CL2                                                      01695000
GETFREE  DS    CL12                                                     01696000
         ORG   GETFREE                                                  01697000
READBUFF DS    AL4                                                      01698000
NUMBLOKS DS    AL2                                                      01699000
AREALNTH DS    AL2                                                      01700000
AREAOFST DS    AL4                                                      01701000
         ORG   GETFREE+12                                               01702000
CFLAGS   DS    CL2                                                      01703000
         ORG   CFLAGS                                                   01704000
STGFLG   DS    BL1                                                      01705000
@NM00023 EQU   CFLAGS+0                                                 01706000
FLGSAVE  EQU   CFLAGS+0                                                 01707000
FLDFLG   EQU   CFLAGS+0                                                 01708000
FLDFLG2  EQU   CFLAGS+0                                                 01709000
FLDFLG3  EQU   CFLAGS+0                                                 01710000
PRDFLG   EQU   CFLAGS+0                                                 01711000
         ORG   CFLAGS+2                                                 01712000
         DS    CL2                                                      01713000
DROBDMDL DS    CL24                                                     01714000
         ORG   DROBDMDL                                                 01715000
@NM00024 DS    CL4                                                      01716000
@NM00025 DS    CL8                                                      01717000
@NM00026 DS    BL2                                                      01718000
TEMPRSIZ DS    AL2                                                      01719000
TEMPUNAM DS    CL8                                                      01720000
         ORG   DROBDMDL+24                                              01721000
DECSIZE  DS    CL8                                                      01722000
IKJEFA23 CSECT                                                          01723000
         DS    0F                                                       01724000
@SIZDATD DC    AL1(1)                                                   01725000
         DC    AL3(@ENDDATD-@DATD)                                      01726000
@CV00094 DC    V(IKJEFA53)                                              01727000
@CV00095 DC    V(IKJEFA54)                                              01728000
         DS    0D                                                       01729000
@CC00205 DC    C'* '                                                    01730000
@CB00179 DC    X'0000'                                                  01731000
IKJEFA23 CSECT                                                          01732000
         DS   0H                                                        01733000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   01734000
@DATD    DSECT                                                          01735000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                01736000
@ENDDATD EQU   *                                                        01737000
IKJEFA23 CSECT                                                          01738000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       01739000
@01      EQU   01                                                       01740000
@02      EQU   02                                                       01741000
@03      EQU   03                                                       01742000
@04      EQU   04                                                       01743000
@05      EQU   05                                                       01744000
@06      EQU   06                                                       01745000
@07      EQU   07                                                       01746000
@08      EQU   08                                                       01747000
@09      EQU   09                                                       01748000
@10      EQU   10                                                       01749000
@11      EQU   11                                                       01750000
@12      EQU   12                                                       01751000
@13      EQU   13                                                       01752000
@14      EQU   14                                                       01753000
@15      EQU   15                                                       01754000
FRSTDROB EQU   @10                                                      01755000
NEWDFPTR EQU   @02                                                      01756000
LASTOB   EQU   @07                                                      01757000
ODFPTR   EQU   @08                                                      01758000
ADATSAVE EQU   @04                                                      01759000
RNEXSAVE EQU   @02                                                      01760000
NPRSAVE  EQU   @02                                                      01761000
OPRSAVE  EQU   @09                                                      01762000
CTRLTABP EQU   @05                                                      01763000
UADSRPTR EQU   @04                                                      01764000
DROBPTR  EQU   @03                                                      01765000
DNOBPTR  EQU   @07                                                      01766000
DPOBPTR  EQU   @02                                                      01767000
HEDBPTR  EQU   @06                                                      01768000
R1       EQU   @01                                                      01769000
R15      EQU   @15                                                      01770000
LNGTHREG EQU   @02                                                      01771000
DHED     EQU   0                                                        01772000
UADSMHDR EQU   DHED                                                     01773000
UADSBN01 EQU   UADSMHDR+12                                              01774000
UADSMAXC EQU   UADSMHDR+14                                              01775000
UADSATTR EQU   DHED+16                                                  01776000
UADSPWD1 EQU   DHED+24                                                  01777000
DPOB     EQU   0                                                        01778000
PFLG01   EQU   DPOB                                                     01779000
UADSPNEX EQU   DPOB+1                                                   01780000
UADSPSUB EQU   DPOB+4                                                   01781000
DNOB     EQU   0                                                        01782000
AFLG01   EQU   DNOB                                                     01783000
UADSANEX EQU   DNOB+1                                                   01784000
UADSASUB EQU   DNOB+4                                                   01785000
DROB     EQU   0                                                        01786000
FLGR01   EQU   DROB                                                     01787000
UADSRNEX EQU   DROB+1                                                   01788000
UADSRDAT EQU   DROB+8                                                   01789000
DROBD    EQU   0                                                        01790000
UADSRCTR EQU   DROBD                                                    01791000
UADSRNAM EQU   DROBD+4                                                  01792000
UADSRSIZ EQU   DROBD+14                                                 01793000
UADSUNAM EQU   DROBD+16                                                 01794000
CTRLTAB  EQU   0                                                        01795000
DATALPTR EQU   CTRLTAB+8                                                01796000
NODELPTR EQU   CTRLTAB+12                                               01797000
BLKCNT   EQU   CTRLTAB+16                                               01798000
HEADADDR EQU   CTRLTAB+17                                               01799000
PASSADDR EQU   CTRLTAB+20                                               01800000
ACCTADDR EQU   CTRLTAB+24                                               01801000
PROCADDR EQU   CTRLTAB+28                                               01802000
RETCODE  EQU   CTRLTAB+32                                               01803000
SRCHIND  EQU   CTRLTAB+37                                               01804000
MSGNMBR  EQU   CTRLTAB+38                                               01805000
TRCHGE   EQU   CTRLTAB+39                                               01806000
SIZESW   EQU   CTRLTAB+39                                               01807000
UNITSW   EQU   CTRLTAB+39                                               01808000
NLSTTAB  EQU   0                                                        01809000
PASSWD   EQU   NLSTTAB+9                                                01810000
ACCTNO   EQU   NLSTTAB+18                                               01811000
PROCNM   EQU   NLSTTAB+58                                               01812000
DLSTTAB  EQU   0                                                        01813000
DPROCNM  EQU   DLSTTAB+58                                               01814000
SIZE     EQU   DLSTTAB+66                                               01815000
UNITNAM  EQU   DLSTTAB+68                                               01816000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01817000
@NM00022 EQU   DLSTTAB+76                                               01818000
@NM00021 EQU   DLSTTAB+18                                               01819000
@NM00020 EQU   DLSTTAB+17                                               01820000
@NM00019 EQU   DLSTTAB+9                                                01821000
@NM00018 EQU   DLSTTAB+1                                                01822000
@NM00017 EQU   DLSTTAB                                                  01823000
@NM00016 EQU   NLSTTAB+17                                               01824000
@NM00015 EQU   NLSTTAB+1                                                01825000
@NM00014 EQU   NLSTTAB                                                  01826000
@NM00013 EQU   CTRLTAB+36                                               01827000
@NM00012 EQU   CTRLTAB+4                                                01828000
@NM00011 EQU   CTRLTAB                                                  01829000
@NM00010 EQU   DROBD+12                                                 01830000
@NM00009 EQU   DROBD+1                                                  01831000
@NM00008 EQU   DROB+4                                                   01832000
@NM00007 EQU   DROB                                                     01833000
UADSADAT EQU   DNOB+8                                                   01834000
@NM00006 EQU   DNOB                                                     01835000
UADSPDAT EQU   DPOB+8                                                   01836000
@NM00005 EQU   DPOB                                                     01837000
@NM00004 EQU   DHED+40                                                  01838000
UADSDEST EQU   DHED+32                                                  01839000
UADSPERP EQU   DHED+28                                                  01840000
UADSUPTP EQU   DHED+20                                                  01841000
UADSINST EQU   DHED+18                                                  01842000
@NM00003 EQU   UADSATTR                                                 01843000
USATR03  EQU   UADSATTR                                                 01844000
USATR02  EQU   UADSATTR                                                 01845000
USATR01  EQU   UADSATTR                                                 01846000
USATR00  EQU   UADSATTR                                                 01847000
@NM00002 EQU   UADSBN01+1                                               01848000
UADSEXPF EQU   UADSBN01+1                                               01849000
UADSNUSP EQU   UADSBN01+1                                               01850000
@NM00001 EQU   UADSBN01                                                 01851000
UADSUSER EQU   UADSMHDR+4                                               01852000
UADSFSQP EQU   UADSMHDR+2                                               01853000
UADSBLNG EQU   UADSMHDR                                                 01854000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01855000
@RT00046 EQU   CHALLPR                                                  01856000
@RT00052 EQU   NPRLS                                                    01857000
@RT00054 EQU   CHKODF                                                   01858000
@RT00062 EQU   PRNEXT                                                   01859000
@RT00068 EQU   PRNEXT                                                   01860000
@RT00072 EQU   CHKCSN3                                                  01861000
@RT00083 EQU   PRNEXT                                                   01862000
@RF00104 EQU   CHGEOK                                                   01863000
@RF00103 EQU   CHGEOK                                                   01864000
@RT00113 EQU   PRCHGE1                                                  01865000
@RT00117 EQU   PRCHGE6                                                  01866000
@RT00124 EQU   PRCHGE2                                                  01867000
@RT00159 EQU   NPRDF                                                    01868000
@RT00184 EQU   CHKDLDF                                                  01869000
@RT00204 EQU   PRCHGE4                                                  01870000
@RT00218 EQU   PRCHGE6                                                  01871000
@RT00225 EQU   PRCHGE5                                                  01872000
@RT00243 EQU   ALLPRDF                                                  01873000
@RT00247 EQU   NPRFND                                                   01874000
@RT00252 EQU   PRNFND                                                   01875000
@RT00254 EQU   PROCTS2                                                  01876000
@RT00257 EQU   CSNDOK                                                   01877000
@RT00259 EQU   PRNFND                                                   01878000
@RT00265 EQU   TSPREP                                                   01879000
@RT00268 EQU   CSNDOK2                                                  01880000
@RT00294 EQU   RCHNPR2                                                  01881000
@RT00311 EQU   PRNEXT3                                                  01882000
@RT00315 EQU   PRNFND2                                                  01883000
@RT00336 EQU   SRCHND                                                   01884000
@RT00338 EQU   PRNEXT3                                                  01885000
@RT00347 EQU   CHGDF                                                    01886000
@RF00350 EQU   CHGDF                                                    01887000
@RT00361 EQU   SRCHND3                                                  01888000
@RF00383 EQU   PRNEXT4                                                  01889000
@RF00396 EQU   CHGEOK                                                   01890000
@RF00395 EQU   CHGEOK                                                   01891000
@RC00405 EQU   @EL00001                                                 01892000
WORKEND  EQU   @EL00001                                                 01893000
@RF00449 EQU   @EL00004                                                 01894000
@RT00456 EQU   @EL00005                                                 01895000
@RT00459 EQU   @EL00005                                                 01896000
@RF00495 EQU   @EL00008                                                 01897000
@PB00008 EQU   @EL00001                                                 01898000
@PB00007 EQU   @PB00008                                                 01899000
@PB00006 EQU   @PB00007                                                 01900000
@PB00005 EQU   @PB00006                                                 01901000
@PB00004 EQU   @PB00005                                                 01902000
@PB00003 EQU   @PB00004                                                 01903000
@PB00002 EQU   @PB00003                                                 01904000
@ENDDATA EQU   *                                                        01905000
         END   IKJEFA23                                                 01906000
