         TITLE 'IKJEFA32  --  ACCOUNT/DELETE EXCISOR ROUTINE           *00001000
                        '                                               00002000
IKJEFA32 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA32  73.323'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*          COMPTR = R1;               /* SAVE POINTER TO COMAREA     */ 00022000
         LR    COMPTR,R1                                           0029 00023000
*          RFY R1 RSTD;                                            0030 00024000
*          MSGNO = 17;                /* INIT MSGNO                  */ 00025000
         MVC   MSGNO(2,COMPTR),@CH00217                            0031 00026000
*          RTNCODE = 0;               /* CLEAR RETURN CODE AREA      */ 00027000
         SLR   @10,@10                                             0032 00028000
         LR    RTNCODE,@10                                         0032 00029000
*          LASTOP = 0;                /* CLEAR OFFSET BLOCK PTR      */ 00030000
         LR    LASTOP,@10                                          0033 00031000
*          SPAZPB = SPAZPB&&SPAZPB;   /* CLEAR FREESPACE PARM BLOCK  */ 00032000
         XC    SPAZPB(12),SPAZPB                                   0034 00033000
*          DPLBS = DPLB;              /* SAVE DELETE POINT LIST      */ 00034000
         L     @10,DPLPTR(,COMPTR)                                 0035 00035000
         MVC   DPLBS(121),DPLB(@10)                                0035 00036000
*          /* IDENTIFY BUFFER                                        */ 00037000
*          HEDBPTR = ACIOBUFR;        /* HEDBPTR TO START OF BUFFER  */ 00038000
         L     @09,ACIOPTR(,COMPTR)                                0036 00039000
         SLR   HEDBPTR,HEDBPTR                                     0036 00040000
         ICM   HEDBPTR,7,ACIOBUFR(@09)                             0036 00041000
*          /* CHK TO SET GENERAL ASTERISK PROCESSING FLAG            */ 00042000
*          IF DPCLSF1 = '1'B          /* CHK FOR PASSWORD = *        */ 00043000
*           | DACLSF1 = '1'B          /*   OR ACCTNMBR = *           */ 00044000
*            THEN                     /* YES,                        */ 00045000
         TM    DPCLSF1(@10),B'10000000'                            0037 00046000
         BO    @RT00037                                            0037 00047000
         TM    DACLSF1(@10),B'10000000'                            0037 00048000
         BNO   @RF00037                                            0037 00049000
@RT00037 DS    0H                                                  0038 00050000
*              STRNOW = '1'B;         /* SET GENERAL ASTERISK FLAG   */ 00051000
         OI    STRNOW,B'10000000'                                  0038 00052000
*            ELSE                     /* NO,                         */ 00053000
*              STRNOW = '0'B;         /* RESET GENERAL ASTERISK FLAG */ 00054000
         B     @RC00037                                            0039 00055000
@RF00037 NI    STRNOW,B'01111111'                                  0039 00056000
*          /*  VALIDATE PASSWORD SUPPORT FOR CURRENT USERID. CHECK IF   00057000
*          ASTERISK WAS ENTERED FOR PASSWORD LEVEL.  IF YES,       0040 00058000
*          PASSWORD SUPPORT IS NOT NEEDED SO GO TO CHECK FOR ACCOUNT    00059000
*          NUMBER SUPPORT. IF CURRENT USER MEMBER CONTAINS AN INITIAL   00060000
*          POINTER TO A PASSWORD DATA FIELD SET PASSWORD SUPPORT FLAG   00061000
*          IN DELETE CONTROL FLAGS AND GO TO CHECK FOR ACCOUNT NUMBER   00062000
*          SUPPORT.                                                  */ 00063000
*          UADSNPTR = UADSPWD1+HEDBPTR;/* PTR TO 1ST PASSWORD        */ 00064000
@RC00037 LR    UADSNPTR,HEDBPTR                                    0040 00065000
         AL    UADSNPTR,UADSPWD1(,HEDBPTR)                         0040 00066000
*          IF UADSNDAT ^= 0           /* CHK IF ANY PASSWD DATA PTR  */ 00067000
*            THEN                     /* YES,                        */ 00068000
         L     @10,UADSNDAT(,UADSNPTR)                             0041 00069000
         LTR   @10,@10                                             0041 00070000
         BZ    @RF00041                                            0041 00071000
*              GPWDSP = '1'B;         /* SET GNL PASSWD SUPPORT FLAG */ 00072000
         OI    GPWDSP(COMPTR),B'01000000'                          0042 00073000
*            ELSE                                                  0043 00074000
*              /* CHK IF ASTERISK WAS CURRENTLY ENTERED FOR PASSWORDS*/ 00075000
*              IF DPCLSF1 = '0'B      /* CHK ASTERISK FLAG IN DPL    */ 00076000
*                THEN                 /* NO,                         */ 00077000
         B     @RC00041                                            0043 00078000
@RF00041 L     @10,DPLPTR(,COMPTR)                                 0043 00079000
         TM    DPCLSF1(@10),B'10000000'                            0043 00080000
         BNZ   @RF00043                                            0043 00081000
*                  DO;                                             0044 00082000
*                  MSGNO = 10;        /* SET MESSAGE INDEX           */ 00083000
         MVC   MSGNO(2,COMPTR),@CH00221                            0045 00084000
*                  GOTO DEL32END;     /* RETURN TO IKJEFA30          */ 00085000
         B     DEL32END                                            0046 00086000
*                  END;                                            0047 00087000
*          /*  VALIDATE ACCOUNT NUMBER SUPPORT IN THE SAME MANNER AS    00088000
*          FOR PASSWORDS.  FAILURE TO FIND REQUIRED SUPPORT RESULTS     00089000
*          IN AN ERROR MESSAGE AND AN ERROR EXIT.                    */ 00090000
*          UADSNPTR = UADSNSUB+HEDBPTR;/* POINT TO 1ST ACCT NUM      */ 00091000
@RF00043 DS    0H                                                  0048 00092000
@RC00041 LR    @10,HEDBPTR                                         0048 00093000
         AL    @10,UADSNSUB(,UADSNPTR)                             0048 00094000
         LR    UADSNPTR,@10                                        0048 00095000
*          IF UADSNDAT ^= 0           /* CHK IF ANY ACCTN DATA PTR   */ 00096000
*            THEN                     /* YES,                        */ 00097000
         L     @10,UADSNDAT(,UADSNPTR)                             0049 00098000
         LTR   @10,@10                                             0049 00099000
         BZ    @RF00049                                            0049 00100000
*              GACNSP = '1'B;         /* SET GNRL ACCTN SUPPORT FLAG */ 00101000
         OI    GACNSP(COMPTR),B'00100000'                          0050 00102000
*            ELSE                                                  0051 00103000
*              /* CHK IF ASTERISK WAS CURRENTLY ENTERED FOR ACCT NMBR*/ 00104000
*              IF DACLSF1 = '0'B      /* CHK ASTERISK FLAG IN DPL    */ 00105000
*                THEN                 /* NO,                         */ 00106000
         B     @RC00049                                            0051 00107000
@RF00049 L     @10,DPLPTR(,COMPTR)                                 0051 00108000
         TM    DACLSF1(@10),B'10000000'                            0051 00109000
         BNZ   @RF00051                                            0051 00110000
*                  DO;                                             0052 00111000
*                  MSGNO = 11;        /* SET MESSAGE INDEX           */ 00112000
         MVC   MSGNO(2,COMPTR),@CH00223                            0053 00113000
*                  GOTO DEL32END;     /* RETURN TO IKJEFA30          */ 00114000
         B     DEL32END                                            0054 00115000
*                  END;                                            0055 00116000
*          /* SIMULATE USERID OFFSET BLOCK                           */ 00117000
*          DUOFSUB = UADSPWD1;        /* OFFSET TO FIRST PASSWD      */ 00118000
@RF00051 DS    0H                                                  0056 00119000
@RC00049 L     @10,DPLPTR(,COMPTR)                                 0056 00120000
         L     @09,UADSPWD1(,HEDBPTR)                              0056 00121000
         ST    @09,DUOFSUB(,@10)                                   0056 00122000
*          DUOFDAT = 4;               /* OFFSET TO USERID NAME       */ 00123000
         MVC   DUOFDAT(4,@10),@CF00224                             0057 00124000
*          DUFLOC = ADDR(DUSRID1);    /* OFFSET TO PSEUDO-OFFSETS    */ 00125000
         LA    @09,DUSRID1(,@10)                                   0058 00126000
         STCM  @09,7,DUFLOC(@10)                                   0058 00127000
*LOCDPP1:  /* SET UP TO INITIALIZE PASSWORD LEVEL                    */ 00128000
*          UADSNPTR = UADSPWD1+HEDBPTR;/* PTR TO 1ST PASSWORD OB      * 00129000
LOCDPP1  LR    UADSNPTR,HEDBPTR                                    0059 00130000
         AL    UADSNPTR,UADSPWD1(,HEDBPTR)                         0059 00131000
*          LEVLP = ADDR(DPASWD);      /* SET TEST LEVEL AT PASSWORD  */ 00132000
         L     @10,DPLPTR(,COMPTR)                                 0060 00133000
         LA    LEVLP,DPASWD(,@10)                                  0060 00134000
*          /* CHK IF CURRENT LEVEL IS ASSIGNED DP LEVEL              */ 00135000
*          IF LEVLP = DADP            /* DO LEVELS MATCH             */ 00136000
*            THEN                     /* YES,                        */ 00137000
         C     LEVLP,DADP(,@10)                                    0061 00138000
         BE    @RT00061                                            0061 00139000
*              GOTO  LOCDPP3;         /* GO TO FILL OUT SUBLEVELS    */ 00140000
*          /* LOCATE LAST PDE ON DELETE LEVEL                        */ 00141000
*          CALL  LOCLAL;              /* GO TO GET PTRS. ON RETURN 0063 00142000
*                                        UADSNPTR POINTS TO CURRENT     00143000
*                                        OFFSET BLOCK ON DELETE LEVEL*/ 00144000
         BAL   @14,LOCLAL                                          0063 00145000
*          /* SET UP TO INITIALIZE ACCOUNT NUMBER LEVEL              */ 00146000
*          UADSNPTR=UADSNSUB+HEDBPTR;  /* PTR TO 1ST ACCTNMBR OB     */ 00147000
         LR    @10,HEDBPTR                                         0064 00148000
         AL    @10,UADSNSUB(,UADSNPTR)                             0064 00149000
         LR    UADSNPTR,@10                                        0064 00150000
*          LEVLP = ADDR(DACCTN);       /* SET TEST LEVEL AT ACCTNMBR */ 00151000
         L     @10,DPLPTR(,COMPTR)                                 0065 00152000
         LA    LEVLP,DACCTN(,@10)                                  0065 00153000
*          /* CHK IF CURRENT LEVEL IS ASSIGNED DP LEVEL              */ 00154000
*          IF LEVLP = DADP            /* DO LEVELS MATCH             */ 00155000
*            THEN                     /* YES,                        */ 00156000
         C     LEVLP,DADP(,@10)                                    0066 00157000
         BE    @RT00066                                            0066 00158000
*              GOTO  LOCDPP3;         /* GO TO FILL OUT SUBLEVELS    */ 00159000
*          /* LOCATE LAST PDE ON DELETE LEVEL                        */ 00160000
*          CALL  LOCLAL;              /* GO TO GET PTRS. ON RETURN 0068 00161000
*                                        UADSNPTR POINTS TO CURRENT     00162000
*                                        OFFSET BLOCK ON DELETE LEVEL*/ 00163000
         BAL   @14,LOCLAL                                          0068 00164000
*          /* CURRENT DELETE POINT AND ASSIGNED DELETE POINT MUST BE */ 00165000
*          /*   CONCURRENT AT PROCNAME LEVEL                         */ 00166000
*          UADSNPTR=UADSNSUB+HEDBPTR; /* PTR TO 1ST PROCNAME OB      */ 00167000
         LR    @10,HEDBPTR                                         0069 00168000
         AL    @10,UADSNSUB(,UADSNPTR)                             0069 00169000
         LR    UADSNPTR,@10                                        0069 00170000
*          LEVLP = ADDR(DROCNM);      /* SET LEVEL AT PROCNAME       */ 00171000
         L     LEVLP,DPLPTR(,COMPTR)                               0070 00172000
         LA    LEVLP,DROCNM(,LEVLP)                                0070 00173000
*          GOTO  LOCDPP3;             /* GO TO FIND DELETE ELEMENT   */ 00174000
         B     LOCDPP3                                             0071 00175000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00176000
* /*                                                                 */ 00177000
* /*  L O C D P P 2 :   LOCATE BY THE DELETE POINT LEVEL POINTER,    */ 00178000
* /*     THE FIRST OFFSET BLOCK WHICH IS DEPENDENT ON THE DELETE     */ 00179000
* /*     NAME(S) SPECIFIED IN THE COMMAND ENTRY                      */ 00180000
* /*                                                                 */ 00181000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00182000
*LOCDPP2:  /* GET PTR TO 1ST OFFSET BLOCK AT DELETE POINT LEVEL      */ 00183000
*          /* FILL IN DPL OFFSET FIELDS DOWN THROUGH DELETE LEVEL(S) */ 00184000
*          /* SET LEVEL POINTER TO DELETE LEVEL                      */ 00185000
*          /* CHK IF DELETE LEVEL IS AT PASSWORD LEVEL               */ 00186000
*          IF LEVLP = ADDR(DPASWD)    /* CHK FOR PASSWORD LEVEL PTR  */ 00187000
*            THEN                     /* YES,                        */ 00188000
LOCDPP2  L     @10,DPLPTR(,COMPTR)                                 0072 00189000
         LA    @09,DPASWD(,@10)                                    0072 00190000
         CR    LEVLP,@09                                           0072 00191000
         BNE   @RF00072                                            0072 00192000
*              UADSNPTR=DUOFSUB+HEDBPTR; /* PTR TO 1ST PASSWD OFFS   */ 00193000
         LR    UADSNPTR,HEDBPTR                                    0073 00194000
         AL    UADSNPTR,DUOFSUB(,@10)                              0073 00195000
*            ELSE                                                  0074 00196000
*              /* CHK IF DELETE LEVEL IS AT ACCOUNT NUMBER LEVEL     */ 00197000
*              IF LEVLP = ADDR(DACCTN)/* CHK FOR ACCTNMBR LEVEL PTR  */ 00198000
*                THEN                 /* YES,                        */ 00199000
         B     @RC00072                                            0074 00200000
@RF00072 L     @10,DPLPTR(,COMPTR)                                 0074 00201000
         LA    @09,DACCTN(,@10)                                    0074 00202000
         CR    LEVLP,@09                                           0074 00203000
         BNE   @RF00074                                            0074 00204000
*                  UADSNPTR=DPOFSUB+HEDBPTR; /* PTR TO 1ST ACCTN OFFS*/ 00205000
         LR    UADSNPTR,HEDBPTR                                    0075 00206000
         AL    UADSNPTR,DPOFSUB(,@10)                              0075 00207000
*                ELSE                                              0076 00208000
*                  /* DELETE LEVEL IS AT PROCEDURE NAME LEVEL        */ 00209000
*                  UADSNPTR=DAOFSUB+HEDBPTR;  /* PTR TO 1ST PROCNAME    00210000
*                                                OFFSET              */ 00211000
         B     @RC00074                                            0076 00212000
@RF00074 L     @10,DPLPTR(,COMPTR)                                 0076 00213000
         LR    UADSNPTR,HEDBPTR                                    0076 00214000
         AL    UADSNPTR,DAOFSUB(,@10)                              0076 00215000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00216000
* /*                                                                 */ 00217000
* /*  L O C D P P 3 :   COMPLETE DELETE POINT LIST INFORMATION       */ 00218000
* /*     BELOW LEVELS SPECIFIED IN COMMAND ENTRY.   CALL ROUTINE     */ 00219000
* /*     LOCLAL TO LOCATE PDE FOR ITEM ON CURRENT LEVEL.   CALL      */ 00220000
* /*     ROUTINE LOCLAE1 TO LOCATE WITHIN THE UADS MEMBER BLOCK      */ 00221000
* /*     THE OFFSET BLOCK FOR THE CURRENT NAME                       */ 00222000
* /*                                                                 */ 00223000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00224000
*LOCDPP3:  /* COMPLETE LEVEL INDICATORS                              */ 00225000
*          /* LOCATE LAST PDE ON DELETE LEVEL                        */ 00226000
*          CALL  LOCLAL;              /* GO TO GET PTRS. ON RETURN 0077 00227000
*                                        UADSNPTR POINTS TO CURRENT     00228000
*                                        OFFSET BLOCK ON DELETE LEVEL*/ 00229000
@RC00074 DS    0H                                                  0077 00230000
@RC00072 DS    0H                                                  0077 00231000
LOCDPP3  BAL   @14,LOCLAL                                          0077 00232000
*LOCDPP4:  /* CHECK IF ITEM LOCATED HAS ANY SUBLEVEL DEPENDENCIES. 0078 00233000
*          IF NONE, GO TO FRESP2 TO RETURN THAT AREA IN THE UADS   0078 00234000
*          MEMBER TO THE FREESPACE CHAIN.                            */ 00235000
*          IF UADSNSUB = 0            /* CHK FOR SUBLEVEL PTR        */ 00236000
*            THEN                     /* NONE,                       */ 00237000
LOCDPP4  L     @10,UADSNSUB(,UADSNPTR)                             0078 00238000
         LTR   @10,@10                                             0078 00239000
         BZ    @RT00078                                            0078 00240000
*              GOTO  FRESP2;          /* GO TO FREE DP ELEMENT       */ 00241000
*          /* FIND LAST SUBLEVEL ELEMENT BELOW DELETE POINT.         */ 00242000
*          DCDP = LEVLP;              /* SAVE LEVEL POINTER          */ 00243000
         L     @10,DPLPTR(,COMPTR)                                 0080 00244000
         ST    LEVLP,DCDP(,@10)                                    0080 00245000
*          DO WHILE UADSNSUB ^= 0;    /* LOOP TO LOWEST LEVEL        */ 00246000
         B     @DE00081                                            0081 00247000
@DL00081 DS    0H                                                  0082 00248000
*            /* INITIALIZE PTRS TO FIRST SUBLEVEL                    */ 00249000
*            UADSNPTR = UADSNSUB+HEDBPTR;/* SET TO FIRST SUBLEVEL    */ 00250000
         LR    @10,HEDBPTR                                         0082 00251000
         AL    @10,UADSNSUB(,UADSNPTR)                             0082 00252000
         LR    UADSNPTR,@10                                        0082 00253000
*            LEVLP = LEVLP + LSPAN;   /* STEP DELETE OB LEVEL        */ 00254000
         AL    LEVLP,LSPAN                                         0083 00255000
*            NMFLOC1 = UADSNPTR;      /* SET PTR TO CURRENT OB       */ 00256000
         STCM  UADSNPTR,7,NMFLOC1(LEVLP)                           0084 00257000
*            NMOFFS1 = UADSNODE;      /* SET IMAGE OF CURRENT OB     */ 00258000
         MVC   NMOFFS1(12,LEVLP),UADSNODE(UADSNPTR)                0085 00259000
*            END;                                                  0086 00260000
@DE00081 L     @10,UADSNSUB(,UADSNPTR)                             0086 00261000
         LTR   @10,@10                                             0086 00262000
         BNZ   @DL00081                                            0086 00263000
*          LOOPFLG = '0'B;                                         0087 00264000
         NI    LOOPFLG,B'01111111'                                 0087 00265000
*          DO WHILE LOOPFLG = '0'B;   /* LOOP TO END OF LOCAL CHAIN  */ 00266000
         B     @DE00088                                            0088 00267000
@DL00088 DS    0H                                                  0089 00268000
*            CALL FREDLA;             /* GO TO ADJUST CHAIN AND FREE    00269000
*                                             DELETED AREAS          */ 00270000
         BAL   @14,FREDLA                                          0089 00271000
*            IF NMFLG11 = '1'B        /* IS CHAIN EXHAUSTED?         */ 00272000
*              THEN                   /* YES,                        */ 00273000
         TM    NMFLG11(LEVLP),B'10000000'                          0090 00274000
         BNO   @RF00090                                            0090 00275000
*                LOOPFLG = '1'B;                                   0091 00276000
         OI    LOOPFLG,B'10000000'                                 0091 00277000
*              ELSE                                                0092 00278000
*                DO;                                               0092 00279000
         B     @RC00090                                            0092 00280000
@RF00090 DS    0H                                                  0093 00281000
*                UADSNPTR = NMFNEX1+HEDBPTR;/* STEP TO NEXT LOCAL  0093 00282000
*                                              LATERAL OFFSET        */ 00283000
         SLR   UADSNPTR,UADSNPTR                                   0093 00284000
         ICM   UADSNPTR,7,NMFNEX1(LEVLP)                           0093 00285000
         ALR   UADSNPTR,HEDBPTR                                    0093 00286000
*                NMFLOC1 = UADSNPTR;  /* SET PTR TO CURRENT OB       */ 00287000
         STCM  UADSNPTR,7,NMFLOC1(LEVLP)                           0094 00288000
*                NMOFFS1 = UADSNODE;  /* SET IMAGE OF CURRENT OB     */ 00289000
         MVC   NMOFFS1(12,LEVLP),UADSNODE(UADSNPTR)                0095 00290000
*                IF UADSNSUB ^= 0     /* DOES SUBFIELD EXISTS?       */ 00291000
*                  THEN               /* YES,                        */ 00292000
         L     @10,UADSNSUB(,UADSNPTR)                             0096 00293000
         LTR   @10,@10                                             0096 00294000
         BZ    @RF00096                                            0096 00295000
*                    LOOPFLG = '1'B;                               0097 00296000
         OI    LOOPFLG,B'10000000'                                 0097 00297000
*                END;                                              0098 00298000
@RF00096 DS    0H                                                  0099 00299000
*            END;                                                  0099 00300000
@RC00090 DS    0H                                                  0099 00301000
@DE00088 TM    LOOPFLG,B'10000000'                                 0099 00302000
         BZ    @DL00088                                            0099 00303000
*          LEVLP = DCDP;              /* RESTORE LEVEL POINTER       */ 00304000
         L     @10,DPLPTR(,COMPTR)                                 0100 00305000
         L     LEVLP,DCDP(,@10)                                    0100 00306000
*          UADSNPTR = NMFLOC1;        /* RESTORE PREVIOUS POINTER    */ 00307000
         SLR   UADSNPTR,UADSNPTR                                   0101 00308000
         ICM   UADSNPTR,7,NMFLOC1(LEVLP)                           0101 00309000
*          GOTO  LOCDPP4;             /* GO TO RECHECK DEPENDENCIES  */ 00310000
         B     LOCDPP4                                             0102 00311000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00312000
* /*  F R E S P 2 :   CALL ROUTINE FREDLA TO FREE ANY DELETABLE      */ 00313000
* /*     AREA AND ADJUST THE FREE SPACE CHAIN ACCORDINGLY.  IF ANY   */ 00314000
* /*     ITEMS REMAIN ON CURRENT LEVEL, RETURN TO LOCATION LOCDPP2   */ 00315000
* /*     TO FIND NEXT DELETE ITEM                                    */ 00316000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00317000
*FRESP2:   /* FREESPACE FOR DP ELEMENT JUST LOCATED                  */ 00318000
*          CALL  FREDLA;              /* GO TO ADJUST CHAIN AND FREE    00319000
*                                             DELETED AREAS          */ 00320000
FRESP2   BAL   @14,FREDLA                                          0103 00321000
*NELEM:    /* INCREMENT COUNT AND CHK FOR REMAINING ENTRIES          */ 00322000
*          /* CHK FOR LAST ENTRY PROCESSED                           */ 00323000
*          IF NMDCN1 = NMDTN1         /* CHK FOR EXCESSIVE COUNT     */ 00324000
*            THEN                     /* YES,                        */ 00325000
NELEM    CLC   NMDCN1(2,LEVLP),NMDTN1(LEVLP)                       0104 00326000
         BE    @RT00104                                            0104 00327000
*              GOTO  NEPREL;          /* GO TO CHK FOR PRIOR LEVEL   */ 00328000
*          NMDCN1 = NMDCN1+1;         /* STEP CURRENT COUNT          */ 00329000
         LA    @10,1                                               0106 00330000
         SLR   @09,@09                                             0106 00331000
         ICM   @09,3,NMDCN1(LEVLP)                                 0106 00332000
         ALR   @10,@09                                             0106 00333000
         STH   @10,NMDCN1(,LEVLP)                                  0106 00334000
*          GOTO  LOCDPP2;             /* GO TO GET NEXT DP ELEMENT   */ 00335000
         B     LOCDPP2                                             0107 00336000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00337000
* /*  N E P R E L :   STEP LEVEL POINTER, CURRENT DELETE POINT, AND  */ 00338000
* /*     DYNAMIC LEVEL POINTER TO NEXT HIGHER LEVEL.  CHECK IF NEW   */ 00339000
* /*     LEVEL IS USERID LEVEL.  IF SO, RETURN TO IKJEFA30 TO CHECK  */ 00340000
* /*     FOR FURTHER ACTIVITY                                        */ 00341000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00342000
*NEPREL:   /* STEP POINTERS TO NEXT LEVEL                            */ 00343000
*          IF LEVLP = ADDR(DPASWD)    /* CHK FOR PASSWORD LEVEL      */ 00344000
*            THEN                     /* YES,                        */ 00345000
NEPREL   L     @10,DPLPTR(,COMPTR)                                 0108 00346000
         LA    @10,DPASWD(,@10)                                    0108 00347000
         CR    LEVLP,@10                                           0108 00348000
         BE    @RT00108                                            0108 00349000
*              GOTO DEL32END;         /* RETURN TO IKJEFA30          */ 00350000
*          LEVLP = LEVLP-LSPAN;       /* STEP PTR TO PREVIOUS LEVEL  */ 00351000
         SL    LEVLP,LSPAN                                         0110 00352000
*          /* CHK FOR ANY DEPENDENT ITEM                             */ 00353000
*          IF NMFSUB1 = 0             /* CHK SUBLEVEL PTR            */ 00354000
*            THEN                     /* NO DEPENDENCIES EXIST       */ 00355000
         L     @10,NMFSUB1(,LEVLP)                                 0111 00356000
         LTR   @10,@10                                             0111 00357000
         BNZ   @RF00111                                            0111 00358000
*              DO;                                                 0112 00359000
*              UADSNPTR = NMFLOC1;    /* SET CURRENT ELEMENT PTR     */ 00360000
         SLR   UADSNPTR,UADSNPTR                                   0113 00361000
         ICM   UADSNPTR,7,NMFLOC1(LEVLP)                           0113 00362000
*              CALL  FREDLA;          /* GO TO ADJUST CHAIN AND FREE    00363000
*                                           DELETED AREAS            */ 00364000
         BAL   @14,FREDLA                                          0114 00365000
*              END;                                                0115 00366000
*          /* CHK IF CURRENT ENTRY WAS ASTERISK                      */ 00367000
*          IF NMBLDG1 = '0'B          /* CHK FOR ASTERISK ENTRY FLAG */ 00368000
*            THEN                     /* NO,                         */ 00369000
@RF00111 TM    NMBLDG1(LEVLP),B'10000000'                          0116 00370000
         BZ    @RT00116                                            0116 00371000
*              GOTO  NEPREL;          /* GO TO CHK IF PREVIOUS LEVEL */ 00372000
*          /* IF CURRENT COUNT IS LESS THAN TOTAL, RESTORE THE DELETE   00373000
*             POINT LIST BEYOND THE CURRENT DELETE LEVEL AND GO TO 0118 00374000
*             LOCDPP1 TO FIND THE NEXT DELETE NAME.                  */ 00375000
*          /* CHK FOR TERMINATION COUNT                              */ 00376000
*          IF NMDCN1 = NMDTN1         /* CHK FOR TOTAL COUNT         */ 00377000
*            THEN                     /* YES,                        */ 00378000
         CLC   NMDCN1(2,LEVLP),NMDTN1(LEVLP)                       0118 00379000
         BE    @RT00118                                            0118 00380000
*              GOTO  NEPREL;          /* TO CHK FOR PREVIOUS LEVEL   */ 00381000
*          NMDCN1 = NMDCN1+1;         /* STEP CURRENT COUNT          */ 00382000
         LA    @10,1                                               0120 00383000
         SLR   @09,@09                                             0120 00384000
         ICM   @09,3,NMDCN1(LEVLP)                                 0120 00385000
         ALR   @10,@09                                             0120 00386000
         STH   @10,NMDCN1(,LEVLP)                                  0120 00387000
*          /* CHK IF LEVEL IS DELETED TO ADJUST RESERVE COUNTS       */ 00388000
*          IF NMFSUB1 = 0             /* CHK SUBLEVEL PTR            */ 00389000
*            THEN                     /* YES,                        */ 00390000
         SLR   @10,@10                                             0121 00391000
         C     @10,NMFSUB1(,LEVLP)                                 0121 00392000
         BNE   @RF00121                                            0121 00393000
*              NMDXN1 = 0;            /* INITIALIZE COUNTS           */ 00394000
         ST    @10,NMDXN1(,LEVLP)                                  0122 00395000
*          /* RESTORE DPL LEVELS BELOW * LEVEL                       */ 00396000
*          LEVLP = LEVLP+LSPAN;       /* SET PTR TO CURRENT LEVEL    */ 00397000
@RF00121 AL    LEVLP,LSPAN                                         0123 00398000
*          DPLB(LEVLP-DPLPTR+1:LENGTH(DPLB)) =                     0124 00399000
*                DPLBS(LEVLP-DPLPTR+1:LENGTH(DPLBS));              0124 00400000
         L     @10,DPLPTR(,COMPTR)                                 0124 00401000
         LR    @09,LEVLP                                           0124 00402000
         SLR   @09,@10                                             0124 00403000
         ST    @09,@TF00001                                        0124 00404000
         ALR   @09,@10                                             0124 00405000
         LA    @07,120                                             0124 00406000
         SL    @07,@TF00001                                        0124 00407000
         L     @04,@TF00001                                        0124 00408000
         LA    @03,DPLBS(@04)                                      0124 00409000
         EX    @07,@SM00264                                        0124 00410000
*          LEVLP = DADP;              /* RESTORE ORIGINAL DELETE PT  */ 00411000
         L     LEVLP,DADP(,@10)                                    0125 00412000
*          GOTO  LOCDPP1;             /* GO TO LOCATE NEXT DP        */ 00413000
         B     LOCDPP1                                             0126 00414000
*DEL32END: /* RETURN TO IKJEFA30                                     */ 00415000
*          IF DUOFSUB = 0             /* WERE ALL PASSWORDS DELETED? */ 00416000
*            THEN                     /* YES,                        */ 00417000
DEL32END L     @10,DPLPTR(,COMPTR)                                 0127 00418000
         L     @10,DUOFSUB(,@10)                                   0127 00419000
         LTR   @10,@10                                             0127 00420000
         BNZ   @RF00127                                            0127 00421000
*              DELUSER = '1'B;        /* SET FLAG TO DELETE USER     */ 00422000
         OI    DELUSER(COMPTR),B'10000000'                         0128 00423000
*            ELSE                     /* NO,                         */ 00424000
*              DELUSER = '0'B;        /* SET FLAG TO UPDATE USER     */ 00425000
         B     @RC00127                                            0129 00426000
@RF00127 NI    DELUSER(COMPTR),B'01111111'                         0129 00427000
*          DPLB = DPLBS;              /* RESTORE DELETE POINT LIST   */ 00428000
@RC00127 L     @10,DPLPTR(,COMPTR)                                 0130 00429000
         MVC   DPLB(121,@10),DPLBS                                 0130 00430000
*          RETURN CODE(RTNCODE);      /* RETURN TO IKJEFA30          */ 00431000
         L     @13,4(,@13)                                         0131 00432000
         L     @00,@SIZDATD                                        0131 00433000
         LR    @01,@11                                             0131 00434000
         FREEMAIN R,LV=(0),A=(1)                                        00435000
         LR    @15,@08                                             0131 00436000
         L     @14,12(,@13)                                        0131 00437000
         LM    @00,@12,20(@13)                                     0131 00438000
         BR    @14                                                 0131 00439000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00440000
* /*  L O C L A L :    SCAN THE PDE CHAIN FOR THE INDICATED LEVEL    */ 00441000
* /*      AND LOAD PTR 'NAMIDN1' WITH THE LOCATION OF THE CURRENT    */ 00442000
* /*      PDE IN LOCAL CHAIN.    THE TARGET LEVEL IS INDICATED BY    */ 00443000
* /*      PTR 'LEVLP' AT ENTRY                                       */ 00444000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00445000
*LOCLAL:   PROC;                                                   0132 00446000
@EL00001 L     @13,4(,@13)                                         0132 00447000
@EF00001 L     @00,@SIZDATD                                        0132 00448000
         LR    @01,@11                                             0132 00449000
         FREEMAIN R,LV=(0),A=(1)                                        00450000
@ER00001 LM    @14,@12,12(@13)                                     0132 00451000
         BR    @14                                                 0132 00452000
@PB00001 DS    0H                                                  0132 00453000
LOCLAL   STM   @14,@01,12(@13)                                     0132 00454000
         STM   @04,@12,36(@13)                                     0132 00455000
*          /* CHK IF ENTRY IS ASTERISK TO SKIP PDE CHECK             */ 00456000
*          IF NMBLDG1 = '1'B          /* CHK FOR ASTERISK FLAG       */ 00457000
*            THEN                     /* YES,                        */ 00458000
         TM    NMBLDG1(LEVLP),B'10000000'                          0133 00459000
         BNO   @RF00133                                            0133 00460000
*              DO;                    /* CHECK PDE COUNT             */ 00461000
*              /*FIND CURRENT ELEMENT ON LOCAL ASTERISK LEVEL CHAIN  */ 00462000
*              LEVLP = LEVLP - LSPAN; /* SET TO PREVIOUS LEVEL       */ 00463000
         SL    LEVLP,LSPAN                                         0135 00464000
*              /*INITIALIZE TEST COUNTER                             */ 00465000
*              TSTCTN = 1;            /* INITIALIZE COUNTER          */ 00466000
         LA    TSTCTN,1                                            0136 00467000
*              UADSNPTR = NMFSUB1+HEDBPTR;/* SET TO FIRST OFFSET     */ 00468000
         LR    UADSNPTR,HEDBPTR                                    0137 00469000
         AL    UADSNPTR,NMFSUB1(,LEVLP)                            0137 00470000
*              IF NMDTN2 = 0          /* CHECK IF TOTAL COUNT SET    */ 00471000
*                THEN                 /* YES, COUNT NEVER SET        */ 00472000
         SLR   @10,@10                                             0138 00473000
         ICM   @10,3,NMDTN2(LEVLP)                                 0138 00474000
         LTR   @10,@10                                             0138 00475000
         BNZ   @RF00138                                            0138 00476000
*                  DO;                                             0139 00477000
*                  DO WHILE UADSNFLG ^= '1'B;/* LOOP TO END OF CHAIN */ 00478000
         B     @DE00140                                            0140 00479000
@DL00140 DS    0H                                                  0141 00480000
*                    TSTCTN = TSTCTN+1;/* STEP COUNTER               */ 00481000
         AH    TSTCTN,@CH00032                                     0141 00482000
*                    UADSNPTR = UADSNNEX+HEDBPTR;/* TO NEXT OB       */ 00483000
         SLR   @10,@10                                             0142 00484000
         ICM   @10,7,UADSNNEX(UADSNPTR)                            0142 00485000
         ALR   @10,HEDBPTR                                         0142 00486000
         LR    UADSNPTR,@10                                        0142 00487000
*                    END;                                          0143 00488000
@DE00140 TM    UADSNFLG(UADSNPTR),B'10000000'                      0143 00489000
         BNO   @DL00140                                            0143 00490000
*                  UADSNPTR = NMFSUB1+HEDBPTR;/* SET TO 1ST OFFSET   */ 00491000
         LR    UADSNPTR,HEDBPTR                                    0144 00492000
         AL    UADSNPTR,NMFSUB1(,LEVLP)                            0144 00493000
*                  NMDTN2=TSTCTN;     /* SET TOTAL COUNT             */ 00494000
         STH   TSTCTN,NMDTN2(,LEVLP)                               0145 00495000
*                  NMDCN2 = 1;        /* SET INITIAL CURRENT COUNT   */ 00496000
         MVC   NMDCN2(2,LEVLP),@CH00032                            0146 00497000
*                  END;                                            0147 00498000
*                ELSE                 /* CHAIN IS IN PROCESS         */ 00499000
*                  DO WHILE TSTCTN < NMDCN2;/* SCAN TO CURRENT ITEM  */ 00500000
         B     @RC00138                                            0148 00501000
@RF00138 B     @DE00148                                            0148 00502000
@DL00148 DS    0H                                                  0149 00503000
*                    TSTCTN = TSTCTN+1;/* STEP COUNTER               */ 00504000
         AH    TSTCTN,@CH00032                                     0149 00505000
*                    UADSNPTR = UADSNNEX+HEDBPTR;/* TO NEXT OB       */ 00506000
         SLR   @10,@10                                             0150 00507000
         ICM   @10,7,UADSNNEX(UADSNPTR)                            0150 00508000
         ALR   @10,HEDBPTR                                         0150 00509000
         LR    UADSNPTR,@10                                        0150 00510000
*                    END;                                          0151 00511000
@DE00148 SLR   @10,@10                                             0151 00512000
         ICM   @10,3,NMDCN2(LEVLP)                                 0151 00513000
         CLR   TSTCTN,@10                                          0151 00514000
         BL    @DL00148                                            0151 00515000
*              /* SET UP OFFSET BLOCK IMAGES IN DPL                  */ 00516000
*              NMFLOC2 = UADSNPTR;    /* SET PTR TO CURRENT OB       */ 00517000
@RC00138 STCM  UADSNPTR,7,NMFLOC2(LEVLP)                           0152 00518000
*              NMOFFS2 = UADSNODE;    /* SET IMAGE OF CURRENT OB     */ 00519000
         MVC   NMOFFS2(12,LEVLP),UADSNODE(UADSNPTR)                0153 00520000
*              LEVLP = LEVLP+LSPAN;   /* SET PTR TO CURRENT LEVEL    */ 00521000
         AL    LEVLP,LSPAN                                         0154 00522000
*              RETURN;                                             0155 00523000
@EL00002 DS    0H                                                  0155 00524000
@EF00002 DS    0H                                                  0155 00525000
@ER00002 LM    @14,@01,12(@13)                                     0155 00526000
         LM    @04,@12,36(@13)                                     0155 00527000
         BR    @14                                                 0155 00528000
*              END;                                                0156 00529000
*          /* SCAN THE UADS LOCAL LEVEL CHAIN TO FIND THE NAME TO  0157 00530000
*             MATCH THE NAME ALIGNED WITH THE SPECIFIED PDE.       0157 00531000
*             FAILURE TO FIND A MATCHING NAME WITHIN THE LOCAL CHAIN    00532000
*             RESULTS IN AN ERROR RETURN.  AT ENTRY, PTR 'UADSNPTR'     00533000
*             POINTS TO THE 1ST OFFSET BLOCK OF LOCAL CHAIN.       0157 00534000
*             AT SUCCESSFUL EXIT PTR 'UADSNPTR' POINTS TO THE CORRECT   00535000
*             OFFSET BLOCK AND THAT OFFSET BLOCK AND ITS LOCATION HAVE  00536000
*             BEEN COPIED INTO THE CURRENT LEVEL IN THE DELETE POINT    00537000
*             LIST.                                                  */ 00538000
*          IF NMDCN1 > 1              /* IS THERE A CHAIN POINTER?   */ 00539000
*            THEN                     /* YES,                        */ 00540000
@RF00133 CLC   NMDCN1(2,LEVLP),@CH00032                            0157 00541000
         BNH   @RF00157                                            0157 00542000
*              NAMIDN1 = NPTRNEX;     /* STEP PTR TO NEXT IN CHAIN   */ 00543000
         L     @10,NAMIDN1(,LEVLP)                                 0158 00544000
         L     @10,NPTRNEX(,@10)                                   0158 00545000
         ST    @10,NAMIDN1(,LEVLP)                                 0158 00546000
*          LOOPFLG = '0'B;                                         0159 00547000
@RF00157 NI    LOOPFLG,B'01111111'                                 0159 00548000
*          CHARS = NAMPTRC(1:NAMLNG); /* GET NAME FOR COMPARE        */ 00549000
         MVI   CHARS+1,C' '                                        0160 00550000
         MVC   CHARS+2(38),CHARS+1                                 0160 00551000
         L     @10,NAMIDN1(,LEVLP)                                 0160 00552000
         SLR   @09,@09                                             0160 00553000
         ICM   @09,3,NAMLNG(@10)                                   0160 00554000
         BCTR  @09,0                                               0160 00555000
         L     @10,NAMPTR1(,@10)                                   0160 00556000
         EX    @09,@SM00266                                        0160 00557000
*          DO WHILE LOOPFLG = '0'B;                                0161 00558000
         B     @DE00161                                            0161 00559000
@DL00161 DS    0H                                                  0162 00560000
*            UADSPPTR = UADSNDAT+HEDBPTR;/* SET PTR TO DATA BLOCK    */ 00561000
         LR    UADSPPTR,HEDBPTR                                    0162 00562000
         AL    UADSPPTR,UADSNDAT(,UADSNPTR)                        0162 00563000
*            /* CHK FOR DELETE LEVEL AT ACCOUNT NUMBER LEVEL         */ 00564000
*            IF LEVLP = ADDR(DACCTN)  /* CHK FOR ACCT NMBR LEVEL     */ 00565000
*              THEN                   /* YES,                        */ 00566000
         L     @10,DPLPTR(,COMPTR)                                 0163 00567000
         LA    @10,DACCTN(,@10)                                    0163 00568000
         CR    LEVLP,@10                                           0163 00569000
         BNE   @RF00163                                            0163 00570000
*                DO;                                               0164 00571000
*                UADSAPTR=UADSPPTR;   /* PTR TO CURRENT DATA         */ 00572000
         LR    UADSAPTR,UADSPPTR                                   0165 00573000
*                /* CHK FOR MATCHING NAMES                           */ 00574000
*                IF NAMLNG = UADSALEN  /* CHK FOR EQUAL LENGTHS      */ 00575000
*                  & UADSANUM(1:NAMLNG)= /* COMPARE NAMES            */ 00576000
*                  NAMPTRC(1:NAMLNG)                               0166 00577000
*                    THEN             /* YES, NAMES MATCH            */ 00578000
         L     @10,NAMIDN1(,LEVLP)                                 0166 00579000
         SLR   @07,@07                                             0166 00580000
         ICM   @07,3,NAMLNG(@10)                                   0166 00581000
         SLR   @04,@04                                             0166 00582000
         IC    @04,UADSALEN(,UADSAPTR)                             0166 00583000
         CR    @07,@04                                             0166 00584000
         BNE   @RF00166                                            0166 00585000
         L     @10,NAMPTR1(,@10)                                   0166 00586000
         BCTR  @07,0                                               0166 00587000
         EX    @07,@SC00268                                        0166 00588000
         BE    @RT00166                                            0166 00589000
*                      GOTO  NAMFD;   /* GO TO EXIT                  */ 00590000
*                END;                                              0168 00591000
*              ELSE                   /* MUST BE PASSWORD OR PROC    */ 00592000
*                IF UADSPPWD = CHARS(1:8)/* COMPARE NAMES            */ 00593000
*                  THEN               /* YES, NAMES MATCH            */ 00594000
         B     @RC00163                                            0169 00595000
@RF00163 CLC   UADSPPWD(8,UADSPPTR),CHARS                          0169 00596000
         BE    @RT00169                                            0169 00597000
*                    GOTO  NAMFD;     /* GO TO EXIT                  */ 00598000
*            IF UADSNFLG = '1'B       /* CHK IF CHAIN EXHAUSTED      */ 00599000
*              THEN                   /* YES,                        */ 00600000
@RC00163 TM    UADSNFLG(UADSNPTR),B'10000000'                      0171 00601000
         BNO   @RF00171                                            0171 00602000
*                LOOPFLG = '1'B;      /* TERMINATE LOOP              */ 00603000
         OI    LOOPFLG,B'10000000'                                 0172 00604000
*              ELSE                                                0173 00605000
*                UADSNPTR=UADSNNEX+HEDBPTR;/* STEP PTR TO NEXT OFFSET*/ 00606000
         B     @RC00171                                            0173 00607000
@RF00171 SLR   @10,@10                                             0173 00608000
         ICM   @10,7,UADSNNEX(UADSNPTR)                            0173 00609000
         ALR   @10,HEDBPTR                                         0173 00610000
         LR    UADSNPTR,@10                                        0173 00611000
*            END;                                                  0174 00612000
@RC00171 DS    0H                                                  0174 00613000
@DE00161 TM    LOOPFLG,B'10000000'                                 0174 00614000
         BZ    @DL00161                                            0174 00615000
*          IF STRNOW = '0'B           /* CHK FOR ASTERISK ACTIVITY   */ 00616000
*            THEN                     /* NO,                         */ 00617000
         TM    STRNOW,B'10000000'                                  0175 00618000
         BNZ   @RF00175                                            0175 00619000
*              RETURN TO DEL32END;    /* GO TO FREE/DEQUEUE          */ 00620000
         LA    @14,DEL32END                                        0176 00621000
         LM    @15,@01,16(@13)                                     0176 00622000
         LM    @04,@12,36(@13)                                     0176 00623000
         BR    @14                                                 0176 00624000
*            ELSE                     /* YES, IS ASTERISK            */ 00625000
*              RETURN TO  NELEM;      /* GO TO LOOK FOR MORE ITEMS   */ 00626000
@RF00175 LA    @14,NELEM                                           0177 00627000
         LM    @15,@01,16(@13)                                     0177 00628000
         LM    @04,@12,36(@13)                                     0177 00629000
         BR    @14                                                 0177 00630000
*NAMFD:    /* SPECIFIED NAME LOCATED IN UADS, UADSNPTR POINTS TO ITS */ 00631000
*          /*      OFFSET BLOCK                                      */ 00632000
*          NAMFLGF = '1'B;            /* INDICATE ITEM FOUND IN PDE  */ 00633000
NAMFD    L     @10,NAMIDN1(,LEVLP)                                 0178 00634000
         OI    NAMFLGF(@10),B'00000010'                            0178 00635000
*          NMFLOC1 = UADSNPTR;        /* SET OFFSET LOC IN DPL       */ 00636000
         STCM  UADSNPTR,7,NMFLOC1(LEVLP)                           0179 00637000
*          NMOFFS1 = NMOFFC1;         /* SET OFFSET BLOCK IN DPL     */ 00638000
         SLR   @10,@10                                             0180 00639000
         ICM   @10,7,NMFLOC1(LEVLP)                                0180 00640000
         MVC   NMOFFS1(12,LEVLP),NMOFFC1(@10)                      0180 00641000
*          END  LOCLAL;               /* RETURN                      */ 00642000
         B     @EL00002                                            0181 00643000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00644000
* /*                                                                 */ 00645000
* /*   F R E D L A :   FREE AREAS TO BE DELETED AND ADJUST LATERAL   */ 00646000
* /*      CHAIN POINTERS.   SCAN  ACROSS  LATERAL CHAIN  AT DELETE   */ 00647000
* /*      ELEMENT LEVEL  TO FIND PREVIOUS ELEMENT.   SET  PREVIOUS   */ 00648000
* /*      ELEMENT CHAIN POINTER FROM DELETE ELEMENT POINTER FIELDS.  */ 00649000
* /*      IF DATA BLOCK IS UNDER MULTIPLE USAGE,  REDUCE THE USAGE   */ 00650000
* /*      COUNT BY ONE.    OTHERWISE RETURN THE DATA BLOCK AREA TO   */ 00651000
* /*      THE FREE SPACE QUEUE BY CALLING IKJEFA54,  THE FREESPACE   */ 00652000
* /*      ROUTINE.  THE DELETED OFFSET BLOCK IS ALWAYS RETURNED TO   */ 00653000
* /*      THE FREESPACE QUEUE.   IF DELETE IS SUCCESSFUL,  SET THE   */ 00654000
* /*      THE 'DELETED' FLAG, NAMFLG8,  IN THE PDE  FOR ANY DELETE   */ 00655000
* /*      ELEMENT NOT BELOW THE ASSIGNED DELETE POINT                */ 00656000
* /*                                                                 */ 00657000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00658000
*FREDLA:   /* FREE DELETED AREAS                                     */ 00659000
*          PROC;                                                   0182 00660000
FREDLA   STM   @14,@01,@SA00003                                    0182 00661000
         STM   @04,@07,@SA00003+16                                 0182 00662000
         STM   @09,@12,@SA00003+32                                 0182 00663000
*          DELOP = UADSNPTR;          /* SET DELETE OB PTR           */ 00664000
         LR    DELOP,UADSNPTR                                      0183 00665000
*          /* LOCATE INITIAL OB AT CURRENT DELETE LEVEL              */ 00666000
*          IF LEVLP = ADDR(DPASWD)    /* CHK IF AT PASSWORD LEVEL    */ 00667000
*            THEN                     /* YES,                        */ 00668000
         L     @10,DPLPTR(,COMPTR)                                 0184 00669000
         LA    @10,DPASWD(,@10)                                    0184 00670000
         CR    LEVLP,@10                                           0184 00671000
         BNE   @RF00184                                            0184 00672000
*              UADSNPTR = UADSPWD1+HEDBPTR;/* POINT TO 1ST PASSWD    */ 00673000
         LR    UADSNPTR,HEDBPTR                                    0185 00674000
         AL    UADSNPTR,UADSPWD1(,HEDBPTR)                         0185 00675000
*            ELSE                                                  0186 00676000
*              DO;                                                 0186 00677000
         B     @RC00184                                            0186 00678000
@RF00184 DS    0H                                                  0187 00679000
*              UADSNPTR = UADSPWD1+HEDBPTR;/* POINT TO 1ST PASSWD    */ 00680000
         LR    UADSNPTR,HEDBPTR                                    0187 00681000
         AL    UADSNPTR,UADSPWD1(,HEDBPTR)                         0187 00682000
*              UADSNPTR = UADSNSUB+HEDBPTR;/* POINT TO 1ST ACCT NUM  */ 00683000
         LR    @10,HEDBPTR                                         0188 00684000
         AL    @10,UADSNSUB(,UADSNPTR)                             0188 00685000
         LR    UADSNPTR,@10                                        0188 00686000
*              IF LEVLP = ADDR(DROCNM)/* CHK IF PROC NAME LEVEL      */ 00687000
*                THEN                 /* YES,                        */ 00688000
         L     @10,DPLPTR(,COMPTR)                                 0189 00689000
         LA    @10,DROCNM(,@10)                                    0189 00690000
         CR    LEVLP,@10                                           0189 00691000
         BNE   @RF00189                                            0189 00692000
*                  UADSNPTR = UADSNSUB+HEDBPTR;/* POINT TO 1ST PROC  */ 00693000
         LR    @10,HEDBPTR                                         0190 00694000
         AL    @10,UADSNSUB(,UADSNPTR)                             0190 00695000
         LR    UADSNPTR,@10                                        0190 00696000
*              END;                                                0191 00697000
@RF00189 DS    0H                                                  0192 00698000
*          LASTOP  =  UADSNPTR;       /* SET PTR TO PREVIOUS OB      */ 00699000
@RC00184 LR    LASTOP,UADSNPTR                                     0192 00700000
*          /* CHK TO FREE CURRENT OFFSET BLOCK                       */ 00701000
*          DO WHILE UADSNPTR ^= DELOP;/* LOOP TILL DELETE OB REACHED */ 00702000
         B     @DE00193                                            0193 00703000
@DL00193 DS    0H                                                  0194 00704000
*            LASTOP  =  UADSNPTR;     /* STEP PREVIOUS OB PTR        */ 00705000
         LR    LASTOP,UADSNPTR                                     0194 00706000
*            UADSNPTR = OLDPTRN+HEDBPTR; /* STEP TO NEXT OB          */ 00707000
         SLR   UADSNPTR,UADSNPTR                                   0195 00708000
         ICM   UADSNPTR,7,OLDPTRN(LASTOP)                          0195 00709000
         ALR   UADSNPTR,HEDBPTR                                    0195 00710000
*            END;                     /* GO TO CHK NEW OB            */ 00711000
@DE00193 CR    UADSNPTR,DELOP                                      0196 00712000
         BNE   @DL00193                                            0196 00713000
*          IF OLDFLG = '1'B           /* WAS OLD PTR END OF CHAIN?   */ 00714000
*            THEN                     /* YES,                        */ 00715000
         TM    OLDFLG(LASTOP),B'10000000'                          0197 00716000
         BNO   @RF00197                                            0197 00717000
*              OLDPTRN = NEWPTRN;     /* LEAVE CHAIN FLAG ON         */ 00718000
         MVC   OLDPTRN(3,LASTOP),NEWPTRN(DELOP)                    0198 00719000
*            ELSE                     /* NO,                         */ 00720000
*              OLDOBLK = NEWOBLK;     /* USE NEW FLAG AND PTR        */ 00721000
         B     @RC00197                                            0199 00722000
@RF00197 MVC   OLDOBLK(4,LASTOP),NEWOBLK(DELOP)                    0199 00723000
*          SPZBLGD = 0;               /* SET DATA BLOCK PTR TO ZERO  */ 00724000
@RC00197 SLR   @10,@10                                             0200 00725000
         STH   @10,SPZBLGD                                         0200 00726000
*          /* CHK FOR EXISTANCE OF DATA BLOCK                        */ 00727000
*          IF UADSNDAT = 0            /* CHK IF ANY DATA BLOCK PTR   */ 00728000
*            THEN                     /* NONE,                       */ 00729000
         L     @09,UADSNDAT(,UADSNPTR)                             0201 00730000
         CR    @09,@10                                             0201 00731000
         BE    @RT00201                                            0201 00732000
*              GOTO  FREOB;           /* SKIP DATA BLOCK PROCESSING  */ 00733000
*          /* ADJUST USAGE COUNT IN DATA BLOCK                       */ 00734000
*          UADSDPTR = HEDBPTR+UADSNDAT; /* SET PTR TO DATA BLOCK     */ 00735000
         ALR   @09,HEDBPTR                                         0203 00736000
         LR    UADSDPTR,@09                                        0203 00737000
*          IF UADSNCTR > 1            /* CHK FOR MULTIPLE USE        */ 00738000
*            THEN                     /* YES,                        */ 00739000
         CLI   UADSNCTR(UADSDPTR),1                                0204 00740000
         BNH   @RF00204                                            0204 00741000
*              DO;                                                 0205 00742000
*              UADSNCTR = UADSNCTR-1; /* DECREMENT USAGE COUNT       */ 00743000
         SLR   @10,@10                                             0206 00744000
         IC    @10,UADSNCTR(,UADSDPTR)                             0206 00745000
         BCTR  @10,0                                               0206 00746000
         STC   @10,UADSNCTR(,UADSDPTR)                             0206 00747000
*              GOTO  FREOB;           /* SKIP FREEING DATA BLOCK     */ 00748000
         B     FREOB                                               0207 00749000
*              END;                                                0208 00750000
*          /* SET TO FREE DATA BLOCK SPACE                           */ 00751000
*          SPZBLCD = UADSNDAT;        /* SET LOCATION PARAMETER      */ 00752000
@RF00204 L     @10,UADSNDAT(,UADSNPTR)                             0209 00753000
         ST    @10,SPZBLCD                                         0209 00754000
*          /* SET UP LENGTH OF SPACE TO BE FREED                     */ 00755000
*          SPZBLGD = 12;              /* INITIALIZE TO PASSWORD SIZE */ 00756000
         MVC   SPZBLGD(2),@CH00055                                 0210 00757000
*          /* CHK IF IS PASSWORD                                     */ 00758000
*          IF LEVLP = ADDR(DPASWD)    /* CHK FOR PASSWORD LEVEL      */ 00759000
*            THEN                     /* YES,                        */ 00760000
         L     @10,DPLPTR(,COMPTR)                                 0211 00761000
         LA    @09,DPASWD(,@10)                                    0211 00762000
         CR    LEVLP,@09                                           0211 00763000
         BE    @RT00211                                            0211 00764000
*              GOTO  FREOB;           /* GO TO CALL FREESPACE RTN    */ 00765000
*            ELSE                     /* NOT PASSWORD                */ 00766000
*              SPZBLGD = 24;          /* SET UP PROCEDURE NAME SIZE  */ 00767000
         MVC   SPZBLGD(2),@CH00062                                 0213 00768000
*          /* CHK IF IS PROCEDURE NAME                               */ 00769000
*          IF LEVLP = ADDR(DROCNM)    /* CHK FOR PROCNAME LEVEL      */ 00770000
*            THEN                     /* YES,                        */ 00771000
         LA    @10,DROCNM(,@10)                                    0214 00772000
         CR    LEVLP,@10                                           0214 00773000
         BE    @RT00214                                            0214 00774000
*              GOTO  FREOB;           /* GO TO CALL FREESPACE RTN    */ 00775000
*            ELSE                     /* NOT PROCEDURE NAME          */ 00776000
*              SPZBLGD=UADSDPTR->UADSALEN+45; /* SET ACCT NUM SIZE   */ 00777000
         LA    @10,45                                              0216 00778000
         SLR   @09,@09                                             0216 00779000
         IC    @09,UADSALEN(,UADSDPTR)                             0216 00780000
         ALR   @10,@09                                             0216 00781000
         STH   @10,SPZBLGD                                         0216 00782000
*FREOB:    /* FREE OFFSET BLOCK SPACE                                */ 00783000
*          LEVLP = LEVLP - LSPAN;     /* SET PTR FOR PREVIOUS LEVEL  */ 00784000
FREOB    SL    LEVLP,LSPAN                                         0217 00785000
*          /* SET SUBLEVEL OFFSETS IF FIRST SUBELEMENT               */ 00786000
*          IF UADSNPTR-HEDBPTR=NMFSUB1/* IS DELETED OB 1ST OF LEVEL  */ 00787000
*            THEN                     /* YES,                        */ 00788000
         LR    @10,UADSNPTR                                        0218 00789000
         SLR   @10,HEDBPTR                                         0218 00790000
         C     @10,NMFSUB1(,LEVLP)                                 0218 00791000
         BNE   @RF00218                                            0218 00792000
*              DO;                                                 0219 00793000
*              IF UADSNFLG = '1'B     /* CHK FOR END OF LOCAL CHAIN  */ 00794000
*                THEN                 /* YES,                        */ 00795000
         TM    UADSNFLG(UADSNPTR),B'10000000'                      0220 00796000
         BNO   @RF00220                                            0220 00797000
*                  NMFSUB1 = 0;       /* INDICATE NO SUB LEVEL       */ 00798000
         SLR   @10,@10                                             0221 00799000
         ST    @10,NMFSUB1(,LEVLP)                                 0221 00800000
*                ELSE                 /* NOT END OF CHAIN            */ 00801000
*                  NMFSUB1 = NEWOBLK; /* SET DPL TO NEXT ELEMENT     */ 00802000
         B     @RC00220                                            0222 00803000
@RF00220 L     @10,NEWOBLK(,DELOP)                                 0222 00804000
         ST    @10,NMFSUB1(,LEVLP)                                 0222 00805000
*              /* CHK IF PRIOR LEVEL IS USERID                       */ 00806000
*              IF LEVLP = ADDR(DUSRID1)/* CHK FOR USERID LEVEL       */ 00807000
*                THEN                 /* YES,                        */ 00808000
@RC00220 L     @10,DPLPTR(,COMPTR)                                 0223 00809000
         LA    @10,DUSRID1(,@10)                                   0223 00810000
         CR    LEVLP,@10                                           0223 00811000
         BNE   @RF00223                                            0223 00812000
*                  UADSPWD1 = NMFSUB1;/* SET TO NEW 1ST PASSWORD     */ 00813000
         L     @10,NMFSUB1(,LEVLP)                                 0224 00814000
         ST    @10,UADSPWD1(,HEDBPTR)                              0224 00815000
*                ELSE                 /* NO,                         */ 00816000
*                  NMFLOC1->UADSNSUB = NMFSUB1;/* SET TO NEXT ELEMENT*/ 00817000
         B     @RC00223                                            0225 00818000
@RF00223 SLR   @10,@10                                             0225 00819000
         ICM   @10,7,NMFLOC1(LEVLP)                                0225 00820000
         L     @07,NMFSUB1(,LEVLP)                                 0225 00821000
         ST    @07,UADSNSUB(,@10)                                  0225 00822000
*              END;                                                0226 00823000
@RC00223 DS    0H                                                  0227 00824000
*          /* CHK FOR NO SUBLEVEL TO SET TERMINATING COUNT           */ 00825000
*          IF NMFSUB1 = 0             /* CHK FOR ZERO OFFSET         */ 00826000
*            THEN                     /* YES, NO SUBLEVEL            */ 00827000
@RF00218 L     @10,NMFSUB1(,LEVLP)                                 0227 00828000
         LTR   @10,@10                                             0227 00829000
         BNZ   @RF00227                                            0227 00830000
*              NMDCN2 = NMDTN2;       /* SET TERMINATING COUNT       */ 00831000
         SLR   @10,@10                                             0228 00832000
         ICM   @10,3,NMDTN2(LEVLP)                                 0228 00833000
         STH   @10,NMDCN2(,LEVLP)                                  0228 00834000
*          SPZBLOC=UADSNPTR-HEDBPTR;  /* SET LOCATION PARAMETER      */ 00835000
@RF00227 LR    @10,UADSNPTR                                        0229 00836000
         SLR   @10,HEDBPTR                                         0229 00837000
         ST    @10,SPZBLOC                                         0229 00838000
*          SPZBLNG = 12;              /* SET LENGTH OF OFFSET BLOCK  */ 00839000
         MVC   SPZBLNG(2),@CH00055                                 0230 00840000
*          /* ISSUE CALL TO FREESPACE FOR OFFSET BLOCK               */ 00841000
*          CALL  FRESP;               /* GO TO FREE OFFSET BLOCK     */ 00842000
         BAL   @14,FRESP                                           0231 00843000
*          /* CHK TO FREE DATA BLOCK                                 */ 00844000
*          IF SPZBLGD ^= 0            /* CHK FOR NEW BLOCK LENGTH    */ 00845000
*            THEN                     /* YES,                        */ 00846000
         LH    @10,SPZBLGD                                         0232 00847000
         LTR   @10,@10                                             0232 00848000
         BZ    @RF00232                                            0232 00849000
*              DO;                                                 0233 00850000
*              SPZBLOC = SPZBLCD;     /* SET NEW BLOCK LOCATION      */ 00851000
         L     @09,SPZBLCD                                         0234 00852000
         ST    @09,SPZBLOC                                         0234 00853000
*              SPZBLNG = SPZBLGD;     /* SET NEW BLOCK LENGTH        */ 00854000
         STH   @10,SPZBLNG                                         0235 00855000
*              CALL  FRESP;           /* GO TO FREE DATA BLOCK       */ 00856000
         BAL   @14,FRESP                                           0236 00857000
*              END;                                                0237 00858000
*          LEVLP = LEVLP+LSPAN;       /* SET PTR TO CURRENT LEVEL    */ 00859000
@RF00232 AL    LEVLP,LSPAN                                         0238 00860000
*          IF LEVLP < DADP            /* IS ITEM ABOVE DELETE LEVEL? */ 00861000
*           & NMBLDG1 = '0'B          /* AND SPECIFIED?              */ 00862000
*            THEN                     /* YES,                        */ 00863000
         L     @10,DPLPTR(,COMPTR)                                 0239 00864000
         C     LEVLP,DADP(,@10)                                    0239 00865000
         BNL   @RF00239                                            0239 00866000
         TM    NMBLDG1(LEVLP),B'10000000'                          0239 00867000
         BNZ   @RF00239                                            0239 00868000
*              NAMFLGD = '1'B;        /* SET DELETED FLAG IN PDE     */ 00869000
         L     @10,NAMIDN1(,LEVLP)                                 0240 00870000
         OI    NAMFLGD(@10),B'00000001'                            0240 00871000
*          END  FREDLA;               /* RETURN                      */ 00872000
@EL00003 DS    0H                                                  0241 00873000
@EF00003 DS    0H                                                  0241 00874000
@ER00003 LM    @14,@01,@SA00003                                    0241 00875000
         LM    @04,@07,@SA00003+16                                 0241 00876000
         LM    @09,@12,@SA00003+32                                 0241 00877000
         BR    @14                                                 0241 00878000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00879000
* /*                                                                 */ 00880000
* /*  F R E S P :  CALL IKJEFA54, THE FREESPACE ROUTINE, TO RETURN   */ 00881000
* /*     DELETED AREA TO THE FREESPACE QUEUE.   FAILURE IN ATTEMPT   */ 00882000
* /*     TO FREESPACE RESULTS IN AN ERROR TERMINATION MESSAGE.       */ 00883000
* /*                                                                 */ 00884000
* /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */ 00885000
*FRESP:    /* ISSUE CALL TO FREESPACE                                */ 00886000
*          PROC;                                                   0242 00887000
FRESP    STM   @14,@07,@SA00004                                    0242 00888000
         STM   @09,@12,@SA00004+40                                 0242 00889000
*          SPZBLKN = ACIONMBR;        /* SET NO OF EXTENSION BLOCKS  */ 00890000
         L     @10,ACIOPTR(,COMPTR)                                0243 00891000
         SLR   @09,@09                                             0243 00892000
         IC    @09,ACIONMBR(,@10)                                  0243 00893000
         STH   @09,SPZBLKN                                         0243 00894000
*          SPZBUFP = ACIOBUFR;        /* SET PTR TO AREA TO FREE     */ 00895000
         SLR   @09,@09                                             0244 00896000
         ICM   @09,7,ACIOBUFR(@10)                                 0244 00897000
         ST    @09,SPZBUFP                                         0244 00898000
*          RFY (R1,R15) RSTD;         /* RESTRICT PARM REG & RET CD  */ 00899000
*          R1  =  ADDR(SPAZPB);       /* SET PTR TO FREE SPACE PB    */ 00900000
         LA    R1,SPAZPB                                           0246 00901000
*          /* LINK TO FREESPACE                                      */ 00902000
*          CALL  IKJEFA54;            /* GO TO FREESPACE ROUTINE     */ 00903000
         L     @15,@CV00085                                        0247 00904000
         BALR  @14,@15                                             0247 00905000
*          /* CHK RETURN CODE FROM FREESPACE                         */ 00906000
*          RTNCODE  =  R15;           /* RESERVE RETURN CODE         */ 00907000
         LR    RTNCODE,R15                                         0248 00908000
*          RFY (R1,R15) UNRSTD;       /* RELEASE PARM REG & RET CODE */ 00909000
*          /* CHK FOR SUCCESS OF FREESPACE                           */ 00910000
*          IF RTNCODE ^= 0            /* CHK FOR FAILURE CODE        */ 00911000
*            THEN                     /* YES,                        */ 00912000
         LTR   RTNCODE,RTNCODE                                     0250 00913000
         BZ    @RF00250                                            0250 00914000
*              DO;                                                 0251 00915000
*              MSGNO = 25;            /* SET MESSAGE INDEX           */ 00916000
         MVC   MSGNO(2,COMPTR),@CH00257                            0252 00917000
*              RETURN TO DEL32END;    /* GO TO ISSUE FAILURE MSG     */ 00918000
         LA    @14,DEL32END                                        0253 00919000
         LM    @15,@07,@SA00004+4                                  0253 00920000
         LM    @09,@12,@SA00004+40                                 0253 00921000
         BR    @14                                                 0253 00922000
*              END;                                                0254 00923000
*            ELSE                                                  0255 00924000
*              MSGNO = 0;             /* SET NORMAL COMPLETION       */ 00925000
@RF00250 SLR   @10,@10                                             0255 00926000
         STH   @10,MSGNO(,COMPTR)                                  0255 00927000
*          END  FRESP;                /* RETURN TO CALLER            */ 00928000
@EL00004 DS    0H                                                  0256 00929000
@EF00004 DS    0H                                                  0256 00930000
@ER00004 LM    @14,@07,@SA00004                                    0256 00931000
         LM    @09,@12,@SA00004+40                                 0256 00932000
         BR    @14                                                 0256 00933000
*          END IKJEFA32                                            0257 00934000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00935000
*/*%INCLUDE SYSLIB  (IKJEFUAD)                                        * 00936000
*;                                                                 0257 00937000
@DATA    DS    0H                                                       00938000
@CH00032 DC    H'1'                                                     00939000
@CH00221 DC    H'10'                                                    00940000
@CH00223 DC    H'11'                                                    00941000
@CH00055 DC    H'12'                                                    00942000
@CH00217 DC    H'17'                                                    00943000
@CH00062 DC    H'24'                                                    00944000
@CH00257 DC    H'25'                                                    00945000
@SM00264 MVC   DPLB(0,@09),0(@03)                                       00946000
@SM00266 MVC   CHARS(0),NAMPTRC(@10)                                    00947000
@SC00268 CLC   UADSANUM(0,UADSAPTR),NAMPTRC(@10)                        00948000
@DATD    DSECT                                                          00949000
         DS    0F                                                       00950000
@SA00001 DS    18F                                                      00951000
@SA00003 DS    12F                                                      00952000
@SA00004 DS    0F                                                       00953000
         DS    14F                                                      00954000
@TF00001 DS    F                                                        00955000
IKJEFA32 CSECT                                                          00956000
         DS    0F                                                       00957000
@CF00224 DC    F'4'                                                     00958000
@DATD    DSECT                                                          00959000
         DS    0D                                                       00960000
DPLBS    DS    CL121                                                    00961000
STRNOW   DS    BL1                                                      00962000
LOOPFLG  DS    BL1                                                      00963000
         DS    CL1                                                      00964000
SPAZPB   DS    CL12                                                     00965000
         ORG   SPAZPB                                                   00966000
SPZBUFP  DS    AL4                                                      00967000
SPZBLKN  DS    FL2                                                      00968000
SPZBLNG  DS    FL2                                                      00969000
SPZBLOC  DS    AL4                                                      00970000
         ORG   SPAZPB+12                                                00971000
@NM00057 DS    CL6                                                      00972000
         ORG   @NM00057                                                 00973000
SPZBLCD  DS    AL4                                                      00974000
SPZBLGD  DS    AL2                                                      00975000
         ORG   @NM00057+6                                               00976000
CHARS    DS    CL40                                                     00977000
IKJEFA32 CSECT                                                          00978000
         DS    0F                                                       00979000
@SIZDATD DC    AL1(1)                                                   00980000
         DC    AL3(@ENDDATD-@DATD)                                      00981000
@CV00085 DC    V(IKJEFA54)                                              00982000
         DS    0D                                                       00983000
LSPAN    DC    AL4(DPASWD-DUSRID1)                                      00984000
IKJEFA32 CSECT                                                          00985000
         DS   0H                                                        00986000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   00987000
@DATD    DSECT                                                          00988000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00989000
@ENDDATD EQU   *                                                        00990000
IKJEFA32 CSECT                                                          00991000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00992000
@01      EQU   01                                                       00993000
@02      EQU   02                                                       00994000
@03      EQU   03                                                       00995000
@04      EQU   04                                                       00996000
@05      EQU   05                                                       00997000
@06      EQU   06                                                       00998000
@07      EQU   07                                                       00999000
@08      EQU   08                                                       01000000
@09      EQU   09                                                       01001000
@10      EQU   10                                                       01002000
@11      EQU   11                                                       01003000
@12      EQU   12                                                       01004000
@13      EQU   13                                                       01005000
@14      EQU   14                                                       01006000
@15      EQU   15                                                       01007000
TSTCTN   EQU   @07                                                      01008000
DELOP    EQU   @08                                                      01009000
LASTOP   EQU   @07                                                      01010000
RTNCODE  EQU   @08                                                      01011000
UADSDPTR EQU   @07                                                      01012000
LEVLP    EQU   @02                                                      01013000
COMPTR   EQU   @05                                                      01014000
UADSAPTR EQU   @09                                                      01015000
UADSPPTR EQU   @07                                                      01016000
UADSNPTR EQU   @03                                                      01017000
HEDBPTR  EQU   @06                                                      01018000
R1       EQU   @01                                                      01019000
R15      EQU   @15                                                      01020000
DHED     EQU   0                                                        01021000
UADSMHDR EQU   DHED                                                     01022000
UADSBN01 EQU   UADSMHDR+12                                              01023000
UADSATTR EQU   DHED+16                                                  01024000
UADSPWD1 EQU   DHED+24                                                  01025000
UADSNODE EQU   0                                                        01026000
UADSNWD1 EQU   UADSNODE                                                 01027000
UADSNFLG EQU   UADSNWD1                                                 01028000
UADSNNEX EQU   UADSNWD1+1                                               01029000
UADSNSUB EQU   UADSNODE+4                                               01030000
UADSNDAT EQU   UADSNODE+8                                               01031000
DPOBD    EQU   0                                                        01032000
UADSPPWD EQU   DPOBD+4                                                  01033000
DNOBD    EQU   0                                                        01034000
UADSALEN EQU   DNOBD+44                                                 01035000
UADSANUM EQU   DNOBD+45                                                 01036000
COMAREA  EQU   0                                                        01037000
DPLPTR   EQU   COMAREA                                                  01038000
ACIOPTR  EQU   COMAREA+4                                                01039000
MSGNO    EQU   COMAREA+8                                                01040000
DELUSER  EQU   COMAREA+10                                               01041000
GPWDSP   EQU   COMAREA+10                                               01042000
GACNSP   EQU   COMAREA+10                                               01043000
DPLB     EQU   0                                                        01044000
DADP     EQU   DPLB                                                     01045000
DCDP     EQU   DPLB+4                                                   01046000
DUSRID1  EQU   DPLB+8                                                   01047000
DUOFSUB  EQU   DPLB+20                                                  01048000
DUOFDAT  EQU   DPLB+24                                                  01049000
@NM00010 EQU   DPLB+28                                                  01050000
DUFLOC   EQU   DPLB+29                                                  01051000
DPASWD   EQU   DPLB+36                                                  01052000
DPOFSUB  EQU   DPLB+48                                                  01053000
@NM00016 EQU   DPLB+56                                                  01054000
DPCLSF1  EQU   @NM00016                                                 01055000
DACCTN   EQU   DPLB+64                                                  01056000
DAOFSUB  EQU   DPLB+76                                                  01057000
@NM00022 EQU   DPLB+84                                                  01058000
DACLSF1  EQU   @NM00022                                                 01059000
DROCNM   EQU   DPLB+92                                                  01060000
@NM00031 EQU   0                                                        01061000
NAMIDN1  EQU   @NM00031+4                                               01062000
NMOFFS1  EQU   @NM00031+8                                               01063000
NMFLG11  EQU   NMOFFS1                                                  01064000
NMFNEX1  EQU   NMOFFS1+1                                                01065000
NMFSUB1  EQU   NMOFFS1+4                                                01066000
NMBLDG1  EQU   @NM00031+20                                              01067000
NMFLOC1  EQU   @NM00031+21                                              01068000
NMDXN1   EQU   @NM00031+24                                              01069000
NMDTN1   EQU   NMDXN1                                                   01070000
NMDCN1   EQU   NMDXN1+2                                                 01071000
NMOFFS2  EQU   @NM00031+36                                              01072000
NMFLOC2  EQU   @NM00031+49                                              01073000
NMDTN2   EQU   @NM00031+52                                              01074000
NMDCN2   EQU   @NM00031+54                                              01075000
NAMPDE   EQU   0                                                        01076000
NAMPTR1  EQU   NAMPDE                                                   01077000
NAMLNG   EQU   NAMPDE+4                                                 01078000
NAMFLGF  EQU   NAMPDE+6                                                 01079000
NAMFLGD  EQU   NAMPDE+6                                                 01080000
NPTRNEX  EQU   NAMPDE+8                                                 01081000
ACIOPARM EQU   0                                                        01082000
ACIONMBR EQU   ACIOPARM+16                                              01083000
ACIOBUFR EQU   ACIOPARM+17                                              01084000
@NM00053 EQU   ACIOPARM+20                                              01085000
NMOFFC1  EQU   0                                                        01086000
UADSNCTR EQU   0                                                        01087000
OLDOBLK  EQU   0                                                        01088000
OLDFLG   EQU   OLDOBLK                                                  01089000
OLDPTRN  EQU   OLDOBLK+1                                                01090000
NEWOBLK  EQU   0                                                        01091000
NEWPTRN  EQU   NEWOBLK+1                                                01092000
NAMPTRC  EQU   0                                                        01093000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01094000
@NM00056 EQU   NEWOBLK                                                  01095000
@NM00055 EQU   OLDOBLK                                                  01096000
@NM00054 EQU   @NM00053                                                 01097000
@NM00052 EQU   ACIOPARM+12                                              01098000
@NM00051 EQU   ACIOPARM+8                                               01099000
@NM00050 EQU   ACIOPARM+4                                               01100000
@NM00049 EQU   ACIOPARM+1                                               01101000
@NM00048 EQU   ACIOPARM                                                 01102000
@NM00047 EQU   ACIOPARM                                                 01103000
@NM00046 EQU   ACIOPARM                                                 01104000
@NM00045 EQU   ACIOPARM                                                 01105000
@NM00044 EQU   ACIOPARM                                                 01106000
@NM00043 EQU   ACIOPARM                                                 01107000
@NM00042 EQU   NAMPDE+7                                                 01108000
@NM00041 EQU   NAMPDE+6                                                 01109000
@NM00040 EQU   NAMPDE+6                                                 01110000
@NM00039 EQU   @NM00031+48                                              01111000
@NM00038 EQU   @NM00031+48                                              01112000
@NM00037 EQU   @NM00031+32                                              01113000
@NM00036 EQU   @NM00031+28                                              01114000
@NM00035 EQU   @NM00031+20                                              01115000
@NM00034 EQU   NMOFFS1+8                                                01116000
@NM00033 EQU   NMOFFS1                                                  01117000
@NM00032 EQU   @NM00031                                                 01118000
DEND     EQU   DPLB+120                                                 01119000
@NM00030 EQU   DPLB+118                                                 01120000
@NM00029 EQU   DPLB+116                                                 01121000
@NM00028 EQU   DPLB+113                                                 01122000
@NM00027 EQU   DPLB+112                                                 01123000
@NM00026 EQU   DPLB+100                                                 01124000
@NM00025 EQU   DPLB+90                                                  01125000
@NM00024 EQU   DPLB+88                                                  01126000
@NM00023 EQU   DPLB+85                                                  01127000
@NM00021 EQU   DPLB+80                                                  01128000
@NM00020 EQU   DPLB+72                                                  01129000
@NM00019 EQU   DPLB+62                                                  01130000
@NM00018 EQU   DPLB+60                                                  01131000
@NM00017 EQU   DPLB+57                                                  01132000
@NM00015 EQU   DPLB+52                                                  01133000
@NM00014 EQU   DPLB+44                                                  01134000
@NM00013 EQU   DPLB+34                                                  01135000
@NM00012 EQU   DPLB+32                                                  01136000
@NM00011 EQU   @NM00010                                                 01137000
@NM00009 EQU   DPLB+16                                                  01138000
@NM00008 EQU   DPLB+12                                                  01139000
UADSADRF EQU   DNOBD+4                                                  01140000
@NM00007 EQU   DNOBD+1                                                  01141000
UADSACTR EQU   DNOBD                                                    01142000
@NM00006 EQU   DPOBD+1                                                  01143000
UADSPCTR EQU   DPOBD                                                    01144000
@NM00005 EQU   UADSNWD1                                                 01145000
@NM00004 EQU   DHED+40                                                  01146000
UADSDEST EQU   DHED+32                                                  01147000
UADSPERP EQU   DHED+28                                                  01148000
UADSUPTP EQU   DHED+20                                                  01149000
UADSINST EQU   DHED+18                                                  01150000
@NM00003 EQU   UADSATTR                                                 01151000
USATR03  EQU   UADSATTR                                                 01152000
USATR02  EQU   UADSATTR                                                 01153000
USATR01  EQU   UADSATTR                                                 01154000
USATR00  EQU   UADSATTR                                                 01155000
UADSMAXC EQU   UADSMHDR+14                                              01156000
@NM00002 EQU   UADSBN01+1                                               01157000
UADSEXPF EQU   UADSBN01+1                                               01158000
UADSNUSP EQU   UADSBN01+1                                               01159000
@NM00001 EQU   UADSBN01                                                 01160000
UADSUSER EQU   UADSMHDR+4                                               01161000
UADSFSQP EQU   UADSMHDR+2                                               01162000
UADSBLNG EQU   UADSMHDR                                                 01163000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01164000
@RT00061 EQU   LOCDPP3                                                  01165000
@RT00066 EQU   LOCDPP3                                                  01166000
@RT00078 EQU   FRESP2                                                   01167000
@RT00104 EQU   NEPREL                                                   01168000
@RT00108 EQU   DEL32END                                                 01169000
@RT00116 EQU   NEPREL                                                   01170000
@RT00118 EQU   NEPREL                                                   01171000
@RT00166 EQU   NAMFD                                                    01172000
@RF00166 EQU   @RC00163                                                 01173000
@RT00169 EQU   NAMFD                                                    01174000
@RT00201 EQU   FREOB                                                    01175000
@RT00211 EQU   FREOB                                                    01176000
@RT00214 EQU   FREOB                                                    01177000
@RF00239 EQU   @EL00003                                                 01178000
@PB00004 EQU   @EL00001                                                 01179000
@PB00003 EQU   @PB00004                                                 01180000
@PB00002 EQU   @PB00003                                                 01181000
@ENDDATA EQU   *                                                        01182000
         END   IKJEFA32                                                 01183000
