         TITLE 'IKJEFA40  --  LIST COMMAND PROCESSOR                   *00001000
                        '                                               00002000
IKJEFA40 CSECT ,                                                   0001 00003000
@MAINENT DS    0H                                                  0001 00004000
         USING *,@15                                               0001 00005000
         B     @PROLOG                                             0001 00006000
         DC    AL1(16)                                             0001 00007000
         DC    C'IKJEFA40  74.046'                                 0001 00008000
         DROP  @15                                                      00009000
@PROLOG  STM   @14,@12,12(@13)                                     0001 00010000
         BALR  @12,0                                               0001 00011000
@PSTART  DS    0H                                                  0001 00012000
         USING @PSTART,@12                                         0001 00013000
         L     @00,@SIZDATD                                        0001 00014000
         GETMAIN R,LV=(0)                                               00015000
         LR    @11,@01                                             0001 00016000
         USING @DATD,@11                                           0001 00017000
         ST    @13,@SA00001+4                                      0001 00018000
         LM    @00,@01,20(@13)                                     0001 00019000
         ST    @11,8(,@13)                                         0001 00020000
         LR    @13,@11                                             0001 00021000
*         ACCTPLP = R1;               /* ASSIGN THE ADDRESS OF THE 0030 00022000
*                                        INPUT PARAMETER LIST        */ 00023000
         ST    R1,ACCTPLP                                          0030 00024000
*         RFY R1 UNRSTD;              /* RESTRICT PARM LIST REGISTER */ 00025000
*         /* ASSIGN GENERATED PARAMETER BLOCKS TO DYNAMIC STORAGE    */ 00026000
*         CPLS(1:MCPLNG) = MCPLS(1:MCPLNG);                        0032 00027000
         L     @10,MCPLNG                                          0032 00028000
         BCTR  @10,0                                               0032 00029000
         EX    @10,@SM00243                                        0032 00030000
*         GEN (USING IHADCB,R2)       /* ADDRESSABILITY FOR LABELS   */ 00031000
*           REFS(R2);                                              0033 00032000
         USING IHADCB,R2                                                00033000
*         ACIOPARM = ACIOPARM&&ACIOPARM;/* CLEAR READ/WRITE PARM BLK */ 00034000
         XC    ACIOPARM(24),ACIOPARM                               0034 00035000
*         ACIODRCT = ADDR(DIRYWA);    /* SET PTR TO DIRECTORY W/A    */ 00036000
         LA    @10,DIRYWA                                          0035 00037000
         ST    @10,ACIODRCT                                        0035 00038000
*         ACIOPUTL = ACCTPLP;         /* SET PTR TO ACCOUNT PARMLIST */ 00039000
         L     @10,ACCTPLP                                         0036 00040000
         ST    @10,ACIOPUTL                                        0036 00041000
*         MSGID = '9';                /* SET LIST MSG ID - READ ISSUES  00042000
*                                        I/O ERROR MESSAGES          */ 00043000
         MVI   MSGID,C'9'                                          0037 00044000
*         UADSDCB = UADSBLK;          /* INIT DYNAMIC DCB BLK - BSAM */ 00045000
         MVC   UADSDCB(88),UADSBLK                                 0038 00046000
*         /* BUILD THE PARAMETER LIST FOR 'PUTLINE'                  */ 00047000
*         IOPLPTR = ADDR(PLPLIST);    /* POINT TO PUTLILE PB         */ 00048000
         LA    IOPLPTR,PLPLIST                                     0039 00049000
*         PLPLIST(1:12) = ACCTPL(1:12);/* ADDR OF THE UPT, ECT & ECB */ 00050000
         MVC   PLPLIST(12),ACCTPL(@10)                             0040 00051000
*         IOPLIOPB = ADDR(PBLOK);     /* ADDR OF THE PARM BLOCK    0041 00052000
*                                        THE PUTLINE SERVICE RTNE    */ 00053000
         LA    @07,PBLOK                                           0041 00054000
         ST    @07,IOPLIOPB(,IOPLPTR)                              0041 00055000
*         INSRTO1 = 10;               /* INIT SEGMENT OFFSET         */ 00056000
         MVC   INSRTO1(2),@CH00141                                 0042 00057000
*         OUTAPTR = ADDR(OUTPAREA);   /* SET PTR TO START OF OUTPUT     00058000
*                                        LINE                        */ 00059000
         LA    OUTAPTR,OUTPAREA                                    0043 00060000
*         INDIC = '0'B;               /* INITIALIZE CONTROL FLAGS    */ 00061000
         MVI   INDIC,B'00000000'                                   0044 00062000
*         /* DETERMINE WHETHER THE INPUT COMMAND IS LIST OR LISTIDS. */ 00063000
*         /* IF LISTIDS, BRANCH TO THE SECTION LABELED 'LISTIDS'.    */ 00064000
*         IF UIDLPTR ^= 0             /* WAS 'LISTIDS' SPECIFIED?    */ 00065000
*           THEN                      /* YES,                        */ 00066000
         SLR   @07,@07                                             0045 00067000
         C     @07,UIDLPTR(,@10)                                   0045 00068000
         BNE   @RT00045                                            0045 00069000
*             GOTO LISTIDS;           /* BRANCH TO LISTIDS SECTION   */ 00070000
*         /***********************************************************/ 00071000
*         /*                                                         */ 00072000
*         /*            PARSING OF THE INPUT COMMAND                 */ 00073000
*         /*                                                         */ 00074000
*         /***********************************************************/ 00075000
*         PPLPTR = ADDR(PARSLIST);    /* PPL ADDRESSABILITY          */ 00076000
         LA    @05,PARSLIST                                        0047 00077000
         ST    @05,PPLPTR                                          0047 00078000
*         EXITADD = 0;                /* SET PTR FOR NO EXIT         */ 00079000
         ST    @07,EXITADD                                         0048 00080000
*         SAVARAD = 0;                /* SET PTR FOR NO SAVE AREA    */ 00081000
         ST    @07,SAVARAD                                         0049 00082000
*         NODEPTR = ADDR(NLSTTAB);    /* POINT TO ANSWER PLACE       */ 00083000
         LA    @15,NLSTTAB                                         0050 00084000
         ST    @15,NODEPTR                                         0050 00085000
*         CMDIND = 4;                 /* INDICATE LIST COMMAND - NO     00086000
*                                        MODIFICATION                */ 00087000
         MVI   CMDIND,X'04'                                        0051 00088000
*         /* BUILD PARSE PARAMETER LIST (PPL).                       */ 00089000
*         PARSLIST(1:12) = ACCTPL(1:12);/* ADDR OF THE UPT, ECT & ECB*/ 00090000
         MVC   PARSLIST(12),ACCTPL(@10)                            0052 00091000
*         PPLPCL = PCLMDLAD;          /* ADDR OF THE PCL             */ 00092000
         L     @15,PCLMDLAD                                        0053 00093000
         ST    @15,PPLPCL(,@05)                                    0053 00094000
*         PPLANS = ADDR(LSTPDLAD);    /* CHNPDLAD WILL CONTAIN ADDR     00095000
*                                        OF PDL AFTER PARSE          */ 00096000
         LA    @15,LSTPDLAD                                        0054 00097000
         ST    @15,PPLANS(,@05)                                    0054 00098000
*         PPLCBUF = BUFPTR;           /* PTR TO CHANGE CMND  BUFFER  */ 00099000
         L     @10,BUFPTR(,@10)                                    0055 00100000
         ST    @10,PPLCBUF(,@05)                                   0055 00101000
*         PPLUWA = ADDR(VCHKPL);      /* ADDR OF THE PARAMETER  LIST    00102000
*                                        FOR IKJEFA55                */ 00103000
         LA    @10,VCHKPL                                          0056 00104000
         ST    @10,PPLUWA(,@05)                                    0056 00105000
*         /* LINK TO THE PARSE SERVICE ROUTINE.                      */ 00106000
*         GEN (LINK  EP=IKJPARS,MF=(E,PARSLIST))                   0057 00107000
*           REFS(PARSLIST);                                        0057 00108000
         LINK  EP=IKJPARS,MF=(E,PARSLIST)                               00109000
*         RFY R15 RSTD;               /* RESTRICT RETURN CODE REG    */ 00110000
*         RTNCODE = R15;              /* SAVE THE RETURN CODE        */ 00111000
         LR    RTNCODE,R15                                         0059 00112000
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REG     */ 00113000
*         /* CHECK THE PARSE RETURN CODE.                            */ 00114000
*         IF RTNCODE = 0              /* PARSE SUCCESSFUL?           */ 00115000
*           THEN                      /* YES,                        */ 00116000
         LTR   RTNCODE,RTNCODE                                     0061 00117000
         BZ    @RT00061                                            0061 00118000
*             GOTO PRSOK;             /* CONTINUE NORMALLY           */ 00119000
*         /* ERROR DURING VALIDITY CHECK RTNE?                       */ 00120000
*         IF RTNCODE = 20                                          0063 00121000
*           THEN                      /* YES,                        */ 00122000
         CH    RTNCODE,@CH00192                                    0063 00123000
         BNE   @RF00063                                            0063 00124000
*             RTNCODE = EXITRTCD;     /* TRANSFER CODE & CONTINUE  0064 00125000
*                                        CHECKING                    */ 00126000
         L     RTNCODE,EXITRTCD                                    0064 00127000
*         /* ATTENTION EXIT?                                         */ 00128000
*         IF RTNCODE = 8                                           0065 00129000
*           THEN                      /* YES,                        */ 00130000
@RF00063 CH    RTNCODE,@CH00073                                    0065 00131000
         BE    @RT00065                                            0065 00132000
*             GOTO ACCTRET;           /* GO CLEAN UP & RETURN        */ 00133000
*         /* GETMAIN FAILURE?                                        */ 00134000
*         IF RTNCODE = 16                                          0067 00135000
*           THEN                      /* YES,                        */ 00136000
         CH    RTNCODE,@CH00194                                    0067 00137000
         BNE   @RF00067                                            0067 00138000
*             DO;                                                  0068 00139000
*               MSGNO = 2;            /* SET ERROR MSG NUMBER        */ 00140000
         LA    MSGNO,2                                             0069 00141000
*               GOTO TMSGA;           /* GO ISSUE THE MESSAGE        */ 00142000
         B     TMSGA                                               0070 00143000
*             END;                                                 0071 00144000
*         /* UNABLE TO PROMPT?                                       */ 00145000
*         IF RTNCODE = 4                                           0072 00146000
*           THEN                      /* YES,                        */ 00147000
@RF00067 CH    RTNCODE,@CH00139                                    0072 00148000
         BE    @RT00072                                            0072 00149000
*             GOTO ACCTRET;           /* GO CLEAN UP & RETURN        */ 00150000
*           ELSE                      /* NO, INVALID PARAMETERS      */ 00151000
*             DO;                                                  0074 00152000
*               MSGNO = 12;           /* SET ERROR MSG NUMBER        */ 00153000
         LA    MSGNO,12                                            0075 00154000
*               GOTO MLMSG;           /* GO CONSTRUCT THE MSG        */ 00155000
         B     MLMSG                                               0076 00156000
*             END;                                                 0077 00157000
*PRSOK:   /* COMPLETE THE NODELIST CONTROL TABLE BUILT BY THE        */ 00158000
*         /* VALIDITY CHECK ROUTINE (IKJEFA43). FOR ANY LEVEL NOT    */ 00159000
*         /* SPECIFIED IN THE NODELIST OF THE INPUT COMMAND (NEITHER */ 00160000
*         /* '*' NOR SPECIFIC NAME), INSERT AN '*' INTO THE TABLE.   */ 00161000
*         /* ENTRY IN THE PROCNAME POSITION OF THE NODELIST?         */ 00162000
*         IF NUMOFLV < 4                                           0078 00163000
*           THEN                      /* NO,                         */ 00164000
PRSOK    CLI   NUMOFLV,4                                           0078 00165000
         BNL   @RF00078                                            0078 00166000
*             PROCNM = '*';           /* INSERT '*' FOR PROCNAME     */ 00167000
         MVI   PROCNM+1,C' '                                       0079 00168000
         MVC   PROCNM+2(6),PROCNM+1                                0079 00169000
         MVI   PROCNM,C'*'                                         0079 00170000
*         /* ENTRY IN THE ACCTNMBR POSITION OF THE NODELIST?         */ 00171000
*         IF NUMOFLV < 3                                           0080 00172000
*           THEN                      /* NO,                         */ 00173000
@RF00078 CLI   NUMOFLV,3                                           0080 00174000
         BNL   @RF00080                                            0080 00175000
*             ACCTNO = '*';           /* INSERT '*' FOR ACCTNMBR     */ 00176000
         MVI   ACCTNO+1,C' '                                       0081 00177000
         MVC   ACCTNO+2(38),ACCTNO+1                               0081 00178000
         MVI   ACCTNO,C'*'                                         0081 00179000
*         /* ENTRY IN THE PASSWORD POSITION OF THE NODELIST?         */ 00180000
*         IF NUMOFLV < 2                                           0082 00181000
*           THEN                      /* NO,                         */ 00182000
@RF00080 CLI   NUMOFLV,2                                           0082 00183000
         BNL   @RF00082                                            0082 00184000
*             PASSWD = '*';           /* INSERT '*' FOR PASSWORD     */ 00185000
         MVI   PASSWD+1,C' '                                       0083 00186000
         MVC   PASSWD+2(6),PASSWD+1                                0083 00187000
         MVI   PASSWD,C'*'                                         0083 00188000
*         /* ENQUEUE ON THE UADS DATA SET                            */ 00189000
*         GEN (ENQ  MF=(E,UADENQ))                                 0084 00190000
*           REFS(MAJNAME,MINNAME,UADENQ);                          0084 00191000
@RF00082 DS    0H                                                  0084 00192000
         ENQ  MF=(E,UADENQ)                                             00193000
*         ENQSW = '1'B;               /* SET SWITCH FOR DEQUEUE      */ 00194000
         OI    ENQSW,B'10000000'                                   0085 00195000
*         /* IF THE NODELIST USERID IS '*', THE BSAM DCB MUST BE     */ 00196000
*         /* OPENED FOR DIRECTORY READING.                           */ 00197000
*         IF USRID(1) = '*'           /* USERID = '*'?               */ 00198000
*           THEN                      /* YES,                        */ 00199000
         CLI   USRID,C'*'                                          0086 00200000
         BNE   @RF00086                                            0086 00201000
*             DO;                                                  0087 00202000
*             ACIODRCT = ADDR(DIRYWA);/* SET PTR TO DIRECTORY W/A    */ 00203000
         LA    @10,DIRYWA                                          0088 00204000
         ST    @10,ACIODRCT                                        0088 00205000
*             RFY R2 RSTD;            /* RESTRICT DCB BASE REGISTER  */ 00206000
*             R2 = ADDR(UADSDCB);     /* LOAD ADDR OF DCB INTO REG2  */ 00207000
         LA    R2,UADSDCB                                          0090 00208000
*             GEN (OPEN  ((R2)),MF=(E,OPENDIR))                    0091 00209000
*               REFS(OPENDIR,R2);                                  0091 00210000
         OPEN  ((R2)),MF=(E,OPENDIR)                                    00211000
*             /* IF OPEN WAS NOT SUCCESSFUL, ISSUE AN ERROR MESSAGE     00212000
*                AND RETURN TO ACCOUNT.                              */ 00213000
*             IF DCBOFLG = '0'B       /* WAS 'OPEN' SUCCESSFUL?      */ 00214000
*               THEN                  /* NO,                         */ 00215000
         TM    DCBOFLG,B'00010000'                                 0092 00216000
         BNZ   @RF00092                                            0092 00217000
*                 DO;                                              0093 00218000
*                 MSGNO = 8;          /* SET ERROR MSG NUMBER        */ 00219000
         LA    MSGNO,8                                             0094 00220000
*                 GOTO TMSGA;         /* GO CONSTRUCT THE MESSAGE    */ 00221000
         B     TMSGA                                               0095 00222000
*                 END;                                             0096 00223000
*             RFY R2 UNRSTD;          /* RELEASE DCB BASE REGISTER   */ 00224000
@RF00092 DS    0H                                                  0098 00225000
*             END;                                                 0098 00226000
*         /* BUILD THE LIST CONTROL TABLE.                           */ 00227000
*         NODELADR = ADDR(NLSTTAB);   /* PTR TO THE NODELIST TABLE   */ 00228000
@RF00086 LA    @10,NLSTTAB                                         0099 00229000
         ST    @10,NODELADR                                        0099 00230000
*         RWPLADR = ADDR(ACIOPARM);   /* PTR TO READ/WRITE PARMLIST  */ 00231000
         LA    @10,ACIOPARM                                        0100 00232000
         ST    @10,RWPLADR                                         0100 00233000
*         /* BEFORE PASSING CONTROL TO IKJEFA42, CHECK THE ATTENTION */ 00234000
*         /* EXIT BIT IN THE ECB.                                    */ 00235000
*         IF ATTENTN = '1'B                                        0101 00236000
*           THEN                      /* THE EXIT BIT IS ON,         */ 00237000
         L     @10,ACCTPLP                                         0101 00238000
         L     @10,ACCTECBP(,@10)                                  0101 00239000
         TM    ATTENTN(@10),B'01000000'                            0101 00240000
         BO    @RT00101                                            0101 00241000
*             GOTO ACCTRET;           /* GO CLEAN UP & RETURN        */ 00242000
*         /***********************************************************/ 00243000
*         /*                                                         */ 00244000
*         /* PASS CONTROL TO THE LIST FORMATTING ROUTINE. IT WILL    */ 00245000
*         /* EXTRACT THE REQUIRED DATA FROM THE UADS, FORMAT IT &    */ 00246000
*         /* PUT IT OUT TO THE TERMINAL.                             */ 00247000
*         /*                                                         */ 00248000
*         /***********************************************************/ 00249000
*         RFY R1 RSTD;                /* RESTRICT PARAMETER REG      */ 00250000
*         R1 = ADDR(CTAB);            /* IKJEFA42 EXPECTS THE ADDR OF   00251000
*                                        THE LIST CONTROLTAB IN REG1 */ 00252000
         LA    R1,CTAB                                             0104 00253000
*         CALL IKJEFA42;                                           0105 00254000
         L     @15,@CV00050                                        0105 00255000
         BALR  @14,@15                                             0105 00256000
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REG       */ 00257000
*         RFY R15 RSTD;               /* RESTRICT ENTRY POINT REG    */ 00258000
*         RTNCODE = R15;              /* ASSIGN THE RETURN CODE      */ 00259000
         LR    RTNCODE,R15                                         0108 00260000
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REG     */ 00261000
*         /* CHECK WHETHER THE ECB WAS POSTED BY THE ATTENTION EXIT  */ 00262000
*         /* RTNE WHILE IKJEFA42 WAS IN CONTROL.                     */ 00263000
*         IF ATTENTN = '1'B                                        0110 00264000
*           THEN                      /* THE EXIT BIT IS ON,         */ 00265000
         L     @10,ACCTPLP                                         0110 00266000
         L     @10,ACCTECBP(,@10)                                  0110 00267000
         TM    ATTENTN(@10),B'01000000'                            0110 00268000
         BO    @RT00110                                            0110 00269000
*             GOTO ACCTRET;           /* GO CLEAN UP & RETURN        */ 00270000
*         /* ON RETURN FROM IKJEFA42, CHECK THE MESSAGE NUMBER IN    */ 00271000
*         /* THE LIST CONTROL TABLE. 0 MEANS SUCCESSFUL COMPLETION.  */ 00272000
*         /* ANY OTHER NUMBER CORRESPONDS TO AN ERROR MESSAGE TO BE  */ 00273000
*         /* PUT OUT BY THIS RTNE.                                   */ 00274000
*         IF MSGNMBR = 0              /* WAS IKJEFA42 SUCCESSFUL?    */ 00275000
*           THEN                      /* YES,                        */ 00276000
         L     @10,MSGNMBR                                         0112 00277000
         LTR   @10,@10                                             0112 00278000
         BZ    @RT00112                                            0112 00279000
*             GOTO MODEMSG;           /* GO ISSUE MODE MSG: 'LISTED' */ 00280000
*         /* CHECK THE ERROR CODE & PREPARE TO ISSUE THE APPROPRIATE */ 00281000
*         /* MESSAGE TO THE TERMINAL.                                */ 00282000
*         /* MSGNMBR = 20 MEANS THAT THE READ RTNE, IKJEFA51, ISSUED */ 00283000
*         /* AN I/O ERROR MESSAGE.                                   */ 00284000
*         /* MSGNMBR = 30 MEANS THAT THERE WAS NOT ENOUGH WORKING    */ 00285000
*         /* STORAGE FOR ANY USERID TREE - NO DATA WAS PUT OUT.      */ 00286000
*         /* A MESSAGE FOR EACH USERID WAS ISSUED BY IKJEFA42.       */ 00287000
*         IF MSGNMBR = 20             /* I/O ERRMSG HAS BEEN ISSUED  */ 00288000
*          | MSGNMBR = 30             /* NO DATA WAS PUT OUT,        */ 00289000
*           THEN                                                   0114 00290000
         CH    @10,@CH00192                                        0114 00291000
         BE    @RT00114                                            0114 00292000
         CH    @10,@CH00201                                        0114 00293000
         BE    @RT00114                                            0114 00294000
*             GOTO ACCTRET;           /* GO CLEAN UP & RETURN        */ 00295000
*         MSGNO = MSGNMBR;            /* SET THE ERROR MSG NUMBER    */ 00296000
         LR    MSGNO,@10                                           0116 00297000
*         IF MSGNO = 2                /* GETMAIN FAILURE?            */ 00298000
*          | MSGNO = 8                /* UNABLE TO OPEN UADS         */ 00299000
*          | MSGNO = 9                /* BLDL I/O ERROR              */ 00300000
*           THEN                      /* YES,                        */ 00301000
         CH    MSGNO,@CH00059                                      0117 00302000
         BE    @RT00117                                            0117 00303000
         CH    MSGNO,@CH00073                                      0117 00304000
         BE    @RT00117                                            0117 00305000
         CH    MSGNO,@CH00202                                      0117 00306000
         BE    @RT00117                                            0117 00307000
*             GOTO TMSGA;             /* GO ISSUE THE MESSAGE        */ 00308000
*         IF MSGNO = 4                /* SPECIFIED USERID NOT FOUND? */ 00309000
*           THEN                      /* YES,                        */ 00310000
         CH    MSGNO,@CH00139                                      0119 00311000
         BE    @RT00119                                            0119 00312000
*             GOTO MPREP1;            /* GO CONSTRUCT THE MESSAGE    */ 00313000
*         IF MSGNO = 13               /* PUTLINE ERROR?              */ 00314000
*          | MSGNO = 14               /* READ ERROR W/O MSG          */ 00315000
*           THEN                      /* YES,                        */ 00316000
         CH    MSGNO,@CH00204                                      0121 00317000
         BE    @RT00121                                            0121 00318000
         CH    MSGNO,@CH00205                                      0121 00319000
         BE    @RT00121                                            0121 00320000
*             GOTO MLMSG;             /* GO CONSTRUCT THE MESSAGE    */ 00321000
*         CALL MSGFNDR;               /* GO CALCULATE MSG ADDR       */ 00322000
         BAL   @14,MSGFNDR                                         0123 00323000
*         SEGPTR13 = ADDR(INSRT1);    /* POINT TO INSERT SEGMENT     */ 00324000
         LA    @10,INSRT1                                          0124 00325000
         ST    @10,SEGPTR13                                        0124 00326000
*         INSRTL1 = 12;               /* SET LENGTH OF SEGMENT       */ 00327000
         MVC   INSRTL1(2),@CH00187                                 0125 00328000
*         IF MSGNO = 5                /* SPECIFIED PASSWORD NOT FOUND*/ 00329000
*           THEN                      /* YES,                        */ 00330000
         CH    MSGNO,@CH00207                                      0126 00331000
         BNE   @RF00126                                            0126 00332000
*             INSRTT1(1:8) = PASSWD;  /* INSERT THE PASSWORD         */ 00333000
         MVC   INSRTT1(8),PASSWD                                   0127 00334000
*           ELSE                                                   0128 00335000
*             IF MSGNO = 6            /* SPECIFIED ACCTNMBR NOT FOUND*/ 00336000
*               THEN                  /* YES,                        */ 00337000
         B     @RC00126                                            0128 00338000
@RF00126 CH    MSGNO,@CH00142                                      0128 00339000
         BNE   @RF00128                                            0128 00340000
*                 DO;                                              0129 00341000
*                 INSRTL1 = ACTLEN+4; /* SET LENGTH OF SEGMENT       */ 00342000
         SLR   @10,@10                                             0130 00343000
         IC    @10,ACTLEN                                          0130 00344000
         LA    @15,4                                               0130 00345000
         ALR   @15,@10                                             0130 00346000
         STH   @15,INSRTL1                                         0130 00347000
*                 INSRTT1 = ACCTNO(1:ACTLEN);/* INSERT THE ACCT NUM  */ 00348000
         MVI   INSRTT1+1,C' '                                      0131 00349000
         MVC   INSRTT1+2(38),INSRTT1+1                             0131 00350000
         BCTR  @10,0                                               0131 00351000
         EX    @10,@SM00246                                        0131 00352000
*                 END;                                             0132 00353000
*               ELSE                                               0133 00354000
*                 INSRTT1(1:8) = PROCNM;  /* INSERT THE PROC NAME    */ 00355000
         B     @RC00128                                            0133 00356000
@RF00128 MVC   INSRTT1(8),PROCNM                                   0133 00357000
*         /* GO TO PUT OUT THE ERROR MESSAGE                         */ 00358000
*         GOTO PUTMSG;                /* GO TO ISSUE THE MESSAGE     */ 00359000
         B     PUTMSG                                              0134 00360000
*LISTIDS: /***********************************************************/ 00361000
*         /*                                                         */ 00362000
*         /* THE USER HAS ENTERED THE 'LISTIDS' SUBCOMMAND, ASKING   */ 00363000
*         /* FOR A LIST OF ALL USERIDS IN THE UADS DIRECTORY. NO     */ 00364000
*         /* DATA HAS TO BE EXTRACTED FROM THE UADS.                 */ 00365000
*         /*                                                         */ 00366000
*         /***********************************************************/ 00367000
*         UIDLPTR = 0;                /* RESET COMMAND INDICATOR     */ 00368000
LISTIDS  L     @10,ACCTPLP                                         0135 00369000
         SLR   @07,@07                                             0135 00370000
         ST    @07,UIDLPTR(,@10)                                   0135 00371000
*         /* ENQUEUE ON THE UADS DATA SET                            */ 00372000
*         GEN (ENQ  MF=(E,UADENQ))                                 0136 00373000
*           REFS(MAJNAME,MINNAME,UADENQ);                          0136 00374000
         ENQ  MF=(E,UADENQ)                                             00375000
*         ENQSW = '1'B;               /* SET SWITCH FOR DEQUEUE      */ 00376000
         OI    ENQSW,B'10000000'                                   0137 00377000
*         RFY R2 RSTD;                /* RESTRICT DCB BASE REGISTER  */ 00378000
*         R2 = ADDR(UADSDCB);         /* LOAD ADDR OF DCB INTO REG2  */ 00379000
         LA    R2,UADSDCB                                          0139 00380000
*         GEN (OPEN  ((R2)),MF=(E,OPENDIR))                        0140 00381000
*           REFS(OPENDIR,R2);                                      0140 00382000
         OPEN  ((R2)),MF=(E,OPENDIR)                                    00383000
*         /* IF OPEN WAS NOT SUCCESSFUL, ISSUE AN ERROR MESSAGE &    */ 00384000
*         /* RETURN TO ACCOUNT.                                      */ 00385000
*         IF DCBOFLG = '0'B           /* WAS 'OPEN' SUCCESSFUL?      */ 00386000
*           THEN                      /* NO,                         */ 00387000
         TM    DCBOFLG,B'00010000'                                 0141 00388000
         BNZ   @RF00141                                            0141 00389000
*             DO;                                                  0142 00390000
*               MSGNO = 8;            /* SET ERROR MSG NUMBER        */ 00391000
         LA    MSGNO,8                                             0143 00392000
*               GOTO TMSGA;           /* GO CONSTRUCT THE MESSAGE    */ 00393000
         B     TMSGA                                               0144 00394000
*             END;                                                 0145 00395000
*         RFY R2 UNRSTD;              /* RLLEASE DCB BASE REGISTER   */ 00396000
@RF00141 DS    0H                                                  0147 00397000
*         USCNT = 0;                  /* SET COUNT OF USERIDS TO 0   */ 00398000
         SLR   USCNT,USCNT                                         0147 00399000
*         /* BUILD THE PARAMETER LIST FOR READ, IKJEFA51.            */ 00400000
*         ACIOFLGS = '24'X;           /* TURN ON FLAGS 3 & 6 - READ A   00401000
*                                        DIRECTORY BLOCK ONLY        */ 00402000
         MVI   ACIOFLGS,X'24'                                      0148 00403000
*READLVL: /* BEFORE READING A BLOCK FROM THE DIRECTORY, CHECK THE    */ 00404000
*         /* ATTENTION EXIT BIT IN THE ECB. IF IT IS ON, TERMINATE   */ 00405000
*         /* LIST AND RETURN TO ACCOUNT.                             */ 00406000
*         IF ATTENTN = '1'B                                        0149 00407000
*           THEN                      /* THE EXIT BIT IS ON,         */ 00408000
READLVL  L     @10,ACCTPLP                                         0149 00409000
         L     @10,ACCTECBP(,@10)                                  0149 00410000
         TM    ATTENTN(@10),B'01000000'                            0149 00411000
         BO    @RT00149                                            0149 00412000
*             GOTO ACCTRET;           /* GO CLEAN UP & RETURN        */ 00413000
*         RFY R1 RSTD;                /* RESTRICT PARAMETER REG      */ 00414000
*         R1 = ADDR(ACIOPARM);        /* SET PTR TO READ PARMLIST    */ 00415000
         LA    R1,ACIOPARM                                         0152 00416000
*         CALL IKJEFA51;              /* THE READ RTNE WILL READ ONE    00417000
*                                        BLOCK INTO DIRECTORY W/A    */ 00418000
         L     @15,@CV00051                                        0153 00419000
         BALR  @14,@15                                             0153 00420000
*         RFY R1 UNRSTD;              /* RELEASE PARAMETER REG       */ 00421000
*         RFY R15 RSTD;               /* RESTRICT RETURN CODE REG    */ 00422000
*         RTNCODE = R15;              /* SAVE THE RETURN CODE        */ 00423000
         LR    RTNCODE,R15                                         0156 00424000
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REG     */ 00425000
*         IF RTNCODE ^= 0             /* READ SUCCESSFUL?            */ 00426000
*           THEN                      /* NO,                         */ 00427000
         LTR   RTNCODE,RTNCODE                                     0158 00428000
         BZ    @RF00158                                            0158 00429000
*             DO;                                                  0159 00430000
*             IF RTNCODE = 20         /* I/O ERROR, MSG ISSUED       */ 00431000
*               THEN                  /* YES,                        */ 00432000
         CH    RTNCODE,@CH00192                                    0160 00433000
         BE    @RT00160                                            0160 00434000
*                 GOTO ACCTRET;       /* GO CLEAN UP & RETURN        */ 00435000
*               ELSE                                               0162 00436000
*                 MSGNO = 14;         /* READ ERROR                  */ 00437000
         LA    MSGNO,14                                            0162 00438000
*                 GOTO MLMSG;         /* GO CONSTRUCT THE MESSAGE    */ 00439000
         B     MLMSG                                               0163 00440000
*             END;                                                 0164 00441000
*         /* ONE DIRECTORY BLOCK IS NOW IN THE WORK AREA             */ 00442000
*         MEMPTR = ADDR(DIRYBLK)+2;   /* SET BASE PTR FOR 1ST ENTRY  */ 00443000
@RF00158 LA    MEMPTR,DIRYBLK                                      0165 00444000
         AH    MEMPTR,@CH00059                                     0165 00445000
*LNGFNDR: /* THIS LOOP WILL CALCULATE THE LENGTH OF THE USERID BY    */ 00446000
*         /* FINDING THE 1ST NON-BLANK CHARACTER, STARTING FROM THE  */ 00447000
*         /* RIGHT. THAT CHARACTER IS THE EXTENT NUMBER & IS NOT     */ 00448000
*         /* INCLUDED IN THE LENGTH.                                 */ 00449000
*         USRLEN = 8;                 /* SET STARTING LENGTH         */ 00450000
LNGFNDR  MVI   USRLEN,X'08'                                        0166 00451000
*         DO WHILE MEMNAME(USRLEN)    /* SCAN FOR BLANKS             */ 00452000
*          = ' ';                                                  0167 00453000
         B     @DE00167                                            0167 00454000
@DL00167 DS    0H                                                  0168 00455000
*           USRLEN = USRLEN-1;        /* DECREMENT LENGTH OF USERID  */ 00456000
         SLR   @10,@10                                             0168 00457000
         IC    @10,USRLEN                                          0168 00458000
         BCTR  @10,0                                               0168 00459000
         STC   @10,USRLEN                                          0168 00460000
*           END;                                                   0169 00461000
@DE00167 SLR   @10,@10                                             0169 00462000
         IC    @10,USRLEN                                          0169 00463000
         ALR   @10,MEMPTR                                          0169 00464000
         AL    @10,@CF00248                                        0169 00465000
         CLI   MEMNAME(@10),C' '                                   0169 00466000
         BE    @DL00167                                            0169 00467000
*         /* CHECK THE 1ST NON-BLANK CHARACTER. IF IT IS '0', THEN   */ 00468000
*         /* THIS IS A BASE MEMBER & WILL BE PUT INTO THE OUTPUT     */ 00469000
*         /* LINE. IF NOT, THEN IT IS EITHER AN EXTENSION OF THE     */ 00470000
*         /* PREVIOUS MEMBER OR THE END OF THE DIRECTORY.            */ 00471000
*         IF MEMNAME(USRLEN) = '0'    /* BASE MEMBER?                */ 00472000
*           THEN                      /* YES,                        */ 00473000
         SLR   @10,@10                                             0170 00474000
         IC    @10,USRLEN                                          0170 00475000
         ALR   @10,MEMPTR                                          0170 00476000
         AL    @10,@CF00248                                        0170 00477000
         CLI   MEMNAME(@10),C'0'                                   0170 00478000
         BNE   @RF00170                                            0170 00479000
*             DO;                                                  0171 00480000
*             USRLEN = USRLEN-1;      /* DECREMENT PAST INDEX        */ 00481000
         SLR   @10,@10                                             0172 00482000
         IC    @10,USRLEN                                          0172 00483000
         BCTR  @10,0                                               0172 00484000
         STC   @10,USRLEN                                          0172 00485000
*             GOTO FORMAT;            /* GO PUT IT INTO THE OUTPLINE */ 00486000
         B     FORMAT                                              0173 00487000
*             END;                                                 0174 00488000
*         /* IS IT THE END OF THE DIRECTORY (ALL BINARY ONES)?       */ 00489000
*         IF MEMNAME =                /* END OF DIRECTORY?           */ 00490000
*           'FFFFFFFFFFFFFFFF'X                                    0175 00491000
*           THEN                      /* YES,                        */ 00492000
@RF00170 CLC   MEMNAME(8,MEMPTR),@CB00218                          0175 00493000
         BNE   @RF00175                                            0175 00494000
*             /* CHECK WHETHER ANY USERIDS ARE LEFT IN THE OUTPUT    */ 00495000
*             /* LINE.                                               */ 00496000
*             IF USCNT > 0            /* ANY USERIDS LEFT?           */ 00497000
*               THEN                  /* YES,                        */ 00498000
         LTR   USCNT,USCNT                                         0176 00499000
         BNP   @RF00176                                            0176 00500000
*                 DO;                                              0177 00501000
*                   EODFLG = '1'B;    /* 1- END OF DIRECTORY, NO MORE   00502000
*                                        USERIDS TO BE EXTRACTED     */ 00503000
         OI    EODFLG,B'01000000'                                  0178 00504000
*                   GOTO PUTLN;       /* PUT OUT REMAINING USERIDS   */ 00505000
         B     PUTLN                                               0179 00506000
*                 END;                                             0180 00507000
*               ELSE                  /* NO, ALL USERIDS HAVE BEEN 0181 00508000
*                                        PUT OUT                     */ 00509000
*                 GOTO MODEMSG;       /* ISSUE MODE MESSAGE          */ 00510000
*NEXTMEM: /* REFERENCE THE NEXT MEMBER ENTRY BY INCREMENTING THE     */ 00511000
*         /* BASE POINTER BY THE CONSTANT LENGTH OF AN ENTRY AND THE */ 00512000
*         /* NUMBER OF USER HALF-WORDS CONTAINED IN BLOKC.           */ 00513000
*         MEMPTR = MEMPTR+12+(BLOKC&'00011111'B)*2;                0182 00514000
@RF00175 DS    0H                                                  0182 00515000
NEXTMEM  LA    @10,12                                              0182 00516000
         ALR   @10,MEMPTR                                          0182 00517000
         LA    @07,31                                              0182 00518000
         SLR   @04,@04                                             0182 00519000
         IC    @04,BLOKC(,MEMPTR)                                  0182 00520000
         NR    @07,@04                                             0182 00521000
         ALR   @07,@07                                             0182 00522000
         ALR   @10,@07                                             0182 00523000
         LR    MEMPTR,@10                                          0182 00524000
*         /* CHECK FOR END OF BLOCK BY COMPARING THE BASE POINTER    */ 00525000
*         /* TO THE ADDR OF THE BLOCK PLUS THE NUMBER OF BYTES USED  */ 00526000
*         /* ON THE BLOCK.                                           */ 00527000
*         IF MEMPTR >= ADDR(DIRYBLK)+NUMBYTES                      0183 00528000
*           THEN                      /* YES, END OF BLOCK,          */ 00529000
         LA    @10,DIRYBLK                                         0183 00530000
         SLR   @07,@07                                             0183 00531000
         ICM   @07,3,NUMBYTES                                      0183 00532000
         ALR   @10,@07                                             0183 00533000
         CR    MEMPTR,@10                                          0183 00534000
         BNL   @RT00183                                            0183 00535000
*             GOTO READLVL;           /* GO READ THE NEXT BLOCK      */ 00536000
*           ELSE                      /* NO,                         */ 00537000
*             GOTO LNGFNDR;           /* GO CALCULATE THE LENGTH     */ 00538000
         B     LNGFNDR                                             0185 00539000
*FORMAT:  /* PUT THE USERID INTO THE OUTPUT LINE.                    */ 00540000
*         USERIDS = MEMNAME(1:USRLEN);                             0186 00541000
FORMAT   MVI   USERIDS+7(OUTAPTR),C' '                             0186 00542000
         MVC   USERIDS+8(8,OUTAPTR),USERIDS+7(OUTAPTR)             0186 00543000
         SLR   @10,@10                                             0186 00544000
         IC    @10,USRLEN                                          0186 00545000
         BCTR  @10,0                                               0186 00546000
         EX    @10,@SM00250                                        0186 00547000
*         OUTAPTR = OUTAPTR+10;       /* POINT TO THE NEXT USERID  0187 00548000
*                                        POSITION IN THE OUTPUT LINE */ 00549000
         LA    @10,10                                              0187 00550000
         ALR   OUTAPTR,@10                                         0187 00551000
*         USCNT = USCNT+1;            /* INCREMENT THE USERID COUNT  */ 00552000
         AH    USCNT,@CH00032                                      0188 00553000
*         /* IF THE OUTPUT LINE IS FULL, SEND IT TO THE TERMINAL.    */ 00554000
*         IF USCNT < 10               /* OUTPUT LINE FULL?           */ 00555000
*           THEN                      /* NO,                         */ 00556000
         CR    USCNT,@10                                           0189 00557000
         BL    @RT00189                                            0189 00558000
*             GOTO NEXTMEM;           /* CONTINUE WITH NEXT ENTRY    */ 00559000
*                                                                  0190 00560000
*PUTLN:   /* PREPARE TO CALL THE PUTLINE SERVICE ROUTINE TO PUT      */ 00561000
*         /* ONE LINE OF USERIDS OUT TO THE TERMINAL.                */ 00562000
*         INDENT = '  ';              /* INDENTATION                 */ 00563000
PUTLN    LA    @10,4                                               0191 00564000
         LA    @02,OUTPAREA                                        0191 00565000
         LR    @15,@02                                             0191 00566000
         ALR   @15,@10                                             0191 00567000
         MVC   INDENT(2,@15),@CC00225                              0191 00568000
*         NULBYTE = 0;                                             0192 00569000
         SLR   @15,@15                                             0192 00570000
         STH   @15,NULBYTE+2(,@02)                                 0192 00571000
*         LINLEN = 4+(USCNT*10);      /* LENGTH OF LINE IS THE NUMBER   00572000
*                                        OF USERIDS * 10 PLUS THE  0193 00573000
*                                        FOUR-BYTE HEADER            */ 00574000
         LR    @15,USCNT                                           0193 00575000
         MH    @15,@CH00141                                        0193 00576000
         ALR   @15,@10                                             0193 00577000
         STH   @15,LINLEN(,@02)                                    0193 00578000
*         GEN (PUTLINE  OUTPUT=(OUTPAREA,,,DATA),MF=(E,PLPLIST))   0194 00579000
*           REFS(OUTPAREA,PLPLIST);                                0194 00580000
         PUTLINE  OUTPUT=(OUTPAREA,,,DATA),MF=(E,PLPLIST)               00581000
*         /* CHECK THE PUTLINE RETURN CODE.                          */ 00582000
*         RFY R15 RSTD;               /* RESTRICT RETURN CODE REG    */ 00583000
*         RTNCODE = R15;              /* SAVE THE RETURN CODE        */ 00584000
         LR    RTNCODE,R15                                         0196 00585000
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REG     */ 00586000
*         IF RTNCODE ^= 0             /* WAS PUTLINE SUCCESSFUL?     */ 00587000
*           THEN                      /* NO,                         */ 00588000
         SLR   @10,@10                                             0198 00589000
         CR    RTNCODE,@10                                         0198 00590000
         BNE   @RT00198                                            0198 00591000
*             GOTO CHKPTL;            /* GO CHECK THE ERROR CODE     */ 00592000
*         /* ARE THERE MORE USERIDS TO BE PUT OUT? IF YES, GO BACK   */ 00593000
*         /* AND BUILD THE NEXT OUTPUT LINE.                         */ 00594000
*         IF EODFLG = '1'B            /* END OF DIRECTORY?           */ 00595000
*           THEN                      /* YES,                        */ 00596000
         TM    EODFLG,B'01000000'                                  0200 00597000
         BO    @RT00200                                            0200 00598000
*             GOTO MODEMSG;           /* ISSUE MODE MSG & RETURN     */ 00599000
*         USCNT = 0;                  /* SET COUNT BACK TO 0         */ 00600000
         LR    USCNT,@10                                           0202 00601000
*         OUTAPTR = ADDR(OUTPAREA);   /* RESET PTR TO 1ST POSITION   */ 00602000
         LA    OUTAPTR,OUTPAREA                                    0203 00603000
*         GOTO NEXTMEM;               /* CONTINUE WITH NEXT ENTRY    */ 00604000
         B     NEXTMEM                                             0204 00605000
*         /***********************************************************/ 00606000
*         /*                                                         */ 00607000
*         /*                 HANDLING OF MESSAGES                    */ 00608000
*         /*                                                         */ 00609000
*         /***********************************************************/ 00610000
*MODEMSG: /* LIST OR LISTIDS HAS COMPLETED SUCCESSFULLY.             */ 00611000
*         POSTFLG = '1'B;             /* DO NOT POST THE ACCOUNT ECB */ 00612000
MODEMSG  OI    POSTFLG,B'00100000'                                 0205 00613000
*         MSGNO =1;                   /* SET MESSAGE NUMBER          */ 00614000
         LA    MSGNO,1                                             0206 00615000
*TMSGA:   /* CONTROL PASSED HERE FOR NON-INSERTION MESSAGES          */ 00616000
*         CALL MSGFNDR;               /* GO CALCULATE MSG ADDR       */ 00617000
TMSGA    BAL   @14,MSGFNDR                                         0207 00618000
*         GOTO PUTMSG;                /* GO ISSUE THE MSG            */ 00619000
         B     PUTMSG                                              0208 00620000
*MLMSG:   /* CONTROL PASSED HERE FOR RETURN CODE MESSAGES.           */ 00621000
*         CALL MSGFNDR;               /* GO CALCULATE MSG ADDR       */ 00622000
MLMSG    BAL   @14,MSGFNDR                                         0209 00623000
*         CVD (RTNCODE,DECRTCD);      /* CONVERT CODE TO DECIMAL     */ 00624000
         CVD   RTNCODE,DECRTCD                                     0210 00625000
*         UNPK (INSRTT1(1:2),DECRTCD(6:8));/* UNPACK INTO MSG.       */ 00626000
         UNPK  INSRTT1(2),DECRTCD+5(3)                             0211 00627000
*         INSRTL1 = 6;                /* SET LENGTH OF SEGMENT       */ 00628000
         MVC   INSRTL1(2),@CH00142                                 0212 00629000
*         INSRTT1(2) = INSRTT1(2)|'F0'X; /* REMOVE SIGN              */ 00630000
         OI    INSRTT1+1,X'F0'                                     0213 00631000
*         SEGPTR23 = ADDR(INSRT1);    /* SET PTR TO ACTIVE INSERT    */ 00632000
         LA    @10,INSRT1                                          0214 00633000
         ST    @10,SEGPTR23                                        0214 00634000
*         GOTO PUTMSG;                /* GO ISSUE THE MESSAGE        */ 00635000
         B     PUTMSG                                              0215 00636000
*MPREP1:  /* CONTROL IS PASSED TO APPROPRIATE PARTS OF THIS SECTION  */ 00637000
*         /* TO COMPLETE THE CONSTRUCTION OF INSERTION-TYPE MESSAGES */ 00638000
*         CALL MSGFNDR;               /* GO CALCULATE THE MSG ADDR   */ 00639000
MPREP1   BAL   @14,MSGFNDR                                         0216 00640000
*         /* INITIALIZE THE USERID INSERT SEGMENT.                   */ 00641000
*         INSRTL1 = USRLEN+4;         /* LENGTH OF MSG SEGMENT       */ 00642000
         SLR   @10,@10                                             0217 00643000
         IC    @10,USRLEN                                          0217 00644000
         LA    @15,4                                               0217 00645000
         ALR   @15,@10                                             0217 00646000
         STH   @15,INSRTL1                                         0217 00647000
*         INSRTT1 = USRID(1:USRLEN);  /* INSERT THE USERID           */ 00648000
         MVI   INSRTT1+1,C' '                                      0218 00649000
         MVC   INSRTT1+2(38),INSRTT1+1                             0218 00650000
         BCTR  @10,0                                               0218 00651000
         EX    @10,@SM00253                                        0218 00652000
*         SEGPTR13 = ADDR(INSRT1);    /* SET PTR TO ACTIVE INSERT    */ 00653000
         LA    @10,INSRT1                                          0219 00654000
         ST    @10,SEGPTR13                                        0219 00655000
*PUTMSG:  /* PREPARE TO CALL THE PUTLINE SERVICE ROUTINE.            */ 00656000
*         GEN (PUTLINE OUTPUT=(AMSGHDR1,,MULTLVL),MF=(E,PLPLIST))  0220 00657000
*           REFS(AMSGHDR1,PLPLIST);                                0220 00658000
PUTMSG   PUTLINE OUTPUT=(AMSGHDR1,,MULTLVL),MF=(E,PLPLIST)              00659000
*         RFY R15 RSTD;               /* RESTRICT ENTRY POINT REG    */ 00660000
*         RTNCODE = R15;              /* ASSIGN THE RETURN CODE      */ 00661000
         LR    RTNCODE,R15                                         0222 00662000
*         RFY R15 UNRSTD;             /* RELEASE RETURN CODE REG     */ 00663000
*         /* CHECK THE PUTLINE RETURN CODE.                          */ 00664000
*         IF RTNCODE ^= 0             /* SUCCESSFUL?                 */ 00665000
*           THEN                      /* NO,                         */ 00666000
         LTR   RTNCODE,RTNCODE                                     0224 00667000
         BZ    @RF00224                                            0224 00668000
*             DO;                                                  0225 00669000
*CHKPTL:      IF RTNCODE = 4          /* ATTENTION INTERRUPT?        */ 00670000
*                | PUTLFLG = '1'B     /* OR SECOND ATTEMPT TO PUT OUT   00671000
*                                        A MESSAGE?                  */ 00672000
*               THEN                  /* YES, ONE OF THE ABOVE       */ 00673000
CHKPTL   CH    RTNCODE,@CH00139                                    0226 00674000
         BE    @RT00226                                            0226 00675000
         TM    PUTLFLG,B'00010000'                                 0226 00676000
         BO    @RT00226                                            0226 00677000
*                 GOTO ACCTRET;       /* RETURN TO ACCOUNT           */ 00678000
*             PUTLFLG = '1'B;         /* SET FLAG - ONE ATTEMPT HAS     00679000
*                                        BEEN MADE TO PUT OUT A MSG  */ 00680000
*             POSTFLG = '0'B;         /* AN ERROR OCCURRED - THE ECB    00681000
*                                        WILL BE POSTED              */ 00682000
         OI    PUTLFLG,B'00010000'                                 0229 00683000
         NI    POSTFLG,B'11011111'                                 0229 00684000
*             IF RTNCODE = 16         /* GETMAIN FAILURE?            */ 00685000
*               THEN                  /* YES,                        */ 00686000
         CH    RTNCODE,@CH00194                                    0230 00687000
         BNE   @RF00230                                            0230 00688000
*                 DO;                                              0231 00689000
*                 MSGNO = 2;          /* SET ERROR MSG NUMBER        */ 00690000
         LA    MSGNO,2                                             0232 00691000
*                 GOTO TMSGA;         /* GO ISSUE THE MESSAGE        */ 00692000
         B     TMSGA                                               0233 00693000
*                 END;                                             0234 00694000
*               ELSE                  /* NO, RTNCODE = 12            */ 00695000
*                 DO;                                              0235 00696000
@RF00230 DS    0H                                                  0236 00697000
*                 MSGNO = 13;         /* SET MSG NUMBER              */ 00698000
         LA    MSGNO,13                                            0236 00699000
*                 GOTO MLMSG;         /* GO CONSTRUCT THE MSG        */ 00700000
         B     MLMSG                                               0237 00701000
*                 END;                                             0238 00702000
*             END;                                                 0239 00703000
*ACCTRET: /***********************************************************/ 00704000
*         /*                                                         */ 00705000
*         /*        PERFORM THE NECESSARY CLEANUP AND                */ 00706000
*         /*        RETURN TO THE ACCOUNT COMMAND PROCESSOR          */ 00707000
*         /*                                                         */ 00708000
*         /***********************************************************/ 00709000
*         /* DEQUEUE FROM THE UADS DATA SET                          */ 00710000
*         IF ENQSW = '1'B             /* IS THE UADS ENQUEUED?       */ 00711000
*           THEN                      /* YES,                        */ 00712000
@RF00224 DS    0H                                                  0240 00713000
ACCTRET  TM    ENQSW,B'10000000'                                   0240 00714000
         BNO   @RF00240                                            0240 00715000
*             GEN (DEQ   ,MF=(E,UADDEQ))/* DEQ FROM THE UADS.        */ 00716000
*               REFS(MAJNAME,MINNAME,UADDEQ);                      0241 00717000
         DEQ   ,MF=(E,UADDEQ)                                           00718000
*         RFY R2 RSTD;                /* RESTRICT DCB BASE REGISTER  */ 00719000
@RF00240 DS    0H                                                  0243 00720000
*         /* CHECK THE OPEN FLAG IN THE UADS DCB. IF THE DIRECTORY IS*/ 00721000
*         /* OPEN (FLAG=1), THE 'CLOSE' MACRO WILL BE ISSUED.        */ 00722000
*         R2 = ADDR(UADSDCB);         /* LOAD ADDR OF DCB INTO REG2  */ 00723000
         LA    R2,UADSDCB                                          0243 00724000
*         IF DCBOFLG = '1'B           /* IS THE UADS DCB OPEN?       */ 00725000
*           THEN                      /* YES,                        */ 00726000
         TM    DCBOFLG,B'00010000'                                 0244 00727000
         BNO   @RF00244                                            0244 00728000
*             GEN (CLOSE ((R2)),MF=(E,CLOSDIR))                    0245 00729000
*               REFS(CLOSDIR,R2);                                  0245 00730000
         CLOSE ((R2)),MF=(E,CLOSDIR)                                    00731000
*         RFY R2 UNRSTD;              /* RELEASE DCB BASE REGISTER   */ 00732000
@RF00244 DS    0H                                                  0247 00733000
*         /* IF LIST OR LISTIDS WERE UNSUCCESSFUL, POST THE ECB TO   */ 00734000
*         /* SIGNAL TO ACCOUNT TO ISSUE THE 'ACCOUNT' MESSAGE.       */ 00735000
*         IF POSTFLG = '0'B                                        0247 00736000
*           THEN                                                   0247 00737000
         TM    POSTFLG,B'00100000'                                 0247 00738000
         BNZ   @RF00247                                            0247 00739000
*             ACCTECB = '40FFFFFF'X;  /* POST ACCOUNT'S ECB WITH ERRO*/ 00740000
         L     @10,ACCTPLP                                         0248 00741000
         L     @10,ACCTECBP(,@10)                                  0248 00742000
         MVC   ACCTECB(4,@10),@CF00238                             0248 00743000
*/* LIST HAS COMPLETED PROCESSING -- RETURN TO ACCOUNT.              */ 00744000
*         RETURN;                                                  0249 00745000
@EL00001 L     @13,4(,@13)                                         0249 00746000
@EF00001 L     @00,@SIZDATD                                        0249 00747000
         LR    @01,@11                                             0249 00748000
         FREEMAIN R,LV=(0),A=(1)                                        00749000
@ER00001 LM    @14,@12,12(@13)                                     0249 00750000
         BR    @14                                                 0249 00751000
*         /***********************************************************/ 00752000
*         /* THIS SUBROUTINE CALCULATES THE ADDRESS OF A MESSAGE IN  */ 00753000
*         /* THE CHANGE MESSAGE CSECT IKJEFA21.                      */ 00754000
*         /***********************************************************/ 00755000
*MSGFNDR: PROC;                                                    0250 00756000
MSGFNDR  STM   @14,@12,12(@13)                                     0250 00757000
*         MSGFIND = (MSGNO*2)-2       /* CALCULATE ADDR OF OFFSET TO */ 00758000
*           +ADDR(LSTMSG);            /* MSG IN THE MSG CSECT        */ 00759000
         LR    MSGFIND,MSGNO                                       0251 00760000
         ALR   MSGFIND,MSGFIND                                     0251 00761000
         BCTR  MSGFIND,0                                           0251 00762000
         BCTR  MSGFIND,0                                           0251 00763000
         L     @10,@CV00049                                        0251 00764000
         ALR   MSGFIND,@10                                         0251 00765000
*         MSGPTR = MOFFSET+ADDR(LSTMSG);/* CALCULATE ADDR OF MSG   0252 00766000
*                                          HEADER IN THE MSG CSECT   */ 00767000
         L     MSGPTR,@CV00049                                     0252 00768000
         AH    MSGPTR,MOFFSET(,MSGFIND)                            0252 00769000
*         MINDX = (SGNO1*4)+8;        /* NUMBER OF BYTES IN MSGHEADR */ 00770000
         LA    @10,8                                               0253 00771000
         L     MINDX,SGNO1(,MSGPTR)                                0253 00772000
         SLA   MINDX,2                                             0253 00773000
         ALR   MINDX,@10                                           0253 00774000
*         AMSGHDR1(1:MINDX) =         /* TRANSFER MSG HEADER TO..    */ 00775000
*           PTRMASK1;                 /* ..DYNAMIC HEADER AREA       */ 00776000
         LR    @05,MINDX                                           0254 00777000
         BCTR  @05,0                                               0254 00778000
         EX    @05,@SM00255                                        0254 00779000
*         /* IF THIS IS NOT A MULTI-LEVEL MESSAGE, THEN BYPASS THE   */ 00780000
*         /* MESSAGE HEADER TRANSFER.                                */ 00781000
*         IF NXTLADR1 ^= '0'B                                      0255 00782000
*           THEN                      /* YES, MULTI-LEVEL MSG        */ 00783000
         L     @15,NXTLADR1(,MSGPTR)                               0255 00784000
         LTR   @15,@15                                             0255 00785000
         BZ    @RF00255                                            0255 00786000
*             DO;                                                  0256 00787000
*             SEGPTR10 = ADDR(AMSGHDR2);/* POINT TO 2ND LEVEL        */ 00788000
         LA    @05,AMSGHDR2                                        0257 00789000
         ST    @05,SEGPTR10                                        0257 00790000
*             MINDX = (SGNO2*4)+8;    /* NUMBER OF BYTES IN MSGHEADR */ 00791000
         L     MINDX,SGNO2(,@15)                                   0258 00792000
         SLA   MINDX,2                                             0258 00793000
         ALR   MINDX,@10                                           0258 00794000
*             AMSGHDR2(1:MINDX) =     /* TRANSFER MSG HEADER TO..    */ 00795000
*               PTRMASK2;             /* ..DYNAMIC HEADER AREA       */ 00796000
         LR    @10,MINDX                                           0259 00797000
         BCTR  @10,0                                               0259 00798000
         EX    @10,@SM00257                                        0259 00799000
*             END;                                                 0260 00800000
*         END MSGFNDR;                /* RETURN TO POINT OF CALL     */ 00801000
@EL00002 DS    0H                                                  0261 00802000
@EF00002 DS    0H                                                  0261 00803000
@ER00002 LM    @14,@12,12(@13)                                     0261 00804000
         BR    @14                                                 0261 00805000
*         END IKJEFA40                                             0262 00806000
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      * 00807000
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        * 00808000
*/*%INCLUDE SYSLIB  (IKJPPL  )                                        * 00809000
*;                                                                 0262 00810000
@DATA    DS    0H                                                       00811000
@CH00032 DC    H'1'                                                     00812000
@CH00059 DC    H'2'                                                     00813000
@CH00139 DC    H'4'                                                     00814000
@CH00207 DC    H'5'                                                     00815000
@CH00142 DC    H'6'                                                     00816000
@CH00073 DC    H'8'                                                     00817000
@CH00202 DC    H'9'                                                     00818000
@CH00141 DC    H'10'                                                    00819000
@CH00187 DC    H'12'                                                    00820000
@CH00204 DC    H'13'                                                    00821000
@CH00205 DC    H'14'                                                    00822000
@CH00194 DC    H'16'                                                    00823000
@CH00192 DC    H'20'                                                    00824000
@CH00201 DC    H'30'                                                    00825000
@SM00243 MVC   CPLS(0),MCPLS                                            00826000
@SM00246 MVC   INSRTT1(0),ACCTNO                                        00827000
@SM00250 MVC   USERIDS+6(0,OUTAPTR),MEMNAME(MEMPTR)                     00828000
@SM00253 MVC   INSRTT1(0),USRID                                         00829000
@SM00255 MVC   AMSGHDR1(0),PTRMASK1(MSGPTR)                             00830000
@SM00257 MVC   AMSGHDR2(0),PTRMASK2(@15)                                00831000
@DATD    DSECT                                                          00832000
         DS    0F                                                       00833000
@SA00001 DS    18F                                                      00834000
IKJEFA40 CSECT                                                          00835000
         DS    0F                                                       00836000
@CF00248 DC    F'-1'                                                    00837000
@CF00238 DC    XL4'40FFFFFF'                                            00838000
@DATD    DSECT                                                          00839000
         DS    0D                                                       00840000
LSTPDLAD DS    A                                                        00841000
VCHKPL   DS    CL26                                                     00842000
         ORG   VCHKPL                                                   00843000
EXITADD  DS    AL4                                                      00844000
EXITRTCD DS    AL4                                                      00845000
NODEPTR  DS    AL4                                                      00846000
@NM00003 DS    AL4                                                      00847000
PPLPTR   DS    AL4                                                      00848000
SAVARAD  DS    AL4                                                      00849000
CMDIND   DS    FL1                                                      00850000
NUMOFLV  DS    FL1                                                      00851000
         ORG   VCHKPL+26                                                00852000
         DS    CL2                                                      00853000
CTAB     DS    CL16                                                     00854000
         ORG   CTAB                                                     00855000
ACCTPLP  DS    AL4                                                      00856000
NODELADR DS    AL4                                                      00857000
RWPLADR  DS    AL4                                                      00858000
MSGNMBR  DS    AL4                                                      00859000
         ORG   CTAB+16                                                  00860000
ACIOPARM DS    CL24                                                     00861000
         ORG   ACIOPARM                                                 00862000
@NM00004 DS    AL4                                                      00863000
         ORG   @NM00004                                                 00864000
ACIOFLGS DS    CL1                                                      00865000
         ORG   ACIOFLGS                                                 00866000
@NM00005 DS    BL1                                                      00867000
@NM00006 EQU   ACIOFLGS+0                                               00868000
@NM00007 EQU   ACIOFLGS+0                                               00869000
@NM00008 EQU   ACIOFLGS+0                                               00870000
@NM00009 EQU   ACIOFLGS+0                                               00871000
         ORG   @NM00004+1                                               00872000
ACIODCBA DS    AL3                                                      00873000
         ORG   ACIOPARM+4                                               00874000
@NM00010 DS    AL4                                                      00875000
ACIODRCT DS    AL4                                                      00876000
@NM00011 DS    AL4                                                      00877000
@NM00012 DS    AL4                                                      00878000
ACIOPUTL DS    AL4                                                      00879000
         ORG   ACIOPUTL                                                 00880000
MSGID    DS    CL1                                                      00881000
         ORG   ACIOPARM+24                                              00882000
PARSLIST DS    CL28                                                     00883000
NLSTTAB  DS    CL66                                                     00884000
         ORG   NLSTTAB                                                  00885000
USRLEN   DS    FL1                                                      00886000
USRID    DS    CL8                                                      00887000
PASSWD   DS    CL8                                                      00888000
ACTLEN   DS    FL1                                                      00889000
ACCTNO   DS    CL40                                                     00890000
PROCNM   DS    CL8                                                      00891000
         ORG   NLSTTAB+66                                               00892000
INDIC    DS    CL1                                                      00893000
         ORG   INDIC                                                    00894000
ENQSW    DS    BL1                                                      00895000
EODFLG   EQU   INDIC+0                                                  00896000
POSTFLG  EQU   INDIC+0                                                  00897000
PUTLFLG  EQU   INDIC+0                                                  00898000
         ORG   INDIC+1                                                  00899000
         DS    CL1                                                      00900000
DIRYWA   DS    CL344                                                    00901000
         ORG   DIRYWA                                                   00902000
UADSDCB  DS    CL88                                                     00903000
DIRYBLK  DS    CL256                                                    00904000
         ORG   DIRYBLK                                                  00905000
NUMBYTES DS    CL2                                                      00906000
         ORG   DIRYWA+344                                               00907000
OUTPAREA DS    CL110                                                    00908000
PLPLIST  DS    CL16                                                     00909000
         DS    CL2                                                      00910000
AMSGHDR1 DS    CL32                                                     00911000
         ORG   AMSGHDR1                                                 00912000
SEGPTR10 DS    AL4                                                      00913000
@NM00016 DS    3A                                                       00914000
SEGPTR13 DS    AL4                                                      00915000
@NM00017 DS    3A                                                       00916000
         ORG   AMSGHDR1+32                                              00917000
AMSGHDR2 DS    CL32                                                     00918000
         ORG   AMSGHDR2                                                 00919000
@NM00018 DS    AL4                                                      00920000
@NM00019 DS    3A                                                       00921000
SEGPTR23 DS    AL4                                                      00922000
@NM00020 DS    3A                                                       00923000
         ORG   AMSGHDR2+32                                              00924000
INSRT1   DS    CL44                                                     00925000
         ORG   INSRT1                                                   00926000
INSRTL1  DS    AL2                                                      00927000
INSRTO1  DS    AL2                                                      00928000
INSRTT1  DS    CL40                                                     00929000
         ORG   INSRT1+44                                                00930000
         DS    CL4                                                      00931000
DECRTCD  DS    CL8                                                      00932000
IKJEFA40 CSECT                                                          00933000
         DS    0F                                                       00934000
@SIZDATD DC    AL1(1)                                                   00935000
         DC    AL3(@ENDDATD-@DATD)                                      00936000
@CV00049 DC    V(LSTMSG)                                                00937000
@CV00050 DC    V(IKJEFA42)                                              00938000
@CV00051 DC    V(IKJEFA51)                                              00939000
@CV00052 DC    V(IKJEFA55)                                              00940000
         DS    0D                                                       00941000
PCLMDLAD DC    AL4(PCLMODEL)                                            00942000
@CC00225 DC    C'  '                                                    00943000
@CB00218 DC    X'FFFFFFFFFFFFFFFF'                                      00944000
MAJNAME  DC    CL8'SYSIKJUA'                                            00945000
MINNAME  DC    CL8'OPENUADS'                                            00946000
@DATD    DSECT                                                          00947000
IKJEFA40 CSECT                                                          00948000
PCLMODEL IKJPARM  DSECT=LISTPDLD                                        00949000
NODEPDE  IKJPOSIT PSTRING,PROMPT='(NODELIST)',VALIDCK=IKJEFA55          00950000
         IKJENDP                                                        00951000
         EXTRN IKJEFA55                                                 00952000
MCPLS    DS   0D                                                        00953000
         CLOSE (,REREAD),MF=L                                           00954000
         DEQ   (MAJNAME,MINNAME,8,SYSTEM),RET=HAVE,MF=L                 00955000
         ENQ   (MAJNAME,MINNAME,S,8,SYSTEM),RET=HAVE,MF=L               00956000
         OPEN  (,INPUT),MF=L                                            00957000
         PUTLINE OUTPUT=(0,TERM,MULTLVL,INFOR),MF=L                     00958000
MCPLNG   DC    A(*-MCPLS)               LENGTH OF MODEL PARAMETER LIST  00959000
UADSBLK  DCB   DDNAME=SYSUADS,BLKSIZE=256,DSORG=PS,MACRF=(R),RECFM=F    00960000
         DCBD  DSORG=(PS),DEVD=(DA)                                     00961000
@DATD    DSECT                          REESTABLISH AUTOMATIC DSECT     00962000
CPLS     DS    0D                                                       00963000
CLOSDIR  CLOSE (,REREAD),MF=L                                           00964000
UADDEQ   DEQ   (MAJNAME,MINNAME,8,SYSTEM),RET=HAVE,MF=L                 00965000
UADENQ   ENQ   (MAJNAME,MINNAME,S,8,SYSTEM),RET=HAVE,MF=L               00966000
OPENDIR  OPEN  (,INPUT),MF=L                                            00967000
PBLOK    PUTLINE OUTPUT=(0,TERM,MULTLVL,INFOR),MF=L                     00968000
IKJEFA40 CSECT                                                          00969000
         DS   0H                                                        00970000
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'                                   00971000
@DATD    DSECT                                                          00972000
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA                00973000
@ENDDATD EQU   *                                                        00974000
IKJEFA40 CSECT                                                          00975000
@00      EQU   00                      EQUATES FOR REGISTERS 0-15       00976000
@01      EQU   01                                                       00977000
@02      EQU   02                                                       00978000
@03      EQU   03                                                       00979000
@04      EQU   04                                                       00980000
@05      EQU   05                                                       00981000
@06      EQU   06                                                       00982000
@07      EQU   07                                                       00983000
@08      EQU   08                                                       00984000
@09      EQU   09                                                       00985000
@10      EQU   10                                                       00986000
@11      EQU   11                                                       00987000
@12      EQU   12                                                       00988000
@13      EQU   13                                                       00989000
@14      EQU   14                                                       00990000
@15      EQU   15                                                       00991000
MINDX    EQU   @04                                                      00992000
MSGNO    EQU   @03                                                      00993000
MSGPTR   EQU   @02                                                      00994000
MSGFIND  EQU   @04                                                      00995000
USCNT    EQU   @05                                                      00996000
OUTAPTR  EQU   @06                                                      00997000
MEMPTR   EQU   @03                                                      00998000
RTNCODE  EQU   @04                                                      00999000
IOPLPTR  EQU   @03                                                      01000000
R1       EQU   @01                                                      01001000
R2       EQU   @02                                                      01002000
R15      EQU   @15                                                      01003000
IOPL     EQU   0                                                        01004000
IOPLIOPB EQU   IOPL+12                                                  01005000
PPL      EQU   0                                                        01006000
PPLPCL   EQU   PPL+12                                                   01007000
PPLANS   EQU   PPL+16                                                   01008000
PPLCBUF  EQU   PPL+20                                                   01009000
PPLUWA   EQU   PPL+24                                                   01010000
ACCTPL   EQU   0                                                        01011000
ACCTECBP EQU   ACCTPL+8                                                 01012000
BUFPTR   EQU   ACCTPL+12                                                01013000
UIDLPTR  EQU   ACCTPL+16                                                01014000
ACCTECB  EQU   0                                                        01015000
ATTENTN  EQU   ACCTECB                                                  01016000
@NM00013 EQU   0                                                        01017000
MEMNAME  EQU   @NM00013                                                 01018000
BLOKC    EQU   @NM00013+11                                              01019000
LINLEN   EQU   0                                                        01020000
NULBYTE  EQU   0                                                        01021000
INDENT   EQU   0                                                        01022000
USERIDS  EQU   0                                                        01023000
MOFFSET  EQU   0                                                        01024000
PTRMASK1 EQU   0                                                        01025000
NXTLADR1 EQU   PTRMASK1                                                 01026000
SGNO1    EQU   PTRMASK1+4                                               01027000
PTRMASK2 EQU   0                                                        01028000
SGNO2    EQU   PTRMASK2+4                                               01029000
DCBOFLG  EQU   DCBOFLGS                                                 01030000
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS    01031000
@NM00021 EQU   DCBOFLGS                                                 01032000
@NM00015 EQU   PTRMASK2                                                 01033000
@NM00014 EQU   @NM00013+8                                               01034000
@NM00002 EQU   ACCTECB                                                  01035000
@NM00001 EQU   ACCTPL                                                   01036000
PPLECB   EQU   PPL+8                                                    01037000
PPLECT   EQU   PPL+4                                                    01038000
PPLUPT   EQU   PPL                                                      01039000
IOPLECB  EQU   IOPL+8                                                   01040000
IOPLECT  EQU   IOPL+4                                                   01041000
IOPLUPT  EQU   IOPL                                                     01042000
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS      01043000
@RT00045 EQU   LISTIDS                                                  01044000
@RT00061 EQU   PRSOK                                                    01045000
@RT00065 EQU   ACCTRET                                                  01046000
@RT00072 EQU   ACCTRET                                                  01047000
@RT00101 EQU   ACCTRET                                                  01048000
@RT00110 EQU   ACCTRET                                                  01049000
@RT00112 EQU   MODEMSG                                                  01050000
@RT00114 EQU   ACCTRET                                                  01051000
@RT00117 EQU   TMSGA                                                    01052000
@RT00119 EQU   MPREP1                                                   01053000
@RT00121 EQU   MLMSG                                                    01054000
@RC00128 EQU   PUTMSG                                                   01055000
@RC00126 EQU   PUTMSG                                                   01056000
@RT00149 EQU   ACCTRET                                                  01057000
@RT00160 EQU   ACCTRET                                                  01058000
@RF00176 EQU   MODEMSG                                                  01059000
@RT00183 EQU   READLVL                                                  01060000
@RF00183 EQU   LNGFNDR                                                  01061000
@RT00189 EQU   NEXTMEM                                                  01062000
@RT00198 EQU   CHKPTL                                                   01063000
@RT00200 EQU   MODEMSG                                                  01064000
@RT00226 EQU   ACCTRET                                                  01065000
@RF00247 EQU   @EL00001                                                 01066000
@RF00255 EQU   @EL00002                                                 01067000
@PB00002 EQU   @EL00001                                                 01068000
@ENDDATA EQU   *                                                        01069000
         END   IKJEFA40                                                 01070000
